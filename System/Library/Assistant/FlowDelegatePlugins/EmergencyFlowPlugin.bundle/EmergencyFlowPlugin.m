uint64_t sub_30F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_s *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  uint8_t *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t __dst[15];
  v8 = type metadata accessor for Logger(0LL);
  v9 = *(void *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v13 = Logger.emergency.unsafeMutableAddressor(v10);
  sub_3CC8(v13, (uint64_t)v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  sub_3CB4();
  v14 = sub_3CB4();
  v15 = (os_log_s *)Logger.logObject.getter(v14);
  v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v31 = a4;
    v17 = sub_3CD4(12LL);
    v30 = a2;
    v18 = (uint8_t *)v17;
    v19 = sub_3CD4(32LL);
    __dst[0] = v19;
    v29 = a3;
    *(_DWORD *)v18 = 136315138;
    v28 = v18 + 4;
    v32 = a1;
    sub_3CB4();
    sub_3974(&qword_78950);
    v20 = String.init<A>(describing:)(&v32);
    v22 = v21;
    v32 = sub_543A4(v20, v21, __dst);
    a3 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v28, v18 + 12);
    swift_bridgeObjectRelease(v22);
    sub_3CAC();
    sub_3CAC();
    _os_log_impl(&dword_0, v15, v16, "Execution Error: %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1LL);
    sub_3CA0(v19);
    v23 = (uint64_t)v18;
    a2 = v30;
    sub_3CA0(v23);
  }

  else
  {
    sub_3CAC();
    sub_3CAC();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v24 = sub_3324(a3, a3[3]);
  memcpy(__dst, v24, 0x70uLL);
  v25 = sub_37CC(a2, __dst);
  static ExecuteResponse.complete(next:)(v25);
  return swift_release(v25);
}

void *sub_3324(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t sub_3348(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[7] = sub_3C88(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[9] = v5;
  v2[10] = sub_3C88(v5);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v2[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[12] = v7;
  v2[13] = sub_3C88(v7);
  return swift_task_switch(sub_33CC, 0LL, 0LL);
}

uint64_t sub_33CC(uint64_t a1)
{
  uint64_t v3 = v1[12];
  uint64_t v2 = v1[13];
  uint64_t v4 = v1[11];
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, (uint64_t)(v1 + 2));
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "genericErrorRFFlow | modernCatProvider", v9, 2u);
    sub_3CA0((uint64_t)v9);
  }

  uint64_t v10 = v1[12];
  v12 = (void *)v1[6];
  uint64_t v11 = v1[7];

  uint64_t v13 = sub_3CBC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  static DialogPhase.error.getter(v13);
  OutputGenerationManifest.init(dialogPhase:_:)(v11, sub_37A8, 0LL);
  v14 = sub_3324(v12, v12[3]);
  uint64_t v15 = *v14;
  v1[14] = *v14;
  uint64_t v16 = dword_7B1F4;
  swift_retain(v15);
  v17 = (void *)swift_task_alloc(v16);
  v1[15] = v17;
  void *v17 = v1;
  v17[1] = sub_3510;
  return sub_47E30();
}

uint64_t sub_3510(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v6 = *(void *)(*v2 + 112);
  uint64_t v5 = *(void *)(*v2 + 120);
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  swift_release(v6);
  if (!v1) {
    *(void *)(v4 + 136) = a1;
  }
  return sub_3C98();
}

uint64_t sub_3588()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v0[18] = ResponseFactory.init()();
  uint64_t v3 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v4 = swift_allocObject(v3, 40LL, 7LL);
  *(_OWORD *)(v4 + 16) = xmmword_56DC0;
  *(void *)(v4 + 32) = v1;
  uint64_t v10 = v4;
  specialized Array._endMutation()();
  v0[19] = v10;
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc(v5);
  v0[20] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_3670;
  return ((uint64_t (*)(void, uint64_t, void))v9)(v0[5], v10, v0[10]);
}

uint64_t sub_3670()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 144LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 160LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return sub_3C98();
}

uint64_t sub_36D4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);

  sub_3CBC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3744()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 72) + 8LL))(v2, *(void *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_37A8()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter(0LL);
}

uint64_t sub_37CC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for OutputFlow(0LL);
  __chkstk_darwin(v4);
  id v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = sub_3974(&qword_78958);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v8);
  v12 = &v16[-v11];
  v17[3] = &type metadata for EmergencyCATProvider;
  v17[4] = &off_6FB48;
  v17[0] = swift_allocObject(&unk_6D818, 128LL, 7LL);
  memcpy((void *)(v17[0] + 16LL), a2, 0x70uLL);
  uint64_t v13 = sub_3324(v17, (uint64_t)&type metadata for EmergencyCATProvider)[1];
  sub_3A40(a2);
  swift_retain(v13);
  sub_23598();
  swift_release(v13);
  sub_3B20((uint64_t)v12, (uint64_t)v10);
  sub_3B68(a1, (uint64_t)v16);
  OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v10, &_swiftEmptyArrayStorage, v16, 0LL);
  sub_3BAC();
  uint64_t v14 = Flow.eraseToAnyFlow()(v4);
  sub_3BEC((uint64_t)v6);
  sub_3C28((uint64_t)v12);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v17);
  return v14;
}

uint64_t sub_3974(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_39B4()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

void *sub_3A40(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v10 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  uint64_t v14 = a1[12];
  uint64_t v15 = a1[13];
  swift_retain(*a1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v15);
  return a1;
}

uint64_t sub_3B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974(&qword_78958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_3B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_3BAC()
{
  unint64_t result = qword_78960;
  if (!qword_78960)
  {
    uint64_t v1 = type metadata accessor for OutputFlow(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OutputFlow, v1);
    atomic_store(result, &qword_78960);
  }

  return result;
}

uint64_t sub_3BEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OutputFlow(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3C28(uint64_t a1)
{
  uint64_t v2 = sub_3974(&qword_78958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_3C88@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_3C98()
{
  return swift_task_switch();
}

uint64_t sub_3CA0(uint64_t a1)
{
  return swift_slowDealloc(a1, -1LL, -1LL);
}

uint64_t sub_3CAC()
{
  return swift_errorRelease(v0);
}

uint64_t sub_3CB4()
{
  return swift_errorRetain(v0);
}

uint64_t sub_3CBC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_3CC8(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0LL, 0LL);
}

uint64_t sub_3CD4(uint64_t a1)
{
  return swift_slowAlloc(a1, -1LL);
}

uint64_t sub_3CDC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_3974(&qword_78970);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v9);
  if ((v12 & 1) != 0)
  {
    sub_4568();
    uint64_t v13 = v1[6];
    uint64_t v14 = v3[7];
    swift_bridgeObjectRetain(v14);
    sub_44E8(v13, v14);
    uint64_t v15 = sub_4508();
    sub_4544(v15);
    uint64_t v16 = type metadata accessor for DialogPhoneNumber.Builder(0LL);
    sub_45A8(v16);
    uint64_t v17 = DialogPhoneNumber.Builder.init()();
    uint64_t v18 = sub_4594(v3[8], v3[9]);
    uint64_t v19 = swift_release(v17);
    uint64_t v20 = dispatch thunk of DialogPhoneNumber.Builder.build()(v19);
    swift_release(v18);
    char v21 = sub_4580();
    (*(void (**)(char *, uint64_t, void, char *, uint64_t))(v2 + 24))(v11, v20, v21 & 1, v8, v2);
    swift_release(v20);
LABEL_5:
    uint64_t v8 = v11;
    return sub_3F24((uint64_t)v8);
  }

  if ((EmergencyOrganizationInfo.hasNameAndWebsite.getter(v12) & 1) != 0)
  {
    sub_4568();
    uint64_t v23 = v1[6];
    uint64_t v22 = v1[7];
    swift_bridgeObjectRetain(v22);
    sub_44E8(v23, v22);
    uint64_t v24 = sub_4508();
    sub_4544(v24);
    char v25 = sub_4580();
    (*(void (**)(char *, void, char *, uint64_t))(v2 + 16))(v11, v25 & 1, v8, v2);
    goto LABEL_5;
  }

  uint64_t v26 = v1[12];
  unint64_t v27 = v3[13];
  uint64_t v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000LL) == 0) {
    uint64_t v28 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (v28)
  {
    swift_bridgeObjectRetain(v3[13]);
    sub_44E8(v26, v27);
    uint64_t v29 = sub_4508();
    uint64_t v30 = 0LL;
  }

  else
  {
    uint64_t v29 = sub_4508();
    uint64_t v30 = 1LL;
  }

  sub_3F18((uint64_t)v8, v30, 1LL, v29);
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  sub_3324(a1, v31);
  char v33 = sub_4580();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 8))(v8, v33 & 1, v31, v32);
  return sub_3F24((uint64_t)v8);
}

uint64_t sub_3F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t sub_3F24(uint64_t a1)
{
  uint64_t v2 = sub_3974(&qword_78970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3F64(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_3974(&qword_78970);
  v3[8] = sub_45A0();
  v3[9] = sub_45A0();
  v3[10] = sub_45A0();
  sub_4588();
  return sub_451C();
}

uint64_t sub_3FC8(uint64_t a1)
{
  uint64_t v4 = EmergencyOrganizationInfo.hasNameAndNumber.getter(a1);
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = (void *)v3[6];
    uint64_t v6 = (void *)v3[7];
    sub_4558();
    uint64_t v7 = v6[6];
    uint64_t v8 = v6[7];
    swift_bridgeObjectRetain(v8);
    sub_44E8(v7, v8);
    uint64_t v9 = sub_4508();
    sub_4530(v9);
    uint64_t v10 = type metadata accessor for DialogPhoneNumber.Builder(0LL);
    sub_45A8(v10);
    uint64_t v11 = DialogPhoneNumber.Builder.init()();
    uint64_t v12 = sub_4594(v6[8], v6[9]);
    uint64_t v13 = swift_release(v11);
    uint64_t v14 = dispatch thunk of DialogPhoneNumber.Builder.build()(v13);
    v3[11] = v14;
    swift_release(v12);
    LOBYTE(v5) = sub_4808C(v5);
    uint64_t v15 = (void *)sub_44F4(*(void *)(v2 + 24));
    v3[12] = v15;
    *uint64_t v15 = v3;
    v15[1] = sub_4228;
    return ((uint64_t (*)(void, uint64_t, void, uint64_t, uint64_t))v40)( v3[10],  v14,  v5 & 1,  v1,  v2);
  }

  else
  {
    if ((EmergencyOrganizationInfo.hasNameAndWebsite.getter(v4) & 1) != 0)
    {
      uint64_t v17 = (void *)v3[6];
      uint64_t v18 = v3[7];
      sub_4558();
      uint64_t v19 = *(void *)(v18 + 48);
      uint64_t v20 = *(void *)(v18 + 56);
      swift_bridgeObjectRetain(v20);
      sub_44E8(v19, v20);
      uint64_t v21 = sub_4508();
      sub_4530(v21);
      char v22 = sub_4808C(v17);
      uint64_t v23 = (void *)sub_44F4(*(void *)(v2 + 16));
      v3[14] = v23;
      *uint64_t v23 = v3;
      v23[1] = sub_42E0;
      uint64_t v24 = v22 & 1;
      uint64_t v25 = v3[9];
      uint64_t v26 = v1;
      uint64_t v27 = v2;
    }

    else
    {
      uint64_t v28 = v3[7];
      uint64_t v30 = *(void *)(v28 + 96);
      unint64_t v29 = *(void *)(v28 + 104);
      uint64_t v31 = HIBYTE(v29) & 0xF;
      if ((v29 & 0x2000000000000000LL) == 0) {
        uint64_t v31 = v30 & 0xFFFFFFFFFFFFLL;
      }
      if (v31)
      {
        swift_bridgeObjectRetain(v29);
        sub_44E8(v30, v29);
        uint64_t v32 = 0LL;
      }

      else
      {
        uint64_t v32 = 1LL;
      }

      uint64_t v33 = v3[8];
      v34 = (void *)v3[5];
      uint64_t v35 = sub_4508();
      sub_3F18(v33, v32, 1LL, v35);
      uint64_t v36 = v34[3];
      uint64_t v37 = v34[4];
      sub_3324(v34, v36);
      char v38 = sub_4580();
      v39 = (void *)sub_44F4(*(void *)(v37 + 8));
      v3[16] = v39;
      void *v39 = v3;
      v39[1] = sub_4384;
      uint64_t v24 = v38 & 1;
      uint64_t v25 = v3[8];
      uint64_t v26 = v36;
      uint64_t v27 = v37;
    }

    return v40(v25, v24, v26, v27);
  }
}

uint64_t sub_4228(uint64_t a1)
{
  uint64_t v5 = *(void *)(*v2 + 88);
  uint64_t v4 = *(void *)(*v2 + 96);
  uint64_t v6 = *(void *)(*v2 + 80);
  uint64_t v7 = *v2;
  *(void *)(v7 + 104) = v1;
  swift_task_dealloc(v4);
  sub_3F24(v6);
  swift_release(v5);
  if (v1)
  {
    sub_4588();
    return swift_task_switch(v8, v9, v10);
  }

  else
  {
    uint64_t v12 = *(void *)(v7 + 72);
    swift_task_dealloc(*(void *)(v7 + 80));
    swift_task_dealloc(v12);
    sub_4528();
    return (*(uint64_t (**)(uint64_t))(v7 + 8))(a1);
  }

uint64_t sub_42E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 112);
  uint64_t v5 = *(void *)(*v2 + 72);
  uint64_t v6 = *v2;
  *(void *)(v6 + 120) = v1;
  swift_task_dealloc(v4);
  sub_3F24(v5);
  if (v1)
  {
    sub_4588();
    return swift_task_switch(v7, v8, v9);
  }

  else
  {
    uint64_t v11 = *(void *)(v6 + 72);
    swift_task_dealloc(*(void *)(v6 + 80));
    swift_task_dealloc(v11);
    sub_4528();
    return (*(uint64_t (**)(uint64_t))(v6 + 8))(a1);
  }

uint64_t sub_4384(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  uint64_t v4 = v3[16];
  v3[17] = v1;
  swift_task_dealloc(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_43E4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_4510();
  sub_4578();
  sub_4528();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_4434()
{
  return sub_44D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_4468()
{
  return sub_44D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_449C()
{
  return sub_44D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_44D8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_44E8(uint64_t a1, uint64_t a2)
{
  return SpeakableString.init(print:speak:)(a1, a2, 0LL, 0LL);
}

uint64_t sub_44F4@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t sub_4508()
{
  return type metadata accessor for SpeakableString(0LL);
}

uint64_t sub_4510()
{
  return swift_task_dealloc(*(void *)(v0 + 80));
}

uint64_t sub_451C()
{
  return swift_task_switch();
}

uint64_t sub_4528()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_4530(uint64_t a1)
{
  return sub_3F18(v1, 0LL, 1LL, a1);
}

uint64_t sub_4544(uint64_t a1)
{
  return sub_3F18(v1, 0LL, 1LL, a1);
}

void *sub_4558()
{
  return sub_3324(*(void **)(v0 + 40), *(void *)(*(void *)(v0 + 40) + 24LL));
}

void *sub_4568()
{
  return sub_3324(v0, v0[3]);
}

uint64_t sub_4578()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_4580()
{
  return sub_4808C(v0);
}

  ;
}

uint64_t sub_4594(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of DialogPhoneNumber.Builder.withValue(print:speak:)(a1, a2, 0LL, 0LL);
}

uint64_t sub_45A0()
{
  return swift_task_alloc(v0);
}

uint64_t sub_45A8(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t type metadata accessor for CommonCATs(uint64_t a1)
{
  uint64_t result = qword_78988;
  if (!qword_78988) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CommonCATs);
  }
  return result;
}

uint64_t sub_45EC(uint64_t a1)
{
  uint64_t v2 = qword_7B7E8;
  v5[0] = "\b";
  uint64_t result = type metadata accessor for CATOption(319LL);
  if (v4 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 2LL, v5, a1 + v2);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_466C(uint64_t a1, void *a2)
{
  return sub_46B4(a1, a2);
}

uint64_t sub_46B4(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_4AA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v2 + qword_78980) = a2;
  sub_4AA8(v2 + qword_7B7E0);
  uint64_t v12 = type metadata accessor for URL(0LL);
  sub_3F18((uint64_t)v11, 1LL, 1LL, v12);
  sub_4AA8((uint64_t)v8);
  id v13 = a2;
  uint64_t v14 = CATWrapper.init(templateDir:options:globals:)(v11, v8, a2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v14;
}

uint64_t sub_47CC()
{
  return sub_4A98(16LL, 0x800000000005A8F0LL);
}

uint64_t sub_47E4()
{
  return sub_4820(0x614C6E6F6D6D6F43LL, 0xEF6F4E23736C6562LL);
}

uint64_t sub_4808()
{
  return sub_4A98(19LL, 0x800000000005A8D0LL);
}

uint64_t sub_4820(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = type metadata accessor for CATWrapper(0LL);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v6);
  id v8 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  uint64_t v9 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v10 = *(void **)(v5 + qword_78980);
  if (v10)
  {
    uint64_t v11 = *(void **)(v5 + qword_78980);
  }

  else
  {
    type metadata accessor for CATGlobals(0LL);
    uint64_t v11 = (void *)CATGlobals.__allocating_init()();
  }

  type metadata accessor for CATExecutor(0LL);
  uint64_t v16 = 0LL;
  memset(v15, 0, sizeof(v15));
  uint64_t v12 = v5 + qword_7B7E0;
  id v13 = v10;
  static CATExecutor.execute(bundle:catId:parameters:globals:callback:options:)(v8, a1, a2, v9, v11, v15, v12);

  swift_bridgeObjectRelease(v9);
  return sub_4A58((uint64_t)v15);
}

void sub_4964()
{
}

uint64_t sub_4990()
{
  uint64_t v1 = v0 + qword_7B7E0;
  uint64_t v2 = sub_4AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

uint64_t sub_49D8()
{
  uint64_t v0 = CATWrapper.deinit();

  uint64_t v1 = v0 + qword_7B7E0;
  uint64_t v2 = sub_4AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t sub_4A30()
{
  uint64_t v0 = sub_49D8();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_4A50()
{
  return type metadata accessor for CommonCATs(0LL);
}

uint64_t sub_4A58(uint64_t a1)
{
  uint64_t v2 = sub_3974(&qword_789D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_4A98(uint64_t a1, uint64_t a2)
{
  return sub_4820(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a2);
}

uint64_t sub_4AA0()
{
  return type metadata accessor for CATOption(0LL);
}

uint64_t sub_4AA8(uint64_t a1)
{
  return v3(a1, v1, v2);
}

uint64_t sub_4AB4(uint64_t a1)
{
  uint64_t v36 = a1;
  sub_3974((uint64_t *)&unk_7A600);
  sub_6764();
  __chkstk_darwin(v1);
  sub_6750();
  uint64_t v35 = v2;
  uint64_t v3 = type metadata accessor for Input(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_6740();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_6820();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_66F4();
  v34 = v10;
  sub_67EC();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = Logger.emergency.unsafeMutableAddressor(v12);
  sub_3CC8(v15, (uint64_t)v39);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v16 = v33(v14, v15, v8);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "EmergencyConfirmationFlow onInput", v19, 2u);
    sub_3CA0((uint64_t)v19);
  }

  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  int v21 = *(unsigned __int8 *)(v37 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v36, v3);
  if (v21 == 1)
  {
    uint64_t v22 = v8;
    uint64_t v23 = v35;
    sub_EF50();
    sub_67CC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    uint64_t v24 = type metadata accessor for ConfirmationResponse(0LL);
    uint64_t v25 = 1LL;
    int v26 = sub_5FE0(v23, 1LL, v24);
    sub_6028(v23, (uint64_t *)&unk_7A600);
    if (v26 == 1)
    {
      sub_3CC8(v15, (uint64_t)v38);
      uint64_t v27 = v34;
      uint64_t v28 = v33((char *)v34, v15, v22);
      Logger.logObject.getter(v28);
      os_log_type_t v29 = sub_67D4();
      if (os_log_type_enabled(v27, v29))
      {
        uint64_t v30 = (uint8_t *)sub_3CD4(2LL);
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_0, v27, v29, "No confirmation response found in input, ignoring.", v30, 2u);
        sub_3CA0((uint64_t)v30);
      }

      v20((char *)v27, v22);
      return 0LL;
    }
  }

  else
  {
    sub_67CC(v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    return 1LL;
  }

  return v25;
}

BOOL sub_4D54(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_4D64(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = sub_6820();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = sub_45A0();
  v2[19] = sub_45A0();
  v2[20] = sub_45A0();
  return swift_task_switch(sub_4DD0, 0LL, 0LL);
}

void sub_4DD0(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v6, v1 + 16);
  (*(void (**)(os_log_s *, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  uint64_t v7 = swift_retain_n(v5, 2LL);
  uint64_t v8 = v2;
  Logger.logObject.getter(v7);
  os_log_type_t v9 = sub_67D4();
  if (sub_6728(v9))
  {
    uint64_t v10 = *(void *)(v1 + 120);
    uint64_t v21 = *(void *)(v1 + 128);
    uint64_t v22 = *(void *)(v1 + 160);
    uint64_t v20 = *(void *)(v1 + 136);
    uint64_t v11 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v12 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v23 = v12;
    *(_BYTE *)(v1 + 168) = *(_BYTE *)(v10 + 16);
    uint64_t v13 = String.init<A>(describing:)(v1 + 168);
    unint64_t v15 = v14;
    *(void *)(v1 + 104) = sub_543A4(v13, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 104, v1 + 112, v11 + 4, v11 + 12);
    swift_release_n(v10, 2LL);
    swift_bridgeObjectRelease(v15);
    sub_67F8(&dword_0, v2, (os_log_type_t)v2, "EmergencyConfirmationFlow execute with state: %s", v11);
    sub_67DC(v12);
    sub_3CA0(v12);
    sub_3CA0((uint64_t)v11);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }

  else
  {
    uint64_t v16 = *(void *)(v1 + 160);
    uint64_t v17 = *(void *)(v1 + 128);
    uint64_t v18 = *(void *)(v1 + 136);
    uint64_t v19 = *(void *)(v1 + 120);

    swift_release_n(v19, 2LL);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  __asm { BR              X10 }

uint64_t sub_4FB8()
{
  *(_BYTE *)(v0 + 16) = 1;
  *(void *)(v1 + 96) = sub_5270();
  swift_retain(v0);
  uint64_t v3 = sub_3974(&qword_78B30);
  sub_65F0(&qword_78B40, &qword_78B30);
  ((void (*)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))static ExecuteResponse.ongoing<A>(next:childCompletion:))( v2,  sub_6624,  v0,  v3,  v4);
  swift_release(v0);
  swift_release(*(void *)(v1 + 96));
  uint64_t v5 = *(void *)(v1 + 152);
  uint64_t v6 = *(void *)(v1 + 144);
  swift_task_dealloc(*(void *)(v1 + 160));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_5200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyConfirmationFlow();
  sub_65BC(&qword_78B38, v5, (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_5270()
{
  uint64_t v4 = v3 - v2;
  (*(void (**)(uint64_t))(v5 + 16))(v3 - v2);
  sub_6120((uint64_t)v16, v16[3]);
  sub_680C();
  __chkstk_darwin(v6);
  sub_6740();
  os_log_type_t v9 = (const void *)(v8 - v7);
  (*(void (**)(uint64_t))(v10 + 16))(v8 - v7);
  memcpy(v20, v9, sizeof(v20));
  sub_6408(v21);
  uint64_t v11 = sub_623C(v4, v17, v20, (uint64_t)v15, 0LL, 0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v16);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v18);
  uint64_t v12 = v0[27];
  uint64_t v13 = v0[28];
  sub_3324(v0 + 24, v12);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 40))(v18, v12, v13);
  return PromptForConfirmationFlow.__allocating_init(itemToConfirm:strategy:outputPublisher:)(v19, v11, v18);
}

void sub_5400(uint64_t a1)
{
  uint64_t v86 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v79 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  sub_6740();
  uint64_t v4 = v3 - v2;
  uint64_t v76 = sub_3974(&qword_78B10);
  sub_6764();
  __chkstk_darwin(v5);
  sub_6750();
  uint64_t v80 = v6;
  sub_3974((uint64_t *)&unk_7A600);
  sub_6764();
  __chkstk_darwin(v7);
  sub_66F4();
  uint64_t v74 = v8;
  sub_67EC();
  __chkstk_darwin(v9);
  v78 = (char *)&v68 - v10;
  type metadata accessor for EmergencyConfirmationResponseProvider(0LL);
  sub_6764();
  __chkstk_darwin(v11);
  sub_6750();
  uint64_t v77 = v12;
  uint64_t v13 = sub_3974(&qword_78B18);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_66F4();
  v84 = v15;
  sub_67EC();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_6820();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  sub_66F4();
  uint64_t v75 = v21;
  sub_67EC();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v68 - v24;
  uint64_t v26 = Logger.emergency.unsafeMutableAddressor(v23);
  sub_3CC8(v26, (uint64_t)v90);
  uint64_t v82 = v20;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  uint64_t v73 = v26;
  v72 = v27;
  v27((uint64_t)v25, v26, v19);
  uint64_t v83 = v14;
  uint64_t v28 = *(uint8_t **)(v14 + 16);
  uint64_t v85 = a1;
  uint64_t v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v18, a1, v13);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  uint64_t v32 = (void (*)(uint64_t, uint64_t))v31;
  BOOL v33 = os_log_type_enabled(v30, v31);
  v34 = &loc_56000;
  uint64_t v71 = v4;
  if (v33)
  {
    uint64_t v35 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v36 = sub_3CD4(32LL);
    v89[0] = v36;
    v70 = v28;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v28 = v35 + 12;
    v69 = v35 + 4;
    sub_65F0(&qword_78B28, &qword_78B18);
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter(v13, v37);
    v34 = (void *)v39;
    uint64_t v88 = sub_543A4(v38, v39, v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v69, v35 + 12);
    swift_bridgeObjectRelease(v34);
    sub_6790();
    sub_67F8(&dword_0, v30, (os_log_type_t)v32, "EmergencyConfirmationFlow finished promptFlow with result: %s", v35);
    sub_67DC(v36);
    sub_3CA0(v36);
    sub_3CA0((uint64_t)v35);

    sub_677C();
    v40 = v84;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v70)(v84, v85, v13);
  }

  else
  {
    sub_6790();

    sub_677C();
    v40 = v84;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v28)(v84, v85, v13);
  }

  int v41 = (*((uint64_t (**)(uint64_t *, uint64_t))v28 + 11))(v40, v13);
  if (v41 != enum case for PromptResult.answered<A>(_:))
  {
    if (v41 != enum case for PromptResult.error<A>(_:))
    {
      *(_BYTE *)(v81 + 16) = 3;
      ((void (*)(uint64_t *, uint64_t))v34)(v40, v13);
      return;
    }

    sub_67CC((uint64_t)v40, *((uint64_t (**)(uint64_t, uint64_t))v28 + 12));
    uint64_t v48 = *v40;
    uint64_t v49 = v73;
    sub_3CC8(v73, (uint64_t)v89);
    uint64_t v50 = v75;
    v72(v75, v49, v19);
    sub_67E4();
    uint64_t v51 = sub_67E4();
    v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v55 = v19;
      uint64_t v56 = sub_3CD4(32LL);
      uint64_t v87 = v48;
      uint64_t v88 = v56;
      *(_DWORD *)v54 = 136315138;
      sub_67E4();
      sub_3974(&qword_78950);
      uint64_t v57 = String.init<A>(describing:)(&v87);
      unint64_t v59 = v58;
      uint64_t v87 = sub_543A4(v57, v58, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease(v59);
      sub_6738();
      sub_6738();
      sub_67F8(&dword_0, v52, v53, "EmergencyConfirmationFlow Error: %s", v54);
      sub_67DC(v56);
      sub_3CA0(v56);
      sub_3CA0((uint64_t)v54);

      sub_6738();
      uint64_t v60 = v75;
      uint64_t v61 = v55;
    }

    else
    {
      sub_6738();
      sub_6738();
      sub_6738();

      uint64_t v60 = v50;
      uint64_t v61 = v19;
    }

    v32(v60, v61);
    goto LABEL_19;
  }

  sub_67CC((uint64_t)v40, *((uint64_t (**)(uint64_t, uint64_t))v28 + 12));
  uint64_t v42 = v77;
  sub_64D8((uint64_t)v40, v77, type metadata accessor for EmergencyConfirmationResponseProvider);
  uint64_t v44 = (uint64_t)v78;
  uint64_t v43 = v79;
  uint64_t v45 = v86;
  (*(void (**)(char *, void, uint64_t))(v79 + 104))( v78,  enum case for ConfirmationResponse.confirmed(_:),  v86);
  sub_3F18(v44, 0LL, 1LL, v45);
  uint64_t v46 = v80;
  uint64_t v47 = v80 + *(int *)(v76 + 48);
  sub_5F98(v42, v80);
  sub_5F98(v44, v47);
  if (sub_5FE0(v46, 1LL, v45) != 1)
  {
    uint64_t v62 = v74;
    sub_5F98(v46, v74);
    if (sub_5FE0(v47, 1LL, v86) != 1)
    {
      uint64_t v63 = v71;
      uint64_t v64 = v86;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v71, v47, v86);
      sub_65BC(&qword_78B20, 255LL, (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
      char v65 = dispatch thunk of static Equatable.== infix(_:_:)(v62, v63, v64);
      v66 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v66(v63, v64);
      sub_6028(v44, (uint64_t *)&unk_7A600);
      sub_6834();
      v66(v62, v64);
      sub_6028(v46, (uint64_t *)&unk_7A600);
      if ((v65 & 1) != 0) {
        goto LABEL_18;
      }
LABEL_19:
      char v67 = 3;
      goto LABEL_20;
    }

    sub_6028(v44, (uint64_t *)&unk_7A600);
    sub_6834();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v62, v86);
LABEL_13:
    sub_6028(v46, &qword_78B10);
    goto LABEL_19;
  }

  sub_6028(v44, (uint64_t *)&unk_7A600);
  sub_6834();
  sub_6028(v46, (uint64_t *)&unk_7A600);
LABEL_18:
  char v67 = 2;
LABEL_20:
  *(_BYTE *)(v81 + 16) = v67;
}

void sub_5AF8(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_5B1C(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL sub_5B60(char *a1, char *a2)
{
  return sub_4D54(*a1, *a2);
}

Swift::Int sub_5B6C()
{
  return sub_5B1C(*v0);
}

void sub_5B74(uint64_t a1)
{
}

Swift::Int sub_5B7C(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void *sub_5BBC()
{
  return v0;
}

uint64_t sub_5C18()
{
  return swift_deallocClassInstance(v0, 328LL, 7LL);
}

uint64_t type metadata accessor for EmergencyConfirmationFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin25EmergencyConfirmationFlow);
}

_BYTE *initializeBufferWithCopyOfBuffer for EmergencyConfirmationFlow.EmergencyOfferActionFlowState( _BYTE *result, _BYTE *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EmergencyConfirmationFlow.EmergencyOfferActionFlowState( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }

LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

    int v2 = v3;
    goto LABEL_18;
  }

  sub_3324((void *)(*(void *)(v0 + 1184) + 176LL), *(void *)(*(void *)(v0 + 1184) + 200LL));
  sub_1853C();
  sub_177FC();
  int v3 = v2;
LABEL_18:
  static ExecuteResponse.complete(next:)(v2);
  sub_EE0C();
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v1);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 880));
  sub_1835C();
  swift_task_dealloc(v3);
  swift_task_dealloc(v0 + 880);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v5 = v6 - 18;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyConfirmationFlow.EmergencyOfferActionFlowState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_5D3C + 4 * byte_56E39[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_5D70 + 4 * byte_56E34[v4]))();
}

uint64_t sub_5D70(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_5D78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x5D80LL);
  }
  return result;
}

uint64_t sub_5D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x5D94LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_5D98(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5DA0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5DAC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_5DB8(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyConfirmationFlow.EmergencyOfferActionFlowState()
{
  return &type metadata for EmergencyConfirmationFlow.EmergencyOfferActionFlowState;
}

unint64_t sub_5DD4()
{
  unint64_t result = qword_78AF8[0];
  if (!qword_78AF8[0])
  {
    unint64_t result = swift_getWitnessTable( &unk_56F20,  &type metadata for EmergencyConfirmationFlow.EmergencyOfferActionFlowState);
    atomic_store(result, qword_78AF8);
  }

  return result;
}

uint64_t sub_5E10(uint64_t a1)
{
  return sub_4AB4(a1) & 1;
}

uint64_t sub_5E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_5E9C;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_5E9C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_5ED0(uint64_t a1, uint64_t a2)
{
  return sub_5200(a1, a2);
}

uint64_t sub_5EF0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_78A0C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_5F44;
  return sub_4D64(a1);
}

uint64_t sub_5F44()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_5F70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyConfirmationFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_5F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974((uint64_t *)&unk_7A600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_5FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t sub_5FEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyConfirmationResponseProvider(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_6028(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_3974(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  sub_6774();
}

uint64_t sub_6060(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

void sub_60A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_6774();
}

uint64_t sub_60E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_6120(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t sub_6148(uint64_t a1, __int128 *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)(a7 + 16);
  *(void *)(a7 + 40) = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  *(void *)(a7 + 48) = &off_6F450;
  unint64_t v15 = sub_649C(v14);
  sub_64D8(a1, (uint64_t)v15, type metadata accessor for ConfirmationFlowConfigModel);
  *(void *)(a7 + 120) = &type metadata for EmergencyCATProvider;
  *(void *)(a7 + 128) = &off_6FB48;
  uint64_t v16 = swift_allocObject(&unk_6D8E0, 128LL, 7LL);
  *(void *)(a7 + 96) = v16;
  memcpy((void *)(v16 + 16), a3, 0x70uLL);
  sub_65A4(a2, a7 + 56);
  __int128 v17 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a7 + 136) = *(_OWORD *)a4;
  *(_OWORD *)(a7 + 152) = v17;
  *(void *)(a7 + 168) = *(void *)(a4 + 32);
  *(void *)(a7 + 176) = a5;
  *(void *)(a7 + 184) = a6;
  return a7;
}

uint64_t sub_623C(uint64_t a1, __int128 *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  uint64_t v29 = &off_6F450;
  uint64_t v12 = sub_649C(v27);
  sub_64D8(a1, (uint64_t)v12, type metadata accessor for ConfirmationFlowConfigModel);
  v26[3] = &type metadata for EmergencyCATProvider;
  v26[4] = &off_6FB48;
  v26[0] = swift_allocObject(&unk_6D8E0, 128LL, 7LL);
  memcpy((void *)(v26[0] + 16LL), a3, 0x70uLL);
  uint64_t v13 = type metadata accessor for EmergencyPromptForConfirmationFlowStrategy();
  uint64_t v14 = swift_allocObject(v13, 192LL, 7LL);
  uint64_t v15 = sub_6120((uint64_t)v27, v28);
  __chkstk_darwin(v15);
  __int128 v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v18 + 16))(v17);
  uint64_t v19 = sub_6120((uint64_t)v26, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v19);
  uint64_t v21 = (void *)((char *)v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ((void (*)(uint64_t *, uint64_t *))v22->initializeWithCopy)(v21, v23);
  memcpy(__dst, v21, sizeof(__dst));
  uint64_t v24 = sub_6148((uint64_t)v17, a2, __dst, a4, a5, a6, v14);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v26);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
  return v24;
}

void *sub_6408(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[7];
  uint64_t v5 = a1[9];
  uint64_t v6 = a1[11];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

void *sub_649C(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

void sub_64D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  sub_6774();
}

uint64_t sub_6518()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t sub_65A4(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_65BC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (!*a1)
  {
    uint64_t v4 = a3(a2);
    atomic_store(sub_6800(v4), a1);
  }

  sub_6774();
}

void sub_65F0(unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = sub_6060(a2);
    atomic_store(sub_6800(v3), a1);
  }

  sub_6774();
}

void *sub_6628(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[9];
  uint64_t v7 = a1[11];
  uint64_t v8 = a1[13];
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

void *sub_66BC(void *a1)
{
  return a1;
}

  ;
}

uint64_t sub_6708()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 8) = *v0;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

BOOL sub_6728(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_6738()
{
  return swift_errorRelease(v0);
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_677C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 192) + 8LL))(v1, v0);
}

uint64_t sub_6790()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 184) + 8LL))(v0, v1);
}

void sub_67A4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_67B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t, uint64_t))
{
  return a16(v17, v18, v16);
}

uint64_t sub_67CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_67D4()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_67DC(uint64_t a1)
{
  return swift_arrayDestroy(a1, 1LL);
}

uint64_t sub_67E4()
{
  return swift_errorRetain(v0);
}

  ;
}

void sub_67F8(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t sub_6800(uint64_t a1)
{
  return swift_getWitnessTable(v1, a1);
}

  ;
}

uint64_t sub_6820()
{
  return type metadata accessor for Logger(0LL);
}

void *sub_6828(void *a1)
{
  return memcpy(a1, v1, 0x80uLL);
}

uint64_t sub_6834()
{
  return sub_5FEC(v0);
}

uint64_t sub_683C()
{
  return v2(v0, v1);
}

void sub_6848(unsigned __int8 a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unsigned int v8 = a1;
  NLContextUpdate.init()();
  uint64_t v9 = NLConstants.asNamespace.getter(0LL);
  NLContextUpdate.weightedPromptTargetDomain.setter(v9);
  uint64_t v10 = sub_3974(&qword_78B48);
  uint64_t v11 = sub_77F4(v10, 48LL);
  *(_OWORD *)(v11 + 16) = xmmword_56FA0;
  *(void *)(v11 + 32) = NLConstants.asNamespace.getter(3LL);
  *(void *)(v11 + 40) = v12;
  NLContextUpdate.weightedPromptResponseTargets.setter(v11);
  id v13 = [objc_allocWithZone(SAAceConfirmationContext) init];
  sub_55314(a1);
  sub_76E8(v14, v15, v13);
  uint64_t v16 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v17 = sub_77F4(v16, 40LL);
  *(_OWORD *)(v17 + 16) = xmmword_56DC0;
  *(void *)(v17 + 32) = v13;
  v28[0] = v17;
  specialized Array._endMutation()();
  id v18 = v13;
  NLContextUpdate.conversationStateAttachments.setter(v28[0]);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  uint64_t v19 = sub_77F4(v10, 64LL);
  *(_OWORD *)(v19 + 16) = xmmword_56FB0;
  *(Swift::String *)(v19 + 32) = EmergencyConfirmation.toPromptResponseOption()();
  *(Swift::String *)(v19 + 48) = EmergencyConfirmation.toPromptResponseOption()();
  if (v8)
  {
    if (v8 > 2) {
      goto LABEL_8;
    }
    sub_77C0();
    sub_77DC((uint64_t)"com.apple.siri.nl.EmergencyVerb.Value.");
    char v27 = 1;
  }

  else
  {
    sub_77C0();
    sub_77DC((uint64_t)"com.apple.siri.nl.EmergencyVerb.Value.");
    char v27 = 0;
  }

  _print_unlocked<A, B>(_:_:)(&v27, v28);
  uint64_t v21 = v28[0];
  uint64_t v20 = v28[1];
  unint64_t v23 = *(void *)(v19 + 16);
  unint64_t v22 = *(void *)(v19 + 24);
  if (v23 >= v22 >> 1) {
    uint64_t v19 = (uint64_t)sub_7484((char *)(v22 > 1), v23 + 1, 1, v19);
  }
  *(void *)(v19 + 16) = v23 + 1;
  uint64_t v24 = v19 + 16 * v23;
  *(void *)(v24 + 32) = v21;
  *(void *)(v24 + 40) = v20;
  a4 = a2;
  LOBYTE(a2) = v26;
LABEL_8:
  NLContextUpdate.weightedPromptResponseOptions.setter(v19);
  uint64_t v25 = sub_6A84(a1, a2 & 1, a3, a4);
  NLContextUpdate.nluSystemDialogActs.setter(v25);
}

char *sub_6A84(unsigned __int8 a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v42 = a3;
  unint64_t v43 = a4;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_SystemOffered(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v11 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  id v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_3974(&qword_78B50);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v42 - v22;
  if (a1 - 1 >= 2)
  {
    if (a1) {
      sub_6EF0((uint64_t)&v42 - v22);
    }
    else {
      sub_6DF0(v42, v43, (uint64_t)&v42 - v22);
    }
  }

  else
  {
    uint64_t v24 = type metadata accessor for UsoTaskBuilder_open_common_Website(0LL);
    uint64_t v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    uint64_t v27 = UsoTaskBuilder_open_common_Website.init()(v25, v26);
    sub_71F4(v27, (uint64_t)v23);
    swift_release(v27);
  }

  sub_773C((uint64_t)v23, (uint64_t)v21);
  if (sub_5FE0((uint64_t)v21, 1LL, v14) == 1)
  {
    uint64_t v28 = sub_7784((uint64_t)v21, &qword_78B50);
    uint64_t v29 = Logger.emergency.unsafeMutableAddressor(v28);
    swift_beginAccess(v29, v47, 0LL, 0LL);
    uint64_t v31 = v45;
    uint64_t v30 = v46;
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 16))(v7, v29, v46);
    BOOL v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "Nil serialized UsoGraph for confirmation SDA", v35, 2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
    uint64_t v36 = (char *)&_swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v21, v14);
    Siri_Nlu_External_SystemDialogAct.init()(v37);
    sub_7030((uint64_t)v17, (uint64_t)v10);
    Siri_Nlu_External_SystemDialogAct.offered.setter(v10);
    uint64_t v38 = sub_3974(&qword_78B58);
    uint64_t v39 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v40 = (v39 + 32) & ~v39;
    uint64_t v36 = (char *)swift_allocObject(v38, v40 + *(void *)(v11 + 72), v39 | 7);
    *((_OWORD *)v36 + 1) = xmmword_56FA0;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v36[v40], v13, v44);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  sub_7784((uint64_t)v23, &qword_78B50);
  return v36;
}

uint64_t sub_6DF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for UsoEntityBuilder_common_Person(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  uint64_t v7 = UsoEntityBuilder_common_Person.init()();
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8) {
    dispatch thunk of UsoEntityBuilder_common_Person.setName(value:)(a1, a2);
  }
  uint64_t v9 = type metadata accessor for UsoEntityBuilder_common_PhoneCall(0LL);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  uint64_t v10 = UsoEntityBuilder_common_PhoneCall.init()();
  uint64_t v11 = swift_retain(v7);
  dispatch thunk of UsoEntityBuilder_common_PhoneCall.addRecipients(value:)( v11,  &protocol witness table for UsoEntityBuilder_common_Person);
  swift_release(v7);
  uint64_t v12 = type metadata accessor for UsoTaskBuilder_call_common_PhoneCall(0LL);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  uint64_t v13 = UsoTaskBuilder_call_common_PhoneCall.init()();
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v10);
  sub_71F4(v13, a3);
  swift_release(v7);
  swift_release(v10);
  return swift_release(v13);
}

uint64_t sub_6EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UsoTaskBuilder_enable_common_Setting(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  uint64_t v7 = UsoTaskBuilder_enable_common_Setting.init()();
  uint64_t v8 = type metadata accessor for UsoEntityBuilder_common_Setting(0LL);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  uint64_t v9 = UsoEntityBuilder_common_Setting.init()();
  UsoIdentifier.init(value:appBundleId:namespace:)( 0x6E65726973LL,  0xE500000000000000LL,  0xD000000000000015LL,  0x800000000005AAF0LL,  0xD000000000000012LL,  0x800000000005AB10LL);
  dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  dispatch thunk of Uso_VerbTemplateBuilder_ReferenceTrigger.setReference(value:)(v9);
  sub_71F4(v7, a1);
  swift_release(v7);
  return swift_release(v9);
}

uint64_t sub_7030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v27 = a2;
  uint64_t v26 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v2 = *(void *)(v26 - 8);
  uint64_t v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Siri_Nlu_External_UserWantedToProceed(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v24 - v18;
  Siri_Nlu_External_UserWantedToProceed.init()(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
  uint64_t v20 = Siri_Nlu_External_UserWantedToProceed.reference.setter(v11);
  Siri_Nlu_External_UserDialogAct.init()(v20);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, v12);
  uint64_t v21 = Siri_Nlu_External_UserDialogAct.wantedToProceed.setter(v16);
  Siri_Nlu_External_SystemOffered.init()(v21);
  uint64_t v22 = v26;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v26);
  Siri_Nlu_External_SystemOffered.offeredAct.setter(v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
}

uint64_t sub_71F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_3974(&qword_78B60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v12 = swift_allocObject(v11, 40LL, 7LL);
  *(_OWORD *)(v12 + 16) = xmmword_56DC0;
  *(void *)(v12 + 32) = a1;
  uint64_t v20 = v12;
  specialized Array._endMutation()();
  uint64_t v13 = v20;
  uint64_t v14 = type metadata accessor for UsoBuilderOptions(0LL);
  sub_3F18((uint64_t)v10, 1LL, 1LL, v14);
  swift_retain(a1);
  uint64_t v15 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v13, v10);
  swift_bridgeObjectRelease(v13);
  sub_7784((uint64_t)v10, &qword_78B60);
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)(v15, 0LL);
  swift_release(v15);
  uint64_t v16 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v19, v7, v4);
  return sub_3F18(v16, 0LL, 1LL, v4);
}

char *sub_7484(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_3974(&qword_78B48);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  if ((v5 & 1) != 0)
  {
    sub_7664((char *)(a4 + 32), v8, v13);
    *(void *)(a4 + 16) = 0LL;
    swift_bridgeObjectRelease(a4);
  }

  else
  {
    sub_7570(0LL, v8, (unint64_t)v13, a4);
  }

  return v11;
}

uint64_t sub_7570(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_7664(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }

  return __src;
}

void sub_76E8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setReason:v5];
}

uint64_t sub_773C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974(&qword_78B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_7784(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_3974(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

void sub_77C0()
{
}

void sub_77DC(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._countAndFlagsBits = 0xD000000000000026LL;
  String.append(_:)(v1);
}

uint64_t sub_77F4(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7LL);
}

uint64_t type metadata accessor for EmergencySuicidePreventionBasicIntentCATs(uint64_t a1)
{
  uint64_t result = qword_78B68;
  if (!qword_78B68) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencySuicidePreventionBasicIntentCATs);
  }
  return result;
}

uint64_t sub_7834(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B7F8);
}

void sub_7870(uint64_t a1, char a2)
{
}

void sub_78A8(uint64_t a1, char a2)
{
}

void sub_78D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v10);
  size_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_3974(&qword_78BB8);
  uint64_t v14 = swift_allocObject(v13, 128LL, 7LL);
  *(_OWORD *)(v14 + 16) = xmmword_56FB0;
  uint64_t v15 = (void *)(v14 + 48);
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  sub_7DAC(a1, (uint64_t)v12, &qword_78970);
  uint64_t v16 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v12, 1LL, v16) == 1)
  {
    sub_7784((uint64_t)v12, &qword_78970);
    *(_OWORD *)uint64_t v15 = 0u;
    *(_OWORD *)(v14 + 64) = 0u;
  }

  else
  {
    *(void *)(v14 + 72) = v16;
    uint64_t v17 = sub_649C(v15);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 32LL))(v17, v12, v16);
  }

  *(void *)(v14 + 80) = 0xD000000000000012LL;
  *(void *)(v14 + 88) = 0x800000000005ABB0LL;
  *(void *)(v14 + 120) = &type metadata for Bool;
  *(_BYTE *)(v14 + 96) = a2 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(v18, v19, v14);
  swift_bridgeObjectRelease(v14);
  sub_7DF0();
}

void sub_7A34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v8 = sub_3974(&qword_78BB8);
  uint64_t v9 = swift_allocObject(v8, 176LL, 7LL);
  *(_OWORD *)(v9 + 16) = xmmword_56FC0;
  uint64_t v10 = (void *)(v9 + 48);
  *(void *)(v9 + 32) = 0x656D614E67726FLL;
  *(void *)(v9 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, v3, &qword_78970);
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v3, 1LL, v11) == 1)
  {
    sub_7784(v3, &qword_78970);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }

  else
  {
    *(void *)(v9 + 72) = v11;
    size_t v12 = sub_649C(v10);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v12, v3, v11);
  }

  *(void *)(v9 + 80) = 0x65626D754E67726FLL;
  *(void *)(v9 + 88) = 0xE900000000000072LL;
  if (a2)
  {
    uint64_t v13 = type metadata accessor for DialogPhoneNumber(0LL);
    uint64_t v14 = a2;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v9 + 104) = 0LL;
    *(void *)(v9 + 112) = 0LL;
  }

  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 120) = v13;
  *(void *)(v9 + 128) = 0xD000000000000012LL;
  *(void *)(v9 + 136) = 0x800000000005ABB0LL;
  *(void *)(v9 + 168) = &type metadata for Bool;
  *(_BYTE *)(v9 + 144) = a3 & 1;
  swift_retain(a2);
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002ELL, 0x800000000005AB80LL, v9);
  swift_bridgeObjectRelease(v9);
  sub_7DF0();
}

uint64_t sub_7BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_7C38(a1, a2, a3);
}

uint64_t sub_7C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for CATOption(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_7E10();
  sub_3974((uint64_t *)&unk_7AE80);
  sub_6764();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_7DAC(a1, (uint64_t)v11, (uint64_t *)&unk_7AE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v7);
  uint64_t v12 = CATWrapper.init(templateDir:options:globals:)(v11, v3, a3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  sub_7784(a1, (uint64_t *)&unk_7AE80);
  return v12;
}

uint64_t sub_7D34()
{
  uint64_t v0 = CATWrapper.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_7D50()
{
  return type metadata accessor for EmergencySuicidePreventionBasicIntentCATs(0LL);
}

void sub_7D58(uint64_t a1, char a2)
{
}

void sub_7D74(uint64_t a1, char a2)
{
}

void sub_7D90(uint64_t a1, uint64_t a2, char a3)
{
}

uint64_t sub_7DAC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_3974(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

  ;
}

void sub_7E08(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

  ;
}

uint64_t type metadata accessor for SexualAssaultCATs(uint64_t a1)
{
  uint64_t result = qword_78BC0;
  if (!qword_78BC0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SexualAssaultCATs);
  }
  return result;
}

uint64_t sub_7E60(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B808);
}

uint64_t sub_7E9C(uint64_t a1, char a2)
{
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974(&qword_78BB8);
  uint64_t v8 = swift_allocObject(v7, 128LL, 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_56FB0;
  uint64_t v9 = (void *)(v8 + 48);
  *(void *)(v8 + 32) = 0x656D614E67726FLL;
  *(void *)(v8 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, (uint64_t)v6, &qword_78970);
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v6, 1LL, v10) == 1)
  {
    sub_7784((uint64_t)v6, &qword_78970);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }

  else
  {
    *(void *)(v8 + 72) = v10;
    uint64_t v11 = sub_649C(v9);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v11, v6, v10);
  }

  *(void *)(v8 + 80) = 0xD000000000000012LL;
  *(void *)(v8 + 88) = 0x800000000005ABB0LL;
  *(void *)(v8 + 120) = &type metadata for Bool;
  *(_BYTE *)(v8 + 96) = a2 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000022LL, 0x800000000005AD40LL, v8);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_801C()
{
  return sub_8270(v0, v1, v2, 34LL, v3);
}

uint64_t sub_8038(uint64_t a1)
{
  return sub_8270(a1, 0x656D614E67726FLL, 0xE700000000000000LL, 35LL, 0x800000000005ACE0LL);
}

uint64_t sub_8064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_3974(&qword_78BB8);
  uint64_t v12 = swift_allocObject(v11, 80LL, 7LL);
  *(_OWORD *)(v12 + 16) = xmmword_56FA0;
  uint64_t v13 = (void *)(v12 + 48);
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = a3;
  sub_7DAC(a1, v5, &qword_78970);
  uint64_t v14 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v5, 1LL, v14) == 1)
  {
    sub_7784(v5, &qword_78970);
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
  }

  else
  {
    *(void *)(v12 + 72) = v14;
    uint64_t v15 = sub_649C(v13);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v15, v5, v14);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(a4, a5, v12);
  return swift_bridgeObjectRelease(v12);
}

uint64_t sub_819C()
{
  return sub_8270(v0, v1, v2, 38LL, v3);
}

uint64_t sub_81B8()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)( 0xD000000000000024LL,  0x800000000005AC80LL,  &_swiftEmptyArrayStorage);
}

uint64_t sub_81DC()
{
  return type metadata accessor for SexualAssaultCATs(0LL);
}

void sub_81E4(uint64_t a1, char a2)
{
}

void sub_8200()
{
}

void sub_821C(uint64_t a1)
{
}

void sub_8238()
{
}

void sub_8254()
{
}

uint64_t sub_8270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_8064(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a5);
}

  ;
}

uint64_t sub_82A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CsamSituation.Builder();
  swift_initStackObject(v6, v20);
  uint64_t v7 = (_BYTE *)sub_13A54();
  uint64_t v8 = sub_84A0();
  if (v8 == 0xD000000000000013LL && v9 == 0x800000000005AD70LL)
  {
    swift_bridgeObjectRelease(0x800000000005AD70LL);
    char v10 = 1;
  }

  else
  {
    char v10 = sub_8498(v8, v9, 0xD000000000000013LL, 0x800000000005AD70LL);
    sub_84A8();
  }

  v7[16] = v10 & 1;
  v7[17] = EmergencyCSAMIntent.isCSAMContentReporting.getter(a1, a2, a3) & 1;
  uint64_t v11 = sub_84A0();
  if (v11 == 0x7078655F6D617363LL && v12 == 0xED0000746963696CLL)
  {
    swift_bridgeObjectRelease(0xED0000746963696CLL);
    char v14 = 1;
  }

  else
  {
    char v14 = sub_8498(v11, v12, 0x7078655F6D617363LL, 0xED0000746963696CLL);
    sub_84A8();
  }

  v7[18] = v14 & 1;
  uint64_t v15 = sub_84A0();
  if (v15 == 0xD000000000000010LL && v16 == 0x800000000005AD90LL)
  {
    swift_bridgeObjectRelease(0x800000000005AD90LL);
    char v17 = 1;
  }

  else
  {
    char v17 = sub_8498(v15, v16, 0xD000000000000010LL, 0x800000000005AD90LL);
    sub_84A8();
  }

  swift_bridgeObjectRelease(a3);
  v7[19] = v17 & 1;
  uint64_t v18 = type metadata accessor for CsamSituation();
  swift_allocObject(v18, 28LL, 7LL);
  return sub_13A9C(v7);
}

uint64_t sub_8498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
}

uint64_t sub_84A0()
{
  return EmergencySituation.rawValue.getter(v0);
}

uint64_t sub_84A8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t initializeBufferWithCopyOfBuffer for EmergencyFeatureFlagsManager(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for WebsearchFlow(uint64_t a1)
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 16));
}

uint64_t initializeWithCopy for WebsearchFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  __int128 v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain(v3);
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for WebsearchFlow(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  sub_85C8(a1 + 2, a2 + 2);
  return a1;
}

void *sub_85C8(void *result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        uint64_t result = (void *)swift_release(v11);
        *uint64_t v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

__n128 initializeWithTake for WebsearchFlow(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WebsearchFlow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 16));
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebsearchFlow(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WebsearchFlow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for WebsearchFlow()
{
  return &type metadata for WebsearchFlow;
}

uint64_t sub_8834()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = sub_8CFC();
  sub_3CC8(v3, (uint64_t)v9);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v3, v1);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "WebsearchFlow onInput", v7, 2u);
    sub_3CA0((uint64_t)v7);
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return 1LL;
}

uint64_t sub_891C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = sub_8CFC();
  sub_3CC8(v7, (uint64_t)v25);
  uint64_t v8 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v2, v7, v5);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "WebsearchFlow execute", v11, 2u);
    sub_3CA0((uint64_t)v11);
  }

  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v2, v5);
  sub_3B68((uint64_t)(v2 + 2), (uint64_t)v22);
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  sub_3324(v22, v23);
  uint64_t v14 = *v2;
  uint64_t v15 = v2[1];
  id v16 = [objc_allocWithZone(SAWebSearch) init];
  sub_8C00(v14, v15, v16);
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAWebSearchExternalProviderDefaultValue);
  sub_8C44(v17, v18, v16);
  uint64_t v19 = swift_allocObject(&unk_6DA20, 32LL, 7LL);
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = a2;
  unint64_t v20 = sub_8CC0();
  swift_retain(a2);
  dispatch thunk of AceServiceInvoker.submit<A>(_:completion:)(v16, sub_8CB8, v19, v20, v12, v13);

  swift_release(v19);
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
}

uint64_t sub_8AE8(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static ExecuteResponse.complete()(v5);
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_8B74()
{
  return 1LL;
}

uint64_t sub_8B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.execute()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_5F44;
  return Flow.execute()(a1, a2, a3);
}

void sub_8C00(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setQuery:v4];
}

void sub_8C44(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setProvider:v5];
}

uint64_t sub_8C94()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_8CB8(uint64_t a1)
{
  return sub_8AE8(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_8CC0()
{
  unint64_t result = qword_78C20;
  if (!qword_78C20)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SABaseCommand);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_78C20);
  }

  return result;
}

uint64_t sub_8CFC()
{
  return Logger.emergency.unsafeMutableAddressor();
}

uint64_t sub_8D14()
{
  return swift_slowAlloc(2LL, -1LL);
}

void sub_8D20()
{
  if (!(!v7 & v6)) {
    __asm { BR              X10 }
  }

  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v5);
  sub_93AC(v8);
  uint64_t v9 = sub_9398();
  Logger.logObject.getter(v9);
  os_log_type_t v10 = sub_9450();
  if (sub_93C0(v10))
  {
    sub_3CD4(12LL);
    uint64_t v11 = sub_93E0();
    sub_9484(v11);
    sub_934C(4.8149e-34);
    uint64_t v12 = sub_9458();
    uint64_t v14 = sub_943C(v12, v13);
    sub_9318(v14);
    sub_9448();
    sub_9384(&dword_0, v15, v16, "Unsupported situation for Basic CATs: %s");
    sub_93F0();
    sub_3CA0(v3);
    sub_3CA0(v2);
  }

  sub_93D0();
  sub_9428();
  sub_7DF0();
}

void sub_8E94()
{
  if (!(!v7 & v6)) {
    __asm { BR              X10 }
  }

  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v5);
  sub_93AC(v8);
  uint64_t v9 = sub_9398();
  Logger.logObject.getter(v9);
  os_log_type_t v10 = sub_9450();
  if (sub_93C0(v10))
  {
    sub_3CD4(12LL);
    uint64_t v11 = sub_93E0();
    sub_9484(v11);
    sub_934C(4.8149e-34);
    uint64_t v12 = sub_9458();
    uint64_t v14 = sub_943C(v12, v13);
    sub_9318(v14);
    sub_9448();
    sub_9384(&dword_0, v15, v16, "Unsupported situation for Basic Modern CATs: %s");
    sub_93F0();
    sub_3CA0(v3);
    sub_3CA0(v2);
  }

  sub_93D0();
  sub_9428();
  sub_7DF0();
}

void sub_9010()
{
  if (!(!v7 & v6)) {
    __asm { BR              X10 }
  }

  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v5);
  sub_93AC(v8);
  uint64_t v9 = sub_9398();
  Logger.logObject.getter(v9);
  os_log_type_t v10 = sub_9450();
  if (sub_93C0(v10))
  {
    sub_3CD4(12LL);
    uint64_t v11 = sub_93E0();
    sub_9484(v11);
    sub_934C(4.8149e-34);
    uint64_t v12 = sub_9458();
    uint64_t v14 = sub_943C(v12, v13);
    sub_9318(v14);
    sub_9448();
    sub_9384(&dword_0, v15, v16, "Unsupported situation for Sub-Area CATs: %s");
    sub_93F0();
    sub_3CA0(v3);
    sub_3CA0(v2);
  }

  sub_93D0();
  sub_9428();
  sub_7DF0();
}

void sub_918C()
{
  if (!(!v7 & v6)) {
    __asm { BR              X10 }
  }

  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v5);
  sub_93AC(v8);
  uint64_t v9 = sub_9398();
  Logger.logObject.getter(v9);
  os_log_type_t v10 = sub_9450();
  if (sub_93C0(v10))
  {
    sub_3CD4(12LL);
    uint64_t v11 = sub_93E0();
    sub_9484(v11);
    sub_934C(4.8149e-34);
    uint64_t v12 = sub_9458();
    uint64_t v14 = sub_943C(v12, v13);
    sub_9318(v14);
    sub_9448();
    sub_9384(&dword_0, v15, v16, "Unsupported situation for Sub-Area CATs: %s");
    sub_93F0();
    sub_3CA0(v3);
    sub_3CA0(v2);
  }

  sub_93D0();
  sub_9428();
  sub_7DF0();
}

uint64_t sub_9300(uint64_t a1)
{
  return swift_retain(a1);
}

uint64_t sub_9318(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 - 120, v2 - 112, *(void *)(v2 - 128), v1);
}

uint64_t sub_9334()
{
  return type metadata accessor for Logger(0LL);
}

void sub_934C(float a1)
{
  float *v2 = a1;
  *(void *)(v3 - 128) = v2 + 1;
  *(_BYTE *)(v3 - 120) = v1;
}

  ;
}

void sub_9384(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_9398()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t sub_93AC(uint64_t a1)
{
  return swift_beginAccess(a1, v1 - 104, 0LL, 0LL);
}

BOOL sub_93C0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_93D0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_93E0()
{
  return swift_slowAlloc(32LL, -1LL);
}

uint64_t sub_93F0()
{
  return swift_arrayDestroy(v0, 1LL);
}

  ;
}

uint64_t sub_9414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v2[3] = a1;
  v2[4] = a2;
  void *v2 = v3;
  return v3;
}

double sub_9428()
{
  *(void *)(v0 + 32) = 0LL;
  double result = 0.0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t sub_943C(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 112));
}

uint64_t sub_9448()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_9450()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_9458()
{
  return String.init<A>(describing:)(v0 - 120);
}

  ;
}

void *sub_9478()
{
  return sub_3324(v0, v0[3]);
}

uint64_t sub_9484(uint64_t result)
{
  *(void *)(v1 - 112) = result;
  return result;
}

uint64_t type metadata accessor for EmergencySexualAssaultBasicIntentModernCATs(uint64_t a1)
{
  uint64_t result = qword_78C28;
  if (!qword_78C28) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencySexualAssaultBasicIntentModernCATs);
  }
  return result;
}

uint64_t sub_94C8(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B818);
}

uint64_t sub_9504(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 32) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_9548()
{
  uint64_t v1 = sub_3974(&qword_78BB8);
  uint64_t v2 = sub_77F4(v1, 128LL);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_56FB0;
  strcpy((char *)(v2 + 32), "webSearchQuery");
  *(_BYTE *)(v2 + 47) = -18;
  sub_9EF0(v2, v3, &qword_78970);
  uint64_t v4 = sub_4508();
  uint64_t v5 = sub_9F30(v4);
  if (v6)
  {
    sub_9F58(v5, &qword_78970);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    char v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  char v8 = *(_BYTE *)(v0 + 64);
  *(void *)(v2 + 80) = 0xD000000000000012LL;
  *(void *)(v2 + 88) = 0x800000000005ABB0LL;
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(_BYTE *)(v2 + 96) = v8;
  uint64_t v9 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  void *v9 = v0;
  v9[1] = sub_965C;
  uint64_t v10 = sub_9E44(0xD00000000000002CLL);
  return sub_9E10(v10, v11, v12, v13);
}

uint64_t sub_965C()
{
  if (v0)
  {
    sub_4588();
    return sub_9E34();
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v1 + 40));
    sub_9F08();
    uint64_t v3 = sub_9F20();
    return sub_9E24(v3, v4);
  }

uint64_t sub_96A8()
{
  return sub_9ED0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_96D8(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 32) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_971C()
{
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = (__n128 *)sub_77F4(v2, 128LL);
  *(void *)(v1 + 40) = v3;
  uint64_t v4 = sub_9EAC(v3, (__n128)xmmword_56FB0);
  sub_9EF0((uint64_t)v4, v5, &qword_78970);
  uint64_t v6 = sub_4508();
  uint64_t v7 = sub_9F30(v6);
  if (v8)
  {
    sub_9F58(v7, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unsigned __int8 v10 = *(_BYTE *)(v1 + 64);
  v3[5].n128_u64[0] = 0xD000000000000012LL;
  v3[5].n128_u64[1] = 0x800000000005ABB0LL;
  v3[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[6].n128_u8[0] = v10;
  uint64_t v11 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_9808;
  uint64_t v12 = sub_9E44(0xD00000000000002DLL);
  return sub_9E10(v12, v13, v14, v15);
}

uint64_t sub_9808()
{
  if (v0)
  {
    sub_4588();
    return sub_9E34();
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v1 + 40));
    sub_9F08();
    uint64_t v3 = sub_9F20();
    return sub_9E24(v3, v4);
  }

uint64_t sub_9854(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 72) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = sub_3974(&qword_78970);
  *(void *)(v4 + 40) = sub_9E84(v5);
  sub_4588();
  return sub_451C();
}

uint64_t sub_989C()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = sub_3974(&qword_78BB8);
  uint64_t v4 = (__n128 *)sub_77F4(v3, 176LL);
  *(void *)(v1 + 48) = v4;
  uint64_t v5 = sub_9EAC(v4, (__n128)xmmword_56FC0);
  sub_9EF0((uint64_t)v5, v6, &qword_78970);
  uint64_t v7 = sub_4508();
  uint64_t v8 = sub_5FE0(v2, 1LL, v7);
  if ((_DWORD)v8 == 1)
  {
    sub_9F58(v8, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unint64_t v10 = *(void *)(v1 + 24);
  v4[5].n128_u64[0] = 0x65626D754E67726FLL;
  v4[5].n128_u64[1] = 0xE900000000000072LL;
  uint64_t v11 = 0LL;
  if (v10)
  {
    uint64_t v11 = type metadata accessor for DialogPhoneNumber(0LL);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  unsigned __int8 v12 = *(_BYTE *)(v1 + 72);
  v4[6].n128_u64[0] = v10;
  v4[8].n128_u64[1] = 0x800000000005ABB0LL;
  v4[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v4[9].n128_u8[0] = v12;
  uint64_t v13 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + 1);
  v4[7].n128_u64[1] = v11;
  v4[8].n128_u64[0] = 0xD000000000000012LL;
  swift_retain(v10);
  uint64_t v14 = (void *)swift_task_alloc(v13);
  *(void *)(v1 + 56) = v14;
  void *v14 = v1;
  v14[1] = sub_99F8;
  uint64_t v15 = sub_9E44(0xD00000000000002ALL);
  return sub_9E10(v15, v16, v17, v18);
}

uint64_t sub_99F8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_4588();
    return sub_9E34();
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v2 + 48));
    sub_9F08();
    uint64_t v5 = sub_9F20();
    return sub_9E24(v5, v6);
  }

uint64_t sub_9A64()
{
  return sub_9ED0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_9A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_9AD8(a1, a2, a3);
}

uint64_t sub_9AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_6740();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v11);
  sub_6740();
  uint64_t v14 = v13 - v12;
  sub_7DAC(a1, v13 - v12, (uint64_t *)&unk_7AE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v15 = CATWrapperSimple.init(templateDir:options:globals:)(v14, v10, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_7784(a1, (uint64_t *)&unk_7AE80);
  return v15;
}

uint64_t sub_9BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CATOption(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_6740();
  uint64_t v8 = v7 - v6;
  sub_9F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v9 = CATWrapperSimple.init(useResponseMode:options:)(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

uint64_t sub_9C80()
{
  uint64_t v0 = CATWrapperSimple.deinit();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_9C9C()
{
  return type metadata accessor for EmergencySexualAssaultBasicIntentModernCATs(0LL);
}

uint64_t sub_9CA4()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_78C3C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9CF8);
  return sub_9504(v2, v3);
}

uint64_t sub_9CF8(uint64_t a1)
{
  uint64_t v4 = *(void *)(*v2 + 16);
  uint64_t v5 = *v2;
  uint64_t v6 = swift_task_dealloc(v4);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_9D4C()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_78C44);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9E08);
  return sub_96D8(v2, v3);
}

uint64_t sub_9DA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_78C4C);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E08;
  return sub_9854(a1, a2, a3);
}

uint64_t sub_9E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_9E24(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_9E34()
{
  return swift_task_switch();
}

uint64_t sub_9E44@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_9E60()
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t *)(v2 - 8);
  *uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 48);
  *uint64_t v4 = *v1;
  *(void *)(v3 + 56) = v0;
  return swift_task_dealloc(v5);
}

uint64_t sub_9E84(uint64_t a1)
{
  return swift_task_alloc((*(void *)(*(void *)(a1 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_9E98(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32LL))(a1, v2, v1);
}

__n128 *sub_9EAC(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656D614E67726FLL;
  result[2].n128_u64[1] = 0xE700000000000000LL;
  return result;
}

uint64_t sub_9ED0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_9EDC@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

uint64_t sub_9EF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_7DAC(v3, v4, a3);
}

void *sub_9EFC()
{
  *(void *)(v2 + 72) = v1;
  return sub_649C(v0);
}

uint64_t sub_9F08()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_9F10()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

uint64_t sub_9F20()
{
  return v0;
}

uint64_t sub_9F30(uint64_t a1)
{
  return sub_5FE0(v1, 1LL, a1);
}

uint64_t sub_9F58(uint64_t a1, uint64_t *a2)
{
  return sub_7784(v2, a2);
}

uint64_t sub_9F60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_9F74()
{
  if (qword_785A8 != -1) {
    swift_once(&qword_785A8, sub_A1F4);
  }
  return swift_retain(qword_78CB0);
}

uint64_t sub_9FB4()
{
  uint64_t v0 = sub_3974(&qword_78DB0);
  uint64_t v1 = swift_allocObject(v0, 232LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_57190;
  if (qword_785B0 != -1) {
    swift_once(&qword_785B0, sub_A288);
  }
  uint64_t v2 = qword_78CB8;
  *(void *)(v1 + 56) = sub_3974(&qword_78CE0);
  *(void *)(v1 + 64) = sub_A7D0(&qword_78DB8, &qword_78CE0);
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = qword_785B8;
  swift_retain(v2);
  if (v3 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  uint64_t v4 = qword_78CC0;
  *(void *)(v1 + 96) = sub_3974(&qword_78CF0);
  *(void *)(v1 + 104) = sub_A7D0(&qword_78DC0, &qword_78CF0);
  *(void *)(v1 + 72) = v4;
  uint64_t v5 = qword_785C0;
  swift_retain(v4);
  if (v5 != -1) {
    swift_once(&qword_785C0, sub_A2E4);
  }
  uint64_t v6 = qword_78CC8;
  *(void *)(v1 + 136) = sub_3974(&qword_78CE8);
  *(void *)(v1 + 144) = sub_A7D0(&qword_78DC8, &qword_78CE8);
  *(void *)(v1 + 112) = v6;
  uint64_t v7 = qword_785C8;
  swift_retain(v6);
  if (v7 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  uint64_t v8 = qword_78CD0;
  *(void *)(v1 + 176) = sub_3974(&qword_78CF8);
  *(void *)(v1 + 184) = sub_A7D0(&qword_78DD0, &qword_78CF8);
  *(void *)(v1 + 152) = v8;
  uint64_t v9 = qword_785D0;
  swift_retain(v8);
  if (v9 != -1) {
    swift_once(&qword_785D0, sub_A334);
  }
  uint64_t v10 = qword_78CD8;
  *(void *)(v1 + 216) = sub_3974(&qword_78D00);
  *(void *)(v1 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = sub_A7D0(&qword_78DD8, &qword_78D00);
  *(void *)(v1 + 192) = v10;
  qword_78CA8 = v1;
  return swift_retain(v10);
}

uint64_t sub_A1F4()
{
  if (qword_785A0 != -1) {
    swift_once(&qword_785A0, sub_9FB4);
  }
  uint64_t v0 = qword_78CA8;
  uint64_t v1 = type metadata accessor for DomainOntologyNode(0LL);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  swift_bridgeObjectRetain(v0);
  uint64_t result = DomainOntologyNode.init(name:childNodes:isInEventTree:)(0x636E656772656D65LL, 0xE900000000000079LL, v0, 0LL);
  qword_78CB0 = result;
  return result;
}

uint64_t sub_A288(uint64_t a1)
{
  return sub_A35C(a1, &qword_78CE0, 0x636E656772656D65LL, 0xED00006272655679LL, &qword_78CB8);
}

uint64_t sub_A2BC(uint64_t a1)
{
  return sub_A810(a1, &qword_78CF0, 18LL, 0x800000000005AEB0LL, &qword_78CC0);
}

uint64_t sub_A2E4(uint64_t a1)
{
  return sub_A810(a1, &qword_78CE8, 21LL, 0x800000000005AE90LL, &qword_78CC8);
}

uint64_t sub_A30C(uint64_t a1)
{
  return sub_A810(a1, &qword_78CF8, 21LL, 0x800000000005AED0LL, &qword_78CD0);
}

uint64_t sub_A334(uint64_t a1)
{
  return sub_A810(a1, &qword_78D00, 18LL, 0x800000000005AEF0LL, &qword_78CD8);
}

uint64_t sub_A35C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = sub_3974(a2);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  uint64_t result = TerminalOntologyNode.init(name:multicardinal:)(a3, a4, 0LL);
  *a5 = result;
  return result;
}

uint64_t sub_A3B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

uint64_t sub_A3F0()
{
  return sub_9F74();
}

uint64_t sub_A404(uint64_t a1)
{
  uint64_t v2 = sub_A790(&qword_78DA8, (uint64_t)&unk_571FC);
  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_A44C(uint64_t a1)
{
  uint64_t v2 = sub_A790(&qword_78DA8, (uint64_t)&unk_571FC);
  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_A488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_A4C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
}

uint64_t sub_A4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_A53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_A580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_A5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a1, a2, v4);
  return a1;
}

uint64_t sub_A608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A614);
}

uint64_t sub_A614()
{
  uint64_t v2 = sub_A818();
  return sub_5FE0(v1, v0, v2);
}

uint64_t sub_A63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A648);
}

uint64_t sub_A648()
{
  uint64_t v2 = sub_A818();
  return sub_3F18(v1, v0, v0, v2);
}

uint64_t type metadata accessor for EmergencyNLIntent(uint64_t a1)
{
  uint64_t result = qword_78D60;
  if (!qword_78D60) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyNLIntent);
  }
  return result;
}

uint64_t sub_A6AC(uint64_t a1)
{
  uint64_t result = type metadata accessor for NLIntent(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 1LL, &v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_A714()
{
  return sub_A790(&qword_78D98, (uint64_t)&unk_57258);
}

uint64_t sub_A738()
{
  return sub_A790(&qword_78DA0, (uint64_t)&unk_571D4);
}

uint64_t sub_A75C(uint64_t a1)
{
  uint64_t result = sub_A790(&qword_78DA8, (uint64_t)&unk_571FC);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_A790(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for EmergencyNLIntent(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_A7D0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_6060(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for TerminalOntologyNode<A>, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_A810(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_A35C(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a4, a5);
}

uint64_t sub_A818()
{
  return type metadata accessor for NLIntent(0LL);
}

uint64_t type metadata accessor for SuicidePreventionCATs(uint64_t a1)
{
  uint64_t result = qword_78DE0;
  if (!qword_78DE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SuicidePreventionCATs);
  }
  return result;
}

uint64_t sub_A860(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B828);
}

uint64_t sub_A89C(char a1)
{
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  *(void *)(v3 + 32) = 0xD000000000000012LL;
  *(void *)(v3 + 40) = 0x800000000005ABB0LL;
  *(void *)(v3 + 72) = &type metadata for Bool;
  *(_BYTE *)(v3 + 48) = a1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000026LL, 0x800000000005B010LL, v3);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_A934()
{
  return sub_ACC0(v0, v1, v2, 38LL, v3);
}

uint64_t sub_A950(uint64_t a1)
{
  return sub_ACC0(a1, 0x656D614E67726FLL, 0xE700000000000000LL, 39LL, 0x800000000005AFB0LL);
}

uint64_t sub_A97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_3974(&qword_78970);
  __chkstk_darwin(v10);
  sub_7E10();
  uint64_t v11 = sub_3974(&qword_78BB8);
  uint64_t v12 = sub_ACC8(v11);
  *(_OWORD *)(v12 + 16) = xmmword_56FA0;
  uint64_t v13 = (void *)(v12 + 48);
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = a3;
  sub_7DAC(a1, v5, &qword_78970);
  uint64_t v14 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v5, 1LL, v14) == 1)
  {
    sub_7784(v5, &qword_78970);
    *(_OWORD *)uint64_t v13 = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
  }

  else
  {
    *(void *)(v12 + 72) = v14;
    uint64_t v15 = sub_649C(v13);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v15, v5, v14);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(a4, a5, v12);
  return swift_bridgeObjectRelease(v12);
}

uint64_t sub_AAB4()
{
  return sub_ACC0(v0, v1, v2, 42LL, v3);
}

uint64_t sub_AAD0()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)( 0xD000000000000028LL,  0x800000000005AF50LL,  &_swiftEmptyArrayStorage);
}

uint64_t sub_AAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_AB44(a1, a2, a3);
}

uint64_t sub_AB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for CATOption(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_7E10();
  uint64_t v9 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_7DAC(a1, (uint64_t)v11, (uint64_t *)&unk_7AE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v7);
  uint64_t v12 = CATWrapper.init(templateDir:options:globals:)(v11, v3, a3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  sub_7784(a1, (uint64_t *)&unk_7AE80);
  return v12;
}

uint64_t sub_AC48()
{
  return type metadata accessor for SuicidePreventionCATs(0LL);
}

void sub_AC50()
{
}

void sub_AC6C(uint64_t a1)
{
}

void sub_AC88()
{
}

void sub_ACA4()
{
}

uint64_t sub_ACC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_A97C(a1, a2, a3, a4 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a5);
}

uint64_t sub_ACC8(uint64_t a1)
{
  return swift_allocObject(a1, 80LL, 7LL);
}

uint64_t type metadata accessor for EmergencySuicidePreventionBasicIntentCATPatternsExecutor(uint64_t a1)
{
  return sub_B498( a1,  (uint64_t *)&unk_78E30,  (uint64_t)&nominal type descriptor for EmergencySuicidePreventionBasicIntentCATPatternsExecutor);
}

uint64_t sub_ACE8(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B838);
}

uint64_t sub_AD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_AD74(a1, a2, a3);
}

uint64_t sub_AD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_AE7C(a1, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v13 = CATWrapper.init(templateDir:options:globals:)(v12, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_AEC4(a1);
  return v13;
}

uint64_t sub_AE74()
{
  return type metadata accessor for EmergencySuicidePreventionBasicIntentCATPatternsExecutor(0LL);
}

uint64_t sub_AE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974((uint64_t *)&unk_7AE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_AEC4(uint64_t a1)
{
  uint64_t v2 = sub_3974((uint64_t *)&unk_7AE80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t *sub_AF04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain(v10);
  }

  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for SpeakableString(0LL);
    if (sub_5FE0((uint64_t)v7, 1LL, v8))
    {
      uint64_t v9 = sub_3974(&qword_78970);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(*(void *)(v8 - 8) + 16LL))(v6, v7, v8);
      sub_3F18((uint64_t)v6, 0LL, 1LL, v8);
    }
  }

  return v3;
}

uint64_t sub_AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  uint64_t result = sub_5FE0(v2, 1LL, v3);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
  }
  return result;
}

_BYTE *sub_B038(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v6, 1LL, v7))
  {
    uint64_t v8 = sub_3974(&qword_78970);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v5, v6, v7);
    sub_3F18((uint64_t)v5, 0LL, 1LL, v7);
  }

  return a1;
}

_BYTE *sub_B0E4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for SpeakableString(0LL);
  int v8 = sub_5FE0((uint64_t)v5, 1LL, v7);
  int v9 = sub_5FE0((uint64_t)v6, 1LL, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }

  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_3974(&qword_78970);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v5, v6, v7);
  sub_3F18((uint64_t)v5, 0LL, 1LL, v7);
  return a1;
}

_BYTE *sub_B1E0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v6, 1LL, v7))
  {
    uint64_t v8 = sub_3974(&qword_78970);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v7 - 8) + 32LL))(v5, v6, v7);
    sub_3F18((uint64_t)v5, 0LL, 1LL, v7);
  }

  return a1;
}

_BYTE *sub_B28C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for SpeakableString(0LL);
  int v8 = sub_5FE0((uint64_t)v5, 1LL, v7);
  int v9 = sub_5FE0((uint64_t)v6, 1LL, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }

    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }

  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_3974(&qword_78970);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v7 - 8) + 32LL))(v5, v6, v7);
  sub_3F18((uint64_t)v5, 0LL, 1LL, v7);
  return a1;
}

uint64_t sub_B388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B394);
}

uint64_t sub_B394(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0LL;
    }
  }

  else
  {
    uint64_t v10 = sub_3974(&qword_78970);
    return sub_5FE0((uint64_t)&a1[*(int *)(a3 + 20)], a2, v10);
  }

uint64_t sub_B40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B418);
}

_BYTE *sub_B418(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }

  else
  {
    uint64_t v7 = sub_3974(&qword_78970);
    return (_BYTE *)sub_3F18((uint64_t)&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }

  return result;
}

uint64_t type metadata accessor for EmergencySuicidePreventionBasicIntentNoResourceParameters(uint64_t a1)
{
  return sub_B498( a1,  (uint64_t *)&unk_78ED8,  (uint64_t)&nominal type descriptor for EmergencySuicidePreventionBasicIntentNoResourceParameters);
}

uint64_t sub_B498(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata(a1, a3);
  }
  return result;
}

void sub_B4C8(uint64_t a1)
{
  v4[0] = &unk_573F0;
  sub_B53C(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
  }

void sub_B53C(uint64_t a1)
{
  if (!qword_78EE8)
  {
    uint64_t v2 = type metadata accessor for SpeakableString(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_78EE8);
    }
  }

uint64_t type metadata accessor for EmergencyErrorsCATs(uint64_t a1)
{
  uint64_t result = qword_78F18;
  if (!qword_78F18) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyErrorsCATs);
  }
  return result;
}

uint64_t sub_B5C8(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B848);
}

uint64_t sub_B604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3974(&qword_78970);
  uint64_t v7 = __chkstk_darwin(v6);
  int v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = sub_3974(&qword_78BB8);
  uint64_t v13 = swift_allocObject(v12, 176LL, 7LL);
  *(_OWORD *)(v13 + 16) = xmmword_56FC0;
  uint64_t v14 = (void *)(v13 + 48);
  *(void *)(v13 + 32) = 0x656D614E67726FLL;
  *(void *)(v13 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, (uint64_t)v11, &qword_78970);
  uint64_t v15 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v11, 1LL, v15) == 1)
  {
    sub_7784((uint64_t)v11, &qword_78970);
    *(_OWORD *)uint64_t v14 = 0u;
    *(_OWORD *)(v13 + 64) = 0u;
  }

  else
  {
    *(void *)(v13 + 72) = v15;
    uint64_t v16 = sub_649C(v14);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v16, v11, v15);
  }

  *(void *)(v13 + 80) = 0x6D754E656E6F6870LL;
  *(void *)(v13 + 88) = 0xEB00000000726562LL;
  if (a2)
  {
    uint64_t v17 = type metadata accessor for DialogPhoneNumber(0LL);
    uint64_t v18 = a2;
  }

  else
  {
    uint64_t v18 = 0LL;
    uint64_t v17 = 0LL;
    *(void *)(v13 + 104) = 0LL;
    *(void *)(v13 + 112) = 0LL;
  }

  *(void *)(v13 + 96) = v18;
  *(void *)(v13 + 120) = v17;
  *(void *)(v13 + 128) = 0x65746973626577LL;
  *(void *)(v13 + 136) = 0xE700000000000000LL;
  sub_7DAC(a3, (uint64_t)v9, &qword_78970);
  if (sub_5FE0((uint64_t)v9, 1LL, v15) == 1)
  {
    swift_retain(a2);
    sub_7784((uint64_t)v9, &qword_78970);
    *(_OWORD *)(v13 + 144) = 0u;
    *(_OWORD *)(v13 + 160) = 0u;
  }

  else
  {
    *(void *)(v13 + 168) = v15;
    uint64_t v19 = sub_649C((void *)(v13 + 144));
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v19, v9, v15);
    swift_retain(a2);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000024LL, 0x800000000005B0D0LL, v13);
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_B864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_B8B4(a1, a2, a3);
}

uint64_t sub_B8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_7DAC(a1, (uint64_t)v12, (uint64_t *)&unk_7AE80);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v13 = CATWrapper.init(templateDir:options:globals:)(v12, v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_7784(a1, (uint64_t *)&unk_7AE80);
  return v13;
}

uint64_t sub_B9C8()
{
  return type metadata accessor for EmergencyErrorsCATs(0LL);
}

uint64_t sub_B9D0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v144 = *(void *)(v4 - 8);
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v6);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v7);
  v151 = (char *)&v123 - v8;
  type metadata accessor for EmergencyNLIntent(0LL);
  sub_EDD8();
  __chkstk_darwin(v9);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v10);
  uint64_t v12 = sub_EE14((uint64_t)&v123 - v11);
  uint64_t v141 = type metadata accessor for NLIntent(v12);
  uint64_t v140 = *(void *)(v141 - 8);
  sub_EDD8();
  __chkstk_darwin(v13);
  sub_6750();
  uint64_t v15 = sub_EE14(v14);
  type metadata accessor for Siri_Nlu_External_UserParse(v15);
  sub_EDD8();
  __chkstk_darwin(v16);
  uint64_t v17 = sub_EE2C();
  type metadata accessor for EmergencyDialogAct(v17);
  sub_EDD8();
  __chkstk_darwin(v18);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v19);
  uint64_t v21 = sub_EE14((uint64_t)&v123 - v20);
  uint64_t v130 = type metadata accessor for USOParse(v21);
  uint64_t v129 = *(void *)(v130 - 8);
  sub_EDD8();
  __chkstk_darwin(v22);
  sub_6750();
  uint64_t v24 = sub_EE14(v23);
  uint64_t v25 = type metadata accessor for Parse(v24);
  v153 = *(uint8_t **)(v25 - 8);
  v154 = (os_log_s *)v25;
  sub_EDD8();
  __chkstk_darwin(v26);
  sub_6750();
  uint64_t v152 = v27;
  uint64_t v28 = type metadata accessor for Input(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v30 = sub_EE48();
  uint64_t v31 = (os_log_s *)type metadata accessor for Logger(v30);
  uint64_t v32 = *((void *)v31 - 1);
  __chkstk_darwin(v31);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v33);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v34);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v35);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v36);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v37);
  sub_EE64();
  sub_ED8C();
  uint64_t v39 = __chkstk_darwin(v38);
  int v41 = (char *)&v123 - v40;
  uint64_t v42 = Logger.emergency.unsafeMutableAddressor(v39);
  sub_3CC8(v42, (uint64_t)v163);
  uint64_t v146 = v32;
  unint64_t v43 = *(void (**)(void, void, void))(v32 + 16);
  uint64_t v150 = v42;
  v155 = v31;
  v149 = v43;
  v43(v41, v42, v31);
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v147 = a1;
  uint64_t v45 = v44(v2, a1, v28);
  Logger.logObject.getter(v45);
  os_log_type_t v46 = sub_EEB4();
  if (os_log_type_enabled(v31, v46))
  {
    uint64_t v126 = v4;
    uint64_t v47 = sub_3CD4(12LL);
    uint64_t v125 = v1;
    uint64_t v48 = (uint8_t *)v47;
    uint64_t v49 = sub_3CD4(32LL);
    v156[0] = v49;
    *(_DWORD *)uint64_t v48 = 136315138;
    v124 = v48 + 4;
    sub_EF34( &qword_790C0,  v50,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v28, v51);
    unint64_t v54 = v53;
    uint64_t v161 = sub_543A4(v52, v53, v156);
    uint64_t v4 = v126;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, v162, v124, v48 + 12);
    swift_bridgeObjectRelease(v54);
    sub_EE94();
    sub_67F8(&dword_0, v31, v46, "#GeneralEmergencyFlow onInput: %s", v48);
    sub_67DC(v49);
    sub_3CA0(v49);
    uint64_t v55 = (uint64_t)v48;
    uint64_t v1 = v125;
    sub_3CA0(v55);
  }

  else
  {
    sub_EE94();
  }

  uint64_t v56 = *(os_log_s **)(v146 + 8);
  uint64_t v57 = sub_EE04((uint64_t)v41);
  uint64_t v58 = v152;
  Input.parse.getter(v57);
  unint64_t v59 = v154;
  int v60 = (*((uint64_t (**)(uint64_t, os_log_s *))v153 + 11))(v58, v154);
  uint64_t v61 = (uint64_t)v151;
  uint64_t v62 = v150;
  if (v60 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_EDF4();
    uint64_t v63 = v140;
    uint64_t v64 = v141;
    sub_EEAC(v148, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 32));
    sub_3CC8(v62, (uint64_t)v156);
    uint64_t v65 = v139;
    uint64_t v66 = sub_ED9C(v139);
    Logger.logObject.getter(v66);
    os_log_type_t v67 = sub_EEB4();
    if (sub_EDE4(v67))
    {
      uint64_t v68 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v68 = 0;
      sub_EDA8(&dword_0, v59, (os_log_type_t)v65, "GeneralEmergencyFlow onInput .NLv3IntentOnly", v68);
      sub_3CA0((uint64_t)v68);
    }

    sub_EE04(v65);
    uint64_t v69 = v142;
    uint64_t v70 = v148;
    sub_EEAC(v142, v148, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16));
    uint64_t v71 = v143;
    sub_EAC4(v69, v143, type metadata accessor for EmergencyNLIntent);
    v72 = (os_log_s *)sub_DC54(v71);
    sub_EF08(v69);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v70, v64);
    goto LABEL_26;
  }

  if (v60 == enum case for Parse.directInvocation(_:))
  {
    sub_EDF4();
    sub_EEAC(v61, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 32));
    sub_3CC8(v62, (uint64_t)v156);
    uint64_t v73 = v136;
    uint64_t v74 = sub_ED9C(v136);
    Logger.logObject.getter(v74);
    os_log_type_t v75 = sub_EEB4();
    if (sub_EDE4(v75))
    {
      uint64_t v76 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v76 = 0;
      sub_EDA8(&dword_0, v59, (os_log_type_t)v73, "GeneralEmergencyFlow onInput .directInvocation", v76);
      sub_3CA0((uint64_t)v76);
    }

    uint64_t v77 = sub_EE04(v73);
    uint64_t v78 = Parse.DirectInvocation.identifier.getter(v77);
    uint64_t v80 = (os_log_s *)v79;
    if (v78 == 0xD000000000000035LL && v79 == 0x800000000005B1B0LL)
    {
      swift_bridgeObjectRelease(0x800000000005B1B0LL);
    }

    else
    {
      char v92 = sub_EF1C(v78, v79, 53LL, 0x800000000005B1B0LL);
      swift_bridgeObjectRelease(v80);
      if ((v92 & 1) == 0) {
        goto LABEL_20;
      }
    }

    uint64_t v93 = sub_28990(v61);
    if (v93 != 35)
    {
      v72 = (os_log_s *)GeneralEmergencyIntent.init(emergencySituation:)(v93);
      (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v61, v4);
      goto LABEL_26;
    }

LABEL_20:
    sub_3CC8(v62, (uint64_t)&v161);
    uint64_t v94 = v134;
    sub_ED9C(v134);
    uint64_t v95 = v144;
    v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 16);
    uint64_t v97 = v133;
    uint64_t v98 = v96(v133, v61, v4);
    Logger.logObject.getter(v98);
    os_log_type_t v99 = sub_EF3C();
    if (sub_EE8C(v80))
    {
      v154 = v56;
      uint64_t v100 = v97;
      v101 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v102 = sub_3CD4(32LL);
      uint64_t v157 = v102;
      uint64_t v103 = v4;
      *(_DWORD *)v101 = 136315138;
      v153 = v101 + 4;
      uint64_t v104 = v127;
      v96(v127, v100, v4);
      uint64_t v105 = String.init<A>(describing:)(v104);
      uint64_t v160 = sub_543A4(v105, v106, &v157);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161, v153, v101 + 12);
      sub_EEE8();
      v107 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
      v107(v100, v103);
      sub_67F8(&dword_0, v80, v99, "Failed to get emergencySituation from DirectInvocation: %s", v101);
      sub_67DC(v102);
      sub_3CA0(v102);
      sub_3CA0((uint64_t)v101);

      ((void (*)(uint64_t, os_log_s *))v154)(v134, v155);
      v107(v61, v103);
    }

    else
    {

      v122 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
      v122(v97, v4);
      sub_EE04(v94);
      v122(v61, v4);
    }

    return 0LL;
  }

  if (v60 != enum case for Parse.uso(_:))
  {
    sub_3CC8(v150, (uint64_t)v156);
    uint64_t v108 = v128;
    uint64_t v109 = sub_ED9C(v128);
    Logger.logObject.getter(v109);
    os_log_type_t v110 = sub_EF3C();
    if (os_log_type_enabled(v59, v110))
    {
      v111 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v112 = sub_3CD4(32LL);
      uint64_t v161 = v112;
      *(_DWORD *)v111 = 136315138;
      LOBYTE(v157) = 0;
      uint64_t v113 = String.init<A>(describing:)(&v157);
      uint64_t v157 = sub_543A4(v113, v114, &v161);
      uint64_t v58 = v152;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, v158, v111 + 4, v111 + 12);
      sub_EEE8();
      sub_67F8(&dword_0, v59, v110, "%s", v111);
      sub_67DC(v112);
      sub_3CA0(v112);
      sub_3CA0((uint64_t)v111);
    }

    sub_EE04(v108);
    (*((void (**)(uint64_t, os_log_s *))v153 + 1))(v58, v154);
    return 0LL;
  }

  sub_EDF4();
  uint64_t v81 = v129;
  uint64_t v82 = v130;
  sub_EEAC(v137, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 32));
  sub_3CC8(v62, (uint64_t)&v157);
  os_log_type_t v83 = v135;
  uint64_t v84 = sub_ED9C(v135);
  Logger.logObject.getter(v84);
  os_log_type_t v85 = sub_EEB4();
  if (sub_EDE4(v85))
  {
    uint64_t v86 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v86 = 0;
    sub_EDA8(&dword_0, v59, v83, "#GeneralEmergencyFlow onInput .uso", v86);
    sub_3CA0((uint64_t)v86);
  }

  uint64_t v87 = sub_EE04(v135);
  uint64_t v88 = v137;
  USOParse.userParse.getter(v87);
  v156[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
  v156[4] = sub_EA88();
  LOBYTE(v156[0]) = 2;
  char v89 = isFeatureEnabled(_:)(v156);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v156);
  uint64_t v90 = v131;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v1, v89 & 1);
  uint64_t v91 = v132;
  sub_EAC4(v90, v132, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  v72 = (os_log_s *)sub_DA04(v91);
  sub_EAF0(v90, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v88, v82);
LABEL_26:
  if (v72 == 35)
  {
    sub_3CC8(v62, (uint64_t)&v161);
    uint64_t v115 = sub_ED9C(v145);
    Logger.logObject.getter(v115);
    os_log_type_t v116 = sub_EF3C();
    if (sub_EE8C(v72))
    {
      v117 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v118 = sub_3CD4(32LL);
      uint64_t v160 = v118;
      *(_DWORD *)v117 = 136315138;
      LOBYTE(v159) = 0;
      uint64_t v119 = String.init<A>(describing:)(&v159);
      uint64_t v159 = sub_543A4(v119, v120, &v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160, v117 + 4, v117 + 12);
      sub_EEE8();
      sub_67F8(&dword_0, v72, v116, "%s", v117);
      sub_67DC(v118);
      sub_3CA0(v118);
      sub_3CA0((uint64_t)v117);
    }

    sub_EE04(v145);
    return 0LL;
  }

  *(_BYTE *)(v138 + 216) = (_BYTE)v72;
  return 1LL;
}

    unint64_t v43 = 0LL;
    goto LABEL_22;
  }

    unint64_t v43 = 0LL;
    goto LABEL_22;
  }

uint64_t sub_C5D4(uint64_t a1)
{
  v2[136] = v1;
  v2[135] = a1;
  uint64_t v3 = sub_3974(&qword_78958);
  v2[137] = sub_9E84(v3);
  uint64_t v4 = type metadata accessor for OutputFlow(0LL);
  v2[138] = v4;
  v2[139] = sub_9E84(v4);
  uint64_t v5 = type metadata accessor for DeviceRestrictions(0LL);
  v2[140] = v5;
  v2[141] = *(void *)(v5 - 8);
  v2[142] = sub_45A0();
  v2[143] = sub_45A0();
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v2[144] = v6;
  v2[145] = *(void *)(v6 - 8);
  v2[146] = sub_45A0();
  v2[147] = sub_45A0();
  v2[148] = sub_45A0();
  v2[149] = sub_45A0();
  v2[150] = sub_45A0();
  return sub_451C();
}

uint64_t sub_C6A8(uint64_t a1)
{
  uint64_t v3 = *(os_log_s **)(v1 + 1200);
  uint64_t v4 = *(void *)(v1 + 1160);
  uint64_t v5 = *(void *)(v1 + 1152);
  uint64_t v6 = Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 1208) = v6;
  sub_3CC8(v6, v1 + 984);
  uint64_t v7 = *(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v1 + 1216) = v7;
  uint64_t v8 = v7(v3, v6, v5);
  uint64_t v9 = v3;
  Logger.logObject.getter(v8);
  os_log_type_t v10 = sub_67D4();
  if (sub_6728(v10))
  {
    uint64_t v11 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v11 = 0;
    sub_EDA8(&dword_0, v3, (os_log_type_t)v3, "#GeneralEmergencyFlow execute", v11);
    sub_3CA0((uint64_t)v11);
  }

  uint64_t v12 = *(void *)(v1 + 1200);
  uint64_t v13 = *(void *)(v1 + 1160);
  uint64_t v14 = *(void *)(v1 + 1152);
  uint64_t v15 = *(unsigned __int8 **)(v1 + 1088);

  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  *(void *)(v1 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v16;
  uint64_t v17 = v16(v12, v14);
  uint64_t v18 = v15[216];
  if ((_DWORD)v18 == 36)
  {
    static ExecuteResponse.complete()(v17);
    goto LABEL_19;
  }

  if ((_DWORD)v18 == 35)
  {
    uint64_t v6 = *(void *)(v1 + 1088);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 1080);
    unint64_t v19 = sub_E94C();
    uint64_t v12 = swift_allocError(&type metadata for EmergencyFlowError, v19, 0LL, 0LL);
    *uint64_t v20 = 2;
    sub_30F8(v12, v6 + 16, (void *)(v6 + 56), (uint64_t)v16);
    swift_errorRelease(v12);
LABEL_19:
    sub_EDB0();
    swift_task_dealloc(v16);
    swift_task_dealloc(v12);
    swift_task_dealloc(v6);
    swift_task_dealloc(v14);
    swift_task_dealloc(v18);
    swift_task_dealloc(v15);
    swift_task_dealloc(v7);
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v21 = *(void *)(v1 + 1144);
  uint64_t v2 = *(void *)(v1 + 1136);
  uint64_t v74 = v7;
  uint64_t v75 = *(void *)(v1 + 1128);
  uint64_t v22 = *(void *)(v1 + 1120);
  uint64_t v23 = *(void **)(v1 + 1088);
  uint64_t v25 = v23[5];
  uint64_t v24 = v23[6];
  uint64_t v72 = (uint64_t)(v23 + 2);
  uint64_t v73 = v16;
  sub_3324(v23 + 2, v25);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v24);
  uint64_t v26 = *(void *)(v1 + 904);
  uint64_t v27 = *(void *)(v1 + 912);
  sub_3324((void *)(v1 + 880), v26);
  uint64_t v28 = dispatch thunk of DeviceState.restrictions.getter(v26, v27);
  static DeviceRestrictions.phoneFeaturesUnavailable.getter(v28);
  sub_EF34( &qword_79090,  v29,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceRestrictions,  (uint64_t)&protocol conformance descriptor for DeviceRestrictions);
  char v31 = dispatch thunk of SetAlgebra.isSuperset(of:)(v2, v22, v30);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  v32(v2, v22);
  v32(v21, v22);
  if ((v31 & 1) != 0)
  {
    uint64_t v7 = (uint64_t (*)(os_log_s *, uint64_t, uint64_t))v72;
    uint64_t v18 = v1 + 656;
    uint64_t v33 = *(os_log_s **)(v1 + 1192);
    uint64_t v34 = *(void *)(v1 + 1152);
    sub_3CC8(v6, v1 + 1056);
    uint64_t v35 = v74(v33, v6, v34);
    Logger.logObject.getter(v35);
    os_log_type_t v36 = sub_67D4();
    if (sub_EE8C(v33))
    {
      uint64_t v37 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v37 = 0;
      sub_EDA8(&dword_0, v33, v36, "#GeneralEmergencyFlow phoneFeaturesUnavailable, routing to CannedHelp instead", v37);
      sub_3CA0((uint64_t)v37);
    }

    uint64_t v12 = *(void *)(v1 + 1192);
    uint64_t v6 = *(void *)(v1 + 1152);
    uint64_t v14 = *(void *)(v1 + 1088);
    uint64_t v15 = *(unsigned __int8 **)(v1 + 1080);

    sub_EECC(v38, v39, v40, v41, v42, v43, v44, v45, v72, v73);
    os_log_type_t v46 = sub_3324((void *)(v14 + 56), *(void *)(v14 + 80));
    sub_EE24((void *)(v1 + 656), v46);
    sub_4C090();
    uint64_t v16 = v47;
    static ExecuteResponse.complete(next:)(v47);
    sub_EE0C();
LABEL_18:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v1 + 880));
    goto LABEL_19;
  }

  uint64_t v48 = EmergencySituation.rawValue.getter(v18);
  uint64_t v50 = v49;
  if (v48 == 0xD00000000000001ALL && v49 == 0x800000000005B190LL)
  {
    swift_bridgeObjectRelease(0x800000000005B190LL);
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74;
LABEL_15:
    uint64_t v53 = *(void *)(v1 + 1184);
    uint64_t v54 = *(void *)(v1 + 1152);
    sub_3CC8(v6, v1 + 1032);
    uint64_t v55 = v51(v53, v6, v54);
    uint64_t v15 = (unsigned __int8 *)Logger.logObject.getter(v55);
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (sub_EE8C((os_log_s *)v15))
    {
      uint64_t v57 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v57 = 0;
      sub_EDA8(&dword_0, (os_log_s *)v15, v56, "#GeneralEmergencyFlow Providing Low Risk response", v57);
      sub_3CA0((uint64_t)v57);
    }

    uint64_t v12 = *(void *)(v1 + 1184);
    uint64_t v6 = *(void *)(v1 + 1152);
    uint64_t v14 = *(void *)(v1 + 1112);
    uint64_t v18 = *(void *)(v1 + 1104);
    uint64_t v7 = *(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v1 + 1080);

    sub_EECC(v58, v59, v60, v61, v62, v63, v64, v65, v72, v73);
    sub_CFB8();
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for OutputFlow;
    sub_EF28(&qword_78960, v66, v67, (uint64_t)&protocol conformance descriptor for OutputFlow);
    static ExecuteResponse.complete<A>(next:)(v14, v18, v68);
    sub_EF08(v14);
    goto LABEL_18;
  }

  char v52 = sub_EF1C(v48, v49, 26LL, 0x800000000005B190LL);
  swift_bridgeObjectRelease(v50);
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v74;
  if ((v52 & 1) != 0) {
    goto LABEL_15;
  }
  uint64_t v70 = *(void *)(v1 + 1088) + 136LL;
  uint64_t v71 = (void *)swift_task_alloc(dword_7964C);
  *(void *)(v1 + 1232) = v71;
  *uint64_t v71 = v1;
  v71[1] = sub_CBA8;
  return sub_145A8(v1 + 272, v70, v18, 4);
}

uint64_t sub_CBA8()
{
  return sub_451C();
}

uint64_t sub_CBF4()
{
  uint64_t v1 = (void *)(v0 + 272);
  uint64_t v38 = (void *)(v0 + 880);
  sub_E3F0(v0 + 272, v0 + 528);
  int v2 = sub_E438(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 1208);
  uint64_t v4 = *(void *)(v0 + 1152);
  if (v2 == 1)
  {
    uint64_t v35 = (void *)(v0 + 768);
    uint64_t v36 = v0 + 144;
    uint64_t v37 = v0 + 920;
    uint64_t v5 = *(void *)(v0 + 1168);
    sub_3CC8(v3, v0 + 960);
    uint64_t v6 = sub_EF10(v5);
    uint64_t v7 = (os_log_s *)v5;
    Logger.logObject.getter(v6);
    os_log_type_t v8 = sub_67D4();
    if (sub_6728(v8))
    {
      uint64_t v9 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v9 = 0;
      sub_EDA8( &dword_0,  v7,  (os_log_type_t)v4,  "#GeneralEmergencyFlow No orgInfo found for language/locale. Presenting generic offerEmergencyCall button.",  v9);
      sub_3CA0((uint64_t)v9);
    }

    os_log_type_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1224);
    uint64_t v11 = *(void *)(v0 + 1168);
    uint64_t v12 = *(void *)(v0 + 1152);
    uint64_t v13 = *(void *)(v0 + 1112);
    uint64_t v14 = *(void *)(v0 + 1096);
    uint64_t v15 = *(void *)(v0 + 1088);
    uint64_t v34 = *(void *)(v0 + 1104);

    uint64_t v16 = v15 + 16;
    v10(v11, v12);
    sub_E450((_OWORD *)(v0 + 400));
    sub_E3F0(v0 + 400, v36);
    uint64_t v17 = sub_EEF0();
    uint64_t v18 = (void (*)(uint64_t, uint64_t))(v0 + 768);
    sub_EE24(v35, v17);
    uint64_t v19 = v0 + 880;
    uint64_t v1 = sub_E468(v36, v38, v35);
    sub_EEF0();
    sub_EEA4();
    sub_238EC();
    sub_EE0C();
    sub_60A4(v15 + 16, v37);
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v14, v1, v37, 0LL);
    uint64_t v20 = &type metadata accessor for OutputFlow;
    sub_EF28(&qword_78960, v21, v22, (uint64_t)&protocol conformance descriptor for OutputFlow);
    static ExecuteResponse.complete<A>(next:)(v13, v34, v23);
    sub_EF08(v13);
    uint64_t v24 = (void *)(v0 + 880);
  }

  else
  {
    uint64_t v19 = v0 + 16;
    uint64_t v25 = *(os_log_s **)(v0 + 1176);
    sub_EE84((void *)(v0 + 16), (const void *)(v0 + 528));
    sub_3CC8(v3, v0 + 1008);
    uint64_t v26 = sub_EF10((uint64_t)v25);
    uint64_t v27 = v25;
    Logger.logObject.getter(v26);
    os_log_type_t v28 = sub_67D4();
    if (sub_6728(v28))
    {
      uint64_t v29 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v29 = 0;
      sub_EDA8(&dword_0, v25, (os_log_type_t)v4, "#GeneralEmergencyFlow Providing High Risk response", v29);
      sub_3CA0((uint64_t)v29);
    }

    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 1224);
    uint64_t v30 = *(void *)(v0 + 1176);
    uint64_t v16 = *(void *)(v0 + 1152);
    uint64_t v14 = *(void *)(v0 + 1096);
    char v31 = *(void **)(v0 + 1088);
    uint64_t v15 = *(void *)(v0 + 1080);

    v18(v30, v16);
    sub_3324(v31 + 7, v31[10]);
    sub_EEA4();
    uint64_t v13 = v0 + 880;
    char v32 = sub_4808C(v38);
    sub_25CB4(v32 & 1);
    sub_EE0C();
    sub_3324(v31 + 22, v31[25]);
    uint64_t v20 = (void *)sub_D35C((void *)(v0 + 16), v14);
    sub_E864((uint64_t *)(v0 + 272));
    static ExecuteResponse.complete(next:)(v20);
    sub_EE0C();
    sub_E988(v14, &qword_78958);
    uint64_t v24 = (void *)(v0 + 880);
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v24);
  sub_EDB0();
  swift_task_dealloc(v20);
  swift_task_dealloc(v14);
  swift_task_dealloc(v1);
  swift_task_dealloc(v19);
  swift_task_dealloc(v15);
  swift_task_dealloc(v13);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_CF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeneralEmergencyFlow();
  sub_EB44( &qword_79088,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for GeneralEmergencyFlow,  (uint64_t)&unk_5752C);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_CFB8()
{
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v4 = sub_EEDC();
  sub_EE24(v9, v4);
  uint64_t v5 = sub_DF90((void *)(v0 + 16), v9);
  sub_EEDC();
  sub_EEA4();
  sub_25D54();
  sub_EE0C();
  sub_60A4(v0 + 16, (uint64_t)v8);
  return OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v3, v5, v8, 0LL);
}

void *sub_D084()
{
  return v0;
}

uint64_t sub_D0C0()
{
  return swift_deallocClassInstance(v0, 217LL, 7LL);
}

uint64_t type metadata accessor for GeneralEmergencyFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin20GeneralEmergencyFlow);
}

uint64_t getEnumTagSinglePayload for GeneralEmergencyFlow.GeneralEmergencyFlowState( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xDC)
  {
    unsigned int v6 = *a1;
    if (v6 >= 0x23) {
      unsigned int v7 = v6 - 34;
    }
    else {
      unsigned int v7 = 0;
    }
    if (v7 >= 3) {
      return v7 - 2;
    }
    else {
      return 0LL;
    }
  }

  else
  {
    unsigned int v2 = a2 + 36;
    if (a2 + 36 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_D150 + 4 * byte_57460[v4]))();
  }

uint64_t storeEnumTagSinglePayload for GeneralEmergencyFlow.GeneralEmergencyFlowState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 36;
  if (a3 + 36 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    LODWORD(v5) = v4;
  }
  else {
    LODWORD(v5) = 0;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xDB) {
    return ((uint64_t (*)(void))((char *)&loc_D1FC + 4 * byte_5746A[v5]))();
  }
  *a1 = a2 + 36;
  return ((uint64_t (*)(void))((char *)sub_D230 + 4 * byte_57465[v5]))();
}

uint64_t sub_D230(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_D238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xD240LL);
  }
  return result;
}

uint64_t sub_D24C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xD254LL);
  }
  *(_BYTE *)uint64_t result = a2 + 36;
  return result;
}

uint64_t sub_D258(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D260(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_D26C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x23) {
    return v1 - 34;
  }
  else {
    return 0LL;
  }
}

_BYTE *sub_D280(_BYTE *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 34;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeneralEmergencyFlow.GeneralEmergencyFlowState()
{
  return &type metadata for GeneralEmergencyFlow.GeneralEmergencyFlowState;
}

uint64_t sub_D2A0(uint64_t a1)
{
  return sub_B9D0(a1) & 1;
}

uint64_t sub_D2C4(uint64_t a1, uint64_t a2)
{
  return sub_CF48(a1, a2);
}

uint64_t sub_D2E4(uint64_t a1)
{
  unsigned int v3 = (void *)swift_task_alloc(dword_78F94);
  *(void *)(v1 + 16) = v3;
  *unsigned int v3 = v1;
  v3[1] = sub_5F44;
  return sub_C5D4(a1);
}

uint64_t sub_D338(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GeneralEmergencyFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_D35C(void *a1, uint64_t a2)
{
  uint64_t v8 = sub_EE48();
  uint64_t v9 = type metadata accessor for OutputFlow(v8);
  sub_EDD8();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_EE2C();
  uint64_t v12 = type metadata accessor for Logger(v11);
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  sub_EDD8();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (os_log_s *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v14);
  uint64_t v18 = (os_log_s *)((char *)&v56 - v17);
  uint64_t v64 = v2;
  sub_D830(a1, a2, (uint64_t)&v70);
  if (v71)
  {
    uint64_t v19 = a1;
    uint64_t v20 = sub_65A4(&v70, (uint64_t)v69);
    uint64_t v21 = Logger.emergency.unsafeMutableAddressor(v20);
    sub_3CC8(v21, (uint64_t)&v67);
    uint64_t v23 = v62;
    uint64_t v22 = v63;
    uint64_t v24 = sub_EEFC((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16));
    Logger.logObject.getter(v24);
    os_log_type_t v25 = sub_67D4();
    if (os_log_type_enabled(v18, v25))
    {
      uint64_t v26 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v26 = 0;
      sub_EDA8(&dword_0, v18, v25, "#GeneralEmergencyFlow preparing for confirmation", v26);
      sub_3CA0((uint64_t)v26);
    }

    (*(void (**)(os_log_s *, uint64_t))(v23 + 8))(v18, v22);
    sub_60A4((uint64_t)v69, (uint64_t)v72);
    uint64_t v27 = v64;
    sub_60A4((uint64_t)v64, (uint64_t)v68);
    sub_60A4((uint64_t)(v27 + 5), (uint64_t)v66);
    sub_60E4((uint64_t)(v27 + 10), (uint64_t)v65);
    uint64_t v28 = sub_6120((uint64_t)v72, v72[3]);
    __chkstk_darwin(v28);
    uint64_t v30 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v31 + 16))(v30);
    uint64_t v32 = sub_6120((uint64_t)v66, v66[3]);
    __chkstk_darwin(v32);
    uint64_t v34 = (char *)&v56 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v35 + 16))(v34);
    sub_EE24(&v70, v34);
    sub_6408(v19);
    uint64_t v36 = sub_54D28(v19, (uint64_t)v30, v68, &v70, (uint64_t)v65, 0, 0LL, 0LL);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v66);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v72);
    v72[0] = v36;
    uint64_t v37 = type metadata accessor for EmergencyConfirmationFlow();
    sub_EF34( &qword_78B38,  v38,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
    uint64_t v39 = Flow.eraseToAnyFlow()(v37);
    swift_release(v36);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v69);
  }

  else
  {
    uint64_t v57 = v4;
    uint64_t v58 = v3;
    uint64_t v59 = a2;
    uint64_t v60 = v9;
    uint64_t v61 = a1;
    sub_E988((uint64_t)&v70, &qword_790A8);
    uint64_t v41 = Logger.emergency.unsafeMutableAddressor(v40);
    sub_3CC8(v41, (uint64_t)v66);
    uint64_t v43 = v62;
    uint64_t v42 = v63;
    uint64_t v44 = sub_EEFC((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16));
    Logger.logObject.getter(v44);
    os_log_type_t v45 = sub_67D4();
    if (os_log_type_enabled(v16, v45))
    {
      os_log_type_t v46 = (uint8_t *)sub_8D14();
      *(_WORD *)os_log_type_t v46 = 0;
      sub_EDA8(&dword_0, v16, v45, "#GeneralEmergencyFlow preparing promptless output", v46);
      sub_3CA0((uint64_t)v46);
    }

    (*(void (**)(os_log_s *, uint64_t))(v43 + 8))(v16, v42);
    sub_EE84(v69, v73);
    nullsub_1(v69);
    sub_E3F0((uint64_t)v69, (uint64_t)&v70);
    uint64_t v47 = v64;
    uint64_t v48 = v64[3];
    uint64_t v49 = v64[4];
    sub_3324(v64, v48);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v49 + 8))(v68, v48, v49);
    uint64_t v50 = sub_3324(v47 + 5, v47[8]);
    sub_EE24(v72, v50);
    uint64_t v51 = sub_E468((uint64_t)&v70, v68, v72);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v68);
    uint64_t v52 = v57;
    sub_3B20(v59, v57);
    sub_60A4((uint64_t)v47, (uint64_t)v68);
    uint64_t v53 = EmergencyOrganizationInfo.asRREntities()();
    uint64_t v54 = v58;
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v52, v51, v68, v53);
    sub_EB44( &qword_78960,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
    uint64_t v39 = Flow.eraseToAnyFlow()(v60);
    sub_EAF0(v54, (uint64_t (*)(void))&type metadata accessor for OutputFlow);
  }

  return v39;
}

uint64_t sub_D830@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (uint64_t)v3;
  sub_EE84(v25, a1);
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  sub_3324(v3, v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v22, v8, v9);
  uint64_t v10 = v23;
  uint64_t v11 = v24;
  sub_3324(v22, v23);
  LOBYTE(v10) = DeviceState.isVox.getter(v10, v11);
  sub_60A4((uint64_t)v22, (uint64_t)v21);
  if ((v10 & 1) == 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v21);
    goto LABEL_5;
  }

  char v12 = sub_4808C(v21);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v21);
  if ((v12 & 1) == 0)
  {
LABEL_5:
    *(void *)(a3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
  }

  sub_60A4(v4, (uint64_t)v17);
  sub_60A4(v4 + 40, (uint64_t)&v18);
  sub_EE84(v20, v25);
  sub_E9B0((uint64_t)v20);
  sub_E9BC(v20, &v19);
  sub_6408(a1);
  sub_E9F8();
  uint64_t v13 = Flow.eraseToAnyFlow()(&type metadata for CallFlow);
  sub_EA34((uint64_t)v17);
  sub_3324((void *)(v4 + 40), *(void *)(v4 + 64));
  uint64_t v14 = (int *)type metadata accessor for ConfirmationFlowConfigModel(0LL);
  *(void *)(a3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v14;
  *(void *)(a3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &off_6F450;
  uint64_t v15 = sub_649C((void *)a3);
  sub_EEA4();
  sub_2396C();
  sub_EE0C();
  sub_3B20(a2, (uint64_t)v15);
  *(void *)((char *)v15 + v14[6]) = v13;
  *(void *)((char *)v15 + v14[7]) = 2LL;
  *((_BYTE *)v15 + v14[8]) = 0;
  *((_BYTE *)v15 + v14[9]) = 1;
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
}

uint64_t sub_DA04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for EmergencyDialogAct(0LL);
  v30[3] = v6;
  v30[4] = &protocol witness table for EmergencyDialogAct;
  uint64_t v7 = sub_649C(v30);
  sub_EB18(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  uint64_t v9 = Logger.emergency.unsafeMutableAddressor(v8);
  swift_beginAccess(v9, v29, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_60A4((uint64_t)v30, (uint64_t)v28);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v24 = v6;
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v14 = swift_slowAlloc(32LL, -1LL);
    uint64_t v23 = v7;
    uint64_t v15 = v14;
    uint64_t v27 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_60A4((uint64_t)v28, (uint64_t)&v25);
    sub_3974(&qword_790C8);
    uint64_t v16 = String.init<A>(describing:)(&v25);
    unint64_t v18 = v17;
    uint64_t v25 = sub_543A4(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v13 + 4, v13 + 12);
    unint64_t v19 = v18;
    uint64_t v6 = v24;
    swift_bridgeObjectRelease(v19);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v28);
    _os_log_impl(&dword_0, v11, v12, "Converting EmergencyDialogAct to GeneralEmergencyIntent: %s", v13, 0xCu);
    swift_arrayDestroy(v15, 1LL);
    uint64_t v20 = v15;
    uint64_t v7 = v23;
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v28);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v21 = GeneralEmergencyIntent.init(emergencySituation:)(*((unsigned __int8 *)v7 + *(int *)(v6 + 24)));
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v30);
  return v21;
}

uint64_t sub_DC54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for EmergencyNLIntent(0LL);
  uint64_t v37 = v6;
  sub_EB44(&qword_790D0, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
  uint64_t v38 = v7;
  uint64_t v8 = sub_649C(v36);
  sub_EB18(a1, (uint64_t)v8, type metadata accessor for EmergencyNLIntent);
  uint64_t v10 = Logger.emergency.unsafeMutableAddressor(v9);
  swift_beginAccess(v10, v35, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  sub_60A4((uint64_t)v36, (uint64_t)v34);
  os_log_type_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v31 = v2;
    uint64_t v14 = swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = v3;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v28 = v15 + 4;
    uint64_t v16 = sub_3324(v34, v34[3]);
    __chkstk_darwin(v16);
    unint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v19 + 16))(v18);
    uint64_t v20 = sub_449C4();
    unint64_t v22 = v21;
    sub_EAF0((uint64_t)v18, type metadata accessor for EmergencyNLIntent);
    uint64_t v32 = sub_543A4(v20, v22, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v28, v15 + 12);
    swift_bridgeObjectRelease(v22);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v34);
    _os_log_impl(&dword_0, v12, v13, "Converting EmergencyNLIntent: %s", v15, 0xCu);
    uint64_t v23 = v29;
    swift_arrayDestroy(v29, 1LL);
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v34);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  sub_3324(v36, v37);
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  uint64_t v24 = qword_78CC0;
  sub_EB44(&qword_78D98, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  IntentNodeTraversable.value<A>(forNode:)(v24, v6, v25);
  uint64_t v26 = GeneralEmergencyIntent.init(emergencySituation:)(LOBYTE(v34[0]));
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v36);
  return v26;
}

void *sub_DF90(void *a1, void *a2)
{
  void (*v18)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_s *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void v46[3];
  uint64_t v47;
  uint64_t v48;
  void v49[3];
  ValueMetadata *v50;
  _UNKNOWN **v51;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_3974(&qword_78958);
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v50 = &type metadata for EmergencyCATProvider;
  uint64_t v51 = &off_6FB48;
  v49[0] = swift_allocObject(&unk_6DC08, 128LL, 7LL);
  memcpy((void *)(v49[0] + 16LL), a2, 0x70uLL);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_3324(a1, v16);
  unint64_t v18 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 8);
  sub_3A40(a2);
  v18(v46, v16, v17);
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  sub_3324(v46, v47);
  if ((dispatch thunk of DeviceState.isPhone.getter(v19, v20) & 1) == 0)
  {
LABEL_9:
    uint64_t v33 = &_swiftEmptyArrayStorage;
    goto LABEL_10;
  }

  unint64_t v21 = sub_3324(v49, (uint64_t)&type metadata for EmergencyCATProvider)[1];
  swift_retain(v21);
  sub_235B8();
  swift_release(v21);
  unint64_t v22 = Result<>.firstPrint.getter(v10);
  uint64_t v24 = v23;
  sub_E988((uint64_t)v15, &qword_78958);
  if (!v24)
  {
LABEL_6:
    uint64_t v34 = Logger.emergency.unsafeMutableAddressor(v25);
    swift_beginAccess(v34, &v45, 0LL, 0LL);
    uint64_t v36 = v43;
    uint64_t v35 = v44;
    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 16))(v6, v34, v44);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    uint64_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_0, v38, v39, "#GeneralEmergencyFlow Failed to execute goToWebsiteButtonLabel CATs", v40, 2u);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v35);
    goto LABEL_9;
  }

  uint64_t v26 = sub_3324(v49, (uint64_t)v50)[10];
  swift_retain(v26);
  sub_25D74();
  swift_release(v26);
  uint64_t v27 = Result<>.firstPrint.getter(v10);
  uint64_t v29 = v28;
  sub_E988((uint64_t)v13, &qword_78958);
  if (!v29)
  {
    uint64_t v25 = swift_bridgeObjectRelease(v24);
    goto LABEL_6;
  }

  sub_E3B4();
  URL.init(string:)(v27, v29);
  swift_bridgeObjectRelease(v29);
  uint64_t v30 = sub_28710(v22, v24, (uint64_t)v9);
  uint64_t v31 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v32 = swift_allocObject(v31, 40LL, 7LL);
  *(_OWORD *)(v32 + 16) = xmmword_56DC0;
  *(void *)(v32 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v30;
  os_log_type_t v45 = (void *)v32;
  specialized Array._endMutation()();
  uint64_t v33 = v45;
LABEL_10:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v46);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v49);
  return v33;
}

uint64_t sub_E328()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

unint64_t sub_E3B4()
{
  unint64_t result = qword_7AE90;
  if (!qword_7AE90)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAUIButton);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7AE90);
  }

  return result;
}

uint64_t sub_E3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974(&qword_79098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_E438(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_E450(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void *sub_E468(uint64_t a1, void *a2, void *a3)
{
  uint64_t v45 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974(&qword_78958);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v40 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - v13;
  v47[3] = &type metadata for EmergencyCATProvider;
  v47[4] = &off_6FB48;
  v47[0] = swift_allocObject(&unk_6DC08, 128LL, 7LL);
  memcpy((void *)(v47[0] + 16LL), a3, 0x70uLL);
  uint64_t v16 = a2[3];
  uint64_t v15 = a2[4];
  sub_3324(a2, v16);
  sub_3A40(a3);
  char v17 = dispatch thunk of DeviceState.isWatch.getter(v16, v15);
  unint64_t v18 = sub_3324(v47, (uint64_t)&type metadata for EmergencyCATProvider);
  if ((v17 & 1) != 0)
  {
    uint64_t v19 = v18[1];
    swift_retain(v19);
    sub_23538();
  }

  else
  {
    uint64_t v19 = v18[10];
    swift_retain(v19);
    sub_25C94();
  }

  swift_release(v19);
  uint64_t v20 = Result<>.firstPrint.getter(v7);
  if (v21)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v21;
    sub_E3F0(v45, (uint64_t)v48);
    if (sub_E438((uint64_t)v48) == 1)
    {
      sub_EA68((uint64_t)__dst);
    }

    else
    {
      memcpy(__dst, v48, 0x80uLL);
      sub_E9B0((uint64_t)__dst);
    }

    sub_E9BC(__dst, v46);
    sub_E9BC(v46, __dst);
    sub_40398(__dst, a2, v22, v23);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease(v23);
  }

  else
  {
    uint64_t v24 = Logger.emergency.unsafeMutableAddressor(v20);
    swift_beginAccess(v24, __dst, 0LL, 0LL);
    uint64_t v26 = v42;
    uint64_t v25 = v43;
    uint64_t v27 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v24, v44);
    uint64_t v28 = sub_3B20((uint64_t)v14, (uint64_t)v12);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      v46[0] = v45;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v32 = v41;
      sub_3B20((uint64_t)v12, v41);
      uint64_t v33 = String.init<A>(describing:)(v32);
      unint64_t v35 = v34;
      v48[0] = sub_543A4(v33, v34, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v48, &v48[1], v31 + 4, v31 + 12);
      swift_bridgeObjectRelease(v35);
      sub_E988((uint64_t)v12, &qword_78958);
      _os_log_impl(&dword_0, v29, v30, "#GeneralEmergencyFlow Failed to execute CAT: %s", v31, 0xCu);
      uint64_t v36 = v45;
      swift_arrayDestroy(v45, 1LL);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
    }

    else
    {
      sub_E988((uint64_t)v12, &qword_78958);

      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    }

    uint64_t v38 = &_swiftEmptyArrayStorage;
  }

  sub_E988((uint64_t)v14, &qword_78958);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
  return v38;
}

uint64_t *sub_E864(uint64_t *a1)
{
  return a1;
}

uint64_t sub_E8BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a12);
    swift_bridgeObjectRelease(a14);
    return swift_bridgeObjectRelease(a16);
  }

  return result;
}

unint64_t sub_E94C()
{
  unint64_t result = qword_790A0;
  if (!qword_790A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_58954, &type metadata for EmergencyFlowError);
    atomic_store(result, (unint64_t *)&qword_790A0);
  }

  return result;
}

void sub_E988(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_3974(a2);
  sub_EE70(v2);
  sub_6774();
}

uint64_t sub_E9B0(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

void *sub_E9BC(const void *a1, void *a2)
{
  return a2;
}

unint64_t sub_E9F8()
{
  unint64_t result = qword_790B0;
  if (!qword_790B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5A1F0, &type metadata for CallFlow);
    atomic_store(result, (unint64_t *)&qword_790B0);
  }

  return result;
}

uint64_t sub_EA34(uint64_t a1)
{
  return a1;
}

double sub_EA68(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 2;
  return result;
}

unint64_t sub_EA88()
{
  unint64_t result = qword_790B8;
  if (!qword_790B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_59374, &type metadata for EmergencyFeatureFlagsKey);
    atomic_store(result, (unint64_t *)&qword_790B8);
  }

  return result;
}

void sub_EAC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_EEBC(a1, a2, a3);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_6774();
}

void sub_EAF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2(0LL);
  sub_EE70(v2);
  sub_6774();
}

void sub_EB18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_EEBC(a1, a2, a3);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_6774();
}

void sub_EB44(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  if (!*a1)
  {
    uint64_t v6 = a3(a2);
    atomic_store(swift_getWitnessTable(a4, v6), a1);
  }

  sub_6774();
}

uint64_t destroy for GeneralEmergencyFlowFollowupProvider(void *a1)
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1 + 10);
}

_OWORD *initializeWithCopy for GeneralEmergencyFlowFollowupProvider(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

void *assignWithCopy for GeneralEmergencyFlowFollowupProvider(void *a1, void *a2)
{
  return a1;
}

void *initializeWithTake for GeneralEmergencyFlowFollowupProvider(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for GeneralEmergencyFlowFollowupProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 72);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for GeneralEmergencyFlowFollowupProvider(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeneralEmergencyFlowFollowupProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 120) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for GeneralEmergencyFlowFollowupProvider()
{
  return &type metadata for GeneralEmergencyFlowFollowupProvider;
}

void sub_ED8C()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_ED9C(uint64_t a1)
{
  return v2(a1, v1, *(void *)(v3 - 224));
}

void sub_EDA8(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t sub_EDB0()
{
  return swift_task_dealloc(*(void *)(v0 + 1200));
}

  ;
}

BOOL sub_EDE4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_EDF4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_EE04(uint64_t a1)
{
  return v1(a1, *(void *)(v2 - 224));
}

uint64_t sub_EE0C()
{
  return swift_release(v0);
}

uint64_t sub_EE14@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0LL;
}

void *sub_EE24(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t sub_EE2C()
{
  return 0LL;
}

uint64_t sub_EE48()
{
  return 0LL;
}

  ;
}

uint64_t sub_EE70(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

void *sub_EE84(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

BOOL sub_EE8C(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_EE94()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_EEA4()
{
  return swift_retain(v0);
}

uint64_t sub_EEAC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t sub_EEB4()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_EEBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0LL);
}

uint64_t sub_EECC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t))
{
  return a10(v10, v11);
}

void *sub_EEDC()
{
  return sub_3324(v1, *(void *)(v0 + 80));
}

uint64_t sub_EEE8()
{
  return swift_bridgeObjectRelease(v0);
}

void *sub_EEF0()
{
  return sub_3324(v0, *(void *)(v1 + 80));
}

uint64_t sub_EEFC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

void sub_EF08(uint64_t a1)
{
}

uint64_t sub_EF10(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t sub_EF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a4, 0LL);
}

void sub_EF28(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_EF34(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
}

uint64_t sub_EF3C()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_EF44@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void sub_EF50()
{
  uint64_t v249 = v1;
  uint64_t v3 = v2;
  unint64_t v272 = v4;
  uint64_t v271 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v264 = *(void *)(v271 - 8);
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v6);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v7);
  sub_1300C();
  uint64_t v9 = sub_EE14(v8);
  uint64_t v267 = type metadata accessor for EmergencyNLIntent(v9);
  sub_6764();
  __chkstk_darwin(v10);
  sub_6750();
  uint64_t v12 = sub_EE14(v11);
  v282 = (void *)type metadata accessor for NLIntent(v12);
  uint64_t v270 = *(v282 - 1);
  sub_EDD8();
  __chkstk_darwin(v13);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v14);
  sub_1300C();
  v281 = v15;
  type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  sub_6764();
  __chkstk_darwin(v16);
  sub_6750();
  uint64_t v18 = sub_EE14(v17);
  uint64_t v254 = type metadata accessor for EmergencyDialogAct(v18);
  sub_6764();
  __chkstk_darwin(v19);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v20);
  sub_1300C();
  uint64_t v22 = sub_EE14(v21);
  uint64_t v265 = type metadata accessor for USOParse(v22);
  uint64_t v250 = *(void *)(v265 - 8);
  sub_EDD8();
  __chkstk_darwin(v23);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v24);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v25);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v26);
  sub_1300C();
  uint64_t v28 = sub_EE14(v27);
  uint64_t v29 = type metadata accessor for Parse(v28);
  sub_12FFC();
  __chkstk_darwin(v30);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v31);
  sub_1300C();
  uint64_t v33 = sub_EE14(v32);
  uint64_t v34 = type metadata accessor for Input(v33);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v36);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v241 - v38;
  uint64_t v40 = sub_6820();
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v42);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v43);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v44);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v45);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v46);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v47);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v48);
  sub_EE64();
  sub_ED8C();
  uint64_t v50 = __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v241 - v51;
  uint64_t v53 = Logger.emergency.unsafeMutableAddressor(v50);
  sub_3CC8(v53, (uint64_t)&v292);
  uint64_t v278 = v41;
  v279 = (void *)v53;
  uint64_t v54 = *(void (**)(void *, uint64_t, uint64_t (*)(void, void, void)))(v41 + 16);
  v283 = (uint64_t (*)(void, void, void))v40;
  v280 = v54;
  v54(v52, v53, (uint64_t (*)(void, void, void))v40);
  uint64_t v274 = v35;
  v260 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v55 = v260(v39, v3, v34);
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  BOOL v58 = sub_130C8(v56);
  uint64_t v261 = v34;
  uint64_t v277 = v3;
  if (v58)
  {
    uint64_t v242 = v29;
    uint64_t v59 = sub_3CD4(12LL);
    uint64_t v251 = v0;
    uint64_t v60 = (uint8_t *)v59;
    uint64_t v61 = sub_3CD4(32LL);
    *(void *)&__int128 v284 = v61;
    *(_DWORD *)uint64_t v60 = 136315138;
    sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter(v34, v62);
    uint64_t v290 = sub_130A8(v63, v64);
    uint64_t v3 = v277;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v60 + 4, v60 + 12);
    sub_84A8();
    sub_12F9C();
    sub_67F8(&dword_0, v56, v57, "getConfirmationFromInput input: %s", v60);
    uint64_t v29 = v242;
    sub_67DC(v61);
    sub_3CA0(v61);
    uint64_t v65 = (uint64_t)v60;
    uint64_t v0 = v251;
    sub_3CA0(v65);
  }

  else
  {
    sub_12F9C();
  }

  uint64_t v278 = *(void *)(v278 + 8);
  uint64_t v66 = ((uint64_t (*)(char *, uint64_t (*)(void, void, void)))v278)(v52, v283);
  uint64_t v67 = v275;
  Input.parse.getter(v66);
  int v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88))(v67, v29);
  uint64_t v69 = (void (*)(void, void))v282;
  uint64_t v70 = (uint64_t)v276;
  if (v68 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_12FBC();
    uint64_t v71 = v270;
    uint64_t v72 = v281;
    uint64_t v73 = sub_13094();
    v74(v73);
    uint64_t v75 = v279;
    sub_3CC8((uint64_t)v279, (uint64_t)&v290);
    uint64_t v76 = v269;
    sub_12EF0((uint64_t)v269);
    uint64_t v77 = *(uint64_t (**)(uint64_t, void, void (*)(void, void)))(v71 + 16);
    uint64_t v78 = v266;
    uint64_t v79 = v77(v266, v72, v69);
    Logger.logObject.getter(v79);
    os_log_type_t v80 = sub_EEB4();
    if (sub_12F10(v80))
    {
      uint64_t v81 = sub_3CD4(12LL);
      uint64_t v82 = sub_3CD4(32LL);
      *(void *)&__int128 v284 = v82;
      sub_1303C(4.8149e-34);
      sub_11D44( (unint64_t *)&unk_7A620,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v84 = dispatch thunk of CustomStringConvertible.description.getter(v282, v83);
      uint64_t v86 = sub_130A8(v84, v85);
      uint64_t v87 = sub_12F68(v86);
      uint64_t v88 = (uint64_t)v76;
      uint64_t v76 = v283;
      v276 = v77;
      uint64_t v3 = v277;
      sub_130E0(v87, v89, v88);
      sub_84A8();
      (*(void (**)(uint64_t, void *))(v270 + 8))(v78, v282);
      sub_12F20(&dword_0, v90, v91, "getConfirmationFromInput NLv3IntentOnly nlIntent: %s");
      uint64_t v77 = v276;
      sub_67DC(v82);
      uint64_t v92 = v82;
      uint64_t v69 = (void (*)(void, void))v282;
      sub_3CA0(v92);
      sub_3CA0(v81);

      uint64_t v93 = (uint64_t)v269;
      uint64_t v94 = v76;
    }

    else
    {
      (*(void (**)(uint64_t, void))(v71 + 8))(v78, v69);

      uint64_t v93 = (uint64_t)v76;
      uint64_t v94 = v283;
    }

    ((void (*)(uint64_t, uint64_t (*)(void, void, void)))v278)(v93, v94);
    unint64_t v113 = v267;
    v77(v268, v281, v69);
    if (qword_785C0 != -1) {
      swift_once(&qword_785C0, sub_A2E4);
    }
    uint64_t v114 = qword_78CC8;
    sub_11D44(&qword_78D98, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
    char v116 = v115;
    sub_13084(v114);
    if (v284 == 2)
    {
      if (qword_785B0 != -1) {
        swift_once(&qword_785B0, sub_A288);
      }
      uint64_t v117 = sub_13084(qword_78CB8);
      uint64_t v118 = v284;
      if (v284 == 8)
      {
        sub_13018(v117, type metadata accessor for EmergencyNLIntent);
        sub_12F5C();
        uint64_t v119 = v259;
        sub_13138();
LABEL_75:
        uint64_t v213 = (uint64_t)v279;
        sub_3CC8((uint64_t)v279, (uint64_t)&v284);
        v280(v119, v213, v283);
        uint64_t v214 = sub_12F7C();
        Logger.logObject.getter(v214);
        os_log_type_t v215 = sub_EF3C();
        if (sub_12F10(v215))
        {
          uint64_t v216 = sub_3CD4(12LL);
          uint64_t v217 = sub_3CD4(32LL);
          uint64_t v287 = v217;
          sub_1303C(4.8149e-34);
          sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
          uint64_t v219 = dispatch thunk of CustomStringConvertible.description.getter(v3, v218);
          uint64_t v221 = sub_543A4(v219, v220, &v287);
          uint64_t v222 = sub_130E8(v221);
          sub_130E0(v222, v223, (uint64_t)v76);
          sub_84A8();
          sub_12F44();
          sub_12F20(&dword_0, v224, v225, "Failed to get confirmation from input: %s");
          sub_67DC(v217);
          sub_3CA0(v217);
          sub_3CA0(v216);
        }

        else
        {
          sub_12F44();
        }

        sub_12F50((uint64_t)v119);
        sub_12FE8();
        uint64_t v226 = sub_1304C();
        goto LABEL_89;
      }

      uint64_t v146 = EmergencyVerb.rawValue.getter(v284);
      if (v146 != 1819042147 || v147 != 0xE400000000000000LL)
      {
        char v149 = sub_8498(v146, v147, 1819042147LL, 0xE400000000000000LL);
        uint64_t v150 = sub_84A8();
        if ((v149 & 1) != 0)
        {
LABEL_52:
          sub_13018(v150, type metadata accessor for EmergencyNLIntent);
          sub_12F5C();
LABEL_88:
          uint64_t v237 = enum case for ConfirmationResponse.confirmed(_:);
          uint64_t v238 = sub_12FE8();
          sub_13194();
          uint64_t v239 = v272;
          v240(v272, v237, v238);
          uint64_t v226 = v239;
          uint64_t v227 = 0LL;
          uint64_t v228 = 1LL;
          uint64_t v229 = v238;
          goto LABEL_89;
        }

        uint64_t v151 = EmergencyVerb.rawValue.getter(v118);
        if (v151 != 1684957542 || v152 != 0xE400000000000000LL)
        {
          sub_8498(v151, v152, 1684957542LL, 0xE400000000000000LL);
          uint64_t v154 = sub_12FF0();
          sub_13018(v154, type metadata accessor for EmergencyNLIntent);
          sub_12F5C();
          uint64_t v119 = v259;
          sub_13138();
          goto LABEL_75;
        }
      }

      uint64_t v150 = swift_bridgeObjectRelease(0xE400000000000000LL);
      goto LABEL_52;
    }

    if ((v284 & 1) == 0)
    {
      uint64_t v142 = swift_bridgeObjectRelease(0xE300000000000000LL);
      sub_13018(v142, type metadata accessor for EmergencyNLIntent);
      sub_12F5C();
      sub_13118();
LABEL_85:
      v178 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
      goto LABEL_86;
    }

    sub_8498(28526LL, 0xE200000000000000LL, 7562617LL, 0xE300000000000000LL);
    uint64_t v170 = sub_13188();
    sub_13018(v170, type metadata accessor for EmergencyNLIntent);
    sub_12F5C();
    sub_13118();
    if ((v116 & 1) != 0) {
      goto LABEL_85;
    }
    goto LABEL_56;
  }

  if (v68 == enum case for Parse.directInvocation(_:))
  {
    sub_12FBC();
    uint64_t v95 = v264;
    uint64_t v103 = v273;
    uint64_t v96 = sub_13094();
    uint64_t v97 = v271;
    v98(v96);
    os_log_type_t v99 = (os_log_s *)v279;
    sub_3CC8((uint64_t)v279, (uint64_t)&v290);
    uint64_t v100 = v263;
    v101 = v283;
    v280(v263, (uint64_t)v99, v283);
    uint64_t v76 = *(uint64_t (**)(void, void, void))(v95 + 16);
    uint64_t v102 = v76(v70, v103, v97);
    LOBYTE(v103) = (_BYTE)v100;
    Logger.logObject.getter(v102);
    os_log_type_t v104 = sub_EEB4();
    if (sub_12FD8(v104))
    {
      uint64_t v103 = sub_3CD4(12LL);
      uint64_t v105 = sub_3CD4(32LL);
      *(void *)&__int128 v284 = v105;
      *(_DWORD *)uint64_t v103 = 136315138;
      uint64_t v106 = v252;
      v76(v252, v70, v271);
      uint64_t v107 = String.init<A>(describing:)(v106);
      uint64_t v76 = (uint64_t (*)(void, void, void))v108;
      uint64_t v109 = sub_130A8(v107, v108);
      uint64_t v110 = sub_12F68(v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v110, v111, v103 + 4, v103 + 12);
      sub_EEE8();
      (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v70, v271);
      sub_67F8(&dword_0, v99, (os_log_type_t)v52, "getConfirmationFromInput directInvocation: %s", (uint8_t *)v103);
      sub_67DC(v105);
      sub_3CA0(v105);
      sub_3CA0(v103);

      uint64_t v112 = v263;
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v70, v97);

      uint64_t v112 = v100;
    }

    ((void (*)(void *, uint64_t (*)(void, void, void)))v278)(v112, v101);
    sub_13138();
    unint64_t v113 = 0xD000000000000034LL;
    uint64_t v143 = sub_1310C();
    uint64_t v3 = v277;
    if (v143 == 0xD000000000000035LL && v144 == 0x800000000005B240LL)
    {
      uint64_t v145 = swift_bridgeObjectRelease(0x800000000005B240LL);
    }

    else
    {
      sub_8498(v143, v144, 0xD000000000000035LL, 0x800000000005B240LL);
      uint64_t v145 = sub_12FF0();
      if ((v103 & 1) == 0)
      {
        uint64_t v197 = sub_1310C();
        if (v197 == 0xD000000000000034LL && v198 == 0x800000000005B280LL)
        {
          swift_bridgeObjectRelease(0x800000000005B280LL);
          sub_12F34();
        }

        else
        {
          sub_8498(v197, v198, 0xD000000000000034LL, 0x800000000005B280LL);
          sub_12FF0();
          sub_12F34();
          uint64_t v119 = v259;
          if ((v103 & 1) == 0) {
            goto LABEL_75;
          }
        }

        goto LABEL_88;
      }
    }

    uint64_t v171 = Parse.DirectInvocation.userData.getter(v145);
    if (v171)
    {
      uint64_t v172 = v171;
      uint64_t v173 = DirectInvocationURI.payloadKey.getter(2LL);
      sub_2A82C(v173, v174, v172, &v284);
      sub_84A8();
      swift_bridgeObjectRelease(v172);
      unint64_t v113 = v272;
      if (*((void *)&v285 + 1))
      {
        if ((swift_dynamicCast(&v287, &v284, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          uint64_t v175 = v288;
          if (v287 == 0x656D7269666E6F63LL && v288 == 0xE900000000000064LL)
          {
            sub_12F34();
            swift_bridgeObjectRelease(0xE900000000000064LL);
            goto LABEL_85;
          }

          char v177 = sub_8498(v287, v288, 0x656D7269666E6F63LL, 0xE900000000000064LL);
          sub_12F34();
          swift_bridgeObjectRelease(v175);
          if ((v177 & 1) != 0) {
            goto LABEL_85;
          }
          goto LABEL_56;
        }

LABEL_55:
        sub_12F34();
        goto LABEL_56;
      }
    }

    else
    {
      __int128 v284 = 0u;
      __int128 v285 = 0u;
      sub_13118();
    }

    sub_E988((uint64_t)&v284, (uint64_t *)&unk_7A610);
    goto LABEL_55;
  }

  if (v68 == enum case for Parse.uso(_:))
  {
    sub_12FBC();
    uint64_t v120 = v250;
    uint64_t v121 = v262;
    uint64_t v122 = sub_13094();
    uint64_t v123 = v265;
    v124(v122);
    uint64_t v125 = (os_log_s *)v279;
    sub_3CC8((uint64_t)v279, (uint64_t)&v290);
    uint64_t v126 = v256;
    sub_12EF0(v256);
    uint64_t v127 = *(void (**)(uint64_t (*)(void, void, void), uint64_t, uint64_t))(v120 + 16);
    uint64_t v76 = v258;
    v127(v258, v121, v123);
    sub_13124();
    os_log_type_t v128 = sub_EEB4();
    BOOL v129 = sub_12FD8(v128);
    v281 = (void (*)(void, void, void))v127;
    if (v129)
    {
      uint64_t v130 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v131 = sub_3CD4(32LL);
      uint64_t v132 = v265;
      v276 = (uint64_t (*)(uint64_t, void, void (*)(void, void)))v131;
      *(void *)&__int128 v284 = v131;
      *(_DWORD *)uint64_t v130 = 136315138;
      v282 = v130 + 4;
      uint64_t v133 = v245;
      v127(v245, (uint64_t)v76, v132);
      uint64_t v134 = String.init<A>(describing:)(v133);
      unint64_t v136 = v135;
      uint64_t v137 = sub_130A8(v134, v135);
      uint64_t v138 = sub_12F68(v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v138, v139, v282, v130 + 12);
      unint64_t v140 = v136;
      uint64_t v76 = v283;
      swift_bridgeObjectRelease(v140);
      v282 = *(void **)(v120 + 8);
      ((void (*)(uint64_t (*)(void, void, void), uint64_t))v282)(v258, v132);
      sub_67F8(&dword_0, v125, (os_log_type_t)v123, "getConfirmationFromInput usoParse: %s", v130);
      uint64_t v141 = (uint64_t)v276;
      sub_67DC((uint64_t)v276);
      sub_3CA0(v141);
      sub_3CA0((uint64_t)v130);

      sub_130C0(v256);
    }

    else
    {
      v282 = *(void **)(v120 + 8);
      ((void (*)(uint64_t (*)(void, void, void), uint64_t))v282)(v76, v265);

      sub_12F50(v126);
    }

    sub_13138();
    uint64_t v179 = v255;
    uint64_t v180 = v254;
    unint64_t v113 = v253;
    uint64_t v181 = v262;
    USOParse.userParse.getter();
    *((void *)&v285 + 1) = &type metadata for EmergencyFeatureFlagsKey;
    unint64_t v286 = sub_EA88();
    LOBYTE(v284) = 2;
    char v182 = isFeatureEnabled(_:)(&v284);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(&v284);
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v113, v182 & 1);
    int v183 = *(unsigned __int8 *)(v179 + *(int *)(v180 + 36));
    if (v183 == 2)
    {
      v184 = sub_13064();
      uint64_t v185 = sub_131A0();
      LODWORD(v184) = *((unsigned __int8 *)v184 + *(int *)(v185 + 32));
      uint64_t v186 = v247;
      v281(v247, v181, v265);
      if ((_DWORD)v184 == 1)
      {
        os_log_type_t v187 = sub_4ADB8();
        sub_12F00(v186);
        uint64_t v188 = v248;
        if ((v187 & 1) != 0)
        {
          v189 = (os_log_s *)v279;
          sub_3CC8((uint64_t)v279, (uint64_t)&v284);
          uint64_t v190 = v243;
          sub_12EF0(v243);
          sub_13124();
          os_log_type_t v191 = sub_EEB4();
          if (sub_EDE4(v191))
          {
            v192 = (uint8_t *)sub_3CD4(2LL);
            *(_WORD *)v192 = 0;
            sub_EDA8(&dword_0, v189, v187, "Found webSearch confirmation", v192);
            sub_3CA0((uint64_t)v192);
          }

          uint64_t v236 = sub_12F50(v190);
          sub_130A0(v236, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
          sub_12F00(v262);
          goto LABEL_88;
        }
      }

      else
      {
        sub_12F00(v186);
        uint64_t v188 = v248;
      }

      int v210 = *((unsigned __int8 *)sub_13064() + *(int *)(v185 + 32));
      uint64_t v211 = sub_11D80(v179, v188);
      if (!v210) {
        __asm { BR              X10 }
      }

      sub_130FC(v211, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      uint64_t v119 = v259;
      sub_130A0(v212, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_12F00(v262);
      goto LABEL_75;
    }

    int v199 = v183 & 1;
    v200 = (os_log_s *)v279;
    sub_3CC8((uint64_t)v279, (uint64_t)&v284);
    uint64_t v201 = v246;
    uint64_t v202 = sub_12EF0(v246);
    Logger.logObject.getter(v202);
    os_log_type_t v203 = sub_EEB4();
    if (sub_12FD8(v203))
    {
      uint64_t v204 = v201;
      v205 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v206 = sub_3CD4(32LL);
      uint64_t v287 = v206;
      *(_DWORD *)v205 = 136315138;
      LOBYTE(v289) = v199;
      uint64_t v207 = String.init<A>(describing:)(&v289);
      uint64_t v289 = sub_543A4(v207, v208, &v287);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v289, &v290, v205 + 4, v205 + 12);
      sub_EEE8();
      sub_67F8(&dword_0, v200, (os_log_type_t)v113, "Found confirmation: %s", v205);
      sub_67DC(v206);
      sub_3CA0(v206);
      sub_3CA0((uint64_t)v205);

      uint64_t v209 = v204;
    }

    else
    {

      uint64_t v209 = v201;
    }

    sub_12F50(v209);
    uint64_t v230 = v262;
    sub_13118();
    if (!v199)
    {
      uint64_t v231 = swift_bridgeObjectRelease(0xE300000000000000LL);
      sub_130A0(v231, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_12F00(v230);
      goto LABEL_85;
    }

    sub_8498(28526LL, 0xE200000000000000LL, 7562617LL, 0xE300000000000000LL);
    uint64_t v232 = sub_13188();
    sub_130A0(v232, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    sub_12F00(v230);
LABEL_56:
    v178 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
LABEL_86:
    uint64_t v233 = *v178;
    uint64_t v234 = sub_12FE8();
    sub_13194();
    v235(v113, v233, v234);
    sub_12FE8();
    uint64_t v226 = v113;
    uint64_t v227 = 0LL;
    uint64_t v228 = 1LL;
    uint64_t v229 = v234;
LABEL_89:
    sub_3F18(v226, v227, v228, v229);
    goto LABEL_90;
  }

  v155 = v279;
  sub_3CC8((uint64_t)v279, (uint64_t)&v284);
  uint64_t v156 = v257;
  sub_12EF0(v257);
  sub_12F7C();
  sub_13124();
  os_log_type_t v157 = sub_EF3C();
  if (sub_12F10(v157))
  {
    v158 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v159 = (void *)sub_3CD4(32LL);
    v282 = v159;
    uint64_t v290 = (uint64_t)v159;
    _DWORD *v158 = 136315138;
    uint64_t v251 = v0;
    v281 = (void (*)(void, void, void))(v158 + 1);
    uint64_t v160 = v244;
    Input.parse.getter(v159);
    uint64_t v161 = String.init<A>(describing:)(v160);
    uint64_t v163 = sub_13164(v161, v162);
    uint64_t v164 = sub_12F68(v163);
    uint64_t v0 = v251;
    sub_130E0(v164, v165, (uint64_t)v281);
    sub_84A8();
    sub_12F44();
    sub_12F20(&dword_0, v166, v167, "Failed to get confirmation, not a supported parse: %s");
    v168 = (void (*)(void, void))v282;
    sub_67DC((uint64_t)v282);
    sub_3CA0((uint64_t)v168);
    sub_3CA0((uint64_t)v158);

    uint64_t v169 = v257;
  }

  else
  {
    sub_12F44();

    uint64_t v169 = v156;
  }

  sub_12F50(v169);
  sub_12FE8();
  uint64_t v193 = sub_1304C();
  sub_3F18(v193, v194, v195, v196);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v67, v29);
LABEL_90:
  sub_7DF0();
}

    uint64_t v12 = 8LL;
    goto LABEL_18;
  }

  if (LOBYTE(v46[0]) != 8)
  {
    uint64_t v24 = Logger.emergency.unsafeMutableAddressor(v22);
    swift_beginAccess(v24, v46, 0LL, 0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v24, v2);
    sub_60A4((uint64_t)v49, (uint64_t)v47);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    uint64_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v42 = swift_slowAlloc(32LL, -1LL);
      v44[0] = v42;
      uint64_t v41 = v28;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v40 = v28 + 4;
      sub_3324(v47, v48);
      IntentNodeTraversable.value<A>(forNode:)(qword_78CB8, v6, v11);
      sub_3974(&qword_7B1B0);
      uint64_t v29 = String.init<A>(describing:)(&v43);
      uint64_t v31 = v30;
      uint64_t v43 = sub_543A4(v29, v30, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v40, v28 + 12);
      swift_bridgeObjectRelease(v31);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
      uint64_t v32 = v41;
      _os_log_impl(&dword_0, v26, v27, "Encountered unsupported verb in NLIntent: %s", v41, 0xCu);
      uint64_t v33 = v42;
      swift_arrayDestroy(v42, 1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    else
    {
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v12 = 17LL;
    goto LABEL_18;
  }

  sub_3324(v49, v50);
  if (qword_785D0 != -1) {
    swift_once(&qword_785D0, sub_A334);
  }
  IntentNodeTraversable.value<A>(forNode:)(qword_78CD8, v6, v11);
  if (LOBYTE(v46[0]) == 2)
  {
    sub_60A4((uint64_t)v49, (uint64_t)v46);
LABEL_40:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v46);
    goto LABEL_41;
  }

  if ((v46[0] & 1) != 0)
  {
    swift_bridgeObjectRelease(0xE700000000000000LL);
    sub_60A4((uint64_t)v49, (uint64_t)v46);
  }

  else
  {
    uint64_t v34 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x756E20656E6F6870LL,  0xEC0000007265626DLL,  0x65746973626577LL,  0xE700000000000000LL,  0LL);
    swift_bridgeObjectRelease(0xEC0000007265626DLL);
    sub_60A4((uint64_t)v49, (uint64_t)v46);
    if ((v34 & 1) == 0) {
      goto LABEL_40;
    }
  }

  sub_3324(v46, v46[3]);
  if (qword_785C8 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  IntentNodeTraversable.value<A>(forNode:)(qword_78CD0, v6, v11);
  uint64_t v35 = LOBYTE(v44[0]);
  sub_60A4((uint64_t)v46, (uint64_t)v44);
  if (v35 != 4)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v44);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v46);
    goto LABEL_55;
  }

  sub_3324(v44, v45);
  IntentNodeTraversable.value<A>(forNode:)(qword_78CC0, v6, v11);
  uint64_t v36 = v43;
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v44);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v46);
  if (v36 != 35) {
    goto LABEL_55;
  }
LABEL_41:
  sub_3324(v49, v50);
  IntentNodeTraversable.value<A>(forNode:)(qword_78CD8, v6, v11);
  if (LOBYTE(v44[0]) != 2)
  {
    if ((v44[0] & 1) != 0)
    {
      uint64_t v37 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x65746973626577LL,  0xE700000000000000LL,  0x756E20656E6F6870LL,  0xEC0000007265626DLL,  0LL);
      swift_bridgeObjectRelease(0xE700000000000000LL);
      sub_60A4((uint64_t)v49, (uint64_t)v44);
      if ((v37 & 1) == 0) {
        goto LABEL_61;
      }
    }

    else
    {
      swift_bridgeObjectRelease(0xEC0000007265626DLL);
      sub_60A4((uint64_t)v49, (uint64_t)v44);
    }

    sub_3324(v44, v45);
    if (qword_785C8 != -1) {
      swift_once(&qword_785C8, sub_A30C);
    }
    IntentNodeTraversable.value<A>(forNode:)(qword_78CD0, v6, v11);
    uint64_t v38 = v43;
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v44);
    if (v38 == 4) {
      goto LABEL_62;
    }
LABEL_60:
    uint64_t v12 = 4LL;
    goto LABEL_18;
  }

  sub_60A4((uint64_t)v49, (uint64_t)v44);
LABEL_61:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v44);
LABEL_62:
  sub_3324(v49, v50);
  if (qword_785C8 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  IntentNodeTraversable.value<A>(forNode:)(qword_78CD0, v6, v11);
  else {
    uint64_t v12 = 5LL;
  }
LABEL_18:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v49);
  return v12;
}

void sub_10528(uint64_t a1@<X8>)
{
}

void sub_1054C()
{
  uint64_t v29 = v4;
  sub_3974((uint64_t *)&unk_7A600);
  sub_6764();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_13020();
  uint64_t v7 = type metadata accessor for Logger(v6);
  sub_12FFC();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = sub_130B0();
  sub_3CC8(v12, (uint64_t)&v31);
  uint64_t v13 = sub_13094();
  uint64_t v28 = v14;
  uint64_t v15 = ((uint64_t (*)(uint64_t))v14)(v13);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (sub_13074(v17))
  {
    uint64_t v18 = (uint8_t *)sub_3CD4(2LL);
    uint64_t v27 = v7;
    uint64_t v19 = (uint64_t)v18;
    *(_WORD *)uint64_t v18 = 0;
    sub_EDA8(&dword_0, v16, v3, "EmergencyPromptForConfirmationFlowStrategy actionForInput", v18);
    uint64_t v7 = v27;
    sub_3CA0(v19);
  }

  uint64_t v20 = *(void (**)(os_log_s *, uint64_t))(v2 + 8);
  v20(v0, v7);
  sub_EF50();
  uint64_t v21 = sub_12FE8();
  int v22 = sub_5FE0(v1, 1LL, v21);
  sub_E988(v1, (uint64_t *)&unk_7A600);
  if (v22 == 1)
  {
    sub_3CC8(v12, (uint64_t)&v30);
    v28(v11, v12, v7);
    sub_13104();
    os_log_type_t v23 = sub_67D4();
    if (sub_130C8(v0))
    {
      uint64_t v24 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v24 = 0;
      sub_EDA8(&dword_0, v0, v23, "No confirmation response found in input, ignoring.", v24);
      sub_3CA0((uint64_t)v24);
    }

    uint64_t v25 = ((uint64_t (*)(char *, uint64_t))v20)(v11, v7);
    static ActionForInput.ignore()(v25);
  }

  else
  {
    static ActionForInput.handle()();
  }

  sub_7DF0();
}

void sub_10750()
{
  uint64_t v2 = v0;
  uint64_t v90 = v4;
  uint64_t v91 = v3;
  uint64_t v89 = v5;
  uint64_t v87 = sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v6);
  sub_6750();
  uint64_t v86 = v7;
  uint64_t v8 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  sub_EDD8();
  __chkstk_darwin(v9);
  sub_66F4();
  uint64_t v85 = v10;
  sub_67EC();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v82 - v12;
  sub_3974((uint64_t *)&unk_7A630);
  sub_6764();
  __chkstk_darwin(v14);
  sub_6740();
  uint64_t v17 = v16 - v15;
  uint64_t v88 = type metadata accessor for ActivityType(0LL);
  uint64_t v18 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  sub_6740();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_6820();
  sub_12FFC();
  __chkstk_darwin(v23);
  sub_66F4();
  uint64_t v93 = v24;
  sub_67EC();
  __chkstk_darwin(v25);
  sub_EE64();
  uint64_t v92 = (os_log_s *)v26;
  sub_67EC();
  __chkstk_darwin(v27);
  uint64_t v28 = sub_130B0();
  sub_3CC8(v28, (uint64_t)&v108);
  uint64_t v96 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v97 = (os_log_s *)v28;
  uint64_t v100 = v22;
  uint64_t v29 = v96(v0, v28, v22);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  BOOL v32 = sub_130C8(v30);
  os_log_type_t v99 = v13;
  if (v32)
  {
    uint64_t v33 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v33 = 0;
    sub_EDA8(&dword_0, v30, v31, "EmergencyPromptForConfirmationFlowStrategy makePromptForConfirmation", v33);
    uint64_t v34 = (uint64_t)v33;
    uint64_t v13 = v99;
    sub_3CA0(v34);
  }

  uint64_t v98 = *(void (**)(void *, uint64_t))(v1 + 8);
  v98(v0, v100);
  uint64_t v35 = v0[23];
  if (v35)
  {
    uint64_t v83 = v2[22];
    uint64_t v36 = swift_bridgeObjectRetain(v35);
    static SiriKitEventSender.current.getter(v109, v36);
    uint64_t v37 = v109[3];
    uint64_t v84 = v109[4];
    sub_3324(v109, v109[3]);
    type metadata accessor for SiriKitEvent(0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))( v21,  enum case for ActivityType.confirmation(_:),  v88);
    uint64_t v38 = enum case for SiriKitReliabilityCodes.normal(_:);
    uint64_t v39 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    sub_13194();
    v40(v17, v38, v39);
    sub_3F18(v17, 0LL, 1LL, v39);
    uint64_t v13 = v99;
    uint64_t v41 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v21, v83, v35, v17, nullsub_1, 0LL);
    dispatch thunk of SiriKitEventSending.send(_:)(v41, v37, v84);
    swift_release(v41);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v109);
  }

  uint64_t v42 = sub_13170();
  uint64_t v43 = (int *)sub_131A0();
  unsigned __int8 v44 = *((_BYTE *)v42 + v43[8]);
  uint64_t v45 = sub_3324(v2 + 2, v2[5]);
  sub_6848(v44, *((unsigned __int8 *)v45 + v43[9]), v89[6], v89[7]);
  uint64_t v46 = EmergencyOrganizationInfo.asRREntities()();
  NLContextUpdate.rrEntities.setter(v46);
  uint64_t v47 = (uint64_t)v97;
  sub_3CC8((uint64_t)v97, (uint64_t)&v107);
  uint64_t v48 = v92;
  uint64_t v49 = v100;
  uint64_t v50 = sub_1314C((uint64_t)v92, v47);
  Logger.logObject.getter(v50);
  os_log_type_t v51 = sub_67D4();
  if (os_log_type_enabled(v48, v51))
  {
    uint64_t v52 = sub_3CD4(12LL);
    uint64_t v89 = v2 + 2;
    uint64_t v53 = (uint8_t *)v52;
    uint64_t v54 = sub_3CD4(32LL);
    v109[0] = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v88 = (uint64_t)(v53 + 4);
    sub_3CC8((uint64_t)v13, (uint64_t)&v101);
    uint64_t v55 = v85;
    (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))(v85, v13, v95);
    uint64_t v56 = String.init<A>(describing:)(v55);
    unint64_t v58 = v57;
    uint64_t v103 = sub_543A4(v56, v57, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104, v88, v53 + 12);
    swift_bridgeObjectRelease(v58);
    sub_67F8(&dword_0, v48, v51, "EmergencyPromptForConfirmationFlowStrategy preparing contextUpdate: %s", v53);
    sub_67DC(v54);
    uint64_t v59 = v54;
    uint64_t v49 = v100;
    sub_3CA0(v59);
    sub_3CA0((uint64_t)v53);

    uint64_t v60 = (uint64_t)v92;
  }

  else
  {

    uint64_t v60 = (uint64_t)v48;
  }

  v98((void *)v60, v49);
  uint64_t v61 = v2[10];
  uint64_t v62 = v2[11];
  sub_3324(v2 + 7, v61);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v62 + 8))(v106, v61, v62);
  uint64_t v63 = *(void **)((char *)sub_13170() + v43[7]);
  unint64_t v64 = sub_3324(v2 + 12, v2[15]);
  memcpy(v109, v64, 0x70uLL);
  sub_128D4((unint64_t)v63);
  uint64_t v65 = (os_log_s *)sub_125BC(v106, v109, v63);
  sub_128E4((unint64_t)v63);
  uint64_t v66 = v97;
  sub_3CC8((uint64_t)v97, (uint64_t)&v105);
  uint64_t v67 = v93;
  sub_1314C(v93, (uint64_t)v66);
  swift_retain_n(v2, 2LL);
  sub_13104();
  os_log_type_t v68 = sub_67D4();
  if (sub_130C8(v66))
  {
    uint64_t v69 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v70 = sub_3CD4(32LL);
    uint64_t v97 = v65;
    uint64_t v71 = v70;
    uint64_t v103 = v70;
    *(_DWORD *)uint64_t v69 = 136315138;
    uint64_t v72 = sub_1317C();
    uint64_t v73 = v86;
    sub_11D04((uint64_t)v72, v86, &qword_78958);
    uint64_t v74 = String.init<A>(describing:)(v73);
    unint64_t v76 = v75;
    uint64_t v102 = sub_543A4(v74, v75, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v69 + 4, v69 + 12);
    sub_131A8();
    swift_bridgeObjectRelease(v76);
    sub_67F8( &dword_0,  v66,  v68,  "EmergencyPromptForConfirmationFlowStrategy prompting with promptForConfirmationTemplatingResult: %s",  v69);
    sub_67DC(v71);
    uint64_t v77 = v71;
    uint64_t v65 = v97;
    sub_3CA0(v77);
    sub_3CA0((uint64_t)v69);

    uint64_t v78 = v93;
    uint64_t v79 = v100;
  }

  else
  {

    sub_131A8();
    uint64_t v78 = v67;
    uint64_t v79 = v49;
  }

  v98((void *)v78, v79);
  os_log_type_t v80 = v99;
  uint64_t v81 = sub_1317C();
  __chkstk_darwin(v81);
  *(&v82 - 4) = (uint64_t)v106;
  *(&v82 - 3) = (uint64_t)v65;
  *(&v82 - _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = (uint64_t)v2;
  *(&v82 - 1) = (uint64_t)v80;
  sub_10FA4((void (*)(char *))sub_128F4, (uint64_t)&v103);
  sub_EEE8();
  v91(&v103);
  sub_E988((uint64_t)&v103, &qword_791C8);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v106);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v80, v95);
  sub_7DF0();
}

void sub_10E04( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = sub_3974(&qword_791E0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = a2[3];
  uint64_t v15 = a2[4];
  sub_3324(a2, v16);
  char v17 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v16, v15);
  uint64_t v18 = sub_3324((void *)(a4 + 16), *(void *)(a4 + 40));
  uint64_t v19 = *((unsigned __int8 *)v18 + *(int *)(type metadata accessor for ConfirmationFlowConfigModel(0LL) + 36));
  swift_beginAccess(a5, v24, 0LL, 0LL);
  uint64_t v20 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16LL))(v14, a5, v20);
  sub_3F18((uint64_t)v14, 0LL, 1LL, v20);
  uint64_t v21 = type metadata accessor for AceOutput(0LL);
  memset(v22, 0, sizeof(v22));
  uint64_t v23 = 0LL;
  a6[3] = v21;
  a6[4] = &protocol witness table for AceOutput;
  sub_649C(a6);
  static AceOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( a1,  a2,  v17 & 1,  a3,  v19,  1LL,  v14,  &_swiftEmptyArrayStorage,  v22);
  sub_E988((uint64_t)v22, &qword_791D0);
  sub_E988((uint64_t)v14, &qword_791E0);
}

uint64_t sub_10FA4@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_3974(&qword_78958);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_11D04(v2, (uint64_t)v11, &qword_78958);
  uint64_t result = swift_getEnumCaseMultiPayload(v11, v9);
  int v13 = result;
  if ((_DWORD)result == 1)
  {
    *(void *)a2 = *v11;
  }

  else
  {
    (*(void (**)(char *, void *, uint64_t))(v6 + 32))(v8, v11, v5);
    a1(v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  *(_BYTE *)(a2 + 40) = v13 == 1;
  return result;
}

void sub_110D8()
{
  uint64_t v1 = v0;
  uint64_t v104 = v3;
  uint64_t v105 = v2;
  uint64_t v5 = v4;
  uint64_t v102 = sub_3974(&qword_791D8);
  sub_6764();
  __chkstk_darwin(v6);
  sub_6750();
  uint64_t v103 = v7;
  sub_3974((uint64_t *)&unk_7A600);
  sub_6764();
  __chkstk_darwin(v8);
  sub_6750();
  uint64_t v96 = v9;
  uint64_t v10 = (void *)sub_12FE8();
  uint64_t v92 = *(v10 - 1);
  sub_EDD8();
  __chkstk_darwin(v11);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v12);
  sub_1300C();
  uint64_t v100 = v13;
  uint64_t v14 = type metadata accessor for Input(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_66F4();
  uint64_t v98 = v16;
  sub_67EC();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v87 - v18;
  uint64_t v20 = sub_6820();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  sub_66F4();
  uint64_t v99 = v22;
  sub_67EC();
  __chkstk_darwin(v23);
  sub_EE64();
  uint64_t v106 = v24;
  sub_67EC();
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)v87 - v27;
  uint64_t v29 = Logger.emergency.unsafeMutableAddressor(v26);
  sub_3CC8(v29, (uint64_t)&v110);
  uint64_t v93 = v21;
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v95 = (os_log_s *)v29;
  v94(v28, v29, v20);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  uint64_t v97 = v5;
  uint64_t v89 = v30;
  uint64_t v31 = v30((uint64_t)v19, v5, v14);
  BOOL v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v101 = v20;
  if (v34)
  {
    uint64_t v35 = sub_3CD4(12LL);
    v87[1] = v1;
    uint64_t v36 = (uint8_t *)v35;
    uint64_t v37 = sub_3CD4(32LL);
    v109[0] = v37;
    uint64_t v88 = v10;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v90 = v36 + 4;
    sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter(v14, v38);
    uint64_t v41 = sub_13164(v39, v40);
    uint64_t v42 = sub_130E8(v41);
    uint64_t v10 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, v43, v90, v36 + 12);
    sub_84A8();
    sub_12FCC(*(uint64_t (**)(void))(v15 + 8));
    sub_67F8(&dword_0, v32, v33, "EmergencyPromptForConfirmationFlowStrategy parseConfirmationResponse. Input: %s", v36);
    sub_67DC(v37);
    uint64_t v44 = v37;
    uint64_t v20 = v101;
    sub_3CA0(v44);
    sub_3CA0((uint64_t)v36);
  }

  else
  {
    sub_12FCC(*(uint64_t (**)(void))(v15 + 8));
  }

  uint64_t v45 = *(void *)(v93 + 8);
  sub_130C0((uint64_t)v28);
  uint64_t v47 = v96;
  uint64_t v46 = v97;
  sub_EF50();
  int v48 = sub_5FE0(v47, 1LL, (uint64_t)v10);
  uint64_t v50 = v98;
  uint64_t v49 = v99;
  uint64_t v51 = v106;
  if (v48 == 1)
  {
    sub_E988(v47, (uint64_t *)&unk_7A600);
    uint64_t v52 = v95;
    sub_3CC8((uint64_t)v95, (uint64_t)v109);
    sub_131B4(v49, (uint64_t)v52);
    uint64_t v53 = v89(v50, v46, v14);
    uint64_t v54 = v14;
    Logger.logObject.getter(v53);
    os_log_type_t v55 = sub_EF3C();
    if (sub_12F10(v55))
    {
      uint64_t v56 = sub_3CD4(22LL);
      uint64_t v57 = sub_3CD4(64LL);
      uint64_t v97 = v45;
      uint64_t v58 = v57;
      uint64_t v108 = v57;
      *(_DWORD *)uint64_t v56 = 136315394;
      LOBYTE(v10_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 1;
      uint64_t v59 = String.init<A>(describing:)(&v107);
      unint64_t v61 = v60;
      uint64_t v107 = sub_13144(v59, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v56 + 4, v56 + 12);
      swift_bridgeObjectRelease(v61);
      *(_WORD *)(v56 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
      sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
      uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter(v54, v62);
      uint64_t v107 = sub_13144(v63, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v56 + 14, v56 + 22);
      sub_84A8();
      sub_12F44();
      _os_log_impl( &dword_0,  v52,  (os_log_type_t)v51,  "%s: No confirmation response found in input: %s",  (uint8_t *)v56,  0x16u);
      swift_arrayDestroy(v58, 2LL);
      sub_3CA0(v58);
      sub_3CA0(v56);

      sub_1312C(v49);
    }

    else
    {
      sub_12F44();

      sub_130C0(v49);
    }

    unint64_t v80 = sub_E94C();
    uint64_t v81 = swift_allocError(&type metadata for EmergencyFlowError, v80, 0LL, 0LL);
    *uint64_t v82 = 1;
    uint64_t v83 = v102;
    uint64_t v84 = (uint64_t)v103;
    *uint64_t v103 = v81;
    swift_storeEnumTagMultiPayload(v84, v83, 1LL);
    sub_131C0();
    sub_E988(v84, &qword_791D8);
  }

  else
  {
    uint64_t v65 = v92;
    uint64_t v66 = v100;
    (*(void (**)(uint64_t, uint64_t, void *))(v92 + 32))(v100, v47, v10);
    uint64_t v67 = (uint64_t)v95;
    sub_3CC8((uint64_t)v95, (uint64_t)v109);
    sub_131B4(v51, v67);
    os_log_type_t v68 = *(void (**)(uint64_t, uint64_t, void *))(v65 + 16);
    v68(v91, v66, v10);
    sub_13104();
    uint64_t v69 = v10;
    os_log_type_t v70 = sub_EEB4();
    if (sub_12F10(v70))
    {
      uint64_t v71 = sub_3CD4(12LL);
      uint64_t v72 = sub_3CD4(32LL);
      uint64_t v97 = v45;
      uint64_t v73 = v72;
      uint64_t v108 = v72;
      sub_1303C(4.8149e-34);
      sub_11D44( (unint64_t *)&unk_7A640,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
      uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter(v10, v74);
      uint64_t v107 = sub_13144(v75, v76);
      sub_130E0((uint64_t)&v107, (uint64_t)&v108, v20);
      sub_84A8();
      uint64_t v77 = *(void (**)(uint64_t, void *))(v92 + 8);
      sub_13158();
      sub_12F20(&dword_0, v78, v79, "Received confirmation: %s");
      sub_67DC(v73);
      sub_3CA0(v73);
      sub_3CA0(v71);

      sub_1312C(v106);
    }

    else
    {
      uint64_t v77 = *(void (**)(uint64_t, void *))(v65 + 8);
      sub_13158();

      sub_130C0(v66);
    }

    uint64_t v85 = (uint64_t)v103;
    uint64_t v86 = v100;
    v68((uint64_t)v103, v100, v69);
    sub_130D0(v85);
    swift_storeEnumTagMultiPayload(v85, v102, 0LL);
    sub_131C0();
    sub_E988(v85, &qword_791D8);
    v77(v86, v69);
  }

  sub_7DF0();
}

void sub_117C4()
{
  uint64_t v4 = v0;
  uint64_t v39 = v6;
  unint64_t v40 = v5;
  sub_3974((uint64_t *)&unk_7A630);
  sub_6764();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_13020();
  uint64_t v38 = type metadata accessor for ActivityType(v8);
  sub_12FFC();
  __chkstk_darwin(v9);
  sub_6740();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_6820();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_6740();
  uint64_t v17 = v16 - v15;
  uint64_t v19 = Logger.emergency.unsafeMutableAddressor(v18);
  sub_3CC8(v19, (uint64_t)&v45);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, v19, v13);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (sub_13074(v22))
  {
    uint64_t v23 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v23 = 0;
    sub_EDA8(&dword_0, v21, v3, "EmergencyPromptForConfirmationFlowStrategy makeConfirmationRejectedResponse", v23);
    sub_3CA0((uint64_t)v23);
  }

  uint64_t v24 = sub_13094();
  v25(v24);
  uint64_t v26 = v4[23];
  if (v26)
  {
    uint64_t v27 = v4[22];
    uint64_t v28 = swift_bridgeObjectRetain(v4[23]);
    static SiriKitEventSender.current.getter(v41, v28);
    uint64_t v29 = v42;
    uint64_t v37 = v43;
    sub_3324(v41, v42);
    type metadata accessor for SiriKitEvent(0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))( v12,  enum case for ActivityType.confirmationRejected(_:),  v38);
    uint64_t v30 = enum case for SiriKitReliabilityCodes.rejectParameter(_:);
    uint64_t v31 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    sub_13194();
    v32(v1, v30, v31);
    sub_130D0(v1);
    uint64_t v33 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v12, v27, v26, v1, nullsub_1, 0LL);
    dispatch thunk of SiriKitEventSending.send(_:)(v33, v29, v37);
    swift_release(v33);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v41);
  }

  uint64_t v34 = v4[10];
  uint64_t v35 = v4[11];
  sub_3324(v4 + 7, v34);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 8))(v44, v34, v35);
  sub_3324(v4 + 2, v4[5]);
  uint64_t v36 = sub_131A0();
  __chkstk_darwin(v36);
  *(&v37 - _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = (uint64_t)v44;
  sub_10FA4((void (*)(char *))sub_11CFC, (uint64_t)v41);
  v40(v41);
  sub_E988((uint64_t)v41, &qword_791C8);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v44);
  sub_7DF0();
}

void sub_11A5C(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_3324(a2, v6);
  char v8 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v6, v7);
  memset(v9, 0, sizeof(v9));
  uint64_t v10 = 0LL;
  a3[3] = type metadata accessor for AceOutput(0LL);
  a3[4] = &protocol witness table for AceOutput;
  sub_649C(a3);
  static AceOutputHelper.makeCancellationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)( a1,  a2,  v8 & 1,  &_swiftEmptyArrayStorage,  1LL,  v9);
  sub_E988((uint64_t)v9, &qword_791D0);
}

void *sub_11B1C()
{
  return v0;
}

uint64_t sub_11B58()
{
  return swift_deallocClassInstance(v0, 192LL, 7LL);
}

uint64_t type metadata accessor for EmergencyPromptForConfirmationFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin42EmergencyPromptForConfirmationFlowStrategy);
}

void sub_11B98()
{
}

uint64_t type metadata accessor for EmergencyConfirmationResponseProvider(uint64_t a1)
{
  uint64_t result = qword_79248;
  if (!qword_79248) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyConfirmationResponseProvider);
  }
  return result;
}

void sub_11C04(void *__src)
{
}

uint64_t sub_11C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for EmergencyPromptForConfirmationFlowStrategy();
  return PromptForConfirmationFlowStrategy.makeRepromptOnEmptyParse(itemToConfirm:_:)(a1, a2, a3, v9, a5);
}

uint64_t sub_11CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for EmergencyPromptForConfirmationFlowStrategy();
  return PromptForConfirmationFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:_:)(a1, a2, a3, v9, a5);
}

void sub_11CFC(uint64_t a1@<X0>, void *a2@<X8>)
{
}

void sub_11D04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_3974(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  sub_6774();
}

void sub_11D44(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = a2(255LL);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_6774();
}

uint64_t sub_11D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void *sub_11DC4(uint64_t a1, void *a2)
{
  uint64_t v40 = a1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974(&qword_78958);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v44 = &type metadata for EmergencyCATProvider;
  uint64_t v45 = &off_6FB48;
  v43[0] = swift_allocObject(&unk_6DD08, 128LL, 7LL);
  memcpy((void *)(v43[0] + 16LL), a2, 0x70uLL);
  uint64_t v13 = sub_3324(v43, (uint64_t)&type metadata for EmergencyCATProvider)[12];
  swift_retain(v13);
  sub_3A40(a2);
  sub_47CC();
  swift_release(v13);
  uint64_t v14 = Result<>.firstPrint.getter(v7);
  uint64_t v16 = v15;
  sub_E988((uint64_t)v12, &qword_78958);
  if (v16)
  {
    uint64_t v18 = v14;
    uint64_t v19 = sub_3324(v43, (uint64_t)v44)[12];
    swift_retain(v19);
    sub_47E4();
    swift_release(v19);
    uint64_t v20 = Result<>.firstPrint.getter(v7);
    uint64_t v22 = v21;
    sub_E988((uint64_t)v10, &qword_78958);
    if (v22)
    {
      uint64_t v23 = sub_3974(&qword_791E8);
      uint64_t inited = swift_initStackObject(v23, &v42);
      uint64_t v39 = v20;
      uint64_t v25 = (void *)inited;
      __int128 v38 = xmmword_56FA0;
      *(_OWORD *)(inited + 16) = xmmword_56FA0;
      swift_bridgeObjectRetain(v16);
      v25[4] = DirectInvocationURI.payloadKey.getter(2LL);
      v25[5] = v26;
      v25[9] = &type metadata for String;
      v25[6] = 0x656D7269666E6F63LL;
      v25[7] = 0xE900000000000064LL;
      uint64_t v27 = Dictionary.init(dictionaryLiteral:)( v25,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      v46[0] = v18;
      v46[1] = v16;
      v46[2] = 0xD000000000000035LL;
      v46[3] = 0x800000000005B240LL;
      v46[4] = v27;
      uint64_t v28 = swift_initStackObject(v23, &v41);
      *(_OWORD *)(v28 + 16) = v38;
      swift_bridgeObjectRetain(v22);
      *(void *)(v28 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = DirectInvocationURI.payloadKey.getter(2LL);
      *(void *)(v28 + 40) = v29;
      *(void *)(v28 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
      *(void *)(v28 + 48) = 0x64657463656A6572LL;
      *(void *)(v28 + 56) = 0xE800000000000000LL;
      uint64_t v30 = Dictionary.init(dictionaryLiteral:)( v28,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      v47[0] = v39;
      v47[1] = v22;
      v47[2] = 0xD000000000000035LL;
      v47[3] = 0x800000000005B240LL;
      v47[4] = v30;
      uint64_t v31 = (void *)makeConfirmationButtons(confirmButton:rejectButton:device:)(v46, v47, v40);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease_n(v16, 2LL);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease_n(v22, 2LL);
      goto LABEL_8;
    }

    uint64_t v17 = swift_bridgeObjectRelease(v16);
  }

  uint64_t v32 = Logger.emergency.unsafeMutableAddressor(v17);
  swift_beginAccess(v32, v47, 0LL, 0LL);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v32, v3);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "Failed to execute label CATs for makeYesNoButtons", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v31 = &_swiftEmptyArrayStorage;
LABEL_8:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v43);
  return v31;
}

void *sub_121C0(uint64_t a1, void *a2)
{
  uint64_t v40 = a1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974(&qword_78958);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v44 = &type metadata for EmergencyCATProvider;
  uint64_t v45 = &off_6FB48;
  v43[0] = swift_allocObject(&unk_6DD08, 128LL, 7LL);
  memcpy((void *)(v43[0] + 16LL), a2, 0x70uLL);
  uint64_t v13 = sub_3324(v43, (uint64_t)&type metadata for EmergencyCATProvider)[11];
  swift_retain(v13);
  sub_3A40(a2);
  sub_1FFC4();
  swift_release(v13);
  uint64_t v14 = Result<>.firstPrint.getter(v7);
  uint64_t v16 = v15;
  sub_E988((uint64_t)v12, &qword_78958);
  if (v16)
  {
    uint64_t v18 = v14;
    uint64_t v19 = sub_3324(v43, (uint64_t)v44)[12];
    swift_retain(v19);
    sub_4808();
    swift_release(v19);
    uint64_t v20 = Result<>.firstPrint.getter(v7);
    uint64_t v22 = v21;
    sub_E988((uint64_t)v10, &qword_78958);
    if (v22)
    {
      uint64_t v23 = sub_3974(&qword_791E8);
      uint64_t inited = swift_initStackObject(v23, &v42);
      uint64_t v39 = v20;
      uint64_t v25 = (void *)inited;
      __int128 v38 = xmmword_56FA0;
      *(_OWORD *)(inited + 16) = xmmword_56FA0;
      swift_bridgeObjectRetain(v16);
      v25[4] = DirectInvocationURI.payloadKey.getter(2LL);
      v25[5] = v26;
      v25[9] = &type metadata for String;
      v25[6] = 0x656D7269666E6F63LL;
      v25[7] = 0xE900000000000064LL;
      uint64_t v27 = Dictionary.init(dictionaryLiteral:)( v25,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      v46[0] = v18;
      v46[1] = v16;
      v46[2] = 0xD000000000000035LL;
      v46[3] = 0x800000000005B240LL;
      v46[4] = v27;
      uint64_t v28 = swift_initStackObject(v23, &v41);
      *(_OWORD *)(v28 + 16) = v38;
      swift_bridgeObjectRetain(v22);
      *(void *)(v28 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = DirectInvocationURI.payloadKey.getter(2LL);
      *(void *)(v28 + 40) = v29;
      *(void *)(v28 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
      *(void *)(v28 + 48) = 0x64657463656A6572LL;
      *(void *)(v28 + 56) = 0xE800000000000000LL;
      uint64_t v30 = Dictionary.init(dictionaryLiteral:)( v28,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      v47[0] = v39;
      v47[1] = v22;
      v47[2] = 0xD000000000000035LL;
      v47[3] = 0x800000000005B240LL;
      v47[4] = v30;
      uint64_t v31 = (void *)makeConfirmationButtons(confirmButton:rejectButton:device:)(v46, v47, v40);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease_n(v16, 2LL);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease_n(v22, 2LL);
      goto LABEL_8;
    }

    uint64_t v17 = swift_bridgeObjectRelease(v16);
  }

  uint64_t v32 = Logger.emergency.unsafeMutableAddressor(v17);
  swift_beginAccess(v32, v47, 0LL, 0LL);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v32, v3);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "Failed to execute label CATs for makeStartCancelButtons", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v31 = &_swiftEmptyArrayStorage;
LABEL_8:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v43);
  return v31;
}

void *sub_125BC(void *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = &type metadata for EmergencyCATProvider;
  uint64_t v34 = &off_6FB48;
  v32[0] = swift_allocObject(&unk_6DD08, 128LL, 7LL);
  memcpy((void *)(v32[0] + 16LL), a2, 0x70uLL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_3324(a1, v10);
  sub_3A40(a2);
  LOBYTE(a_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = dispatch thunk of DeviceState.isHomePod.getter(v10, v11);
  sub_3B68((uint64_t)a1, (uint64_t)v29);
  if ((a2 & 1) != 0)
  {
    uint64_t v12 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v29);
LABEL_4:
    uint64_t v16 = Logger.emergency.unsafeMutableAddressor(v12);
    swift_beginAccess(v16, __dst, 0LL, 0LL);
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( &dword_0,  v18,  v19,  "Device is HomePod or AppleTV. Not creating aceViews from ConfirmationSnippets.",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v21 = &_swiftEmptyArrayStorage;
    goto LABEL_7;
  }

  uint64_t v13 = v30;
  uint64_t v14 = v31;
  sub_3324(v29, v30);
  char v15 = dispatch thunk of DeviceState.isAppleTV.getter(v13, v14);
  uint64_t v12 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v29);
  if ((v15 & 1) != 0) {
    goto LABEL_4;
  }
  uint64_t v21 = &_swiftEmptyArrayStorage;
  switch((unint64_t)a3)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v23 = sub_3324(v32, (uint64_t)v33);
      memcpy(__dst, v23, sizeof(__dst));
      uint64_t v24 = sub_11DC4((uint64_t)a1, __dst);
      goto LABEL_14;
    case 2uLL:
      uint64_t v25 = sub_3324(v32, (uint64_t)v33);
      memcpy(__dst, v25, sizeof(__dst));
      sub_24EE8((uint64_t)a1, __dst);
      goto LABEL_14;
    case 3uLL:
      uint64_t v26 = sub_3324(v32, (uint64_t)v33);
      memcpy(__dst, v26, sizeof(__dst));
      sub_24EFC((uint64_t)a1, __dst);
      goto LABEL_14;
    case 4uLL:
      uint64_t v27 = sub_3324(v32, (uint64_t)v33);
      memcpy(__dst, v27, sizeof(__dst));
      sub_252A4((uint64_t)a1, __dst);
      goto LABEL_14;
    case 5uLL:
      uint64_t v28 = sub_3324(v32, (uint64_t)v33);
      memcpy(__dst, v28, sizeof(__dst));
      uint64_t v24 = sub_121C0((uint64_t)a1, __dst);
LABEL_14:
      uint64_t v21 = v24;
      break;
    default:
      swift_bridgeObjectRetain(a3);
      uint64_t v21 = a3;
      break;
  }

LABEL_7:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v32);
  return v21;
}

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v16);
LABEL_8:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v24);
LABEL_9:
  uint64_t v8 = 0;
  return v8 & 1;
}

unint64_t sub_128D4(unint64_t result)
{
  if (result >= 6) {
    return swift_bridgeObjectRetain(result);
  }
  return result;
}

unint64_t sub_128E4(unint64_t result)
{
  if (result >= 6) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

void sub_128F4(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_12900()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t *sub_1298C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_3974((uint64_t *)&unk_7A600) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v7);
  }

  else
  {
    uint64_t v6 = type metadata accessor for ConfirmationResponse(0LL);
    if (sub_5FE0((uint64_t)a2, 1LL, v6))
    {
      memcpy(a1, a2, *(void *)(v4 + 64));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      sub_3F18((uint64_t)a1, 0LL, 1LL, v6);
    }
  }

  return a1;
}

uint64_t sub_12A50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t result = sub_5FE0(a1, 1LL, v2);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  }
  return result;
}

void *sub_12AA8(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse(0LL);
  if (sub_5FE0((uint64_t)a2, 1LL, v4))
  {
    uint64_t v5 = sub_3974((uint64_t *)&unk_7A600);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, a2, v4);
    sub_3F18((uint64_t)a1, 0LL, 1LL, v4);
  }

  return a1;
}

void *sub_12B44(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse(0LL);
  int v5 = sub_5FE0((uint64_t)a1, 1LL, v4);
  int v6 = sub_5FE0((uint64_t)a2, 1LL, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }

  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_3974((uint64_t *)&unk_7A600);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, a2, v4);
  sub_3F18((uint64_t)a1, 0LL, 1LL, v4);
  return a1;
}

void *sub_12C28(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse(0LL);
  if (sub_5FE0((uint64_t)a2, 1LL, v4))
  {
    uint64_t v5 = sub_3974((uint64_t *)&unk_7A600);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32LL))(a1, a2, v4);
    sub_3F18((uint64_t)a1, 0LL, 1LL, v4);
  }

  return a1;
}

void *sub_12CC4(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationResponse(0LL);
  int v5 = sub_5FE0((uint64_t)a1, 1LL, v4);
  int v6 = sub_5FE0((uint64_t)a2, 1LL, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }

  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_3974((uint64_t *)&unk_7A600);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32LL))(a1, a2, v4);
  sub_3F18((uint64_t)a1, 0LL, 1LL, v4);
  return a1;
}

uint64_t sub_12DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12DB4);
}

uint64_t sub_12DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974((uint64_t *)&unk_7A600);
  return sub_5FE0(a1, a2, v4);
}

uint64_t sub_12DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12DF8);
}

uint64_t sub_12DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974((uint64_t *)&unk_7A600);
  return sub_3F18(a1, a2, a2, v4);
}

void sub_12E34(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 1LL, &v4, a1 + 16);
  }

void sub_12E9C(uint64_t a1)
{
  if (!qword_79258)
  {
    uint64_t v2 = type metadata accessor for ConfirmationResponse(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_79258);
    }
  }

uint64_t sub_12EF0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 - 240))(a1, v1, *(void *)(v2 - 216));
}

uint64_t sub_12F00(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 - 224))(a1, *(void *)(v1 - 368));
}

BOOL sub_12F10(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_12F20(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_12F34()
{
  return v1(*(void *)(v2 - 296), v0);
}

uint64_t sub_12F44()
{
  return (*(uint64_t (**)(void))(v0 - 288))();
}

uint64_t sub_12F50(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 - 256))(a1, *(void *)(v1 - 216));
}

uint64_t sub_12F5C()
{
  return v1(*(void *)(v2 - 232), v0);
}

uint64_t sub_12F68(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_12F7C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 - 408))(v0, v1, *(void *)(v2 - 400));
}

uint64_t sub_12F9C()
{
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 288) + 8LL);
  *(void *)(v2 - 288) = v3;
  return v3(v0, v1);
}

uint64_t sub_12FBC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_12FCC@<X0>(uint64_t (*a1)(void)@<X8>)
{
  *(void *)(v1 - 288) = a1;
  return a1();
}

BOOL sub_12FD8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_12FE8()
{
  return type metadata accessor for ConfirmationResponse(0LL);
}

uint64_t sub_12FF0()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

void sub_13018(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t sub_13020()
{
  return 0LL;
}

void sub_1303C(float a1)
{
  float *v1 = a1;
}

uint64_t sub_1304C()
{
  return *(void *)(v0 - 304);
}

void *sub_13064()
{
  return sub_3324(*(void **)(v0 - 504), *(void *)(*(void *)(v0 - 504) + 24LL));
}

BOOL sub_13074(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_13084(uint64_t a1)
{
  return IntentNodeTraversable.value<A>(forNode:)(a1, v2, v1);
}

uint64_t sub_13094()
{
  return v0;
}

void sub_130A0(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t sub_130A8(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 208));
}

uint64_t sub_130B0()
{
  return Logger.emergency.unsafeMutableAddressor();
}

uint64_t sub_130C0(uint64_t a1)
{
  return v1(a1, v2);
}

BOOL sub_130C8(os_log_s *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_130D0(uint64_t a1)
{
  return sub_3F18(a1, 0LL, 1LL, v1);
}

uint64_t sub_130E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t sub_130E8(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

void sub_130FC(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t sub_13104()
{
  return Logger.logObject.getter();
}

uint64_t sub_1310C()
{
  return Parse.DirectInvocation.identifier.getter();
}

  ;
}

uint64_t sub_13124()
{
  return Logger.logObject.getter();
}

uint64_t sub_1312C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 - 232))(a1, *(void *)(v1 - 200));
}

  ;
}

uint64_t sub_13144(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t sub_1314C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 112))(a1, a2, v3);
}

uint64_t sub_13158()
{
  return v0(v2, v1);
}

uint64_t sub_13164(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 136));
}

void *sub_13170()
{
  return sub_3324(v0, *(void *)(v1 + 40));
}

void *sub_1317C()
{
  return sub_3324(v0, *(void *)(v1 + 40));
}

uint64_t sub_13188()
{
  return swift_bridgeObjectRelease(0xE200000000000000LL);
}

  ;
}

uint64_t sub_131A0()
{
  return type metadata accessor for ConfirmationFlowConfigModel(0LL);
}

uint64_t sub_131A8()
{
  return swift_release_n(v0, 2LL);
}

uint64_t sub_131B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 256))(a1, a2, v2);
}

uint64_t sub_131C0()
{
  return (*(uint64_t (**)(uint64_t))(v1 - 168))(v0);
}

uint64_t sub_131CC()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_131D4()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_131DC()
{
  return swift_deallocClassInstance(v0, 18LL, 7LL);
}

uint64_t type metadata accessor for MockNetworkStatusProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin25MockNetworkStatusProvider);
}

uint64_t sub_1320C()
{
  return sub_131CC() & 1;
}

uint64_t sub_13230()
{
  return sub_131D4() & 1;
}

uint64_t type metadata accessor for EmergencyDomesticViolenceBasicIntentModernCATs(uint64_t a1)
{
  uint64_t result = qword_79340;
  if (!qword_79340) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyDomesticViolenceBasicIntentModernCATs);
  }
  return result;
}

uint64_t sub_1328C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B858);
}

uint64_t sub_132C8(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_1330C()
{
  uint64_t v1 = sub_3974(&qword_78BB8);
  uint64_t v2 = sub_77F4(v1, 128LL);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_56FB0;
  strcpy((char *)(v2 + 32), "webSearchQuery");
  *(_BYTE *)(v2 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v2, v3, &qword_78970);
  uint64_t v4 = sub_4508();
  uint64_t v5 = sub_9F30(v4);
  if (v6)
  {
    sub_9F58(v5, &qword_78970);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  char v8 = *(_BYTE *)(v0 + 64);
  *(void *)(v2 + 80) = 0xD000000000000012LL;
  *(void *)(v2 + 88) = 0x800000000005ABB0LL;
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(_BYTE *)(v2 + 96) = v8;
  uint64_t v9 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  void *v9 = v0;
  v9[1] = sub_965C;
  uint64_t v10 = sub_9E44(0xD00000000000002FLL);
  return sub_9E10(v10, v11, v12, v13);
}

uint64_t sub_13420(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_13464()
{
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = (__n128 *)sub_77F4(v2, 128LL);
  *(void *)(v1 + 40) = v3;
  uint64_t v4 = sub_9EAC(v3, (__n128)xmmword_56FB0);
  sub_9EF0((uint64_t)v4, v5, &qword_78970);
  uint64_t v6 = sub_4508();
  uint64_t v7 = sub_9F30(v6);
  if (v8)
  {
    sub_9F58(v7, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unsigned __int8 v10 = *(_BYTE *)(v1 + 64);
  v3[5].n128_u64[0] = 0xD000000000000012LL;
  v3[5].n128_u64[1] = 0x800000000005ABB0LL;
  v3[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[6].n128_u8[0] = v10;
  uint64_t v11 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_9808;
  uint64_t v12 = sub_9E44(0xD000000000000030LL);
  return sub_9E10(v12, v13, v14, v15);
}

uint64_t sub_13550(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = a2;
  *(void *)(v4 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = sub_3974(&qword_78970);
  *(void *)(v4 + 40) = sub_9E84(v5);
  sub_4588();
  return sub_451C();
}

uint64_t sub_13598()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = sub_3974(&qword_78BB8);
  uint64_t v4 = (__n128 *)sub_77F4(v3, 176LL);
  *(void *)(v1 + 48) = v4;
  uint64_t v5 = sub_9EAC(v4, (__n128)xmmword_56FC0);
  sub_9EF0((uint64_t)v5, v6, &qword_78970);
  uint64_t v7 = sub_4508();
  uint64_t v8 = sub_5FE0(v2, 1LL, v7);
  if ((_DWORD)v8 == 1)
  {
    sub_9F58(v8, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unint64_t v10 = *(void *)(v1 + 24);
  v4[5].n128_u64[0] = 0x65626D754E67726FLL;
  v4[5].n128_u64[1] = 0xE900000000000072LL;
  uint64_t v11 = 0LL;
  if (v10)
  {
    uint64_t v11 = type metadata accessor for DialogPhoneNumber(0LL);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  unsigned __int8 v12 = *(_BYTE *)(v1 + 72);
  v4[6].n128_u64[0] = v10;
  v4[8].n128_u64[1] = 0x800000000005ABB0LL;
  v4[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v4[9].n128_u8[0] = v12;
  uint64_t v13 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + 1);
  v4[7].n128_u64[1] = v11;
  v4[8].n128_u64[0] = 0xD000000000000012LL;
  swift_retain(v10);
  uint64_t v14 = (void *)swift_task_alloc(v13);
  *(void *)(v1 + 56) = v14;
  void *v14 = v1;
  v14[1] = sub_99F8;
  uint64_t v15 = sub_9E44(0xD00000000000002DLL);
  return sub_9E10(v15, v16, v17, v18);
}

uint64_t sub_136F4()
{
  return type metadata accessor for EmergencyDomesticViolenceBasicIntentModernCATs(0LL);
}

uint64_t sub_136FC()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_79354);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9CF8);
  return sub_132C8(v2, v3);
}

uint64_t sub_13750()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_7935C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9E08);
  return sub_13420(v2, v3);
}

uint64_t sub_137A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_79364);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E08;
  return sub_13550(a1, a2, a3);
}

void sub_1380C(char a1)
{
  __asm { BR              X13 }

uint64_t sub_13870(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_138BC + 4 * byte_57804[a2]))(v2 + 2);
}

uint64_t sub_138BC(uint64_t a1)
{
  unint64_t v4 = (v2 - 32) | 0x8000000000000000LL;
  if (a1 == v1 + 2 && v3 == v4)
  {
    char v6 = 1;
    unint64_t v4 = v3;
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, v1 + 2, (v2 - 32) | 0x8000000000000000LL, 0LL);
  }

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  return v6 & 1;
}

Swift::Int sub_13934(char a1)
{
  return Hasher._finalize()();
}

void sub_13978(uint64_t a1, char a2)
{
  __asm { BR              X11 }

uint64_t sub_139C0(uint64_t a1)
{
  ((void (*)(const char *__return_ptr, uint64_t, uint64_t, unint64_t))String.hash(into:))( "isBadActorGuidance",  a1,  v1 + 2,  0x800000000005A7E0LL);
  return swift_bridgeObjectRelease(0x800000000005A7E0LL);
}

Swift::Int sub_13A14(uint64_t a1, char a2)
{
  return Hasher._finalize()();
}

uint64_t sub_13A54()
{
  uint64_t result = v0;
  *(_DWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_13A60()
{
  return swift_deallocClassInstance(v0, 20LL, 7LL);
}

uint64_t sub_13A70()
{
  return 0x7469532E6D617363LL;
}

uint64_t sub_13A94()
{
  return 0LL;
}

uint64_t sub_13A9C(_BYTE *a1)
{
  *(void *)(v1 + 16) = 0LL;
  *(_BYTE *)(v1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = a1[16];
  *(_BYTE *)(v1 + 25) = a1[17];
  *(_BYTE *)(v1 + 26) = a1[18];
  char v2 = a1[19];
  swift_release(a1);
  *(_BYTE *)(v1 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = v2;
  return v1;
}

double sub_13AE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = "isBadActorGuidance";
  if (a1 == 0xD000000000000012LL && (sub_1457C(), v7)
    || (sub_1456C(0xD000000000000012LL, (unint64_t)(v5 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    char v8 = v2[24];
LABEL_5:
    *(void *)(a2 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = &type metadata for Bool;
    *(_BYTE *)a2 = v8;
    return result;
  }

  uint64_t v9 = "isContentReporting";
  if (a1 == 0xD000000000000012LL && (sub_1457C(), v7)
    || (sub_1456C(0xD000000000000012LL, (unint64_t)(v9 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    char v8 = v2[25];
    goto LABEL_5;
  }

  unint64_t v10 = "isExplicitSearch";
  if (a1 == 0xD000000000000010LL && (sub_1457C(), v7)
    || (sub_1456C(0xD000000000000010LL, (unint64_t)(v10 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    char v8 = v2[26];
    goto LABEL_5;
  }

  uint64_t v11 = "isVictimGuidance";
  if (a1 == 0xD000000000000010LL && (sub_1457C(), v7)
    || (sub_1456C(0xD000000000000010LL, (unint64_t)(v11 - 32) | 0x8000000000000000LL) & 1) != 0)
  {
    char v8 = v2[27];
    goto LABEL_5;
  }

  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

unint64_t sub_13C10(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_6D500, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_13C5C()
{
  return 4LL;
}

uint64_t sub_13C64()
{
  return 0LL;
}

uint64_t sub_13C70(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_13CAC + 4 * byte_5780C[a1]))( 0xD000000000000012LL,  0x800000000005A7C0LL);
}

void sub_13CAC()
{
}

unint64_t sub_13CBC()
{
  return 0xD000000000000010LL;
}

uint64_t sub_13CE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_13D20 + 4 * byte_57810[a1]))( 0xD000000000000012LL,  0x800000000005A7C0LL);
}

void sub_13D20()
{
}

unint64_t sub_13D30()
{
  return 0xD000000000000010LL;
}

void sub_13D58(char *a1)
{
}

Swift::Int sub_13D64()
{
  return sub_13934(*v0);
}

void sub_13D6C(uint64_t a1)
{
}

Swift::Int sub_13D74(uint64_t a1)
{
  return sub_13A14(a1, *v1);
}

unint64_t sub_13D7C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_13C10(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_13DA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_13C70(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_13DD0()
{
  return sub_13CE4(*v0);
}

uint64_t sub_13DD8@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_13C58(a1);
  *a2 = result;
  return result;
}

void sub_13DFC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_13E08(uint64_t a1)
{
  unint64_t v2 = sub_14384();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13E30(uint64_t a1)
{
  unint64_t v2 = sub_14384();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13E58()
{
  return swift_deallocClassInstance(v0, 28LL, 7LL);
}

uint64_t type metadata accessor for CsamSituation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin13CsamSituation);
}

uint64_t sub_13E9C(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_3974(&qword_79628);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_3324(a1, v9);
  unint64_t v11 = sub_14384();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for CsamSituation.CodingKeys,  &type metadata for CsamSituation.CodingKeys,  v11,  v9,  v10);
  uint64_t v12 = v3[24];
  char v21 = 0;
  sub_1455C(v12, (uint64_t)&v21);
  if (!v2)
  {
    uint64_t v13 = v3[25];
    char v20 = 1;
    sub_1455C(v13, (uint64_t)&v20);
    uint64_t v14 = v3[26];
    char v19 = 2;
    sub_1455C(v14, (uint64_t)&v19);
    uint64_t v15 = v3[27];
    char v18 = 3;
    sub_1455C(v15, (uint64_t)&v18);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_13FD0(void *a1)
{
  uint64_t v3 = swift_allocObject(v1, 28LL, 7LL);
  sub_1403C(a1);
  return v3;
}

uint64_t type metadata accessor for CsamSituation.Builder()
{
  return objc_opt_self(&OBJC_CLASS____TtCC19EmergencyFlowPlugin13CsamSituation7Builder);
}

uint64_t sub_1403C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_3974(&qword_79618);
  __chkstk_darwin(v5);
  *(void *)(v1 + 16) = 0LL;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_3324(a1, v6);
  unint64_t v8 = sub_14384();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for CsamSituation.CodingKeys,  &type metadata for CsamSituation.CodingKeys,  v8,  v6,  v7);
  if (v2)
  {

    uint64_t v9 = type metadata accessor for CsamSituation();
    swift_deallocPartialClassInstance(v1, v9, 28LL, 7LL);
  }

  else
  {
    char v15 = 0;
    *(_BYTE *)(v1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = sub_1454C((uint64_t)&v15) & 1;
    char v14 = 1;
    *(_BYTE *)(v1 + 25) = sub_1454C((uint64_t)&v14) & 1;
    char v13 = 2;
    *(_BYTE *)(v1 + 26) = sub_1454C((uint64_t)&v13) & 1;
    char v12 = 3;
    char v11 = sub_1454C((uint64_t)&v12);
    sub_1458C();
    *(_BYTE *)(v3 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = v11 & 1;
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
  return v3;
}

void *sub_141C8()
{
  uint64_t v1 = *v0;
  swift_beginAccess(*v0 + 16, v5, 0LL, 0LL);
  uint64_t v2 = *(void **)(v1 + 16);
  id v3 = v2;
  return v2;
}

void sub_1420C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess(v3 + 16, v5, 1LL, 0LL);
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a1;
}

void *sub_14254(uint64_t a1)
{
  return &j__swift_endAccess;
}

double sub_14298@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_13AE0(a1, a2);
}

uint64_t sub_142B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_13FD0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_142E0(void *a1)
{
  return sub_13E9C(a1);
}

uint64_t sub_14300()
{
  return sub_14348(&qword_79608, (uint64_t)&unk_578C8);
}

uint64_t sub_14324()
{
  return sub_14348(&qword_79610, (uint64_t)&unk_578A0);
}

uint64_t sub_14348(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for CsamSituation();
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_14384()
{
  unint64_t result = qword_79620;
  if (!qword_79620)
  {
    unint64_t result = swift_getWitnessTable(&unk_57A54, &type metadata for CsamSituation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_79620);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for CsamSituation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1440C + 4 * byte_57819[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_14440 + 4 * byte_57814[v4]))();
}

uint64_t sub_14440(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_14448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x14450LL);
  }
  return result;
}

uint64_t sub_1445C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x14464LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_14468(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_14470(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CsamSituation.CodingKeys()
{
  return &type metadata for CsamSituation.CodingKeys;
}

unint64_t sub_14490()
{
  unint64_t result = qword_79630;
  if (!qword_79630)
  {
    unint64_t result = swift_getWitnessTable(&unk_57A2C, &type metadata for CsamSituation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_79630);
  }

  return result;
}

unint64_t sub_144D0()
{
  unint64_t result = qword_79638;
  if (!qword_79638)
  {
    unint64_t result = swift_getWitnessTable(&unk_57964, &type metadata for CsamSituation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_79638);
  }

  return result;
}

unint64_t sub_14510()
{
  unint64_t result = qword_79640;
  if (!qword_79640)
  {
    unint64_t result = swift_getWitnessTable(&unk_5798C, &type metadata for CsamSituation.CodingKeys);
    atomic_store(result, &qword_79640);
  }

  return result;
}

uint64_t sub_1454C(uint64_t a1)
{
  return KeyedDecodingContainer.decode(_:forKey:)(a1, v1);
}

uint64_t sub_1455C(uint64_t a1, uint64_t a2)
{
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, v2);
}

uint64_t sub_1456C(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

  ;
}

uint64_t sub_1458C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

uint64_t sub_145A8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(_BYTE *)(v4 + 146) = a4;
  *(_BYTE *)(v4 + 145) = a3;
  *(void *)(v4 + 1696) = a2;
  *(void *)(v4 + 1688) = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  *(void *)(v4 + 1704) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v4 + 171_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v4 + 1720) = swift_task_alloc(v7);
  *(void *)(v4 + 1728) = swift_task_alloc(v7);
  return swift_task_switch(sub_14624, 0LL, 0LL);
}

uint64_t sub_14624()
{
  uint64_t v1 = *(void **)(v0 + 1696);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_3324(v1, v2);
  uint64_t v4 = *(int **)(v3 + 8);
  unint64_t v7 = (int *)((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  *(void *)(v0 + 1736) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_146B8;
  return ((uint64_t (*)(uint64_t, void, void, uint64_t, uint64_t))v7)( v0 + 424,  *(unsigned __int8 *)(v0 + 145),  *(unsigned __int8 *)(v0 + 146),  v2,  v3);
}

uint64_t sub_146B8()
{
  uint64_t v1 = *(void *)v0 + 16LL;
  uint64_t v2 = *(void *)v0 + 424LL;
  swift_task_dealloc(*(void *)(*(void *)v0 + 1736LL));
  sub_14BC0(v2, v1, &qword_79650);
  return swift_task_switch(sub_14728, 0LL, 0LL);
}

uint64_t sub_14728()
{
  uint64_t v44 = v0 + 1672;
  sub_14BC0(v0 + 424, v0 + 288, &qword_79650);
  if (sub_14BB8(v0 + 288) == 1)
  {
    uint64_t v1 = (uint64_t *)nullsub_1(v0 + 288);
    uint64_t v42 = *v1;
    uint64_t v2 = Logger.emergency.unsafeMutableAddressor(v1);
    sub_14D84(v2);
    sub_14D98();
    sub_14DBC();
    uint64_t v3 = *(void *)nullsub_1(v0 + 832);
    sub_14DAC();
    uint64_t v4 = (void *)nullsub_1(v0 + 968);
    swift_errorRetain(*v4);
    uint64_t v5 = swift_errorRetain(v3);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void *)(v0 + 1728);
    uint64_t v10 = *(void *)(v0 + 1712);
    uint64_t v11 = *(void *)(v0 + 1704);
    if (v8)
    {
      uint64_t v39 = *(void *)(v0 + 1712);
      char v12 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v13 = sub_3CD4(32LL);
      uint64_t v45 = v13;
      *(_DWORD *)char v12 = 136315138;
      *(void *)(v0 + 167_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v42;
      swift_errorRetain(v3);
      sub_3974(&qword_78950);
      uint64_t v14 = String.init<A>(describing:)(v44);
      unint64_t v16 = v15;
      *(void *)(v0 + 1680) = sub_543A4(v14, v15, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1680, v0 + 1688, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v16);
      sub_14D7C();
      sub_14D7C();
      _os_log_impl(&dword_0, v6, v7, "Error while fetching orgInfo: %s", v12, 0xCu);
      sub_14DCC();
      sub_3CA0(v13);
      sub_3CA0((uint64_t)v12);

      sub_14D7C();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v9, v11);
    }

    else
    {
      sub_14D7C();
      sub_14D7C();
      sub_14BC0(v0 + 16, v0 + 152, &qword_79650);
      uint64_t v34 = (void *)nullsub_1(v0 + 152);
      swift_errorRelease(*v34);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }

    uint64_t v35 = v0 + 1488;
    sub_E450((_OWORD *)(v0 + 1488));
  }

  else
  {
    uint64_t v43 = v0 + 424;
    uint64_t v17 = nullsub_1(v0 + 288);
    uint64_t v18 = sub_14BC0(v17, v0 + 1360, &qword_79098);
    uint64_t v19 = Logger.emergency.unsafeMutableAddressor(v18);
    sub_14D84(v19);
    sub_14D98();
    sub_14DAC();
    char v20 = (uint64_t *)nullsub_1(v0 + 696);
    sub_14DBC();
    char v21 = (uint64_t *)nullsub_1(v0 + 560);
    sub_14C04(v21);
    uint64_t v22 = sub_14C04(v20);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 1720);
    uint64_t v27 = *(void *)(v0 + 1712);
    uint64_t v28 = *(void *)(v0 + 1704);
    if (v25)
    {
      uint64_t v41 = *(void *)(v0 + 1712);
      uint64_t v29 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v40 = v28;
      uint64_t v30 = sub_3CD4(32LL);
      uint64_t v45 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      sub_14BC0(v0 + 1360, v0 + 1104, &qword_79098);
      sub_14C04(v20);
      sub_3974(&qword_79098);
      uint64_t v31 = String.init<A>(describing:)(v0 + 1104);
      unint64_t v33 = v32;
      *(void *)(v0 + 1664) = sub_543A4(v31, v32, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1664, v44, v29 + 4, v29 + 12);
      swift_bridgeObjectRelease(v33);
      sub_14D7C();
      sub_14D7C();
      _os_log_impl(&dword_0, v23, v24, "Successfully retrieved organization info: %s", v29, 0xCu);
      sub_14DCC();
      sub_3CA0(v30);
      sub_3CA0((uint64_t)v29);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v26, v40);
    }

    else
    {
      sub_14CEC(v43);
      sub_14CEC(v43);

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }

    uint64_t v35 = v0 + 1360;
  }

  sub_14BC0(v35, v0 + 1232, &qword_79098);
  uint64_t v36 = *(void *)(v0 + 1720);
  uint64_t v37 = *(void *)(v0 + 1688);
  swift_task_dealloc(*(void *)(v0 + 1728));
  swift_task_dealloc(v36);
  sub_14BC0(v0 + 1232, v37, &qword_79098);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_14BB8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 128);
}

uint64_t sub_14BC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_3974(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t *sub_14C04(uint64_t *a1)
{
  return a1;
}

uint64_t sub_14C5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a14);
    return swift_bridgeObjectRetain(a16);
  }

  return result;
}

uint64_t sub_14CEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_14D4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if ((a17 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  else {
    return sub_E8BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
}

uint64_t sub_14D7C()
{
  return sub_14CEC(v0);
}

uint64_t sub_14D84(uint64_t a1)
{
  return swift_beginAccess(a1, v1, 0LL, 0LL);
}

uint64_t sub_14D98()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v3, v1);
}

uint64_t sub_14DAC()
{
  return sub_14BC0(v1, v2, v0);
}

uint64_t sub_14DBC()
{
  return sub_14BC0(v1, v2, v0);
}

uint64_t sub_14DCC()
{
  return swift_arrayDestroy(v0, 1LL);
}

unint64_t sub_14DE0()
{
  unint64_t result = qword_79658;
  if (!qword_79658)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyOrganization,  &type metadata for EmergencyOrganization);
    atomic_store(result, (unint64_t *)&qword_79658);
  }

  return result;
}

unint64_t sub_14E20()
{
  unint64_t result = qword_79660;
  if (!qword_79660)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyOrganization,  &type metadata for EmergencyOrganization);
    atomic_store(result, (unint64_t *)&qword_79660);
  }

  return result;
}

uint64_t sub_14E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_150C0(a1, a2, a3, (uint64_t (*)(void))sub_152F8, (uint64_t (*)(void))sub_15334);
}

unint64_t sub_14E74()
{
  unint64_t result = qword_79668;
  if (!qword_79668)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyVerb, &type metadata for EmergencyVerb);
    atomic_store(result, (unint64_t *)&qword_79668);
  }

  return result;
}

unint64_t sub_14EB4()
{
  unint64_t result = qword_79670;
  if (!qword_79670)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyVerb, &type metadata for EmergencyVerb);
    atomic_store(result, (unint64_t *)&qword_79670);
  }

  return result;
}

uint64_t sub_14EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_150C0(a1, a2, a3, (uint64_t (*)(void))sub_15280, (uint64_t (*)(void))sub_152BC);
}

unint64_t sub_14F08()
{
  unint64_t result = qword_79678;
  if (!qword_79678)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyAttribute,  &type metadata for EmergencyAttribute);
    atomic_store(result, (unint64_t *)&qword_79678);
  }

  return result;
}

unint64_t sub_14F48()
{
  unint64_t result = qword_79680;
  if (!qword_79680)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyAttribute,  &type metadata for EmergencyAttribute);
    atomic_store(result, (unint64_t *)&qword_79680);
  }

  return result;
}

uint64_t sub_14F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_150C0(a1, a2, a3, (uint64_t (*)(void))sub_15208, (uint64_t (*)(void))sub_15244);
}

unint64_t sub_14F9C()
{
  unint64_t result = qword_79688;
  if (!qword_79688)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencySituation,  &type metadata for EmergencySituation);
    atomic_store(result, (unint64_t *)&qword_79688);
  }

  return result;
}

unint64_t sub_14FDC()
{
  unint64_t result = qword_79690;
  if (!qword_79690)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencySituation,  &type metadata for EmergencySituation);
    atomic_store(result, (unint64_t *)&qword_79690);
  }

  return result;
}

uint64_t sub_15018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_150C0(a1, a2, a3, (uint64_t (*)(void))sub_15190, (uint64_t (*)(void))sub_151CC);
}

unint64_t sub_15030()
{
  unint64_t result = qword_79698;
  if (!qword_79698)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyConfirmation,  &type metadata for EmergencyConfirmation);
    atomic_store(result, (unint64_t *)&qword_79698);
  }

  return result;
}

unint64_t sub_15070()
{
  unint64_t result = qword_796A0;
  if (!qword_796A0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyConfirmation,  &type metadata for EmergencyConfirmation);
    atomic_store(result, (unint64_t *)&qword_796A0);
  }

  return result;
}

uint64_t sub_150AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_150C0(a1, a2, a3, (uint64_t (*)(void))sub_15118, (uint64_t (*)(void))sub_15154);
}

uint64_t sub_150C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v8 = a4();
  uint64_t v9 = a5();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v8, v9);
}

unint64_t sub_15118()
{
  unint64_t result = qword_796A8;
  if (!qword_796A8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyConfirmation,  &type metadata for EmergencyConfirmation);
    atomic_store(result, (unint64_t *)&qword_796A8);
  }

  return result;
}

unint64_t sub_15154()
{
  unint64_t result = qword_796B0;
  if (!qword_796B0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyConfirmation,  &type metadata for EmergencyConfirmation);
    atomic_store(result, (unint64_t *)&qword_796B0);
  }

  return result;
}

unint64_t sub_15190()
{
  unint64_t result = qword_796B8;
  if (!qword_796B8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencySituation,  &type metadata for EmergencySituation);
    atomic_store(result, (unint64_t *)&qword_796B8);
  }

  return result;
}

unint64_t sub_151CC()
{
  unint64_t result = qword_796C0;
  if (!qword_796C0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencySituation,  &type metadata for EmergencySituation);
    atomic_store(result, (unint64_t *)&qword_796C0);
  }

  return result;
}

unint64_t sub_15208()
{
  unint64_t result = qword_796C8;
  if (!qword_796C8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyAttribute,  &type metadata for EmergencyAttribute);
    atomic_store(result, (unint64_t *)&qword_796C8);
  }

  return result;
}

unint64_t sub_15244()
{
  unint64_t result = qword_796D0;
  if (!qword_796D0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyAttribute,  &type metadata for EmergencyAttribute);
    atomic_store(result, (unint64_t *)&qword_796D0);
  }

  return result;
}

unint64_t sub_15280()
{
  unint64_t result = qword_796D8;
  if (!qword_796D8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyVerb, &type metadata for EmergencyVerb);
    atomic_store(result, (unint64_t *)&qword_796D8);
  }

  return result;
}

unint64_t sub_152BC()
{
  unint64_t result = qword_796E0;
  if (!qword_796E0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for EmergencyVerb, &type metadata for EmergencyVerb);
    atomic_store(result, (unint64_t *)&qword_796E0);
  }

  return result;
}

unint64_t sub_152F8()
{
  unint64_t result = qword_796E8;
  if (!qword_796E8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyOrganization,  &type metadata for EmergencyOrganization);
    atomic_store(result, (unint64_t *)&qword_796E8);
  }

  return result;
}

unint64_t sub_15334()
{
  unint64_t result = qword_796F0;
  if (!qword_796F0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmergencyOrganization,  &type metadata for EmergencyOrganization);
    atomic_store(result, (unint64_t *)&qword_796F0);
  }

  return result;
}

uint64_t sub_15370()
{
  uint64_t v191 = v2;
  uint64_t v192 = v3;
  uint64_t v163 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Parse.DirectInvocation(0LL);
  sub_1840C(v6, (uint64_t)&v189);
  uint64_t v172 = v7;
  sub_EDD8();
  __chkstk_darwin(v8);
  sub_ED8C();
  __chkstk_darwin(v9);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v10);
  sub_1300C();
  uint64_t v178 = v11;
  type metadata accessor for EmergencyNLIntent(0LL);
  sub_6764();
  __chkstk_darwin(v12);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v13);
  sub_1300C();
  uint64_t v15 = sub_EE14(v14);
  uint64_t v16 = type metadata accessor for NLIntent(v15);
  sub_1840C(v16, (uint64_t)&v190);
  uint64_t v175 = v17;
  sub_EDD8();
  __chkstk_darwin(v18);
  sub_6750();
  uint64_t v174 = v19;
  type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  sub_6764();
  __chkstk_darwin(v20);
  sub_6750();
  uint64_t v22 = sub_EE14(v21);
  type metadata accessor for EmergencyDialogAct(v22);
  sub_6764();
  __chkstk_darwin(v23);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v24);
  sub_1300C();
  uint64_t v26 = sub_EE14(v25);
  uint64_t v27 = type metadata accessor for USOParse(v26);
  sub_1840C(v27, (uint64_t)&v183);
  uint64_t v153 = v28;
  sub_EDD8();
  __chkstk_darwin(v29);
  sub_6750();
  uint64_t v31 = sub_EE14(v30);
  uint64_t v32 = type metadata accessor for Parse(v31);
  uint64_t v179 = *(void *)(v32 - 8);
  uint64_t v180 = v32;
  sub_EDD8();
  __chkstk_darwin(v33);
  sub_6750();
  uint64_t v181 = v34;
  uint64_t v35 = type metadata accessor for Input(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_183F4();
  uint64_t v37 = (uint8_t *)type metadata accessor for Logger(0LL);
  uint64_t v38 = *((void *)v37 - 1);
  __chkstk_darwin(v37);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v39);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v40);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v41);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v42);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v43);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v44);
  sub_EE64();
  sub_ED8C();
  uint64_t v46 = __chkstk_darwin(v45);
  int v48 = (char *)&v148 - v47;
  uint64_t v49 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v46);
  sub_3CC8((uint64_t)v49, (uint64_t)v188);
  v176 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
  char v177 = v49;
  sub_1849C((uint64_t)v48, (uint64_t)v49, v176);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
  uint64_t v173 = v5;
  uint64_t v51 = sub_182F0(v1, v50);
  Logger.logObject.getter(v51);
  os_log_type_t v52 = sub_EEB4();
  if (os_log_type_enabled(v49, v52))
  {
    sub_3CD4(12LL);
    sub_18420();
    uint64_t v53 = sub_3CD4(32LL);
    uint64_t v150 = v38;
    uint64_t v54 = v53;
    v182[0] = v53;
    *(_DWORD *)uint64_t v37 = 136315138;
    char v149 = v37 + 4;
    sub_EF34( &qword_790C0,  v55,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter(v35, v56);
    unint64_t v59 = v58;
    uint64_t v185 = sub_543A4(v57, v58, v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, &v186, v149, v37 + 12);
    swift_bridgeObjectRelease(v59);
    sub_183D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    sub_67F8(&dword_0, v49, v52, "#EmergencyOfferCallFlow onInput: %s", v37);
    sub_67DC(v54);
    sub_3CA0(v54);
    uint64_t v60 = (uint64_t)v37;
    uint64_t v37 = v164;
    sub_3CA0(v60);

    unint64_t v61 = *(void (**)(uint64_t, uint8_t *))(v150 + 8);
  }

  else
  {
    sub_183D4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));

    unint64_t v61 = *(void (**)(uint64_t, uint8_t *))(v38 + 8);
  }

  uint64_t v62 = sub_18520((uint64_t)v48);
  uint64_t v63 = v181;
  Input.parse.getter(v62);
  uint64_t v64 = v179;
  int v65 = (*(uint64_t (**)(uint8_t *, uint64_t))(v179 + 88))(v63, v180);
  uint64_t v66 = (uint64_t)v177;
  uint64_t v67 = v178;
  if (v65 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_182BC();
    uint64_t v68 = v169;
    (*(void (**)(uint64_t, uint8_t *, uint64_t))(v175 + 32))(v174, v63, v169);
    sub_3CC8(v66, (uint64_t)&v185);
    uint64_t v69 = v167;
    sub_18254(v167);
    sub_13124();
    os_log_type_t v70 = sub_EEB4();
    if (sub_EDE4(v70))
    {
      uint64_t v71 = (_WORD *)sub_8D14();
      sub_182E4(v71);
      sub_18240(&dword_0, v72, v73, "EmergencyOfferCallFlow onInput .NLv3IntentOnly");
      sub_3CA0(v64);
    }

    sub_183B4(v69);
    uint64_t v74 = v174;
    uint64_t v75 = v175;
    uint64_t v76 = v170;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v170, v174, v68);
    uint64_t v77 = v171;
    sub_181F8(v76, v171, type metadata accessor for EmergencyNLIntent);
    sub_22DC0(v77);
    uint64_t v79 = v78;
    sub_EAF0(v76, type metadata accessor for EmergencyNLIntent);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v68);
    goto LABEL_18;
  }

  if (v65 == enum case for Parse.directInvocation(_:))
  {
    sub_182BC();
    (*(void (**)(uint64_t, uint8_t *, uint64_t))(v172 + 32))(v67, v63, v166);
    sub_3CC8(v66, (uint64_t)v182);
    uint64_t v80 = sub_18254(v168);
    Logger.logObject.getter(v80);
    os_log_type_t v81 = sub_EEB4();
    if (sub_EDE4(v81))
    {
      uint64_t v82 = (_WORD *)sub_8D14();
      sub_182E4(v82);
      sub_18240(&dword_0, v83, v84, "EmergencyOfferCallFlow onInput .directInvocation");
      sub_3CA0(v64);
    }

    uint64_t v85 = sub_18520(v168);
    uint64_t v86 = Parse.DirectInvocation.identifier.getter(v85);
    uint64_t v88 = v87;
    if (v86 == 0xD000000000000035LL && v87 == 0x800000000005B1B0LL)
    {
      swift_bridgeObjectRelease(0x800000000005B1B0LL);
    }

    else
    {
      char v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, 0xD000000000000035LL, 0x800000000005B1B0LL, 0LL);
      swift_bridgeObjectRelease(v88);
      if ((v120 & 1) == 0) {
        goto LABEL_28;
      }
    }

    __int16 v121 = sub_28990(v67);
    if (v121 != 35)
    {
      LOWORD(v10_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v121;
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v67, v166);
      LOBYTE(v79) = 4;
      goto LABEL_33;
    }

LABEL_28:
    uint64_t v173 = v61;
    sub_3CC8(v66, (uint64_t)&v185);
    sub_18254(v158);
    uint64_t v122 = v172;
    uint64_t v123 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v172 + 16);
    uint64_t v124 = v159;
    uint64_t v125 = v166;
    uint64_t v126 = v123(v159, v67, v166);
    uint64_t v127 = (os_log_s *)Logger.logObject.getter(v126);
    os_log_type_t v128 = static os_log_type_t.error.getter();
    if (sub_12FD8(v128))
    {
      BOOL v129 = (uint8_t *)sub_3CD4(12LL);
      sub_3CD4(32LL);
      sub_18420();
      uint64_t v187 = v130;
      *(_DWORD *)BOOL v129 = 136315138;
      uint64_t v181 = v129 + 4;
      uint64_t v131 = v151;
      v123(v151, v124, v125);
      uint64_t v132 = String.init<A>(describing:)(v131);
      unint64_t v134 = v133;
      uint64_t v184 = sub_543A4(v132, v133, &v187);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185, v181, v129 + 12);
      swift_bridgeObjectRelease(v134);
      unint64_t v135 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
      v135(v124, v125);
      sub_67F8(&dword_0, v127, (os_log_type_t)0x35u, "Failed to get emergencySituation from DirectInvocation: %s", v129);
      sub_67DC((uint64_t)v37);
      sub_3CA0((uint64_t)v37);
      sub_3CA0((uint64_t)v129);

      sub_1831C();
      v135(v178, v125);
    }

    else
    {

      uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
      v147(v124, v125);
      sub_1831C();
      v147(v67, v125);
    }

    return 0LL;
  }

  if (v65 != enum case for Parse.uso(_:))
  {
    sub_3CC8((uint64_t)v177, (uint64_t)v182);
    uint64_t v136 = v152;
    uint64_t v137 = sub_18254(v152);
    uint64_t v138 = (os_log_s *)Logger.logObject.getter(v137);
    os_log_type_t v139 = static os_log_type_t.error.getter();
    if (sub_12FD8(v139))
    {
      uint64_t v173 = v61;
      unint64_t v140 = (uint8_t *)sub_3CD4(12LL);
      sub_3CD4(32LL);
      sub_18420();
      uint64_t v185 = v141;
      *(_DWORD *)unint64_t v140 = 136315138;
      LOBYTE(v18_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 0;
      uint64_t v142 = String.init<A>(describing:)(&v187);
      unint64_t v144 = v143;
      uint64_t v187 = sub_543A4(v142, v143, &v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v187, v188, v140 + 4, v140 + 12);
      swift_bridgeObjectRelease(v144);
      sub_67F8(&dword_0, v138, (os_log_type_t)v64, "%s", v140);
      sub_67DC((uint64_t)v37);
      sub_3CA0((uint64_t)v37);
      sub_3CA0((uint64_t)v140);

      sub_1831C();
    }

    else
    {

      sub_18520(v136);
    }

    (*(void (**)(uint8_t *, uint64_t))(v179 + 8))(v181, v180);
    return 0LL;
  }

  sub_182BC();
  uint64_t v89 = v153;
  (*(void (**)(uint64_t, uint8_t *, uint64_t))(v153 + 32))(v162, v63, v154);
  sub_3CC8(v66, (uint64_t)&v185);
  uint64_t v90 = sub_18254(v161);
  Logger.logObject.getter(v90);
  os_log_type_t v91 = sub_EEB4();
  if (sub_EDE4(v91))
  {
    uint64_t v92 = (_WORD *)sub_8D14();
    sub_182E4(v92);
    sub_18240(&dword_0, v93, v94, "#EmergencyOfferCallFlow onInput .uso");
    sub_3CA0(v64);
  }

  uint64_t v95 = sub_183B4(v161);
  uint64_t v96 = v157;
  uint64_t v97 = v162;
  USOParse.userParse.getter(v95);
  v182[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
  unint64_t v183 = sub_EA88();
  LOBYTE(v182[0]) = 2;
  char v98 = isFeatureEnabled(_:)(v182);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v182);
  uint64_t v99 = v155;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v96, v98 & 1);
  uint64_t v100 = v156;
  sub_181F8(v99, v156, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  sub_22B3C(v100);
  uint64_t v79 = v101;
  sub_182DC(v99);
  sub_18528(v97, *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8));
LABEL_18:
  unsigned int v102 = v79 >> 8;
  if (v79 == 4 && BYTE1(v79) == 35)
  {
    sub_3CC8(v66, (uint64_t)v182);
    uint64_t v103 = v165;
    sub_18254(v165);
    sub_13124();
    os_log_type_t v104 = sub_EEB4();
    if (sub_EDE4(v104))
    {
      uint64_t v105 = (_WORD *)sub_8D14();
      sub_182E4(v105);
      sub_18240(&dword_0, v106, v107, "#EmergencyOfferCallFlow Produced an empty intent. Ignoring input.");
      sub_3CA0(v79 >> 8);
    }

    uint64_t v108 = v103;
    goto LABEL_35;
  }

  if ((v79 & 0x10000) == 0)
  {
LABEL_33:
    uint64_t v145 = v163;
    *(_BYTE *)(v163 + 218) = 0;
    *(_WORD *)(v145 + 216) = v79 | (unsigned __int16)((_WORD)v102 << 8);
    return 1LL;
  }

  sub_3CC8(v66, (uint64_t)v182);
  uint64_t v109 = v160;
  uint64_t v110 = sub_18254((uint64_t)v160);
  uint64_t v111 = v109;
  Logger.logObject.getter(v110);
  os_log_type_t v112 = sub_18418();
  if (!sub_182CC(v112))
  {

    uint64_t v108 = (uint64_t)v109;
LABEL_35:
    uint64_t v119 = v37;
    goto LABEL_36;
  }

  unint64_t v113 = v37;
  uint64_t v114 = (uint8_t *)sub_3CD4(12LL);
  uint64_t v115 = sub_3CD4(32LL);
  *(_DWORD *)uint64_t v114 = 136315138;
  uint64_t v187 = v115;
  LOWORD(v184) = (_WORD)v79;
  BYTE2(v184) = 1;
  uint64_t v116 = String.init<A>(describing:)(&v184);
  unint64_t v118 = v117;
  uint64_t v184 = sub_543A4(v116, v117, &v187);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, &v185, v114 + 4, v114 + 12);
  swift_bridgeObjectRelease(v118);
  sub_67F8( &dword_0,  v111,  (os_log_type_t)&type metadata for Any,  "#EmergencyOfferCallFlow Expected a non-DirectCall intent. Aborting flow. Intent: [%s]",  v114);
  sub_67DC(v115);
  sub_3CA0(v115);
  sub_3CA0((uint64_t)v114);

  uint64_t v108 = (uint64_t)v160;
  uint64_t v119 = v113;
LABEL_36:
  v173(v108, v119);
  return 0LL;
}

  sub_3D344();
  sub_7DF0();
}

uint64_t sub_16008(uint64_t a1)
{
  v2[148] = v1;
  v2[147] = a1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  v2[149] = v3;
  v2[150] = *(void *)(v3 - 8);
  v2[151] = sub_45A0();
  v2[152] = sub_45A0();
  v2[153] = sub_45A0();
  v2[154] = sub_45A0();
  return sub_451C();
}

uint64_t sub_1607C(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(v1 + 1232);
  uint64_t v3 = *(void *)(v1 + 1200);
  uint64_t v4 = Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 1240) = v4;
  sub_3CC8(v4, v1 + 1104);
  *(void *)(v1 + 1248) = *(void *)(v3 + 16);
  uint64_t v5 = sub_184A4((uint64_t)v2);
  uint64_t v6 = v2;
  Logger.logObject.getter(v5);
  os_log_type_t v7 = sub_67D4();
  if (sub_182AC(v7))
  {
    uint64_t v8 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v8 = 0;
    sub_EDA8(&dword_0, v2, (os_log_type_t)v2, "#EmergencyOfferCallFlow execute", v8);
    sub_3CA0((uint64_t)v8);
  }

  uint64_t v9 = *(void *)(v1 + 1232);
  uint64_t v10 = *(void *)(v1 + 1200);
  uint64_t v11 = *(void *)(v1 + 1192);
  uint64_t v12 = *(void *)(v1 + 1184);

  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v1 + 1256) = v13;
  uint64_t v14 = v13(v9, v11);
  int v15 = *(unsigned __int8 *)(v12 + 218);
  if (v15 == 2)
  {
    uint64_t v9 = *(void *)(v1 + 1184);
    uint64_t v6 = *(void **)(v1 + 1176);
    unint64_t v16 = sub_E94C();
    uint64_t v4 = swift_allocError(&type metadata for EmergencyFlowError, v16, 0LL, 0LL);
    _BYTE *v17 = 2;
    sub_30F8(v4, v9 + 16, (void *)(v9 + 56), (uint64_t)v6);
    swift_errorRelease(v4);
  }

  else if (v15 == 3)
  {
    static ExecuteResponse.complete()(v14);
  }

  else
  {
    __int16 v18 = *(_WORD *)(v12 + 216);
    if (HIBYTE(v18) != 35 || v18 != 4)
    {
      sub_9010();
      if (*(void *)(v1 + 984))
      {
        sub_65A4((__int128 *)(v1 + 960), v1 + 880);
        sub_8D20();
        if (*(void *)(v1 + 1064))
        {
          uint64_t v19 = *(void *)(v1 + 1184);
          sub_65A4((__int128 *)(v1 + 1040), v1 + 1000);
          uint64_t v20 = (void *)swift_task_alloc(dword_7964C);
          *(void *)(v1 + 1264) = v20;
          *uint64_t v20 = v1;
          v20[1] = sub_163D0;
          return sub_145A8(v1 + 272, v19 + 136, SHIBYTE(v18), v18);
        }

        _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v1 + 880));
        uint64_t v22 = (uint64_t *)&unk_79820;
        uint64_t v23 = v1 + 1040;
      }

      else
      {
        uint64_t v22 = (uint64_t *)&unk_79818;
        uint64_t v23 = v1 + 960;
      }

      sub_E988(v23, v22);
    }

    uint64_t v9 = v1 + 768;
    uint64_t v24 = *(os_log_s **)(v1 + 1208);
    sub_3CC8(v4, v1 + 1080);
    uint64_t v25 = sub_184A4((uint64_t)v24);
    Logger.logObject.getter(v25);
    os_log_type_t v26 = sub_18418();
    if (os_log_type_enabled(v24, v26))
    {
      uint64_t v27 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v27 = 0;
      sub_EDA8(&dword_0, v24, v26, "#EmergencyOfferCallFlow Intent missing a situation or valid organization", v27);
      sub_3CA0((uint64_t)v27);
    }

    uint64_t v4 = *(void *)(v1 + 1208);
    uint64_t v28 = *(void *)(v1 + 1192);
    uint64_t v29 = *(void *)(v1 + 1184);

    v13(v4, v28);
    uint64_t v30 = sub_3324((void *)(v29 + 56), *(void *)(v29 + 80));
    sub_EE24((void *)(v1 + 768), v30);
    uint64_t v6 = (void *)sub_37CC(v29 + 16, (void *)(v1 + 768));
    static ExecuteResponse.complete(next:)(v6);
    sub_EE0C();
  }

  sub_1835C();
  swift_task_dealloc(v6);
  swift_task_dealloc(v4);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_163D0()
{
  return sub_451C();
}

uint64_t sub_1641C()
{
  uint64_t v1 = (void *)(v0 + 1000);
  sub_180F4(v0 + 272, v0 + 528, &qword_79098);
  if (sub_E438(v0 + 528) != 1)
  {
    uint64_t v4 = *(void **)(v0 + 1184);
    sub_EE84((void *)(v0 + 16), (const void *)(v0 + 528));
    sub_EE84(v43, (const void *)(v0 + 528));
    uint64_t v5 = v4 + 2;
    uint64_t v6 = v4[5];
    uint64_t v7 = v4[6];
    sub_3324(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v8 = *(void *)(v0 + 944);
    uint64_t v9 = *(void *)(v0 + 952);
    sub_3324((void *)(v0 + 920), v8);
    char v10 = dispatch thunk of DeviceState.isSidekick.getter(v8, v9);
    uint64_t v11 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 920));
    if ((v10 & 1) != 0)
    {
      uint64_t v12 = *(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v0 + 1248);
      uint64_t v13 = *(void *)(v0 + 1240);
      uint64_t v14 = *(os_log_s **)(v0 + 1224);
      uint64_t v15 = *(void *)(v0 + 1192);
      sub_3CC8(v13, v0 + 1152);
      uint64_t v16 = v12(v14, v13, v15);
      uint64_t v17 = v14;
      Logger.logObject.getter(v16);
      os_log_type_t v18 = sub_18418();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)sub_8D14();
        *(_WORD *)uint64_t v19 = 0;
        sub_EDA8( &dword_0,  v17,  v18,  "#EmergencyOfferCallFlow Calling disabled on this device. Not offering a call",  v19);
        sub_3CA0((uint64_t)v19);
      }

      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 1256);
      uint64_t v21 = *(void *)(v0 + 1224);
      uint64_t v22 = *(void *)(v0 + 1192);
      uint64_t v23 = *(void *)(v0 + 1184);

      v20(v21, v22);
      sub_3324((void *)(v23 + 176), *(void *)(v23 + 200));
      uint64_t v1 = (void *)(v0 + 1000);
      sub_17F08();
      uint64_t v3 = v24;
      sub_184E0( v24,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
    }

    else
    {
      if ((EmergencyOrganizationInfo.hasNameAndNumber.getter(v11) & 1) != 0)
      {
        sub_184BC();
        sub_16AE4();
      }

      else
      {
        uint64_t v26 = EmergencyOrganizationInfo.hasNameAndWebsite.getter();
        if ((v26 & 1) != 0)
        {
          sub_184BC();
          sub_1719C();
        }

        else
        {
          unint64_t v27 = *(void *)(v0 + 120);
          if ((v27 & 0x2000000000000000LL) != 0) {
            uint64_t v28 = HIBYTE(v27) & 0xF;
          }
          else {
            uint64_t v28 = *(void *)(v0 + 112) & 0xFFFFFFFFFFFFLL;
          }
          if (!v28)
          {
            uint64_t v30 = *(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v0 + 1248);
            uint64_t v31 = *(void *)(v0 + 1240);
            uint64_t v32 = *(os_log_s **)(v0 + 1216);
            uint64_t v33 = *(void *)(v0 + 1192);
            sub_184E0( v26,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
            sub_3CC8(v31, v0 + 1128);
            uint64_t v34 = v30(v32, v31, v33);
            uint64_t v35 = v32;
            Logger.logObject.getter(v34);
            os_log_type_t v36 = sub_18418();
            if (sub_182CC(v36))
            {
              uint64_t v37 = (uint8_t *)sub_8D14();
              *(_WORD *)uint64_t v37 = 0;
              sub_EDA8( &dword_0,  v32,  (os_log_type_t)(v0 + 16),  "#EmergencyOfferCallFlow OrgInfo had no usable info",  v37);
              sub_3CA0((uint64_t)v37);
            }

            uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 1256);
            uint64_t v39 = *(void *)(v0 + 1216);
            uint64_t v40 = *(void *)(v0 + 1192);
            uint64_t v41 = *(void *)(v0 + 1184);

            v38(v39, v40);
            uint64_t v42 = sub_3324((void *)(v41 + 56), *(void *)(v41 + 80));
            sub_EE24((void *)(v0 + 656), v42);
            uint64_t v3 = sub_37CC((uint64_t)v5, (void *)(v0 + 656));
            uint64_t v1 = (void *)(v0 + 1000);
            goto LABEL_17;
          }

          sub_3324((void *)(*(void *)(v0 + 1184) + 176LL), *(void *)(*(void *)(v0 + 1184) + 200LL));
          sub_EE84((void *)(v0 + 400), v43);
          nullsub_1(v0 + 400);
          sub_180F4(v0 + 400, v0 + 144, &qword_79098);
          sub_177FC();
        }
      }

      uint64_t v3 = v25;
      sub_184E0( v25,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
    }

uint64_t sub_167F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyOfferCallFlow();
  sub_EB44( &qword_79810,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyOfferCallFlow,  (uint64_t)&unk_57D6C);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_16864()
{
  return swift_deallocClassInstance(v0, 219LL, 7LL);
}

uint64_t type metadata accessor for EmergencyOfferCallFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin22EmergencyOfferCallFlow);
}

uint64_t initializeBufferWithCopyOfBuffer for EmergencyOfferCallFlow.EmergencyOfferCallFlowState( uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for EmergencyOfferCallFlow.EmergencyOfferCallFlowState( unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFD)
  {
    int v2 = (a2 + 16776963) >> 24 == 255 ? 2 : 1;
    int v3 = (a2 + 16776963) >> 24 ? v2 : 0;
    if (v3)
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)((char *)a1 + 3);
      }

      else
      {
        int v4 = *((unsigned __int8 *)a1 + 3);
        if (*((_BYTE *)a1 + 3)) {
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776963;
        }
      }
    }
  }

  unsigned int v6 = *((unsigned __int8 *)a1 + 2);
  if (v6 < 2) {
    return 0LL;
  }
  unsigned int v7 = (v6 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v7 - 1;
  if (v7 <= 1) {
    return 0LL;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EmergencyOfferCallFlow.EmergencyOfferCallFlowState( uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 16776963) >> 24 == 255) {
    int v3 = 2;
  }
  else {
    int v3 = 1;
  }
  if ((a3 + 16776963) >> 24) {
    int v4 = v3;
  }
  else {
    int v4 = 0;
  }
  if (a3 < 0xFD) {
    int v4 = 0;
  }
  if (a2 > 0xFC)
  {
    *(_WORD *)uint64_t result = a2 - 253;
    *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = (a2 - 253) >> 16;
    if (v4)
    {
      unsigned int v5 = ((a2 - 253) >> 24) + 1;
      if (v4 == 2) {
        *(_WORD *)(result + 3) = v5;
      }
      else {
        *(_BYTE *)(result + 3) = v5;
      }
    }
  }

  else
  {
    if (!v4) {
      goto LABEL_13;
    }
    if (v4 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_13:
      if (!a2) {
        return result;
      }
LABEL_19:
      *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a2 + 3;
      return result;
    }

    *(_BYTE *)(result + 3) = 0;
    if (a2) {
      goto LABEL_19;
    }
  }

  return result;
}

uint64_t sub_169D4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 2);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_169F0(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    unsigned int v2 = (a2 - 255) >> 16;
  }

  else
  {
    if (!a2) {
      return result;
    }
    LOBYTE(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a2 + 1;
  }

  *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v2;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyOfferCallFlow.EmergencyOfferCallFlowState()
{
  return &type metadata for EmergencyOfferCallFlow.EmergencyOfferCallFlowState;
}

uint64_t sub_16A28()
{
  return sub_15370() & 1;
}

uint64_t sub_16A4C(uint64_t a1, uint64_t a2)
{
  return sub_167F4(a1, a2);
}

uint64_t sub_16A6C(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc(dword_79724);
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_5F44;
  return sub_16008(a1);
}

uint64_t sub_16AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyOfferCallFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

void sub_16AE4()
{
  unsigned int v2 = v0;
  int v4 = v3;
  sub_EE84(v93, v3);
  uint64_t v75 = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  sub_6764();
  __chkstk_darwin(v5);
  sub_66F4();
  uint64_t v76 = v6;
  __chkstk_darwin(v7);
  sub_1300C();
  uint64_t v77 = v8;
  uint64_t v73 = sub_18328();
  sub_6764();
  __chkstk_darwin(v9);
  sub_6750();
  uint64_t v74 = v10;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v11);
  sub_6750();
  uint64_t v78 = v12;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v13);
  sub_66F4();
  uint64_t v72 = v14;
  __chkstk_darwin(v15);
  sub_1300C();
  uint64_t v79 = v16;
  uint64_t v17 = sub_18334();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (os_log_s *)((char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v72 - v22;
  uint64_t v24 = sub_4508();
  uint64_t v82 = *(void *)(v24 - 8);
  uint64_t v83 = v24;
  sub_EDD8();
  __chkstk_darwin(v25);
  sub_183F4();
  uint64_t v26 = v4[6];
  uint64_t v27 = v4[7];
  swift_bridgeObjectRetain(v27);
  uint64_t v81 = v1;
  sub_44E8(v26, v27);
  uint64_t v28 = type metadata accessor for DialogPhoneNumber.Builder(0LL);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  DialogPhoneNumber.Builder.init()();
  uint64_t v29 = v4[8];
  uint64_t v30 = v4[9];
  uint64_t v80 = v4;
  uint64_t v31 = dispatch thunk of DialogPhoneNumber.Builder.withValue(print:speak:)(v29, v30, 0LL, 0LL);
  uint64_t v32 = sub_EE0C();
  uint64_t v33 = dispatch thunk of DialogPhoneNumber.Builder.build()(v32);
  swift_release(v31);
  uint64_t v34 = v2[3];
  uint64_t v35 = v2[4];
  sub_3324(v2, v34);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 8))(v92, v34, v35);
  uint64_t v36 = sub_4808C(v92);
  LOBYTE(vsub_66BC(v0 + 34) = v36;
  uint64_t v37 = Logger.emergency.unsafeMutableAddressor(v36);
  uint64_t v38 = (os_log_s *)v37;
  if ((v34 & 1) != 0)
  {
    uint64_t v74 = v33;
    sub_3CC8(v37, (uint64_t)&v91);
    uint64_t v39 = sub_18474((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    Logger.logObject.getter(v39);
    os_log_type_t v40 = sub_67D4();
    if (sub_182CC(v40))
    {
      uint64_t v41 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v41 = 0;
      sub_EDA8( &dword_0,  v21,  (os_log_type_t)v23,  "#EmergencyOfferCallFlow Resource is available. Confirm before calling.",  v41);
      sub_3CA0((uint64_t)v41);
    }

    sub_18528((uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    sub_184B0();
    sub_60A4((uint64_t)(v2 + 5), (uint64_t)&v88);
    sub_EE84(v90, v93);
    sub_180EC((uint64_t)v90);
    sub_E9BC(v90, &v89);
    uint64_t v42 = v80;
    sub_6408(v80);
    sub_E9F8();
    uint64_t v43 = Flow.eraseToAnyFlow()(&type metadata for CallFlow);
    sub_EA34((uint64_t)v87);
    sub_3324(v2 + 5, v2[8]);
    uint64_t v44 = v78;
    uint64_t v45 = v83;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v78, v81, v83);
    sub_3F18(v44, 0LL, 1LL, v45);
    sub_EEA4();
    uint64_t v46 = v79;
    sub_237B0(v44);
    sub_EE0C();
    sub_E988(v44, &qword_78970);
    sub_3324(v2 + 5, v2[8]);
    uint64_t v47 = (int *)v75;
    uint64_t v48 = v77;
    sub_EEA4();
    sub_2396C();
    sub_EE0C();
    sub_180F4(v46, v48, &qword_78958);
    *(void *)(v48 + v47[6]) = v43;
    *(void *)(v48 + v47[7]) = 2LL;
    *(_BYTE *)(v48 + v47[8]) = 0;
    *(_BYTE *)(v48 + v47[9]) = 1;
    sub_60A4((uint64_t)v2, (uint64_t)v86);
    sub_60A4((uint64_t)(v2 + 5), (uint64_t)v85);
    sub_60E4((uint64_t)(v2 + 10), (uint64_t)v84);
    uint64_t v49 = sub_6120((uint64_t)v85, v85[3]);
    __chkstk_darwin(v49);
    sub_6740();
    os_log_type_t v52 = (const void *)(v51 - v50);
    (*(void (**)(uint64_t))(v53 + 16))(v51 - v50);
    sub_181F8(v48, v76, type metadata accessor for ConfirmationFlowConfigModel);
    sub_EE24(v87, v52);
    sub_6408(v42);
    swift_retain(v43);
    uint64_t v55 = sub_182FC(v42, v54, v86, v87, (uint64_t)v84);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
    *(void *)&v86[0] = v55;
    uint64_t v56 = type metadata accessor for EmergencyConfirmationFlow();
    sub_EF34( &qword_78B38,  v57,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
    Flow.eraseToAnyFlow()(v56);
    swift_release(v55);
    swift_release(v74);
    swift_release(v43);
    sub_EAF0(v48, type metadata accessor for ConfirmationFlowConfigModel);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v92);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
  }

  else
  {
    sub_3CC8(v37, (uint64_t)v90);
    sub_18474((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    sub_13124();
    os_log_type_t v58 = sub_67D4();
    if (os_log_type_enabled(v38, v58))
    {
      unint64_t v59 = (uint8_t *)sub_8D14();
      *(_WORD *)unint64_t v59 = 0;
      sub_EDA8( &dword_0,  v38,  v58,  "#EmergencyOfferCallFlow Request made on device that doesn't support calling. Give supportive dialog.",  v59);
      sub_3CA0((uint64_t)v59);
    }

    sub_18528((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    sub_3324(v2 + 5, v2[8]);
    uint64_t v61 = v81;
    uint64_t v60 = v82;
    uint64_t v62 = v78;
    uint64_t v63 = v83;
    sub_1849C(v78, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 16));
    sub_1838C(v62);
    sub_EEA4();
    swift_retain(v33);
    char v64 = sub_4808C(v92);
    uint64_t v65 = v79;
    sub_235F8(v62, v33, v64 & 1);
    sub_EE0C();
    uint64_t v66 = swift_release(v33);
    sub_183AC(v66, &qword_78970);
    uint64_t v67 = v72;
    sub_3B20(v65, v72);
    sub_184B0();
    uint64_t v68 = EmergencyOrganizationInfo.asRREntities()();
    uint64_t v69 = v74;
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v67, &_swiftEmptyArrayStorage, v87, v68);
    sub_182A0(&qword_78960, v70, v71, (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v73);
    swift_release(v33);
    sub_182DC(v69);
    sub_E988(v65, &qword_78958);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v92);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v63);
  }

  sub_7DF0();
}

void sub_1719C()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v96 = type metadata accessor for AppPunchOutFlow(0LL);
  sub_6764();
  __chkstk_darwin(v6);
  sub_6750();
  uint64_t v95 = v7;
  sub_3974((uint64_t *)&unk_7AE80);
  sub_6764();
  __chkstk_darwin(v8);
  sub_6750();
  uint64_t v10 = sub_EE14(v9);
  uint64_t v11 = type metadata accessor for URL(v10);
  sub_1840C(v11, (uint64_t)v114);
  uint64_t v100 = v12;
  sub_EDD8();
  __chkstk_darwin(v13);
  sub_ED8C();
  __chkstk_darwin(v14);
  sub_1300C();
  uint64_t v16 = sub_EE14(v15);
  uint64_t v103 = type metadata accessor for OutputFlow(v16);
  sub_6764();
  __chkstk_darwin(v17);
  sub_6750();
  uint64_t v19 = sub_EE14(v18);
  uint64_t v20 = type metadata accessor for Logger(v19);
  sub_1840C(v20, (uint64_t)&v115);
  uint64_t v105 = v21;
  sub_EDD8();
  __chkstk_darwin(v22);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v23);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v24);
  sub_1300C();
  uint64_t v108 = v25;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v26);
  sub_183DC();
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v27);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v93 - v29;
  uint64_t v31 = sub_4508();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  sub_6740();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = v1[3];
  uint64_t v37 = v1[4];
  uint64_t v107 = v1;
  sub_3324(v1, v36);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v37 + 8))(v114, v36, v37);
  uint64_t v38 = *(void *)(v5 + 48);
  uint64_t v39 = *(void *)(v5 + 56);
  uint64_t v106 = v5;
  swift_bridgeObjectRetain(v39);
  sub_44E8(v38, v39);
  uint64_t v40 = *(void *)(v3 + 24);
  uint64_t v41 = *(void *)(v3 + 32);
  sub_3324((void *)v3, v40);
  sub_1849C(v0, v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
  sub_1838C(v0);
  char v42 = sub_4808C(v114);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 16))(v0, v42 & 1, v40, v41);
  sub_E988(v0, &qword_78970);
  uint64_t v43 = v114[4];
  uint64_t v44 = sub_18260(v114);
  char v46 = dispatch thunk of DeviceState.isHomePod.getter(v44, v45);
  sub_60A4((uint64_t)v114, (uint64_t)v113);
  if ((v46 & 1) != 0)
  {
    sub_18480();
LABEL_4:
    sub_1843C();
    sub_18370();
LABEL_5:
    uint64_t v49 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v111);
LABEL_6:
    uint64_t v50 = (void *)Logger.emergency.unsafeMutableAddressor(v49);
    sub_3CC8((uint64_t)v50, (uint64_t)v110);
    uint64_t v51 = sub_18310(v108, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    Logger.logObject.getter(v51);
    os_log_type_t v52 = sub_EEB4();
    if (sub_EDE4(v52))
    {
      uint64_t v53 = (_WORD *)sub_8D14();
      sub_182E4(v53);
      sub_18240( &dword_0,  v54,  v55,  "#EmergencyOfferCallFlow Only website resource available on HomePod, ATV, Car, or Watch, offering call.");
      sub_3CA0(v43);
    }

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v108, v5);
LABEL_9:
    uint64_t v56 = v102;
    sub_3B20((uint64_t)v30, v102);
    sub_60A4((uint64_t)v107, (uint64_t)v109);
    uint64_t v57 = EmergencyOrganizationInfo.asRREntities()();
    uint64_t v58 = v104;
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v56, &_swiftEmptyArrayStorage, v109, v57);
    sub_182A0(&qword_78960, v59, v60, (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v103);
    sub_182DC(v58);
    goto LABEL_10;
  }

  uint64_t v43 = v113[4];
  uint64_t v47 = sub_18260(v113);
  char v48 = dispatch thunk of DeviceState.isCarPlay.getter(v47);
  sub_18480();
  if ((v48 & 1) != 0) {
    goto LABEL_4;
  }
  uint64_t v43 = v112[4];
  uint64_t v61 = sub_18260(v112);
  char v63 = dispatch thunk of DeviceState.isAppleTV.getter(v61, v62);
  sub_1843C();
  sub_18370();
  if ((v63 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v43 = v111[4];
  uint64_t v64 = sub_18260(v111);
  char v66 = dispatch thunk of DeviceState.isWatch.getter(v64, v65);
  uint64_t v49 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v111);
  if ((v66 & 1) != 0) {
    goto LABEL_6;
  }
  uint64_t v67 = v97;
  EmergencyOrganizationInfo.websiteURL.getter(v49);
  uint64_t v68 = v101;
  uint64_t v69 = sub_5FE0(v67, 1LL, v101);
  if ((_DWORD)v69 == 1)
  {
    sub_183AC(v69, (uint64_t *)&unk_7AE80);
    uint64_t v71 = (void *)Logger.emergency.unsafeMutableAddressor(v70);
    sub_3CC8((uint64_t)v71, (uint64_t)v110);
    uint64_t v72 = sub_18310(v98, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    Logger.logObject.getter(v72);
    os_log_type_t v73 = sub_EEB4();
    if (sub_EDE4(v73))
    {
      uint64_t v74 = (_WORD *)sub_8D14();
      sub_182E4(v74);
      sub_18240(&dword_0, v75, v76, "#EmergencyOfferCallFlow Missing website resource. Offer supportive dialog.");
      sub_3CA0(v67);
    }

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v98, v5);
    goto LABEL_9;
  }

  uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32))(v99, v67, v68);
  uint64_t v78 = (void *)Logger.emergency.unsafeMutableAddressor(v77);
  sub_3CC8((uint64_t)v78, (uint64_t)v110);
  uint64_t v79 = v93;
  sub_18310(v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_13124();
  os_log_type_t v80 = sub_EEB4();
  if (sub_EDE4(v80))
  {
    uint64_t v81 = (_WORD *)sub_8D14();
    sub_182E4(v81);
    sub_18240(&dword_0, v82, v83, "#EmergencyOfferCallFlow Only website resource available, launching website.");
    sub_3CA0(v67);
  }

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v79, v5);
  uint64_t v84 = v107[3];
  uint64_t v85 = v107[4];
  sub_3324(v107, v84);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v85 + 16))(v109, v84, v85);
  uint64_t v86 = v100;
  uint64_t v87 = v94;
  uint64_t v88 = v99;
  uint64_t v89 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v94, v99, v101);
  uint64_t v90 = v95;
  AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v109, v87, 0LL, 0LL);
  sub_182A0(&qword_79828, v91, v92, (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
  Flow.eraseToAnyFlow()(v96);
  sub_182DC(v90);
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v89);
LABEL_10:
  sub_E988((uint64_t)v30, &qword_78958);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v31);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v114);
  sub_7DF0();
}

void sub_177FC()
{
  void (*v76)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  os_log_s *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  _BYTE v106[40];
  uint64_t v107;
  void v108[3];
  uint64_t v109;
  __int128 v110;
  os_log_type_t v111;
  void v112[3];
  os_log_type_t v113;
  _BYTE v114[128];
  void v115[16];
  void v116[2];
  uint64_t v117;
  os_log_type_t v118;
  sub_9460();
  uint64_t v2 = v0;
  uint64_t v102 = v3;
  uint64_t v105 = v4;
  uint64_t v96 = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  sub_6764();
  __chkstk_darwin(v5);
  sub_66F4();
  uint64_t v97 = v6;
  __chkstk_darwin(v7);
  sub_1300C();
  uint64_t v98 = v8;
  uint64_t v101 = sub_18328();
  sub_6764();
  __chkstk_darwin(v9);
  sub_6750();
  uint64_t v103 = v10;
  uint64_t v11 = sub_18334();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  sub_EDD8();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (os_log_s *)((char *)&v92 - v16);
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v18);
  sub_6740();
  uint64_t v21 = v20 - v19;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v22);
  sub_18340();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v92 - v25;
  __chkstk_darwin(v24);
  sub_1300C();
  uint64_t v104 = v27;
  uint64_t v28 = *(void *)(v0 + 32);
  sub_18530();
  uint64_t v29 = sub_1853C();
  v30(v29, v28);
  uint64_t v31 = v105;
  sub_180F4((uint64_t)v105, (uint64_t)v114, &qword_79098);
  if (sub_E438((uint64_t)v114) == 1)
  {
    sub_183C4();
    uint64_t v32 = sub_4508();
    sub_3F18(v21, 1LL, 1LL, v32);
    uint64_t v33 = sub_1839C();
    sub_183AC(v33, &qword_78970);
    sub_3B20((uint64_t)v26, v1);
    sub_60A4(v2, (uint64_t)v115);
    uint64_t v34 = v103;
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v1, &_swiftEmptyArrayStorage, v115, 0LL);
    sub_182A0(&qword_78960, v35, v36, (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v101);
    sub_182DC(v34);
    uint64_t v37 = (uint64_t)v26;
    goto LABEL_11;
  }

  uint64_t v93 = v15;
  uint64_t v94 = v17;
  uint64_t v95 = v26;
  uint64_t v38 = v103;
  sub_EE84(v115, v114);
  sub_183C4();
  uint64_t v39 = v115[12];
  uint64_t v40 = v115[13];
  sub_1812C( v31,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_14C5C);
  swift_bridgeObjectRetain(v40);
  sub_44E8(v39, v40);
  uint64_t v41 = sub_4508();
  sub_18430(v21, v42, v43, v41);
  uint64_t v44 = sub_1839C();
  sub_183AC(v44, &qword_78970);
  os_log_type_t v45 = v113;
  uint64_t v46 = sub_18280(v112);
  char v48 = dispatch thunk of DeviceState.isHomePod.getter(v46, v47);
  sub_60A4((uint64_t)v112, (uint64_t)v116);
  if ((v48 & 1) != 0)
  {
    sub_18504();
    sub_184F0();
LABEL_6:
    sub_18458();
LABEL_7:
    uint64_t v51 = sub_184E8();
LABEL_8:
    uint64_t v52 = Logger.emergency.unsafeMutableAddressor(v51);
    sub_3CC8(v52, (uint64_t)&v110);
    uint64_t v53 = v94;
    uint64_t v54 = sub_182F0((uint64_t)v94, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16));
    Logger.logObject.getter(v54);
    os_log_type_t v55 = sub_67D4();
    if (sub_182AC(v55))
    {
      uint64_t v56 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v56 = 0;
      sub_EDA8( &dword_0,  v53,  v45,  "#EmergencyOfferCallFlow No resource available on HomePod, ATV, Car, or Watch, offering call or websearch.",  v56);
      sub_3CA0((uint64_t)v56);
    }

    sub_183D4((uint64_t)v53, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    uint64_t v57 = v104;
    uint64_t v58 = (uint64_t)v95;
    sub_3B20(v104, (uint64_t)v95);
    sub_60A4((uint64_t)v17, (uint64_t)v116);
    uint64_t v59 = EmergencyOrganizationInfo.asRREntities()();
    sub_1812C( v105,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v58, &_swiftEmptyArrayStorage, v116, v59);
    sub_182A0(&qword_78960, v60, v61, (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v38);
    uint64_t v62 = sub_1853C();
    sub_182DC(v62);
    uint64_t v37 = v57;
    goto LABEL_11;
  }

  uint64_t v102 = v40;
  os_log_type_t v45 = v118;
  uint64_t v49 = sub_18280(v116);
  char v50 = dispatch thunk of DeviceState.isCarPlay.getter(v49);
  sub_18504();
  sub_184F0();
  if ((v50 & 1) != 0) {
    goto LABEL_6;
  }
  os_log_type_t v45 = v111;
  uint64_t v63 = sub_18280(&v110);
  char v65 = dispatch thunk of DeviceState.isAppleTV.getter(v63, v64);
  sub_18458();
  if ((v65 & 1) != 0) {
    goto LABEL_7;
  }
  os_log_type_t v45 = v109;
  uint64_t v66 = sub_18280(v108);
  char v68 = dispatch thunk of DeviceState.isWatch.getter(v66, v67);
  uint64_t v51 = sub_184E8();
  if ((v68 & 1) != 0) {
    goto LABEL_8;
  }
  uint64_t v69 = HIBYTE(v102) & 0xF;
  if ((v102 & 0x2000000000000000LL) == 0) {
    uint64_t v69 = v39 & 0xFFFFFFFFFFFFLL;
  }
  if (!v69) {
    goto LABEL_8;
  }
  uint64_t v70 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v51);
  sub_3CC8((uint64_t)v70, (uint64_t)&v107);
  uint64_t v71 = (uint64_t)v93;
  sub_182F0((uint64_t)v93, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16));
  sub_13124();
  os_log_type_t v72 = sub_67D4();
  if (sub_182AC(v72))
  {
    os_log_type_t v73 = (uint8_t *)sub_8D14();
    *(_WORD *)os_log_type_t v73 = 0;
    sub_EDA8(&dword_0, v70, v45, "#EmergencyOfferCallFlow No resource available, offering punchout web search", v73);
    sub_3CA0((uint64_t)v73);
  }

  sub_183D4(v71, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
  uint64_t v74 = *((void *)v17 + 3);
  uint64_t v75 = *((void *)v17 + 4);
  sub_3324(v17, v74);
  uint64_t v76 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v75 + 16);
  uint64_t v77 = v102;
  swift_bridgeObjectRetain(v102);
  v76(&v117, v74, v75);
  v116[0] = v39;
  v116[1] = v77;
  sub_18188();
  uint64_t v78 = Flow.eraseToAnyFlow()(&type metadata for WebsearchFlow);
  sub_181C4((uint64_t)v116);
  sub_3324((void *)v17 + 5, *((void *)v17 + 8));
  uint64_t v79 = (int *)v96;
  os_log_type_t v80 = v98;
  sub_EEA4();
  sub_2398C();
  sub_EE0C();
  uint64_t v81 = v104;
  sub_3B20(v104, v80);
  *(void *)(v80 + v79[6]) = v78;
  *(void *)(v80 + v79[7]) = 4LL;
  *(_BYTE *)(v80 + v79[8]) = 1;
  *(_BYTE *)(v80 + v79[9]) = 1;
  sub_60A4((uint64_t)v17, (uint64_t)&v110);
  sub_60A4((uint64_t)v17 + 40, (uint64_t)v108);
  sub_60E4((uint64_t)v17 + 80, (uint64_t)v106);
  uint64_t v82 = sub_6120((uint64_t)v108, v109);
  __chkstk_darwin(v82);
  sub_6740();
  uint64_t v85 = (const void *)(v84 - v83);
  (*(void (**)(uint64_t))(v86 + 16))(v84 - v83);
  sub_181F8(v80, v97, type metadata accessor for ConfirmationFlowConfigModel);
  sub_EE24(v116, v85);
  swift_retain(v78);
  uint64_t v88 = sub_182FC(v115, v87, &v110, v116, (uint64_t)v106);
  sub_184E8();
  *(void *)&uint64_t v110 = v88;
  uint64_t v89 = type metadata accessor for EmergencyConfirmationFlow();
  sub_EF34( &qword_78B38,  v90,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
  Flow.eraseToAnyFlow()(v89);
  uint64_t v91 = sub_1853C();
  swift_release(v91);
  swift_release(v78);
  sub_EAF0(v80, type metadata accessor for ConfirmationFlowConfigModel);
  uint64_t v37 = v81;
LABEL_11:
  sub_E988(v37, &qword_78958);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v112);
  sub_7DF0();
}

void sub_17F08()
{
  unint64_t v3 = v1;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v28 = type metadata accessor for OutputFlow(0LL);
  sub_6764();
  __chkstk_darwin(v8);
  sub_6740();
  uint64_t v11 = v10 - v9;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v12);
  sub_183DC();
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v13);
  sub_18340();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v27 - v15;
  uint64_t v17 = *(void *)(v5 + 24);
  uint64_t v18 = *(void *)(v5 + 32);
  v27[0] = sub_18530();
  v27[1] = v7;
  uint64_t v19 = *(void *)(v7 + 96);
  uint64_t v20 = *(void *)(v7 + 104);
  swift_bridgeObjectRetain(v20);
  sub_44E8(v19, v20);
  uint64_t v21 = sub_4508();
  sub_18430(v0, v22, v23, v21);
  uint64_t v25 = v3[3];
  uint64_t v24 = v3[4];
  sub_3324(v3, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 8))(v29, v25, v24);
  LOBYTE(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 19) = sub_4808C(v29);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8))(v0, v19 & 1, v17, v18);
  sub_E988(v0, &qword_78970);
  sub_3B20((uint64_t)v16, v2);
  sub_60A4((uint64_t)v3, (uint64_t)v29);
  uint64_t v26 = EmergencyOrganizationInfo.asRREntities()();
  OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v2, &_swiftEmptyArrayStorage, v29, v26);
  sub_EB44( &qword_78960,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
  Flow.eraseToAnyFlow()(v28);
  sub_182DC(v11);
  sub_E988((uint64_t)v16, &qword_78958);
  sub_7DF0();
}

uint64_t sub_180EC(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

void sub_180F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_3974(a3);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_6774();
}

void *sub_1812C( void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_18188()
{
  unint64_t result = qword_79830;
  if (!qword_79830)
  {
    unint64_t result = swift_getWitnessTable(&unk_570B4, &type metadata for WebsearchFlow);
    atomic_store(result, (unint64_t *)&qword_79830);
  }

  return result;
}

uint64_t sub_181C4(uint64_t a1)
{
  return a1;
}

void sub_181F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3(0LL);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_6774();
}

ValueMetadata *type metadata accessor for EmergencyOfferCallFlowFollowupProvider()
{
  return &type metadata for EmergencyOfferCallFlowFollowupProvider;
}

void sub_18240(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_18254(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t sub_18260(void *a1)
{
  return v1;
}

uint64_t sub_18280(void *a1)
{
  return v1;
}

void sub_182A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

BOOL sub_182AC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_182BC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

BOOL sub_182CC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_182DC(uint64_t a1)
{
}

_WORD *sub_182E4(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t sub_182F0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t sub_182FC(const void *a1, uint64_t a2, __int128 *a3, const void *a4, uint64_t a5)
{
  return sub_54D28(a1, v5, a3, a4, a5, 0, 0LL, 0LL);
}

uint64_t sub_18310@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t sub_1831C()
{
  return (*(uint64_t (**)(void))(v0 - 264))();
}

uint64_t sub_18328()
{
  return type metadata accessor for OutputFlow(0LL);
}

uint64_t sub_18334()
{
  return type metadata accessor for Logger(0LL);
}

  ;
}

uint64_t sub_1835C()
{
  return swift_task_dealloc(*(void *)(v0 + 1232));
}

  ;
}

uint64_t sub_1838C(uint64_t a1)
{
  return sub_3F18(a1, 0LL, 1LL, v1);
}

uint64_t sub_1839C()
{
  return v0(v1, v2, v3);
}

void sub_183AC(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_183B4(uint64_t a1)
{
  *(void *)(v3 - 264) = v2;
  return v2(a1, v1);
}

void *sub_183C4()
{
  return sub_3324(*(void **)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 24LL));
}

uint64_t sub_183D4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

  ;
}

  ;
}

uint64_t sub_1840C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

uint64_t sub_18418()
{
  return static os_log_type_t.error.getter();
}

void sub_18420()
{
  *(void *)(v1 - 336) = v0;
}

uint64_t sub_18430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F18(a1, 0LL, 1LL, a4);
}

void sub_1843C()
{
}

void sub_18458()
{
}

uint64_t sub_18474@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

void sub_18480()
{
}

uint64_t sub_1849C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t sub_184A4(uint64_t a1)
{
  return v3(a1, v1, v2);
}

void sub_184B0()
{
}

uint64_t sub_184BC()
{
  return v1;
}

void *sub_184E0( uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return sub_1812C(v2, a2);
}

uint64_t sub_184E8()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 176));
}

  ;
}

void sub_18504()
{
}

uint64_t sub_18520(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t sub_18528@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

void *sub_18530()
{
  return sub_3324(v0, v1);
}

uint64_t sub_1853C()
{
  return v0;
}

uint64_t sub_18548(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v152 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v154 = *(void *)(v152 - 8);
  sub_EDD8();
  __chkstk_darwin(v4);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v5);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v6);
  uint64_t v155 = (char *)&v131 - v7;
  uint64_t v150 = type metadata accessor for EmergencyNLIntent(0LL);
  sub_6764();
  __chkstk_darwin(v8);
  sub_6750();
  uint64_t v10 = sub_EE14(v9);
  uint64_t v148 = type metadata accessor for NLIntent(v10);
  uint64_t v147 = *(void *)(v148 - 8);
  sub_EDD8();
  __chkstk_darwin(v11);
  sub_6750();
  uint64_t v160 = v12;
  type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  sub_6764();
  __chkstk_darwin(v13);
  sub_6750();
  uint64_t v15 = sub_EE14(v14);
  uint64_t v143 = type metadata accessor for EmergencyDialogAct(v15);
  sub_6764();
  __chkstk_darwin(v16);
  sub_6750();
  uint64_t v18 = sub_EE14(v17);
  uint64_t v140 = type metadata accessor for USOParse(v18);
  uint64_t v139 = *(void *)(v140 - 8);
  sub_EDD8();
  __chkstk_darwin(v19);
  sub_6740();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = type metadata accessor for Parse(0LL);
  uint64_t v156 = *(void *)(v23 - 8);
  uint64_t v157 = (void *)v23;
  sub_EDD8();
  __chkstk_darwin(v24);
  sub_6750();
  uint64_t v26 = sub_EE14(v25);
  uint64_t v27 = type metadata accessor for Input(v26);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  sub_6740();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v34);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v35);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v36);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v37);
  sub_EE64();
  sub_ED8C();
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v131 - v40;
  uint64_t v42 = Logger.emergency.unsafeMutableAddressor(v39);
  sub_3CC8(v42, (uint64_t)v167);
  uint64_t v158 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v159 = v42;
  uint64_t v161 = v32;
  v158(v41, v42, v32);
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  uint64_t v151 = a1;
  uint64_t v44 = v43(v31, a1, v27);
  os_log_type_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v134 = v22;
    uint64_t v47 = sub_3CD4(12LL);
    uint64_t v133 = v33;
    char v48 = (uint8_t *)v47;
    uint64_t v49 = sub_3CD4(32LL);
    uint64_t v135 = v2;
    uint64_t v50 = v49;
    v162[0] = v49;
    *(_DWORD *)char v48 = 136315138;
    uint64_t v132 = v48 + 4;
    sub_EB44( &qword_790C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v27, v51);
    unint64_t v54 = v53;
    uint64_t v164 = sub_543A4(v52, v53, v162);
    uint64_t v22 = v134;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v132, v48 + 12);
    swift_bridgeObjectRelease(v54);
    sub_19B88();
    _os_log_impl(&dword_0, v45, v46, "#OfflineFlow onInput: %s", v48, 0xCu);
    sub_67DC(v50);
    uint64_t v55 = v50;
    uint64_t v2 = v135;
    sub_3CA0(v55);
    sub_3CA0((uint64_t)v48);
  }

  else
  {
    sub_19B88();
  }

  uint64_t v56 = sub_19B5C((uint64_t)v41);
  uint64_t v57 = v153;
  Input.parse.getter(v56);
  uint64_t v58 = v157;
  uint64_t v59 = (*(uint64_t (**)(uint64_t, void *))(v156 + 88))(v57, v157);
  uint64_t v60 = v152;
  uint64_t v62 = v154;
  uint64_t v61 = (uint64_t)v155;
  if ((_DWORD)v59 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_19B4C();
    uint64_t v63 = v147;
    uint64_t v64 = v57;
    uint64_t v65 = v148;
    uint64_t v66 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v147 + 32))(v160, v64, v148);
    sub_19B28(v66, (uint64_t)v162);
    uint64_t v67 = v146;
    uint64_t v68 = sub_19B3C(v146);
    Logger.logObject.getter(v68);
    os_log_type_t v69 = sub_EEB4();
    if (sub_EDE4(v69))
    {
      uint64_t v70 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v70);
      sub_18240(&dword_0, v71, v72, "#OfflineFlow onInput .NLv3IntentOnly");
      sub_3CA0(v27);
    }

    sub_19B5C(v67);
    uint64_t v73 = v149;
    (*(void (**)(uint64_t, _DWORD *, uint64_t))(v63 + 16))(v149, v160, v65);
    if (qword_785B8 != -1) {
      swift_once(&qword_785B8, sub_A2BC);
    }
    uint64_t v74 = qword_78CC0;
    sub_EB44(&qword_78D98, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
    sub_19B78(v74);
    __int16 v75 = v164;
    if (qword_785C8 != -1) {
      swift_once(&qword_785C8, sub_A30C);
    }
    sub_19B78(qword_78CD0);
    __int16 v76 = v164;
    sub_EAF0(v73, type metadata accessor for EmergencyNLIntent);
    (*(void (**)(_DWORD *, uint64_t))(v63 + 8))(v160, v65);
    __int16 v77 = v75 | (v76 << 8);
    goto LABEL_30;
  }

  if ((_DWORD)v59 == enum case for Parse.directInvocation(_:))
  {
    sub_19B4C();
    uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v57, v60);
    sub_19B28(v78, (uint64_t)v162);
    uint64_t v79 = v144;
    uint64_t v80 = sub_19B3C(v144);
    Logger.logObject.getter(v80);
    os_log_type_t v81 = sub_EEB4();
    if (sub_EDE4(v81))
    {
      uint64_t v82 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v82);
      sub_18240(&dword_0, v83, v84, "#OfflineFlow onInput .directInvocation");
      sub_3CA0(v27);
    }

    uint64_t v85 = sub_19B5C(v79);
    uint64_t v86 = Parse.DirectInvocation.identifier.getter(v85);
    uint64_t v88 = v87;
    if (v86 == 0xD000000000000035LL && v87 == 0x800000000005B1B0LL)
    {
      swift_bridgeObjectRelease(0x800000000005B1B0LL);
      sub_19BA0();
    }

    else
    {
      char v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, 0xD000000000000035LL, 0x800000000005B1B0LL, 0LL);
      swift_bridgeObjectRelease(v88);
      sub_19BA0();
      if ((v104 & 1) == 0)
      {
LABEL_24:
        sub_19B28(v105, (uint64_t)&v164);
        sub_19B3C(0xD000000000000035LL);
        uint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
        uint64_t v107 = v106(v79, v61, v60);
        uint64_t v108 = (void *)Logger.logObject.getter(v107);
        os_log_type_t v109 = static os_log_type_t.error.getter();
        if (sub_12FD8(v109))
        {
          uint64_t v110 = (_DWORD *)sub_3CD4(12LL);
          uint64_t v111 = sub_3CD4(32LL);
          uint64_t v166 = v111;
          *uint64_t v110 = 136315138;
          uint64_t v160 = v110 + 1;
          uint64_t v112 = v136;
          v106(v136, v79, v60);
          uint64_t v113 = String.init<A>(describing:)(v112);
          uint64_t v163 = sub_543A4(v113, v114, &v166);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164, v160, v110 + 3);
          sub_EEE8();
          uint64_t v115 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
          v115(v79, v60);
          sub_19B64(&dword_0, v116, v117, "Failed to get emergencySituation from DirectInvocation: %s");
          sub_67DC(v111);
          sub_3CA0(v111);
          sub_3CA0((uint64_t)v110);

          sub_19B5C(v145);
          v115((uint64_t)v155, v60);
        }

        else
        {

          uint64_t v130 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
          v130(v79, v60);
          sub_19B5C(0xD000000000000035LL);
          v130(v61, v60);
        }

        return 0LL;
      }
    }

    uint64_t v105 = sub_28990(v61);
    if (v105 != 35)
    {
      unsigned __int8 v128 = v105;
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v60);
      __int16 v77 = v128 | 0x400;
LABEL_30:
      *(_WORD *)(v2 + sub_60A4(v0 + 256, v0 + 176) = v77;
      return 1LL;
    }

    goto LABEL_24;
  }

  if ((_DWORD)v59 == enum case for Parse.uso(_:))
  {
    sub_19B4C();
    uint64_t v89 = v139;
    uint64_t v90 = v140;
    uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 32))(v22, v57, v140);
    sub_19B28(v91, (uint64_t)&v164);
    uint64_t v92 = v137;
    uint64_t v93 = sub_19B3C(v137);
    Logger.logObject.getter(v93);
    os_log_type_t v94 = sub_EEB4();
    if (sub_EDE4(v94))
    {
      uint64_t v95 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v95);
      sub_18240(&dword_0, v96, v97, "#OfflineFlow onInput .uso");
      sub_3CA0(v27);
    }

    uint64_t v98 = sub_19B5C(v92);
    uint64_t v99 = v142;
    USOParse.userParse.getter(v98);
    v162[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
    v162[4] = sub_EA88();
    LOBYTE(v162[0]) = 2;
    char v100 = isFeatureEnabled(_:)(v162);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v162);
    uint64_t v101 = v141;
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v99, v100 & 1);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v22, v90);
    __int16 v102 = *(unsigned __int8 *)(v101 + *(int *)(v143 + 24));
    __int16 v103 = *(unsigned __int8 *)(v101 + *(int *)(v143 + 28));
    sub_EAF0(v101, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    __int16 v77 = v102 | (v103 << 8);
    goto LABEL_30;
  }

  sub_19B28(v59, (uint64_t)v162);
  uint64_t v118 = v138;
  uint64_t v119 = sub_19B3C(v138);
  char v120 = (void *)Logger.logObject.getter(v119);
  os_log_type_t v121 = static os_log_type_t.error.getter();
  if (sub_12FD8(v121))
  {
    uint64_t v122 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v123 = sub_3CD4(32LL);
    uint64_t v164 = v123;
    *uint64_t v122 = 136315138;
    LOBYTE(v166) = 0;
    uint64_t v124 = String.init<A>(describing:)(&v166);
    uint64_t v166 = sub_543A4(v124, v125, &v164);
    uint64_t v57 = v153;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167, v122 + 1, v122 + 3);
    sub_EEE8();
    sub_19B64(&dword_0, v126, v127, "%s");
    sub_67DC(v123);
    sub_3CA0(v123);
    sub_3CA0((uint64_t)v122);
  }

  sub_19B5C(v118);
  (*(void (**)(uint64_t, void *))(v156 + 8))(v57, v157);
  return 0LL;
}

uint64_t sub_19014(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  v2[28] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[29] = v4;
  unint64_t v5 = (*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[30] = swift_task_alloc(v5);
  v2[31] = swift_task_alloc(v5);
  return sub_451C();
}

uint64_t sub_1907C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(uint8_t **)(v1 + 224);
  uint64_t v4 = *(void *)(v1 + 232);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, v1 + 144);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint8_t *))(v4 + 16);
  uint64_t v7 = v6(v2, v5, v3);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v10);
    _os_log_impl(&dword_0, v8, v9, "#OfflineFlow execute", v3, 2u);
    sub_3CA0((uint64_t)v3);
  }

  uint64_t v11 = *(void *)(v1 + 248);
  uint64_t v12 = *(void *)(v1 + 224);
  uint64_t v13 = *(void *)(v1 + 232);
  uint64_t v14 = *(void *)(v1 + 216);

  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  uint64_t v16 = v15(v11, v12);
  unsigned int v17 = *(unsigned __int16 *)(v14 + 176);
  if (v17 >> 8 == 5)
  {
    uint64_t v18 = *(void *)(v1 + 208);
    uint64_t v19 = *(void *)(v1 + 216);
    unint64_t v20 = sub_E94C();
    uint64_t v21 = swift_allocError(&type metadata for EmergencyFlowError, v20, 0LL, 0LL);
    *uint64_t v22 = 2;
    sub_30F8(v21, v19 + 16, (void *)(v19 + 56), v18);
    swift_errorRelease(v21);
    goto LABEL_7;
  }

  if (v17 >> 8 == 6)
  {
    static ExecuteResponse.complete()(v16);
LABEL_7:
    uint64_t v23 = *(void *)(v1 + 240);
    swift_task_dealloc(*(void *)(v1 + 248));
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v25 = v1 + 16;
  uint64_t v26 = *(void *)(v1 + 240);
  uint64_t v27 = *(uint8_t **)(v1 + 224);
  sub_3CC8(v5, v1 + 168);
  uint64_t v28 = v6(v26, v5, v27);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *(void *)(v1 + 240);
  uint64_t v33 = *(void *)(v1 + 224);
  if (v31)
  {
    uint64_t v46 = *(void *)(v1 + 224);
    uint64_t v34 = sub_3CD4(22LL);
    uint64_t v45 = sub_3CD4(64LL);
    uint64_t v47 = v45;
    *(_DWORD *)uint64_t v34 = 136315394;
    *(_BYTE *)(v1 + 265) = v17;
    sub_3974(&qword_79950);
    uint64_t v35 = String.init<A>(describing:)(v1 + 265);
    unint64_t v37 = v36;
    *(void *)(v1 + 200) = sub_543A4(v35, v36, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 200, v1 + 208, v34 + 4, v34 + 12);
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v34 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
    *(_BYTE *)(v1 + 264) = BYTE1(v17);
    sub_3974(&qword_79958);
    uint64_t v38 = String.init<A>(describing:)(v1 + 264);
    *(void *)(v1 + 19_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_543A4(v38, v39, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 192, v1 + 200, v34 + 14, v34 + 22);
    sub_EEE8();
    _os_log_impl( &dword_0,  v29,  v30,  "#OfflineFlow needsExecution situation: %s, organization: %s",  (uint8_t *)v34,  0x16u);
    swift_arrayDestroy(v45, 2LL);
    sub_3CA0(v45);
    uint64_t v40 = v34;
    uint64_t v25 = v1 + 16;
    sub_3CA0(v40);

    uint64_t v41 = v32;
    uint64_t v42 = v46;
  }

  else
  {

    uint64_t v41 = v32;
    uint64_t v42 = v33;
  }

  v15(v41, v42);
  uint64_t v43 = *(void *)(v1 + 216) + 136LL;
  uint64_t v44 = (void *)swift_task_alloc(dword_7964C);
  *(void *)(v1 + 256) = v44;
  *uint64_t v44 = v1;
  v44[1] = sub_193F0;
  return sub_145A8(v25, v43, v17, SBYTE1(v17));
}

uint64_t sub_193F0()
{
  return sub_451C();
}

uint64_t sub_1943C()
{
  uint64_t v1 = sub_1951C(v0 + 16);
  sub_E864((uint64_t *)(v0 + 16));
  static ExecuteResponse.complete(next:)(v1);
  swift_release(v1);
  uint64_t v2 = *(void *)(v0 + 240);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_194AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OfflineFlow();
  sub_EB44( &qword_79948,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for OfflineFlow,  (uint64_t)&unk_57E84);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_1951C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  sub_E3F0(a1, (uint64_t)v43);
  sub_E3F0((uint64_t)v43, (uint64_t)v46);
  uint64_t v4 = type metadata accessor for OutputFlow(0LL);
  sub_6764();
  __chkstk_darwin(v5);
  sub_6740();
  uint64_t v8 = v7 - v6;
  sub_3974(&qword_78970);
  sub_6764();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - v13;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v15);
  sub_66F4();
  uint64_t v41 = v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = sub_3324((void *)(v2 + 56), *(void *)(v2 + 80))[13];
  sub_E3F0(v3, (uint64_t)v45);
  if (sub_E438((uint64_t)v45) == 1)
  {
    uint64_t v21 = sub_4508();
    sub_19B98((uint64_t)v14, 1LL, v22, v21);
    swift_retain(v20);
    uint64_t v23 = 0LL;
  }

  else
  {
    uint64_t v40 = v12;
    uint64_t v24 = v19;
    uint64_t v25 = v3;
    uint64_t v26 = v2;
    uint64_t v27 = v8;
    uint64_t v28 = v4;
    uint64_t v29 = v45[6];
    uint64_t v30 = v45[7];
    swift_retain(v20);
    uint64_t v31 = v30;
    uint64_t v4 = v28;
    uint64_t v8 = v27;
    uint64_t v2 = v26;
    uint64_t v3 = v25;
    uint64_t v19 = v24;
    uint64_t v12 = v40;
    String.toSpeakableString.getter(v29, v31);
    uint64_t v32 = sub_4508();
    sub_19B98((uint64_t)v14, 0LL, v33, v32);
    sub_E3F0((uint64_t)v46, (uint64_t)v44);
    uint64_t v23 = String.toDialogPhoneNumber.getter(v44[8], v44[9]);
  }

  sub_E3F0(v3, (uint64_t)v44);
  if (sub_E438((uint64_t)v44) == 1)
  {
    uint64_t v34 = 1LL;
  }

  else
  {
    String.toSpeakableString.getter(v44[10], v44[11]);
    uint64_t v34 = 0LL;
  }

  uint64_t v35 = sub_4508();
  sub_19B98((uint64_t)v12, v34, v36, v35);
  sub_B604((uint64_t)v14, v23, (uint64_t)v12);
  swift_release(v20);
  swift_release(v23);
  sub_E988((uint64_t)v12, &qword_78970);
  sub_E988((uint64_t)v14, &qword_78970);
  uint64_t v37 = v41;
  sub_3B20((uint64_t)v19, v41);
  sub_3B68(v2 + 16, (uint64_t)v42);
  OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v37, &_swiftEmptyArrayStorage, v42, 0LL);
  sub_EB44( &qword_78960,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
  uint64_t v38 = Flow.eraseToAnyFlow()(v4);
  sub_EAF0(v8, (uint64_t (*)(void))&type metadata accessor for OutputFlow);
  sub_E988((uint64_t)v19, &qword_78958);
  return v38;
}

void *sub_1981C()
{
  return v0;
}

uint64_t sub_19850()
{
  return swift_deallocClassInstance(v0, 178LL, 7LL);
}

uint64_t type metadata accessor for OfflineFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin11OfflineFlow);
}

_WORD *initializeBufferWithCopyOfBuffer for OfflineFlow.OfflineFlowState(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OfflineFlow.OfflineFlowState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA)
  {
    else {
      int v6 = *(unsigned __int8 *)(a1 + 1);
    }
    unsigned int v7 = v6 - 4;
    else {
      unsigned int v8 = 0;
    }
    if (v8 >= 3) {
      return v8 - 2;
    }
    else {
      return 0LL;
    }
  }

  else
  {
    unsigned int v2 = a2 + 65286;
    if (a2 + 65286 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_198EC + 4 * byte_57E10[v4]))();
  }

uint64_t storeEnumTagSinglePayload for OfflineFlow.OfflineFlowState( _WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65286;
  if (a3 + 65286 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    LODWORD(v5) = v4;
  }
  else {
    LODWORD(v5) = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_199A8 + 4 * byte_57E1A[v5]))();
  }
  *a1 = a2 - 250;
  return ((uint64_t (*)(void))((char *)sub_199DC + 4 * byte_57E15[v5]))();
}

uint64_t sub_199DC(uint64_t result)
{
  *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_199E4(uint64_t result, int a2)
{
  *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  if (a2) {
    JUMPOUT(0x199ECLL);
  }
  return result;
}

uint64_t sub_199F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  if (!a2) {
    JUMPOUT(0x19A00LL);
  }
  *(_BYTE *)(result + 1) = a2 + 6;
  return result;
}

uint64_t sub_19A04(uint64_t result)
{
  *(_DWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_19A0C(uint64_t result)
{
  *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_19A18(uint64_t a1)
{
  else {
    int v1 = *(unsigned __int8 *)(a1 + 1);
  }
  unsigned int v2 = v1 - 4;
  else {
    return 0LL;
  }
}

uint64_t sub_19A38(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFB)
  {
    *(_WORD *)unint64_t result = a2 - 252;
  }

  else if (a2)
  {
    *(_BYTE *)(result + 1) = a2 + 4;
  }

  return result;
}

ValueMetadata *type metadata accessor for OfflineFlow.OfflineFlowState()
{
  return &type metadata for OfflineFlow.OfflineFlowState;
}

uint64_t sub_19A6C(uint64_t a1)
{
  return sub_18548(a1) & 1;
}

uint64_t sub_19A90(uint64_t a1, uint64_t a2)
{
  return sub_194AC(a1, a2);
}

uint64_t sub_19AB0(uint64_t a1)
{
  unsigned int v3 = (void *)swift_task_alloc(dword_79864);
  *(void *)(v1 + 16) = v3;
  *unsigned int v3 = v1;
  v3[1] = sub_5F44;
  return sub_19014(a1);
}

uint64_t sub_19B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OfflineFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_19B28(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(*(void *)(v2 - 216), a2, 0LL, 0LL);
}

uint64_t sub_19B3C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 - 224))(a1, v1, *(void *)(v2 - 200));
}

uint64_t sub_19B4C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_19B5C(uint64_t a1)
{
  return v1(a1, *(void *)(v2 - 200));
}

void sub_19B64(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_19B78(uint64_t a1)
{
  return IntentNodeTraversable.value<A>(forNode:)(a1, v2, v1);
}

uint64_t sub_19B88()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_19B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F18(a1, a2, 1LL, a4);
}

  ;
}

uint64_t type metadata accessor for CommonModernCATs(uint64_t a1)
{
  uint64_t result = qword_79968;
  if (!qword_79968) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CommonModernCATs);
  }
  return result;
}

uint64_t sub_19BEC(uint64_t a1)
{
  uint64_t v2 = qword_7B870;
  v5[0] = "\b";
  uint64_t result = type metadata accessor for CATOption(319LL);
  if (v4 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 2LL, v5, a1 + v2);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_19C6C(uint64_t a1, void *a2)
{
  return sub_19CB4(a1, a2);
}

uint64_t sub_19CB4(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_4AA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v2 + qword_79960) = a2;
  sub_4AA8(v2 + qword_7B868);
  uint64_t v12 = type metadata accessor for URL(0LL);
  sub_3F18((uint64_t)v11, 1LL, 1LL, v12);
  sub_4AA8((uint64_t)v8);
  id v13 = a2;
  uint64_t v14 = CATWrapperSimple.init(templateDir:options:globals:)(v11, v8, a2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v14;
}

uint64_t sub_19DCC()
{
  *(void *)(v1 + 56) = v0;
  return sub_1A2D4((uint64_t)sub_19DDC);
}

uint64_t sub_19DDC()
{
  uint64_t v1 = v0[7];
  v0[8] = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v2 = *(void **)(v1 + qword_79960);
  if (!v2)
  {
    sub_1A330();
    sub_1A340();
  }

  sub_1A314();
  sub_1A2E0();
  id v3 = v2;
  unint64_t v4 = (void *)sub_1A338();
  v0[10] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_19EB4;
  sub_1A2FC();
  return sub_1A294();
}

uint64_t sub_19EB4()
{
  sub_9448();
  if (v1) {
    return sub_1A2AC();
  }
  else {
    return sub_1A2C0(v0, *(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_19F0C()
{
  *(void *)(v1 + 56) = v0;
  return sub_1A2D4((uint64_t)sub_19F1C);
}

uint64_t sub_19F1C()
{
  uint64_t v1 = v0[7];
  v0[8] = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v2 = *(void **)(v1 + qword_79960);
  if (!v2)
  {
    sub_1A330();
    sub_1A340();
  }

  sub_1A314();
  sub_1A2E0();
  id v3 = v2;
  unint64_t v4 = (void *)sub_1A338();
  v0[10] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_19FFC;
  sub_1A2FC();
  return sub_1A294();
}

uint64_t sub_19FFC()
{
  sub_9448();
  if (v1) {
    return sub_1A2AC();
  }
  else {
    return sub_1A2C0(v0, *(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1A054()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A060()
{
  *(void *)(v1 + 56) = v0;
  return sub_1A2D4((uint64_t)sub_1A070);
}

uint64_t sub_1A070()
{
  uint64_t v1 = v0[7];
  v0[8] = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v2 = *(void **)(v1 + qword_79960);
  if (!v2)
  {
    sub_1A330();
    sub_1A340();
  }

  sub_1A314();
  sub_1A2E0();
  id v3 = v2;
  unint64_t v4 = (void *)sub_1A338();
  v0[10] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_19EB4;
  sub_1A2FC();
  return sub_1A294();
}

void sub_1A148()
{
}

void sub_1A174()
{
}

uint64_t sub_1A1A0()
{
  uint64_t v1 = v0 + qword_7B868;
  uint64_t v2 = sub_4AA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
}

uint64_t sub_1A1E8()
{
  uint64_t v0 = CATWrapperSimple.deinit();

  uint64_t v1 = v0 + qword_7B868;
  uint64_t v2 = sub_4AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t sub_1A240()
{
  uint64_t v0 = sub_1A1E8();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1A260()
{
  return type metadata accessor for CommonModernCATs(0LL);
}

uint64_t sub_1A26C()
{
  uint64_t v3 = *v1;
  unint64_t v4 = (uint64_t *)(v2 - 8);
  *unint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v3 + 80);
  *unint64_t v4 = *v1;
  *(void *)(v3 + 88) = v0;
  return swift_task_dealloc(v5);
}

uint64_t sub_1A294()
{
  return ((uint64_t (*)(void))static CATDialog.execute(catId:parameters:globals:callback:options:))();
}

uint64_t sub_1A2AC()
{
  return swift_task_switch();
}

uint64_t sub_1A2C0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1A2D4(uint64_t a1)
{
  return swift_task_switch(a1, 0LL, 0LL);
}

double sub_1A2E0()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
  *(void *)(v0 + 48) = 0LL;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

  ;
}

uint64_t sub_1A314()
{
  *(void *)(v1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v0;
  return type metadata accessor for CATDialog(0LL);
}

uint64_t sub_1A324()
{
  return sub_4A58(v0);
}

uint64_t sub_1A330()
{
  return type metadata accessor for CATGlobals(0LL);
}

uint64_t sub_1A338()
{
  return swift_task_alloc(v0);
}

uint64_t sub_1A340()
{
  return CATGlobals.__allocating_init()();
}

uint64_t type metadata accessor for SexualAssaultModernCATs(uint64_t a1)
{
  uint64_t result = qword_799D0;
  if (!qword_799D0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SexualAssaultModernCATs);
  }
  return result;
}

uint64_t sub_1A380(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B880);
}

uint64_t sub_1A3BC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_1A3FC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  strcpy((char *)(v3 + 32), "websearchQuery");
  *(_BYTE *)(v3 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  unsigned int v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *unsigned int v8 = v0;
  v8[1] = sub_1A4F8;
  return sub_9E10(0xD000000000000022LL, 0x800000000005AD10LL, v3, v10);
}

uint64_t sub_1A4F8()
{
  if (v1)
  {
    sub_4588();
    return sub_9E34();
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v2 + 40));
    sub_9F08();
    return sub_9E24(v0, *(uint64_t (**)(void))(v3 + 8));
  }

uint64_t sub_1A54C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A584(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_1A5C4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v3 + 40) = 0xE700000000000000LL;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  unsigned int v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *unsigned int v8 = v0;
  v8[1] = sub_1A6B4;
  return sub_9E10(0xD000000000000023LL, 0x800000000005ACE0LL, v3, v10);
}

uint64_t sub_1A6B4()
{
  if (v1)
  {
    sub_4588();
    return sub_9E34();
  }

  else
  {
    swift_bridgeObjectRelease(*(void *)(v2 + 40));
    sub_9F08();
    return sub_9E24(v0, *(uint64_t (**)(void))(v3 + 8));
  }

uint64_t sub_1A708()
{
  return type metadata accessor for SexualAssaultModernCATs(0LL);
}

uint64_t sub_1A710(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_799E4);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9CF8;
  return sub_1A3BC(a1);
}

uint64_t sub_1A760(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_799EC);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9E08;
  return sub_1A584(a1);
}

uint64_t type metadata accessor for DomesticViolenceCATs(uint64_t a1)
{
  uint64_t result = qword_79A40;
  if (!qword_79A40) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DomesticViolenceCATs);
  }
  return result;
}

uint64_t sub_1A7EC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B890);
}

uint64_t sub_1A828(uint64_t a1, char a2)
{
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974(&qword_78BB8);
  uint64_t v8 = swift_allocObject(v7, 128LL, 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_56FB0;
  uint64_t v9 = (void *)(v8 + 48);
  *(void *)(v8 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v8 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, (uint64_t)v6, &qword_78970);
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v6, 1LL, v10) == 1)
  {
    sub_7784((uint64_t)v6, &qword_78970);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }

  else
  {
    *(void *)(v8 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v10;
    uint64_t v11 = sub_649C(v9);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v11, v6, v10);
  }

  *(void *)(v8 + 80) = 0xD000000000000012LL;
  *(void *)(v8 + 88) = 0x800000000005ABB0LL;
  *(void *)(v8 + 120) = &type metadata for Bool;
  *(_BYTE *)(v8 + 96) = a2 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000025LL, 0x800000000005B6C0LL, v8);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1A9A8()
{
  return sub_8270(v0, v1, v2, 37LL, v3);
}

uint64_t sub_1A9C4(uint64_t a1)
{
  return sub_8270(a1, 0x656D614E67726FLL, 0xE700000000000000LL, 38LL, 0x800000000005B660LL);
}

uint64_t sub_1A9F0()
{
  return sub_8270(v0, v1, v2, 41LL, v3);
}

uint64_t sub_1AA0C()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)( 0xD000000000000027LL,  0x800000000005B600LL,  &_swiftEmptyArrayStorage);
}

uint64_t sub_1AA30()
{
  return type metadata accessor for DomesticViolenceCATs(0LL);
}

void sub_1AA38(uint64_t a1, char a2)
{
}

void sub_1AA54()
{
}

void sub_1AA70(uint64_t a1)
{
}

void sub_1AA8C()
{
}

void sub_1AAA8()
{
}

BOOL sub_1AAC4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v34 = (uint64_t)&v30 - v11;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = Logger.emergency.unsafeMutableAddressor(v14);
  sub_3CC8(v17, (uint64_t)v38);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = sub_3CD4(22LL);
    uint64_t v32 = v10;
    uint64_t v22 = v21;
    uint64_t v23 = sub_3CD4(64LL);
    v37[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v31 = v2;
    uint64_t v35 = sub_1C9FC(v23, 0x800000000005B770LL, v37);
    uint64_t v33 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v22 + 4, v22 + 12);
    *(_WORD *)(v22 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
    uint64_t v35 = sub_543A4(0x7475706E69286E6FLL, 0xEA0000000000293ALL, v37);
    a1 = v33;
    uint64_t v2 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v22 + 14, v22 + 22);
    _os_log_impl(&dword_0, v19, v20, "%s:%s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v23, 2LL);
    sub_3CA0(v23);
    uint64_t v24 = v22;
    uint64_t v10 = v32;
    sub_3CA0(v24);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v25 = v2 + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state;
  sub_3CC8(v2 + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state, (uint64_t)v37);
  uint64_t v26 = v34;
  sub_1C7B4(v25, v34);
  uint64_t v27 = sub_1C9F4();
  int v28 = sub_5FE0(v26, 3LL, v27);
  if (v28 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16LL))(v10, a1, v27);
    sub_3F18((uint64_t)v10, 0LL, 3LL, v27);
    sub_1C94C((uint64_t)v10, (uint64_t)v7);
    swift_beginAccess(v25, &v35, 33LL, 0LL);
    sub_1C990((uint64_t)v7, v25);
    swift_endAccess(&v35);
  }

  else
  {
    sub_1C7F8(v26);
  }

  return v28 == 1;
}

uint64_t sub_1ADE0(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  uint64_t v3 = type metadata accessor for ExecuteOnRemoteDeviceSpecification(0LL);
  v2[24] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[25] = v4;
  v2[26] = sub_3C88(v4);
  uint64_t v5 = sub_3974(&qword_79CB8);
  v2[27] = sub_3C88(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for UserIdentityCheckFlowStrategy(0LL);
  v2[28] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[29] = v7;
  v2[30] = sub_3C88(v7);
  uint64_t v8 = type metadata accessor for UserIdentityCheckFlowStrategy.HandoffConfiguration(0LL);
  v2[31] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[32] = v9;
  v2[33] = sub_3C88(v9);
  uint64_t v10 = type metadata accessor for CompanionDeviceInfoRequirement(0LL);
  v2[34] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v2[35] = v11;
  v2[36] = sub_3C88(v11);
  uint64_t v12 = type metadata accessor for FlowUnhandledReason(0LL);
  v2[37] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v2[38] = v13;
  v2[39] = sub_3C88(v13);
  uint64_t v14 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  v2[40] = sub_3C88(*(void *)(v14 - 8));
  uint64_t v15 = sub_1C9F4();
  v2[41] = v15;
  v2[42] = *(void *)(v15 - 8);
  v2[43] = sub_45A0();
  v2[44] = sub_45A0();
  uint64_t v16 = type metadata accessor for Logger(0LL);
  v2[45] = v16;
  v2[46] = *(void *)(v16 - 8);
  v2[47] = sub_45A0();
  v2[48] = sub_45A0();
  v2[49] = sub_45A0();
  v2[50] = sub_45A0();
  return swift_task_switch(sub_1AF3C, 0LL, 0LL);
}

uint64_t sub_1AF3C(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(v1 + 400);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 368);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, v1 + 16);
  uint64_t v192 = *(uint64_t (**)(void))(v4 + 16);
  uint64_t v6 = ((uint64_t (*)(os_log_s *, uint64_t, uint64_t))v192)(v2, v5, v3);
  uint64_t v7 = v2;
  Logger.logObject.getter(v6);
  os_log_type_t v8 = sub_67D4();
  if (os_log_type_enabled(v2, v8))
  {
    uint64_t v171 = *(void *)(v1 + 368);
    uint64_t v178 = *(void *)(v1 + 360);
    uint64_t v185 = *(void *)(v1 + 400);
    uint64_t v9 = sub_3CD4(22LL);
    uint64_t v10 = sub_3CD4(64LL);
    v197[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    *(void *)(v1 + 160) = sub_1C9FC(v10, 0x800000000005B770LL, v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 160, v1 + 168, v9 + 4, v9 + 12);
    *(_WORD *)(v9 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
    *(void *)(v1 + 168) = sub_543A4(0x2865747563657865LL, 0xE900000000000029LL, v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 168, v1 + 176, v9 + 14, v9 + 22);
    _os_log_impl(&dword_0, v2, v8, "%s:%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2LL);
    sub_3CA0(v10);
    sub_3CA0(v9);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
    v11(v185, v178);
  }

  else
  {
    uint64_t v12 = *(void *)(v1 + 400);
    uint64_t v13 = *(void *)(v1 + 360);
    uint64_t v14 = *(void *)(v1 + 368);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }

  uint64_t v16 = *(void *)(v1 + 320);
  uint64_t v15 = *(void *)(v1 + 328);
  uint64_t v17 = *(void *)(v1 + 184) + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state;
  sub_3CC8(v17, v1 + 40);
  sub_1C7B4(v17, v16);
  uint64_t v18 = sub_5FE0(v16, 3LL, v15);
  if ((_DWORD)v18)
  {
    if ((_DWORD)v18 == 3)
    {
      uint64_t v20 = *(void *)(v1 + 304);
      uint64_t v19 = *(void *)(v1 + 312);
      uint64_t v21 = *(void *)(v1 + 296);
      (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))( v19,  enum case for FlowUnhandledReason.needsServerExecution(_:),  v21);
      static ExecuteResponse.unhandled(reason:)(v19);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }

    else
    {
      uint64_t v111 = *(void *)(v1 + 320);
      static ExecuteResponse.complete()(v18);
      sub_1C7F8(v111);
    }
  }

  else
  {
    uint64_t v22 = *(void *)(v1 + 392);
    uint64_t v23 = *(void *)(v1 + 360);
    (*(void (**)(void, void, void))(*(void *)(v1 + 336) + 32LL))( *(void *)(v1 + 352),  *(void *)(v1 + 320),  *(void *)(v1 + 328));
    sub_3CC8(v5, v1 + 64);
    uint64_t v29 = sub_1CA08( v22,  v5,  v23,  v24,  v25,  v26,  v27,  v28,  v122,  v128,  v134,  v140,  v1 + 136,  v1 + 144,  v1 + 112,  v165,  v1 + 88,  v178,  (uint64_t)v11,  v192);
    uint64_t v30 = (void *)v22;
    Logger.logObject.getter(v29);
    os_log_type_t v31 = sub_67D4();
    if (sub_182AC(v31))
    {
      uint64_t v32 = (_WORD *)sub_3CD4(2LL);
      *uint64_t v32 = 0;
      sub_1C9E0(&dword_0, v33, v34, "get the supported companions");
      sub_3CA0((uint64_t)v32);
    }

    uint64_t v35 = *(void *)(v1 + 392);
    uint64_t v36 = *(void *)(v1 + 360);
    uint64_t v37 = *(void *)(v1 + 280);
    uint64_t v38 = *(void *)(v1 + 288);
    uint64_t v40 = *(void *)(v1 + 264);
    uint64_t v39 = *(void *)(v1 + 272);
    uint64_t v123 = *(void *)(v1 + 256);
    uint64_t v129 = *(void *)(v1 + 248);
    uint64_t v135 = *(void *)(v1 + 240);
    uint64_t v141 = *(void *)(v1 + 384);
    uint64_t v41 = *(void *)(v1 + 216);

    sub_1C9D4( v35,  v42,  v43,  v44,  v45,  v46,  v47,  v48,  v123,  v129,  v135,  v141,  v147,  v153,  v159,  v1 + 152,  v172,  v179,  v186);
    type metadata accessor for CompanionCompatibilityCheckFlowStrategy(0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))( v38,  enum case for CompanionDeviceInfoRequirement.supportsPeerToPeerHandoff(_:),  v39);
    uint64_t v49 = static CompanionCompatibilityCheckFlowStrategy.require(_:redirectToServerOnFailure:)(v38, 0LL);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
    uint64_t v50 = type metadata accessor for SimpleHandoffStrategy();
    uint64_t v51 = swift_allocObject(v50, 16LL, 7LL);
    v197[3] = v50;
    v197[4] = sub_1C774( &qword_79CC0,  v52,  (uint64_t (*)(uint64_t))type metadata accessor for SimpleHandoffStrategy,  (uint64_t)&unk_5804C);
    v197[0] = v51;
    uint64_t v53 = swift_retain(v49);
    UserIdentityCheckFlowStrategy.HandoffConfiguration.init(companionCompatiblityCheck:handoffStrategy:)(v53, v197);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16))(v41, v40, v130);
    sub_3F18(v41, 0LL, 1LL, v130);
    UserIdentityCheckFlowStrategy.init(allowsAnonymousUser:allowsUserInteraction:handoffConfiguration:requireSpeechProfile:)( 0LL,  1LL,  v41,  1LL);
    UserIdentityCheckFlowStrategy.requireSpeechProfile.setter(0LL);
    sub_3CC8(v5, v173);
    unint64_t v54 = (void *)v142;
    uint64_t v60 = sub_1CA08( v142,  v5,  v36,  v55,  v56,  v57,  v58,  v59,  v124,  v130,  v136,  v142,  v148,  v154,  v160,  v166,  v5,  v49,  v187,  v193);
    Logger.logObject.getter(v60);
    os_log_type_t v61 = sub_67D4();
    if (sub_182AC(v61))
    {
      uint64_t v62 = (_WORD *)sub_3CD4(2LL);
      *uint64_t v62 = 0;
      sub_1C9E0(&dword_0, v63, v64, "going into executeOnRemoteFlow");
      sub_3CA0((uint64_t)v62);
    }

    uint64_t v65 = *(void *)(v1 + 384);
    uint64_t v66 = *(void *)(v1 + 352);
    uint64_t v137 = *(void *)(v1 + 360);
    uint64_t v143 = *(void *)(v1 + 376);
    uint64_t v67 = *(void *)(v1 + 336);
    uint64_t v68 = *(void *)(v1 + 344);
    uint64_t v69 = *(void *)(v1 + 328);
    uint64_t v70 = *(void *)(v1 + 200);
    uint64_t v71 = *(void *)(v1 + 208);
    uint64_t v125 = *(void *)(v1 + 192);
    uint64_t v131 = *(void *)(v1 + 240);

    sub_1C9D4(v65, v72, v73, v74, v75, v76, v77, v78, v125, v131, v137, v143, v149, v155, v161, v167, v174, v180, v188);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v68, v66, v69);
    uint64_t v79 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v70 + 104))( v71,  enum case for ExecuteOnRemoteDeviceSpecification.userCompanion(_:),  v126);
    static OutputPublisherFactory.makeOutputPublisherAsync()(v197, v79);
    uint64_t v80 = type metadata accessor for ExecuteOnRemoteFlow(0LL);
    swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
    uint64_t v81 = ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:)(v68, v71, v197);
    *(void *)(v1 + 144) = v81;
    uint64_t v82 = sub_3974(&qword_79CC8);
    uint64_t v83 = *(void *)(type metadata accessor for CommonFlowGuard(0LL) - 8);
    uint64_t v84 = swift_allocObject( v82,  ((*(unsigned __int8 *)(v83 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))
          + 2LL * *(void *)(v83 + 72),
            *(unsigned __int8 *)(v83 + 80) | 7LL);
    *(_OWORD *)(v84 + 16) = xmmword_56FB0;
    static CommonFlowGuard.ensuringUserIdentity(using:)(v132);
    static CommonFlowGuard.ensuringUserHasSupportedCompanion(using:)(v181);
    uint64_t v85 = static CommonGuardFlowUtils.makeGuardFlow(withGuards:)(v84);
    swift_bridgeObjectRelease(v84);
    *(void *)(v1 + 136) = v85;
    uint64_t v86 = type metadata accessor for GuardFlow(0LL);
    uint64_t v156 = Flow.guarded<A>(by:)( v150,  v80,  v86,  &protocol witness table for ExecuteOnRemoteFlow,  &protocol witness table for GuardFlow);
    swift_release(v81);
    swift_release(v85);
    sub_3CC8(v175, v162);
    uint64_t v92 = sub_1CA08( v144,  v175,  v138,  v87,  v88,  v89,  v90,  v91,  v126,  v132,  v138,  v144,  v150,  v156,  v162,  v168,  v175,  v181,  v189,  v194);
    uint64_t v93 = (os_log_s *)Logger.logObject.getter(v92);
    os_log_type_t v94 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v95 = 0;
      _os_log_impl(&dword_0, v93, v94, "finished creating the executeOnRemoteFlow", v95, 2u);
      sub_3CA0((uint64_t)v95);
    }

    uint64_t v96 = *(void *)(v1 + 376);
    uint64_t v195 = *(void *)(v1 + 352);
    uint64_t v163 = *(void *)(v1 + 336);
    uint64_t v176 = *(void *)(v1 + 328);
    uint64_t v97 = *(void *)(v1 + 256);
    uint64_t v98 = *(void *)(v1 + 240);
    uint64_t v145 = *(void *)(v1 + 248);
    uint64_t v151 = *(void *)(v1 + 264);
    uint64_t v99 = *(void *)(v1 + 224);
    uint64_t v100 = *(void *)(v1 + 232);
    uint64_t v101 = *(void *)(v1 + 184);

    sub_1C9D4( v96,  v102,  v103,  v104,  v105,  v106,  v107,  v108,  v127,  v133,  v139,  v145,  v151,  v157,  v163,  v169,  v176,  v182,  v190);
    *(void *)(v1 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v158;
    swift_retain(v101);
    uint64_t v109 = sub_3974(&qword_79CD0);
    unint64_t v110 = sub_1C83C();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)(v170, sub_1C834, v101, v109, v110);
    swift_release(v183);
    swift_release(v101);
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v99);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v152, v146);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v195, v177);
    swift_release(v158);
  }

  uint64_t v112 = *(void *)(v1 + 392);
  uint64_t v114 = *(void *)(v1 + 376);
  uint64_t v113 = *(void *)(v1 + 384);
  uint64_t v116 = *(void *)(v1 + 344);
  uint64_t v115 = *(void *)(v1 + 352);
  uint64_t v118 = *(void *)(v1 + 312);
  uint64_t v117 = *(void *)(v1 + 320);
  uint64_t v119 = *(void *)(v1 + 288);
  uint64_t v120 = *(void *)(v1 + 264);
  uint64_t v184 = *(void *)(v1 + 240);
  uint64_t v191 = *(void *)(v1 + 216);
  uint64_t v196 = *(void *)(v1 + 208);
  swift_task_dealloc(*(void *)(v1 + 400));
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  swift_task_dealloc(v116);
  swift_task_dealloc(v117);
  swift_task_dealloc(v118);
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v184);
  swift_task_dealloc(v191);
  swift_task_dealloc(v196);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1B710(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = a2;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v80 = (char *)&v74 - v9;
  __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v74 - v10;
  uint64_t v82 = type metadata accessor for ExecuteOnRemoteFlowResult(0LL);
  uint64_t v11 = *(void (***)(char *, char *, uint64_t))(v82 - 8);
  uint64_t v12 = __chkstk_darwin(v82);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v74 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (uint64_t *)((char *)&v74 - v19);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v74 - v21;
  uint64_t v23 = sub_3974(&qword_79CE0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  __chkstk_darwin(v26);
  uint64_t v83 = (uint64_t)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1C880(a1, (uint64_t)v25);
  uint64_t v28 = sub_3974(&qword_79CE8);
  uint64_t v29 = sub_5FE0((uint64_t)v25, 1LL, v28);
  if ((_DWORD)v29 == 1)
  {
    uint64_t v30 = Logger.emergency.unsafeMutableAddressor(v29);
    swift_beginAccess(v30, v87, 0LL, 0LL);
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v30, v3);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl( &dword_0,  v32,  v33,  "ExecuteOnRemote guard flows failed, assuming a server redirect or handoff should have happened, doing nothing.",  v34,  2u);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v35 = type metadata accessor for Input(0LL);
    uint64_t v36 = v83;
    sub_3F18(v83, 2LL, 3LL, v35);
    sub_1C8C8((uint64_t)v25);
  }

  else
  {
    uint64_t v37 = v25;
    uint64_t v38 = v82;
    v11[4](v22, v37, v82);
    uint64_t v39 = v11[2];
    v39((char *)v20, v22, v38);
    uint64_t v40 = ((uint64_t (*)(uint64_t *, uint64_t))v11[11])(v20, v38);
    uint64_t v79 = v22;
    if ((_DWORD)v40 == enum case for ExecuteOnRemoteFlowResult.remoteFlowFailure(_:))
    {
      uint64_t v41 = ((uint64_t (*)(uint64_t *, uint64_t))v11[12])(v20, v38);
      uint64_t v42 = *v20;
      uint64_t v43 = Logger.emergency.unsafeMutableAddressor(v41);
      swift_beginAccess(v43, v87, 0LL, 0LL);
      uint64_t v44 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v81, v43, v3);
      swift_errorRetain(v42);
      uint64_t v45 = swift_errorRetain(v42);
      uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v49 = swift_slowAlloc(32LL, -1LL);
        uint64_t v78 = v3;
        uint64_t v50 = v49;
        uint64_t v85 = v42;
        v86[0] = v49;
        *(_DWORD *)uint64_t v48 = 136315138;
        uint64_t v80 = (char *)(v48 + 4);
        swift_errorRetain(v42);
        sub_3974(&qword_78950);
        uint64_t v51 = String.init<A>(describing:)(&v85);
        unint64_t v53 = v52;
        uint64_t v85 = sub_543A4(v51, v52, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v80, v48 + 12);
        swift_bridgeObjectRelease(v53);
        swift_errorRelease(v42);
        swift_errorRelease(v42);
        _os_log_impl( &dword_0,  v46,  v47,  "ExecuteOnRemote failed with an error=%s: Possible server redirect. Will redirect this input to server as a fallback.",  v48,  0xCu);
        swift_arrayDestroy(v50, 1LL);
        swift_slowDealloc(v50, -1LL, -1LL);
        swift_slowDealloc(v48, -1LL, -1LL);

        swift_errorRelease(v42);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v44, v78);
        ((void (*)(char *, uint64_t))v11[1])(v79, v82);
      }

      else
      {

        swift_errorRelease(v42);
        swift_errorRelease(v42);
        swift_errorRelease(v42);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v44, v3);
        ((void (*)(char *, uint64_t))v11[1])(v79, v38);
      }

      uint64_t v70 = type metadata accessor for Input(0LL);
      uint64_t v36 = v83;
      sub_3F18(v83, 3LL, 3LL, v70);
    }

    else
    {
      unint64_t v54 = v22;
      uint64_t v81 = (char *)v11;
      uint64_t v55 = Logger.emergency.unsafeMutableAddressor(v40);
      swift_beginAccess(v55, v87, 0LL, 0LL);
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v57 = v80;
      uint64_t v78 = v3;
      v56(v80, v55, v3);
      uint64_t v58 = ((uint64_t (*)(char *, char *, uint64_t))v39)(v17, v54, v38);
      uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
      os_log_type_t v60 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v77 = swift_slowAlloc(32LL, -1LL);
        v86[0] = v77;
        uint64_t v76 = v62;
        *(_DWORD *)uint64_t v62 = 136315138;
        uint64_t v75 = v62 + 4;
        uint64_t v63 = v82;
        v39(v14, v17, v82);
        uint64_t v64 = String.init<A>(describing:)(v14);
        unint64_t v66 = v65;
        uint64_t v85 = sub_543A4(v64, v65, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, v86, v75, v62 + 12);
        swift_bridgeObjectRelease(v66);
        uint64_t v67 = (void (*)(char *, uint64_t))*((void *)v81 + 1);
        v67(v17, v63);
        uint64_t v68 = v76;
        _os_log_impl(&dword_0, v59, v60, "ExecuteOnRemote flow completed with: %s", v76, 0xCu);
        uint64_t v69 = v77;
        swift_arrayDestroy(v77, 1LL);
        swift_slowDealloc(v69, -1LL, -1LL);
        swift_slowDealloc(v68, -1LL, -1LL);
      }

      else
      {

        uint64_t v63 = v82;
        uint64_t v67 = (void (*)(char *, uint64_t))*((void *)v81 + 1);
        v67(v17, v82);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v78);
      v67(v79, v63);
      uint64_t v71 = type metadata accessor for Input(0LL);
      uint64_t v36 = v83;
      sub_3F18(v83, 2LL, 3LL, v71);
      v67((char *)v20, v63);
    }
  }

  uint64_t v72 = v84 + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state;
  swift_beginAccess(v84 + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state, v86, 33LL, 0LL);
  sub_1C908(v36, v72);
  swift_endAccess(v86);
  return sub_1C7F8(v36);
}

uint64_t sub_1BE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedirectToCompanionFlow(0LL);
  uint64_t v5 = sub_1C774( (unint64_t *)&qword_79CA8,  255LL,  type metadata accessor for RedirectToCompanionFlow,  (uint64_t)&unk_58074);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t sub_1BEC4()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1BEF4()
{
  return type metadata accessor for RedirectToCompanionFlow(0LL);
}

uint64_t type metadata accessor for RedirectToCompanionFlow(uint64_t a1)
{
  return sub_B498(a1, (uint64_t *)&unk_79AB8, (uint64_t)&nominal type descriptor for RedirectToCompanionFlow);
}

uint64_t sub_1BF10(uint64_t a1)
{
  uint64_t result = type metadata accessor for RedirectToCompanionFlow.State(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for RedirectToCompanionFlow.State(uint64_t a1)
{
  return sub_B498(a1, qword_79C80, (uint64_t)&nominal type descriptor for RedirectToCompanionFlow.State);
}

uint64_t sub_1BF90()
{
  return SiriEnvironmentLocating<>.siriEnvironment.getter();
}

uint64_t sub_1BFB0()
{
  return SiriEnvironmentLocating<>.siriEnvironment.setter();
}

void (*sub_1BFD0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = SiriEnvironmentLocating<>.siriEnvironment.modify();
  return sub_1C030;
}

void sub_1C030(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32LL))(*a1);
  free(v1);
}

BOOL sub_1C05C(uint64_t a1)
{
  return sub_1AAC4(a1);
}

uint64_t sub_1C080(uint64_t a1, uint64_t a2)
{
  return sub_1BE4C(a1, a2);
}

uint64_t sub_1C0A0(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_79ACC);
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_5F44;
  return sub_1ADE0(a1);
}

uint64_t sub_1C0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for RedirectToCompanionFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_1C11C()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for SimpleHandoffStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin21SimpleHandoffStrategy);
}

uint64_t *sub_1C14C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v8);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Input(0LL);
    if (sub_5FE0((uint64_t)a2, 3LL, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
      sub_3F18((uint64_t)a1, 0LL, 3LL, v7);
    }
  }

  return a1;
}

uint64_t sub_1C204(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Input(0LL);
  uint64_t result = sub_5FE0(a1, 3LL, v2);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  }
  return result;
}

void *sub_1C25C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Input(0LL);
  if (sub_5FE0((uint64_t)a2, 3LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
    sub_3F18((uint64_t)a1, 0LL, 3LL, v6);
  }

  return a1;
}

void *sub_1C2F0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Input(0LL);
  int v7 = sub_5FE0((uint64_t)a1, 3LL, v6);
  int v8 = sub_5FE0((uint64_t)a2, 3LL, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  sub_3F18((uint64_t)a1, 0LL, 3LL, v6);
  return a1;
}

void *sub_1C3D4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Input(0LL);
  if (sub_5FE0((uint64_t)a2, 3LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    sub_3F18((uint64_t)a1, 0LL, 3LL, v6);
  }

  return a1;
}

void *sub_1C468(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Input(0LL);
  int v7 = sub_5FE0((uint64_t)a1, 3LL, v6);
  int v8 = sub_5FE0((uint64_t)a2, 3LL, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }

  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  sub_3F18((uint64_t)a1, 0LL, 3LL, v6);
  return a1;
}

uint64_t sub_1C54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C558);
}

uint64_t sub_1C558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9F4();
  unsigned int v5 = sub_5FE0(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1C598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C5A4);
}

uint64_t sub_1C5A4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = sub_1C9F4();
  return sub_3F18(a1, v5, a3, v6);
}

uint64_t sub_1C5EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Input(0LL);
  return sub_5FE0(a1, 3LL, v2);
}

uint64_t sub_1C61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Input(0LL);
  return sub_3F18(a1, a2, 3LL, v4);
}

uint64_t sub_1C654(uint64_t a1)
{
  uint64_t result = type metadata accessor for Input(319LL);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256LL, *(void *)(result - 8) + 64LL, 3LL);
    return 0LL;
  }

  return result;
}

uint64_t sub_1C6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = (void *)swift_task_alloc(async function pointer to HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()[1]);
  *(void *)(v3 + 16) = v7;
  *int v7 = v3;
  v7[1] = sub_5F44;
  return HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(a1, a2, a3);
}

uint64_t sub_1C714()
{
  return sub_1C774( (unint64_t *)&qword_79CA8,  255LL,  type metadata accessor for RedirectToCompanionFlow,  (uint64_t)&unk_58074);
}

uint64_t sub_1C744()
{
  return sub_1C774(&qword_79CB0, 255LL, type metadata accessor for RedirectToCompanionFlow, (uint64_t)&unk_580CC);
}

uint64_t sub_1C774(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = a3(a2);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1C7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C7F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1C834(uint64_t a1)
{
  return sub_1B710(a1, v1);
}

unint64_t sub_1C83C()
{
  unint64_t result = qword_79CD8;
  if (!qword_79CD8)
  {
    uint64_t v1 = sub_6060(&qword_79CD0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ConditionalFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_79CD8);
  }

  return result;
}

uint64_t sub_1C880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974(&qword_79CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C8C8(uint64_t a1)
{
  uint64_t v2 = sub_3974(&qword_79CE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1C908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedirectToCompanionFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t))
{
  return a19(a1, v19);
}

void sub_1C9E0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_1C9F4()
{
  return type metadata accessor for Input(0LL);
}

uint64_t sub_1C9FC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return sub_543A4(0xD00000000000007DLL, a2, a3);
}

uint64_t sub_1CA08( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(void))
{
  return a20();
}

uint64_t type metadata accessor for EmergencyPoisonControlBasicIntentModernCATs(uint64_t a1)
{
  uint64_t result = qword_79CF0;
  if (!qword_79CF0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyPoisonControlBasicIntentModernCATs);
  }
  return result;
}

uint64_t sub_1CA48(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B8A8);
}

uint64_t sub_1CA84(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_1CAC8()
{
  uint64_t v1 = sub_3974(&qword_78BB8);
  uint64_t v2 = sub_77F4(v1, 128LL);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_56FB0;
  strcpy((char *)(v2 + 32), "webSearchQuery");
  *(_BYTE *)(v2 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v2, v3, &qword_78970);
  uint64_t v4 = sub_4508();
  uint64_t v5 = sub_9F30(v4);
  if (v6)
  {
    sub_9F58(v5, &qword_78970);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  char v8 = *(_BYTE *)(v0 + 64);
  *(void *)(v2 + 80) = 0xD000000000000012LL;
  *(void *)(v2 + 88) = 0x800000000005ABB0LL;
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(_BYTE *)(v2 + 96) = v8;
  uint64_t v9 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  void *v9 = v0;
  v9[1] = sub_965C;
  uint64_t v10 = sub_9E44(0xD00000000000002CLL);
  return sub_9E10(v10, v11, v12, v13);
}

uint64_t sub_1CBDC(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_1CC20()
{
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = (__n128 *)sub_77F4(v2, 128LL);
  *(void *)(v1 + 40) = v3;
  uint64_t v4 = sub_9EAC(v3, (__n128)xmmword_56FB0);
  sub_9EF0((uint64_t)v4, v5, &qword_78970);
  uint64_t v6 = sub_4508();
  uint64_t v7 = sub_9F30(v6);
  if (v8)
  {
    sub_9F58(v7, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unsigned __int8 v10 = *(_BYTE *)(v1 + 64);
  v3[5].n128_u64[0] = 0xD000000000000012LL;
  v3[5].n128_u64[1] = 0x800000000005ABB0LL;
  v3[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[6].n128_u8[0] = v10;
  uint64_t v11 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_9808;
  uint64_t v12 = sub_9E44(0xD00000000000002DLL);
  return sub_9E10(v12, v13, v14, v15);
}

uint64_t sub_1CD0C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = a2;
  *(void *)(v4 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = sub_3974(&qword_78970);
  *(void *)(v4 + 40) = sub_9E84(v5);
  sub_4588();
  return sub_451C();
}

uint64_t sub_1CD54()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = sub_3974(&qword_78BB8);
  uint64_t v4 = (__n128 *)sub_77F4(v3, 176LL);
  *(void *)(v1 + 48) = v4;
  uint64_t v5 = sub_9EAC(v4, (__n128)xmmword_56FC0);
  sub_9EF0((uint64_t)v5, v6, &qword_78970);
  uint64_t v7 = sub_4508();
  uint64_t v8 = sub_5FE0(v2, 1LL, v7);
  if ((_DWORD)v8 == 1)
  {
    sub_9F58(v8, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unint64_t v10 = *(void *)(v1 + 24);
  v4[5].n128_u64[0] = 0x65626D754E67726FLL;
  v4[5].n128_u64[1] = 0xE900000000000072LL;
  uint64_t v11 = 0LL;
  if (v10)
  {
    uint64_t v11 = type metadata accessor for DialogPhoneNumber(0LL);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  unsigned __int8 v12 = *(_BYTE *)(v1 + 72);
  v4[6].n128_u64[0] = v10;
  v4[8].n128_u64[1] = 0x800000000005ABB0LL;
  v4[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v4[9].n128_u8[0] = v12;
  uint64_t v13 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + 1);
  v4[7].n128_u64[1] = v11;
  v4[8].n128_u64[0] = 0xD000000000000012LL;
  swift_retain(v10);
  uint64_t v14 = (void *)swift_task_alloc(v13);
  *(void *)(v1 + 56) = v14;
  void *v14 = v1;
  v14[1] = sub_99F8;
  uint64_t v15 = sub_9E44(0xD00000000000002ALL);
  return sub_9E10(v15, v16, v17, v18);
}

uint64_t sub_1CEB0()
{
  return type metadata accessor for EmergencyPoisonControlBasicIntentModernCATs(0LL);
}

uint64_t sub_1CEB8()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_79D04);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9CF8);
  return sub_1CA84(v2, v3);
}

uint64_t sub_1CF0C()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_79D0C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9E08);
  return sub_1CBDC(v2, v3);
}

uint64_t sub_1CF60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_79D14);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E08;
  return sub_1CD0C(a1, a2, a3);
}

uint64_t sub_1CFC8()
{
  uint64_t v199 = v1;
  uint64_t v200 = v2;
  uint64_t v168 = v0;
  uint64_t v4 = v3;
  uint64_t v172 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v171 = *(void *)(v172 - 8);
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_6750();
  uint64_t v184 = v6;
  uint64_t v7 = sub_1FC8C();
  type metadata accessor for EmergencyNLIntent(v7);
  sub_6764();
  __chkstk_darwin(v8);
  sub_66F4();
  uint64_t v176 = v9;
  sub_67EC();
  __chkstk_darwin(v10);
  sub_1300C();
  uint64_t v175 = v11;
  uint64_t v12 = sub_1FC8C();
  uint64_t v174 = type metadata accessor for NLIntent(v12);
  uint64_t v180 = *(void *)(v174 - 8);
  sub_EDD8();
  __chkstk_darwin(v13);
  sub_6750();
  uint64_t v179 = v14;
  uint64_t v15 = sub_1FC8C();
  type metadata accessor for Siri_Nlu_External_UserParse(v15);
  sub_6764();
  __chkstk_darwin(v16);
  sub_6750();
  uint64_t v161 = v17;
  uint64_t v18 = sub_1FC8C();
  type metadata accessor for EmergencyDialogAct(v18);
  sub_6764();
  __chkstk_darwin(v19);
  sub_66F4();
  uint64_t v160 = v20;
  sub_67EC();
  __chkstk_darwin(v21);
  sub_1300C();
  uint64_t v159 = v22;
  uint64_t v23 = sub_1FC8C();
  uint64_t v158 = type metadata accessor for USOParse(v23);
  uint64_t v166 = *(void *)(v158 - 8);
  sub_EDD8();
  __chkstk_darwin(v24);
  sub_6750();
  uint64_t v165 = v25;
  uint64_t v26 = sub_1FC8C();
  uint64_t v27 = type metadata accessor for Parse(v26);
  uint64_t v185 = *(void *)(v27 - 8);
  uint64_t v186 = (os_log_s *)v27;
  sub_EDD8();
  __chkstk_darwin(v28);
  sub_6750();
  uint64_t v183 = v29;
  uint64_t v30 = sub_1FC8C();
  uint64_t v31 = type metadata accessor for Input(v30);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v155 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = (uint8_t *)sub_6820();
  uint64_t v36 = *((void *)v35 - 1);
  __chkstk_darwin(v35);
  sub_66F4();
  uint64_t v170 = v37;
  sub_67EC();
  __chkstk_darwin(v38);
  sub_EE64();
  uint64_t v163 = v39;
  sub_67EC();
  __chkstk_darwin(v40);
  sub_EE64();
  uint64_t v164 = v41;
  sub_67EC();
  __chkstk_darwin(v42);
  sub_EE64();
  uint64_t v162 = v43;
  sub_67EC();
  __chkstk_darwin(v44);
  sub_EE64();
  uint64_t v167 = v45;
  sub_67EC();
  __chkstk_darwin(v46);
  sub_EE64();
  uint64_t v173 = v47;
  sub_67EC();
  __chkstk_darwin(v48);
  sub_EE64();
  uint64_t v157 = v49;
  sub_67EC();
  uint64_t v51 = __chkstk_darwin(v50);
  unint64_t v53 = (uint8_t *)&v155 - v52;
  uint64_t v54 = Logger.emergency.unsafeMutableAddressor(v51);
  sub_3CC8(v54, (uint64_t)&v197);
  uint64_t v177 = v36;
  uint64_t v55 = *(void (**)(void, void, void))(v36 + 16);
  uint64_t v182 = v54;
  uint64_t v181 = v55;
  v55(v53, v54, v35);
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  uint64_t v178 = v4;
  sub_182F0((uint64_t)v34, v56);
  uint64_t v57 = (os_log_s *)sub_1FD2C();
  os_log_type_t v58 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v57, v58))
  {
    sub_3CD4(12LL);
    sub_1FDD4();
    uint64_t v59 = sub_3CD4(32LL);
    *(void *)&__int128 v187 = v59;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v156 = v35 + 4;
    sub_EF34( &qword_790C0,  v60,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter(v31, v61);
    unint64_t v64 = v63;
    uint64_t v195 = sub_543A4(v62, v63, (uint64_t *)&v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, &v196, v156, v35 + 12);
    swift_bridgeObjectRelease(v64);
    sub_1FD84();
    sub_67F8(&dword_0, v57, v58, "#EmergencyDirectCallFlow onInput: %s", v35);
    sub_67DC(v59);
    sub_3CA0(v59);
    uint64_t v65 = (uint64_t)v35;
    uint64_t v35 = v169;
    sub_3CA0(v65);
  }

  else
  {
    sub_1FD84();
  }

  unint64_t v66 = *(uint64_t (**)(uint8_t *, uint8_t *))(v177 + 8);
  uint64_t v67 = v66(v53, v35);
  uint64_t v68 = v183;
  Input.parse.getter(v67);
  os_log_type_t v70 = v185;
  uint64_t v69 = v186;
  int v71 = (*(uint64_t (**)(uint64_t, os_log_s *))(v185 + 88))(v68, v186);
  uint64_t v72 = v184;
  uint64_t v73 = v182;
  if (v71 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_1FCC0();
    uint64_t v74 = v174;
    sub_EEAC(v179, v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 32));
    sub_3CC8(v73, (uint64_t)&v187);
    os_log_type_t v75 = v173;
    uint64_t v76 = sub_18254(v173);
    Logger.logObject.getter(v76);
    os_log_type_t v77 = sub_EEB4();
    if (sub_EDE4(v77))
    {
      uint64_t v78 = (_WORD *)sub_8D14();
      sub_182E4(v78);
      sub_EDA8(&dword_0, v69, v75, "EmergencyDirectCallFlow onInput .NLv3IntentOnly", v53);
      sub_3CA0((uint64_t)v53);
    }

    uint64_t v79 = sub_1FE44();
    uint64_t v186 = (os_log_s *)v66;
    ((void (*)(uint64_t))v66)(v79);
    uint64_t v80 = v180;
    uint64_t v81 = v175;
    uint64_t v82 = v179;
    sub_EEAC(v175, v179, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 16));
    uint64_t v83 = type metadata accessor for EmergencyNLIntent;
    sub_1FD44(v81, (uint64_t)&v198);
    sub_22DC0((uint64_t)v69);
    uint64_t v85 = v84;
    sub_EAF0(v81, type metadata accessor for EmergencyNLIntent);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v74);
    goto LABEL_18;
  }

  if (v71 == enum case for Parse.directInvocation(_:))
  {
    sub_1FCC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 32))(v72, v68, v172);
    sub_3CC8(v73, (uint64_t)&v195);
    os_log_type_t v86 = v167;
    uint64_t v87 = sub_18254(v167);
    Logger.logObject.getter(v87);
    os_log_type_t v88 = sub_EEB4();
    if (sub_EDE4(v88))
    {
      uint64_t v89 = (_WORD *)sub_8D14();
      sub_182E4(v89);
      sub_EDA8(&dword_0, v69, v86, "EmergencyDirectCallFlow onInput .directInvocation", v53);
      sub_3CA0((uint64_t)v53);
    }

    uint64_t v90 = sub_1FE44();
    uint64_t v91 = ((uint64_t (*)(uint64_t))v66)(v90);
    uint64_t v92 = Parse.DirectInvocation.identifier.getter(v91);
    if (v92 == 0xD00000000000003FLL && v93 == 0x800000000005B910LL)
    {
      uint64_t v94 = swift_bridgeObjectRelease(0x800000000005B910LL);
    }

    else
    {
      char v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v93, 0xD00000000000003FLL, 0x800000000005B910LL, 0LL);
      uint64_t v94 = sub_1FD7C();
      if ((v120 & 1) == 0) {
        goto LABEL_39;
      }
    }

    uint64_t v121 = Parse.DirectInvocation.userData.getter(v94);
    if (v121)
    {
      uint64_t v122 = v121;
      uint64_t v123 = DirectInvocationURI.payloadKey.getter(3LL);
      uint64_t v125 = v124;
      sub_2A82C(v123, v124, v122, &v187);
      swift_bridgeObjectRelease(v125);
      sub_1FD7C();
      if (*((void *)&v188 + 1))
      {
        uint64_t v94 = swift_dynamicCast(&v191, &v187, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
        if ((v94 & 1) != 0)
        {
          uint64_t v94 = ((uint64_t (*)(uint64_t, uint64_t))EmergencyOrganization.init(rawValue:))(v191, v192);
          if (v94 != 4)
          {
            LOBYTE(v85) = v94;
            LOWORD(v106) = 35;
LABEL_47:
            uint64_t v150 = sub_1FE00();
            v151(v150, v172);
            goto LABEL_48;
          }
        }

LABEL_39:
        uint64_t v136 = v72;
        uint64_t v137 = Parse.DirectInvocation.identifier.getter(v94);
        if (v137 == 0xD000000000000035LL && v138 == 0x800000000005B1B0LL)
        {
          swift_bridgeObjectRelease(0x800000000005B1B0LL);
        }

        else
        {
          uint64_t v136 = _stringCompareWithSmolCheck(_:_:expecting:)( v137,  v138,  0xD000000000000035LL,  0x800000000005B1B0LL,  0LL);
          sub_1FD7C();
          if ((v136 & 1) == 0)
          {
LABEL_44:
            sub_3CC8(v73, (uint64_t)&v187);
            uint64_t v140 = sub_1FD0C();
            uint64_t v141 = (os_log_s *)Logger.logObject.getter(v140);
            os_log_type_t v142 = static os_log_type_t.error.getter();
            if (sub_12FD8(v142))
            {
              uint64_t v143 = (uint8_t *)sub_3CD4(12LL);
              sub_3CD4(32LL);
              sub_1FDD4();
              uint64_t v191 = v144;
              *(_DWORD *)uint64_t v143 = 136315138;
              LOBYTE(v194) = 0;
              uint64_t v145 = String.init<A>(describing:)(&v194);
              unint64_t v147 = v146;
              uint64_t v194 = sub_543A4(v145, v146, &v191);
              sub_1FE14((uint64_t)&v194, (uint64_t)&v195);
              swift_bridgeObjectRelease(v147);
              sub_67F8(&dword_0, v141, (os_log_type_t)0x35u, "%s", v143);
              sub_67DC((uint64_t)v35);
              sub_3CA0((uint64_t)v35);
              sub_3CA0((uint64_t)v143);

              v66((uint8_t *)v136, v169);
              uint64_t v148 = *(void (**)(uint64_t, os_log_s *))(v171 + 8);
              uint64_t v149 = v184;
            }

            else
            {

              v66((uint8_t *)v136, v35);
              uint64_t v149 = sub_1FE00();
            }

            uint64_t v154 = (os_log_s *)v172;
LABEL_53:
            v148(v149, v154);
            return 0LL;
          }
        }

        __int16 v139 = sub_28990(v72);
        if (v139 != 35)
        {
          LOWORD(v106) = v139;
          LOBYTE(v85) = 4;
          goto LABEL_47;
        }

        goto LABEL_44;
      }
    }

    else
    {
      __int128 v187 = 0u;
      __int128 v188 = 0u;
    }

    sub_E988((uint64_t)&v187, (uint64_t *)&unk_7A610);
    goto LABEL_39;
  }

  if (v71 != enum case for Parse.uso(_:))
  {
    sub_3CC8(v182, (uint64_t)&v187);
    uint64_t v126 = v164;
    sub_18254(v164);
    uint64_t v127 = (os_log_s *)sub_13124();
    os_log_type_t v128 = static os_log_type_t.error.getter();
    if (sub_12FD8(v128))
    {
      uint64_t v129 = (uint8_t *)sub_3CD4(12LL);
      sub_3CD4(32LL);
      sub_1FDD4();
      uint64_t v195 = v130;
      *(_DWORD *)uint64_t v129 = 136315138;
      LOBYTE(v191) = 0;
      uint64_t v131 = String.init<A>(describing:)(&v191);
      unint64_t v133 = v132;
      uint64_t v191 = sub_543A4(v131, v132, &v195);
      sub_1FE14((uint64_t)&v191, (uint64_t)&v192);
      swift_bridgeObjectRelease(v133);
      sub_67F8(&dword_0, v127, (os_log_type_t)v53, "%s", v129);
      uint64_t v68 = v183;
      sub_67DC((uint64_t)v35);
      sub_3CA0((uint64_t)v35);
      sub_3CA0((uint64_t)v129);

      uint64_t v134 = v164;
      uint64_t v135 = v169;
    }

    else
    {

      uint64_t v134 = v126;
      uint64_t v135 = v35;
    }

    v66((uint8_t *)v134, v135);
    uint64_t v154 = v186;
    uint64_t v148 = *(void (**)(uint64_t, os_log_s *))(v185 + 8);
    uint64_t v149 = v68;
    goto LABEL_53;
  }

  sub_1FCC0();
  uint64_t v95 = v68;
  uint64_t v96 = v158;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 32))(v165, v95, v158);
  sub_3CC8(v73, (uint64_t)&v191);
  uint64_t v97 = v157;
  sub_18254(v157);
  sub_13124();
  os_log_type_t v98 = sub_EEB4();
  if (sub_EDE4(v98))
  {
    uint64_t v99 = (_WORD *)sub_8D14();
    sub_182E4(v99);
    sub_EDA8(&dword_0, v69, v70, "#EmergencyDirectCallFlow onInput .uso", v53);
    sub_3CA0((uint64_t)v53);
  }

  uint64_t v186 = (os_log_s *)v66;
  uint64_t v100 = v66((uint8_t *)v97, v35);
  uint64_t v101 = v161;
  uint64_t v102 = v165;
  USOParse.userParse.getter(v100);
  *((void *)&v188 + 1) = &type metadata for EmergencyFeatureFlagsKey;
  unint64_t v189 = sub_EA88();
  LOBYTE(v18_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 2;
  uint64_t v103 = isFeatureEnabled(_:)(&v187);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(&v187);
  uint64_t v104 = v159;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v101, v103 & 1);
  uint64_t v83 = (uint64_t (*)(uint64_t))&type metadata accessor for EmergencyDialogAct;
  sub_1FD44(v104, (uint64_t)&v190);
  sub_22B3C(v103);
  uint64_t v85 = v105;
  sub_EAF0(v104, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v102, v96);
LABEL_18:
  unsigned int v106 = v85 >> 8;
  if (v85 == 4 && BYTE1(v85) == 35)
  {
    sub_3CC8(v73, (uint64_t)&v195);
    uint64_t v107 = v170;
    sub_18254(v170);
    sub_13124();
    os_log_type_t v108 = sub_EEB4();
    if (sub_EDE4(v108))
    {
      uint64_t v109 = (_WORD *)sub_8D14();
      sub_182E4(v109);
      sub_EDA8( &dword_0,  v85,  (os_log_type_t)v83,  "#EmergencyDirectCallFlow Produced an empty intent. Ignoring input.",  (uint8_t *)(v85 >> 8));
      sub_3CA0(v85 >> 8);
    }

    uint64_t v110 = v107;
    goto LABEL_35;
  }

  if ((v85 & 0x10000) != 0)
  {
LABEL_48:
    uint64_t v152 = v168;
    uint64_t result = 1LL;
    *(_BYTE *)(v168 + 218) = 1;
    *(_WORD *)(v152 + sub_60A4(v0 + 256, v0 + 216) = v85 | (unsigned __int16)((_WORD)v106 << 8);
    return result;
  }

  sub_3CC8(v73, (uint64_t)&v195);
  uint64_t v111 = sub_1FD0C();
  uint64_t v112 = (void *)Logger.logObject.getter(v111);
  os_log_type_t v113 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled((os_log_t)v112, v113))
  {

    uint64_t v110 = (uint64_t)v83;
LABEL_35:
    uint64_t v119 = v35;
    goto LABEL_36;
  }

  uint64_t v114 = v35;
  uint64_t v115 = (uint8_t *)sub_3CD4(12LL);
  uint64_t v116 = sub_3CD4(32LL);
  *(_DWORD *)uint64_t v115 = 136315138;
  uint64_t v194 = v116;
  LOBYTE(v193) = (_BYTE)v85;
  *(_WORD *)((char *)&v193 + 1) = BYTE1(v85);
  uint64_t v117 = String.init<A>(describing:)(&v193);
  uint64_t v193 = sub_543A4(v117, v118, &v194);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v193, &v194, v115 + 4, v115 + 12);
  sub_1FD7C();
  sub_67F8( &dword_0,  (os_log_s *)v112,  v113,  "#EmergencyDirectCallFlow Not a DirectCall intent. Aborting flow. Intent: [%s]",  v115);
  sub_67DC(v116);
  sub_3CA0(v116);
  sub_3CA0((uint64_t)v115);

  uint64_t v110 = (uint64_t)v83;
  uint64_t v119 = v114;
LABEL_36:
  ((void (*)(uint64_t, uint8_t *))v186)(v110, v119);
  return 0LL;
}

        char v120 = Parse.DirectInvocation.identifier.getter(v79);
        if (v120 == 0xD000000000000035LL && v121 == 0x800000000005B1B0LL)
        {
          swift_bridgeObjectRelease(0x800000000005B1B0LL);
        }

        else
        {
          _stringCompareWithSmolCheck(_:_:expecting:)(v120, v121, 0xD000000000000035LL, 0x800000000005B1B0LL, 0LL);
          sub_12FF0();
          if ((v59 & 1) == 0)
          {
LABEL_44:
            sub_3CC8(v60, (uint64_t)&v165);
            uint64_t v123 = sub_1FD0C();
            uint64_t v124 = (os_log_s *)Logger.logObject.getter(v123);
            uint64_t v125 = static os_log_type_t.error.getter();
            if (sub_12FD8(v125))
            {
              uint64_t v126 = (uint8_t *)sub_3CD4(12LL);
              sub_3CD4(32LL);
              sub_1FDD4();
              uint64_t v169 = v127;
              *(_DWORD *)uint64_t v126 = 136315138;
              LOBYTE(v17_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
              os_log_type_t v128 = String.init<A>(describing:)(&v172);
              uint64_t v130 = v129;
              uint64_t v172 = sub_543A4(v128, v129, &v169);
              sub_1FE14((uint64_t)&v172, (uint64_t)&v173);
              swift_bridgeObjectRelease(v130);
              sub_67F8(&dword_0, v124, (os_log_type_t)0x35u, "%s", v126);
              sub_67DC((uint64_t)v28);
              sub_3CA0((uint64_t)v28);
              sub_3CA0((uint64_t)v126);

              v53(v59, v148);
              uint64_t v131 = *(void (**)(uint64_t, os_log_s *))(v150 + 8);
              unint64_t v132 = v162;
            }

            else
            {

              sub_2349C(v59);
              unint64_t v132 = sub_1FE00();
            }

            uint64_t v136 = (os_log_s *)v151;
LABEL_53:
            v131(v132, v136);
            goto LABEL_54;
          }
        }

        uint64_t v122 = sub_28990(v59);
        if (v122 != 35)
        {
          LOWORD(v91) = v122;
          LOBYTE(v71) = 4;
          goto LABEL_47;
        }

        goto LABEL_44;
      }
    }

    else
    {
      uint64_t v165 = 0u;
      uint64_t v166 = 0u;
    }

    sub_E988((uint64_t)&v165, (uint64_t *)&unk_7A610);
    goto LABEL_39;
  }

  if (v58 != enum case for Parse.uso(_:))
  {
    sub_3CC8(v160, (uint64_t)&v165);
    uint64_t v110 = v143;
    sub_18254(v143);
    uint64_t v111 = (os_log_s *)sub_13124();
    uint64_t v112 = static os_log_type_t.error.getter();
    if (sub_12FD8(v112))
    {
      os_log_type_t v113 = (uint8_t *)sub_3CD4(12LL);
      sub_3CD4(32LL);
      sub_1FDD4();
      uint64_t v173 = v114;
      *(_DWORD *)os_log_type_t v113 = 136315138;
      LOBYTE(v169) = 0;
      uint64_t v115 = String.init<A>(describing:)(&v169);
      uint64_t v117 = v116;
      uint64_t v169 = sub_543A4(v115, v116, &v173);
      sub_1FE14((uint64_t)&v169, (uint64_t)&v170);
      swift_bridgeObjectRelease(v117);
      sub_67F8(&dword_0, v111, (os_log_type_t)v39, "%s", v113);
      uint64_t v55 = v161;
      sub_67DC((uint64_t)v28);
      sub_3CA0((uint64_t)v28);
      sub_3CA0((uint64_t)v113);

      unint64_t v118 = v143;
      uint64_t v119 = v148;
    }

    else
    {

      unint64_t v118 = v110;
      uint64_t v119 = v28;
    }

    v53(v118, v119);
    uint64_t v136 = v164;
    uint64_t v131 = *(void (**)(uint64_t, os_log_s *))(v163 + 8);
    unint64_t v132 = v55;
    goto LABEL_53;
  }

  sub_1FCC0();
  uint64_t v80 = v55;
  uint64_t v81 = v140;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32))(v144, v80, v140);
  sub_3CC8(v60, (uint64_t)&v169);
  uint64_t v82 = v139;
  sub_18254(v139);
  sub_13124();
  uint64_t v83 = sub_EEB4();
  if (sub_EDE4(v83))
  {
    uint64_t v84 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v84);
    sub_23248(&dword_0, v56, v57, "EmergencyDirectCallRFFlow onInput .uso");
    sub_3CA0((uint64_t)v39);
  }

  uint64_t v85 = sub_23490(v82);
  os_log_type_t v86 = v142;
  uint64_t v87 = v144;
  USOParse.userParse.getter(v85);
  *((void *)&v166 + 1) = &type metadata for EmergencyFeatureFlagsKey;
  uint64_t v167 = sub_EA88();
  LOBYTE(v165) = 2;
  os_log_type_t v88 = isFeatureEnabled(_:)(&v165);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(&v165);
  uint64_t v89 = v141;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v86, v88 & 1);
  uint64_t v69 = (uint64_t (*)(uint64_t))&type metadata accessor for EmergencyDialogAct;
  sub_233A8(v89, (uint64_t)v168);
  sub_22B3C(v88);
  int v71 = v90;
  sub_EAF0(v89, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v87, v81);
LABEL_18:
  uint64_t v91 = v71 >> 8;
  if (v71 == 4 && BYTE1(v71) == 35)
  {
    sub_3CC8(v60, (uint64_t)&v173);
    uint64_t v92 = v149;
    sub_18254(v149);
    sub_13124();
    uint64_t v93 = sub_EEB4();
    if (sub_EDE4(v93))
    {
      uint64_t v94 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v94);
      sub_23248( &dword_0,  v71,  (os_log_type_t)v69,  "#EmergencyDirectCallRFFlow Produced an empty intent. Ignoring input.");
      sub_3CA0(v71 >> 8);
    }

    uint64_t v95 = v92;
    goto LABEL_35;
  }

  if ((v71 & 0x10000) != 0)
  {
LABEL_48:
    uint64_t v135 = v147;
    *(_BYTE *)(v147 + 218) = 1;
    *(_WORD *)(v135 + sub_60A4(v0 + 256, v0 + 216) = v71 | (unsigned __int16)((_WORD)v91 << 8);
    goto LABEL_54;
  }

  sub_3CC8(v60, (uint64_t)&v173);
  uint64_t v96 = sub_1FD0C();
  uint64_t v97 = (void *)Logger.logObject.getter(v96);
  os_log_type_t v98 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled((os_log_t)v97, v98))
  {

    uint64_t v95 = (uint64_t)v69;
LABEL_35:
    uint64_t v104 = v28;
    goto LABEL_36;
  }

  uint64_t v99 = v28;
  uint64_t v100 = (uint8_t *)sub_3CD4(12LL);
  uint64_t v101 = sub_3CD4(32LL);
  *(_DWORD *)uint64_t v100 = 136315138;
  uint64_t v172 = v101;
  LOBYTE(v171) = (_BYTE)v71;
  *(_WORD *)((char *)&v171 + 1) = BYTE1(v71);
  uint64_t v102 = String.init<A>(describing:)(&v171);
  uint64_t v171 = sub_543A4(v102, v103, &v172);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, &v172, v100 + 4, v100 + 12);
  sub_1FD7C();
  sub_67F8( &dword_0,  (os_log_s *)v97,  v98,  "#EmergencyDirectCallRFFlow Not a DirectCall intent. Aborting flow. Intent: [%s]",  v100);
  sub_67DC(v101);
  sub_3CA0(v101);
  sub_3CA0((uint64_t)v100);

  uint64_t v95 = (uint64_t)v69;
  uint64_t v104 = v99;
LABEL_36:
  ((void (*)(uint64_t, uint8_t *))v164)(v95, v104);
LABEL_54:
  sub_7DF0();
}

  __break(1u);
  return result;
}

uint64_t sub_1DD08(uint64_t a1)
{
  v2[130] = v1;
  v2[129] = a1;
  uint64_t v3 = sub_6820();
  v2[131] = v3;
  v2[132] = *(void *)(v3 - 8);
  v2[133] = sub_45A0();
  v2[134] = sub_45A0();
  v2[135] = sub_45A0();
  return sub_451C();
}

uint64_t sub_1DD70(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + 984);
  uint64_t v3 = *(void *)(v1 + 1080);
  uint64_t v4 = *(void *)(v1 + 1056);
  uint64_t v5 = *(uint8_t **)(v1 + 1048);
  uint64_t v6 = Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 1088) = v6;
  sub_3CC8(v6, v1 + 984);
  *(void *)(v1 + 1096) = *(void *)(v4 + 16);
  sub_1FE20(v3);
  sub_1FD2C();
  os_log_type_t v7 = sub_67D4();
  if (sub_182AC(v7))
  {
    uint64_t v8 = (_WORD *)sub_8D14();
    sub_1FE64(v8);
    sub_EDA8(&dword_0, (os_log_s *)(v1 + 984), (os_log_type_t)v3, "#EmergencyDirectCallFlow execute", v5);
    sub_3CA0((uint64_t)v5);
  }

  uint64_t v9 = *(void *)(v1 + 1056);
  uint64_t v10 = *(void *)(v1 + 1040);

  uint64_t v11 = *(uint64_t (**)(uint64_t))(v9 + 8);
  *(void *)(v1 + 1104) = v11;
  uint64_t v12 = sub_1FE2C();
  uint64_t v13 = v11(v12);
  int v14 = *(unsigned __int8 *)(v10 + 218);
  if (v14 == 2)
  {
    uint64_t v15 = *(void *)(v1 + 1040);
    uint64_t v2 = *(void **)(v1 + 1032);
    unint64_t v16 = sub_E94C();
    uint64_t v6 = swift_allocError(&type metadata for EmergencyFlowError, v16, 0LL, 0LL);
    _BYTE *v17 = 2;
    sub_30F8(v6, v15 + 16, (void *)(v15 + 56), (uint64_t)v2);
    swift_errorRelease(v6);
  }

  else if (v14 == 3)
  {
    static ExecuteResponse.complete()(v13);
  }

  else
  {
    __int16 v18 = *(_WORD *)(v10 + 216);
    if (HIBYTE(v18) != 35 || v18 != 4)
    {
      sub_9010();
      if (*(void *)(v1 + 904))
      {
        uint64_t v19 = *(void *)(v1 + 1040);
        sub_65A4((__int128 *)(v1 + 880), v1 + 920);
        uint64_t v20 = (void *)swift_task_alloc(dword_7964C);
        *(void *)(v1 + 111_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v20;
        *uint64_t v20 = v1;
        v20[1] = sub_1E058;
        return sub_145A8(v1 + 528, v19 + 136, SHIBYTE(v18), v18);
      }

      sub_E988(v1 + 880, &qword_79818);
    }

    uint64_t v22 = *(void *)(v1 + 1064);
    uint64_t v23 = *(uint8_t **)(v1 + 1048);
    sub_3CC8(v6, v1 + 960);
    uint64_t v24 = sub_1FE20(v22);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (_WORD *)sub_8D14();
      sub_1FE64(v27);
      sub_EDA8(&dword_0, v25, v26, "#EmergencyDirectCallFlow Intent missing a situation or valid organization", v23);
      sub_3CA0((uint64_t)v23);
    }

    uint64_t v6 = *(void *)(v1 + 1064);
    uint64_t v28 = *(void *)(v1 + 1048);
    uint64_t v29 = *(void *)(v1 + 1040);

    ((void (*)(uint64_t, uint64_t))v11)(v6, v28);
    uint64_t v30 = sub_3324((void *)(v29 + 56), *(void *)(v29 + 80));
    memcpy((void *)(v1 + 656), v30, 0x70uLL);
    uint64_t v2 = (void *)sub_37CC(v29 + 16, (void *)(v1 + 656));
    static ExecuteResponse.complete(next:)(v2);
    sub_EE0C();
  }

  sub_1FDC4();
  swift_task_dealloc(v2);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1E058()
{
  return sub_451C();
}

uint64_t sub_1E0A4()
{
  uint64_t v1 = sub_1FE2C();
  sub_180F4(v1, v2, v3);
  if (sub_E438(v0 + 16) != 1)
  {
    sub_EE84((void *)(v0 + 400), (const void *)(v0 + 16));
    uint64_t v6 = sub_EE84(v27, (const void *)(v0 + 16));
    uint64_t v7 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v6);
    if ((v7 & 1) != 0)
    {
      sub_1FCB0();
      sub_1E474();
    }

    else if ((EmergencyOrganizationInfo.hasNameAndWebsite.getter(v7) & 1) != 0)
    {
      sub_1FCB0();
      sub_1EBE4();
    }

    else
    {
      unint64_t v9 = *(void *)(v0 + 504);
      if ((v9 & 0x2000000000000000LL) != 0) {
        uint64_t v10 = HIBYTE(v9) & 0xF;
      }
      else {
        uint64_t v10 = *(void *)(v0 + 496) & 0xFFFFFFFFFFFFLL;
      }
      if (!v10)
      {
        uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1096);
        uint64_t v13 = *(void *)(v0 + 1088);
        uint64_t v14 = *(void *)(v0 + 1072);
        uint64_t v15 = *(void *)(v0 + 1048);
        sub_E864((uint64_t *)(v0 + 528));
        sub_3CC8(v13, v0 + 1008);
        uint64_t v16 = v12(v14, v13, v15);
        uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
        os_log_type_t v18 = static os_log_type_t.error.getter();
        if (sub_182AC(v18))
        {
          uint64_t v19 = (uint8_t *)sub_8D14();
          *(_WORD *)uint64_t v19 = 0;
          sub_EDA8(&dword_0, v17, (os_log_type_t)(v0 + 16), "#EmergencyDirectCallFlow OrgInfo had no usable info", v19);
          sub_3CA0((uint64_t)v19);
        }

        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
        uint64_t v21 = *(void *)(v0 + 1072);
        uint64_t v22 = *(void *)(v0 + 1048);
        uint64_t v23 = *(void *)(v0 + 1040);

        v20(v21, v22);
        uint64_t v24 = sub_3324((void *)(v23 + 56), *(void *)(v23 + 80));
        memcpy((void *)(v0 + 768), v24, 0x70uLL);
        uint64_t v25 = sub_1FE2C();
        uint64_t v5 = sub_37CC(v25, v26);
        goto LABEL_13;
      }

      sub_1FCB0();
      sub_EE84((void *)(v0 + 272), v27);
      nullsub_1(v0 + 272);
      sub_180F4(v0 + 272, v0 + 144, &qword_79098);
      sub_1F464();
    }

    uint64_t v5 = v8;
    sub_E864((uint64_t *)(v0 + 528));
LABEL_13:
    uint64_t v4 = v5;
    goto LABEL_14;
  }

  sub_1FE94((void *)(*(void *)(v0 + 1040) + 176LL), *(void *)(*(void *)(v0 + 1040) + 200LL));
  sub_1F464();
  uint64_t v5 = v4;
LABEL_14:
  static ExecuteResponse.complete(next:)(v4);
  sub_EE0C();
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 920));
  sub_1FDC4();
  swift_task_dealloc(v5);
  swift_task_dealloc(v0 + 920);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1E318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDirectCallFlow();
  sub_EB44( &qword_79E80,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyDirectCallFlow,  (uint64_t)&unk_58270);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t type metadata accessor for EmergencyDirectCallFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin23EmergencyDirectCallFlow);
}

ValueMetadata *type metadata accessor for EmergencyDirectCallFlow.EmergencyDirectCallFlowState()
{
  return &type metadata for EmergencyDirectCallFlow.EmergencyDirectCallFlowState;
}

uint64_t sub_1E3B8()
{
  return sub_1CFC8() & 1;
}

uint64_t sub_1E3DC(uint64_t a1, uint64_t a2)
{
  return sub_1E318(a1, a2);
}

uint64_t sub_1E3FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_79D9C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_5F44;
  return sub_1DD08(a1);
}

uint64_t sub_1E450(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyDirectCallFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

void sub_1E474()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_EE84(v111, v2);
  uint64_t v91 = sub_1FE8C();
  sub_6764();
  __chkstk_darwin(v4);
  sub_6750();
  uint64_t v92 = v5;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v6);
  sub_6750();
  uint64_t v96 = v7;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v8);
  sub_66F4();
  uint64_t v90 = v9;
  sub_67EC();
  __chkstk_darwin(v10);
  sub_1300C();
  uint64_t v97 = v11;
  uint64_t v93 = sub_1FD00();
  sub_6764();
  __chkstk_darwin(v12);
  sub_66F4();
  uint64_t v94 = v13;
  sub_67EC();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v87 - v15;
  uint64_t v17 = sub_6820();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_66F4();
  uint64_t v89 = (os_log_s *)v19;
  sub_67EC();
  __chkstk_darwin(v20);
  sub_EE64();
  uint64_t v88 = v21;
  sub_67EC();
  __chkstk_darwin(v22);
  uint64_t v24 = (os_log_s *)((char *)&v87 - v23);
  uint64_t v25 = sub_4508();
  uint64_t v100 = *(void *)(v25 - 8);
  uint64_t v101 = v25;
  sub_EDD8();
  __chkstk_darwin(v26);
  sub_6740();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = v3[6];
  uint64_t v31 = v3[7];
  swift_bridgeObjectRetain(v31);
  uint64_t v99 = v29;
  sub_44E8(v30, v31);
  uint64_t v32 = type metadata accessor for DialogPhoneNumber.Builder(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  DialogPhoneNumber.Builder.init()();
  uint64_t v33 = v3[8];
  uint64_t v34 = v3[9];
  uint64_t v95 = v3;
  uint64_t v35 = dispatch thunk of DialogPhoneNumber.Builder.withValue(print:speak:)(v33, v34, 0LL, 0LL);
  uint64_t v36 = sub_EE0C();
  uint64_t v98 = dispatch thunk of DialogPhoneNumber.Builder.build()(v36);
  swift_release(v35);
  sub_3324(v1, v1[3]);
  sub_1FDA4();
  uint64_t v37 = v106;
  uint64_t v38 = v107;
  sub_1FE94(v105, v106);
  LOBYTE(v30) = dispatch thunk of DeviceState.isHomePod.getter(v37, v38);
  uint64_t v39 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v105);
  if ((v30 & 1) != 0)
  {
    uint64_t v40 = Logger.emergency.unsafeMutableAddressor(v39);
    sub_3CC8(v40, (uint64_t)&v104);
    uint64_t v41 = sub_1FCD0((uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    Logger.logObject.getter(v41);
    os_log_type_t v42 = sub_67D4();
    if (sub_182AC(v42))
    {
      uint64_t v43 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v43 = 0;
      sub_EDA8( &dword_0,  v24,  (os_log_type_t)v3,  "#EmergencyDirectCallFlow Request made on HomePod. Confirm before calling.",  v43);
      sub_3CA0((uint64_t)v43);
    }

    sub_1FE70((uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    sub_1FCF4();
    sub_1FD5C(v44, (uint64_t)v108);
    sub_EE84(v109, v111);
    sub_180EC((uint64_t)v109);
    sub_1FE58();
    uint64_t v45 = v95;
    sub_6408(v95);
    sub_E9F8();
    uint64_t v46 = Flow.eraseToAnyFlow()(&type metadata for CallFlow);
    uint64_t v47 = sub_EA34((uint64_t)v105);
    sub_1FD64(v47, v1[8]);
    uint64_t v48 = v96;
    uint64_t v49 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v96, v99, v101);
    sub_1FE38();
    sub_3F18(v50, v51, v52, v49);
    sub_EEA4();
    uint64_t v53 = v97;
    sub_237B0(v48);
    sub_EE0C();
    sub_E988(v48, &qword_78970);
    sub_1FD64(v54, v1[8]);
    uint64_t v55 = (int *)v93;
    sub_EEA4();
    sub_2396C();
    sub_EE0C();
    sub_180F4(v53, (uint64_t)v16, &qword_78958);
    *(void *)&v16[v55[6]] = v46;
    *(void *)&v16[v55[7]] = 2LL;
    v16[v55[8]] = 0;
    v16[v55[9]] = 1;
    sub_60A4((uint64_t)v1, (uint64_t)v110);
    sub_1FD5C(v56, (uint64_t)v103);
    sub_60E4((uint64_t)(v1 + 10), (uint64_t)v102);
    sub_1FDF0((uint64_t)v103);
    sub_1FC98();
    __chkstk_darwin(v57);
    sub_1FC68(v58, v59, v87);
    sub_1FCDC((uint64_t)v16);
    sub_1FCE8(v105);
    sub_6408(v45);
    swift_retain(v46);
    uint64_t v61 = sub_182FC(v45, v60, v110, v105, (uint64_t)v102);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v103);
    *(void *)&v110[0] = v61;
    sub_1FE84();
    sub_EF34( &qword_78B38,  v62,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
    sub_1FE50();
    sub_1FD20();
    swift_release(v98);
    swift_release(v46);
    sub_1FD54((uint64_t)v16);
LABEL_9:
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
    goto LABEL_13;
  }

  sub_3324(v1, v1[3]);
  sub_1FDA4();
  uint64_t v63 = sub_4808C(v110);
  uint64_t v64 = Logger.emergency.unsafeMutableAddressor(v63);
  uint64_t v65 = (os_log_s *)v64;
  if ((v63 & 1) != 0)
  {
    sub_3CC8(v64, (uint64_t)v103);
    unint64_t v66 = v89;
    uint64_t v67 = sub_1FCD0((uint64_t)v89, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    Logger.logObject.getter(v67);
    os_log_type_t v68 = sub_67D4();
    if (sub_182AC(v68))
    {
      uint64_t v69 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v69 = 0;
      sub_EDA8( &dword_0,  v66,  (os_log_type_t)v3,  "#EmergencyDirectCallFlow Resource is available. Making the call.",  v69);
      sub_3CA0((uint64_t)v69);
    }

    sub_1FE70((uint64_t)v66, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    sub_1FCF4();
    sub_60A4((uint64_t)(v1 + 5), (uint64_t)v108);
    sub_EE84(v109, v111);
    sub_180EC((uint64_t)v109);
    sub_1FE58();
    sub_6408(v95);
    sub_E9F8();
    Flow.eraseToAnyFlow()(&type metadata for CallFlow);
    swift_release(v98);
    sub_EA34((uint64_t)v105);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v110);
    goto LABEL_9;
  }

  sub_3CC8(v64, (uint64_t)v109);
  uint64_t v70 = v88;
  sub_1FCD0(v88, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  sub_1FD2C();
  os_log_type_t v71 = sub_67D4();
  if (os_log_type_enabled(v65, v71))
  {
    uint64_t v72 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v72 = 0;
    sub_EDA8( &dword_0,  v65,  v71,  "#EmergencyDirectCallFlow Request made on device that doesn't support calling. Give supportive dialog.",  v72);
    sub_3CA0((uint64_t)v72);
  }

  sub_1FE70(v70, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_3324(v1 + 5, v1[8]);
  uint64_t v74 = v99;
  uint64_t v73 = v100;
  uint64_t v75 = v96;
  uint64_t v76 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(v96, v99, v101);
  sub_1FE38();
  sub_3F18(v77, v78, v79, v76);
  sub_EEA4();
  uint64_t v80 = v98;
  swift_retain(v98);
  char v81 = sub_4808C(v110);
  uint64_t v82 = v97;
  sub_235F8(v75, v80, v81 & 1);
  sub_EE0C();
  swift_release(v80);
  sub_E988(v75, &qword_78970);
  sub_3B20(v82, v90);
  sub_1FCF4();
  uint64_t v83 = v92;
  sub_1FE78(v84, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v105);
  sub_182A0(&qword_78960, v85, v86, (uint64_t)&protocol conformance descriptor for OutputFlow);
  Flow.eraseToAnyFlow()(v91);
  swift_release(v80);
  sub_EAF0(v83, (uint64_t (*)(void))&type metadata accessor for OutputFlow);
  sub_E988(v82, &qword_78958);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v110);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v76);
LABEL_13:
  sub_7DF0();
}

void sub_1EBE4()
{
  uint64_t v106 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_EE84(v115, v3);
  uint64_t v101 = sub_1FE8C();
  sub_6764();
  __chkstk_darwin(v5);
  sub_6750();
  uint64_t v100 = v6;
  uint64_t v92 = sub_1FD00();
  sub_6764();
  __chkstk_darwin(v7);
  sub_66F4();
  uint64_t v93 = v8;
  sub_67EC();
  __chkstk_darwin(v9);
  sub_1300C();
  uint64_t v94 = v10;
  uint64_t v11 = sub_1FC8C();
  uint64_t v91 = type metadata accessor for AppPunchOutFlow(v11);
  sub_6764();
  __chkstk_darwin(v12);
  sub_6750();
  uint64_t v90 = v13;
  uint64_t v14 = sub_6820();
  uint64_t v104 = *(void *)(v14 - 8);
  uint64_t v105 = v14;
  sub_EDD8();
  __chkstk_darwin(v15);
  sub_1FD94();
  uint64_t v18 = (uint8_t *)(v16 - v17);
  __chkstk_darwin(v19);
  sub_1300C();
  uint64_t v96 = (uint8_t *)v20;
  sub_3974((uint64_t *)&unk_7AE80);
  sub_6764();
  __chkstk_darwin(v21);
  uint64_t v95 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_1FC8C();
  uint64_t v97 = type metadata accessor for URL(v23);
  uint64_t v103 = *(void *)(v97 - 8);
  sub_EDD8();
  __chkstk_darwin(v24);
  sub_66F4();
  uint64_t v89 = v25;
  sub_67EC();
  __chkstk_darwin(v26);
  sub_1300C();
  uint64_t v102 = v27;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v28);
  sub_6740();
  uint64_t v31 = v30 - v29;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v32);
  sub_66F4();
  uint64_t v98 = v33;
  sub_67EC();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v88 - v35;
  uint64_t v37 = sub_4508();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  sub_6740();
  uint64_t v41 = v40 - v39;
  uint64_t v99 = v4;
  uint64_t v42 = v4[6];
  uint64_t v43 = v4[7];
  swift_bridgeObjectRetain(v43);
  sub_44E8(v42, v43);
  uint64_t v44 = v2[3];
  uint64_t v45 = v2[4];
  sub_1FE94(v2, v44);
  uint64_t v107 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v31, v41, v37);
  sub_1FE38();
  uint64_t v108 = v37;
  uint64_t v46 = v37;
  uint64_t v47 = (uint64_t)v36;
  sub_3F18(v48, v49, v50, v46);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32);
  uint64_t v52 = v45;
  uint64_t v53 = v104;
  v51(v31, v44, v52);
  uint64_t v54 = v105;
  uint64_t v55 = v106;
  sub_E988(v31, &qword_78970);
  sub_EE84(v116, v115);
  nullsub_1(v116);
  sub_180F4((uint64_t)v116, (uint64_t)v114, &qword_79098);
  uint64_t v56 = sub_1F278((uint64_t)v114);
  if ((v56 & 1) == 0) {
    goto LABEL_4;
  }
  LOBYTE(v44) = (_BYTE)v18;
  uint64_t v57 = v54;
  uint64_t v58 = (uint64_t)v95;
  EmergencyOrganizationInfo.websiteURL.getter(v56);
  if (sub_5FE0(v58, 1LL, v97) == 1)
  {
    sub_E988(v58, (uint64_t *)&unk_7AE80);
    uint64_t v54 = v57;
LABEL_4:
    uint64_t v59 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v56);
    sub_3CC8((uint64_t)v59, (uint64_t)v111);
    (*(void (**)(uint8_t *, os_log_s *, uint64_t))(v53 + 16))(v18, v59, v54);
    sub_13124();
    os_log_type_t v60 = sub_67D4();
    if (sub_182AC(v60))
    {
      uint64_t v61 = (_WORD *)sub_8D14();
      sub_1FE64(v61);
      sub_EDA8( &dword_0,  v59,  (os_log_type_t)v44,  "#EmergencyDirectCallFlow Only website available. Returning orgRequestOnlyWebsite.",  v18);
      sub_3CA0((uint64_t)v18);
    }

    uint64_t v62 = sub_1FE44();
    v63(v62);
    sub_3B20(v47, v98);
    sub_60A4((uint64_t)v55, (uint64_t)v113);
    sub_1FE78(v64, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v113);
    sub_182A0(&qword_78960, v65, v66, (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v101);
    sub_1FDB4();
    goto LABEL_10;
  }

  uint64_t v67 = sub_EEAC(v102, v58, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 32));
  os_log_type_t v68 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v67);
  sub_3CC8((uint64_t)v68, (uint64_t)&v112);
  uint64_t v69 = v96;
  sub_182F0((uint64_t)v96, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
  sub_1FD2C();
  os_log_type_t v70 = sub_67D4();
  if (sub_1FD34(v70))
  {
    os_log_type_t v71 = (_WORD *)sub_8D14();
    sub_182E4(v71);
    sub_EDA8( &dword_0,  v68,  (os_log_type_t)v58,  "#EmergencyDirectCallFlow Only website available for VOX request. Offer to open the org's website.",  v69);
    sub_3CA0((uint64_t)v69);
  }

  (*(void (**)(uint8_t *, uint64_t))(v53 + 8))(v96, v57);
  uint64_t v72 = v55[3];
  uint64_t v73 = v55[4];
  sub_3324(v55, v72);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v73 + 16))(v113, v72, v73);
  uint64_t v74 = v89;
  sub_EEAC(v89, v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 16));
  uint64_t v75 = v90;
  AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v113, v74, 0LL, 0LL);
  sub_EB44( &qword_79828,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
  uint64_t v76 = Flow.eraseToAnyFlow()(v91);
  sub_1FD54(v75);
  sub_1FD64(v77, v55[8]);
  uint64_t v78 = (int *)v92;
  uint64_t v79 = v94;
  sub_EEA4();
  sub_2398C();
  sub_EE0C();
  sub_3B20(v47, v79);
  *(void *)(v79 + v78[6]) = v76;
  *(void *)(v79 + v78[7]) = 3LL;
  *(_BYTE *)(v79 + v78[8]) = 2;
  *(_BYTE *)(v79 + v78[9]) = 1;
  sub_60A4((uint64_t)v55, (uint64_t)v111);
  sub_1FD5C(v80, (uint64_t)v110);
  sub_60E4((uint64_t)(v55 + 10), (uint64_t)v109);
  sub_1FDF0((uint64_t)v110);
  sub_1FC98();
  __chkstk_darwin(v81);
  sub_1FC68(v82, v83, v88);
  sub_1FCDC(v79);
  sub_1FCE8(v113);
  swift_retain(v76);
  uint64_t v84 = v99;
  sub_6408(v99);
  uint64_t v86 = sub_182FC(v84, v85, v111, v113, (uint64_t)v109);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v110);
  *(void *)&v111[0] = v86;
  sub_1FE84();
  sub_EF34( &qword_78B38,  v87,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
  sub_1FE50();
  sub_1FD20();
  swift_release(v76);
  sub_1FD54(v79);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v97);
LABEL_10:
  sub_E988(v47, &qword_78958);
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v41, v108);
  sub_7DF0();
}

uint64_t sub_1F278(uint64_t a1)
{
  uint64_t v2 = memcpy(__dst, __src, sizeof(__dst));
  if ((EmergencyOrganizationInfo.hasNameAndWebsite.getter(v2) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_3324(v1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v24, v3, v4);
  uint64_t v5 = v25;
  uint64_t v6 = v26;
  sub_3324(v24, v25);
  LOBYTE(v5) = dispatch thunk of DeviceState.isHomePod.getter(v5, v6);
  sub_60A4((uint64_t)v24, (uint64_t)v22);
  if ((v5 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
    sub_60A4((uint64_t)v24, (uint64_t)v19);
LABEL_6:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v19);
    sub_60A4((uint64_t)v24, (uint64_t)v16);
    goto LABEL_7;
  }

  uint64_t v7 = v23;
  sub_3324(v22, v23);
  LOBYTE(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = dispatch thunk of DeviceState.isCarPlay.getter(v7);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
  sub_60A4((uint64_t)v24, (uint64_t)v19);
  if ((v7 & 1) != 0) {
    goto LABEL_6;
  }
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  sub_3324(v19, v20);
  LOBYTE(v10) = dispatch thunk of DeviceState.isWatch.getter(v10, v11);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v19);
  sub_60A4((uint64_t)v24, (uint64_t)v16);
  if ((v10 & 1) == 0)
  {
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    sub_3324(v16, v17);
    LOBYTE(v1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = dispatch thunk of DeviceState.isAppleTV.getter(v12, v13);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v16);
    if ((v12 & 1) == 0)
    {
      uint64_t v14 = v25;
      uint64_t v15 = v26;
      sub_3324(v24, v25);
      char v8 = DeviceState.isVox.getter(v14, v15);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v24);
      return v8 & 1;
    }

    goto LABEL_8;
  }

void sub_1F464()
{
  void (*v71)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  _BYTE v94[40];
  void v95[5];
  uint64_t v96;
  __int128 v97[2];
  _BYTE v98[128];
  void v99[2];
  uint64_t v100[14];
  void v101[16];
  _BYTE v102[128];
  _BYTE v103[96];
  uint64_t v104;
  uint64_t v105;
  _BYTE v106[136];
  sub_9460();
  uint64_t v92 = v1;
  uint64_t v3 = (uint8_t *)v2;
  sub_180F4(v2, (uint64_t)v98, &qword_79098);
  sub_180F4((uint64_t)v98, (uint64_t)v106, &qword_79098);
  uint64_t v91 = sub_1FE8C();
  sub_6764();
  __chkstk_darwin(v4);
  uint64_t v90 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = sub_1FD00();
  sub_6764();
  __chkstk_darwin(v6);
  sub_66F4();
  uint64_t v87 = v7;
  sub_67EC();
  __chkstk_darwin(v8);
  sub_1300C();
  uint64_t v88 = v9;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v10);
  sub_1FD94();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  sub_1300C();
  uint64_t v84 = v15;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v16);
  sub_66F4();
  uint64_t v89 = v17;
  sub_67EC();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v83 - v20;
  __chkstk_darwin(v19);
  sub_1300C();
  uint64_t v86 = v22;
  uint64_t v23 = sub_6820();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_1FD94();
  uint64_t v27 = (os_log_s *)(v25 - v26);
  __chkstk_darwin(v28);
  uint64_t v30 = (os_log_s *)((char *)&v83 - v29);
  uint64_t v93 = v0;
  uint64_t v31 = sub_1FAA4((uint64_t)v3);
  if ((v31 & 1) != 0 && (sub_1FDF8(v31, (uint64_t)v102, &qword_79098), uint64_t v31 = sub_E438((uint64_t)v102), (_DWORD)v31 != 1))
  {
    sub_EE84(v103, v102);
    sub_180F4((uint64_t)v106, (uint64_t)v101, &qword_79098);
    uint64_t v49 = sub_6408(v101);
    uint64_t v50 = Logger.emergency.unsafeMutableAddressor(v49);
    sub_3CC8(v50, (uint64_t)&v96);
    uint64_t v51 = sub_1FDE4((uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
    Logger.logObject.getter(v51);
    os_log_type_t v52 = sub_67D4();
    if (sub_182AC(v52))
    {
      uint64_t v53 = (_WORD *)sub_8D14();
      sub_1FE64(v53);
      sub_EDA8( &dword_0,  v30,  (os_log_type_t)v13,  "#EmergencyDirectCallFlow No resource available for VOX request. Offer to search the web.",  v3);
      sub_3CA0((uint64_t)v3);
    }

    (*(void (**)(os_log_s *, uint64_t))(v24 + 8))(v30, v23);
    uint64_t v54 = v92[3];
    uint64_t v55 = v92[4];
    sub_1FE94(v92, v54);
    uint64_t v56 = v104;
    uint64_t v57 = v105;
    swift_bridgeObjectRetain(v105);
    uint64_t v58 = v84;
    uint64_t v59 = sub_1FE2C();
    sub_44E8(v59, v60);
    sub_4508();
    sub_1FE38();
    sub_3F18(v61, v62, v63, v64);
    uint64_t v65 = v86;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 24))(v58, v54, v55);
    sub_E988(v58, &qword_78970);
    uint64_t v66 = v93;
    uint64_t v67 = *(void *)(v93 + 24);
    uint64_t v68 = *(void *)(v93 + 32);
    uint64_t v69 = (void *)sub_1FE44();
    sub_1FE94(v69, v70);
    os_log_type_t v71 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v68 + 16);
    swift_bridgeObjectRetain(v57);
    v71(v100, v67, v68);
    v99[0] = v56;
    v99[1] = v57;
    sub_18188();
    uint64_t v72 = Flow.eraseToAnyFlow()(&type metadata for WebsearchFlow);
    uint64_t v73 = sub_181C4((uint64_t)v99);
    sub_1FD64(v73, *(void *)(v66 + 64));
    uint64_t v74 = (int *)v85;
    uint64_t v75 = v88;
    sub_EEA4();
    sub_2398C();
    sub_EE0C();
    sub_3B20(v65, v75);
    *(void *)(v75 + v74[6]) = v72;
    *(void *)(v75 + v74[7]) = 4LL;
    *(_BYTE *)(v75 + v74[8]) = 1;
    *(_BYTE *)(v75 + v74[9]) = 1;
    sub_60A4(v66, (uint64_t)v97);
    sub_1FD5C(v76, (uint64_t)v95);
    sub_60E4(v66 + 80, (uint64_t)v94);
    sub_1FDF0((uint64_t)v95);
    sub_1FC98();
    __chkstk_darwin(v77);
    sub_1FC68(v78, v79, v83);
    sub_1FCDC(v75);
    sub_1FCE8(v99);
    swift_retain(v72);
    uint64_t v81 = sub_182FC(v103, v80, v97, v99, (uint64_t)v94);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v95);
    *(void *)&v97[0] = v81;
    sub_1FE84();
    sub_EF34( &qword_78B38,  v82,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
    sub_1FE50();
    sub_1FD20();
    swift_release(v72);
    sub_1FD54(v75);
    uint64_t v48 = v65;
  }

  else
  {
    uint64_t v32 = Logger.emergency.unsafeMutableAddressor(v31);
    sub_3CC8(v32, (uint64_t)v95);
    uint64_t v33 = sub_1FDE4((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
    Logger.logObject.getter(v33);
    os_log_type_t v34 = sub_67D4();
    if (sub_1FD34(v34))
    {
      uint64_t v35 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v35 = 0;
      sub_EDA8( &dword_0,  v27,  (os_log_type_t)v0,  "#EmergencyDirectCallFlow No resource available. Returning orgRequestNoResource.",  v35);
      sub_3CA0((uint64_t)v35);
    }

    (*(void (**)(os_log_s *, uint64_t))(v24 + 8))(v27, v23);
    uint64_t v36 = v92[3];
    uint64_t v37 = v92[4];
    uint64_t v38 = sub_1FE94(v92, v36);
    sub_1FDF8((uint64_t)v38, (uint64_t)v103, &qword_79098);
    if (sub_E438((uint64_t)v103) == 1)
    {
      uint64_t v39 = 1LL;
    }

    else
    {
      String.toSpeakableString.getter(v104, v105);
      uint64_t v39 = 0LL;
    }

    uint64_t v40 = sub_4508();
    sub_3F18(v13, v39, 1LL, v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 24))(v13, v36, v37);
    sub_E988(v13, &qword_78970);
    uint64_t v41 = v89;
    sub_3B20((uint64_t)v21, v89);
    sub_60A4(v93, (uint64_t)v97);
    sub_1FDF8(v42, (uint64_t)v99, &qword_79098);
    int v43 = sub_E438((uint64_t)v99);
    uint64_t v44 = 0LL;
    if (v43 != 1)
    {
      uint64_t v45 = sub_EE84(v101, v99);
      uint64_t v44 = EmergencyOrganizationInfo.asRREntities()(v45);
    }

    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v41, &_swiftEmptyArrayStorage, v97, v44);
    sub_182A0(&qword_78960, v46, v47, (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v91);
    sub_1FDB4();
    uint64_t v48 = (uint64_t)v21;
  }

  sub_E988(v48, &qword_78958);
  sub_7DF0();
}

uint64_t sub_1FAA4(uint64_t a1)
{
  if (!((v26 & 0x2000000000000000LL) != 0 ? HIBYTE(v26) & 0xF : v25 & 0xFFFFFFFFFFFFLL)) {
    return 0LL;
  }
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_3324(v1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v21, v3, v4);
  uint64_t v5 = v22;
  uint64_t v6 = v23;
  sub_3324(v21, v22);
  LOBYTE(v5) = dispatch thunk of DeviceState.isHomePod.getter(v5, v6);
  sub_60A4((uint64_t)v21, (uint64_t)v19);
  if ((v5 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v19);
    sub_60A4((uint64_t)v21, (uint64_t)v16);
LABEL_9:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v16);
    sub_60A4((uint64_t)v21, (uint64_t)v13);
    goto LABEL_10;
  }

  uint64_t v7 = v20;
  sub_3324(v19, v20);
  LOBYTE(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = dispatch thunk of DeviceState.isCarPlay.getter(v7);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v19);
  sub_60A4((uint64_t)v21, (uint64_t)v16);
  if ((v7 & 1) != 0) {
    goto LABEL_9;
  }
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  sub_3324(v16, v17);
  LOBYTE(v9) = dispatch thunk of DeviceState.isWatch.getter(v9, v10);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v16);
  sub_60A4((uint64_t)v21, (uint64_t)v13);
  if ((v9 & 1) == 0)
  {
    uint64_t v11 = v14;
    uint64_t v12 = v15;
    sub_3324(v13, v14);
    LOBYTE(v11) = dispatch thunk of DeviceState.isAppleTV.getter(v11, v12);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v13);
    if ((v11 & 1) == 0)
    {
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v21);
      return 1LL;
    }

    goto LABEL_11;
  }

LABEL_10:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v13);
LABEL_11:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v21);
  return 0LL;
}

  os_log_type_t v34 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v31);
  uint64_t v35 = v34;
  uint64_t v36 = Logger.emergency.unsafeMutableAddressor(v34);
  uint64_t v37 = v36;
  if ((v35 & 1) != 0)
  {
    swift_beginAccess(v36, v59, 0LL, 0LL);
    uint64_t v38 = v53;
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v53, v37, v32);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    uint64_t v41 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v40, v41))
    {
      int v43 = 1LL;
      goto LABEL_22;
    }

    uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl(&dword_0, v40, v41, "Will listen after speaking the call followup.", v42, 2u);
    int v43 = 1LL;
    goto LABEL_19;
  }

  swift_beginAccess(v36, v59, 0LL, 0LL);
  uint64_t v38 = v54;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v54, v37, v32);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v44);
  uint64_t v45 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v40, v45)) {
    goto LABEL_20;
  }
  uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
  *(_WORD *)uint64_t v42 = 0;
  uint64_t v46 = "orgInfo does not have name and number. Not listening after speaking.";
LABEL_18:
  _os_log_impl(&dword_0, v40, v45, v46, v42, 2u);
  int v43 = 0LL;
LABEL_19:
  swift_slowDealloc(v42, -1LL, -1LL);
LABEL_22:

  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v32);
  return v43;
}

  uint64_t v36 = *(void *)(v79 + 104);
  if ((v36 & 0x2000000000000000LL) != 0) {
    uint64_t v37 = HIBYTE(v36) & 0xF;
  }
  else {
    uint64_t v37 = *(void *)(v79 + 96) & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v38 = v78;
  if (!v37)
  {
    os_log_type_t v52 = Logger.emergency.unsafeMutableAddressor(v34);
    swift_beginAccess(v52, v93, 0LL, 0LL);
    uint64_t v46 = v75;
    uint64_t v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v75, v52, v35);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v53);
    uint64_t v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v50 = 0;
      uint64_t v51 = "orgInfo does not have a websearch query. Not listening after speaking.";
      goto LABEL_21;
    }

          uint64_t v16 = sub_3D564();
LABEL_11:
          uint64_t v12 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v16);
          sub_3CC8((uint64_t)v12, (uint64_t)v23);
          sub_23430(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
          sub_1FD2C();
          uint64_t v17 = sub_67D4();
          if (!sub_1FD34(v17)) {
            goto LABEL_14;
          }
          uint64_t v18 = (_WORD *)sub_8D14();
          sub_1FE64(v18);
          sub_EDA8( &dword_0,  v12,  (os_log_type_t)v3,  "No prompt needed for this device. Not prompting for website followup.",  a2);
          goto LABEL_13;
        }
      }

      sub_3D2A4();
      goto LABEL_10;
    }
  }

  uint64_t v12 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v11);
  sub_3CC8((uint64_t)v12, (uint64_t)v23);
  sub_23430(v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_2F65C();
  uint64_t v13 = sub_67D4();
  if (sub_182AC(v13))
  {
    uint64_t v14 = (_WORD *)sub_8D14();
    sub_1FE64(v14);
    sub_EDA8( &dword_0,  v12,  (os_log_type_t)v2,  "orgInfo does not have name and website. Not prompting for website followup.",  a2);
    sub_3D5D8();
LABEL_13:
    sub_3CA0((uint64_t)a2);
    goto LABEL_14;
  }

  sub_3D5D8();
LABEL_14:

  sub_3D270(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_3D2F4();
}

  os_log_type_t v34 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v31);
  uint64_t v35 = v34;
  uint64_t v36 = Logger.emergency.unsafeMutableAddressor(v34);
  uint64_t v37 = v36;
  if ((v35 & 1) != 0)
  {
    swift_beginAccess(v36, v59, 0LL, 0LL);
    uint64_t v38 = v53;
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v53, v37, v32);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    uint64_t v41 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v40, v41))
    {
      int v43 = 1LL;
      goto LABEL_22;
    }

    uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl(&dword_0, v40, v41, "Will listen after speaking the call followup.", v42, 2u);
    int v43 = 1LL;
    goto LABEL_19;
  }

  swift_beginAccess(v36, v59, 0LL, 0LL);
  uint64_t v38 = v54;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v54, v37, v32);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v44);
  uint64_t v45 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v40, v45)) {
    goto LABEL_20;
  }
  uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
  *(_WORD *)uint64_t v42 = 0;
  uint64_t v46 = "orgInfo does not have name and number. Not listening after speaking.";
LABEL_18:
  _os_log_impl(&dword_0, v40, v45, v46, v42, 2u);
  int v43 = 0LL;
LABEL_19:
  swift_slowDealloc(v42, -1LL, -1LL);
LABEL_22:

  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v32);
  return v43;
}

  uint64_t v36 = *(void *)(v79 + 104);
  if ((v36 & 0x2000000000000000LL) != 0) {
    uint64_t v37 = HIBYTE(v36) & 0xF;
  }
  else {
    uint64_t v37 = *(void *)(v79 + 96) & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v38 = v78;
  if (!v37)
  {
    os_log_type_t v52 = Logger.emergency.unsafeMutableAddressor(v34);
    swift_beginAccess(v52, v93, 0LL, 0LL);
    uint64_t v46 = v75;
    uint64_t v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v75, v52, v35);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v53);
    uint64_t v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v50 = 0;
      uint64_t v51 = "orgInfo does not have a websearch query. Not listening after speaking.";
      goto LABEL_21;
    }

    sub_4B19C();
    goto LABEL_11;
  }

  sub_60A4((uint64_t)v8, (uint64_t)v27);
  sub_60A4((uint64_t)v3 + v7[8], (uint64_t)v26);
  sub_60E4((uint64_t)v3 + v7[9], (uint64_t)v25);
  uint64_t v24 = 0LL;
  memset(v23, 0, sizeof(v23));
  sub_6120((uint64_t)v26, v26[3]);
  sub_4F280();
  __chkstk_darwin(v14);
  sub_4F220(v15, v16, v21);
  sub_EE24(v29, v3);
  uint64_t v17 = sub_4DC14(v27, v29, v25, (uint64_t)v23, 1280);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v26);
  v27[0] = v17;
  uint64_t v18 = type metadata accessor for OfflineFlow();
  sub_11D44(&qword_79948, (uint64_t (*)(uint64_t))type metadata accessor for OfflineFlow, (uint64_t)&unk_57E84);
  Flow.eraseToAnyFlow()(v18);
  swift_release(v17);
LABEL_11:
  sub_7DF0();
}

ValueMetadata *type metadata accessor for EmergencyDirectCallFlowFollowupProvider()
{
  return &type metadata for EmergencyDirectCallFlowFollowupProvider;
}

uint64_t sub_1FC68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t sub_1FC8C()
{
  return 0LL;
}

  ;
}

void *sub_1FCB0()
{
  return sub_3324((void *)(*(void *)(v0 + 1040) + 176LL), *(void *)(*(void *)(v0 + 1040) + 200LL));
}

uint64_t sub_1FCC0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

uint64_t sub_1FCD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

void sub_1FCDC(uint64_t a1)
{
}

void *sub_1FCE8(void *a1)
{
  return memcpy(a1, v1, 0x70uLL);
}

void sub_1FCF4()
{
}

uint64_t sub_1FD00()
{
  return type metadata accessor for ConfirmationFlowConfigModel(0LL);
}

uint64_t sub_1FD0C()
{
  return v0();
}

uint64_t sub_1FD20()
{
  return swift_release(v0);
}

uint64_t sub_1FD2C()
{
  return Logger.logObject.getter();
}

BOOL sub_1FD34(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_1FD44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1FD54(uint64_t a1)
{
}

void sub_1FD5C(uint64_t a1, uint64_t a2)
{
}

void *sub_1FD64(uint64_t a1, uint64_t a2)
{
  return sub_3324(v2, a2);
}

uint64_t sub_1FD7C()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1FD84()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

  ;
}

uint64_t sub_1FDA4()
{
  return v0(v1, v2);
}

void sub_1FDB4()
{
}

uint64_t sub_1FDC4()
{
  return swift_task_dealloc(*(void *)(v0 + 1080));
}

void sub_1FDD4()
{
  *(void *)(v1 - 368) = v0;
}

uint64_t sub_1FDE4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t sub_1FDF0(uint64_t a1)
{
  return sub_6120(a1, v1);
}

void sub_1FDF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_1FE00()
{
  return v0;
}

uint64_t sub_1FE14(uint64_t a1, uint64_t a2)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v3, v2);
}

uint64_t sub_1FE20(uint64_t a1)
{
  return v3(a1, v1, v2);
}

uint64_t sub_1FE2C()
{
  return v0;
}

  ;
}

uint64_t sub_1FE44()
{
  return v0;
}

uint64_t sub_1FE50()
{
  return Flow.eraseToAnyFlow()(v0);
}

void *sub_1FE58()
{
  return sub_E9BC((const void *)(v0 + 440), (void *)(v1 + 80));
}

_WORD *sub_1FE64(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_1FE70@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_1FE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v3, a2, a3, 0LL);
}

uint64_t sub_1FE84()
{
  return type metadata accessor for EmergencyConfirmationFlow();
}

uint64_t sub_1FE8C()
{
  return type metadata accessor for OutputFlow(0LL);
}

void *sub_1FE94(void *a1, uint64_t a2)
{
  return sub_3324(a1, a2);
}

uint64_t sub_1FEA8(uint64_t a1, char a2)
{
  return sub_A89C(a2);
}

uint64_t sub_1FEB0(uint64_t a1, char a2)
{
  return sub_1FEA8(a1, a2);
}

uint64_t type metadata accessor for SirenCATs(uint64_t a1)
{
  uint64_t result = qword_79E88;
  if (!qword_79E88) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SirenCATs);
  }
  return result;
}

uint64_t sub_1FF08(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B8B8);
}

uint64_t sub_1FF44()
{
  return sub_2004C(22LL, 0x800000000005BAA0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_1FF64()
{
  return sub_2004C(28LL, 0x800000000005BA80LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_1FF84()
{
  return sub_2004C(32LL, 0x800000000005BA50LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_1FFA4()
{
  return sub_2004C(33LL, 0x800000000005BA20LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_1FFC4()
{
  return sub_2004C(16LL, 0x800000000005BA00LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_1FFE4()
{
  return sub_2004C(35LL, 0x800000000005B9D0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_20004()
{
  return sub_2004C(26LL, 0x800000000005B9B0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_20024()
{
  return sub_2004C(35LL, 0x800000000005B980LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_20044()
{
  return type metadata accessor for SirenCATs(0LL);
}

uint64_t sub_2004C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a2, a3);
}

void sub_20054(uint64_t a1)
{
  uint64_t v151 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v150 = *(void *)(v151 - 8);
  sub_EDD8();
  __chkstk_darwin(v2);
  sub_6750();
  uint64_t v162 = v3;
  type metadata accessor for EmergencyNLIntent(0LL);
  sub_EDD8();
  __chkstk_darwin(v4);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v5);
  uint64_t v7 = sub_EE14((uint64_t)&v137 - v6);
  uint64_t v153 = type metadata accessor for NLIntent(v7);
  uint64_t v158 = *(void *)(v153 - 8);
  sub_EDD8();
  __chkstk_darwin(v8);
  sub_6750();
  uint64_t v10 = sub_EE14(v9);
  type metadata accessor for Siri_Nlu_External_UserParse(v10);
  sub_EDD8();
  __chkstk_darwin(v11);
  sub_6750();
  uint64_t v13 = sub_EE14(v12);
  type metadata accessor for EmergencyDialogAct(v13);
  sub_EDD8();
  __chkstk_darwin(v14);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v15);
  uint64_t v17 = sub_EE14((uint64_t)&v137 - v16);
  uint64_t v140 = type metadata accessor for USOParse(v17);
  uint64_t v145 = *(void *)(v140 - 8);
  sub_EDD8();
  __chkstk_darwin(v18);
  sub_6750();
  uint64_t v20 = sub_EE14(v19);
  uint64_t v21 = type metadata accessor for Parse(v20);
  uint64_t v163 = *(void *)(v21 - 8);
  uint64_t v164 = (os_log_s *)v21;
  sub_EDD8();
  __chkstk_darwin(v22);
  sub_6750();
  uint64_t v161 = v23;
  uint64_t v24 = type metadata accessor for Input(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = (uint8_t *)sub_6820();
  uint64_t v29 = *((void *)v28 - 1);
  __chkstk_darwin(v28);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v30);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v31);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v32);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v33);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v34);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v35);
  sub_EE64();
  sub_ED8C();
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v137 - v38;
  uint64_t v40 = Logger.emergency.unsafeMutableAddressor(v37);
  sub_3CC8(v40, (uint64_t)v175);
  uint64_t v155 = v29;
  uint64_t v41 = *(void (**)(void, void, void))(v29 + 16);
  uint64_t v160 = v40;
  uint64_t v159 = v41;
  v41(v39, v40, v28);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v156 = a1;
  uint64_t v43 = v42(v27, a1, v24);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    sub_3CD4(12LL);
    sub_1FDD4();
    uint64_t v46 = sub_3CD4(32LL);
    *(void *)&__int128 v165 = v46;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v138 = v28 + 4;
    sub_EF34( &qword_790C0,  v47,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v24, v48);
    unint64_t v51 = v50;
    uint64_t v173 = sub_543A4(v49, v50, (uint64_t *)&v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v173, v174, v138, v28 + 12);
    swift_bridgeObjectRelease(v51);
    sub_1FD84();
    sub_67F8(&dword_0, v44, v45, "#EmergencyDirectCallRFFlow onInput: %s", v28);
    sub_67DC(v46);
    sub_3CA0(v46);
    uint64_t v52 = (uint64_t)v28;
    uint64_t v28 = v148;
    sub_3CA0(v52);
  }

  else
  {
    sub_1FD84();
  }

  uint64_t v53 = *(void (**)(uint64_t, uint8_t *))(v155 + 8);
  uint64_t v54 = sub_2349C((uint64_t)v39);
  uint64_t v55 = v161;
  Input.parse.getter(v54);
  os_log_type_t v57 = v163;
  uint64_t v56 = v164;
  int v58 = (*(uint64_t (**)(uint64_t, os_log_s *))(v163 + 88))(v55, v164);
  uint64_t v59 = v162;
  uint64_t v60 = v160;
  if (v58 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_1FCC0();
    uint64_t v61 = v153;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 32))(v157, v55, v153);
    sub_3CC8(v60, (uint64_t)&v165);
    uint64_t v62 = v152;
    uint64_t v63 = sub_18254(v152);
    Logger.logObject.getter(v63);
    os_log_type_t v64 = sub_EEB4();
    if (sub_EDE4(v64))
    {
      uint64_t v65 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v65);
      sub_23248(&dword_0, v56, (os_log_type_t)v62, "EmergencyDirectCallRFFlow onInput .NLv3IntentOnly");
      sub_3CA0((uint64_t)v39);
    }

    sub_23490(v62);
    uint64_t v66 = v158;
    uint64_t v67 = v154;
    uint64_t v68 = v157;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 16))(v154, v157, v61);
    uint64_t v69 = type metadata accessor for EmergencyNLIntent;
    sub_233A8(v67, (uint64_t)&v176);
    sub_22DC0((uint64_t)v56);
    os_log_type_t v71 = v70;
    sub_EAF0(v67, type metadata accessor for EmergencyNLIntent);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v61);
    goto LABEL_18;
  }

  if (v58 == enum case for Parse.directInvocation(_:))
  {
    sub_1FCC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32))(v59, v55, v151);
    sub_3CC8(v60, (uint64_t)&v173);
    uint64_t v72 = v146;
    uint64_t v73 = sub_18254(v146);
    Logger.logObject.getter(v73);
    os_log_type_t v74 = sub_EEB4();
    if (sub_EDE4(v74))
    {
      uint64_t v75 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v75);
      sub_23248(&dword_0, v56, (os_log_type_t)v72, "EmergencyDirectCallRFFlow onInput .directInvocation");
      sub_3CA0((uint64_t)v39);
    }

    uint64_t v76 = sub_2349C(v72);
    uint64_t v77 = Parse.DirectInvocation.identifier.getter(v76);
    if (v77 == 0xD00000000000003FLL && v78 == 0x800000000005B910LL)
    {
      uint64_t v79 = swift_bridgeObjectRelease(0x800000000005B910LL);
    }

    else
    {
      _stringCompareWithSmolCheck(_:_:expecting:)(v77, v78, 0xD00000000000003FLL, 0x800000000005B910LL, 0LL);
      uint64_t v79 = sub_12FF0();
      if ((v59 & 1) == 0) {
        goto LABEL_39;
      }
    }

    uint64_t v105 = Parse.DirectInvocation.userData.getter(v79);
    if (v105)
    {
      uint64_t v106 = v105;
      uint64_t v107 = DirectInvocationURI.payloadKey.getter(3LL);
      uint64_t v109 = v108;
      sub_2A82C(v107, v108, v106, &v165);
      swift_bridgeObjectRelease(v109);
      sub_1FD7C();
      if (*((void *)&v166 + 1))
      {
        uint64_t v79 = swift_dynamicCast(&v169, &v165, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
        if ((v79 & 1) != 0)
        {
          uint64_t v79 = EmergencyOrganization.init(rawValue:)(v169, v170);
          if (v79 != 4)
          {
            LOBYTE(v71) = v79;
            LOWORD(v91) = 35;
LABEL_47:
            uint64_t v133 = sub_1FE00();
            v134(v133, v151);
            goto LABEL_48;
          }
        }

uint64_t sub_20D64(uint64_t a1)
{
  v2[126] = v1;
  v2[125] = a1;
  uint64_t v3 = sub_6820();
  v2[127] = v3;
  v2[128] = *(void *)(v3 - 8);
  v2[129] = sub_45A0();
  v2[130] = sub_45A0();
  v2[131] = sub_45A0();
  v2[132] = sub_45A0();
  v2[133] = sub_45A0();
  sub_4588();
  return sub_451C();
}

uint64_t sub_20DD8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 1064);
  uint64_t v4 = *(void *)(v1 + 1024);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 107_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v5;
  sub_3CC8(v5, v1 + 904);
  *(void *)(v1 + 1080) = *(void *)(v4 + 16);
  uint64_t v6 = sub_1FE20(v3);
  uint64_t v7 = (os_log_s *)v3;
  Logger.logObject.getter(v6);
  os_log_type_t v8 = sub_67D4();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v9 = 0;
    sub_EDA8(&dword_0, v7, v8, "#EmergencyDirectCallRFFlow execute", v9);
    sub_3CA0((uint64_t)v9);
  }

  uint64_t v10 = *(void *)(v1 + 1064);
  uint64_t v11 = *(void *)(v1 + 1024);
  uint64_t v12 = *(void *)(v1 + 1016);
  sub_23488();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  *(void *)(v1 + 1088) = v13;
  uint64_t v14 = v13(v10, v12);
  int v15 = *(unsigned __int8 *)(v2 + 218);
  if (v15 == 2)
  {
    uint64_t v17 = sub_3324((void *)(*(void *)(v1 + 1008) + 56LL), *(void *)(*(void *)(v1 + 1008) + 80LL));
    sub_23290((void *)(v1 + 480), v17);
    uint64_t v18 = (void *)sub_9EDC((uint64_t)&dword_7A8A8);
    *(void *)(v1 + 1096) = v18;
    *uint64_t v18 = v1;
    v18[1] = sub_210CC;
    uint64_t v19 = v1 + 480;
  }

  else
  {
    if (v15 == 3)
    {
      static ExecuteResponse.complete()(v14);
      sub_23218();
      sub_9F08();
      sub_4578();
      sub_4528();
      sub_2327C();
      sub_23298();
      __asm { BR              X0 }
    }

    __int16 v20 = *(_WORD *)(v2 + 216);
    if (HIBYTE(v20) != 35 || v20 != 4)
    {
      sub_918C();
      if (*(void *)(v1 + 824))
      {
        sub_65A4((__int128 *)(v1 + 800), v1 + 840);
        uint64_t v21 = (void *)swift_task_alloc(dword_7964C);
        *(void *)(v1 + 111_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v21;
        *uint64_t v21 = v1;
        v21[1] = sub_2114C;
        sub_23298();
        return sub_145A8(v22, v23, v24, v25);
      }

      sub_E988(v1 + 800, &qword_79FF0);
    }

    uint64_t v27 = *(os_log_s **)(v1 + 1040);
    sub_3CC8(v5, v1 + 880);
    uint64_t v28 = sub_1FE20((uint64_t)v27);
    Logger.logObject.getter(v28);
    os_log_type_t v29 = sub_18418();
    if (sub_6728(v29))
    {
      uint64_t v30 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v30 = 0;
      sub_EDA8( &dword_0,  v27,  (os_log_type_t)v5,  "#EmergencyDirectRFCallFlow Intent missing a situation or valid organization",  v30);
      sub_3CA0((uint64_t)v30);
    }

    uint64_t v31 = *(void *)(v1 + 1040);
    uint64_t v32 = *(void *)(v1 + 1016);
    uint64_t v33 = *(void *)(v1 + 1008);

    v13(v31, v32);
    uint64_t v34 = sub_3324((void *)(v33 + 56), *(void *)(v33 + 80));
    sub_23290((void *)(v1 + 720), v34);
    uint64_t v35 = (void *)sub_9EDC((uint64_t)&dword_7A8A8);
    *(void *)(v1 + 1sub_60A4(v0 + 256, v0 + 216) = v35;
    *uint64_t v35 = v1;
    v35[1] = sub_21938;
    uint64_t v19 = v1 + 720;
  }

  return sub_2323C(v19, v36);
}

uint64_t sub_210CC()
{
  *(void *)(v1 + 1104) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_21108()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2114C()
{
  return sub_451C();
}

uint64_t sub_21194()
{
  if (sub_E438((uint64_t)(v0 + 18)) == 1)
  {
    uint64_t v2 = (uint64_t)(v0 + 80);
    uint64_t v3 = sub_3324((void *)(v0[126] + 56), *(void *)(v0[126] + 80));
    sub_23290(v0 + 80, v3);
    uint64_t v4 = (void *)sub_9EDC((uint64_t)&dword_7A8A8);
    v0[150] = (uint64_t)v4;
    uint64_t v5 = sub_218AC;
LABEL_3:
    *uint64_t v4 = v0;
    v4[1] = v5;
    return sub_2323C(v2, v29);
  }

  uint64_t v7 = sub_EE84(v0 + 34, v0 + 18);
  uint64_t v8 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v7);
  if ((v8 & 1) != 0)
  {
    sub_1FE94((void *)(v0[126] + 176), *(void *)(v0[126] + 200));
    uint64_t v9 = (uint64_t **)swift_task_alloc(dword_7A00C);
    v0[140] = (uint64_t)v9;
    uint8_t *v9 = v0;
    v9[1] = (uint64_t *)sub_21478;
    sub_23298();
    return sub_21BA8(v10);
  }

  else if ((EmergencyOrganizationInfo.hasNameAndWebsite.getter(v8) & 1) != 0)
  {
    uint64_t v11 = (os_log_s *)v0[134];
    uint64_t v12 = v0[132];
    sub_3CC8((uint64_t)v11, (uint64_t)(v0 + 122));
    sub_23388();
    sub_13124();
    os_log_type_t v13 = sub_67D4();
    if (sub_182CC(v13))
    {
      uint64_t v14 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v14 = 0;
      sub_EDA8(&dword_0, v11, (os_log_type_t)v12, "Going to website flow", v14);
      sub_3CA0((uint64_t)v14);
    }

    sub_23488();
    sub_2343C();
    sub_1FE94((void *)(v1 + 176), *(void *)(v1 + 200));
    int v15 = (void *)swift_task_alloc(dword_7A004);
    v0[142] = (uint64_t)v15;
    sub_2345C(v15, (uint64_t)sub_21510);
    sub_23298();
    return sub_21D5C(v16, v17);
  }

  else
  {
    unint64_t v18 = v0[47];
    if ((v18 & 0x2000000000000000LL) != 0) {
      uint64_t v19 = HIBYTE(v18) & 0xF;
    }
    else {
      uint64_t v19 = v0[46] & 0xFFFFFFFFFFFFLL;
    }
    if (!v19)
    {
      uint64_t v2 = (uint64_t)(v0 + 70);
      uint64_t v27 = v0[126];
      sub_E864(v0 + 2);
      uint64_t v28 = sub_3324((void *)(v27 + 56), *(void *)(v27 + 80));
      sub_23290(v0 + 70, v28);
      uint64_t v4 = (void *)sub_9EDC((uint64_t)&dword_7A8A8);
      v0[148] = (uint64_t)v4;
      uint64_t v5 = sub_21820;
      goto LABEL_3;
    }

    __int16 v20 = (os_log_s *)v0[134];
    uint64_t v21 = v0[131];
    sub_3CC8((uint64_t)v20, (uint64_t)(v0 + 116));
    sub_23388();
    sub_13124();
    os_log_type_t v22 = sub_67D4();
    if (sub_182CC(v22))
    {
      uint64_t v23 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v23 = 0;
      sub_EDA8( &dword_0,  v20,  (os_log_type_t)v21,  "we are checking if the orgInfo has a webquery if the website is not available",  v23);
      sub_3CA0((uint64_t)v23);
    }

    sub_23488();
    sub_2343C();
    sub_1FE94((void *)(v1 + 176), *(void *)(v1 + 200));
    char v24 = (void *)swift_task_alloc(dword_79FFC);
    v0[145] = (uint64_t)v24;
    sub_2345C(v24, (uint64_t)sub_21698);
    sub_23298();
    return sub_225C8(v25, v26);
  }

uint64_t sub_21478()
{
  uint64_t v1 = (uint64_t *)(v0 + 16);
  sub_23254();
  *(void *)(v3 + 1128) = v2;
  sub_232B0(v4);
  sub_E864(v1);
  sub_4588();
  return sub_451C();
}

uint64_t sub_214C0()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21510()
{
  *(void *)(v2 + 1144) = v0;
  swift_task_dealloc(v4);
  if (!v0) {
    *(void *)(v2 + 115_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  }
  sub_233E8();
  sub_4588();
  return sub_3C98();
}

uint64_t sub_21574()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_215C4()
{
  v0[154] = v0[143];
  uint64_t v2 = (os_log_s *)v0[134];
  uint64_t v3 = (void *)v0[129];
  uint64_t v4 = v0[127];
  sub_3CC8((uint64_t)v2, (uint64_t)(v0 + 119));
  sub_233F0();
  sub_233E0();
  os_log_type_t v5 = sub_18418();
  if (sub_6728(v5))
  {
    uint64_t v6 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v6);
    sub_23248(&dword_0, v2, (os_log_type_t)v3, "#EmergencyDirectCallRFFlow OrgInfo has no usable info");
    sub_3CA0(v4);
  }

  sub_232E4();
  sub_23368();
  uint64_t v7 = sub_3324(v2, *(void *)(v1 + 80));
  sub_23290(v3, v7);
  uint64_t v8 = (void *)sub_44F4((uint64_t)&dword_7A8A8);
  v0[155] = v8;
  uint64_t v9 = sub_23448(v8, (uint64_t)sub_219B8);
  return sub_2323C(v9, v10);
}

uint64_t sub_21698()
{
  *(void *)(v2 + 1168) = v0;
  swift_task_dealloc(v4);
  if (!v0) {
    *(void *)(v2 + 1sub_60A4(v0 + 256, v0 + 176) = v1;
  }
  sub_233E8();
  sub_4588();
  return sub_3C98();
}

uint64_t sub_216FC()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2174C()
{
  v0[154] = v0[146];
  uint64_t v2 = (os_log_s *)v0[134];
  uint64_t v3 = (void *)v0[129];
  uint64_t v4 = v0[127];
  sub_3CC8((uint64_t)v2, (uint64_t)(v0 + 119));
  sub_233F0();
  sub_233E0();
  os_log_type_t v5 = sub_18418();
  if (sub_6728(v5))
  {
    uint64_t v6 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v6);
    sub_23248(&dword_0, v2, (os_log_type_t)v3, "#EmergencyDirectCallRFFlow OrgInfo has no usable info");
    sub_3CA0(v4);
  }

  sub_232E4();
  sub_23368();
  uint64_t v7 = sub_3324(v2, *(void *)(v1 + 80));
  sub_23290(v3, v7);
  uint64_t v8 = (void *)sub_44F4((uint64_t)&dword_7A8A8);
  v0[155] = v8;
  uint64_t v9 = sub_23448(v8, (uint64_t)sub_219B8);
  return sub_2323C(v9, v10);
}

uint64_t sub_21820()
{
  *(void *)(v1 + 119_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_2185C()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_218AC()
{
  *(void *)(v1 + 1sub_60A4(v0 - 128, v0 - 208) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_218E8()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21938()
{
  *(void *)(v1 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_21974()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_219B8()
{
  *(void *)(v1 + 1sub_60A4(v0 - 128, v0 - 248) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_219F4()
{
  return sub_23208(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyDirectCallRFFlow();
  sub_EB44( &qword_79FE8,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyDirectCallRFFlow,  (uint64_t)&unk_585F0);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t type metadata accessor for EmergencyDirectCallRFFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin25EmergencyDirectCallRFFlow);
}

ValueMetadata *type metadata accessor for EmergencyDirectCallRFFlow.EmergencyDirectCallFlowState()
{
  return &type metadata for EmergencyDirectCallRFFlow.EmergencyDirectCallFlowState;
}

uint64_t sub_21AEC(uint64_t a1)
{
  return v1 & 1;
}

uint64_t sub_21B10(uint64_t a1, uint64_t a2)
{
  return sub_21A4C(a1, a2);
}

uint64_t sub_21B30(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_79F04);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_5F44;
  return sub_20D64(a1);
}

uint64_t sub_21B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyDirectCallRFFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_21BA8(const void *a1)
{
  v2[66] = v1;
  v2[65] = a1;
  sub_EE84(v2 + 46, a1);
  uint64_t v3 = sub_6820();
  v2[67] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[68] = v4;
  v2[69] = sub_3C88(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_21BFC(uint64_t a1)
{
  uint64_t v2 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v2, v1 + 496);
  sub_2332C();
  uint64_t v3 = (os_log_s *)sub_233E0();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v5 = 0;
    sub_EDA8(&dword_0, v3, v4, "#EmergencyDirectCallRFFlow Resource is available. Making the call.", v5);
    sub_3CA0((uint64_t)v5);
  }

  uint64_t v6 = *(void *)(v1 + 552);
  uint64_t v7 = *(void *)(v1 + 544);
  uint64_t v8 = *(void *)(v1 + 536);
  uint64_t v9 = *(void *)(v1 + 528);
  uint64_t v10 = *(void **)(v1 + 520);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_60A4(v9, v1 + 16);
  sub_60A4(v9 + 40, v1 + 56);
  sub_EE84((void *)(v1 + 232), (const void *)(v1 + 368));
  sub_180EC(v1 + 232);
  sub_E9BC((const void *)(v1 + 232), (void *)(v1 + 96));
  sub_6408(v10);
  sub_23198();
  uint64_t v11 = Flow.eraseToAnyFlow()(&type metadata for CallRFFlow);
  sub_231D4(v1 + 16);
  sub_4578();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v11);
}

uint64_t sub_21D5C(uint64_t a1, uint64_t a2)
{
  v3[41] = a2;
  v3[42] = v2;
  v3[40] = a1;
  uint64_t v4 = sub_3974((uint64_t *)&unk_7AE80);
  v3[43] = sub_3C88(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for AppPunchOutFlow(0LL);
  v3[44] = v5;
  v3[45] = sub_3C88(*(void *)(v5 - 8));
  uint64_t v6 = sub_6820();
  v3[46] = v6;
  v3[47] = *(void *)(v6 - 8);
  v3[48] = sub_45A0();
  v3[49] = sub_45A0();
  uint64_t v7 = sub_3974(&qword_78970);
  v3[50] = sub_3C88(*(void *)(v7 - 8));
  uint64_t v8 = type metadata accessor for SpeakableString(0LL);
  v3[51] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[52] = v9;
  v3[53] = sub_3C88(v9);
  sub_4588();
  return sub_451C();
}

void sub_21E1C()
{
  uint64_t v1 = v0[52];
  uint64_t v3 = v0[50];
  uint64_t v2 = v0[51];
  uint64_t v4 = v0[40];
  uint64_t v5 = (void *)v0[41];
  uint64_t v6 = *(void *)(v4 + 48);
  uint64_t v7 = *(void *)(v4 + 56);
  swift_bridgeObjectRetain(v7);
  SpeakableString.init(print:speak:)(v6, v7, 0LL, 0LL);
  uint64_t v8 = v5[4];
  sub_3324(v5, v5[3]);
  sub_23430(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_3F18(v3, 0LL, 1LL, v2);
  uint64_t v9 = (void *)sub_9EDC(*(void *)(v8 + 32));
  v0[54] = v9;
  void *v9 = v0;
  v9[1] = sub_21EE8;
  sub_23298();
  __asm { BR              X3 }

uint64_t sub_21EE8()
{
  uint64_t v2 = *(void *)(v1 + 400);
  sub_23254();
  *(void *)(v4 + 440) = v3;
  *(void *)(v4 + 448) = v0;
  sub_232B0(v5);
  sub_E988(v2, &qword_78970);
  sub_4588();
  return sub_3C98();
}

uint64_t sub_21F4C(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + 256);
  uint64_t v3 = v1 + 280;
  uint64_t v4 = *(void **)(v1 + 440);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, v1 + 256);
  sub_23378();
  id v6 = v4;
  sub_13124();
  os_log_type_t v7 = sub_67D4();
  if (os_log_type_enabled((os_log_t)(v1 + 256), v7))
  {
    uint64_t v8 = *(void **)(v1 + 440);
    uint64_t v9 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v33 = (void *)sub_3CD4(8LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    *(void *)(v1 + 31_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
    id v10 = v8;
    uint64_t v3 = v1 + 280;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 312, v1 + 320, v9 + 4, v9 + 12);
    *uint64_t v33 = v8;

    sub_67F8(&dword_0, (os_log_s *)(v1 + 256), v7, "offerWebsiteDialog %@", v9);
    sub_3974(&qword_7A020);
    sub_67DC((uint64_t)v33);
    sub_3CA0((uint64_t)v33);
    sub_3CA0((uint64_t)v9);
  }

  else
  {

    uint64_t v2 = *(void **)(v1 + 440);
  }

  uint64_t v11 = *(void *)(v1 + 392);
  uint64_t v12 = *(void *)(v1 + 368);
  uint64_t v13 = *(void *)(v1 + 376);

  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  sub_3CC8(v5, v3);
  sub_23378();
  sub_13124();
  os_log_type_t v15 = sub_67D4();
  if (sub_6728(v15))
  {
    uint64_t v16 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v16);
    sub_23248( &dword_0,  (os_log_s *)v2,  (os_log_type_t)v11,  "#EmergencyDirectCallRFFlow Only website available for VOX request. Offer to open the org's website.");
    sub_3CA0(v5);
  }

  uint64_t v17 = *(void *)(v1 + 384);
  uint64_t v18 = *(void *)(v1 + 368);
  __int16 v20 = *(void **)(v1 + 336);
  uint64_t v19 = *(void *)(v1 + 344);

  v14(v17, v18);
  uint64_t v21 = v20[3];
  uint64_t v22 = v20[4];
  sub_3324(v20, v21);
  uint64_t v23 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 16))(v34, v21, v22);
  EmergencyOrganizationInfo.websiteURL.getter(v23);
  uint64_t v24 = type metadata accessor for URL(0LL);
  uint64_t result = sub_5FE0(v19, 1LL, v24);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }

  else
  {
    uint64_t v26 = *(void *)(v1 + 352);
    uint64_t v27 = *(void *)(v1 + 360);
    uint64_t v28 = *(void *)(v1 + 336);
    AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v34, *(void *)(v1 + 344), 0LL, 0LL);
    sub_EB44( &qword_79828,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
    *(void *)(v1 + 456) = Flow.eraseToAnyFlow()(v26);
    sub_EAF0(v27, (uint64_t (*)(void))&type metadata accessor for AppPunchOutFlow);
    os_log_type_t v29 = sub_3324((void *)(v28 + 40), *(void *)(v28 + 64));
    uint64_t v30 = *v29;
    *(void *)(v1 + 464) = *v29;
    uint64_t v31 = dword_7B204;
    swift_retain(v30);
    uint64_t v32 = (void *)swift_task_alloc(v31);
    *(void *)(v1 + 47_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v32;
    *uint64_t v32 = v1;
    v32[1] = sub_2224C;
    return sub_47EE0();
  }

  return result;
}

uint64_t sub_2224C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v8 = v4;
  uint64_t v5 = v4[58];
  sub_234A4(&v8);
  v4[60] = v1;
  swift_task_dealloc(v6);
  swift_release(v5);
  if (!v1) {
    v4[61] = a1;
  }
  sub_4588();
  return sub_3C98();
}

uint64_t sub_222BC()
{
  uint64_t v1 = *(void **)(v0 + 488);
  uint64_t v13 = *(void *)(v0 + 456);
  uint64_t v2 = *(void **)(v0 + 440);
  uint64_t v16 = *(void *)(v0 + 416);
  uint64_t v17 = *(void *)(v0 + 408);
  uint64_t v18 = *(void *)(v0 + 424);
  uint64_t v19 = *(void *)(v0 + 400);
  uint64_t v20 = *(void *)(v0 + 392);
  uint64_t v21 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v22 = *(void *)(v0 + 360);
  uint64_t v23 = *(void *)(v0 + 344);
  uint64_t v4 = *(void **)(v0 + 320);
  sub_60A4(v3, v0 + 96);
  sub_60A4(v3 + 40, v0 + 136);
  sub_60E4(v3 + 80, v0 + 176);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = sub_6120(v0 + 136, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = (const void *)sub_23230(*(void *)(v7 + 64));
  (*(void (**)(const void *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
  *(void *)(v0 + sub_60A4(v0 + 256, v0 + 216) = v2;
  *(void *)(v0 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v1;
  *(_BYTE *)(v0 + 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2;
  *(void *)(v0 + 240) = v13;
  *(_WORD *)(v0 + sub_60A4(v0 - 128, v0 - 248) = 258;
  sub_23290((void *)(v0 + 16), v8);
  id v15 = v2;
  id v14 = v1;
  swift_retain(v13);
  sub_6408(v4);
  uint64_t v9 = sub_233D0(v4, v0 + 216, (__int128 *)(v0 + 96), (const void *)(v0 + 16), v0 + 176);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 136));
  swift_task_dealloc(v8);
  *(void *)(v0 + 304) = v9;
  uint64_t v10 = type metadata accessor for EmergencyConfirmationRFFlow();
  sub_EF34( &qword_7A018,  v11,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationRFFlow,  (uint64_t)&unk_5A0D8);
  Flow.eraseToAnyFlow()(v10);
  sub_1FD20();

  swift_release(v9);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  sub_4578();
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v0 + 304);
}

uint64_t sub_224E0()
{
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22548()
{
  uint64_t v3 = *(void **)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 408);
  swift_release(*(void *)(v0 + 456));

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_23314();
  sub_4578();
  sub_4528();
  sub_2327C();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_225C8(uint64_t a1, uint64_t a2)
{
  v3[44] = a2;
  v3[45] = v2;
  v3[43] = a1;
  uint64_t v4 = sub_6820();
  v3[46] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[47] = v5;
  v3[48] = sub_3C88(v5);
  uint64_t v6 = sub_3974(&qword_78970);
  v3[49] = sub_3C88(*(void *)(v6 - 8));
  sub_4588();
  return sub_451C();
}

uint64_t sub_22628()
{
  uint64_t v1 = v0[49];
  uint64_t v3 = v0[43];
  uint64_t v2 = (void *)v0[44];
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  sub_3324(v2, v4);
  uint64_t v6 = *(void *)(v3 + 96);
  v0[50] = v6;
  uint64_t v7 = *(void *)(v3 + 104);
  v0[51] = v7;
  String.toSpeakableString.getter(v6, v7);
  uint64_t v8 = type metadata accessor for SpeakableString(0LL);
  sub_3F18(v1, 0LL, 1LL, v8);
  uint64_t v9 = (void *)sub_9EDC(*(void *)(v5 + 24));
  v0[52] = v9;
  void *v9 = v0;
  v9[1] = sub_226DC;
  return v11(v0[49], v4, v5);
}

uint64_t sub_226DC()
{
  uint64_t v2 = *(void *)(v1 + 392);
  sub_23254();
  *(void *)(v4 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v3;
  *(void *)(v4 + 43_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v0;
  sub_232B0(v5);
  sub_E988(v2, &qword_78970);
  sub_4588();
  return sub_3C98();
}

uint64_t sub_22740(uint64_t a1)
{
  uint64_t v2 = v1[48];
  uint64_t v3 = v1[46];
  uint64_t v4 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v4, (uint64_t)(v1 + 39));
  sub_2332C();
  sub_233E0();
  os_log_type_t v5 = sub_67D4();
  if (sub_6728(v5))
  {
    uint64_t v6 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v6);
    sub_23248( &dword_0,  (os_log_s *)(v1 + 39),  (os_log_type_t)v2,  "#EmergencyDirectCallRFFlow No resource available for VOX request. Offer to search the web.");
    sub_3CA0(v3);
  }

  uint64_t v8 = v1[50];
  uint64_t v7 = v1[51];
  uint64_t v10 = v1[47];
  uint64_t v9 = v1[48];
  uint64_t v12 = (void *)v1[45];
  uint64_t v11 = v1[46];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  sub_1FE94(v12, v13);
  id v15 = *(void (**)(uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain(v7);
  v15(v13, v14);
  v1[12] = v8;
  v1[13] = v7;
  sub_18188();
  v1[55] = Flow.eraseToAnyFlow()(&type metadata for WebsearchFlow);
  sub_181C4((uint64_t)(v1 + 12));
  uint64_t v16 = sub_3324(v12 + 5, v12[8]);
  uint64_t v17 = *v16;
  v1[56] = *v16;
  uint64_t v18 = dword_7B204;
  swift_retain(v17);
  uint64_t v19 = (void *)swift_task_alloc(v18);
  v1[57] = v19;
  *uint64_t v19 = v1;
  v19[1] = sub_22898;
  return sub_47EE0();
}

uint64_t sub_22898(uint64_t a1)
{
  uint64_t v10 = (void *)*v2;
  uint64_t v4 = v10;
  sub_234A4(&v10);
  v4[58] = v1;
  swift_task_dealloc(v5);
  if (!v1)
  {
    swift_release(v4[56]);
    v4[59] = a1;
  }

  sub_4588();
  return swift_task_switch(v6, v7, v8);
}

uint64_t sub_2290C()
{
  uint64_t v1 = *(void **)(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v3 = *(void **)(v0 + 424);
  uint64_t v16 = *(void *)(v0 + 392);
  uint64_t v17 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void **)(v0 + 344);
  sub_60A4(v4, v0 + 152);
  sub_60A4(v4 + 40, v0 + 192);
  sub_60E4(v4 + 80, v0 + 232);
  uint64_t v6 = *(void *)(v0 + 216);
  uint64_t v7 = sub_6120(v0 + 192, v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = (const void *)sub_23230(*(void *)(v8 + 64));
  (*(void (**)(const void *, uint64_t, uint64_t))(v8 + 16))(v9, v7, v6);
  *(void *)(v0 + 27_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v3;
  *(void *)(v0 + 280) = v1;
  *(_BYTE *)(v0 + 288) = 3;
  *(void *)(v0 + 296) = v2;
  *(_WORD *)(v0 + 304) = 257;
  sub_23290((void *)(v0 + 16), v9);
  id v10 = v3;
  id v11 = v1;
  swift_retain(v2);
  sub_6408(v5);
  uint64_t v12 = sub_233D0(v5, v0 + 272, (__int128 *)(v0 + 152), (const void *)(v0 + 16), v0 + 232);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 192));
  sub_9F08();
  *(void *)(v0 + 336) = v12;
  uint64_t v13 = type metadata accessor for EmergencyConfirmationRFFlow();
  sub_EF34( &qword_7A018,  v14,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationRFFlow,  (uint64_t)&unk_5A0D8);
  Flow.eraseToAnyFlow()(v13);
  sub_1FD20();

  sub_232B8();
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v0 + 336);
}

uint64_t sub_22AC0()
{
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22AF4()
{
  uint64_t v1 = *(void **)(v0 + 424);
  swift_release(*(void *)(v0 + 448));
  sub_EE0C();

  swift_task_dealloc(*(void *)(v0 + 392));
  sub_4578();
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22B3C(uint64_t a1)
{
  uint64_t v4 = sub_6820();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_23400();
  void v24[3] = type metadata accessor for EmergencyDialogAct(0LL);
  v24[4] = &protocol witness table for EmergencyDialogAct;
  uint64_t v6 = sub_649C(v24);
  sub_EB18(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v7);
  sub_3CC8(v8, (uint64_t)v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v8, v4);
  sub_23470();
  id v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (sub_23398(v11))
  {
    uint64_t v12 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v18 = v4;
    uint64_t v13 = sub_3CD4(32LL);
    uint64_t v21 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_60A4((uint64_t)v22, (uint64_t)&v19);
    sub_3974(&qword_790C8);
    uint64_t v14 = String.init<A>(describing:)(&v19);
    unint64_t v16 = v15;
    uint64_t v19 = sub_543A4(v14, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v16);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
    sub_67F8(&dword_0, v10, v2, "Converting EmergencyDialogAct to EmergencyCallIntent: %s", v12);
    sub_67DC(v13);
    sub_3CA0(v13);
    sub_3CA0((uint64_t)v12);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v18);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  }

  sub_234B0();
  __asm { BR              X10 }

void sub_22D38()
{
}

void sub_22DC0(uint64_t a1)
{
  uint64_t v3 = sub_6820();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for EmergencyNLIntent(0LL);
  uint64_t v35 = v7;
  sub_EB44(&qword_790D0, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
  uint64_t v36 = v8;
  uint64_t v9 = sub_649C(v34);
  sub_EB18(a1, (uint64_t)v9, type metadata accessor for EmergencyNLIntent);
  uint64_t v11 = Logger.emergency.unsafeMutableAddressor(v10);
  sub_3CC8(v11, (uint64_t)v33);
  sub_23430((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_23470();
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (sub_23398(v14))
  {
    uint64_t v28 = v3;
    uint64_t v15 = sub_3CD4(12LL);
    uint64_t v29 = v7;
    unint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = sub_3CD4(32LL);
    uint64_t v31 = v17;
    *(_DWORD *)unint64_t v16 = 136315138;
    uint64_t v26 = v16 + 4;
    uint64_t v18 = sub_3324(v32, v32[3]);
    uint64_t v27 = v4;
    __chkstk_darwin(v18);
    sub_23400();
    (*(void (**)(char *))(v19 + 16))(v6);
    uint64_t v20 = sub_449C4();
    unint64_t v22 = v21;
    sub_EAF0((uint64_t)v6, type metadata accessor for EmergencyNLIntent);
    uint64_t v30 = sub_543A4(v20, v22, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v26, v16 + 12);
    sub_1FD7C();
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v32);
    sub_67F8(&dword_0, v13, v1, "Converting EmergencyNLIntent: %s", v16);
    sub_67DC(v17);
    sub_3CA0(v17);
    sub_3CA0((uint64_t)v16);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v32);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  sub_1FE94(v34, v35);
  if (qword_785C8 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  uint64_t v24 = qword_78CD0;
  sub_EF34(&qword_78D98, v23, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  sub_23340(v24);
  sub_1FE94(v34, v35);
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  sub_23340(qword_78CC0);
  sub_1FE94(v34, v35);
  if (qword_785B0 != -1) {
    swift_once(&qword_785B0, sub_A288);
  }
  sub_23340(qword_78CB8);
  sub_234B0();
  __asm { BR              X10 }

unint64_t sub_23198()
{
  unint64_t result = qword_7A010;
  if (!qword_7A010)
  {
    unint64_t result = swift_getWitnessTable(&unk_5A198, &type metadata for CallRFFlow);
    atomic_store(result, (unint64_t *)&qword_7A010);
  }

  return result;
}

uint64_t sub_231D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_23208(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23218()
{
  return swift_task_dealloc(*(void *)(v0 + 1064));
}

uint64_t sub_23230@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_2323C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_23248(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

void sub_23254()
{
  *(void *)(v1 - 8) = *v0;
}

void sub_23264()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t sub_23274(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2327C()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_23284()
{
  return static ExecuteResponse.complete(next:)(v0);
}

void *sub_23290(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

  ;
}

uint64_t sub_232B0@<X0>(uint64_t a1@<X8>)
{
  return swift_task_dealloc(a1);
}

uint64_t sub_232B8()
{
  return swift_release(v0);
}

uint64_t sub_232C0()
{
  return 0x6978456B63656863LL;
}

void sub_232E4()
{
}

uint64_t sub_232FC(uint64_t a1)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1819042147LL, 0xE400000000000000LL, 0LL);
}

uint64_t sub_23314()
{
  return swift_task_dealloc(*(void *)(v0 + 424));
}

uint64_t sub_2332C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t sub_23340(uint64_t a1)
{
  return IntentNodeTraversable.value<A>(forNode:)(a1, v2, v1);
}

uint64_t sub_2334C()
{
  return 0x736972616D6D7573LL;
}

uint64_t sub_23368()
{
  return v2(v0, v1);
}

uint64_t sub_23378()
{
  return v3(v1, v0, v2);
}

uint64_t sub_23388()
{
  return v3(v1, v0, v2);
}

BOOL sub_23398(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_233A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_233B8()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t sub_233D0(const void *a1, uint64_t a2, __int128 *a3, const void *a4, uint64_t a5)
{
  return sub_34BF4(a1, a2, a3, a4, a5, 0, 0LL, 0LL);
}

uint64_t sub_233E0()
{
  return Logger.logObject.getter();
}

uint64_t *sub_233E8()
{
  return sub_E864(v0);
}

uint64_t sub_233F0()
{
  return v3(v0, v1, v2);
}

  ;
}

uint64_t sub_23418()
{
  return 0x656C6261736964LL;
}

uint64_t sub_23430@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v3, v2);
}

uint64_t sub_2343C()
{
  return v2(v0, v1);
}

uint64_t sub_23448@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_2345C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void sub_23470()
{
}

uint64_t sub_2347C()
{
  return static ExecuteResponse.complete(next:)(v0);
}

void sub_23488()
{
}

uint64_t sub_23490(uint64_t a1)
{
  *(void *)(v3 - 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v2;
  return v2(a1, v1);
}

uint64_t sub_2349C(uint64_t a1)
{
  return v2(a1, v1);
}

void sub_234A4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_234B0()
{
  return 1684957542LL;
}

uint64_t type metadata accessor for EmergencyCATs(uint64_t a1)
{
  uint64_t result = qword_7A028;
  if (!qword_7A028) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyCATs);
  }
  return result;
}

uint64_t sub_234FC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B8C8);
}

uint64_t sub_23538()
{
  return sub_2004C(25LL, 0x800000000005BD50LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_23558()
{
  return sub_2004C(23LL, 0x800000000005BD30LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_23578()
{
  return sub_2004C(32LL, 0x800000000005BD00LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_23598()
{
  return sub_2004C(22LL, 0x800000000005BCE0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_235B8()
{
  return sub_2004C(32LL, 0x800000000005BCB0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_235D8()
{
  return sub_2004C(33LL, 0x800000000005BC80LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_235F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v8 = sub_3974(&qword_78BB8);
  uint64_t v9 = swift_allocObject(v8, 176LL, 7LL);
  *(_OWORD *)(v9 + 16) = xmmword_56FC0;
  uint64_t v10 = (void *)(v9 + 48);
  sub_239B4(v9);
  sub_7DAC(a1, v3, &qword_78970);
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v3, 1LL, v11) == 1)
  {
    sub_7784(v3, &qword_78970);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }

  else
  {
    *(void *)(v9 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v11;
    uint64_t v12 = sub_649C(v10);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v12, v3, v11);
  }

  *(void *)(v9 + 80) = 0x65626D754E67726FLL;
  *(void *)(v9 + 88) = 0xE900000000000072LL;
  if (a2)
  {
    uint64_t v13 = type metadata accessor for DialogPhoneNumber(0LL);
    uint64_t v14 = a2;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v9 + 104) = 0LL;
    *(void *)(v9 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
  }

  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 120) = v13;
  *(void *)(v9 + 128) = 0xD000000000000012LL;
  *(void *)(v9 + 136) = 0x800000000005ABB0LL;
  *(void *)(v9 + 168) = &type metadata for Bool;
  *(_BYTE *)(v9 + 144) = a3 & 1;
  swift_retain(a2);
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000001FLL, 0x800000000005BC60LL, v9);
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_237B0(uint64_t a1)
{
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_3974(&qword_78BB8);
  uint64_t v6 = swift_allocObject(v5, 80LL, 7LL);
  *(_OWORD *)(v6 + 16) = xmmword_56FA0;
  uint64_t v7 = (void *)(v6 + 48);
  sub_239B4(v6);
  sub_7DAC(a1, (uint64_t)v4, &qword_78970);
  uint64_t v8 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v4, 1LL, v8) == 1)
  {
    sub_7784((uint64_t)v4, &qword_78970);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }

  else
  {
    *(void *)(v6 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
    uint64_t v9 = sub_649C(v7);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v8 - 8) + 32LL))(v9, v4, v8);
  }

  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000013LL, 0x800000000005BC40LL, v6);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_238EC()
{
  return sub_2004C(28LL, 0x800000000005BC20LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_2390C()
{
  return sub_2004C(34LL, 0x800000000005BBF0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_2392C()
{
  return sub_2004C(25LL, 0x800000000005BBD0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_2394C()
{
  return sub_2004C(27LL, 0x800000000005BBB0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_2396C()
{
  return sub_2004C(27LL, 0x800000000005BB90LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_2398C()
{
  return sub_2004C(32LL, 0x800000000005BB60LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_239AC()
{
  return type metadata accessor for EmergencyCATs(0LL);
}

uint64_t sub_239B4(uint64_t result)
{
  *(void *)(result + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(result + 40) = 0xE700000000000000LL;
  return result;
}

uint64_t type metadata accessor for EmergencySuicidePreventionBasicIntentModernCATs(uint64_t a1)
{
  uint64_t result = qword_7A078;
  if (!qword_7A078) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencySuicidePreventionBasicIntentModernCATs);
  }
  return result;
}

uint64_t sub_23A08(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B8D8);
}

uint64_t sub_23A44()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_7A08C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9CF8);
  return sub_23B54(v2, v3);
}

uint64_t sub_23A98()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_7A094);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_9F60(v1, (uint64_t)sub_9E08);
  return sub_23CAC(v2, v3);
}

uint64_t sub_23AEC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc(dword_7A09C);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E08;
  return sub_23DDC(a1, a2, a3);
}

uint64_t sub_23B54(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_23B98()
{
  uint64_t v1 = sub_3974(&qword_78BB8);
  uint64_t v2 = sub_77F4(v1, 128LL);
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_56FB0;
  strcpy((char *)(v2 + 32), "webSearchQuery");
  *(_BYTE *)(v2 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v2, v3, &qword_78970);
  uint64_t v4 = sub_4508();
  uint64_t v5 = sub_9F30(v4);
  if (v6)
  {
    sub_9F58(v5, &qword_78970);
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  char v8 = *(_BYTE *)(v0 + 64);
  *(void *)(v2 + 80) = 0xD000000000000012LL;
  *(void *)(v2 + 88) = 0x800000000005ABB0LL;
  *(void *)(v2 + 120) = &type metadata for Bool;
  *(_BYTE *)(v2 + 96) = v8;
  uint64_t v9 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 48) = v9;
  void *v9 = v0;
  v9[1] = sub_965C;
  uint64_t v10 = sub_9E44(0xD000000000000030LL);
  return sub_9E10(v10, v11, v12, v13);
}

uint64_t sub_23CAC(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 64) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v2;
  uint64_t v4 = sub_3974(&qword_78970);
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_9E84(v4);
  sub_4588();
  return sub_451C();
}

uint64_t sub_23CF0()
{
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = (__n128 *)sub_77F4(v2, 128LL);
  *(void *)(v1 + 40) = v3;
  uint64_t v4 = sub_9EAC(v3, (__n128)xmmword_56FB0);
  sub_9EF0((uint64_t)v4, v5, &qword_78970);
  uint64_t v6 = sub_4508();
  uint64_t v7 = sub_9F30(v6);
  if (v8)
  {
    sub_9F58(v7, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unsigned __int8 v10 = *(_BYTE *)(v1 + 64);
  v3[5].n128_u64[0] = 0xD000000000000012LL;
  v3[5].n128_u64[1] = 0x800000000005ABB0LL;
  v3[7].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v3[6].n128_u8[0] = v10;
  uint64_t v11 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_9808;
  uint64_t v12 = sub_9E44(0xD000000000000031LL);
  return sub_9E10(v12, v13, v14, v15);
}

uint64_t sub_23DDC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = a2;
  *(void *)(v4 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v3;
  *(_BYTE *)(v4 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a3;
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = sub_3974(&qword_78970);
  *(void *)(v4 + 40) = sub_9E84(v5);
  sub_4588();
  return sub_451C();
}

uint64_t sub_23E24()
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = sub_3974(&qword_78BB8);
  uint64_t v4 = (__n128 *)sub_77F4(v3, 176LL);
  *(void *)(v1 + 48) = v4;
  uint64_t v5 = sub_9EAC(v4, (__n128)xmmword_56FC0);
  sub_9EF0((uint64_t)v5, v6, &qword_78970);
  uint64_t v7 = sub_4508();
  uint64_t v8 = sub_5FE0(v2, 1LL, v7);
  if ((_DWORD)v8 == 1)
  {
    sub_9F58(v8, &qword_78970);
    _OWORD *v0 = 0u;
    v0[1] = 0u;
  }

  else
  {
    uint64_t v9 = sub_9EFC();
    sub_9E98((uint64_t)v9);
  }

  unint64_t v10 = *(void *)(v1 + 24);
  v4[5].n128_u64[0] = 0x65626D754E67726FLL;
  v4[5].n128_u64[1] = 0xE900000000000072LL;
  uint64_t v11 = 0LL;
  if (v10)
  {
    uint64_t v11 = type metadata accessor for DialogPhoneNumber(0LL);
  }

  else
  {
    v4[6].n128_u64[1] = 0LL;
    v4[7].n128_u64[0] = 0LL;
  }

  unsigned __int8 v12 = *(_BYTE *)(v1 + 72);
  v4[6].n128_u64[0] = v10;
  v4[8].n128_u64[1] = 0x800000000005ABB0LL;
  v4[10].n128_u64[1] = (unint64_t)&type metadata for Bool;
  v4[9].n128_u8[0] = v12;
  uint64_t v13 = *((unsigned int *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:) + 1);
  v4[7].n128_u64[1] = v11;
  v4[8].n128_u64[0] = 0xD000000000000012LL;
  swift_retain(v10);
  uint64_t v14 = (void *)swift_task_alloc(v13);
  *(void *)(v1 + 56) = v14;
  void *v14 = v1;
  v14[1] = sub_99F8;
  uint64_t v15 = sub_9E44(0xD00000000000002ELL);
  return sub_9E10(v15, v16, v17, v18);
}

uint64_t sub_23F80()
{
  return type metadata accessor for EmergencySuicidePreventionBasicIntentModernCATs(0LL);
}

uint64_t type metadata accessor for DomesticViolenceModernCATs(uint64_t a1)
{
  uint64_t result = qword_7A0F8;
  if (!qword_7A0F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DomesticViolenceModernCATs);
  }
  return result;
}

uint64_t sub_23FC0(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B8E8);
}

uint64_t sub_23FFC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A10C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9CF8;
  return sub_2409C(a1);
}

uint64_t sub_2404C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A114);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9E08;
  return sub_241D8(a1);
}

uint64_t sub_2409C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_240DC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  strcpy((char *)(v3 + 32), "websearchQuery");
  *(_BYTE *)(v3 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  uint64_t v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A4F8;
  return sub_9E10(0xD000000000000025LL, 0x800000000005B690LL, v3, v10);
}

uint64_t sub_241D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_24218()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v3 + 40) = 0xE700000000000000LL;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  uint64_t v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A6B4;
  return sub_9E10(0xD000000000000026LL, 0x800000000005B660LL, v3, v10);
}

uint64_t sub_24308()
{
  return type metadata accessor for DomesticViolenceModernCATs(0LL);
}

void sub_24310(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v25)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, void *, void *, void *, uint64_t, uint64_t);
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_s *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_s *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  void *v79;
  _BYTE v80[40];
  uint64_t v81;
  void v82[5];
  _BYTE v83[128];
  _BYTE v84[128];
  void v85[16];
  _BYTE v86[128];
  void v87[16];
  __int128 v88[7];
  _BYTE v89[136];
  uint64_t v4 = v3;
  uint64_t v78 = (uint64_t *)a2;
  uint64_t v79 = a3;
  sub_25B84(a2, (uint64_t)v83);
  sub_25B84((uint64_t)v83, (uint64_t)v89);
  os_log_type_t v74 = type metadata accessor for OutputFlow(0LL);
  sub_6764();
  __chkstk_darwin(v5);
  sub_6750();
  uint64_t v73 = v6;
  uint64_t v77 = type metadata accessor for Logger(0LL);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  sub_66F4();
  uint64_t v76 = v7;
  sub_67EC();
  __chkstk_darwin(v8);
  uint64_t v67 = (uint64_t)&v66 - v9;
  sub_3974(&qword_7A168);
  sub_6764();
  __chkstk_darwin(v10);
  sub_6750();
  os_log_type_t v71 = v11;
  uint64_t v70 = sub_131A0();
  sub_6764();
  __chkstk_darwin(v12);
  sub_66F4();
  uint64_t v68 = v13;
  sub_67EC();
  __chkstk_darwin(v14);
  uint64_t v69 = (uint64_t)&v66 - v15;
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v16);
  sub_66F4();
  uint64_t v72 = v17;
  sub_67EC();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = v3[13];
  uint64_t v22 = v3[14];
  sub_3324(v4 + 10, v4[13]);
  uint64_t v23 = v3[3];
  uint64_t v24 = v3[4];
  sub_3324(v4, v4[3]);
  uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 8);
  uint64_t v26 = v23;
  uint64_t v27 = (uint64_t)v20;
  uint64_t v28 = v78;
  uint64_t v29 = v24;
  uint64_t v30 = v75;
  v25(v87, v26, v29);
  uint64_t v31 = *(void (**)(uint64_t *, void *, void *, void *, uint64_t, uint64_t))(v22 + 56);
  uint64_t v32 = v79;
  uint64_t v79 = v3 + 5;
  uint64_t v33 = v76;
  v31(v28, v32, v3 + 5, v87, v21, v22);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v87);
  sub_2580C((uint64_t)v28, (uint64_t)v86, &qword_79098);
  uint64_t v34 = sub_E438((uint64_t)v86);
  if ((_DWORD)v34 == 1) {
    goto LABEL_4;
  }
  uint64_t v21 = v30;
  sub_EE84(v87, v86);
  sub_2580C((uint64_t)v89, (uint64_t)v85, &qword_79098);
  sub_6408(v85);
  uint64_t v35 = v71;
  sub_248E4(v87, v27, v71);
  if (sub_5FE0(v35, 1LL, v70) == 1)
  {
    sub_E864(v28);
    sub_E988(v35, &qword_7A168);
    uint64_t v30 = v21;
LABEL_4:
    uint64_t v36 = Logger.emergency.unsafeMutableAddressor(v34);
    sub_3CC8(v36, (uint64_t)v80);
    uint64_t v37 = sub_25BFC(v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16));
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    uint64_t v39 = static os_log_type_t.debug.getter();
    if (sub_182AC(v39))
    {
      *(_WORD *)sub_8D14() = 0;
      sub_25B78(&dword_0, v38, (os_log_type_t)v21, "Emergency followup flow preparing promptless output");
      sub_25B5C();
    }

    sub_25C14(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    uint64_t v40 = v72;
    sub_257D0(v27, v72, &qword_78958);
    uint64_t v41 = v4[3];
    uint64_t v42 = v4[4];
    sub_3324(v4, v41);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v42 + 8))(v85, v41, v42);
    uint64_t v43 = sub_3324(v79, v4[8]);
    sub_EE24(v88, v43);
    uint64_t v44 = sub_252B8((uint64_t)v28, v85, v88);
    os_log_type_t v45 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
    sub_1FD5C(v45, (uint64_t)v82);
    sub_2580C((uint64_t)v28, (uint64_t)v84, &qword_79098);
    if (sub_E438((uint64_t)v84) == 1)
    {
      uint64_t v46 = 0LL;
    }

    else
    {
      uint64_t v47 = sub_EE84(v85, v84);
      uint64_t v46 = EmergencyOrganizationInfo.asRREntities()(v47);
    }

    uint64_t v48 = v73;
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v40, v44, v82, v46);
    sub_11D44( &qword_78960,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
    Flow.eraseToAnyFlow()(v74);
    uint64_t v49 = v48;
    unint64_t v50 = (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow;
    goto LABEL_13;
  }

  unint64_t v51 = v35;
  uint64_t v52 = v69;
  uint64_t v53 = sub_25748(v51, v69);
  uint64_t v54 = Logger.emergency.unsafeMutableAddressor(v53);
  sub_3CC8(v54, (uint64_t)&v81);
  uint64_t v55 = sub_25BFC(v67, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16));
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  if (sub_182AC(v57))
  {
    *(_WORD *)sub_8D14() = 0;
    sub_25B78(&dword_0, v56, (os_log_type_t)v21, "Emergency followup flow preparing for confirmation");
    sub_25B5C();
  }

  int v58 = sub_25C14(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_1FD5C(v58, (uint64_t)v88);
  sub_60A4((uint64_t)v79, (uint64_t)v82);
  sub_60E4((uint64_t)(v4 + 15), (uint64_t)v80);
  uint64_t v59 = sub_6120((uint64_t)v82, v82[3]);
  __chkstk_darwin(v59);
  uint64_t v61 = (char *)&v66 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v62 + 16))(v61);
  uint64_t v63 = v68;
  sub_2578C(v52, v68);
  sub_EE24(v84, v61);
  os_log_type_t v64 = sub_54D28(v87, v63, v88, v84, (uint64_t)v80, 0, 0LL, 0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
  *(void *)&v88[0] = v64;
  uint64_t v65 = type metadata accessor for EmergencyConfirmationFlow();
  sub_11D44( &qword_78B38,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
  Flow.eraseToAnyFlow()(v65);
  swift_release(v64);
  unint64_t v50 = type metadata accessor for ConfirmationFlowConfigModel;
  uint64_t v49 = v52;
LABEL_13:
  sub_EAF0(v49, v50);
  sub_E988(v27, &qword_78958);
  sub_7DF0();
}

uint64_t sub_248E4@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v51)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void v64[2];
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void v75[2];
  uint64_t v76[3];
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[136];
  void v80[5];
  _BYTE v81[136];
  uint64_t v4 = v3;
  uint64_t v69 = a2;
  uint64_t v73 = a3;
  sub_EE84(v81, a1);
  uint64_t v6 = sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v7);
  sub_66F4();
  uint64_t v70 = v8;
  sub_67EC();
  __chkstk_darwin(v9);
  uint64_t v68 = (uint64_t)v64 - v10;
  sub_67EC();
  __chkstk_darwin(v11);
  uint64_t v67 = (uint64_t)v64 - v12;
  sub_3974((uint64_t *)&unk_7AE80);
  sub_6764();
  __chkstk_darwin(v13);
  sub_6750();
  os_log_type_t v71 = v14;
  uint64_t v66 = (void *)type metadata accessor for AppPunchOutFlow(0LL);
  sub_6764();
  __chkstk_darwin(v15);
  sub_6750();
  uint64_t v65 = v16;
  sub_3974(&qword_7A170);
  sub_6764();
  __chkstk_darwin(v17);
  sub_66F4();
  uint64_t v72 = v18;
  sub_67EC();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)v64 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v64 - v23;
  uint64_t v26 = v3[3];
  uint64_t v25 = v3[4];
  sub_3324(v3, v26);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v80, v26, v25);
  sub_25BF0((uint64_t)v24, 1LL);
  uint64_t v27 = v3 + 10;
  uint64_t v28 = v3[14];
  sub_1FE94(v4 + 10, v4[13]);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8);
  os_log_type_t v74 = a1;
  uint64_t v30 = sub_25BE4((uint64_t)a1, (uint64_t)v80, v29);
  if ((v30 & 1) != 0)
  {
    sub_1FD5C(v30, (uint64_t)v75);
    sub_60A4((uint64_t)(v3 + 5), (uint64_t)&v77);
    sub_EE84(v79, v81);
    sub_180EC((uint64_t)v79);
    sub_E9BC(v79, &v78);
    uint64_t v31 = v74;
    sub_6408(v74);
    sub_E9F8();
    os_log_type_t v71 = Flow.eraseToAnyFlow()(&type metadata for CallFlow);
    sub_EA34((uint64_t)v75);
    uint64_t v32 = sub_3324(v3 + 5, v3[8]);
    sub_25BA0((uint64_t)v32);
    sub_2396C();
    sub_EE0C();
    sub_25B6C();
    sub_25BF0((uint64_t)v22, 0LL);
    sub_25B84((uint64_t)v22, (uint64_t)v24);
    uint64_t v33 = v3[13];
    uint64_t v34 = v3[14];
    sub_1FE94(v27, v33);
    char v35 = (*(uint64_t (**)(void *, void *, uint64_t, uint64_t))(v34 + 32))(v31, v80, v33, v34);
    char v36 = 0;
    unint64_t v37 = 2LL;
    goto LABEL_8;
  }

  v64[1] = v22;
  uint64_t v38 = v3[13];
  uint64_t v39 = v3[14];
  sub_1FE94(v3 + 10, v38);
  if ((sub_25BE4((uint64_t)v74, (uint64_t)v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 16)) & 1) == 0)
  {
    uint64_t v48 = v3[13];
    uint64_t v49 = v3[14];
    sub_1FE94(v27, v48);
    if (((*(uint64_t (**)(void *, void *, uint64_t, uint64_t))(v49 + 24))(v74, v80, v48, v49) & 1) == 0)
    {
      sub_E988((uint64_t)v24, &qword_7A170);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v80);
      goto LABEL_12;
    }

    uint64_t v50 = v74[13];
    os_log_type_t v71 = v74[12];
    sub_25BAC();
    unint64_t v51 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 16);
    uint64_t v66 = v3 + 10;
    swift_bridgeObjectRetain(v50);
    v51(v76, v49, v39);
    v75[0] = v71;
    v75[1] = v50;
    sub_18188();
    os_log_type_t v71 = Flow.eraseToAnyFlow()(&type metadata for WebsearchFlow);
    sub_181C4((uint64_t)v75);
    uint64_t v52 = sub_3324(v3 + 5, v3[8]);
    sub_25BA0((uint64_t)v52);
    sub_25C08();
    sub_EE0C();
    sub_25B6C();
    char v36 = 1;
    sub_25B30();
    uint64_t v53 = v3[14];
    sub_1FE94(v66, v3[13]);
    char v35 = sub_25B8C(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v53 + 48));
    unint64_t v37 = 4LL;
LABEL_8:
    uint64_t v54 = v72;
    sub_257D0((uint64_t)v24, v72, &qword_7A170);
    if (sub_5FE0(v54, 1LL, v6) != 1)
    {
      uint64_t v55 = v67;
      sub_25BDC(v54, v67);
      uint64_t v56 = v68;
      sub_257D0(v69, v68, &qword_78958);
      os_log_type_t v57 = v70;
      sub_25BDC(v55, v70);
      sub_E988((uint64_t)v24, &qword_7A170);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v80);
      int v58 = v73;
      sub_25BDC(v56, v73);
      uint64_t v59 = (int *)sub_131A0();
      sub_25BDC(v57, v58 + v59[5]);
      *(void *)(v58 + v59[6]) = v71;
      *(void *)(v58 + v59[7]) = v37;
      *(_BYTE *)(v58 + v59[8]) = v36;
      *(_BYTE *)(v58 + v59[9]) = v35 & 1;
      uint64_t v60 = v58;
      uint64_t v61 = 0LL;
      uint64_t v62 = (uint64_t)v59;
      return sub_3F18(v60, v61, 1LL, v62);
    }

    swift_release(v71);
    sub_257FC(v37);
    sub_25B6C();
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v80);
    sub_E988(v54, &qword_7A170);
LABEL_12:
    uint64_t v63 = v73;
    uint64_t v62 = sub_131A0();
    uint64_t v60 = v63;
    uint64_t v61 = 1LL;
    return sub_3F18(v60, v61, 1LL, v62);
  }

  sub_25BAC();
  uint64_t v40 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v39 + 16))(v75, v38, v39);
  uint64_t v41 = v71;
  EmergencyOrganizationInfo.websiteURL.getter(v40);
  uint64_t v42 = type metadata accessor for URL(0LL);
  uint64_t result = sub_5FE0(v41, 1LL, v42);
  if ((_DWORD)result != 1)
  {
    uint64_t v44 = v65;
    AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v75, v41, 0LL, 0LL);
    sub_11D44( &qword_79828,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
    os_log_type_t v71 = Flow.eraseToAnyFlow()(v66);
    sub_EAF0(v44, (uint64_t (*)(void))&type metadata accessor for AppPunchOutFlow);
    os_log_type_t v45 = sub_3324(v4 + 5, v4[8]);
    sub_25BA0((uint64_t)v45);
    sub_25C08();
    sub_EE0C();
    sub_25B6C();
    sub_25B30();
    uint64_t v46 = v4[13];
    uint64_t v47 = v4[14];
    sub_1FE94(v27, v46);
    char v35 = sub_25B8C(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v47 + 40));
    char v36 = 2;
    unint64_t v37 = 3LL;
    goto LABEL_8;
  }

  __break(1u);
  return result;
}

void sub_24EE8(uint64_t a1, void *a2)
{
}

void sub_24EFC(uint64_t a1, void *a2)
{
}

void sub_24F10(uint64_t a1, void *a2, void (*a3)(void *), uint64_t a4)
{
  *(void *)&__int128 v39 = a4;
  uint64_t v40 = a1;
  uint64_t v41 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = &qword_78958;
  uint64_t v10 = sub_3974(&qword_78958);
  sub_6764();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v39 - v15;
  os_log_type_t v45 = &type metadata for EmergencyCATProvider;
  uint64_t v46 = &off_6FB48;
  v44[0] = swift_allocObject(&unk_6E860, 128LL, 7LL);
  sub_EE24((void *)(v44[0] + 16LL), a2);
  uint64_t v17 = sub_3324(v44, (uint64_t)&type metadata for EmergencyCATProvider)[1];
  swift_retain(v17);
  uint64_t v18 = sub_3A40(a2);
  a3(v18);
  swift_release(v17);
  uint64_t v19 = Result<>.firstPrint.getter(v10);
  uint64_t v21 = v20;
  sub_E988((uint64_t)v16, &qword_78958);
  if (v21)
  {
    uint64_t v23 = sub_3324(v44, (uint64_t)v45);
    swift_retain(v23[12]);
    sub_4808();
    sub_EE0C();
    uint64_t v9 = (uint64_t *)Result<>.firstPrint.getter(v10);
    uint64_t v25 = v24;
    sub_E988((uint64_t)v14, &qword_78958);
    if (v25)
    {
      uint64_t v26 = sub_3974(&qword_791E8);
      uint64_t inited = swift_initStackObject(v26, &v43);
      uint64_t v41 = (uint64_t)v9;
      uint64_t v28 = (void *)inited;
      __int128 v39 = xmmword_56FA0;
      *(_OWORD *)(inited + 16) = xmmword_56FA0;
      swift_bridgeObjectRetain(v21);
      v28[4] = DirectInvocationURI.payloadKey.getter(2LL);
      void v28[5] = v29;
      v28[9] = &type metadata for String;
      v28[6] = 0x656D7269666E6F63LL;
      v28[7] = 0xE900000000000064LL;
      uint64_t v30 = sub_25BBC((uint64_t)v28);
      v47[0] = v19;
      v47[1] = v21;
      v47[2] = 0xD000000000000035LL;
      v47[3] = 0x800000000005B240LL;
      v47[4] = v30;
      uint64_t v31 = swift_initStackObject(v26, &v42);
      *(_OWORD *)(v31 + 16) = v39;
      swift_bridgeObjectRetain(v25);
      *(void *)(v31 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = DirectInvocationURI.payloadKey.getter(2LL);
      *(void *)(v31 + 40) = v32;
      *(void *)(v31 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
      *(void *)(v31 + 48) = 0x64657463656A6572LL;
      *(void *)(v31 + 56) = 0xE800000000000000LL;
      uint64_t v33 = sub_25BBC(v31);
      v48[0] = v41;
      v48[1] = v25;
      v48[2] = 0xD000000000000035LL;
      v48[3] = 0x800000000005B240LL;
      v48[4] = v33;
      makeConfirmationButtons(confirmButton:rejectButton:device:)(v47, v48, v40);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease_n(v21, 2LL);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease_n(v25, 2LL);
      goto LABEL_8;
    }

    uint64_t v22 = swift_bridgeObjectRelease(v21);
  }

  uint64_t v34 = Logger.emergency.unsafeMutableAddressor(v22);
  sub_3CC8(v34, (uint64_t)v48);
  uint64_t v35 = v41;
  uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v34, v41);
  unint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (sub_182AC(v38))
  {
    *(_WORD *)sub_8D14() = 0;
    sub_25B78(&dword_0, v37, (os_log_type_t)v9, (const char *)v39);
    sub_25B5C();
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v35);
LABEL_8:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v44);
  sub_7DF0();
}

void sub_252A4(uint64_t a1, void *a2)
{
}

void *sub_252B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v50 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v50 - v14;
  unint64_t v51 = &type metadata for EmergencyCATProvider;
  uint64_t v52 = &off_6FB48;
  v50[0] = swift_allocObject(&unk_6E860, 128LL, 7LL);
  memcpy((void *)(v50[0] + 16LL), a3, 0x70uLL);
  sub_2580C(a1, (uint64_t)v53, &qword_79098);
  if (sub_E438((uint64_t)v53) == 1)
  {
    uint64_t v16 = sub_3A40(a3);
    uint64_t v17 = Logger.emergency.unsafeMutableAddressor(v16);
    swift_beginAccess(v17, v54, 0LL, 0LL);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v17, v6);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "orgInfo is nil. Not making snippets.", v21, 2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }

  else
  {
    memcpy(v54, v53, sizeof(v54));
    uint64_t v22 = a2[3];
    uint64_t v23 = a2[4];
    sub_3324(a2, v22);
    sub_3A40(a3);
    char v24 = dispatch thunk of DeviceState.isHomePod.getter(v22, v23);
    sub_60A4((uint64_t)a2, (uint64_t)__dst);
    if ((v24 & 1) != 0)
    {
      uint64_t v25 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(__dst);
    }

    else
    {
      uint64_t v26 = __dst[3];
      uint64_t v27 = __dst[4];
      sub_3324(__dst, __dst[3]);
      char v28 = dispatch thunk of DeviceState.isAppleTV.getter(v26, v27);
      uint64_t v25 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(__dst);
      if ((v28 & 1) == 0)
      {
        uint64_t v36 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v25);
        if ((v36 & 1) != 0)
        {
          unint64_t v37 = sub_3324(v50, (uint64_t)v51);
          memcpy(__dst, v37, 0x70uLL);
          os_log_type_t v38 = sub_23538;
          __int128 v39 = "Failed to execute label CATs for makeCallCancelButtons";
        }

        else
        {
          uint64_t v40 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v36);
          if ((v40 & 1) != 0)
          {
            uint64_t v41 = sub_3324(v50, (uint64_t)v51);
            memcpy(__dst, v41, 0x70uLL);
            os_log_type_t v38 = sub_2392C;
            __int128 v39 = "Failed to execute label CATs for makeOpenCancelButtons";
          }

          else
          {
            if ((v54[13] & 0x2000000000000000LL) != 0) {
              uint64_t v42 = HIBYTE(v54[13]) & 0xFLL;
            }
            else {
              uint64_t v42 = v54[12] & 0xFFFFFFFFFFFFLL;
            }
            if (!v42)
            {
              uint64_t v45 = Logger.emergency.unsafeMutableAddressor(v40);
              swift_beginAccess(v45, __dst, 0LL, 0LL);
              uint64_t v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v45, v6);
              uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
              os_log_type_t v48 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v47, v48))
              {
                uint64_t v49 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)uint64_t v49 = 0;
                _os_log_impl(&dword_0, v47, v48, "orgInfo is in an unknown state. Not making snippets.", v49, 2u);
                swift_slowDealloc(v49, -1LL, -1LL);
              }

              (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
              goto LABEL_11;
            }

            uint64_t v43 = sub_3324(v50, (uint64_t)v51);
            memcpy(__dst, v43, 0x70uLL);
            os_log_type_t v38 = sub_2394C;
            __int128 v39 = "Failed to execute label CATs for makeSearchCancelButtons";
          }
        }

        sub_24F10((uint64_t)a2, __dst, (void (*)(void *))v38, (uint64_t)v39);
        uint64_t v34 = v44;
        goto LABEL_12;
      }
    }

    uint64_t v29 = Logger.emergency.unsafeMutableAddressor(v25);
    swift_beginAccess(v29, __dst, 0LL, 0LL);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v29, v6);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_0, v31, v32, "Device is HomePod or AppleTV. Not making snippets.", v33, 2u);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }

LABEL_11:
  uint64_t v34 = &_swiftEmptyArrayStorage;
LABEL_12:
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v50);
  return v34;
}

  uint64_t v22 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v30);
  sub_3CC8((uint64_t)v22, (uint64_t)v47);
  sub_23430((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_1FD2C();
  uint64_t v31 = sub_67D4();
  if (!os_log_type_enabled(v22, v31))
  {
    uint64_t v25 = 0LL;
    goto LABEL_16;
  }

  os_log_type_t v32 = (_WORD *)sub_3CD4(2LL);
  sub_1FE64(v32);
  sub_EDA8(&dword_0, v22, v31, "No prompt needed for this device. Not prompting for websearch followup.", a2);
  uint64_t v25 = 0LL;
LABEL_13:
  sub_3CA0((uint64_t)a2);
LABEL_16:

  sub_3D270(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  return v25;
}

uint64_t sub_25748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_2578C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_257D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_25BCC(a1, a2, a3);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_6774();
}

unint64_t sub_257FC(unint64_t result)
{
  if (result != 6) {
    return sub_128E4(result);
  }
  return result;
}

void sub_2580C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_25BCC(a1, a2, a3);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_6774();
}

uint64_t sub_25838()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t destroy for EmergencyFlowFollowupProvider(void *a1)
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1 + 15);
}

_OWORD *initializeWithCopy for EmergencyFlowFollowupProvider(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  __int128 v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  __int128 v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  return a1;
}

void *assignWithCopy for EmergencyFlowFollowupProvider(void *a1, void *a2)
{
  return a1;
}

void *initializeWithTake for EmergencyFlowFollowupProvider(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

uint64_t assignWithTake for EmergencyFlowFollowupProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 72);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 80));
  __int128 v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 112);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyFlowFollowupProvider(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 160))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyFlowFollowupProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 160) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyFlowFollowupProvider()
{
  return &type metadata for EmergencyFlowFollowupProvider;
}

void sub_25B30()
{
}

uint64_t sub_25B5C()
{
  return swift_slowDealloc(v0, -1LL, -1LL);
}

void sub_25B6C()
{
}

void sub_25B78(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

void sub_25B84(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_25B8C@<X0>(uint64_t (*a1)(void, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(*(void *)(v1 + 88), v4 - 256, v2, v3);
}

uint64_t sub_25BA0(uint64_t a1)
{
  return swift_retain(*(void *)(a1 + 8));
}

void *sub_25BAC()
{
  return sub_3324(v0, v0[3]);
}

uint64_t sub_25BBC(uint64_t a1)
{
  return Dictionary.init(dictionaryLiteral:)(a1, v1, v2, v3);
}

uint64_t sub_25BCC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_3974(a3);
}

void sub_25BDC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_25BE4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3, v4);
}

uint64_t sub_25BF0(uint64_t a1, uint64_t a2)
{
  return sub_3F18(a1, a2, 1LL, v2);
}

uint64_t sub_25BFC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t sub_25C08()
{
  return sub_2398C();
}

uint64_t sub_25C14@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t type metadata accessor for EmergencyGeneralEmergencyCATs(uint64_t a1)
{
  uint64_t result = qword_7A178;
  if (!qword_7A178) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyGeneralEmergencyCATs);
  }
  return result;
}

uint64_t sub_25C58(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B8F8);
}

uint64_t sub_25C94()
{
  return sub_2004C(58LL, 0x800000000005BF00LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_25CB4(char a1)
{
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = swift_allocObject(v2, 80LL, 7LL);
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0xD00000000000001BLL;
  *(void *)(v3 + 40) = 0x800000000005BEE0LL;
  *(void *)(v3 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v3 + 48) = a1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000022LL, 0x800000000005BEB0LL, v3);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_25D54()
{
  return sub_2004C(33LL, 0x800000000005BE80LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_25D74()
{
  return sub_2004C(48LL, 0x800000000005BE40LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_25D94()
{
  return type metadata accessor for EmergencyGeneralEmergencyCATs(0LL);
}

uint64_t getEnumTagSinglePayload for EmergencyFlowError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for EmergencyFlowError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_25E70 + 4 * byte_58865[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_25EA4 + 4 * byte_58860[v4]))();
}

uint64_t sub_25EA4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_25EAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x25EB4LL);
  }
  return result;
}

uint64_t sub_25EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x25EC8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_25ECC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_25ED4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyFlowError()
{
  return &type metadata for EmergencyFlowError;
}

unint64_t sub_25F08()
{
  unint64_t result = qword_7A1C8;
  if (!qword_7A1C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5892C, &type metadata for EmergencyFlowError);
    atomic_store(result, (unint64_t *)&qword_7A1C8);
  }

  return result;
}

uint64_t sub_25F54(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  sub_EDD8();
  __chkstk_darwin(v4);
  sub_6750();
  uint64_t v6 = sub_EE14(v5);
  uint64_t v108 = type metadata accessor for EmergencyDialogAct(v6);
  sub_EDD8();
  __chkstk_darwin(v7);
  sub_66F4();
  uint64_t v122 = v8;
  __chkstk_darwin(v9);
  uint64_t v11 = sub_EE14((uint64_t)v103 - v10);
  uint64_t v113 = type metadata accessor for USOParse(v11);
  uint64_t v112 = *(void *)(v113 - 8);
  sub_EDD8();
  __chkstk_darwin(v12);
  sub_6750();
  uint64_t v14 = sub_EE14(v13);
  uint64_t v123 = type metadata accessor for Parse(v14);
  uint64_t v120 = *(void *)(v123 - 8);
  sub_EDD8();
  __chkstk_darwin(v15);
  sub_6750();
  uint64_t v121 = v16;
  uint64_t v17 = type metadata accessor for Input(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  os_log_type_t v20 = (char *)v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6820();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  sub_66F4();
  uint64_t v116 = v23;
  __chkstk_darwin(v24);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v25);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v26);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v27);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v28);
  sub_EE64();
  sub_ED8C();
  uint64_t v30 = __chkstk_darwin(v29);
  os_log_type_t v32 = (char *)v103 - v31;
  uint64_t v33 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v30);
  sub_3CC8((uint64_t)v33, (uint64_t)v131);
  uint64_t v34 = *(void (**)(void, void, void))(v22 + 16);
  uint64_t v118 = v33;
  uint64_t v119 = v34;
  uint64_t v124 = v21;
  v34(v32, v33, v21);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v117 = a1;
  uint64_t v36 = v35(v20, a1, v17);
  Logger.logObject.getter(v36);
  os_log_type_t v37 = sub_EEB4();
  if (os_log_type_enabled(v33, v37))
  {
    uint64_t v38 = sub_3CD4(12LL);
    uint64_t v104 = v2;
    __int128 v39 = (uint8_t *)v38;
    uint64_t v40 = sub_3CD4(32LL);
    v103[1] = v22;
    uint64_t v41 = v40;
    v128[0] = v40;
    *(_DWORD *)__int128 v39 = 136315138;
    v103[0] = v39 + 4;
    sub_EB44( &qword_790C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter(v17, v42);
    unint64_t v45 = v44;
    uint64_t v125 = sub_543A4(v43, v44, v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v103[0], v39 + 12);
    swift_bridgeObjectRelease(v45);
    sub_27FF4();
    sub_67F8(&dword_0, v33, v37, "#StopSirenFlow onInput: %s", v39);
    sub_67DC(v41);
    sub_3CA0(v41);
    uint64_t v46 = (uint64_t)v39;
    uint64_t v2 = v104;
    sub_3CA0(v46);
  }

  else
  {
    sub_27FF4();
  }

  sub_27F48((uint64_t)v32);
  sub_3324((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t v47 = sub_28028();
  v48(v47);
  uint64_t v49 = v129;
  sub_3324(v128, (uint64_t)v129);
  uint64_t v50 = sub_28028();
  dispatch thunk of DeviceState.isWatch.getter(v50, v51);
  uint64_t v52 = sub_28014();
  uint64_t v53 = v122;
  uint64_t v54 = (uint64_t)v118;
  if ((v49 & 1) == 0)
  {
    sub_3CC8((uint64_t)v118, (uint64_t)v128);
    uint64_t v63 = v116;
    sub_27EA0(v116);
    sub_13124();
    os_log_type_t v64 = sub_EEB4();
    if (sub_EDE4(v64))
    {
      uint64_t v65 = (_WORD *)sub_8D14();
      sub_182E4(v65);
      sub_18240(&dword_0, v66, v67, "#StopSirenFlow Not on watch. Flagging for remote execution.");
      sub_3CA0(v53);
    }

    sub_27F48(v63);
    *(_BYTE *)(v2 + 136) = 3;
    return 1LL;
  }

  uint64_t v55 = v121;
  Input.parse.getter(v52);
  int v56 = (*(uint64_t (**)(void *, uint64_t))(v120 + 88))(v55, v123);
  if (v56 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_3CC8(v54, (uint64_t)v128);
    uint64_t v57 = v115;
    sub_27EA0(v115);
    sub_13124();
    os_log_type_t v58 = sub_EEB4();
    if (sub_EDE4(v58))
    {
      uint64_t v59 = (_WORD *)sub_8D14();
      sub_182E4(v59);
      uint64_t v62 = "#StopSirenFlow onInput .NLv3IntentOnly";
LABEL_14:
      sub_18240(&dword_0, v60, v61, v62);
      sub_3CA0(v53);
      goto LABEL_15;
    }

    goto LABEL_15;
  }

  if (v56 == enum case for Parse.directInvocation(_:))
  {
    sub_3CC8(v54, (uint64_t)v128);
    uint64_t v57 = v110;
    sub_27EA0(v110);
    sub_13124();
    os_log_type_t v68 = sub_EEB4();
    if (sub_EDE4(v68))
    {
      uint64_t v69 = (_WORD *)sub_8D14();
      sub_182E4(v69);
      uint64_t v62 = "#StopSirenFlow onInput directInvocation";
      goto LABEL_14;
    }

LABEL_15:
    sub_27F48(v57);
    *(_BYTE *)(v2 + 136) = 2;
    (*(void (**)(void *, uint64_t))(v120 + 8))(v121, v123);
    return 1LL;
  }

  if (v56 == enum case for Parse.uso(_:))
  {
    os_log_type_t v71 = (os_log_s *)v121;
    (*(void (**)(void *, uint64_t))(v120 + 96))(v121, v123);
    (*(void (**)(uint64_t, os_log_s *, uint64_t))(v112 + 32))(v114, v71, v113);
    sub_3CC8(v54, (uint64_t)&v125);
    os_log_type_t v72 = v111;
    uint64_t v73 = sub_27EA0(v111);
    Logger.logObject.getter(v73);
    os_log_type_t v74 = sub_EEB4();
    if (sub_EDE4(v74))
    {
      uint64_t v75 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v75 = 0;
      _os_log_impl(&dword_0, v71, v72, "#StopSirenFlow onInput .uso", v75, 2u);
      sub_3CA0((uint64_t)v75);
    }

    uint64_t v76 = sub_27F48(v111);
    uint64_t v77 = v107;
    USOParse.userParse.getter(v76);
    unint64_t v129 = &type metadata for EmergencyFeatureFlagsKey;
    unint64_t v130 = sub_EA88();
    LOBYTE(v128[0]) = 2;
    isFeatureEnabled(_:)(v128);
    sub_28014();
    uint64_t v78 = v109;
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v77, v71 & 1);
    uint64_t v79 = *(unsigned __int8 *)(v78 + *(int *)(v108 + 24));
    if ((_DWORD)v79 != 35)
    {
      uint64_t v90 = EmergencySituation.rawValue.getter(v79);
      if (v90 == 0x6E65726973LL && v91 == 0xE500000000000000LL)
      {
        swift_bridgeObjectRelease(0xE500000000000000LL);
      }

      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)(v90, v91, 0x6E65726973LL, 0xE500000000000000LL, 0LL);
        sub_12FF0();
      }

      sub_27FE0();
      __asm { BR              X10 }
    }

    uint64_t v80 = sub_27FE0();
    sub_2804C(v80, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    sub_3CC8(v54, (uint64_t)v128);
    uint64_t v93 = v105;
    uint64_t v94 = sub_27EA0(v105);
    Logger.logObject.getter(v94);
    os_log_type_t v95 = sub_EEB4();
    if (sub_EDE4(v95))
    {
      uint64_t v97 = (_WORD *)sub_8D14();
      sub_182E4(v97);
      sub_18240(&dword_0, v98, v99, "#StopSirenFlow Received invalid input. Ignoring.");
      uint64_t v78 = v109;
      sub_3CA0(v53);
    }

    sub_27F48(v93);
    sub_27D20(v78, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    uint64_t v100 = sub_27F28();
    v102(v100, v101);
  }

  else
  {
    sub_3CC8(v54, (uint64_t)v128);
    uint64_t v81 = v106;
    uint64_t v82 = sub_27EA0(v106);
    os_log_type_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v84 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v86 = sub_3CD4(32LL);
      uint64_t v125 = v86;
      *(_DWORD *)uint64_t v85 = 136315138;
      LOBYTE(v12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 0;
      uint64_t v87 = String.init<A>(describing:)(&v127);
      unint64_t v89 = v88;
      uint64_t v127 = sub_543A4(v87, v88, &v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128, v85 + 4, v85 + 12);
      swift_bridgeObjectRelease(v89);
      sub_67F8(&dword_0, v83, v84, "%s", v85);
      sub_67DC(v86);
      sub_3CA0(v86);
      sub_3CA0((uint64_t)v85);
    }

    sub_27F48(v81);
    (*(void (**)(void *, uint64_t))(v120 + 8))(v121, v123);
  }

  return 0LL;
}

void sub_26838()
{
  uint64_t v2 = sub_12FF0();
  sub_2804C(v2, &type metadata accessor for EmergencyDialogAct);
  if ((v0 & 1) != 0)
  {
    uint64_t v3 = sub_27D20(v1, &type metadata accessor for EmergencyDialogAct);
    uint64_t v4 = sub_27F28(v3);
    v5(v4);
    JUMPOUT(0x26410LL);
  }

  JUMPOUT(0x267B0LL);
}

void sub_2684C()
{
  uint64_t v2 = sub_12FF0();
  sub_2804C(v2, &type metadata accessor for EmergencyDialogAct);
  if ((v0 & 1) != 0)
  {
    uint64_t v3 = sub_27D20(v1, &type metadata accessor for EmergencyDialogAct);
    uint64_t v4 = sub_27F28(v3);
    v5(v4);
    JUMPOUT(0x26410LL);
  }

  JUMPOUT(0x267B0LL);
}

void sub_26860()
{
  uint64_t v2 = sub_12FF0();
  sub_2804C(v2, &type metadata accessor for EmergencyDialogAct);
  if ((v0 & 1) != 0)
  {
    uint64_t v3 = sub_27D20(v1, &type metadata accessor for EmergencyDialogAct);
    uint64_t v4 = sub_27F28(v3);
    v5(v4);
    JUMPOUT(0x26410LL);
  }

  JUMPOUT(0x267B0LL);
}

void sub_26874()
{
  uint64_t v0 = swift_bridgeObjectRelease(0xE700000000000000LL);
  sub_2804C(v0, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  JUMPOUT(0x268FCLL);
}

void sub_2688C()
{
  uint64_t v2 = sub_12FF0();
  sub_2804C(v2, &type metadata accessor for EmergencyDialogAct);
  if ((v0 & 1) != 0)
  {
    uint64_t v3 = sub_27D20(v1, &type metadata accessor for EmergencyDialogAct);
    uint64_t v4 = sub_27F28(v3);
    v5(v4);
    JUMPOUT(0x26410LL);
  }

  JUMPOUT(0x267B0LL);
}

void sub_268A8()
{
}

uint64_t sub_2691C(uint64_t a1)
{
  v2[79] = v1;
  v2[78] = a1;
  sub_3974(&qword_78958);
  v2[80] = sub_45A0();
  v2[81] = sub_45A0();
  uint64_t v3 = type metadata accessor for OutputFlow(0LL);
  v2[82] = v3;
  v2[83] = sub_3C88(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for URL(0LL);
  v2[84] = sub_3C88(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for AppPunchOutFlow(0LL);
  v2[85] = v5;
  v2[86] = sub_3C88(*(void *)(v5 - 8));
  uint64_t v6 = sub_3974((uint64_t *)&unk_7A630);
  v2[87] = sub_3C88(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for ActivityType(0LL);
  v2[88] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[89] = v8;
  v2[90] = sub_3C88(v8);
  uint64_t v9 = sub_6820();
  v2[91] = v9;
  v2[92] = *(void *)(v9 - 8);
  v2[93] = sub_45A0();
  v2[94] = sub_45A0();
  v2[95] = sub_45A0();
  v2[96] = sub_45A0();
  v2[97] = sub_45A0();
  sub_4588();
  return sub_451C();
}

void sub_26A34(uint64_t a1)
{
  uint64_t v2 = v1[97];
  uint64_t v3 = v1[92];
  uint64_t v4 = v1[91];
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, (uint64_t)(v1 + 74));
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "#StopSirenFlow execute", v9, 2u);
    sub_3CA0((uint64_t)v9);
  }

  uint64_t v10 = v1[97];
  uint64_t v11 = v1[92];
  uint64_t v12 = v1[91];
  uint64_t v13 = v1[79];

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  __asm { BR              X10 }

uint64_t sub_26B50()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[51];
  uint64_t v3 = sub_27DE8();
  sub_27F0C(v3, enum case for ActivityType.failed(_:));
  uint64_t v4 = sub_27FC4();
  sub_27E1C(v4);
  uint64_t v5 = sub_27E08();
  uint64_t v9 = sub_27DAC(v5, v6, v7, v8, (uint64_t)nullsub_1);
  v0[98] = v9;
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to dispatch thunk of SiriKitEventSending.sendAsync(_:)[1]);
  v0[99] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_27160;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))dispatch thunk of SiriKitEventSending.sendAsync(_:))( v9,  v1,  v2);
}

uint64_t sub_27160()
{
  return sub_451C();
}

#error "2722C: call analysis failed (funcsize=40)"
uint64_t sub_27240()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 808));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "272D0: call analysis failed (funcsize=26)"
uint64_t sub_272E4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v2 = *(void *)(*(void *)v1 + 816LL);
  *(_BYTE *)(*(void *)v1 + 872LL) = a1;
  swift_task_dealloc(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_27334()
{
  if (*(_BYTE *)(v0 + 872) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 688);
    uint64_t v2 = *(void *)(v0 + 680);
    uint64_t v3 = *(void *)(v0 + 672);
    uint64_t v4 = *(void **)(v0 + 632);
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    sub_3324(v4 + 2, v5);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 16))(v25, v5, v6);
    sub_2A448(1, v3);
    AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v25, v3, 0x65726953706F7453LL, 0xE90000000000006ELL);
    sub_EB44( &qword_79828,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
    uint64_t v7 = Flow.eraseToAnyFlow()(v2);
    uint64_t v8 = v1;
    uint64_t v9 = (uint64_t (*)(void))&type metadata accessor for AppPunchOutFlow;
  }

  else
  {
    uint64_t v10 = *(void *)(v0 + 664);
    uint64_t v11 = *(void *)(v0 + 656);
    uint64_t v12 = *(void *)(v0 + 648);
    uint64_t v13 = sub_3324((void *)(*(void *)(v0 + 632) + 56LL), *(void *)(*(void *)(v0 + 632) + 80LL));
    sub_27F1C((uint64_t)v13);
    sub_1FF84();
    sub_EE0C();
    sub_27F98();
    sub_27FB8(v12, (uint64_t)&_swiftEmptyArrayStorage);
    sub_EB44( &qword_78960,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
    uint64_t v7 = Flow.eraseToAnyFlow()(v11);
    uint64_t v8 = v10;
    uint64_t v9 = (uint64_t (*)(void))&type metadata accessor for OutputFlow;
  }

  sub_27D20(v8, v9);
  static ExecuteResponse.complete(next:)(v7);
  sub_EE0C();
  uint64_t v23 = *(void *)(v0 + 648);
  uint64_t v24 = *(void *)(v0 + 640);
  swift_task_dealloc(*(void *)(v0 + 776));
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  sub_27F58();
  sub_27F50();
  sub_27F80();
  uint64_t v14 = swift_task_dealloc(v23);
  sub_27F90(v14, v15, v16, v17, v18, v19, v20, v21, v23, v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_27548()
{
  return sub_451C();
}

#error "27618: call analysis failed (funcsize=41)"
uint64_t sub_2762C()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 848));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "276FC: call analysis failed (funcsize=41)"
uint64_t sub_27710()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 864));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "2786C: call analysis failed (funcsize=76)"
uint64_t sub_27880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v4 = type metadata accessor for StopSirenFlow();
  sub_EB44( &qword_7A308,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for StopSirenFlow,  (uint64_t)&unk_58A8C);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_278F0()
{
  uint64_t v1 = sub_6820();
  v0[5] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[6] = v2;
  v0[7] = sub_3C88(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_27930(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, v1 + 16);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (sub_6728(v8))
  {
    uint64_t v9 = (_WORD *)sub_8D14();
    sub_182E4(v9);
    sub_23248(&dword_0, v7, (os_log_type_t)v2, "#StopSirenFlow Can't tell if Siren is running from this device.");
    sub_3CA0(v4);
  }

  uint64_t v10 = sub_28028();
  v11(v10);
  sub_4578();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(1LL);
}

void *sub_279FC()
{
  return v0;
}

uint64_t sub_27A30()
{
  return swift_deallocClassInstance(v0, 184LL, 7LL);
}

uint64_t type metadata accessor for StopSirenFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin13StopSirenFlow);
}

uint64_t storeEnumTagSinglePayload for StopSirenFlow.StopSirenFlowState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_27ABC + 4 * byte_589B2[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_27AF0 + 4 * byte_589AD[v4]))();
}

uint64_t sub_27AF0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_27AF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x27B00LL);
  }
  return result;
}

uint64_t sub_27B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x27B14LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_27B18(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_27B20(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StopSirenFlow.StopSirenFlowState()
{
  return &type metadata for StopSirenFlow.StopSirenFlowState;
}

unint64_t sub_27B40()
{
  unint64_t result = qword_7A2F0[0];
  if (!qword_7A2F0[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_58A64, &type metadata for StopSirenFlow.StopSirenFlowState);
    atomic_store(result, qword_7A2F0);
  }

  return result;
}

uint64_t sub_27B7C(uint64_t a1)
{
  return sub_25F54(a1) & 1;
}

uint64_t sub_27BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_27C08;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_27C08(uint64_t a1)
{
  return v1[1](a1);
}

uint64_t sub_27C4C(uint64_t a1, uint64_t a2)
{
  return sub_27880(a1, a2);
}

uint64_t sub_27C6C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A1FC);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_27CC0;
  return sub_2691C(a1);
}

uint64_t sub_27CC0()
{
  return v0[1]();
}

uint64_t sub_27CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for StopSirenFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

void sub_27D20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  sub_6774();
}

uint64_t sub_27D58()
{
  return swift_task_dealloc(*(void *)(v0 + 776));
}

uint64_t sub_27D90(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_27DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v5,  0x65726953706F7453LL,  0xE90000000000006ELL,  v6,  a5,  0LL);
}

uint64_t sub_27DD8(uint64_t a1)
{
  *(void *)(v2 - 8) = *v1;
  return swift_task_dealloc(a1);
}

uint64_t sub_27DE8()
{
  return type metadata accessor for SiriKitEvent(0LL);
}

uint64_t sub_27E08()
{
  return sub_3F18(v0, 0LL, 1LL, v1);
}

uint64_t sub_27E1C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 104LL))(v1, v2, a1);
}

uint64_t sub_27E38(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 632);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
  uint64_t v3 = sub_3324((void *)(v2 + 56), *(void *)(v2 + 80))[11];
  return swift_retain(v3);
}

uint64_t sub_27E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v5,  0x65726953706F7453LL,  0xE90000000000006ELL,  v6,  a5,  0LL);
}

uint64_t sub_27EA0(uint64_t a1)
{
  return v1(a1, v2, *(void *)(v3 - 192));
}

uint64_t sub_27EAC()
{
  return static SiriKitEventSender.current.getter();
}

  ;
}

void sub_27EE0()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t sub_27EF0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 104LL))(v1, v2, a1);
}

uint64_t sub_27F0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_27F1C(uint64_t a1)
{
  return swift_retain(*(void *)(a1 + 88));
}

uint64_t sub_27F28()
{
  return *(void *)(v0 - 272);
}

uint64_t sub_27F48(uint64_t a1)
{
  return v1(a1, *(void *)(v2 - 192));
}

uint64_t sub_27F50()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_27F58()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_27F60()
{
  return swift_task_dealloc(v0);
}

void sub_27F68()
{
}

uint64_t sub_27F80()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_27F88()
{
  return swift_task_dealloc(v0);
}

uint64_t sub_27F90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return swift_task_dealloc(a10);
}

void sub_27F98()
{
}

uint64_t sub_27FA4(uint64_t a1)
{
  return static ExecuteResponse.complete<A>(next:)(v1, v2, a1);
}

uint64_t sub_27FB8(uint64_t a1, uint64_t a2)
{
  return OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(a1, a2, v2, 0LL);
}

uint64_t sub_27FC4()
{
  return type metadata accessor for SiriKitReliabilityCodes(0LL);
}

uint64_t sub_27FCC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t))
{
  return a11(v12, v13, v11);
}

uint64_t sub_27FE0()
{
  return sub_11D80(v1, v0);
}

uint64_t sub_27FEC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return swift_task_dealloc(a11);
}

uint64_t sub_27FF4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_28004(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_28014()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 152));
}

uint64_t sub_28020( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(void))
{
  return a12();
}

uint64_t sub_28028()
{
  return v0;
}

void sub_28034()
{
}

uint64_t sub_28040()
{
  return swift_release_n(v0, 2LL);
}

void sub_2804C(uint64_t a1, uint64_t (*a2)(void))
{
}

uint64_t storeEnumTagSinglePayload for RFConfirmationOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_280A0 + 4 * byte_58AF5[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_280D4 + 4 * byte_58AF0[v4]))();
}

uint64_t sub_280D4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_280DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x280E4LL);
  }
  return result;
}

uint64_t sub_280F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x280F8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_280FC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_28104(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RFConfirmationOptions()
{
  return &type metadata for RFConfirmationOptions;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConfirmationSnippets(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = v3;
  return a1;
}

unint64_t destroy for ConfirmationSnippets(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

unint64_t *assignWithCopy for ConfirmationSnippets(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain(v4);
    }
  }

  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v3);
    *a1 = *a2;
  }

  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRelease(v3);
  }

  return a1;
}

void *initializeWithTake for ConfirmationSnippets(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for ConfirmationSnippets(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v3);
LABEL_5:
    *a1 = v4;
    return a1;
  }

  *a1 = v4;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConfirmationSnippets(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 > 0x7FFFFFF9 && *((_BYTE *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for ConfirmationSnippets(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0LL;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(_BYTE *)(result + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(_BYTE *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 5;
    }
  }

  return result;
}

uint64_t sub_28308(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return (v1 + 1);
}

void *sub_28320(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }

  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }

  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationSnippets()
{
  return &type metadata for ConfirmationSnippets;
}

unint64_t sub_28354()
{
  unint64_t result = qword_7A318;
  if (!qword_7A318)
  {
    unint64_t result = swift_getWitnessTable(&unk_58B98, &type metadata for RFConfirmationOptions);
    atomic_store(result, (unint64_t *)&qword_7A318);
  }

  return result;
}

uint64_t EmergencyOrganizationInfoProvider.init(flowConfig:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  os_log_s *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  void (*v42)(void *__return_ptr, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void v49[5];
  char v50[24];
  void v51[3];
  void *v52;
  void *v53;
  os_log_type_t v48 = a2;
  unint64_t v44 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Locale(0LL);
  unint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v12 = sub_3324(a1, v11);
  uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8);
  v13(v51, v11, v10);
  uint64_t v14 = v52;
  uint64_t v15 = v53;
  sub_3324(v51, (uint64_t)v52);
  uint64_t v16 = dispatch thunk of DeviceState.preferencesLanguageCode.getter(v14, v15);
  if (v17)
  {
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    sub_28708();
    Locale.init(identifier:)(v18, v19);
  }

  else
  {
    uint64_t v38 = v10;
    __int128 v39 = v11;
    uint64_t v40 = v12;
    uint64_t v41 = v9;
    uint64_t v42 = v13;
    uint64_t v20 = sub_28708();
    uint64_t v21 = Logger.emergency.unsafeMutableAddressor(v20);
    swift_beginAccess(v21, v50, 0LL, 0LL);
    uint64_t v23 = v43;
    uint64_t v22 = v44;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v43, v21, v44);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    uint64_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "Failed to fetch preferencesLanguageCode. Falling back to siriLocale.", v27, 2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v22);
    v42(v51, v39, v38);
    uint64_t v28 = v52;
    uint64_t v29 = v53;
    sub_3324(v51, (uint64_t)v52);
    uint64_t v9 = v41;
    dispatch thunk of DeviceState.siriLocale.getter(v28, v29);
    sub_28708();
  }

  uint64_t v30 = v47;
  os_log_type_t v32 = v45;
  uint64_t v31 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v47, v9, v46);
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  sub_3324(a1, v33);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 24))(v49, v33, v34);
  uint64_t v35 = [objc_allocWithZone(CLGeocoder) init];
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  uint64_t v52 = &type metadata for LocationService;
  uint64_t v53 = &protocol witness table for LocationService;
  v51[0] = swift_allocObject(&unk_6ECB0, 64LL, 7LL);
  LocationService.init(with:geocoder:)(v49, v35);
  EmergencyOrganizationInfoProvider.init(siriLocale:locationProvider:resourceDecoder:)(v30, v51, 0LL, 0LL);
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
}

uint64_t sub_286CC()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_286F8(uint64_t result, _BYTE **a2)
{
  unsigned int v2 = *a2;
  _BYTE *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_28708()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 128));
}

id sub_28710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v9 = [objc_allocWithZone(SAUIAppPunchOut) init];
  sub_AE7C(a3, (uint64_t)v8);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v12 = 0LL;
  if (sub_5FE0((uint64_t)v8, 1LL, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8LL))(v8, v10);
  }

  [v9 setPunchOutUri:v12];

  uint64_t v14 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v15 = swift_allocObject(v14, 40LL, 7LL);
  *(_OWORD *)(v15 + 16) = xmmword_56DC0;
  *(void *)(v15 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v9;
  uint64_t v19 = v15;
  specialized Array._endMutation()();
  id v16 = sub_2886C(a1, a2, v19);
  sub_AEC4(a3);
  return v16;
}

id sub_2886C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)) init];
  sub_288DC(a1, a2, v7);
  sub_2892C(a3, v7);

  return v7;
}

void sub_288DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setText:v5];
}

void sub_2892C(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setCommands:isa];
}

uint64_t sub_28990(uint64_t a1)
{
  uint64_t v1 = Parse.DirectInvocation.userData.getter(a1);
  if (!v1)
  {
    __int128 v8 = 0u;
    __int128 v9 = 0u;
    goto LABEL_7;
  }

  uint64_t v2 = v1;
  uint64_t v3 = DirectInvocationURI.payloadKey.getter(5LL);
  sub_2A82C(v3, v4, v2, &v8);
  sub_84A8();
  swift_bridgeObjectRelease(v2);
  if (!*((void *)&v9 + 1))
  {
LABEL_7:
    sub_28A58((uint64_t)&v8);
    return 35LL;
  }

  uint64_t v5 = static EmergencySituation.fromValueWithCleanup(_:)(v7[0], v7[1]);
  sub_84A8();
  return v5;
}

uint64_t sub_28A58(uint64_t a1)
{
  uint64_t v2 = sub_3974((uint64_t *)&unk_7A610);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_28A98(char *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  __int128 v8 = (char *)&v57 - v7;
  uint64_t v9 = sub_3974(&qword_7A3B0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_E9BC(a1, v64);
  uint64_t v12 = sub_294EC((uint64_t)v64);
  uint64_t v59 = v6;
  if (v12 > 1)
  {
    uint64_t v23 = &_swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v13 = (void *)nullsub_1(v64);
    os_log_type_t v58 = a1;
    uint64_t v14 = v13[8];
    uint64_t v15 = v13[9];
    uint64_t v16 = v13[7];
    uint64_t v57 = v13[6];
    uint64_t v17 = sub_3974((uint64_t *)&unk_7A390);
    uint64_t v18 = swift_allocObject(v17, 40LL, 7LL);
    *(_OWORD *)(v18 + 16) = xmmword_56DC0;
    id v19 = objc_allocWithZone(&OBJC_CLASS___INPersonHandle);
    swift_bridgeObjectRetain(v15);
    id v20 = sub_29504(v14, v15, 2LL);
    uint64_t v21 = type metadata accessor for PersonNameComponents(0LL);
    sub_3F18((uint64_t)v11, 1LL, 1LL, v21);
    id v22 = objc_allocWithZone(&OBJC_CLASS___INPerson);
    swift_bridgeObjectRetain(v16);
    a1 = v58;
    *(void *)(v18 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_2956C(v20, (uint64_t)v11, v57, v16, 0LL, 0LL, 0LL, 0LL, 0LL);
    v63[0] = v18;
    uint64_t v12 = specialized Array._endMutation()();
    uint64_t v23 = (void *)v63[0];
  }

  uint64_t v24 = Logger.emergency.unsafeMutableAddressor(v12);
  sub_3CC8(v24, (uint64_t)&v62);
  uint64_t v25 = sub_29DC8((uint64_t)v8);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (_WORD *)sub_8D14();
    os_log_type_t v58 = v8;
    uint64_t v29 = v23;
    uint64_t v30 = v2;
    uint64_t v31 = a1;
    os_log_type_t v32 = v28;
    *uint64_t v28 = 0;
    sub_29DD4(&dword_0, v26, v27, "Creating INStartCallIntent");
    uint64_t v33 = (uint64_t)v32;
    a1 = v31;
    uint64_t v2 = v30;
    uint64_t v23 = v29;
    __int128 v8 = v58;
    sub_3CA0(v33);
  }

  uint64_t v34 = *(void (**)(char *, uint64_t))(v3 + 8);
  v34(v8, v2);
  sub_E9BC(a1, v63);
  unsigned int v35 = sub_294EC((uint64_t)v63);
  if (!v35)
  {
    uint64_t v36 = 1LL;
    goto LABEL_10;
  }

  if (v35 == 1)
  {
    uint64_t v36 = 2LL;
LABEL_10:
    nullsub_1(v63);
    goto LABEL_12;
  }

  uint64_t v36 = v35;
LABEL_12:
  id v37 = objc_allocWithZone(&OBJC_CLASS___INStartCallIntent);
  id v38 = sub_296D0(0LL, 0LL, 0LL, v36, 1LL, (uint64_t)v23, 0LL, 1LL);
  uint64_t v39 = sub_297B0([v38 backingStore]);
  if (v40 >> 60 == 15)
  {
    sub_3CC8(v24, (uint64_t)&v61);
    uint64_t v41 = (uint64_t)v59;
    uint64_t v42 = sub_29DC8((uint64_t)v59);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (_WORD *)sub_8D14();
      *unint64_t v45 = 0;
      sub_29DD4(&dword_0, v43, v44, "Unable to serialize INStartCallIntent");
      sub_3CA0((uint64_t)v45);
      uint64_t v46 = (os_log_s *)v38;
    }

    else
    {
      uint64_t v46 = v43;
      uint64_t v43 = (os_log_s *)v38;
    }

    v34((char *)v41, v2);
    return 0LL;
  }

  else
  {
    uint64_t v47 = v39;
    unint64_t v48 = v40;
    uint64_t v49 = sub_3974(&qword_791E8);
    uint64_t inited = swift_initStackObject(v49, &v60);
    *(_OWORD *)(inited + 16) = xmmword_56FC0;
    *(void *)(inited + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x6449707061LL;
    *(void *)(inited + 40) = 0xE500000000000000LL;
    *(void *)(inited + 48) = 0xD000000000000015LL;
    *(void *)(inited + 56) = 0x800000000005BF90LL;
    *(void *)(inited + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
    strcpy((char *)(inited + 80), "intentTypeName");
    *(_BYTE *)(inited + 95) = -18;
    id v51 = [v38 typeName];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    uint64_t v54 = v53;

    *(void *)(inited + 96) = v52;
    *(void *)(inited + 104) = v54;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 128) = 0x6144746E65746E69LL;
    *(void *)(inited + 168) = &type metadata for Data;
    *(void *)(inited + 136) = 0xEA00000000006174LL;
    *(void *)(inited + 144) = v47;
    *(void *)(inited + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v48;
    uint64_t v55 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  }

  return v55;
}

id sub_28F84(char *a1, void *a2)
{
  id v4 = sub_50C34(0xD000000000000034LL, 0x800000000005B280LL);
  uint64_t v5 = sub_28A98(a1);
  Class isa = (Class)v5;
  if (v5)
  {
    uint64_t v7 = sub_290D8(v5);
    sub_84A8();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v7);
  }

  [v4 setUserData:isa];

  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  sub_3324(a2, v8);
  uint64_t v10 = (void *)DeviceState.asInvocationContext.getter(v8, v9);
  uint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  id v12 = [v11 runSiriKitExecutorCommandWithContext:v10 payload:v4];
  id v13 = [v11 wrapCommandInStartLocalRequest:v12];

  return v13;
}

uint64_t sub_290D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_3974(&qword_7A3A8);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v29 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_29498(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v41);
    *(void *)&__int128 v40 = v18;
    *((void *)&v40 + 1) = v17;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(void *)&v38[0] = v18;
    *((void *)&v38[0] + 1) = v17;
    swift_bridgeObjectRetain(v17);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7LL);
    sub_294D4(v39, v33);
    __int128 v34 = v30;
    __int128 v35 = v31;
    uint64_t v36 = v32;
    sub_294D4(v33, v37);
    __int128 v30 = v34;
    __int128 v31 = v35;
    uint64_t v32 = v36;
    sub_294D4(v37, v38);
    sub_294D4(v38, &v34);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v19 = -1LL << *((_BYTE *)v3 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1LL << v20) & ~*(void *)&v7[8 * (v20 >> 6)]) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0LL;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v7[8 * v21];
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_34;
        }
      }

      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    unint64_t v22 = __clz(__rbit64((-1LL << v20) & ~*(void *)&v7[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_34:
    *(void *)&v7[(v22 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v22;
    uint64_t v27 = v3[6] + 40 * v22;
    *(_OWORD *)uint64_t v27 = v30;
    *(_OWORD *)(v27 + 16) = v31;
    *(void *)(v27 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v32;
    uint64_t result = (uint64_t)sub_294D4(&v34, (_OWORD *)(v3[7] + 32 * v22));
    ++v3[2];
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1LL)) {
      goto LABEL_38;
    }
    if (v12 >= v28) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v12);
    int64_t v14 = v9 + 1;
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v28) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v29 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v28) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 4;
          if (v9 + 4 >= v28) {
            goto LABEL_36;
          }
          unint64_t v13 = *(void *)(v29 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }

LABEL_24:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v9 = v14;
  }

  int64_t v15 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_36:
    swift_release(v3);
    sub_294E4(a1);
    return (uint64_t)v3;
  }

  unint64_t v13 = *(void *)(v29 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v9 + 5;
    goto LABEL_24;
  }

  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v14 >= v28) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_24;
    }
  }

          int64_t v28 = Logger.emergency.unsafeMutableAddressor(v43);
          sub_3CC8(v28, (uint64_t)v58);
          sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
          sub_2F65C();
          os_log_type_t v44 = sub_67D4();
          if (sub_182AC(v44))
          {
            unint64_t v45 = (_WORD *)sub_8D14();
            sub_3D264(v45);
            uint64_t v33 = "No prompt needed for this device. Not listening after speaking.";
            goto LABEL_26;
          }

          goto LABEL_28;
        }

uint64_t sub_29498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_294D4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_294E4(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_294EC(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

id sub_29504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    NSString v6 = 0LL;
  }

  id v7 = [v3 initWithValue:v6 type:a3];

  return v7;
}

id sub_2956C( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v10 = v9;
  uint64_t v16 = type metadata accessor for PersonNameComponents(0LL);
  Class isa = 0LL;
  if (sub_5FE0(a2, 1LL, v16) != 1)
  {
    Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(a2, v16);
  }

  if (a4)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }

  else
  {
    NSString v18 = 0LL;
  }

  if (!a7)
  {
    NSString v19 = 0LL;
    if (a9) {
      goto LABEL_8;
    }
LABEL_10:
    NSString v20 = 0LL;
    goto LABEL_11;
  }

  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a7);
  if (!a9) {
    goto LABEL_10;
  }
LABEL_8:
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a9);
LABEL_11:
  id v21 = [v10 initWithPersonHandle:a1 nameComponents:isa displayName:v18 image:a5 contactIdentifier:v19 customIdentifier:v20];

  return v21;
}

id sub_296D0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int64_t v9 = v8;
  if (a6)
  {
    sub_2981C(0LL, &qword_7A3B8, &OBJC_CLASS___INPerson_ptr);
    v18.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a6);
  }

  else
  {
    v18.super.Class isa = 0LL;
  }

  id v19 = [v9 initWithCallRecordFilter:a1 callRecordToCallBack:a2 audioRoute:a3 destinationType:a4 preferredCallProvider:a5 contacts:v18.super.isa ttyTyp e:a7 callCapability:a8];

  return v19;
}

uint64_t sub_297B0(void *a1)
{
  id v2 = [a1 data];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_2981C(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_29854( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  if (a17 <= 1u)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a14);
    return swift_bridgeObjectRetain(a16);
  }

  return result;
}

uint64_t destroy for CallContact(uint64_t a1)
{
  return sub_29950( *(void *)a1,  *(void *)(a1 + 8),  *(void *)(a1 + 16),  *(void *)(a1 + 24),  *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(void *)(a1 + 56),  *(void *)(a1 + 64),  *(void *)(a1 + 72),  *(void *)(a1 + 80),  *(void *)(a1 + 88),  *(void *)(a1 + 96),  *(void *)(a1 + 104),  *(void *)(a1 + 112),  *(void *)(a1 + 120),  *(_BYTE *)(a1 + 128));
}

uint64_t sub_29950( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  if (a17 <= 1u)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a12);
    swift_bridgeObjectRelease(a14);
    return swift_bridgeObjectRelease(a16);
  }

  return result;
}

uint64_t initializeWithCopy for CallContact(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  unsigned __int8 v20 = *(_BYTE *)(a2 + 128);
  sub_29854(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v18;
  *(void *)(a1 + 120) = v19;
  *(_BYTE *)(a1 + 128) = v20;
  return a1;
}

uint64_t assignWithCopy for CallContact(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v27 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)(a2 + 104);
  uint64_t v32 = *(void *)(a2 + 112);
  uint64_t v33 = *(void *)(a2 + 120);
  unsigned __int8 v34 = *(_BYTE *)(a2 + 128);
  sub_29854(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  __int128 v20 = *(_OWORD *)(a1 + 64);
  __int128 v21 = *(_OWORD *)(a1 + 80);
  __int128 v22 = *(_OWORD *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 120);
  unsigned __int8 v25 = *(_BYTE *)(a1 + 128);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v27;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 104) = v31;
  *(void *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v32;
  *(void *)(a1 + 120) = v33;
  *(_BYTE *)(a1 + 128) = v34;
  sub_29950( v12,  v13,  v14,  v15,  v16,  v17,  v18,  v19,  v20,  *((uint64_t *)&v20 + 1),  v21,  *((uint64_t *)&v21 + 1),  v22,  *((uint64_t *)&v22 + 1),  v23,  v24,  v25);
  return a1;
}

void *initializeWithTake for CallContact(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x81uLL);
}

uint64_t assignWithTake for CallContact(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 128);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  __int128 v12 = *(_OWORD *)(a1 + 64);
  __int128 v13 = *(_OWORD *)(a1 + 80);
  __int128 v14 = *(_OWORD *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 120);
  unsigned __int8 v17 = *(_BYTE *)(a1 + 128);
  __int128 v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  __int128 v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  __int128 v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  __int128 v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v21;
  *(_BYTE *)(a1 + 128) = v3;
  sub_29950( v4,  v6,  v5,  v7,  v8,  v9,  v10,  v11,  v12,  *((uint64_t *)&v12 + 1),  v13,  *((uint64_t *)&v13 + 1),  v14,  *((uint64_t *)&v14 + 1),  v15,  v16,  v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallContact(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 129))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 128);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CallContact(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 120) = 0LL;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 29) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 29) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 128) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_29D7C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    LOBYTE(a_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2;
    *(void *)(result + 120) = 0LL;
  }

  *(_BYTE *)(result + 128) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CallContact()
{
  return &type metadata for CallContact;
}

uint64_t sub_29DC8(uint64_t a1)
{
  return v3(a1, v2, v1);
}

void sub_29DD4(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t destroy for EmergencyModernCATProvider(void *a1)
{
  return swift_release(a1[9]);
}

uint64_t *initializeWithCopy for EmergencyModernCATProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  a1[6] = v9;
  a1[7] = v10;
  uint64_t v11 = a2[8];
  uint64_t v12 = a2[9];
  a1[8] = v11;
  a1[9] = v12;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  return a1;
}

uint64_t *assignWithCopy for EmergencyModernCATProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  uint64_t v8 = a2[2];
  uint64_t v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  uint64_t v10 = a2[3];
  uint64_t v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  uint64_t v12 = a2[4];
  uint64_t v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  uint64_t v14 = a2[5];
  uint64_t v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  uint64_t v16 = a2[6];
  uint64_t v17 = a1[6];
  a1[6] = v16;
  swift_retain(v16);
  swift_release(v17);
  uint64_t v18 = a2[7];
  uint64_t v19 = a1[7];
  a1[7] = v18;
  swift_retain(v18);
  swift_release(v19);
  uint64_t v20 = a2[8];
  uint64_t v21 = a1[8];
  a1[8] = v20;
  swift_retain(v20);
  swift_release(v21);
  uint64_t v22 = a2[9];
  uint64_t v23 = a1[9];
  a1[9] = v22;
  swift_retain(v22);
  swift_release(v23);
  return a1;
}

void *initializeWithTake for EmergencyModernCATProvider(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

void *assignWithTake for EmergencyModernCATProvider(void *a1, _OWORD *a2)
{
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(a1[2]);
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_release(v5);
  swift_release(a1[4]);
  uint64_t v6 = a1[5];
  *((_OWORD *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a2[2];
  swift_release(v6);
  swift_release(a1[6]);
  uint64_t v7 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  swift_release(v7);
  swift_release(a1[8]);
  uint64_t v8 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyModernCATProvider(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 80))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyModernCATProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 80) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyModernCATProvider()
{
  return &type metadata for EmergencyModernCATProvider;
}

uint64_t type metadata accessor for EmergencyPoisonControlBasicIntentCATs(uint64_t a1)
{
  uint64_t result = qword_7A3C0;
  if (!qword_7A3C0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyPoisonControlBasicIntentCATs);
  }
  return result;
}

uint64_t sub_2A198(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B908);
}

void sub_2A1D4(uint64_t a1, char a2)
{
}

void sub_2A1F0(uint64_t a1, char a2)
{
}

void sub_2A20C(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_2A228(uint64_t a1, char a2)
{
}

void sub_2A260(uint64_t a1, char a2)
{
}

void sub_2A28C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v8 = sub_3974(&qword_78BB8);
  uint64_t v9 = swift_allocObject(v8, 176LL, 7LL);
  *(_OWORD *)(v9 + 16) = xmmword_56FC0;
  uint64_t v10 = (void *)(v9 + 48);
  *(void *)(v9 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v9 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, v3, &qword_78970);
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v3, 1LL, v11) == 1)
  {
    sub_7784(v3, &qword_78970);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }

  else
  {
    *(void *)(v9 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v11;
    uint64_t v12 = sub_649C(v10);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v12, v3, v11);
  }

  *(void *)(v9 + 80) = 0x65626D754E67726FLL;
  *(void *)(v9 + 88) = 0xE900000000000072LL;
  if (a2)
  {
    uint64_t v13 = type metadata accessor for DialogPhoneNumber(0LL);
    uint64_t v14 = a2;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v9 + 104) = 0LL;
    *(void *)(v9 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
  }

  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 120) = v13;
  *(void *)(v9 + 128) = 0xD000000000000012LL;
  *(void *)(v9 + 136) = 0x800000000005ABB0LL;
  *(void *)(v9 + 168) = &type metadata for Bool;
  *(_BYTE *)(v9 + 144) = a3 & 1;
  swift_retain(a2);
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002ALL, 0x800000000005B840LL, v9);
  swift_bridgeObjectRelease(v9);
  sub_7DF0();
}

uint64_t sub_2A440()
{
  return type metadata accessor for EmergencyPoisonControlBasicIntentCATs(0LL);
}

uint64_t sub_2A448@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for URLComponents(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_23400();
  URLComponents.init()();
  URLComponents.scheme.setter(0xD000000000000010LL, 0x800000000005C030LL);
  URLComponents.host.setter(0LL, 0xE000000000000000LL);
  URLComponents.path.setter(0LL, 0xE000000000000000LL);
  uint64_t v10 = sub_3974(&qword_7A4B8);
  uint64_t v11 = *(void *)(type metadata accessor for URLQueryItem(0LL) - 8);
  uint64_t v12 = swift_allocObject( v10,  ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + 2LL * *(void *)(v11 + 72),
          *(unsigned __int8 *)(v11 + 80) | 7LL);
  *(_OWORD *)(v12 + 16) = xmmword_56FB0;
  if ((a1 & 1) != 0) {
    uint64_t v13 = 1886352499LL;
  }
  else {
    uint64_t v13 = 0x7472617473LL;
  }
  if ((a1 & 1) != 0) {
    unint64_t v14 = 0xE400000000000000LL;
  }
  else {
    unint64_t v14 = 0xE500000000000000LL;
  }
  URLQueryItem.init(name:value:)(0x6E6F69746361LL, 0xE600000000000000LL, v13, v14);
  swift_bridgeObjectRelease(v14);
  URLQueryItem.init(name:value:)(0x656372756F73LL, 0xE600000000000000LL, 1769105779LL, 0xE400000000000000LL);
  uint64_t v15 = URLComponents.queryItems.setter(v12);
  URLComponents.url.getter(v15);
  uint64_t v16 = type metadata accessor for URL(0LL);
  uint64_t result = sub_5FE0((uint64_t)v7, 1LL, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32LL))(a2, v7, v16);
  }

  return result;
}

uint64_t sub_2A648(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_3324(a1, v2);
  char v4 = dispatch thunk of DeviceState.isWatch.getter(v2, v3);
  sub_3B68((uint64_t)a1, (uint64_t)v9);
  if ((v4 & 1) != 0)
  {
    char v5 = 1;
  }

  else
  {
    uint64_t v6 = v10;
    uint64_t v7 = v11;
    sub_3324(v9, v10);
    char v5 = dispatch thunk of DeviceState.isPhone.getter(v6, v7);
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v9);
  return v5 & 1;
}

uint64_t sub_2A6DC()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_23400();
  uint64_t v4 = Logger.emergency.unsafeMutableAddressor(v3);
  swift_beginAccess(v4, v10, 0LL, 0LL);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v4, v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "#SirenAppProvider Unsupported idiom.", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return 0LL;
}

uint64_t type metadata accessor for SirenAppProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin16SirenAppProvider);
}

uint64_t sub_2A800(char a1)
{
  if ((a1 & 1) != 0) {
    return 1886352499LL;
  }
  else {
    return 0x7472617473LL;
  }
}

double sub_2A82C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_2E010(a1, a2), (v7 & 1) != 0))
  {
    sub_29498(*(void *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }

  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }

  return result;
}

uint64_t sub_2A87C@<X0>(uint64_t a1@<X8>)
{
  return sub_5F98(v1, a1);
}

void sub_2A888(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v39 = a2;
  sub_3974((uint64_t *)&unk_7A600);
  sub_EDD8();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint8_t *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6820();
  sub_12FFC();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (os_log_s *)((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = Logger.emergency.unsafeMutableAddressor(v14);
  sub_3CC8(v17, (uint64_t)v41);
  uint64_t v18 = sub_13094();
  id v38 = v19;
  uint64_t v20 = ((uint64_t (*)(uint64_t))v19)(v18);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)sub_3CD4(2LL);
    uint64_t v37 = v9;
    uint64_t v24 = v4;
    unsigned __int8 v25 = v13;
    uint64_t v26 = a1;
    uint64_t v27 = v23;
    *(_WORD *)uint64_t v23 = 0;
    sub_EDA8(&dword_0, v21, v22, "EmergencyPromptForConfirmationRFFlowStrategyAsync actionForInput", v23);
    uint64_t v28 = (uint64_t)v27;
    a1 = v26;
    uint64_t v13 = v25;
    uint64_t v4 = v24;
    uint64_t v9 = v37;
    sub_3CA0(v28);
  }

  uint64_t v29 = *(void (**)(char *, uint64_t))(v3 + 8);
  v29(v16, v9);
  sub_2AAC8(a1, (void *)(v4 + 16), v8);
  uint64_t v30 = sub_12FE8();
  int v31 = sub_5FE0((uint64_t)v8, 1LL, v30);
  sub_E988((uint64_t)v8, (uint64_t *)&unk_7A600);
  if (v31 == 1)
  {
    sub_3CC8(v17, (uint64_t)v40);
    uint64_t v32 = v38(v13, v17, v9);
    Logger.logObject.getter(v32);
    os_log_type_t v33 = sub_67D4();
    if (os_log_type_enabled(v13, v33))
    {
      unsigned __int8 v34 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)unsigned __int8 v34 = 0;
      sub_EDA8(&dword_0, v13, v33, "No confirmation response found in input, ignoring.", v34);
      sub_3CA0((uint64_t)v34);
    }

    uint64_t v35 = ((uint64_t (*)(os_log_s *, uint64_t))v29)(v13, v9);
    static ActionForInput.ignore()(v35);
  }

  else
  {
    static ActionForInput.handle()();
  }

  sub_7DF0();
}

void sub_2AAC8(uint64_t a1@<X0>, void *a2@<X1>, uint8_t *a3@<X8>)
{
  uint64_t v250 = a2;
  uint64_t v275 = a3;
  uint64_t v274 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v266 = *(void *)(v274 - 8);
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v6);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v7);
  sub_1300C();
  uint64_t v9 = sub_EE14(v8);
  uint64_t v269 = type metadata accessor for EmergencyNLIntent(v9);
  sub_EDD8();
  __chkstk_darwin(v10);
  sub_6750();
  uint64_t v12 = sub_EE14(v11);
  __int128 v285 = (void *)type metadata accessor for NLIntent(v12);
  uint64_t v273 = *(v285 - 1);
  sub_EDD8();
  __chkstk_darwin(v13);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v14);
  sub_1300C();
  __int128 v284 = v15;
  type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  sub_EDD8();
  __chkstk_darwin(v16);
  sub_6750();
  uint64_t v18 = sub_EE14(v17);
  uint64_t v256 = type metadata accessor for EmergencyDialogAct(v18);
  sub_EDD8();
  __chkstk_darwin(v19);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v20);
  sub_1300C();
  uint64_t v22 = sub_EE14(v21);
  uint64_t v267 = type metadata accessor for USOParse(v22);
  uint64_t v252 = *(void *)(v267 - 8);
  sub_EDD8();
  __chkstk_darwin(v23);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v24);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v25);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v26);
  sub_1300C();
  uint64_t v28 = sub_EE14(v27);
  uint64_t v29 = type metadata accessor for Parse(v28);
  sub_12FFC();
  __chkstk_darwin(v30);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v31);
  sub_1300C();
  uint64_t v33 = sub_EE14(v32);
  uint64_t v34 = type metadata accessor for Input(v33);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v36);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v242 - v38;
  uint64_t v40 = sub_6820();
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v42);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v43);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v44);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v45);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v46);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v47);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v48);
  sub_EE64();
  sub_ED8C();
  uint64_t v50 = __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v242 - v51;
  uint64_t v53 = Logger.emergency.unsafeMutableAddressor(v50);
  sub_3CC8(v53, (uint64_t)v295);
  uint64_t v281 = v41;
  v282 = (void *)v53;
  uint64_t v54 = *(void (**)(uint64_t, os_log_s *, uint64_t (*)(void, void, void)))(v41 + 16);
  unint64_t v286 = (uint64_t (*)(void, void, void))v40;
  v283 = v54;
  v54((uint64_t)v52, (os_log_s *)v53, (uint64_t (*)(void, void, void))v40);
  uint64_t v277 = v35;
  uint64_t v262 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v262(v39, a1, v34);
  uint64_t v55 = (os_log_s *)sub_1FD2C();
  os_log_type_t v56 = static os_log_type_t.debug.getter();
  BOOL v57 = os_log_type_enabled(v55, v56);
  uint64_t v263 = v34;
  uint64_t v280 = a1;
  if (v57)
  {
    uint64_t v243 = v29;
    uint64_t v58 = sub_3CD4(12LL);
    unint64_t v253 = v3;
    uint64_t v59 = (uint8_t *)v58;
    uint64_t v60 = sub_3CD4(32LL);
    *(void *)&__int128 v287 = v60;
    *(_DWORD *)uint64_t v59 = 136315138;
    sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter(v34, v61);
    uint64_t v293 = sub_130A8(v62, v63);
    a1 = v280;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v293, v294, v59 + 4, v59 + 12);
    sub_84A8();
    sub_12F9C();
    sub_67F8(&dword_0, v55, v56, "getConfirmationFromInput input: %s", v59);
    uint64_t v29 = v243;
    sub_67DC(v60);
    sub_3CA0(v60);
    uint64_t v64 = (uint64_t)v59;
    uint64_t v3 = v253;
    sub_3CA0(v64);
  }

  else
  {
    sub_12F9C();
  }

  uint64_t v281 = *(void *)(v281 + 8);
  uint64_t v65 = ((uint64_t (*)(char *, uint64_t (*)(void, void, void)))v281)(v52, v286);
  uint64_t v66 = v278;
  Input.parse.getter(v65);
  int v67 = v3[11](v66, v29);
  os_log_type_t v68 = v285;
  uint64_t v69 = (uint64_t)v279;
  if (v67 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_2F4E8(v3[12]);
    uint64_t v70 = v273;
    os_log_type_t v71 = v284;
    uint64_t v72 = sub_13094();
    v73(v72);
    os_log_type_t v74 = v282;
    sub_3CC8((uint64_t)v282, (uint64_t)&v293);
    uint64_t v75 = v272;
    sub_12EF0((uint64_t)v272);
    uint64_t v76 = *(uint64_t (**)(uint64_t, void, void (*)(void, void)))(v70 + 16);
    uint64_t v77 = v268;
    uint64_t v78 = v76(v268, v71, (void (*)(void, void))v68);
    Logger.logObject.getter(v78);
    os_log_type_t v79 = sub_EEB4();
    if (sub_12F10(v79))
    {
      uint64_t v80 = sub_3CD4(12LL);
      uint64_t v81 = sub_3CD4(32LL);
      *(void *)&__int128 v287 = v81;
      sub_1303C(4.8149e-34);
      sub_11D44( (unint64_t *)&unk_7A620,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter(v285, v82);
      uint64_t v85 = sub_130A8(v83, v84);
      uint64_t v86 = sub_12F68(v85);
      uint64_t v87 = (uint64_t)v75;
      uint64_t v75 = v286;
      v279 = v76;
      a1 = v280;
      sub_130E0(v86, v88, v87);
      sub_84A8();
      unint64_t v89 = *(void (**)(uint64_t, void *))(v273 + 8);
      v89(v77, v285);
      sub_12F20(&dword_0, v90, v91, "getConfirmationFromInput NLv3IntentOnly nlIntent: %s");
      uint64_t v76 = v279;
      sub_67DC(v81);
      uint64_t v92 = v81;
      os_log_type_t v68 = v285;
      sub_3CA0(v92);
      sub_3CA0(v80);

      uint64_t v93 = (uint64_t)v272;
      uint64_t v94 = v75;
    }

    else
    {
      unint64_t v89 = *(void (**)(uint64_t, void *))(v70 + 8);
      v89(v77, v68);

      uint64_t v93 = (uint64_t)v75;
      uint64_t v94 = v286;
    }

    ((void (*)(uint64_t, uint64_t (*)(void, void, void)))v281)(v93, v94);
    uint64_t v114 = (uint8_t *)v269;
    v76(v270, v284, (void (*)(void, void))v68);
    if (qword_785C0 != -1) {
      swift_once(&qword_785C0, sub_A2E4);
    }
    uint64_t v115 = qword_78CC8;
    sub_11D44(&qword_78D98, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
    char v117 = v116;
    sub_13084(v115);
    if (v287 == 2)
    {
      if (qword_785B0 != -1) {
        swift_once(&qword_785B0, sub_A288);
      }
      uint64_t v118 = sub_13084(qword_78CB8);
      uint64_t v119 = v287;
      if (v287 == 8)
      {
        sub_13018(v118, type metadata accessor for EmergencyNLIntent);
        sub_12F5C();
        sub_2F648();
LABEL_77:
        uint64_t v217 = (uint64_t)v282;
        sub_3CC8((uint64_t)v282, (uint64_t)&v287);
        v283((uint64_t)v76, (os_log_s *)v217, v286);
        uint64_t v218 = sub_12F7C();
        Logger.logObject.getter(v218);
        os_log_type_t v219 = sub_EF3C();
        if (sub_12F10(v219))
        {
          uint64_t v220 = sub_3CD4(12LL);
          uint64_t v221 = sub_3CD4(32LL);
          uint64_t v290 = v221;
          sub_1303C(4.8149e-34);
          sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
          uint64_t v223 = dispatch thunk of CustomStringConvertible.description.getter(a1, v222);
          uint64_t v225 = sub_543A4(v223, v224, &v290);
          uint64_t v226 = sub_130E8(v225);
          sub_130E0(v226, v227, (uint64_t)v75);
          sub_84A8();
          sub_2F488((uint64_t)v89);
          sub_12F20(&dword_0, v228, v229, "Failed to get confirmation from input: %s");
          sub_67DC(v221);
          sub_3CA0(v221);
          sub_3CA0(v220);
        }

        else
        {
          sub_2F488((uint64_t)v89);
        }

        sub_12F50((uint64_t)v76);
        sub_12FE8();
        uint64_t v230 = sub_1304C();
        goto LABEL_89;
      }

      uint64_t v149 = EmergencyVerb.rawValue.getter(v287);
      if (v149 != 1819042147 || v150 != 0xE400000000000000LL)
      {
        char v152 = sub_8498(v149, v150, 1819042147LL, 0xE400000000000000LL);
        uint64_t v153 = sub_84A8();
        if ((v152 & 1) != 0)
        {
LABEL_53:
          sub_13018(v153, type metadata accessor for EmergencyNLIntent);
          sub_12F5C();
LABEL_88:
          uint64_t v239 = enum case for ConfirmationResponse.confirmed(_:);
          uint64_t v240 = sub_12FE8();
          sub_13194();
          v241(v275, v239, v240);
          sub_1FE38();
          uint64_t v233 = v240;
          goto LABEL_89;
        }

        uint64_t v154 = EmergencyVerb.rawValue.getter(v119);
        if (v154 != 1684957542 || v155 != 0xE400000000000000LL)
        {
          uint64_t v119 = v155;
          char v157 = sub_8498(v154, v155, 1684957542LL, 0xE400000000000000LL);
          uint64_t v158 = sub_1FD7C();
          sub_13018(v158, type metadata accessor for EmergencyNLIntent);
          sub_12F5C();
          sub_2F648();
          if ((v157 & 1) == 0) {
            goto LABEL_77;
          }
          goto LABEL_88;
        }
      }

      uint64_t v153 = swift_bridgeObjectRelease(0xE400000000000000LL);
      goto LABEL_53;
    }

    if ((v287 & 1) == 0)
    {
      uint64_t v145 = swift_bridgeObjectRelease(0xE300000000000000LL);
      sub_13018(v145, type metadata accessor for EmergencyNLIntent);
      sub_12F5C();
      sub_13118();
LABEL_84:
      uint64_t v183 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
      goto LABEL_85;
    }

    sub_8498(28526LL, 0xE200000000000000LL, 7562617LL, 0xE300000000000000LL);
    uint64_t v175 = sub_13188();
    sub_13018(v175, type metadata accessor for EmergencyNLIntent);
    sub_12F5C();
    sub_13118();
    if ((v117 & 1) != 0) {
      goto LABEL_84;
    }
    goto LABEL_57;
  }

  if (v67 == enum case for Parse.directInvocation(_:))
  {
    sub_2F4E8(v3[12]);
    uint64_t v95 = v266;
    uint64_t v96 = v276;
    uint64_t v97 = sub_13094();
    uint64_t v98 = v274;
    v99(v97);
    uint64_t v100 = (os_log_s *)v282;
    sub_3CC8((uint64_t)v282, (uint64_t)&v293);
    uint64_t v101 = v265;
    uint64_t v102 = v286;
    v283(v265, v100, v286);
    uint64_t v75 = *(uint64_t (**)(void, void, void))(v95 + 16);
    uint64_t v103 = v75(v69, v96, v98);
    Logger.logObject.getter(v103);
    os_log_type_t v104 = sub_EEB4();
    if (sub_12FD8(v104))
    {
      uint64_t v105 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v106 = sub_3CD4(32LL);
      *(void *)&__int128 v287 = v106;
      *(_DWORD *)uint64_t v105 = 136315138;
      uint64_t v107 = v254;
      v75(v254, v69, v274);
      uint64_t v108 = String.init<A>(describing:)(v107);
      uint64_t v75 = (uint64_t (*)(void, void, void))v109;
      uint64_t v110 = sub_130A8(v108, v109);
      uint64_t v111 = sub_12F68(v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v111, v112, v105 + 4, v105 + 12);
      swift_bridgeObjectRelease(v75);
      (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v69, v274);
      sub_67F8(&dword_0, v100, (os_log_type_t)v52, "getConfirmationFromInput directInvocation: %s", v105);
      sub_67DC(v106);
      sub_3CA0(v106);
      sub_3CA0((uint64_t)v105);

      uint64_t v113 = v265;
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v69, v98);

      uint64_t v113 = v101;
    }

    ((void (*)(uint64_t, uint64_t (*)(void, void, void)))v281)(v113, v102);
    unint64_t v89 = v271;
    uint64_t v114 = (uint8_t *)0xD000000000000034LL;
    uint64_t v146 = sub_1310C();
    a1 = v280;
    if (v146 == 0xD000000000000035LL && v147 == 0x800000000005B240LL)
    {
      uint64_t v148 = swift_bridgeObjectRelease(0x800000000005B240LL);
    }

    else
    {
      char v176 = sub_8498(v146, v147, 0xD000000000000035LL, 0x800000000005B240LL);
      uint64_t v148 = sub_1FD7C();
      if ((v176 & 1) == 0)
      {
        uint64_t v201 = sub_1310C();
        uint64_t v119 = v202;
        if (v201 == 0xD000000000000034LL && v202 == 0x800000000005B280LL)
        {
          swift_bridgeObjectRelease(0x800000000005B280LL);
          sub_12F34();
        }

        else
        {
          char v216 = sub_8498(v201, v202, 0xD000000000000034LL, 0x800000000005B280LL);
          sub_1FD7C();
          sub_12F34();
          uint64_t v76 = v261;
          if ((v216 & 1) == 0) {
            goto LABEL_77;
          }
        }

        goto LABEL_88;
      }
    }

    uint64_t v177 = Parse.DirectInvocation.userData.getter(v148);
    if (v177)
    {
      uint64_t v178 = v177;
      uint64_t v179 = sub_2F544();
      sub_2A82C(v179, v180, v178, &v287);
      sub_84A8();
      sub_1FD7C();
      uint64_t v114 = v275;
      if (*((void *)&v288 + 1))
      {
        if ((swift_dynamicCast(&v290, &v287, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          if (v290 == 0x656D7269666E6F63LL && v291 == 0xE900000000000064LL)
          {
            sub_12F34();
            swift_bridgeObjectRelease(0xE900000000000064LL);
            goto LABEL_84;
          }

          char v182 = sub_8498(v290, v291, 0x656D7269666E6F63LL, 0xE900000000000064LL);
          sub_12F34();
          sub_1FD7C();
          if ((v182 & 1) != 0) {
            goto LABEL_84;
          }
          goto LABEL_57;
        }

LABEL_56:
        sub_12F34();
        goto LABEL_57;
      }
    }

    else
    {
      __int128 v287 = 0u;
      __int128 v288 = 0u;
      sub_13118();
    }

    sub_E988((uint64_t)&v287, (uint64_t *)&unk_7A610);
    goto LABEL_56;
  }

  if (v67 == enum case for Parse.uso(_:))
  {
    sub_2F4E8(v3[12]);
    uint64_t v120 = v252;
    uint64_t v121 = v264;
    uint64_t v122 = sub_13094();
    uint64_t v123 = v267;
    sub_2F5E4(v122, v124, v125);
    uint64_t v126 = (os_log_s *)v282;
    sub_3CC8((uint64_t)v282, (uint64_t)&v293);
    uint64_t v127 = v258;
    sub_12EF0(v258);
    uint64_t v128 = *(void (**)(uint64_t (*)(void, void, void), uint64_t, uint64_t))(v120 + 16);
    uint64_t v75 = v260;
    v128(v260, v121, v123);
    sub_13124();
    os_log_type_t v129 = sub_EEB4();
    BOOL v130 = sub_12FD8(v129);
    __int128 v284 = (void (*)(void, void, void))v128;
    if (v130)
    {
      uint64_t v131 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v132 = sub_3CD4(32LL);
      uint64_t v133 = v267;
      v279 = (uint64_t (*)(uint64_t, void, void (*)(void, void)))v132;
      *(void *)&__int128 v287 = v132;
      *(_DWORD *)uint64_t v131 = 136315138;
      __int128 v285 = v131 + 4;
      uint64_t v134 = v246;
      v128(v246, (uint64_t)v75, v133);
      uint64_t v135 = String.init<A>(describing:)(v134);
      unint64_t v137 = v136;
      uint64_t v138 = sub_130A8(v135, v136);
      uint64_t v139 = sub_12F68(v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v139, v140, v285, v131 + 12);
      unint64_t v141 = v137;
      uint64_t v75 = v286;
      uint64_t v142 = (uint64_t (*)(void, void))v281;
      swift_bridgeObjectRelease(v141);
      __int128 v285 = *(void **)(v120 + 8);
      ((void (*)(uint64_t (*)(void, void, void), uint64_t))v285)(v260, v133);
      sub_67F8(&dword_0, v126, (os_log_type_t)v123, "getConfirmationFromInput usoParse: %s", v131);
      uint64_t v143 = (uint64_t)v279;
      sub_67DC((uint64_t)v279);
      sub_3CA0(v143);
      sub_3CA0((uint64_t)v131);

      uint64_t v144 = v142(v258, v75);
    }

    else
    {
      __int128 v285 = *(void **)(v120 + 8);
      ((void (*)(uint64_t (*)(void, void, void), uint64_t))v285)(v75, v267);

      uint64_t v144 = sub_12F50(v127);
    }

    unint64_t v89 = v271;
    uint64_t v184 = v257;
    uint64_t v185 = v255;
    uint64_t v186 = v264;
    USOParse.userParse.getter(v144);
    *((void *)&v288 + 1) = &type metadata for EmergencyFeatureFlagsKey;
    unint64_t v289 = sub_EA88();
    LOBYTE(v28_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 2;
    char v187 = isFeatureEnabled(_:)(&v287);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(&v287);
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v185, v187 & 1);
    uint64_t v114 = (uint8_t *)v256;
    int v188 = *(unsigned __int8 *)(v184 + *(int *)(v256 + 36));
    if (v188 == 2)
    {
      int v189 = *((unsigned __int8 *)sub_3324(v250, v250[3]) + 32);
      uint64_t v190 = v248;
      v284(v248, v186, v267);
      if (v189 == 1)
      {
        char v191 = sub_4ADB8();
        sub_12F00(v190);
        uint64_t v192 = v249;
        if ((v191 & 1) != 0)
        {
          uint64_t v193 = (os_log_s *)v282;
          sub_3CC8((uint64_t)v282, (uint64_t)&v287);
          uint64_t v194 = v244;
          sub_12EF0(v244);
          sub_2F65C();
          os_log_type_t v195 = sub_EEB4();
          if (sub_EDE4(v195))
          {
            uint64_t v196 = (_WORD *)sub_3CD4(2LL);
            sub_182E4(v196);
            sub_EDA8(&dword_0, v193, (os_log_type_t)v192, "Found webSearch confirmation", v114);
            sub_3CA0((uint64_t)v114);
          }

          uint64_t v238 = sub_12F50(v194);
          sub_2F5A0(v238, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
          sub_12F00(v264);
          goto LABEL_88;
        }
      }

      else
      {
        sub_12F00(v190);
        uint64_t v192 = v249;
      }

      uint64_t v119 = *((unsigned __int8 *)sub_3324(v250, v250[3]) + 32);
      sub_11D80(v184, v192);
      if (!(_DWORD)v119) {
        __asm { BR              X10 }
      }

      sub_EAF0(v192, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      uint64_t v76 = v261;
      sub_2F5A0(v215, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_12F00(v264);
      goto LABEL_77;
    }

    int v203 = v188 & 1;
    uint64_t v204 = (os_log_s *)v282;
    sub_3CC8((uint64_t)v282, (uint64_t)&v287);
    uint64_t v205 = v247;
    uint64_t v206 = sub_12EF0(v247);
    Logger.logObject.getter(v206);
    os_log_type_t v207 = sub_EEB4();
    if (sub_12FD8(v207))
    {
      unint64_t v208 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v209 = sub_3CD4(32LL);
      uint64_t v290 = v209;
      *(_DWORD *)unint64_t v208 = 136315138;
      LOBYTE(v29_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v203;
      uint64_t v210 = String.init<A>(describing:)(&v292);
      unint64_t v212 = v211;
      uint64_t v292 = sub_543A4(v210, v211, &v290);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v292, &v293, v208 + 4, v208 + 12);
      swift_bridgeObjectRelease(v212);
      sub_67F8(&dword_0, v204, (os_log_type_t)v114, "Found confirmation: %s", v208);
      sub_67DC(v209);
      sub_3CA0(v209);
      sub_3CA0((uint64_t)v208);
    }

    sub_12F50(v205);
    uint64_t v213 = v264;
    sub_13118();
    if (!v203)
    {
      uint64_t v214 = swift_bridgeObjectRelease(0xE300000000000000LL);
      sub_2F5A0(v214, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_12F00(v213);
      goto LABEL_84;
    }

    sub_8498(28526LL, 0xE200000000000000LL, 7562617LL, 0xE300000000000000LL);
    uint64_t v234 = sub_13188();
    sub_2F5A0(v234, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    sub_12F00(v213);
LABEL_57:
    uint64_t v183 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
LABEL_85:
    uint64_t v235 = *v183;
    uint64_t v236 = sub_12FE8();
    sub_13194();
    v237(v114, v235, v236);
    sub_12FE8();
    sub_1FE38();
    uint64_t v233 = v236;
LABEL_89:
    sub_3F18(v230, v231, v232, v233);
    goto LABEL_90;
  }

  uint64_t v159 = v282;
  sub_3CC8((uint64_t)v282, (uint64_t)&v287);
  uint64_t v160 = v259;
  sub_12EF0(v259);
  uint64_t v161 = v251;
  sub_12F7C();
  sub_13124();
  os_log_type_t v162 = sub_EF3C();
  if (sub_12F10(v162))
  {
    uint64_t v163 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v164 = (void *)sub_3CD4(32LL);
    __int128 v285 = v164;
    uint64_t v293 = (uint64_t)v164;
    *uint64_t v163 = 136315138;
    unint64_t v253 = v3;
    __int128 v284 = (void (*)(void, void, void))(v163 + 1);
    uint64_t v165 = v245;
    Input.parse.getter(v164);
    uint64_t v166 = String.init<A>(describing:)(v165);
    uint64_t v168 = sub_13164(v166, v167);
    uint64_t v169 = sub_12F68(v168);
    uint64_t v3 = v253;
    sub_130E0(v169, v170, (uint64_t)v284);
    sub_84A8();
    sub_2F488(v161);
    sub_12F20(&dword_0, v171, v172, "Failed to get confirmation, not a supported parse: %s");
    uint64_t v173 = (void (*)(void, void))v285;
    sub_67DC((uint64_t)v285);
    sub_3CA0((uint64_t)v173);
    sub_3CA0((uint64_t)v163);

    uint64_t v174 = v259;
  }

  else
  {
    sub_2F488(v161);

    uint64_t v174 = v160;
  }

  sub_12F50(v174);
  sub_12FE8();
  uint64_t v197 = sub_1304C();
  sub_3F18(v197, v198, v199, v200);
  sub_2F4E8(v3[1]);
LABEL_90:
  sub_7DF0();
}

uint64_t sub_2C07C(uint64_t a1, uint64_t a2)
{
  v3[60] = a2;
  v3[61] = v2;
  v3[59] = a1;
  uint64_t v4 = sub_3974(&qword_791E0);
  v3[62] = sub_3C88(*(void *)(v4 - 8));
  uint64_t v5 = type metadata accessor for DialogPhase(0LL);
  v3[63] = sub_3C88(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[64] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[65] = v7;
  v3[66] = sub_3C88(v7);
  uint64_t v8 = type metadata accessor for NLContextUpdate(0LL);
  v3[67] = v8;
  v3[68] = *(void *)(v8 - 8);
  v3[69] = sub_45A0();
  v3[70] = sub_45A0();
  uint64_t v9 = sub_3974((uint64_t *)&unk_7A630);
  v3[71] = sub_3C88(*(void *)(v9 - 8));
  uint64_t v10 = type metadata accessor for ActivityType(0LL);
  v3[72] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[73] = v11;
  v3[74] = sub_3C88(v11);
  uint64_t v12 = sub_6820();
  v3[75] = v12;
  v3[76] = *(void *)(v12 - 8);
  v3[77] = sub_45A0();
  v3[78] = sub_45A0();
  v3[79] = sub_45A0();
  v3[80] = sub_45A0();
  v3[81] = sub_45A0();
  sub_4588();
  return sub_451C();
}

uint64_t sub_2C19C(uint64_t a1)
{
  uint64_t v2 = (void *)v1[81];
  uint64_t v3 = v1[76];
  uint64_t v4 = v1[75];
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  v1[82] = v5;
  sub_3CC8(v5, (uint64_t)(v1 + 33));
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v1[83] = v6;
  uint64_t v78 = v6;
  uint64_t v7 = ((uint64_t (*)(void *, uint64_t, uint64_t))v6)(v2, v5, v4);
  uint64_t v8 = v2;
  Logger.logObject.getter(v7);
  os_log_type_t v9 = sub_67D4();
  if (sub_6728(v9))
  {
    uint64_t v10 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v10 = 0;
    sub_2F688();
    sub_EDA8(v11, v12, v13, v14, v10);
    sub_3CA0((uint64_t)v10);
  }

  uint64_t v15 = (void *)v1[81];
  uint64_t v16 = v1[76];
  uint64_t v17 = v1[75];
  uint64_t v18 = v1[61];

  uint64_t v19 = *(uint64_t (**)(void *, uint64_t))(v16 + 8);
  v1[84] = v19;
  uint64_t v85 = v19;
  v19(v15, v17);
  uint64_t v20 = *(void *)(v18 + 184);
  if (v20)
  {
    uint64_t v21 = v1[74];
    uint64_t v22 = v1[73];
    uint64_t v23 = v1[72];
    uint64_t v24 = v1[71];
    uint64_t v80 = *(void *)(v1[61] + 176LL);
    uint64_t v25 = swift_bridgeObjectRetain(v20);
    static SiriKitEventSender.current.getter(v1 + 18, v25);
    uint64_t v26 = v1[21];
    uint64_t v82 = v1[22];
    sub_3324(v1 + 18, v26);
    type metadata accessor for SiriKitEvent(0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))( v21,  enum case for ActivityType.confirmation(_:),  v23);
    uint64_t v27 = enum case for SiriKitReliabilityCodes.normal(_:);
    uint64_t v28 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    sub_13194();
    v29(v24, v27, v28);
    sub_1FE38();
    sub_3F18(v30, v31, v32, v28);
    uint64_t v33 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v21, v80, v20, v24, nullsub_1, 0LL);
    dispatch thunk of SiriKitEventSending.send(_:)(v33, v26, v82);
    sub_2F468();
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v1 + 18);
  }

  uint64_t v34 = v1[80];
  uint64_t v77 = v1[75];
  uint64_t v35 = (os_log_s *)v1[70];
  uint64_t v37 = v1[60];
  uint64_t v36 = v1[61];
  uint64_t v38 = (void **)sub_2F628();
  uint64_t v39 = *v38;
  v1[85] = *v38;
  uint64_t v81 = (void *)(v36 + 16);
  uint64_t v83 = v36;
  unsigned __int8 v40 = *((_BYTE *)sub_2F628() + 32);
  unint64_t v41 = *((unsigned __int8 *)sub_3324((void *)(v36 + 16), *(void *)(v36 + 40)) + 33);
  uint64_t v43 = *(void *)(v37 + 48);
  unint64_t v42 = *(void *)(v37 + 56);
  id v44 = v39;
  sub_6848(v40, v41, v43, v42);
  uint64_t v46 = EmergencyOrganizationInfo.asRREntities()(v45);
  uint64_t v47 = v35;
  NLContextUpdate.rrEntities.setter(v46);
  sub_3CC8(v5, (uint64_t)(v1 + 42));
  v78(v34, v5, v77);
  sub_2F65C();
  os_log_type_t v48 = sub_67D4();
  BOOL v49 = os_log_type_enabled(v35, v48);
  uint64_t v50 = (void *)v1[80];
  uint64_t v51 = v1[75];
  if (v49)
  {
    uint64_t v52 = v1[70];
    uint64_t v53 = v1[69];
    __dst = (void *)v1[80];
    uint64_t v54 = v1[68];
    uint64_t v55 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v56 = sub_3CD4(32LL);
    uint64_t v86 = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    sub_3CC8(v52, (uint64_t)(v1 + 48));
    sub_2F5E4(v53, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 16));
    uint64_t v57 = String.init<A>(describing:)(v53);
    v1[58] = sub_543A4(v57, v58, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 58, v1 + 59, v55 + 4, v55 + 12);
    sub_1FD7C();
    sub_67F8(&dword_0, v47, v48, "EmergencyPromptForConfirmationRFFlowStrategyAsync preparing contextUpdate: %s", v55);
    sub_67DC(v56);
    sub_3CA0(v56);
    sub_3CA0((uint64_t)v55);

    uint64_t v60 = v51;
    uint64_t v59 = __dst;
  }

  else
  {

    uint64_t v59 = v50;
    uint64_t v60 = v51;
  }

  uint64_t v61 = v85(v59, v60);
  uint64_t v62 = v1[70];
  uint64_t v63 = v1[68];
  uint64_t v64 = v1[67];
  uint64_t v66 = v1[62];
  uint64_t v65 = v1[63];
  int v67 = (void *)v1[61];
  static DialogPhase.confirmation.getter(v61);
  OutputGenerationManifest.init(dialogPhase:_:)(v65, nullsub_1, 0LL);
  sub_3CC8(v62, (uint64_t)(v1 + 45));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v66, v62, v64);
  sub_1FE38();
  sub_3F18(v68, v69, v70, v64);
  OutputGenerationManifest.nlContextUpdate.setter(v66);
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  uint64_t v71 = v67[10];
  uint64_t v72 = v67[11];
  sub_3324(v67 + 7, v71);
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
  uint64_t v73 = *((unsigned __int8 *)sub_3324(v81, *(void *)(v83 + 40)) + 16);
  os_log_type_t v74 = sub_3324(v67 + 12, v67[15]);
  memcpy(v1 + 2, v74, 0x50uLL);
  unint64_t v84 = (char *)&dword_7A650 + dword_7A650;
  uint64_t v75 = (void *)swift_task_alloc(unk_7A654);
  v1[86] = v75;
  *uint64_t v75 = v1;
  v75[1] = sub_2C684;
  return ((uint64_t (*)(void *, void *, void *, uint64_t))v84)(v1 + 12, v1 + 28, v1 + 2, v73);
}

uint64_t sub_2C684()
{
  uint64_t v2 = *(void *)(v1 + 688);
  *uint64_t v3 = *v0;
  *(_OWORD *)(v1 + 696) = *(_OWORD *)(v1 + 96);
  *(void *)(v1 + 71_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v1 + 112);
  *(_OWORD *)(v1 + 720) = *(_OWORD *)(v1 + 120);
  *(void *)(v1 + 736) = *(void *)(v1 + 136);
  swift_task_dealloc(v2);
  sub_4588();
  return sub_451C();
}

unint64_t sub_2C6E4()
{
  uint64_t v1 = (void *)v0[87];
  if (!v1) {
    goto LABEL_10;
  }
  unint64_t result = sub_2E154(v1);
  if (!result)
  {
    __break(1u);
    goto LABEL_57;
  }

  unint64_t v3 = result;
  if (result >> 62)
  {
    if (sub_2F610(result & 0xFFFFFFFFFFFFFF8LL)) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }

  if (!*(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_9:
    sub_1FD7C();
LABEL_10:
    uint64_t v4 = 0LL;
    goto LABEL_11;
  }

LABEL_5:
  sub_2F5B4();
  if ((v3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = sub_2F564();
  }

  else
  {
    uint64_t v4 = *(void *)(v3 + 32);
    swift_unknownObjectRetain(v4);
  }

  sub_1FD7C();
LABEL_11:
  v0[93] = v4;
  uint64_t v5 = (void *)v0[88];
  if (!v5) {
    goto LABEL_20;
  }
  unint64_t result = sub_2E154(v5);
  if (!result)
  {
LABEL_57:
    __break(1u);
    return result;
  }

  unint64_t v6 = result;
  if (result >> 62)
  {
    if (sub_2F610(result & 0xFFFFFFFFFFFFFF8LL)) {
      goto LABEL_15;
    }
  }

  else if (*(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8LL)))
  {
LABEL_15:
    sub_2F5B4();
    if ((v6 & 0xC000000000000001LL) != 0)
    {
      uint64_t v7 = sub_2F564();
    }

    else
    {
      uint64_t v7 = *(void *)(v6 + 32);
      swift_unknownObjectRetain(v7);
    }

    sub_1FD7C();
    goto LABEL_21;
  }

  sub_1FD7C();
LABEL_20:
  uint64_t v7 = 0LL;
LABEL_21:
  v0[94] = v7;
  if (v4)
  {
    swift_getObjectType(v4);
    swift_unknownObjectRetain(v4);
    uint64_t v8 = sub_3D5F8();
    unint64_t v10 = v9;
    swift_unknownObjectRelease(v4);
  }

  else
  {
    uint64_t v8 = 0LL;
    unint64_t v10 = 0xC000000000000000LL;
  }

  v0[96] = v10;
  v0[95] = v8;
  unint64_t v101 = v10;
  if (v7)
  {
    swift_getObjectType(v7);
    swift_unknownObjectRetain(v7);
    uint64_t v11 = sub_3D5F8();
    unint64_t v13 = v12;
    swift_unknownObjectRelease(v7);
  }

  else
  {
    uint64_t v11 = 0LL;
    unint64_t v13 = 0xC000000000000000LL;
  }

  v0[98] = v13;
  v0[97] = v11;
  uint64_t v14 = (void (*)(uint8_t *, uint64_t, uint64_t))v0[83];
  uint64_t v15 = v0[82];
  uint64_t v16 = (uint8_t *)v0[79];
  uint64_t v17 = v0[75];
  sub_3CC8(v15, (uint64_t)(v0 + 36));
  v14(v16, v15, v17);
  sub_1FD2C();
  os_log_type_t v18 = sub_EEB4();
  if (sub_EDE4(v18))
  {
    uint64_t v19 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v19);
    sub_EDA8( &dword_0,  (os_log_s *)(v0 + 36),  (os_log_type_t)v15,  "EmergencyPromptForConfirmationRFFlowStrategyAsync Confirmation model successfully",  v16);
    sub_3CA0((uint64_t)v16);
  }

  uint64_t v20 = v0 + 39;
  uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[84];
  uint64_t v22 = v0[79];
  uint64_t v23 = v0[75];
  uint64_t v24 = v0[61];

  v21(v22, v23);
  id v25 = objc_msgSend((id)*sub_3324((void *)(v24 + 16), *(void *)(v24 + 40)), "dialog");
  unint64_t v26 = sub_2F520();
  uint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0) {
      uint64_t v89 = v27;
    }
    else {
      uint64_t v89 = v27 & 0xFFFFFFFFFFFFFF8LL;
    }
    sub_2F5CC();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v89);
    sub_1FD7C();
  }

  else
  {
    uint64_t v28 = *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v95 = v0 + 57;
  unint64_t v99 = v13;
  uint64_t v100 = v11;
  if (v28)
  {
    sub_34ABC(0LL, (v27 & 0xC000000000000001LL) == 0, v27);
    if ((v27 & 0xC000000000000001LL) != 0) {
      id v29 = (id)sub_2F564();
    }
    else {
      id v29 = *(id *)(v27 + 32);
    }
    uint64_t v30 = v29;
    sub_1FD7C();
    id v31 = [v30 fullPrint];

    uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    unint64_t v33 = v32;
  }

  else
  {
    sub_1FD7C();
    uint64_t v96 = 0LL;
    unint64_t v33 = 0LL;
  }

  v0[99] = v33;
  uint64_t v34 = (void (*)(uint64_t, uint64_t, uint64_t))v0[83];
  uint64_t v35 = v0[82];
  uint64_t v36 = v0[78];
  uint64_t v37 = v0[75];
  sub_3CC8(v35, (uint64_t)(v0 + 39));
  v34(v36, v35, v37);
  swift_bridgeObjectRetain_n(v33, 2LL);
  sub_1FD2C();
  os_log_type_t v38 = sub_67D4();
  BOOL v39 = sub_6728(v38);
  unsigned __int8 v40 = (void (*)(uint64_t, uint64_t))v0[84];
  uint64_t v41 = v0[78];
  uint64_t v42 = v0[75];
  unint64_t v103 = v33;
  uint64_t v98 = v8;
  if (v39)
  {
    uint64_t v92 = v0[78];
    uint64_t v43 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v44 = sub_3CD4(32LL);
    uint64_t v104 = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    v0[54] = v96;
    v0[55] = v33;
    swift_bridgeObjectRetain(v33);
    sub_3974((uint64_t *)&unk_7A668);
    uint64_t v45 = String.init<A>(describing:)(v0 + 54);
    unint64_t v47 = v46;
    v0[56] = sub_543A4(v45, v46, &v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v95, v43 + 4, v43 + 12);
    swift_bridgeObjectRelease(v47);
    sub_2F664();
    sub_2F688();
    sub_67F8(v48, v49, v50, v51, v43);
    sub_67DC(v44);
    sub_3CA0(v44);
    uint64_t v52 = (uint64_t)v43;
    uint64_t v8 = v98;
    sub_3CA0(v52);

    uint64_t v53 = v92;
  }

  else
  {
    sub_2F664();

    uint64_t v53 = v41;
  }

  v40(v53, v42);
  uint64_t v54 = (void (*)(void *, uint64_t, uint64_t))v0[83];
  uint64_t v55 = v0[82];
  uint64_t v56 = (void *)v0[77];
  uint64_t v57 = v0[75];
  if (v33) {
    unint64_t v58 = v33;
  }
  else {
    unint64_t v58 = 0xE000000000000000LL;
  }
  uint64_t v59 = v0[61];
  sub_3CC8(v0[82], (uint64_t)(v0 + 51));
  v54(v56, v55, v57);
  swift_retain_n(v59, 2LL);
  sub_2F5D4();
  sub_2F5CC();
  sub_2F0C0(v8, v101);
  sub_2F61C();
  unint64_t v94 = v58;
  swift_bridgeObjectRetain(v58);
  sub_2F5D4();
  sub_2F5CC();
  sub_2F0C0(v8, v101);
  uint64_t v60 = sub_2F61C();
  Logger.logObject.getter(v60);
  os_log_type_t v61 = sub_67D4();
  BOOL v62 = sub_6728(v61);
  uint64_t v63 = (void (*)(uint64_t, uint64_t))v0[84];
  uint64_t v64 = v0[77];
  uint64_t v65 = v0[75];
  uint64_t v66 = v0[61];
  if (v62)
  {
    uint64_t v93 = v0[77];
    uint64_t v91 = v0[75];
    int v67 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v90 = sub_3CD4(32LL);
    uint64_t v104 = v90;
    *(_DWORD *)int v67 = 136315138;
    id v68 = (id)*sub_3324((void *)(v66 + 16), *(void *)(v66 + 40));
    id v69 = [v68 description];
    uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    unint64_t v72 = v71;

    v0[57] = sub_543A4(v70, v72, &v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v95, v0 + 58, v67 + 4, v67 + 12);
    swift_bridgeObjectRelease(v72);
    sub_2F604();
    sub_2F688();
    sub_67F8(v73, v74, v75, v76, v67);
    sub_67DC(v90);
    sub_3CA0(v90);
    sub_3CA0((uint64_t)v67);

    v63(v93, v91);
  }

  else
  {
    sub_2F604();

    v63(v64, v65);
  }

  uint64_t v77 = v0[92];
  uint64_t v78 = v0[91];
  uint64_t v79 = v0[90];
  uint64_t v80 = v0[89];
  if (v103) {
    uint64_t v81 = v96;
  }
  else {
    uint64_t v81 = 0LL;
  }
  uint64_t v97 = (void *)v0[85];
  uint64_t v82 = type metadata accessor for ResponseFactory(0LL);
  sub_45A8(v82);
  v0[100] = ResponseFactory.init()();
  v0[26] = &unk_6F650;
  v0[27] = sub_2F104();
  uint64_t v83 = (void *)swift_allocObject(&unk_6EE88, 96LL, 7LL);
  v0[23] = v83;
  v83[2] = v81;
  v83[3] = v94;
  v83[4] = v80;
  v83[5] = v79;
  v83[6] = v78;
  v83[7] = v77;
  v83[8] = v98;
  v83[9] = v101;
  v83[10] = v100;
  v83[11] = v99;
  uint64_t v84 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v85 = sub_2F670(v84);
  *(_OWORD *)(v85 + 16) = xmmword_56DC0;
  *(void *)(v85 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v97;
  uint64_t v104 = v85;
  specialized Array._endMutation()();
  uint64_t v86 = v104;
  v0[101] = v104;
  id v87 = v97;
  sub_2F5D4();
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRetain(v77);
  sub_2F0C0(v98, v101);
  sub_2F0C0(v100, v99);
  v0[102] = v88;
  *uint64_t v88 = v0;
  v88[1] = sub_2CEC8;
  return ((uint64_t (*)(void, void *, uint64_t, void))v102)(v0[59], v0 + 23, v86, v0[66]);
}

uint64_t sub_2CEC8()
{
  uint64_t v1 = (void *)(v0 + 184);
  sub_2F460(*(void *)(v0 + 816), &v6);
  sub_2F468();
  sub_1FD7C();
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v1);
  sub_4588();
  return swift_task_switch(v2, v3, v4);
}

uint64_t sub_2CF30()
{
  uint64_t v5 = *(void *)(v0 + 752);
  uint64_t v7 = *(void *)(v0 + 744);
  uint64_t v8 = *(void **)(v0 + 704);
  unint64_t v9 = *(void **)(v0 + 696);
  uint64_t v12 = *(void *)(v0 + 648);
  uint64_t v13 = *(void *)(v0 + 640);
  uint64_t v14 = *(void *)(v0 + 632);
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v16 = *(void *)(v0 + 616);
  uint64_t v17 = *(void *)(v0 + 592);
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v18 = *(void *)(v0 + 568);
  uint64_t v19 = *(void *)(v0 + 552);
  uint64_t v10 = *(void *)(v0 + 544);
  uint64_t v11 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v4 = *(void *)(v0 + 520);
  uint64_t v6 = *(void *)(v0 + 512);
  uint64_t v20 = *(void *)(v0 + 504);
  uint64_t v21 = *(void *)(v0 + 496);

  sub_2F694();
  sub_2F640();
  sub_1FD7C();
  sub_2F594();
  sub_2F530();
  sub_1FD7C();
  sub_2F694();
  sub_2F640();
  sub_2F594();
  sub_2F530();
  sub_2F694();
  sub_2F640();
  sub_2F594();
  sub_2F530();
  swift_unknownObjectRelease(v5);
  swift_unknownObjectRelease(v7);

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v6);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v1);
  swift_task_dealloc(v19);
  swift_task_dealloc(v2);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2D114(os_log_s *a1@<X0>, void *a2@<X8>)
{
  uint64_t v96 = a2;
  sub_3974((uint64_t *)&unk_7A600);
  sub_EDD8();
  __chkstk_darwin(v4);
  sub_6750();
  uint64_t v90 = v5;
  uint64_t v6 = sub_12FE8();
  uint64_t v94 = *(void *)(v6 - 8);
  sub_EDD8();
  __chkstk_darwin(v7);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v8);
  sub_1300C();
  uint64_t v93 = v9;
  uint64_t v10 = type metadata accessor for Input(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_66F4();
  uint64_t v92 = v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v80 - v14;
  uint64_t v16 = sub_6820();
  sub_12FFC();
  __chkstk_darwin(v17);
  sub_66F4();
  uint64_t v95 = v18;
  __chkstk_darwin(v19);
  sub_EE64();
  uint64_t v85 = v20;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v80 - v23;
  uint64_t v25 = Logger.emergency.unsafeMutableAddressor(v22);
  sub_3CC8(v25, (uint64_t)v100);
  id v87 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v88 = v25;
  v87(v24, v25, v16);
  uint64_t v86 = v11;
  unint64_t v26 = *(uint64_t (**)(uint64_t, os_log_s *, uint64_t))(v11 + 16);
  uint64_t v91 = a1;
  uint64_t v82 = v26;
  uint64_t v27 = v26((uint64_t)v15, a1, v10);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = sub_3CD4(12LL);
    uint64_t v81 = v2;
    id v31 = (uint8_t *)v30;
    uint64_t v32 = sub_3CD4(32LL);
    v99[0] = v32;
    uint64_t v84 = v6;
    *(_DWORD *)id v31 = 136315138;
    uint64_t v80 = v31 + 4;
    sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v10, v33);
    uint64_t v36 = sub_13164(v34, v35);
    uint64_t v37 = sub_130E8(v36);
    uint64_t v6 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v38, v80, v31 + 12);
    sub_84A8();
    sub_2F508();
    sub_67F8( &dword_0,  v28,  v29,  "EmergencyPromptForConfirmationRFFlowStrategyAsync parseConfirmationResponse. Input: %s",  v31);
    sub_67DC(v32);
    sub_3CA0(v32);
    sub_3CA0((uint64_t)v31);

    BOOL v39 = *(os_log_s **)(v81 + 8);
  }

  else
  {
    sub_2F508();

    BOOL v39 = *(os_log_s **)(v2 + 8);
  }

  ((void (*)(char *, uint64_t))v39)(v24, v16);
  uint64_t v40 = v16;
  uint64_t v41 = v90;
  uint64_t v42 = v91;
  sub_2AAC8((uint64_t)v91, (void *)(v89 + 16), v90);
  int v43 = sub_5FE0((uint64_t)v41, 1LL, v6);
  uint64_t v44 = (uint64_t)v95;
  uint64_t v45 = v92;
  if (v43 == 1)
  {
    sub_E988((uint64_t)v41, (uint64_t *)&unk_7A600);
    sub_3CC8(v88, (uint64_t)v99);
    sub_2F5F4(v44);
    uint64_t v46 = v82(v45, v42, v10);
    uint64_t v47 = v10;
    Logger.logObject.getter(v46);
    os_log_type_t v48 = sub_EF3C();
    if (os_log_type_enabled(v42, v48))
    {
      uint64_t v49 = sub_3CD4(22LL);
      uint64_t v91 = v39;
      uint64_t v50 = v49;
      uint64_t v51 = v45;
      uint64_t v52 = sub_3CD4(64LL);
      uint64_t v98 = v52;
      *(_DWORD *)uint64_t v50 = 136315394;
      LOBYTE(v9_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 1;
      uint64_t v53 = String.init<A>(describing:)(&v97);
      uint64_t v84 = v6;
      unint64_t v55 = v54;
      uint64_t v97 = sub_13144(v53, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98, v50 + 4, v50 + 12);
      swift_bridgeObjectRelease(v55);
      *(_WORD *)(v50 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
      sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter(v47, v56);
      uint64_t v97 = sub_13144(v57, v58);
      uint64_t v6 = v84;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98, v50 + 14, v50 + 22);
      sub_84A8();
      sub_2F634(v51);
      _os_log_impl(&dword_0, v42, v48, "%s: No confirmation response found in input: %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v52, 2LL);
      sub_3CA0(v52);
      sub_3CA0(v50);

      ((void (*)(void (*)(uint64_t, void *, uint64_t), uint64_t))v91)(v95, v40);
    }

    else
    {
      sub_2F634(v45);

      ((void (*)(uint64_t, uint64_t))v39)(v44, v40);
    }

    (*(void (**)(void *, void, uint64_t))(v94 + 104))( v96,  enum case for ConfirmationResponse.rejected(_:),  v6);
  }

  else
  {
    uint64_t v59 = v93;
    uint64_t v60 = v94;
    os_log_type_t v61 = *(void (**)(void *, uint8_t *, uint64_t))(v94 + 32);
    v61(v93, v41, v6);
    sub_3CC8(v88, (uint64_t)v99);
    uint64_t v62 = v85;
    sub_2F5F4(v85);
    uint64_t v63 = v83;
    sub_2F5E4(v83, (uint64_t)v59, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 16));
    sub_13124();
    os_log_type_t v64 = sub_EEB4();
    if (sub_12F10(v64))
    {
      uint64_t v65 = sub_3CD4(12LL);
      uint64_t v92 = v40;
      uint64_t v66 = v6;
      uint64_t v67 = v65;
      uint64_t v68 = sub_3CD4(32LL);
      uint64_t v91 = v39;
      uint64_t v69 = v68;
      uint64_t v98 = v68;
      uint64_t v95 = (void (*)(uint64_t, void *, uint64_t))v61;
      sub_1303C(4.8149e-34);
      sub_11D44( (unint64_t *)&unk_7A640,  (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse,  (uint64_t)&protocol conformance descriptor for ConfirmationResponse);
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter(v66, v70);
      uint64_t v97 = sub_13144(v71, v72);
      sub_130E0((uint64_t)&v97, (uint64_t)&v98, (uint64_t)v39);
      sub_84A8();
      uint64_t v73 = v95;
      sub_2F4E8(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
      sub_12F20(&dword_0, v74, v75, "Received confirmation: %s");
      sub_67DC(v69);
      sub_3CA0(v69);
      uint64_t v76 = v67;
      uint64_t v6 = v66;
      sub_3CA0(v76);

      ((void (*)(uint64_t, uint64_t))v91)(v85, v92);
      v73((uint64_t)v96, v93, v66);
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v63, v6);

      ((void (*)(uint64_t, uint64_t))v39)(v62, v40);
      v61(v96, (uint8_t *)v93, v6);
    }
  }

  sub_1FE38();
  sub_3F18(v77, v78, v79, v6);
  sub_7DF0();
}

uint64_t sub_2D78C(uint64_t a1)
{
  v2[15] = a1;
  void v2[16] = v1;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[17] = sub_3C88(*(void *)(v3 - 8));
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[18] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[19] = v5;
  v2[20] = sub_3C88(v5);
  uint64_t v6 = sub_3974((uint64_t *)&unk_7A630);
  v2[21] = sub_3C88(*(void *)(v6 - 8));
  uint64_t v7 = type metadata accessor for ActivityType(0LL);
  v2[22] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[23] = v8;
  v2[24] = sub_3C88(v8);
  uint64_t v9 = sub_6820();
  v2[25] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[26] = v10;
  v2[27] = sub_3C88(v10);
  sub_4588();
  return sub_451C();
}

uint64_t sub_2D834(uint64_t a1)
{
  uint64_t v3 = v1[26];
  uint64_t v2 = v1[27];
  uint64_t v4 = (uint8_t *)v1[25];
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, (uint64_t)(v1 + 12));
  uint64_t v6 = sub_2F5E4(v2, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  uint64_t v7 = (void *)v2;
  Logger.logObject.getter(v6);
  os_log_type_t v8 = sub_67D4();
  if (sub_6728(v8))
  {
    uint64_t v9 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v9);
    sub_2F688();
    sub_EDA8(v10, v11, v12, v13, v4);
    sub_3CA0((uint64_t)v4);
  }

  uint64_t v15 = v1[26];
  uint64_t v14 = v1[27];
  uint64_t v16 = v1[25];
  uint64_t v17 = v1[16];

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  uint64_t v18 = *(void *)(v17 + 184);
  if (v18)
  {
    uint64_t v20 = v1[23];
    uint64_t v19 = v1[24];
    uint64_t v21 = v1[21];
    uint64_t v22 = v1[22];
    uint64_t v45 = *(void *)(v1[16] + 176LL);
    uint64_t v23 = swift_bridgeObjectRetain(v18);
    static SiriKitEventSender.current.getter(v1 + 7, v23);
    uint64_t v24 = v1[10];
    uint64_t v46 = v1[11];
    sub_3324(v1 + 7, v24);
    type metadata accessor for SiriKitEvent(0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))( v19,  enum case for ActivityType.confirmationRejected(_:),  v22);
    uint64_t v25 = enum case for SiriKitReliabilityCodes.rejectParameter(_:);
    uint64_t v26 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    sub_13194();
    v27(v21, v25, v26);
    sub_1FE38();
    sub_3F18(v28, v29, v30, v26);
    uint64_t v31 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v19, v45, v18, v21, nullsub_1, 0LL);
    dispatch thunk of SiriKitEventSending.send(_:)(v31, v24, v46);
    sub_2F468();
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v1 + 7);
  }

  uint64_t v33 = (void *)v1[16];
  uint64_t v32 = v1[17];
  uint64_t v34 = v33[10];
  uint64_t v35 = v33[11];
  sub_3324(v33 + 7, v34);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
  uint64_t v36 = (void *)sub_3324(v33 + 2, v33[5])[1];
  v1[28] = v36;
  id v37 = v36;
  static DialogPhase.canceled.getter();
  OutputGenerationManifest.init(dialogPhase:_:)(v32, nullsub_1, 0LL);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  uint64_t v38 = type metadata accessor for ResponseFactory(0LL);
  sub_45A8(v38);
  v1[29] = ResponseFactory.init()();
  uint64_t v39 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v40 = sub_2F670(v39);
  *(_OWORD *)(v40 + 16) = xmmword_56DC0;
  *(void *)(v40 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v37;
  uint64_t v48 = v40;
  specialized Array._endMutation()();
  v1[30] = v48;
  id v42 = v37;
  int v43 = (void *)swift_task_alloc(v41);
  v1[31] = v43;
  *int v43 = v1;
  v43[1] = sub_2DB14;
  return ((uint64_t (*)(void, uint64_t, void))v47)(v1[15], v48, v1[20]);
}

uint64_t sub_2DB14()
{
  uint64_t v1 = *(void *)(v0 + 232);
  sub_2F460(*(void *)(v0 + 248), &v6);
  sub_84A8();
  swift_release(v1);
  sub_4588();
  return swift_task_switch(v2, v3, v4);
}

uint64_t sub_2DB68()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2DC08(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A4F4);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2DC58;
  return sub_2D78C(a1);
}

uint64_t sub_2DC58()
{
  uint64_t v2 = *v0;
  sub_2F460(*(void *)(v1 + 16), &v4);
  return sub_9ED0(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t type metadata accessor for EmergencyPromptForConfirmationRFFlowStrategyAsync()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin49EmergencyPromptForConfirmationRFFlowStrategyAsync);
}

void sub_2DCAC()
{
}

uint64_t type metadata accessor for EmergencyConfirmationRFResponseProvider(uint64_t a1)
{
  uint64_t result = qword_7A6F8;
  if (!qword_7A6F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyConfirmationRFResponseProvider);
  }
  return result;
}

uint64_t sub_2DD14(void *a1, os_log_s *a2)
{
  return sub_2E004(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2DD50(uint64_t a1, const void *a2)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_7A4EC);
  *(void *)(v2 + 144) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_2DDBC;
  return sub_2C07C(a1, v2 + 16);
}

uint64_t sub_2DDBC()
{
  uint64_t v2 = *v0;
  sub_2F460(*(void *)(v1 + 144), &v4);
  return sub_9ED0(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2DDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v8 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for EmergencyPromptForConfirmationRFFlowStrategyAsync();
  *os_log_type_t v8 = v4;
  v8[1] = sub_2F364;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t sub_2DE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v8 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)[1]);
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for EmergencyPromptForConfirmationRFFlowStrategyAsync();
  *os_log_type_t v8 = v4;
  v8[1] = sub_2F364;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)(a1, a2, v9, a4);
}

uint64_t sub_2DEE8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A4F4);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2F364;
  return sub_2D78C(a1);
}

uint64_t sub_2DF38(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A4FC);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2F364;
  return sub_2DC08(a1);
}

uint64_t sub_2DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc(async function pointer to PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)[1]);
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_2F364;
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)(a1, a2, a3, a4);
}

uint64_t sub_2E004(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_2E010(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_2E074(a1, a2, v5);
}

unint64_t sub_2E074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0);
    }
  }

  return v6;
}

uint64_t sub_2E154(void *a1)
{
  id v2 = [a1 commands];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = sub_3974((uint64_t *)&unk_7A380);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_2E1BC(uint64_t a1, uint64_t a2, void *a3)
{
  v3[37] = a1;
  v3[38] = a2;
  v3[35] = &type metadata for EmergencyModernCATProvider;
  v3[36] = &off_6EDF8;
  uint64_t v5 = swift_allocObject(&unk_6EEB0, 96LL, 7LL);
  v3[32] = v5;
  memcpy((void *)(v5 + 16), a3, 0x50uLL);
  sub_2F234(a3);
  return swift_task_switch(sub_2E240, 0LL, 0LL);
}

uint64_t sub_2E240()
{
  v0[39] = sub_3324(v0 + 32, (uint64_t)&type metadata for EmergencyModernCATProvider)[9];
  sub_EEA4();
  uint64_t v1 = (void *)sub_2F458();
  v0[40] = v1;
  sub_2F470(v1, (uint64_t)sub_2E29C);
  return sub_19DCC();
}

uint64_t sub_2E29C()
{
  if (v1) {
    sub_2F4F4();
  }
  else {
    *(void *)(v2 + 328) = v0;
  }
  sub_4588();
  return sub_2F370(v3, v4, v5);
}

uint64_t sub_2E2E8(uint64_t a1)
{
  unint64_t v3 = v2[41];
  id v4 = sub_2F55C(a1, "dialog");
  sub_2F570();
  unint64_t v5 = sub_2F520();
  sub_2F4DC(v5);
  sub_2F528();
  if (v3 >> 62)
  {
    sub_2F3F0();
    uint64_t v1 = sub_2F554();
    uint64_t v6 = sub_84A8();
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    sub_84A8();
    unint64_t v3 = 0LL;
    goto LABEL_8;
  }

  sub_2F5A8();
  if (!v1) {
    goto LABEL_7;
  }
LABEL_3:
  sub_2F4A4(v6, (v3 & 0xC000000000000001LL) == 0);
  if ((v3 & 0xC000000000000001LL) != 0) {
    uint64_t v7 = sub_2F498();
  }
  else {
    uint64_t v7 = (uint64_t)sub_2F53C();
  }
  uint64_t v1 = v7;
  uint64_t v8 = sub_84A8();
  id v9 = sub_2F54C(v8, "fullPrint");
  sub_2F5EC();
  sub_2F5DC();
  sub_2F4FC();
LABEL_8:
  v2[42] = v3;
  v2[43] = v1;
  sub_2F3D4(v2 + 32);
  sub_EEA4();
  uint64_t v10 = (void *)sub_2F458();
  v2[45] = v10;
  sub_2F470(v10, (uint64_t)sub_2E42C);
  return sub_19F0C();
}

uint64_t sub_2E3DC()
{
  v0[42] = 0LL;
  v0[43] = 0LL;
  sub_2F3D4(v0 + 32);
  sub_EEA4();
  uint64_t v1 = (void *)sub_2F458();
  v0[45] = v1;
  sub_2F470(v1, (uint64_t)sub_2E42C);
  return sub_19F0C();
}

uint64_t sub_2E42C()
{
  if (v1) {
    sub_2F4F4();
  }
  else {
    *(void *)(v2 + 368) = v0;
  }
  sub_4588();
  return sub_2F370(v3, v4, v5);
}

uint64_t sub_2E478(uint64_t a1)
{
  unint64_t v3 = *(void *)(v2 + 368);
  id v4 = sub_2F55C(a1, "dialog");
  sub_2F570();
  unint64_t v5 = sub_2F520();
  sub_2F4DC(v5);
  sub_2F528();
  if (v3 >> 62)
  {
    sub_2F3F0();
    uint64_t v12 = sub_2F554();
    uint64_t v6 = sub_84A8();
    if (v12) {
      goto LABEL_3;
    }
LABEL_7:
    sub_84A8();
    uint64_t v9 = 0LL;
    unint64_t v11 = 0LL;
    goto LABEL_8;
  }

  sub_2F5A8();
  if (!v1) {
    goto LABEL_7;
  }
LABEL_3:
  sub_2F4A4(v6, (v3 & 0xC000000000000001LL) == 0);
  if ((v3 & 0xC000000000000001LL) != 0) {
    sub_2F498();
  }
  else {
    sub_2F53C();
  }
  uint64_t v7 = sub_84A8();
  id v8 = sub_2F54C(v7, "fullPrint");
  sub_2F528();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  unint64_t v11 = v10;

LABEL_8:
  uint64_t v13 = *(void *)(v2 + 344);
  uint64_t v14 = *(uint64_t **)(v2 + 296);
  if (v13) {
    uint64_t v15 = *(void *)(v2 + 336);
  }
  else {
    uint64_t v15 = 0LL;
  }
  if (v13) {
    unint64_t v16 = *(void *)(v2 + 344);
  }
  else {
    unint64_t v16 = 0xE000000000000000LL;
  }
  if (v11) {
    uint64_t v17 = v9;
  }
  else {
    uint64_t v17 = 0LL;
  }
  uint64_t v37 = v15;
  uint64_t v38 = v17;
  if (v11) {
    unint64_t v18 = v11;
  }
  else {
    unint64_t v18 = 0xE000000000000000LL;
  }
  uint64_t v19 = sub_3974(&qword_791E8);
  uint64_t inited = swift_initStackObject(v19, v2 + 16);
  *(_OWORD *)(inited + 16) = xmmword_56FA0;
  swift_bridgeObjectRetain(v16);
  *(void *)(inited + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_2F544();
  *(void *)(inited + 40) = v21;
  *(void *)(inited + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
  sub_2F578();
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = v23;
  uint64_t v36 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  *(void *)(v2 + sub_60A4(v0 + 256, v0 + 216) = v15;
  sub_2F67C();
  *(void *)(v2 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v16;
  *(void *)(v2 + 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v24;
  *(void *)(v2 + 240) = 0x800000000005B240LL;
  *(void *)(v2 + sub_60A4(v0 - 128, v0 - 248) = v25;
  *(_OWORD *)(swift_initStackObject(v19, v2 + 96) + 16) = xmmword_56FA0;
  sub_2F5D4();
  uint64_t v26 = sub_2F544();
  uint64_t v28 = sub_2F4B0(v26, v27);
  Dictionary.init(dictionaryLiteral:)(v28, v29, (char *)&type metadata for Any + 8, &protocol witness table for String);
  *(void *)(v2 + sub_60A4(v0 + 256, v0 + 176) = v38;
  sub_2F67C();
  *(void *)(v2 + 184) = v18;
  *(void *)(v2 + 19_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v30;
  *(void *)(v2 + 200) = 0x800000000005B240LL;
  *(void *)(v2 + sub_60A4(v0 - 128, v0 - 208) = v31;
  uint64_t v32 = makeRFConfirmationButtons(confirmButton:rejectButton:device:)(v2 + 216);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease(v18);
  sub_84A8();
  sub_84A8();
  swift_bridgeObjectRelease(v36);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v2 + 256));
  uint64_t *v14 = v32;
  v14[1] = v34;
  v14[2] = v37;
  v14[3] = v16;
  v14[4] = v38;
  v14[5] = v18;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2E6DC()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(uint64_t **)(v0 + 296);
  if (v1) {
    uint64_t v3 = *(void *)(v0 + 336);
  }
  else {
    uint64_t v3 = 0LL;
  }
  uint64_t v24 = v3;
  if (v1) {
    unint64_t v4 = *(void *)(v0 + 344);
  }
  else {
    unint64_t v4 = 0xE000000000000000LL;
  }
  uint64_t v5 = sub_3974(&qword_791E8);
  uint64_t inited = swift_initStackObject(v5, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_56FA0;
  sub_2F5CC();
  *(void *)(inited + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_2F544();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
  sub_2F578();
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v9;
  uint64_t v10 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  *(void *)(v0 + sub_60A4(v0 + 256, v0 + 216) = v3;
  sub_2F67C();
  *(void *)(v0 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v4;
  *(void *)(v0 + 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v11;
  *(void *)(v0 + 240) = 0x800000000005B240LL;
  *(void *)(v0 + sub_60A4(v0 - 128, v0 - 248) = v12;
  *(_OWORD *)(swift_initStackObject(v5, v0 + 96) + 16) = xmmword_56FA0;
  swift_bridgeObjectRetain(0xE000000000000000LL);
  uint64_t v13 = sub_2F544();
  uint64_t v15 = sub_2F4B0(v13, v14);
  uint64_t v17 = Dictionary.init(dictionaryLiteral:)( v15,  v16,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  *(void *)(v0 + sub_60A4(v0 + 256, v0 + 176) = 0LL;
  sub_2F67C();
  *(void *)(v0 + 184) = 0xE000000000000000LL;
  *(void *)(v0 + 19_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v18;
  *(void *)(v0 + 200) = 0x800000000005B240LL;
  *(void *)(v0 + sub_60A4(v0 - 128, v0 - 208) = v19;
  uint64_t v20 = makeRFConfirmationButtons(confirmButton:rejectButton:device:)(v0 + 216);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease(0xE000000000000000LL);
  swift_bridgeObjectRelease(v17);
  sub_1FD7C();
  swift_bridgeObjectRelease(v10);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 256));
  uint64_t *v2 = v20;
  v2[1] = v22;
  v2[2] = v24;
  v2[3] = v4;
  v2[4] = 0LL;
  v2[5] = 0xE000000000000000LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2E884(uint64_t a1, uint64_t a2, void *a3)
{
  v3[37] = a1;
  v3[38] = a2;
  v3[35] = &type metadata for EmergencyModernCATProvider;
  v3[36] = &off_6EDF8;
  uint64_t v5 = swift_allocObject(&unk_6EEB0, 96LL, 7LL);
  v3[32] = v5;
  memcpy((void *)(v5 + 16), a3, 0x50uLL);
  sub_2F234(a3);
  return swift_task_switch(sub_2E908, 0LL, 0LL);
}

uint64_t sub_2E908()
{
  v0[39] = *sub_3324(v0 + 32, (uint64_t)&type metadata for EmergencyModernCATProvider);
  sub_EEA4();
  uint64_t v1 = (void *)sub_2F458();
  v0[40] = v1;
  sub_2F470(v1, (uint64_t)sub_2E964);
  return sub_47D28();
}

uint64_t sub_2E964()
{
  if (v1) {
    sub_2F4F4();
  }
  else {
    *(void *)(v2 + 328) = v0;
  }
  sub_4588();
  return sub_2F370(v3, v4, v5);
}

uint64_t sub_2E9B0(uint64_t a1)
{
  unint64_t v3 = v2[41];
  id v4 = sub_2F55C(a1, "dialog");
  sub_2F570();
  unint64_t v5 = sub_2F520();
  sub_2F4DC(v5);
  sub_2F528();
  if (v3 >> 62)
  {
    sub_2F3F0();
    uint64_t v1 = sub_2F554();
    uint64_t v6 = sub_84A8();
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    sub_84A8();
    unint64_t v3 = 0LL;
    goto LABEL_8;
  }

  sub_2F5A8();
  if (!v1) {
    goto LABEL_7;
  }
LABEL_3:
  sub_2F4A4(v6, (v3 & 0xC000000000000001LL) == 0);
  if ((v3 & 0xC000000000000001LL) != 0) {
    uint64_t v7 = sub_2F498();
  }
  else {
    uint64_t v7 = (uint64_t)sub_2F53C();
  }
  uint64_t v1 = v7;
  uint64_t v8 = sub_84A8();
  id v9 = sub_2F54C(v8, "fullPrint");
  sub_2F5EC();
  sub_2F5DC();
  sub_2F4FC();
LABEL_8:
  v2[42] = v3;
  v2[43] = v1;
  sub_2F3D4(v2 + 32);
  sub_EEA4();
  uint64_t v10 = (void *)sub_2F458();
  v2[45] = v10;
  sub_2F470(v10, (uint64_t)sub_2EAE0);
  return sub_2F448();
}

uint64_t sub_2EA98()
{
  v0[42] = 0LL;
  v0[43] = 0LL;
  sub_2F3D4(v0 + 32);
  sub_EEA4();
  uint64_t v1 = (void *)sub_2F458();
  v0[45] = v1;
  sub_2F470(v1, (uint64_t)sub_2EAE0);
  return sub_2F47C();
}

uint64_t sub_2EAE0()
{
  if (v1) {
    sub_2F4F4();
  }
  else {
    *(void *)(v2 + 368) = v0;
  }
  sub_4588();
  return sub_2F370(v3, v4, v5);
}

uint64_t sub_2EB2C(uint64_t a1, uint64_t a2, void *a3)
{
  v3[37] = a1;
  v3[38] = a2;
  v3[35] = &type metadata for EmergencyModernCATProvider;
  v3[36] = &off_6EDF8;
  uint64_t v5 = swift_allocObject(&unk_6EEB0, 96LL, 7LL);
  v3[32] = v5;
  memcpy((void *)(v5 + 16), a3, 0x50uLL);
  sub_2F234(a3);
  return swift_task_switch(sub_2EBB0, 0LL, 0LL);
}

uint64_t sub_2EBB0()
{
  v0[39] = *sub_3324(v0 + 32, (uint64_t)&type metadata for EmergencyModernCATProvider);
  sub_EEA4();
  uint64_t v1 = (void *)sub_2F458();
  v0[40] = v1;
  sub_2F470(v1, (uint64_t)sub_2E964);
  return sub_47D80();
}

uint64_t sub_2EC0C(uint64_t a1, uint64_t a2, void *a3)
{
  v3[37] = a1;
  v3[38] = a2;
  v3[35] = &type metadata for EmergencyModernCATProvider;
  v3[36] = &off_6EDF8;
  uint64_t v5 = swift_allocObject(&unk_6EEB0, 96LL, 7LL);
  v3[32] = v5;
  memcpy((void *)(v5 + 16), a3, 0x50uLL);
  sub_2F234(a3);
  return swift_task_switch(sub_2EC90, 0LL, 0LL);
}

uint64_t sub_2EC90()
{
  v0[39] = *sub_3324(v0 + 32, (uint64_t)&type metadata for EmergencyModernCATProvider);
  sub_EEA4();
  uint64_t v1 = (void *)sub_2F458();
  v0[40] = v1;
  sub_2F470(v1, (uint64_t)sub_2E964);
  return sub_47DD8();
}

void sub_2ECEC(uint64_t a1, uint64_t a2, const void *a3, char a4)
{
  v4[71] = a1;
  v4[69] = &type metadata for EmergencyModernCATProvider;
  v4[70] = &off_6EDF8;
  uint64_t v7 = swift_allocObject(&unk_6EEB0, 96LL, 7LL);
  v4[66] = v7;
  memcpy((void *)(v7 + 16), a3, 0x50uLL);
  __asm { BR              X10 }

uint64_t sub_2ED94()
{
  uint64_t v5 = sub_3324(v4, (uint64_t)&type metadata for EmergencyModernCATProvider);
  memcpy(v3, v5, 0x50uLL);
  sub_2F234(v0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, void *))((char *)&dword_7A690 + dword_7A690);
  uint64_t v6 = (void *)swift_task_alloc(unk_7A694);
  *(void *)(v2 + 576) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2EF70;
  return v8(v2 + 336, v1, v3);
}

uint64_t sub_2EF70()
{
  __int128 v11 = *(_OWORD *)(v0 + 352);
  __int128 v12 = *(_OWORD *)(v0 + 336);
  uint64_t v1 = sub_2F5C4(*(void *)(v0 + 576));
  id v9 = (uint64_t (*)(void))sub_2F404(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return sub_2F380(v9);
}

uint64_t sub_2EFB4()
{
  __int128 v11 = *(_OWORD *)(v0 + 496);
  __int128 v12 = *(_OWORD *)(v0 + 480);
  uint64_t v1 = sub_2F5C4(*(void *)(v0 + 584));
  id v9 = (uint64_t (*)(void))sub_2F404(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return sub_2F380(v9);
}

uint64_t sub_2EFFC()
{
  __int128 v11 = *(_OWORD *)(v0 + 448);
  __int128 v12 = *(_OWORD *)(v0 + 432);
  uint64_t v1 = sub_2F5C4(*(void *)(v0 + 592));
  id v9 = (uint64_t (*)(void))sub_2F404(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return sub_2F380(v9);
}

uint64_t sub_2F040()
{
  __int128 v11 = *(_OWORD *)(v0 + 400);
  __int128 v12 = *(_OWORD *)(v0 + 384);
  uint64_t v1 = sub_2F5C4(*(void *)(v0 + 600));
  id v9 = (uint64_t (*)(void))sub_2F404(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return sub_2F380(v9);
}

unint64_t sub_2F084()
{
  unint64_t result = qword_7A658;
  if (!qword_7A658)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___DialogElement);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7A658);
  }

  return result;
}

uint64_t sub_2F0C0(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain(result);
  }

  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

unint64_t sub_2F104()
{
  unint64_t result = qword_7A660;
  if (!qword_7A660)
  {
    unint64_t result = swift_getWitnessTable(&unk_59668, &unk_6F650);
    atomic_store(result, (unint64_t *)&qword_7A660);
  }

  return result;
}

uint64_t sub_2F140()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_2F184(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release(result);
  }

  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_2F1C8()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

void *sub_2F234(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v10 = a1[9];
  swift_retain(*a1);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  return a1;
}

uint64_t sub_2F2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2F2E4);
}

uint64_t sub_2F2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974((uint64_t *)&unk_7A600);
  return sub_5FE0(a1, a2, v4);
}

uint64_t sub_2F31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2F328);
}

uint64_t sub_2F328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974((uint64_t *)&unk_7A600);
  return sub_3F18(a1, a2, a2, v4);
}

uint64_t sub_2F370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_2F380(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2F394()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)(v1 - 8);
  *uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(v2 + 360);
  *uint64_t v3 = *v0;
  return swift_task_dealloc(v4);
}

uint64_t sub_2F3B4()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)(v1 - 8);
  *uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(v2 + 320);
  *uint64_t v3 = *v0;
  return swift_task_dealloc(v4);
}

void *sub_2F3D4(void *a1)
{
  unint64_t result = sub_3324(a1, *(void *)(v1 + 280));
  *(void *)(v1 + 35_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = result[9];
  return result;
}

uint64_t sub_2F3F0()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_2F404( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  *(_OWORD *)uint64_t v14 = a10;
  *(_OWORD *)(v14 + 16) = a9;
  *(void *)(v14 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v10;
  *(void *)(v14 + 40) = v12;
  return *(void *)(v13 + 8);
}

void sub_2F42C()
{
  uint64_t v2 = (void *)(v1 - 8);
  void *v2 = *v0;
  void *v2 = *v0;
}

uint64_t sub_2F448()
{
  return sub_1A060();
}

uint64_t sub_2F458()
{
  return swift_task_alloc(v0);
}

uint64_t sub_2F460@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = v2;
  return swift_task_dealloc(a1);
}

uint64_t sub_2F468()
{
  return swift_release(v0);
}

void *sub_2F470@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *unint64_t result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_2F47C()
{
  return sub_1A060();
}

uint64_t sub_2F488(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 288))(a1, v1);
}

uint64_t sub_2F498()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v0);
}

uint64_t sub_2F4A4(uint64_t a1, uint64_t a2)
{
  return sub_34ABC(0LL, a2, v2);
}

void *sub_2F4B0(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  v2[9] = v3;
  v2[6] = 0x64657463656A6572LL;
  v2[7] = 0xE800000000000000LL;
  return v2;
}

uint64_t sub_2F4DC(uint64_t a1)
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

uint64_t sub_2F4E8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_2F4F4()
{
  return swift_errorRelease(v0);
}

void sub_2F4FC()
{
}

uint64_t sub_2F508()
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 240) + 8LL);
  *(void *)(v2 - 240) = v3;
  return v3(v1, v0);
}

unint64_t sub_2F520()
{
  return sub_2F084();
}

void sub_2F528()
{
}

uint64_t sub_2F530()
{
  return sub_2F184(v1, v0);
}

id sub_2F53C()
{
  return *(id *)(v0 + 32);
}

uint64_t sub_2F544()
{
  return DirectInvocationURI.payloadKey.getter(2LL);
}

id sub_2F54C(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_2F554()
{
  return _CocoaArrayWrapper.endIndex.getter(v0);
}

id sub_2F55C(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_2F564()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v0);
}

void sub_2F570()
{
}

  ;
}

uint64_t sub_2F594()
{
  return sub_2F184(v1, v0);
}

void sub_2F5A0(uint64_t a1, uint64_t (*a2)(void))
{
}

  ;
}

uint64_t sub_2F5B4()
{
  if (v0) {
    uint64_t v2 = 1LL;
  }
  else {
    uint64_t v2 = 0LL;
  }
  return sub_34ABC(0LL, v2, v1);
}

uint64_t sub_2F5C4(uint64_t a1)
{
  return swift_task_dealloc(a1);
}

uint64_t sub_2F5CC()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_2F5D4()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_2F5DC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

uint64_t sub_2F5E4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

void sub_2F5EC()
{
}

uint64_t sub_2F5F4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 232))(a1, v1, v2);
}

uint64_t sub_2F604()
{
  return swift_release_n(v0, 2LL);
}

uint64_t sub_2F610@<X0>(uint64_t a1@<X8>)
{
  if (v1 >= 0) {
    return _CocoaArrayWrapper.endIndex.getter(a1);
  }
  else {
    return _CocoaArrayWrapper.endIndex.getter(v1);
  }
}

uint64_t sub_2F61C()
{
  return sub_2F0C0(v0, v1);
}

void *sub_2F628()
{
  return sub_3324(v1, *(void *)(v0 + 40));
}

uint64_t sub_2F634(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 240))(a1, v1);
}

uint64_t sub_2F640()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t sub_2F65C()
{
  return Logger.logObject.getter();
}

uint64_t sub_2F664()
{
  return swift_bridgeObjectRelease_n(v0, 2LL);
}

uint64_t sub_2F670(uint64_t a1)
{
  return swift_allocObject(a1, 40LL, 7LL);
}

  ;
}

  ;
}

uint64_t sub_2F694()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t type metadata accessor for EmergencyDomesticViolenceBasicIntentCATs(uint64_t a1)
{
  uint64_t result = qword_7A740;
  if (!qword_7A740) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyDomesticViolenceBasicIntentCATs);
  }
  return result;
}

uint64_t sub_2F6D4(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B918);
}

void sub_2F710(uint64_t a1, char a2)
{
}

void sub_2F72C(uint64_t a1, char a2)
{
}

void sub_2F748(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_2F764(uint64_t a1, char a2)
{
}

void sub_2F79C(uint64_t a1, char a2)
{
}

void sub_2F7C8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v8 = sub_3974(&qword_78BB8);
  uint64_t v9 = swift_allocObject(v8, 176LL, 7LL);
  *(_OWORD *)(v9 + 16) = xmmword_56FC0;
  uint64_t v10 = (void *)(v9 + 48);
  *(void *)(v9 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v9 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, v3, &qword_78970);
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v3, 1LL, v11) == 1)
  {
    sub_7784(v3, &qword_78970);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }

  else
  {
    *(void *)(v9 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v11;
    uint64_t v12 = sub_649C(v10);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v12, v3, v11);
  }

  *(void *)(v9 + 80) = 0x65626D754E67726FLL;
  *(void *)(v9 + 88) = 0xE900000000000072LL;
  if (a2)
  {
    uint64_t v13 = type metadata accessor for DialogPhoneNumber(0LL);
    uint64_t v14 = a2;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v9 + 104) = 0LL;
    *(void *)(v9 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
  }

  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 120) = v13;
  *(void *)(v9 + 128) = 0xD000000000000012LL;
  *(void *)(v9 + 136) = 0x800000000005ABB0LL;
  *(void *)(v9 + 168) = &type metadata for Bool;
  *(_BYTE *)(v9 + 144) = a3 & 1;
  swift_retain(a2);
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002DLL, 0x800000000005B370LL, v9);
  swift_bridgeObjectRelease(v9);
  sub_7DF0();
}

uint64_t sub_2F97C()
{
  return type metadata accessor for EmergencyDomesticViolenceBasicIntentCATs(0LL);
}

uint64_t sub_2F984(uint64_t a1)
{
  uint64_t v6 = sub_EE14((uint64_t)&v96 - v5);
  uint64_t v112 = type metadata accessor for NLIntent(v6);
  uint64_t v7 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  sub_6750();
  uint64_t v9 = sub_EE14(v8);
  type metadata accessor for Siri_Nlu_External_UserParse(v9);
  sub_EDD8();
  __chkstk_darwin(v10);
  sub_6750();
  uint64_t v12 = sub_EE14(v11);
  type metadata accessor for EmergencyDialogAct(v12);
  sub_EDD8();
  __chkstk_darwin(v13);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v14);
  uint64_t v16 = sub_EE14((uint64_t)&v96 - v15);
  uint64_t v107 = type metadata accessor for USOParse(v16);
  uint64_t v106 = *(void *)(v107 - 8);
  sub_EDD8();
  __chkstk_darwin(v17);
  sub_6750();
  uint64_t v19 = sub_EE14(v18);
  char v117 = (os_log_s *)type metadata accessor for Parse(v19);
  uint64_t v115 = *((void *)v117 - 1);
  sub_EDD8();
  __chkstk_darwin(v20);
  sub_6750();
  uint64_t v116 = v21;
  uint64_t v22 = type metadata accessor for Input(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_35344();
  uint64_t v24 = sub_6820();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v26);
  sub_ED8C();
  __chkstk_darwin(v27);
  sub_ED8C();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v96 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v96 - v33;
  uint64_t v35 = Logger.emergency.unsafeMutableAddressor(v32);
  sub_3CC8(v35, (uint64_t)v124);
  uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v114 = v35;
  uint64_t v118 = v24;
  v113(v34, v35, v24);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  uint64_t v110 = a1;
  uint64_t v37 = v36(v1, a1, v22);
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v97 = v25;
    uint64_t v40 = sub_3CD4(12LL);
    uint64_t v98 = v31;
    uint64_t v41 = (uint8_t *)v40;
    uint64_t v42 = sub_3CD4(32LL);
    uint64_t v99 = v7;
    uint64_t v43 = v42;
    v119[0] = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    uint64_t v96 = v41 + 4;
    sub_EB44( &qword_790C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v22, v44);
    unint64_t v47 = v46;
    uint64_t v122 = sub_543A4(v45, v46, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, v123, v96, v41 + 12);
    swift_bridgeObjectRelease(v47);
    sub_3531C();
    sub_67F8(&dword_0, v38, v39, "#EmergencyBasicRFFlow onInput: %s", v41);
    sub_67DC(v43);
    uint64_t v48 = v43;
    uint64_t v7 = v99;
    sub_3CA0(v48);
    uint64_t v49 = (uint64_t)v41;
    uint64_t v31 = v98;
    sub_3CA0(v49);

    uint64_t v50 = *(uint64_t (**)(char *, uint64_t))(v97 + 8);
  }

  else
  {
    sub_3531C();

    uint64_t v50 = *(uint64_t (**)(char *, uint64_t))(v25 + 8);
  }

  uint64_t v51 = v50(v34, v118);
  uint64_t v52 = v116;
  Input.parse.getter(v51);
  uint64_t v53 = v117;
  int v54 = (*(uint64_t (**)(uint64_t, os_log_s *))(v115 + 88))(v52, v117);
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v113;
  uint64_t v55 = v114;
  if (v54 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_352EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v111, v52, v112);
    sub_3CC8(v55, (uint64_t)v119);
    uint64_t v57 = v105;
    uint64_t v58 = v56(v105, v55, v118);
    Logger.logObject.getter(v58);
    os_log_type_t v59 = sub_EEB4();
    if (sub_EDE4(v59))
    {
      uint64_t v60 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v60);
      sub_23248(&dword_0, v53, (os_log_type_t)v57, "#EmergencyBasicRFFlow onInput .NLv3IntentOnly");
      sub_3CA0(v52);
    }

    sub_353CC(v57);
    os_log_type_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v62 = v108;
    uint64_t v63 = v111;
    uint64_t v64 = v7;
    uint64_t v65 = v112;
    v61(v108, v111, v112);
    uint64_t v66 = type metadata accessor for EmergencyNLIntent;
    sub_352C0(v62, (uint64_t)&v126);
    sub_445C0();
    int v68 = v67;
    uint64_t v70 = v69;
    sub_EAF0(v62, type metadata accessor for EmergencyNLIntent);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
  }

  else
  {
    if (v54 != enum case for Parse.uso(_:))
    {
      sub_3CC8(v114, (uint64_t)v119);
      uint64_t v86 = v100;
      uint64_t v87 = sub_35260((uint64_t)v100);
      Logger.logObject.getter(v87);
      os_log_type_t v88 = sub_18418();
      if (os_log_type_enabled(v86, v88))
      {
        uint64_t v89 = (uint8_t *)sub_3CD4(12LL);
        uint64_t v90 = sub_3CD4(32LL);
        uint64_t v122 = v90;
        *(_DWORD *)uint64_t v89 = 136315138;
        LOBYTE(v120) = 0;
        uint64_t v91 = String.init<A>(describing:)(&v120);
        uint64_t v120 = sub_543A4(v91, v92, &v122);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v89 + 4, v89 + 12);
        sub_EEE8();
        sub_67F8(&dword_0, v86, v88, "%s", v89);
        sub_67DC(v90);
        sub_3CA0(v90);
        sub_3CA0((uint64_t)v89);
      }

      v50((char *)v86, v118);
      uint64_t v93 = sub_353B8();
      v95(v93, v94);
      return 0LL;
    }

    sub_352EC();
    uint64_t v71 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v101, v52, v107);
    sub_3CC8(v55, (uint64_t)&v120);
    uint64_t v72 = sub_35260((uint64_t)v31);
    Logger.logObject.getter(v72);
    os_log_type_t v73 = sub_EEB4();
    if (sub_EDE4(v73))
    {
      uint64_t v74 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v74);
      sub_23248(&dword_0, v53, (os_log_type_t)v31, "#EmergencyBasicRFFlow onInput .uso");
      sub_3CA0(v52);
    }

    uint64_t v75 = sub_353CC((uint64_t)v31);
    uint64_t v76 = v103;
    USOParse.userParse.getter(v75);
    v119[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
    v119[4] = sub_EA88();
    LOBYTE(v119[0]) = 2;
    char v77 = isFeatureEnabled(_:)(v119);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v119);
    uint64_t v78 = v102;
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v76, v77 & 1);
    uint64_t v66 = (uint64_t (*)(uint64_t))&type metadata accessor for EmergencyDialogAct;
    sub_352C0(v78, (uint64_t)v125);
    sub_443EC();
    int v68 = v79;
    uint64_t v70 = v80;
    sub_EAF0(v78, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v71, v107);
  }

  if (v68 != 4 || (_DWORD)v70 != 35)
  {
    *(_WORD *)(v104 + sub_60A4(v0 + 256, v0 + 216) = v68 | ((_WORD)v70 << 8);
    return 1LL;
  }

  sub_3CC8(v55, (uint64_t)&v122);
  os_log_type_t v81 = v109;
  uint64_t v82 = sub_35260(v109);
  Logger.logObject.getter(v82);
  os_log_type_t v83 = sub_EEB4();
  if (sub_EDE4(v83))
  {
    uint64_t v84 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v84);
    sub_23248(&dword_0, (os_log_s *)v66, v81, "#EmergencyBasicRFFlow Produced an empty intent. Ignoring input.");
    sub_3CA0(v70);
  }

  ((void (*)(uint64_t, uint64_t))v117)(v109, v118);
  return 0LL;
}

uint64_t sub_301BC(uint64_t a1)
{
  v2[172] = v1;
  v2[171] = a1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[173] = sub_3C88(*(void *)(v3 - 8));
  uint64_t v4 = sub_6820();
  v2[174] = v4;
  v2[175] = *(void *)(v4 - 8);
  v2[176] = sub_45A0();
  v2[177] = sub_45A0();
  v2[178] = sub_45A0();
  v2[179] = sub_45A0();
  v2[180] = sub_45A0();
  v2[181] = sub_45A0();
  sub_4588();
  return sub_451C();
}

uint64_t sub_30250(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 1448);
  uint64_t v3 = *(void *)(v1 + 1400);
  uint64_t v4 = *(void *)(v1 + 1392);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 1456) = v5;
  sub_3CC8(v5, v1 + 1280);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v1 + 1464) = v6;
  v6(v2, v5, v4);
  sub_233E0();
  os_log_type_t v7 = sub_67D4();
  if (sub_6728(v7))
  {
    uint64_t v8 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v8);
    sub_67A4(&dword_0, v9, v10, "#EmergencyBasicRFFlow execute");
    sub_3CA0(v4);
  }

  uint64_t v11 = *(void *)(v1 + 1448);
  uint64_t v12 = *(void *)(v1 + 1400);
  uint64_t v13 = *(void *)(v1 + 1392);
  uint64_t v14 = *(void *)(v1 + 1376);

  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  *(void *)(v1 + 147_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v15;
  uint64_t v16 = v15(v11, v13);
  __int16 v17 = *(_WORD *)(v14 + 216);
  *(_WORD *)(v1 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v17;
  if (v17 == 5)
  {
    uint64_t v19 = sub_3324((void *)(*(void *)(v1 + 1376) + 56LL), *(void *)(*(void *)(v1 + 1376) + 80LL));
    sub_23290((void *)(v1 + 784), v19);
    uint64_t v20 = (void *)swift_task_alloc(unk_7A8AC);
    *(void *)(v1 + 1480) = v20;
    *uint64_t v20 = v1;
    v20[1] = sub_30568;
    sub_3535C();
    __asm { BR              X1 }
  }

  if (v17 == 6)
  {
    static ExecuteResponse.complete()(v16);
    sub_350CC();
    sub_9F08();
    sub_4578();
    sub_4528();
    sub_2327C();
    sub_27F60();
    sub_27F88();
    sub_3535C();
    __asm { BR              X0 }
  }

  uint64_t v22 = *(void *)(v1 + 1440);
  uint64_t v23 = *(void *)(v1 + 1392);
  sub_3CC8(v5, v1 + 1304);
  uint64_t v24 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v22, v5, v23);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v28 = *(void *)(v1 + 1440);
  uint64_t v29 = *(void *)(v1 + 1392);
  if (v27)
  {
    uint64_t v44 = *(void *)(v1 + 1440);
    uint64_t v43 = *(void *)(v1 + 1392);
    uint64_t v30 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v31 = sub_3CD4(32LL);
    uint64_t v45 = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    *(_WORD *)(v1 + 1626) = v17;
    uint64_t v32 = String.init<A>(describing:)(v1 + 1626);
    unint64_t v34 = v33;
    *(void *)(v1 + 1360) = sub_543A4(v32, v33, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1360, v1 + 1368, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease(v34);
    sub_67F8(&dword_0, v25, v26, "#EmergencyBasicRFFlow needsExecution intent: %s", v30);
    sub_67DC(v31);
    sub_3CA0(v31);
    sub_3CA0((uint64_t)v30);

    uint64_t v36 = v43;
    uint64_t v35 = v44;
  }

  else
  {

    uint64_t v35 = v28;
    uint64_t v36 = v29;
  }

  v15(v35, v36);
  uint64_t v37 = (void *)swift_task_alloc(dword_7964C);
  *(void *)(v1 + 1496) = v37;
  *uint64_t v37 = v1;
  v37[1] = sub_305F8;
  sub_3535C();
  return sub_145A8(v38, v39, v40, v41);
}

uint64_t sub_30568()
{
  *(void *)(v1 + 1488) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_305A4()
{
  uint64_t v1 = *(void *)(v0 + 1488);
  sub_35378();
  swift_release(v1);
  sub_350CC();
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  return sub_35114(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_305F8()
{
  uint64_t v1 = v0 + 656;
  sub_27DD8(*(void *)(v0 + 1496));
  sub_35390(v1, v2, &qword_79098);
  sub_4588();
  return sub_35108(v3, v4, v5);
}

uint64_t sub_30644()
{
  uint64_t v1 = inferUsableSituation(situation:organization:)(HIBYTE(*(unsigned __int16 *)(v0 + 1624)));
  *(_BYTE *)(v0 + 1628) = v1;
  if (v1 == 35)
  {
    sub_184E0( v1,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
    goto LABEL_7;
  }

  sub_8E94();
  if (!*(void *)(v0 + 1128))
  {
    sub_184E0( v2,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
    sub_E988(v0 + 1104, &qword_7A8B0);
LABEL_7:
    uint64_t v25 = *(void **)(v0 + 1456);
    uint64_t v26 = *(void *)(v0 + 1392);
    sub_3CC8((uint64_t)v25, v0 + 1256);
    sub_233F0();
    sub_233E0();
    os_log_type_t v27 = sub_18418();
    if (sub_6728(v27))
    {
      uint64_t v28 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v28);
      sub_67A4(&dword_0, v29, v30, "#EmergencyBasicRFFlow Failed to pick a modernCatWrapper");
      sub_3CA0(v26);
    }

    uint64_t v31 = *(void *)(v0 + 1376);

    sub_351EC();
    uint64_t v32 = sub_3324((void *)(v31 + 56), *(void *)(v31 + 80));
    sub_23290((void *)(v0 + 944), v32);
    unint64_t v33 = (void *)sub_3526C((uint64_t)&dword_7A8A8);
    *(void *)(v0 + 1584) = v33;
    *unint64_t v33 = v0;
    v33[1] = sub_31078;
    sub_352D0();
    __asm { BR              X1 }
  }

  uint64_t v48 = *(void (**)(os_log_s *, uint64_t, uint64_t))(v0 + 1464);
  uint64_t v50 = (const void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 1456);
  uint64_t v4 = *(os_log_s **)(v0 + 1432);
  uint64_t v5 = *(void *)(v0 + 1392);
  uint64_t v6 = *(void **)(v0 + 1376);
  sub_65A4((__int128 *)(v0 + 1104), v0 + 1064);
  os_log_type_t v7 = v6 + 2;
  uint64_t v8 = v6[5];
  uint64_t v9 = v6[6];
  sub_3324(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  uint64_t v10 = sub_353B8();
  sub_3CC8(v10, v11);
  v48(v4, v3, v5);
  sub_352B8((void *)(v0 + 656));
  uint64_t v12 = sub_352B8((void *)(v0 + 656));
  uint64_t v13 = v4;
  Logger.logObject.getter(v12);
  os_log_type_t v14 = sub_67D4();
  BOOL v15 = os_log_type_enabled(v4, v14);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 1472);
  uint64_t v17 = *(void *)(v0 + 1432);
  uint64_t v18 = *(void *)(v0 + 1392);
  if (v15)
  {
    uint64_t v47 = *(void *)(v0 + 1432);
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v0 + 1472);
    uint64_t v46 = *(void *)(v0 + 1392);
    uint64_t v19 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v20 = sub_3CD4(32LL);
    uint64_t v51 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    sub_180F4(v0 + 656, v0 + 272, &qword_79098);
    sub_184E0( v21,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_14C5C);
    sub_3974(&qword_79098);
    uint64_t v22 = String.init<A>(describing:)(v0 + 272);
    unint64_t v24 = v23;
    *(void *)(v0 + 135_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_543A4(v22, v23, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1352, v0 + 1360, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v24);
    sub_353D8();
    sub_353D8();
    sub_67F8(&dword_0, v13, v14, "orgInfo %s", v19);
    sub_67DC(v20);
    sub_3CA0(v20);
    sub_3CA0((uint64_t)v19);

    v49(v47, v46);
  }

  else
  {
    sub_353E4();
    sub_353E4();

    v16(v17, v18);
  }

  sub_180F4(v0 + 656, (uint64_t)v50, &qword_79098);
  if (sub_E438((uint64_t)v50) == 1)
  {
    *(void *)(v0 + 1528) = 0LL;
    uint64_t v35 = *(void *)(v0 + 1384);
    uint64_t v36 = *(void *)(v0 + 1096);
    sub_3324((void *)(v0 + 1064), *(void *)(v0 + 1088));
    uint64_t v37 = type metadata accessor for SpeakableString(0LL);
    sub_35398(v35, v38, v39, v37);
    sub_4808C((void *)(v0 + 1024));
    char v40 = (void *)sub_3526C(*(void *)(v36 + 8));
    *(void *)(v0 + 1536) = v40;
    sub_3532C(v40, (uint64_t)sub_30BF0);
    sub_352D0();
    __asm { BR              X4 }
  }

  sub_EE84((void *)(v0 + 400), v50);
  sub_180F4(v0 + 528, v0 + 144, &qword_79098);
  sub_6408((void *)(v0 + 144));
  uint64_t v42 = (void *)swift_task_alloc(dword_7897C);
  *(void *)(v0 + 1504) = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_30AA4;
  sub_352D0();
  return sub_3F64(v43, v44);
}

uint64_t sub_30AA4(uint64_t a1)
{
  uint64_t v10 = (void *)*v2;
  uint64_t v4 = v10;
  sub_234A4(&v10);
  v4[189] = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_352B8(v4 + 82);
    sub_352B8(v4 + 82);
  }

  else
  {
    v4[190] = a1;
    sub_1812C( v4 + 82,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
  }

  sub_4588();
  return swift_task_switch(v6, v7, v8);
}

uint64_t sub_30B3C()
{
  v0[191] = v0[190];
  uint64_t v1 = v0[173];
  uint64_t v2 = v0[137];
  sub_3324(v0 + 133, v0[136]);
  uint64_t v3 = type metadata accessor for SpeakableString(0LL);
  sub_35398(v1, v4, v5, v3);
  sub_4808C(v0 + 128);
  uint64_t v6 = *(int **)(v2 + 8);
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  v0[192] = v7;
  uint64_t v8 = sub_3532C(v7, (uint64_t)sub_30BF0);
  return v10(v8);
}

uint64_t sub_30BF0(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 1536LL);
  uint64_t v5 = *(void *)(*(void *)v2 + 1384LL);
  v3[193] = a1;
  v3[194] = v1;
  sub_232B0(v4);
  sub_E988(v5, &qword_78970);
  if (v1) {
    sub_1812C( v3 + 82,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
  }
  sub_4588();
  return sub_9E34();
}

void sub_30C78()
{
  uint64_t v1 = *(void **)(v0 + 1528);
  uint64_t v2 = *(void (**)(uint64_t, os_log_s *, uint64_t))(v0 + 1464);
  uint64_t v3 = *(os_log_s **)(v0 + 1456);
  uint64_t v4 = *(void *)(v0 + 1424);
  uint64_t v5 = *(void *)(v0 + 1392);
  sub_3CC8((uint64_t)v3, v0 + 1232);
  v2(v4, v3, v5);
  id v6 = v1;
  sub_1FD2C();
  os_log_type_t v7 = sub_67D4();
  if (os_log_type_enabled(v3, v7))
  {
    uint64_t v8 = *(void *)(v0 + 1528);
    uint64_t v9 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v10 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v36 = v10;
    uint64_t v37 = v10;
    if (v8)
    {
      id v11 = [v6 dialog];
      unint64_t v12 = sub_2F084();
      uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      if ((unint64_t)v13 >> 62)
      {
        if (v13 < 0) {
          uint64_t v20 = v13;
        }
        else {
          uint64_t v20 = v13 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v13);
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
        sub_EEE8();
        if (v21) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v13 & 0xC000000000000001LL) != 0)
        {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v13);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            return;
          }

          id v14 = *(id *)(v13 + 32);
        }

        BOOL v15 = v14;
        sub_EEE8();
        id v16 = [v15 fullPrint];

        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        uint64_t v19 = v18;

        goto LABEL_16;
      }

      sub_EEE8();
    }

    uint64_t v17 = 0LL;
    uint64_t v19 = 0LL;
LABEL_16:
    uint64_t v34 = *(void *)(v0 + 1424);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 1472);
    uint64_t v33 = *(void *)(v0 + 1392);
    *(void *)(v0 + 1328) = v17;
    *(void *)(v0 + 1336) = v19;
    sub_3974((uint64_t *)&unk_7A668);
    uint64_t v22 = String.init<A>(describing:)(v0 + 1328);
    unint64_t v24 = v23;
    *(void *)(v0 + 1344) = sub_543A4(v22, v23, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1344, v0 + 1352, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v24);

    sub_67F8(&dword_0, v3, v7, "#EmergencyBasicRFFlow Dialog: %s", v9);
    sub_67DC(v36);
    sub_3CA0(v36);
    sub_3CA0((uint64_t)v9);

    v35(v34, v33);
    goto LABEL_17;
  }

  sub_351EC();
LABEL_17:
  uint64_t v25 = *(void *)(v0 + 1528);
  sub_60A4(*(void *)(v0 + 1376) + 176LL, v0 + 1144);
  sub_3324((void *)(v0 + 1144), *(void *)(v0 + 1168));
  id v26 = v6;
  if (!v25) {
    id v26 = *(id *)(v0 + 1544);
  }
  *(void *)(v0 + 1560) = v26;
  uint64_t v27 = dword_7A8BC;
  id v28 = v6;
  uint64_t v29 = (void *)swift_task_alloc(v27);
  *(void *)(v0 + 1568) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_30F90;
  sub_3529C();
  sub_316A0(v30, v31, v32);
}

uint64_t sub_30F90()
{
  uint64_t v1 = (void *)(v0 + 656);
  uint64_t v2 = *(void **)(v0 + 1560);
  sub_23254();
  *(void *)(v4 + 1576) = v3;
  sub_232B0(v5);
  sub_1812C( v1,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);

  sub_4588();
  return sub_35108(v6, v7, v8);
}

uint64_t sub_30FE8()
{
  uint64_t v1 = *(void *)(v0 + 1576);
  uint64_t v2 = *(void **)(v0 + 1544);
  uint64_t v3 = *(void **)(v0 + 1528);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1144));
  static ExecuteResponse.complete(next:)(v1);
  swift_release(v1);

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1024));
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1064));
  sub_350CC();
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  return sub_35114(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_31078()
{
  *(void *)(v1 + 159_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_310B4()
{
  uint64_t v1 = *(void *)(v0 + 1592);
  sub_35378();
  swift_release(v1);
  sub_350CC();
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  return sub_35114(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_31108()
{
  *(void *)(v1 + 1616) = v0;
  sub_232B0(v2);
  sub_4588();
  return sub_451C();
}

uint64_t sub_31144()
{
  uint64_t v1 = *(void *)(v0 + 1616);
  uint64_t v2 = *(void *)(v0 + 1600);
  static ExecuteResponse.complete(next:)(v1);
  swift_release(v1);
  swift_errorRelease(v2);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1024));
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1064));
  sub_350CC();
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  return sub_35114(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_311C4()
{
  v0[200] = v0[189];
  uint64_t v2 = (void *)v0[176];
  uint64_t v3 = v0[174];
  sub_3CC8(v0[182], (uint64_t)(v0 + 151));
  sub_233F0();
  sub_233E0();
  os_log_type_t v4 = sub_18418();
  if (sub_6728(v4))
  {
    uint64_t v5 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v5);
    sub_67A4(&dword_0, v6, v7, "#EmergencyBasicRFFlow: Error retreiving the CAT result");
    sub_3CA0(v3);
  }

  sub_35228();
  sub_351EC();
  uint64_t v8 = sub_3324((void *)(v1 + 56), *(void *)(v1 + 80));
  sub_23290(v2, v8);
  uint64_t v9 = (void *)sub_44F4((uint64_t)&dword_7A8A8);
  v0[201] = v9;
  uint64_t v10 = sub_23448(v9, (uint64_t)sub_31108);
  return sub_351BC(v10, v11);
}

uint64_t sub_3128C()
{
  *(void *)(v0 + 1600) = *(void *)(v0 + 1552);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 1464);
  uint64_t v3 = *(void **)(v0 + 1456);
  uint64_t v4 = *(void *)(v0 + 1408);
  sub_3CC8((uint64_t)v3, v0 + 1208);
  uint64_t v5 = sub_353B8();
  v2(v5);
  sub_1FD2C();
  os_log_type_t v6 = sub_18418();
  if (sub_6728(v6))
  {
    uint64_t v7 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v7);
    sub_67A4(&dword_0, v8, v9, "#EmergencyBasicRFFlow: Error retreiving the CAT result");
    sub_3CA0(v4);
  }

  sub_35228();
  sub_351EC();
  uint64_t v10 = sub_3324((void *)(v1 + 56), *(void *)(v1 + 80));
  sub_23290(v3, v10);
  id v11 = (void *)sub_44F4((uint64_t)&dword_7A8A8);
  *(void *)(v0 + 1608) = v11;
  uint64_t v12 = sub_23448(v11, (uint64_t)sub_31108);
  return sub_351BC(v12, v13);
}

uint64_t sub_31368()
{
  uint64_t v0 = type metadata accessor for EmergencyBasicRFFlow();
  sub_EB44( &qword_7A8A0,  v1,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyBasicRFFlow,  (uint64_t)&unk_59038);
  uint64_t v2 = sub_353B8();
  return Flow.deferToExecuteAsync(_:)(v2, v3, v0, v4);
}

uint64_t sub_313D4()
{
  return swift_deallocClassInstance(v0, 218LL, 7LL);
}

uint64_t type metadata accessor for EmergencyBasicRFFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin20EmergencyBasicRFFlow);
}

uint64_t getEnumTagSinglePayload for EmergencyBasicRFFlow.EmergencyBasicFlowState( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA)
  {
    if (*a1 <= 4u) {
      int v6 = 4;
    }
    else {
      int v6 = *a1;
    }
    unsigned int v7 = v6 - 4;
    if (*a1 >= 4u) {
      unsigned int v8 = v7;
    }
    else {
      unsigned int v8 = 0;
    }
    if (v8 >= 3) {
      return v8 - 2;
    }
    else {
      return 0LL;
    }
  }

  else
  {
    unsigned int v2 = a2 + 65286;
    if (a2 + 65286 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_31464 + 4 * byte_58F70[v4]))();
  }

uint64_t storeEnumTagSinglePayload for EmergencyBasicRFFlow.EmergencyBasicFlowState( _WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65286;
  if (a3 + 65286 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    LODWORD(v5) = v4;
  }
  else {
    LODWORD(v5) = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_31520 + 4 * byte_58F7A[v5]))();
  }
  *a1 = a2 - 250;
  return ((uint64_t (*)(void))((char *)sub_31554 + 4 * byte_58F75[v5]))();
}

uint64_t sub_31554(uint64_t result)
{
  *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_3155C(uint64_t result, int a2)
{
  *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  if (a2) {
    JUMPOUT(0x31564LL);
  }
  return result;
}

uint64_t sub_31570(uint64_t result, int a2)
{
  *(_DWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  if (!a2) {
    JUMPOUT(0x31578LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_3157C(uint64_t result)
{
  *(_DWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_31584(uint64_t result)
{
  *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_31590(unsigned __int8 *a1)
{
  if (*a1 <= 4u) {
    int v1 = 4;
  }
  else {
    int v1 = *a1;
  }
  unsigned int v2 = v1 - 4;
  if (*a1 >= 4u) {
    return v2;
  }
  else {
    return 0LL;
  }
}

_WORD *sub_315B0(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFB)
  {
    *uint64_t result = a2 - 252;
  }

  else if (a2)
  {
    *(_BYTE *)uint64_t result = a2 + 4;
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyBasicRFFlow.EmergencyBasicFlowState()
{
  return &type metadata for EmergencyBasicRFFlow.EmergencyBasicFlowState;
}

uint64_t sub_315E4(uint64_t a1)
{
  return sub_2F984(a1) & 1;
}

uint64_t sub_31608()
{
  return sub_31368();
}

uint64_t sub_31628(uint64_t a1)
{
  unsigned int v3 = (void *)swift_task_alloc(dword_7A7BC);
  *(void *)(v1 + 16) = v3;
  *unsigned int v3 = v1;
  v3[1] = sub_27CC0;
  return sub_301BC(a1);
}

uint64_t sub_3167C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyBasicRFFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_316A0(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 1056) = v3;
  *(void *)(v4 + 1048) = a3;
  *(void *)(v4 + 1040) = a2;
  *(_BYTE *)(v4 + 890) = a1;
  sub_180F4(a2, v4 + 528, &qword_79098);
  sub_180F4(v4 + 528, v4 + 16, &qword_79098);
  uint64_t v5 = sub_6820();
  *(void *)(v4 + 1064) = v5;
  *(void *)(v4 + 107_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v5 - 8);
  *(void *)(v4 + 1080) = sub_45A0();
  *(void *)(v4 + 1088) = sub_45A0();
  sub_4588();
  return sub_9E34();
}

uint64_t sub_31738(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_E438(v2 + 400);
  if ((_DWORD)v3 == 1)
  {
    uint64_t v4 = *(void *)(v2 + 1080);
    uint64_t v5 = *(void *)(v2 + 1072);
    uint64_t v6 = *(void *)(v2 + 1064);
    uint64_t v7 = Logger.emergency.unsafeMutableAddressor(v3);
    sub_3CC8(v7, v2 + 1000);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    sub_233E0();
    os_log_type_t v8 = sub_67D4();
    if (sub_6728(v8))
    {
      uint64_t v9 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v9);
      sub_67A4(&dword_0, v10, v11, "EmergencyBasicRFFlow preparing promptless output");
      sub_3CA0(v6);
    }

    sub_3524C();
    sub_3530C();
    uint64_t v12 = sub_77F4((uint64_t)&unk_6EFE8, 24LL);
    id v13 = sub_353F8(v12);
    static OutputPublisherFactory.makeOutputPublisherAsync()(v19, v13);
    uint64_t v14 = sub_353F0();
    sub_45A8(v14);
    uint64_t v15 = sub_35240((uint64_t)v19, (uint64_t)&unk_7A8C8);
    *(void *)(v2 + 10_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v15;
    uint64_t v16 = sub_35294(v14);
    swift_release(v15);
    sub_35384();
    sub_4578();
    return (*(uint64_t (**)(uint64_t))(v2 + 8))(v16);
  }

  else
  {
    sub_EE84((void *)(v2 + 272), (const void *)(v2 + 400));
    sub_180F4(v2 + 16, v2 + 144, &qword_79098);
    sub_6408((void *)(v2 + 144));
    uint64_t v18 = (void *)swift_task_alloc(dword_7A8D4);
    *(void *)(v2 + 1096) = v18;
    *uint64_t v18 = v2;
    v18[1] = sub_3190C;
    return sub_31CD8(v2 + 856, *(_BYTE *)(v2 + 890), (const void *)(v2 + 272), *(void *)(v2 + 1048));
  }

uint64_t sub_3190C()
{
  return sub_451C();
}

uint64_t sub_31940(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 936))
  {
    uint64_t v43 = (void *)(v2 + 656);
    uint64_t v42 = v2 + 816;
    uint64_t v4 = *(os_log_s **)(v2 + 1088);
    uint64_t v5 = *(void *)(v2 + 1072);
    uint64_t v6 = *(void *)(v2 + 1064);
    __int128 v7 = *(_OWORD *)(v2 + 952);
    *(_OWORD *)(v2 + 896) = *(_OWORD *)(v2 + 936);
    *(_OWORD *)(v2 + 91_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v7;
    *(_WORD *)(v2 + 928) = *(_WORD *)(v2 + 968);
    uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v3);
    sub_3CC8(v8, v2 + 976);
    uint64_t v9 = (*(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v5 + 16))(v4, v8, v6);
    uint64_t v10 = v4;
    Logger.logObject.getter(v9);
    os_log_type_t v11 = sub_67D4();
    if (sub_6728(v11))
    {
      uint64_t v12 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, (os_log_type_t)(v2 - 48), "#EmergencyBasicRFFlow preparing for confirmation", v12, 2u);
      sub_3CA0((uint64_t)v12);
    }

    uint64_t v13 = *(void *)(v2 + 1088);
    uint64_t v14 = *(void *)(v2 + 1072);
    uint64_t v15 = *(void *)(v2 + 1064);
    uint64_t v16 = *(void *)(v2 + 1056);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    uint64_t v17 = *(void **)(v2 + 896);
    uint64_t v39 = *(void **)(v2 + 904);
    uint64_t v40 = *(void *)(v2 + 920);
    sub_60A4(v16, v2 + 736);
    sub_60A4(v16 + 40, v2 + 776);
    sub_60E4(v16 + 80, v42);
    uint64_t v18 = *(void *)(v2 + 800);
    uint64_t v19 = sub_6120(v2 + 776, v18);
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t v21 = (const void *)swift_task_alloc((*(void *)(v20 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(const void *, uint64_t, uint64_t))(v20 + 16))(v21, v19, v18);
    sub_23290(v43, v21);
    id v41 = v17;
    id v22 = v39;
    swift_retain(v40);
    uint64_t v23 = sub_34BF4((const void *)(v2 + 272), v2 + 896, (__int128 *)(v2 + 736), v43, v42, 0, 0LL, 0LL);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v2 + 776));
    sub_2327C();
    *(void *)(v2 + 103_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v23;
    uint64_t v24 = type metadata accessor for EmergencyConfirmationRFFlow();
    sub_EB44( &qword_7A018,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationRFFlow,  (uint64_t)&unk_5A0D8);
    uint64_t v25 = Flow.eraseToAnyFlow()(v24);

    swift_release(v40);
    uint64_t v26 = v23;
  }

  else
  {
    uint64_t v27 = sub_1812C( *(void **)(v2 + 1040),  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_E8BC);
    uint64_t v28 = *(void *)(v2 + 1080);
    uint64_t v29 = *(void *)(v2 + 1072);
    uint64_t v30 = *(void *)(v2 + 1064);
    uint64_t v31 = Logger.emergency.unsafeMutableAddressor(v27);
    sub_3CC8(v31, v2 + 1000);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v31, v30);
    sub_1FD2C();
    os_log_type_t v32 = sub_67D4();
    if (os_log_type_enabled((os_log_t)(v2 + 1000), v32))
    {
      uint64_t v33 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_0, (os_log_t)(v2 + 1000), v32, "EmergencyBasicRFFlow preparing promptless output", v33, 2u);
      sub_3CA0((uint64_t)v33);
    }

    sub_3524C();
    sub_3530C();
    uint64_t v34 = sub_77F4((uint64_t)&unk_6EFE8, 24LL);
    id v35 = sub_353F8(v34);
    static OutputPublisherFactory.makeOutputPublisherAsync()(v44, v35);
    uint64_t v36 = sub_353F0();
    sub_45A8(v36);
    uint64_t v37 = sub_35240((uint64_t)v44, (uint64_t)&unk_7A8C8);
    *(void *)(v2 + 10_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v37;
    uint64_t v25 = sub_35294(v36);
    uint64_t v26 = v37;
  }

  swift_release(v26);
  sub_35384();
  sub_4578();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v25);
}

uint64_t sub_31CD8(uint64_t a1, char a2, const void *a3, uint64_t a4)
{
  *(void *)(v5 + 680) = v4;
  *(void *)(v5 + 67_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a4;
  *(void *)(v5 + 664) = a3;
  *(_BYTE *)(v5 + 225) = a2;
  *(void *)(v5 + 656) = a1;
  sub_EE84((void *)(v5 + 368), a3);
  uint64_t v6 = sub_6820();
  *(void *)(v5 + 688) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 696) = v7;
  *(void *)(v5 + 704) = sub_3C88(v7);
  uint64_t v8 = sub_3974((uint64_t *)&unk_7AE80);
  *(void *)(v5 + 71_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_3C88(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for AppPunchOutFlow(0LL);
  *(void *)(v5 + 720) = v9;
  *(void *)(v5 + 728) = sub_3C88(*(void *)(v9 - 8));
  sub_4588();
  return sub_451C();
}

uint64_t sub_31D6C()
{
  if ((sub_3282C() & 1) != 0)
  {
    uint64_t v1 = v0[85];
    uint64_t v2 = (void *)v0[83];
    sub_60A4(v1, (uint64_t)(v0 + 2));
    sub_60A4(v1 + 40, (uint64_t)(v0 + 7));
    sub_EE84(v0 + 29, v0 + 46);
    sub_180EC((uint64_t)(v0 + 29));
    sub_E9BC(v0 + 29, v0 + 12);
    sub_6408(v2);
    sub_23198();
    v0[92] = sub_35294((uint64_t)&type metadata for CallRFFlow);
    sub_231D4((uint64_t)(v0 + 2));
    v0[93] = *sub_3324((void *)(v1 + 40), *(void *)(v1 + 64));
    sub_EEA4();
    uint64_t v3 = (void *)sub_2F458();
    v0[94] = v3;
    uint64_t v4 = sub_32030;
LABEL_8:
    *uint64_t v3 = v0;
    v3[1] = v4;
    sub_3529C();
    return sub_47E88();
  }

  sub_3515C();
  if ((sub_330B4() & 1) == 0)
  {
    uint64_t v15 = sub_3515C();
    if ((sub_33DAC(v15, v16) & 1) == 0)
    {
      sub_35148();
      sub_9F08();
      sub_4578();
      sub_35180();
      sub_3529C();
      __asm { BR              X0 }
    }

    uint64_t v17 = (void *)v0[85];
    uint64_t v18 = v0[83];
    uint64_t v20 = *(void *)(v18 + 96);
    uint64_t v19 = *(void *)(v18 + 104);
    uint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    sub_3324(v17, v21);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 16);
    swift_bridgeObjectRetain(v19);
    v23(v21, v22);
    v0[62] = v20;
    v0[63] = v19;
    sub_18188();
    v0[100] = sub_35294((uint64_t)&type metadata for WebsearchFlow);
    sub_181C4((uint64_t)(v0 + 62));
    v0[101] = *sub_3324(v17 + 5, v17[8]);
    sub_EEA4();
    uint64_t v3 = (void *)sub_2F458();
    v0[102] = v3;
    uint64_t v4 = sub_321E0;
    goto LABEL_8;
  }

  uint64_t v5 = v0[89];
  uint64_t v6 = (void *)v0[85];
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  sub_3324(v6, v7);
  uint64_t v9 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v25, v7, v8);
  EmergencyOrganizationInfo.websiteURL.getter(v9);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t result = sub_5FE0(v5, 1LL, v10);
  if ((_DWORD)result != 1)
  {
    uint64_t v12 = v0[91];
    uint64_t v13 = v0[90];
    uint64_t v14 = v0[85];
    AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v25, v0[89], 0LL, 0LL);
    sub_EB44( &qword_79828,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
    v0[96] = Flow.eraseToAnyFlow()(v13);
    sub_EAF0(v12, (uint64_t (*)(void))&type metadata accessor for AppPunchOutFlow);
    v0[97] = *sub_3324((void *)(v14 + 40), *(void *)(v14 + 64));
    sub_EEA4();
    uint64_t v3 = (void *)sub_2F458();
    v0[98] = v3;
    uint64_t v4 = sub_3210C;
    goto LABEL_8;
  }

  __break(1u);
  return result;
}

uint64_t sub_32030()
{
  v0[72] = v2;
  v0[73] = v3;
  v0[74] = v1;
  sub_234A4(v4);
  v0[95] = v1;
  swift_task_dealloc(v5);
  if (!v1) {
    swift_release(v0[93]);
  }
  sub_4588();
  return sub_35108(v6, v7, v8);
}

uint64_t sub_32090()
{
  uint64_t v2 = sub_3515C();
  char v4 = sub_32B38(v2, v3);
  uint64_t v5 = *(void *)(v0 + 584);
  uint64_t v6 = *(void *)(v0 + 736);
  uint64_t v7 = *(void *)(v0 + 672);
  if ((v4 & 1) != 0) {
    __int16 v8 = 256;
  }
  else {
    __int16 v8 = 0;
  }
  sub_35280();
  sub_9F08();
  sub_4578();
  sub_4528();
  *(void *)uint64_t v1 = v7;
  *(void *)(v1 + 8) = v5;
  *(void *)(v1 + 16) = 1LL;
  *(void *)(v1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
  *(_WORD *)(v1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_3210C()
{
  v0[75] = v2;
  v0[76] = v3;
  v0[77] = v1;
  sub_234A4(v4);
  v0[99] = v1;
  swift_task_dealloc(v5);
  if (!v1) {
    swift_release(v0[97]);
  }
  sub_4588();
  return sub_35108(v6, v7, v8);
}

uint64_t sub_3216C()
{
  uint64_t v1 = sub_3515C();
  char v3 = sub_33528(v1, v2);
  uint64_t v4 = *(void *)(v0 + 608);
  uint64_t v5 = *(void *)(v0 + 768);
  uint64_t v6 = *(void **)(v0 + 672);
  if ((v3 & 1) != 0) {
    __int16 v7 = 258;
  }
  else {
    __int16 v7 = 2;
  }
  uint64_t v8 = *(void *)(v0 + 656);
  id v9 = v6;
  sub_9F08();
  sub_4578();
  sub_4528();
  *(void *)uint64_t v8 = v6;
  *(void *)(v8 + 8) = v4;
  *(void *)(v8 + 16) = 2LL;
  *(void *)(v8 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v5;
  *(_WORD *)(v8 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v7;
  return sub_350EC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_321E0()
{
  v0[78] = v2;
  v0[79] = v3;
  v0[80] = v1;
  sub_234A4(v4);
  v0[103] = v1;
  swift_task_dealloc(v5);
  if (!v1) {
    swift_release(v0[101]);
  }
  sub_4588();
  return sub_35108(v6, v7, v8);
}

uint64_t sub_32240()
{
  uint64_t v2 = sub_3515C();
  char v4 = sub_34234(v2, v3);
  uint64_t v5 = *(void *)(v0 + 632);
  uint64_t v6 = *(void *)(v0 + 800);
  uint64_t v7 = *(void *)(v0 + 672);
  if ((v4 & 1) != 0) {
    __int16 v8 = 257;
  }
  else {
    __int16 v8 = 1;
  }
  sub_35280();
  sub_9F08();
  sub_4578();
  sub_4528();
  *(void *)uint64_t v1 = v7;
  *(void *)(v1 + 8) = v5;
  *(void *)(v1 + 16) = 3LL;
  *(void *)(v1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
  *(_WORD *)(v1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_322BC()
{
  uint64_t v1 = (void *)(v0 + 552);
  swift_release(*(void *)(v0 + 744));
  uint64_t v2 = sub_35218();
  sub_3CC8(v2, v0 + 552);
  sub_351A8();
  sub_67E4();
  sub_67E4();
  sub_13124();
  os_log_type_t v3 = sub_18418();
  if (sub_35208(v3))
  {
    char v4 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v5 = (void *)sub_3CD4(8LL);
    *char v4 = 138412290;
    sub_67E4();
    uint64_t v6 = sub_353C4();
    sub_35128(v6);
    *uint64_t v5 = 12LL;
    sub_6738();
    sub_6738();
    sub_3516C(&dword_0, v7, v8, "Error getting followup prompt for basic intent flow: %@");
    sub_3974(&qword_7A020);
    sub_67DC((uint64_t)v5);
    sub_3CA0((uint64_t)v5);
    sub_3CA0((uint64_t)v4);

    sub_6738();
  }

  else
  {
    sub_6738();
    sub_6738();
    sub_6738();
  }

  sub_35194();
  sub_351F8();
  sub_35148();
  sub_9F08();
  sub_4578();
  id v9 = (uint64_t (*)(void))sub_35180();
  return sub_350EC(v9);
}

uint64_t sub_323DC()
{
  uint64_t v1 = (void *)(v0 + 552);
  swift_release(*(void *)(v0 + 776));
  uint64_t v2 = sub_35218();
  sub_3CC8(v2, v0 + 552);
  sub_351A8();
  sub_67E4();
  sub_67E4();
  sub_13124();
  os_log_type_t v3 = sub_18418();
  if (sub_35208(v3))
  {
    char v4 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v5 = (void *)sub_3CD4(8LL);
    *char v4 = 138412290;
    sub_67E4();
    uint64_t v6 = sub_353C4();
    sub_35128(v6);
    *uint64_t v5 = 12LL;
    sub_6738();
    sub_6738();
    sub_3516C(&dword_0, v7, v8, "Error getting followup prompt for basic intent flow: %@");
    sub_3974(&qword_7A020);
    sub_67DC((uint64_t)v5);
    sub_3CA0((uint64_t)v5);
    sub_3CA0((uint64_t)v4);

    sub_6738();
  }

  else
  {
    sub_6738();
    sub_6738();
    sub_6738();
  }

  sub_35194();
  sub_351F8();
  sub_35148();
  sub_9F08();
  sub_4578();
  id v9 = (uint64_t (*)(void))sub_35180();
  return sub_350EC(v9);
}

uint64_t sub_324FC()
{
  uint64_t v1 = (void *)(v0 + 552);
  swift_release(*(void *)(v0 + 808));
  uint64_t v2 = sub_35218();
  sub_3CC8(v2, v0 + 552);
  sub_351A8();
  sub_67E4();
  sub_67E4();
  sub_13124();
  os_log_type_t v3 = sub_18418();
  if (sub_35208(v3))
  {
    char v4 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v5 = (void *)sub_3CD4(8LL);
    *char v4 = 138412290;
    sub_67E4();
    uint64_t v6 = sub_353C4();
    sub_35128(v6);
    *uint64_t v5 = 12LL;
    sub_6738();
    sub_6738();
    sub_3516C(&dword_0, v7, v8, "Error getting followup prompt for basic intent flow: %@");
    sub_3974(&qword_7A020);
    sub_67DC((uint64_t)v5);
    sub_3CA0((uint64_t)v5);
    sub_3CA0((uint64_t)v4);

    sub_6738();
  }

  else
  {
    sub_6738();
    sub_6738();
    sub_6738();
  }

  sub_35194();
  sub_351F8();
  sub_35148();
  sub_9F08();
  sub_4578();
  id v9 = (uint64_t (*)(void))sub_35180();
  return sub_350EC(v9);
}

uint64_t sub_3261C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for DialogPhase(0LL);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_3269C, 0LL, 0LL);
}

uint64_t sub_3269C()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = v0[4];
  static DialogPhase.completion.getter();
  OutputGenerationManifest.init(dialogPhase:_:)(v1, sub_37A8, 0LL);
  uint64_t v3 = type metadata accessor for ResponseFactory(0LL);
  sub_45A8(v3);
  v0[8] = ResponseFactory.init()();
  uint64_t v4 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v5 = sub_77F4(v4, 40LL);
  *(_OWORD *)(v5 + 16) = xmmword_56DC0;
  *(void *)(v5 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v2;
  uint64_t v11 = v5;
  specialized Array._endMutation()();
  v0[9] = v11;
  id v7 = v2;
  uint64_t v8 = (void *)swift_task_alloc(v6);
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_3279C;
  return ((uint64_t (*)(void, uint64_t, void))v10)(v0[2], v11, v0[7]);
}

uint64_t sub_3279C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[8];
  sub_27DD8(v0[10]);
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  sub_4588();
  return sub_35108(v3, v4, v5);
}

uint64_t sub_327E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3282C()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v6);
  if ((v9 & 1) != 0)
  {
    uint64_t v10 = v0[3];
    uint64_t v11 = v0[4];
    sub_3324(v0, v10);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v32, v10, v11);
    char v12 = sub_4808C(v32);
    uint64_t v13 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v32);
    uint64_t v14 = Logger.emergency.unsafeMutableAddressor(v13);
    swift_beginAccess(v14, v32, 0LL, 0LL);
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v14, v1);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      uint64_t v29 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v31 = v19;
      if ((v12 & 1) != 0) {
        uint64_t v20 = 0x6E6974706D6F7250LL;
      }
      else {
        uint64_t v20 = 0x6D6F727020746F4ELL;
      }
      if ((v12 & 1) != 0) {
        unint64_t v21 = 0xE900000000000067LL;
      }
      else {
        unint64_t v21 = 0xED0000676E697470LL;
      }
      uint64_t v30 = sub_543A4(v20, v21, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease(v21);
      _os_log_impl(&dword_0, v16, v17, "%s for call followup.", v18, 0xCu);
      uint64_t v22 = v29;
      swift_arrayDestroy(v29, 1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  }

  else
  {
    uint64_t v23 = Logger.emergency.unsafeMutableAddressor(v9);
    swift_beginAccess(v23, v32, 0LL, 0LL);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v23, v1);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "orgInfo does not have name and number. Not prompting for call followup.",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    char v12 = 0;
  }

  return v12 & 1;
}

uint64_t sub_32B38(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  int v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v53 = (char *)&v52 - v6;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v52 - v7;
  uint64_t v8 = type metadata accessor for ResponseMode(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_3974(&qword_7A8E0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_3974(&qword_7A8E8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v52 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v52 - v22;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v24 = static SiriEnvironment.forCurrentTask.getter();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = SiriEnvironment.currentRequest.getter();
    uint64_t v27 = swift_release(v25);
    CurrentRequest.responseMode.getter(v27);
    swift_release(v26);
    uint64_t v28 = 0LL;
  }

  else
  {
    uint64_t v28 = 1LL;
  }

  uint64_t v29 = sub_3F18((uint64_t)v23, v28, 1LL, v8);
  static ResponseMode.displayOnly.getter(v29);
  sub_3F18((uint64_t)v21, 0LL, 1LL, v8);
  uint64_t v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_35010((uint64_t)v23, (uint64_t)v14);
  sub_35010((uint64_t)v21, v30);
  if (sub_5FE0((uint64_t)v14, 1LL, v8) == 1)
  {
    sub_E988((uint64_t)v21, &qword_7A8E8);
    sub_E988((uint64_t)v23, &qword_7A8E8);
    if (sub_5FE0(v30, 1LL, v8) == 1)
    {
      sub_E988((uint64_t)v14, &qword_7A8E8);
      uint64_t v33 = v57;
      uint64_t v32 = v58;
      goto LABEL_16;
    }

    goto LABEL_9;
  }

  sub_35010((uint64_t)v14, (uint64_t)v18);
  if (sub_5FE0(v30, 1LL, v8) == 1)
  {
    sub_E988((uint64_t)v21, &qword_7A8E8);
    sub_E988((uint64_t)v23, &qword_7A8E8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
LABEL_9:
    sub_E988((uint64_t)v14, &qword_7A8E0);
    uint64_t v33 = v57;
    uint64_t v32 = v58;
    goto LABEL_10;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v30, v8);
  sub_EB44( &qword_7A8F0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v47 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v11, v8);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v9 + 8);
  v48(v11, v8);
  sub_E988((uint64_t)v21, &qword_7A8E8);
  sub_E988((uint64_t)v23, &qword_7A8E8);
  v48(v18, v8);
  sub_E988((uint64_t)v14, &qword_7A8E8);
  uint64_t v33 = v57;
  uint64_t v32 = v58;
  if ((v47 & 1) != 0)
  {
LABEL_16:
    uint64_t v49 = Logger.emergency.unsafeMutableAddressor(v31);
    swift_beginAccess(v49, v59, 0LL, 0LL);
    uint64_t v38 = v55;
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v55, v49, v32);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v45))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      uint64_t v46 = "DisplayOnly request. Not listening after speaking.";
      goto LABEL_18;
    }

uint64_t sub_330B4()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v47[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v47[-1] - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v47[-1] - v10;
  uint64_t v12 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v9);
  if ((v12 & 1) != 0 || (uint64_t v12 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v12), (v12 & 1) == 0))
  {
    uint64_t v18 = Logger.emergency.unsafeMutableAddressor(v12);
    swift_beginAccess(v18, v58, 0LL, 0LL);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v18, v1);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl( &dword_0,  v20,  v21,  "orgInfo does not have name and website. Not prompting for website followup.",  v22,  2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0LL;
  }

  uint64_t v13 = v0[3];
  uint64_t v14 = v0[4];
  sub_3324(v0, v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v58, v13, v14);
  uint64_t v15 = v59;
  uint64_t v16 = v60;
  sub_3324(v58, v59);
  char v17 = dispatch thunk of DeviceState.isHomePod.getter(v15, v16);
  sub_60A4((uint64_t)v58, (uint64_t)v55);
  if ((v17 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v55);
    sub_60A4((uint64_t)v58, (uint64_t)v53);
LABEL_9:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v53);
    sub_60A4((uint64_t)v58, (uint64_t)v50);
LABEL_10:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v50);
    sub_60A4((uint64_t)v58, (uint64_t)v47);
LABEL_11:
    uint64_t v26 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
LABEL_12:
    uint64_t v27 = Logger.emergency.unsafeMutableAddressor(v26);
    swift_beginAccess(v27, v55, 0LL, 0LL);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v11, v27, v1);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_0, v29, v30, "No prompt needed for this device. Not prompting for website followup.", v31, 2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v58);
    return 0LL;
  }

  uint64_t v23 = v56;
  uint64_t v24 = v57;
  sub_3324(v55, v56);
  char v25 = dispatch thunk of DeviceState.isSidekick.getter(v23, v24);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v55);
  sub_60A4((uint64_t)v58, (uint64_t)v53);
  if ((v25 & 1) != 0) {
    goto LABEL_9;
  }
  uint64_t v33 = v54;
  sub_3324(v53, v54);
  char v34 = dispatch thunk of DeviceState.isCarPlay.getter(v33);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v53);
  sub_60A4((uint64_t)v58, (uint64_t)v50);
  if ((v34 & 1) != 0) {
    goto LABEL_10;
  }
  uint64_t v35 = v51;
  uint64_t v36 = v52;
  sub_3324(v50, v51);
  char v37 = dispatch thunk of DeviceState.isWatch.getter(v35, v36);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v50);
  sub_60A4((uint64_t)v58, (uint64_t)v47);
  if ((v37 & 1) != 0) {
    goto LABEL_11;
  }
  uint64_t v38 = v48;
  uint64_t v39 = v49;
  sub_3324(v47, v48);
  char v40 = dispatch thunk of DeviceState.isAppleTV.getter(v38, v39);
  uint64_t v26 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
  if ((v40 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v41 = Logger.emergency.unsafeMutableAddressor(v26);
  swift_beginAccess(v41, v55, 0LL, 0LL);
  uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v41, v1);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v44 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v43, v44))
  {
    os_log_type_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v45 = 0;
    _os_log_impl(&dword_0, v43, v44, "Prompting for website followup.", v45, 2u);
    swift_slowDealloc(v45, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v58);
  return 1LL;
}

uint64_t sub_33528(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a2;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  char v77 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v74 = (char *)&v74 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v75 = (char *)&v74 - v8;
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v74 - v9;
  uint64_t v10 = type metadata accessor for ResponseMode(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_3974(&qword_7A8E0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_3974(&qword_7A8E8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v74 - v22;
  __chkstk_darwin(v21);
  char v25 = (char *)&v74 - v24;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v26 = static SiriEnvironment.forCurrentTask.getter();
  uint64_t v81 = v2;
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = SiriEnvironment.currentRequest.getter();
    uint64_t v29 = swift_release(v27);
    CurrentRequest.responseMode.getter(v29);
    swift_release(v28);
    uint64_t v30 = 0LL;
  }

  else
  {
    uint64_t v30 = 1LL;
  }

  uint64_t v31 = sub_3F18((uint64_t)v25, v30, 1LL, v10);
  static ResponseMode.displayOnly.getter(v31);
  sub_3F18((uint64_t)v23, 0LL, 1LL, v10);
  uint64_t v32 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_35010((uint64_t)v25, (uint64_t)v16);
  sub_35010((uint64_t)v23, v32);
  if (sub_5FE0((uint64_t)v16, 1LL, v10) == 1)
  {
    sub_E988((uint64_t)v23, &qword_7A8E8);
    sub_E988((uint64_t)v25, &qword_7A8E8);
    int v33 = sub_5FE0(v32, 1LL, v10);
    uint64_t v34 = v81;
    if (v33 == 1)
    {
      sub_E988((uint64_t)v16, &qword_7A8E8);
      uint64_t v36 = v80;
      goto LABEL_11;
    }

    goto LABEL_9;
  }

  sub_35010((uint64_t)v16, (uint64_t)v20);
  if (sub_5FE0(v32, 1LL, v10) == 1)
  {
    sub_E988((uint64_t)v23, &qword_7A8E8);
    sub_E988((uint64_t)v25, &qword_7A8E8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    uint64_t v34 = v81;
LABEL_9:
    sub_E988((uint64_t)v16, &qword_7A8E0);
    uint64_t v36 = v80;
    goto LABEL_13;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
  sub_EB44( &qword_7A8F0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v37 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v13, v10);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v11 + 8);
  v38(v13, v10);
  sub_E988((uint64_t)v23, &qword_7A8E8);
  sub_E988((uint64_t)v25, &qword_7A8E8);
  v38(v20, v10);
  sub_E988((uint64_t)v16, &qword_7A8E8);
  uint64_t v34 = v81;
  uint64_t v36 = v80;
  if ((v37 & 1) != 0)
  {
LABEL_11:
    uint64_t v39 = Logger.emergency.unsafeMutableAddressor(v35);
    swift_beginAccess(v39, v93, 0LL, 0LL);
    char v40 = v78;
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v78, v39, v34);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      os_log_type_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v44 = 0;
      os_log_type_t v45 = "DisplayOnly request. Not listening after speaking.";
LABEL_18:
      _os_log_impl(&dword_0, v42, v43, v45, v44, 2u);
      swift_slowDealloc(v44, -1LL, -1LL);
      goto LABEL_19;
    }

    goto LABEL_19;
  }

LABEL_13:
  uint64_t v46 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v35);
  if ((v46 & 1) == 0)
  {
    uint64_t v51 = Logger.emergency.unsafeMutableAddressor(v46);
    swift_beginAccess(v51, v93, 0LL, 0LL);
    char v40 = v77;
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v77, v51, v34);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      os_log_type_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v44 = 0;
      os_log_type_t v45 = "orgInfo does not have name and website. Not listening after speaking.";
      goto LABEL_18;
    }

              uint64_t v13 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v17);
              sub_3CC8((uint64_t)v13, (uint64_t)v24);
              sub_23430(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
              sub_1FD2C();
              uint64_t v18 = sub_67D4();
              if (sub_1FD34(v18))
              {
                uint64_t v19 = (_WORD *)sub_8D14();
                sub_1FE64(v19);
                sub_EDA8( &dword_0,  v13,  (os_log_type_t)v3,  "No prompt needed for this device. Not prompting for websearch followup.",  a2);
                goto LABEL_15;
              }

              goto LABEL_16;
            }

  uint64_t v1 = v62;
  int v33 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v31);
  if ((v33 & 1) != 0)
  {
    uint64_t v34 = v59;
    uint64_t v35 = v59[3];
    uint64_t v36 = v59[4];
    uint64_t v1 = (uint64_t)sub_3324(v59, v35);
    LOBYTE(v35) = dispatch thunk of DeviceState.isSidekick.getter(v35, v36);
    sub_3B68((uint64_t)v34, (uint64_t)v65);
    if ((v35 & 1) != 0)
    {
      char v37 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v65);
    }

    else
    {
      uint64_t v49 = sub_3D2C0(v65);
      char v37 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v65);
      if ((v49 & 1) == 0)
      {
        uint64_t v38 = Logger.emergency.unsafeMutableAddressor(v37);
        sub_3CC8(v38, (uint64_t)v65);
        sub_3D584();
        sub_3D21C(v53);
        sub_2F65C();
        uint64_t v54 = sub_67D4();
        if (!sub_182AC(v54)) {
          goto LABEL_26;
        }
        uint64_t v55 = (_WORD *)sub_8D14();
        sub_3D264(v55);
        sub_3D248(&dword_0, v56, v57, "Will listen after speaking the call followup.");
        goto LABEL_25;
      }
    }

    uint64_t v38 = Logger.emergency.unsafeMutableAddressor(v37);
    sub_3CC8(v38, (uint64_t)v65);
    sub_3D584();
    sub_3D21C(v50);
    sub_2F65C();
    uint64_t v51 = sub_67D4();
    if (sub_182AC(v51))
    {
      uint64_t v52 = (_WORD *)sub_8D14();
      sub_3D264(v52);
      os_log_type_t v44 = "No prompt needed for this device. Not listening after speaking.";
      goto LABEL_24;
    }
  }

  else
  {
    uint64_t v38 = Logger.emergency.unsafeMutableAddressor(v33);
    sub_3CC8(v38, (uint64_t)v65);
    sub_3D584();
    sub_3D21C(v39);
    sub_2F65C();
    char v40 = sub_67D4();
    if (sub_182AC(v40))
    {
      uint64_t v41 = (_WORD *)sub_8D14();
      sub_3D264(v41);
      os_log_type_t v44 = "orgInfo does not have name and number. Not listening after speaking.";
LABEL_24:
      sub_3D248(&dword_0, v42, v43, v44);
LABEL_25:
      sub_3CA0(v38);
    }
  }

  int v33 = *(void *)(v63 + 104);
  if ((v33 & 0x2000000000000000LL) != 0) {
    uint64_t v34 = HIBYTE(v33) & 0xF;
  }
  else {
    uint64_t v34 = *(void *)(v63 + 96) & 0xFFFFFFFFFFFFLL;
  }
  if (v34)
  {
    uint64_t v35 = sub_3D524(v61);
    uint64_t v36 = v35;
    sub_3D4E0(v35, (uint64_t)v68);
    if ((v36 & 1) != 0)
    {
      char v37 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v68);
      sub_3D4E0(v37, (uint64_t)v67);
    }

    else
    {
      uint64_t v47 = sub_3D448();
      uint64_t v48 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v68);
      sub_3D4E0(v48, (uint64_t)v67);
      if ((v47 & 1) == 0)
      {
        uint64_t v53 = sub_3D420();
        uint64_t v54 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v67);
        sub_3D4E0(v54, (uint64_t)v66);
        if ((v53 & 1) == 0)
        {
          uint64_t v55 = sub_3D2C0(v66);
          uint64_t v50 = sub_3D56C();
          if ((v55 & 1) == 0)
          {
            uint64_t v39 = Logger.emergency.unsafeMutableAddressor(v50);
            sub_3CC8(v39, (uint64_t)v68);
            sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
            sub_2F65C();
            uint64_t v56 = sub_67D4();
            if (!sub_182AC(v56)) {
              goto LABEL_31;
            }
            uint64_t v57 = (_WORD *)sub_8D14();
            sub_3D264(v57);
            sub_3D248(&dword_0, v58, v59, "Will listen after speaking the websearch followup.");
            goto LABEL_30;
          }

  uint64_t v46 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v36);
  if ((v46 & 1) == 0)
  {
    uint64_t v51 = Logger.emergency.unsafeMutableAddressor(v46);
    swift_beginAccess(v51, v93, 0LL, 0LL);
    char v40 = v77;
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v77, v51, v34);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      os_log_type_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v44 = 0;
      os_log_type_t v45 = "orgInfo does not have name and website. Not listening after speaking.";
      goto LABEL_18;
    }

  int v33 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v30);
  if ((v33 & 1) == 0)
  {
    uint64_t v38 = (void *)Logger.emergency.unsafeMutableAddressor(v33);
    sub_3CC8((uint64_t)v38, (uint64_t)v71);
    uint64_t v39 = v64;
    sub_47BE0(v64, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
    sub_13104();
    char v40 = sub_EEB4();
    if (sub_EDE4(v40))
    {
      uint64_t v41 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v41);
      os_log_type_t v44 = "orgInfo does not have name and number. Not listening after speaking.";
LABEL_21:
      sub_18240(&dword_0, v42, v43, v44);
      sub_3CA0((uint64_t)v24);
    }

  uint64_t v36 = *(void *)(v64 + 104);
  if ((v36 & 0x2000000000000000LL) != 0) {
    char v37 = HIBYTE(v36) & 0xF;
  }
  else {
    char v37 = *(void *)(v64 + 96) & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v38 = v63;
  if (v37)
  {
    uint64_t v0 = v62[4];
    uint64_t v39 = sub_3D524(v62);
    char v40 = v39;
    sub_47BD0(v39, (uint64_t)v73);
    if ((v40 & 1) != 0)
    {
      uint64_t v41 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v73);
      sub_47BD0(v41, (uint64_t)v70);
    }

    else
    {
      LOBYTE(sub_60A4(v1, v0) = v74;
      uint64_t v49 = sub_47C18(v73);
      uint64_t v50 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v73);
      sub_47BD0(v50, (uint64_t)v70);
      if ((v49 & 1) == 0)
      {
        uint64_t v55 = v71;
        uint64_t v0 = v72;
        uint64_t v29 = (uint64_t)sub_3324(v70, v71);
        LOBYTE(v55) = dispatch thunk of DeviceState.isWatch.getter(v55, v0);
        uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v70);
        sub_47BD0(v56, (uint64_t)v67);
        if ((v55 & 1) == 0)
        {
          uint64_t v57 = v68;
          uint64_t v0 = v69;
          uint64_t v29 = (uint64_t)sub_3324(v67, v68);
          LOBYTE(v5_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = dispatch thunk of DeviceState.isAppleTV.getter(v57, v0);
          uint64_t v52 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v67);
          if ((v57 & 1) == 0)
          {
            os_log_type_t v43 = (uint8_t *)Logger.emergency.unsafeMutableAddressor(v52);
            sub_3CC8((uint64_t)v43, (uint64_t)v73);
            uint64_t v38 = v60[0];
            sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
            sub_2F65C();
            uint64_t v58 = sub_67D4();
            if (!sub_182AC(v58)) {
              goto LABEL_31;
            }
            uint64_t v59 = (_WORD *)sub_3CD4(2LL);
            sub_3D264(v59);
            sub_EDA8( &dword_0,  (os_log_s *)v29,  (os_log_type_t)v0,  "Will listen after speaking the websearch followup.",  v43);
            goto LABEL_30;
          }

LABEL_19:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v34);
    return 0LL;
  }

  uint64_t v47 = v76[3];
  uint64_t v48 = v76[4];
  sub_3324(v76, v47);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v48 + 8))(v93, v47, v48);
  uint64_t v49 = v94;
  uint64_t v50 = v95;
  sub_3324(v93, v94);
  LOBYTE(v49) = dispatch thunk of DeviceState.isHomePod.getter(v49, v50);
  sub_60A4((uint64_t)v93, (uint64_t)v90);
  if ((v49 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
    sub_60A4((uint64_t)v93, (uint64_t)v88);
LABEL_21:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
    sub_60A4((uint64_t)v93, (uint64_t)v85);
    uint64_t v55 = v75;
LABEL_22:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
    sub_60A4((uint64_t)v93, (uint64_t)v82);
LABEL_23:
    uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
LABEL_24:
    uint64_t v57 = Logger.emergency.unsafeMutableAddressor(v56);
    swift_beginAccess(v57, v90, 0LL, 0LL);
    uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v55, v57, v34);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "No prompt needed for this device. Not listening after speaking.", v61, 2u);
      swift_slowDealloc(v61, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v55, v34);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
    return 0LL;
  }

  uint64_t v53 = v91;
  uint64_t v54 = v92;
  sub_3324(v90, v91);
  LOBYTE(v53) = dispatch thunk of DeviceState.isSidekick.getter(v53, v54);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
  sub_60A4((uint64_t)v93, (uint64_t)v88);
  if ((v53 & 1) != 0) {
    goto LABEL_21;
  }
  uint64_t v63 = v89;
  sub_3324(v88, v89);
  LOBYTE(v63) = dispatch thunk of DeviceState.isCarPlay.getter(v63);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
  sub_60A4((uint64_t)v93, (uint64_t)v85);
  uint64_t v55 = v75;
  if ((v63 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v64 = v86;
  uint64_t v65 = v87;
  sub_3324(v85, v86);
  LOBYTE(v64) = dispatch thunk of DeviceState.isWatch.getter(v64, v65);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
  sub_60A4((uint64_t)v93, (uint64_t)v82);
  if ((v64 & 1) != 0) {
    goto LABEL_23;
  }
  uint64_t v66 = v83;
  uint64_t v67 = v84;
  sub_3324(v82, v83);
  LOBYTE(v66) = dispatch thunk of DeviceState.isAppleTV.getter(v66, v67);
  uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
  if ((v66 & 1) != 0) {
    goto LABEL_24;
  }
  uint64_t v68 = Logger.emergency.unsafeMutableAddressor(v56);
  swift_beginAccess(v68, v90, 0LL, 0LL);
  unsigned __int8 v69 = v74;
  uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16))(v74, v68, v34);
  uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
  os_log_type_t v72 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v71, v72))
  {
    os_log_type_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v73 = 0;
    _os_log_impl(&dword_0, v71, v72, "Will listen after speaking the website followup.", v73, 2u);
    swift_slowDealloc(v73, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v69, v34);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
  return 1LL;
}

    (*(void (**)(char *, uint64_t))(v35 + 8))(v40, v34);
    return 0LL;
  }

  uint64_t v47 = v76[3];
  uint64_t v48 = v76[4];
  sub_3324(v76, v47);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v48 + 8))(v93, v47, v48);
  uint64_t v49 = v94;
  uint64_t v50 = v95;
  sub_3324(v93, v94);
  LOBYTE(v49) = dispatch thunk of DeviceState.isHomePod.getter(v49, v50);
  sub_60A4((uint64_t)v93, (uint64_t)v90);
  if ((v49 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
    sub_60A4((uint64_t)v93, (uint64_t)v88);
LABEL_21:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
    sub_60A4((uint64_t)v93, (uint64_t)v85);
    uint64_t v55 = v75;
LABEL_22:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
    sub_60A4((uint64_t)v93, (uint64_t)v82);
LABEL_23:
    uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
LABEL_24:
    uint64_t v57 = Logger.emergency.unsafeMutableAddressor(v56);
    swift_beginAccess(v57, v90, 0LL, 0LL);
    uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v55, v57, v34);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "No prompt needed for this device. Not listening after speaking.", v61, 2u);
      swift_slowDealloc(v61, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v55, v34);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
    return 0LL;
  }

  uint64_t v53 = v91;
  uint64_t v54 = v92;
  sub_3324(v90, v91);
  LOBYTE(v53) = dispatch thunk of DeviceState.isSidekick.getter(v53, v54);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
  sub_60A4((uint64_t)v93, (uint64_t)v88);
  if ((v53 & 1) != 0) {
    goto LABEL_21;
  }
  uint64_t v63 = v89;
  sub_3324(v88, v89);
  LOBYTE(v63) = dispatch thunk of DeviceState.isCarPlay.getter(v63);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
  sub_60A4((uint64_t)v93, (uint64_t)v85);
  uint64_t v55 = v75;
  if ((v63 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v64 = v86;
  uint64_t v65 = v87;
  sub_3324(v85, v86);
  LOBYTE(v64) = dispatch thunk of DeviceState.isWatch.getter(v64, v65);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
  sub_60A4((uint64_t)v93, (uint64_t)v82);
  if ((v64 & 1) != 0) {
    goto LABEL_23;
  }
  uint64_t v66 = v83;
  uint64_t v67 = v84;
  sub_3324(v82, v83);
  LOBYTE(v66) = dispatch thunk of DeviceState.isAppleTV.getter(v66, v67);
  uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
  if ((v66 & 1) != 0) {
    goto LABEL_24;
  }
  uint64_t v68 = Logger.emergency.unsafeMutableAddressor(v56);
  swift_beginAccess(v68, v90, 0LL, 0LL);
  unsigned __int8 v69 = v74;
  uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v74, v68, v34);
  uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
  os_log_type_t v72 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v71, v72))
  {
    os_log_type_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v73 = 0;
    _os_log_impl(&dword_0, v71, v72, "Will listen after speaking the website followup.", v73, 2u);
    swift_slowDealloc(v73, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v69, v34);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
  return 1LL;
}

uint64_t sub_33DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v52[-1] - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v52[-1] - v14;
  uint64_t v16 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v13);
  if ((v16 & 1) != 0) {
    goto LABEL_7;
  }
  uint64_t v17 = *(void *)(a2 + 104);
  if ((v17 & 0x2000000000000000LL) == 0)
  {
    if ((*(void *)(a2 + 96) & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v23 = Logger.emergency.unsafeMutableAddressor(v16);
    swift_beginAccess(v23, v63, 0LL, 0LL);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v23, v5);
    char v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "orgInfo does not have a websearch query. Not prompting for websearch followup.",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0LL;
  }

  if ((v17 & 0xF00000000000000LL) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v18 = v3[3];
  uint64_t v19 = v3[4];
  sub_3324(v3, v18);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v63, v18, v19);
  uint64_t v20 = v64;
  uint64_t v21 = v65;
  sub_3324(v63, v64);
  char v22 = dispatch thunk of DeviceState.isHomePod.getter(v20, v21);
  sub_60A4((uint64_t)v63, (uint64_t)v60);
  if ((v22 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v60);
    sub_60A4((uint64_t)v63, (uint64_t)v58);
LABEL_11:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v58);
    sub_60A4((uint64_t)v63, (uint64_t)v55);
LABEL_12:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v55);
    sub_60A4((uint64_t)v63, (uint64_t)v52);
LABEL_13:
    uint64_t v31 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v52);
LABEL_14:
    uint64_t v32 = Logger.emergency.unsafeMutableAddressor(v31);
    swift_beginAccess(v32, v60, 0LL, 0LL);
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v32, v5);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl( &dword_0,  v34,  v35,  "No prompt needed for this device. Not prompting for websearch followup.",  v36,  2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v63);
    return 0LL;
  }

  uint64_t v28 = v61;
  uint64_t v29 = v62;
  sub_3324(v60, v61);
  char v30 = dispatch thunk of DeviceState.isSidekick.getter(v28, v29);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v60);
  sub_60A4((uint64_t)v63, (uint64_t)v58);
  if ((v30 & 1) != 0) {
    goto LABEL_11;
  }
  uint64_t v38 = v59;
  sub_3324(v58, v59);
  char v39 = dispatch thunk of DeviceState.isCarPlay.getter(v38);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v58);
  sub_60A4((uint64_t)v63, (uint64_t)v55);
  if ((v39 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v40 = v56;
  uint64_t v41 = v57;
  sub_3324(v55, v56);
  char v42 = dispatch thunk of DeviceState.isWatch.getter(v40, v41);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v55);
  sub_60A4((uint64_t)v63, (uint64_t)v52);
  if ((v42 & 1) != 0) {
    goto LABEL_13;
  }
  uint64_t v43 = v53;
  uint64_t v44 = v54;
  sub_3324(v52, v53);
  char v45 = dispatch thunk of DeviceState.isAppleTV.getter(v43, v44);
  uint64_t v31 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v52);
  if ((v45 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v46 = Logger.emergency.unsafeMutableAddressor(v31);
  swift_beginAccess(v46, v60, 0LL, 0LL);
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v46, v5);
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl(&dword_0, v48, v49, "Prompting for websearch followup.", v50, 2u);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v63);
  return 1LL;
}

uint64_t sub_34234(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a2;
  uint64_t v81 = type metadata accessor for Logger(0LL);
  uint64_t v80 = *(void *)(v81 - 8);
  uint64_t v2 = __chkstk_darwin(v81);
  uint64_t v75 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v74 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v78 = (char *)&v74 - v7;
  __chkstk_darwin(v6);
  uint64_t v76 = (char *)&v74 - v8;
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_3974(&qword_7A8E0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_3974(&qword_7A8E8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  char v22 = (char *)&v74 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v74 - v23;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v25 = static SiriEnvironment.forCurrentTask.getter();
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = SiriEnvironment.currentRequest.getter();
    uint64_t v28 = swift_release(v26);
    CurrentRequest.responseMode.getter(v28);
    swift_release(v27);
    uint64_t v29 = 0LL;
  }

  else
  {
    uint64_t v29 = 1LL;
  }

  uint64_t v30 = sub_3F18((uint64_t)v24, v29, 1LL, v9);
  static ResponseMode.displayOnly.getter(v30);
  sub_3F18((uint64_t)v22, 0LL, 1LL, v9);
  uint64_t v31 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_35010((uint64_t)v24, (uint64_t)v15);
  sub_35010((uint64_t)v22, v31);
  if (sub_5FE0((uint64_t)v15, 1LL, v9) == 1)
  {
    sub_E988((uint64_t)v22, &qword_7A8E8);
    sub_E988((uint64_t)v24, &qword_7A8E8);
    int v32 = sub_5FE0(v31, 1LL, v9);
    uint64_t v33 = v80;
    if (v32 == 1)
    {
      sub_E988((uint64_t)v15, &qword_7A8E8);
      uint64_t v35 = v81;
      goto LABEL_17;
    }

    goto LABEL_9;
  }

  sub_35010((uint64_t)v15, (uint64_t)v19);
  if (sub_5FE0(v31, 1LL, v9) == 1)
  {
    sub_E988((uint64_t)v22, &qword_7A8E8);
    sub_E988((uint64_t)v24, &qword_7A8E8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    uint64_t v33 = v80;
LABEL_9:
    sub_E988((uint64_t)v15, &qword_7A8E0);
    uint64_t v35 = v81;
    goto LABEL_10;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v31, v9);
  sub_EB44( &qword_7A8F0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v43 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v12, v9);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v10 + 8);
  v44(v12, v9);
  sub_E988((uint64_t)v22, &qword_7A8E8);
  sub_E988((uint64_t)v24, &qword_7A8E8);
  v44(v19, v9);
  sub_E988((uint64_t)v15, &qword_7A8E8);
  uint64_t v35 = v81;
  uint64_t v33 = v80;
  if ((v43 & 1) != 0)
  {
LABEL_17:
    uint64_t v45 = Logger.emergency.unsafeMutableAddressor(v34);
    swift_beginAccess(v45, v93, 0LL, 0LL);
    uint64_t v46 = v76;
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v76, v45, v35);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v50 = 0;
      uint64_t v51 = "DisplayOnly request. Not listening after speaking.";
LABEL_21:
      _os_log_impl(&dword_0, v48, v49, v51, v50, 2u);
      swift_slowDealloc(v50, -1LL, -1LL);
      goto LABEL_22;
    }

    goto LABEL_22;
  }

LABEL_22:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v35);
    return 0LL;
  }

  uint64_t v39 = v77[3];
  uint64_t v40 = v77[4];
  sub_3324(v77, v39);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v40 + 8))(v93, v39, v40);
  uint64_t v41 = v94;
  uint64_t v42 = v95;
  sub_3324(v93, v94);
  LOBYTE(v41) = dispatch thunk of DeviceState.isHomePod.getter(v41, v42);
  sub_60A4((uint64_t)v93, (uint64_t)v90);
  if ((v41 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
    sub_60A4((uint64_t)v93, (uint64_t)v88);
LABEL_24:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
    sub_60A4((uint64_t)v93, (uint64_t)v85);
LABEL_25:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
    sub_60A4((uint64_t)v93, (uint64_t)v82);
LABEL_26:
    uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
LABEL_27:
    uint64_t v57 = Logger.emergency.unsafeMutableAddressor(v56);
    swift_beginAccess(v57, v90, 0LL, 0LL);
    uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v38, v57, v35);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "No prompt needed for this device. Not listening after speaking.", v61, 2u);
      swift_slowDealloc(v61, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v35);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
    return 0LL;
  }

  uint64_t v54 = v91;
  uint64_t v55 = v92;
  sub_3324(v90, v91);
  LOBYTE(v54) = dispatch thunk of DeviceState.isSidekick.getter(v54, v55);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
  sub_60A4((uint64_t)v93, (uint64_t)v88);
  if ((v54 & 1) != 0) {
    goto LABEL_24;
  }
  uint64_t v63 = v89;
  sub_3324(v88, v89);
  LOBYTE(v63) = dispatch thunk of DeviceState.isCarPlay.getter(v63);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
  sub_60A4((uint64_t)v93, (uint64_t)v85);
  if ((v63 & 1) != 0) {
    goto LABEL_25;
  }
  uint64_t v64 = v86;
  uint64_t v65 = v87;
  sub_3324(v85, v86);
  LOBYTE(v64) = dispatch thunk of DeviceState.isWatch.getter(v64, v65);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
  sub_60A4((uint64_t)v93, (uint64_t)v82);
  if ((v64 & 1) != 0) {
    goto LABEL_26;
  }
  uint64_t v66 = v83;
  uint64_t v67 = v84;
  sub_3324(v82, v83);
  LOBYTE(v66) = dispatch thunk of DeviceState.isAppleTV.getter(v66, v67);
  uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
  if ((v66 & 1) != 0) {
    goto LABEL_27;
  }
  uint64_t v68 = Logger.emergency.unsafeMutableAddressor(v56);
  swift_beginAccess(v68, v90, 0LL, 0LL);
  unsigned __int8 v69 = v74;
  uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v74, v68, v35);
  uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
  os_log_type_t v72 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v71, v72))
  {
    os_log_type_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v73 = 0;
    _os_log_impl(&dword_0, v71, v72, "Will listen after speaking the websearch followup.", v73, 2u);
    swift_slowDealloc(v73, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v33 + 8))(v69, v35);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
  return 1LL;
}

    uint64_t v109 = v153;
    sub_3CC8((uint64_t)v153, (uint64_t)&v166);
    sub_3820C(v68);
    uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v111 = v143;
    v110(v143, v66, v77);
    sub_3829C();
    uint64_t v112 = sub_EF3C();
    if (sub_12FD8(v112))
    {
      uint64_t v113 = (_DWORD *)sub_3CD4(12LL);
      os_log_type_t v162 = sub_3CD4(32LL);
      uint64_t v168 = v162;
      *uint64_t v113 = 136315138;
      uint64_t v159 = v113 + 1;
      uint64_t v114 = v136;
      v110(v136, (uint64_t)v111, v77);
      uint64_t v115 = String.init<A>(describing:)(v114);
      uint64_t v165 = sub_382D0(v115, v116);
      sub_382BC((uint64_t)&v165, (uint64_t)&v166, (uint64_t)v159);
      swift_bridgeObjectRelease(v110);
      char v117 = *(void (**)(char *, uint64_t))(v160 + 8);
      v117(v111, v77);
      sub_19B64(&dword_0, v118, v119, "Failed to get emergencySituation from DirectInvocation: %s");
      uint64_t v120 = v162;
      sub_67DC(v162);
      sub_3CA0(v120);
      sub_3CA0((uint64_t)v113);

      sub_38220();
      v117((char *)v161, v77);
    }

    else
    {

      uint64_t v133 = *(void (**)(char *, uint64_t))(v67 + 8);
      v133(v111, v77);
      sub_38220();
      v133((char *)v66, v77);
    }

    return 0LL;
  }

  sub_3823C();
  unsigned __int8 v69 = v147;
  uint64_t v70 = v146;
  uint64_t v71 = v149;
  sub_382F8(v146, (uint64_t)v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 32));
  os_log_type_t v72 = v150;
  sub_382F8(v150, v70, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16));
  os_log_type_t v73 = v148;
  sub_EAC4(v72, v148, type metadata accessor for EmergencyNLIntent);
  sub_37954(v73);
  uint64_t v74 = sub_38300();
  sub_EAF0(v74, type metadata accessor for EmergencyNLIntent);
  uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  uint64_t v76 = v70;
LABEL_14:
  v75(v76, v71);
LABEL_15:
  uint64_t v93 = v151;
  if (v59 != 1)
  {
    uint64_t v102 = v145;
    uint64_t v103 = v145[17];
    uint64_t v104 = v145[18];
    uint64_t v105 = v145[19];
    v145[17] = v63;
    v102[18] = v73;
    v102[19] = v59;
    sub_376C8(v103, v104, v105);
    return 1LL;
  }

  uint64_t v94 = v153;
  sub_3CC8((uint64_t)v153, (uint64_t)&v166);
  sub_3820C(v93);
  sub_3829C();
  uint64_t v95 = sub_EF3C();
  if (sub_12FD8(v95))
  {
    uint64_t v96 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v97 = sub_3CD4(32LL);
    uint64_t v168 = v97;
    *uint64_t v96 = 136315138;
    LOBYTE(v165) = 0;
    uint64_t v98 = String.init<A>(describing:)(&v165);
    uint64_t v165 = sub_382D0(v98, v99);
    sub_382BC((uint64_t)&v165, (uint64_t)&v166, (uint64_t)(v96 + 1));
    swift_bridgeObjectRelease(v62);
    sub_19B64(&dword_0, v100, v101, "%s");
    sub_67DC(v97);
    sub_3CA0(v97);
    sub_3CA0((uint64_t)v96);
  }

  sub_38220();
  return 0LL;
}

    (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v35);
    return 0LL;
  }

  uint64_t v39 = v77[3];
  uint64_t v40 = v77[4];
  sub_3324(v77, v39);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v40 + 8))(v93, v39, v40);
  uint64_t v41 = v94;
  uint64_t v42 = v95;
  sub_3324(v93, v94);
  LOBYTE(v41) = dispatch thunk of DeviceState.isHomePod.getter(v41, v42);
  sub_60A4((uint64_t)v93, (uint64_t)v90);
  if ((v41 & 1) != 0)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
    sub_60A4((uint64_t)v93, (uint64_t)v88);
LABEL_24:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
    sub_60A4((uint64_t)v93, (uint64_t)v85);
LABEL_25:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
    sub_60A4((uint64_t)v93, (uint64_t)v82);
LABEL_26:
    uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
LABEL_27:
    uint64_t v57 = Logger.emergency.unsafeMutableAddressor(v56);
    swift_beginAccess(v57, v90, 0LL, 0LL);
    uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v38, v57, v35);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "No prompt needed for this device. Not listening after speaking.", v61, 2u);
      swift_slowDealloc(v61, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v35);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
    return 0LL;
  }

  uint64_t v54 = v91;
  uint64_t v55 = v92;
  sub_3324(v90, v91);
  LOBYTE(v54) = dispatch thunk of DeviceState.isSidekick.getter(v54, v55);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v90);
  sub_60A4((uint64_t)v93, (uint64_t)v88);
  if ((v54 & 1) != 0) {
    goto LABEL_24;
  }
  uint64_t v63 = v89;
  sub_3324(v88, v89);
  LOBYTE(v63) = dispatch thunk of DeviceState.isCarPlay.getter(v63);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v88);
  sub_60A4((uint64_t)v93, (uint64_t)v85);
  if ((v63 & 1) != 0) {
    goto LABEL_25;
  }
  uint64_t v64 = v86;
  uint64_t v65 = v87;
  sub_3324(v85, v86);
  LOBYTE(v64) = dispatch thunk of DeviceState.isWatch.getter(v64, v65);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v85);
  sub_60A4((uint64_t)v93, (uint64_t)v82);
  if ((v64 & 1) != 0) {
    goto LABEL_26;
  }
  uint64_t v66 = v83;
  uint64_t v67 = v84;
  sub_3324(v82, v83);
  LOBYTE(v66) = dispatch thunk of DeviceState.isAppleTV.getter(v66, v67);
  uint64_t v56 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v82);
  if ((v66 & 1) != 0) {
    goto LABEL_27;
  }
  uint64_t v68 = Logger.emergency.unsafeMutableAddressor(v56);
  swift_beginAccess(v68, v90, 0LL, 0LL);
  unsigned __int8 v69 = v74;
  uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v74, v68, v35);
  uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
  os_log_type_t v72 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v71, v72))
  {
    os_log_type_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v73 = 0;
    _os_log_impl(&dword_0, v71, v72, "Will listen after speaking the websearch followup.", v73, 2u);
    swift_slowDealloc(v73, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v33 + 8))(v69, v35);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v93);
  return 1LL;
}

    sub_18528(v39, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    goto LABEL_34;
  }

  uint64_t v34 = v63;
  uint64_t v35 = v63[4];
  unint64_t v36 = sub_3D524(v63);
  sub_60A4((uint64_t)v34, (uint64_t)v71);
  if ((v36 & 1) != 0)
  {
    uint64_t v37 = 1;
  }

  else
  {
    LOBYTE(v35) = v72;
    uint64_t v37 = sub_47C18(v71);
  }

  uint64_t v50 = v66;
  uint64_t v51 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v71);
  uint64_t v52 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v51);
  sub_3CC8((uint64_t)v52, (uint64_t)v71);
  sub_47BE0(v50, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
  sub_13124();
  uint64_t v53 = sub_EEB4();
  if (sub_12FD8(v53))
  {
    uint64_t v54 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v55 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v54 = 136315138;
    uint64_t v70 = v55;
    if ((v37 & 1) != 0) {
      uint64_t v56 = 0x73696C206C6C6957LL;
    }
    else {
      uint64_t v56 = 0x746F6E206C6C6957LL;
    }
    if ((v37 & 1) != 0) {
      uint64_t v57 = 0xEB000000006E6574LL;
    }
    else {
      uint64_t v57 = 0xEF6E657473696C20LL;
    }
    uint64_t v58 = sub_543A4(v56, v57, &v70);
    uint64_t v59 = sub_47C7C(v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v59, v60, v54 + 4, v54 + 12);
    sub_EEE8();
    sub_67F8(&dword_0, v52, (os_log_type_t)v35, "%s after speaking the call followup.", v54);
    sub_67DC(v55);
    sub_3CA0(v55);
    sub_3CA0((uint64_t)v54);

    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
    uint64_t v62 = v66;
  }

  else
  {

    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
    uint64_t v62 = v50;
  }

  sub_18528(v62, v61);
LABEL_34:
  sub_7DF0();
}

unint64_t sub_34AC0(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)) > result)
    {
      return result;
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_34AE4( const void *a1, uint64_t a2, __int128 *a3, const void *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(a9 + sub_60A4(v0 + 256, v0 + 176) = &type metadata for ConfirmationRFFlowConfigModel;
  *(void *)(a9 + 184) = &off_6F418;
  uint64_t v17 = swift_allocObject(&unk_6F010, 50LL, 7LL);
  *(void *)(a9 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
  __int128 v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v17 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v18;
  *(_WORD *)(v17 + 48) = *(_WORD *)(a2 + 32);
  *(void *)(a9 + 256) = &type metadata for EmergencyModernCATProvider;
  *(void *)(a9 + 264) = &off_6EDF8;
  uint64_t v19 = swift_allocObject(&unk_6F038, 96LL, 7LL);
  *(void *)(a9 + 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v19;
  memcpy((void *)(v19 + 16), a4, 0x50uLL);
  memcpy((void *)(a9 + 24), a1, 0x80uLL);
  sub_65A4(a3, a9 + 192);
  __int128 v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 27_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 288) = v20;
  uint64_t v21 = *(void *)(a5 + 32);
  *(_BYTE *)(a9 + 16) = a6;
  *(void *)(a9 + 304) = v21;
  *(void *)(a9 + 31_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a7;
  *(void *)(a9 + 320) = a8;
  return a9;
}

uint64_t sub_34BF4( const void *a1, uint64_t a2, __int128 *a3, const void *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  v31[3] = &type metadata for ConfirmationRFFlowConfigModel;
  v31[4] = &off_6F418;
  uint64_t v16 = sub_77F4((uint64_t)&unk_6F010, 50LL);
  v31[0] = v16;
  __int128 v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v16 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
  *(_WORD *)(v16 + 48) = *(_WORD *)(a2 + 32);
  v30[3] = &type metadata for EmergencyModernCATProvider;
  v30[4] = &off_6EDF8;
  v30[0] = sub_77F4((uint64_t)&unk_6F038, 96LL);
  sub_23290((void *)(v30[0] + 16LL), a4);
  uint64_t v18 = type metadata accessor for EmergencyConfirmationRFFlow();
  uint64_t v19 = sub_77F4(v18, 328LL);
  uint64_t v20 = sub_6120((uint64_t)v31, (uint64_t)&type metadata for ConfirmationRFFlowConfigModel);
  __chkstk_darwin(v20);
  char v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ((void (*)(uint64_t, uint64_t))v23->initializeWithCopy)((uint64_t)v22, v24);
  uint64_t v25 = sub_6120((uint64_t)v30, (uint64_t)&type metadata for EmergencyModernCATProvider);
  __chkstk_darwin(v25);
  sub_35344();
  (*(void (**)(ValueMetadata *))(v26 + 16))(&type metadata for ConfirmationRFFlowConfigModel);
  __int128 v27 = *((_OWORD *)v22 + 1);
  v32[0] = *(_OWORD *)v22;
  v32[1] = v27;
  __int16 v33 = *((_WORD *)v22 + 16);
  sub_23290(v34, &type metadata for ConfirmationRFFlowConfigModel);
  uint64_t v28 = sub_34AE4(a1, (uint64_t)v32, a3, v34, a5, a6, a7, a8, v19);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v30);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v31);
  return v28;
}

uint64_t sub_34DCC(void *a1)
{
  v1[5] = &type metadata for EmergencyModernCATProvider;
  v1[6] = &off_6EDF8;
  uint64_t v3 = sub_77F4((uint64_t)&unk_6F038, 96LL);
  v1[2] = v3;
  sub_23290((void *)(v3 + 16), a1);
  sub_2F234(a1);
  sub_4588();
  return sub_451C();
}

uint64_t sub_34E38()
{
  uint64_t v1 = sub_77F4((uint64_t)&unk_6F060, 56LL);
  uint64_t v2 = sub_65A4((__int128 *)(v0 + 56), v1 + 16);
  static OutputPublisherFactory.makeOutputPublisherAsync()(v7, v2);
  uint64_t v3 = sub_353F0();
  sub_45A8(v3);
  uint64_t v4 = sub_35240((uint64_t)v7, (uint64_t)&unk_7A8F8);
  *(void *)(v0 + sub_60A4(v0 + 16, v0 + 56) = v4;
  uint64_t v5 = Flow.eraseToAnyFlow()(v3);
  swift_release(v4);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 16));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_34F00()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_34F24()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_7A8C4);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_353A4(v1);
  return sub_3261C(v2, v3);
}

uint64_t sub_34F70()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 50LL, 7LL);
}

uint64_t sub_34FA4()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_35010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974(&qword_7A8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_35058()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_3507C()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_7896C);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = sub_353A4(v1);
  return sub_3348(v2, v3);
}

uint64_t sub_350CC()
{
  return swift_task_dealloc(*(void *)(v0 + 1448));
}

uint64_t sub_350EC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_35108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_task_switch(a1, a2, a3);
}

uint64_t sub_35114(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_35128(uint64_t a1)
{
  *(void *)(v1 + 648) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v2, v1 + 656, v4, v3);
}

uint64_t sub_35148()
{
  return swift_task_dealloc(*(void *)(v0 + 728));
}

uint64_t sub_3515C()
{
  return *(unsigned __int8 *)(v0 + 225);
}

void sub_3516C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_35180()
{
  *(_WORD *)(v0 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return *(void *)(v1 + 8);
}

uint64_t sub_35194()
{
  return swift_release(v0);
}

uint64_t sub_351A8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v1, v3, v2);
}

uint64_t sub_351BC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

  ;
}

uint64_t sub_351EC()
{
  return v2(v0, v1);
}

uint64_t sub_351F8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

BOOL sub_35208(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_35218()
{
  return Logger.emergency.unsafeMutableAddressor();
}

void sub_35228()
{
}

uint64_t sub_35240(uint64_t a1, uint64_t a2)
{
  return SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(a1, a2, v2);
}

void sub_3524C()
{
}

uint64_t sub_35260(uint64_t a1)
{
  return v2(a1, v1, *(void *)(v3 - 208));
}

uint64_t sub_3526C@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

id sub_35280()
{
  return v0;
}

uint64_t sub_35294(uint64_t a1)
{
  return Flow.eraseToAnyFlow()(a1);
}

  ;
}

void *sub_352B8(void *a1)
{
  return sub_1812C(a1, v1);
}

void sub_352C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

  ;
}

uint64_t sub_352EC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

void sub_352FC()
{
  *(void *)(v1 - 8) = *v0;
}

uint64_t sub_3530C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_3531C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_3532C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v2;
  a1[1] = a2;
  return *(void *)(v2 + 1384);
}

  ;
}

  ;
}

uint64_t sub_35378()
{
  return static ExecuteResponse.complete(next:)(v0);
}

uint64_t sub_35384()
{
  return swift_task_dealloc(*(void *)(v0 + 1088));
}

void sub_35390(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_35398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F18(a1, 1LL, 1LL, a4);
}

uint64_t sub_353A4(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_353B8()
{
  return v0;
}

uint64_t sub_353C4()
{
  return _swift_stdlib_bridgeErrorToNSError(v0);
}

uint64_t sub_353CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v2 - 208);
  *(void *)(v2 - sub_60A4(v0 + 256, v0 + 216) = v1;
  return v1(a1, v3);
}

void *sub_353D8()
{
  return sub_1812C(v1, v0);
}

void *sub_353E4()
{
  return sub_1812C(v1, v0);
}

uint64_t sub_353F0()
{
  return type metadata accessor for SimpleOutputFlowAsync(0LL);
}

id sub_353F8(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return v1;
}

uint64_t type metadata accessor for PoisonControlModernCATs(uint64_t a1)
{
  uint64_t result = qword_7A900;
  if (!qword_7A900) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PoisonControlModernCATs);
  }
  return result;
}

uint64_t sub_3543C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B928);
}

uint64_t sub_35478(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A914);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9CF8;
  return sub_35518(a1);
}

uint64_t sub_354C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7A91C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9E08;
  return sub_35654(a1);
}

uint64_t sub_35518(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_35558()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  strcpy((char *)(v3 + 32), "websearchQuery");
  *(_BYTE *)(v3 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  uint64_t v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A4F8;
  return sub_9E10(0xD000000000000022LL, 0x800000000005C190LL, v3, v10);
}

uint64_t sub_35654(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_35694()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v3 + 40) = 0xE700000000000000LL;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 48) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    uint64_t v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  uint64_t v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A6B4;
  return sub_9E10(0xD000000000000023LL, 0x800000000005C160LL, v3, v10);
}

uint64_t sub_35784()
{
  return type metadata accessor for PoisonControlModernCATs(0LL);
}

uint64_t sub_3578C(uint64_t a1)
{
  uint64_t v157 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v160 = *(void *)(v157 - 8);
  sub_EDD8();
  __chkstk_darwin(v2);
  sub_66F4();
  sub_ED8C();
  uint64_t v4 = __chkstk_darwin(v3);
  char v6 = (char *)&v134 - v5;
  __chkstk_darwin(v4);
  sub_1300C();
  uint64_t v161 = v7;
  type metadata accessor for EmergencyNLIntent(0LL);
  sub_EDD8();
  __chkstk_darwin(v8);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v9);
  sub_1300C();
  uint64_t v11 = sub_EE14(v10);
  uint64_t v12 = type metadata accessor for NLIntent(v11);
  sub_1840C(v12, (uint64_t)&v170);
  uint64_t v147 = v13;
  sub_EDD8();
  __chkstk_darwin(v14);
  sub_6750();
  uint64_t v16 = sub_EE14(v15);
  type metadata accessor for Siri_Nlu_External_UserParse(v16);
  sub_EDD8();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for EmergencyDialogAct(0LL);
  sub_EDD8();
  __chkstk_darwin(v20);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v21);
  sub_1300C();
  uint64_t v23 = sub_EE14(v22);
  uint64_t v24 = type metadata accessor for USOParse(v23);
  sub_1840C(v24, (uint64_t)&v168);
  uint64_t v139 = v25;
  sub_EDD8();
  __chkstk_darwin(v26);
  uint64_t v28 = sub_EE14((uint64_t)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v158 = type metadata accessor for Parse(v28);
  uint64_t v162 = *(void *)(v158 - 8);
  sub_EDD8();
  __chkstk_darwin(v29);
  sub_6750();
  uint64_t v159 = (_DWORD *)v30;
  uint64_t v31 = type metadata accessor for Input(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = type metadata accessor for Logger(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v37);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v38);
  sub_EE64();
  uint64_t v156 = v39;
  __chkstk_darwin(v40);
  sub_EE64();
  sub_ED8C();
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v134 - v43;
  uint64_t v45 = Logger.emergency.unsafeMutableAddressor(v42);
  sub_3CC8(v45, (uint64_t)v169);
  uint64_t v154 = v36;
  uint64_t v46 = *(void (**)(void, void, void))(v36 + 16);
  uint64_t v153 = (void *)v45;
  uint64_t v163 = v35;
  char v152 = v46;
  v46(v44, v45, v35);
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v155 = a1;
  uint64_t v48 = v47(v34, a1, v31);
  os_log_type_t v49 = (os_log_s *)Logger.logObject.getter(v48);
  os_log_type_t v50 = static os_log_type_t.debug.getter();
  BOOL v51 = os_log_type_enabled(v49, v50);
  uint64_t v143 = v6;
  if (v51)
  {
    uint64_t v52 = sub_3CD4(12LL);
    uint64_t v135 = v19;
    uint64_t v53 = (uint8_t *)v52;
    uint64_t v54 = sub_3CD4(32LL);
    v164[0] = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v134 = v53 + 4;
    sub_11D44( &qword_790C0,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v31, v55);
    unint64_t v58 = v57;
    uint64_t v166 = sub_543A4(v56, v57, v164);
    uint64_t v59 = v157;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167, v134, v53 + 12);
    swift_bridgeObjectRelease(v58);
    sub_38294((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    _os_log_impl(&dword_0, v49, v50, "#EmergencyCSAMFlow onInput: %s", v53, 0xCu);
    sub_67DC(v54);
    sub_3CA0(v54);
    uint64_t v60 = (uint64_t)v53;
    uint64_t v19 = v135;
    sub_3CA0(v60);

    uint64_t v61 = sub_19B5C((uint64_t)v44);
  }

  else
  {
    sub_38294((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));

    uint64_t v61 = sub_19B5C((uint64_t)v44);
    uint64_t v59 = v157;
  }

  uint64_t v62 = v159;
  unsigned __int16 v63 = v155;
  Input.parse.getter(v61);
  uint64_t v64 = v158;
  int v65 = (*(uint64_t (**)(void *, uint64_t))(v162 + 88))(v62, v158);
  uint64_t v67 = v160;
  uint64_t v66 = v161;
  uint64_t v68 = v156;
  if (v65 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v65 != enum case for Parse.directInvocation(_:))
    {
      if (v65 != enum case for Parse.uso(_:))
      {
        uint64_t v121 = v153;
        sub_3CC8((uint64_t)v153, (uint64_t)v164);
        sub_3820C(v137);
        sub_3829C();
        os_log_type_t v122 = sub_EF3C();
        if (sub_12FD8(v122))
        {
          uint64_t v123 = (_DWORD *)sub_3CD4(12LL);
          uint64_t v124 = sub_3CD4(32LL);
          uint64_t v166 = v124;
          *uint64_t v123 = 136315138;
          LOBYTE(v168) = 0;
          uint64_t v125 = String.init<A>(describing:)(&v168);
          unint64_t v127 = v126;
          uint64_t v168 = sub_543A4(v125, v126, &v166);
          uint64_t v64 = v158;
          sub_382BC((uint64_t)&v168, (uint64_t)v169, (uint64_t)(v123 + 1));
          unint64_t v128 = v127;
          uint64_t v62 = v159;
          swift_bridgeObjectRelease(v128);
          sub_19B64(&dword_0, v129, v130, "%s");
          sub_67DC(v124);
          sub_3CA0(v124);
          sub_3CA0((uint64_t)v123);
        }

        sub_38220();
        (*(void (**)(void *, uint64_t))(v162 + 8))(v62, v64);
        return 0LL;
      }

      sub_3823C();
      uint64_t v87 = v139;
      uint64_t v88 = v138;
      uint64_t v71 = v141;
      uint64_t v89 = sub_382F8(v138, (uint64_t)v62, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 32));
      unsigned __int16 v63 = v88;
      USOParse.userParse.getter(v89);
      v164[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
      v164[4] = sub_EA88();
      LOBYTE(v164[0]) = 2;
      char v90 = isFeatureEnabled(_:)(v164);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v164);
      uint64_t v91 = v142;
      EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v19, v90 & 1);
      uint64_t v62 = &type metadata accessor for EmergencyDialogAct;
      uint64_t v73 = v140;
      sub_EAC4(v91, v140, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_376E0(v73);
      uint64_t v92 = sub_38300();
      sub_EAF0(v92, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
      uint64_t v76 = v88;
      goto LABEL_14;
    }

    sub_3823C();
    uint64_t v77 = v59;
    (*(void (**)(uint64_t, void *, uint64_t))(v67 + 32))(v66, v62, v59);
    sub_3CC8((uint64_t)v153, (uint64_t)v164);
    uint64_t v62 = v144;
    uint64_t v78 = sub_3820C((uint64_t)v144);
    uint64_t v79 = (void *)Logger.logObject.getter(v78);
    os_log_type_t v80 = static os_log_type_t.debug.getter();
    if (sub_EDE4(v80))
    {
      uint64_t v81 = (_WORD *)sub_3CD4(2LL);
      *uint64_t v81 = 0;
      sub_18240(&dword_0, v82, v83, "EmergencyCSAMFlow onInput .directInvocation");
      sub_3CA0((uint64_t)v81);
    }

    uint64_t v84 = sub_19B5C((uint64_t)v62);
    uint64_t v85 = Parse.DirectInvocation.identifier.getter(v84);
    if (v85 == 0xD000000000000035LL && v86 == 0x800000000005B1B0LL)
    {
      sub_38320(0x800000000005B1B0LL);
    }

    else
    {
      char v107 = sub_8498(v85, v86, 0xD000000000000035LL, 0x800000000005B1B0LL);
      sub_1FD7C();
      if ((v107 & 1) == 0) {
        goto LABEL_22;
      }
    }

    uint64_t v108 = sub_28990(v66);
    if (v108 != 35)
    {
      unsigned __int16 v63 = EmergencyCSAMIntent.init(emergencySituation:emergencyVerb:originalInput:)(v108, 8LL, 0LL, 0LL);
      uint64_t v73 = v131;
      uint64_t v59 = v132;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v77);
      goto LABEL_15;
    }

void sub_36288(void (*a1)(os_log_s *), uint64_t a2)
{
  void (*v55)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  int v64;
  void (*v65)(os_log_s *);
  unint64_t v66;
  _BYTE *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_s *v82;
  void (*v83)(os_log_s *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  os_log_type_t v87;
  void *v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_type_t v98;
  _WORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(os_log_s *);
  void *v115;
  os_log_s *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(void, void, void);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136[3];
  char v137[24];
  char v138[24];
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142[8];
  uint64_t v143;
  uint64_t v3 = v2;
  uint64_t v135 = a2;
  uint64_t v5 = type metadata accessor for FlowUnhandledReason(0LL);
  sub_1840C(v5, (uint64_t)v142);
  os_log_type_t v122 = v6;
  sub_EDD8();
  __chkstk_darwin(v7);
  sub_6750();
  uint64_t v9 = sub_EE14(v8);
  uint64_t v119 = type metadata accessor for OutputFlow(v9);
  sub_EDD8();
  __chkstk_darwin(v10);
  uint64_t v120 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_3974(&qword_7A170);
  sub_EDD8();
  __chkstk_darwin(v12);
  sub_6750();
  uint64_t v125 = v13;
  uint64_t v124 = sub_3974(&qword_78958);
  sub_EDD8();
  __chkstk_darwin(v14);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v15);
  sub_1300C();
  uint64_t v17 = sub_EE14(v16);
  uint64_t v18 = type metadata accessor for Locale(v17);
  sub_1840C(v18, (uint64_t)&v143);
  unint64_t v128 = v19;
  sub_EDD8();
  __chkstk_darwin(v20);
  sub_6750();
  uint64_t v22 = sub_EE14(v21);
  uint64_t v23 = type metadata accessor for ExecuteResponse(v22);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_6750();
  uint64_t v26 = sub_EE14(v25);
  uint64_t v27 = (os_log_s *)type metadata accessor for Logger(v26);
  uint64_t v28 = *((void *)v27 - 1);
  __chkstk_darwin(v27);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v29);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v30);
  sub_EE64();
  sub_ED8C();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v112 - v33;
  uint64_t v35 = Logger.emergency.unsafeMutableAddressor(v32);
  sub_3CC8(v35, (uint64_t)v138);
  uint64_t v36 = *(uint64_t (**)(void, void, void))(v28 + 16);
  uint64_t v133 = v35;
  uint64_t v132 = v36;
  uint64_t v37 = v36(v34, v35, v27);
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)sub_3CD4(2LL);
    unint64_t v116 = v27;
    uint64_t v41 = (uint64_t)v40;
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl(&dword_0, v38, v39, "#EmergencyCSAMFlow execute", v40, 2u);
    uint64_t v27 = v116;
    sub_3CA0(v41);
  }

  uint64_t v42 = *(os_log_s **)(v28 + 8);
  ((void (*)(char *, os_log_s *))v42)(v34, v27);
  uint64_t v43 = v3[19];
  if (v43 == 1)
  {
    unint64_t v45 = sub_E94C();
    uint64_t v46 = sub_382EC((uint64_t)&type metadata for EmergencyFlowError, v45);
    *uint64_t v47 = 2;
    uint64_t v48 = sub_3324(v3 + 7, v3[10]);
    sub_382A4(v48);
    uint64_t v49 = v46;
    os_log_type_t v50 = v3 + 2;
    BOOL v51 = (void (*)(os_log_s *))a1;
LABEL_7:
    sub_37D9C(v49, (uint64_t)v50, &v139, (void (*)(void))v51, v135);
    swift_errorRelease(v46);
    return;
  }

  if (v43 == 2)
  {
    sub_38284();
    static ExecuteResponse.complete()(v44);
    a1(v27);
    (*(void (**)(os_log_s *, uint64_t))(v24 + 8))(v27, v23);
    return;
  }

  unint64_t v116 = v42;
  uint64_t v114 = (void (*)(os_log_s *))a1;
  uint64_t v52 = v3[17];
  uint64_t v113 = v3[18];
  uint64_t v53 = v3[5];
  uint64_t v54 = v3[6];
  uint64_t v115 = v3 + 2;
  sub_3324(v3 + 2, v53);
  uint64_t v55 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v54 + 8);
  swift_bridgeObjectRetain(v43);
  v55(&v139, v53, v54);
  uint64_t v56 = sub_3824C();
  if (!v57)
  {
    sub_382DC();
    goto LABEL_13;
  }

  unint64_t v58 = v56;
  uint64_t v59 = v57;
  sub_382DC();
  uint64_t v60 = v127;
  Locale.init(identifier:)(v58, v59);
  LOBYTE(v58) = sub_37190();
  (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v60, v129);
  if ((v58 & 1) == 0)
  {
LABEL_13:
    uint64_t v129 = v24;
    unint64_t v128 = v23;
    uint64_t v69 = v133;
    sub_3CC8(v133, (uint64_t)v137);
    uint64_t v70 = v131;
    sub_3822C(v131, v69);
    uint64_t v71 = swift_retain_n(v3, 2LL);
    Logger.logObject.getter(v71);
    uint64_t v72 = sub_EF3C();
    if (os_log_type_enabled(v27, v72))
    {
      uint64_t v73 = (uint8_t *)sub_3CD4(12LL);
      unint64_t v127 = sub_3CD4(32LL);
      v136[0] = v127;
      *(_DWORD *)uint64_t v73 = 136315138;
      uint64_t v74 = v3[5];
      uint64_t v75 = v3[6];
      sub_3324(v115, v74);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v75 + 8))(&v139, v74, v75);
      uint64_t v76 = sub_3824C();
      if (v77) {
        uint64_t v78 = v76;
      }
      else {
        uint64_t v78 = 0x3E6C696E3CLL;
      }
      if (v77) {
        uint64_t v79 = v77;
      }
      else {
        uint64_t v79 = 0xE500000000000000LL;
      }
      sub_382DC();
      uint64_t v139 = sub_543A4(v78, v79, v136);
      sub_382BC((uint64_t)&v139, (uint64_t)&v140, (uint64_t)(v73 + 4));
      sub_38314();
      swift_bridgeObjectRelease(v79);
      _os_log_impl(&dword_0, v27, v72, "#EmergencyCSAMFlow execute unsupported locale: %s", v73, 0xCu);
      os_log_type_t v80 = v127;
      sub_67DC(v127);
      sub_3CA0(v80);
      sub_3CA0((uint64_t)v73);

      uint64_t v81 = v131;
    }

    else
    {

      sub_38314();
      uint64_t v81 = v70;
    }

    uint64_t v82 = v116;
    ((void (*)(uint64_t, os_log_s *))v116)(v81, v27);
    uint64_t v83 = v114;
    uint64_t v84 = v130;
    uint64_t v85 = v129;
    if (v43)
    {
      uint64_t v86 = v133;
      sub_3CC8(v133, (uint64_t)v136);
      sub_3822C(v84, v86);
      sub_3829C();
      uint64_t v87 = sub_EF3C();
      if (sub_EDE4(v87))
      {
        uint64_t v88 = v3;
        uint64_t v89 = (uint8_t *)sub_3CD4(2LL);
        *(_WORD *)uint64_t v89 = 0;
        _os_log_impl(&dword_0, v27, (os_log_type_t)v86, "#EmergencyCSAMFlow Falling back to websearch", v89, 2u);
        char v90 = (uint64_t)v89;
        uint64_t v3 = v88;
        sub_3CA0(v90);
      }

      ((void (*)(uint64_t, os_log_s *))v116)(v84, v27);
      uint64_t v27 = (os_log_s *)v3[5];
      uint64_t v91 = v3[6];
      sub_3324(v115, (uint64_t)v27);
      (*(void (**)(uint64_t *__return_ptr, os_log_s *, uint64_t))(v91 + 16))(&v141, v27, v91);
      uint64_t v139 = v113;
      uint64_t v140 = v43;
      sub_18188();
      sub_38284();
      static ExecuteResponse.complete<A>(next:)(v92, v93, v94);
      sub_181C4((uint64_t)&v139);
    }

    else
    {
      os_log_type_t v95 = v133;
      sub_3CC8(v133, (uint64_t)&v139);
      uint64_t v96 = v126;
      uint64_t v97 = sub_3822C(v126, v95);
      Logger.logObject.getter(v97);
      uint64_t v98 = sub_EF3C();
      if (sub_EDE4(v98))
      {
        unint64_t v99 = (_WORD *)sub_3CD4(2LL);
        *unint64_t v99 = 0;
        sub_18240(&dword_0, v100, v101, "#EmergencyCSAMFlow Falling back to server execution");
        uint64_t v102 = (uint64_t)v99;
        uint64_t v96 = v126;
        sub_3CA0(v102);
      }

      ((void (*)(uint64_t, os_log_s *))v82)(v96, v27);
      uint64_t v103 = v122;
      uint64_t v104 = v121;
      uint64_t v105 = v123;
      (*(void (**)(uint64_t, void, uint64_t))(v122 + 104))( v121,  enum case for FlowUnhandledReason.needsServerExecution(_:),  v123);
      sub_38284();
      static ExecuteResponse.unhandled(reason:)(v104);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v104, v105);
    }

    v83(v27);
    (*(void (**)(os_log_s *, uint64_t))(v85 + 8))(v27, v128);
    return;
  }

  uint64_t v61 = v125;
  uint64_t v62 = v113;
  unsigned __int16 v63 = v3;
  sub_36BE0(v125);
  uint64_t v64 = sub_5FE0(v61, 1LL, v124);
  int v65 = v114;
  if (v64 == 1)
  {
    sub_38274();
    sub_E988(v61, &qword_7A170);
    uint64_t v66 = sub_E94C();
    uint64_t v46 = sub_382EC((uint64_t)&type metadata for EmergencyFlowError, v66);
    *uint64_t v67 = 2;
    uint64_t v68 = sub_3324(v63 + 7, v63[10]);
    sub_382A4(v68);
    uint64_t v49 = v46;
    os_log_type_t v50 = v115;
    BOOL v51 = v65;
    goto LABEL_7;
  }

  uint64_t v106 = v118;
  sub_38118(v61, v118);
  char v107 = sub_36DC8(v52, v62, v43);
  sub_38274();
  uint64_t v108 = v117;
  sub_3B20(v106, v117);
  sub_60A4((uint64_t)v115, (uint64_t)&v139);
  uint64_t v109 = (uint64_t)v120;
  OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v108, v107, &v139, 0LL);
  sub_11D44( &qword_78960,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
  uint64_t v110 = v134;
  static ExecuteResponse.complete<A>(next:)(v109, v119, v111);
  v65((os_log_s *)v110);
  sub_38294(v110, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_EAF0(v109, (uint64_t (*)(void))&type metadata accessor for OutputFlow);
  sub_E988(v106, &qword_78958);
}

uint64_t sub_36BE0@<X0>(uint64_t a1@<X8>)
{
  if ((EmergencyCSAMIntent.isCSAMContentReporting.getter() & 1) != 0)
  {
    sub_381EC();
    sub_49978();
    goto LABEL_8;
  }

  uint64_t v3 = sub_382E4();
  if (v3 == 0xD000000000000013LL && v4 == 0x800000000005AD70LL)
  {
    sub_38320(0x800000000005AD70LL);
LABEL_7:
    sub_381EC();
    sub_49958();
    goto LABEL_8;
  }

  sub_8498(v3, v4, 0xD000000000000013LL, 0x800000000005AD70LL);
  sub_382C4();
  if ((v1 & 1) != 0) {
    goto LABEL_7;
  }
  uint64_t v8 = sub_382E4();
  if (v8 == 0xD000000000000010LL && v9 == 0x800000000005AD90LL)
  {
    sub_38320(0x800000000005AD90LL);
LABEL_14:
    sub_381EC();
    sub_499B4();
    goto LABEL_8;
  }

  sub_8498(v8, v9, 0xD000000000000010LL, 0x800000000005AD90LL);
  sub_382C4();
  if ((v1 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v10 = sub_382E4();
  if (v10 == 0x7078655F6D617363LL && v11 == 0xED0000746963696CLL)
  {
    swift_bridgeObjectRelease(0xED0000746963696CLL);
  }

  else
  {
    uint64_t v13 = v11;
    char v14 = sub_8498(v10, v11, 0x7078655F6D617363LL, 0xED0000746963696CLL);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      uint64_t v5 = 1LL;
      goto LABEL_9;
    }
  }

  sub_381EC();
  dispatch thunk of CATWrapper.execute(catId:parameters:)( 0x616573236D617363LL,  0xEB00000000686372LL,  &_swiftEmptyArrayStorage);
LABEL_8:
  sub_EE0C();
  uint64_t v5 = 0LL;
LABEL_9:
  uint64_t v6 = sub_3974(&qword_78958);
  return sub_3F18(a1, v5, 1LL, v6);
}

void *sub_36DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  sub_EDD8();
  __chkstk_darwin(v9);
  sub_6750();
  uint64_t v61 = v10;
  sub_3974((uint64_t *)&unk_7AE80);
  sub_EDD8();
  __chkstk_darwin(v11);
  sub_66F4();
  uint64_t v59 = v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v60 = type metadata accessor for URL(0LL);
  uint64_t v58 = *(void *)(v60 - 8);
  sub_EDD8();
  __chkstk_darwin(v16);
  sub_6750();
  uint64_t v57 = v17;
  uint64_t v18 = sub_3974(&qword_78958);
  sub_EDD8();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v55 - v23;
  type metadata accessor for CsamSituation();
  swift_bridgeObjectRetain(a3);
  uint64_t v25 = sub_82A4(a1, a2, a3);
  uint64_t v26 = sub_3324(v4 + 7, v4[10]);
  swift_retain(*v26);
  uint64_t v27 = swift_retain(v25);
  sub_49998(v27);
  sub_EE0C();
  sub_382B4();
  uint64_t v28 = Result<>.firstPrint.getter(v18);
  uint64_t v30 = v29;
  sub_E988((uint64_t)v24, &qword_78958);
  if (v30)
  {
    uint64_t v56 = v28;
    uint64_t v32 = *sub_3324(v4 + 7, v4[10]);
    swift_retain(v25);
    swift_retain(v32);
    sub_499D4(v25);
    sub_EE0C();
    sub_382B4();
    uint64_t v33 = Result<>.firstPrint.getter(v18);
    uint64_t v35 = v34;
    sub_E988((uint64_t)v22, &qword_78958);
    if (v35)
    {
      URL.init(string:)(v33, v35);
      sub_1FD7C();
      uint64_t v36 = v60;
      if (sub_5FE0((uint64_t)v15, 1LL, v60) != 1)
      {
        uint64_t v47 = v57;
        uint64_t v48 = v58;
        (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v57, v15, v36);
        uint64_t v49 = v59;
        uint64_t v50 = v47;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v59, v47, v36);
        sub_3F18(v49, 0LL, 1LL, v36);
        uint64_t v51 = v4[5];
        uint64_t v52 = v4[6];
        sub_3324(v4 + 2, v51);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v52 + 8))(v64, v51, v52);
        sub_40590(v49, v64, v56, v30);
        uint64_t v46 = v53;
        sub_382B4();
        sub_2F694();
        _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v64);
        sub_E988(v49, (uint64_t *)&unk_7AE80);
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v36);
        return (void *)v46;
      }

      sub_2F694();
      sub_E988((uint64_t)v15, (uint64_t *)&unk_7AE80);
    }

    else
    {
      uint64_t v31 = sub_2F694();
    }
  }

  uint64_t v37 = Logger.emergency.unsafeMutableAddressor(v31);
  sub_3CC8(v37, (uint64_t)v64);
  uint64_t v39 = v61;
  uint64_t v38 = v62;
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v61, v37, v63);
  uint64_t v41 = (void *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (sub_EDE4(v42))
  {
    uint64_t v43 = (_WORD *)sub_3CD4(2LL);
    *uint64_t v43 = 0;
    sub_18240(&dword_0, v44, v45, "#EmergencyCSAMFlow Failed to execute CAT");
    sub_3CA0((uint64_t)v43);
  }

  sub_38294(v39, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  sub_382B4();
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_37190()
{
  if (qword_785D8 != -1) {
    swift_once(&qword_785D8, sub_376B4);
  }
  uint64_t v0 = (void *)qword_7A970;
  uint64_t v1 = swift_bridgeObjectRetain(qword_7A970);
  uint64_t v2 = Locale.identifier.getter(v1);
  uint64_t v4 = v3;
  char v5 = sub_37210(v2, v3, v0);
  sub_1FD7C();
  swift_bridgeObjectRelease(v4);
  return v5 & 1;
}

uint64_t sub_37210(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0LL;
  }
  uint64_t v7 = a3[4];
  uint64_t v8 = a3[5];
  if (v7 == a1 && v8 == a2) {
    return 1LL;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0LL);
  if ((result & 1) != 0) {
    return 1LL;
  }
  if (v3 == 1) {
    return 0LL;
  }
  uint64_t v11 = a3 + 7;
  for (uint64_t i = 1LL; ; ++i)
  {
    uint64_t v13 = i + 1;
    if (__OFADD__(i, 1LL)) {
      break;
    }
    uint64_t v14 = *(v11 - 1);
    uint64_t v15 = *v11;
    BOOL v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0LL) & 1) != 0) {
      return 1LL;
    }
    uint64_t result = 0LL;
    v11 += 2;
    if (v13 == v3) {
      return result;
    }
  }

  __break(1u);
  return result;
}

void *sub_372D4()
{
  return v0;
}

uint64_t sub_3730C()
{
  return swift_deallocClassInstance(v0, 160LL, 7LL);
}

uint64_t type metadata accessor for EmergencyCSAMFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin17EmergencyCSAMFlow);
}

unint64_t destroy for EmergencyCSAMFlow.EmergencyCSAMFlowState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

void _s19EmergencyFlowPlugin17EmergencyCSAMFlowC22EmergencyCSAMFlowStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if ((int)v4 - 1 < 0)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain(v3);
  }

  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }

  sub_6774();
}

uint64_t assignWithCopy for EmergencyCSAMFlow.EmergencyCSAMFlowState(uint64_t a1, __int128 *a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  int v7 = v6 - 1;
  if (*((void *)a2 + 2) < 0xFFFFFFFFuLL) {
    uint64_t v5 = *((void *)a2 + 2);
  }
  int v8 = v5 - 1;
  if (v7 < 0)
  {
    if (v8 < 0)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      *(void *)(a1 + 16) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v4);
      return a1;
    }

    swift_bridgeObjectRelease(*(void *)(a1 + 16));
    goto LABEL_11;
  }

  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    __int128 v10 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v10;
    return a1;
  }

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  *(void *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  return a1;
}

__n128 initializeWithTake for EmergencyCSAMFlow.EmergencyCSAMFlowState(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EmergencyCSAMFlow.EmergencyCSAMFlowState(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease(v4);
      return a1;
    }

    swift_bridgeObjectRelease(v4);
  }

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCSAMFlow.EmergencyCSAMFlowState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 1;
  if (v5 >= 3) {
    return v6;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyCSAMFlow.EmergencyCSAMFlowState( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0LL;
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 2;
    }
  }

  return result;
}

uint64_t sub_375E8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(sub_27D20(v0, v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_3760C(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0LL;
    result[2] = 0LL;
    *__n128 result = a2 - 0x7FFFFFFF;
  }

  else if (a2)
  {
    result[2] = a2;
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyCSAMFlow.EmergencyCSAMFlowState()
{
  return &type metadata for EmergencyCSAMFlow.EmergencyCSAMFlowState;
}

uint64_t sub_3764C(uint64_t a1)
{
  return sub_3578C(a1) & 1;
}

void sub_37670(void (*a1)(os_log_s *), uint64_t a2)
{
}

uint64_t sub_37690(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyCSAMFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

void sub_376B4()
{
  qword_7A970 = (uint64_t)&off_6D580;
}

uint64_t sub_376C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return result;
}

uint64_t sub_376E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for EmergencyDialogAct(0LL);
  v28[3] = v6;
  v28[4] = &protocol witness table for EmergencyDialogAct;
  uint64_t v7 = sub_649C(v28);
  sub_EB18(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  uint64_t v9 = Logger.emergency.unsafeMutableAddressor(v8);
  swift_beginAccess(v9, v27, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_60A4((uint64_t)v28, (uint64_t)v26);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v14 = swift_slowAlloc(32LL, -1LL);
    uint64_t v22 = v2;
    uint64_t v15 = v14;
    uint64_t v25 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v21 = v13 + 4;
    sub_60A4((uint64_t)v26, (uint64_t)&v23);
    sub_3974(&qword_790C8);
    uint64_t v16 = String.init<A>(describing:)(&v23);
    unint64_t v18 = v17;
    uint64_t v23 = sub_543A4(v16, v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v21, v13 + 12);
    swift_bridgeObjectRelease(v18);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v26);
    _os_log_impl(&dword_0, v11, v12, "Converting EmergencyDialogAct to EmergencyCSAMIntent: %s", v13, 0xCu);
    swift_arrayDestroy(v15, 1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v26);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  uint64_t v19 = EmergencyCSAMIntent.init(emergencySituation:emergencyVerb:originalInput:)( *((unsigned __int8 *)v7 + *(int *)(v6 + 24)),  *((unsigned __int8 *)v7 + *(int *)(v6 + 20)),  0LL,  0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v28);
  return v19;
}

uint64_t sub_37954(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for EmergencyNLIntent(0LL);
  uint64_t v54 = v9;
  sub_11D44(&qword_790D0, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
  uint64_t v55 = v10;
  uint64_t v47 = sub_649C(v53);
  sub_EB18(a1, (uint64_t)v47, type metadata accessor for EmergencyNLIntent);
  uint64_t v12 = Logger.emergency.unsafeMutableAddressor(v11);
  swift_beginAccess(v12, v52, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v12, v5);
  sub_60A4((uint64_t)v53, (uint64_t)v51);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = v5;
    unint64_t v17 = (uint8_t *)v16;
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = v42;
    uint64_t v45 = v3;
    *(_DWORD *)unint64_t v17 = 136315138;
    uint64_t v41 = v17 + 4;
    uint64_t v46 = v2;
    unint64_t v18 = sub_3324(v51, v51[3]);
    uint64_t v43 = v6;
    __chkstk_darwin(v18);
    uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v21 + 16))(v20);
    uint64_t v22 = sub_449C4();
    uint64_t v23 = v9;
    unint64_t v25 = v24;
    sub_EAF0((uint64_t)v20, type metadata accessor for EmergencyNLIntent);
    uint64_t v26 = v22;
    uint64_t v2 = v46;
    uint64_t v49 = sub_543A4(v26, v25, &v50);
    uint64_t v3 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v41, v17 + 12);
    unint64_t v27 = v25;
    uint64_t v9 = v23;
    swift_bridgeObjectRelease(v27);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v51);
    _os_log_impl(&dword_0, v14, v15, "Converting EmergencyNLIntent: %s", v17, 0xCu);
    uint64_t v28 = v42;
    swift_arrayDestroy(v42, 1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v51);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  sub_3324(v53, v54);
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  uint64_t v29 = qword_78CC0;
  sub_11D44(&qword_78D98, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  uint64_t v31 = v30;
  IntentNodeTraversable.value<A>(forNode:)(v29, v9, v30);
  uint64_t v32 = LOBYTE(v51[0]);
  sub_3324(v53, v54);
  if (qword_785B0 != -1) {
    swift_once(&qword_785B0, sub_A288);
  }
  IntentNodeTraversable.value<A>(forNode:)(qword_78CB8, v9, v31);
  uint64_t v33 = LOBYTE(v51[0]);
  uint64_t v34 = v48;
  uint64_t v35 = (*(uint64_t (**)(char *, void *, uint64_t))(v3 + 16))(v48, v47, v2);
  uint64_t v36 = NLIntent.originalInput.getter(v35);
  uint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v34, v2);
  uint64_t v39 = EmergencyCSAMIntent.init(emergencySituation:emergencyVerb:originalInput:)(v32, v33, v36, v38);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v53);
  return v39;
}

uint64_t sub_37D9C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v9 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = &type metadata for EmergencyCATProvider;
  uint64_t v49 = &off_6FB48;
  v47[0] = swift_allocObject(&unk_6F170, 128LL, 7LL);
  memcpy((void *)(v47[0] + 16LL), a3, 0x70uLL);
  unint64_t v17 = sub_3A40(a3);
  uint64_t v18 = Logger.emergency.unsafeMutableAddressor(v17);
  swift_beginAccess(v18, v46, 0LL, 0LL);
  uint64_t v43 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
  swift_errorRetain(a1);
  uint64_t v19 = swift_errorRetain(a1);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v40 = a2;
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = v9;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v42 = a4;
    uint64_t v25 = v24;
    __dst[0] = v24;
    uint64_t v39 = v13;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v38 = v23 + 4;
    uint64_t v45 = a1;
    swift_errorRetain(a1);
    sub_3974(&qword_78950);
    uint64_t v26 = String.init<A>(describing:)(&v45);
    unint64_t v27 = v12;
    uint64_t v28 = v10;
    unint64_t v30 = v29;
    uint64_t v45 = sub_543A4(v26, v29, __dst);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v38, v23 + 12);
    unint64_t v31 = v30;
    uint64_t v10 = v28;
    uint64_t v12 = v27;
    a2 = v40;
    swift_bridgeObjectRelease(v31);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v20, v21, "Execution Error: %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL);
    uint64_t v32 = v25;
    a4 = v42;
    swift_slowDealloc(v32, -1LL, -1LL);
    uint64_t v33 = v23;
    uint64_t v9 = v41;
    swift_slowDealloc(v33, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v39);
  }

  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
  }

  uint64_t v34 = sub_3324(v47, (uint64_t)v48);
  memcpy(__dst, v34, 0x70uLL);
  uint64_t v35 = sub_37CC(a2, __dst);
  static ExecuteResponse.complete(next:)(v35);
  swift_release(v35);
  a4(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
}

uint64_t sub_38118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3974(&qword_78958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_38160()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t sub_381EC()
{
  uint64_t v1 = *sub_3324((void *)(v0 + 56), *(void *)(v0 + 80));
  return swift_retain(v1);
}

uint64_t sub_3820C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 - 288))(a1, v1, *(void *)(v2 - 200));
}

uint64_t sub_38220()
{
  return v0(v1, *(void *)(v2 - 200));
}

uint64_t sub_3822C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 304))(a1, a2, v2);
}

uint64_t sub_3823C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_3824C()
{
  uint64_t v1 = *(void *)(v0 - 176);
  uint64_t v2 = *(void *)(v0 - 168);
  sub_3324((void *)(v0 - 200), v1);
  return dispatch thunk of DeviceState.preferencesLanguageCode.getter(v1, v2);
}

uint64_t sub_38274()
{
  return sub_376C8(v2, v1, v0);
}

  ;
}

uint64_t sub_38294@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_3829C()
{
  return Logger.logObject.getter();
}

void *sub_382A4(void *__src)
{
  return memcpy((void *)(v1 - 200), __src, 0x70uLL);
}

uint64_t sub_382B4()
{
  return swift_release(v0);
}

uint64_t sub_382BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

uint64_t sub_382C4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_382D0(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 120));
}

uint64_t sub_382DC()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 200));
}

uint64_t sub_382E4()
{
  return EmergencySituation.rawValue.getter(v0);
}

uint64_t sub_382EC(uint64_t a1, uint64_t a2)
{
  return swift_allocError(a1, a2, 0LL, 0LL);
}

uint64_t sub_382F8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t sub_38300()
{
  return v0;
}

uint64_t sub_38314()
{
  return swift_release_n(v0, 2LL);
}

uint64_t sub_38320@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(a1);
}

void sub_38328()
{
}

void *sub_38354()
{
  uint64_t v16 = 0LL;
  memset(v15, 0, sizeof(v15));
  uint64_t v14 = 0LL;
  memset(v13, 0, sizeof(v13));
  uint64_t v12 = 0LL;
  memset(v11, 0, sizeof(v11));
  uint64_t v10 = 0LL;
  memset(v9, 0, sizeof(v9));
  uint64_t v8 = 0LL;
  memset(v7, 0, sizeof(v7));
  uint64_t v6 = 0LL;
  memset(v5, 0, sizeof(v5));
  uint64_t v4 = 0LL;
  memset(v3, 0, sizeof(v3));
  *((void *)&__src[1] + 1) = &type metadata for FlowConfigModel;
  *(void *)&__src[2] = &protocol witness table for FlowConfigModel;
  *(void *)&__src[0] = sub_77F4((uint64_t)&unk_6F1D8, 296LL);
  FlowConfigModel.init(deviceState:aceService:aceServiceAsync:sharedContextService:outputPublisher:flowFinder:networkStatusProvider:)( v15,  v13,  v11,  v9,  v7,  v5,  v3);
  sub_65A4(__src, (uint64_t)(v0 + 2));
  sub_3FD2C((uint64_t *)__src);
  v0[10] = &type metadata for EmergencyCATProvider;
  v0[11] = &off_6FB48;
  uint64_t v1 = sub_77F4((uint64_t)&unk_6F200, 128LL);
  v0[7] = v1;
  memcpy((void *)(v1 + 16), __src, 0x70uLL);
  v0[15] = &type metadata for EmergencyFeatureFlags;
  v0[16] = &off_6F318;
  return v0;
}

void sub_38464(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v219 = a1;
  uint64_t v221 = a2;
  uint64_t v2 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v209 = *(void *)(v2 - 8);
  sub_EDD8();
  __chkstk_darwin(v3);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v4);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v5);
  sub_1300C();
  uint64_t v7 = sub_EE14(v6);
  uint64_t v216 = type metadata accessor for EmergencyNLIntent(v7);
  sub_EDD8();
  __chkstk_darwin(v8);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v9);
  sub_1300C();
  uint64_t v11 = sub_EE14(v10);
  uint64_t v225 = type metadata accessor for NLIntent(v11);
  uint64_t v217 = *(void *)(v225 - 8);
  sub_EDD8();
  __chkstk_darwin(v12);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v13);
  sub_1300C();
  uint64_t v15 = sub_EE14(v14);
  uint64_t v199 = type metadata accessor for EmergencyDialogAct(v15);
  sub_EDD8();
  __chkstk_darwin(v16);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v17);
  sub_1300C();
  uint64_t v19 = sub_EE14(v18);
  uint64_t v195 = type metadata accessor for Siri_Nlu_External_UserParse(v19);
  uint64_t v194 = *(void *)(v195 - 8);
  sub_EDD8();
  __chkstk_darwin(v20);
  sub_6750();
  uint64_t v22 = sub_EE14(v21);
  uint64_t v206 = type metadata accessor for USOParse(v22);
  uint64_t v202 = *(void *)(v206 - 8);
  sub_EDD8();
  __chkstk_darwin(v23);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v24);
  sub_1300C();
  uint64_t v26 = sub_EE14(v25);
  unint64_t v27 = (void *)type metadata accessor for Parse(v26);
  uint64_t v28 = *(v27 - 1);
  __chkstk_darwin(v27);
  unint64_t v30 = (char *)&v193 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v31 = (int *)type metadata accessor for FlowRouter(0LL);
  sub_EDD8();
  __chkstk_darwin(v32);
  sub_6750();
  uint64_t v34 = sub_EE14(v33);
  uint64_t v35 = type metadata accessor for Logger(v34);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v37);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v38);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v39);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v40);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v41);
  sub_EE64();
  sub_ED8C();
  uint64_t v43 = __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v193 - v44;
  uint64_t v46 = Logger.emergency.unsafeMutableAddressor(v43);
  sub_3CC8(v46, (uint64_t)v233);
  uint64_t v47 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v36 + 16);
  uint64_t v227 = (uint8_t *)v46;
  uint64_t v229 = v35;
  uint64_t v226 = v47;
  uint64_t v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v45, v46, v35);
  uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
  os_log_type_t v50 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = v2;
    uint64_t v52 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl(&dword_0, v49, v50, "Emergency Plugin activated", v52, 2u);
    uint64_t v53 = (uint64_t)v52;
    uint64_t v2 = v51;
    sub_3CA0(v53);
  }

  uint64_t v54 = v229;
  uint64_t v228 = *(void (**)(char *, uint64_t))(v36 + 8);
  v228(v45, v229);
  uint64_t v55 = v223;
  v223[3] = 0u;
  v55[4] = 0u;
  v55[1] = 0u;
  v55[2] = 0u;
  *uint64_t v55 = 0u;
  uint64_t v56 = (uint64_t)v55 + v31[6];
  uint64_t v210 = (void *)v2;
  sub_3F18(v56, 1LL, 1LL, v2);
  uint64_t v57 = v222;
  uint64_t v58 = v222 + 16;
  sub_60A4(v222 + 16, (uint64_t)v55 + v31[7]);
  uint64_t v59 = (void *)(v57 + 56);
  sub_60A4(v57 + 56, (uint64_t)v55 + v31[8]);
  sub_60E4(v57 + 96, (uint64_t)v55 + v31[9]);
  (*(void (**)(char *, uint64_t, void *))(v28 + 16))(v30, v219, v27);
  int v60 = (*(uint64_t (**)(char *, void *))(v28 + 88))(v30, v27);
  if (v60 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_396E8();
    uint64_t v61 = v217;
    uint64_t v62 = v224;
    uint64_t v63 = v30;
    uint64_t v64 = v225;
    (*(void (**)(_DWORD *, char *, uint64_t))(v217 + 32))(v224, v63, v225);
    int v65 = v227;
    sub_3CC8((uint64_t)v227, (uint64_t)&v230);
    uint64_t v66 = v212;
    v226(v212, v65, v54);
    uint64_t v67 = v213;
    uint64_t v222 = *(void *)(v61 + 16);
    uint64_t v68 = ((uint64_t (*)(uint64_t, _DWORD *, uint64_t))v222)(v213, v62, v64);
    Logger.logObject.getter(v68);
    os_log_type_t v69 = sub_39784();
    if (sub_396F8(v69))
    {
      uint64_t v70 = (_DWORD *)sub_3CD4(12LL);
      uint64_t v71 = sub_3CD4(32LL);
      __dst[0] = v71;
      uint64_t v72 = v67;
      _DWORD *v70 = 136315138;
      sub_EB44( (unint64_t *)&unk_7A620,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter(v225, v73);
      uint64_t v76 = sub_39728(v74, v75);
      uint64_t v77 = sub_39708(v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v77, v78, v70 + 1, v70 + 3);
      sub_84A8();
      uint64_t v79 = *(uint8_t **)(v217 + 8);
      ((void (*)(uint64_t, uint64_t))v79)(v72, v225);
      sub_396D4(&dword_0, v80, v81, "Parse had NL intent: %s");
      sub_67DC(v71);
      uint64_t v82 = v71;
      uint64_t v64 = v225;
      sub_3CA0(v82);
      sub_3CA0((uint64_t)v70);
    }

    else
    {
      uint64_t v108 = v67;
      uint64_t v79 = *(uint8_t **)(v61 + 8);
      ((void (*)(uint64_t, uint64_t))v79)(v108, v64);
    }

    sub_396B4(v66);
    uint64_t v109 = v220;
    ((void (*)(uint64_t, _DWORD *, uint64_t))v222)(v220, v224, v64);
    uint64_t v110 = (uint64_t)v227;
    sub_3CC8((uint64_t)v227, (uint64_t)v232);
    uint64_t v111 = v218;
    sub_396C4(v218, v110);
    uint64_t v112 = v215;
    sub_181F8(v109, v215, type metadata accessor for EmergencyNLIntent);
    uint64_t v114 = (os_log_s *)Logger.logObject.getter(v113);
    os_log_type_t v115 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v114, v115))
    {
      uint64_t v116 = sub_3CD4(12LL);
      uint64_t v227 = v79;
      uint64_t v117 = v112;
      uint64_t v118 = (uint8_t *)v116;
      uint64_t v119 = sub_3CD4(32LL);
      __dst[0] = v119;
      *(_DWORD *)uint64_t v118 = 136315138;
      uint64_t v120 = sub_449C4();
      uint64_t v122 = sub_39728(v120, v121);
      uint64_t v123 = sub_39734(v122);
      uint64_t v64 = v225;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v123, v124, v125, v118 + 12);
      sub_84A8();
      uint64_t v126 = v117;
      uint64_t v79 = v227;
      sub_27D20(v126, type metadata accessor for EmergencyNLIntent);
      _os_log_impl(&dword_0, v114, v115, "Converting NL Intent → %s", v118, 0xCu);
      sub_67DC(v119);
      sub_3CA0(v119);
      sub_3CA0((uint64_t)v118);

      uint64_t v127 = v218;
    }

    else
    {
      sub_27D20(v112, type metadata accessor for EmergencyNLIntent);

      uint64_t v127 = v111;
    }

    sub_396B4(v127);
    __dst[3] = v216;
    sub_EB44(&qword_790D0, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
    __dst[4] = v153;
    uint64_t v154 = sub_649C(__dst);
    sub_39750((uint64_t)v154, (uint64_t)&__dst[10]);
    sub_39564((uint64_t)__dst, (uint64_t)v55, &qword_7AB90);
    sub_4AEC8();
    uint64_t v156 = v155;
    sub_3971C();
    swift_release(v156);
    sub_3978C();
    ((void (*)(_DWORD *, uint64_t))v79)(v224, v64);
  }

  else if (v60 == enum case for Parse.directInvocation(_:))
  {
    sub_396E8();
    uint64_t v83 = v209;
    uint64_t v84 = v214;
    sub_39778(v214, (uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, void))(v209 + 32));
    uint64_t v85 = (uint64_t)v227;
    sub_3CC8((uint64_t)v227, (uint64_t)__dst);
    uint64_t v86 = v208;
    uint64_t v87 = v229;
    sub_396C4(v208, v85);
    uint64_t v88 = *(void (**)(uint64_t, uint64_t, void *))(v83 + 16);
    uint64_t v89 = v205;
    uint64_t v90 = ((uint64_t (*)(uint64_t, uint64_t, void *))v88)(v205, v84, v59);
    uint64_t v91 = (os_log_s *)Logger.logObject.getter(v90);
    os_log_type_t v92 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = v88;
      uint64_t v94 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v95 = sub_3CD4(32LL);
      uint64_t v230 = v95;
      *(_DWORD *)uint64_t v94 = 136315138;
      uint64_t v227 = v94 + 4;
      uint64_t v96 = v196;
      v93(v196, v89, v59);
      uint64_t v97 = v96;
      uint64_t v88 = v93;
      uint64_t v98 = String.init<A>(describing:)(v97);
      unint64_t v100 = v99;
      uint64_t v101 = sub_543A4(v98, v99, &v230);
      uint64_t v102 = sub_39708(v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v102, v103, v227, v94 + 12);
      unint64_t v104 = v100;
      uint64_t v59 = v210;
      swift_bridgeObjectRelease(v104);
      uint64_t v105 = *(void (**)(uint64_t, void *))(v209 + 8);
      sub_39760();
      _os_log_impl(&dword_0, v91, v92, "Parse had directInvocation: %s", v94, 0xCu);
      sub_67DC(v95);
      sub_3CA0(v95);
      sub_3CA0((uint64_t)v94);

      uint64_t v106 = v208;
      uint64_t v107 = v229;
    }

    else
    {
      uint64_t v105 = *(void (**)(uint64_t, void *))(v83 + 8);
      sub_39760();

      uint64_t v106 = v86;
      uint64_t v107 = v87;
    }

    v228((char *)v106, v107);
    sub_39524(v56);
    uint64_t v157 = v214;
    v88(v56, v214, v59);
    sub_3F18(v56, 0LL, 1LL, (uint64_t)v59);
    uint64_t v158 = v223;
    sub_4AEC8();
    uint64_t v160 = v159;
    sub_3971C();
    swift_release(v160);
    v105(v157, v59);
    uint64_t v55 = v158;
  }

  else if (v60 == enum case for Parse.uso(_:))
  {
    uint64_t v225 = (uint64_t)v55 + 40;
    sub_396E8();
    uint64_t v128 = v202;
    uint64_t v129 = v211;
    sub_39778(v211, (uint64_t)v30, *(uint64_t (**)(uint64_t, uint64_t, void))(v202 + 32));
    uint64_t v130 = (uint64_t)v227;
    sub_3CC8((uint64_t)v227, (uint64_t)&v230);
    uint64_t v131 = v200;
    sub_396C4(v200, v130);
    uint64_t v132 = v201;
    uint64_t v133 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v128 + 16))(v201, v129, v59);
    Logger.logObject.getter(v133);
    os_log_type_t v134 = sub_39784();
    if (sub_396F8(v134))
    {
      uint64_t v135 = (_DWORD *)sub_3CD4(12LL);
      uint64_t v136 = sub_3CD4(32LL);
      __dst[0] = v136;
      *uint64_t v135 = 136315138;
      unint64_t v224 = v135 + 1;
      uint64_t v137 = v197;
      USOParse.userParse.getter(v136);
      sub_EB44( &qword_7ABA0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserParse,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserParse);
      uint64_t v138 = v195;
      uint64_t v140 = Message.debugDescription.getter(v195, v139);
      unint64_t v142 = v141;
      (*(void (**)(void *, uint64_t))(v194 + 8))(v137, v138);
      uint64_t v143 = v140;
      uint64_t v144 = v137;
      uint64_t v145 = sub_543A4(v143, v142, __dst);
      uint64_t v146 = sub_39708(v145);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v146, v147, v224, v135 + 3);
      swift_bridgeObjectRelease(v142);
      uint64_t v148 = *(uint8_t **)(v202 + 8);
      sub_3976C((uint64_t)v231);
      sub_396D4(&dword_0, v149, v150, "Parse had a uso parse: %s");
      sub_67DC(v136);
      sub_3CA0(v136);
      sub_3CA0((uint64_t)v135);

      uint64_t v151 = sub_396B4(v200);
      uint64_t v152 = v203;
    }

    else
    {
      uint64_t v168 = v132;
      uint64_t v148 = *(uint8_t **)(v128 + 8);
      ((void (*)(uint64_t, void *))v148)(v168, v59);

      uint64_t v151 = sub_396B4(v131);
      uint64_t v152 = v203;
      uint64_t v144 = v197;
    }

    uint64_t v169 = v144;
    USOParse.userParse.getter(v151);
    __dst[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
    __dst[4] = sub_EA88();
    LOBYTE(__dst[0]) = 2;
    char v170 = isFeatureEnabled(_:)(__dst);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(__dst);
    uint64_t v171 = v170 & 1;
    uint64_t v172 = v207;
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v144, v171);
    uint64_t v173 = (uint64_t)v227;
    sub_3CC8((uint64_t)v227, (uint64_t)v232);
    sub_396C4(v152, v173);
    uint64_t v174 = v172;
    uint64_t v175 = v198;
    sub_181F8(v174, v198, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    Logger.logObject.getter(v176);
    os_log_type_t v177 = sub_39784();
    if (sub_396F8(v177))
    {
      uint64_t v178 = (_DWORD *)sub_3CD4(12LL);
      uint64_t v179 = sub_3CD4(32LL);
      uint64_t v227 = v148;
      uint64_t v180 = v179;
      __dst[0] = v179;
      _DWORD *v178 = 136315138;
      uint64_t v181 = EmergencyDialogAct.description.getter();
      uint64_t v183 = sub_39728(v181, v182);
      uint64_t v184 = sub_39734(v183);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v184, v185, v186, v178 + 3);
      sub_84A8();
      sub_27D20(v175, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_396D4(&dword_0, v187, v188, "Converting EmergencyDialogAct: %s");
      sub_67DC(v180);
      sub_3CA0(v180);
      sub_3CA0((uint64_t)v178);

      uint64_t v189 = v203;
    }

    else
    {
      sub_27D20(v175, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);

      uint64_t v189 = v152;
    }

    sub_396B4(v189);
    __dst[3] = v199;
    __dst[4] = (uint64_t)&protocol witness table for EmergencyDialogAct;
    uint64_t v190 = sub_649C(__dst);
    sub_39750((uint64_t)v190, (uint64_t)v233);
    sub_39564((uint64_t)__dst, v225, &qword_7AB98);
    sub_4AEC8();
    uint64_t v192 = v191;
    sub_3971C();
    swift_release(v192);
    sub_3978C();
    sub_3976C((uint64_t)&__dst[1]);
  }

  else
  {
    uint64_t v161 = (uint64_t)v227;
    sub_3CC8((uint64_t)v227, (uint64_t)v232);
    uint64_t v162 = sub_396C4(v204, v161);
    uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
    os_log_type_t v164 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v165 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v165 = 0;
      _os_log_impl(&dword_0, v163, v164, "Emergency Plugin received unexpected parse", v165, 2u);
      sub_3CA0((uint64_t)v165);
    }

    sub_396B4(v204);
    sub_60A4(v58, (uint64_t)&v230);
    uint64_t v166 = sub_3324(v59, *(void *)(v222 + 80));
    memcpy(__dst, v166, sizeof(__dst));
    uint64_t v167 = sub_37CC((uint64_t)&v230, __dst);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(&v230);
    static FlowSearchResult.flow(_:)(v167);
    swift_release(v167);
    (*(void (**)(char *, void *))(v28 + 8))(v30, v27);
  }

  sub_27D20((uint64_t)v55, type metadata accessor for FlowRouter);
}

void *sub_39434()
{
  return v0;
}

uint64_t sub_39460()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

uint64_t type metadata accessor for EmergencyFlowPlugin()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin19EmergencyFlowPlugin);
}

void sub_394A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_394C0(void *a1@<X8>)
{
  *a1 = v2;
}

void sub_394F8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_39524(uint64_t a1)
{
  uint64_t v2 = sub_3974(&qword_7AB88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_39564(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_3974(a3);
  sub_EF44(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 40LL));
  sub_6774();
}

uint64_t sub_3959C()
{
  if (v0[5]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2);
  }
  if (v0[10]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7);
  }
  if (v0[15]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 12);
  }
  if (v0[20]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 17);
  }
  if (v0[25]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 22);
  }
  if (v0[30]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 27);
  }
  if (v0[35]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 32);
  }
  return swift_deallocObject(v0, 296LL, 7LL);
}

uint64_t sub_39628()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t sub_396B4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 312))(a1, v1);
}

uint64_t sub_396C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 328))(a1, a2, v2);
}

void sub_396D4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_396E8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v2, v0);
}

BOOL sub_396F8(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_39708(uint64_t a1)
{
  *(void *)(v1 - sub_60A4(v0 - 128, v0 - 248) = a1;
  return v1 - 248;
}

uint64_t sub_3971C()
{
  return static FlowSearchResult.flow(_:)();
}

uint64_t sub_39728(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 200));
}

uint64_t sub_39734(uint64_t a1)
{
  *(void *)(v1 - 296) = a1;
  return v1 - 296;
}

void sub_39750(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_39760()
{
  return v0(v1, v2);
}

uint64_t sub_3976C@<X0>(uint64_t a1@<X8>)
{
  return v1(*(void *)(a1 - 256), v2);
}

uint64_t sub_39778@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, void)@<X8>)
{
  return a3(a1, a2, *(void *)(v3 - 256));
}

uint64_t sub_39784()
{
  return static os_log_type_t.debug.getter();
}

void sub_3978C()
{
}

ValueMetadata *type metadata accessor for EmergencyFeatureFlags()
{
  return &type metadata for EmergencyFeatureFlags;
}

uint64_t storeEnumTagSinglePayload for EmergencyFeatureFlagsKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_397F4 + 4 * byte_59275[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_39828 + 4 * byte_59270[v4]))();
}

uint64_t sub_39828(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_39830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x39838LL);
  }
  return result;
}

uint64_t sub_39844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3984CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_39850(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_39858(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyFeatureFlagsKey()
{
  return &type metadata for EmergencyFeatureFlagsKey;
}

unint64_t sub_39878()
{
  unint64_t result = qword_7ABA8;
  if (!qword_7ABA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5933C, &type metadata for EmergencyFeatureFlagsKey);
    atomic_store(result, (unint64_t *)&qword_7ABA8);
  }

  return result;
}

const char *sub_398B4()
{
  return "SiriEmergency";
}

const char *sub_398C8(char a1)
{
  if (!a1) {
    return "emergency_rf";
  }
  if (a1 == 1) {
    return "emergency_mandrake_handoff";
  }
  return "nlv4_migration";
}

const char *sub_3990C()
{
  return sub_398C8(*v0);
}

uint64_t destroy for ConfirmationRFFlowConfigModel(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 24));
}

uint64_t initializeWithCopy for ConfirmationRFFlowConfigModel(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v5;
  *(_WORD *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_WORD *)(a2 + 32);
  id v6 = v3;
  id v7 = v4;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for ConfirmationRFFlowConfigModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v10;
  swift_retain(v10);
  swift_release(v11);
  *(_BYTE *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 initializeWithTake for ConfirmationRFFlowConfigModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ConfirmationRFFlowConfigModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = *(void *)(a2 + 24);
  swift_release(v5);
  *(_BYTE *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConfirmationRFFlowConfigModel(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 34))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfirmationRFFlowConfigModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0LL;
    *(_WORD *)(result + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + sub_66BC(v0 + 34) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + sub_66BC(v0 + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ConfirmationRFFlowConfigModel()
{
  return &type metadata for ConfirmationRFFlowConfigModel;
}

void *sub_39B40(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = sub_3974(&qword_78958);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      uint64_t v8 = *a2;
      swift_errorRetain(*a2);
      *a1 = v8;
      id v9 = a1;
      uint64_t v10 = v7;
      uint64_t v11 = 1LL;
    }

    else
    {
      uint64_t v13 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16LL))(a1, a2, v13);
      id v9 = a1;
      uint64_t v10 = v7;
      uint64_t v11 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v9, v10, v11);
    uint64_t v14 = a3[5];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v14, v7) == 1)
    {
      uint64_t v17 = *v16;
      swift_errorRetain(v17);
      *uint64_t v15 = v17;
      uint64_t v18 = v15;
      uint64_t v19 = v7;
      uint64_t v20 = 1LL;
    }

    else
    {
      uint64_t v21 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v15, v16, v21);
      uint64_t v18 = v15;
      uint64_t v19 = v7;
      uint64_t v20 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v18, v19, v20);
    uint64_t v22 = a3[6];
    uint64_t v23 = a3[7];
    uint64_t v24 = *(void *)((char *)a2 + v22);
    *(void *)((char *)a1 + v2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v24;
    unint64_t v25 = *(void *)((char *)a2 + v23);
    swift_retain(v24);
    if (v25 >= 6) {
      swift_bridgeObjectRetain(v25);
    }
    *(void *)((char *)a1 + v23) = v25;
    uint64_t v26 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  }

  return a1;
}

unint64_t sub_39CC4(void *a1, int *a2)
{
  uint64_t v4 = sub_3974(&qword_78958);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    swift_errorRelease(*a1);
  }

  else
  {
    uint64_t v5 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
  }

  id v6 = (void *)((char *)a1 + a2[5]);
  if (swift_getEnumCaseMultiPayload(v6, v4) == 1)
  {
    swift_errorRelease(*v6);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
  }

  swift_release(*(void *)((char *)a1 + a2[6]));
  unint64_t result = *(void *)((char *)a1 + a2[7]);
  if (result >= 6) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

void *sub_39DA8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_3974(&qword_78958);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    uint64_t v7 = *a2;
    swift_errorRetain(*a2);
    *a1 = v7;
    uint64_t v8 = a1;
    uint64_t v9 = v6;
    uint64_t v10 = 1LL;
  }

  else
  {
    uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(a1, a2, v11);
    uint64_t v8 = a1;
    uint64_t v9 = v6;
    uint64_t v10 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v8, v9, v10);
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  if (swift_getEnumCaseMultiPayload((char *)a2 + v12, v6) == 1)
  {
    uint64_t v15 = *v14;
    swift_errorRetain(v15);
    *uint64_t v13 = v15;
    uint64_t v16 = v13;
    uint64_t v17 = v6;
    uint64_t v18 = 1LL;
  }

  else
  {
    uint64_t v19 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v13, v14, v19);
    uint64_t v16 = v13;
    uint64_t v17 = v6;
    uint64_t v18 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v16, v17, v18);
  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = *(void *)((char *)a2 + v20);
  *(void *)((char *)a1 + v20) = v22;
  unint64_t v23 = *(void *)((char *)a2 + v21);
  swift_retain(v22);
  if (v23 >= 6) {
    swift_bridgeObjectRetain(v23);
  }
  *(void *)((char *)a1 + v21) = v23;
  uint64_t v24 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = *((_BYTE *)a2 + v24);
  return a1;
}

void *sub_39F00(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_7784((uint64_t)a1, &qword_78958);
    uint64_t v6 = sub_3974(&qword_78958);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      uint64_t v7 = *a2;
      swift_errorRetain(*a2);
      *a1 = v7;
      uint64_t v8 = a1;
      uint64_t v9 = v6;
      uint64_t v10 = 1LL;
    }

    else
    {
      uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(a1, a2, v11);
      uint64_t v8 = a1;
      uint64_t v9 = v6;
      uint64_t v10 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v8, v9, v10);
    uint64_t v12 = a3[5];
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    sub_7784((uint64_t)a1 + v12, &qword_78958);
    uint64_t v15 = sub_3974(&qword_78958);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      uint64_t v16 = *v14;
      swift_errorRetain(v16);
      *uint64_t v13 = v16;
      uint64_t v17 = v13;
      uint64_t v18 = v15;
      uint64_t v19 = 1LL;
    }

    else
    {
      uint64_t v20 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v13, v14, v20);
      uint64_t v17 = v13;
      uint64_t v18 = v15;
      uint64_t v19 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }

  uint64_t v21 = a3[6];
  uint64_t v22 = *(void *)((char *)a2 + v21);
  uint64_t v23 = *(void *)((char *)a1 + v21);
  *(void *)((char *)a1 + v21) = v22;
  swift_retain(v22);
  swift_release(v23);
  uint64_t v24 = a3[7];
  unint64_t v25 = (void *)((char *)a1 + v24);
  unint64_t v26 = *(void *)((char *)a1 + v24);
  unint64_t v27 = *(void *)((char *)a2 + v24);
  if (v26 >= 6)
  {
    if (v27 >= 6)
    {
      *unint64_t v25 = v27;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v26);
    }

    else
    {
      sub_7784((uint64_t)a1 + v24, &qword_7ABB0);
      *unint64_t v25 = *(void *)((char *)a2 + v24);
    }
  }

  else
  {
    *unint64_t v25 = v27;
    if (v27 >= 6) {
      swift_bridgeObjectRetain(v27);
    }
  }

  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

char *sub_3A0F0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_3974(&qword_78958);
  if (swift_getEnumCaseMultiPayload(a2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 0LL);
  }

  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (swift_getEnumCaseMultiPayload(&a2[v8], v6))
  {
    memcpy(v9, v10, *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  else
  {
    uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(v9, v6, 0LL);
  }

  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v13] = a2[v13];
  return a1;
}

char *sub_3A21C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_7784((uint64_t)a1, &qword_78958);
    uint64_t v6 = sub_3974(&qword_78958);
    if (swift_getEnumCaseMultiPayload(a2, v6))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64LL));
    }

    else
    {
      uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 0LL);
    }

    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_7784((uint64_t)&a1[v8], &qword_78958);
    uint64_t v11 = sub_3974(&qword_78958);
    if (swift_getEnumCaseMultiPayload(v10, v11))
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64LL));
    }

    else
    {
      uint64_t v12 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 0LL);
    }
  }

  uint64_t v13 = a3[6];
  uint64_t v14 = *(void *)&a1[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  swift_release(v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (unint64_t *)&a1[v15];
  unint64_t v17 = *(void *)&a1[v15];
  unint64_t v18 = *(void *)&a2[v15];
  if (v17 >= 6)
  {
    if (v18 >= 6)
    {
      *uint64_t v16 = v18;
      swift_bridgeObjectRelease(v17);
      goto LABEL_13;
    }

    sub_7784((uint64_t)&a1[v15], &qword_7ABB0);
    unint64_t v18 = *(void *)&a2[v15];
  }

  *uint64_t v16 = v18;
LABEL_13:
  uint64_t v19 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t sub_3A3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3A3D0);
}

uint64_t sub_3A3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3974(&qword_78958);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return sub_5FE0(a1, a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(v8) = -1;
  }
  return (v8 + 1);
}

uint64_t sub_3A44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3A458);
}

uint64_t sub_3A458(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_3974(&qword_78958);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return sub_3F18(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + swift_release(*(void *)(v0 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ConfirmationFlowConfigModel(uint64_t a1)
{
  uint64_t result = qword_7AC10;
  if (!qword_7AC10) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ConfirmationFlowConfigModel);
  }
  return result;
}

void sub_3A508(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    void v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = "\b";
    v4[4] = &unk_59428;
    v4[5] = &unk_59440;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
  }

void sub_3A59C(uint64_t a1)
{
  if (!qword_7AC20)
  {
    uint64_t v2 = type metadata accessor for TemplatingResult(255LL);
    uint64_t v3 = sub_6060(&qword_78950);
    unint64_t v4 = type metadata accessor for Result(a1, v2, v3, &protocol self-conformance witness table for Error);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_7AC20);
    }
  }

void sub_3A60C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v157 = v20;
  uint64_t v25 = v24;
  uint64_t v26 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v162 = *(void *)(v26 - 8);
  sub_EDD8();
  __chkstk_darwin(v27);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v28);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v29);
  sub_1300C();
  uint64_t v168 = v30;
  uint64_t v31 = sub_1FC8C();
  type metadata accessor for EmergencyNLIntent(v31);
  sub_6764();
  __chkstk_darwin(v32);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v33);
  sub_1300C();
  uint64_t v161 = (uint8_t *)v34;
  uint64_t v35 = sub_1FC8C();
  uint64_t v160 = type metadata accessor for NLIntent(v35);
  uint64_t v159 = *(void *)(v160 - 8);
  sub_EDD8();
  __chkstk_darwin(v36);
  sub_6750();
  uint64_t v164 = v37;
  uint64_t v38 = sub_1FC8C();
  type metadata accessor for Siri_Nlu_External_UserParse(v38);
  sub_6764();
  __chkstk_darwin(v39);
  sub_3D310();
  type metadata accessor for EmergencyDialogAct(0LL);
  sub_6764();
  __chkstk_darwin(v40);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v41);
  sub_1300C();
  uint64_t v149 = v42;
  uint64_t v43 = sub_1FC8C();
  uint64_t v148 = type metadata accessor for USOParse(v43);
  uint64_t v155 = *(void *)(v148 - 8);
  sub_EDD8();
  __chkstk_darwin(v44);
  sub_6750();
  uint64_t v154 = v45;
  uint64_t v46 = sub_1FC8C();
  uint64_t v47 = type metadata accessor for Parse(v46);
  uint64_t v169 = *(uint8_t **)(v47 - 8);
  char v170 = (os_log_s *)v47;
  sub_EDD8();
  __chkstk_darwin(v48);
  sub_6750();
  uint64_t v167 = v49;
  uint64_t v50 = sub_1FC8C();
  uint64_t v51 = type metadata accessor for Input(v50);
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  sub_6740();
  uint64_t v55 = v54 - v53;
  uint64_t v56 = sub_6820();
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v58);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v59);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v60);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v61);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v62);
  sub_EE64();
  sub_ED8C();
  uint64_t v64 = __chkstk_darwin(v63);
  uint64_t v66 = (char *)v143 - v65;
  uint64_t v67 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v64);
  sub_3CC8((uint64_t)v67, (uint64_t)v178);
  uint64_t v163 = v57;
  uint64_t v165 = *(void (**)(char *, os_log_s *, uint64_t))(v57 + 16);
  uint64_t v166 = v67;
  uint64_t v171 = v56;
  v165(v66, v67, v56);
  uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v55, v25, v51);
  Logger.logObject.getter(v68);
  os_log_type_t v69 = sub_EEB4();
  if (os_log_type_enabled(v67, v69))
  {
    v143[1] = v25;
    uint64_t v70 = sub_3CD4(12LL);
    uint64_t v144 = v21;
    uint64_t v71 = (uint8_t *)v70;
    uint64_t v72 = sub_3CD4(32LL);
    uint64_t v152 = v26;
    uint64_t v73 = v72;
    v172[0] = v72;
    *(_DWORD *)uint64_t v71 = 136315138;
    v143[0] = v71 + 4;
    sub_EF34( &qword_790C0,  v74,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter(v51, v75);
    unint64_t v78 = v77;
    uint64_t v174 = sub_543A4(v76, v77, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v174, &v175, v143[0], v71 + 12);
    swift_bridgeObjectRelease(v78);
    sub_3D574();
    sub_67F8(&dword_0, v67, v69, "EmergencyNumberFlow onInput: %s", v71);
    sub_67DC(v73);
    uint64_t v79 = v73;
    uint64_t v26 = v152;
    sub_3CA0(v79);
    uint64_t v80 = (uint64_t)v71;
    uint64_t v21 = v144;
    sub_3CA0(v80);
  }

  else
  {
    sub_3D574();
  }

  uint64_t v81 = sub_19B5C((uint64_t)v66);
  uint64_t v82 = v167;
  Input.parse.getter(v81);
  uint64_t v84 = v169;
  uint64_t v83 = v170;
  int v85 = (*((uint64_t (**)(uint8_t *, os_log_s *))v169 + 11))(v82, v170);
  uint64_t v86 = v168;
  uint64_t v87 = (uint64_t)v166;
  if (v85 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_3D270(*((uint64_t (**)(uint64_t, uint64_t))v84 + 12));
    uint64_t v88 = v159;
    uint64_t v89 = v160;
    sub_382F8(v164, (uint64_t)v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v159 + 32));
    sub_3CC8(v87, (uint64_t)&v174);
    uint64_t v90 = v158;
    sub_3D27C(v158);
    sub_13104();
    os_log_type_t v91 = sub_EEB4();
    if (sub_EDE4(v91))
    {
      os_log_type_t v92 = (_WORD *)sub_8D14();
      sub_182E4(v92);
      sub_EDA8(&dword_0, v83, (os_log_type_t)v84, "EmergencyNumberFlow onInput .NLv3IntentOnly", v82);
      sub_3CA0((uint64_t)v82);
    }

    sub_19B5C(v90);
    uint64_t v93 = v161;
    uint64_t v94 = v164;
    sub_382F8((uint64_t)v161, v164, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 16));
    sub_3D544((uint64_t)v93, (uint64_t)&a16);
    sub_47708();
    sub_3D514();
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v94, v89);
    goto LABEL_18;
  }

  if (v85 == enum case for Parse.directInvocation(_:))
  {
    sub_3D270(*((uint64_t (**)(uint64_t, uint64_t))v84 + 12));
    sub_382F8(v86, (uint64_t)v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 32));
    sub_3CC8(v87, (uint64_t)v172);
    uint64_t v95 = v153;
    sub_3D27C(v153);
    sub_13104();
    os_log_type_t v96 = sub_EEB4();
    if (sub_EDE4(v96))
    {
      uint64_t v97 = (_WORD *)sub_8D14();
      sub_182E4(v97);
      sub_EDA8(&dword_0, v83, (os_log_type_t)v84, "EmergencyNumberFlow onInput .directInvocation", v82);
      sub_3CA0((uint64_t)v82);
    }

    uint64_t v98 = sub_19B5C(v95);
    uint64_t v99 = Parse.DirectInvocation.identifier.getter(v98);
    uint64_t v101 = v100;
    if (v99 == 0xD000000000000035LL && v100 == 0x800000000005B1B0LL)
    {
      swift_bridgeObjectRelease(0x800000000005B1B0LL);
    }

    else
    {
      char v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v99, v100, 0xD000000000000035LL, 0x800000000005B1B0LL, 0LL);
      swift_bridgeObjectRelease(v101);
      if ((v115 & 1) == 0) {
        goto LABEL_25;
      }
    }

    char v116 = sub_28990(v86);
    if (v116 != 35)
    {
      LOBYTE(v110) = v116;
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v86, v26);
      __int16 v109 = 0;
      LOWORD(v111) = 4;
LABEL_30:
      __int16 v140 = v109 | ((_WORD)v111 << 8);
      uint64_t v141 = v157;
      *(_BYTE *)(v157 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 18) = (_BYTE)v110;
      *(_WORD *)(v141 + 16) = v140;
      goto LABEL_34;
    }

LABEL_25:
    sub_3CC8(v87, (uint64_t)&v174);
    uint64_t v117 = v150;
    sub_3D27C(v150);
    uint64_t v118 = v162;
    uint64_t v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 16);
    uint64_t v120 = v151;
    uint64_t v121 = v119(v151, v86, v26);
    uint64_t v122 = (os_log_s *)Logger.logObject.getter(v121);
    os_log_type_t v123 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v152 = v26;
      uint64_t v124 = (uint8_t *)sub_3CD4(12LL);
      char v170 = (os_log_s *)sub_3CD4(32LL);
      os_log_type_t v177 = v170;
      *(_DWORD *)uint64_t v124 = 136315138;
      uint64_t v169 = v124 + 4;
      uint64_t v125 = v145;
      v119(v145, v120, v152);
      uint64_t v126 = String.init<A>(describing:)(v125);
      unint64_t v128 = v127;
      uint64_t v173 = sub_543A4(v126, v127, (uint64_t *)&v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v173, &v174, v169, v124 + 12);
      swift_bridgeObjectRelease(v128);
      sub_3D308(v120);
      sub_67F8(&dword_0, v122, v123, "Failed to get emergencySituation from DirectInvocation: %s", v124);
      uint64_t v129 = (uint64_t)v170;
      sub_67DC((uint64_t)v170);
      sub_3CA0(v129);
      sub_3CA0((uint64_t)v124);

      sub_19B5C(v117);
      sub_3D308(v168);
    }

    else
    {

      unint64_t v142 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
      v142(v120, v26);
      sub_19B5C(v117);
      v142(v86, v26);
    }

    goto LABEL_34;
  }

  if (v85 != enum case for Parse.uso(_:))
  {
    sub_3CC8((uint64_t)v166, (uint64_t)v172);
    uint64_t v130 = v147;
    sub_3D27C(v147);
    uint64_t v131 = (os_log_s *)sub_13124();
    os_log_type_t v132 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v133 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v134 = v130;
      uint64_t v135 = sub_3CD4(32LL);
      uint64_t v174 = v135;
      *(_DWORD *)uint64_t v133 = 136315138;
      LOBYTE(v17_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 0;
      uint64_t v136 = String.init<A>(describing:)(&v177);
      unint64_t v138 = v137;
      os_log_type_t v177 = (os_log_s *)sub_543A4(v136, v137, &v174);
      uint64_t v82 = v167;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v133 + 4, v133 + 12);
      swift_bridgeObjectRelease(v138);
      sub_67F8(&dword_0, v131, v132, "%s", v133);
      sub_67DC(v135);
      sub_3CA0(v135);
      sub_3CA0((uint64_t)v133);

      uint64_t v139 = v134;
    }

    else
    {

      uint64_t v139 = v130;
    }

    sub_19B5C(v139);
    (*((void (**)(uint8_t *, os_log_s *))v169 + 1))(v82, v170);
    goto LABEL_34;
  }

  sub_3D270(*((uint64_t (**)(uint64_t, uint64_t))v84 + 12));
  uint64_t v102 = v148;
  sub_382F8(v154, (uint64_t)v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 32));
  sub_3CC8(v87, (uint64_t)&v174);
  uint64_t v103 = v146;
  sub_3D27C(v146);
  sub_13124();
  os_log_type_t v104 = sub_EEB4();
  if (sub_EDE4(v104))
  {
    uint64_t v105 = (_WORD *)sub_8D14();
    sub_182E4(v105);
    sub_EDA8(&dword_0, v83, (os_log_type_t)v84, "EmergencyNumberFlow onInput .uso", v82);
    sub_3CA0((uint64_t)v82);
  }

  uint64_t v106 = sub_19B5C(v103);
  uint64_t v107 = v154;
  LODWORD(v84) = v154;
  USOParse.userParse.getter(v106);
  v172[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
  v172[4] = sub_EA88();
  LOBYTE(v172[0]) = 2;
  char v108 = isFeatureEnabled(_:)(v172);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v172);
  uint64_t v93 = v149;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v21, v108 & 1);
  sub_3D544((uint64_t)v93, (uint64_t)&v176);
  sub_4745C();
  sub_3D514();
  (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v107, v102);
LABEL_18:
  __int16 v109 = v84 & 1;
  uint64_t v110 = (void *)(v84 >> 16);
  unsigned int v111 = v84 >> 8;
  if (BYTE1(v84) != 4 || BYTE2(v84) != 35) {
    goto LABEL_30;
  }
  sub_3CC8(v87, (uint64_t)v172);
  uint64_t v112 = v156;
  sub_3D27C(v156);
  sub_13104();
  os_log_type_t v113 = sub_EEB4();
  if (sub_EDE4(v113))
  {
    uint64_t v114 = (_WORD *)sub_8D14();
    sub_182E4(v114);
    sub_EDA8( &dword_0,  (os_log_s *)(v84 >> 16),  (os_log_type_t)v84,  "#EmergencyNumberFlow Produced an empty intent. Ignoring input.",  v93);
    sub_3CA0((uint64_t)v93);
  }

  sub_19B5C(v112);
LABEL_34:
  sub_7DF0();
}

    sub_3CC8(v87, (uint64_t)&v177);
    uint64_t v121 = v157;
    sub_448EC(v157);
    uint64_t v122 = v25;
    os_log_type_t v123 = v165;
    uint64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
    uint64_t v125 = v155;
    v124(v155, v86, v122);
    uint64_t v126 = (os_log_s *)sub_13124();
    unint64_t v127 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v126, v127))
    {
      unint64_t v128 = v125;
      uint64_t v129 = (_DWORD *)sub_3CD4(12LL);
      uint64_t v130 = sub_3CD4(32LL);
      uint64_t v179 = v130;
      *uint64_t v129 = 136315138;
      uint64_t v173 = (uint64_t (**)(uint64_t, uint64_t))(v129 + 1);
      uint64_t v131 = v149;
      v124(v149, v128, v122);
      os_log_type_t v132 = String.init<A>(describing:)(v131);
      uint64_t v134 = v133;
      uint64_t v176 = sub_543A4(v132, v133, &v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177, v173, v129 + 3);
      swift_bridgeObjectRelease(v134);
      uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
      v135(v128, v122);
      sub_448F8(&dword_0, v126, v127, "Failed to get emergencySituation from DirectInvocation: %s");
      sub_67DC(v130);
      sub_3CA0(v130);
      sub_3CA0((uint64_t)v129);

      sub_19B5C(v157);
      v135(v172, v122);
    }

    else
    {

      uint64_t v145 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
      v145(v125, v122);
      sub_19B5C(v121);
      v145(v86, v122);
    }

    goto LABEL_34;
  }

  if (v85 != enum case for Parse.uso(_:))
  {
    sub_3CC8((uint64_t)v170, (uint64_t)v175);
    uint64_t v136 = v156;
    sub_448EC(v156);
    unint64_t v137 = (os_log_s *)sub_13124();
    unint64_t v138 = static os_log_type_t.error.getter();
    if (sub_12F10(v138))
    {
      uint64_t v139 = (uint8_t *)sub_3CD4(12LL);
      __int16 v140 = sub_3CD4(32LL);
      os_log_type_t v177 = v140;
      *(_DWORD *)uint64_t v139 = 136315138;
      LOBYTE(v179) = 0;
      uint64_t v141 = String.init<A>(describing:)(&v179);
      uint64_t v143 = v142;
      uint64_t v179 = sub_543A4(v141, v142, &v177);
      uint64_t v83 = v171;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v139 + 4, v139 + 12);
      swift_bridgeObjectRelease(v143);
      _os_log_impl(&dword_0, v137, (os_log_type_t)v86, "%s", v139, 0xCu);
      sub_67DC(v140);
      sub_3CA0(v140);
      sub_3CA0((uint64_t)v139);

      uint64_t v144 = v156;
    }

    else
    {

      uint64_t v144 = v136;
    }

    sub_19B5C(v144);
    v173[1](v83, v48);
    goto LABEL_34;
  }

  sub_44904();
  uint64_t v105 = v151;
  uint64_t v106 = v152;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 32))(v159, v83, v152);
  sub_3CC8(v87, (uint64_t)&v177);
  sub_448EC(v150);
  sub_13104();
  uint64_t v107 = sub_EEB4();
  if (sub_EDE4(v107))
  {
    char v108 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v108);
    sub_18240(&dword_0, v109, v110, "#EmergencyBasicFlow onInput .uso");
    sub_3CA0(v83);
  }

  unsigned int v111 = sub_44984();
  uint64_t v83 = v154;
  uint64_t v112 = v159;
  USOParse.userParse.getter(v111);
  v175[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
  v175[4] = sub_EA88();
  LOBYTE(v175[0]) = 2;
  uint64_t v84 = isFeatureEnabled(_:)(v175);
  sub_449A0();
  os_log_type_t v113 = v153;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v83, v84 & 1);
  sub_233A8(v113, (uint64_t)v178);
  sub_443EC();
  sub_44948();
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v112, v106);
LABEL_18:
  if ((_DWORD)v83 != 4 || (_DWORD)v84 != 35) {
    goto LABEL_30;
  }
  sub_3CC8(v87, (uint64_t)v175);
  uint64_t v114 = v160;
  sub_448EC(v160);
  sub_13104();
  char v115 = sub_EEB4();
  if (sub_EDE4(v115))
  {
    char v116 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v116);
    sub_18240(&dword_0, v117, v118, "#EmergencyBasicFlow Produced an empty intent. Ignoring input.");
    sub_3CA0(v83);
  }

  ((void (*)(uint64_t, uint64_t))v173)(v114, v174);
LABEL_34:
  sub_7DF0();
}

    sub_3CC8(v87, (uint64_t)&v180);
    uint64_t v125 = v156;
    sub_3D27C(v156);
    uint64_t v126 = v168;
    unint64_t v127 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 16);
    unint64_t v128 = v157;
    uint64_t v129 = v127(v157, v86, v27);
    uint64_t v130 = (os_log_s *)Logger.logObject.getter(v129);
    uint64_t v131 = static os_log_type_t.error.getter();
    if (sub_12FD8(v131))
    {
      uint64_t v158 = v27;
      os_log_type_t v132 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v176 = (void *)sub_3CD4(32LL);
      uint64_t v183 = (uint64_t)v176;
      *(_DWORD *)os_log_type_t v132 = 136315138;
      uint64_t v175 = v132 + 4;
      uint64_t v133 = v151;
      v127(v151, v128, v158);
      uint64_t v134 = String.init<A>(describing:)(v133);
      uint64_t v179 = sub_543A4(v134, v135, &v183);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, &v180, v175, v132 + 12);
      sub_EEE8();
      sub_3D308(v128);
      sub_67F8(&dword_0, v130, (os_log_type_t)0x35u, "Failed to get emergencySituation from DirectInvocation: %s", v132);
      uint64_t v136 = (uint64_t)v176;
      sub_67DC((uint64_t)v176);
      sub_3CA0(v136);
      sub_3CA0((uint64_t)v132);

      sub_19B5C(v125);
      sub_3D308(v174);
    }

    else
    {

      uint64_t v148 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
      v148(v128, v27);
      sub_19B5C(v125);
      v148(v86, v27);
    }

    goto LABEL_34;
  }

  if (v85 != enum case for Parse.uso(_:))
  {
    sub_3CC8((uint64_t)v172, (uint64_t)v178);
    unint64_t v137 = v153;
    sub_3D27C(v153);
    unint64_t v138 = (os_log_s *)sub_13124();
    uint64_t v139 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v138, v139))
    {
      __int16 v140 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v141 = v137;
      unint64_t v142 = sub_3CD4(32LL);
      uint64_t v180 = v142;
      *(_DWORD *)__int16 v140 = 136315138;
      LOBYTE(v183) = 0;
      uint64_t v143 = String.init<A>(describing:)(&v183);
      uint64_t v183 = sub_543A4(v143, v144, &v180);
      uint64_t v80 = v173;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, v184, v140 + 4, v140 + 12);
      sub_EEE8();
      sub_67F8(&dword_0, v138, v139, "%s", v140);
      sub_67DC(v142);
      sub_3CA0(v142);
      sub_3CA0((uint64_t)v140);

      uint64_t v145 = v141;
    }

    else
    {

      uint64_t v145 = v137;
    }

    sub_19B5C(v145);
    (*((void (**)(uint64_t, void *))v175 + 1))(v80, v176);
    goto LABEL_34;
  }

  sub_3D270(*((uint64_t (**)(uint64_t, uint64_t))v82 + 12));
  uint64_t v106 = v154;
  sub_382F8(v160, v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 32));
  sub_3CC8(v87, (uint64_t)&v180);
  uint64_t v107 = v152;
  sub_3D27C(v152);
  sub_13124();
  char v108 = sub_EEB4();
  if (sub_EDE4(v108))
  {
    __int16 v109 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v109);
    sub_18240(&dword_0, v110, v111, "EmergencyWebsiteFlow onInput .uso");
    sub_3CA0(v80);
  }

  uint64_t v112 = sub_19B5C(v107);
  os_log_type_t v113 = v160;
  LODWORD(v8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v160;
  USOParse.userParse.getter(v112);
  v178[3] = (uint64_t)&type metadata for EmergencyFeatureFlagsKey;
  v178[4] = sub_EA88();
  LOBYTE(v178[0]) = 2;
  uint64_t v114 = isFeatureEnabled(_:)(v178);
  sub_449A0();
  uint64_t v95 = v155;
  EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v21, v114 & 1);
  sub_47C38(v95, (uint64_t)&v182);
  sub_4745C();
  sub_3D514();
  (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v113, v106);
LABEL_18:
  char v115 = v82 & 1;
  char v116 = (void *)(v82 >> 16);
  uint64_t v117 = v82 >> 8;
  if (BYTE1(v82) != 4 || BYTE2(v82) != 35) {
    goto LABEL_30;
  }
  sub_3CC8(v87, (uint64_t)v178);
  uint64_t v118 = v162;
  sub_3D27C(v162);
  sub_13104();
  uint64_t v119 = sub_EEB4();
  if (sub_EDE4(v119))
  {
    uint64_t v120 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v120);
    sub_18240(&dword_0, v121, v122, "#EmergencyWebsiteFlow Produced an empty intent. Ignoring input.");
    sub_3CA0(v95);
  }

  sub_19B5C(v118);
LABEL_34:
  sub_7DF0();
}

  uint64_t v52 = v78;
  uint64_t v53 = v79;
  uint64_t v54 = Logger.emergency.unsafeMutableAddressor(v32);
  sub_3CC8(v54, (uint64_t)&v82);
  uint64_t v55 = (*(uint64_t (**)(os_log_s *, uint64_t, uint64_t))(v53 + 16))(v18, v54, v52);
  Logger.logObject.getter(v55);
  uint64_t v56 = sub_18418();
  if (os_log_type_enabled(v18, v56))
  {
    uint64_t v57 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v58 = sub_3CD4(32LL);
    uint64_t v80 = (char *)v58;
    *uint64_t v57 = 136315138;
    uint64_t v59 = sub_509DC((uint64_t)"dispatch(invocation:)");
    uint64_t v60 = sub_50AA0(v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v60, v61, v57 + 1, v57 + 3);
    sub_50ADC(&dword_0, v18, v56, "%s Missing emergencySituation payload.");
    swift_arrayDestroy(v58, 1LL);
    sub_3CA0(v58);
    sub_3CA0((uint64_t)v57);
  }

  (*(void (**)(os_log_s *, uint64_t))(v53 + 8))(v18, v52);
LABEL_6:
  sub_7DF0();
}

uint64_t sub_3B158(uint64_t a1)
{
  v2[53] = a1;
  v2[54] = v1;
  uint64_t v3 = sub_6820();
  v2[55] = v3;
  v2[56] = *(void *)(v3 - 8);
  v2[57] = sub_45A0();
  v2[58] = sub_45A0();
  v2[59] = sub_45A0();
  return sub_451C();
}

uint64_t sub_3B1BC(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + 384);
  uint64_t v3 = *(void *)(v1 + 472);
  uint64_t v5 = *(void *)(v1 + 440);
  uint64_t v4 = *(void *)(v1 + 448);
  uint64_t v6 = *(void *)(v1 + 432);
  uint64_t v7 = Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 480) = v7;
  sub_3CC8(v7, v1 + 384);
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v1 + 488) = v8;
  uint64_t v54 = v8;
  v8(v3, v7, v5);
  swift_retain_n(v6, 2LL);
  sub_13124();
  os_log_type_t v9 = sub_67D4();
  if (os_log_type_enabled((os_log_t)(v1 + 384), v9))
  {
    uint64_t v49 = *(void *)(v1 + 448);
    uint64_t v10 = *(void *)(v1 + 432);
    uint64_t v50 = *(void *)(v1 + 440);
    uint64_t v51 = *(void *)(v1 + 472);
    uint64_t v11 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v52 = v7;
    uint64_t v12 = sub_3CD4(32LL);
    uint64_t v56 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    char v13 = *(_BYTE *)(v10 + 18);
    *(_WORD *)(v1 + 516) = *(_WORD *)(v10 + 16);
    *(_BYTE *)(v1 + 5_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 18) = v13;
    uint64_t v14 = String.init<A>(describing:)(v1 + 516);
    unint64_t v16 = v15;
    *(void *)(v1 + 408) = sub_543A4(v14, v15, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 408, v1 + 416, v11 + 4, v11 + 12);
    sub_3D5D0(v10);
    swift_bridgeObjectRelease(v16);
    sub_67F8(&dword_0, (os_log_s *)(v1 + 384), v9, "EmergencyNumberFlow execute with state: %s", v11);
    sub_67DC(v12);
    uint64_t v17 = v12;
    uint64_t v7 = v52;
    sub_3CA0(v17);
    sub_3CA0((uint64_t)v11);

    unint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
    uint64_t v19 = v18(v51, v50);
  }

  else
  {
    uint64_t v10 = *(void *)(v1 + 472);
    uint64_t v20 = *(void *)(v1 + 440);
    uint64_t v21 = *(void *)(v1 + 448);
    uint64_t v22 = *(void *)(v1 + 432);

    sub_3D5D0(v22);
    unint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    uint64_t v19 = v18(v10, v20);
  }

  *(void *)(v1 + 496) = v18;
  uint64_t v23 = *(void *)(v1 + 432);
  int v24 = *(unsigned __int8 *)(v23 + 18);
  int v25 = *(unsigned __int16 *)(v23 + 16);
  unsigned int v26 = v25 | (v24 << 16);
  *(_BYTE *)(v1 + 514) = v24;
  *(_WORD *)(v1 + 51_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v25;
  if (v25 == 2)
  {
    uint64_t v2 = *(void **)(v1 + 424);
    unint64_t v27 = sub_E94C();
    uint64_t v10 = swift_allocError(&type metadata for EmergencyFlowError, v27, 0LL, 0LL);
    *uint64_t v28 = 2;
    sub_30F8(v10, v23 + 64, (void *)(v23 + 104), (uint64_t)v2);
    swift_errorRelease(v10);
    goto LABEL_8;
  }

  if (v25 == 3)
  {
    static ExecuteResponse.complete()(v19);
LABEL_8:
    sub_3D598();
    swift_task_dealloc(v2);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v30 = v1 + 16;
  uint64_t v31 = *(void *)(v1 + 464);
  uint64_t v32 = *(void *)(v1 + 440);
  sub_3CC8(v7, v1 + 336);
  uint64_t v33 = v54(v31, v7, v32);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = *(void *)(v1 + 464);
  uint64_t v55 = *(void *)(v1 + 440);
  unsigned int v38 = HIWORD(v26);
  unsigned int v39 = v26 >> 8;
  if (v36)
  {
    uint64_t v53 = *(void *)(v1 + 464);
    uint64_t v40 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v41 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v56 = v41;
    *(_BYTE *)(v1 + 5_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 19) = v26 & 1;
    unsigned int v42 = v26 >> 8;
    *(_BYTE *)(v1 + 520) = v39;
    *(_BYTE *)(v1 + 521) = v38;
    uint64_t v43 = String.init<A>(describing:)(v1 + 519);
    unint64_t v45 = v44;
    *(void *)(v1 + 416) = sub_543A4(v43, v44, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 416, v1 + 424, v40 + 4, v40 + 12);
    swift_bridgeObjectRelease(v45);
    sub_67F8(&dword_0, v34, v35, "EmergencyNumberFlow needsExecution intent: %s", v40);
    sub_67DC(v41);
    uint64_t v46 = v41;
    uint64_t v30 = v1 + 16;
    sub_3CA0(v46);
    sub_3CA0((uint64_t)v40);

    v18(v53, v55);
  }

  else
  {

    v18(v37, v55);
    unsigned int v42 = v26 >> 8;
  }

  uint64_t v47 = *(void *)(v1 + 432) + 24LL;
  uint64_t v48 = (void *)swift_task_alloc(dword_7964C);
  *(void *)(v1 + 504) = v48;
  *uint64_t v48 = v1;
  v48[1] = sub_3B600;
  return sub_145A8(v30, v47, v38, v42);
}

uint64_t sub_3B600()
{
  return sub_451C();
}

uint64_t sub_3B64C()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 514);
  if ((_DWORD)v2 == 35)
  {
    if (HIBYTE(*(_WORD *)(v0 + 512)) == 4)
    {
      sub_233E8();
      goto LABEL_8;
    }

    uint64_t v2 = (*(unsigned __int16 *)(v0 + 512) | (*(unsigned __int8 *)(v0 + 514) << 16)) >> 8;
  }

  sub_9010();
  if (*(void *)(v0 + 320))
  {
    uint64_t v3 = *(void *)(v0 + 432);
    sub_65A4((__int128 *)(v0 + 296), v0 + 256);
    sub_3324((void *)(v3 + 184), *(void *)(v3 + 208));
    sub_24310(v2, v0 + 16, (void *)(v0 + 256));
    uint64_t v5 = v4;
    sub_233E8();
    static ExecuteResponse.complete(next:)(v5);
    sub_EE0C();
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 256));
    goto LABEL_11;
  }

  uint64_t v6 = sub_233E8();
  sub_183AC((uint64_t)v6, &qword_79818);
LABEL_8:
  uint64_t v1 = v0 + 144;
  uint64_t v7 = *(void *)(v0 + 480);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint8_t *))(v0 + 488);
  uint64_t v9 = *(void *)(v0 + 456);
  uint64_t v10 = *(uint8_t **)(v0 + 440);
  sub_3CC8(v7, v0 + 360);
  v8(v9, v7, v10);
  uint64_t v11 = (os_log_s *)sub_1FD2C();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (sub_182AC(v12))
  {
    char v13 = (_WORD *)sub_8D14();
    sub_1FE64(v13);
    sub_EDA8(&dword_0, v11, (os_log_type_t)v9, "EmergencyNumberFlow Failed to pick a catWrapper", v10);
    sub_3CA0((uint64_t)v10);
  }

  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
  uint64_t v15 = *(void *)(v0 + 456);
  uint64_t v17 = *(void *)(v0 + 432);
  uint64_t v16 = *(void *)(v0 + 440);

  v14(v15, v16);
  unint64_t v18 = sub_3324((void *)(v17 + 104), *(void *)(v17 + 128));
  memcpy((void *)(v0 + 144), v18, 0x70uLL);
  uint64_t v5 = sub_37CC(v17 + 64, (void *)(v0 + 144));
  static ExecuteResponse.complete(next:)(v5);
  sub_EE0C();
LABEL_11:
  sub_3D598();
  swift_task_dealloc(v5);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_3B82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyNumberFlow();
  sub_EB44( &qword_7AD70,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyNumberFlow,  (uint64_t)&unk_5950C);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

void *sub_3B89C()
{
  return v0;
}

uint64_t sub_3B8D8()
{
  return swift_deallocClassInstance(v0, 224LL, 7LL);
}

uint64_t type metadata accessor for EmergencyNumberFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin19EmergencyNumberFlow);
}

uint64_t getEnumTagSinglePayload for EmergencyNumberFlow.EmergencyNumberFlowState( unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFD)
  {
    int v2 = (a2 + 16776963) >> 24 == 255 ? 2 : 1;
    int v3 = (a2 + 16776963) >> 24 ? v2 : 0;
    if (v3)
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)((char *)a1 + 3);
      }

      else
      {
        int v4 = *((unsigned __int8 *)a1 + 3);
        if (*((_BYTE *)a1 + 3)) {
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776963;
        }
      }
    }
  }

  unsigned int v6 = *(unsigned __int8 *)a1;
  if (v6 >= 2) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 >= 3) {
    return v7 - 2;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for EmergencyNumberFlow.EmergencyNumberFlowState( uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 16776963) >> 24 == 255) {
    int v3 = 2;
  }
  else {
    int v3 = 1;
  }
  if ((a3 + 16776963) >> 24) {
    int v4 = v3;
  }
  else {
    int v4 = 0;
  }
  if (a3 < 0xFD) {
    int v4 = 0;
  }
  if (a2 > 0xFC)
  {
    *(_WORD *)uint64_t result = a2 - 253;
    *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = (a2 - 253) >> 16;
    if (v4)
    {
      unsigned int v5 = ((a2 - 253) >> 24) + 1;
      if (v4 == 2) {
        *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = v5;
      }
      else {
        *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = v5;
      }
    }
  }

  else
  {
    if (!v4) {
      goto LABEL_13;
    }
    if (v4 == 2)
    {
      *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = 0;
LABEL_13:
      if (!a2) {
        return result;
      }
LABEL_19:
      *(_BYTE *)uint64_t result = a2 + 3;
      return result;
    }

    *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = 0;
    if (a2) {
      goto LABEL_19;
    }
  }

  return result;
}

uint64_t sub_3BA34(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_3BA48(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = (a2 - 255) >> 16;
  }

  else if (a2)
  {
    *(_BYTE *)uint64_t result = a2 + 1;
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyNumberFlow.EmergencyNumberFlowState()
{
  return &type metadata for EmergencyNumberFlow.EmergencyNumberFlowState;
}

#error "3BA94: call analysis failed (funcsize=9)"
uint64_t sub_3BAA8(uint64_t a1, uint64_t a2)
{
  return sub_3B82C(a1, a2);
}

uint64_t sub_3BAC8(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc(dword_7AC8C);
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_5F44;
  return sub_3B158(a1);
}

uint64_t sub_3BB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyNumberFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

void sub_3BB40(uint64_t a1, void *a2)
{
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  sub_3D470();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_3D334();
  if ((v12 & 1) == 0)
  {
    unint64_t v18 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v12);
    sub_3CC8((uint64_t)v18, (uint64_t)v24);
    sub_23430(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    sub_13124();
    os_log_type_t v19 = sub_67D4();
    if (!sub_182AC(v19)) {
      goto LABEL_15;
    }
    uint64_t v20 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v20 = 0;
    sub_EDA8( &dword_0,  v18,  (os_log_type_t)v2,  "orgInfo does not have name and number. Not prompting for call followup.",  v20);
    goto LABEL_11;
  }

  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_3324(a2, v13);
  uint64_t v15 = dispatch thunk of DeviceState.isSidekick.getter(v13, v14);
  char v16 = v15;
  sub_3D418(v15, (uint64_t)v24);
  if ((v16 & 1) != 0)
  {
    uint64_t v17 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v24);
LABEL_9:
    unint64_t v18 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v17);
    sub_3CC8((uint64_t)v18, (uint64_t)v24);
    sub_23430(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    sub_1FD2C();
    os_log_type_t v23 = sub_67D4();
    if (!sub_1FD34(v23)) {
      goto LABEL_15;
    }
    uint64_t v20 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v20 = 0;
    sub_EDA8( &dword_0,  v18,  (os_log_type_t)v3,  "No prompt needed for this device. Not prompting for call followup.",  v20);
    goto LABEL_11;
  }

  char v21 = sub_4808C(v24);
  uint64_t v17 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v24);
  if ((v21 & 1) == 0) {
    goto LABEL_9;
  }
  unint64_t v18 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v17);
  sub_3CC8((uint64_t)v18, (uint64_t)v24);
  sub_23430(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_13104();
  os_log_type_t v22 = sub_67D4();
  if (!sub_182AC(v22))
  {
    sub_3D4B8();
    goto LABEL_15;
  }

  uint64_t v20 = (uint8_t *)sub_8D14();
  *(_WORD *)uint64_t v20 = 0;
  sub_EDA8(&dword_0, v18, (os_log_type_t)v2, "Prompting for call followup.", v20);
  sub_3D4B8();
LABEL_11:
  sub_3CA0((uint64_t)v20);
LABEL_15:

  sub_3D270(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_3D2F4();
}

void sub_3BD5C(char a1, uint8_t *a2)
{
  uint64_t v11 = sub_3D334();
  if ((v11 & 1) == 0)
  {
    uint64_t v11 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v11);
    if ((v11 & 1) != 0)
    {
      sub_3D3F0();
      sub_3D504();
      if ((a1 & 1) != 0)
      {
        sub_3D288();
      }

      else
      {
        char v15 = sub_3D3C8();
        sub_3D288();
        if ((v15 & 1) == 0)
        {
          char v19 = sub_3D3A0();
          sub_3D2A4();
          if ((v19 & 1) == 0)
          {
            char v20 = sub_3D378();
            uint64_t v16 = sub_3D564();
            if ((v20 & 1) == 0)
            {
              uint64_t v12 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v16);
              sub_3CC8((uint64_t)v12, (uint64_t)v23);
              sub_23430(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
              sub_13104();
              os_log_type_t v21 = sub_67D4();
              if (!sub_182AC(v21))
              {
                sub_3D4B8();
                goto LABEL_14;
              }

              os_log_type_t v22 = (_WORD *)sub_8D14();
              sub_1FE64(v22);
              sub_EDA8(&dword_0, v12, (os_log_type_t)v2, "Prompting for website followup.", a2);
              sub_3D4B8();
              goto LABEL_13;
            }

            goto LABEL_11;
          }

void sub_3BF5C(uint64_t a1, uint8_t *a2)
{
  uint64_t v11 = sub_3D334();
  if ((v11 & 1) == 0)
  {
    uint64_t v12 = *(void *)(a1 + 104);
    if ((v12 & 0x2000000000000000LL) != 0)
    {
      if ((v12 & 0xF00000000000000LL) != 0)
      {
LABEL_4:
        sub_3D3F0();
        sub_3D504();
        if ((a1 & 1) != 0)
        {
          sub_3D288();
        }

        else
        {
          char v16 = sub_3D3C8();
          sub_3D288();
          if ((v16 & 1) == 0)
          {
            char v20 = sub_3D3A0();
            sub_3D2A4();
            if ((v20 & 1) == 0)
            {
              char v21 = sub_3D378();
              uint64_t v17 = sub_3D564();
              if ((v21 & 1) == 0)
              {
                os_log_type_t v13 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v17);
                sub_3CC8((uint64_t)v13, (uint64_t)v24);
                sub_23430(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
                sub_13104();
                os_log_type_t v22 = sub_67D4();
                if (!sub_182AC(v22))
                {
                  sub_3D4B8();
                  goto LABEL_16;
                }

                os_log_type_t v23 = (_WORD *)sub_8D14();
                sub_1FE64(v23);
                sub_EDA8(&dword_0, v13, (os_log_type_t)v2, "Prompting for websearch followup.", a2);
                sub_3D4B8();
                goto LABEL_15;
              }

LABEL_12:
            uint64_t v17 = sub_3D564();
            goto LABEL_13;
          }
        }

        sub_3D2A4();
        goto LABEL_12;
      }
    }

    else if ((*(void *)(a1 + 96) & 0xFFFFFFFFFFFFLL) != 0)
    {
      goto LABEL_4;
    }
  }

  os_log_type_t v13 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v11);
  sub_3CC8((uint64_t)v13, (uint64_t)v24);
  sub_23430(v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_2F65C();
  os_log_type_t v14 = sub_67D4();
  if (sub_182AC(v14))
  {
    char v15 = (_WORD *)sub_8D14();
    sub_1FE64(v15);
    sub_EDA8( &dword_0,  v13,  (os_log_type_t)v2,  "orgInfo does not have a websearch query. Not prompting for websearch followup.",  a2);
    sub_3D5D8();
LABEL_15:
    sub_3CA0((uint64_t)a2);
    goto LABEL_16;
  }

  sub_3D5D8();
LABEL_16:

  sub_3D270(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_3D2F4();
}

void sub_3C170()
{
  uint64_t v59 = v4;
  uint64_t v62 = v5;
  uint64_t v6 = sub_6820();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  sub_EDD8();
  __chkstk_darwin(v7);
  sub_66F4();
  uint64_t v60 = v8;
  sub_67EC();
  __chkstk_darwin(v9);
  sub_EE64();
  v58[1] = v10;
  sub_67EC();
  __chkstk_darwin(v11);
  sub_EE64();
  v58[2] = v12;
  sub_67EC();
  __chkstk_darwin(v13);
  sub_1300C();
  uint64_t v61 = v14;
  uint64_t v15 = sub_3D498();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_6740();
  uint64_t v19 = v18 - v17;
  sub_3974(&qword_7A8E0);
  sub_6764();
  __chkstk_darwin(v20);
  sub_183F4();
  sub_3974(&qword_7A8E8);
  sub_6764();
  __chkstk_darwin(v21);
  sub_1FD94();
  sub_3D554();
  uint64_t v23 = __chkstk_darwin(v22);
  int v25 = (char *)v58 - v24;
  __chkstk_darwin(v23);
  sub_3D4A4();
  if (sub_3D5C0())
  {
    uint64_t v26 = sub_3D5C8();
    uint64_t v27 = sub_EE0C();
    uint64_t v1 = v26;
    CurrentRequest.responseMode.getter(v27);
    swift_release(v26);
    uint64_t v28 = 0LL;
  }

  else
  {
    uint64_t v28 = 1LL;
  }

  uint64_t v29 = sub_3D328(v0, v28);
  static ResponseMode.displayOnly.getter(v29);
  sub_3D328((uint64_t)v25, 0LL);
  sub_3D4F4();
  sub_3D590((uint64_t)v25);
  sub_3D22C(v3);
  if (v32)
  {
    sub_E988((uint64_t)v25, &qword_7A8E8);
    sub_E988(v0, &qword_7A8E8);
    uint64_t v30 = sub_3D22C(v1);
    if (v32)
    {
      sub_3D35C(v30, &qword_7A8E8);
      goto LABEL_19;
    }

    goto LABEL_12;
  }

  sub_35010(v3, v2);
  sub_3D22C(v1);
  if (v32)
  {
    sub_3D354((uint64_t)v25);
    sub_3D354(v0);
    uint64_t v30 = sub_18528(v2, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
LABEL_12:
    sub_3D35C(v30, &qword_7A8E0);
    goto LABEL_13;
  }

  sub_18474(v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
  sub_EF34( &qword_7A8F0,  v45,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  uint64_t v1 = sub_3D4E8(v2, v19);
  sub_3D308(v19);
  sub_3D25C((uint64_t)v25);
  sub_3D25C(v0);
  sub_3D308(v2);
  sub_3D25C(v3);
  if ((v1 & 1) != 0)
  {
LABEL_19:
    uint64_t v38 = Logger.emergency.unsafeMutableAddressor(v31);
    sub_3CC8(v38, (uint64_t)v65);
    sub_3D584();
    sub_3D21C(v46);
    sub_2F65C();
    os_log_type_t v47 = sub_67D4();
    if (sub_182AC(v47))
    {
      uint64_t v48 = (_WORD *)sub_8D14();
      sub_3D264(v48);
      unint64_t v44 = "DisplayOnly request. Not listening after speaking.";
      goto LABEL_24;
    }

    goto LABEL_26;
  }

LABEL_26:
  sub_3D344();
  sub_7DF0();
}

        uint64_t v50 = sub_3D56C();
        goto LABEL_27;
      }
    }

    char v49 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v67);
    sub_3D4E0(v49, (uint64_t)v66);
    goto LABEL_26;
  }

  unsigned int v39 = Logger.emergency.unsafeMutableAddressor(v30);
  sub_3CC8(v39, (uint64_t)v68);
  sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
  sub_2F65C();
  uint64_t v45 = sub_67D4();
  if (sub_182AC(v45))
  {
    uint64_t v46 = (_WORD *)sub_8D14();
    sub_3D264(v46);
    unint64_t v44 = "orgInfo does not have a websearch query. Not listening after speaking.";
    goto LABEL_29;
  }

        uint64_t v52 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v67);
        goto LABEL_27;
      }
    }

    os_log_type_t v51 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v70);
    sub_47BD0(v51, (uint64_t)v67);
    goto LABEL_26;
  }

  uint64_t v43 = (uint8_t *)Logger.emergency.unsafeMutableAddressor(v32);
  sub_3CC8((uint64_t)v43, (uint64_t)v73);
  uint64_t v38 = v60[1];
  sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
  sub_2F65C();
  os_log_type_t v47 = sub_67D4();
  if (sub_182AC(v47))
  {
    uint64_t v48 = (_WORD *)sub_3CD4(2LL);
    sub_3D264(v48);
    uint64_t v46 = "orgInfo does not have a websearch query. Not listening after speaking.";
    goto LABEL_29;
  }

void sub_3C5C8()
{
  uint64_t v53 = v6;
  uint64_t v54 = v7;
  uint64_t v55 = *(void *)(sub_6820() - 8);
  sub_EDD8();
  __chkstk_darwin(v8);
  sub_66F4();
  sub_67EC();
  __chkstk_darwin(v9);
  sub_ED8C();
  __chkstk_darwin(v10);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v11);
  sub_1300C();
  sub_3D498();
  sub_3D5E4();
  __chkstk_darwin(v12);
  sub_3D310();
  sub_3974(&qword_7A8E0);
  sub_6764();
  __chkstk_darwin(v13);
  sub_183F4();
  sub_3974(&qword_7A8E8);
  sub_6764();
  __chkstk_darwin(v14);
  sub_1FD94();
  uint64_t v17 = v15 - v16;
  __chkstk_darwin(v18);
  sub_3D554();
  __chkstk_darwin(v19);
  sub_3D4A4();
  if (sub_3D5C0())
  {
    uint64_t v20 = sub_3D5C8();
    uint64_t v21 = sub_EE0C();
    uint64_t v1 = v20;
    CurrentRequest.responseMode.getter(v21);
    swift_release(v20);
    uint64_t v22 = 0LL;
  }

  else
  {
    uint64_t v22 = 1LL;
  }

  sub_3D5A4(v0, v22);
  sub_3D328(v2, 0LL);
  sub_3D4F4();
  sub_3D590(v2);
  sub_3D22C(v5);
  if (v26)
  {
    sub_3D25C(v2);
    sub_3D25C(v0);
    uint64_t v23 = sub_3D22C(v1);
    if (v26)
    {
      sub_3D35C(v23, &qword_7A8E8);
      uint64_t v25 = v55;
      goto LABEL_14;
    }

    goto LABEL_12;
  }

  sub_35010(v5, v17);
  sub_3D22C(v1);
  if (v26)
  {
    sub_3D354(v2);
    sub_3D354(v0);
    uint64_t v23 = sub_18528(v17, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
LABEL_12:
    sub_3D35C(v23, &qword_7A8E0);
    uint64_t v25 = v55;
    goto LABEL_16;
  }

  sub_18474(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_EF34( &qword_7A8F0,  v27,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  uint64_t v1 = sub_3D4E8(v17, v3);
  sub_3D308(v3);
  sub_3D25C(v2);
  sub_3D25C(v0);
  sub_3D308(v17);
  sub_3D25C(v5);
  uint64_t v25 = v55;
  if ((v1 & 1) != 0)
  {
LABEL_14:
    uint64_t v28 = Logger.emergency.unsafeMutableAddressor(v24);
    sub_3CC8(v28, (uint64_t)v58);
    sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
    sub_2F65C();
    os_log_type_t v29 = sub_67D4();
    if (sub_182AC(v29))
    {
      uint64_t v30 = (_WORD *)sub_8D14();
      sub_3D264(v30);
      uint64_t v33 = "DisplayOnly request. Not listening after speaking.";
LABEL_26:
      sub_3D248(&dword_0, v31, v32, v33);
LABEL_27:
      sub_3CA0(v28);
      goto LABEL_28;
    }

    goto LABEL_28;
  }

LABEL_16:
  uint64_t v1 = v54;
  uint64_t v34 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v24);
  if ((v34 & 1) != 0)
  {
    uint64_t v35 = sub_3D524(v53);
    char v36 = v35;
    sub_3D418(v35, (uint64_t)v58);
    if ((v36 & 1) != 0)
    {
      uint64_t v37 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v58);
      sub_3D418(v37, (uint64_t)v57);
    }

    else
    {
      char v40 = sub_3D448();
      uint64_t v41 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v58);
      sub_3D418(v41, (uint64_t)v57);
      if ((v40 & 1) == 0)
      {
        char v46 = sub_3D420();
        uint64_t v47 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v57);
        sub_3D418(v47, (uint64_t)v56);
        if ((v46 & 1) == 0)
        {
          char v48 = sub_3D2C0(v56);
          uint64_t v43 = sub_3D56C();
          if ((v48 & 1) == 0)
          {
            uint64_t v28 = Logger.emergency.unsafeMutableAddressor(v43);
            sub_3CC8(v28, (uint64_t)v58);
            sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
            sub_2F65C();
            os_log_type_t v49 = sub_67D4();
            if (!sub_182AC(v49)) {
              goto LABEL_28;
            }
            uint64_t v50 = (_WORD *)sub_8D14();
            sub_3D264(v50);
            sub_3D248(&dword_0, v51, v52, "Will listen after speaking the website followup.");
            goto LABEL_27;
          }

LABEL_23:
        uint64_t v43 = sub_3D56C();
        goto LABEL_24;
      }
    }

    uint64_t v42 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v57);
    sub_3D418(v42, (uint64_t)v56);
    goto LABEL_23;
  }

  uint64_t v28 = Logger.emergency.unsafeMutableAddressor(v34);
  sub_3CC8(v28, (uint64_t)v58);
  sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
  sub_2F65C();
  os_log_type_t v38 = sub_67D4();
  if (sub_182AC(v38))
  {
    unsigned int v39 = (_WORD *)sub_8D14();
    sub_3D264(v39);
    uint64_t v33 = "orgInfo does not have name and website. Not listening after speaking.";
    goto LABEL_26;
  }

void sub_3CA60()
{
  uint64_t v61 = v4;
  uint64_t v63 = v5;
  uint64_t v6 = sub_6820();
  uint64_t v64 = *(void *)(v6 - 8);
  sub_EDD8();
  __chkstk_darwin(v7);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v8);
  sub_ED8C();
  __chkstk_darwin(v9);
  sub_EE64();
  uint64_t v62 = v10;
  sub_67EC();
  __chkstk_darwin(v11);
  sub_1300C();
  v60[2] = v12;
  sub_3D498();
  sub_3D5E4();
  __chkstk_darwin(v13);
  sub_3D310();
  uint64_t v14 = sub_3974(&qword_7A8E0);
  sub_6764();
  __chkstk_darwin(v15);
  sub_183F4();
  sub_3974(&qword_7A8E8);
  sub_6764();
  __chkstk_darwin(v16);
  sub_1FD94();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  sub_3D554();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v60 - v22;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v24 = sub_3D5C0();
  uint64_t v65 = v6;
  if (v24)
  {
    uint64_t v25 = sub_3D5C8();
    uint64_t v26 = sub_EE0C();
    CurrentRequest.responseMode.getter(v26);
    swift_release(v25);
    uint64_t v27 = 0LL;
  }

  else
  {
    uint64_t v27 = 1LL;
  }

  sub_3D5A4((uint64_t)v23, v27);
  sub_3D328(v0, 0LL);
  uint64_t v28 = v3 + *(int *)(v14 + 48);
  sub_35010((uint64_t)v23, v3);
  sub_3D590(v0);
  sub_3D22C(v3);
  if (v32)
  {
    sub_E988(v0, &qword_7A8E8);
    sub_E988((uint64_t)v23, &qword_7A8E8);
    uint64_t v29 = sub_3D22C(v28);
    if (v32)
    {
      sub_3D35C(v29, &qword_7A8E8);
      uint64_t v31 = v64;
      goto LABEL_20;
    }

    goto LABEL_12;
  }

  sub_35010(v3, v19);
  sub_3D22C(v28);
  if (v32)
  {
    uint64_t v28 = (uint64_t)&qword_7A8E8;
    sub_3D354(v0);
    sub_3D354((uint64_t)v23);
    uint64_t v29 = sub_18528(v19, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
LABEL_12:
    sub_3D35C(v29, &qword_7A8E0);
    uint64_t v31 = v64;
    goto LABEL_13;
  }

  sub_18474(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
  sub_EF34( &qword_7A8F0,  v38,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  uint64_t v28 = sub_3D4E8(v19, v1);
  sub_3D308(v1);
  sub_3D25C(v0);
  sub_3D25C((uint64_t)v23);
  sub_3D308(v19);
  sub_3D25C(v3);
  uint64_t v31 = v64;
  if ((v28 & 1) != 0)
  {
LABEL_20:
    uint64_t v39 = Logger.emergency.unsafeMutableAddressor(v30);
    sub_3CC8(v39, (uint64_t)v68);
    sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
    sub_2F65C();
    os_log_type_t v40 = sub_67D4();
    if (sub_182AC(v40))
    {
      uint64_t v41 = (_WORD *)sub_8D14();
      sub_3D264(v41);
      os_log_type_t v44 = "DisplayOnly request. Not listening after speaking.";
LABEL_29:
      sub_3D248(&dword_0, v42, v43, v44);
LABEL_30:
      sub_3CA0(v39);
      goto LABEL_31;
    }

    goto LABEL_31;
  }

LABEL_27:
          uint64_t v39 = Logger.emergency.unsafeMutableAddressor(v50);
          sub_3CC8(v39, (uint64_t)v68);
          sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
          sub_2F65C();
          os_log_type_t v51 = sub_67D4();
          if (sub_182AC(v51))
          {
            uint64_t v52 = (_WORD *)sub_8D14();
            sub_3D264(v52);
            os_log_type_t v44 = "No prompt needed for this device. Not listening after speaking.";
            goto LABEL_29;
          }

          goto LABEL_31;
        }

          uint64_t v43 = (uint8_t *)Logger.emergency.unsafeMutableAddressor(v52);
          sub_3CC8((uint64_t)v43, (uint64_t)v73);
          sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
          sub_2F65C();
          char v53 = sub_67D4();
          if (sub_182AC(v53))
          {
            uint64_t v54 = (_WORD *)sub_3CD4(2LL);
            sub_3D264(v54);
            char v46 = "No prompt needed for this device. Not listening after speaking.";
            goto LABEL_29;
          }

          goto LABEL_31;
        }

LABEL_31:
  sub_3D344();
  sub_7DF0();
}

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v38, v33);
  sub_7DF0();
}

void sub_3CF20()
{
  uint64_t v40 = v0;
  uint64_t v41 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v10);
  sub_6740();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for SpeakableString(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_6740();
  uint64_t v18 = v17 - v16;
  sub_E3F0(v9, (uint64_t)v38);
  if (sub_E438((uint64_t)v38) == 1)
  {
    uint64_t v19 = v7[3];
    uint64_t v20 = v7[4];
    sub_3324(v7, v19);
    sub_3F18(v13, 1LL, 1LL, v14);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 24))(v13, v19, v20);
    sub_183AC(v21, &qword_78970);
  }

  else
  {
    memcpy(v39, v38, sizeof(v39));
    uint64_t v22 = v39[6];
    uint64_t v23 = v39[7];
    swift_bridgeObjectRetain(v39[7]);
    sub_44E8(v22, v23);
    uint64_t v24 = type metadata accessor for DialogPhoneNumber.Builder(0LL);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    uint64_t v25 = DialogPhoneNumber.Builder.init()();
    dispatch thunk of DialogPhoneNumber.Builder.withValue(print:speak:)(v39[8], v39[9], 0LL, 0LL);
    uint64_t v26 = swift_release(v25);
    uint64_t v27 = dispatch thunk of DialogPhoneNumber.Builder.build()(v26);
    uint64_t v28 = sub_EE0C();
    uint64_t v29 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v28);
    if ((v29 & 1) != 0)
    {
      uint64_t v30 = sub_3324(v5, v5[3])[1];
      sub_3D484();
      sub_3D2E0();
      swift_retain(v30);
      swift_retain(v27);
      char v31 = sub_4808C(v3);
      sub_235F8(v13, v27, v31 & 1);
      sub_EE0C();
      uint64_t v32 = sub_3D5D0(v27);
    }

    else
    {
      char v33 = EmergencyOrganizationInfo.hasNameAndWebsite.getter(v29);
      uint64_t v34 = v7[3];
      uint64_t v35 = v7[4];
      sub_3324(v7, v34);
      if ((v33 & 1) != 0)
      {
        sub_3D484();
        sub_3D2E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v13, v34, v35);
      }

      else
      {
        uint64_t v36 = v39[12];
        uint64_t v37 = v39[13];
        swift_bridgeObjectRetain(v39[13]);
        sub_44E8(v36, v37);
        sub_3D2E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24))(v13, v34, v35);
      }

      uint64_t v32 = swift_release(v27);
    }

    sub_183AC(v32, &qword_78970);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  }

void sub_3D1CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  sub_6774();
}

ValueMetadata *type metadata accessor for EmergencyNumberFlowFollowupConfigModel()
{
  return &type metadata for EmergencyNumberFlowFollowupConfigModel;
}

uint64_t sub_3D21C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a1(v3, v1, v2);
}

uint64_t sub_3D22C(uint64_t a1)
{
  return sub_5FE0(a1, 1LL, v1);
}

void sub_3D248(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_3D25C(uint64_t a1)
{
}

_WORD *sub_3D264(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_3D270@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_3D27C(uint64_t a1)
{
  return v2(a1, v1, *(void *)(v3 - 200));
}

uint64_t sub_3D288()
{
  return sub_3B68(v0, v1 - 144);
}

uint64_t sub_3D2A4()
{
  return sub_3B68(v0, v1 - 184);
}

uint64_t sub_3D2C0(void *a1)
{
  return dispatch thunk of DeviceState.isAppleTV.getter(v1, v2);
}

uint64_t sub_3D2E0()
{
  return sub_3F18(v0, 0LL, 1LL, v1);
}

  ;
}

uint64_t sub_3D308(uint64_t a1)
{
  return v1(a1, v2);
}

  ;
}

uint64_t sub_3D328(uint64_t a1, uint64_t a2)
{
  return sub_3F18(a1, a2, 1LL, v2);
}

uint64_t sub_3D334()
{
  return EmergencyOrganizationInfo.hasNameAndNumber.getter();
}

uint64_t sub_3D344()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_3D354(uint64_t a1)
{
}

void sub_3D35C(uint64_t a1, uint64_t *a2)
{
}

  ;
}

uint64_t sub_3D378()
{
  uint64_t v1 = *(void *)(v0 - 160);
  uint64_t v2 = *(void *)(v0 - 152);
  sub_3324((void *)(v0 - 184), v1);
  return dispatch thunk of DeviceState.isAppleTV.getter(v1, v2);
}

uint64_t sub_3D3A0()
{
  uint64_t v1 = *(void *)(v0 - 120);
  uint64_t v2 = *(void *)(v0 - 112);
  sub_3324((void *)(v0 - 144), v1);
  return dispatch thunk of DeviceState.isWatch.getter(v1, v2);
}

uint64_t sub_3D3C8()
{
  uint64_t v1 = *(void *)(v0 - 80);
  sub_3324((void *)(v0 - 104), v1);
  return dispatch thunk of DeviceState.isCarPlay.getter(v1);
}

uint64_t sub_3D3F0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_3324(v0, v1);
  return dispatch thunk of DeviceState.isHomePod.getter(v1, v2);
}

uint64_t sub_3D418(uint64_t a1, uint64_t a2)
{
  return sub_3B68(v2, a2);
}

uint64_t sub_3D420()
{
  uint64_t v1 = *(void *)(v0 - 144);
  uint64_t v2 = *(void *)(v0 - 136);
  sub_3324((void *)(v0 - 168), v1);
  return dispatch thunk of DeviceState.isWatch.getter(v1, v2);
}

uint64_t sub_3D448()
{
  uint64_t v1 = *(void *)(v0 - 104);
  sub_3324((void *)(v0 - 128), v1);
  return dispatch thunk of DeviceState.isCarPlay.getter(v1);
}

  ;
}

uint64_t sub_3D484()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t sub_3D498()
{
  return type metadata accessor for ResponseMode(0LL);
}

uint64_t sub_3D4A4()
{
  return type metadata accessor for SiriEnvironment(0LL);
}

  ;
}

  ;
}

uint64_t sub_3D4E0(uint64_t a1, uint64_t a2)
{
  return sub_3B68(v2, a2);
}

uint64_t sub_3D4E8(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, v2);
}

uint64_t sub_3D4F4()
{
  return sub_35010(v0, v1);
}

uint64_t sub_3D504()
{
  return sub_3B68(v0, v1 - 104);
}

void sub_3D514()
{
}

uint64_t sub_3D524(void *a1)
{
  return dispatch thunk of DeviceState.isHomePod.getter(v1, v2);
}

void sub_3D544(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

  ;
}

uint64_t sub_3D564()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 184));
}

uint64_t sub_3D56C()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 208));
}

uint64_t sub_3D574()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

  ;
}

uint64_t sub_3D590(uint64_t a1)
{
  return sub_35010(a1, v1);
}

uint64_t sub_3D598()
{
  return swift_task_dealloc(*(void *)(v0 + 472));
}

uint64_t sub_3D5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_3F18(a1, a2, 1LL, v2);
  return static ResponseMode.displayOnly.getter(v3);
}

uint64_t sub_3D5C0()
{
  return static SiriEnvironment.forCurrentTask.getter();
}

uint64_t sub_3D5C8()
{
  return SiriEnvironment.currentRequest.getter();
}

uint64_t sub_3D5D0(uint64_t a1)
{
  return swift_release_n(a1, 2LL);
}

  ;
}

  ;
}

uint64_t sub_3D5F8()
{
  id v1 = [v0 dictionary];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  id v9 = 0LL;
  id v3 =  [(id)objc_opt_self(NSPropertyListSerialization) dataWithPropertyList:v1 format:200 options:0 error:&v9];
  id v4 = v9;
  if (!v3)
  {
    os_log_type_t v6 = v4;
    uint64_t v7 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease(v7);
    return 0LL;
  }

  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);

  return v5;
}

void type metadata accessor for EmergencySnippetModel()
{
}

BOOL sub_3D724(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_3D734(uint64_t a1, char a2)
{
}

uint64_t sub_3D758(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x74706D6F7270LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v5 = 0xE600000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74706D6F7270LL, 0xE600000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000LL)
  {
    swift_bridgeObjectRelease(0xE600000000000000LL);
    return 1LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736C6562616CLL, 0xE600000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_3D83C()
{
  return 2LL;
}

Swift::Int sub_3D844(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_3D888(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x736C6562616CLL;
  }
  else {
    return 0x74706D6F7270LL;
  }
}

void sub_3D8B0(void *a1)
{
  uint64_t v4 = v2;
  sub_3974(&qword_7AE18);
  sub_3FD04();
  __chkstk_darwin(v6);
  sub_3324(a1, a1[3]);
  unint64_t v7 = sub_3F404();
  sub_3FC40((uint64_t)&type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys, v8, v7);
  uint64_t v9 = *(void *)v4;
  uint64_t v10 = *(void *)(v4 + 8);
  LOBYTE(v15[0]) = 0;
  sub_3FBD0(v9, v10, (uint64_t)v15);
  if (!v3)
  {
    __int128 v11 = *(_OWORD *)(v4 + 32);
    v15[0] = *(_OWORD *)(v4 + 16);
    v15[1] = v11;
    __int128 v12 = *(_OWORD *)(v4 + 64);
    _OWORD v15[2] = *(_OWORD *)(v4 + 48);
    v15[3] = v12;
    char v14 = 1;
    unint64_t v13 = sub_3F47C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v14, v1, &unk_6F8F8, v13);
  }

  sub_3FC6C();
  sub_3FC04();
}

void sub_3D9A0()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_3974(&qword_7AE00);
  __chkstk_darwin(v5);
  sub_3FC8C();
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  sub_3324(v2, v6);
  unint64_t v8 = sub_3F404();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys,  &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys,  v8,  v6,  v7);
  if (v0)
  {
    sub_3FD24();
  }

  else
  {
    LOBYTE(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0;
    uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    uint64_t v11 = v10;
    unint64_t v12 = sub_3F440();
    swift_bridgeObjectRetain(v11);
    sub_3FD18();
    sub_3FBE0();
    if (v12)
    {
      sub_3FC7C();
      sub_3FD24();
      sub_3FC7C();
    }

    else
    {
      uint64_t v13 = v25;
      uint64_t v14 = v27;
      uint64_t v22 = v26;
      uint64_t v23 = v24;
      uint64_t v15 = v28;
      uint64_t v19 = v28;
      uint64_t v20 = v25;
      unint64_t v18 = v29;
      uint64_t v17 = v30;
      unint64_t v16 = v31;
      uint64_t v21 = v30;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v14);
      sub_2F0C0(v15, v18);
      sub_2F0C0(v17, v16);
      sub_3FC7C();
      sub_3FD24();
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v20);
      sub_3FC7C();
      sub_3FCAC(v19);
      sub_2F184(v21, v16);
      *uint64_t v4 = v9;
      v4[1] = v11;
      void v4[2] = v23;
      v4[3] = v20;
      v4[4] = v22;
      v4[5] = v14;
      void v4[6] = v19;
      v4[7] = v18;
      v4[8] = v21;
      void v4[9] = v16;
    }
  }

  sub_3FB8C();
}

uint64_t sub_3DB84(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x4C6D7269666E6F63LL && a2 == 0xEC0000006C656261LL)
  {
    unint64_t v5 = 0xEC0000006C656261LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C6D7269666E6F63LL, 0xEC0000006C656261LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x614C6C65636E6163LL && a2 == 0xEB000000006C6562LL)
  {
    unint64_t v8 = 0xEB000000006C6562LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614C6C65636E6163LL, 0xEB000000006C6562LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x446D7269666E6F63LL && a2 == 0xE900000000000049LL)
  {
    unint64_t v10 = 0xE900000000000049LL;
    goto LABEL_24;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x446D7269666E6F63LL, 0xE900000000000049LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
LABEL_24:
    swift_bridgeObjectRelease(v10);
    return 2LL;
  }

  if (a1 == 0x49446C65636E6163LL && a2 == 0xE800000000000000LL)
  {
    swift_bridgeObjectRelease(0xE800000000000000LL);
    return 3LL;
  }

  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0x49446C65636E6163LL, 0xE800000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

uint64_t sub_3DD6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_3DDA8 + 4 * byte_595B0[a1]))( 0x4C6D7269666E6F63LL,  0xEC0000006C656261LL);
}

uint64_t sub_3DDA8()
{
  return 0x614C6C65636E6163LL;
}

uint64_t sub_3DDC8()
{
  return 0x446D7269666E6F63LL;
}

uint64_t sub_3DDE4()
{
  return 0x49446C65636E6163LL;
}

void sub_3DDFC(void *a1)
{
  uint64_t v3 = v1;
  sub_3974(&qword_7AE58);
  sub_3FD04();
  __chkstk_darwin(v5);
  sub_3324(a1, a1[3]);
  unint64_t v6 = sub_3F940();
  sub_3FC40((uint64_t)&type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys, v7, v6);
  uint64_t v8 = *(void *)v3;
  uint64_t v9 = *(void *)(v3 + 8);
  LOBYTE(vsub_66BC(v0 + 18) = 0;
  sub_3FBD0(v8, v9, (uint64_t)&v18);
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + 16);
    uint64_t v11 = *(void *)(v3 + 24);
    LOBYTE(vsub_66BC(v0 + 18) = 1;
    sub_3FBD0(v10, v11, (uint64_t)&v18);
    __int128 v18 = *(_OWORD *)(v3 + 32);
    unint64_t v12 = sub_3F9B8();
    uint64_t v15 = sub_3FBB4(v12, v13, v14, (uint64_t)&type metadata for Data);
    __int128 v18 = *(_OWORD *)(v3 + 48);
    sub_3FBB4(v15, v16, v17, (uint64_t)&type metadata for Data);
  }

  sub_3FC6C();
  sub_3FC04();
}

void sub_3DF10()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_3974(&qword_7AE40);
  __chkstk_darwin(v5);
  sub_3FC8C();
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  sub_3324(v2, v6);
  unint64_t v8 = sub_3F940();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys,  &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys,  v8,  v6,  v7);
  if (v0)
  {
    sub_3FCD8();
  }

  else
  {
    uint64_t v9 = sub_3FC18();
    uint64_t v11 = v10;
    uint64_t v16 = v9;
    LOBYTE(vsub_66BC(v0 + 18) = 1;
    swift_bridgeObjectRetain(v10);
    uint64_t v12 = sub_3FC18();
    uint64_t v17 = v13;
    uint64_t v14 = v13;
    uint64_t v15 = v12;
    sub_3F97C();
    swift_bridgeObjectRetain(v14);
    sub_3FCB4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_2F0C0(v18, v19);
    sub_3FCB4();
    sub_3FD18();
    sub_3FBA4();
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v17);
    sub_2F0C0(v18, v19);
    sub_2F0C0(v18, v19);
    sub_3FCAC(v18);
    sub_9448();
    swift_bridgeObjectRelease(v17);
    sub_3FCD8();
    swift_bridgeObjectRelease(v17);
    sub_9448();
    sub_3FCAC(v18);
    sub_2F184(v18, v19);
    *uint64_t v4 = v16;
    v4[1] = v11;
    void v4[2] = v15;
    v4[3] = v17;
    v4[4] = v18;
    v4[5] = v19;
    void v4[6] = v18;
    v4[7] = v19;
  }

  sub_3FB8C();
}

uint64_t sub_3E154(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015LL && a2 == 0x800000000005AE90LL)
  {
    swift_bridgeObjectRelease(0x800000000005AE90LL);
    char v3 = 0;
  }

  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015LL, 0x800000000005AE90LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    char v3 = v4 ^ 1;
  }

  return v3 & 1;
}

unint64_t sub_3E1D8()
{
  return 0xD000000000000015LL;
}

uint64_t sub_3E1F4()
{
  return 1LL;
}

void sub_3E1FC()
{
}

uint64_t sub_3E220(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000LL)
  {
    swift_bridgeObjectRelease(0xE200000000000000LL);
    char v5 = 0;
  }

  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)(12383LL, 0xE200000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    char v5 = v4 ^ 1;
  }

  return v5 & 1;
}

void sub_3E28C()
{
}

uint64_t sub_3E2BC()
{
  return 12383LL;
}

void sub_3E2C8()
{
  uint64_t v2 = v0;
  uint64_t v27 = v0;
  char v4 = v3;
  sub_3ECEC(v2, v30);
  uint64_t v25 = v30[0];
  uint64_t v19 = v30[1];
  uint64_t v5 = v30[3];
  uint64_t v24 = v30[2];
  uint64_t v6 = v30[5];
  uint64_t v23 = v30[4];
  unint64_t v7 = v30[7];
  uint64_t v20 = v30[6];
  uint64_t v8 = v30[8];
  unint64_t v31 = v30[9];
  uint64_t v22 = sub_3974(&qword_7ADB8);
  uint64_t v26 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_7E10();
  uint64_t v28 = sub_3974(&qword_7ADC0);
  uint64_t v21 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = v4[3];
  uint64_t v12 = v4[4];
  sub_3324(v4, v11);
  unint64_t v13 = sub_3ED00();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for EmergencySnippetModel.CodingKeys,  &type metadata for EmergencySnippetModel.CodingKeys,  v13,  v11,  v12);
  uint64_t v14 = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  uint64_t v15 = v20;
  sub_2F0C0(v20, v7);
  sub_2F0C0(v8, v31);
  sub_3EDB4();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  v29[0] = v25;
  v29[1] = v14;
  v29[2] = v24;
  void v29[3] = v5;
  v29[4] = v23;
  void v29[5] = v6;
  v29[6] = v15;
  v29[7] = v7;
  v29[8] = v8;
  v29[9] = v31;
  unint64_t v16 = sub_3EE2C();
  uint64_t v17 = v22;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v29, v18, v22, &unk_6F7E8, v16);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v28);
  sub_3EE68(v27);
  sub_3FB8C();
}

void sub_3E510()
{
  char v3 = v2;
  uint64_t v36 = v4;
  uint64_t v29 = sub_3974(&qword_7AD88);
  __chkstk_darwin(v29);
  uint64_t v5 = sub_3974(&qword_7AD90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_7E10();
  uint64_t v8 = v3[3];
  uint64_t v7 = v3[4];
  sub_3324(v3, v8);
  unint64_t v9 = sub_3ED00();
  uint64_t v10 = v8;
  uint64_t v11 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for EmergencySnippetModel.CodingKeys,  &type metadata for EmergencySnippetModel.CodingKeys,  v9,  v10,  v7);
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v31 = v6;
  uint64_t v12 = KeyedDecodingContainer.allKeys.getter(v5);
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    uint64_t v19 = v5;
LABEL_7:
    uint64_t v20 = type metadata accessor for DecodingError(0LL);
    swift_allocError(v20, &protocol witness table for DecodingError, 0LL, 0LL);
    uint64_t v22 = v21;
    sub_3974(&qword_7ADA0);
    *uint64_t v22 = &unk_6F650;
    uint64_t v23 = KeyedDecodingContainer.codingPath.getter(v19);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)( v23,  0xD00000000000002BLL,  0x800000000005C2C0LL,  0LL);
    uint64_t v24 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104LL))( v22,  enum case for DecodingError.typeMismatch(_:),  v20);
    swift_willThrow(v24);
    sub_3FC84();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1, v19);
    uint64_t v11 = v3;
LABEL_8:
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v11);
    goto LABEL_9;
  }

  uint64_t v14 = v12;
  sub_3ED3C(1LL, v13, v12, v12 + 32, 0LL, (2 * v13) | 1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease(v14);
  if (v16 != v18 >> 1)
  {
    uint64_t v19 = v5;
    goto LABEL_7;
  }

  sub_3EDB4();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  sub_3EDF0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v33);
  sub_3FBF0();
  sub_3FC84();
  sub_3FC2C();
  __int128 v30 = v33[1];
  __int128 v32 = v33[0];
  __int128 v27 = v33[3];
  __int128 v28 = v33[2];
  uint64_t v25 = v34;
  uint64_t v26 = v35;
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v3);
  *(_OWORD *)uint64_t v36 = v32;
  *(_OWORD *)(v36 + 16) = v30;
  *(_OWORD *)(v36 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v28;
  *(_OWORD *)(v36 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v27;
  *(void *)(v36 + 64) = v25;
  *(void *)(v36 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v26;
LABEL_9:
  sub_3FB8C();
}

BOOL sub_3E810(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_3D724(*a1, *a2);
}

Swift::Int sub_3E81C()
{
  return sub_3D844(*v0);
}

void sub_3E824(uint64_t a1)
{
}

uint64_t sub_3E82C()
{
  return sub_3D888(*v0);
}

uint64_t sub_3E834@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_3D758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_3E858()
{
  return sub_13C64();
}

uint64_t sub_3E874@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_3D83C();
  *a1 = result;
  return result;
}

uint64_t sub_3E898(uint64_t a1)
{
  unint64_t v2 = sub_3F404();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3E8C0(uint64_t a1)
{
  unint64_t v2 = sub_3F404();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_3E8E8(void *a1@<X8>)
{
  if (!v1) {
    memcpy(a1, v3, 0x50uLL);
  }
}

void sub_3E930(void *a1)
{
}

uint64_t sub_3E944()
{
  return sub_3DD6C(*v0);
}

uint64_t sub_3E94C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_3DB84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_3E970@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_13C5C();
  *a1 = result;
  return result;
}

uint64_t sub_3E994(uint64_t a1)
{
  unint64_t v2 = sub_3F940();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3E9BC(uint64_t a1)
{
  unint64_t v2 = sub_3F940();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_3E9E4@<D0>(_OWORD *a1@<X8>)
{
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
    a1[3] = v7;
  }

  return result;
}

void sub_3EA24(void *a1)
{
}

void sub_3EA3C()
{
}

uint64_t sub_3EA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_3E154(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_3EA84(uint64_t a1)
{
  unint64_t v2 = sub_3ED00();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3EAAC(uint64_t a1)
{
  unint64_t v2 = sub_3ED00();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_3EAD4(uint64_t a1)
{
}

uint64_t sub_3EB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_3E220(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_3EB2C()
{
  return sub_13C64();
}

uint64_t sub_3EB44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_3E1F4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_3EB6C(uint64_t a1)
{
  unint64_t v2 = sub_3EDB4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3EB94(uint64_t a1)
{
  unint64_t v2 = sub_3EDB4();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_3EBBC()
{
  return 0xD000000000000011LL;
}

void sub_3EBDC(void *a1@<X8>)
{
  if (!v1) {
    sub_3ECEC(&v3, a1);
  }
}

void sub_3EC20()
{
}

unint64_t sub_3EC70()
{
  unint64_t result = qword_7AD78;
  if (!qword_7AD78)
  {
    unint64_t result = swift_getWitnessTable(&unk_59640, &unk_6F650);
    atomic_store(result, (unint64_t *)&qword_7AD78);
  }

  return result;
}

unint64_t sub_3ECB0()
{
  unint64_t result = qword_7AD80;
  if (!qword_7AD80)
  {
    unint64_t result = swift_getWitnessTable(&unk_59618, &unk_6F650);
    atomic_store(result, (unint64_t *)&qword_7AD80);
  }

  return result;
}

void *sub_3ECEC(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x50uLL);
}

unint64_t sub_3ED00()
{
  unint64_t result = qword_7AD98;
  if (!qword_7AD98)
  {
    unint64_t result = swift_getWitnessTable(&unk_5993C, &type metadata for EmergencySnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AD98);
  }

  return result;
}

uint64_t sub_3ED3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  if ((a2 & 0x8000000000000000LL) == 0) {
    return swift_unknownObjectRetain(a3);
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_3EDB4()
{
  unint64_t result = qword_7ADA8;
  if (!qword_7ADA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_598EC, &type metadata for EmergencySnippetModel.EmergencyConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADA8);
  }

  return result;
}

unint64_t sub_3EDF0()
{
  unint64_t result = qword_7ADB0;
  if (!qword_7ADB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_598C4, &unk_6F7E8);
    atomic_store(result, (unint64_t *)&qword_7ADB0);
  }

  return result;
}

unint64_t sub_3EE2C()
{
  unint64_t result = qword_7ADC8;
  if (!qword_7ADC8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5989C, &unk_6F7E8);
    atomic_store(result, (unint64_t *)&qword_7ADC8);
  }

  return result;
}

void *sub_3EE68(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  unint64_t v5 = a1[7];
  uint64_t v6 = a1[8];
  unint64_t v7 = a1[9];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  sub_2F184(v4, v5);
  sub_2F184(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for EmergencySnippetModel.CodingKeys()
{
  return &type metadata for EmergencySnippetModel.CodingKeys;
}

uint64_t _s19EmergencyFlowPlugin21EmergencySnippetModelO10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  else {
    int v2 = 2;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t _s19EmergencyFlowPlugin21EmergencySnippetModelO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_3EF8C + 4 * byte_595B4[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_3EFAC + 4 * byte_595B9[v4]))();
  }
}

_BYTE *sub_3EF8C(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_3EFAC(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_3EFB4(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_3EFBC(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_3EFC4(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_3EFCC(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmergencySnippetModel.EmergencyConfirmationCodingKeys()
{
  return &type metadata for EmergencySnippetModel.EmergencyConfirmationCodingKeys;
}

uint64_t sub_3EFE8(void *a1)
{
  return sub_2F184(a1[8], a1[9]);
}

void *sub_3F028(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[6];
  unint64_t v8 = a2[7];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  sub_2F0C0(v7, v8);
  a1[6] = v7;
  a1[7] = v8;
  uint64_t v10 = a2[8];
  unint64_t v9 = a2[9];
  sub_2F0C0(v10, v9);
  a1[8] = v10;
  a1[9] = v9;
  return a1;
}

void *sub_3F0B0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  sub_3FCC8();
  a1[2] = a2[2];
  uint64_t v5 = a2[3];
  a1[3] = v5;
  swift_bridgeObjectRetain(v5);
  sub_3FCC8();
  a1[4] = a2[4];
  uint64_t v6 = a2[5];
  a1[5] = v6;
  swift_bridgeObjectRetain(v6);
  sub_3FCC8();
  uint64_t v7 = a2[6];
  unint64_t v8 = a2[7];
  sub_2F0C0(v7, v8);
  uint64_t v9 = a1[6];
  unint64_t v10 = a1[7];
  a1[6] = v7;
  a1[7] = v8;
  sub_2F184(v9, v10);
  uint64_t v12 = a2[8];
  unint64_t v11 = a2[9];
  sub_2F0C0(v12, v11);
  uint64_t v13 = a1[8];
  unint64_t v14 = a1[9];
  a1[8] = v12;
  a1[9] = v11;
  sub_2F184(v13, v14);
  return a1;
}

void *sub_3F168(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = a1[1];
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = a1[3];
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = a1[5];
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  *((_OWORD *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = *(_OWORD *)(a2 + 48);
  sub_2F184(v10, v11);
  uint64_t v12 = a1[8];
  unint64_t v13 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_2F184(v12, v13);
  return a1;
}

uint64_t sub_3F1DC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_3F21C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
    *(_OWORD *)(result + sub_60A4(v0 + 16, v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 80) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for EmergencySnippetModel.EmergencyConfirmationModel()
{
}

unint64_t sub_3F288()
{
  unint64_t result = qword_7ADD0;
  if (!qword_7ADD0)
  {
    unint64_t result = swift_getWitnessTable(&unk_597BC, &type metadata for EmergencySnippetModel.EmergencyConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADD0);
  }

  return result;
}

unint64_t sub_3F2C8()
{
  unint64_t result = qword_7ADD8;
  if (!qword_7ADD8)
  {
    unint64_t result = swift_getWitnessTable(&unk_59874, &type metadata for EmergencySnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADD8);
  }

  return result;
}

unint64_t sub_3F308()
{
  unint64_t result = qword_7ADE0;
  if (!qword_7ADE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5972C, &type metadata for EmergencySnippetModel.EmergencyConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADE0);
  }

  return result;
}

unint64_t sub_3F348()
{
  unint64_t result = qword_7ADE8;
  if (!qword_7ADE8)
  {
    unint64_t result = swift_getWitnessTable(&unk_59754, &type metadata for EmergencySnippetModel.EmergencyConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADE8);
  }

  return result;
}

unint64_t sub_3F388()
{
  unint64_t result = qword_7ADF0;
  if (!qword_7ADF0)
  {
    unint64_t result = swift_getWitnessTable(&unk_597E4, &type metadata for EmergencySnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADF0);
  }

  return result;
}

unint64_t sub_3F3C8()
{
  unint64_t result = qword_7ADF8;
  if (!qword_7ADF8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5980C, &type metadata for EmergencySnippetModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7ADF8);
  }

  return result;
}

unint64_t sub_3F404()
{
  unint64_t result = qword_7AE08;
  if (!qword_7AE08)
  {
    unint64_t result = swift_getWitnessTable( &unk_59AAC,  &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE08);
  }

  return result;
}

unint64_t sub_3F440()
{
  unint64_t result = qword_7AE10;
  if (!qword_7AE10)
  {
    unint64_t result = swift_getWitnessTable(&unk_59A84, &unk_6F8F8);
    atomic_store(result, (unint64_t *)&qword_7AE10);
  }

  return result;
}

unint64_t sub_3F47C()
{
  unint64_t result = qword_7AE20;
  if (!qword_7AE20)
  {
    unint64_t result = swift_getWitnessTable(&unk_59A5C, &unk_6F8F8);
    atomic_store(result, (unint64_t *)&qword_7AE20);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_3F58C + 4 * byte_595C3[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_3F5C0 + 4 * byte_595BE[v4]))();
}

uint64_t sub_3F5C0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_3F5C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x3F5D0LL);
  }
  return result;
}

uint64_t sub_3F5DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3F5E4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_3F5E8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_3F5F0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_3F5FC(_BYTE *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys()
{
  return &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys;
}

uint64_t sub_3F618(void *a1)
{
  return sub_2F184(a1[6], a1[7]);
}

void *sub_3F650(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  sub_2F0C0(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  uint64_t v9 = a2[6];
  unint64_t v8 = a2[7];
  sub_2F0C0(v9, v8);
  a1[6] = v9;
  a1[7] = v8;
  return a1;
}

void *sub_3F6C8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_2F0C0(v8, v9);
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  a1[4] = v8;
  a1[5] = v9;
  sub_2F184(v10, v11);
  uint64_t v13 = a2[6];
  unint64_t v12 = a2[7];
  sub_2F0C0(v13, v12);
  uint64_t v14 = a1[6];
  unint64_t v15 = a1[7];
  a1[6] = v13;
  a1[7] = v12;
  sub_2F184(v14, v15);
  return a1;
}

__n128 sub_3F76C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *sub_3F780(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = a1[1];
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = a1[3];
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_OWORD *)(a2 + 32);
  sub_2F184(v8, v9);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  *((_OWORD *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = *(_OWORD *)(a2 + 48);
  sub_2F184(v10, v11);
  return a1;
}

uint64_t sub_3F7E4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_3F824(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + sub_60A4(v0 + 16, v0 + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for EmergencySnippetModel.ConfirmationModel()
{
}

unint64_t sub_3F884()
{
  unint64_t result = qword_7AE28;
  if (!qword_7AE28)
  {
    unint64_t result = swift_getWitnessTable( &unk_59A34,  &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE28);
  }

  return result;
}

unint64_t sub_3F8C4()
{
  unint64_t result = qword_7AE30;
  if (!qword_7AE30)
  {
    unint64_t result = swift_getWitnessTable( &unk_599A4,  &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE30);
  }

  return result;
}

unint64_t sub_3F904()
{
  unint64_t result = qword_7AE38;
  if (!qword_7AE38)
  {
    unint64_t result = swift_getWitnessTable( &unk_599CC,  &type metadata for EmergencySnippetModel.EmergencyConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE38);
  }

  return result;
}

unint64_t sub_3F940()
{
  unint64_t result = qword_7AE48;
  if (!qword_7AE48)
  {
    unint64_t result = swift_getWitnessTable(&unk_59BB4, &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE48);
  }

  return result;
}

unint64_t sub_3F97C()
{
  unint64_t result = qword_7AE50;
  if (!qword_7AE50)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_7AE50);
  }

  return result;
}

unint64_t sub_3F9B8()
{
  unint64_t result = qword_7AE60;
  if (!qword_7AE60)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_7AE60);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for EmergencySnippetModel.ConfirmationModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_3FA40 + 4 * byte_595CD[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_3FA74 + 4 * byte_595C8[v4]))();
}

uint64_t sub_3FA74(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_3FA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x3FA84LL);
  }
  return result;
}

uint64_t sub_3FA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3FA98LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_3FA9C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_3FAA4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencySnippetModel.ConfirmationModel.CodingKeys()
{
  return &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys;
}

unint64_t sub_3FAC4()
{
  unint64_t result = qword_7AE68;
  if (!qword_7AE68)
  {
    unint64_t result = swift_getWitnessTable(&unk_59B8C, &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE68);
  }

  return result;
}

unint64_t sub_3FB04()
{
  unint64_t result = qword_7AE70;
  if (!qword_7AE70)
  {
    unint64_t result = swift_getWitnessTable(&unk_59AFC, &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE70);
  }

  return result;
}

unint64_t sub_3FB44()
{
  unint64_t result = qword_7AE78;
  if (!qword_7AE78)
  {
    unint64_t result = swift_getWitnessTable(&unk_59B24, &type metadata for EmergencySnippetModel.ConfirmationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_7AE78);
  }

  return result;
}

  ;
}

uint64_t sub_3FBA4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_3FBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)(v6 - 80, v6 - 81, v4, a4, v5);
}

uint64_t sub_3FBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return KeyedEncodingContainer.encode(_:forKey:)(a1, a2, a3, v3);
}

uint64_t sub_3FBE0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_3FBF0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 224) + 8LL))(v1, v0);
}

  ;
}

uint64_t sub_3FC18()
{
  return KeyedDecodingContainer.decode(_:forKey:)(v1 - 96, v0);
}

uint64_t sub_3FC2C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 176) + 8LL))(v0, v1);
}

uint64_t sub_3FC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)(a1, a1, a3, v3, v4);
}

  ;
}

uint64_t sub_3FC6C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_3FC7C()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_3FC84()
{
  return swift_unknownObjectRelease(v0);
}

  ;
}

uint64_t sub_3FCA4()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 104));
}

uint64_t sub_3FCAC(uint64_t a1)
{
  return sub_2F184(a1, v1);
}

  ;
}

uint64_t sub_3FCC8()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t sub_3FCD8()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0);
}

uint64_t sub_3FCE0()
{
  return sub_2F184(v0, v1);
}

  ;
}

void sub_3FCF8()
{
}

  ;
}

uint64_t sub_3FD18()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_3FD24()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0);
}

uint64_t sub_3FD2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CATOption(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CsamCATs(0LL);
  sub_40380();
  uint64_t v22 = sub_4038C();
  type metadata accessor for EmergencyCATs(0LL);
  sub_40380();
  uint64_t v21 = sub_4038C();
  type metadata accessor for DomesticViolenceCATs(0LL);
  sub_40380();
  uint64_t v20 = sub_4038C();
  type metadata accessor for PoisonControlCATs(0LL);
  sub_40380();
  uint64_t v19 = sub_4038C();
  type metadata accessor for SexualAssaultCATs(0LL);
  sub_40380();
  uint64_t v18 = sub_4038C();
  type metadata accessor for SuicidePreventionCATs(0LL);
  sub_40380();
  uint64_t v17 = sub_4038C();
  type metadata accessor for EmergencyDomesticViolenceBasicIntentCATs(0LL);
  sub_40380();
  uint64_t v5 = sub_4038C();
  type metadata accessor for EmergencyPoisonControlBasicIntentCATs(0LL);
  sub_40380();
  uint64_t v6 = sub_4038C();
  type metadata accessor for EmergencySexualAssaultBasicIntentCATs(0LL);
  sub_40380();
  uint64_t v7 = sub_4038C();
  type metadata accessor for EmergencySuicidePreventionBasicIntentCATs(0LL);
  sub_40380();
  uint64_t v8 = sub_4038C();
  type metadata accessor for EmergencyGeneralEmergencyCATs(0LL);
  sub_40380();
  uint64_t v9 = sub_4038C();
  type metadata accessor for SirenCATs(0LL);
  sub_40380();
  uint64_t v10 = sub_4038C();
  static CATOption.defaultMode.getter();
  uint64_t v11 = type metadata accessor for CommonCATs(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = sub_46B4((uint64_t)v4, 0LL);
  type metadata accessor for EmergencyErrorsCATs(0LL);
  sub_40380();
  uint64_t result = sub_4038C();
  uint64_t v14 = v21;
  *a1 = v22;
  a1[1] = v14;
  uint64_t v15 = v19;
  a1[2] = v20;
  a1[3] = v15;
  uint64_t v16 = v17;
  a1[4] = v18;
  a1[5] = v16;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = v8;
  a1[10] = v9;
  a1[11] = v10;
  a1[12] = v12;
  a1[13] = result;
  return result;
}

uint64_t destroy for EmergencyCATProvider(void *a1)
{
  return swift_release(a1[13]);
}

uint64_t *initializeWithCopy for EmergencyCATProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  a1[6] = v9;
  a1[7] = v10;
  uint64_t v11 = a2[8];
  uint64_t v12 = a2[9];
  a1[8] = v11;
  a1[9] = v12;
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  a1[10] = v14;
  a1[11] = v15;
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  a1[12] = v16;
  a1[13] = v17;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  swift_retain(v17);
  return a1;
}

uint64_t *assignWithCopy for EmergencyCATProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  uint64_t v8 = a2[2];
  uint64_t v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  uint64_t v10 = a2[3];
  uint64_t v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  uint64_t v12 = a2[4];
  uint64_t v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  uint64_t v14 = a2[5];
  uint64_t v15 = a1[5];
  a1[5] = v14;
  swift_retain(v14);
  swift_release(v15);
  uint64_t v16 = a2[6];
  uint64_t v17 = a1[6];
  a1[6] = v16;
  swift_retain(v16);
  swift_release(v17);
  uint64_t v18 = a2[7];
  uint64_t v19 = a1[7];
  a1[7] = v18;
  swift_retain(v18);
  swift_release(v19);
  uint64_t v20 = a2[8];
  uint64_t v21 = a1[8];
  a1[8] = v20;
  swift_retain(v20);
  swift_release(v21);
  uint64_t v22 = a2[9];
  uint64_t v23 = a1[9];
  a1[9] = v22;
  swift_retain(v22);
  swift_release(v23);
  uint64_t v24 = a2[10];
  uint64_t v25 = a1[10];
  a1[10] = v24;
  swift_retain(v24);
  swift_release(v25);
  uint64_t v26 = a2[11];
  uint64_t v27 = a1[11];
  a1[11] = v26;
  swift_retain(v26);
  swift_release(v27);
  uint64_t v28 = a2[12];
  uint64_t v29 = a1[12];
  a1[12] = v28;
  swift_retain(v28);
  swift_release(v29);
  uint64_t v30 = a2[13];
  uint64_t v31 = a1[13];
  a1[13] = v30;
  swift_retain(v30);
  swift_release(v31);
  return a1;
}

void *initializeWithTake for EmergencyCATProvider(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

void *assignWithTake for EmergencyCATProvider(void *a1, _OWORD *a2)
{
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(a1[2]);
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_release(v5);
  swift_release(a1[4]);
  uint64_t v6 = a1[5];
  *((_OWORD *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a2[2];
  swift_release(v6);
  swift_release(a1[6]);
  uint64_t v7 = a1[7];
  *((_OWORD *)a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = a2[3];
  swift_release(v7);
  swift_release(a1[8]);
  uint64_t v8 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  swift_release(v8);
  swift_release(a1[10]);
  uint64_t v9 = a1[11];
  *((_OWORD *)a1 + 5) = a2[5];
  swift_release(v9);
  swift_release(a1[12]);
  uint64_t v10 = a1[13];
  *((_OWORD *)a1 + 6) = a2[6];
  swift_release(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyCATProvider(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 112))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyCATProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0LL;
    *(_OWORD *)(result + 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_OWORD *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + sub_60A4(v0 + 16, v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyCATProvider()
{
  return &type metadata for EmergencyCATProvider;
}

uint64_t sub_40380()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_4038C()
{
  return CATWrapper.__allocating_init(options:globals:)(v0, 0LL);
}

void sub_40398(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_6740();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_3324(a2, v13);
  char v15 = dispatch thunk of DeviceState.isHomePod.getter(v13, v14);
  sub_3B68((uint64_t)a2, (uint64_t)v32);
  if ((v15 & 1) != 0)
  {
    uint64_t v16 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v32);
  }

  else
  {
    char v17 = sub_4808C(v32);
    uint64_t v16 = sub_409F0();
    if ((v17 & 1) != 0)
    {
      id v18 = sub_28F84(a1, a2);
      uint64_t v19 = sub_3974((uint64_t *)&unk_7A390);
      uint64_t v20 = sub_2F670(v19);
      *(_OWORD *)(v20 + 16) = xmmword_56DC0;
      uint64_t v21 = sub_2F670(v19);
      *(_OWORD *)(v21 + 16) = xmmword_56DC0;
      *(void *)(v21 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v18;
      uint64_t v31 = v21;
      sub_409C0();
      sub_3324(a2, a2[3]);
      id v22 = v18;
      char v23 = sub_409D8();
      sub_40850(a3, a4, v31, v23 & 1);
      sub_409E4();
      *(void *)(v20 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v18;
      sub_409C0();

      goto LABEL_8;
    }
  }

  uint64_t v24 = Logger.emergency.unsafeMutableAddressor(v16);
  sub_409B0(v24);
  uint64_t v25 = sub_409C8();
  uint64_t v27 = v26(v25);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_0, v28, v29, "Device is HomePod or calling is not supported. Not making call button.", v30, 2u);
    sub_3CA0((uint64_t)v30);
  }

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
LABEL_8:
  sub_7DF0();
}

void sub_40590(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v7);
  sub_6740();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_6740();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  sub_3324(a2, v16);
  char v18 = dispatch thunk of DeviceState.isHomePod.getter(v16, v17);
  sub_3B68((uint64_t)a2, (uint64_t)v40);
  if ((v18 & 1) != 0)
  {
    uint64_t v19 = sub_409F0();
LABEL_4:
    uint64_t v23 = Logger.emergency.unsafeMutableAddressor(v19);
    sub_409B0(v23);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v23, v11);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)sub_8D14();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "Device is HomePod or AppleTV. Not making website button.", v27, 2u);
      sub_3CA0((uint64_t)v27);
    }

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
    goto LABEL_10;
  }

  uint64_t v20 = v41;
  uint64_t v21 = v42;
  sub_3324(v40, v41);
  char v22 = dispatch thunk of DeviceState.isAppleTV.getter(v20, v21);
  uint64_t v19 = sub_409F0();
  if ((v22 & 1) != 0) {
    goto LABEL_4;
  }
  id v28 = [objc_allocWithZone(SAUIAppPunchOut) init];
  sub_AE7C(a1, v10);
  uint64_t v29 = type metadata accessor for URL(0LL);
  uint64_t v31 = 0LL;
  if (sub_5FE0(v10, 1LL, v29) != 1)
  {
    URL._bridgeToObjectiveC()(v30);
    uint64_t v31 = v32;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8LL))(v10, v29);
  }

  [v28 setPunchOutUri:v31];

  uint64_t v33 = sub_3974((uint64_t *)&unk_7A390);
  uint64_t v34 = sub_2F670(v33);
  *(_OWORD *)(v34 + 16) = xmmword_56DC0;
  uint64_t v35 = sub_2F670(v33);
  *(_OWORD *)(v35 + 16) = xmmword_56DC0;
  *(void *)(v35 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v28;
  uint64_t v39 = v35;
  sub_409C0();
  sub_3324(a2, a2[3]);
  id v36 = v28;
  char v37 = sub_409D8();
  sub_40850(a3, a4, v39, v37 & 1);
  sub_409E4();
  *(void *)(v34 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a1;
  sub_409C0();

LABEL_10:
  sub_7DF0();
}

id sub_40850(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    sub_2981C(0LL, &qword_7AE98, &OBJC_CLASS___SASTButtonItem_ptr);
    sub_409F8();
    swift_bridgeObjectRetain(a3);
    uint64_t v5 = sub_409C8();
    uint64_t v6 = SASTButtonItem.init(label:commands:centered:)(v5);
    id v7 = [objc_allocWithZone(SASTItemGroup) init];
    uint64_t v8 = sub_3974((uint64_t *)&unk_7A390);
    uint64_t v9 = sub_2F670(v8);
    *(_OWORD *)(v9 + 16) = xmmword_56DC0;
    *(void *)(v9 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v6;
    uint64_t v14 = v9;
    specialized Array._endMutation()();
    sub_4094C(v14, v7);
    return v7;
  }

  else
  {
    sub_2981C(0LL, (unint64_t *)&qword_7AE90, &OBJC_CLASS___SAUIButton_ptr);
    sub_409F8();
    swift_bridgeObjectRetain(a3);
    uint64_t v11 = sub_409C8();
    return sub_2886C(v11, v12, v13);
  }

void sub_4094C(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setTemplateItems:isa];
}

uint64_t sub_409B0(uint64_t a1)
{
  return swift_beginAccess(a1, v1 - 144, 0LL, 0LL);
}

uint64_t sub_409C0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_409C8()
{
  return v0;
}

uint64_t sub_409D8()
{
  return dispatch thunk of DeviceState.isWatch.getter(v0, v1);
}

uint64_t sub_409E4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_409F0()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 120));
}

uint64_t sub_409F8()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t type metadata accessor for SuicidePreventionModernCATs(uint64_t a1)
{
  uint64_t result = qword_7AF10;
  if (!qword_7AF10) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SuicidePreventionModernCATs);
  }
  return result;
}

uint64_t sub_40A3C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B938);
}

uint64_t sub_40A78(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7AF24);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9CF8;
  return sub_40B18(a1);
}

uint64_t sub_40AC8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7AF2C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_9E08;
  return sub_40C54(a1);
}

uint64_t sub_40B18(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_40B58()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  strcpy((char *)(v3 + 32), "websearchQuery");
  *(_BYTE *)(v3 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = -18;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    id v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  uint64_t v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A4F8;
  return sub_9E10(0xD000000000000026LL, 0x800000000005AFE0LL, v3, v10);
}

uint64_t sub_40C54(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[4] = sub_9E84(v3);
  sub_4588();
  return sub_451C();
}

uint64_t sub_40C94()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_3974(&qword_78BB8);
  uint64_t v3 = sub_ACC8(v2);
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_56FA0;
  *(void *)(v3 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v3 + 40) = 0xE700000000000000LL;
  sub_9EF0(v3, v4, &qword_78970);
  uint64_t v5 = type metadata accessor for SpeakableString(0LL);
  sub_9F30(v5);
  if (v6)
  {
    sub_7784(v1, &qword_78970);
    *(_OWORD *)(v3 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }

  else
  {
    id v7 = sub_9EFC();
    sub_9E98((uint64_t)v7);
  }

  uint64_t v8 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1A6B4;
  return sub_9E10(0xD000000000000027LL, 0x800000000005AFB0LL, v3, v10);
}

uint64_t sub_40D84()
{
  return type metadata accessor for SuicidePreventionModernCATs(0LL);
}

void sub_40D8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v21;
  a20 = v22;
  uint64_t v161 = v20;
  uint64_t v24 = v23;
  uint64_t v25 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v165 = *(void *)(v25 - 8);
  sub_EDD8();
  __chkstk_darwin(v26);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v27);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v28);
  sub_1300C();
  uint64_t v172 = v29;
  uint64_t v30 = sub_1FC8C();
  type metadata accessor for EmergencyNLIntent(v30);
  sub_6764();
  __chkstk_darwin(v31);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v32);
  sub_1300C();
  uint64_t v164 = v33;
  uint64_t v34 = sub_1FC8C();
  uint64_t v163 = type metadata accessor for NLIntent(v34);
  uint64_t v168 = *(void *)(v163 - 8);
  sub_EDD8();
  __chkstk_darwin(v35);
  sub_6750();
  uint64_t v167 = v36;
  uint64_t v37 = sub_1FC8C();
  type metadata accessor for Siri_Nlu_External_UserParse(v37);
  sub_6764();
  __chkstk_darwin(v38);
  sub_6750();
  uint64_t v154 = v39;
  uint64_t v40 = sub_1FC8C();
  type metadata accessor for EmergencyDialogAct(v40);
  sub_6764();
  __chkstk_darwin(v41);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v42);
  sub_1300C();
  uint64_t v153 = v43;
  uint64_t v44 = sub_1FC8C();
  uint64_t v152 = type metadata accessor for USOParse(v44);
  uint64_t v151 = *(void *)(v152 - 8);
  sub_EDD8();
  __chkstk_darwin(v45);
  sub_6750();
  uint64_t v159 = v46;
  uint64_t v47 = sub_1FC8C();
  uint64_t v48 = type metadata accessor for Parse(v47);
  uint64_t v173 = *(uint64_t (***)(uint64_t, uint64_t))(v48 - 8);
  sub_EDD8();
  __chkstk_darwin(v49);
  sub_6750();
  uint64_t v171 = v50;
  uint64_t v51 = sub_1FC8C();
  uint64_t v52 = type metadata accessor for Input(v51);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  sub_6740();
  uint64_t v56 = v55 - v54;
  uint64_t v57 = sub_6820();
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v59);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v60);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v61);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v62);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v63);
  sub_EE64();
  sub_ED8C();
  uint64_t v65 = __chkstk_darwin(v64);
  uint64_t v67 = (char *)v146 - v66;
  uint64_t v68 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v65);
  sub_3CC8((uint64_t)v68, (uint64_t)v180);
  uint64_t v166 = v58;
  uint64_t v169 = *(void (**)(char *, os_log_s *, uint64_t))(v58 + 16);
  char v170 = v68;
  uint64_t v174 = v57;
  v169(v67, v68, v57);
  uint64_t v69 = sub_44994(v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
  Logger.logObject.getter(v69);
  os_log_type_t v70 = sub_EEB4();
  if (sub_12F10(v70))
  {
    v146[1] = v24;
    uint64_t v71 = sub_3CD4(12LL);
    uint64_t v148 = v25;
    uint64_t v72 = (uint8_t *)v71;
    uint64_t v73 = sub_3CD4(32LL);
    uint64_t v147 = v48;
    uint64_t v74 = v73;
    v175[0] = v73;
    *(_DWORD *)uint64_t v72 = 136315138;
    v146[0] = v72 + 4;
    sub_EF34( &qword_790C0,  v75,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter(v52, v76);
    unint64_t v79 = v78;
    uint64_t v177 = sub_543A4(v77, v78, v175);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v178, v146[0], v72 + 12);
    swift_bridgeObjectRelease(v79);
    sub_44974();
    _os_log_impl(&dword_0, v68, (os_log_type_t)v58, "#EmergencyBasicFlow onInput: %s", v72, 0xCu);
    sub_67DC(v74);
    uint64_t v80 = v74;
    uint64_t v48 = v147;
    sub_3CA0(v80);
    uint64_t v81 = (uint64_t)v72;
    uint64_t v25 = v148;
    sub_3CA0(v81);
  }

  else
  {
    sub_44974();
  }

  uint64_t v82 = sub_19B5C((uint64_t)v67);
  uint64_t v83 = v171;
  Input.parse.getter(v82);
  uint64_t v84 = (uint64_t)v173;
  int v85 = v173[11](v83, v48);
  uint64_t v86 = v172;
  uint64_t v87 = (uint64_t)v170;
  if (v85 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_44904();
    uint64_t v88 = v163;
    sub_449BC(v167, v83, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 32));
    sub_3CC8(v87, (uint64_t)&v177);
    sub_448EC(v162);
    sub_13104();
    os_log_type_t v89 = sub_EEB4();
    if (sub_EDE4(v89))
    {
      uint64_t v90 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v90);
      sub_18240(&dword_0, v91, v92, "#EmergencyBasicFlow onInput .NLv3IntentOnly");
      sub_3CA0(v83);
    }

    sub_44984();
    uint64_t v94 = v167;
    uint64_t v93 = v168;
    uint64_t v95 = v164;
    sub_449BC(v164, v167, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 16));
    sub_233A8(v95, (uint64_t)&a14);
    sub_445C0();
    sub_44948();
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v88);
    goto LABEL_18;
  }

  if (v85 == enum case for Parse.directInvocation(_:))
  {
    sub_44904();
    sub_449BC(v86, v83, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 32));
    sub_3CC8(v87, (uint64_t)v175);
    uint64_t v96 = v158;
    sub_448EC(v158);
    sub_13124();
    os_log_type_t v97 = sub_EEB4();
    if (sub_EDE4(v97))
    {
      uint64_t v98 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v98);
      sub_18240(&dword_0, v99, v100, "EmergencyBasicFlow onInput .directInvocation");
      sub_3CA0(v83);
    }

    uint64_t v101 = sub_19B5C(v96);
    uint64_t v102 = Parse.DirectInvocation.identifier.getter(v101);
    uint64_t v104 = v103;
    if (v102 == 0xD000000000000035LL && v103 == 0x800000000005B1B0LL)
    {
      swift_bridgeObjectRelease(0x800000000005B1B0LL);
    }

    else
    {
      char v119 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v103, 0xD000000000000035LL, 0x800000000005B1B0LL, 0LL);
      swift_bridgeObjectRelease(v104);
      if ((v119 & 1) == 0) {
        goto LABEL_25;
      }
    }

    __int16 v120 = sub_28990(v86);
    if (v120 != 35)
    {
      LOWORD(v84) = v120;
      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v86, v25);
      LOWORD(v8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 3) = 4;
LABEL_30:
      *(_WORD *)(v161 + sub_60A4(v0 + 256, v0 + 216) = v83 | ((_WORD)v84 << 8);
      goto LABEL_34;
    }

uint64_t sub_4187C(uint64_t a1)
{
  v2[132] = v1;
  v2[131] = a1;
  uint64_t v3 = sub_3974(&qword_78970);
  v2[133] = sub_9E84(v3);
  uint64_t v4 = sub_3974(&qword_7A170);
  v2[134] = sub_9E84(v4);
  uint64_t v5 = sub_3974(&qword_78958);
  v2[135] = v5;
  v2[136] = sub_9E84(v5);
  uint64_t v6 = sub_6820();
  v2[137] = v6;
  v2[138] = *(void *)(v6 - 8);
  v2[139] = sub_45A0();
  v2[140] = sub_45A0();
  v2[141] = sub_45A0();
  return swift_task_switch(sub_4192C, 0LL, 0LL);
}

uint64_t sub_4192C(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(v1 + 1128);
  uint64_t v3 = *(void *)(v1 + 1104);
  uint64_t v4 = *(uint8_t **)(v1 + 1096);
  uint64_t v5 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(a1);
  *(void *)(v1 + 1136) = v5;
  sub_3CC8((uint64_t)v5, v1 + 1016);
  uint64_t v6 = *(uint64_t (**)(os_log_s *, os_log_s *, uint8_t *))(v3 + 16);
  *(void *)(v1 + 1144) = v6;
  uint64_t v7 = v6(v2, v5, v4);
  uint64_t v8 = v2;
  Logger.logObject.getter(v7);
  os_log_type_t v9 = sub_67D4();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (_WORD *)sub_3CD4(2LL);
    sub_182E4(v10);
    sub_EDA8(&dword_0, v8, v9, "#EmergencyBasicFlow execute", v4);
    sub_3CA0((uint64_t)v4);
  }

  uint64_t v11 = *(void *)(v1 + 1128);
  uint64_t v12 = *(void *)(v1 + 1104);
  uint64_t v13 = *(void *)(v1 + 1096);
  uint64_t v14 = *(void *)(v1 + 1056);

  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  *(void *)(v1 + 115_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v15;
  uint64_t v16 = v15(v11, v13);
  uint64_t v17 = *(unsigned __int16 *)(v14 + 216);
  *(_WORD *)(v1 + 116_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v17;
  if (v17 == 5)
  {
    uint64_t v13 = *(void *)(v1 + 1056);
    uint64_t v8 = *(os_log_s **)(v1 + 1048);
    unint64_t v18 = sub_E94C();
    uint64_t v17 = swift_allocError(&type metadata for EmergencyFlowError, v18, 0LL, 0LL);
    *uint64_t v19 = 2;
    sub_30F8(v17, v13 + 16, (void *)(v13 + 56), (uint64_t)v8);
    swift_errorRelease(v17);
    goto LABEL_7;
  }

  if (v17 == 6)
  {
    static ExecuteResponse.complete()(v16);
LABEL_7:
    sub_44914();
    swift_task_dealloc(v8);
    swift_task_dealloc(v17);
    swift_task_dealloc(v13);
    swift_task_dealloc(v5);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v21 = v1 + 272;
  uint64_t v22 = *(os_log_s **)(v1 + 1120);
  uint64_t v23 = *(uint8_t **)(v1 + 1096);
  sub_3CC8((uint64_t)v5, v1 + 992);
  uint64_t v24 = v6(v22, v5, v23);
  Logger.logObject.getter(v24);
  os_log_type_t v25 = sub_449A8();
  BOOL v26 = os_log_type_enabled(v5, v25);
  uint64_t v27 = *(void *)(v1 + 1120);
  uint64_t v28 = *(void *)(v1 + 1096);
  if (v26)
  {
    uint64_t v39 = *(void *)(v1 + 1120);
    uint64_t v38 = *(void *)(v1 + 1096);
    uint64_t v29 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v30 = sub_3CD4(32LL);
    uint64_t v40 = v30;
    *uint64_t v29 = 136315138;
    *(_WORD *)(v1 + 1170) = v17;
    uint64_t v31 = String.init<A>(describing:)(v1 + 1170);
    unint64_t v33 = v32;
    *(void *)(v1 + 1040) = sub_543A4(v31, v32, &v40);
    uint64_t v21 = v1 + 272;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1040, v1 + 1048, v29 + 1, v29 + 3);
    swift_bridgeObjectRelease(v33);
    sub_448F8(&dword_0, v5, v25, "#EmergencyBasicFlow needsExecution intent: %s");
    sub_67DC(v30);
    sub_3CA0(v30);
    sub_3CA0((uint64_t)v29);

    uint64_t v35 = v38;
    uint64_t v34 = v39;
  }

  else
  {

    uint64_t v34 = v27;
    uint64_t v35 = v28;
  }

  v15(v34, v35);
  uint64_t v36 = *(void *)(v1 + 1056) + 136LL;
  uint64_t v37 = (void *)swift_task_alloc(dword_7964C);
  *(void *)(v1 + 1160) = v37;
  *uint64_t v37 = v1;
  v37[1] = sub_41C60;
  return sub_145A8(v21, v36, SBYTE1(v17), v17);
}

uint64_t sub_41C60()
{
  uint64_t v1 = *(void *)v0 + 272LL;
  uint64_t v2 = *(void *)v0 + 528LL;
  swift_task_dealloc(*(void *)(*(void *)v0 + 1160LL));
  sub_2580C(v1, v2, &qword_79098);
  return swift_task_switch(sub_41CD0, 0LL, 0LL);
}

uint64_t sub_41CD0()
{
  uint64_t v1 = v0 + 272;
  uint64_t v2 = inferUsableSituation(situation:organization:)(HIBYTE(*(unsigned __int16 *)(v0 + 1168)));
  if (v2 == 35)
  {
    sub_233E8();
  }

  else
  {
    uint64_t v3 = v2;
    sub_8D20();
    if (*(void *)(v0 + 912))
    {
      uint64_t v39 = (void *)(v0 + 808);
      uint64_t v4 = *(void **)(v0 + 1056);
      sub_65A4((__int128 *)(v0 + 888), v0 + 768);
      uint64_t v6 = v4[5];
      uint64_t v5 = v4[6];
      sub_3324(v4 + 2, v6);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v5);
      sub_2580C(v0 + 272, v0 + 144, &qword_79098);
      int v7 = sub_E438(v0 + 144);
      uint64_t v8 = *(void *)(v0 + 1080);
      uint64_t v9 = *(void *)(v0 + 1072);
      if (v7 == 1)
      {
        uint64_t v10 = *(void *)(v0 + 1072);
        uint64_t v11 = 1LL;
      }

      else
      {
        sub_2580C(v0 + 528, v0 + 400, &qword_79098);
        sub_EE84((void *)(v0 + 16), (const void *)(v0 + 400));
        sub_3CDC((void *)(v0 + 768));
        uint64_t v10 = v9;
        uint64_t v11 = 0LL;
      }

      sub_3F18(v10, v11, 1LL, v8);
      uint64_t v26 = *(void *)(v0 + 1080);
      uint64_t v27 = *(void *)(v0 + 1072);
      sub_60A4(v0 + 768, (uint64_t)v39);
      uint64_t v38 = (void *)(v0 + 848);
      sub_60A4(v0 + 928, v0 + 848);
      int v28 = sub_5FE0(v27, 1LL, v26);
      uint64_t v29 = *(void *)(v0 + 1088);
      uint64_t v30 = *(void *)(v0 + 1072);
      if (v28 == 1)
      {
        uint64_t v31 = *(void *)(v0 + 1064);
        uint64_t v32 = *(void *)(v0 + 832);
        uint64_t v33 = *(void *)(v0 + 840);
        sub_3324(v39, v32);
        uint64_t v34 = type metadata accessor for SpeakableString(0LL);
        sub_3F18(v31, 1LL, 1LL, v34);
        char v35 = sub_4808C(v38);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 8))(v31, v35 & 1, v32, v33);
        sub_E988(v31, &qword_78970);
        _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v38);
        sub_E988(v30, &qword_7A170);
      }

      else
      {
        _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v38);
        sub_2580C(v30, v29, &qword_78958);
      }

      uint64_t v21 = *(void *)(v0 + 1088);
      uint64_t v36 = *(void *)(v0 + 1056);
      uint64_t v23 = *(void *)(v0 + 1048);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v39);
      sub_3324((void *)(v36 + 176), *(void *)(v36 + 200));
      uint64_t v25 = sub_42398();
      sub_233E8();
      static ExecuteResponse.complete(next:)(v25);
      sub_EE0C();
      sub_E988(v21, &qword_78958);
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 928));
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 768));
      goto LABEL_15;
    }

    sub_233E8();
    sub_E988(v0 + 888, &qword_79820);
  }

  uint64_t v1 = v0 + 656;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1144);
  uint64_t v13 = *(void *)(v0 + 1136);
  uint64_t v14 = *(void *)(v0 + 1112);
  uint64_t v15 = *(void *)(v0 + 1096);
  sub_3CC8(v13, v0 + 968);
  uint64_t v16 = v12(v14, v13, v15);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (sub_182AC(v18))
  {
    uint64_t v19 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v19 = 0;
    sub_EDA8(&dword_0, v17, (os_log_type_t)v14, "#EmergencyBasicFlow Failed to pick a catWrapper", v19);
    sub_3CA0((uint64_t)v19);
  }

  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
  uint64_t v21 = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v0 + 1096);
  uint64_t v22 = *(void *)(v0 + 1056);
  uint64_t v23 = *(void *)(v0 + 1048);

  v20(v21, v3);
  uint64_t v24 = sub_3324((void *)(v22 + 56), *(void *)(v22 + 80));
  memcpy((void *)(v0 + 656), v24, 0x70uLL);
  uint64_t v25 = sub_37CC(v22 + 16, (void *)(v0 + 656));
  static ExecuteResponse.complete(next:)(v25);
  sub_EE0C();
LABEL_15:
  sub_44914();
  swift_task_dealloc(v25);
  swift_task_dealloc(v1);
  swift_task_dealloc(v21);
  swift_task_dealloc(v3);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_420C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyBasicFlow();
  sub_EB44( &qword_7B090,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyBasicFlow,  (uint64_t)&unk_59DA8);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t type metadata accessor for EmergencyBasicFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin18EmergencyBasicFlow);
}

uint64_t getEnumTagSinglePayload for EmergencyBasicFlow.EmergencyBasicFlowState( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA)
  {
    if (*a1 <= 4u) {
      int v6 = 4;
    }
    else {
      int v6 = *a1;
    }
    unsigned int v7 = v6 - 4;
    if (*a1 >= 4u) {
      unsigned int v8 = v7;
    }
    else {
      unsigned int v8 = 0;
    }
    if (v8 >= 3) {
      return v8 - 2;
    }
    else {
      return 0LL;
    }
  }

  else
  {
    unsigned int v2 = a2 + 65286;
    if (a2 + 65286 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_421A0 + 4 * byte_59CE0[v4]))();
  }

uint64_t storeEnumTagSinglePayload for EmergencyBasicFlow.EmergencyBasicFlowState( _WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65286;
  if (a3 + 65286 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    LODWORD(v5) = v4;
  }
  else {
    LODWORD(v5) = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_4225C + 4 * byte_59CEA[v5]))();
  }
  *a1 = a2 - 250;
  return ((uint64_t (*)(void))((char *)sub_42290 + 4 * byte_59CE5[v5]))();
}

uint64_t sub_42290(uint64_t result)
{
  *(_BYTE *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_42298(uint64_t result, int a2)
{
  *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  if (a2) {
    JUMPOUT(0x422A0LL);
  }
  return result;
}

uint64_t sub_422AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  if (!a2) {
    JUMPOUT(0x422B4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_422B8(uint64_t result)
{
  *(_DWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

uint64_t sub_422C0(uint64_t result)
{
  *(_WORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyBasicFlow.EmergencyBasicFlowState()
{
  return &type metadata for EmergencyBasicFlow.EmergencyBasicFlowState;
}

#error "422EC: call analysis failed (funcsize=9)"
uint64_t sub_42300(uint64_t a1, uint64_t a2)
{
  return sub_420C0(a1, a2);
}

uint64_t sub_42320(uint64_t a1)
{
  unsigned int v3 = (void *)swift_task_alloc(dword_7AFAC);
  *(void *)(v1 + 16) = v3;
  *unsigned int v3 = v1;
  v3[1] = sub_5F44;
  return sub_4187C(a1);
}

uint64_t sub_42374(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyBasicFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_42398()
{
  uint64_t v69 = v1;
  uint64_t v70 = v2;
  uint64_t v57 = v3;
  uint64_t v58 = v0;
  uint64_t v5 = (uint64_t *)v4;
  int v54 = v6;
  sub_25B84(v4, (uint64_t)v64);
  sub_25B84((uint64_t)v64, (uint64_t)v68);
  sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v7);
  sub_6750();
  uint64_t v55 = v8;
  uint64_t v9 = sub_1FC8C();
  uint64_t v56 = type metadata accessor for OutputFlow(v9);
  sub_6764();
  __chkstk_darwin(v10);
  sub_6740();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_6820();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v18 = (os_log_s *)((char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v16);
  sub_1300C();
  uint64_t v52 = (os_log_s *)v19;
  sub_3974(&qword_7A168);
  sub_6764();
  __chkstk_darwin(v20);
  sub_6740();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_131A0();
  sub_6764();
  __chkstk_darwin(v25);
  sub_66F4();
  uint64_t v53 = v26;
  __chkstk_darwin(v27);
  sub_1300C();
  uint64_t v29 = v28;
  sub_25B84((uint64_t)v5, (uint64_t)v65);
  uint64_t v30 = sub_E438((uint64_t)v65);
  if ((_DWORD)v30 == 1) {
    goto LABEL_4;
  }
  sub_EE84(v66, v65);
  sub_2580C((uint64_t)v68, (uint64_t)v63, &qword_79098);
  sub_6408(v63);
  sub_4284C();
  if (sub_5FE0(v23, 1LL, v24) == 1)
  {
    sub_E864(v5);
    sub_E988(v23, &qword_7A168);
LABEL_4:
    uint64_t v31 = Logger.emergency.unsafeMutableAddressor(v30);
    sub_3CC8(v31, (uint64_t)v67);
    uint64_t v32 = sub_18474((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
    Logger.logObject.getter(v32);
    os_log_type_t v33 = sub_67D4();
    if (os_log_type_enabled(v18, v33))
    {
      uint64_t v34 = (uint8_t *)sub_3CD4(2LL);
      *(_WORD *)uint64_t v34 = 0;
      sub_EDA8(&dword_0, v18, v33, "#EmergencyBasicFlow preparing promptless output", v34);
      sub_3CA0((uint64_t)v34);
    }

    (*(void (**)(os_log_s *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t v35 = v55;
    sub_257D0(v57, v55, &qword_78958);
    sub_60A4(v58, (uint64_t)v63);
    OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v35, &_swiftEmptyArrayStorage, v63, 0LL);
    uint64_t v36 = (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow;
    sub_EB44( &qword_78960,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for OutputFlow,  (uint64_t)&protocol conformance descriptor for OutputFlow);
    uint64_t v37 = Flow.eraseToAnyFlow()(v56);
    goto LABEL_10;
  }

  uint64_t v13 = v29;
  sub_EB18(v23, v29, type metadata accessor for ConfirmationFlowConfigModel);
  uint64_t v39 = Logger.emergency.unsafeMutableAddressor(v38);
  sub_3CC8(v39, (uint64_t)&v62);
  uint64_t v40 = v52;
  uint64_t v41 = sub_18474((uint64_t)v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  Logger.logObject.getter(v41);
  os_log_type_t v42 = sub_67D4();
  if (sub_182AC(v42))
  {
    uint64_t v43 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v43 = 0;
    sub_EDA8(&dword_0, v40, (os_log_type_t)v18, "#EmergencyBasicFlow preparing for confirmation", v43);
    sub_3CA0((uint64_t)v43);
  }

  (*(void (**)(os_log_s *, uint64_t))(v15 + 8))(v40, v14);
  uint64_t v44 = v58;
  sub_60A4(v58, (uint64_t)v61);
  sub_60A4(v44 + 40, (uint64_t)v60);
  sub_60E4(v44 + 80, (uint64_t)v59);
  uint64_t v45 = sub_6120((uint64_t)v60, v60[3]);
  __chkstk_darwin(v45);
  sub_3D310();
  (*(void (**)(uint64_t))(v46 + 16))(v15);
  uint64_t v36 = type metadata accessor for ConfirmationFlowConfigModel;
  uint64_t v47 = v53;
  sub_EAC4(v29, v53, type metadata accessor for ConfirmationFlowConfigModel);
  memcpy(v67, (const void *)v15, sizeof(v67));
  uint64_t v48 = sub_54D28(v66, v47, v61, v67, (uint64_t)v59, 0, 0LL, 0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v60);
  *(void *)&v61[0] = v48;
  uint64_t v49 = type metadata accessor for EmergencyConfirmationFlow();
  sub_EF34( &qword_78B38,  v50,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationFlow,  (uint64_t)&unk_56F48);
  uint64_t v37 = Flow.eraseToAnyFlow()(v49);
  swift_release(v48);
LABEL_10:
  sub_EAF0(v13, v36);
  return v37;
}

uint64_t sub_4284C()
{
  void (*v60)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void v68[2];
  uint64_t v69;
  uint64_t v70;
  void v71[17];
  _BYTE v72[136];
  _BYTE v73[216];
  uint64_t v74;
  uint64_t v75;
  sub_9460();
  uint64_t v74 = v1;
  uint64_t v75 = v2;
  uint64_t v3 = v0;
  uint64_t v64 = v4;
  int v6 = v5;
  int v8 = v7;
  uint64_t v66 = v9;
  sub_EE84(v73, v5);
  uint64_t v10 = sub_3974(&qword_78958);
  sub_6764();
  __chkstk_darwin(v11);
  sub_6750();
  uint64_t v63 = v12;
  sub_3974((uint64_t *)&unk_7AE80);
  sub_6764();
  __chkstk_darwin(v13);
  sub_6740();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for AppPunchOutFlow(0LL);
  sub_6764();
  __chkstk_darwin(v18);
  sub_6740();
  uint64_t v21 = v20 - v19;
  sub_3974(&qword_7A170);
  sub_6764();
  __chkstk_darwin(v22);
  sub_66F4();
  uint64_t v65 = v23;
  uint64_t v25 = __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v59 - v26;
  uint64_t v67 = v10;
  sub_3F18((uint64_t)&v59 - v26, 1LL, 1LL, v10);
  if ((sub_3282C() & 1) != 0)
  {
    sub_60A4((uint64_t)v3, (uint64_t)v68);
    sub_60A4((uint64_t)(v3 + 5), (uint64_t)&v70);
    sub_EE84(v72, v73);
    sub_180EC((uint64_t)v72);
    sub_E9BC(v72, v71);
    sub_6408(v6);
    sub_E9F8();
    uint64_t v28 = Flow.eraseToAnyFlow()(&type metadata for CallFlow);
    sub_EA34((uint64_t)v68);
    sub_44930(v3 + 5, v3[8]);
    sub_235D8();
    sub_EE0C();
    sub_4495C();
    sub_448C0();
    sub_44968();
    char v31 = sub_42D2C(v29, v30);
    char v32 = 0;
    unint64_t v33 = 2LL;
    goto LABEL_8;
  }

  uint64_t v62 = v27;
  sub_44968();
  if ((sub_330B4() & 1) == 0)
  {
    sub_44968();
    if ((sub_33DAC(v43, v44) & 1) == 0)
    {
      uint64_t v51 = (uint64_t)v62;
      goto LABEL_12;
    }

    uint64_t v45 = v6[13];
    uint64_t v61 = v6[12];
    uint64_t v46 = v3[3];
    uint64_t v47 = v3[4];
    sub_449B0();
    uint64_t v60 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v47 + 16);
    swift_bridgeObjectRetain(v45);
    v60(&v69, v46, v47);
    v68[0] = v61;
    v68[1] = v45;
    sub_18188();
    uint64_t v48 = Flow.eraseToAnyFlow()(&type metadata for WebsearchFlow);
    sub_181C4((uint64_t)v68);
    sub_44930(v3 + 5, v3[8]);
    sub_2398C();
    sub_EE0C();
    uint64_t v27 = v62;
    sub_4495C();
    char v32 = 1;
    sub_448C0();
    uint64_t v28 = v48;
    sub_44968();
    char v31 = sub_43B4C(v49, v50);
    unint64_t v33 = 4LL;
LABEL_8:
    uint64_t v51 = v65;
    sub_2580C((uint64_t)v27, v65, &qword_7A170);
    if (sub_5FE0(v51, 1LL, v67) != 1)
    {
      uint64_t v52 = v51;
      uint64_t v53 = v63;
      sub_2580C(v52, v63, &qword_78958);
      uint64_t v54 = v66;
      sub_257D0(v64, v66, &qword_78958);
      uint64_t v55 = (int *)sub_131A0();
      sub_2580C(v53, v54 + v55[5], &qword_78958);
      *(void *)(v54 + v55[6]) = v28;
      *(void *)(v54 + v55[7]) = v33;
      *(_BYTE *)(v54 + v55[8]) = v32;
      *(_BYTE *)(v54 + v55[9]) = v31 & 1;
      uint64_t v56 = v54;
      uint64_t v57 = 0LL;
      uint64_t v58 = (uint64_t)v55;
      return sub_3F18(v56, v57, 1LL, v58);
    }

    sub_257FC(v33);
    swift_release(v28);
LABEL_12:
    sub_E988(v51, &qword_7A170);
    uint64_t v58 = sub_131A0();
    uint64_t v56 = v66;
    uint64_t v57 = 1LL;
    return sub_3F18(v56, v57, 1LL, v58);
  }

  LODWORD(v61) = v8;
  uint64_t v34 = v3[3];
  uint64_t v35 = v3[4];
  sub_449B0();
  uint64_t v36 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 16))(v68, v34, v35);
  EmergencyOrganizationInfo.websiteURL.getter(v36);
  uint64_t v37 = type metadata accessor for URL(0LL);
  uint64_t result = sub_5FE0(v16, 1LL, v37);
  if ((_DWORD)result != 1)
  {
    AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v68, v16, 0LL, 0LL);
    sub_EB44( &qword_79828,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
    uint64_t v39 = Flow.eraseToAnyFlow()(v17);
    uint64_t v40 = v21;
    uint64_t v28 = v39;
    sub_EAF0(v40, (uint64_t (*)(void))&type metadata accessor for AppPunchOutFlow);
    sub_44930(v3 + 5, v3[8]);
    sub_2398C();
    sub_EE0C();
    uint64_t v27 = v62;
    sub_4495C();
    sub_448C0();
    sub_44968();
    char v31 = sub_432B0(v41, v42);
    char v32 = 2;
    unint64_t v33 = 3LL;
    goto LABEL_8;
  }

  __break(1u);
  return result;
}

uint64_t sub_42D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v53 = (char *)&v52 - v6;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v52 - v7;
  uint64_t v8 = type metadata accessor for ResponseMode(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_3974(&qword_7A8E0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_3974(&qword_7A8E8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v52 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v52 - v22;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v24 = static SiriEnvironment.forCurrentTask.getter();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = SiriEnvironment.currentRequest.getter();
    uint64_t v27 = swift_release(v25);
    CurrentRequest.responseMode.getter(v27);
    swift_release(v26);
    uint64_t v28 = 0LL;
  }

  else
  {
    uint64_t v28 = 1LL;
  }

  uint64_t v29 = sub_3F18((uint64_t)v23, v28, 1LL, v8);
  static ResponseMode.displayOnly.getter(v29);
  sub_3F18((uint64_t)v21, 0LL, 1LL, v8);
  uint64_t v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_257D0((uint64_t)v23, (uint64_t)v14, &qword_7A8E8);
  sub_257D0((uint64_t)v21, v30, &qword_7A8E8);
  if (sub_5FE0((uint64_t)v14, 1LL, v8) == 1)
  {
    sub_E988((uint64_t)v21, &qword_7A8E8);
    sub_E988((uint64_t)v23, &qword_7A8E8);
    if (sub_5FE0(v30, 1LL, v8) == 1)
    {
      sub_E988((uint64_t)v14, &qword_7A8E8);
      uint64_t v33 = v57;
      uint64_t v32 = v58;
      goto LABEL_16;
    }

    goto LABEL_9;
  }

  sub_257D0((uint64_t)v14, (uint64_t)v18, &qword_7A8E8);
  if (sub_5FE0(v30, 1LL, v8) == 1)
  {
    sub_E988((uint64_t)v21, &qword_7A8E8);
    sub_E988((uint64_t)v23, &qword_7A8E8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
LABEL_9:
    sub_E988((uint64_t)v14, &qword_7A8E0);
    uint64_t v33 = v57;
    uint64_t v32 = v58;
    goto LABEL_10;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v30, v8);
  sub_EB44( &qword_7A8F0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v47 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v11, v8);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v9 + 8);
  v48(v11, v8);
  sub_E988((uint64_t)v21, &qword_7A8E8);
  sub_E988((uint64_t)v23, &qword_7A8E8);
  v48(v18, v8);
  sub_E988((uint64_t)v14, &qword_7A8E8);
  uint64_t v33 = v57;
  uint64_t v32 = v58;
  if ((v47 & 1) != 0)
  {
LABEL_16:
    uint64_t v49 = Logger.emergency.unsafeMutableAddressor(v31);
    swift_beginAccess(v49, v59, 0LL, 0LL);
    uint64_t v38 = v55;
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v55, v49, v32);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v45))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      uint64_t v46 = "DisplayOnly request. Not listening after speaking.";
      goto LABEL_18;
    }

uint64_t sub_432B0(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a2;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v77 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v74 = (char *)&v74 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v75 = (char *)&v74 - v8;
  __chkstk_darwin(v7);
  unint64_t v78 = (char *)&v74 - v9;
  uint64_t v10 = type metadata accessor for ResponseMode(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_3974(&qword_7A8E0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_3974(&qword_7A8E8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v74 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v74 - v24;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v26 = static SiriEnvironment.forCurrentTask.getter();
  uint64_t v81 = v2;
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = SiriEnvironment.currentRequest.getter();
    uint64_t v29 = swift_release(v27);
    CurrentRequest.responseMode.getter(v29);
    swift_release(v28);
    uint64_t v30 = 0LL;
  }

  else
  {
    uint64_t v30 = 1LL;
  }

  uint64_t v31 = sub_3F18((uint64_t)v25, v30, 1LL, v10);
  static ResponseMode.displayOnly.getter(v31);
  sub_3F18((uint64_t)v23, 0LL, 1LL, v10);
  uint64_t v32 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_257D0((uint64_t)v25, (uint64_t)v16, &qword_7A8E8);
  sub_257D0((uint64_t)v23, v32, &qword_7A8E8);
  if (sub_5FE0((uint64_t)v16, 1LL, v10) == 1)
  {
    sub_E988((uint64_t)v23, &qword_7A8E8);
    sub_E988((uint64_t)v25, &qword_7A8E8);
    int v33 = sub_5FE0(v32, 1LL, v10);
    uint64_t v34 = v81;
    uint64_t v35 = v80;
    if (v33 == 1)
    {
      sub_E988((uint64_t)v16, &qword_7A8E8);
      goto LABEL_11;
    }

    goto LABEL_9;
  }

  sub_257D0((uint64_t)v16, (uint64_t)v20, &qword_7A8E8);
  if (sub_5FE0(v32, 1LL, v10) == 1)
  {
    sub_E988((uint64_t)v23, &qword_7A8E8);
    sub_E988((uint64_t)v25, &qword_7A8E8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    uint64_t v34 = v81;
    uint64_t v35 = v80;
LABEL_9:
    sub_E988((uint64_t)v16, &qword_7A8E0);
    goto LABEL_13;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
  sub_EB44( &qword_7A8F0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v37 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v13, v10);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v11 + 8);
  v38(v13, v10);
  sub_E988((uint64_t)v23, &qword_7A8E8);
  sub_E988((uint64_t)v25, &qword_7A8E8);
  v38(v20, v10);
  sub_E988((uint64_t)v16, &qword_7A8E8);
  uint64_t v34 = v81;
  uint64_t v35 = v80;
  if ((v37 & 1) != 0)
  {
LABEL_11:
    uint64_t v39 = Logger.emergency.unsafeMutableAddressor(v36);
    swift_beginAccess(v39, v93, 0LL, 0LL);
    uint64_t v40 = v78;
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v78, v39, v34);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v44 = 0;
      os_log_type_t v45 = "DisplayOnly request. Not listening after speaking.";
LABEL_18:
      _os_log_impl(&dword_0, v42, v43, v45, v44, 2u);
      swift_slowDealloc(v44, -1LL, -1LL);
      goto LABEL_19;
    }

    goto LABEL_19;
  }

uint64_t sub_43B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a2;
  uint64_t v81 = type metadata accessor for Logger(0LL);
  uint64_t v80 = *(void *)(v81 - 8);
  uint64_t v2 = __chkstk_darwin(v81);
  uint64_t v75 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v74 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v78 = (char *)&v74 - v7;
  __chkstk_darwin(v6);
  uint64_t v76 = (char *)&v74 - v8;
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_3974(&qword_7A8E0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_3974(&qword_7A8E8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v74 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v74 - v23;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v25 = static SiriEnvironment.forCurrentTask.getter();
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = SiriEnvironment.currentRequest.getter();
    uint64_t v28 = swift_release(v26);
    CurrentRequest.responseMode.getter(v28);
    swift_release(v27);
    uint64_t v29 = 0LL;
  }

  else
  {
    uint64_t v29 = 1LL;
  }

  uint64_t v30 = sub_3F18((uint64_t)v24, v29, 1LL, v9);
  static ResponseMode.displayOnly.getter(v30);
  sub_3F18((uint64_t)v22, 0LL, 1LL, v9);
  uint64_t v31 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_257D0((uint64_t)v24, (uint64_t)v15, &qword_7A8E8);
  sub_257D0((uint64_t)v22, v31, &qword_7A8E8);
  if (sub_5FE0((uint64_t)v15, 1LL, v9) == 1)
  {
    sub_E988((uint64_t)v22, &qword_7A8E8);
    sub_E988((uint64_t)v24, &qword_7A8E8);
    int v32 = sub_5FE0(v31, 1LL, v9);
    uint64_t v33 = v80;
    if (v32 == 1)
    {
      sub_E988((uint64_t)v15, &qword_7A8E8);
      uint64_t v35 = v81;
      goto LABEL_17;
    }

    goto LABEL_9;
  }

  sub_257D0((uint64_t)v15, (uint64_t)v19, &qword_7A8E8);
  if (sub_5FE0(v31, 1LL, v9) == 1)
  {
    sub_E988((uint64_t)v22, &qword_7A8E8);
    sub_E988((uint64_t)v24, &qword_7A8E8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    uint64_t v33 = v80;
LABEL_9:
    sub_E988((uint64_t)v15, &qword_7A8E0);
    uint64_t v35 = v81;
    goto LABEL_10;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, v31, v9);
  sub_EB44( &qword_7A8F0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v43 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v12, v9);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v10 + 8);
  v44(v12, v9);
  sub_E988((uint64_t)v22, &qword_7A8E8);
  sub_E988((uint64_t)v24, &qword_7A8E8);
  v44(v19, v9);
  sub_E988((uint64_t)v15, &qword_7A8E8);
  uint64_t v35 = v81;
  uint64_t v33 = v80;
  if ((v43 & 1) != 0)
  {
LABEL_17:
    uint64_t v45 = Logger.emergency.unsafeMutableAddressor(v34);
    swift_beginAccess(v45, v93, 0LL, 0LL);
    uint64_t v46 = v76;
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v76, v45, v35);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v50 = 0;
      uint64_t v51 = "DisplayOnly request. Not listening after speaking.";
LABEL_21:
      _os_log_impl(&dword_0, v48, v49, v51, v50, 2u);
      swift_slowDealloc(v50, -1LL, -1LL);
      goto LABEL_22;
    }

    goto LABEL_22;
  }

void sub_443EC()
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_6820();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_23400();
  void v22[3] = type metadata accessor for EmergencyDialogAct(0LL);
  v22[4] = &protocol witness table for EmergencyDialogAct;
  uint64_t v6 = sub_649C(v22);
  sub_EB18(v3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  uint64_t v8 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v7);
  sub_3CC8((uint64_t)v8, (uint64_t)&v21);
  sub_44994(v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_23470();
  Logger.logObject.getter(v9);
  os_log_type_t v10 = sub_449A8();
  if (sub_23398(v10))
  {
    uint64_t v11 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v16 = v4;
    uint64_t v12 = sub_3CD4(32LL);
    uint64_t v19 = v12;
    *uint64_t v11 = 136315138;
    sub_60A4((uint64_t)v20, (uint64_t)&v17);
    sub_3974(&qword_790C8);
    uint64_t v13 = String.init<A>(describing:)(&v17);
    unint64_t v15 = v14;
    uint64_t v17 = sub_543A4(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v11 + 1, v11 + 3);
    swift_bridgeObjectRelease(v15);
    sub_449A0();
    sub_448F8(&dword_0, v8, v1, "Converting EmergencyDialogAct to EmergencyBasicIntent: %s");
    sub_67DC(v12);
    sub_3CA0(v12);
    sub_3CA0((uint64_t)v11);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v16);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v20);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v4);
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
  sub_7DF0();
}

void sub_445C0()
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_6820();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_3D310();
  uint64_t v26 = type metadata accessor for EmergencyNLIntent(0LL);
  sub_EB44(&qword_790D0, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
  uint64_t v27 = v6;
  uint64_t v7 = sub_649C(v25);
  sub_EB18(v3, (uint64_t)v7, type metadata accessor for EmergencyNLIntent);
  uint64_t v9 = Logger.emergency.unsafeMutableAddressor(v8);
  sub_3CC8(v9, (uint64_t)&v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v9, v4);
  sub_23470();
  sub_13104();
  os_log_type_t v10 = sub_449A8();
  if (sub_23398(v10))
  {
    uint64_t v20 = v4;
    uint64_t v11 = (_DWORD *)sub_3CD4(12LL);
    uint64_t v12 = sub_3CD4(32LL);
    uint64_t v22 = v12;
    *uint64_t v11 = 136315138;
    uint64_t v13 = sub_3324(v23, v23[3]);
    __chkstk_darwin(v13);
    sub_23400();
    (*(void (**)(uint64_t))(v14 + 16))(v9);
    uint64_t v15 = sub_449C4();
    unint64_t v17 = v16;
    sub_EAF0(v9, type metadata accessor for EmergencyNLIntent);
    uint64_t v21 = sub_543A4(v15, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v11 + 1, v11 + 3);
    swift_bridgeObjectRelease(v17);
    sub_449A0();
    sub_448F8( &dword_0,  (os_log_s *)type metadata accessor for EmergencyNLIntent,  v1,  "Converting EmergencyNLIntent: %s");
    sub_67DC(v12);
    sub_3CA0(v12);
    sub_3CA0((uint64_t)v11);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v20);
  }

  else
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v23);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v4);
  }

  sub_3324(v25, v26);
  if (qword_785C8 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  uint64_t v19 = qword_78CD0;
  sub_EF34(&qword_78D98, v18, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  sub_23340(v19);
  sub_3324(v25, v26);
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  sub_23340(qword_78CC0);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v25);
  sub_7DF0();
}

ValueMetadata *type metadata accessor for EmergencyBasicFlowFollowupProvider()
{
  return &type metadata for EmergencyBasicFlowFollowupProvider;
}

void sub_448C0()
{
}

uint64_t sub_448EC(uint64_t a1)
{
  return v2(a1, v1, *(void *)(v3 - 200));
}

void sub_448F8(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t sub_44904()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v1, v2);
}

uint64_t sub_44914()
{
  return swift_task_dealloc(*(void *)(v0 + 1128));
}

uint64_t sub_44930(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_3324(a1, a2)[1];
  return swift_retain(v2);
}

void sub_44948()
{
}

void sub_4495C()
{
}

  ;
}

uint64_t sub_44974()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_44984()
{
  uint64_t v3 = *(void *)(v2 - 200);
  *(void *)(v2 - sub_60A4(v0 - 128, v0 - 208) = v1;
  return v1(v0, v3);
}

uint64_t sub_44994@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t sub_449A0()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 192));
}

uint64_t sub_449A8()
{
  return static os_log_type_t.debug.getter();
}

void *sub_449B0()
{
  return sub_3324(v1, v0);
}

uint64_t sub_449BC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

uint64_t sub_449C4()
{
  v0._countAndFlagsBits = 0xD00000000000001ALL;
  v0._object = (void *)0x800000000005C3A0LL;
  String.append(_:)(v0);
  if (qword_785B0 != -1) {
    swift_once(&qword_785B0, sub_A288);
  }
  uint64_t v1 = qword_78CB8;
  type metadata accessor for EmergencyNLIntent(0LL);
  sub_EF34(&qword_78D98, v2, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  sub_47B1C(v1);
  uint64_t v3 = sub_3974(&qword_7B1B0);
  sub_47B2C( v3,  v4,  v3,  (uint64_t)&type metadata for DefaultStringInterpolation,  (uint64_t)&protocol witness table for DefaultStringInterpolation,  v5,  v6,  v7,  v29,  v34,  SWORD2(v34),  SBYTE6(v34),  SHIBYTE(v34),  0);
  sub_47C90(0x61757469532D200ALL, 0x6E6F6974u);
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  sub_47B1C(qword_78CC0);
  uint64_t v8 = sub_3974(&qword_79950);
  sub_47B2C( v8,  v9,  v8,  (uint64_t)&type metadata for DefaultStringInterpolation,  (uint64_t)&protocol witness table for DefaultStringInterpolation,  v10,  v11,  v12,  v30,  v35,  SWORD2(v35),  SBYTE6(v35),  SHIBYTE(v35),  v39);
  sub_47BA4((uint64_t)"\n -Confirmation: ");
  if (qword_785C0 != -1) {
    swift_once(&qword_785C0, sub_A2E4);
  }
  sub_47B1C(qword_78CC8);
  uint64_t v13 = sub_3974(&qword_7B1B8);
  sub_47B2C( v13,  v14,  v13,  (uint64_t)&type metadata for DefaultStringInterpolation,  (uint64_t)&protocol witness table for DefaultStringInterpolation,  v15,  v16,  v17,  v31,  v36,  SWORD2(v36),  SBYTE6(v36),  SHIBYTE(v36),  v40);
  sub_47BA4((uint64_t)"\n -Organization: ");
  if (qword_785C8 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  sub_47B1C(qword_78CD0);
  uint64_t v18 = sub_3974(&qword_79958);
  sub_47B2C( v18,  v19,  v18,  (uint64_t)&type metadata for DefaultStringInterpolation,  (uint64_t)&protocol witness table for DefaultStringInterpolation,  v20,  v21,  v22,  v32,  v37,  SWORD2(v37),  SBYTE6(v37),  SHIBYTE(v37),  v41);
  sub_47C90(0x69727474412D200ALL, 0x65747562u);
  if (qword_785D0 != -1) {
    swift_once(&qword_785D0, sub_A334);
  }
  sub_47B1C(qword_78CD8);
  uint64_t v23 = sub_3974(&qword_7B1C0);
  sub_47B2C( v23,  v24,  v23,  (uint64_t)&type metadata for DefaultStringInterpolation,  (uint64_t)&protocol witness table for DefaultStringInterpolation,  v25,  v26,  v27,  v33,  v38,  SWORD2(v38),  SBYTE6(v38),  SHIBYTE(v38),  v42);
  return v43;
}

void sub_44C88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v23;
  a20 = v24;
  uint64_t v163 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v168 = *(void *)(v27 - 8);
  sub_EDD8();
  __chkstk_darwin(v28);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v29);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v30);
  sub_1300C();
  uint64_t v174 = v31;
  uint64_t v32 = sub_1FC8C();
  type metadata accessor for EmergencyNLIntent(v32);
  sub_6764();
  __chkstk_darwin(v33);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v34);
  sub_1300C();
  uint64_t v167 = v35;
  uint64_t v36 = sub_1FC8C();
  uint64_t v166 = type metadata accessor for NLIntent(v36);
  uint64_t v165 = *(void *)(v166 - 8);
  sub_EDD8();
  __chkstk_darwin(v37);
  sub_6750();
  uint64_t v170 = v38;
  uint64_t v39 = sub_1FC8C();
  type metadata accessor for Siri_Nlu_External_UserParse(v39);
  sub_6764();
  __chkstk_darwin(v40);
  sub_3D310();
  type metadata accessor for EmergencyDialogAct(0LL);
  sub_6764();
  __chkstk_darwin(v41);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v42);
  sub_1300C();
  uint64_t v155 = v43;
  uint64_t v44 = sub_1FC8C();
  uint64_t v154 = type metadata accessor for USOParse(v44);
  uint64_t v161 = *(void *)(v154 - 8);
  sub_EDD8();
  __chkstk_darwin(v45);
  sub_6750();
  uint64_t v160 = v46;
  uint64_t v47 = sub_1FC8C();
  uint64_t v48 = type metadata accessor for Parse(v47);
  uint64_t v175 = *(uint8_t **)(v48 - 8);
  uint64_t v176 = (void *)v48;
  sub_EDD8();
  __chkstk_darwin(v49);
  sub_6750();
  uint64_t v173 = v50;
  uint64_t v51 = sub_1FC8C();
  uint64_t v52 = type metadata accessor for Input(v51);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  sub_3FC8C();
  uint64_t v54 = sub_6820();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v56);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v57);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v58);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v59);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v60);
  sub_EE64();
  sub_ED8C();
  uint64_t v62 = __chkstk_darwin(v61);
  uint64_t v64 = (char *)v149 - v63;
  uint64_t v65 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v62);
  sub_3CC8((uint64_t)v65, (uint64_t)v184);
  uint64_t v169 = v55;
  uint64_t v171 = *(void (**)(char *, os_log_s *, uint64_t))(v55 + 16);
  uint64_t v172 = v65;
  uint64_t v177 = v54;
  v171(v64, v65, v54);
  uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v22, v26, v52);
  Logger.logObject.getter(v66);
  os_log_type_t v67 = sub_EEB4();
  if (os_log_type_enabled(v65, v67))
  {
    v149[1] = v26;
    uint64_t v68 = sub_3CD4(12LL);
    uint64_t v150 = v21;
    uint64_t v69 = (uint8_t *)v68;
    uint64_t v70 = sub_3CD4(32LL);
    uint64_t v158 = v27;
    uint64_t v71 = v70;
    v178[0] = v70;
    *(_DWORD *)uint64_t v69 = 136315138;
    v149[0] = v69 + 4;
    sub_EF34( &qword_790C0,  v72,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter(v52, v73);
    unint64_t v76 = v75;
    uint64_t v180 = sub_543A4(v74, v75, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v149[0], v69 + 12);
    swift_bridgeObjectRelease(v76);
    sub_3D574();
    sub_67F8(&dword_0, v65, v67, "EmergencyWebsiteFlow onInput: %s", v69);
    sub_67DC(v71);
    uint64_t v77 = v71;
    uint64_t v27 = v158;
    sub_3CA0(v77);
    uint64_t v78 = (uint64_t)v69;
    uint64_t v21 = v150;
    sub_3CA0(v78);
  }

  else
  {
    sub_3D574();
  }

  uint64_t v79 = sub_19B5C((uint64_t)v64);
  uint64_t v80 = v173;
  Input.parse.getter(v79);
  uint64_t v82 = v175;
  uint64_t v81 = v176;
  uint64_t v83 = sub_353B8();
  int v85 = v84(v83);
  uint64_t v86 = v174;
  uint64_t v87 = (uint64_t)v172;
  if (v85 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_3D270(*((uint64_t (**)(uint64_t, uint64_t))v82 + 12));
    uint64_t v88 = v165;
    uint64_t v89 = v166;
    sub_382F8(v170, v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 32));
    sub_3CC8(v87, (uint64_t)&v180);
    uint64_t v90 = v164;
    sub_3D27C(v164);
    sub_13104();
    os_log_type_t v91 = sub_EEB4();
    if (sub_EDE4(v91))
    {
      uint64_t v92 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v92);
      sub_18240(&dword_0, v93, v94, "EmergencyWebsiteFlow onInput .NLv3IntentOnly");
      sub_3CA0(v80);
    }

    sub_19B5C(v90);
    uint64_t v95 = v167;
    uint64_t v96 = v170;
    sub_382F8(v167, v170, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 16));
    sub_47C38(v95, (uint64_t)&a16);
    sub_47708();
    sub_3D514();
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v96, v89);
    goto LABEL_18;
  }

  if (v85 == enum case for Parse.directInvocation(_:))
  {
    sub_3D270(*((uint64_t (**)(uint64_t, uint64_t))v82 + 12));
    sub_382F8(v86, v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 32));
    sub_3CC8(v87, (uint64_t)v178);
    uint64_t v97 = v159;
    sub_3D27C(v159);
    sub_13104();
    os_log_type_t v98 = sub_EEB4();
    if (sub_EDE4(v98))
    {
      uint64_t v99 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v99);
      sub_18240(&dword_0, v100, v101, "EmergencyWebsiteFlow onInput .directInvocation");
      sub_3CA0(v80);
    }

    uint64_t v102 = sub_19B5C(v97);
    uint64_t v103 = Parse.DirectInvocation.identifier.getter(v102);
    uint64_t v105 = v104;
    if (v103 == 0xD000000000000035LL && v104 == 0x800000000005B1B0LL)
    {
      swift_bridgeObjectRelease(0x800000000005B1B0LL);
    }

    else
    {
      char v123 = _stringCompareWithSmolCheck(_:_:expecting:)(v103, v104, 0xD000000000000035LL, 0x800000000005B1B0LL, 0LL);
      swift_bridgeObjectRelease(v105);
      if ((v123 & 1) == 0) {
        goto LABEL_25;
      }
    }

    char v124 = sub_28990(v86);
    if (v124 != 35)
    {
      LOBYTE(v116) = v124;
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v86, v27);
      __int16 v115 = 1;
      LOWORD(v11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = 4;
LABEL_30:
      __int16 v146 = v115 | ((_WORD)v117 << 8);
      uint64_t v147 = v163;
      *(_BYTE *)(v163 + sub_66BC(v0 + 18) = (_BYTE)v116;
      *(_WORD *)(v147 + 16) = v146;
      goto LABEL_34;
    }

uint64_t sub_45790(uint64_t a1)
{
  v2[123] = v1;
  v2[122] = a1;
  uint64_t v3 = type metadata accessor for AppPunchOutFlow(0LL);
  v2[124] = v3;
  v2[125] = sub_9E84(v3);
  uint64_t v4 = sub_3974((uint64_t *)&unk_7AE80);
  v2[126] = sub_9E84(v4);
  uint64_t v5 = type metadata accessor for URL(0LL);
  v2[127] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[128] = v6;
  v2[129] = sub_47BBC(v6);
  v2[130] = sub_45A0();
  uint64_t v7 = sub_6820();
  v2[131] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[132] = v8;
  v2[133] = sub_47BBC(v8);
  v2[134] = sub_45A0();
  v2[135] = sub_45A0();
  return swift_task_switch(sub_45840, 0LL, 0LL);
}

uint64_t sub_45840()
{
  uint64_t v5 = v1 + 1120;
  uint64_t v6 = (void *)(v1 + 936);
  sub_47C5C();
  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v7);
  *(void *)(v1 + 108_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v8;
  sub_3CC8(v8, v1 + 936);
  uint64_t v9 = *(void (**)(uint64_t))(v4 + 16);
  *(void *)(v1 + 1096) = v9;
  uint64_t v10 = sub_353B8();
  v9(v10);
  swift_retain_n(v3, 2LL);
  sub_1FD2C();
  os_log_type_t v11 = sub_67D4();
  if (sub_35208(v11))
  {
    uint64_t v48 = *(void *)(v1 + 1056);
    uint64_t v49 = *(void *)(v1 + 1048);
    uint64_t v50 = *(void *)(v1 + 1080);
    uint64_t v12 = *(void *)(v1 + 984);
    uint64_t v13 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v52 = v9;
    uint64_t v14 = sub_3CD4(32LL);
    uint64_t v54 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    char v15 = *(_BYTE *)(v12 + 18);
    *(_WORD *)(v1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = *(_WORD *)(v12 + 16);
    *(_BYTE *)(v1 + 1126) = v15;
    uint64_t v16 = String.init<A>(describing:)(v1 + 1124);
    unint64_t v18 = v17;
    *(void *)(v1 + 96_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = sub_543A4(v16, v17, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 968, v1 + 976, v13 + 4, v13 + 12);
    uint64_t v19 = v12;
    uint64_t v5 = v1 + 1120;
    swift_release_n(v19, 2LL);
    swift_bridgeObjectRelease(v18);
    sub_67F8(&dword_0, (os_log_s *)(v1 + 936), (os_log_type_t)v3, "EmergencyWebsiteFlow execute with state: %s", v13);
    sub_67DC(v14);
    uint64_t v20 = v14;
    uint64_t v9 = v52;
    sub_3CA0(v20);
    sub_3CA0((uint64_t)v13);

    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8);
    uint64_t v22 = v21(v50, v49);
  }

  else
  {
    sub_47C5C();

    swift_release_n(v3, 2LL);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))OutputGenerationManifest.init(dialogPhase:_:);
    uint64_t v22 = ((uint64_t (*)(uint64_t, uint64_t))OutputGenerationManifest.init(dialogPhase:_:))(v0, v2);
  }

  *(void *)(v1 + 1104) = v21;
  uint64_t v23 = *(void *)(v1 + 984);
  int v24 = *(unsigned __int8 *)(v23 + 18);
  int v25 = *(unsigned __int16 *)(v23 + 16);
  uint64_t v26 = v25 | (v24 << 16);
  *(_BYTE *)(v5 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v24;
  *(_WORD *)uint64_t v5 = v25;
  if (v25 == 2)
  {
    uint64_t v6 = *(void **)(v1 + 976);
    unint64_t v27 = sub_E94C();
    uint64_t v8 = swift_allocError(&type metadata for EmergencyFlowError, v27, 0LL, 0LL);
    *uint64_t v28 = 2;
    sub_30F8(v8, v23 + 64, (void *)(v23 + 104), (uint64_t)v6);
    swift_errorRelease(v8);
    goto LABEL_8;
  }

  if (v25 == 3)
  {
    static ExecuteResponse.complete()(v22);
LABEL_8:
    sub_47B38();
    swift_task_dealloc(v6);
    swift_task_dealloc(v8);
    swift_task_dealloc(v26);
    swift_task_dealloc(v23);
    swift_task_dealloc(v3);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v30 = v1 + 272;
  sub_3CC8(v8, v1 + 888);
  uint64_t v31 = sub_47CA8();
  uint64_t v32 = ((uint64_t (*)(uint64_t))v9)(v31);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v36 = *(void *)(v1 + 1072);
  uint64_t v53 = *(void *)(v1 + 1048);
  unsigned int v37 = WORD1(v26);
  unsigned int v38 = v26 >> 8;
  if (v35)
  {
    uint64_t v39 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v51 = v36;
    uint64_t v40 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v54 = v40;
    *(_BYTE *)(v1 + 112_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 7) = v26 & 1;
    *(_BYTE *)(v1 + 112_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = BYTE1(v26);
    *(_BYTE *)(v1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 29) = BYTE2(v26);
    uint64_t v41 = String.init<A>(describing:)(v1 + 1127);
    unint64_t v43 = v42;
    *(void *)(v1 + 960) = sub_543A4(v41, v42, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 960, v1 + 968, v39 + 4, v39 + 12);
    swift_bridgeObjectRelease(v43);
    sub_67F8(&dword_0, v33, v34, "EmergencyWebsiteFlow needsExecution intent: %s", v39);
    sub_67DC(v40);
    sub_3CA0(v40);
    uint64_t v44 = (uint64_t)v39;
    uint64_t v30 = v1 + 272;
    sub_3CA0(v44);

    uint64_t v45 = v51;
  }

  else
  {

    uint64_t v45 = v36;
  }

  v21(v45, v53);
  uint64_t v46 = *(void *)(v1 + 984) + 24LL;
  uint64_t v47 = (void *)swift_task_alloc(dword_7964C);
  *(void *)(v1 + 111_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v47;
  *uint64_t v47 = v1;
  v47[1] = sub_45C70;
  return sub_145A8(v30, v46, v37, v38);
}

uint64_t sub_45C70()
{
  uint64_t v1 = sub_47CA8();
  sub_E3F0(v1, v2);
  return swift_task_switch(sub_45CD4, 0LL, 0LL);
}

uint64_t sub_45CD4()
{
  uint64_t v1 = v0 + 272;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 1122);
  if ((_DWORD)v2 != 35)
  {
LABEL_5:
    sub_9010();
    if (!*(void *)(v0 + 872))
    {
      sub_47BEC();
      sub_E988(v0 + 848, &qword_79818);
      goto LABEL_10;
    }

    uint64_t v3 = v0 + 768;
    uint64_t v4 = v0 + 808;
    uint64_t v5 = *(void **)(v0 + 984);
    uint64_t v6 = (__int128 *)sub_47CA8();
    sub_65A4(v6, v7);
    uint64_t v8 = v5[11];
    uint64_t v9 = v5[12];
    sub_3324(v5 + 8, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    uint64_t v10 = *(void *)(v0 + 832);
    uint64_t v11 = *(void *)(v0 + 840);
    sub_3324((void *)(v0 + 808), v10);
    char v12 = dispatch thunk of DeviceState.isPhone.getter(v10, v11);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 808));
    if ((v12 & 1) != 0)
    {
      sub_E3F0(v0 + 272, v0 + 144);
      int v13 = sub_E438(v0 + 144);
      uint64_t v14 = *(void *)(v0 + 1008);
      if (v13 == 1)
      {
        sub_3F18(*(void *)(v0 + 1008), 1LL, 1LL, *(void *)(v0 + 1016));
      }

      else
      {
        uint64_t v39 = *(void *)(v0 + 1016);
        uint64_t v4 = v0 + 528;
        memcpy((void *)(v0 + 16), (const void *)(v0 + 144), 0x80uLL);
        sub_E3F0(v0 + 528, v0 + 400);
        unint64_t v27 = sub_6408((void *)(v0 + 400));
        EmergencyOrganizationInfo.websiteURL.getter(v27);
        sub_47BEC();
        sub_47C04(v14, 1LL, v39);
        if (!v28)
        {
          uint64_t v31 = *(void *)(v0 + 1040);
          uint64_t v32 = *(void *)(v0 + 1032);
          uint64_t v4 = *(void *)(v0 + 1024);
          uint64_t v2 = *(void *)(v0 + 1016);
          uint64_t v33 = *(void *)(v0 + 1008);
          uint64_t v34 = *(void *)(v0 + 1000);
          uint64_t v40 = *(void *)(v0 + 992);
          uint64_t v38 = v31;
          sub_47BEC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v31, v33, v2);
          uint64_t v35 = v5[11];
          uint64_t v36 = v5[12];
          sub_3324(v5 + 8, v35);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v36 + 16))(v41, v35, v36);
          uint64_t v1 = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v32, v38, v2);
          AppPunchOutFlow.init(aceService:url:instrumentationTask:)(v41, v32, 0LL, 0LL);
          uint64_t v26 = &type metadata accessor for AppPunchOutFlow;
          sub_EB44( &qword_79828,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AppPunchOutFlow,  (uint64_t)&protocol conformance descriptor for AppPunchOutFlow);
          static ExecuteResponse.complete<A>(next:)(v34, v40, v37);
          sub_EAF0(v34, (uint64_t (*)(void))&type metadata accessor for AppPunchOutFlow);
          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v38, v2);
LABEL_17:
          _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 768));
          goto LABEL_18;
        }
      }

      sub_E988(*(void *)(v0 + 1008), (uint64_t *)&unk_7AE80);
    }

    uint64_t v5 = *(void **)(v0 + 976);
    sub_3324((void *)(*(void *)(v0 + 984) + 184LL), *(void *)(*(void *)(v0 + 984) + 208LL));
    sub_24310(v2, v0 + 272, (void *)(v0 + 768));
    uint64_t v26 = v29;
    sub_47BEC();
    static ExecuteResponse.complete(next:)(v26);
    sub_EE0C();
    goto LABEL_17;
  }

  if (HIBYTE(*(_WORD *)(v0 + 1120)) != 4)
  {
    uint64_t v2 = (*(unsigned __int16 *)(v0 + 1120) | (*(unsigned __int8 *)(v0 + 1122) << 16)) >> 8;
    goto LABEL_5;
  }

  sub_47BEC();
LABEL_10:
  uint64_t v3 = v0 + 656;
  char v15 = *(void (**)(uint64_t, uint64_t, uint8_t *))(v0 + 1096);
  uint64_t v16 = *(void *)(v0 + 1088);
  uint64_t v17 = *(void *)(v0 + 1064);
  unint64_t v18 = *(uint8_t **)(v0 + 1048);
  sub_3CC8(v16, v0 + 912);
  v15(v17, v16, v18);
  uint64_t v19 = (os_log_s *)sub_1FD2C();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (sub_182AC(v20))
  {
    uint64_t v21 = (_WORD *)sub_3CD4(2LL);
    sub_1FE64(v21);
    sub_EDA8(&dword_0, v19, (os_log_type_t)v17, "EmergencyWebsiteFlow Failed to pick a catWrapper", v18);
    sub_3CA0((uint64_t)v18);
  }

  uint64_t v4 = *(void *)(v0 + 1104);
  uint64_t v1 = *(void *)(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 1048);
  uint64_t v22 = *(void *)(v0 + 984);
  uint64_t v5 = *(void **)(v0 + 976);

  ((void (*)(uint64_t, uint64_t))v4)(v1, v2);
  uint64_t v23 = sub_3324((void *)(v22 + 104), *(void *)(v22 + 128));
  memcpy((void *)(v0 + 656), v23, 0x70uLL);
  uint64_t v24 = sub_47CA8();
  uint64_t v26 = (void *)sub_37CC(v24, v25);
  static ExecuteResponse.complete(next:)(v26);
  sub_EE0C();
LABEL_18:
  sub_47B38();
  swift_task_dealloc(v26);
  swift_task_dealloc(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_460E0()
{
  uint64_t v0 = type metadata accessor for EmergencyWebsiteFlow();
  sub_EB44( &qword_7B1A8,  v1,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyWebsiteFlow,  (uint64_t)&unk_59ECC);
  uint64_t v2 = sub_353B8();
  return Flow.deferToExecuteAsync(_:)(v2, v3, v0, v4);
}

uint64_t type metadata accessor for EmergencyWebsiteFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin20EmergencyWebsiteFlow);
}

ValueMetadata *type metadata accessor for EmergencyWebsiteFlow.EmergencyWebsiteFlowState()
{
  return &type metadata for EmergencyWebsiteFlow.EmergencyWebsiteFlowState;
}

#error "4618C: call analysis failed (funcsize=9)"
uint64_t sub_461A0()
{
  return sub_460E0();
}

uint64_t sub_461C0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7B0C4);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_5F44;
  return sub_45790(a1);
}

uint64_t sub_46214(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyWebsiteFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

void sub_46238()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_6820();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1FD94();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  sub_47C48();
  uint64_t v10 = __chkstk_darwin(v9);
  char v12 = (uint8_t *)&v37 - v11;
  uint64_t v13 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v10);
  if ((v13 & 1) != 0)
  {
    uint64_t v14 = sub_4808C(v2);
    if ((v14 & 1) != 0)
    {
      uint64_t v15 = v2[3];
      uint64_t v16 = v2[4];
      sub_3324(v2, v15);
      char v17 = dispatch thunk of DeviceState.isHomePod.getter(v15, v16);
      sub_60A4((uint64_t)v2, (uint64_t)v39);
      if ((v17 & 1) != 0)
      {
        char v18 = 1;
      }

      else
      {
        uint64_t v25 = v40;
        sub_3324(v39, v40);
        char v18 = dispatch thunk of DeviceState.isCarPlay.getter(v25);
      }

      uint64_t v26 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v39);
      unint64_t v27 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v26);
      sub_3CC8((uint64_t)v27, (uint64_t)v39);
      sub_23430(v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
      sub_1FD2C();
      os_log_type_t v28 = sub_67D4();
      if (sub_35208(v28))
      {
        uint64_t v29 = (uint8_t *)sub_3CD4(12LL);
        uint64_t v30 = sub_3CD4(32LL);
        uint64_t v37 = v30;
        *(_DWORD *)uint64_t v29 = 136315138;
        uint64_t v38 = v30;
        if ((v18 & 1) != 0) {
          uint64_t v31 = 0x6E6974706D6F7250LL;
        }
        else {
          uint64_t v31 = 0x6D6F727020746F4ELL;
        }
        if ((v18 & 1) != 0) {
          unint64_t v32 = 0xE900000000000067LL;
        }
        else {
          unint64_t v32 = 0xED0000676E697470LL;
        }
        uint64_t v33 = sub_543A4(v31, v32, &v38);
        uint64_t v34 = sub_47C7C(v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v35, v29 + 4, v29 + 12);
        swift_bridgeObjectRelease(v32);
        sub_67F8(&dword_0, v27, (os_log_type_t)v2, "%s for call followup.", v29);
        uint64_t v36 = v37;
        sub_67DC(v37);
        sub_3CA0(v36);
        sub_3CA0((uint64_t)v29);
      }

      sub_3D270(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    }

    else
    {
      uint64_t v22 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v14);
      sub_3CC8((uint64_t)v22, (uint64_t)v39);
      sub_23430((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
      sub_13124();
      os_log_type_t v23 = sub_67D4();
      if (sub_182AC(v23))
      {
        uint64_t v24 = (uint8_t *)sub_3CD4(2LL);
        *(_WORD *)uint64_t v24 = 0;
        sub_EDA8( &dword_0,  v22,  (os_log_type_t)v0,  "No prompt needed for this device. Not prompting for call followup.",  v24);
        sub_3CA0((uint64_t)v24);
      }

      (*(void (**)(uint8_t *, uint64_t))(v4 + 8))(v12, v3);
    }
  }

  else
  {
    uint64_t v19 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v13);
    sub_3CC8((uint64_t)v19, (uint64_t)v39);
    sub_23430(v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    sub_13104();
    os_log_type_t v20 = sub_67D4();
    if (sub_182AC(v20))
    {
      uint64_t v21 = (_WORD *)sub_3CD4(2LL);
      sub_1FE64(v21);
      sub_EDA8( &dword_0,  v19,  (os_log_type_t)v0,  "orgInfo does not have name and number. Not prompting for call followup.",  v12);
      sub_3CA0((uint64_t)v12);
    }

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }

  sub_7DF0();
}

uint64_t sub_46548(uint64_t a1, uint8_t *a2)
{
  uint64_t v4 = sub_6820();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1FD94();
  uint64_t v8 = v6 - v7;
  uint64_t v10 = __chkstk_darwin(v9);
  char v12 = (char *)&v43[-1] - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v43[-1] - v14;
  uint64_t v16 = *(void *)(a1 + 104);
  if ((v16 & 0x2000000000000000LL) == 0)
  {
    if ((*(void *)(a1 + 96) & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v22 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v13);
    sub_3CC8((uint64_t)v22, (uint64_t)v47);
    sub_23430(v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_2F65C();
    os_log_type_t v23 = sub_67D4();
    if (!sub_182AC(v23))
    {
      uint64_t v25 = 0LL;
      goto LABEL_16;
    }

    uint64_t v24 = (_WORD *)sub_3CD4(2LL);
    sub_1FE64(v24);
    sub_EDA8( &dword_0,  v22,  (os_log_type_t)v15,  "orgInfo does not have a websearch query. Not prompting for websearch followup.",  a2);
    uint64_t v25 = 0LL;
    goto LABEL_13;
  }

  if ((v16 & 0xF00000000000000LL) == 0) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v17 = sub_47B84(a2);
  uint64_t v19 = dispatch thunk of DeviceState.isHomePod.getter(v17, v18);
  char v20 = v19;
  sub_47BD8(v19, (uint64_t)v47);
  if ((v20 & 1) != 0)
  {
    uint64_t v21 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
    sub_47BD8(v21, (uint64_t)v46);
LABEL_9:
    uint64_t v29 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v46);
    sub_47BD8(v29, (uint64_t)v43);
LABEL_10:
    uint64_t v30 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v43);
    goto LABEL_11;
  }

  uint64_t v26 = sub_47B84(v47);
  char v27 = dispatch thunk of DeviceState.isCarPlay.getter(v26);
  uint64_t v28 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
  sub_47BD8(v28, (uint64_t)v46);
  if ((v27 & 1) != 0) {
    goto LABEL_9;
  }
  uint64_t v34 = sub_47B84(v46);
  char v36 = dispatch thunk of DeviceState.isWatch.getter(v34, v35);
  uint64_t v37 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v46);
  sub_47BD8(v37, (uint64_t)v43);
  if ((v36 & 1) != 0) {
    goto LABEL_10;
  }
  a2 = v44;
  uint64_t v38 = v45;
  sub_3324(v43, (uint64_t)v44);
  char v39 = dispatch thunk of DeviceState.isAppleTV.getter(a2, v38);
  uint64_t v30 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v43);
  if ((v39 & 1) == 0)
  {
    uint64_t v22 = (os_log_s *)Logger.emergency.unsafeMutableAddressor(v30);
    sub_3CC8((uint64_t)v22, (uint64_t)v47);
    sub_23430((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    sub_13104();
    os_log_type_t v40 = sub_67D4();
    if (!sub_182AC(v40))
    {
      uint64_t v25 = 1LL;
      goto LABEL_16;
    }

    uint64_t v41 = (_WORD *)sub_3CD4(2LL);
    sub_1FE64(v41);
    sub_EDA8(&dword_0, v22, (os_log_type_t)v15, "Prompting for websearch followup.", a2);
    uint64_t v25 = 1LL;
    goto LABEL_13;
  }

void sub_4683C()
{
  uint64_t v63 = v2;
  uint64_t v67 = v3;
  uint64_t v4 = sub_6820();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v69 = v4;
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_66F4();
  uint64_t v64 = v6;
  sub_67EC();
  __chkstk_darwin(v7);
  sub_EE64();
  uint64_t v66 = v8;
  sub_67EC();
  __chkstk_darwin(v9);
  sub_1300C();
  uint64_t v65 = v10;
  uint64_t v11 = sub_3D498();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_183F4();
  uint64_t v13 = sub_3974(&qword_7A8E0);
  sub_6764();
  __chkstk_darwin(v14);
  sub_3FC8C();
  sub_3974(&qword_7A8E8);
  sub_6764();
  __chkstk_darwin(v15);
  sub_1FD94();
  uint64_t v18 = v16 - v17;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v63 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v63 - v23;
  type metadata accessor for SiriEnvironment(0LL);
  if (static SiriEnvironment.forCurrentTask.getter())
  {
    uint64_t v25 = SiriEnvironment.currentRequest.getter();
    uint64_t v26 = sub_EE0C();
    CurrentRequest.responseMode.getter(v26);
    swift_release(v25);
    uint64_t v27 = 0LL;
  }

  else
  {
    uint64_t v27 = 1LL;
  }

  uint64_t v28 = sub_47C9C((uint64_t)v24, v27);
  static ResponseMode.displayOnly.getter(v28);
  sub_47C9C((uint64_t)v22, 0LL);
  uint64_t v29 = v0 + *(int *)(v13 + 48);
  sub_35010((uint64_t)v24, v0);
  sub_35010((uint64_t)v22, v29);
  sub_47C04(v0, 1LL, v11);
  if (v32)
  {
    sub_3D25C((uint64_t)v22);
    sub_3D25C((uint64_t)v24);
    sub_47C04(v29, 1LL, v11);
    if (v32)
    {
      sub_E988(v0, &qword_7A8E8);
      uint64_t v31 = v68;
      goto LABEL_19;
    }

    goto LABEL_12;
  }

  sub_35010(v0, v18);
  sub_47C04(v29, 1LL, v11);
  if (v32)
  {
    sub_3D354((uint64_t)v22);
    sub_3D354((uint64_t)v24);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    sub_E988(v0, &qword_7A8E0);
    uint64_t v31 = v68;
    goto LABEL_13;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v1, v29, v11);
  sub_EF34( &qword_7A8F0,  v45,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v1, v11);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v47(v1, v11);
  sub_3D25C((uint64_t)v22);
  sub_3D25C((uint64_t)v24);
  v47(v18, v11);
  sub_3D25C(v0);
  uint64_t v31 = v68;
  if ((v46 & 1) != 0)
  {
LABEL_19:
    uint64_t v38 = (void *)Logger.emergency.unsafeMutableAddressor(v30);
    sub_3CC8((uint64_t)v38, (uint64_t)v71);
    uint64_t v39 = v65;
    sub_47BE0(v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16));
    sub_13104();
    os_log_type_t v48 = sub_EEB4();
    if (sub_EDE4(v48))
    {
      uint64_t v49 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v49);
      uint64_t v44 = "DisplayOnly request. Not listening after speaking.";
      goto LABEL_21;
    }

    goto LABEL_22;
  }

void sub_46D6C()
{
  uint64_t v62 = v3;
  uint64_t v64 = v4;
  uint64_t v5 = sub_6820();
  uint64_t v65 = *(void *)(v5 - 8);
  sub_EDD8();
  __chkstk_darwin(v6);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v7);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v8);
  sub_EE64();
  uint64_t v63 = v9;
  sub_67EC();
  __chkstk_darwin(v10);
  sub_1300C();
  uint64_t v61 = v11;
  uint64_t v12 = sub_3D498();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_3D310();
  uint64_t v14 = sub_3974(&qword_7A8E0);
  sub_6764();
  __chkstk_darwin(v15);
  sub_183F4();
  sub_3974(&qword_7A8E8);
  sub_6764();
  __chkstk_darwin(v16);
  sub_1FD94();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  sub_47C48();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v60 - v22;
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v24 = static SiriEnvironment.forCurrentTask.getter();
  uint64_t v66 = v5;
  if (v24)
  {
    uint64_t v25 = SiriEnvironment.currentRequest.getter();
    uint64_t v26 = sub_EE0C();
    CurrentRequest.responseMode.getter(v26);
    swift_release(v25);
    uint64_t v27 = 0LL;
  }

  else
  {
    uint64_t v27 = 1LL;
  }

  uint64_t v28 = sub_3D328((uint64_t)v23, v27);
  static ResponseMode.displayOnly.getter(v28);
  sub_3D328(v0, 0LL);
  uint64_t v29 = v2 + *(int *)(v14 + 48);
  sub_35010((uint64_t)v23, v2);
  sub_35010(v0, v29);
  sub_47C04(v2, 1LL, v12);
  if (v35)
  {
    uint64_t v30 = sub_353B8();
    sub_E988(v30, v31);
    sub_E988((uint64_t)v23, &qword_7A8E8);
    sub_47C04(v29, 1LL, v12);
    if (v35)
    {
      sub_E988(v2, &qword_7A8E8);
      uint64_t v34 = v65;
      uint64_t v33 = v66;
      goto LABEL_20;
    }

    goto LABEL_12;
  }

  sub_35010(v2, v19);
  sub_47C04(v29, 1LL, v12);
  if (v35)
  {
    uint64_t v29 = (uint64_t)&qword_7A8E8;
    sub_3D354(v0);
    sub_3D354((uint64_t)v23);
    sub_18528(v19, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
LABEL_12:
    sub_E988(v2, &qword_7A8E0);
    uint64_t v34 = v65;
    uint64_t v33 = v66;
    goto LABEL_13;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v1, v29, v12);
  sub_EF34( &qword_7A8F0,  v42,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
  uint64_t v29 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v1, v12);
  sub_3D308(v1);
  sub_3D25C(v0);
  sub_3D25C((uint64_t)v23);
  sub_3D308(v19);
  sub_3D25C(v2);
  uint64_t v34 = v65;
  uint64_t v33 = v66;
  if ((v29 & 1) != 0)
  {
LABEL_20:
    uint64_t v43 = (uint8_t *)Logger.emergency.unsafeMutableAddressor(v32);
    sub_3CC8((uint64_t)v43, (uint64_t)v73);
    uint64_t v38 = v61;
    sub_3D21C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
    sub_2F65C();
    os_log_type_t v44 = sub_67D4();
    if (sub_182AC(v44))
    {
      uint64_t v45 = (_WORD *)sub_3CD4(2LL);
      sub_3D264(v45);
      char v46 = "DisplayOnly request. Not listening after speaking.";
LABEL_29:
      sub_EDA8(&dword_0, (os_log_s *)v29, (os_log_type_t)v0, v46, v43);
LABEL_30:
      sub_3CA0((uint64_t)v43);
      goto LABEL_31;
    }

    goto LABEL_31;
  }

void sub_472E4()
{
  uint64_t v19 = v1;
  uint64_t v20 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_3974(&qword_78970);
  sub_6764();
  __chkstk_darwin(v7);
  sub_3D310();
  sub_E3F0(v6, (uint64_t)v17);
  if (sub_E438((uint64_t)v17) == 1)
  {
    uint64_t v8 = v4[3];
    uint64_t v9 = v4[4];
    sub_3324(v4, v8);
    uint64_t v10 = type metadata accessor for SpeakableString(0LL);
    uint64_t v11 = v0;
    uint64_t v12 = 1LL;
  }

  else
  {
    uint64_t v13 = memcpy(v18, v17, sizeof(v18));
    char v14 = EmergencyOrganizationInfo.hasNameAndNumber.getter(v13);
    uint64_t v8 = v4[3];
    uint64_t v9 = v4[4];
    sub_3324(v4, v8);
    if ((v14 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
      return;
    }

    uint64_t v15 = v18[12];
    uint64_t v16 = v18[13];
    swift_bridgeObjectRetain(v18[13]);
    SpeakableString.init(print:speak:)(v15, v16, 0LL, 0LL);
    uint64_t v10 = type metadata accessor for SpeakableString(0LL);
    uint64_t v11 = v0;
    uint64_t v12 = 0LL;
  }

  sub_3F18(v11, v12, 1LL, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v0, v8, v9);
  sub_E988(v0, &qword_78970);
}

void sub_4745C()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_6820();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1FD94();
  uint64_t v7 = (os_log_s *)(v5 - v6);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = type metadata accessor for EmergencyDialogAct(0LL);
  v42[3] = v11;
  v42[4] = &protocol witness table for EmergencyDialogAct;
  unint64_t v36 = sub_649C(v42);
  sub_EB18(v2, (uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
  uint64_t v13 = Logger.emergency.unsafeMutableAddressor(v12);
  sub_3CC8(v13, (uint64_t)&v41);
  char v14 = *(uint8_t **)(v4 + 16);
  sub_47C70((uint64_t)v10);
  sub_23470();
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (sub_47BF4(v17))
  {
    uint64_t v32 = v14;
    uint64_t v18 = sub_3CD4(12LL);
    uint64_t v35 = v3;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = sub_3CD4(32LL);
    uint64_t v33 = v7;
    uint64_t v21 = v20;
    uint64_t v39 = v20;
    uint64_t v34 = v11;
    *(_DWORD *)uint64_t v19 = 136315138;
    sub_60A4((uint64_t)v40, (uint64_t)&v37);
    sub_3974(&qword_790C8);
    uint64_t v22 = String.init<A>(describing:)(&v37);
    unint64_t v24 = v23;
    uint64_t v37 = sub_543A4(v22, v23, &v39);
    char v14 = v32;
    uint64_t v11 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v24);
    sub_449A0();
    sub_67F8(&dword_0, v16, v0, "Converting EmergencyDialogAct to EmergencyInformationIntent: %s", v19);
    sub_67DC(v21);
    uint64_t v25 = v21;
    uint64_t v7 = v33;
    sub_3CA0(v25);
    uint64_t v26 = (uint64_t)v19;
    uint64_t v3 = v35;
    sub_3CA0(v26);
  }

  else
  {
    sub_449A0();
  }

  uint64_t v27 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27(v10, v3);
  if (*((_BYTE *)v36 + *(int *)(v11 + 32)) == 2)
  {
    sub_3CC8(v13, (uint64_t)v40);
    uint64_t v28 = sub_47C70((uint64_t)v7);
    Logger.logObject.getter(v28);
    os_log_type_t v29 = sub_67D4();
    if (sub_35208(v29))
    {
      uint64_t v30 = (_WORD *)sub_3CD4(2LL);
      sub_3D264(v30);
      sub_EDA8( &dword_0,  v7,  (os_log_type_t)v13,  "'emergencyAttribute' node was nil, using default value 'phone number'",  v14);
      sub_3CA0((uint64_t)v14);
    }

    v27((char *)v7, v3);
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v42);
  sub_7DF0();
}

void sub_47708()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_6820();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_66F4();
  uint64_t v43 = v5;
  sub_67EC();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = type metadata accessor for EmergencyNLIntent(0LL);
  v48[3] = v9;
  sub_EB44(&qword_790D0, 255LL, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
  v48[4] = v10;
  uint64_t v11 = sub_649C(v48);
  sub_EB18(v2, (uint64_t)v11, type metadata accessor for EmergencyNLIntent);
  uint64_t v13 = Logger.emergency.unsafeMutableAddressor(v12);
  sub_3CC8(v13, (uint64_t)&v47);
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v42(v8, v13, v3);
  sub_23470();
  char v14 = (os_log_s *)sub_2F65C();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (sub_47BF4(v15))
  {
    uint64_t v39 = v4;
    uint64_t v16 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v17 = sub_3CD4(32LL);
    uint64_t v40 = v3;
    uint64_t v38 = v17;
    uint64_t v45 = v17;
    uint64_t v41 = v9;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v37 = v16 + 4;
    uint64_t v18 = sub_3324(v46, v46[3]);
    __chkstk_darwin(v18);
    uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v21 + 16))(v20);
    sub_449C4();
    uint64_t v23 = v22;
    sub_EAF0((uint64_t)v20, type metadata accessor for EmergencyNLIntent);
    uint64_t v24 = sub_353B8();
    uint64_t v44 = sub_543A4(v24, v25, v26);
    uint64_t v9 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v37, v16 + 12);
    swift_bridgeObjectRelease(v23);
    sub_449A0();
    sub_67F8(&dword_0, v14, v0, "Converting EmergencyNLIntent: %s", v16);
    uint64_t v27 = v38;
    sub_67DC(v38);
    uint64_t v3 = v40;
    sub_3CA0(v27);
    sub_3CA0((uint64_t)v16);

    uint64_t v28 = *(void (**)(char *, uint64_t))(v39 + 8);
  }

  else
  {
    sub_449A0();

    uint64_t v28 = *(void (**)(char *, uint64_t))(v4 + 8);
  }

  v28(v8, v3);
  sub_47B68();
  if (qword_785D0 != -1) {
    swift_once(&qword_785D0, sub_A334);
  }
  uint64_t v30 = (uint8_t *)qword_78CD8;
  sub_EF34(&qword_78D98, v29, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  IntentNodeTraversable.value<A>(forNode:)(v30, v9, v31);
  if (LOBYTE(v46[0]) == 2)
  {
    sub_3CC8(v13, (uint64_t)v46);
    uint64_t v32 = v43;
    uint64_t v33 = ((uint64_t (*)(os_log_s *, uint64_t, uint64_t))v42)(v43, v13, v3);
    Logger.logObject.getter(v33);
    os_log_type_t v34 = sub_67D4();
    if (os_log_type_enabled(v32, v34))
    {
      uint64_t v35 = (_WORD *)sub_3CD4(2LL);
      sub_3D264(v35);
      sub_EDA8(&dword_0, v32, v34, "'emergencyAttribute' node was nil, using default value 'phone number'", v30);
      sub_3CA0((uint64_t)v30);
    }

    v28((char *)v43, v3);
  }

  sub_47B68();
  sub_47B58(qword_78CD8);
  sub_47B68();
  if (qword_785C8 != -1) {
    swift_once(&qword_785C8, sub_A30C);
  }
  sub_47B58(qword_78CD0);
  sub_47B68();
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  sub_47B58(qword_78CC0);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v48);
  sub_7DF0();
}

ValueMetadata *type metadata accessor for EmergencyWebsiteFlowFollowupConfigModel()
{
  return &type metadata for EmergencyWebsiteFlowFollowupConfigModel;
}

uint64_t sub_47B1C(uint64_t a1)
{
  return IntentNodeTraversable.value<A>(forNode:)(a1, v1, v2);
}

uint64_t sub_47B2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14)
{
  return _print_unlocked<A, B>(_:_:)(&a13, &a14);
}

uint64_t sub_47B38()
{
  return swift_task_dealloc(*(void *)(v0 + 1080));
}

uint64_t sub_47B58(uint64_t a1)
{
  return IntentNodeTraversable.value<A>(forNode:)(a1, v2, v1);
}

void *sub_47B68()
{
  return sub_3324((void *)(v0 - 128), *(void *)(v0 - 104));
}

uint64_t sub_47B84(void *a1)
{
  return v1;
}

void sub_47BA4(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._countAndFlagsBits = 0xD000000000000011LL;
  String.append(_:)(v1);
}

uint64_t sub_47BBC@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

void sub_47BD0(uint64_t a1, uint64_t a2)
{
}

void sub_47BD8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_47BE0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2, v3);
}

uint64_t *sub_47BEC()
{
  return sub_E864(v0);
}

BOOL sub_47BF4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_47C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5FE0(a1, a2, a3);
}

uint64_t sub_47C18(void *a1)
{
  return dispatch thunk of DeviceState.isCarPlay.getter(v1);
}

void sub_47C38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

  ;
}

  ;
}

uint64_t sub_47C70(uint64_t a1)
{
  return v1(a1, v3, v2);
}

uint64_t sub_47C7C(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return v1 - 136;
}

void sub_47C90(uint64_t a1, unsigned int a2)
{
  unint64_t v2 = a2 | 0xEE00203A00000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_47C9C(uint64_t a1, uint64_t a2)
{
  return sub_3F18(a1, a2, 1LL, v2);
}

uint64_t sub_47CA8()
{
  return v0;
}

uint64_t type metadata accessor for EmergencyModernCATs(uint64_t a1)
{
  uint64_t result = qword_7B1C8;
  if (!qword_7B1C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencyModernCATs);
  }
  return result;
}

uint64_t sub_47CEC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B948);
}

uint64_t sub_47D28()
{
  uint64_t v1 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_9E08;
  sub_1459C();
  unint64_t v2 = sub_48080(25LL);
  return sub_48074(v2, v3, v4, v5);
}

uint64_t sub_47D80()
{
  uint64_t v1 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_9E08;
  sub_1459C();
  unint64_t v2 = sub_48080(25LL);
  return sub_48074(v2, v3, v4, v5);
}

uint64_t sub_47DD8()
{
  uint64_t v1 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_9E08;
  sub_1459C();
  unint64_t v2 = sub_48080(27LL);
  return sub_48074(v2, v3, v4, v5);
}

uint64_t sub_47E30()
{
  uint64_t v1 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_9CF8;
  sub_1459C();
  unint64_t v2 = sub_48080(22LL);
  return sub_48074(v2, v3, v4, v5);
}

uint64_t sub_47E88()
{
  uint64_t v1 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_9E08;
  sub_1459C();
  unint64_t v2 = sub_48080(33LL);
  return sub_48074(v2, v3, v4, v5);
}

uint64_t sub_47EE0()
{
  uint64_t v1 = (void *)sub_9EDC((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_9E08;
  sub_1459C();
  unint64_t v2 = sub_48080(32LL);
  return sub_48074(v2, v3, v4, v5);
}

uint64_t sub_47F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_47F7C(a1, a2, a3);
}

uint64_t sub_47F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CATOption(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_6740();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_3974((uint64_t *)&unk_7AE80);
  __chkstk_darwin(v11);
  sub_6740();
  uint64_t v14 = v13 - v12;
  sub_AE7C(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  uint64_t v15 = CATWrapperSimple.init(templateDir:options:globals:)(v14, v10, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  sub_AEC4(a1);
  return v15;
}

uint64_t sub_4806C()
{
  return type metadata accessor for EmergencyModernCATs(0LL);
}

uint64_t sub_48074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

unint64_t sub_48080(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL;
}

uint64_t sub_4808C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_3324(a1, v2);
  char v4 = dispatch thunk of DeviceState.isAppleTV.getter(v2, v3);
  sub_3B68((uint64_t)a1, (uint64_t)v9);
  if ((v4 & 1) != 0)
  {
    char v5 = 0;
  }

  else
  {
    uint64_t v6 = v10;
    uint64_t v7 = v11;
    sub_3324(v9, v10);
    char v5 = dispatch thunk of DeviceState.isSidekick.getter(v6, v7) ^ 1;
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v9);
  return v5 & 1;
}

uint64_t sub_48120(uint64_t a1)
{
  uint64_t v37 = a1;
  sub_3974((uint64_t *)&unk_7A600);
  sub_6764();
  __chkstk_darwin(v1);
  sub_6750();
  uint64_t v36 = v2;
  uint64_t v3 = type metadata accessor for Input(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_6740();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_6820();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_66F4();
  uint64_t v35 = v10;
  sub_67EC();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = Logger.emergency.unsafeMutableAddressor(v12);
  sub_3CC8(v15, (uint64_t)v40);
  os_log_type_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v16 = v34(v14, v15, v8);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v19 = 0;
    sub_EDA8(&dword_0, v17, v18, "EmergencyConfirmationRFFlow onInput", v19);
    sub_3CA0((uint64_t)v19);
  }

  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  uint64_t v21 = v38;
  int v22 = *(unsigned __int8 *)(v38 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v37, v3);
  if (v22 == 1)
  {
    uint64_t v23 = v8;
    uint64_t v24 = v36;
    sub_2AAC8(v7, (void *)(v21 + 152), v36);
    sub_498CC();
    uint64_t v25 = type metadata accessor for ConfirmationResponse(0LL);
    uint64_t v26 = 1LL;
    int v27 = sub_5FE0((uint64_t)v24, 1LL, v25);
    sub_6028((uint64_t)v24, (uint64_t *)&unk_7A600);
    if (v27 == 1)
    {
      sub_3CC8(v15, (uint64_t)v39);
      uint64_t v28 = v35;
      uint64_t v29 = v34((char *)v35, v15, v23);
      Logger.logObject.getter(v29);
      os_log_type_t v30 = sub_67D4();
      if (os_log_type_enabled(v28, v30))
      {
        uint64_t v31 = (uint8_t *)sub_3CD4(2LL);
        *(_WORD *)uint64_t v31 = 0;
        sub_EDA8(&dword_0, v28, v30, "No confirmation response found in input, ignoring.", v31);
        sub_3CA0((uint64_t)v31);
      }

      v20((char *)v28, v23);
      return 0LL;
    }
  }

  else
  {
    sub_498CC();
    return 1LL;
  }

  return v26;
}

uint64_t sub_483A8(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = sub_6820();
  void v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = sub_45A0();
  v2[19] = sub_45A0();
  v2[20] = sub_45A0();
  return swift_task_switch(sub_48414, 0LL, 0LL);
}

void sub_48414(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v6, v1 + 16);
  (*(void (**)(os_log_s *, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  uint64_t v7 = swift_retain_n(v5, 2LL);
  uint64_t v8 = v2;
  Logger.logObject.getter(v7);
  os_log_type_t v9 = sub_67D4();
  if (sub_6728(v9))
  {
    uint64_t v10 = *(void *)(v1 + 120);
    uint64_t v21 = *(void *)(v1 + 128);
    uint64_t v22 = *(void *)(v1 + 160);
    uint64_t v20 = *(void *)(v1 + 136);
    uint64_t v11 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v12 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v23 = v12;
    *(_BYTE *)(v1 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = *(_BYTE *)(v10 + 16);
    uint64_t v13 = String.init<A>(describing:)(v1 + 168);
    unint64_t v15 = v14;
    *(void *)(v1 + 104) = sub_543A4(v13, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 104, v1 + 112, v11 + 4, v11 + 12);
    swift_release_n(v10, 2LL);
    swift_bridgeObjectRelease(v15);
    sub_67F8(&dword_0, v2, (os_log_type_t)v2, "EmergencyConfirmationRFFlow execute with state: %s", v11);
    sub_67DC(v12);
    sub_3CA0(v12);
    sub_3CA0((uint64_t)v11);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }

  else
  {
    uint64_t v16 = *(void *)(v1 + 160);
    uint64_t v17 = *(void *)(v1 + 128);
    uint64_t v18 = *(void *)(v1 + 136);
    uint64_t v19 = *(void *)(v1 + 120);

    swift_release_n(v19, 2LL);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  __asm { BR              X10 }

uint64_t sub_485FC()
{
  *(_BYTE *)(v0 + 16) = 1;
  *(void *)(v1 + 96) = sub_488BC();
  swift_retain(v0);
  uint64_t v3 = sub_3974(&qword_7B388);
  sub_65F0(&qword_7B398, &qword_7B388);
  static ExecuteResponse.ongoing<A>(next:childCompletion:)(v2, sub_498B4, v0, v3, v4);
  swift_release(v0);
  swift_release(*(void *)(v1 + 96));
  uint64_t v5 = *(void *)(v1 + 152);
  uint64_t v6 = *(void *)(v1 + 144);
  swift_task_dealloc(*(void *)(v1 + 160));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_4884C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyConfirmationRFFlow();
  sub_65BC(&qword_7A018, v5, (uint64_t (*)(uint64_t))type metadata accessor for EmergencyConfirmationRFFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v6);
}

uint64_t sub_488BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6820();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_6740();
  uint64_t v6 = v5 - v4;
  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v7);
  sub_3CC8(v8, (uint64_t)v39);
  uint64_t v9 = sub_1849C(v6, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v12 = 0;
    sub_EDA8(&dword_0, v10, v11, "We are currently here and going to the strategy", v12);
    sub_3CA0((uint64_t)v12);
  }

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  sub_EE84(v38, v1 + 3);
  sub_60A4((uint64_t)(v1 + 19), (uint64_t)v34);
  uint64_t v13 = v1 + 24;
  sub_60A4((uint64_t)(v1 + 24), (uint64_t)v37);
  sub_60A4((uint64_t)(v1 + 29), (uint64_t)v36);
  sub_60E4((uint64_t)(v1 + 34), (uint64_t)v35);
  uint64_t v14 = sub_6120((uint64_t)v34, v34[3]);
  __chkstk_darwin(v14);
  sub_6740();
  uint64_t v17 = v16 - v15;
  sub_1849C(v16 - v15, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
  uint64_t v20 = sub_6120((uint64_t)v36, v36[3]);
  __chkstk_darwin(v20);
  sub_6740();
  uint64_t v23 = (const void *)(v22 - v21);
  sub_1849C(v22 - v21, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  __int128 v26 = *(_OWORD *)(v17 + 16);
  v40[0] = *(_OWORD *)v17;
  v40[1] = v26;
  __int16 v41 = *(_WORD *)(v17 + 32);
  memcpy(__dst, v23, sizeof(__dst));
  sub_6408(v38);
  uint64_t v27 = sub_4962C((uint64_t)v40, v37, __dst, (uint64_t)v35, 0LL, 0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v36);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v34);
  uint64_t v29 = v1[27];
  uint64_t v28 = v1[28];
  sub_3324(v13, v29);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v28 + 48))(v37, v29, v28);
  sub_EE84(v34, v38);
  uint64_t v30 = sub_3974(&qword_7B388);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  uint64_t v31 = type metadata accessor for EmergencyPromptForConfirmationRFFlowStrategyAsync();
  sub_65BC( &qword_7B390,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for EmergencyPromptForConfirmationRFFlowStrategyAsync);
  return PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)(v34, v27, v37, v31, v32);
}

void sub_48B80(uint64_t a1)
{
  uint64_t v86 = type metadata accessor for ConfirmationResponse(0LL);
  uint64_t v79 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  sub_6740();
  uint64_t v4 = v3 - v2;
  uint64_t v76 = sub_3974(&qword_78B10);
  sub_6764();
  __chkstk_darwin(v5);
  sub_6750();
  uint64_t v80 = v6;
  sub_3974((uint64_t *)&unk_7A600);
  sub_6764();
  __chkstk_darwin(v7);
  sub_66F4();
  uint64_t v74 = v8;
  sub_67EC();
  __chkstk_darwin(v9);
  uint64_t v78 = (char *)&v68 - v10;
  type metadata accessor for EmergencyConfirmationRFResponseProvider(0LL);
  sub_6764();
  __chkstk_darwin(v11);
  sub_6750();
  uint64_t v77 = v12;
  uint64_t v13 = sub_3974(&qword_7B378);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_66F4();
  uint64_t v84 = v15;
  sub_67EC();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = sub_6820();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  sub_66F4();
  uint64_t v75 = v21;
  sub_67EC();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v68 - v24;
  uint64_t v26 = Logger.emergency.unsafeMutableAddressor(v23);
  sub_3CC8(v26, (uint64_t)v90);
  uint64_t v82 = v20;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  uint64_t v73 = v26;
  uint64_t v72 = v27;
  v27((uint64_t)v25, v26, v19);
  uint64_t v83 = v14;
  uint64_t v28 = *(uint8_t **)(v14 + 16);
  uint64_t v85 = a1;
  uint64_t v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v18, a1, v13);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  uint64_t v32 = (void (*)(uint64_t, uint64_t))v31;
  BOOL v33 = os_log_type_enabled(v30, v31);
  os_log_type_t v34 = &loc_56000;
  uint64_t v71 = v4;
  if (v33)
  {
    uint64_t v35 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v36 = sub_3CD4(32LL);
    v89[0] = v36;
    uint64_t v70 = v28;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v28 = v35 + 12;
    uint64_t v69 = v35 + 4;
    sub_65F0(&qword_7B380, &qword_7B378);
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter(v13, v37);
    os_log_type_t v34 = (void *)v39;
    uint64_t v88 = sub_543A4(v38, v39, v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v69, v35 + 12);
    swift_bridgeObjectRelease(v34);
    sub_6790();
    sub_67F8(&dword_0, v30, (os_log_type_t)v32, "EmergencyConfirmationRFFlow finished promptFlow with result: %s", v35);
    sub_67DC(v36);
    sub_3CA0(v36);
    sub_3CA0((uint64_t)v35);

    sub_677C();
    uint64_t v40 = v84;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v70)(v84, v85, v13);
  }

  else
  {
    sub_6790();

    sub_677C();
    uint64_t v40 = v84;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v28)(v84, v85, v13);
  }

  int v41 = (*((uint64_t (**)(uint64_t *, uint64_t))v28 + 11))(v40, v13);
  if (v41 != enum case for PromptResult.answered<A>(_:))
  {
    if (v41 != enum case for PromptResult.error<A>(_:))
    {
      *(_BYTE *)(v81 + 16) = 3;
      ((void (*)(uint64_t *, uint64_t))v34)(v40, v13);
      return;
    }

    sub_498BC();
    uint64_t v48 = *v40;
    uint64_t v49 = v73;
    sub_3CC8(v73, (uint64_t)v89);
    uint64_t v50 = v75;
    v72(v75, v49, v19);
    sub_67E4();
    uint64_t v51 = sub_67E4();
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v55 = v19;
      uint64_t v56 = sub_3CD4(32LL);
      uint64_t v87 = v48;
      uint64_t v88 = v56;
      *(_DWORD *)uint64_t v54 = 136315138;
      sub_67E4();
      sub_3974(&qword_78950);
      uint64_t v57 = String.init<A>(describing:)(&v87);
      unint64_t v59 = v58;
      uint64_t v87 = sub_543A4(v57, v58, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease(v59);
      sub_6738();
      sub_6738();
      sub_67F8(&dword_0, v52, v53, "EmergencyConfirmationFlow Error: %s", v54);
      sub_67DC(v56);
      sub_3CA0(v56);
      sub_3CA0((uint64_t)v54);

      sub_6738();
      uint64_t v60 = v75;
      uint64_t v61 = v55;
    }

    else
    {
      sub_6738();
      sub_6738();
      sub_6738();

      uint64_t v60 = v50;
      uint64_t v61 = v19;
    }

    v32(v60, v61);
    goto LABEL_19;
  }

  sub_498BC();
  uint64_t v42 = v77;
  sub_494BC((uint64_t)v40, v77);
  uint64_t v44 = (uint64_t)v78;
  uint64_t v43 = v79;
  uint64_t v45 = v86;
  (*(void (**)(char *, void, uint64_t))(v79 + 104))( v78,  enum case for ConfirmationResponse.confirmed(_:),  v86);
  sub_3F18(v44, 0LL, 1LL, v45);
  uint64_t v46 = v80;
  uint64_t v47 = v80 + *(int *)(v76 + 48);
  sub_5F98(v42, v80);
  sub_5F98(v44, v47);
  if (sub_5FE0(v46, 1LL, v45) != 1)
  {
    uint64_t v62 = v74;
    sub_5F98(v46, v74);
    if (sub_5FE0(v47, 1LL, v86) != 1)
    {
      uint64_t v63 = v71;
      uint64_t v64 = v86;
      sub_1849C(v71, v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32));
      sub_65BC(&qword_78B20, 255LL, (uint64_t (*)(uint64_t))&type metadata accessor for ConfirmationResponse);
      char v65 = dispatch thunk of static Equatable.== infix(_:_:)(v62, v63, v64);
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v66(v63, v64);
      sub_6028(v44, (uint64_t *)&unk_7A600);
      sub_498DC();
      v66(v62, v64);
      sub_6028(v46, (uint64_t *)&unk_7A600);
      if ((v65 & 1) != 0) {
        goto LABEL_18;
      }
LABEL_19:
      char v67 = 3;
      goto LABEL_20;
    }

    sub_6028(v44, (uint64_t *)&unk_7A600);
    sub_498DC();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v62, v86);
LABEL_13:
    sub_6028(v46, &qword_78B10);
    goto LABEL_19;
  }

  sub_6028(v44, (uint64_t *)&unk_7A600);
  sub_498DC();
  sub_6028(v46, (uint64_t *)&unk_7A600);
LABEL_18:
  char v67 = 2;
LABEL_20:
  *(_BYTE *)(v81 + 16) = v67;
}

void *sub_4925C()
{
  return v0;
}

uint64_t sub_492B4()
{
  return swift_deallocClassInstance(v0, 328LL, 7LL);
}

uint64_t type metadata accessor for EmergencyConfirmationRFFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin27EmergencyConfirmationRFFlow);
}

uint64_t storeEnumTagSinglePayload for EmergencyConfirmationRFFlow.EmergencyOfferActionFlowState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_49340 + 4 * byte_59FC9[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_49374 + 4 * byte_59FC4[v4]))();
}

uint64_t sub_49374(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_4937C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x49384LL);
  }
  return result;
}

uint64_t sub_49390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x49398LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_4939C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_493A4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmergencyConfirmationRFFlow.EmergencyOfferActionFlowState()
{
  return &type metadata for EmergencyConfirmationRFFlow.EmergencyOfferActionFlowState;
}

unint64_t sub_493C4()
{
  unint64_t result = qword_7B360[0];
  if (!qword_7B360[0])
  {
    unint64_t result = swift_getWitnessTable( &unk_5A0B0,  &type metadata for EmergencyConfirmationRFFlow.EmergencyOfferActionFlowState);
    atomic_store(result, qword_7B360);
  }

  return result;
}

uint64_t sub_49400(uint64_t a1)
{
  return sub_48120(a1) & 1;
}

uint64_t sub_49424(uint64_t a1, uint64_t a2)
{
  return sub_4884C(a1, a2);
}

uint64_t sub_49444(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc(dword_7B274);
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_5F44;
  return sub_483A8(a1);
}

uint64_t sub_49498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EmergencyConfirmationRFFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_494BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EmergencyConfirmationRFResponseProvider(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_49500(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EmergencyConfirmationRFResponseProvider(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_4953C(uint64_t a1, __int128 *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + 40) = &type metadata for ConfirmationRFFlowConfigModel;
  *(void *)(a7 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = &off_6F418;
  uint64_t v14 = swift_allocObject(&unk_6FF30, 50LL, 7LL);
  *(void *)(a7 + 16) = v14;
  __int128 v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v15;
  *(_WORD *)(v14 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = *(_WORD *)(a1 + 32);
  *(void *)(a7 + 120) = &type metadata for EmergencyModernCATProvider;
  *(void *)(a7 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = &off_6EDF8;
  uint64_t v16 = swift_allocObject(&unk_6FF58, 96LL, 7LL);
  *(void *)(a7 + 96) = v16;
  memcpy((void *)(v16 + 16), a3, 0x50uLL);
  sub_65A4(a2, a7 + 56);
  __int128 v17 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a7 + 136) = *(_OWORD *)a4;
  *(_OWORD *)(a7 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
  *(void *)(a7 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = *(void *)(a4 + 32);
  *(void *)(a7 + sub_60A4(v0 + 256, v0 + 176) = a5;
  *(void *)(a7 + 184) = a6;
  return a7;
}

uint64_t sub_4962C(uint64_t a1, __int128 *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v31[3] = &type metadata for ConfirmationRFFlowConfigModel;
  v31[4] = &off_6F418;
  uint64_t v12 = swift_allocObject(&unk_6FF30, 50LL, 7LL);
  v31[0] = v12;
  __int128 v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v13;
  *(_WORD *)(v12 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = *(_WORD *)(a1 + 32);
  v30[3] = &type metadata for EmergencyModernCATProvider;
  v30[4] = &off_6EDF8;
  v30[0] = swift_allocObject(&unk_6FF58, 96LL, 7LL);
  memcpy((void *)(v30[0] + 16LL), a3, 0x50uLL);
  uint64_t v14 = type metadata accessor for EmergencyPromptForConfirmationRFFlowStrategyAsync();
  uint64_t v15 = swift_allocObject(v14, 192LL, 7LL);
  uint64_t v16 = sub_6120((uint64_t)v31, (uint64_t)&type metadata for ConfirmationRFFlowConfigModel);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ((void (*)(uint64_t, uint64_t))v19->initializeWithCopy)((uint64_t)v18, v20);
  uint64_t v21 = sub_6120((uint64_t)v30, (uint64_t)&type metadata for EmergencyModernCATProvider);
  __chkstk_darwin(v21);
  uint64_t v23 = (void *)((char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL) + 32);
  ((void (*)(uint64_t *, uint64_t *))v24->initializeWithCopy)(v23, v25);
  __int128 v26 = *((_OWORD *)v18 + 1);
  v32[0] = *(_OWORD *)v18;
  v32[1] = v26;
  __int16 v33 = *((_WORD *)v18 + 16);
  memcpy(__dst, v23, sizeof(__dst));
  uint64_t v27 = sub_4953C((uint64_t)v32, a2, __dst, a4, a5, a6, v15);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v30);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v31);
  return v27;
}

uint64_t sub_49814()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 50LL, 7LL);
}

uint64_t sub_49848()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_498BC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

uint64_t sub_498CC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_498DC()
{
  return sub_49500(v0);
}

uint64_t type metadata accessor for CsamCATs(uint64_t a1)
{
  uint64_t result = qword_7B3A0;
  if (!qword_7B3A0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CsamCATs);
  }
  return result;
}

uint64_t sub_4991C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B958);
}

uint64_t sub_49958()
{
  return sub_2004C(21LL, 0x800000000005C510LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_49978()
{
  return sub_2004C(21LL, 0x800000000005C4F0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_49998(uint64_t a1)
{
  return sub_499F8(a1, 0xD000000000000021LL, 0x800000000005C4C0LL);
}

uint64_t sub_499B4()
{
  return sub_2004C(19LL, 0x800000000005C4A0LL, (uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t sub_499D4(uint64_t a1)
{
  return sub_499F8(a1, 0x626577236D617363LL, 0xEF4C525565746973LL);
}

uint64_t sub_499F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3974(&qword_78BB8);
  uint64_t v7 = swift_allocObject(v6, 80LL, 7LL);
  *(_OWORD *)(v7 + 16) = xmmword_56FA0;
  *(void *)(v7 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x6F69746175746973LL;
  *(void *)(v7 + 40) = 0xE90000000000006ELL;
  if (a1)
  {
    uint64_t v8 = type metadata accessor for CsamSituation();
    uint64_t v9 = a1;
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v8 = 0LL;
    *(void *)(v7 + sub_60A4(v0 + 16, v0 + 56) = 0LL;
    *(void *)(v7 + 64) = 0LL;
  }

  *(void *)(v7 + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v9;
  *(void *)(v7 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
  swift_retain(a1);
  dispatch thunk of CATWrapper.execute(catId:parameters:)(a2, a3, v7);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_49ABC()
{
  return type metadata accessor for CsamCATs(0LL);
}

void *initializeWithTake for CallRFFlow(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD1uLL);
}

ValueMetadata *type metadata accessor for CallRFFlow()
{
  return &type metadata for CallRFFlow;
}

uint64_t _s19EmergencyFlowPlugin10CallRFFlowVwxx_0(void *a1)
{
  __n128 v2 = sub_4ACA0();
  return sub_4AD2C(v3, v4, v5, v6, v7, v8, v9, v10, v2, v14, v15, v17, v18, v19, v20, v21, v22, v11, v12, v13);
}

void _s19EmergencyFlowPlugin10CallRFFlowVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v4;
  sub_4AD38(*(double *)&v4);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  sub_4AD38(*(double *)&v5);
  sub_4ABF4();
  sub_4AD8C();
  *(void *)(a1 + 144) = v6;
  *(void *)(a1 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v7;
  *(void *)(a1 + 160) = v8;
  *(void *)(a1 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v9;
  *(void *)(a1 + sub_60A4(v0 + 256, v0 + 176) = v10;
  *(void *)(a1 + 184) = v11;
  *(void *)(a1 + 19_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v12;
  *(void *)(a1 + 200) = v13;
  *(_BYTE *)(a1 + sub_60A4(v0 - 128, v0 - 208) = a2;
  sub_4AC84();
}

void _s19EmergencyFlowPlugin10CallRFFlowVwca_0(uint64_t a1, void *a2)
{
  *(void *)(a1 + 144) = v24;
  *(void *)(a1 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v25;
  *(void *)(a1 + 160) = v26;
  *(void *)(a1 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v27;
  *(void *)(a1 + sub_60A4(v0 + 256, v0 + 176) = v28;
  *(void *)(a1 + 184) = v29;
  *(void *)(a1 + 19_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v30;
  *(void *)(a1 + 200) = v31;
  *(_BYTE *)(a1 + sub_60A4(v0 - 128, v0 - 208) = (_BYTE)a2;
  sub_4AD2C(v4, v5, v6, v7, v8, v9, v10, v11, v15, v16, v17, v18, v19, v20, v21, v22, v23, v12, v13, v14);
  sub_4AC84();
}

uint64_t _s19EmergencyFlowPlugin10CallRFFlowVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + sub_60A4(v0 + 16, v0 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 72);
  char v5 = *(_BYTE *)(a2 + 208);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 136);
  __n128 v14 = *(__n128 *)(a1 + 144);
  __n128 v15 = *(__n128 *)(a1 + 160);
  __n128 v16 = *(__n128 *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 200);
  unsigned __int8 v19 = *(_BYTE *)(a1 + 208);
  __int128 v20 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v20;
  __int128 v21 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v21;
  __int128 v22 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v22;
  __int128 v23 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + sub_60A4(v0 + 256, v0 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 19_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v23;
  *(_BYTE *)(a1 + sub_60A4(v0 - 128, v0 - 208) = v5;
  sub_4AD2C(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v25, v26, v27, v28, v29, v30, v17, v18, v19);
  return a1;
}

uint64_t _s19EmergencyFlowPlugin10CallRFFlowVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 209))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_49D68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0LL;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_OWORD *)(result + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_OWORD *)(result + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
    *(_OWORD *)(result + sub_60A4(v0 + 16, v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_BYTE *)(result + sub_60A4(v0 - 128, v0 - 208) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 209) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 209) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CallFlow()
{
  return &type metadata for CallFlow;
}

uint64_t sub_49DF0(uint64_t a1)
{
  return sub_4A314(a1, "CallFlow onInput");
}

uint64_t sub_49DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = a2;
  uint64_t v65 = a1;
  uint64_t v4 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_6750();
  uint64_t v66 = v6;
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  sub_EDD8();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint8_t *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Input(0LL);
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  sub_EDD8();
  __chkstk_darwin(v12);
  sub_6750();
  uint64_t v71 = v13;
  uint64_t v72 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v70 = *(void *)(v72 - 8);
  sub_EDD8();
  __chkstk_darwin(v14);
  sub_6750();
  uint64_t v69 = v15;
  uint64_t v16 = sub_6820();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v56 = (os_log_s *)((char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v60 = (os_log_s *)((char *)&v55 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v59 = (os_log_s *)((char *)&v55 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v55 - v25;
  uint64_t v27 = Logger.emergency.unsafeMutableAddressor(v24);
  sub_3CC8(v27, (uint64_t)&v74);
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v28 = v63(v26, v27, v16);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v31 = 0;
    sub_EDA8(&dword_0, v29, v30, "CallFlow execute", v31);
    sub_3CA0((uint64_t)v31);
  }

  uint64_t v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  v32(v26, v16);
  sub_E9BC((const void *)(v3 + 80), v76);
  uint64_t v33 = v16;
  if (sub_28A98(v76))
  {
    uint64_t v34 = v69;
    sub_4AD68();
    (*(void (**)(uint8_t *, uint64_t, uint64_t))(v70 + 16))(v10, v34, v72);
    (*(void (**)(uint8_t *, void, uint64_t))(v57 + 104))(v10, enum case for Parse.directInvocation(_:), v58);
    uint64_t v35 = v71;
    Input.init(parse:)(v10);
    uint64_t v36 = type metadata accessor for RedirectToCompanionFlow(0LL);
    uint64_t v37 = sub_45A8(v36);
    uint64_t v38 = v62;
    sub_3F18(v37 + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state, 1LL, 3LL, v62);
    if (sub_1AAC4(v35))
    {
      sub_3CC8(v27, (uint64_t)&v75);
      unint64_t v39 = v59;
      uint64_t v40 = sub_4AD20((uint64_t)v59, v27);
      Logger.logObject.getter(v40);
      os_log_type_t v41 = sub_67D4();
      if (sub_182AC(v41))
      {
        uint64_t v42 = (_WORD *)sub_8D14();
        sub_1FE64(v42);
        sub_EDA8(&dword_0, v39, (os_log_type_t)v33, "Redirecting to companion for phone invocation", v10);
        sub_3CA0((uint64_t)v10);
      }

      v32((char *)v59, v33);
      v73[0] = v37;
      unint64_t v43 = sub_4ABAC();
      uint64_t v33 = v66;
      static ExecuteResponse.complete<A>(next:)(v73, v36, v43);
    }

    else
    {
      sub_3CC8(v27, (uint64_t)v73);
      uint64_t v50 = v60;
      uint64_t v51 = sub_4AD20((uint64_t)v60, v27);
      Logger.logObject.getter(v51);
      os_log_type_t v52 = sub_18418();
      if (sub_182AC(v52))
      {
        os_log_type_t v53 = (uint8_t *)sub_8D14();
        *(_WORD *)os_log_type_t v53 = 0;
        sub_EDA8(&dword_0, v50, (os_log_type_t)v33, "RedirectToCompanionFlow failed to accept input", v53);
        sub_3CA0((uint64_t)v53);
      }

      v32((char *)v60, v33);
      sub_4ACFC();
      uint64_t v54 = sub_4ADA0();
      sub_4AD48(v54);
      sub_EE0C();
    }

    sub_4ADAC();
    swift_release(v37);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v33, v68);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v71, v38);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8))(v69, v72);
  }

  else
  {
    swift_beginAccess(v27, v73, 0LL, 0LL);
    uint64_t v44 = v56;
    uint64_t v45 = sub_4AD20((uint64_t)v56, v27);
    Logger.logObject.getter(v45);
    os_log_type_t v46 = sub_18418();
    if (sub_182AC(v46))
    {
      uint64_t v47 = (_WORD *)sub_8D14();
      sub_1FE64(v47);
      sub_EDA8(&dword_0, v44, (os_log_type_t)v16, "Incorrectly formatted direct invocation payload", v10);
      sub_3CA0((uint64_t)v10);
    }

    v32((char *)v44, v16);
    sub_4ACFC();
    uint64_t v48 = sub_4ADA0();
    sub_4AD48(v48);
    sub_EE0C();
    sub_4ADAC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v16, v68);
  }

uint64_t sub_4A2E4(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_4A308(uint64_t a1)
{
  return sub_4A314(a1, "CallRFFlow onInput");
}

uint64_t sub_4A314(uint64_t a1, const char *a2)
{
  uint64_t v3 = sub_6820();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = Logger.emergency.unsafeMutableAddressor(v5);
  sub_3CC8(v8, (uint64_t)v15);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v12 = 0;
    sub_EDA8(&dword_0, v10, v11, a2, v12);
    sub_3CA0((uint64_t)v12);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return 1LL;
}

uint64_t sub_4A410(uint64_t a1)
{
  v2[52] = a1;
  v2[53] = v1;
  uint64_t v3 = type metadata accessor for Parse(0LL);
  v2[54] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[55] = v4;
  v2[56] = sub_3C88(v4);
  uint64_t v5 = type metadata accessor for Input(0LL);
  v2[57] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[58] = v6;
  v2[59] = sub_3C88(v6);
  uint64_t v7 = type metadata accessor for Parse.DirectInvocation(0LL);
  v2[60] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[61] = v8;
  v2[62] = sub_3C88(v8);
  uint64_t v9 = sub_6820();
  v2[63] = v9;
  v2[64] = *(void *)(v9 - 8);
  v2[65] = sub_45A0();
  v2[66] = sub_45A0();
  v2[67] = sub_45A0();
  v2[68] = sub_45A0();
  return sub_451C();
}

uint64_t sub_4A4D0(uint64_t a1)
{
  uint64_t v2 = *(os_log_s **)(v1 + 544);
  uint64_t v3 = *(void *)(v1 + 504);
  uint64_t v4 = *(void *)(v1 + 512);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, v1 + 312);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v7 = v6((uint64_t)v2, v5, v3);
  uint64_t v8 = v2;
  Logger.logObject.getter(v7);
  os_log_type_t v9 = sub_67D4();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v10 = 0;
    sub_EDA8(&dword_0, v8, v9, "CallRFFlow execute", v10);
    sub_3CA0((uint64_t)v10);
  }

  uint64_t v11 = *(void *)(v1 + 544);
  uint64_t v12 = *(void *)(v1 + 504);
  uint64_t v13 = *(void *)(v1 + 512);
  uint64_t v14 = *(void *)(v1 + 424);

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v15(v11, v12);
  sub_E9BC((const void *)(v14 + 80), (void *)(v1 + 16));
  if (!sub_28A98((char *)(v1 + 16)))
  {
    uint64_t v44 = v1 + 152;
    uint64_t v45 = *(os_log_s **)(v1 + 520);
    os_log_type_t v46 = *(uint8_t **)(v1 + 504);
    swift_beginAccess(v5, v1 + 336, 0LL, 0LL);
    uint64_t v47 = v6((uint64_t)v45, v5, (uint64_t)v46);
    Logger.logObject.getter(v47);
    os_log_type_t v48 = sub_18418();
    if (sub_6728(v48))
    {
      uint64_t v49 = (_WORD *)sub_8D14();
      sub_1FE64(v49);
      sub_EDA8(&dword_0, v45, (os_log_type_t)v5, "Incorrectly formatted direct invocation payload", v46);
      sub_3CA0((uint64_t)v46);
    }

    uint64_t v50 = *(void *)(v1 + 520);
    sub_4AD74();
    v15(v50, (uint64_t)v46);
    sub_4ACD8();
    uint64_t v51 = (void *)sub_4ACC4((uint64_t)&dword_7A8A8);
    *(void *)(v1 + 576) = v51;
    os_log_type_t v52 = sub_4A9E0;
    goto LABEL_14;
  }

  uint64_t v71 = v6;
  uint64_t v73 = (void (*)(uint64_t, os_log_s *))v15;
  uint64_t v17 = *(void *)(v1 + 488);
  uint64_t v16 = *(void *)(v1 + 496);
  uint64_t v18 = *(void *)(v1 + 472);
  uint64_t v19 = *(void *)(v1 + 480);
  uint64_t v21 = *(void *)(v1 + 448);
  uint64_t v20 = *(void *)(v1 + 456);
  uint64_t v22 = *(void *)(v1 + 432);
  uint64_t v23 = *(void *)(v1 + 440);
  sub_4AD68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, v16, v19);
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v21, enum case for Parse.directInvocation(_:), v22);
  Input.init(parse:)(v21);
  uint64_t v24 = type metadata accessor for RedirectToCompanionFlow(0LL);
  uint64_t v25 = sub_45A8(v24);
  *(void *)(v1 + 55_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v25;
  sub_3F18(v25 + OBJC_IVAR____TtC19EmergencyFlowPlugin23RedirectToCompanionFlow_state, 1LL, 3LL, v20);
  if (!sub_1AAC4(v18))
  {
    uint64_t v44 = v1 + 232;
    os_log_type_t v53 = *(os_log_s **)(v1 + 528);
    sub_3CC8(v5, v1 + 360);
    uint64_t v61 = sub_4AD58((uint64_t)v53, v54, v55, v56, v57, v58, v59, v60, v65, v67, v69, v71);
    Logger.logObject.getter(v61);
    os_log_type_t v62 = sub_18418();
    if (sub_6728(v62))
    {
      uint64_t v63 = (_WORD *)sub_8D14();
      sub_1FE64(v63);
      sub_EDA8(&dword_0, v53, (os_log_type_t)v5, "RedirectToCompanionFlow failed to accept input", (uint8_t *)v53);
      sub_3CA0((uint64_t)v53);
    }

    uint64_t v64 = *(void *)(v1 + 528);
    sub_4AD74();
    v73(v64, v53);
    sub_4ACD8();
    uint64_t v51 = (void *)sub_4ACC4((uint64_t)&dword_7A8A8);
    *(void *)(v1 + 560) = v51;
    os_log_type_t v52 = sub_4A8F0;
LABEL_14:
    *uint64_t v51 = v1;
    v51[1] = v52;
    return ((uint64_t (*)(uint64_t))v73)(v44);
  }

  uint64_t v26 = *(void *)(v1 + 536);
  sub_3CC8(v5, v1 + 384);
  uint64_t v34 = sub_4AD58(v26, v27, v28, v29, v30, v31, v32, v33, v65, v67, v69, v71);
  uint64_t v35 = (os_log_s *)v26;
  Logger.logObject.getter(v34);
  os_log_type_t v36 = sub_67D4();
  if (sub_6728(v36))
  {
    uint64_t v37 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v37 = 0;
    sub_EDA8(&dword_0, v35, (os_log_type_t)v5, "Redirecting to companion for phone invocation", v37);
    sub_3CA0((uint64_t)v37);
  }

  uint64_t v38 = *(void *)(v1 + 536);
  unint64_t v39 = *(os_log_s **)(v1 + 504);
  uint64_t v70 = *(void *)(v1 + 480);
  uint64_t v72 = *(void *)(v1 + 496);
  uint64_t v40 = *(void *)(v1 + 464);
  uint64_t v66 = *(void *)(v1 + 472);
  uint64_t v68 = *(void *)(v1 + 488);
  uint64_t v41 = *(void *)(v1 + 456);

  v73(v38, v39);
  *(void *)(v1 + 40_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v25;
  unint64_t v42 = sub_4ABAC();
  static ExecuteResponse.complete<A>(next:)(v1 + 408, v24, v42);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v66, v41);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v72, v70);
  swift_release(v25);
  sub_4AC64();
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_4A8F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 560LL);
  *(void *)(*(void *)v1 + 568LL) = a1;
  swift_task_dealloc(v2);
  return sub_451C();
}

uint64_t sub_4A944()
{
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v5 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 480);
  uint64_t v6 = *(void *)(v0 + 456);
  uint64_t v7 = *(void *)(v0 + 464);
  sub_4AD80();
  swift_release(v1);
  sub_EE0C();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_4AC64();
  sub_9F08();
  sub_4578();
  sub_4528();
  sub_2327C();
  sub_27F60();
  sub_27F88();
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_4A9E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 576LL);
  *(void *)(*(void *)v1 + 584LL) = a1;
  swift_task_dealloc(v2);
  return sub_451C();
}

uint64_t sub_4AA34()
{
  return sub_23274(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_4AA90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_23198();
  return Flow.deferToExecuteAsync(_:)(a1, a2, &type metadata for CallRFFlow, v4);
}

uint64_t sub_4AAD0(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_4AAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_4ABEC;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_4AB5C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7B414);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_4ABF0;
  return sub_4A410(a1);
}

unint64_t sub_4ABAC()
{
  unint64_t result = qword_79CA8;
  if (!qword_79CA8)
  {
    uint64_t v1 = type metadata accessor for RedirectToCompanionFlow(255LL);
    unint64_t result = swift_getWitnessTable(&unk_58074, v1);
    atomic_store(result, (unint64_t *)&qword_79CA8);
  }

  return result;
}

uint64_t sub_4ABF4()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 136);
  uint64_t v10 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 200);
  *(void *)(v1 - 104) = v13;
  *(void *)(v1 - 96) = v14;
  *(void *)(v1 - 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v15;
  return sub_29854(v2, v3, v4, v5, v6, v7, v8, v9, v10, v17, v11, v18, v12, v13, v14, v15, *(_BYTE *)(v0 + 208));
}

uint64_t sub_4AC64()
{
  return swift_task_dealloc(*(void *)(v0 + 544));
}

  ;
}

__n128 sub_4ACA0()
{
  return v0[9];
}

uint64_t sub_4ACC4@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc(*(unsigned int *)(a1 + 4));
}

void *sub_4ACD8()
{
  uint64_t v2 = sub_3324((void *)(v1 + 40), *(void *)(v1 + 64));
  return memcpy(v0, v2, 0x50uLL);
}

void *sub_4ACFC()
{
  uint64_t v2 = sub_3324((void *)(v1 + 40), *(void *)(v1 + 64));
  return memcpy((void *)(v0 + 192), v2, 0x70uLL);
}

uint64_t sub_4AD20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 64))(a1, a2, v3);
}

uint64_t sub_4AD2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20)
{
  return sub_29950( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9.n128_i64[0],  a9.n128_i64[1],  a10.n128_i64[0],  a10.n128_i64[1],  a11.n128_i64[0],  a11.n128_i64[1],  a18,  a19,  a20);
}

uint64_t sub_4AD38(double a1)
{
  return (**(uint64_t (***)(void))(*(void *)&a1 - 8LL))();
}

uint64_t sub_4AD48(uint64_t a1)
{
  return static ExecuteResponse.complete(next:)(a1);
}

uint64_t sub_4AD58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t))
{
  return a12(a1, v12, v13);
}

uint64_t sub_4AD68()
{
  return Parse.DirectInvocation.init(identifier:userData:)(0xD000000000000034LL);
}

void sub_4AD74()
{
}

uint64_t sub_4AD80()
{
  return static ExecuteResponse.complete(next:)(v0);
}

void sub_4AD8C()
{
  v0[10] = v1;
  v0[11] = v2;
  v0[12] = v3;
  v0[13] = v4;
  v0[14] = v5;
  v0[15] = v6;
  v0[16] = v7;
  v0[17] = v8;
}

uint64_t sub_4ADA0()
{
  return sub_37CC(v1, (void *)(v0 + 192));
}

uint64_t sub_4ADAC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 80))(v1);
}

uint64_t sub_4ADB8()
{
  uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_3D310();
  uint64_t v3 = USOParse.userParse.getter();
  uint64_t v4 = Siri_Nlu_External_UserParse.catiIntentName.getter(v3);
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  if (v6)
  {
    if (CATIIntentName.init(rawValue:)(v4, v6) == 23)
    {
      LOBYTE(v6) = 0;
    }

    else
    {
      uint64_t v7 = CATIIntentName.rawValue.getter();
      uint64_t v9 = v8;
      if (v7 == 0xD000000000000029LL && v8 == 0x800000000005C530LL)
      {
        swift_bridgeObjectRelease(0x800000000005C530LL);
        LOBYTE(v6) = 1;
      }

      else
      {
        LOBYTE(v6) = _stringCompareWithSmolCheck(_:_:expecting:)( v7,  v8,  0xD000000000000029LL,  0x800000000005C530LL,  0LL);
        swift_bridgeObjectRelease(v9);
      }
    }
  }

  return v6 & 1;
}

void sub_4AEC8()
{
  uint64_t v3 = v0;
  sub_3974(&qword_7AB88);
  sub_EDD8();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_13020();
  uint64_t v22 = type metadata accessor for Parse.DirectInvocation(v5);
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_3D310();
  uint64_t v7 = (int *)sub_4F2B8();
  uint64_t v8 = &v0[v7[7]];
  uint64_t v9 = *((void *)v8 + 3);
  uint64_t v10 = *((void *)v8 + 4);
  sub_3324(v8, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 64))(v29, v9, v10);
  uint64_t v11 = v30;
  uint64_t v12 = v31;
  sub_3324(v29, v30);
  char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v29);
  if ((v13 & 1) == 0)
  {
    sub_4E6BC((uint64_t)v3 + v7[6], v2, &qword_7AB88);
    uint64_t v19 = sub_5FE0(v2, 1LL, v22);
    if ((_DWORD)v19 == 1)
    {
      sub_4F41C(v19, &qword_7AB88);
      sub_4E6BC((uint64_t)v3, (uint64_t)v27, &qword_7AB90);
      if (v28)
      {
        sub_4F438();
        uint64_t v20 = sub_3324(v29, v30);
        sub_4DD40((uint64_t)v20);
      }

      else
      {
        sub_E988((uint64_t)v27, &qword_7AB90);
        sub_4E6BC((uint64_t)v3 + 40, (uint64_t)v27, &qword_7AB98);
        if (!v28)
        {
          sub_E988((uint64_t)v27, &qword_7AB98);
          goto LABEL_10;
        }

        sub_4F438();
        sub_4FE9C(v29);
      }

      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v29);
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v22);
      sub_4F888(v1);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v22);
    }

void sub_4B19C()
{
  char v1 = v0;
  sub_3974(&qword_78958);
  sub_EDD8();
  __chkstk_darwin(v2);
  sub_6740();
  type metadata accessor for OutputFlow(0LL);
  sub_EDD8();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_13020();
  type metadata accessor for DeviceRestrictions(v4);
  sub_EDD8();
  __chkstk_darwin(v5);
  sub_4F3A8();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  __asm { BR              X10 }

void sub_4B2BC()
{
  uint64_t v1 = type metadata accessor for InfoDomainFallbackFlow();
  uint64_t v2 = sub_77F4(v1, 16LL);
  *(void *)(v0 + 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v2;
  sub_11D44( (unint64_t *)&qword_7B420,  (uint64_t (*)(uint64_t))type metadata accessor for InfoDomainFallbackFlow,  (uint64_t)&unk_5A308);
  Flow.eraseToAnyFlow()(v1);
  swift_release(v2);
  sub_7DF0();
}

void sub_4BCB0()
{
  uint64_t v3 = sub_4F2B8();
  sub_4F268(v3);
  sub_4F298();
  sub_4F2A8();
  uint64_t v4 = type metadata accessor for SirenAppProvider();
  uint64_t v5 = sub_77F4(v4, 16LL);
  uint64_t v6 = *(void *)(v0 + 216);
  sub_6120(v0 + 192, v6);
  sub_4F2C0();
  __chkstk_darwin(v7);
  sub_3D310();
  (*(void (**)(const void *))(v8 + 16))(v1);
  sub_EE24((void *)(v0 + 232), v1);
  uint64_t v9 = (__int128 *)sub_4F424();
  sub_4D494(v9, v10, v11, v12, v5);
  sub_4F444();
  *(void *)(v2 - 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
  type metadata accessor for StopSirenFlow();
  JUMPOUT(0x4BC80LL);
}

uint64_t type metadata accessor for FlowRouter(uint64_t a1)
{
  uint64_t result = qword_7B4B8;
  if (!qword_7B4B8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FlowRouter);
  }
  return result;
}

uint64_t sub_4BE4C(__int128 *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v34 = &type metadata for EmergencyCATProvider;
  uint64_t v35 = &off_6FB48;
  *(void *)&__int128 v33 = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v33 + 16), a2, 0x70uLL);
  sub_60A4((uint64_t)a1, a7 + 16);
  sub_60A4((uint64_t)&v33, a7 + 56);
  sub_60E4(a3, a7 + 96);
  sub_4E6BC(a4, (uint64_t)&v28, &qword_7B418);
  sub_60A4((uint64_t)a1, (uint64_t)v27);
  if (v29)
  {
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_65A4(&v28, (uint64_t)&v30);
  }

  else
  {
    sub_60A4((uint64_t)v27, (uint64_t)&v24);
    uint64_t v31 = type metadata accessor for EmergencyOrganizationInfoProvider(0LL);
    uint64_t v32 = &protocol witness table for EmergencyOrganizationInfoProvider;
    uint64_t v14 = sub_649C(&v30);
    EmergencyOrganizationInfoProvider.init(flowConfig:)(&v24, (uint64_t)v14);
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_E988((uint64_t)&v28, &qword_7B418);
  }

  sub_65A4(&v30, a7 + 136);
  sub_65A4(a1, (uint64_t)v23);
  sub_65A4(&v33, (uint64_t)v22);
  __int128 v15 = *(_OWORD *)(a3 + 16);
  __int128 v19 = *(_OWORD *)a3;
  __int128 v20 = v15;
  uint64_t v21 = *(void *)(a3 + 32);
  if (*(void *)(a5 + 24))
  {
    sub_66BC(&v19);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v23);
    sub_65A4((__int128 *)a5, (uint64_t)&v24);
  }

  else
  {
    uint64_t v25 = &type metadata for GeneralEmergencyFlowFollowupProvider;
    uint64_t v26 = &off_6DCA8;
    uint64_t v16 = swift_allocObject(&unk_70220, 136LL, 7LL);
    *(void *)&__int128 v24 = v16;
    sub_65A4(v23, v16 + 16);
    sub_65A4(v22, v16 + 56);
    __int128 v17 = v20;
    *(_OWORD *)(v16 + 96) = v19;
    *(_OWORD *)(v16 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
    *(void *)(v16 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v21;
    sub_E988(a5, &qword_7B458);
  }

  sub_65A4(&v24, a7 + 176);
  *(_BYTE *)(a7 + sub_60A4(v0 + 256, v0 + 216) = a6;
  return a7;
}

void sub_4C090()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  sub_EDD8();
  __chkstk_darwin(v10);
  sub_6740();
  uint64_t v47 = v12 - v11;
  uint64_t v50 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v13 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  sub_4F3A8();
  uint64_t v15 = __chkstk_darwin(v14);
  __int128 v17 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  __int128 v19 = (char *)&v43 - v18;
  uint64_t v55 = &type metadata for EmergencyCATProvider;
  uint64_t v56 = &off_6FB48;
  v54[0] = sub_77F4((uint64_t)&unk_70158, 128LL);
  sub_EE24((void *)(v54[0] + 16LL), v2);
  uint64_t v20 = sub_3974(&qword_791E8);
  uint64_t inited = swift_initStackObject(v20, &v53);
  *(_OWORD *)(inited + 16) = xmmword_56FA0;
  sub_3A40(v2);
  *(void *)(inited + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = DirectInvocationURI.payloadKey.getter(1LL);
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v8;
  *(void *)(inited + sub_60A4(v0 + 16, v0 + 56) = v6;
  swift_bridgeObjectRetain(v6);
  Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  Parse.DirectInvocation.init(identifier:userData:)(0xD000000000000032LL);
  sub_4F3CC(v4);
  sub_4F3EC();
  uint64_t v23 = v57[3];
  uint64_t v24 = v57[4];
  sub_4F3CC(v57);
  if ((*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 8))(v19, v23, v24))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v50);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v57);
  }

  else
  {
    uint64_t v25 = _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v57);
    uint64_t v26 = Logger.emergency.unsafeMutableAddressor(v25);
    sub_3CC8(v26, (uint64_t)v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v47, v26, v49);
    uint64_t v27 = *(uint64_t (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v28 = v50;
    uint64_t v29 = v27(v17, v19, v50);
    __int128 v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = sub_3CD4(12LL);
      os_log_t v45 = v30;
      __int128 v33 = (uint8_t *)v32;
      uint64_t v46 = sub_3CD4(32LL);
      v57[0] = v46;
      *(_DWORD *)__int128 v33 = 136315138;
      uint64_t v44 = v33 + 4;
      v27(v0, v17, v50);
      uint64_t v34 = String.init<A>(describing:)(v0);
      unint64_t v36 = v35;
      uint64_t v51 = sub_543A4(v34, v35, v57);
      uint64_t v28 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v44, v33 + 12);
      swift_bridgeObjectRelease(v36);
      uint64_t v37 = *(void (**)(char *, uint64_t))(v13 + 8);
      sub_4F39C();
      os_log_t v38 = v45;
      _os_log_impl(&dword_0, v45, v31, "Canned flow not found for direct invocation %s", v33, 0xCu);
      uint64_t v39 = v46;
      swift_arrayDestroy(v46, 1LL);
      sub_3CA0(v39);
      sub_3CA0((uint64_t)v33);
    }

    else
    {
      uint64_t v37 = *(void (**)(char *, uint64_t))(v13 + 8);
      sub_4F39C();
    }

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    uint64_t v40 = sub_3324(v54, (uint64_t)v55);
    sub_EE24(v57, v40);
    uint64_t v41 = sub_37CC((uint64_t)v4, v57);
    uint64_t v51 = v41;
    uint64_t v42 = type metadata accessor for AnyFlow(0LL);
    Flow.eraseToAnyFlow()(v42);
    swift_release(v41);
    v37(v19, v28);
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v54);
  sub_7DF0();
}

uint64_t sub_4C460(__int128 *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v34 = &type metadata for EmergencyCATProvider;
  unint64_t v35 = &off_6FB48;
  *(void *)&__int128 v33 = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v33 + 16), a2, 0x70uLL);
  sub_60A4((uint64_t)a1, a7 + 16);
  sub_60A4((uint64_t)&v33, a7 + 56);
  sub_60E4(a3, a7 + 96);
  sub_4E6BC(a4, (uint64_t)&v28, &qword_7B418);
  sub_60A4((uint64_t)a1, (uint64_t)v27);
  if (v29)
  {
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_65A4(&v28, (uint64_t)&v30);
  }

  else
  {
    sub_60A4((uint64_t)v27, (uint64_t)&v24);
    uint64_t v31 = type metadata accessor for EmergencyOrganizationInfoProvider(0LL);
    uint64_t v32 = &protocol witness table for EmergencyOrganizationInfoProvider;
    uint64_t v14 = sub_649C(&v30);
    EmergencyOrganizationInfoProvider.init(flowConfig:)(&v24, (uint64_t)v14);
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_E988((uint64_t)&v28, &qword_7B418);
  }

  sub_65A4(&v30, a7 + 136);
  sub_65A4(a1, (uint64_t)v23);
  sub_65A4(&v33, (uint64_t)v22);
  __int128 v15 = *(_OWORD *)(a3 + 16);
  __int128 v19 = *(_OWORD *)a3;
  __int128 v20 = v15;
  uint64_t v21 = *(void *)(a3 + 32);
  if (*(void *)(a5 + 24))
  {
    sub_66BC(&v19);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v23);
    sub_65A4((__int128 *)a5, (uint64_t)&v24);
  }

  else
  {
    uint64_t v25 = &type metadata for EmergencyOfferCallFlowFollowupProvider;
    uint64_t v26 = &off_6E0B8;
    uint64_t v16 = swift_allocObject(&unk_701F8, 136LL, 7LL);
    *(void *)&__int128 v24 = v16;
    sub_65A4(v23, v16 + 16);
    sub_65A4(v22, v16 + 56);
    __int128 v17 = v20;
    *(_OWORD *)(v16 + 96) = v19;
    *(_OWORD *)(v16 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
    *(void *)(v16 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v21;
    sub_E988(a5, &qword_7B450);
  }

  sub_65A4(&v24, a7 + 176);
  *(_BYTE *)(a7 + 2sub_66BC(v0 + 18) = BYTE2(a6);
  *(_WORD *)(a7 + sub_60A4(v0 + 256, v0 + 216) = a6;
  return a7;
}

uint64_t sub_4C6AC(void *a1, const void *a2, void *a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  void v21[3] = &type metadata for EmergencyCATProvider;
  v21[4] = &off_6FB48;
  v21[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v21[0] + 16LL), a2, 0x70uLL);
  sub_60A4((uint64_t)a1, a6 + 16);
  sub_60A4((uint64_t)v21, a6 + 56);
  sub_60E4((uint64_t)a3, a6 + 96);
  sub_4E6BC(a4, (uint64_t)&v16, &qword_7B418);
  sub_60A4((uint64_t)a1, (uint64_t)v15);
  if (v17)
  {
    sub_E988(a4, &qword_7B418);
    sub_66BC(a3);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v21);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v15);
    sub_65A4(&v16, (uint64_t)&v18);
  }

  else
  {
    sub_60A4((uint64_t)v15, (uint64_t)v14);
    uint64_t v19 = type metadata accessor for EmergencyOrganizationInfoProvider(0LL);
    __int128 v20 = &protocol witness table for EmergencyOrganizationInfoProvider;
    uint64_t v12 = sub_649C(&v18);
    EmergencyOrganizationInfoProvider.init(flowConfig:)(v14, (uint64_t)v12);
    sub_E988(a4, &qword_7B418);
    sub_66BC(a3);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v21);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v15);
    sub_E988((uint64_t)&v16, &qword_7B418);
  }

  sub_65A4(&v18, a6 + 136);
  *(_WORD *)(a6 + sub_60A4(v0 + 256, v0 + 176) = a5;
  return a6;
}

uint64_t sub_4C850(__int128 *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v34 = &type metadata for EmergencyCATProvider;
  unint64_t v35 = &off_6FB48;
  *(void *)&__int128 v33 = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v33 + 16), a2, 0x70uLL);
  sub_60A4((uint64_t)a1, a7 + 16);
  sub_60A4((uint64_t)&v33, a7 + 56);
  sub_60E4(a3, a7 + 96);
  sub_4E6BC(a4, (uint64_t)&v28, &qword_7B418);
  sub_60A4((uint64_t)a1, (uint64_t)v27);
  if (v29)
  {
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_65A4(&v28, (uint64_t)&v30);
  }

  else
  {
    sub_60A4((uint64_t)v27, (uint64_t)&v24);
    uint64_t v31 = type metadata accessor for EmergencyOrganizationInfoProvider(0LL);
    uint64_t v32 = &protocol witness table for EmergencyOrganizationInfoProvider;
    uint64_t v14 = sub_649C(&v30);
    EmergencyOrganizationInfoProvider.init(flowConfig:)(&v24, (uint64_t)v14);
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_E988((uint64_t)&v28, &qword_7B418);
  }

  sub_65A4(&v30, a7 + 136);
  sub_65A4(a1, (uint64_t)v23);
  sub_65A4(&v33, (uint64_t)v22);
  __int128 v15 = *(_OWORD *)(a3 + 16);
  __int128 v19 = *(_OWORD *)a3;
  __int128 v20 = v15;
  uint64_t v21 = *(void *)(a3 + 32);
  if (*(void *)(a5 + 24))
  {
    sub_66BC(&v19);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v23);
    sub_65A4((__int128 *)a5, (uint64_t)&v24);
  }

  else
  {
    uint64_t v25 = &type metadata for EmergencyDirectCallFlowFollowupProvider;
    uint64_t v26 = &off_6E408;
    uint64_t v16 = swift_allocObject(&unk_701A8, 136LL, 7LL);
    *(void *)&__int128 v24 = v16;
    sub_65A4(v23, v16 + 16);
    sub_65A4(v22, v16 + 56);
    __int128 v17 = v20;
    *(_OWORD *)(v16 + 96) = v19;
    *(_OWORD *)(v16 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
    *(void *)(v16 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v21;
    sub_E988(a5, &qword_7B440);
  }

  sub_65A4(&v24, a7 + 176);
  *(_BYTE *)(a7 + 2sub_66BC(v0 + 18) = BYTE2(a6);
  *(_WORD *)(a7 + sub_60A4(v0 + 256, v0 + 216) = a6;
  return a7;
}

uint64_t sub_4CA9C(__int128 *a1, const void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 80) = &type metadata for EmergencyCATProvider;
  *(void *)(a6 + 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = &off_6FB48;
  uint64_t v12 = swift_allocObject(&unk_70158, 128LL, 7LL);
  *(void *)(a6 + sub_60A4(v0 + 16, v0 + 56) = v12;
  memcpy((void *)(v12 + 16), a2, 0x70uLL);
  uint64_t v16 = type metadata accessor for SirenAppProvider();
  __int128 v17 = &off_6EE60;
  *(void *)&__int128 v15 = a5;
  sub_65A4(a1, a6 + 16);
  __int128 v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a6 + 96) = *(_OWORD *)a3;
  *(_OWORD *)(a6 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v13;
  *(void *)(a6 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = *(void *)(a3 + 32);
  *(_BYTE *)(a6 + 136) = a4;
  sub_65A4(&v15, a6 + 144);
  return a6;
}

uint64_t sub_4CB6C(__int128 *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7)
{
  uint64_t v34 = &type metadata for EmergencyCATProvider;
  unint64_t v35 = &off_6FB48;
  *(void *)&__int128 v33 = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v33 + 16), a2, 0x70uLL);
  sub_60A4((uint64_t)a1, a7 + 16);
  sub_60A4((uint64_t)&v33, a7 + 56);
  sub_60E4(a3, a7 + 96);
  sub_4E6BC(a4, (uint64_t)&v28, &qword_7B418);
  sub_60A4((uint64_t)a1, (uint64_t)v27);
  if (v29)
  {
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_65A4(&v28, (uint64_t)&v30);
  }

  else
  {
    sub_60A4((uint64_t)v27, (uint64_t)&v24);
    uint64_t v31 = type metadata accessor for EmergencyOrganizationInfoProvider(0LL);
    uint64_t v32 = &protocol witness table for EmergencyOrganizationInfoProvider;
    uint64_t v14 = sub_649C(&v30);
    EmergencyOrganizationInfoProvider.init(flowConfig:)(&v24, (uint64_t)v14);
    sub_E988(a4, &qword_7B418);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
    sub_E988((uint64_t)&v28, &qword_7B418);
  }

  sub_65A4(&v30, a7 + 136);
  sub_65A4(a1, (uint64_t)v23);
  sub_65A4(&v33, (uint64_t)v22);
  __int128 v15 = *(_OWORD *)(a3 + 16);
  __int128 v19 = *(_OWORD *)a3;
  __int128 v20 = v15;
  uint64_t v21 = *(void *)(a3 + 32);
  if (*(void *)(a5 + 24))
  {
    sub_66BC(&v19);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v23);
    sub_65A4((__int128 *)a5, (uint64_t)&v24);
  }

  else
  {
    uint64_t v25 = &type metadata for EmergencyBasicFlowFollowupProvider;
    uint64_t v26 = &off_6FCF0;
    uint64_t v16 = swift_allocObject(&unk_70180, 136LL, 7LL);
    *(void *)&__int128 v24 = v16;
    sub_65A4(v23, v16 + 16);
    sub_65A4(v22, v16 + 56);
    __int128 v17 = v20;
    *(_OWORD *)(v16 + 96) = v19;
    *(_OWORD *)(v16 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v17;
    *(void *)(v16 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v21;
    sub_E988(a5, &qword_7B438);
  }

  sub_65A4(&v24, a7 + 176);
  *(_WORD *)(a7 + sub_60A4(v0 + 256, v0 + 216) = a6;
  return a7;
}

void sub_4CDB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  int v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  unint64_t v36 = v35;
  v65[3] = &type metadata for EmergencyCATProvider;
  v65[4] = &off_6FB48;
  v65[0] = sub_77F4((uint64_t)&unk_70158, 128LL);
  uint64_t v37 = sub_EE24((void *)(v65[0] + 16LL), v34);
  sub_4F3C4((uint64_t)v37, v24 + 64);
  sub_60A4((uint64_t)v65, v24 + 104);
  sub_60E4((uint64_t)v32, v24 + 144);
  sub_4E6BC(v30, (uint64_t)&v60, &qword_7B418);
  sub_4F3C4(v38, (uint64_t)v59);
  if (v61)
  {
    sub_4F464();
    sub_65A4(&v60, (uint64_t)&v62);
  }

  else
  {
    sub_60A4((uint64_t)v59, (uint64_t)&v56);
    uint64_t v63 = type metadata accessor for EmergencyOrganizationInfoProvider(0LL);
    uint64_t v64 = &protocol witness table for EmergencyOrganizationInfoProvider;
    uint64_t v39 = sub_649C(&v62);
    EmergencyOrganizationInfoProvider.init(flowConfig:)(&v56, (uint64_t)v39);
    sub_4F464();
    sub_E988((uint64_t)&v60, &qword_7B418);
  }

  sub_65A4(&v62, v24 + 24);
  sub_4E6BC(v28, (uint64_t)&v54, &qword_7B448);
  sub_4F3C4(v40, (uint64_t)v53);
  sub_60A4((uint64_t)v65, (uint64_t)v52);
  sub_60E4((uint64_t)v32, (uint64_t)v50);
  if (v55)
  {
    sub_E988(v28, &qword_7B448);
    sub_4F41C(v41, &qword_7B418);
    sub_66BC(v32);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v65);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v36);
    sub_66BC(v50);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v52);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v53);
    sub_65A4(&v54, (uint64_t)&v56);
  }

  else
  {
    sub_60A4((uint64_t)v53, (uint64_t)v49);
    sub_60A4((uint64_t)v52, (uint64_t)v48);
    uint64_t v46 = v22;
    uint64_t v47 = a21;
    sub_E988(v28, &qword_7B448);
    sub_4F41C(v42, &qword_7B418);
    sub_66BC(v32);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v65);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v36);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v52);
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v53);
    uint64_t v57 = &type metadata for EmergencyFlowFollowupProvider;
    uint64_t v58 = &off_6E900;
    uint64_t v43 = sub_77F4((uint64_t)&unk_701D0, 176LL);
    *(void *)&__int128 v56 = v43;
    sub_65A4(v49, v43 + 16);
    sub_65A4(v48, v43 + 56);
    sub_65A4(&v45, v43 + 96);
    __int128 v44 = v50[1];
    *(_OWORD *)(v43 + 136) = v50[0];
    *(_OWORD *)(v43 + 15_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v44;
    *(void *)(v43 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v51;
    sub_E988((uint64_t)&v54, &qword_7B448);
  }

  sub_65A4(&v56, v24 + 184);
  *(_BYTE *)(v24 + sub_66BC(v0 + 18) = BYTE2(v26);
  *(_WORD *)(v24 + 16) = v26;
  sub_7DF0();
}

uint64_t sub_4D068(__int128 *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  void v22[3] = &type metadata for EmergencyCATProvider;
  v22[4] = &off_6FB48;
  v22[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v22[0] + 16LL), a2, 0x70uLL);
  uint64_t v12 = type metadata accessor for EmergencyBasicFlow();
  uint64_t v13 = swift_allocObject(v12, 218LL, 7LL);
  uint64_t v14 = sub_6120((uint64_t)v22, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)&v22[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ((void (*)(uint64_t *, uint64_t *))v17->initializeWithCopy)(v16, v18);
  memcpy(__dst, v16, sizeof(__dst));
  uint64_t v19 = sub_4CB6C(a1, __dst, a3, a4, a5, a6, v13);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
  return v19;
}

uint64_t sub_4D19C(__int128 *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void v22[3] = &type metadata for EmergencyCATProvider;
  v22[4] = &off_6FB48;
  v22[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v22[0] + 16LL), a2, 0x70uLL);
  uint64_t v12 = type metadata accessor for GeneralEmergencyFlow();
  uint64_t v13 = swift_allocObject(v12, 217LL, 7LL);
  uint64_t v14 = sub_6120((uint64_t)v22, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)&v22[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ((void (*)(uint64_t *, uint64_t *))v17->initializeWithCopy)(v16, v18);
  memcpy(__dst, v16, sizeof(__dst));
  uint64_t v19 = sub_4BE4C(a1, __dst, a3, a4, a5, a6, v13);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v22);
  return v19;
}

void sub_4D2D0()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_4F46C();
  v10[3] = &type metadata for EmergencyCATProvider;
  v10[4] = &off_6FB48;
  v10[0] = sub_77F4((uint64_t)&unk_70158, 128LL);
  sub_EE24((void *)(v10[0] + 16LL), v0);
  uint64_t v5 = v4(0LL);
  sub_77F4(v5, 219LL);
  sub_6120((uint64_t)v10, (uint64_t)&type metadata for EmergencyCATProvider);
  sub_4F2C0();
  __chkstk_darwin(v6);
  sub_4F2DC(v7, v8, v9);
  sub_EE24(&v11, v0);
  sub_4F450();
  v2();
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v10);
  sub_7DF0();
}

void sub_4D3AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  uint64_t v23 = v22;
  int v25 = v24;
  sub_4F46C();
  uint64_t v39 = &type metadata for EmergencyCATProvider;
  uint64_t v40 = &off_6FB48;
  v38[0] = sub_77F4((uint64_t)&unk_70158, 128LL);
  sub_EE24((void *)(v38[0] + 16), v21);
  uint64_t v26 = v25(0LL);
  sub_77F4(v26, 224LL);
  sub_6120((uint64_t)v38, (uint64_t)&type metadata for EmergencyCATProvider);
  sub_4F2C0();
  __chkstk_darwin(v27);
  sub_4F2DC(v28, v29, v38[0]);
  sub_EE24(v41, v21);
  sub_4F450();
  sub_4CDB0( v30,  v31,  v32,  v33,  v34,  v35,  v36,  v23,  a21,  v37,  v38[0],  v38[1],  v38[2],  (uint64_t)v39,  (uint64_t)v40,  v41[0],  v41[1],  v41[2],  v41[3],  v41[4],  v41[5]);
  sub_4F464();
  sub_7DF0();
}

uint64_t sub_4D494(__int128 *a1, const void *a2, uint64_t a3, char a4, uint64_t a5)
{
  v26[3] = &type metadata for EmergencyCATProvider;
  v26[4] = &off_6FB48;
  v26[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v26[0] + 16LL), a2, 0x70uLL);
  uint64_t v10 = type metadata accessor for SirenAppProvider();
  void v25[3] = v10;
  v25[4] = &off_6EE60;
  v25[0] = a5;
  uint64_t v11 = type metadata accessor for StopSirenFlow();
  uint64_t v12 = swift_allocObject(v11, 184LL, 7LL);
  uint64_t v13 = sub_6120((uint64_t)v26, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ((void (*)(uint64_t *, uint64_t *))v16->initializeWithCopy)(v15, v17);
  uint64_t v18 = sub_6120((uint64_t)v25, v10);
  __chkstk_darwin(v18);
  __int128 v20 = (void *)((char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL) + 96);
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  memcpy(__dst, v15, sizeof(__dst));
  uint64_t v22 = sub_4CA9C(a1, __dst, a3, a4, *v20, v12);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v25);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v26);
  return v22;
}

uint64_t sub_4D630(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_3974(&qword_78958);
  __chkstk_darwin(v6);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = (int *)type metadata accessor for ConfirmationFlowConfigModel(0LL);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v10);
  uint64_t v14 = &v25[-v13 - 8];
  uint64_t v32 = &type metadata for EmergencyCATProvider;
  uint64_t v33 = &off_6FB48;
  v31[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v31[0] + 16LL), a2, 0x70uLL);
  sub_60A4(a1, (uint64_t)v28);
  sub_60A4((uint64_t)v31, (uint64_t)v29);
  sub_EA68((uint64_t)v35);
  sub_E9BC(v35, v30);
  sub_3A40(a2);
  sub_E9F8();
  uint64_t v15 = Flow.eraseToAnyFlow()(&type metadata for CallFlow);
  sub_EA34((uint64_t)v28);
  uint64_t v16 = sub_3324(v31, (uint64_t)v32)[1];
  swift_retain(v16);
  sub_2390C();
  swift_release(v16);
  uint64_t v17 = sub_3324(v31, (uint64_t)v32)[1];
  swift_retain(v17);
  sub_2396C();
  swift_release(v17);
  sub_38118((uint64_t)v8, (uint64_t)v14);
  *(void *)&v14[v9[6]] = v15;
  *(void *)&v14[v9[7]] = 2LL;
  v14[v9[8]] = 0;
  v14[v9[9]] = 1;
  v28[0] = 0LL;
  v28[1] = 0xE000000000000000LL;
  void v28[2] = 0LL;
  v28[3] = 0xE000000000000000LL;
  v28[4] = 0LL;
  v29[0] = 0xE000000000000000LL;
  v29[1] = 0xD000000000000012LL;
  v29[2] = 0x800000000005C580LL;
  void v29[3] = 0LL;
  v29[4] = 0xE000000000000000LL;
  v30[0] = 0LL;
  v30[1] = 0xE000000000000000LL;
  v30[2] = 0LL;
  v30[3] = 0xE000000000000000LL;
  v30[4] = 0LL;
  void v30[5] = 0xE000000000000000LL;
  sub_60A4(a1, (uint64_t)v27);
  sub_60A4((uint64_t)v31, (uint64_t)v26);
  sub_60E4(a3, (uint64_t)v25);
  uint64_t v18 = sub_6120((uint64_t)v26, v26[3]);
  __chkstk_darwin(v18);
  __int128 v20 = &v25[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  (*(void (**)(_BYTE *))(v21 + 16))(v20);
  sub_4E714((uint64_t)v14, (uint64_t)v12, type metadata accessor for ConfirmationFlowConfigModel);
  memcpy(v34, v20, sizeof(v34));
  swift_retain(v15);
  uint64_t v22 = sub_54D28(v28, (uint64_t)v12, v27, v34, (uint64_t)v25, 0, 0LL, 0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v26);
  swift_release(v15);
  sub_EAF0((uint64_t)v14, type metadata accessor for ConfirmationFlowConfigModel);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v31);
  return v22;
}

uint64_t sub_4D964(__int128 *a1, const void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  v28[3] = &type metadata for EmergencyCATProvider;
  v28[4] = &off_6FB48;
  v28[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v28[0] + 16LL), a2, 0x70uLL);
  uint64_t v12 = type metadata accessor for SirenAppProvider();
  void v27[3] = v12;
  v27[4] = &off_6EE60;
  v27[0] = a5;
  uint64_t started = type metadata accessor for StartSirenFlow();
  uint64_t v14 = swift_allocObject(started, 224LL, 7LL);
  uint64_t v15 = sub_6120((uint64_t)v28, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ((void (*)(uint64_t *, uint64_t *))v18->initializeWithCopy)(v17, v19);
  uint64_t v20 = sub_6120((uint64_t)v27, v12);
  __chkstk_darwin(v20);
  uint64_t v22 = (void *)((char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL) + 96);
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  memcpy(__dst, v17, sizeof(__dst));
  uint64_t v24 = sub_4DB14(a1, __dst, a3, a4, *v22, a6, v14);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v27);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v28);
  return v24;
}

uint64_t sub_4DB14(__int128 *a1, const void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = type metadata accessor for DeviceResolutionService(0LL);
  uint64_t v22 = &protocol witness table for DeviceResolutionService;
  *(void *)&__int128 v20 = a6;
  *(void *)(a7 + 80) = &type metadata for EmergencyCATProvider;
  *(void *)(a7 + 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = &off_6FB48;
  uint64_t v14 = swift_allocObject(&unk_70158, 128LL, 7LL);
  *(void *)(a7 + sub_60A4(v0 + 16, v0 + 56) = v14;
  memcpy((void *)(v14 + 16), a2, 0x70uLL);
  uint64_t v18 = type metadata accessor for SirenAppProvider();
  uint64_t v19 = &off_6EE60;
  *(void *)&__int128 v17 = a5;
  sub_65A4(a1, a7 + 16);
  __int128 v15 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a7 + 96) = *(_OWORD *)a3;
  *(_OWORD *)(a7 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v15;
  *(void *)(a7 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = *(void *)(a3 + 32);
  *(_BYTE *)(a7 + 136) = a4;
  sub_65A4(&v17, a7 + 144);
  sub_65A4(&v20, a7 + 184);
  return a7;
}

uint64_t sub_4DC14(void *a1, const void *a2, void *a3, uint64_t a4, __int16 a5)
{
  v20[3] = &type metadata for EmergencyCATProvider;
  v20[4] = &off_6FB48;
  v20[0] = swift_allocObject(&unk_70158, 128LL, 7LL);
  memcpy((void *)(v20[0] + 16LL), a2, 0x70uLL);
  uint64_t v10 = type metadata accessor for OfflineFlow();
  uint64_t v11 = swift_allocObject(v10, 178LL, 7LL);
  uint64_t v12 = sub_6120((uint64_t)v20, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  ((void (*)(uint64_t *, uint64_t *))v15->initializeWithCopy)(v14, v16);
  memcpy(__dst, v14, sizeof(__dst));
  uint64_t v17 = sub_4C6AC(a1, __dst, a3, a4, a5, v11);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v20);
  return v17;
}

uint64_t sub_4DD40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for EmergencyNLIntent(0LL);
  uint64_t v50 = v6;
  sub_11D44(&qword_790D0, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_5723C);
  uint64_t v51 = v7;
  uint64_t v8 = sub_649C(v49);
  sub_4E714(a1, (uint64_t)v8, type metadata accessor for EmergencyNLIntent);
  sub_3324(v49, v50);
  if (qword_785B8 != -1) {
    swift_once(&qword_785B8, sub_A2BC);
  }
  uint64_t v9 = qword_78CC0;
  sub_11D44(&qword_78D98, type metadata accessor for EmergencyNLIntent, (uint64_t)&unk_57258);
  uint64_t v11 = v10;
  IntentNodeTraversable.value<A>(forNode:)(v9, v6, v10);
  if (LOBYTE(v47[0]) - 6 <= 3)
  {
    uint64_t v12 = 1LL;
    goto LABEL_18;
  }

  sub_3324(v49, v50);
  IntentNodeTraversable.value<A>(forNode:)(v9, v6, v11);
  if (LOBYTE(v47[0]) == 35)
  {
    sub_60A4((uint64_t)v49, (uint64_t)v47);
  }

  else
  {
    uint64_t v13 = EmergencySituation.rawValue.getter(LOBYTE(v47[0]));
    uint64_t v15 = v14;
    if (v13 == 0xD00000000000001ALL && v14 == 0x800000000005B190LL)
    {
      swift_bridgeObjectRelease(0x800000000005B190LL);
      sub_60A4((uint64_t)v49, (uint64_t)v47);
LABEL_16:
      _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
LABEL_17:
      uint64_t v12 = 3LL;
      goto LABEL_18;
    }

    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, 0xD00000000000001ALL, 0x800000000005B190LL, 0LL);
    swift_bridgeObjectRelease(v15);
    sub_60A4((uint64_t)v49, (uint64_t)v47);
    if ((v19 & 1) != 0) {
      goto LABEL_16;
    }
  }

  sub_3324(v47, v48);
  IntentNodeTraversable.value<A>(forNode:)(qword_78CC0, v6, v11);
  if (LOBYTE(v46[0]) == 35)
  {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
    goto LABEL_20;
  }

  uint64_t v16 = EmergencySituation.rawValue.getter(LOBYTE(v46[0]));
  uint64_t v18 = v17;
  if (v16 == 0xD00000000000001BLL && v17 == 0x800000000005C560LL)
  {
    swift_bridgeObjectRelease(0x800000000005C560LL);
    goto LABEL_16;
  }

  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, 0xD00000000000001BLL, 0x800000000005C560LL, 0LL);
  swift_bridgeObjectRelease(v18);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v47);
  if ((v21 & 1) != 0) {
    goto LABEL_17;
  }
LABEL_20:
  sub_3324(v49, v50);
  if (qword_785B0 != -1) {
    swift_once(&qword_785B0, sub_A288);
  }
  uint64_t v22 = IntentNodeTraversable.value<A>(forNode:)(qword_78CB8, v6, v11);
  if (!LOBYTE(v46[0]))
  {
    uint64_t v12 = 2LL;
    goto LABEL_18;
  }

  if (LOBYTE(v46[0]) == 1)
  {
    sub_3324(v49, v50);
    if (qword_785D0 != -1) {
      swift_once(&qword_785D0, sub_A334);
    }
    IntentNodeTraversable.value<A>(forNode:)(qword_78CD8, v6, v11);
    if (LOBYTE(v46[0]) == 2) {
      goto LABEL_60;
    }
    if ((v46[0] & 1) != 0)
    {
      swift_bridgeObjectRelease(0xE700000000000000LL);
    }

    else
    {
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x756E20656E6F6870LL,  0xEC0000007265626DLL,  0x65746973626577LL,  0xE700000000000000LL,  0LL);
      swift_bridgeObjectRelease(0xEC0000007265626DLL);
      if ((v23 & 1) == 0) {
        goto LABEL_60;
      }
    }

uint64_t sub_4E628()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

void sub_4E6BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_3974(a3);
  sub_4F36C(v3);
  sub_6774();
}

uint64_t sub_4E6E8()
{
  return swift_deallocObject(v0, 176LL, 7LL);
}

void sub_4E714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3(0LL);
  sub_4F36C(v3);
  sub_6774();
}

uint64_t sub_4E744()
{
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t sub_4E764(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v7;
      *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }

    else
    {
      __int128 v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a2[4];
    }

    uint64_t v11 = (_OWORD *)(v4 + 40);
    uint64_t v12 = a2 + 5;
    uint64_t v13 = a2[8];
    if (v13)
    {
      uint64_t v14 = a2[9];
      *(void *)(v4 + 64) = v13;
      *(void *)(v4 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }

    else
    {
      __int128 v15 = *(_OWORD *)(a2 + 7);
      *uint64_t v11 = *v12;
      *(_OWORD *)(v4 + sub_60A4(v0 + 16, v0 + 56) = v15;
      *(void *)(v4 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a2[9];
    }

    uint64_t v16 = a3[6];
    uint64_t v17 = (void *)(v4 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for Parse.DirectInvocation(0LL);
    if (sub_5FE0((uint64_t)v18, 1LL, v19))
    {
      uint64_t v20 = sub_3974(&qword_7AB88);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
      sub_3F18((uint64_t)v17, 0LL, 1LL, v19);
    }

    uint64_t v21 = a3[7];
    __int128 v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)(v4 + v21 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
    uint64_t v23 = a3[8];
    __int128 v24 = *(_OWORD *)((char *)a2 + v23 + 24);
    *(_OWORD *)(v4 + v23 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v24;
    (**(void (***)(void))(v24 - 8))();
    uint64_t v25 = a3[9];
    __int128 v26 = *(_OWORD *)((char *)a2 + v25 + 24);
    *(_OWORD *)(v4 + v25 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v26;
    (**(void (***)(void))(v26 - 8))();
  }

  return v4;
}

uint64_t sub_4E920(void *a1, int *a2)
{
  if (a1[3]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
  }
  if (a1[8]) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1 + 5);
  }
  uint64_t v4 = (uint64_t)a1 + a2[6];
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation(0LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)((char *)a1 + a2[7]));
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)((char *)a1 + a2[8]));
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)((char *)a1 + a2[9]));
}

uint64_t sub_4E9C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
    *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }

  else
  {
    __int128 v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  }

  uint64_t v9 = (_OWORD *)(a1 + 40);
  __int128 v10 = (_OWORD *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }

  else
  {
    __int128 v13 = *(_OWORD *)(a2 + 56);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + sub_60A4(v0 + 16, v0 + 56) = v13;
    *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 72);
  }

  uint64_t v14 = a3[6];
  __int128 v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for Parse.DirectInvocation(0LL);
  if (sub_5FE0((uint64_t)v16, 1LL, v17))
  {
    uint64_t v18 = sub_3974(&qword_7AB88);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16LL))(v15, v16, v17);
    sub_3F18((uint64_t)v15, 0LL, 1LL, v17);
  }

  uint64_t v19 = a3[7];
  __int128 v20 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  uint64_t v21 = a3[8];
  __int128 v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  uint64_t v23 = a3[9];
  __int128 v24 = *(_OWORD *)(a2 + v23 + 24);
  *(_OWORD *)(a1 + v23 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v24;
  (**(void (***)(void))(v24 - 8))();
  return a1;
}

uint64_t sub_4EB54(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_85C8((void *)a1, a2);
      goto LABEL_8;
    }

    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)a1);
  }

  else if (v6)
  {
    *(void *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v6;
    *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }

  __int128 v7 = *a2;
  __int128 v8 = a2[1];
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  uint64_t v9 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v9)
    {
      sub_85C8((void *)(a1 + 40), (void *)a2 + 5);
      goto LABEL_15;
    }

    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 40));
  }

  else if (v9)
  {
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }

  __int128 v10 = *(__int128 *)((char *)a2 + 40);
  __int128 v11 = *(__int128 *)((char *)a2 + 56);
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + sub_60A4(v0 + 16, v0 + 56) = v11;
LABEL_15:
  uint64_t v12 = a3[6];
  __int128 v13 = (void *)(a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Parse.DirectInvocation(0LL);
  int v16 = sub_5FE0((uint64_t)v13, 1LL, v15);
  int v17 = sub_5FE0((uint64_t)v14, 1LL, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
      goto LABEL_21;
    }

    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_20;
  }

  if (v17)
  {
LABEL_20:
    uint64_t v19 = sub_3974(&qword_7AB88);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64LL));
    goto LABEL_21;
  }

  (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
  sub_3F18((uint64_t)v13, 0LL, 1LL, v15);
LABEL_21:
  sub_85C8((void *)(a1 + a3[7]), (__int128 *)((char *)a2 + a3[7]));
  sub_85C8((void *)(a1 + a3[8]), (__int128 *)((char *)a2 + a3[8]));
  sub_85C8((void *)(a1 + a3[9]), (__int128 *)((char *)a2 + a3[9]));
  return a1;
}

uint64_t sub_4ED4C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  __int128 v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 72);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  __int128 v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + sub_60A4(v0 + 16, v0 + 56) = v7;
  uint64_t v11 = type metadata accessor for Parse.DirectInvocation(0LL);
  if (sub_5FE0((uint64_t)v10, 1LL, v11))
  {
    uint64_t v12 = sub_3974(&qword_7AB88);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
    sub_3F18((uint64_t)v9, 0LL, 1LL, v11);
  }

  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)(v15 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v16 + 32);
  __int128 v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  uint64_t v18 = a1 + v14;
  uint64_t v19 = a2 + v14;
  *(void *)(v18 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v19 + 32);
  __int128 v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  __int128 v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v23 + 32);
  return a1;
}

uint64_t sub_4EE78(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 24)) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)a1);
  }
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + 40));
  }
  __int128 v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + sub_60A4(v0 + 16, v0 + 56) = v7;
  *(void *)(a1 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 72);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  __int128 v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Parse.DirectInvocation(0LL);
  int v12 = sub_5FE0((uint64_t)v9, 1LL, v11);
  int v13 = sub_5FE0((uint64_t)v10, 1LL, v11);
  if (!v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
      goto LABEL_11;
    }

    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_10;
  }

  if (v13)
  {
LABEL_10:
    uint64_t v15 = sub_3974(&qword_7AB88);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_11;
  }

  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  sub_3F18((uint64_t)v9, 0LL, 1LL, v11);
LABEL_11:
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + v16));
  __int128 v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v18 + 32);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + v20));
  __int128 v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v22 + 32);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(a1 + v24));
  __int128 v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(void *)(v25 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(v26 + 32);
  return a1;
}

uint64_t sub_4F030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_4F03C);
}

uint64_t sub_4F03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3974(&qword_7AB88);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return sub_5FE0(a1 + *(int *)(a3 + 24), a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = -1;
  }
  return (v8 + 1);
}

uint64_t sub_4F0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_4F0CC);
}

uint64_t sub_4F0CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_3974(&qword_7AB88);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return sub_3F18(a1 + *(int *)(a4 + 24), a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 28) + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = (a2 - 1);
  return result;
}

void sub_4F14C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  sub_4F1CC(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    v4[3] = &unk_5A2B8;
    v4[4] = &unk_5A2B8;
    v4[5] = &unk_5A2B8;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
  }

void sub_4F1CC(uint64_t a1)
{
  if (!qword_7B4C8)
  {
    uint64_t v2 = type metadata accessor for Parse.DirectInvocation(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_7B4C8);
    }
  }

uint64_t sub_4F220@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

uint64_t sub_4F244()
{
  *(void *)(v0 + 144) = 0LL;
  *(_OWORD *)(v0 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0u;
  *(_OWORD *)(v0 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
  *(void *)(v0 + 96) = 0LL;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  return sub_6120(v0 + 192, *(void *)(v0 + 216));
}

void sub_4F268(uint64_t a1)
{
}

  ;
}

void sub_4F298()
{
}

uint64_t sub_4F2A8()
{
  return sub_60E4(v2 + *(int *)(v1 + 36), v0 + 152);
}

uint64_t sub_4F2B8()
{
  return type metadata accessor for FlowRouter(0LL);
}

  ;
}

uint64_t sub_4F2CC()
{
  *(void *)(v1 - 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v0;
  return 0LL;
}

uint64_t sub_4F2DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))( (char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v4);
}

void sub_4F300()
{
}

void sub_4F320( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
}

uint64_t sub_4F340(uint64_t a1)
{
  uint64_t v2 = sub_3324( (void *)(*(void *)(v1 + 32) + *(int *)(a1 + 32)),  *(void *)(*(void *)(v1 + 32) + *(int *)(a1 + 32) + 24LL))[1];
  return swift_retain(v2);
}

uint64_t sub_4F36C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16LL))(v1, v2, a1);
}

uint64_t sub_4F384(uint64_t a1)
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)(v2, *(void *)(v1 + 24), a1);
}

uint64_t sub_4F39C()
{
  return v0(v2, v1);
}

  ;
}

void sub_4F3C4(uint64_t a1, uint64_t a2)
{
}

void *sub_4F3CC(void *a1)
{
  return sub_3324(a1, v1);
}

uint64_t sub_4F3D4()
{
  return v0 - 224;
}

uint64_t sub_4F3EC()
{
  return v0(v1, v2);
}

uint64_t sub_4F3FC()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 12);
}

void sub_4F41C(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_4F424()
{
  return v0 - 224;
}

uint64_t sub_4F438()
{
  return sub_65A4((__int128 *)(v0 + 144), v0 + 184);
}

uint64_t sub_4F444()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 192));
}

  ;
}

uint64_t sub_4F464()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 - 240));
}

  ;
}

uint64_t sub_4F480()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(v2);
  sub_3CC8(v5, (uint64_t)v12);
  uint64_t v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v5, v0);
  __int128 v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "InfoDomainFallbackFlow onInput", v9, 2u);
    sub_3CA0((uint64_t)v9);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return 1LL;
}

uint64_t sub_4F57C(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = type metadata accessor for FlowUnhandledReason(0LL);
  v1[6] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[7] = v3;
  v1[8] = sub_3C88(v3);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  void v1[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[10] = v5;
  v1[11] = sub_3C88(v5);
  return swift_task_switch(sub_4F5EC, 0LL, 0LL);
}

uint64_t sub_4F5EC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = Logger.emergency.unsafeMutableAddressor(a1);
  sub_3CC8(v5, v1 + 16);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  __int128 v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)sub_8D14();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "InfoDomainFallbackFlow execute", v9, 2u);
    sub_3CA0((uint64_t)v9);
  }

  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v14 = *(void *)(v1 + 48);
  uint64_t v15 = *(void *)(v1 + 56);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))( v13,  enum case for FlowUnhandledReason.needsInfoDomainFallback(_:),  v14);
  static ExecuteResponse.unhandled(reason:isComplete:)(v13, 1LL);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  swift_task_dealloc(v10);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_4F728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InfoDomainFallbackFlow();
  unint64_t v5 = sub_4F84C();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t type metadata accessor for InfoDomainFallbackFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin22InfoDomainFallbackFlow);
}

uint64_t sub_4F7A0()
{
  return 1LL;
}

uint64_t sub_4F7B8(uint64_t a1, uint64_t a2)
{
  return sub_4F728(a1, a2);
}

uint64_t sub_4F7D8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_7B534);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_5F44;
  return sub_4F57C(a1);
}

uint64_t sub_4F828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for InfoDomainFallbackFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_4F84C()
{
  unint64_t result = qword_7B420;
  if (!qword_7B420)
  {
    uint64_t v1 = type metadata accessor for InfoDomainFallbackFlow();
    unint64_t result = swift_getWitnessTable(&unk_5A308, v1);
    atomic_store(result, (unint64_t *)&qword_7B420);
  }

  return result;
}

void sub_4F888(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_1FD94();
  uint64_t v6 = (char *)(v4 - v5);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v76 - v8;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  uint64_t v79 = v11;
  __chkstk_darwin(v10);
  sub_1FD94();
  uint64_t v14 = (char *)(v12 - v13);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (os_log_s *)((char *)&v76 - v17);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v77 = (char *)&v76 - v20;
  uint64_t v22 = Parse.DirectInvocation.identifier.getter(v19);
  uint64_t v23 = v21;
  if (v22 == 0xD00000000000003FLL)
  {
    unint64_t v24 = 0x800000000005B910LL;
    if (v21 == 0x800000000005B910LL) {
      goto LABEL_5;
    }
  }

  if ((sub_8498(0xD00000000000003FLL, 0x800000000005B910LL, v22, v21) & 1) != 0)
  {
    unint64_t v24 = v23;
LABEL_5:
    swift_bridgeObjectRelease(v24);
    goto LABEL_6;
  }

  if (v22 == 0xD000000000000034LL && v23 == 0x800000000005C620LL)
  {
    unint64_t v24 = 0x800000000005C620LL;
    goto LABEL_5;
  }

  if ((sub_8498(0xD000000000000034LL, 0x800000000005C620LL, v22, v23) & 1) != 0)
  {
    unint64_t v24 = v23;
    goto LABEL_5;
  }

  if (v22 == 0xD000000000000035LL && v23 == 0x800000000005B1B0LL)
  {
    uint64_t v25 = sub_38320(0x800000000005B1B0LL);
  }

  else
  {
    char v26 = sub_8498(0xD000000000000035LL, 0x800000000005B1B0LL, v22, v23);
    uint64_t v25 = sub_2F640();
    if ((v26 & 1) == 0)
    {
      uint64_t v62 = Logger.emergency.unsafeMutableAddressor(v25);
      sub_3CC8(v62, (uint64_t)&v82);
      uint64_t v63 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v14, v62, v78);
      uint64_t v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
      uint64_t v65 = v64(v9, a1, v2);
      Logger.logObject.getter(v65);
      os_log_type_t v66 = sub_18418();
      if (!os_log_type_enabled((os_log_t)v14, v66))
      {
        sub_50A4C();

        (*(void (**)(char *, uint64_t))(v79 + 8))(v14, v63);
        goto LABEL_6;
      }

      uint64_t v67 = (_DWORD *)sub_3CD4(12LL);
      uint64_t v77 = (char *)sub_3CD4(32LL);
      uint64_t v80 = v77;
      *uint64_t v67 = 136315138;
      uint64_t v76 = v67 + 1;
      v64(v6, (uint64_t)v9, v2);
      uint64_t v68 = String.init<A>(describing:)(v6);
      uint64_t v70 = sub_543A4(v68, v69, (uint64_t *)&v80);
      uint64_t v71 = sub_50AA0(v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v71, v72, v76, v67 + 3);
      sub_50AC8();
      sub_50A4C();
      sub_50ADC(&dword_0, (os_log_s *)v14, v66, "Encountered unsupported invocation in flow router: %s");
      uint64_t v73 = (uint64_t)v77;
      swift_arrayDestroy(v77, 1LL);
      sub_3CA0(v73);
      sub_3CA0((uint64_t)v67);

      uint64_t v50 = *(void (**)(char *, uint64_t))(v79 + 8);
      uint64_t v51 = v14;
      goto LABEL_30;
    }
  }

  uint64_t v27 = Parse.DirectInvocation.userData.getter(v25);
  if (!v27)
  {
    __int128 v82 = 0u;
    __int128 v83 = 0u;
    goto LABEL_24;
  }

  uint64_t v28 = v27;
  uint64_t v29 = DirectInvocationURI.payloadKey.getter(5LL);
  uint64_t v31 = v30;
  sub_2A82C(v29, v30, v28, &v82);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v28);
  if (!*((void *)&v83 + 1))
  {
LABEL_24:
    uint64_t v32 = sub_28A58((uint64_t)&v82);
    goto LABEL_25;
  }

  uint64_t v32 = swift_dynamicCast(&v80, &v82, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
  if ((v32 & 1) != 0)
  {
    uint64_t v34 = (uint64_t)v80;
    unint64_t v33 = v81;
    static EmergencySituation.fromValueWithCleanup(_:)(v80, v81);
    sub_509F4();
    if (!v36)
    {
      uint64_t v75 = v35;
      sub_50AE8();
      sub_50250(v75, 2);
      goto LABEL_6;
    }

    uint64_t v37 = Logger.emergency.unsafeMutableAddressor(v35);
    sub_3CC8(v37, (uint64_t)&v82);
    uint64_t v38 = v78;
    uint64_t v39 = v79;
    uint64_t v40 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v77, v37, v78);
    uint64_t v41 = swift_bridgeObjectRetain(v33);
    uint64_t v42 = v40;
    Logger.logObject.getter(v41);
    os_log_type_t v43 = sub_18418();
    if (!sub_50A6C(v43))
    {

      sub_50A98(v33);
      uint64_t v50 = *(void (**)(char *, uint64_t))(v39 + 8);
      uint64_t v51 = v40;
      uint64_t v74 = v38;
      goto LABEL_33;
    }

    uint64_t v44 = sub_3CD4(22LL);
    uint64_t v45 = sub_3CD4(64LL);
    uint64_t v80 = (char *)v45;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v84 = sub_509DC((uint64_t)"dispatch(invocation:)");
    sub_50A7C((uint64_t)&v84, (uint64_t)&v85, v46, v44 + 12);
    *(_WORD *)(v44 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
    swift_bridgeObjectRetain(v33);
    uint64_t v84 = sub_543A4(v34, v33, (uint64_t *)&v80);
    sub_50A7C((uint64_t)&v84, (uint64_t)&v85, v47, v44 + 22);
    swift_bridgeObjectRelease_n(v33, 3LL);
    sub_50A28(&dword_0, v48, v49, "%s Failed to create an EmergencySituation enum from payload value: %s.");
    sub_50AD0();
    sub_3CA0(v45);
    sub_3CA0(v44);

    uint64_t v50 = *(void (**)(char *, uint64_t))(v39 + 8);
    uint64_t v51 = v77;
LABEL_30:
    uint64_t v74 = v78;
LABEL_33:
    v50(v51, v74);
    goto LABEL_6;
  }

void sub_4FE9C(void *a1)
{
  uint64_t v1 = a1[4];
  sub_3324(a1, a1[3]);
  uint64_t v2 = (char *)sub_4FEF0
     + 4 * byte_5A370[sub_50984(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))];
  __asm { BR              X10 }

void sub_4FEF0()
{
  if (v3)
  {
    sub_50A00(v2);
  }

  else
  {
    uint64_t v4 = sub_50A84(v2);
    if (v4 == v1 && v5 == 0x800000000005B190LL)
    {
      uint64_t v6 = sub_38320(0x800000000005B190LL);
      uint64_t v7 = sub_50A00(v6);
LABEL_16:
      sub_50A90(v7);
      return;
    }

    sub_8498(v4, v5, 0xD00000000000001ALL, 0x800000000005B190LL);
    uint64_t v8 = sub_50AB4();
    uint64_t v7 = sub_50A00(v8);
    if ((v1 & 1) != 0) {
      goto LABEL_16;
    }
  }

  uint64_t v9 = v26;
  uint64_t v10 = v27;
  sub_3324(&v25, v26);
  sub_50984(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24));
  sub_509F4();
  if (v3)
  {
    sub_50A90(v11);
  }

  else
  {
    uint64_t v12 = sub_50A84(v11);
    if (v12 == (v9 | 1) && v13 == 0x800000000005C560LL)
    {
      uint64_t v7 = sub_38320(0x800000000005C560LL);
      goto LABEL_16;
    }

    sub_8498(v12, v13, v9 + 1, 0x800000000005C560LL);
    uint64_t v18 = sub_50AB4();
    sub_50A90(v18);
    if ((v9 & 1) != 0) {
      return;
    }
  }

  if ((sub_50958() - 6) > 3u)
  {
    uint64_t v14 = v0[4];
    sub_3324(v0, v0[3]);
    char v15 = sub_50984(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40));
    if (v15 == 2) {
      goto LABEL_18;
    }
    if ((v15 & 1) == 0)
    {
      sub_509CC();
      return;
    }

    char v20 = sub_8498(0x65746973626577LL, 0xE700000000000000LL, 0x756E20656E6F6870LL, 0xEC0000007265626DLL);
    swift_bridgeObjectRelease(0xE700000000000000LL);
    if ((v20 & 1) == 0)
    {
LABEL_18:
      uint64_t v16 = (uint64_t (**)(uint64_t, uint64_t))v0[4];
      sub_3324(v0, v0[3]);
      char v17 = sub_50984(v16[5]);
      if (v17 == 2) {
        goto LABEL_19;
      }
      if ((v17 & 1) != 0)
      {
        swift_bridgeObjectRelease(0xE700000000000000LL);
        return;
      }

      char v19 = sub_50994();
      sub_509CC();
      if ((v19 & 1) == 0)
      {
LABEL_19:
        sub_50A5C();
        if (sub_50984(v16[4]) == 4)
        {
          sub_50A5C();
          if (sub_50984(v16[7]) == 3)
          {
            sub_50958();
            sub_509F4();
          }

          else
          {
            uint64_t v21 = sub_50958();
            uint64_t v22 = v0[3];
            uint64_t v23 = v0[4];
            sub_3324(v0, v22);
            int v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
            sub_50250(v21, v24);
          }
        }
      }
    }
  }

void sub_50250(uint64_t a1, int a2)
{
  int v77 = a2;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1FD94();
  uint64_t v7 = (void *)(v5 - v6);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v67 - v9;
  if (qword_785E0 != -1) {
    swift_once(&qword_785E0, sub_507B0);
  }
  uint64_t v11 = qword_7B968;
  uint64_t v12 = *(void *)(qword_7B968 + 16);
  uint64_t v72 = v7;
  if (!v12)
  {
LABEL_37:
    uint64_t v30 = Logger.emergency.unsafeMutableAddressor(v11);
    sub_3CC8(v30, (uint64_t)v80);
    uint64_t v31 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 16))(v7, v30, v3);
    Logger.logObject.getter(v31);
    os_log_type_t v32 = sub_18418();
    if (sub_50A6C(v32))
    {
      uint64_t v33 = sub_3CD4(22LL);
      uint64_t v34 = sub_3CD4(64LL);
      uint64_t v79 = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      LOBYTE(v7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = a1;
      sub_3974(&qword_79950);
      uint64_t v35 = sub_9458();
      uint64_t v78 = sub_50A20(v35, v36);
      sub_50A7C((uint64_t)&v78, (uint64_t)&v79, v37, v33 + 12);
      sub_50AE8();
      *(_WORD *)(v33 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
      LOBYTE(v7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v77;
      sub_3974(&qword_7B5D0);
      uint64_t v38 = sub_9458();
      unint64_t v40 = v39;
      uint64_t v41 = sub_50A20(v38, v39);
      sub_50A0C(v41, v42, v43, v33 + 22);
      swift_bridgeObjectRelease(v40);
      sub_50A28( &dword_0,  v44,  v45,  "No Action found for Situation [%s] and Severity [%s]. Returning Fallback response.");
      sub_50AD0();
      sub_3CA0(v34);
      sub_3CA0(v33);

      (*(void (**)(void *, uint64_t))(v4 + 8))(v72, v3);
    }

    else
    {

      (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v3);
    }

    goto LABEL_40;
  }

  uint64_t v68 = v10;
  uint64_t v70 = v3;
  uint64_t v71 = v4;
  uint64_t v69 = swift_bridgeObjectRetain(qword_7B968);
  uint64_t v13 = (unsigned __int8 *)(v69 + 34);
  uint64_t v76 = (uint64_t)"crisisSituationHigh";
  unint64_t v74 = (unint64_t)"dispatch(invocation:)";
  unint64_t v75 = 0x800000000005C6A0LL;
  unint64_t v73 = 0x800000000005C680LL;
  while (1)
  {
    if (a1 != 35)
    {
      int v14 = *(v13 - 1);
      int v15 = *v13;
      uint64_t v16 = EmergencySituation.rawValue.getter(*(v13 - 2));
      uint64_t v18 = v17;
      uint64_t v19 = EmergencySituation.rawValue.getter(a1);
      if (v16 == v19 && v18 == v20)
      {
        int v23 = v77;
        sub_50A98(v18);
        if (v23 == 3) {
          goto LABEL_35;
        }
      }

      else
      {
        char v22 = sub_8498(v16, v18, v19, v20);
        sub_50AC8();
        sub_2F640();
      }

      uint64_t v24 = 0x800000000005C6C0LL;
      if (v14)
      {
        if (v14 == 1) {
          uint64_t v25 = 0xD000000000000015LL;
        }
        else {
          uint64_t v25 = 0xD000000000000013LL;
        }
        if (v14 == 1) {
          unint64_t v26 = v76 | 0x8000000000000000LL;
        }
        else {
          unint64_t v26 = v74 | 0x8000000000000000LL;
        }
      }

      else
      {
        uint64_t v25 = 0xD000000000000012LL;
        unint64_t v26 = 0x800000000005C6C0LL;
      }

      if ((_BYTE)v77)
      {
        else {
          uint64_t v27 = 0xD000000000000013LL;
        }
        else {
          uint64_t v24 = v73;
        }
      }

      else
      {
        uint64_t v27 = 0xD000000000000012LL;
      }

      if (v25 == v27 && v26 == v24)
      {
        sub_50AC0();
        uint64_t v46 = sub_50A98(v26);
        goto LABEL_43;
      }

      char v29 = sub_8498(v25, v26, v27, v24);
      sub_2F640();
      sub_50AC8();
      if ((v29 & 1) != 0) {
        break;
      }
    }

LABEL_35:
    v13 += 3;
    if (!--v12)
    {
      uint64_t v11 = sub_50AC0();
      uint64_t v3 = v70;
      uint64_t v4 = v71;
      uint64_t v7 = v72;
      goto LABEL_37;
    }
  }

  uint64_t v46 = sub_50AC0();
LABEL_43:
  uint64_t v47 = Logger.emergency.unsafeMutableAddressor(v46);
  sub_3CC8(v47, (uint64_t)v80);
  uint64_t v49 = v70;
  uint64_t v48 = v71;
  uint64_t v50 = v68;
  uint64_t v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16))(v68, v47, v70);
  uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v53 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = sub_3CD4(32LL);
    uint64_t v76 = sub_3CD4(96LL);
    uint64_t v79 = v76;
    *(_DWORD *)uint64_t v54 = 136315650;
    v67[1] = v15;
    LOBYTE(v7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v15;
    uint64_t v55 = sub_9458();
    uint64_t v78 = sub_50A20(v55, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v54 + 4, v54 + 12);
    sub_2F640();
    *(_WORD *)(v54 + 1_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
    LOBYTE(v7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = a1;
    sub_3974(&qword_79950);
    uint64_t v57 = sub_9458();
    uint64_t v78 = sub_50A20(v57, v58);
    sub_50A7C((uint64_t)&v78, (uint64_t)&v79, v59, v54 + 22);
    sub_50AE8();
    *(_WORD *)(v54 + 2_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 2080;
    LOBYTE(v7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v77;
    sub_3974(&qword_7B5D0);
    uint64_t v60 = sub_9458();
    unint64_t v62 = v61;
    uint64_t v63 = sub_50A20(v60, v61);
    sub_50A0C(v63, v64, v65, v54 + 32);
    swift_bridgeObjectRelease(v62);
    _os_log_impl(&dword_0, v52, v53, "Found Action [%s] for Situation [%s] and Severity [%s]", (uint8_t *)v54, 0x20u);
    uint64_t v66 = v76;
    swift_arrayDestroy(v76, 3LL);
    sub_3CA0(v66);
    sub_3CA0(v54);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v49);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
  }

LABEL_40:
  sub_7DF0();
}

void sub_507B0()
{
  qword_7B968 = (uint64_t)&off_6D6B0;
}

uint64_t getEnumTagSinglePayload for DispatchAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xEF)
  {
    if (a2 + 17 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 17) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 18;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for DispatchAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xEE) {
    return ((uint64_t (*)(void))((char *)&loc_50898 + 4 * byte_5A37E[v4]))();
  }
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_508CC + 4 * byte_5A379[v4]))();
}

uint64_t sub_508CC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_508D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x508DCLL);
  }
  return result;
}

uint64_t sub_508E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x508F0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 17;
  return result;
}

uint64_t sub_508F4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_508FC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DispatchAction()
{
  return &type metadata for DispatchAction;
}

unint64_t sub_5091C()
{
  unint64_t result = qword_7B5D8;
  if (!qword_7B5D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5A3F4, &type metadata for DispatchAction);
    atomic_store(result, (unint64_t *)&qword_7B5D8);
  }

  return result;
}

uint64_t sub_50958()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_3324(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_50984@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_50994()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)( 0x756E20656E6F6870LL,  0xEC0000007265626DLL,  0x65746973626577LL,  0xE700000000000000LL,  0LL);
}

uint64_t sub_509CC()
{
  return swift_bridgeObjectRelease(0xEC0000007265626DLL);
}

uint64_t sub_509DC@<X0>(uint64_t a1@<X8>)
{
  return sub_543A4(0xD000000000000015LL, (a1 - 32) | 0x8000000000000000LL, (uint64_t *)(v1 - 144));
}

  ;
}

uint64_t sub_50A00(uint64_t a1, ...)
{
  return sub_3B68(v1, (uint64_t)va);
}

uint64_t sub_50A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v6 - 120) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 120, v4 + 8, v5, a4);
}

uint64_t sub_50A20(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 112));
}

void sub_50A28(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t sub_50A3C(uint64_t a1)
{
  return EmergencySituation.rawValue.getter(a1);
}

uint64_t sub_50A4C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void *sub_50A5C()
{
  return sub_3324(v0, v0[3]);
}

BOOL sub_50A6C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_50A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, v4, a4);
}

uint64_t sub_50A84(uint64_t a1)
{
  return EmergencySituation.rawValue.getter(a1);
}

uint64_t sub_50A90(uint64_t a1, ...)
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((uint64_t *)va);
}

uint64_t sub_50A98(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2LL);
}

uint64_t sub_50AA0(uint64_t a1)
{
  *(void *)(v1 - 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = a1;
  return v1 - 88;
}

uint64_t sub_50AB4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_50AC0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 192));
}

uint64_t sub_50AC8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_50AD0()
{
  return swift_arrayDestroy(v0, 2LL);
}

void sub_50ADC(void *a1, os_log_s *a2, os_log_type_t a3, const char *a4)
{
}

uint64_t sub_50AE8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t initializeWithCopy for EmergencyFeatureFlagsManager(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

void *assignWithCopy for EmergencyFeatureFlagsManager(void *a1, void *a2)
{
  return a1;
}

__n128 initializeWithTake for EmergencyFeatureFlagsManager(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for EmergencyFeatureFlagsManager(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmergencyFeatureFlagsManager(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmergencyFeatureFlagsManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0u;
    *(_OWORD *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 40) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for EmergencyFeatureFlagsManager()
{
  return &type metadata for EmergencyFeatureFlagsManager;
}

id sub_50C34(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v6 = [v4 initWithIdentifier:v5];

  return v6;
}

uint64_t sub_50CA4(uint64_t a1)
{
  uint64_t v114 = v3;
  uint64_t v117 = type metadata accessor for EmergencyDialogAct(0LL);
  sub_EDD8();
  __chkstk_darwin(v4);
  sub_66F4();
  sub_ED8C();
  __chkstk_darwin(v5);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v109 - v7;
  uint64_t v120 = type metadata accessor for USOParse(0LL);
  uint64_t v119 = *(void *)(v120 - 8);
  sub_EDD8();
  __chkstk_darwin(v9);
  sub_6750();
  uint64_t v121 = v10;
  uint64_t v128 = type metadata accessor for Parse(0LL);
  uint64_t v126 = *(void *)(v128 - 8);
  sub_EDD8();
  __chkstk_darwin(v11);
  sub_6750();
  os_log_type_t v127 = v12;
  uint64_t v13 = type metadata accessor for Input(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_6740();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_66F4();
  uint64_t v125 = v20;
  __chkstk_darwin(v21);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v22);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v23);
  sub_EE64();
  uint64_t v123 = v24;
  __chkstk_darwin(v25);
  sub_EE64();
  sub_ED8C();
  __chkstk_darwin(v26);
  sub_EE64();
  sub_ED8C();
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v109 - v29;
  uint64_t v31 = Logger.emergency.unsafeMutableAddressor(v28);
  sub_3CC8(v31, (uint64_t)v138);
  os_log_type_t v32 = *(void (**)(void, void, void))(v19 + 16);
  uint64_t v129 = v31;
  uint64_t v130 = v32;
  v32(v30, v31, v18);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  uint64_t v124 = a1;
  uint64_t v34 = v33(v17, a1, v13);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  __int16 v115 = v8;
  if (v37)
  {
    uint64_t v111 = v19;
    uint64_t v38 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v39 = sub_3CD4(32LL);
    uint64_t v112 = v18;
    uint64_t v40 = v39;
    v135[0] = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v110 = v38 + 4;
    sub_EB44( &qword_790C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter(v13, v41);
    uint64_t v132 = sub_543A4(v42, v43, v135);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, &v133, v110, v38 + 12);
    sub_84A8();
    sub_55268();
    sub_67F8(&dword_0, v35, v36, "#StartSirenFlow onInput: %s", v38);
    sub_67DC(v40);
    sub_3CA0(v40);
    sub_3CA0((uint64_t)v38);
  }

  else
  {
    sub_55268();
  }

  sub_55204((uint64_t)v30);
  sub_552F0((void *)v131 + 2);
  uint64_t v44 = sub_28028();
  v45(v44);
  uint64_t v46 = v136;
  uint64_t v47 = v137;
  sub_552F0(v135);
  uint64_t v48 = sub_28028();
  dispatch thunk of DeviceState.isWatch.getter(v48, v49);
  uint64_t v50 = sub_28014();
  uint64_t v51 = v129;
  if ((v46 & 1) == 0)
  {
    sub_3CC8(v129, (uint64_t)v135);
    uint64_t v60 = sub_55154(v125);
    Logger.logObject.getter(v60);
    os_log_type_t v61 = sub_EEB4();
    if (sub_EDE4(v61))
    {
      unint64_t v62 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v62);
      sub_18240(&dword_0, v63, v64, "#StartSirenFlow Not on watch. Flagging for remote execution.");
      sub_3CA0(v47);
    }

    sub_55204(v125);
    v131[136] = 3;
    return 1LL;
  }

  uint64_t v52 = v127;
  Input.parse.getter(v50);
  int v53 = (*(uint64_t (**)(void *, uint64_t))(v126 + 88))(v52, v128);
  if (v53 == enum case for Parse.NLv3IntentOnly(_:))
  {
    sub_3CC8(v51, (uint64_t)v135);
    uint64_t v54 = sub_55154(v123);
    Logger.logObject.getter(v54);
    os_log_type_t v55 = sub_EEB4();
    if (sub_EDE4(v55))
    {
      unint64_t v56 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v56);
      sub_18240(&dword_0, v57, v58, "#StartSirenFlow onInput .NLv3IntentOnly");
      sub_3CA0(v47);
    }

    uint64_t v59 = v123;
LABEL_16:
    sub_55204(v59);
    v131[136] = 2;
    (*(void (**)(void *, uint64_t))(v126 + 8))(v127, v128);
    return 1LL;
  }

  if (v53 == enum case for Parse.directInvocation(_:))
  {
    sub_3CC8(v51, (uint64_t)v135);
    uint64_t v65 = sub_55154(v122);
    Logger.logObject.getter(v65);
    os_log_type_t v66 = sub_EEB4();
    if (sub_EDE4(v66))
    {
      uint64_t v67 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v67);
      sub_18240(&dword_0, v68, v69, "#StartSirenFlow onInput directInvocation");
      sub_3CA0(v47);
    }

    uint64_t v59 = v122;
    goto LABEL_16;
  }

  if (v53 == enum case for Parse.uso(_:))
  {
    uint64_t v71 = (uint64_t)v127;
    (*(void (**)(void *, uint64_t))(v126 + 96))(v127, v128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32))(v121, v71, v120);
    sub_3CC8(v51, (uint64_t)&v132);
    uint64_t v72 = sub_55154(v118);
    Logger.logObject.getter(v72);
    os_log_type_t v73 = sub_EEB4();
    if (sub_EDE4(v73))
    {
      unint64_t v74 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v74);
      sub_18240(&dword_0, v75, v76, "#StartSirenFlow onInput .uso");
      sub_3CA0(v47);
    }

    uint64_t v77 = sub_55204(v118);
    uint64_t v78 = v114;
    USOParse.userParse.getter(v77);
    uint64_t v136 = &type metadata for EmergencyFeatureFlagsKey;
    unint64_t v137 = sub_EA88();
    LOBYTE(v135[0]) = 2;
    isFeatureEnabled(_:)(v135);
    sub_28014();
    uint64_t v79 = (uint64_t)v115;
    EmergencyDialogAct.init(userParse:nlv4MigrationFeatureFlagIsEnabled:)(v78, v71 & 1);
    uint64_t v81 = *(unsigned __int8 *)(v79 + *(int *)(v117 + 24));
    if ((_DWORD)v81 == 35)
    {
      sub_551C8(v81, v80, (void (*)(void))&type metadata accessor for EmergencyDialogAct);
LABEL_30:
      sub_27D20(v71, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      sub_3CC8(v51, (uint64_t)v135);
      uint64_t v98 = v113;
      uint64_t v99 = sub_55154(v113);
      Logger.logObject.getter(v99);
      os_log_type_t v100 = sub_EEB4();
      if (sub_EDE4(v100))
      {
        uint64_t v101 = (_WORD *)sub_3CD4(2LL);
        sub_182E4(v101);
        sub_18240(&dword_0, v102, v103, "#StartSirenFlow Received invalid input. Ignoring.");
        sub_3CA0(v79);
      }

      sub_55204(v98);
      sub_27D20(v79, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
      uint64_t v104 = sub_27F28();
      goto LABEL_35;
    }

    uint64_t v92 = EmergencySituation.rawValue.getter(v81);
    if (v92 == 0x6E65726973LL && v93 == 0xE500000000000000LL)
    {
      uint64_t v107 = swift_bridgeObjectRelease(0xE500000000000000LL);
      sub_551C8(v107, v108, (void (*)(void))&type metadata accessor for EmergencyDialogAct);
    }

    else
    {
      uint64_t v71 = v93;
      char v95 = sub_8498(v92, v93, 0x6E65726973LL, 0xE500000000000000LL);
      uint64_t v96 = swift_bridgeObjectRelease(v71);
      sub_551C8(v96, v97, (void (*)(void))&type metadata accessor for EmergencyDialogAct);
      if ((v95 & 1) == 0) {
        goto LABEL_30;
      }
    }

    __asm { BR              X10 }
  }

  sub_3CC8(v51, (uint64_t)v135);
  uint64_t v82 = v116;
  uint64_t v83 = sub_55154(v116);
  uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v87 = sub_3CD4(32LL);
    *(_DWORD *)uint64_t v86 = 136315138;
    os_log_type_t v131 = v86 + 4;
    uint64_t v132 = v87;
    LOBYTE(v1sub_66BC(v0 + 34) = 0;
    uint64_t v88 = String.init<A>(describing:)(&v134);
    unint64_t v90 = v89;
    uint64_t v134 = sub_543A4(v88, v89, &v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135, v131, v86 + 12);
    swift_bridgeObjectRelease(v90);
    sub_67F8(&dword_0, v84, v85, "%s", v86);
    sub_67DC(v87);
    sub_3CA0(v87);
    sub_3CA0((uint64_t)v86);

    uint64_t v91 = v116;
  }

  else
  {

    uint64_t v91 = v82;
  }

  sub_55204(v91);
  uint64_t v104 = (uint64_t)v127;
  uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
  uint64_t v105 = v128;
LABEL_35:
  v106(v104, v105);
  return 0LL;
}

uint64_t sub_515F8()
{
  char v4 = sub_8498(1684957542LL, v0, 0x656C62616E65LL, 0xE600000000000000LL);
  sub_84A8();
  sub_551E4(*(void *)(v3 - 304), v5, (void (*)(void))&type metadata accessor for EmergencyDialogAct);
  if ((v4 & 1) != 0)
  {
    sub_27D20(v2, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    uint64_t v6 = sub_47CA8();
    sub_27D20(v6, v7);
    sub_27D20(v1, (uint64_t (*)(void))&type metadata accessor for EmergencyDialogAct);
    uint64_t v9 = sub_27F28();
    v10(v9);
    JUMPOUT(0x5119CLL);
  }

  return ((uint64_t (*)(void))((char *)&loc_5173C
                            + 4 * byte_5A509[*(unsigned __int8 *)(v2 + *(int *)(*(void *)(v3 - 312) + 20LL))]))();
}

void sub_5182C()
{
}

uint64_t sub_51848(uint64_t a1)
{
  v2[231] = v1;
  v2[230] = a1;
  uint64_t v3 = type metadata accessor for DeviceIdiom(0LL);
  v2[232] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[233] = v4;
  v2[234] = sub_3C88(v4);
  v2[235] = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  v2[236] = sub_45A0();
  v2[237] = sub_45A0();
  uint64_t v5 = type metadata accessor for URL(0LL);
  v2[238] = sub_3C88(*(void *)(v5 - 8));
  uint64_t v6 = type metadata accessor for AppPunchOutFlow(0LL);
  v2[239] = v6;
  v2[240] = sub_3C88(*(void *)(v6 - 8));
  sub_3974(&qword_78958);
  v2[241] = sub_45A0();
  v2[242] = sub_45A0();
  uint64_t v7 = type metadata accessor for OutputFlow(0LL);
  v2[243] = v7;
  v2[244] = sub_3C88(*(void *)(v7 - 8));
  uint64_t v8 = sub_3974((uint64_t *)&unk_7A630);
  v2[245] = sub_3C88(*(void *)(v8 - 8));
  uint64_t v9 = type metadata accessor for ActivityType(0LL);
  v2[246] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[247] = v10;
  v2[248] = sub_3C88(v10);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  v2[249] = v11;
  v2[250] = *(void *)(v11 - 8);
  v2[251] = sub_45A0();
  v2[252] = sub_45A0();
  v2[253] = sub_45A0();
  v2[254] = sub_45A0();
  v2[255] = sub_45A0();
  v2[256] = sub_45A0();
  v2[257] = sub_45A0();
  v2[258] = sub_45A0();
  v2[259] = sub_45A0();
  v2[260] = sub_45A0();
  v2[261] = sub_45A0();
  v2[262] = sub_45A0();
  sub_4588();
  return sub_451C();
}

void sub_519E4(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)v1[262];
  uint64_t v3 = v1[250];
  uint64_t v4 = Logger.emergency.unsafeMutableAddressor(a1);
  v1[263] = v4;
  sub_3CC8(v4, (uint64_t)(v1 + 214));
  v1[264] = *(void *)(v3 + 16);
  uint64_t v5 = sub_47CA8();
  uint64_t v7 = v6(v5);
  Logger.logObject.getter(v7);
  os_log_type_t v8 = sub_67D4();
  if (os_log_type_enabled(v2, v8))
  {
    uint64_t v9 = (uint8_t *)sub_3CD4(2LL);
    *(_WORD *)uint64_t v9 = 0;
    sub_EDA8(&dword_0, v2, v8, "#StartSirenFlow execute", v9);
    sub_3CA0((uint64_t)v9);
  }

  uint64_t v10 = v1[262];
  uint64_t v11 = v1[250];
  uint64_t v12 = v1[249];
  uint64_t v13 = v1[231];

  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v1[265] = v14;
  v14(v10, v12);
  __asm { BR              X10 }

uint64_t sub_51B3C()
{
  uint64_t v1 = sub_27DE8();
  sub_27F0C(v1, enum case for ActivityType.failed(_:));
  uint64_t v2 = sub_27FC4();
  sub_27E1C(v2);
  uint64_t v3 = sub_27E08();
  *(void *)(v0 + 212_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = sub_55078(v3, v4, v5, v6, (uint64_t)nullsub_1);
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to dispatch thunk of SiriKitEventSending.sendAsync(_:)[1]);
  *(void *)(v0 + 2136) = v7;
  sub_5520C(v7, (uint64_t)sub_52A80);
  sub_5524C();
  return dispatch thunk of SiriKitEventSending.sendAsync(_:)(v8, v9, v10);
}

uint64_t sub_52A80()
{
  return sub_451C();
}

#error "52B4C: call analysis failed (funcsize=50)"
uint64_t sub_52B88()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2152));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "52C18: call analysis failed (funcsize=36)"
uint64_t sub_52C54()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2168));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "52D1C: call analysis failed (funcsize=49)"
uint64_t sub_52D58()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2184));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "52E20: call analysis failed (funcsize=49)"
uint64_t sub_52E5C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v2 = (void *)(*(void *)v1 + 896LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 2192LL);
  *(void *)(*(void *)v1 + 220Hasher.init(_seed:)(v0, 0LL) = a1;
  swift_task_dealloc(v3);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v2);
  uint64_t v4 = sub_28028();
  v5(v4);
  sub_4588();
  return sub_3C98();
}

uint64_t sub_52EDC()
{
  uint64_t v1 = *(void **)(v0 + 2200);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 2104);
    uint64_t v61 = *(void *)(v0 + 2056);
    uint64_t v63 = *(void *)(v0 + 1992);
    uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2112);
    uint64_t v3 = *(void **)(v0 + 1848);
    uint64_t v4 = v3 + 2;
    sub_2981C(0LL, &qword_7A3A0, &OBJC_CLASS___SKIDirectInvocationPayload_ptr);
    uint64_t v5 = sub_50C34(0xD000000000000034LL, 0x800000000005C620LL);
    *(void *)(v0 + 2sub_60A4(v0 - 128, v0 - 208) = v5;
    uint64_t v6 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    sub_54BBC(v6, v5);
    uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
    uint64_t v8 = v3[5];
    uint64_t v9 = v3[6];
    sub_3324(v4, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    sub_3324((void *)(v0 + 1056), *(void *)(v0 + 1080));
    uint64_t v10 = sub_47CA8();
    uint64_t v12 = (void *)DeviceState.asInvocationContext.getter(v10, v11);
    id v13 = [v7 runSiriKitExecutorCommandWithContext:v12 payload:v5];
    *(void *)(v0 + 2sub_60A4(v0 + 256, v0 + 216) = v13;

    _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1056));
    id v14 = [v7 wrapCommandInStartLocalRequest:v13];
    *(void *)(v0 + 22_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 24) = v14;
    id v15 = [objc_allocWithZone(SAStartUIRequest) init];
    *(void *)(v0 + 223_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v15;
    [v15 setStartLocalRequest:v14];
    sub_3CC8(v2, v0 + 1520);
    v65(v61, v2, v63);
    id v16 = v1;
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 2120);
    uint64_t v21 = *(void *)(v0 + 2056);
    uint64_t v22 = *(void *)(v0 + 1992);
    if (v19)
    {
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v0 + 2120);
      uint64_t v62 = *(void *)(v0 + 1992);
      uint64_t v23 = (uint8_t *)sub_3CD4(12LL);
      uint64_t v24 = sub_3CD4(32LL);
      uint64_t v66 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v5 = v23 + 12;
      uint64_t v8 = (uint64_t)(v23 + 4);
      uint64_t v25 = DeviceUnit.assistantId.getter();
      uint64_t v20 = (void (*)(uint64_t, uint64_t))v26;
      *(void *)(v0 + 183_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_543A4(v25, v26, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1832, v0 + 1840, v23 + 4, v23 + 12);
      sub_84A8();

      sub_67F8( &dword_0,  v17,  v18,  "#StartSirenFlow Submitting start siren direct invocation to remote with assistantId: %s",  v23);
      swift_arrayDestroy(v24, 1LL);
      sub_3CA0(v24);
      sub_3CA0((uint64_t)v23);

      v64(v21, v62);
    }

    else
    {

      v20(v21, v22);
    }

    sub_55104();
    *(void *)(v0 + 2240) = sub_27DE8();
    *(_DWORD *)(v0 + 2400) = enum case for ActivityType.executeOnRemote(_:);
    uint64_t v49 = (void (*)(void (*)(uint64_t, uint64_t)))v5[13];
    *(void *)(v0 + 2sub_60A4(v0 - 128, v0 - 248) = v49;
    v49(v20);
    uint64_t v50 = enum case for SiriKitReliabilityCodes.normal(_:);
    uint64_t v51 = sub_27FC4();
    *(void *)(v0 + 22sub_60A4(v0 + 16, v0 + 56) = v51;
    uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104LL);
    *(void *)(v0 + 2264) = v52;
    v52(v8, v50, v51);
    uint64_t v53 = sub_27E08();
    *(void *)(v0 + 227_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = sub_55078(v53, v54, v55, v56, (uint64_t)nullsub_1);
    uint64_t v47 = (void *)swift_task_alloc(async function pointer to dispatch thunk of SiriKitEventSending.sendAsync(_:)[1]);
    *(void *)(v0 + 2280) = v47;
    uint64_t v48 = sub_533A4;
  }

  else
  {
    uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 2112);
    uint64_t v28 = *(void *)(v0 + 1992);
    sub_3CC8(*(void *)(v0 + 2104), v0 + 1760);
    uint64_t v29 = sub_552D8();
    uint64_t v30 = v27(v29);
    uint64_t v31 = (void *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (sub_EDE4(v32))
    {
      uint64_t v33 = (_WORD *)sub_3CD4(2LL);
      sub_182E4(v33);
      sub_18240(&dword_0, v34, v35, "#StartSirenFlow Failed to find remote device");
      sub_3CA0(v28);
    }

    os_log_type_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 2120);
    uint64_t v37 = *(void *)(v0 + 2040);
    uint64_t v38 = *(void *)(v0 + 1992);
    uint64_t v39 = *(void *)(v0 + 1984);
    uint64_t v40 = *(void *)(v0 + 1976);
    uint64_t v41 = *(void *)(v0 + 1968);

    v36(v37, v38);
    sub_551C0();
    sub_27DE8();
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))( v39,  enum case for ActivityType.handoffToCompanion(_:),  v41);
    uint64_t v42 = sub_27FC4();
    sub_27EF0(v42);
    uint64_t v43 = sub_27E08();
    *(void *)(v0 + 2320) = sub_550A4(v43, v44, v45, v46, (uint64_t)nullsub_1);
    uint64_t v47 = (void *)swift_task_alloc(async function pointer to dispatch thunk of SiriKitEventSending.sendAsync(_:)[1]);
    *(void *)(v0 + 232_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v47;
    uint64_t v48 = sub_53734;
  }

  uint64_t v57 = sub_5520C(v47, (uint64_t)v48);
  return dispatch thunk of SiriKitEventSending.sendAsync(_:)(v57, v58, v59);
}

uint64_t sub_533A4()
{
  return sub_451C();
}

uint64_t sub_533E0()
{
  uint64_t v1 = (void *)(v0[231] + 16LL);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 142);
  sub_55278(v1);
  sub_55290();
  uint64_t v2 = v0[150];
  uint64_t v3 = v0[151];
  sub_55278(v0 + 147);
  uint64_t v4 = DeviceUnit.assistantId.getter();
  uint64_t v6 = v5;
  v0[286] = v5;
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submitToRemote<A>(_:_:)[1]);
  v0[287] = v7;
  uint64_t v8 = sub_2981C(0LL, (unint64_t *)&qword_78C20, &OBJC_CLASS___SABaseCommand_ptr);
  *uint64_t v7 = v0;
  v7[1] = sub_534C8;
  return AceServiceInvokerAsync.submitToRemote<A>(_:_:)(v0[279], v4, v6, v2, v8, v3);
}

uint64_t sub_534C8(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 2296LL);
  v3[288] = a1;
  v3[289] = v1;
  swift_task_dealloc(v4);
  if (!v1) {
    swift_bridgeObjectRelease(v3[286]);
  }
  sub_4588();
  return sub_3C98();
}

#error "536F8: call analysis failed (funcsize=124)"
uint64_t sub_53734()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2328));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "537FC: call analysis failed (funcsize=49)"
uint64_t sub_53838()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2344));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "53900: call analysis failed (funcsize=49)"
uint64_t sub_5393C()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2360));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "53A8C: call analysis failed (funcsize=83)"
uint64_t sub_53AC8()
{
  uint64_t v0;
  sub_27EE0();
  sub_27DD8(*(void *)(v0 + 2376));
  sub_EE0C();
  sub_4588();
  return sub_451C();
}

#error "53B90: call analysis failed (funcsize=49)"
uint64_t sub_53BCC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_s *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  void (*v27)(uint64_t, void, uint64_t);
  uint64_t v1 = *(void *)(v0 + 2312);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2112);
  uint64_t v3 = *(void *)(v0 + 2104);
  uint64_t v4 = *(void *)(v0 + 2008);
  uint64_t v5 = *(void *)(v0 + 1992);
  swift_bridgeObjectRelease(*(void *)(v0 + 2288));
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0((void *)(v0 + 1176));
  sub_3CC8(v3, v0 + 1736);
  v2(v4, v3, v5);
  swift_errorRetain(v1);
  uint64_t v6 = swift_errorRetain(v1);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  uint64_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 2312);
    uint64_t v10 = (uint8_t *)sub_3CD4(12LL);
    uint64_t v11 = (void *)sub_3CD4(8LL);
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain(v9);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(void *)(v0 + 1800) = v12;
    sub_5530C(v0 + 1800, v0 + 1808, (uint64_t)(v10 + 4));
    *uint64_t v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    sub_67F8(&dword_0, v7, v8, "#StartSirenFlow Error while submitting to remote: %@", v10);
    sub_3974(&qword_7A020);
    sub_67DC((uint64_t)v11);
    sub_3CA0((uint64_t)v11);
    sub_3CA0((uint64_t)v10);
  }

  else
  {
    id v13 = *(void *)(v0 + 2312);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
  }

  id v14 = v7;
  id v15 = *(void *)(v0 + 2256);
  unint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2248);
  uint64_t v27 = *(void (**)(uint64_t, void, uint64_t))(v0 + 2264);
  id v16 = *(unsigned int *)(v0 + 2400);
  uint64_t v17 = *(void *)(v0 + 1984);
  os_log_type_t v18 = *(void *)(v0 + 1968);
  BOOL v19 = *(void *)(v0 + 1960);

  uint64_t v20 = sub_552E4();
  static SiriKitEventSender.current.getter((void *)(v0 + 296), v20);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v22 = *(void *)(v0 + 328);
  sub_552F0((void *)(v0 + 296));
  v26(v17, v16, v18);
  v27(v19, enum case for SiriKitReliabilityCodes.errorSendingExecuteOnRemoteRequest(_:), v15);
  sub_3F18(v19, 0LL, 1LL, v15);
  uint64_t v23 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v17,  0x7269537472617453LL,  0xEA00000000006E65LL,  v19,  nullsub_1,  0LL);
  *(void *)(v0 + 2384) = v23;
  uint64_t v24 = (void *)swift_task_alloc(async function pointer to dispatch thunk of SiriKitEventSending.sendAsync(_:)[1]);
  *(void *)(v0 + 239_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_53E70;
  return dispatch thunk of SiriKitEventSending.sendAsync(_:)(v23, v21, v22);
}

uint64_t sub_53E70()
{
  return sub_451C();
}

#error "53FD0: call analysis failed (funcsize=87)"
void sub_5400C(uint64_t a1, uint64_t a2)
{
  uint64_t started;
  uint64_t v5;
  uint64_t v6;
  uint64_t started = type metadata accessor for StartSirenFlow();
  sub_EB44( &qword_7B428,  v5,  (uint64_t (*)(uint64_t))type metadata accessor for StartSirenFlow,  (uint64_t)&unk_5A60C);
  Flow.deferToExecuteAsync(_:)(a1, a2, started, v6);
  sub_551F4();
}

void *sub_54070()
{
  return v0;
}

uint64_t sub_540AC()
{
  return swift_deallocClassInstance(v0, 224LL, 7LL);
}

uint64_t type metadata accessor for StartSirenFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC19EmergencyFlowPlugin14StartSirenFlow);
}

uint64_t storeEnumTagSinglePayload for StartSirenFlow.StartSirenFlowState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_54138 + 4 * byte_5A51F[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_5416C + 4 * byte_5A51A[v4]))();
}

uint64_t sub_5416C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_54174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x5417CLL);
  }
  return result;
}

uint64_t sub_54188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x54190LL);
  }
  *(_BYTE *)__n128 result = a2 + 3;
  return result;
}

uint64_t sub_54194(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_5419C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StartSirenFlow.StartSirenFlowState()
{
  return &type metadata for StartSirenFlow.StartSirenFlowState;
}

unint64_t sub_541BC()
{
  unint64_t result = qword_7B710[0];
  if (!qword_7B710[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_5A5E4, &type metadata for StartSirenFlow.StartSirenFlowState);
    atomic_store(result, qword_7B710);
  }

  return result;
}

uint64_t sub_541F8(uint64_t a1)
{
  return sub_50CA4(a1) & 1;
}

void sub_5421C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_5423C(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc(dword_7B60C);
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_27CC0;
  return sub_51848(a1);
}

uint64_t sub_54290(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for StartSirenFlow();
  return Flow<>.exitValue.getter(started, a2);
}

uint64_t sub_542B4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_542E8(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

void sub_54308(void (*a1)(void))
{
}

uint64_t sub_54324(uint64_t (*a1)(void))
{
  return a1();
}

void sub_54344(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  uint64_t v8 = sub_543A4(v6, v7, a3);
  uint64_t v9 = *a1;
  uint64_t v10 = *a1 + 8;
  uint64_t v11 = v8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9, v10);
  sub_84A8();
  *a1 = v10;
  sub_551F4();
}

uint64_t sub_543A4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v9 = sub_54470(v6, v7, v8, 1, a1, a2);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    ObjectType = (void *)swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      sub_29498((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }

  else
  {
    ObjectType = &type metadata for _StringGuts;
    v15[0] = a1;
    v15[1] = a2;
    uint64_t v13 = *a3;
    if (*a3)
    {
      sub_29498((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }

    swift_bridgeObjectRetain(a2);
  }

  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v15);
  return v10;
}

void *sub_54470(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_545C4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
      unint64_t result = 0LL;
      *a1 = __dst;
      return result;
    }

    goto LABEL_11;
  }

  if ((a6 & 0x1000000000000000LL) != 0)
  {
LABEL_11:
    unint64_t result = sub_54688(a5, a6);
    *a1 = v12;
    return result;
  }

  if ((a5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }

  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  151LL,  0);
      __break(1u);
      return result;
    }
  }

  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return (void *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
  }
}

void *sub_545C4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000LL) != 0)
  {
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory with negative count",  60LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  2,  1170LL,  0);
  }

  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst) {
      return memcpy(__dst, __src, __n);
    }
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory overlapping range",  58LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  2,  1173LL,  0);
  }

  __break(1u);
  return result;
}

void *sub_54688(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_5471C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_548F0(0LL, v2[2] + 1LL, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_548F0((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0;
  return v2;
}

void *sub_5471C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    Swift::Int v4 = String.UTF8View._foreignCount()();
    if (v4) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }

  if ((a2 & 0x2000000000000000LL) != 0) {
    Swift::Int v4 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  uint64_t v5 = sub_5488C(v4, 0LL);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  2,  71LL,  0);
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v6 = v5;
  uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    LOBYTE(v10) = 2;
    unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Insufficient space allocated to copy string contents",  52LL,  2LL,  "Swift/StringUTF8View.swift",  26LL,  v10,  430LL,  0);
    goto LABEL_15;
  }

  if (v7 == v4) {
    return v6;
  }
  unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "invalid Collection: less than 'count' elements in collection",  60LL,  2LL,  "Swift/ContiguousArrayBuffer.swift",  33LL,  2,  1122LL,  0);
LABEL_15:
  __break(1u);
  return result;
}

void *sub_5488C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_3974(&qword_7B730);
  uint64_t v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
  size_t v6 = j__malloc_size(v5);
  _OWORD v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

char *sub_548F0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_3974(&qword_7B730);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v8;
    *((void *)v11 + sub_EE84(v2, v0 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  id v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_54A88(v14, v8, v13);
    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_549C4(v14, v8, v13);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

void *sub_549C4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000LL) != 0)
  {
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst) {
      return memcpy(__dst, __src, __n);
    }
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

char *sub_54A88(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000LL) != 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }

  return __src;
}

_BYTE **sub_54B08(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = *result;
  *char v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

void sub_54B18(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  int64_t v7 = (void *)v6;
  uint64_t v8 = *a1;
  uint64_t v9 = *a1 + 8;
  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = 0LL;
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8, v9);
  *a1 = v9;
  uint64_t v10 = *a2;
  if (*a2)
  {
    *uint64_t v10 = v7;
    *a2 = v10 + 1;
  }

  else
  {
  }

  sub_551F4();
}

void sub_54BBC(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setUserData:isa];
}

uint64_t sub_54C28( const void *a1, uint64_t a2, __int128 *a3, const void *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(a9 + sub_60A4(v0 + 256, v0 + 176) = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  *(void *)(a9 + 184) = &off_6F450;
  uint64_t v17 = sub_649C((void *)(a9 + 152));
  sub_25748(a2, (uint64_t)v17);
  *(void *)(a9 + 2sub_60A4(v0 + 16, v0 + 56) = &type metadata for EmergencyCATProvider;
  *(void *)(a9 + 264) = &off_6FB48;
  uint64_t v18 = swift_allocObject(&unk_70488, 128LL, 7LL);
  *(void *)(a9 + 23_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v18;
  memcpy((void *)(v18 + 16), a4, 0x70uLL);
  memcpy((void *)(a9 + 24), a1, 0x80uLL);
  sub_65A4(a3, a9 + 192);
  __int128 v19 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 27_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 28_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = v19;
  uint64_t v20 = *(void *)(a5 + 32);
  *(_BYTE *)(a9 + 16) = a6;
  *(void *)(a9 + 304) = v20;
  *(void *)(a9 + 31_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = a7;
  *(void *)(a9 + 320) = a8;
  return a9;
}

uint64_t sub_54D28( const void *a1, uint64_t a2, __int128 *a3, const void *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = type metadata accessor for ConfirmationFlowConfigModel(0LL);
  uint64_t v34 = &off_6F450;
  id v16 = sub_649C(v32);
  sub_25748(a2, (uint64_t)v16);
  void v31[3] = &type metadata for EmergencyCATProvider;
  v31[4] = &off_6FB48;
  v31[0] = sub_77F4((uint64_t)&unk_70488, 128LL);
  sub_EE24((void *)(v31[0] + 16LL), a4);
  uint64_t v17 = type metadata accessor for EmergencyConfirmationFlow();
  uint64_t v18 = sub_77F4(v17, 328LL);
  uint64_t v19 = sub_6120((uint64_t)v32, v33);
  __chkstk_darwin(v19);
  sub_6740();
  uint64_t v22 = v21 - v20;
  (*(void (**)(uint64_t))(v23 + 16))(v21 - v20);
  uint64_t v24 = sub_6120((uint64_t)v31, (uint64_t)&type metadata for EmergencyCATProvider);
  __chkstk_darwin(v24);
  sub_6740();
  uint64_t v27 = (const void *)(v26 - v25);
  (*(void (**)(uint64_t))(v28 + 16))(v26 - v25);
  sub_EE24(v35, v27);
  uint64_t v29 = sub_54C28(a1, v22, a3, v35, a5, a6, a7, a8, v18);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v31);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v32);
  return v29;
}

uint64_t sub_54EDC()
{
  return swift_deallocObject(v0, 128LL, 7LL);
}

void sub_54F68(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = sub_552D8();
  v4(v3);
  sub_6774();
}

uint64_t sub_54FA8()
{
  uint64_t v2 = *(void *)(v0 + 2096);
  *(void *)(v1 - 80) = *(void *)(v0 + 1872);
  return swift_task_dealloc(v2);
}

uint64_t sub_55020(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_5503C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 1848);
  _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(a1);
  uint64_t v3 = sub_3324((void *)(v2 + 56), *(void *)(v2 + 80))[11];
  return swift_retain(v3);
}

uint64_t sub_55078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v5,  0x7269537472617453LL,  0xEA00000000006E65LL,  v6,  a5,  0LL);
}

uint64_t sub_550A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)( v5,  0x7269537472617453LL,  0xEA00000000006E65LL,  v6,  a5,  0LL);
}

  ;
}

uint64_t sub_550EC(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_3324(a1, a2)[11];
  return swift_retain(v2);
}

uint64_t sub_55104()
{
  return static SiriKitEventSender.current.getter();
}

uint64_t sub_5511C(uint64_t a1, uint64_t a2)
{
  return OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(v3, a2, v2, 0LL);
}

uint64_t sub_55130( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t (*a26)(uint64_t, uint64_t, uint64_t))
{
  return a26(v27, v26, v28);
}

uint64_t sub_55144( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return swift_task_dealloc(a20);
}

uint64_t sub_5514C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return swift_task_dealloc(a19);
}

uint64_t sub_55154(uint64_t a1)
{
  return v1(a1, v2, v3);
}

uint64_t sub_55160( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return swift_task_dealloc(a18);
}

uint64_t sub_55168( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return swift_task_dealloc(a17);
}

uint64_t sub_55170( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return swift_task_dealloc(a16);
}

uint64_t sub_55178( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return swift_task_dealloc(a15);
}

void sub_55180()
{
}

uint64_t sub_55198()
{
  return swift_task_dealloc(*(void *)(v0 - 80));
}

uint64_t sub_551A0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return swift_task_dealloc(a14);
}

uint64_t sub_551A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return swift_task_dealloc(a13);
}

uint64_t sub_551B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return swift_task_dealloc(a12);
}

void sub_551B8(uint64_t a1)
{
}

uint64_t sub_551C0()
{
  return static SiriKitEventSender.current.getter();
}

void sub_551C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
}

uint64_t sub_551DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return OutputFlow.init(templatingResult:snippets:flowConfig:rrEntities:)(a1, a2, a3, 0LL);
}

void sub_551E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
}

  ;
}

uint64_t sub_55204(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_5520C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_55228( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t (*a26)(uint64_t, uint64_t, uint64_t))
{
  return a26(v27, v26, v28);
}

BOOL sub_5523C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

  ;
}

uint64_t sub_55268()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void *sub_55278(void *a1)
{
  return sub_3324(a1, v1);
}

uint64_t sub_55280( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t (*a25)(uint64_t, uint64_t))
{
  return a25(v25, v26);
}

uint64_t sub_55290()
{
  return v0(v1, v2);
}

uint64_t sub_552A0()
{
  return sub_2A6DC();
}

uint64_t sub_552A8()
{
  return _s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0);
}

uint64_t sub_552B4()
{
  return v0;
}

uint64_t sub_552C0(uint64_t a1, unint64_t a2)
{
  return sub_543A4(a1, a2, (uint64_t *)(v2 - 128));
}

void sub_552CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_552D8()
{
  return v0;
}

uint64_t sub_552E4()
{
  return v1(v0, v2);
}

void *sub_552F0(void *a1)
{
  return sub_3324(a1, v1);
}

  ;
}

uint64_t sub_5530C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)(a1, a2, a3, v3);
}

void sub_55314(char a1)
{
  __asm { BR              X10 }

uint64_t sub_55358()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(SAAceConfirmationReasonCALL_RESOURCEValue);
}

uint64_t storeEnumTagSinglePayload for ConfirmationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_553D4 + 4 * byte_5A689[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_55408 + 4 * byte_5A684[v4]))();
}

uint64_t sub_55408(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_55410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x55418LL);
  }
  return result;
}

uint64_t sub_55424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x5542CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_55430(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_55438(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationType()
{
  return &type metadata for ConfirmationType;
}

unint64_t sub_55458()
{
  unint64_t result = qword_7B738;
  if (!qword_7B738)
  {
    unint64_t result = swift_getWitnessTable(&unk_5A704, &type metadata for ConfirmationType);
    atomic_store(result, (unint64_t *)&qword_7B738);
  }

  return result;
}

uint64_t type metadata accessor for PoisonControlCATs(uint64_t a1)
{
  uint64_t result = qword_7B740;
  if (!qword_7B740) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PoisonControlCATs);
  }
  return result;
}

uint64_t sub_554CC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B970);
}

void sub_55508(uint64_t a1, char a2)
{
}

void sub_55524()
{
}

void sub_55540(uint64_t a1)
{
}

void sub_5555C()
{
}

void sub_55578()
{
}

uint64_t sub_55594(uint64_t a1, char a2)
{
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_3974(&qword_78BB8);
  uint64_t v8 = swift_allocObject(v7, 128LL, 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_56FB0;
  uint64_t v9 = (void *)(v8 + 48);
  *(void *)(v8 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v8 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, (uint64_t)v6, &qword_78970);
  uint64_t v10 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0((uint64_t)v6, 1LL, v10) == 1)
  {
    sub_7784((uint64_t)v6, &qword_78970);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
  }

  else
  {
    *(void *)(v8 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v10;
    uint64_t v11 = sub_649C(v9);
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v11, v6, v10);
  }

  *(void *)(v8 + 80) = 0xD000000000000012LL;
  *(void *)(v8 + 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0x800000000005ABB0LL;
  *(void *)(v8 + 120) = &type metadata for Bool;
  *(_BYTE *)(v8 + 96) = a2 & 1;
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD000000000000022LL, 0x800000000005C9E0LL, v8);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_55714()
{
  return sub_8270(v0, v1, v2, 34LL, v3);
}

uint64_t sub_55730(uint64_t a1)
{
  return sub_8270(a1, 0x656D614E67726FLL, 0xE700000000000000LL, 35LL, 0x800000000005C160LL);
}

uint64_t sub_5575C()
{
  return sub_8270(v0, v1, v2, 38LL, v3);
}

uint64_t sub_55778()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:)( 0xD000000000000024LL,  0x800000000005C980LL,  &_swiftEmptyArrayStorage);
}

uint64_t sub_5579C()
{
  return type metadata accessor for PoisonControlCATs(0LL);
}

uint64_t type metadata accessor for EmergencySexualAssaultBasicIntentCATs(uint64_t a1)
{
  uint64_t result = qword_7B790;
  if (!qword_7B790) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmergencySexualAssaultBasicIntentCATs);
  }
  return result;
}

uint64_t sub_557DC(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + qword_7B980);
}

void sub_55818(uint64_t a1, char a2)
{
}

void sub_55834(uint64_t a1, char a2)
{
}

void sub_55850(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_5586C(uint64_t a1, char a2)
{
}

void sub_558A4(uint64_t a1, char a2)
{
}

void sub_558D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v8 = sub_3974(&qword_78BB8);
  uint64_t v9 = swift_allocObject(v8, 176LL, 7LL);
  *(_OWORD *)(v9 + 16) = xmmword_56FC0;
  uint64_t v10 = (void *)(v9 + 48);
  *(void *)(v9 + 3_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0x656D614E67726FLL;
  *(void *)(v9 + 40) = 0xE700000000000000LL;
  sub_7DAC(a1, v3, &qword_78970);
  uint64_t v11 = type metadata accessor for SpeakableString(0LL);
  if (sub_5FE0(v3, 1LL, v11) == 1)
  {
    sub_7784(v3, &qword_78970);
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
  }

  else
  {
    *(void *)(v9 + 7_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = v11;
    uint64_t v12 = sub_649C(v10);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32LL))(v12, v3, v11);
  }

  *(void *)(v9 + 80) = 0x65626D754E67726FLL;
  *(void *)(v9 + 8_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0xE900000000000072LL;
  if (a2)
  {
    uint64_t v13 = type metadata accessor for DialogPhoneNumber(0LL);
    uint64_t v14 = a2;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v13 = 0LL;
    *(void *)(v9 + 104) = 0LL;
    *(void *)(v9 + 11_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 2) = 0LL;
  }

  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 120) = v13;
  *(void *)(v9 + 12_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = 0xD000000000000012LL;
  *(void *)(v9 + 136) = 0x800000000005ABB0LL;
  *(void *)(v9 + 16_s19EmergencyFlowPlugin28EmergencyFeatureFlagsManagerVwxx_0(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v9 + 144) = a3 & 1;
  swift_retain(a2);
  dispatch thunk of CATWrapper.execute(catId:parameters:)(0xD00000000000002ALL, 0x800000000005AE00LL, v9);
  swift_bridgeObjectRelease(v9);
  sub_7DF0();
}

uint64_t sub_55A84()
{
  return type metadata accessor for EmergencySexualAssaultBasicIntentCATs(0LL);
}