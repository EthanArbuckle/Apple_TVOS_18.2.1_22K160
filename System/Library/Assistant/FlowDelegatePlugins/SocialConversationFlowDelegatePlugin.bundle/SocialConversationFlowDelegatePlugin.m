uint64_t (*sub_42D4())()
{
  return nullsub_1;
}

uint64_t sub_42E0()
{
  v2 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  swift_endAccess(v4);
  return v3;
}

uint64_t sub_4348(uint64_t a1, uint64_t a2)
{
  v6 = (void *)(v2
                + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  swift_beginAccess();
  uint64_t v3 = v6[1];
  void *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease(v3);
  swift_endAccess(v8);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*sub_43C4())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_440C(uint64_t a1)
{
  return swift_endAccess(a1);
}

uint64_t sub_4448(void *a1)
{
  return sub_4490(a1);
}

uint64_t sub_4490(void *a1)
{
  v7[5] = a1;
  swift_retain();
  swift_retain();
  uint64_t v8 = v1;
  sub_81108();
  swift_release();
  uint64_t v2 = (void *)(v4
                + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  void *v2 = 0LL;
  v2[1] = 0LL;
  swift_release();
  sub_454C((uint64_t)a1, (uint64_t)v7);
  uint64_t v6 = sub_AD128(v7);
  swift_retain();
  uint64_t v8 = v6;
  sub_4598(a1);
  swift_release();
  return v6;
}

uint64_t sub_454C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

uint64_t sub_4598(void *a1)
{
  uint64_t v2 = a1[3];
  if ((*(_DWORD *)(*(void *)(v2 - 8) + 80LL) & 0x20000) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void *))(*(void *)(v2 - 8) + 8LL))(a1);
  }
}

uint64_t sub_4600(uint64_t a1)
{
  uint64_t v93 = a1;
  v127 = 0LL;
  uint64_t v126 = 0LL;
  uint64_t v125 = 0LL;
  uint64_t v71 = 0LL;
  uint64_t v86 = 0LL;
  uint64_t v72 = type metadata accessor for Parse(0LL);
  uint64_t v73 = *(void *)(v72 - 8);
  unint64_t v74 = (*(void *)(v73 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  v75 = (char *)&v51 - v74;
  uint64_t v76 = sub_5150(&qword_D6B20);
  uint64_t v77 = *(void *)(v76 - 8);
  unint64_t v78 = (*(void *)(v77 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  v79 = (char *)&v51 - v78;
  unint64_t v80 = (*(void *)(*(void *)(sub_5150(&qword_D6B28) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  v81 = (char *)&v51 - v80;
  uint64_t v82 = type metadata accessor for INSiriSocialConversation(v4);
  uint64_t v83 = *(void *)(v82 - 8);
  unint64_t v84 = (*(void *)(v83 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  v85 = (char *)&v51 - v84;
  v127 = (char *)&v51 - v84;
  uint64_t v98 = type metadata accessor for Input(v6);
  uint64_t v95 = *(void *)(v98 - 8);
  uint64_t v94 = *(void *)(v95 + 64);
  unint64_t v87 = (v94 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  v97 = (char *)&v51 - v87;
  uint64_t v92 = type metadata accessor for Logger(v8);
  uint64_t v91 = *(void *)(v92 - 8);
  unint64_t v89 = (*(void *)(v91 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  v10 = (char *)&v51 - v89;
  v90 = (char *)&v51 - v89;
  uint64_t v126 = v11;
  uint64_t v125 = v12;
  uint64_t v13 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v10, v13, v92);
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v97, v93, v98);
  uint64_t v14 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v96 = (v14 + 16) & ~v14;
  uint64_t v106 = 7LL;
  uint64_t v99 = swift_allocObject(&unk_C9C68, v96 + v94, v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v99 + v96, v97, v98);
  swift_retain();
  uint64_t v105 = 32LL;
  uint64_t v15 = swift_allocObject(&unk_C9C90, 32LL, v106);
  uint64_t v16 = v99;
  uint64_t v107 = v15;
  *(void *)(v15 + 16) = sub_526C;
  *(void *)(v15 + 24) = v16;
  uint64_t v17 = swift_release();
  v115 = (os_log_s *)Logger.logObject.getter(v17);
  int v116 = static os_log_type_t.debug.getter();
  v102 = &v123;
  uint64_t v123 = 12LL;
  unint64_t v100 = sub_7788();
  unint64_t v101 = sub_77F0();
  unint64_t v18 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v124, v102, &type metadata for UInt32, &type metadata for Int, v100, v101, v18);
  uint32_t v103 = v124;
  uint64_t v104 = 17LL;
  uint64_t v19 = swift_allocObject(&unk_C9CB8, 17LL, v106);
  uint64_t v20 = v104;
  uint64_t v21 = v106;
  uint64_t v109 = v19;
  *(_BYTE *)(v19 + 16) = 32;
  uint64_t v22 = swift_allocObject(&unk_C9CE0, v20, v21);
  uint64_t v23 = v105;
  uint64_t v24 = v106;
  uint64_t v110 = v22;
  *(_BYTE *)(v22 + 16) = 8;
  uint64_t v25 = swift_allocObject(&unk_C9D08, v23, v24);
  uint64_t v26 = v105;
  uint64_t v27 = v106;
  uint64_t v28 = v25;
  uint64_t v29 = v107;
  uint64_t v108 = v28;
  *(void *)(v28 + 16) = sub_76D0;
  *(void *)(v28 + 24) = v29;
  uint64_t v30 = swift_allocObject(&unk_C9D30, v26, v27);
  uint64_t v31 = v108;
  uint64_t v112 = v30;
  *(void *)(v30 + 16) = sub_88B8;
  *(void *)(v30 + 24) = v31;
  uint64_t v114 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v111 = _allocateUninitializedArray<A>(_:)(3LL, v114);
  v113 = v32;
  swift_retain();
  uint64_t v33 = v109;
  v34 = v113;
  void *v113 = sub_884C;
  v34[1] = v33;
  swift_retain();
  uint64_t v35 = v110;
  v36 = v113;
  v113[2] = sub_884C;
  v36[3] = v35;
  swift_retain();
  uint64_t v37 = v111;
  uint64_t v38 = v112;
  v39 = v113;
  v113[4] = sub_8900;
  v39[5] = v38;
  sub_6648();
  swift_bridgeObjectRelease(v37);
  if (os_log_type_enabled(v115, (os_log_type_t)v116))
  {
    uint64_t v40 = v71;
    v64 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v63 = sub_5150(&qword_D6B60);
    uint64_t v65 = sub_74D0(0LL, v63, v63);
    uint64_t v66 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v67 = &v121;
    v121 = v64;
    v68 = &v120;
    uint64_t v120 = v65;
    v69 = &v119;
    uint64_t v119 = v66;
    sub_7528(2LL, &v121);
    sub_7528(1LL, v67);
    v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v118 = v109;
    sub_753C(&v117, (uint64_t)v67, (uint64_t)v68, (uint64_t)v69);
    uint64_t v70 = v40;
    if (v40)
    {
      __break(1u);
    }

    else
    {
      v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v118 = v110;
      sub_753C(&v117, (uint64_t)&v121, (uint64_t)&v120, (uint64_t)&v119);
      uint64_t v61 = 0LL;
      uint64_t v42 = v61;
      v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v118 = v112;
      sub_753C(&v117, (uint64_t)&v121, (uint64_t)&v120, (uint64_t)&v119);
      uint64_t v60 = v42;
      _os_log_impl(&dword_0, v115, (os_log_type_t)v116, "CannedDialogFlow on input %s", v64, v103);
      sub_7580(v65, 0LL);
      sub_7580(v66, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v62 = v60;
    }
  }

  else
  {
    uint64_t v41 = v71;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v62 = v41;
  }

  v43 = v79;
  uint64_t v44 = v62;

  (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))( v43,  v88 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_cannedInputTransformer,  v76);
  v58 = (void (*)(char *))Transformer.transform.getter(v76);
  uint64_t v57 = v45;
  uint64_t v46 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v79, v76);
  Input.parse.getter(v46);
  v58(v75);
  uint64_t v59 = v44;
  if (v44)
  {
    uint64_t v51 = v59;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);
    swift_release();
    swift_errorRelease(v51);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v81, 1LL, 1LL, v82);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v81, 0LL, 1LL, v82);
    swift_release();
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1LL, v82) == 1)
  {
    sub_890C((uint64_t)v81);
    int v56 = 0;
  }

  else
  {
    sub_89E0(v81, v85);
    uint64_t v52 = *(void *)v85;
    uint64_t v55 = *((void *)v85 + 1);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v55);
    v53 = (void *)(v88
                   + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
    v54 = &v122;
    swift_beginAccess(v88 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
    v47 = v53;
    uint64_t v48 = v55;
    uint64_t v49 = v53[1];
    void *v53 = v52;
    v47[1] = v48;
    swift_bridgeObjectRelease(v49);
    swift_endAccess(v54);
    swift_bridgeObjectRelease(v55);
    sub_8AF4((uint64_t)v85);
    int v56 = 1;
  }

  return v56 & 1;
}

uint64_t sub_5150(uint64_t *a1)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t TypeByMangledNameInContext2 = swift_getTypeByMangledNameInContext2((char *)a1 + (int)*a1, -(*a1 >> 32), 0LL);
    *a1 = TypeByMangledNameInContext2;
    return TypeByMangledNameInContext2;
  }

  return v4;
}

uint64_t sub_51BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = type metadata accessor for Input(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a2, a1);
}

uint64_t sub_51FC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Input(0LL) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v6 = v3 + *(void *)(v1 + 64);
  uint64_t v7 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v5, v6, v7);
}

uint64_t sub_526C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Input(0LL) - 8) + 80LL);
  return sub_51BC(v1 + ((v2 + 16) & ~v2), a1);
}

uint64_t sub_52AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CannedDialogFlow(0LL);
  unint64_t v2 = sub_8C04();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v5, v2);
}

uint64_t sub_5320(uint64_t a1)
{
  v2[51] = v1;
  v2[50] = a1;
  v2[36] = v2;
  v2[37] = 0LL;
  v2[39] = 0LL;
  v2[32] = 0LL;
  v2[33] = 0LL;
  v2[34] = 0LL;
  v2[35] = 0LL;
  v2[49] = 0LL;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  v2[52] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[53] = v4;
  uint64_t v6 = *(void *)(v4 + 64);
  v2[54] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v2[55] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v2[37] = v1;
  return swift_task_switch(sub_53E4, 0LL);
}

uint64_t sub_53E4()
{
  uint64_t v58 = v0[51];
  v0[36] = v0;
  uint64_t v1 = sub_502C8();
  uint64_t v57 = *v1;
  uint64_t v52 = v1[1];
  char v53 = *((_BYTE *)v1 + 16);
  unint64_t v2 = sub_5031C();
  uint64_t v54 = *v2;
  uint64_t v55 = v2[1];
  char v56 = *((_BYTE *)v2 + 16);
  uint64_t v3 = sub_50370();
  sub_BA74(v57, v52, v53, v54, v55, v56, *v3, v3[1], (uint64_t)(v0 + 2), *((_BYTE *)v3 + 16));
  swift_retain();
  sub_454C(v58 + 16, (uint64_t)(v0 + 11));
  swift_release();
  uint64_t v60 = v0[14];
  uint64_t v59 = v0[15];
  sub_8C74(v0 + 11, v60);
  (*(void (**)(uint64_t))(v59 + 40))(v60);
  uint64_t v62 = v0[19];
  uint64_t v61 = v0[20];
  sub_8C74(v0 + 16, v62);
  char v63 = (*(uint64_t (**)(uint64_t))(v61 + 72))(v62);
  sub_4598(v0 + 16);
  sub_4598(v0 + 11);
  if ((v63 & 1) != 0)
  {
    static AceService.currentAsync.getter();
    uint64_t v48 = *(void *)(v51 + 192);
    uint64_t v47 = *(void *)(v51 + 200);
    sub_8C74((void *)(v51 + 168), v48);
    uint64_t started = dispatch thunk of AceServiceInvokerAsync.currentStartRequestId()(v48, v47);
    uint64_t v50 = v4;
    *(void *)(v51 + 448) = v4;
    if (v4)
    {
      uint64_t v43 = *(void *)(v51 + 408);
      *(void *)(v51 + 256) = started;
      *(void *)(v51 + 264) = v4;
      sub_4598((void *)(v51 + 168));
      uint64_t v44 = (uint64_t *)(v43
                      + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
      swift_beginAccess(v43 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
      uint64_t v45 = *v44;
      uint64_t v46 = v44[1];
      *(void *)(v51 + 456) = v46;
      swift_bridgeObjectRetain(v46);
      swift_endAccess(v51 + 232);
      if (v46)
      {
        *(void *)(v51 + 272) = v45;
        *(void *)(v51 + 280) = v46;
        swift_bridgeObjectRetain(v46);
        uint64_t v5 = sub_83F80(v45, v46);
        uint64_t v41 = v6;
        uint64_t v42 = sub_84000(v5, v6);
        *(void *)(v51 + 464) = v42;
        swift_bridgeObjectRelease(v41);
        *(void *)(v51 + 392) = v42;
        uint64_t v7 = (void *)swift_task_alloc(dword_D7D74);
        *(void *)(v51 + 472) = v7;
        *uint64_t v7 = *(void *)(v51 + 288);
        v7[1] = sub_5BA0;
        return sub_47648(started, v50, v45, v46, v42);
      }

      swift_bridgeObjectRelease(v50);
    }

    else
    {
      sub_4598((void *)(v51 + 168));
    }
  }

  else
  {
    uint64_t v9 = *(void *)(v51 + 440);
    uint64_t v33 = *(void *)(v51 + 424);
    uint64_t v34 = *(void *)(v51 + 416);
    uint64_t v10 = sub_AD514();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v9, v10, v34);
    oslog = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v38 = static os_log_type_t.debug.getter();
    *(void *)(v51 + 304) = 2LL;
    unint64_t v35 = sub_7788();
    unint64_t v36 = sub_77F0();
    unint64_t v12 = sub_7858();
    UnsignedInteger<>.init<A>(_:)( (void *)(v51 + 84),  v51 + 304,  &type metadata for UInt32,  &type metadata for Int,  v35,  v36,  v12);
    uint32_t size = *(_DWORD *)(v51 + 84);
    uint64_t v13 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v40 = _allocateUninitializedArray<A>(_:)(0LL, v13);
    if (os_log_type_enabled(oslog, v38))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v27 = sub_5150(&qword_D6B60);
      uint64_t v29 = sub_74D0(0LL, v27, v27);
      uint64_t v30 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(void *)(v51 + 360) = buf;
      *(void *)(v51 + 368) = v29;
      *(void *)(v51 + 376) = v30;
      sub_7528(0LL, (_BYTE **)(v51 + 360));
      sub_7528(0LL, (_BYTE **)(v51 + 360));
      *(void *)(v51 + 384) = v40;
      uint64_t v31 = (void *)swift_task_alloc(48LL);
      v31[2] = v51 + 360;
      v31[3] = v51 + 368;
      v31[4] = v51 + 376;
      uint64_t v32 = sub_5150(&qword_D6B78);
      unint64_t v14 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v31, v32, v14);
      swift_task_dealloc(v31);
      _os_log_impl( &dword_0,  oslog,  v38,  "SocialHints feature flag is diabled. Not submitting intent to SiriSuggestions",  buf,  size);
      sub_7580(v29, 0LL);
      sub_7580(v30, 0LL);
      UnsafeMutablePointer.deallocate()();
    }

    swift_bridgeObjectRelease(v40);
    uint64_t v25 = *(void *)(v51 + 440);
    uint64_t v24 = *(void *)(v51 + 424);
    uint64_t v26 = *(void *)(v51 + 416);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
  }

  uint64_t v17 = *(void *)(v51 + 408);
  swift_retain();
  *(void *)(v51 + 480) = *(void *)(v17 + 56);
  swift_retain();
  swift_release();
  unint64_t v18 = (uint64_t *)(v17
                  + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  swift_beginAccess(v17 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  *(void *)(v51 + 488) = v20;
  swift_bridgeObjectRetain(v20);
  swift_endAccess(v51 + 208);
  uint64_t v21 = sub_629C();
  uint64_t v22 = v15;
  *(void *)(v51 + 496) = v15;
  uint64_t v23 = sub_62D4();
  *(void *)(v51 + 504) = v23;
  uint64_t v16 = (void *)swift_task_alloc(dword_D72FC);
  *(void *)(v51 + 512) = v16;
  *uint64_t v16 = *(void *)(v51 + 288);
  v16[1] = sub_5D78;
  return sub_C0CC(*(void *)(v51 + 400), v19, v20, v51 + 16, v21, v22, v23);
}

uint64_t sub_5BA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 472LL);
  *(void *)(*(void *)v0 + 288LL) = *(void *)v0;
  swift_task_dealloc(v1);
  return swift_task_switch(sub_5C0C, 0LL);
}

uint64_t sub_5C0C()
{
  uint64_t v1 = v0[58];
  uint64_t v5 = v0[57];
  uint64_t v6 = v0[56];
  v0[36] = v0;
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = v0[51];
  swift_retain();
  v0[60] = *(void *)(v7 + 56);
  swift_retain();
  swift_release();
  uint64_t v8 = (uint64_t *)(v7
                 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  swift_beginAccess(v7 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  uint64_t v10 = *v8;
  uint64_t v11 = v8[1];
  v0[61] = v11;
  swift_bridgeObjectRetain(v11);
  swift_endAccess(v0 + 26);
  uint64_t v12 = sub_629C();
  uint64_t v13 = v2;
  v0[62] = v2;
  uint64_t v14 = sub_62D4();
  v0[63] = v14;
  uint64_t v3 = (void *)swift_task_alloc(dword_D72FC);
  v9[64] = v3;
  *uint64_t v3 = v9[36];
  v3[1] = sub_5D78;
  return sub_C0CC(v9[50], v10, v11, (uint64_t)(v0 + 2), v12, v13, v14);
}

void *sub_5D78()
{
  uint64_t v2 = *v1;
  uint64_t v8 = (void *)(*v1 + 16);
  uint64_t v9 = (void *)(*v1 + 288);
  uint64_t v3 = *(void *)(*v1 + 512);
  *(void *)(v2 + 288) = *v1;
  *(void *)(v2 + 520) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return (void *)swift_task_switch(sub_5E90, 0LL);
  }
  uint64_t v5 = v8[60];
  uint64_t v6 = v8[59];
  swift_bridgeObjectRelease(v8[61]);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_release();
  uint64_t v7 = v8[52];
  swift_task_dealloc(v8[53]);
  swift_task_dealloc(v7);
  return (*(void *(**)(void *__return_ptr))(*v9 + 8LL))(v9);
}

uint64_t sub_5E90()
{
  uint64_t v24 = v0[65];
  uint64_t v1 = v0[63];
  uint64_t v22 = v0[62];
  uint64_t v23 = v0[61];
  uint64_t v2 = v0[54];
  uint64_t v25 = v0[53];
  uint64_t v26 = v0[52];
  v0[36] = v0;
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  swift_release();
  swift_errorRetain(v24);
  v0[39] = v24;
  uint64_t v3 = sub_AD514();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v2, v3, v26);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v30 = static os_log_type_t.error.getter();
  v0[40] = 2LL;
  unint64_t v27 = sub_7788();
  unint64_t v28 = sub_77F0();
  unint64_t v5 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 66, v0 + 40, &type metadata for UInt32, &type metadata for Int, v27, v28, v5);
  uint32_t v29 = *((_DWORD *)v0 + 132);
  uint64_t v6 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v32 = _allocateUninitializedArray<A>(_:)(0LL, v6);
  if (os_log_type_enabled(v31, v30))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v15 = sub_5150(&qword_D6B60);
    uint64_t v17 = sub_74D0(0LL, v15, v15);
    uint64_t v18 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    *(void *)(v21 + 328) = buf;
    *(void *)(v21 + 336) = v17;
    *(void *)(v21 + 344) = v18;
    sub_7528(0LL, (_BYTE **)(v21 + 328));
    sub_7528(0LL, (_BYTE **)(v21 + 328));
    *(void *)(v21 + 352) = v32;
    uint64_t v19 = (void *)swift_task_alloc(48LL);
    v19[2] = v21 + 328;
    v19[3] = v21 + 336;
    v19[4] = v21 + 344;
    uint64_t v20 = sub_5150(&qword_D6B78);
    unint64_t v7 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v19, v20, v7);
    swift_task_dealloc(v19);
    _os_log_impl(&dword_0, v31, v30, "Error thrown from flow dialog", buf, v29);
    sub_7580(v17, 0LL);
    sub_7580(v18, 0LL);
    UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease(v32);
  uint64_t v13 = *(void *)(v21 + 520);
  uint64_t v11 = *(void *)(v21 + 432);
  uint64_t v10 = *(void *)(v21 + 424);
  uint64_t v12 = *(void *)(v21 + 416);

  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  static ExecuteResponse.complete()(v8);
  swift_errorRelease(v13);
  swift_errorRelease(v13);
  uint64_t v14 = *(void *)(v21 + 432);
  swift_task_dealloc(*(void *)(v21 + 440));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(*(void *)(v21 + 288) + 8LL))();
}

uint64_t sub_629C()
{
  uint64_t v0 = sub_3B2A8();
  uint64_t v2 = *(void *)v0;
  swift_bridgeObjectRetain(*((void *)v0 + 1));
  return v2;
}

uint64_t sub_62D4()
{
  return _allocateUninitializedArray<A>(_:)(0LL, &type metadata for String);
}

uint64_t sub_62F4()
{
  uint64_t v3 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_cannedInputTransformer;
  uint64_t v1 = sub_5150(&qword_D6B20);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(v0 + v3);
  uint64_t result = v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID;
  sub_8DD8(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  return result;
}

uint64_t sub_6354()
{
  uint64_t v3 = sub_AD1DC();
  uint64_t v2 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_cannedInputTransformer;
  uint64_t v0 = sub_5150(&qword_D6B20);
  (*(void (**)(uint64_t))(*(void *)(v0 - 8) + 8LL))(v3 + v2);
  sub_8DD8(v3 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16CannedDialogFlow_socialConversationDialogID);
  return v3;
}

uint64_t sub_63CC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_640C(uint64_t a1)
{
  return sub_4600(a1) & 1;
}

uint64_t sub_6430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 24) = v4;
  *uint64_t v4 = *(void *)(v3 + 16);
  v4[1] = sub_64B4;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_64B4(unsigned int a1)
{
  uint64_t v4 = *v1;
  uint64_t v2 = *(void *)(*v1 + 24);
  *(void *)(v4 + 16) = *v1;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(*(void *)(v4 + 16) + 8LL))(a1);
}

uint64_t sub_651C(uint64_t a1, uint64_t a2)
{
  return sub_52AC(a1, a2);
}

uint64_t sub_653C(uint64_t a1)
{
  *(void *)(v1 + 16) = v1;
  uint64_t v2 = (void *)swift_task_alloc(dword_D6B74);
  *(void *)(v1 + 24) = v2;
  void *v2 = *(void *)(v1 + 16);
  v2[1] = sub_65B4;
  return sub_5320(a1);
}

uint64_t sub_65B4()
{
  uint64_t v3 = *v0;
  uint64_t v1 = *(void *)(*v0 + 24);
  *(void *)(*v0 + 16) = *v0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(*(void *)(v3 + 16) + 8LL))();
}

uint64_t sub_6614()
{
  return nullsub_1();
}

uint64_t sub_6634()
{
  return Flow.flexibleExecutionSupport.getter();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_6648()
{
}

uint64_t variable initialization expression of PlayWithMeData.games()
{
  return _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
}

uint64_t variable initialization expression of PlayWithMeData.gameSets()
{
  return _allocateUninitializedArray<A>(_:)(0LL, &unk_CFC20);
}

uint64_t variable initialization expression of PlayWithMeData.presentedIndex()
{
  return 0LL;
}

uint64_t variable initialization expression of PlayWithMeData.initialized()
{
  return 0LL;
}

uint64_t sub_66DC(uint64_t a1)
{
  unint64_t v3 = sub_9A68();
  unint64_t v1 = sub_9AD8();
  return OptionSet<>.init()(a1, v3, v1);
}

uint64_t sub_671C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9A68();
  return OptionSet<>.contains(_:)(a1, a2, v2) & 1;
}

uint64_t sub_6754(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9A68();
  return OptionSet.union(_:)(a1, a2, v2);
}

uint64_t sub_6790(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9A68();
  return OptionSet.intersection(_:)(a1, a2, v2);
}

uint64_t sub_67CC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9A68();
  return OptionSet.symmetricDifference(_:)(a1, a2, v2);
}

uint64_t sub_6808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_9A68();
  return OptionSet<>.insert(_:)(a1, a2, a3, v3) & 1;
}

uint64_t sub_6848(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9A68();
  return OptionSet<>.remove(_:)(a1, a2, v2);
}

uint64_t sub_6884(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9A68();
  return OptionSet<>.update(with:)(a1, a2, v2);
}

uint64_t sub_68C0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9A68();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formUnion(_:)(a1, a2, v5, v2);
}

uint64_t sub_6900(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9A68();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formIntersection(_:)(a1, a2, v5, v2);
}

uint64_t sub_6940(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9A68();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formSymmetricDifference(_:)(a1, a2, v5, v2);
}

uint64_t sub_6980()
{
  return SetAlgebra.subtracting(_:)();
}

uint64_t sub_6994()
{
  return SetAlgebra.isSubset(of:)() & 1;
}

uint64_t sub_69AC()
{
  return SetAlgebra.isDisjoint(with:)() & 1;
}

uint64_t sub_69C4()
{
  return SetAlgebra.isSuperset(of:)() & 1;
}

uint64_t sub_69DC()
{
  return SetAlgebra.isEmpty.getter() & 1;
}

uint64_t sub_69F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_6A2C()
{
  return SetAlgebra.subtract(_:)();
}

uint64_t sub_6A40(uint64_t a1)
{
  unint64_t v3 = sub_9B40();
  unint64_t v1 = sub_9AD8();
  return OptionSet<>.init()(a1, v3, v1);
}

uint64_t sub_6A80(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9B40();
  return OptionSet<>.contains(_:)(a1, a2, v2) & 1;
}

uint64_t sub_6AB8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9B40();
  return OptionSet.union(_:)(a1, a2, v2);
}

uint64_t sub_6AF4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9B40();
  return OptionSet.intersection(_:)(a1, a2, v2);
}

uint64_t sub_6B30(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9B40();
  return OptionSet.symmetricDifference(_:)(a1, a2, v2);
}

uint64_t sub_6B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_9B40();
  return OptionSet<>.insert(_:)(a1, a2, a3, v3) & 1;
}

uint64_t sub_6BAC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9B40();
  return OptionSet<>.remove(_:)(a1, a2, v2);
}

uint64_t sub_6BE8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9B40();
  return OptionSet<>.update(with:)(a1, a2, v2);
}

uint64_t sub_6C24(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9B40();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formUnion(_:)(a1, a2, v5, v2);
}

uint64_t sub_6C64(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9B40();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formIntersection(_:)(a1, a2, v5, v2);
}

uint64_t sub_6CA4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9B40();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formSymmetricDifference(_:)(a1, a2, v5, v2);
}

uint64_t sub_6CE4(uint64_t a1)
{
  unint64_t v3 = sub_9BB0();
  unint64_t v1 = sub_9AD8();
  return OptionSet<>.init()(a1, v3, v1);
}

uint64_t sub_6D24(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9BB0();
  return OptionSet<>.contains(_:)(a1, a2, v2) & 1;
}

uint64_t sub_6D5C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9BB0();
  return OptionSet.union(_:)(a1, a2, v2);
}

uint64_t sub_6D98(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9BB0();
  return OptionSet.intersection(_:)(a1, a2, v2);
}

uint64_t sub_6DD4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9BB0();
  return OptionSet.symmetricDifference(_:)(a1, a2, v2);
}

uint64_t sub_6E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_9BB0();
  return OptionSet<>.insert(_:)(a1, a2, a3, v3) & 1;
}

uint64_t sub_6E50(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9BB0();
  return OptionSet<>.remove(_:)(a1, a2, v2);
}

uint64_t sub_6E8C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9BB0();
  return OptionSet<>.update(with:)(a1, a2, v2);
}

uint64_t sub_6EC8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9BB0();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formUnion(_:)(a1, a2, v5, v2);
}

uint64_t sub_6F08(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9BB0();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formIntersection(_:)(a1, a2, v5, v2);
}

uint64_t sub_6F48(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9BB0();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formSymmetricDifference(_:)(a1, a2, v5, v2);
}

uint64_t sub_6F88(uint64_t a1)
{
  unint64_t v3 = sub_9C20();
  unint64_t v1 = sub_9AD8();
  return OptionSet<>.init()(a1, v3, v1);
}

uint64_t sub_6FC8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9C20();
  return OptionSet<>.contains(_:)(a1, a2, v2) & 1;
}

uint64_t sub_7000(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9C20();
  return OptionSet.union(_:)(a1, a2, v2);
}

uint64_t sub_703C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9C20();
  return OptionSet.intersection(_:)(a1, a2, v2);
}

uint64_t sub_7078(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9C20();
  return OptionSet.symmetricDifference(_:)(a1, a2, v2);
}

uint64_t sub_70B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_9C20();
  return OptionSet<>.insert(_:)(a1, a2, a3, v3) & 1;
}

uint64_t sub_70F4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9C20();
  return OptionSet<>.remove(_:)(a1, a2, v2);
}

uint64_t sub_7130(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_9C20();
  return OptionSet<>.update(with:)(a1, a2, v2);
}

uint64_t sub_716C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9C20();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formUnion(_:)(a1, a2, v5, v2);
}

uint64_t sub_71AC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9C20();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formIntersection(_:)(a1, a2, v5, v2);
}

uint64_t sub_71EC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_9C20();
  unint64_t v2 = sub_9AD8();
  return OptionSet<>.formSymmetricDifference(_:)(a1, a2, v5, v2);
}

uint64_t sub_722C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_923C();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for UInt) & 1;
}

uint64_t sub_7274(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_92C0();
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, v2);
}

uint64_t sub_72B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_72DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_9344();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for UInt) & 1;
}

uint64_t sub_7324(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_93C8();
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, v2);
}

uint64_t sub_7360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_944C();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for UInt) & 1;
}

uint64_t sub_73A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_94D0();
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, v2);
}

uint64_t sub_73E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_9554();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for UInt) & 1;
}

uint64_t sub_742C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_95D8();
  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, v2);
}

uint64_t sub_7468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_74A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_74D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    return static UnsafeMutablePointer.allocate(capacity:)(a1, a3);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_7528(uint64_t result, _BYTE **a2)
{
  unint64_t v2 = *a2;
  _BYTE *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_753C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_7580(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    UnsafeMutablePointer.deinitialize(count:)(a2);
    UnsafeMutablePointer.deallocate()();
  }
}

uint64_t sub_75EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  uint64_t v9 = a4;
  uint64_t v10 = *(void *)(a3 - 8);
  unint64_t v8 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  uint64_t v4 = (void (*)(void))__chkstk_darwin();
  uint64_t v11 = (char *)&v7 - v8;
  v4();
  uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter(v12, v9);
  uint64_t v14 = v5;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  return v13;
}

uint64_t sub_7694()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_76D0()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = type metadata accessor for Input(0LL);
  unint64_t v1 = sub_7718();
  return sub_75EC(v5, v3, v4, v1);
}

unint64_t sub_7718()
{
  uint64_t v3 = qword_D6B30;
  if (!qword_D6B30)
  {
    uint64_t v0 = type metadata accessor for Input(255LL);
    unint64_t v1 = ((uint64_t (*)(void *, uint64_t))swift_getWitnessTable)( &protocol conformance descriptor for Input,  v0);
    atomic_store(v1, (unint64_t *)&qword_D6B30);
    return v1;
  }

  return v3;
}

unint64_t sub_7788()
{
  uint64_t v2 = qword_D8870;
  if (!qword_D8870)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8870);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_77F0()
{
  uint64_t v2 = qword_D6B40;
  if (!qword_D6B40)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6B40);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_7858()
{
  uint64_t v2 = qword_D8880;
  if (!qword_D8880)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8880);
    return WitnessTable;
  }

  return v2;
}

void sub_78C0()
{
  *uint64_t v0 = *v0;
}

uint64_t sub_78CC(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_78EC(void *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4();
  uint64_t v10 = v5;
  uint64_t v6 = sub_7968(v4, v5, a3);
  uint64_t v11 = *a1;
  uint64_t v7 = *a1 + 8LL;
  uint64_t v13 = v6;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v11, v7);
  swift_bridgeObjectRelease(v10);
  uint64_t result = a1;
  *a1 = v11 + 8;
  return result;
}

uint64_t sub_7968(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v14 = sub_7AD8((uint64_t)&v17, 0LL, 0LL, 1, a1, a2);
  uint64_t v15 = v3;
  __int16 v16 = v4;
  uint64_t v11 = v17;
  if (v14)
  {
    v12[3] = swift_getObjectType();
    v12[0] = v14;
    uint64_t v6 = *a3;
    if (*a3)
    {
      sub_9C90((uint64_t)v12, v6);
      *a3 = v6 + 32;
    }

    sub_4598(v12);
  }

  else
  {
    v13[3] = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    uint64_t v7 = *a3;
    if (*a3)
    {
      sub_9C90((uint64_t)v13, v7);
      *a3 = v7 + 32;
    }

    swift_bridgeObjectRetain(a2);
    sub_4598(v13);
  }

  return v11;
}

uint64_t sub_7AD8(uint64_t result, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = (void *)result;
  uint64_t v27 = a6;
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0)
    {
      int64_t v18 = a2 ? a3 - (void)a2 : 0LL;
      int64_t v17 = (a6 & 0xF00000000000000uLL) >> 56;
      if (v17 < v18)
      {
        if (a2)
        {
          __dst = a2;
        }

        else
        {
          _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  137LL,  0);
          __break(1u);
        }

        v24[0] = a5;
        v24[1] = a6 & (-(uint64_t)bswap64(0xFFuLL) - 1);
        sub_7EBC(v24, v17, __dst);
        UnsafeMutableRawBufferPointer.subscript.setter(0LL, v17, a2, a3);
        *uint64_t v20 = __dst;
        uint64_t v12 = 0LL;
        uint64_t v13 = v17;
        char v14 = 1;
        char v15 = 0;
        goto LABEL_28;
      }
    }

    goto LABEL_14;
  }

  if ((a6 & 0x1000000000000000LL) != 0)
  {
LABEL_14:
    uint64_t v6 = sub_7EF8(a5, a6);
    *uint64_t v20 = v7;
    uint64_t v12 = v6;
    uint64_t v13 = v8;
    char v14 = 0;
    char v15 = 1;
LABEL_28:
    v24[2] = v12;
    v24[3] = v13;
    char v25 = v14 & 1;
    char v26 = v15 & 1;
    return (uint64_t)v12;
  }

  if ((a5 & 0x1000000000000000LL) != 0)
  {
    if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0xFFFFFFFFFFFFFFE0LL)
    {
      uint64_t v11 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
      goto LABEL_23;
    }

    __break(1u);
  }

  uint64_t result = _StringObject.sharedUTF8.getter(a5, a6);
  if (result)
  {
    uint64_t v10 = result;
  }

  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  151LL,  0);
    __break(1u);
  }

  uint64_t v11 = v10;
LABEL_23:
  *uint64_t v20 = v11;
  if (a6 < 0)
  {
    uint64_t v9 = 0LL;
LABEL_27:
    uint64_t v12 = (void *)v9;
    uint64_t v13 = a5 & 0xFFFFFFFFFFFFLL;
    char v14 = 0;
    char v15 = 0;
    goto LABEL_28;
  }

  if ((a6 & 0xFFFFFFFFFFFFFFFLL) != 0)
  {
    swift_unknownObjectRetain();
    uint64_t v9 = a6 & 0xFFFFFFFFFFFFFFFLL;
    goto LABEL_27;
  }

  __break(1u);
  return result;
}

void *sub_7EBC(const void *a1, size_t a2, void *__dst)
{
  return __dst;
}

void *sub_7EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_7FA8(a1, a2);
  sub_8120();
  uint64_t v4 = v6[2];
  sub_8194(v4);
  sub_8214(v4, 0);
  sub_78C0();
  swift_retain();
  uint64_t v5 = sub_8280((uint64_t)v6);
  swift_bridgeObjectRelease(v6);
  uint64_t result = (void *)v5;
  if (!__OFSUB__(v5, 1LL)) {
    return v6;
  }
  __break(1u);
  return result;
}

void *sub_7FA8(uint64_t a1, uint64_t a2)
{
  v10[2] = a2;
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    uint64_t v7 = String.UTF8View._foreignCount()();
  }

  else if ((a2 & 0x2000000000000000LL) != 0)
  {
    uint64_t v7 = (a2 & 0xF00000000000000uLL) >> 56;
  }

  else
  {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }

  if (!v7) {
    return sub_83FC();
  }
  uint64_t v5 = sub_8294(v7, 0LL);
  swift_retain();
  swift_release();
  uint64_t result = (void *)_StringGuts.copyUTF8(into:)(v5 + 4, v7, a1, a2);
  uint64_t v6 = result;
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }

  else
  {
    swift_bridgeObjectRetain(0xE000000000000000LL);
    uint64_t result = v10;
    v10[0] = 0LL;
    v10[1] = 0xE000000000000000LL;
    sub_8DD8((uint64_t)v10);
    if (v6 == (void *)v7) {
      return v5;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_8120()
{
  uint64_t v4 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v4;
  if ((result & 1) == 0)
  {
    uint64_t v2 = sub_8280(*v3);
    uint64_t result = sub_8428(0, v2 + 1, 1, *v3);
    *char v3 = result;
  }

  return result;
}

uint64_t sub_8194(uint64_t result)
{
  if (*(void *)(*(void *)v1 + 24LL) >> 1 < result + 1)
  {
    uint64_t result = sub_8428(*(void *)(*(void *)v1 + 24LL) >> 1 != 0LL, result + 1, 1, *v2);
    uint64_t *v2 = result;
  }

  return result;
}

uint64_t sub_8214(uint64_t a1, char a2)
{
  uint64_t v5 = a1 + 1;
  uint64_t v4 = *v2;
  swift_bridgeObjectRetain();
  *(void *)(v4 + 16) = v5;
  swift_release(v4);
  uint64_t v6 = *v2;
  swift_retain();
  *(_BYTE *)(v6 + 32 + a1) = a2;
  return swift_release(v6);
}

uint64_t sub_8280(uint64_t a1)
{
  return sub_8724(a1);
}

void *sub_8294(uint64_t a1, uint64_t a2)
{
  if (a2 < a1) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = a2;
  }
  if (v7)
  {
    uint64_t v2 = sub_5150((uint64_t *)&unk_D6E10);
    uint64_t v6 = (void *)swift_allocObject(v2, v7 + 32, 7LL);
    if ((sub_9CD4() & 1) != 0)
    {
      size_t v4 = (size_t)v6 + sub_9CE0(v6);
      swift_retain();
      v6[2] = a1;
      v6[3] = 2 * (v4 - (void)(v6 + 4));
    }

    else
    {
      swift_retain();
      v6[2] = a1;
      v6[3] = 2 * v7;
    }

    swift_release();
    return v6;
  }

  else
  {
    swift_retain();
    return &_swiftEmptyArrayStorage;
  }

void *sub_83FC()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_8428(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result = swift_retain();
  uint64_t v16 = *(void *)(a4 + 24) >> 1;
  if ((a3 & 1) != 0)
  {
    if (v16 < a2)
    {
      if ((unsigned __int128)(v16 * (__int128)2LL) >> 64 != (2 * v16) >> 63)
      {
        __break(1u);
        return result;
      }

      if (2 * v16 < a2) {
        uint64_t v11 = a2;
      }
      else {
        uint64_t v11 = 2 * v16;
      }
    }

    else
    {
      uint64_t v11 = *(void *)(a4 + 24) >> 1;
    }
  }

  else
  {
    uint64_t v11 = a2;
  }

  int64_t v10 = *(void *)(a4 + 16);
  if (v11 < v10) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v11;
  }
  if (v9)
  {
    uint64_t v5 = sub_5150((uint64_t *)&unk_D6E10);
    uint64_t v8 = (void *)swift_allocObject(v5, v9 + 32, 7LL);
    if ((sub_9CD4() & 1) != 0)
    {
      size_t v6 = (size_t)v8 + sub_9CE0(v8);
      swift_retain();
      v8[2] = v10;
      v8[3] = 2 * (v6 - (void)(v8 + 4));
    }

    else
    {
      swift_retain();
      v8[2] = v10;
      v8[3] = 2 * v9;
    }

    swift_release();
    uint64_t v7 = (char *)v8;
  }

  else
  {
    swift_retain();
    uint64_t v7 = (char *)&_swiftEmptyArrayStorage;
  }

  if ((a1 & 1) != 0)
  {
    swift_release();
    swift_bridgeObjectRelease(a4);
    sub_8760((char *)(a4 + 32), v10, v7 + 32);
    *(void *)(a4 + 16) = 0LL;
    swift_release();
  }

  else
  {
    swift_bridgeObjectRelease(a4);
    swift_release();
    swift_retain();
    swift_release();
    sub_872C((const void *)(a4 + 32), v10, v7 + 32);
    swift_unknownObjectRelease(a4);
  }

  return (uint64_t)v7;
}

uint64_t sub_8724(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void *sub_872C(const void *a1, size_t a2, void *__dst)
{
  return memcpy(__dst, a1, a2);
}

char *sub_8760(char *result, size_t a2, char *a3)
{
  if (a3 < result || a3 >= &result[a2] || a3 != result) {
    return (char *)memmove(a3, result, a2);
  }
  return result;
}

_BYTE **sub_8810(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  size_t v4 = *result;
  *size_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_8824()
{
  return swift_deallocObject(v0, 17LL);
}

_BYTE **sub_884C(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  return sub_8810(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_8854()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_887C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_88B8()
{
  return sub_78CC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_88C4()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_8900(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_78EC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_890C(uint64_t a1)
{
  uint64_t v6 = type metadata accessor for INSiriSocialConversation(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(a1, 1LL))
  {
    swift_bridgeObjectRelease(*(void *)(a1 + 8));
    swift_bridgeObjectRelease(*(void *)(a1 + 24));
    uint64_t v2 = a1 + *(int *)(v6 + 24);
    uint64_t v3 = type metadata accessor for Date(0LL);
    uint64_t v4 = *(void *)(v3 - 8);
  }

  return a1;
}

char *sub_89E0(char *a1, char *a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *((_OWORD *)a2 + 1) = *((_OWORD *)a1 + 1);
  uint64_t v5 = *(int *)(type metadata accessor for INSiriSocialConversation(0LL) + 24);
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v8 + 48))(&a1[v5], 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D8820);
    memcpy(&a2[v5], &a1[v5], *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v8 + 32))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(&a2[v5], 0LL, 1LL, v7);
  }

  return a2;
}

uint64_t sub_8AF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(type metadata accessor for INSiriSocialConversation(0LL) + 24);
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  return a1;
}

uint64_t type metadata accessor for CannedDialogFlow(uint64_t a1)
{
  uint64_t v2 = qword_D6BC0;
  if (!qword_D6BC0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CannedDialogFlow);
  }
  return v2;
}

unint64_t sub_8C04()
{
  uint64_t v3 = qword_D6B68;
  if (!qword_D6B68)
  {
    uint64_t v0 = type metadata accessor for CannedDialogFlow(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6A84, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6B68);
    return WitnessTable;
  }

  return v3;
}

void *sub_8C74(void *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(*(void *)(a2 - 8) + 80LL);
  if ((v2 & 0x20000) != 0) {
    return (void *)(*result + ((v2 + 16LL) & ~(unint64_t)v2));
  }
  return result;
}

uint64_t sub_8CC8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t))
{
  return sub_753C(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_8CF4()
{
  uint64_t v3 = qword_D6B80[0];
  if (!qword_D6B80[0])
  {
    uint64_t v0 = sub_8D64(&qword_D6B78);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, qword_D6B80);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_8D64(uint64_t *a1)
{
  uint64_t v4 = *a1;
  if (*a1 < 0)
  {
    uint64_t TypeByMangledNameInContextInMetadataState2 = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)*a1,  -(*a1 >> 32),  0LL);
    *a1 = TypeByMangledNameInContextInMetadataState2;
    return TypeByMangledNameInContextInMetadataState2;
  }

  return v4;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_8DD8( uint64_t a1)
{
}

uint64_t sub_8E00()
{
  return type metadata accessor for CannedDialogFlow(0LL);
}

uint64_t sub_8E18(uint64_t a1)
{
  uint64_t v1 = sub_8EEC(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[0] = *(void *)(v1 - 8) + 64LL;
    v6[1] = (char *)&value witness table for () + 64;
    v6[2] = &unk_B62F8;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 3LL, v6, a1 + 152);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_8EEC(uint64_t a1)
{
  uint64_t v8 = qword_D6BD0;
  if (!qword_D6BD0)
  {
    uint64_t v5 = type metadata accessor for Parse(255LL);
    uint64_t v1 = type metadata accessor for INSiriSocialConversation(255LL);
    unint64_t v6 = type metadata accessor for Transformer(a1, v5, v1);
    uint64_t v8 = v6;
    if (!v2)
    {
      unint64_t v3 = v6;
      atomic_store(v6, (unint64_t *)&qword_D6BD0);
      return v3;
    }
  }

  return v8;
}

uint64_t type metadata accessor for Base64EncodingOptions(uint64_t a1)
{
  uint64_t v5 = qword_D6D48;
  if (!qword_D6D48)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_C9D58);
    uint64_t v5 = ForeignTypeMetadata;
    if (!v1)
    {
      unint64_t v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_D6D48);
      return v2;
    }
  }

  return v5;
}

uint64_t type metadata accessor for CompareOptions(uint64_t a1)
{
  uint64_t v5 = qword_D6D50;
  if (!qword_D6D50)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_C9D80);
    uint64_t v5 = ForeignTypeMetadata;
    if (!v1)
    {
      unint64_t v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_D6D50);
      return v2;
    }
  }

  return v5;
}

uint64_t type metadata accessor for ReadingOptions(uint64_t a1)
{
  uint64_t v5 = qword_D6D58;
  if (!qword_D6D58)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_C9DA8);
    uint64_t v5 = ForeignTypeMetadata;
    if (!v1)
    {
      unint64_t v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_D6D58);
      return v2;
    }
  }

  return v5;
}

uint64_t type metadata accessor for WritingOptions(uint64_t a1)
{
  uint64_t v5 = qword_D6D60;
  if (!qword_D6D60)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(a1, &unk_C9DD0);
    uint64_t v5 = ForeignTypeMetadata;
    if (!v1)
    {
      unint64_t v2 = ForeignTypeMetadata;
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_D6D60);
      return v2;
    }
  }

  return v5;
}

unint64_t sub_9228()
{
  return sub_923C();
}

unint64_t sub_923C()
{
  uint64_t v3 = qword_D6D68;
  if (!qword_D6D68)
  {
    uint64_t v0 = type metadata accessor for WritingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6454, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D68);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_92AC()
{
  return sub_92C0();
}

unint64_t sub_92C0()
{
  uint64_t v3 = qword_D6D70;
  if (!qword_D6D70)
  {
    uint64_t v0 = type metadata accessor for WritingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B69B8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D70);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9330()
{
  return sub_9344();
}

unint64_t sub_9344()
{
  uint64_t v3 = qword_D6D78;
  if (!qword_D6D78)
  {
    uint64_t v0 = type metadata accessor for ReadingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B652C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D78);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_93B4()
{
  return sub_93C8();
}

unint64_t sub_93C8()
{
  uint64_t v3 = qword_D6D80;
  if (!qword_D6D80)
  {
    uint64_t v0 = type metadata accessor for ReadingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B68EC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D80);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9438()
{
  return sub_944C();
}

unint64_t sub_944C()
{
  uint64_t v3 = qword_D6D88;
  if (!qword_D6D88)
  {
    uint64_t v0 = type metadata accessor for CompareOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6604, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D88);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_94BC()
{
  return sub_94D0();
}

unint64_t sub_94D0()
{
  uint64_t v3 = qword_D6D90;
  if (!qword_D6D90)
  {
    uint64_t v0 = type metadata accessor for CompareOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6820, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D90);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9540()
{
  return sub_9554();
}

unint64_t sub_9554()
{
  uint64_t v3 = qword_D6D98;
  if (!qword_D6D98)
  {
    uint64_t v0 = type metadata accessor for Base64EncodingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B66DC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6D98);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_95C4()
{
  return sub_95D8();
}

unint64_t sub_95D8()
{
  uint64_t v3 = qword_D6DA0;
  if (!qword_D6DA0)
  {
    uint64_t v0 = type metadata accessor for Base64EncodingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6754, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DA0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9648()
{
  return sub_965C();
}

unint64_t sub_965C()
{
  uint64_t v3 = qword_D6DA8;
  if (!qword_D6DA8)
  {
    uint64_t v0 = type metadata accessor for Base64EncodingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B66B0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DA8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_96CC()
{
  return sub_96E0();
}

unint64_t sub_96E0()
{
  uint64_t v3 = qword_D6DB0;
  if (!qword_D6DB0)
  {
    uint64_t v0 = type metadata accessor for Base64EncodingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B667C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DB0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9750()
{
  return sub_9764();
}

unint64_t sub_9764()
{
  uint64_t v3 = qword_D6DB8;
  if (!qword_D6DB8)
  {
    uint64_t v0 = type metadata accessor for CompareOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B65D8, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DB8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_97D4()
{
  return sub_97E8();
}

unint64_t sub_97E8()
{
  uint64_t v3 = qword_D6DC0;
  if (!qword_D6DC0)
  {
    uint64_t v0 = type metadata accessor for CompareOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B65A4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DC0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9858()
{
  return sub_986C();
}

unint64_t sub_986C()
{
  uint64_t v3 = qword_D6DC8;
  if (!qword_D6DC8)
  {
    uint64_t v0 = type metadata accessor for ReadingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6500, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DC8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_98DC()
{
  return sub_98F0();
}

unint64_t sub_98F0()
{
  uint64_t v3 = qword_D6DD0;
  if (!qword_D6DD0)
  {
    uint64_t v0 = type metadata accessor for ReadingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B64CC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DD0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9960()
{
  return sub_9974();
}

unint64_t sub_9974()
{
  uint64_t v3 = qword_D6DD8;
  if (!qword_D6DD8)
  {
    uint64_t v0 = type metadata accessor for WritingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6428, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DD8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_99E4()
{
  return sub_99F8();
}

unint64_t sub_99F8()
{
  uint64_t v3 = qword_D6DE0;
  if (!qword_D6DE0)
  {
    uint64_t v0 = type metadata accessor for WritingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B63F4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DE0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9A68()
{
  uint64_t v3 = qword_D6DE8;
  if (!qword_D6DE8)
  {
    uint64_t v0 = type metadata accessor for WritingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6490, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DE8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9AD8()
{
  uint64_t v2 = qword_D6DF0;
  if (!qword_D6DF0)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for UInt, &type metadata for UInt);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DF0);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_9B40()
{
  uint64_t v3 = qword_D6DF8;
  if (!qword_D6DF8)
  {
    uint64_t v0 = type metadata accessor for ReadingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6568, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6DF8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9BB0()
{
  uint64_t v3 = qword_D6E00;
  if (!qword_D6E00)
  {
    uint64_t v0 = type metadata accessor for CompareOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6640, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6E00);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_9C20()
{
  uint64_t v3 = qword_D6E08;
  if (!qword_D6E08)
  {
    uint64_t v0 = type metadata accessor for Base64EncodingOptions(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6718, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D6E08);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_9C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  (**(void (***)(uint64_t))(v2 - 8))(a2);
  return a2;
}

uint64_t sub_9CD4()
{
  return 1LL;
}

size_t sub_9CE0(const void *a1)
{
  return malloc_size(a1);
}

uint64_t sub_9D04(void *a1)
{
  return sub_9D4C(a1);
}

uint64_t sub_9D4C(void *a1)
{
  v5[5] = a1;
  swift_retain();
  uint64_t v6 = v1;
  sub_8115C();
  swift_release();
  sub_454C((uint64_t)a1, (uint64_t)v5);
  uint64_t v4 = sub_AD128(v5);
  swift_retain();
  uint64_t v6 = v4;
  sub_4598(a1);
  swift_release();
  return v4;
}

BOOL sub_9DE4(uint64_t a1)
{
  void (*v55)(void *__return_ptr, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE **v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint32_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  os_log_s *v106;
  int v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  void v113[2];
  void v114[2];
  uint64_t v115;
  uint32_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v84 = a1;
  uint64_t v118 = 0LL;
  v117 = 0LL;
  v68 = 0LL;
  uint64_t v77 = 0LL;
  v69 = type metadata accessor for Parse(0LL);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = (*(void *)(v70 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v72 = (char *)&v45 - v71;
  uint64_t v73 = sub_5150(&qword_D7180);
  unint64_t v74 = *(void *)(v73 - 8);
  v75 = (*(void *)(v74 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v76 = (char *)&v45 - v75;
  unint64_t v89 = type metadata accessor for Input(v3);
  uint64_t v86 = *(void *)(v89 - 8);
  v85 = *(void *)(v86 + 64);
  unint64_t v78 = (v85 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v88 = (char *)&v45 - v78;
  uint64_t v83 = type metadata accessor for Logger(v5);
  uint64_t v82 = *(void *)(v83 - 8);
  unint64_t v80 = (*(void *)(v82 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v7 = (char *)&v45 - v80;
  v81 = (char *)&v45 - v80;
  uint64_t v118 = v8;
  v117 = v9;
  uint64_t v10 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v7, v10, v83);
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v88, v84, v89);
  uint64_t v11 = *(unsigned __int8 *)(v86 + 80);
  unint64_t v87 = (v11 + 16) & ~v11;
  v97 = 7LL;
  v90 = swift_allocObject(&unk_C9F60, v87 + v85, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v90 + v87, v88, v89);
  swift_retain();
  uint64_t v96 = 32LL;
  uint64_t v12 = swift_allocObject(&unk_C9F88, 32LL, v97);
  uint64_t v13 = v90;
  uint64_t v98 = v12;
  *(void *)(v12 + 16) = sub_526C;
  *(void *)(v12 + 24) = v13;
  uint64_t v14 = swift_release();
  uint64_t v106 = (os_log_s *)Logger.logObject.getter(v14);
  uint64_t v107 = static os_log_type_t.debug.getter();
  uint64_t v93 = &v115;
  v115 = 12LL;
  uint64_t v91 = sub_7788();
  uint64_t v92 = sub_77F0();
  unint64_t v15 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v116, v93, &type metadata for UInt32, &type metadata for Int, v91, v92, v15);
  uint64_t v94 = v116;
  uint64_t v95 = 17LL;
  uint64_t v16 = swift_allocObject(&unk_C9FB0, 17LL, v97);
  uint64_t v17 = v95;
  uint64_t v18 = v97;
  unint64_t v100 = v16;
  *(_BYTE *)(v16 + 16) = 32;
  uint64_t v19 = swift_allocObject(&unk_C9FD8, v17, v18);
  uint64_t v20 = v96;
  uint64_t v21 = v97;
  unint64_t v101 = v19;
  *(_BYTE *)(v19 + 16) = 8;
  uint64_t v22 = swift_allocObject(&unk_CA000, v20, v21);
  uint64_t v23 = v96;
  uint64_t v24 = v97;
  uint64_t v25 = v22;
  uint64_t v26 = v98;
  uint64_t v99 = v25;
  *(void *)(v25 + 16) = sub_76D0;
  *(void *)(v25 + 24) = v26;
  uint64_t v27 = swift_allocObject(&unk_CA028, v23, v24);
  uint64_t v28 = v99;
  uint32_t v103 = v27;
  *(void *)(v27 + 16) = sub_88B8;
  *(void *)(v27 + 24) = v28;
  uint64_t v105 = sub_5150((uint64_t *)&unk_D6B50);
  v102 = _allocateUninitializedArray<A>(_:)(3LL, v105);
  uint64_t v104 = v29;
  swift_retain();
  uint64_t v30 = v100;
  uint64_t v31 = v104;
  *uint64_t v104 = sub_884C;
  v31[1] = v30;
  swift_retain();
  uint64_t v32 = v101;
  uint64_t v33 = v104;
  v104[2] = sub_884C;
  v33[3] = v32;
  swift_retain();
  uint64_t v34 = v102;
  uint64_t v35 = v103;
  unint64_t v36 = v104;
  v104[4] = sub_8900;
  v36[5] = v35;
  sub_6648();
  swift_bridgeObjectRelease(v34);
  if (os_log_type_enabled(v106, (os_log_type_t)v107))
  {
    uint64_t v37 = v68;
    uint64_t v61 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v60 = sub_5150(&qword_D6B60);
    uint64_t v62 = sub_74D0(0LL, v60, v60);
    char v63 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v64 = &v112;
    uint64_t v112 = v61;
    uint64_t v65 = &v111;
    uint64_t v111 = v62;
    uint64_t v66 = &v110;
    uint64_t v110 = v63;
    sub_7528(2LL, &v112);
    sub_7528(1LL, v64);
    uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v109 = v100;
    sub_753C(&v108, (uint64_t)v64, (uint64_t)v65, (uint64_t)v66);
    v67 = v37;
    if (v37)
    {
      __break(1u);
    }

    else
    {
      uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v109 = v101;
      sub_753C(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
      uint64_t v58 = 0LL;
      uint64_t v39 = v58;
      uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v109 = v103;
      sub_753C(&v108, (uint64_t)&v112, (uint64_t)&v111, (uint64_t)&v110);
      uint64_t v57 = v39;
      _os_log_impl(&dword_0, v106, (os_log_type_t)v107, "CannedDialogVoiceTriggerFlow on input %s", v61, v94);
      sub_7580(v62, 0LL);
      sub_7580(v63, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v59 = v57;
    }
  }

  else
  {
    uint64_t v38 = v68;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v59 = v38;
  }

  uint64_t v40 = v76;
  uint64_t v41 = v59;

  (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))( v40,  v79 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin28CannedDialogVoiceTriggerFlow_cannedInputTransformer,  v73);
  uint64_t v55 = (void (*)(void *__return_ptr, char *))Transformer.transform.getter(v73);
  uint64_t v54 = v42;
  uint64_t v43 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v76, v73);
  Input.parse.getter(v43);
  v55(v114, v72);
  char v56 = v41;
  if (v41)
  {
    uint64_t v48 = v56;
    uint64_t v49 = 0LL;
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v69);
    swift_errorRelease(v48);
    uint64_t v52 = v49;
    uint64_t v53 = v49;
  }

  else
  {
    uint64_t v50 = v114[0];
    uint64_t v51 = v114[1];
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v69);
    uint64_t v52 = v50;
    uint64_t v53 = v51;
  }

  v113[0] = v52;
  v113[1] = v53;
  BOOL v47 = v53 != 0;
  BOOL v46 = v47;
  sub_8DD8((uint64_t)v113);
  return v46;
}

uint64_t sub_A7C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for Input(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_A830(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CannedDialogVoiceTriggerFlow(0LL);
  unint64_t v2 = sub_B810();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v5, v2);
}

uint64_t sub_A8A4(uint64_t a1)
{
  *(void *)(v2 + 352) = v1;
  *(void *)(v2 + 344) = a1;
  *(void *)(v2 + 280) = v2;
  *(void *)(v2 + 288) = 0LL;
  *(_BYTE *)(v2 + 480) = 0;
  *(void *)(v2 + 296) = 0LL;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  *(void *)(v2 + 360) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v2 + 368) = v4;
  *(void *)(v2 + 376) = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for ExecuteResponse(0LL);
  *(void *)(v2 + 384) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v2 + 392) = v6;
  *(void *)(v2 + 400) = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for InputOrigin(0LL);
  *(void *)(v2 + 408) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v2 + 416) = v8;
  *(void *)(v2 + 424) = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v2 + 288) = v1;
  return swift_task_switch(sub_A9A8, 0LL);
}

uint64_t sub_A9A8()
{
  uint64_t v39 = *(void *)(v0 + 424);
  uint64_t v38 = *(void *)(v0 + 416);
  uint64_t v40 = *(void *)(v0 + 408);
  *(void *)(v0 + 280) = v0;
  uint64_t v1 = sub_503C4();
  uint64_t v35 = *v1;
  uint64_t v30 = v1[1];
  char v31 = *((_BYTE *)v1 + 16);
  uint64_t v2 = sub_50418();
  uint64_t v32 = *v2;
  uint64_t v33 = v2[1];
  char v34 = *((_BYTE *)v2 + 16);
  uint64_t v3 = sub_5046C();
  sub_BA74(v35, v30, v31, v32, v33, v34, *v3, v3[1], v0 + 16, *((_BYTE *)v3 + 16));
  swift_retain();
  sub_AD220();
  swift_release();
  uint64_t v37 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 120);
  sub_8C74((void *)(v0 + 88), v37);
  uint64_t v4 = dispatch thunk of DeviceState.inputOrigin.getter(v37, v36);
  uint64_t v41 = InputOrigin.rawValue.getter(v4);
  uint64_t v42 = v5;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
  *(void *)(v0 + 248) = v41;
  *(void *)(v0 + 256) = v42;
  *(Swift::String *)(v0 + 264) = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "voiceTrigger",  0xCuLL,  1);
  unint64_t v6 = sub_B880();
  char v43 = StringProtocol.contains<A>(_:)(v0 + 264, &type metadata for String, &type metadata for String, v6);
  sub_8DD8(v0 + 264);
  sub_8DD8(v0 + 248);
  sub_4598((void *)(v0 + 88));
  swift_retain();
  if ((v43 & 1) == 0)
  {
    swift_release();
    swift_retain();
LABEL_4:
    swift_release();
    *(_BYTE *)(v29 + 480) = 1;
LABEL_6:
    uint64_t v17 = *(void *)(v29 + 352);
    swift_retain();
    *(void *)(v29 + 432) = *(void *)(v17 + 56);
    swift_retain();
    swift_release();
    uint64_t v7 = (uint64_t *)sub_3B254();
    uint64_t v18 = *v7;
    uint64_t v19 = v7[1];
    *(void *)(v29 + 440) = v19;
    swift_bridgeObjectRetain(v19);
    uint64_t v20 = sub_629C();
    uint64_t v21 = v8;
    *(void *)(v29 + 448) = v8;
    uint64_t v22 = sub_62D4();
    *(void *)(v29 + 456) = v22;
    uint64_t v9 = (void *)swift_task_alloc(dword_D72FC);
    *(void *)(v29 + 464) = v9;
    *uint64_t v9 = *(void *)(v29 + 280);
    v9[1] = sub_AF18;
    return sub_C0CC(*(void *)(v29 + 400), v18, v19, v29 + 16, v20, v21, v22);
  }

  swift_retain();
  sub_AD220();
  swift_release();
  uint64_t v27 = *(void *)(v29 + 152);
  uint64_t v26 = *(void *)(v29 + 160);
  sub_8C74((void *)(v29 + 128), v27);
  char v28 = dispatch thunk of DeviceState.isMac.getter(v27, v26);
  sub_4598((void *)(v29 + 128));
  swift_release();
  swift_retain();
  if ((v28 & 1) != 0) {
    goto LABEL_4;
  }
  swift_retain();
  sub_AD220();
  swift_release();
  uint64_t v24 = *(void *)(v29 + 192);
  uint64_t v23 = *(void *)(v29 + 200);
  sub_8C74((void *)(v29 + 168), v24);
  unsigned int v25 = dispatch thunk of DeviceState.isAppleTV.getter(v24, v23);
  sub_4598((void *)(v29 + 168));
  swift_release();
  *(_BYTE *)(v29 + 480) = v25 & 1;
  if ((v25 & 1) != 0) {
    goto LABEL_6;
  }
  static SiriKitEventSender.current.getter(v25);
  uint64_t v12 = *(void *)(v29 + 232);
  uint64_t v13 = *(void *)(v29 + 240);
  sub_8C74((void *)(v29 + 208), v12);
  type metadata accessor for SiriKitEvent(0LL);
  uint64_t v14 = static SiriKitEvent.uufrReady()();
  dispatch thunk of SiriKitEventSending.send(_:)(v14, v12, v13);
  swift_release();
  uint64_t v11 = sub_4598((void *)(v29 + 208));
  static ExecuteResponse.complete()(v11);
  uint64_t v15 = *(void *)(v29 + 400);
  uint64_t v16 = *(void *)(v29 + 376);
  swift_task_dealloc(*(void *)(v29 + 424));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(*(void *)(v29 + 280) + 8LL))();
}

uint64_t sub_AF18()
{
  uint64_t v2 = *v1;
  uint64_t v7 = (void *)(*v1 + 16);
  uint64_t v3 = *(void *)(*v1 + 464);
  *(void *)(v2 + 280) = *v1;
  *(void *)(v2 + 472) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_B0BC, 0LL);
  }
  uint64_t v5 = v7[54];
  uint64_t v6 = v7[53];
  swift_bridgeObjectRelease(v7[55]);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_release();
  return swift_task_switch(sub_B000, 0LL);
}

uint64_t sub_B000()
{
  uint64_t v5 = v0[50];
  uint64_t v3 = v0[49];
  uint64_t v4 = v0[48];
  uint64_t v1 = v0[43];
  v0[35] = v0;
  (*(void (**)(uint64_t))(v3 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  uint64_t v6 = v0[50];
  uint64_t v7 = v0[47];
  swift_task_dealloc(v0[53]);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0[35] + 8LL))();
}

uint64_t sub_B0BC()
{
  uint64_t v25 = v0[59];
  uint64_t v1 = v0[57];
  uint64_t v23 = v0[56];
  uint64_t v24 = v0[55];
  uint64_t v2 = v0[47];
  uint64_t v26 = v0[46];
  uint64_t v27 = v0[45];
  v0[35] = v0;
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v24);
  swift_release();
  swift_errorRetain(v25);
  v0[37] = v25;
  uint64_t v3 = sub_AD514();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v2, v3, v27);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v31 = static os_log_type_t.error.getter();
  v0[38] = 2LL;
  unint64_t v28 = sub_7788();
  unint64_t v29 = sub_77F0();
  unint64_t v5 = sub_7858();
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v0 + 84),  v0 + 38,  &type metadata for UInt32,  &type metadata for Int,  v28,  v29,  v5);
  uint32_t v30 = *((_DWORD *)v0 + 21);
  uint64_t v6 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v33 = _allocateUninitializedArray<A>(_:)(0LL, v6);
  if (os_log_type_enabled(v32, v31))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v16 = sub_5150(&qword_D6B60);
    uint64_t v18 = sub_74D0(0LL, v16, v16);
    uint64_t v19 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    *(void *)(v22 + 312) = buf;
    *(void *)(v22 + 320) = v18;
    *(void *)(v22 + 328) = v19;
    sub_7528(0LL, (_BYTE **)(v22 + 312));
    sub_7528(0LL, (_BYTE **)(v22 + 312));
    *(void *)(v22 + 336) = v33;
    uint64_t v20 = (void *)swift_task_alloc(48LL);
    v20[2] = v22 + 312;
    v20[3] = v22 + 320;
    v20[4] = v22 + 328;
    uint64_t v21 = sub_5150(&qword_D6B78);
    unint64_t v7 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v20, v21, v7);
    swift_task_dealloc(v20);
    _os_log_impl(&dword_0, v32, v31, "Error thrown from voice trigger flow dialog", buf, v30);
    sub_7580(v18, 0LL);
    sub_7580(v19, 0LL);
    UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease(v33);
  uint64_t v13 = *(void *)(v22 + 472);
  uint64_t v11 = *(void *)(v22 + 376);
  uint64_t v10 = *(void *)(v22 + 368);
  uint64_t v12 = *(void *)(v22 + 360);

  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  static ExecuteResponse.complete()(v8);
  swift_errorRelease(v13);
  swift_errorRelease(v13);
  uint64_t v14 = *(void *)(v22 + 400);
  uint64_t v15 = *(void *)(v22 + 376);
  swift_task_dealloc(*(void *)(v22 + 424));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(*(void *)(v22 + 280) + 8LL))();
}

uint64_t sub_B4F8()
{
  uint64_t v3 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin28CannedDialogVoiceTriggerFlow_cannedInputTransformer;
  uint64_t v1 = sub_5150(&qword_D7180);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(v0 + v3);
}

uint64_t sub_B548()
{
  uint64_t v3 = sub_AD1DC();
  uint64_t v2 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin28CannedDialogVoiceTriggerFlow_cannedInputTransformer;
  uint64_t v0 = sub_5150(&qword_D7180);
  (*(void (**)(uint64_t))(*(void *)(v0 - 8) + 8LL))(v3 + v2);
  return v3;
}

uint64_t sub_B5AC()
{
  return swift_deallocClassInstance();
}

BOOL sub_B5EC(uint64_t a1)
{
  return sub_9DE4(a1);
}

uint64_t sub_B610(uint64_t a1, uint64_t a2)
{
  return sub_A830(a1, a2);
}

uint64_t sub_B630(uint64_t a1)
{
  *(void *)(v1 + 16) = v1;
  uint64_t v2 = (void *)swift_task_alloc(dword_D7194);
  *(void *)(v1 + 24) = v2;
  void *v2 = *(void *)(v1 + 16);
  v2[1] = sub_65B4;
  return sub_A8A4(a1);
}

uint64_t sub_B6A8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_B6E4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_B70C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_B734()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_B770()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t type metadata accessor for CannedDialogVoiceTriggerFlow(uint64_t a1)
{
  uint64_t v2 = qword_D71D8;
  if (!qword_D71D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CannedDialogVoiceTriggerFlow);
  }
  return v2;
}

unint64_t sub_B810()
{
  uint64_t v3 = qword_D7188;
  if (!qword_D7188)
  {
    uint64_t v0 = type metadata accessor for CannedDialogVoiceTriggerFlow(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6B40, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7188);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_B880()
{
  uint64_t v2 = qword_D7198[0];
  if (!qword_D7198[0])
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, qword_D7198);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_B8E8()
{
  return type metadata accessor for CannedDialogVoiceTriggerFlow(0LL);
}

uint64_t sub_B900(uint64_t a1)
{
  uint64_t v1 = sub_B9C8(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[0] = *(void *)(v1 - 8) + 64LL;
    v6[1] = (char *)&value witness table for () + 64;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 2LL, v6, a1 + 152);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_B9C8(uint64_t a1)
{
  uint64_t v7 = qword_D71E8;
  if (!qword_D71E8)
  {
    uint64_t v1 = type metadata accessor for Parse(255LL);
    unint64_t v5 = type metadata accessor for Transformer(a1, v1, &unk_D0290);
    uint64_t v7 = v5;
    if (!v2)
    {
      unint64_t v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_D71E8);
      return v3;
    }
  }

  return v7;
}

uint64_t sub_BA74@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = a10;
  return result;
}

uint64_t sub_BAA4@<X0>(void *a1@<X8>)
{
  unint64_t v3 = (const void *)(v1
                    + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
  sub_BAFC(v3, a1);
  return swift_endAccess(v5);
}

void *sub_BAFC(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D8820);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t sub_BBB8(uint64_t a1)
{
  uint64_t v9 = a1;
  unint64_t v5 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v5 - v5;
  sub_BAFC(v3, (char *)&v5 - v5);
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
  uint64_t v8 = &v10;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
  sub_BC68(v6, v7);
  swift_endAccess(v8);
  return sub_BDC8(v9);
}

void *sub_BC68(const void *a1, void *a2)
{
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  if (((unsigned int (*)(void *, uint64_t))v9)(a2, 1LL))
  {
    if (v9(a1, 1LL, v7))
    {
      uint64_t v3 = sub_5150(&qword_D8820);
      memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a2, a1, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a2, 0LL, 1LL, v7);
    }
  }

  else if (v9(a1, 1LL, v7))
  {
    (*(void (**)(void *, uint64_t))(v8 + 8))(a2, v7);
    uint64_t v2 = sub_5150(&qword_D8820);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a2, a1, v7);
  }

  return a2;
}

uint64_t sub_BDC8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t (*sub_BE38())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_BE80()
{
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  swift_endAccess(v4);
  return v3;
}

uint64_t sub_BEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)(v2 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
  swift_beginAccess();
  uint64_t v3 = v6[1];
  void *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease(v3);
  swift_endAccess(v8);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*sub_BF64())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_BFAC(void *a1)
{
  return sub_BFF4(a1);
}

uint64_t sub_BFF4(void *a1)
{
  uint64_t v9 = 0LL;
  char v10 = a1;
  uint64_t v5 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri;
  uint64_t v2 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1 + v5, 1LL);
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
  *uint64_t v3 = 0LL;
  v3[1] = 0LL;
  sub_454C((uint64_t)a1, (uint64_t)v8);
  sub_C094(v8, (void *)(v1 + 16));
  sub_4598(a1);
  return v7;
}

void *sub_C094(const void *a1, void *__dst)
{
  return __dst;
}

uint64_t sub_C0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 560) = v7;
  *(void *)(v8 + 552) = a7;
  *(void *)(v8 + 544) = a6;
  *(void *)(v8 + 536) = a5;
  *(void *)(v8 + 528) = a4;
  *(void *)(v8 + 520) = a3;
  *(void *)(v8 + 512) = a2;
  *(void *)(v8 + 504) = a1;
  *(void *)(v8 + 568) = *v7;
  *(void *)(v8 + 400) = v8;
  *(void *)(v8 + 288) = 0LL;
  *(void *)(v8 + 296) = 0LL;
  *(void *)(v8 + 408) = 0LL;
  *(void *)(v8 + 304) = 0LL;
  *(void *)(v8 + 312) = 0LL;
  *(void *)(v8 + 416) = 0LL;
  *(void *)(v8 + 424) = 0LL;
  *(void *)(v8 + 320) = 0LL;
  *(void *)(v8 + 328) = 0LL;
  *(_BYTE *)(v8 + 880) = 0;
  *(void *)(v8 + 368) = 0LL;
  *(void *)(v8 + 376) = 0LL;
  *(void *)(v8 + 432) = 0LL;
  *(void *)(v8 + 440) = 0LL;
  *(void *)(v8 + 456) = 0LL;
  uint64_t v9 = type metadata accessor for ExecuteResponse();
  *(void *)(v8 + 576) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 584) = v10;
  *(void *)(v8 + 592) = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  *(void *)(v8 + 600) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 608) = v12;
  uint64_t v22 = *(void *)(v12 + 64);
  *(void *)(v8 + 616) = swift_task_alloc((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 624) = swift_task_alloc((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_5150(&qword_D7300);
  *(void *)(v8 + 632) = v13;
  uint64_t v23 = *(void *)(*(void *)(v13 - 8) + 64LL);
  *(void *)(v8 + 640) = swift_task_alloc((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 648) = swift_task_alloc((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_5150(&qword_D7308);
  *(void *)(v8 + 656) = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ActivityType(v15);
  *(void *)(v8 + 664) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v8 + 672) = v17;
  *(void *)(v8 + 680) = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  *(void *)(v8 + 688) = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  *(void *)(v8 + 696) = v19;
  uint64_t v24 = *(void *)(v19 + 64);
  *(void *)(v8 + 704) = swift_task_alloc((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 712) = swift_task_alloc((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for DialogServiceButton(0LL);
  *(void *)(v8 + 720) = swift_task_alloc((*(void *)(*(void *)(v20 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = *(void *)(*(void *)(sub_5150(&qword_D7310) - 8) + 64LL);
  *(void *)(v8 + 728) = swift_task_alloc((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 736) = swift_task_alloc((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 288) = a2;
  *(void *)(v8 + 296) = a3;
  *(void *)(v8 + 408) = a4;
  *(void *)(v8 + 304) = a5;
  *(void *)(v8 + 312) = a6;
  *(void *)(v8 + 416) = a7;
  *(void *)(v8 + 424) = v7;
  return swift_task_switch(sub_C3C4, 0LL);
}

uint64_t sub_C3C4()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[64];
  v0[50] = v0;
  uint64_t v108 = sub_12AE8(v2, v1);
  uint64_t v109 = v3;
  v0[93] = v108;
  v0[94] = v3;
  v0[40] = v108;
  v0[41] = v3;
  v0[42] = v108;
  v0[43] = v3;
  uint64_t v4 = sub_3B2FC();
  uint64_t v110 = *(void *)v4;
  uint64_t v111 = *((void *)v4 + 1);
  swift_bridgeObjectRetain(v111);
  swift_bridgeObjectRetain(v111);
  sub_139E0(v0 + 42, v0 + 32);
  v0[34] = v110;
  v0[35] = v111;
  if (!v0[33])
  {
    if (!*(void *)(v107 + 280))
    {
      sub_8DD8(v107 + 256);
      swift_bridgeObjectRelease(v111);
LABEL_11:
      uint64_t v98 = *(const void **)(v107 + 736);
      uint64_t v99 = *(void **)(v107 + 728);
      uint64_t v92 = *(void *)(v107 + 560);
      uint64_t v91 = *(void *)(v107 + 552);
      type metadata accessor for CannedDialogHelper(0LL);
      sub_18C5C(0, v91, (uint64_t)v98);
      sub_454C(v92 + 16, v107 + 136);
      uint64_t v94 = *(void *)(v107 + 160);
      uint64_t v93 = *(void *)(v107 + 168);
      sub_8C74((void *)(v107 + 136), v94);
      (*(void (**)(uint64_t))(v93 + 16))(v94);
      uint64_t v100 = *(void *)(v107 + 200);
      uint64_t v101 = *(void *)(v107 + 208);
      sub_8C74((void *)(v107 + 176), v100);
      unint64_t v96 = sub_1AE50();
      uint64_t v97 = _allocateUninitializedArray<A>(_:)(1LL, v96);
      uint64_t v95 = v5;
      sub_1AEB4();
      *uint64_t v95 = sub_EB60();
      sub_6648();
      memset(v112, 0, sizeof(v112));
      sub_1AF18(v98, v99);
      *(void *)(v107 + 240) = type metadata accessor for AceOutput(0LL);
      *(void *)(v107 + 248) = &protocol witness table for AceOutput;
      sub_1AFD4((uint64_t *)(v107 + 216));
      AceOutput.init(commands:flowActivity:nlContextUpdate:)(v97, v112, v99);
      uint64_t v6 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
      *(void *)(v107 + 760) = v6;
      void *v6 = *(void *)(v107 + 400);
      v6[1] = sub_D3EC;
      return dispatch thunk of OutputPublisherAsync.publish(output:)(v107 + 216, v100, v101);
    }

LABEL_9:
    sub_13A1C(v107 + 256);
    swift_bridgeObjectRelease(v111);
    goto LABEL_12;
  }

  sub_139E0((void *)(v107 + 256), (void *)(v107 + 384));
  if (!*(void *)(v107 + 280))
  {
    sub_8DD8(v107 + 384);
    goto LABEL_9;
  }

  uint64_t v102 = *(void *)(v107 + 384);
  uint64_t v105 = *(void *)(v107 + 392);
  swift_bridgeObjectRetain(v105);
  uint64_t v103 = *(void *)(v107 + 272);
  uint64_t v104 = *(void *)(v107 + 280);
  swift_bridgeObjectRetain(v104);
  char v106 = static String.== infix(_:_:)(v102, v105, v103, v104);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v105);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v105);
  sub_8DD8(v107 + 256);
  swift_bridgeObjectRelease(v111);
  if ((v106 & 1) != 0) {
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v88 = *(char **)(v107 + 720);
  uint64_t v8 = (uint64_t *)sub_3B350();
  uint64_t v86 = *v8;
  unint64_t v87 = (void *)v8[1];
  swift_bridgeObjectRetain(v87);
  sub_18604(v108, v109, v86, v87, v88);
  swift_bridgeObjectRelease(v87);
  uint64_t v89 = *(void *)v88;
  uint64_t v90 = *((void *)v88 + 1);
  swift_bridgeObjectRetain(v90);
  *(void *)(v107 + 352) = v89;
  *(void *)(v107 + 360) = v90;
  BOOL v85 = *(void *)(v107 + 360) != 0LL;
  uint64_t v79 = *(void *)(v107 + 560);
  sub_8DD8(v107 + 352);
  *(_BYTE *)(v107 + 880) = v85;
  sub_454C(v79 + 16, v107 + 16);
  uint64_t v81 = *(void *)(v107 + 40);
  uint64_t v80 = *(void *)(v107 + 48);
  sub_8C74((void *)(v107 + 16), v81);
  (*(void (**)(uint64_t))(v80 + 40))(v81);
  uint64_t v83 = *(void *)(v107 + 80);
  uint64_t v82 = *(void *)(v107 + 88);
  sub_8C74((void *)(v107 + 56), v83);
  char v84 = (*(uint64_t (**)(uint64_t))(v82 + 16))(v83);
  sub_4598((void *)(v107 + 56));
  sub_4598((void *)(v107 + 16));
  if ((v84 & 1) != 0)
  {
    uint64_t v9 = *(void *)(v107 + 712);
    uint64_t v71 = *(void *)(v107 + 696);
    uint64_t v72 = *(void *)(v107 + 688);
    uint64_t v10 = sub_AD514();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16);
    *(void *)(v107 + 776) = v11;
    uint64_t v12 = v11(v9, v10, v72);
    oslog = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v76 = static os_log_type_t.debug.getter();
    *(void *)(v107 + 448) = 2LL;
    unint64_t v73 = sub_7788();
    *(void *)(v107 + 784) = v73;
    unint64_t v74 = sub_77F0();
    *(void *)(v107 + 792) = v74;
    unint64_t v13 = sub_7858();
    *(void *)(v107 + 800) = v13;
    UnsignedInteger<>.init<A>(_:)( (void *)(v107 + 884),  v107 + 448,  &type metadata for UInt32,  &type metadata for Int,  v73,  v74,  v13);
    uint32_t size = *(_DWORD *)(v107 + 884);
    uint64_t v14 = sub_5150((uint64_t *)&unk_D6B50);
    *(void *)(v107 + 808) = v14;
    uint64_t v78 = _allocateUninitializedArray<A>(_:)(0LL, v14);
    if (os_log_type_enabled(oslog, v76))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v65 = sub_5150(&qword_D6B60);
      uint64_t v67 = sub_74D0(0LL, v65, v65);
      uint64_t v68 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(void *)(v107 + 472) = buf;
      *(void *)(v107 + 480) = v67;
      *(void *)(v107 + 488) = v68;
      sub_7528(0LL, (_BYTE **)(v107 + 472));
      sub_7528(0LL, (_BYTE **)(v107 + 472));
      *(void *)(v107 + 496) = v78;
      v69 = (void *)swift_task_alloc(48LL);
      v69[2] = v107 + 472;
      v69[3] = v107 + 480;
      v69[4] = v107 + 488;
      uint64_t v70 = sub_5150(&qword_D6B78);
      unint64_t v15 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v69, v70, v15);
      swift_task_dealloc(v69);
      _os_log_impl(&dword_0, oslog, v76, "OutputPatternDialog RF enabled", buf, size);
      sub_7580(v67, 0LL);
      sub_7580(v68, 0LL);
      UnsafeMutablePointer.deallocate()();
    }

    swift_bridgeObjectRelease(v78);
    uint64_t v63 = *(void *)(v107 + 712);
    uint64_t v62 = *(void *)(v107 + 696);
    uint64_t v64 = *(void *)(v107 + 688);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    *(void *)(v107 + 816) = v16;
    v16(v63, v64);
    uint64_t v17 = (void *)swift_task_alloc(dword_D732C);
    *(void *)(v107 + 824) = v17;
    *uint64_t v17 = *(void *)(v107 + 400);
    v17[1] = sub_D61C;
    return sub_11700(*(void *)(v107 + 504), v108, (uint64_t)v109, *(void *)(v107 + 552));
  }

  else
  {
    uint64_t v57 = *(void **)(v107 + 648);
    uint64_t v61 = *(void **)(v107 + 640);
    uint64_t v60 = *(void *)(v107 + 632);
    uint64_t v58 = sub_13BF4( v57,  *(void *)(v107 + 744),  *(void **)(v107 + 752),  *(void *)(v107 + 528),  *(void *)(v107 + 536),  *(void *)(v107 + 544));
    uint64_t v59 = v18;
    *(void *)(v107 + 840) = v18;
    *(void *)(v107 + 368) = v58;
    *(void *)(v107 + 376) = v18;
    sub_18998(v57, v61);
    if (swift_getEnumCaseMultiPayload(v61, v60) == 1)
    {
      uint64_t v32 = *(void *)(v107 + 752);
      uint64_t v31 = *(void *)(v107 + 720);
      uint32_t v30 = *(void **)(v107 + 648);
      uint64_t v21 = *(void *)(v107 + 528);
      uint64_t v29 = **(void **)(v107 + 640);
      *(void *)(v107 + 432) = v29;
      uint64_t v27 = *(void *)(v21 + 48);
      uint64_t v25 = *(void *)(v21 + 56);
      unsigned int v26 = *(unsigned __int8 *)(v21 + 64);
      swift_errorRetain(v29);
      uint64_t v28 = swift_task_alloc(32LL);
      *(void *)(v28 + 16) = v29;
      sub_50A68(v27, v25, v26, 1, sub_18A48, v28, (uint64_t)&type metadata for () + 8, v24, v22);
      swift_task_dealloc(v28);
      uint64_t v23 = swift_errorRelease(v29);
      static ExecuteResponse.complete()(v23);
      swift_errorRelease(v29);
      sub_18A50(v30);
      swift_bridgeObjectRelease(v59);
      sub_18AC8(v31);
      swift_bridgeObjectRelease(v32);
      uint64_t v33 = *(void *)(v107 + 728);
      uint64_t v34 = *(void *)(v107 + 720);
      uint64_t v35 = *(void *)(v107 + 712);
      uint64_t v36 = *(void *)(v107 + 704);
      uint64_t v37 = *(void *)(v107 + 680);
      uint64_t v38 = *(void *)(v107 + 656);
      uint64_t v39 = *(void *)(v107 + 648);
      uint64_t v40 = *(void *)(v107 + 640);
      uint64_t v41 = *(void *)(v107 + 624);
      uint64_t v42 = *(void *)(v107 + 616);
      uint64_t v43 = *(void *)(v107 + 592);
      swift_task_dealloc(*(void *)(v107 + 736));
      swift_task_dealloc(v33);
      swift_task_dealloc(v34);
      swift_task_dealloc(v35);
      swift_task_dealloc(v36);
      swift_task_dealloc(v37);
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      return (*(uint64_t (**)(void))(*(void *)(v107 + 400) + 8LL))();
    }

    else
    {
      uint64_t v50 = *(void *)(v107 + 752);
      uint64_t v49 = *(void *)(v107 + 744);
      uint64_t v46 = *(void *)(v107 + 624);
      uint64_t v51 = *(void *)(v107 + 616);
      uint64_t v45 = *(void *)(v107 + 608);
      uint64_t v47 = *(void *)(v107 + 600);
      uint64_t v53 = *(void *)(v107 + 568);
      uint64_t v48 = *(void *)(v107 + 560);
      uint64_t v52 = *(void *)(v107 + 552);
      uint64_t v44 = *(void *)(v107 + 528);
      (*(void (**)(void))(v45 + 32))();
      *(void *)(v107 + 440) = v46;
      uint64_t v54 = *(void *)(v44 + 24);
      uint64_t v55 = *(void *)(v44 + 32);
      char v56 = *(_BYTE *)(v44 + 40);
      swift_retain();
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRetain(v59);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v51, v46, v47);
      swift_bridgeObjectRetain(v52);
      uint64_t v19 = (void *)swift_task_alloc(80LL);
      *(void *)(v107 + 848) = v19;
      v19[2] = v48;
      v19[3] = v49;
      v19[4] = v50;
      v19[5] = v58;
      v19[6] = v59;
      v19[7] = v51;
      v19[8] = v52;
      v19[9] = v53;
      uint64_t v20 = (void *)swift_task_alloc(dword_D7EFC);
      *(void *)(v107 + 856) = v20;
      *uint64_t v20 = *(void *)(v107 + 400);
      v20[1] = sub_E4C0;
      return sub_504C0( *(void *)(v107 + 592),  v54,  v55,  v56,  1,  (uint64_t)&unk_D7320,  (uint64_t)v19,  *(void *)(v107 + 576));
    }
  }

uint64_t sub_D3EC()
{
  uint64_t v2 = *v1;
  uint64_t v5 = (void *)(*v1 + 216);
  uint64_t v3 = *(void *)(*v1 + 760);
  *(void *)(v2 + 400) = *v1;
  *(void *)(v2 + 768) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_E7DC, 0LL);
  }
  sub_4598(v5);
  return swift_task_switch(sub_D4A0, 0LL);
}

uint64_t sub_D4A0()
{
  uint64_t v4 = v0[94];
  uint64_t v3 = v0[92];
  v0[50] = v0;
  sub_4598(v0 + 22);
  uint64_t v1 = sub_4598(v0 + 17);
  static ExecuteResponse.complete()(v1);
  sub_1B038(v3);
  swift_bridgeObjectRelease(v4);
  uint64_t v5 = v0[91];
  uint64_t v6 = v0[90];
  uint64_t v7 = v0[89];
  uint64_t v8 = v0[88];
  uint64_t v9 = v0[85];
  uint64_t v10 = v0[82];
  uint64_t v11 = v0[81];
  uint64_t v12 = v0[80];
  uint64_t v13 = v0[78];
  uint64_t v14 = v0[77];
  uint64_t v15 = v0[74];
  swift_task_dealloc(v0[92]);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0[50] + 8LL))();
}

uint64_t sub_D61C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 824);
  *(void *)(v2 + 400) = *v1;
  *(void *)(v2 + 832) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_D818, 0LL);
  }
  else {
    return swift_task_switch(sub_D6C0, 0LL);
  }
}

uint64_t sub_D6C0()
{
  uint64_t v3 = v0[94];
  uint64_t v1 = v0[90];
  v0[50] = v0;
  sub_18AC8(v1);
  swift_bridgeObjectRelease(v3);
  uint64_t v4 = v0[91];
  uint64_t v5 = v0[90];
  uint64_t v6 = v0[89];
  uint64_t v7 = v0[88];
  uint64_t v8 = v0[85];
  uint64_t v9 = v0[82];
  uint64_t v10 = v0[81];
  uint64_t v11 = v0[80];
  uint64_t v12 = v0[78];
  uint64_t v13 = v0[77];
  uint64_t v14 = v0[74];
  swift_task_dealloc(v0[92]);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0[50] + 8LL))();
}

uint64_t sub_D818()
{
  uint64_t v1 = v0[104];
  uint64_t v77 = v1;
  uint64_t v89 = v0[101];
  uint64_t v80 = v0[100];
  uint64_t v79 = v0[99];
  uint64_t v78 = v0[98];
  os_log_type_t v76 = (void (*)(uint64_t, uint64_t, uint64_t))v0[97];
  uint64_t v2 = v0[88];
  uint64_t v75 = v0[86];
  v0[50] = v0;
  swift_errorRetain(v1);
  v0[57] = v77;
  uint64_t v3 = sub_AD514();
  v76(v2, v3, v75);
  swift_errorRetain(v77);
  uint64_t v82 = swift_allocObject(&unk_CA0A0, 24LL, 7LL);
  *(void *)(v82 + 16) = v77;
  uint64_t v90 = (os_log_s *)Logger.logObject.getter(v82);
  os_log_type_t v91 = static os_log_type_t.error.getter();
  v0[58] = 12LL;
  UnsignedInteger<>.init<A>(_:)(v0 + 111, v0 + 58, &type metadata for UInt32, &type metadata for Int, v78, v79, v80);
  uint32_t v81 = *((_DWORD *)v0 + 222);
  uint64_t v84 = swift_allocObject(&unk_CA0C8, 17LL, 7LL);
  *(_BYTE *)(v84 + 16) = 32;
  uint64_t v85 = swift_allocObject(&unk_CA0F0, 17LL, 7LL);
  *(_BYTE *)(v85 + 16) = 8;
  uint64_t v83 = swift_allocObject(&unk_CA118, 32LL, 7LL);
  *(void *)(v83 + 16) = sub_1ACC8;
  *(void *)(v83 + 24) = v82;
  uint64_t v87 = swift_allocObject(&unk_CA140, 32LL, 7LL);
  *(void *)(v87 + 16) = sub_88B8;
  *(void *)(v87 + 24) = v83;
  uint64_t v86 = _allocateUninitializedArray<A>(_:)(3LL, v89);
  uint64_t v88 = v4;
  swift_retain();
  *uint64_t v88 = sub_884C;
  v88[1] = v84;
  swift_retain();
  v88[2] = sub_884C;
  v88[3] = v85;
  swift_retain();
  v88[4] = sub_8900;
  v88[5] = v87;
  sub_6648();
  swift_bridgeObjectRelease(v86);
  if (os_log_type_enabled(v90, v91))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v70 = sub_5150(&qword_D6B60);
    uint64_t v72 = sub_74D0(0LL, v70, v70);
    uint64_t v73 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v92 = buf;
    uint64_t v93 = v72;
    uint64_t v94 = v73;
    sub_7528(2LL, &v92);
    sub_7528(1LL, &v92);
    uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v96 = v84;
    sub_753C(&v95, (uint64_t)&v92, (uint64_t)&v93, (uint64_t)&v94);
    uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v96 = v85;
    sub_753C(&v95, (uint64_t)&v92, (uint64_t)&v93, (uint64_t)&v94);
    uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v96 = v87;
    sub_753C(&v95, (uint64_t)&v92, (uint64_t)&v93, (uint64_t)&v94);
    _os_log_impl(&dword_0, v90, v91, "Could not output pattern dialog %s", buf, v81);
    sub_7580(v72, 0LL);
    sub_7580(v73, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v63 = *(void *)(v74 + 832);
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 816);
  uint64_t v55 = *(void *)(v74 + 752);
  uint64_t v54 = *(void *)(v74 + 744);
  uint64_t v46 = *(void *)(v74 + 704);
  uint64_t v47 = *(void *)(v74 + 688);
  uint64_t v59 = *(void *)(v74 + 680);
  uint64_t v49 = *(void *)(v74 + 672);
  uint64_t v50 = *(void *)(v74 + 664);
  uint64_t v58 = *(void *)(v74 + 656);
  uint64_t v57 = *(void *)(v74 + 544);
  uint64_t v56 = *(void *)(v74 + 536);

  uint64_t v5 = v48(v46, v47);
  static SiriKitEventSender.current.getter(v5);
  uint64_t v60 = *(void *)(v74 + 120);
  uint64_t v61 = *(void *)(v74 + 128);
  sub_8C74((void *)(v74 + 96), v60);
  type metadata accessor for SiriKitEvent();
  (*(void (**)(uint64_t, void, uint64_t))(v49 + 104))(v59, enum case for ActivityType.failed(_:), v50);
  swift_bridgeObjectRetain(v57);
  unsigned int v51 = enum case for SiriKitReliabilityCodes.genericError(_:);
  uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v52 = *(void *)(v53 - 8);
  (*(void (**)(uint64_t, void))(v52 + 104))(v58, v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v58, 0LL, 1LL, v53);
  swift_bridgeObjectRetain(v55);
  swift_errorRetain(v63);
  uint64_t v6 = (void *)swift_allocObject(&unk_CA168, 40LL, 7LL);
  void v6[2] = v54;
  void v6[3] = v55;
  v6[4] = v63;
  uint64_t v62 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v59, v56, v57, v58, sub_1ADDC);
  dispatch thunk of SiriKitEventSending.send(_:)(v62, v60, v61);
  swift_release();
  sub_4598((void *)(v74 + 96));
  swift_errorRelease(v63);
  swift_errorRelease(v63);
  uint64_t v64 = *(void **)(v74 + 648);
  uint64_t v68 = *(void **)(v74 + 640);
  uint64_t v67 = *(void *)(v74 + 632);
  uint64_t v65 = sub_13BF4( v64,  *(void *)(v74 + 744),  *(void **)(v74 + 752),  *(void *)(v74 + 528),  *(void *)(v74 + 536),  *(void *)(v74 + 544));
  uint64_t v66 = v7;
  *(void *)(v74 + 840) = v7;
  *(void *)(v74 + 368) = v65;
  *(void *)(v74 + 376) = v7;
  sub_18998(v64, v68);
  if (swift_getEnumCaseMultiPayload(v68, v67) == 1)
  {
    uint64_t v21 = *(void *)(v74 + 752);
    uint64_t v20 = *(void *)(v74 + 720);
    uint64_t v19 = *(void **)(v74 + 648);
    uint64_t v11 = *(void *)(v74 + 528);
    uint64_t v18 = **(void **)(v74 + 640);
    *(void *)(v74 + 432) = v18;
    uint64_t v16 = *(void *)(v11 + 48);
    uint64_t v14 = *(void *)(v11 + 56);
    unsigned int v15 = *(unsigned __int8 *)(v11 + 64);
    swift_errorRetain(v18);
    uint64_t v17 = swift_task_alloc(32LL);
    *(void *)(v17 + 16) = v18;
    sub_50A68(v16, v14, v15, 1, sub_18A48, v17, (uint64_t)&type metadata for () + 8, v69, v12);
    swift_task_dealloc(v17);
    uint64_t v13 = swift_errorRelease(v18);
    static ExecuteResponse.complete()(v13);
    swift_errorRelease(v18);
    sub_18A50(v19);
    swift_bridgeObjectRelease(v66);
    sub_18AC8(v20);
    swift_bridgeObjectRelease(v21);
    uint64_t v22 = *(void *)(v74 + 728);
    uint64_t v23 = *(void *)(v74 + 720);
    uint64_t v24 = *(void *)(v74 + 712);
    uint64_t v25 = *(void *)(v74 + 704);
    uint64_t v26 = *(void *)(v74 + 680);
    uint64_t v27 = *(void *)(v74 + 656);
    uint64_t v28 = *(void *)(v74 + 648);
    uint64_t v29 = *(void *)(v74 + 640);
    uint64_t v30 = *(void *)(v74 + 624);
    uint64_t v31 = *(void *)(v74 + 616);
    uint64_t v32 = *(void *)(v74 + 592);
    swift_task_dealloc(*(void *)(v74 + 736));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(*(void *)(v74 + 400) + 8LL))();
  }

  else
  {
    uint64_t v39 = *(void *)(v74 + 752);
    uint64_t v38 = *(void *)(v74 + 744);
    uint64_t v35 = *(void *)(v74 + 624);
    uint64_t v40 = *(void *)(v74 + 616);
    uint64_t v34 = *(void *)(v74 + 608);
    uint64_t v36 = *(void *)(v74 + 600);
    uint64_t v42 = *(void *)(v74 + 568);
    uint64_t v37 = *(void *)(v74 + 560);
    uint64_t v41 = *(void *)(v74 + 552);
    uint64_t v33 = *(void *)(v74 + 528);
    (*(void (**)(void))(v34 + 32))();
    *(void *)(v74 + 440) = v35;
    uint64_t v43 = *(void *)(v33 + 24);
    uint64_t v44 = *(void *)(v33 + 32);
    char v45 = *(_BYTE *)(v33 + 40);
    swift_retain();
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v40, v35, v36);
    swift_bridgeObjectRetain(v41);
    uint64_t v8 = (void *)swift_task_alloc(80LL);
    *(void *)(v74 + 848) = v8;
    v8[2] = v37;
    v8[3] = v38;
    v8[4] = v39;
    v8[5] = v65;
    v8[6] = v66;
    v8[7] = v40;
    v8[8] = v41;
    v8[9] = v42;
    uint64_t v9 = (void *)swift_task_alloc(dword_D7EFC);
    *(void *)(v74 + 856) = v9;
    *uint64_t v9 = *(void *)(v74 + 400);
    v9[1] = sub_E4C0;
    return sub_504C0(*(void *)(v74 + 592), v43, v44, v45, 1, (uint64_t)&unk_D7320, (uint64_t)v8, *(void *)(v74 + 576));
  }

uint64_t sub_E4C0()
{
  uint64_t v2 = *v1;
  double v12 = (void *)(*v1 + 16);
  uint64_t v3 = *(void *)(*v1 + 856);
  *(void *)(v2 + 400) = *v1;
  *(void *)(v2 + 864) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_E950, 0LL);
  }
  uint64_t v7 = v12[103];
  uint64_t v6 = v12[92];
  uint64_t v9 = v12[75];
  uint64_t v8 = v12[74];
  uint64_t v10 = v12[73];
  uint64_t v11 = v12[67];
  swift_task_dealloc(v12[104]);
  swift_release();
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12[107] = v4;
  v4(v9, v10);
  swift_bridgeObjectRelease(v11);
  return swift_task_switch(sub_E5EC, 0LL);
}

uint64_t sub_E5EC()
{
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[109];
  uint64_t v10 = v0[105];
  uint64_t v12 = v0[94];
  uint64_t v11 = v0[90];
  uint64_t v9 = (void *)v0[81];
  uint64_t v6 = v0[78];
  uint64_t v7 = v0[75];
  uint64_t v5 = v0[74];
  uint64_t v3 = v0[73];
  uint64_t v4 = v0[72];
  uint64_t v1 = v0[63];
  v0[50] = v0;
  (*(void (**)(uint64_t))(v3 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  v8(v6, v7);
  sub_18A50(v9);
  swift_bridgeObjectRelease(v10);
  sub_18AC8(v11);
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = v0[91];
  uint64_t v14 = v0[90];
  uint64_t v15 = v0[89];
  uint64_t v16 = v0[88];
  uint64_t v17 = v0[85];
  uint64_t v18 = v0[82];
  uint64_t v19 = v0[81];
  uint64_t v20 = v0[80];
  uint64_t v21 = v0[78];
  uint64_t v22 = v0[77];
  uint64_t v23 = v0[74];
  swift_task_dealloc(v0[92]);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0[50] + 8LL))();
}

uint64_t sub_E7DC()
{
  uint64_t v3 = v0[94];
  uint64_t v2 = v0[92];
  v0[50] = v0;
  sub_4598(v0 + 27);
  sub_4598(v0 + 22);
  sub_4598(v0 + 17);
  sub_1B038(v2);
  swift_bridgeObjectRelease(v3);
  uint64_t v4 = v0[91];
  uint64_t v5 = v0[90];
  uint64_t v6 = v0[89];
  uint64_t v7 = v0[88];
  uint64_t v8 = v0[85];
  uint64_t v9 = v0[82];
  uint64_t v10 = v0[81];
  uint64_t v11 = v0[80];
  uint64_t v12 = v0[78];
  uint64_t v13 = v0[77];
  uint64_t v14 = v0[74];
  swift_task_dealloc(v0[92]);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0[50] + 8LL))();
}

uint64_t sub_E950()
{
  uint64_t v1 = v0[106];
  uint64_t v10 = v0[105];
  uint64_t v12 = v0[94];
  uint64_t v11 = v0[90];
  uint64_t v9 = (void *)v0[81];
  uint64_t v6 = v0[78];
  uint64_t v4 = v0[77];
  uint64_t v3 = v0[76];
  uint64_t v7 = v0[75];
  uint64_t v5 = v0[69];
  v0[50] = v0;
  swift_task_dealloc(v1);
  swift_release();
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v10);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v4, v7);
  swift_bridgeObjectRelease(v5);
  v8(v6, v7);
  sub_18A50(v9);
  swift_bridgeObjectRelease(v10);
  sub_18AC8(v11);
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = v0[91];
  uint64_t v14 = v0[90];
  uint64_t v15 = v0[89];
  uint64_t v16 = v0[88];
  uint64_t v17 = v0[85];
  uint64_t v18 = v0[82];
  uint64_t v19 = v0[81];
  uint64_t v20 = v0[80];
  uint64_t v21 = v0[78];
  uint64_t v22 = v0[77];
  uint64_t v23 = v0[74];
  swift_task_dealloc(v0[92]);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0[50] + 8LL))();
}

id sub_EB60()
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0));
  return sub_1AC6C();
}

uint64_t sub_EB8C(uint64_t a1)
{
  return Error.localizedDescription.getter(v2[1], v2[2]);
}

uint64_t sub_EBC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v14 = a4;
  uint64_t v8 = *a1;
  swift_retain(*a1);
  swift_bridgeObjectRetain(a3);
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.responseId.setter(a2, a3);
  swift_release(v8);
  uint64_t v11 = *a1;
  swift_retain(*a1);
  swift_getErrorValue(a4, v13, v12);
  uint64_t v4 = Error.localizedDescription.getter(v12[1], v12[2]);
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.statusReasonDescription.setter(v4);
  return swift_release(v11);
}

uint64_t sub_EC88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 528) = v24;
  *(void *)(v8 + 520) = a8;
  *(void *)(v8 + 512) = a7;
  *(void *)(v8 + 504) = a6;
  *(void *)(v8 + 496) = a5;
  *(void *)(v8 + 488) = a4;
  *(void *)(v8 + 480) = a3;
  *(void *)(v8 + 472) = a2;
  *(void *)(v8 + 464) = a1;
  *(void *)(v8 + 392) = v8;
  *(void *)(v8 + 400) = 0LL;
  *(void *)(v8 + 360) = 0LL;
  *(void *)(v8 + 368) = 0LL;
  *(void *)(v8 + 376) = 0LL;
  *(void *)(v8 + 384) = 0LL;
  *(void *)(v8 + 408) = 0LL;
  *(void *)(v8 + 416) = 0LL;
  *(void *)(v8 + 424) = 0LL;
  *(_BYTE *)(v8 + 648) = 0;
  *(void *)(v8 + 432) = 0LL;
  uint64_t v9 = type metadata accessor for AceOutput(0LL);
  *(void *)(v8 + 536) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 544) = v10;
  *(void *)(v8 + 552) = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  *(void *)(v8 + 560) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 568) = v12;
  uint64_t v15 = *(void *)(v12 + 64);
  *(void *)(v8 + 576) = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 584) = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = *(void *)(sub_5150(&qword_D7310) - 8);
  *(void *)(v8 + 592) = v13;
  uint64_t v16 = *(void *)(v13 + 64);
  *(void *)(v8 + 600) = v16;
  *(void *)(v8 + 608) = swift_task_alloc((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 616) = swift_task_alloc((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 400) = a2;
  *(void *)(v8 + 360) = a3;
  *(void *)(v8 + 368) = a4;
  *(void *)(v8 + 376) = a5;
  *(void *)(v8 + 384) = a6;
  *(void *)(v8 + 408) = a7;
  *(void *)(v8 + 416) = a8;
  return swift_task_switch(sub_EE70, 0LL);
}

uint64_t sub_EE70()
{
  id v1 = *(void **)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v3 = *(void **)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 480);
  *(void *)(v0 + 392) = v0;
  uint64_t v111 = sub_16DCC(v4, v3, v2, v1, 0LL, 0LL);
  *(void *)(v0 + 624) = v111;
  *(void *)(v0 + 424) = v111;
  Swift::Bool v112 = TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(0);
  *(_BYTE *)(v0 + 649) = v112;
  *(_BYTE *)(v0 + 648) = v112;
  unint64_t v5 = sub_1AE50();
  *(void *)(v0 + 432) = Array.init()(v5);
  uint64_t v6 = TemplatingResult.templateIdentifier.getter();
  uint64_t v113 = v7;
  char v114 = sub_167F0(v6, v7);
  swift_bridgeObjectRelease(v113);
  if ((v114 & 1) != 0)
  {
    sub_1B1B8();
    v110[57] = sub_EB60();
    uint64_t v8 = sub_5150(&qword_D75B8);
    Array.append(_:)(v110 + 57, v8);
  }

  uint64_t v78 = v110[77];
  uint64_t v79 = v110[73];
  uint64_t v80 = v110[71];
  uint64_t v81 = v110[70];
  uint64_t v83 = v110[66];
  uint64_t v84 = v110[65];
  type metadata accessor for CannedDialogHelper(0LL);
  sub_18C5C(v112, v84, v78);
  uint64_t v9 = sub_AD514();
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
  v82(v79, v9, v81);
  uint64_t v90 = swift_allocObject(&unk_CAB78, 24LL, 7LL);
  *(void *)(v90 + 16) = v83;
  swift_bridgeObjectRetain(v84);
  uint64_t v85 = swift_allocObject(&unk_CABA0, 24LL, 7LL);
  *(void *)(v85 + 16) = v84;
  swift_retain();
  uint64_t v94 = swift_allocObject(&unk_CABC8, 32LL, 7LL);
  *(void *)(v94 + 16) = sub_1CD70;
  *(void *)(v94 + 24) = v85;
  uint64_t v10 = swift_release();
  uint64_t v108 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v109 = static os_log_type_t.debug.getter();
  v110[55] = 32LL;
  unint64_t v86 = sub_7788();
  unint64_t v87 = sub_77F0();
  unint64_t v88 = sub_7858();
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v110 + 652),  v110 + 55,  &type metadata for UInt32,  &type metadata for Int,  v86,  v87,  v88);
  uint32_t size = *((_DWORD *)v110 + 163);
  uint64_t v96 = swift_allocObject(&unk_CABF0, 17LL, 7LL);
  *(_BYTE *)(v96 + 16) = 32;
  uint64_t v97 = swift_allocObject(&unk_CAC18, 17LL, 7LL);
  *(_BYTE *)(v97 + 16) = 8;
  uint64_t v91 = swift_allocObject(&unk_CAC40, 32LL, 7LL);
  *(void *)(v91 + 16) = sub_1CD2C;
  *(void *)(v91 + 24) = v90;
  uint64_t v92 = swift_allocObject(&unk_CAC68, 32LL, 7LL);
  *(void *)(v92 + 16) = sub_1CEFC;
  *(void *)(v92 + 24) = v91;
  uint64_t v98 = swift_allocObject(&unk_CAC90, 32LL, 7LL);
  *(void *)(v98 + 16) = sub_88B8;
  *(void *)(v98 + 24) = v92;
  uint64_t v99 = swift_allocObject(&unk_CACB8, 17LL, 7LL);
  *(_BYTE *)(v99 + 16) = 32;
  uint64_t v100 = swift_allocObject(&unk_CACE0, 17LL, 7LL);
  *(_BYTE *)(v100 + 16) = 8;
  uint64_t v93 = swift_allocObject(&unk_CAD08, 32LL, 7LL);
  *(void *)(v93 + 16) = sub_110C0;
  *(void *)(v93 + 24) = 0LL;
  uint64_t v101 = swift_allocObject(&unk_CAD30, 32LL, 7LL);
  *(void *)(v101 + 16) = sub_88B8;
  *(void *)(v101 + 24) = v93;
  uint64_t v102 = swift_allocObject(&unk_CAD58, 17LL, 7LL);
  *(_BYTE *)(v102 + 16) = 32;
  uint64_t v103 = swift_allocObject(&unk_CAD80, 17LL, 7LL);
  *(_BYTE *)(v103 + 16) = 8;
  uint64_t v95 = swift_allocObject(&unk_CADA8, 32LL, 7LL);
  *(void *)(v95 + 16) = sub_1CDB4;
  *(void *)(v95 + 24) = v94;
  uint64_t v105 = swift_allocObject(&unk_CADD0, 32LL, 7LL);
  *(void *)(v105 + 16) = sub_88B8;
  *(void *)(v105 + 24) = v95;
  uint64_t v107 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v104 = _allocateUninitializedArray<A>(_:)(9LL, v107);
  char v106 = v11;
  swift_retain();
  *char v106 = sub_884C;
  v106[1] = v96;
  swift_retain();
  v106[2] = sub_884C;
  v106[3] = v97;
  swift_retain();
  v106[4] = sub_8900;
  v106[5] = v98;
  swift_retain();
  v106[6] = sub_884C;
  v106[7] = v99;
  swift_retain();
  v106[8] = sub_884C;
  v106[9] = v100;
  swift_retain();
  v106[10] = sub_8900;
  v106[11] = v101;
  swift_retain();
  v106[12] = sub_884C;
  v106[13] = v102;
  swift_retain();
  v106[14] = sub_884C;
  v106[15] = v103;
  swift_retain();
  v106[16] = sub_8900;
  v106[17] = v105;
  sub_6648();
  swift_bridgeObjectRelease(v104);
  if (os_log_type_enabled(v108, v109))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(32LL, &type metadata for UInt8);
    uint64_t v74 = sub_5150(&qword_D6B60);
    uint64_t v76 = sub_74D0(0LL, v74, v74);
    uint64_t v77 = sub_74D0(3LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v120 = buf;
    uint64_t v121 = v76;
    uint64_t v122 = v77;
    sub_7528(2LL, &v120);
    sub_7528(3LL, &v120);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v124 = v96;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v124 = v97;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v124 = v98;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v124 = v99;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v124 = v100;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v124 = v101;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v124 = v102;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v124 = v103;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v124 = v105;
    sub_753C(&v123, (uint64_t)&v120, (uint64_t)&v121, (uint64_t)&v122);
    _os_log_impl(&dword_0, v108, v109, "%s.%s nextTurns: %s", buf, size);
    sub_7580(v76, 0LL);
    sub_7580(v77, 3LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v49 = (const void *)v110[77];
  uint64_t v53 = (void *)v110[76];
  uint64_t v51 = v110[75];
  uint64_t v50 = v110[74];
  uint64_t v45 = v110[73];
  uint64_t v12 = v110[72];
  uint64_t v44 = v110[71];
  uint64_t v47 = v110[70];
  uint64_t v48 = v110[66];

  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v46(v45, v47);
  uint64_t v13 = sub_AD514();
  v82(v12, v13, v47);
  uint64_t v55 = swift_allocObject(&unk_CADF8, 24LL, 7LL);
  *(void *)(v55 + 16) = v48;
  sub_1AF18(v49, v53);
  uint64_t v14 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v52 = (v14 + 16) & ~v14;
  uint64_t v59 = swift_allocObject(&unk_CAE20, v52 + v51, v14 | 7);
  uint64_t v15 = sub_1D1FC(v53, (void *)(v59 + v52));
  oslog = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v73 = static os_log_type_t.debug.getter();
  v110[56] = 32LL;
  UnsignedInteger<>.init<A>(_:)(v110 + 82, v110 + 56, &type metadata for UInt32, &type metadata for Int, v86, v87, v88);
  uint32_t v54 = *((_DWORD *)v110 + 164);
  uint64_t v61 = swift_allocObject(&unk_CAE48, 17LL, 7LL);
  *(_BYTE *)(v61 + 16) = 32;
  uint64_t v62 = swift_allocObject(&unk_CAE70, 17LL, 7LL);
  *(_BYTE *)(v62 + 16) = 8;
  uint64_t v56 = swift_allocObject(&unk_CAE98, 32LL, 7LL);
  *(void *)(v56 + 16) = sub_1CD2C;
  *(void *)(v56 + 24) = v55;
  uint64_t v57 = swift_allocObject(&unk_CAEC0, 32LL, 7LL);
  *(void *)(v57 + 16) = sub_1CEFC;
  *(void *)(v57 + 24) = v56;
  uint64_t v63 = swift_allocObject(&unk_CAEE8, 32LL, 7LL);
  *(void *)(v63 + 16) = sub_88B8;
  *(void *)(v63 + 24) = v57;
  uint64_t v64 = swift_allocObject(&unk_CAF10, 17LL, 7LL);
  *(_BYTE *)(v64 + 16) = 32;
  uint64_t v65 = swift_allocObject(&unk_CAF38, 17LL, 7LL);
  *(_BYTE *)(v65 + 16) = 8;
  uint64_t v58 = swift_allocObject(&unk_CAF60, 32LL, 7LL);
  *(void *)(v58 + 16) = sub_110C0;
  *(void *)(v58 + 24) = 0LL;
  uint64_t v66 = swift_allocObject(&unk_CAF88, 32LL, 7LL);
  *(void *)(v66 + 16) = sub_88B8;
  *(void *)(v66 + 24) = v58;
  uint64_t v67 = swift_allocObject(&unk_CAFB0, 17LL, 7LL);
  *(_BYTE *)(v67 + 16) = 32;
  uint64_t v68 = swift_allocObject(&unk_CAFD8, 17LL, 7LL);
  *(_BYTE *)(v68 + 16) = 8;
  uint64_t v60 = swift_allocObject(&unk_CB000, 32LL, 7LL);
  *(void *)(v60 + 16) = sub_1D2B8;
  *(void *)(v60 + 24) = v59;
  uint64_t v70 = swift_allocObject(&unk_CB028, 32LL, 7LL);
  *(void *)(v70 + 16) = sub_88B8;
  *(void *)(v70 + 24) = v60;
  uint64_t v69 = _allocateUninitializedArray<A>(_:)(9LL, v107);
  uint64_t v71 = v16;
  swift_retain();
  *uint64_t v71 = sub_884C;
  v71[1] = v61;
  swift_retain();
  v71[2] = sub_884C;
  v71[3] = v62;
  swift_retain();
  v71[4] = sub_8900;
  v71[5] = v63;
  swift_retain();
  v71[6] = sub_884C;
  v71[7] = v64;
  swift_retain();
  v71[8] = sub_884C;
  v71[9] = v65;
  swift_retain();
  v71[10] = sub_8900;
  v71[11] = v66;
  swift_retain();
  v71[12] = sub_884C;
  v71[13] = v67;
  swift_retain();
  v71[14] = sub_884C;
  v71[15] = v68;
  swift_retain();
  v71[16] = sub_8900;
  v71[17] = v70;
  sub_6648();
  swift_bridgeObjectRelease(v69);
  if (os_log_type_enabled(oslog, v73))
  {
    uint64_t v41 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(32LL, &type metadata for UInt8);
    uint64_t v40 = sub_5150(&qword_D6B60);
    uint64_t v42 = sub_74D0(0LL, v40, v40);
    uint64_t v43 = sub_74D0(3LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v115 = v41;
    uint64_t v116 = v42;
    uint64_t v117 = v43;
    sub_7528(2LL, &v115);
    sub_7528(3LL, &v115);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v61;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v62;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v119 = v63;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v64;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v65;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v119 = v66;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v67;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v68;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v119 = v70;
    sub_753C(&v118, (uint64_t)&v115, (uint64_t)&v116, (uint64_t)&v117);
    _os_log_impl(&dword_0, oslog, v73, "%s.%s NL context update: %s", v41, v54);
    sub_7580(v42, 0LL);
    sub_7580(v43, 3LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v30 = v110[77];
  uint64_t v20 = v110[72];
  uint64_t v21 = v110[70];
  uint64_t v36 = v110[69];
  uint64_t v35 = v110[68];
  uint64_t v37 = v110[67];
  uint64_t v28 = v110[64];
  uint64_t v32 = v110[59];

  v46(v20, v21);
  sub_454C(v32 + 16, (uint64_t)(v110 + 2));
  uint64_t v23 = v110[5];
  uint64_t v22 = v110[6];
  sub_8C74(v110 + 2, v23);
  (*(void (**)(uint64_t))(v22 + 8))(v23);
  sub_454C(v32 + 16, (uint64_t)(v110 + 12));
  uint64_t v25 = v110[15];
  uint64_t v24 = v110[16];
  sub_8C74(v110 + 12, v25);
  (*(void (**)(uint64_t))(v24 + 8))(v25);
  uint64_t v27 = v110[20];
  uint64_t v26 = v110[21];
  sub_8C74(v110 + 17, v27);
  char v29 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v27, v26);
  uint64_t v31 = v110[54];
  swift_bridgeObjectRetain(v31);
  v110[22] = 0LL;
  v110[23] = 0LL;
  v110[24] = 0LL;
  v110[25] = 0LL;
  v110[26] = 0LL;
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v28,  v110 + 7,  v29 & 1,  v111,  v112,  1LL,  v30,  v31,  v110 + 22);
  sub_1D580(v110 + 22);
  swift_bridgeObjectRelease(v31);
  sub_4598(v110 + 17);
  sub_4598(v110 + 12);
  sub_4598(v110 + 7);
  sub_4598(v110 + 2);
  sub_454C(v32 + 16, (uint64_t)(v110 + 27));
  uint64_t v34 = v110[30];
  uint64_t v33 = v110[31];
  sub_8C74(v110 + 27, v34);
  (*(void (**)(uint64_t))(v33 + 16))(v34);
  uint64_t v38 = v110[35];
  uint64_t v39 = v110[36];
  sub_8C74(v110 + 32, v38);
  v110[40] = v37;
  v110[41] = &protocol witness table for AceOutput;
  uint64_t v17 = sub_1AFD4(v110 + 37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v35 + 16))(v17, v36, v37);
  uint64_t v18 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  v110[79] = v18;
  *uint64_t v18 = v110[49];
  v18[1] = sub_10C24;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v110 + 37, v38, v39);
}

uint64_t sub_10C24()
{
  uint64_t v2 = *v1;
  unint64_t v5 = (void *)(*v1 + 296);
  uint64_t v3 = *(void *)(*v1 + 632);
  *(void *)(v2 + 392) = *v1;
  *(void *)(v2 + 640) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_10FB4, 0LL);
  }
  sub_4598(v5);
  return swift_task_switch(sub_10CD8, 0LL);
}

uint64_t sub_10CD8()
{
  uint64_t v21 = v0[61];
  uint64_t v20 = v0[60];
  v0[49] = v0;
  sub_4598(v0 + 32);
  sub_4598(v0 + 27);
  uint64_t v1 = sub_12868(v20, v21);
  if ((v1 & 1) == 0)
  {
    uint64_t v18 = (void *)(*(void *)(v19 + 472)
                   + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
    swift_beginAccess(v18);
    uint64_t v2 = v18[1];
    *uint64_t v18 = 0LL;
    v18[1] = 0LL;
    swift_bridgeObjectRelease(v2);
    uint64_t v1 = swift_endAccess(v19 + 336);
  }

  if ((*(_BYTE *)(v19 + 649) & 1) != 0)
  {
    uint64_t v17 = *(void *)(v19 + 624);
    uint64_t v16 = *(void *)(v19 + 616);
    uint64_t v14 = *(void *)(v19 + 552);
    uint64_t v13 = *(void *)(v19 + 544);
    uint64_t v15 = *(void *)(v19 + 536);
    static ExecuteResponse.ongoing(requireInput:)(1LL);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    sub_1B038(v16);
    sub_1B82C((void *)(v19 + 432));
    swift_bridgeObjectRelease(v17);
  }

  else
  {
    uint64_t v12 = *(void *)(v19 + 624);
    uint64_t v11 = *(void *)(v19 + 616);
    uint64_t v9 = *(void *)(v19 + 552);
    uint64_t v8 = *(void *)(v19 + 544);
    uint64_t v10 = *(void *)(v19 + 536);
    static ExecuteResponse.complete()(v1);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    sub_1B038(v11);
    sub_1B82C((void *)(v19 + 432));
    swift_bridgeObjectRelease(v12);
  }

  uint64_t v4 = *(void *)(v19 + 608);
  uint64_t v5 = *(void *)(v19 + 584);
  uint64_t v6 = *(void *)(v19 + 576);
  uint64_t v7 = *(void *)(v19 + 552);
  swift_task_dealloc(*(void *)(v19 + 616));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(*(void *)(v19 + 392) + 8LL))();
}

uint64_t sub_10FB4()
{
  uint64_t v4 = v0[78];
  uint64_t v5 = v0[77];
  uint64_t v6 = v0[76];
  uint64_t v7 = v0[73];
  uint64_t v8 = v0[72];
  uint64_t v9 = v0[69];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  v0[49] = v0;
  sub_4598(v0 + 37);
  sub_4598(v0 + 32);
  sub_4598(v0 + 27);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v9, v3);
  sub_1B038(v5);
  sub_1B82C(v0 + 54);
  swift_bridgeObjectRelease(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(*(void *)(v10 + 392) + 8LL))();
}

uint64_t sub_110C0()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "outputDialog(catRawId:signpostsName:taskType:nextTurnIntents:)",  0x3EuLL,  1)._countAndFlagsBits;
}

uint64_t sub_110EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = a1;
  *a2 = a1;
  return result;
}

uint64_t sub_1111C(uint64_t a1)
{
  uint64_t v4 = a1;
  uint64_t v6 = sub_5150(&qword_D7310);
  unint64_t v5 = (*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v7 = (char *)&v4 - v5;
  sub_1AF18(v2, (char *)&v4 - v5);
  return String.init<A>(describing:)(v7, v6);
}

uint64_t sub_11198(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v69 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t v43 = type metadata accessor for Logger(0LL);
  uint64_t v42 = *(void *)(v43 - 8);
  unint64_t v40 = (*(void *)(v42 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v2 = (char *)v30 - v40;
  uint64_t v41 = (char *)v30 - v40;
  uint64_t v69 = v3;
  uint64_t v4 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v2, v4, v43);
  swift_errorRetain(v44);
  uint64_t v51 = 7LL;
  uint64_t v5 = swift_allocObject(&unk_CB050, 24LL, 7LL);
  uint64_t v6 = v44;
  uint64_t v52 = v5;
  *(void *)(v5 + 16) = v44;
  uint64_t v60 = (os_log_s *)Logger.logObject.getter(v6);
  int v61 = static os_log_type_t.error.getter();
  uint64_t v47 = &v67;
  uint64_t v67 = 12LL;
  unint64_t v45 = sub_7788();
  unint64_t v46 = sub_77F0();
  unint64_t v7 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v68, v47, &type metadata for UInt32, &type metadata for Int, v45, v46, v7);
  uint32_t v48 = v68;
  uint64_t v49 = 17LL;
  uint64_t v8 = swift_allocObject(&unk_CB078, 17LL, v51);
  uint64_t v9 = v49;
  uint64_t v10 = v51;
  uint64_t v54 = v8;
  *(_BYTE *)(v8 + 16) = 32;
  uint64_t v11 = swift_allocObject(&unk_CB0A0, v9, v10);
  uint64_t v12 = v51;
  uint64_t v55 = v11;
  *(_BYTE *)(v11 + 16) = 8;
  uint64_t v50 = 32LL;
  uint64_t v13 = swift_allocObject(&unk_CB0C8, 32LL, v12);
  uint64_t v14 = v50;
  uint64_t v15 = v51;
  uint64_t v16 = v13;
  uint64_t v17 = v52;
  uint64_t v53 = v16;
  *(void *)(v16 + 16) = sub_1ACC8;
  *(void *)(v16 + 24) = v17;
  uint64_t v18 = swift_allocObject(&unk_CB0F0, v14, v15);
  uint64_t v19 = v53;
  uint64_t v57 = v18;
  *(void *)(v18 + 16) = sub_88B8;
  *(void *)(v18 + 24) = v19;
  uint64_t v59 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v56 = _allocateUninitializedArray<A>(_:)(3LL, v59);
  uint64_t v58 = v20;
  swift_retain();
  uint64_t v21 = v54;
  uint64_t v22 = v58;
  *uint64_t v58 = sub_884C;
  v22[1] = v21;
  swift_retain();
  uint64_t v23 = v55;
  uint64_t v24 = v58;
  v58[2] = sub_884C;
  v24[3] = v23;
  swift_retain();
  uint64_t v25 = v56;
  uint64_t v26 = v57;
  uint64_t v27 = v58;
  v58[4] = sub_8900;
  v27[5] = v26;
  sub_6648();
  swift_bridgeObjectRelease(v25);
  if (os_log_type_enabled(v60, (os_log_type_t)v61))
  {
    uint64_t v28 = v39;
    uint64_t v32 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v31 = sub_5150(&qword_D6B60);
    uint64_t v33 = sub_74D0(0LL, v31, v31);
    uint64_t v34 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v35 = &v66;
    uint64_t v66 = v32;
    uint64_t v36 = &v65;
    uint64_t v65 = v33;
    uint64_t v37 = &v64;
    uint64_t v64 = v34;
    sub_7528(2LL, &v66);
    sub_7528(1LL, v35);
    uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v63 = v54;
    sub_753C(&v62, (uint64_t)v35, (uint64_t)v36, (uint64_t)v37);
    uint64_t v38 = v28;
    if (v28)
    {
      __break(1u);
    }

    else
    {
      uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v63 = v55;
      sub_753C(&v62, (uint64_t)&v66, (uint64_t)&v65, (uint64_t)&v64);
      v30[1] = 0LL;
      uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v63 = v57;
      sub_753C(&v62, (uint64_t)&v66, (uint64_t)&v65, (uint64_t)&v64);
      _os_log_impl(&dword_0, v60, (os_log_type_t)v61, "Error: %s", v32, v48);
      sub_7580(v33, 0LL);
      sub_7580(v34, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v41, v43);
}

uint64_t sub_11700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[63] = v4;
  v5[62] = a4;
  v5[61] = a3;
  v5[60] = a2;
  v5[59] = a1;
  v5[52] = v5;
  v5[48] = 0LL;
  v5[49] = 0LL;
  v5[53] = 0LL;
  v5[54] = 0LL;
  v5[56] = 0LL;
  v5[57] = 0LL;
  v5[58] = 0LL;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v5[64] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[65] = v7;
  v5[66] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v5[48] = a2;
  v5[49] = a3;
  v5[53] = a4;
  v5[54] = v4;
  return swift_task_switch(sub_117F4, 0LL);
}

uint64_t sub_117F4()
{
  uint64_t v1 = v0[66];
  uint64_t v42 = v0[65];
  uint64_t v43 = v0[64];
  uint64_t v45 = v0[61];
  uint64_t v44 = v0[60];
  v0[52] = v0;
  uint64_t v2 = sub_AD514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v1, v2, v43);
  swift_bridgeObjectRetain(v45);
  uint64_t v49 = swift_allocObject(&unk_CA190, 32LL, 7LL);
  *(void *)(v49 + 16) = v44;
  *(void *)(v49 + 24) = v45;
  uint64_t v57 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v58 = static os_log_type_t.debug.getter();
  v0[55] = 12LL;
  unint64_t v46 = sub_7788();
  unint64_t v47 = sub_77F0();
  unint64_t v3 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 76, v0 + 55, &type metadata for UInt32, &type metadata for Int, v46, v47, v3);
  uint32_t v48 = *((_DWORD *)v0 + 152);
  uint64_t v51 = swift_allocObject(&unk_CA1B8, 17LL, 7LL);
  *(_BYTE *)(v51 + 16) = 32;
  uint64_t v52 = swift_allocObject(&unk_CA1E0, 17LL, 7LL);
  *(_BYTE *)(v52 + 16) = 8;
  uint64_t v50 = swift_allocObject(&unk_CA208, 32LL, 7LL);
  *(void *)(v50 + 16) = sub_1B0E4;
  *(void *)(v50 + 24) = v49;
  uint64_t v54 = swift_allocObject(&unk_CA230, 32LL, 7LL);
  *(void *)(v54 + 16) = sub_88B8;
  *(void *)(v54 + 24) = v50;
  uint64_t v56 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v53 = _allocateUninitializedArray<A>(_:)(3LL, v56);
  uint64_t v55 = v4;
  swift_retain();
  *uint64_t v55 = sub_884C;
  v55[1] = v51;
  swift_retain();
  v55[2] = sub_884C;
  v55[3] = v52;
  swift_retain();
  v55[4] = sub_8900;
  v55[5] = v54;
  sub_6648();
  swift_bridgeObjectRelease(v53);
  if (os_log_type_enabled(v57, v58))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v37 = sub_5150(&qword_D6B60);
    uint64_t v39 = sub_74D0(0LL, v37, v37);
    uint64_t v40 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v60 = buf;
    uint64_t v61 = v39;
    uint64_t v62 = v40;
    sub_7528(2LL, &v60);
    sub_7528(1LL, &v60);
    uint64_t v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v64 = v51;
    sub_753C(&v63, (uint64_t)&v60, (uint64_t)&v61, (uint64_t)&v62);
    uint64_t v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v64 = v52;
    sub_753C(&v63, (uint64_t)&v60, (uint64_t)&v61, (uint64_t)&v62);
    uint64_t v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v64 = v54;
    sub_753C(&v63, (uint64_t)&v60, (uint64_t)&v61, (uint64_t)&v62);
    _os_log_impl(&dword_0, v57, v58, "outputPatternDialog: %s", buf, v48);
    sub_7580(v39, 0LL);
    sub_7580(v40, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  unint64_t v31 = v41[33].n128_u64[0];
  unint64_t v30 = v41[32].n128_u64[1];
  unint64_t v32 = v41[32].n128_u64[0];
  unint64_t v36 = v41[30].n128_u64[1];
  unint64_t v35 = v41[30].n128_u64[0];

  (*(void (**)(unint64_t, unint64_t))(v30 + 8))(v31, v32);
  uint64_t v5 = (uint64_t *)sub_3B350();
  uint64_t v33 = *v5;
  uint64_t v34 = (void *)v5[1];
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v36);
  v41[25].n128_u64[0] = v35;
  v41[25].n128_u64[1] = v36;
  if (v41[25].n128_u64[1])
  {
    Swift::String v59 = (Swift::String)v41[25];
  }

  else
  {
    Swift::String v59 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
    sub_8DD8((uint64_t)&v41[25]);
  }

  sub_2A7A4(v33, v34, v59._countAndFlagsBits, v59._object, (uint64_t *)&v41[1]);
  uint64_t v27 = sub_15398(v41 + 1);
  v41[33].n128_u64[1] = v27;
  v41[28].n128_u64[0] = v27;
  uint64_t v6 = sub_2B68C();
  uint64_t v28 = v7;
  char v29 = sub_167F0(v6, v7);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
  {
    unint64_t v24 = sub_1B1B8();
    uint64_t v25 = _allocateUninitializedArray<A>(_:)(1LL, v24);
    *uint64_t v8 = sub_EB60();
    sub_6648();
    uint64_t v26 = v25;
  }

  else
  {
    unint64_t v9 = sub_1B1B8();
    uint64_t v26 = _allocateUninitializedArray<A>(_:)(0LL, v9);
  }

  v41[34].n128_u64[0] = v26;
  unint64_t v18 = v41[31].n128_u64[1];
  v41[28].n128_u64[1] = v26;
  sub_454C(v18 + 16, (uint64_t)&v41[5]);
  uint64_t v15 = v41[6].n128_i64[1];
  unint64_t v14 = v41[7].n128_u64[0];
  sub_8C74((__n128 *)v41[5].n128_u64, v15);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v14 + 32))(v15);
  v41[34].n128_u64[1] = v22;
  v41[29].n128_u64[0] = v22;
  sub_4598((__n128 *)v41[5].n128_u64);
  sub_454C(v18 + 16, (uint64_t)&v41[10]);
  uint64_t v17 = v41[11].n128_i64[1];
  unint64_t v16 = v41[12].n128_u64[0];
  sub_8C74((__n128 *)v41[10].n128_u64, v17);
  (*(void (**)(uint64_t))(v16 + 8))(v17);
  sub_4598((__n128 *)v41[10].n128_u64);
  sub_454C(v18 + 16, (uint64_t)&v41[15]);
  uint64_t v20 = v41[16].n128_i64[1];
  unint64_t v19 = v41[17].n128_u64[0];
  sub_8C74((__n128 *)v41[15].n128_u64, v20);
  v41[35].n128_u64[0] = (*(uint64_t (**)(uint64_t))(v19 + 24))(v20);
  swift_bridgeObjectRetain(v26);
  unint64_t v21 = sub_1B1B8();
  unint64_t v10 = sub_1AE50();
  uint64_t v23 = _arrayForceCast<A, B>(_:)(v26, v21, v10);
  v41[35].n128_u64[1] = v23;
  uint64_t v11 = (void *)swift_task_alloc(dword_D7974);
  v41[36].n128_u64[0] = (unint64_t)v11;
  *uint64_t v11 = v41[26].n128_u64[0];
  v11[1] = sub_12174;
  return sub_32188( (uint64_t)&v41[12].n128_i64[1],  (uint64_t)&v41[1],  v27,  v22,  (uint64_t)&v41[7].n128_i64[1],  v41[31].n128_i64[0],  v23,  v12);
}

uint64_t sub_12174()
{
  uint64_t v2 = *v1;
  uint64_t v6 = *v1 + 16;
  uint64_t v7 = (void *)(*v1 + 240);
  uint64_t v3 = *(void *)(*v1 + 576);
  *(void *)(v2 + 416) = *v1;
  *(void *)(v2 + 584) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_125B0, 0LL);
  }
  uint64_t v5 = *(void *)(v6 + 528);
  swift_bridgeObjectRelease(*(void *)(v6 + 552));
  swift_bridgeObjectRelease(v5);
  swift_release();
  sub_4598(v7);
  return swift_task_switch(sub_1225C, 0LL);
}

uint64_t sub_1225C()
{
  uint64_t v1 = v0[63];
  v0[52] = v0;
  sub_454C(v1 + 16, (uint64_t)(v0 + 35));
  uint64_t v5 = v0[38];
  uint64_t v4 = v0[39];
  sub_8C74(v0 + 35, v5);
  (*(void (**)(uint64_t))(v4 + 16))(v5);
  uint64_t v7 = v0[43];
  uint64_t v8 = v0[44];
  sub_8C74(v0 + 40, v7);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  *(void *)(v6 + 592) = v2;
  void *v2 = *(void *)(v6 + 416);
  v2[1] = sub_12350;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v6 + 200, v7, v8);
}

uint64_t sub_12350()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 592);
  *(void *)(v2 + 416) = *v1;
  *(void *)(v2 + 600) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_126B0, 0LL);
  }
  else {
    return swift_task_switch(sub_123F4, 0LL);
  }
}

uint64_t sub_123F4()
{
  uint64_t v11 = v0[61];
  uint64_t v10 = v0[60];
  v0[52] = v0;
  sub_4598(v0 + 40);
  sub_4598(v0 + 35);
  uint64_t v1 = sub_12868(v10, v11);
  if ((v1 & 1) == 0)
  {
    uint64_t v8 = (void *)(v9[63] + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
    swift_beginAccess(v8);
    uint64_t v2 = v8[1];
    *uint64_t v8 = 0LL;
    v8[1] = 0LL;
    swift_bridgeObjectRelease(v2);
    uint64_t v1 = swift_endAccess(v9 + 45);
  }

  id v4 = (id)v9[69];
  uint64_t v5 = v9[68];
  uint64_t v6 = v9[67];
  uint64_t v7 = v9[66];
  static ExecuteResponse.complete()(v1);
  sub_4598(v9 + 25);
  sub_4598(v9 + 15);

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  sub_1B21C(v9 + 2);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v9[52] + 8LL))();
}

uint64_t sub_125B0()
{
  uint64_t v1 = v0[71];
  id v3 = (id)v0[69];
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[67];
  v0[52] = v0;
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v4);
  swift_release();
  sub_4598(v0 + 30);
  sub_4598(v0 + 15);

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  sub_1B21C(v0 + 2);
  swift_task_dealloc(v0[66]);
  return (*(uint64_t (**)(void))(v0[52] + 8LL))();
}

uint64_t sub_126B0()
{
  id v2 = (id)v0[69];
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[67];
  v0[52] = v0;
  sub_4598(v0 + 40);
  sub_4598(v0 + 35);
  sub_4598(v0 + 25);
  sub_4598(v0 + 15);

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  sub_1B21C(v0 + 2);
  swift_task_dealloc(v0[66]);
  return (*(uint64_t (**)(void))(v0[52] + 8LL))();
}

uint64_t sub_127A0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a1;
  }
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift",  61LL,  2,  101LL,  0);
  __break(1u);
  return v3;
}

uint64_t sub_12868(uint64_t a1, uint64_t a2)
{
  v18[4] = 0LL;
  v18[5] = a1;
  v18[6] = a2;
  uint64_t v15 = _allocateUninitializedArray<A>(_:)(2LL, &type metadata for String);
  unint64_t v14 = v2;
  Swift::String *v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalRandomJoke", 0xDuLL, 1);
  v14[1] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalFlipACoin", 0xCuLL, 1);
  sub_6648();
  v18[3] = v15;
  v18[2] = v15;
  swift_bridgeObjectRetain(a2);
  if (a2)
  {
    uint64_t v10 = a1;
    uint64_t v11 = a2;
  }

  else
  {
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift",  61LL,  2,  117LL,  0);
    __break(1u);
  }

  v18[0] = v10;
  v18[1] = v11;
  uint64_t v8 = sub_5150(&qword_D7350);
  unint64_t v3 = sub_1B278();
  char v9 = Sequence<>.contains(_:)(v18, v8, v3, &protocol witness table for String);
  sub_8DD8((uint64_t)v18);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a2);
    uint64_t v6 = (void *)(v13 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
    swift_beginAccess(v13 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
    uint64_t v4 = v6[1];
    void *v6 = a1;
    v6[1] = a2;
    swift_bridgeObjectRelease(v4);
    swift_endAccess(v17);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v15);
    char v7 = 1;
  }

  else
  {
    swift_bridgeObjectRelease(v15);
    char v7 = 0;
  }

  return v7 & 1;
}

uint64_t sub_12AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v182 = a1;
  uint64_t v183 = a2;
  uint64_t v218 = 0LL;
  uint64_t v219 = 0LL;
  uint64_t v217 = 0LL;
  uint64_t v172 = 0LL;
  uint64_t v201 = 0LL;
  uint64_t v202 = 0LL;
  uint64_t v173 = type metadata accessor for Logger(0LL);
  v174 = *(void **)(v173 - 8);
  uint64_t v178 = v174[8];
  unint64_t v175 = (v178 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  v176 = (char *)&v78 - v175;
  unint64_t v177 = v175;
  double v5 = __chkstk_darwin(v4);
  v179 = (char *)&v78 - v177;
  unint64_t v180 = (v178 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  v181 = (char *)&v78 - v180;
  uint64_t v218 = v6;
  uint64_t v219 = v7;
  uint64_t v217 = v2;
  swift_bridgeObjectRetain(v7);
  uint64_t v215 = v182;
  uint64_t v216 = v183;
  v184 = v214;
  v214[0] = v182;
  v214[1] = v183;
  uint64_t v8 = sub_3B2FC();
  uint64_t v185 = *(void *)v8;
  uint64_t v186 = *((void *)v8 + 1);
  swift_bridgeObjectRetain(v186);
  swift_bridgeObjectRetain(v186);
  sub_139E0(v184, v211);
  uint64_t v212 = v185;
  uint64_t v213 = v186;
  if (v211[1])
  {
    sub_139E0(v211, &v187);
    if (v213)
    {
      uint64_t v164 = v187;
      uint64_t v167 = v188;
      swift_bridgeObjectRetain(v188);
      v168 = v211;
      uint64_t v165 = v212;
      uint64_t v166 = v213;
      swift_bridgeObjectRetain(v213);
      int v169 = static String.== infix(_:_:)(v164, v167, v165, v166);
      swift_bridgeObjectRelease(v166);
      swift_bridgeObjectRelease(v167);
      swift_bridgeObjectRelease(v166);
      swift_bridgeObjectRelease(v167);
      sub_8DD8((uint64_t)v168);
      int v170 = v169;
      goto LABEL_7;
    }

    sub_8DD8((uint64_t)&v187);
    goto LABEL_9;
  }

  if (v213)
  {
LABEL_9:
    sub_13A1C((uint64_t)v211);
    int v170 = 0;
    goto LABEL_7;
  }

  sub_8DD8((uint64_t)v211);
  int v170 = 1;
LABEL_7:
  int v163 = v170;
  swift_bridgeObjectRelease(v186);
  if ((v163 & 1) != 0)
  {
    char v9 = v181;
    uint64_t v10 = sub_AD514();
    v144 = (void (*)(char *, uint64_t, uint64_t))v174[2];
    v144(v9, v10, v173);
    swift_bridgeObjectRetain(v183);
    uint64_t v151 = 32LL;
    uint64_t v152 = 7LL;
    uint64_t v11 = swift_allocObject(&unk_CA258, 32LL, 7LL);
    uint64_t v12 = v183;
    uint64_t v153 = v11;
    *(void *)(v11 + 16) = v182;
    *(void *)(v11 + 24) = v12;
    v161 = (os_log_s *)Logger.logObject.getter(v11);
    int v162 = static os_log_type_t.debug.getter();
    v147 = &v209;
    uint64_t v209 = 12LL;
    unint64_t v145 = sub_7788();
    unint64_t v146 = sub_77F0();
    unint64_t v148 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(v210, v147, &type metadata for UInt32, &type metadata for Int, v145, v146, v148);
    uint32_t v149 = v210[0];
    uint64_t v150 = 17LL;
    uint64_t v13 = swift_allocObject(&unk_CA280, 17LL, v152);
    uint64_t v14 = v150;
    uint64_t v15 = v152;
    uint64_t v155 = v13;
    *(_BYTE *)(v13 + 16) = 32;
    uint64_t v16 = swift_allocObject(&unk_CA2A8, v14, v15);
    uint64_t v17 = v151;
    uint64_t v18 = v152;
    uint64_t v156 = v16;
    *(_BYTE *)(v16 + 16) = 8;
    uint64_t v19 = swift_allocObject(&unk_CA2D0, v17, v18);
    uint64_t v20 = v151;
    uint64_t v21 = v152;
    uint64_t v22 = v19;
    uint64_t v23 = v153;
    uint64_t v154 = v22;
    *(void *)(v22 + 16) = sub_1B324;
    *(void *)(v22 + 24) = v23;
    uint64_t v24 = swift_allocObject(&unk_CA2F8, v20, v21);
    uint64_t v25 = v154;
    uint64_t v158 = v24;
    *(void *)(v24 + 16) = sub_88B8;
    *(void *)(v24 + 24) = v25;
    uint64_t v160 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v157 = _allocateUninitializedArray<A>(_:)(3LL, v160);
    v159 = v26;
    swift_retain();
    uint64_t v27 = v155;
    uint64_t v28 = v159;
    void *v159 = sub_884C;
    v28[1] = v27;
    swift_retain();
    uint64_t v29 = v156;
    unint64_t v30 = v159;
    v159[2] = sub_884C;
    void v30[3] = v29;
    swift_retain();
    uint64_t v31 = v157;
    uint64_t v32 = v158;
    uint64_t v33 = v159;
    v159[4] = sub_8900;
    v33[5] = v32;
    sub_6648();
    swift_bridgeObjectRelease(v31);
    if (os_log_type_enabled(v161, (os_log_type_t)v162))
    {
      uint64_t v34 = v172;
      v137 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v136 = sub_5150(&qword_D6B60);
      uint64_t v138 = sub_74D0(0LL, v136, v136);
      uint64_t v139 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v140 = &v193;
      v193 = v137;
      v141 = &v192;
      uint64_t v192 = v138;
      v142 = &v191;
      uint64_t v191 = v139;
      sub_7528(2LL, &v193);
      sub_7528(1LL, v140);
      v189 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v190 = v155;
      sub_753C(&v189, (uint64_t)v140, (uint64_t)v141, (uint64_t)v142);
      uint64_t v143 = v34;
      if (v34)
      {
        __break(1u);
      }

      else
      {
        v189 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v190 = v156;
        sub_753C(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        uint64_t v134 = 0LL;
        uint64_t v36 = v134;
        v189 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v190 = v158;
        sub_753C(&v189, (uint64_t)&v193, (uint64_t)&v192, (uint64_t)&v191);
        uint64_t v133 = v36;
        _os_log_impl(&dword_0, v161, (os_log_type_t)v162, "cannedDialogId: %s", v137, v149);
        sub_7580(v138, 0LL);
        sub_7580(v139, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v135 = v133;
      }
    }

    else
    {
      uint64_t v35 = v172;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v135 = v35;
    }

    uint64_t v127 = v135;

    v128 = (void (*)(char *, uint64_t))v174[1];
    v128(v181, v173);
    v129 = (uint64_t *)(v171 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
    v131 = (char *)v208 + 4;
    swift_beginAccess(v171 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_followUpId);
    uint64_t v130 = *v129;
    uint64_t v132 = v129[1];
    swift_bridgeObjectRetain(v132);
    swift_endAccess(v131);
    if (v132)
    {
      uint64_t v125 = v130;
      uint64_t v126 = v132;
      uint64_t v37 = v179;
      uint64_t v111 = v132;
      uint64_t v110 = v130;
      uint64_t v201 = v130;
      uint64_t v202 = v132;
      swift_bridgeObjectRetain(v132);
      swift_bridgeObjectRetain(v111);
      uint64_t v38 = v216;
      uint64_t v215 = v110;
      uint64_t v216 = v111;
      swift_bridgeObjectRelease(v38);
      uint64_t v39 = sub_AD514();
      v144(v37, v39, v173);
      uint64_t v114 = 32LL;
      uint64_t v115 = 7LL;
      uint64_t v40 = swift_allocObject(&unk_CA320, 32LL, 7LL);
      uint64_t v41 = v111;
      uint64_t v116 = v40;
      *(void *)(v40 + 16) = v110;
      *(void *)(v40 + 24) = v41;
      uint64_t v123 = (os_log_s *)Logger.logObject.getter(v40);
      int v124 = static os_log_type_t.debug.getter();
      uint64_t v199 = 12LL;
      UnsignedInteger<>.init<A>(_:)(&v200, &v199, &type metadata for UInt32, &type metadata for Int, v145, v146, v148);
      uint32_t v112 = v200;
      uint64_t v113 = 17LL;
      uint64_t v42 = swift_allocObject(&unk_CA348, 17LL, v115);
      uint64_t v43 = v113;
      uint64_t v44 = v115;
      uint64_t v118 = v42;
      *(_BYTE *)(v42 + 16) = 32;
      uint64_t v45 = swift_allocObject(&unk_CA370, v43, v44);
      uint64_t v46 = v114;
      uint64_t v47 = v115;
      uint64_t v119 = v45;
      *(_BYTE *)(v45 + 16) = 8;
      uint64_t v48 = swift_allocObject(&unk_CA398, v46, v47);
      uint64_t v49 = v114;
      uint64_t v50 = v115;
      uint64_t v51 = v48;
      uint64_t v52 = v116;
      uint64_t v117 = v51;
      *(void *)(v51 + 16) = sub_1B434;
      *(void *)(v51 + 24) = v52;
      uint64_t v53 = swift_allocObject(&unk_CA3C0, v49, v50);
      uint64_t v54 = v160;
      uint64_t v55 = v53;
      uint64_t v56 = v117;
      uint64_t v121 = v55;
      *(void *)(v55 + 16) = sub_88B8;
      *(void *)(v55 + 24) = v56;
      uint64_t v120 = _allocateUninitializedArray<A>(_:)(3LL, v54);
      uint64_t v122 = v57;
      swift_retain();
      uint64_t v58 = v118;
      Swift::String v59 = v122;
      *uint64_t v122 = sub_884C;
      v59[1] = v58;
      swift_retain();
      uint64_t v60 = v119;
      uint64_t v61 = v122;
      v122[2] = sub_884C;
      v61[3] = v60;
      swift_retain();
      uint64_t v62 = v120;
      uint64_t v63 = v121;
      uint64_t v64 = v122;
      v122[4] = sub_8900;
      v64[5] = v63;
      sub_6648();
      swift_bridgeObjectRelease(v62);
      if (os_log_type_enabled(v123, (os_log_type_t)v124))
      {
        uint64_t v65 = v127;
        uint64_t v103 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v102 = sub_5150(&qword_D6B60);
        uint64_t v104 = sub_74D0(0LL, v102, v102);
        uint64_t v105 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        char v106 = &v198;
        v198 = v103;
        uint64_t v107 = &v197;
        uint64_t v197 = v104;
        uint64_t v108 = &v196;
        uint64_t v196 = v105;
        sub_7528(2LL, &v198);
        sub_7528(1LL, v106);
        v194 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v195 = v118;
        sub_753C(&v194, (uint64_t)v106, (uint64_t)v107, (uint64_t)v108);
        uint64_t v109 = v65;
        if (v65)
        {
          __break(1u);
        }

        else
        {
          v194 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v195 = v119;
          sub_753C(&v194, (uint64_t)&v198, (uint64_t)&v197, (uint64_t)&v196);
          uint64_t v101 = 0LL;
          v194 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v195 = v121;
          sub_753C(&v194, (uint64_t)&v198, (uint64_t)&v197, (uint64_t)&v196);
          _os_log_impl(&dword_0, v123, (os_log_type_t)v124, "cannedDialogIdAfterFollowUpLogic: %s", v103, v112);
          sub_7580(v104, 0LL);
          sub_7580(v105, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      v128(v179, v173);
      swift_bridgeObjectRelease(v111);
    }

    else
    {
      uint64_t v66 = v176;
      uint64_t v67 = sub_AD514();
      uint64_t v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v144)(v66, v67, v173);
      uint64_t v99 = (os_log_s *)Logger.logObject.getter(v68);
      int v98 = static os_log_type_t.debug.getter();
      uint64_t v207 = 2LL;
      UnsignedInteger<>.init<A>(_:)(v208, &v207, &type metadata for UInt32, &type metadata for Int, v145, v146, v148);
      uint32_t v97 = v208[0];
      uint64_t v100 = _allocateUninitializedArray<A>(_:)(0LL, v160);
      if (os_log_type_enabled(v99, (os_log_type_t)v98))
      {
        uint64_t v69 = v127;
        unint64_t v87 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
        uint64_t v85 = sub_5150(&qword_D6B60);
        uint64_t v86 = 0LL;
        uint64_t v88 = sub_74D0(0LL, v85, v85);
        uint64_t v89 = sub_74D0(v86, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v93 = (char *)&v206;
        v206 = v87;
        uint64_t v94 = &v205;
        uint64_t v205 = v88;
        uint64_t v91 = &v204;
        uint64_t v204 = v89;
        unsigned int v90 = 0;
        sub_7528(0LL, &v206);
        sub_7528(v90, (_BYTE **)v93);
        uint64_t v203 = v100;
        uint64_t v92 = &v78;
        __chkstk_darwin(v70);
        uint64_t v71 = v94;
        uint64_t v72 = &v78 - 6;
        uint64_t v95 = &v78 - 6;
        v72[2] = v93;
        v72[3] = (char *)v71;
        v72[4] = v73;
        uint64_t v96 = sub_5150(&qword_D6B78);
        unint64_t v74 = sub_8CF4();
        Sequence.forEach(_:)(sub_8CC8, v95, v96, v74);
        if (v69)
        {
          __break(1u);
        }

        else
        {
          _os_log_impl(&dword_0, v99, (os_log_type_t)v98, "dalAgain with no follow up so returning dalAgain", v87, v97);
          uint64_t v84 = 0LL;
          sub_7580(v88, 0LL);
          sub_7580(v89, v84);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v100);
        }
      }

      else
      {
        swift_bridgeObjectRelease(v100);
      }

      v128(v176, v173);
      uint64_t v75 = sub_3B2FC();
      uint64_t v82 = *(void *)v75;
      uint64_t v83 = *((void *)v75 + 1);
      swift_bridgeObjectRetain(v83);
      uint64_t v76 = v216;
      uint64_t v215 = v82;
      uint64_t v216 = v83;
      swift_bridgeObjectRelease(v76);
    }
  }

  uint64_t v79 = &v215;
  uint64_t v78 = (char *)v210 + 4;
  swift_beginAccess(&v215);
  uint64_t v81 = v215;
  uint64_t v80 = v216;
  swift_bridgeObjectRetain(v216);
  swift_endAccess(v78);
  sub_8DD8((uint64_t)v79);
  return v81;
}

void *sub_139E0(void *a1, void *a2)
{
  *a2 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain(v4);
  uint64_t result = a2;
  a2[1] = v4;
  return result;
}

uint64_t sub_13A1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_13A50(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a1;
  }
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift",  61LL,  2,  127LL,  0);
  __break(1u);
  return v3;
}

uint64_t sub_13B18(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a1;
  }
  char v3 = 2;
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift",  61LL,  v3,  131LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_13BF4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v96 = a1;
  uint64_t v109 = a2;
  uint64_t v117 = a3;
  uint64_t v106 = a4;
  uint64_t v107 = a5;
  uint64_t v108 = a6;
  uint32_t v97 = "Fatal error";
  int v98 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v99 = "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift";
  uint64_t v133 = 0LL;
  uint64_t v131 = 0LL;
  uint64_t v132 = 0LL;
  uint64_t v130 = 0LL;
  uint64_t v128 = 0LL;
  uint64_t v129 = 0LL;
  uint64_t v127 = 0LL;
  uint64_t v114 = &v125;
  uint64_t v125 = 0LL;
  uint64_t v126 = 0LL;
  memset(&v124[1], 0, 0x40uLL);
  uint64_t v100 = 0LL;
  uint64_t v101 = sub_5150(&qword_D7360);
  unint64_t v102 = (*(void *)(*(void *)(v101 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v103 = (void *)((char *)v58 - v102);
  unint64_t v104 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v105 = (void *)((char *)v58 - v104);
  uint64_t v133 = (char *)v58 - v104;
  uint64_t v110 = type metadata accessor for Logger(0LL);
  uint64_t v111 = *(void *)(v110 - 8);
  unint64_t v112 = (*(void *)(v111 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v113 = (char *)v58 - v112;
  uint64_t v131 = v11;
  uint64_t v132 = v12;
  uint64_t v130 = v13;
  uint64_t v128 = v14;
  uint64_t v129 = v15;
  uint64_t v127 = v6;
  uint64_t v16 = sub_3B350();
  sub_139E0(v16, v114);
  uint64_t v115 = v125;
  uint64_t v116 = v126;
  swift_bridgeObjectRetain(v126);
  swift_bridgeObjectRetain(v117);
  if (v117)
  {
    uint64_t v94 = v109;
    uint64_t v95 = v117;
  }

  else
  {
    LOBYTE(v57) = 2;
    _assertionFailure(_:_:file:line:flags:)(v97, 11LL, 2LL, v98, 57LL, 2LL, v99, 61LL, v57, 144LL, 0);
    __break(1u);
  }

  uint64_t v17 = v113;
  uint64_t v76 = v134;
  sub_2A7A4(v115, v116, v94, v95, v134);
  *(void *)&v124[1] = v134[0];
  *(void *)&v124[3] = v134[1];
  *(void *)&v124[5] = v134[2];
  *(void *)&v124[7] = v134[3];
  *(void *)&v124[9] = v134[4];
  *(void *)&v124[11] = v134[5];
  *(void *)&v124[13] = v134[6];
  *(void *)&v124[15] = v134[7];
  uint64_t v18 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v17, v18, v110);
  sub_1B508(v76);
  uint64_t v83 = 7LL;
  uint64_t v84 = swift_allocObject(&unk_CA3E8, 80LL, 7LL);
  uint64_t v19 = memcpy((void *)(v84 + 16), v76, 0x40uLL);
  uint64_t v92 = (os_log_s *)Logger.logObject.getter(v19);
  int v93 = static os_log_type_t.debug.getter();
  uint64_t v79 = &v123;
  uint64_t v123 = 12LL;
  unint64_t v77 = sub_7788();
  unint64_t v78 = sub_77F0();
  unint64_t v20 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v124, v79, &type metadata for UInt32, &type metadata for Int, v77, v78, v20);
  uint32_t v80 = v124[0];
  uint64_t v81 = 17LL;
  uint64_t v21 = swift_allocObject(&unk_CA410, 17LL, v83);
  uint64_t v22 = v81;
  uint64_t v23 = v83;
  uint64_t v86 = v21;
  *(_BYTE *)(v21 + 16) = 32;
  uint64_t v24 = swift_allocObject(&unk_CA438, v22, v23);
  uint64_t v25 = v83;
  uint64_t v87 = v24;
  *(_BYTE *)(v24 + 16) = 8;
  uint64_t v82 = 32LL;
  uint64_t v26 = swift_allocObject(&unk_CA460, 32LL, v25);
  uint64_t v27 = v82;
  uint64_t v28 = v83;
  uint64_t v29 = v26;
  uint64_t v30 = v84;
  uint64_t v85 = v29;
  *(void *)(v29 + 16) = sub_1B5B8;
  *(void *)(v29 + 24) = v30;
  uint64_t v31 = swift_allocObject(&unk_CA488, v27, v28);
  uint64_t v32 = v85;
  uint64_t v89 = v31;
  *(void *)(v31 + 16) = sub_88B8;
  *(void *)(v31 + 24) = v32;
  uint64_t v91 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v88 = _allocateUninitializedArray<A>(_:)(3LL, v91);
  unsigned int v90 = v33;
  swift_retain();
  uint64_t v34 = v86;
  uint64_t v35 = v90;
  void *v90 = sub_884C;
  v35[1] = v34;
  swift_retain();
  uint64_t v36 = v87;
  uint64_t v37 = v90;
  v90[2] = sub_884C;
  v37[3] = v36;
  swift_retain();
  uint64_t v38 = v88;
  uint64_t v39 = v89;
  uint64_t v40 = v90;
  v90[4] = sub_8900;
  v40[5] = v39;
  sub_6648();
  swift_bridgeObjectRelease(v38);
  if (os_log_type_enabled(v92, (os_log_type_t)v93))
  {
    uint64_t v41 = v100;
    uint64_t v69 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v68 = sub_5150(&qword_D6B60);
    uint64_t v70 = sub_74D0(0LL, v68, v68);
    uint64_t v71 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v72 = &v122;
    uint64_t v122 = v69;
    os_log_type_t v73 = &v121;
    uint64_t v121 = v70;
    unint64_t v74 = &v120;
    uint64_t v120 = v71;
    sub_7528(2LL, &v122);
    sub_7528(1LL, v72);
    uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v119 = v86;
    sub_753C(&v118, (uint64_t)v72, (uint64_t)v73, (uint64_t)v74);
    uint64_t v75 = v41;
    if (v41)
    {
      __break(1u);
    }

    else
    {
      uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v119 = v87;
      sub_753C(&v118, (uint64_t)&v122, (uint64_t)&v121, (uint64_t)&v120);
      uint64_t v67 = 0LL;
      uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v119 = v89;
      sub_753C(&v118, (uint64_t)&v122, (uint64_t)&v121, (uint64_t)&v120);
      _os_log_impl(&dword_0, v92, (os_log_type_t)v93, "CatMetadata: %s", v69, v80);
      sub_7580(v70, 0LL);
      sub_7580(v71, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v111 + 8))(v113, v110);
  uint64_t v62 = (void *)((char *)v105 + *(int *)(v101 + 48));
  v58[1] = *(void *)v106;
  v58[2] = *(void *)(v106 + 8);
  int v59 = *(unsigned __int8 *)(v106 + 16);
  swift_retain();
  uint64_t v63 = v134;
  sub_1B508(v134);
  swift_bridgeObjectRetain(v108);
  swift_bridgeObjectRetain(v117);
  uint64_t v60 = v58;
  double v43 = __chkstk_darwin(v42);
  uint64_t v44 = v109;
  uint64_t v45 = v108;
  uint64_t v46 = v117;
  uint64_t v47 = &v58[-10];
  v47[2] = v48;
  v47[3] = v49;
  v47[4] = v50;
  v47[5] = v45;
  uint64_t v64 = &v125;
  v47[6] = &v125;
  v47[7] = v44;
  v47[8] = v46;
  sub_50A68(v51, v52, v53, 1, (uint64_t (*)(void))sub_1B688, (uint64_t)&v58[-10], v54, v55, v43);
  swift_release();
  sub_1B21C(v63);
  swift_bridgeObjectRelease(v108);
  swift_bridgeObjectRelease(v117);
  uint64_t v61 = (uint64_t *)((char *)v103 + *(int *)(v101 + 48));
  sub_139E0(v105, v103);
  sub_18998(v62, v61);
  uint64_t v66 = *v103;
  uint64_t v65 = v103[1];
  sub_1B6A8((char *)v103 + *(int *)(v101 + 48), v96);
  sub_1B748((uint64_t)v105);
  sub_1B21C(v63);
  sub_8DD8((uint64_t)v64);
  return v66;
}

uint64_t sub_1447C(void *a1)
{
  return String.init<A>(describing:)(__dst, &unk_CCA00);
}

uint64_t sub_144C4@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, void *a8@<X8>)
{
  uint64_t v164 = a8;
  uint64_t v186 = a1;
  v194 = a2;
  uint64_t v189 = a3;
  uint64_t v190 = a4;
  uint64_t v173 = a5;
  uint64_t v174 = a6;
  unint64_t v175 = a7;
  uint64_t v165 = "Fatal error";
  uint64_t v166 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v167 = "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift";
  v231 = 0LL;
  v230 = 0LL;
  uint64_t v229 = 0LL;
  v228 = 0LL;
  uint64_t v226 = 0LL;
  uint64_t v227 = 0LL;
  uint64_t v225 = 0LL;
  uint64_t v223 = 0LL;
  uint64_t v224 = 0LL;
  uint64_t v222 = 0LL;
  uint64_t v218 = 0LL;
  uint64_t v210 = 0LL;
  uint64_t v168 = 0LL;
  uint64_t v169 = type metadata accessor for Logger(0LL);
  uint64_t v170 = *(void *)(v169 - 8);
  unint64_t v171 = (*(void *)(v170 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v172 = (char *)&v101 - v171;
  uint64_t v198 = sub_5150(&qword_D7300);
  unint64_t v176 = (*(void *)(*(void *)(v198 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  unint64_t v177 = (uint64_t *)((char *)&v101 - v176);
  v231 = (char *)&v101 - v176;
  unint64_t v178 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v11);
  uint64_t v199 = (uint64_t *)((char *)&v101 - v178);
  unint64_t v179 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  uint64_t v197 = (uint64_t *)((char *)&v101 - v179);
  v230 = (char *)&v101 - v179;
  uint64_t v229 = a1;
  v228 = v15;
  uint64_t v226 = v16;
  uint64_t v227 = v17;
  uint64_t v225 = v18;
  uint64_t v223 = v19;
  uint64_t v224 = v20;
  uint64_t v191 = sub_15398(v15);
  uint64_t v222 = v191;
  uint64_t v182 = v219;
  sub_454C(v186 + 16, (uint64_t)v219);
  uint64_t v181 = v220;
  uint64_t v180 = v221;
  sub_8C74(v182, v220);
  uint64_t v192 = (void *)(*(uint64_t (**)(uint64_t))(v180 + 32))(v181);
  uint64_t v218 = v192;
  sub_4598(v182);
  uint64_t v185 = v214;
  sub_454C(v186 + 16, (uint64_t)v214);
  uint64_t v184 = v215;
  uint64_t v183 = v216;
  sub_8C74(v185, v215);
  uint64_t v21 = *(void (**)(uint64_t))(v183 + 8);
  v193 = v217;
  v21(v184);
  sub_4598(v185);
  uint64_t v196 = v211;
  sub_454C(v186 + 16, (uint64_t)v211);
  uint64_t v188 = v212;
  uint64_t v187 = v213;
  sub_8C74(v196, v212);
  uint64_t v195 = (*(uint64_t (**)(uint64_t))(v187 + 24))(v188);
  sub_2BB38(v194, v189, v190, v191, v192, (uint64_t)v193, v197);
  swift_release();
  sub_4598(v196);
  sub_18998(v197, v199);
  if (swift_getEnumCaseMultiPayload(v199, v198) == 1)
  {
    uint64_t v158 = *v199;
    uint64_t v210 = v158;
    uint64_t v25 = sub_3B3A4();
    uint64_t v159 = *(void *)v25;
    uint64_t v160 = *((void *)v25 + 1);
    swift_bridgeObjectRetain(v160);
    uint64_t v26 = v160;
    uint64_t v27 = v173;
    uint64_t v28 = v173[1];
    *uint64_t v173 = v159;
    v27[1] = v26;
    swift_bridgeObjectRelease(v28);
    uint64_t v161 = *v173;
    int v162 = (void *)v173[1];
    swift_bridgeObjectRetain(v162);
    swift_bridgeObjectRetain(v175);
    if (v175)
    {
      uint64_t v156 = v174;
      uint64_t v157 = v175;
    }

    else
    {
      _assertionFailure(_:_:file:line:flags:)(v165, 11LL, 2LL, v166, 57LL, 2LL, v167, 61LL, 2, 157LL, 0);
      __break(1u);
    }

    uint64_t v29 = v172;
    uint64_t v125 = v232;
    sub_2A7A4(v161, v162, v156, v157, v232);
    uint64_t v30 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v29, v30, v169);
    sub_1B508(v194);
    uint64_t v124 = 80LL;
    uint64_t v139 = 7LL;
    uint64_t v131 = swift_allocObject(&unk_CA920, 80LL, 7LL);
    size_t v126 = 64LL;
    memcpy((void *)(v131 + 16), v194, 0x40uLL);
    sub_1B508(v125);
    uint64_t v133 = swift_allocObject(&unk_CA948, v124, v139);
    memcpy((void *)(v133 + 16), v125, v126);
    swift_errorRetain(v158);
    uint64_t v31 = swift_allocObject(&unk_CA970, 24LL, v139);
    uint64_t v140 = v31;
    *(void *)(v31 + 16) = v158;
    uint64_t v154 = (os_log_s *)Logger.logObject.getter(v31);
    int v155 = static os_log_type_t.error.getter();
    uint64_t v129 = &v208;
    uint64_t v138 = 32LL;
    uint64_t v208 = 32LL;
    unint64_t v127 = sub_7788();
    unint64_t v128 = sub_77F0();
    unint64_t v32 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v209, v129, &type metadata for UInt32, &type metadata for Int, v127, v128, v32);
    uint32_t v130 = v209;
    uint64_t v136 = 17LL;
    uint64_t v33 = swift_allocObject(&unk_CA998, 17LL, v139);
    uint64_t v34 = v136;
    uint64_t v35 = v139;
    uint64_t v142 = v33;
    int v135 = 32;
    *(_BYTE *)(v33 + 16) = 32;
    uint64_t v36 = swift_allocObject(&unk_CA9C0, v34, v35);
    uint64_t v37 = v138;
    uint64_t v38 = v139;
    uint64_t v143 = v36;
    int v137 = 8;
    *(_BYTE *)(v36 + 16) = 8;
    uint64_t v39 = swift_allocObject(&unk_CA9E8, v37, v38);
    uint64_t v40 = v138;
    uint64_t v41 = v139;
    uint64_t v42 = v39;
    uint64_t v43 = v131;
    uint64_t v132 = v42;
    *(void *)(v42 + 16) = sub_1CA14;
    *(void *)(v42 + 24) = v43;
    uint64_t v44 = swift_allocObject(&unk_CAA10, v40, v41);
    uint64_t v45 = v136;
    uint64_t v46 = v139;
    uint64_t v47 = v44;
    uint64_t v48 = v132;
    uint64_t v144 = v47;
    *(void *)(v47 + 16) = sub_88B8;
    *(void *)(v47 + 24) = v48;
    uint64_t v49 = swift_allocObject(&unk_CAA38, v45, v46);
    uint64_t v50 = v136;
    uint64_t v51 = v139;
    uint64_t v145 = v49;
    *(_BYTE *)(v49 + 16) = v135;
    uint64_t v52 = swift_allocObject(&unk_CAA60, v50, v51);
    uint64_t v53 = v138;
    uint64_t v54 = v139;
    uint64_t v146 = v52;
    *(_BYTE *)(v52 + 16) = v137;
    uint64_t v55 = swift_allocObject(&unk_CAA88, v53, v54);
    uint64_t v56 = v138;
    uint64_t v57 = v139;
    uint64_t v58 = v55;
    uint64_t v59 = v133;
    uint64_t v134 = v58;
    *(void *)(v58 + 16) = sub_1CA14;
    *(void *)(v58 + 24) = v59;
    uint64_t v60 = swift_allocObject(&unk_CAAB0, v56, v57);
    uint64_t v61 = v136;
    uint64_t v62 = v139;
    uint64_t v63 = v60;
    uint64_t v64 = v134;
    uint64_t v147 = v63;
    *(void *)(v63 + 16) = sub_88B8;
    *(void *)(v63 + 24) = v64;
    uint64_t v65 = swift_allocObject(&unk_CAAD8, v61, v62);
    uint64_t v66 = v136;
    uint64_t v67 = v139;
    uint64_t v148 = v65;
    *(_BYTE *)(v65 + 16) = v135;
    uint64_t v68 = swift_allocObject(&unk_CAB00, v66, v67);
    uint64_t v69 = v138;
    uint64_t v70 = v139;
    uint64_t v149 = v68;
    *(_BYTE *)(v68 + 16) = v137;
    uint64_t v71 = swift_allocObject(&unk_CAB28, v69, v70);
    uint64_t v72 = v138;
    uint64_t v73 = v139;
    uint64_t v74 = v71;
    uint64_t v75 = v140;
    uint64_t v141 = v74;
    *(void *)(v74 + 16) = sub_1ACC8;
    *(void *)(v74 + 24) = v75;
    uint64_t v76 = swift_allocObject(&unk_CAB50, v72, v73);
    uint64_t v77 = v141;
    uint64_t v151 = v76;
    *(void *)(v76 + 16) = sub_88B8;
    *(void *)(v76 + 24) = v77;
    uint64_t v153 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v150 = _allocateUninitializedArray<A>(_:)(9LL, v153);
    uint64_t v152 = v78;
    swift_retain();
    uint64_t v79 = v142;
    uint32_t v80 = v152;
    *uint64_t v152 = sub_884C;
    v80[1] = v79;
    swift_retain();
    uint64_t v81 = v143;
    uint64_t v82 = v152;
    v152[2] = sub_884C;
    v82[3] = v81;
    swift_retain();
    uint64_t v83 = v144;
    uint64_t v84 = v152;
    v152[4] = sub_8900;
    v84[5] = v83;
    swift_retain();
    uint64_t v85 = v145;
    uint64_t v86 = v152;
    v152[6] = sub_884C;
    v86[7] = v85;
    swift_retain();
    uint64_t v87 = v146;
    uint64_t v88 = v152;
    v152[8] = sub_884C;
    v88[9] = v87;
    swift_retain();
    uint64_t v89 = v147;
    unsigned int v90 = v152;
    v152[10] = sub_8900;
    v90[11] = v89;
    swift_retain();
    uint64_t v91 = v148;
    uint64_t v92 = v152;
    v152[12] = sub_884C;
    v92[13] = v91;
    swift_retain();
    uint64_t v93 = v149;
    uint64_t v94 = v152;
    v152[14] = sub_884C;
    v94[15] = v93;
    swift_retain();
    uint64_t v95 = v150;
    uint64_t v96 = v151;
    uint32_t v97 = v152;
    v152[16] = sub_8900;
    v97[17] = v96;
    sub_6648();
    swift_bridgeObjectRelease(v95);
    if (os_log_type_enabled(v154, (os_log_type_t)v155))
    {
      uint64_t v98 = v168;
      uint64_t v117 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(32LL, &type metadata for UInt8);
      uint64_t v116 = sub_5150(&qword_D6B60);
      uint64_t v118 = sub_74D0(0LL, v116, v116);
      uint64_t v119 = sub_74D0(3LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v120 = &v204;
      uint64_t v204 = v117;
      uint64_t v121 = &v203;
      uint64_t v203 = v118;
      uint64_t v122 = &v202;
      uint64_t v202 = v119;
      sub_7528(2LL, &v204);
      sub_7528(3LL, v120);
      uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v201 = v142;
      sub_753C(&v200, (uint64_t)v120, (uint64_t)v121, (uint64_t)v122);
      uint64_t v123 = v98;
      if (v98)
      {
        __break(1u);
      }

      else
      {
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v201 = v143;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v115 = 0LL;
        uint64_t v99 = v115;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v201 = v144;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v114 = v99;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v201 = v145;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v113 = 0LL;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v201 = v146;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v112 = 0LL;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v201 = v147;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v111 = 0LL;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v201 = v148;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v110 = 0LL;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v201 = v149;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        uint64_t v109 = 0LL;
        uint32_t v200 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v201 = v151;
        sub_753C(&v200, (uint64_t)&v204, (uint64_t)&v203, (uint64_t)&v202);
        _os_log_impl( &dword_0,  v154,  (os_log_type_t)v155,  "Initial error with %s family, retrying now with %s: %s",  v117,  v130);
        sub_7580(v118, 0LL);
        sub_7580(v119, 3LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v170 + 8))(v172, v169);
    uint64_t v105 = v205;
    sub_454C(v186 + 16, (uint64_t)v205);
    uint64_t v103 = v206;
    uint64_t v102 = v207;
    sub_8C74(v105, v206);
    uint64_t v104 = (*(uint64_t (**)(uint64_t))(v102 + 24))(v103);
    uint64_t v107 = v232;
    uint64_t v108 = v217;
    sub_2BB38(v232, v189, v190, v191, v192, (uint64_t)v217, v177);
    swift_release();
    sub_4598(v105);
    uint64_t v100 = sub_5150(&qword_D7360);
    uint64_t v106 = (void *)((char *)v164 + *(int *)(v100 + 48));
    sub_139E0(v173, v164);
    sub_18998(v177, v106);
    sub_18A50(v177);
    sub_1B21C(v107);
    swift_errorRelease(v158);
    sub_18A50(v197);
    sub_4598(v108);

    return swift_bridgeObjectRelease(v191);
  }

  else
  {
    uint64_t v22 = sub_5150(&qword_D7360);
    int v163 = (void *)((char *)v164 + *(int *)(v22 + 48));
    sub_139E0(v173, v164);
    sub_18998(v197, v163);
    uint64_t v23 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t *))(*(void *)(v23 - 8) + 8LL))(v199);
    sub_18A50(v197);
    sub_4598(v217);

    return swift_bridgeObjectRelease(v191);
  }

uint64_t sub_15364(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain(a1[1]);
  return v2;
}

uint64_t sub_15398(__n128 *a1)
{
  uint64_t v132 = a1;
  uint64_t v179 = 0LL;
  uint64_t v178 = 0LL;
  uint64_t v177 = 0LL;
  uint64_t v139 = 0LL;
  uint64_t v173 = 0LL;
  uint64_t v174 = 0LL;
  uint64_t v170 = 0LL;
  __n128 v164 = 0uLL;
  uint64_t v163 = 0LL;
  uint64_t v127 = 0LL;
  uint64_t v115 = type metadata accessor for Logger(0LL);
  uint64_t v116 = *(void *)(v115 - 8);
  unint64_t v117 = (*(void *)(v116 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v118 = (char *)&v53 - v117;
  uint64_t v119 = type metadata accessor for Locale(v3);
  uint64_t v120 = *(void *)(v119 - 8);
  unint64_t v121 = (*(void *)(v120 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  uint64_t v122 = (char *)&v53 - v121;
  uint64_t v123 = type metadata accessor for Calendar.Component(v5);
  uint64_t v124 = *(void *)(v123 - 8);
  unint64_t v125 = (*(void *)(v124 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v6);
  size_t v126 = (char *)&v53 - v125;
  uint64_t v128 = type metadata accessor for Calendar(v7);
  uint64_t v129 = *(void *)(v128 - 8);
  unint64_t v130 = (*(void *)(v129 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v131 = (char *)&v53 - v130;
  uint64_t v135 = type metadata accessor for Date(v9);
  uint64_t v134 = *(void *)(v135 - 8);
  unint64_t v133 = (*(void *)(v134 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v136 = (uint64_t)&v53 - v133;
  uint64_t v179 = v12;
  uint64_t v178 = v1;
  uint64_t v141 = &type metadata for String;
  uint64_t v142 = (char *)&type metadata for Any + 8;
  uint64_t v143 = &protocol witness table for String;
  uint64_t v140 = Dictionary.init()(v11);
  swift_bridgeObjectRetain(v140);
  uint64_t v177 = v140;
  ((void (*)(void))Date.init())();
  uint64_t v138 = sub_16180(v136);
  int v137 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
  v137(v136, v135);
  uint64_t v13 = Dictionary.merging(_:uniquingKeysWith:)(v138, sub_1610C, v139, v140, v141, v142, v143);
  uint64_t v144 = 0LL;
  uint64_t v145 = v13;
  uint64_t v112 = v13;
  swift_bridgeObjectRetain(v13);
  uint64_t v14 = v177;
  uint64_t v177 = v112;
  uint64_t v15 = swift_bridgeObjectRelease(v14);
  Date.init()(v15);
  uint64_t v111 = sub_1649C(v136);
  v137(v136, v135);
  uint64_t v16 = Dictionary.merging(_:uniquingKeysWith:)( v111,  sub_1610C,  0LL,  v112,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v113 = 0LL;
  uint64_t v114 = v16;
  uint64_t v17 = v177;
  uint64_t v177 = v114;
  swift_bridgeObjectRelease(v17);
  Swift::String v108 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("nextYear", 8uLL, 1);
  static Calendar.current.getter();
  uint64_t v18 = (*(uint64_t (**)(char *, void, uint64_t))(v124 + 104))( v126,  enum case for Calendar.Component.year(_:),  v123);
  Date.init()(v18);
  uint64_t v109 = Calendar.component(_:from:)(v126, v136);
  v137(v136, v135);
  (*(void (**)(char *, uint64_t))(v124 + 8))(v126, v123);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v128);
  uint64_t result = v109;
  uint64_t v110 = v109 + 1;
  if (__OFADD__(v109, 1LL))
  {
    __break(1u);
  }

  else
  {
    uint64_t v92 = v176;
    v176[3] = &type metadata for Int;
    v176[0] = v110;
    uint64_t v91 = &v175;
    Swift::String v175 = v108;
    uint64_t v106 = sub_5150(&qword_D7368);
    uint64_t v100 = &v177;
    uint64_t v21 = Dictionary.subscript.setter(v92, v91);
    static Locale.current.getter(v21);
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    id v94 = -[objc_class af_aceTemperatureUnit](isa, "af_aceTemperatureUnit");

    (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v119);
    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
    uint64_t v96 = v22;
    uint64_t v173 = v95;
    uint64_t v174 = v22;

    int v103 = 1;
    Swift::String v97 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("temperatureUnit", 0xFuLL, 1);
    swift_bridgeObjectRetain(v96);
    uint64_t v98 = &type metadata for String;
    v172[3] = &type metadata for String;
    v172[0] = v95;
    v172[1] = v96;
    Swift::String v171 = v97;
    Dictionary.subscript.setter(v172, &v171);
    uint64_t v170 = Dictionary.init()(v23);
    Swift::String v99 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("holiday", 7uLL, v103 & 1);
    uint64_t v101 = "firstadvent";
    Builtin::Word v102 = 11LL;
    Swift::String v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("firstadvent", 0xBuLL, v103 & 1);
    uint64_t v169 = v98;
    Swift::String v168 = v24;
    Swift::String v167 = v99;
    Dictionary.subscript.setter(&v168, &v167);
    Swift::String v105 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v101, v102, v103 & 1);
    uint64_t v104 = v170;
    swift_bridgeObjectRetain(v170);
    v166[3] = v106;
    v166[0] = v104;
    Swift::String v165 = v105;
    Dictionary.subscript.setter(v166, &v165);
    uint64_t v107 = &v182;
    sub_1B7F0(v132 + 2, &v182);
    sub_1B804((uint64_t)v107);
    *(void *)&double v25 = sub_1B7F0(v107, &v183).n128_u64[0];
    if (v183.n128_u64[1])
    {
      __n128 v88 = v183;
      __n128 v164 = v183;
      uint64_t v87 = &type metadata for String;
      uint64_t v163 = Dictionary.init()(v25);
      Swift::String v89 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("holiday", 7uLL, 1);
      swift_bridgeObjectRetain(v88.n128_u64[1]);
      int v162 = v87;
      __n128 v161 = v88;
      Swift::String v160 = v89;
      Dictionary.subscript.setter(&v161, &v160);
      unsigned int v90 = &v181;
      sub_1B7F0(v132 + 3, &v181);
      sub_1B804((uint64_t)v90);
      sub_1B7F0(v90, &v159);
      BOOL v86 = v159.n128_u64[1] != 0;
      BOOL v85 = v86;
      sub_8DD8((uint64_t)&v159);
      if (v85)
      {
        Swift::String v83 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("calendarType", 0xCuLL, 1);
        uint64_t v84 = &v180;
        sub_1B7F0(v132 + 3, &v180);
        sub_1B804((uint64_t)v84);
        sub_1B7F0(v84, v184);
        if (v184[0].n128_u64[1])
        {
          v184[1] = v184[0];
          uint64_t v149 = &type metadata for String;
          __n128 v147 = v184[0];
        }

        else
        {
          __n128 v147 = 0uLL;
          uint64_t v148 = 0LL;
          uint64_t v149 = 0LL;
        }

        Swift::String v146 = v83;
        Dictionary.subscript.setter(&v147, &v146);
      }

      uint64_t v72 = 7LL;
      Swift::String v65 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("holiday", 7uLL, 1);
      uint64_t v64 = v163;
      swift_bridgeObjectRetain(v163);
      v158[3] = v106;
      v158[0] = v64;
      Swift::String v157 = v65;
      Dictionary.subscript.setter(v158, &v157);
      uint64_t v26 = v118;
      uint64_t v27 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v26, v27, v115);
      swift_bridgeObjectRetain(v88.n128_u64[1]);
      uint64_t v71 = 32LL;
      uint64_t v28 = swift_allocObject(&unk_CA4B0, 32LL, v72);
      unint64_t v29 = v88.n128_u64[1];
      uint64_t v73 = v28;
      *(void *)(v28 + 16) = v88.n128_u64[0];
      *(void *)(v28 + 24) = v29;
      uint64_t v81 = (os_log_s *)Logger.logObject.getter(v28);
      int v82 = static os_log_type_t.debug.getter();
      uint64_t v68 = &v155;
      uint64_t v155 = 12LL;
      unint64_t v66 = sub_7788();
      unint64_t v67 = sub_77F0();
      unint64_t v30 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v156, v68, &type metadata for UInt32, &type metadata for Int, v66, v67, v30);
      uint32_t v69 = v156;
      uint64_t v70 = 17LL;
      uint64_t v31 = swift_allocObject(&unk_CA4D8, 17LL, v72);
      uint64_t v32 = v70;
      uint64_t v33 = v72;
      uint64_t v75 = v31;
      *(_BYTE *)(v31 + 16) = 32;
      uint64_t v34 = swift_allocObject(&unk_CA500, v32, v33);
      uint64_t v35 = v71;
      uint64_t v36 = v72;
      uint64_t v76 = v34;
      *(_BYTE *)(v34 + 16) = 8;
      uint64_t v37 = swift_allocObject(&unk_CA528, v35, v36);
      uint64_t v38 = v71;
      uint64_t v39 = v72;
      uint64_t v40 = v37;
      uint64_t v41 = v73;
      uint64_t v74 = v40;
      *(void *)(v40 + 16) = sub_1B890;
      *(void *)(v40 + 24) = v41;
      uint64_t v42 = swift_allocObject(&unk_CA550, v38, v39);
      uint64_t v43 = v74;
      uint64_t v78 = v42;
      *(void *)(v42 + 16) = sub_88B8;
      *(void *)(v42 + 24) = v43;
      uint64_t v80 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v77 = _allocateUninitializedArray<A>(_:)(3LL, v80);
      uint64_t v79 = v44;
      swift_retain();
      uint64_t v45 = v75;
      uint64_t v46 = v79;
      void *v79 = sub_884C;
      v46[1] = v45;
      swift_retain();
      uint64_t v47 = v76;
      uint64_t v48 = v79;
      v79[2] = sub_884C;
      v48[3] = v47;
      swift_retain();
      uint64_t v49 = v77;
      uint64_t v50 = v78;
      uint64_t v51 = v79;
      v79[4] = sub_8900;
      v51[5] = v50;
      sub_6648();
      swift_bridgeObjectRelease(v49);
      if (os_log_type_enabled(v81, (os_log_type_t)v82))
      {
        uint64_t v52 = v113;
        uint64_t v57 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v56 = sub_5150(&qword_D6B60);
        uint64_t v58 = sub_74D0(0LL, v56, v56);
        uint64_t v59 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v60 = &v154;
        uint64_t v154 = v57;
        uint64_t v61 = &v153;
        uint64_t v153 = v58;
        uint64_t v62 = &v152;
        uint64_t v152 = v59;
        sub_7528(2LL, &v154);
        sub_7528(1LL, v60);
        uint64_t v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v151 = v75;
        sub_753C(&v150, (uint64_t)v60, (uint64_t)v61, (uint64_t)v62);
        uint64_t v63 = v52;
        if (v52)
        {
          __break(1u);
        }

        else
        {
          uint64_t v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v151 = v76;
          sub_753C(&v150, (uint64_t)&v154, (uint64_t)&v153, (uint64_t)&v152);
          uint64_t v55 = 0LL;
          uint64_t v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v151 = v78;
          sub_753C(&v150, (uint64_t)&v154, (uint64_t)&v153, (uint64_t)&v152);
          _os_log_impl(&dword_0, v81, (os_log_type_t)v82, "holiday: %s", v57, v69);
          sub_7580(v58, 0LL);
          sub_7580(v59, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v115);
      sub_1B82C(&v163);
      swift_bridgeObjectRelease(v88.n128_u64[1]);
    }

    uint64_t v53 = &v177;
    uint64_t v54 = v177;
    swift_bridgeObjectRetain(v177);
    sub_1B82C(&v170);
    swift_bridgeObjectRelease(v96);
    sub_1B82C(v53);
    return v54;
  }

  return result;
}

uint64_t sub_1610C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9C90(a1, a2);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_16150( uint64_t a1, uint64_t a2)
{
}

uint64_t sub_16180(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v49 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t v31 = type metadata accessor for Calendar.Component();
  uint64_t v28 = *(void **)(v31 - 8);
  unint64_t v21 = (v28[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v2 = __chkstk_darwin(v1);
  uint64_t v33 = (char *)&v20 - v21;
  uint64_t v27 = type metadata accessor for Calendar.Identifier(v2);
  uint64_t v25 = *(void *)(v27 - 8);
  unint64_t v23 = (*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v20 - v23;
  uint64_t v42 = type metadata accessor for Calendar(v4);
  uint64_t v41 = *(void *)(v42 - 8);
  double v6 = __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v20 - v7;
  uint64_t v49 = (char *)&v20 - v7;
  uint64_t v48 = v30;
  uint64_t v47 = v24;
  (*(void (**)(double))(v8 + 104))(v6);
  Calendar.init(identifier:)(v26);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  unint64_t v29 = (void (*)(char *, void, uint64_t))v28[13];
  v29(v33, enum case for Calendar.Component.month(_:), v31);
  uint64_t v35 = Calendar.component(_:from:)(v33, v30);
  uint64_t v32 = (void (*)(char *, uint64_t))v28[1];
  v32(v33, v31);
  uint64_t v46 = v35;
  v29(v33, enum case for Calendar.Component.day(_:), v31);
  uint64_t v38 = Calendar.component(_:from:)(v33, v30);
  v32(v33, v31);
  uint64_t v45 = v38;
  uint64_t v40 = sub_5150(&qword_D7370);
  uint64_t v39 = _allocateUninitializedArray<A>(_:)(2LL, v40);
  uint64_t v37 = v9;
  int v34 = 1;
  Swift::String v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("lunarCalendarMonth", 0x12uLL, 1);
  char v11 = v34;
  uint64_t v12 = v35;
  uint64_t v13 = v37;
  *uint64_t v37 = v10;
  uint64_t v36 = &type metadata for Int;
  v13[2]._object = &type metadata for Int;
  v13[1]._countAndFlagsBits = v12;
  Swift::String v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("lunarCalendarDay", 0x10uLL, v11 & 1);
  uint64_t v15 = v36;
  uint64_t v16 = v37;
  uint64_t v17 = v38;
  uint64_t v18 = v39;
  v37[3] = v14;
  v16[5]._object = v15;
  v16[4]._countAndFlagsBits = v17;
  sub_6648();
  uint64_t v44 = Dictionary.init(dictionaryLiteral:)( v18,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v42);
  return v44;
}

uint64_t sub_1649C(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v48 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t v43 = 0LL;
  uint64_t v25 = 0LL;
  uint64_t v37 = type metadata accessor for Calendar.Component();
  int v34 = *(void **)(v37 - 8);
  unint64_t v24 = (v34[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v2 = __chkstk_darwin(v1);
  uint64_t v39 = (char *)&v17 - v24;
  uint64_t v32 = type metadata accessor for Calendar.Identifier(v2);
  uint64_t v30 = *(void *)(v32 - 8);
  unint64_t v26 = (*(void *)(v30 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v17 - v26;
  uint64_t v27 = type metadata accessor for Calendar(v4);
  uint64_t v28 = *(void *)(v27 - 8);
  double v6 = __chkstk_darwin(v5);
  uint64_t v33 = (char *)&v17 - v7;
  uint64_t v48 = (char *)&v17 - v7;
  uint64_t v47 = v36;
  uint64_t v46 = v29;
  (*(void (**)(double))(v8 + 104))(v6);
  Calendar.init(identifier:)(v31);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  uint64_t v35 = (void (*)(char *, void, uint64_t))v34[13];
  v35(v39, enum case for Calendar.Component.day(_:), v37);
  uint64_t v41 = Calendar.component(_:from:)(v39, v36);
  uint64_t v38 = (void (*)(char *, uint64_t))v34[1];
  v38(v39, v37);
  uint64_t v45 = v41;
  v35(v39, enum case for Calendar.Component.hour(_:), v37);
  uint64_t v40 = Calendar.component(_:from:)(v39, v36);
  v38(v39, v37);
  uint64_t result = v41;
  uint64_t v44 = v40;
  uint64_t v42 = 25 - v41;
  if (__OFSUB__(25LL, v41))
  {
    __break(1u);
    goto LABEL_12;
  }

  uint64_t v23 = 24 * v42;
  if ((unsigned __int128)(24 * (__int128)v42) >> 64 != (24 * v42) >> 63)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v22 = v23 - v40;
  if (!__OFSUB__(v23, v40))
  {
    uint64_t v43 = v22;
    uint64_t v20 = sub_5150(&qword_D7370);
    uint64_t v19 = _allocateUninitializedArray<A>(_:)(1LL, v20);
    uint64_t v18 = v12;
    Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("hoursToChristmas", 0x10uLL, 1);
    Swift::String v14 = v18;
    uint64_t v15 = v22;
    uint64_t v16 = v19;
    *uint64_t v18 = v13;
    v14[2]._object = &type metadata for Int;
    v14[1]._countAndFlagsBits = v15;
    sub_6648();
    uint64_t v21 = Dictionary.init(dictionaryLiteral:)( v16,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    return v21;
  }

LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_167F0(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v73 = 0LL;
  uint64_t v71 = 0LL;
  uint64_t v72 = 0LL;
  uint64_t v70 = 0LL;
  uint64_t v69 = 0LL;
  uint64_t v68 = 0LL;
  unsigned __int8 v67 = 0;
  unint64_t v38 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v39 = &v31[-v38];
  unint64_t v40 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v4);
  uint64_t v41 = &v31[-v40];
  unint64_t v42 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v43 = &v31[-v42];
  uint64_t v44 = type metadata accessor for Date(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  unint64_t v46 = (*(void *)(v45 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v47 = &v31[-v46];
  uint64_t v73 = &v31[-v46];
  uint64_t v71 = v9;
  uint64_t v72 = v10;
  uint64_t v70 = v2;
  uint64_t v50 = 3LL;
  uint64_t v53 = &type metadata for String;
  uint64_t v49 = _allocateUninitializedArray<A>(_:)(3LL, &type metadata for String);
  uint64_t v48 = v11;
  int v56 = 1;
  Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "SocialConversation#dalDismissAssistant",  0x26uLL,  1);
  char v13 = v56;
  *uint64_t v48 = v12;
  Swift::String v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation#dalOkay", 0x1AuLL, v13 & 1);
  char v15 = v56;
  v48[1] = v14;
  Swift::String v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation#dalGoodBye", 0x1DuLL, v15 & 1);
  uint64_t v17 = v49;
  v48[2] = v16;
  sub_6648();
  uint64_t v54 = v17;
  uint64_t v69 = v17;
  uint64_t v52 = _allocateUninitializedArray<A>(_:)(v50, v53);
  uint64_t v51 = v18;
  Swift::String v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "SocialConversation#dalProfanityAtSiri",  0x25uLL,  v56 & 1);
  char v20 = v56;
  *uint64_t v51 = v19;
  Swift::String v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "SocialConversation#dalGenderProfanityAtSiri",  0x2BuLL,  v20 & 1);
  char v22 = v56;
  v51[1] = v21;
  Swift::String v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "SocialConversation#dalSexuallyHarassSiri",  0x28uLL,  v22 & 1);
  uint64_t v24 = v52;
  v51[2] = v23;
  sub_6648();
  uint64_t v62 = v24;
  uint64_t v68 = v24;
  v66[2] = v54;
  uint64_t v55 = v66;
  v66[0] = v57;
  v66[1] = v58;
  uint64_t v59 = sub_5150(&qword_D7350);
  unint64_t v60 = sub_1B278();
  uint64_t v61 = &protocol witness table for String;
  char v25 = Sequence<>.contains(_:)(v55, v59, v60, &protocol witness table for String);
  unsigned __int8 v67 = v25 & v56;
  v65[2] = v62;
  v65[0] = v57;
  v65[1] = v58;
  if ((Sequence<>.contains(_:)(v65, v59, v60, v61) & 1) != 0)
  {
    uint64_t v35 = (const void *)(v37
                       + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
    uint64_t v36 = &v64;
    swift_beginAccess(v37 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
    sub_BAFC(v35, v43);
    swift_endAccess(v36);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v45 + 48))(v43, 1LL, v44) == 1)
    {
      uint64_t v26 = sub_BDC8((uint64_t)v43);
    }

    else
    {
      uint64_t v27 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 32))(v47, v43, v44);
      double v28 = Date.timeIntervalSinceNow.getter(v27);
      v29.n128_u64[0] = 0xC04E000000000000LL;
      if (v28 >= -60.0) {
        unsigned __int8 v67 = 1;
      }
      uint64_t v26 = (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v45 + 8))(v47, v44, v29);
    }

    Date.init()(v26);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v45 + 56))(v41, 0LL, 1LL, v44);
    sub_BAFC(v41, v39);
    uint64_t v33 = (void *)(v37
                 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
    int v34 = &v63;
    swift_beginAccess(v37 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin18CannedDialogHelper_previousProfanityAtSiri);
    sub_BC68(v39, v33);
    swift_endAccess(v34);
    sub_BDC8((uint64_t)v41);
  }

  int v32 = v67;
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v54);
  return v32 & 1;
}

uint64_t sub_16DCC(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v274 = a1;
  v273 = a2;
  uint64_t v269 = a3;
  v270 = a4;
  uint64_t v271 = a5;
  v272 = a6;
  v250 = "Fatal error";
  v251 = "Unexpectedly found nil while unwrapping an Optional value";
  v252 = "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift";
  v341 = 0LL;
  v340 = 0LL;
  uint64_t v338 = 0LL;
  uint64_t v339 = 0LL;
  uint64_t v336 = 0LL;
  uint64_t v337 = 0LL;
  uint64_t v334 = 0LL;
  uint64_t v335 = 0LL;
  uint64_t v333 = 0LL;
  uint64_t v253 = 0LL;
  uint64_t v314 = 0LL;
  v315 = 0LL;
  uint64_t v308 = 0LL;
  uint64_t v309 = 0LL;
  uint64_t v306 = 0LL;
  uint64_t v307 = 0LL;
  id v301 = 0LL;
  id v290 = 0LL;
  uint64_t v260 = 0LL;
  uint64_t v254 = type metadata accessor for Logger(0LL);
  uint64_t v255 = *(void *)(v254 - 8);
  unint64_t v256 = (*(void *)(v255 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  v257 = (char *)&v110 - v256;
  unint64_t v258 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  v259 = (char *)&v110 - v258;
  uint64_t v261 = *(void *)(sub_5150(&qword_D7378) - 8);
  uint64_t v262 = *(void *)(v261 + 64);
  unint64_t v263 = (v262 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  v264 = (char *)&v110 - v263;
  unint64_t v265 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v11);
  v266 = (char *)&v110 - v265;
  unint64_t v267 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  v268 = (char *)&v110 - v267;
  v341 = (char *)&v110 - v267;
  uint64_t v275 = type metadata accessor for DialogServiceButton(v15);
  unint64_t v276 = (*(void *)(*(void *)(v275 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v16);
  v277 = (char *)&v110 - v276;
  v340 = (char *)&v110 - v276;
  uint64_t v338 = v17;
  uint64_t v339 = v18;
  uint64_t v336 = v19;
  uint64_t v337 = v20;
  uint64_t v334 = v21;
  uint64_t v335 = v22;
  uint64_t v333 = v6;
  v280 = v327;
  sub_454C(v6 + 16, (uint64_t)v327);
  uint64_t v279 = v328;
  uint64_t v278 = v329;
  sub_8C74(v280, v328);
  Swift::String v23 = *(void (**)(uint64_t))(v278 + 8);
  v283 = v330;
  v23(v279);
  sub_4598(v280);
  uint64_t v282 = v331;
  uint64_t v281 = v332;
  sub_8C74(v283, v331);
  int v284 = dispatch thunk of DeviceState.isWatch.getter(v282, v281);
  sub_454C((uint64_t)v283, (uint64_t)v324);
  if ((v284 & 1) != 0)
  {
    int v248 = 0;
  }

  else
  {
    uint64_t v247 = v325;
    uint64_t v246 = v326;
    sub_8C74(v324, v325);
    int v248 = dispatch thunk of DeviceState.isAppleTV.getter(v247, v246) ^ 1;
  }

  int v245 = v248;
  sub_4598(v324);
  sub_454C((uint64_t)v330, (uint64_t)v321 + 4);
  if ((v245 & 1) != 0)
  {
    uint64_t v243 = v322;
    uint64_t v242 = v323;
    sub_8C74((void *)((char *)v321 + 4), v322);
    int v244 = dispatch thunk of DeviceState.isHomePod.getter(v243, v242) ^ 1;
  }

  else
  {
    int v244 = 0;
  }

  int v241 = v244;
  sub_4598((void *)((char *)v321 + 4));
  if ((v241 & 1) != 0)
  {
    swift_bridgeObjectRetain(v273);
    if (!v273)
    {
      uint64_t v132 = 0LL;
      unint64_t v95 = sub_1B964();
      uint64_t v133 = _allocateUninitializedArray<A>(_:)(v132, v95);
      sub_4598(v330);
      return v133;
    }

    uint64_t v239 = v274;
    v240 = v273;
    v238 = v273;
    uint64_t v237 = v274;
    uint64_t v314 = v274;
    v315 = v273;
    swift_bridgeObjectRetain(v272);
    uint64_t v310 = v271;
    v311 = v272;
    swift_bridgeObjectRetain(v238);
    if (v311)
    {
      uint64_t v312 = v310;
      v313 = v311;
    }

    else
    {
      swift_bridgeObjectRetain(v238);
      uint64_t v312 = v237;
      v313 = v238;
      sub_8DD8((uint64_t)&v310);
    }

    swift_bridgeObjectRelease(v238);
    v232 = v313;
    sub_18604(v312, v313, v269, v270, v277);
    swift_bridgeObjectRelease(v232);
    uint64_t v235 = *(void *)v277;
    uint64_t v236 = *((void *)v277 + 1);
    swift_bridgeObjectRetain(v236);
    uint64_t v308 = v235;
    uint64_t v309 = v236;
    sub_1B9C8(&v277[*(int *)(v275 + 20)], v268);
    uint64_t v24 = &v277[*(int *)(v275 + 24)];
    uint64_t v233 = *(void *)v24;
    uint64_t v234 = *((void *)v24 + 1);
    swift_bridgeObjectRetain(v234);
    uint64_t v306 = v233;
    uint64_t v307 = v234;
    uint64_t v304 = v235;
    uint64_t v305 = v236;
    BOOL v231 = v236 != 0;
    BOOL v230 = v231;
    swift_bridgeObjectRetain(v236);
    if (v230)
    {
      swift_bridgeObjectRetain(v236);
      if (v236)
      {
        uint64_t v228 = v235;
        uint64_t v229 = v236;
        uint64_t v225 = v236;
        uint64_t v226 = String.count.getter(v235);
        swift_bridgeObjectRelease(v225);
        BOOL v227 = v226 > 0;
        goto LABEL_17;
      }

      LOBYTE(v109) = 2;
      _assertionFailure(_:_:file:line:flags:)(v250, 11LL, 2LL, v251, 57LL, 2LL, v252, 61LL, v109, 239LL, 0);
      __break(1u);
    }

    BOOL v227 = 0;
LABEL_17:
    BOOL v224 = v227;
    swift_bridgeObjectRelease(v236);
    if (v224)
    {
      char v25 = v259;
      uint64_t v26 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v25, v26, v254);
      swift_bridgeObjectRetain(v236);
      uint64_t v209 = 32LL;
      uint64_t v210 = 7LL;
      uint64_t v27 = swift_allocObject(&unk_CA578, 32LL, 7LL);
      uint64_t v28 = v236;
      __n128 v29 = v266;
      uint64_t v30 = v27;
      uint64_t v31 = v268;
      uint64_t v204 = v30;
      *(void *)(v30 + 16) = v235;
      *(void *)(v30 + 24) = v28;
      sub_1B9C8(v31, v29);
      uint64_t v32 = *(unsigned __int8 *)(v261 + 80);
      uint64_t v199 = (v32 + 16) & ~v32;
      uint64_t v211 = swift_allocObject(&unk_CA5A0, v199 + v262, v210 | v32);
      uint64_t v33 = sub_1BC00(v266, (void *)(v211 + v199));
      uint64_t v222 = (os_log_s *)Logger.logObject.getter(v33);
      int v223 = static os_log_type_t.debug.getter();
      uint64_t v202 = &v302;
      uint64_t v302 = 22LL;
      unint64_t v200 = sub_7788();
      unint64_t v201 = sub_77F0();
      unint64_t v34 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v303, v202, &type metadata for UInt32, &type metadata for Int, v200, v201, v34);
      uint32_t v203 = v303;
      uint64_t v207 = 17LL;
      uint64_t v35 = swift_allocObject(&unk_CA5C8, 17LL, v210);
      uint64_t v36 = v207;
      uint64_t v37 = v210;
      uint64_t v213 = v35;
      int v206 = 32;
      *(_BYTE *)(v35 + 16) = 32;
      uint64_t v38 = swift_allocObject(&unk_CA5F0, v36, v37);
      uint64_t v39 = v209;
      uint64_t v40 = v210;
      uint64_t v214 = v38;
      int v208 = 8;
      *(_BYTE *)(v38 + 16) = 8;
      uint64_t v41 = swift_allocObject(&unk_CA618, v39, v40);
      uint64_t v42 = v209;
      uint64_t v43 = v210;
      uint64_t v44 = v41;
      uint64_t v45 = v204;
      uint64_t v205 = v44;
      *(void *)(v44 + 16) = sub_1BB30;
      *(void *)(v44 + 24) = v45;
      uint64_t v46 = swift_allocObject(&unk_CA640, v42, v43);
      uint64_t v47 = v207;
      uint64_t v48 = v210;
      uint64_t v49 = v46;
      uint64_t v50 = v205;
      uint64_t v215 = v49;
      *(void *)(v49 + 16) = sub_88B8;
      *(void *)(v49 + 24) = v50;
      uint64_t v51 = swift_allocObject(&unk_CA668, v47, v48);
      uint64_t v52 = v207;
      uint64_t v53 = v210;
      uint64_t v216 = v51;
      *(_BYTE *)(v51 + 16) = v206;
      uint64_t v54 = swift_allocObject(&unk_CA690, v52, v53);
      uint64_t v55 = v209;
      uint64_t v56 = v210;
      uint64_t v217 = v54;
      *(_BYTE *)(v54 + 16) = v208;
      uint64_t v57 = swift_allocObject(&unk_CA6B8, v55, v56);
      uint64_t v58 = v209;
      uint64_t v59 = v210;
      uint64_t v60 = v57;
      uint64_t v61 = v211;
      uint64_t v212 = v60;
      *(void *)(v60 + 16) = sub_1BCBC;
      *(void *)(v60 + 24) = v61;
      uint64_t v62 = swift_allocObject(&unk_CA6E0, v58, v59);
      uint64_t v63 = v212;
      uint64_t v219 = v62;
      *(void *)(v62 + 16) = sub_88B8;
      *(void *)(v62 + 24) = v63;
      uint64_t v221 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v218 = _allocateUninitializedArray<A>(_:)(6LL, v221);
      uint64_t v220 = v64;
      swift_retain();
      uint64_t v65 = v213;
      unint64_t v66 = v220;
      *uint64_t v220 = sub_884C;
      v66[1] = v65;
      swift_retain();
      uint64_t v67 = v214;
      uint64_t v68 = v220;
      v220[2] = sub_884C;
      v68[3] = v67;
      swift_retain();
      uint64_t v69 = v215;
      uint64_t v70 = v220;
      v220[4] = sub_8900;
      v70[5] = v69;
      swift_retain();
      uint64_t v71 = v216;
      uint64_t v72 = v220;
      v220[6] = sub_884C;
      v72[7] = v71;
      swift_retain();
      uint64_t v73 = v217;
      uint64_t v74 = v220;
      v220[8] = sub_884C;
      v74[9] = v73;
      swift_retain();
      uint64_t v75 = v218;
      uint64_t v76 = v219;
      uint64_t v77 = v220;
      v220[10] = sub_8900;
      v77[11] = v76;
      sub_6648();
      swift_bridgeObjectRelease(v75);
      if (os_log_type_enabled(v222, (os_log_type_t)v223))
      {
        uint64_t v78 = v253;
        uint64_t v191 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
        uint64_t v190 = sub_5150(&qword_D6B60);
        uint64_t v192 = sub_74D0(0LL, v190, v190);
        uint64_t v193 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v195 = &v289;
        v289 = v191;
        uint64_t v196 = &v288;
        uint64_t v288 = v192;
        uint64_t v197 = &v287;
        uint64_t v287 = v193;
        unsigned int v194 = 2;
        sub_7528(2LL, &v289);
        sub_7528(v194, v195);
        v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v286 = v213;
        sub_753C(&v285, (uint64_t)v195, (uint64_t)v196, (uint64_t)v197);
        uint64_t v198 = v78;
        if (v78)
        {
          __break(1u);
        }

        else
        {
          v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v286 = v214;
          sub_753C(&v285, (uint64_t)&v289, (uint64_t)&v288, (uint64_t)&v287);
          uint64_t v189 = 0LL;
          uint64_t v79 = v189;
          v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v286 = v215;
          sub_753C(&v285, (uint64_t)&v289, (uint64_t)&v288, (uint64_t)&v287);
          uint64_t v188 = v79;
          v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v286 = v216;
          sub_753C(&v285, (uint64_t)&v289, (uint64_t)&v288, (uint64_t)&v287);
          uint64_t v187 = 0LL;
          v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v286 = v217;
          sub_753C(&v285, (uint64_t)&v289, (uint64_t)&v288, (uint64_t)&v287);
          uint64_t v186 = 0LL;
          v285 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v286 = v219;
          sub_753C(&v285, (uint64_t)&v289, (uint64_t)&v288, (uint64_t)&v287);
          _os_log_impl(&dword_0, v222, (os_log_type_t)v223, "button with label: %s link: %s", v191, v203);
          sub_7580(v192, 0LL);
          sub_7580(v193, 2LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v255 + 8))(v259, v254);
      sub_1BE80();
      id v185 = sub_EB60();
      id v301 = v185;
      swift_bridgeObjectRetain(v236);
      if (v236)
      {
        uint64_t v183 = v235;
        uint64_t v184 = v236;
        uint64_t v180 = v236;
        NSString v181 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v180);
        __n128 v182 = v181;
      }

      else
      {
        __n128 v182 = 0LL;
      }

      id v176 = v182;
      objc_msgSend(v185, "setText:");

      uint64_t v177 = type metadata accessor for URL(0LL);
      uint64_t v178 = *(void *)(v177 - 8);
      uint64_t v179 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48);
      if (((uint64_t (*)(char *, uint64_t))v179)(v268, 1LL) != 1)
      {
        sub_1BEE4();
        id v174 = sub_EB60();
        id v290 = v174;
        sub_1B9C8(v268, v264);
        BOOL v80 = v179(v264, 1LL, v177) == 1;
        if (v80)
        {
          uint64_t v173 = 0LL;
        }

        else
        {
          URL._bridgeToObjectiveC()((NSURL *)v80);
          uint64_t v172 = v81;
          (*(void (**)(char *, uint64_t))(v178 + 8))(v264, v177);
          uint64_t v173 = v172;
        }

        id v166 = v173;
        objc_msgSend(v174, "setPunchOutUri:");

        uint64_t v169 = sub_5150(&qword_D73F0);
        uint64_t v168 = _allocateUninitializedArray<A>(_:)(1LL, v169);
        Swift::String v167 = v82;
        id v83 = v174;
        uint64_t v84 = v168;
        *Swift::String v167 = v174;
        sub_6648();
        uint64_t v170 = v84;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v170);
        [v185 setCommands:isa];
      }

      else
      {
        uint64_t v299 = v233;
        uint64_t v300 = v234;
        BOOL v165 = v234 != 0;
        if (v234)
        {
          uint64_t v162 = sub_5150(&qword_D73F0);
          uint64_t v163 = _allocateUninitializedArray<A>(_:)(1LL, v162);
          __n128 v164 = v85;
          swift_bridgeObjectRetain(v234);
          if (v234)
          {
            uint64_t v160 = v233;
            uint64_t v161 = v234;
          }

          else
          {
            LOBYTE(v109) = 2;
            _assertionFailure(_:_:file:line:flags:)(v250, 11LL, 2LL, v251, 57LL, 2LL, v252, 61LL, v109, 250LL, 0);
            __break(1u);
          }

          uint64_t v156 = v161;
          uint64_t v153 = v160;
          uint64_t v155 = v292;
          sub_454C(v249 + 16, (uint64_t)v292);
          uint64_t v152 = v293;
          uint64_t v151 = v294;
          sub_8C74(v155, v293);
          BOOL v86 = *(void (**)(uint64_t))(v151 + 8);
          uint64_t v154 = &v291;
          v86(v152);
          id v157 = sub_49CE4(v153, v156, v154);
          sub_4598(v154);
          sub_4598(v155);
          swift_bridgeObjectRelease(v156);
          uint64_t v87 = v163;
          *__n128 v164 = v157;
          sub_6648();
          uint64_t v158 = v87;
          Class v159 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v158);
          [v185 setCommands:v159];
        }

        else
        {
          uint64_t v148 = sub_5150(&qword_D73F0);
          uint64_t v147 = _allocateUninitializedArray<A>(_:)(1LL, v148);
          Swift::String v146 = v88;
          uint64_t v144 = v296;
          sub_454C(v249 + 16, (uint64_t)v296);
          uint64_t v142 = v297;
          uint64_t v141 = v298;
          sub_8C74(v144, v297);
          Swift::String v89 = *(void (**)(uint64_t))(v141 + 8);
          uint64_t v143 = &v295;
          v89(v142);
          id v145 = sub_49CE4(v237, (uint64_t)v238, v143);
          sub_4598(v143);
          sub_4598(v144);
          uint64_t v90 = v147;
          *Swift::String v146 = v145;
          sub_6648();
          uint64_t v149 = v90;
          Class v150 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v149);
          [v185 setCommands:v150];
        }
      }

      unint64_t v137 = sub_1B964();
      uint64_t v138 = _allocateUninitializedArray<A>(_:)(1LL, v137);
      uint64_t v136 = v91;
      id v92 = v185;
      uint64_t v93 = v138;
      *uint64_t v136 = v185;
      sub_6648();
      uint64_t v139 = v93;

      swift_bridgeObjectRelease(v234);
      sub_1BA84((uint64_t)v268);
      swift_bridgeObjectRelease(v236);
      sub_18AC8((uint64_t)v277);
      swift_bridgeObjectRelease(v238);
      sub_4598(v330);
      return v139;
    }

    else
    {
      uint64_t v134 = 0LL;
      unint64_t v94 = sub_1B964();
      uint64_t v135 = _allocateUninitializedArray<A>(_:)(v134, v94);
      swift_bridgeObjectRelease(v234);
      sub_1BA84((uint64_t)v268);
      swift_bridgeObjectRelease(v236);
      sub_18AC8((uint64_t)v277);
      swift_bridgeObjectRelease(v238);
      sub_4598(v330);
      return v135;
    }
  }

  uint64_t v96 = v257;
  uint64_t v97 = sub_AD514();
  uint64_t v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v255 + 16))(v96, v97, v254);
  unint64_t v130 = (os_log_s *)Logger.logObject.getter(v98);
  int v129 = static os_log_type_t.debug.getter();
  uint64_t v127 = &v320;
  uint64_t v320 = 2LL;
  unint64_t v125 = sub_7788();
  unint64_t v126 = sub_77F0();
  unint64_t v99 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v321, v127, &type metadata for UInt32, &type metadata for Int, v125, v126, v99);
  uint32_t v128 = v321[0];
  uint64_t v100 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v131 = _allocateUninitializedArray<A>(_:)(0LL, v100);
  if (os_log_type_enabled(v130, (os_log_type_t)v129))
  {
    uint64_t v101 = v253;
    uint64_t v115 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v113 = sub_5150(&qword_D6B60);
    uint64_t v114 = 0LL;
    uint64_t v116 = sub_74D0(0LL, v113, v113);
    uint64_t v117 = sub_74D0(v114, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    unint64_t v121 = &v319;
    v319 = v115;
    uint64_t v122 = &v318;
    uint64_t v318 = v116;
    uint64_t v119 = &v317;
    uint64_t v317 = v117;
    unsigned int v118 = 0;
    sub_7528(0LL, &v319);
    sub_7528(v118, v121);
    uint64_t v316 = v131;
    uint64_t v120 = &v110;
    __chkstk_darwin(v102);
    int v103 = v122;
    uint64_t v104 = &v110 - 6;
    uint64_t v123 = &v110 - 6;
    v104[2] = (uint64_t)v121;
    v104[3] = (uint64_t)v103;
    v104[4] = v105;
    uint64_t v124 = sub_5150(&qword_D6B78);
    unint64_t v106 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v123, v124, v106);
    if (v101)
    {
      __break(1u);
    }

    else
    {
      _os_log_impl(&dword_0, v130, (os_log_type_t)v129, "not creating snippets for device type", v115, v128);
      uint64_t v112 = 0LL;
      sub_7580(v116, 0LL);
      sub_7580(v117, v112);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v131);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v131);
  }

  (*(void (**)(char *, uint64_t))(v255 + 8))(v257, v254);
  uint64_t v110 = 0LL;
  unint64_t v107 = sub_1B964();
  uint64_t v111 = _allocateUninitializedArray<A>(_:)(v110, v107);
  sub_4598(v330);
  return v111;
}

uint64_t sub_183EC(uint64_t a1, void *a2)
{
  v3._countAndFlagsBits = a1;
  v3._object = a2;
  swift_bridgeObjectRetain(a2);
  Swift::String v4 = v3;
  if (v3._object)
  {
    Swift::String v5 = v4;
  }

  else
  {
    Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-", 1uLL, 1);
    sub_8DD8((uint64_t)&v4);
  }

  return v5._countAndFlagsBits;
}

uint64_t sub_18484(uint64_t a1)
{
  uint64_t v8 = a1;
  unint64_t v9 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v10 = (uint64_t)&v5 - v9;
  sub_1B9C8(v2, (char *)&v5 - v9);
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(v10, 1LL) == 1)
  {
    uint64_t v6 = 0LL;
    sub_1BA84(v10);
    v7._countAndFlagsBits = (uint64_t)v6;
    v7._object = v6;
  }

  else
  {
    v5._countAndFlagsBits = URL.absoluteString.getter();
    v5._object = v3;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    Swift::String v7 = v5;
  }

  Swift::String v13 = v7;
  if (v7._object)
  {
    Swift::String v14 = v13;
  }

  else
  {
    Swift::String v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-", 1uLL, 1);
    sub_8DD8((uint64_t)&v13);
  }

  return v14._countAndFlagsBits;
}

double sub_18604@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X8>)
{
  uint64_t v47 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v43 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  swift_bridgeObjectRetain(a2);
  if (!a2) {
    return sub_2B828(a5);
  }
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button", 6uLL, 1);
  object = v5._object;
  Swift::Bool v29 = String.hasPrefix(_:)(v5);
  swift_bridgeObjectRelease(object);
  if (v29)
  {
    swift_bridgeObjectRetain(a2);
    uint64_t v43 = a1;
    uint64_t v44 = a2;
  }

  else
  {
    Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button", 6uLL, 1);
    Swift::String v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dal", 3uLL, 1);
    uint64_t v26 = v7._object;
    Swift::Bool v27 = String.hasPrefix(_:)(v7);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRetain(a2);
    if (v27)
    {
      unint64_t v8 = sub_1BF48();
      Collection.dropFirst(_:)(v36, 3LL, &type metadata for String, v8);
      uint64_t v21 = v36[3];
      uint64_t v22 = String.init(_:)(v36[0], v36[1], v36[2]);
      Swift::String v23 = v9;
      swift_bridgeObjectRelease(v21);
      uint64_t v24 = v22;
      char v25 = v23;
    }

    else
    {
      uint64_t v24 = a1;
      char v25 = a2;
    }

    uint64_t v19 = static String.+ infix(_:_:)(v6._countAndFlagsBits, v6._object, v24);
    uint64_t v20 = v10;
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v6._object);
    uint64_t v43 = v19;
    uint64_t v44 = v20;
  }

  swift_bridgeObjectRetain(a4);
  uint64_t v12 = v43;
  Swift::String v13 = v44;
  swift_bridgeObjectRetain(v44);
  sub_2A7A4(a3, a4, v12, v13, v52);
  sub_454C(v34 + 16, (uint64_t)v40);
  uint64_t v15 = v41;
  uint64_t v14 = v42;
  sub_8C74(v40, v41);
  (*(void (**)(uint64_t))(v14 + 24))(v15);
  sub_454C(v34 + 16, (uint64_t)v37);
  uint64_t v17 = v38;
  uint64_t v16 = v39;
  sub_8C74(v37, v38);
  id v18 = (id)(*(uint64_t (**)(uint64_t))(v16 + 32))(v17);
  sub_2FE10((uint64_t)v52, v18, a5);

  sub_4598(v37);
  swift_release();
  sub_4598(v40);
  sub_1B21C(v52);
  sub_8DD8((uint64_t)&v43);
  swift_bridgeObjectRelease(a2);
  return result;
}

void *sub_18998(void *a1, void *a2)
{
  uint64_t v7 = sub_5150(&qword_D7300);
  if (swift_getEnumCaseMultiPayload(a1, v7) == 1)
  {
    uint64_t v4 = *a1;
    swift_errorRetain(*a1);
    *a2 = v4;
    ((void (*)(void))swift_storeEnumTagMultiPayload)();
  }

  else
  {
    uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, void *))(*(void *)(v2 - 8) + 16LL))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v7, 0LL);
  }

  return a2;
}

uint64_t sub_18A48()
{
  return sub_11198(*(void *)(v0 + 16));
}

void *sub_18A50(void *a1)
{
  uint64_t v1 = sub_5150(&qword_D7300);
  if (swift_getEnumCaseMultiPayload(a1, v1) == 1)
  {
    swift_errorRelease(*a1);
  }

  else
  {
    uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *))(*(void *)(v2 - 8) + 8LL))(a1);
  }

  return a1;
}

uint64_t sub_18AC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DialogServiceButton(0LL);
  uint64_t v3 = *(int *)(v2 + 20);
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(v2 + 24) + 8));
  return a1;
}

uint64_t sub_18B84(uint64_t a1)
{
  *(void *)(v2 + 16) = v2;
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = v1[8];
  uint64_t v3 = (void *)swift_task_alloc(dword_D731C);
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_65B4;
  return sub_EC88(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_18C5C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v171 = a3;
  int v217 = a1;
  uint64_t v225 = a2;
  uint64_t v172 = "Fatal error";
  uint64_t v173 = "Unexpectedly found nil while unwrapping an Optional value";
  id v174 = "SocialConversationFlowDelegatePlugin/CannedDialogHelper.swift";
  uint64_t v271 = 0LL;
  v270 = 0LL;
  uint64_t v269 = 0LL;
  v268 = 0LL;
  unint64_t v267 = 0LL;
  v266 = 0LL;
  unint64_t v265 = 0LL;
  v264 = 0LL;
  char v263 = 0;
  uint64_t v262 = 0LL;
  uint64_t v261 = 0LL;
  uint64_t v257 = 0LL;
  v256[0] = 0LL;
  v256[1] = 0LL;
  v251 = 0LL;
  uint64_t v249 = 0LL;
  uint64_t v250 = 0LL;
  uint64_t v248 = 0LL;
  v247[0] = 0LL;
  v247[1] = 0LL;
  uint64_t v241 = 0LL;
  uint64_t v242 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v212 = 0LL;
  uint64_t v176 = type metadata accessor for Siri_Nlu_External_SystemInformed();
  uint64_t v177 = *(void *)(v176 - 8);
  unint64_t v178 = (*(void *)(v177 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  uint64_t v179 = (char *)&v87 - v178;
  unint64_t v180 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v5);
  NSString v181 = (char *)&v87 - v180;
  uint64_t v271 = (char *)&v87 - v180;
  uint64_t v182 = type metadata accessor for Siri_Nlu_External_SystemGaveOptions(v7);
  uint64_t v183 = *(void *)(v182 - 8);
  unint64_t v184 = (*(void *)(v183 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  id v185 = (char *)&v87 - v184;
  unint64_t v186 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v9);
  uint64_t v187 = (char *)&v87 - v186;
  v270 = (char *)&v87 - v186;
  uint64_t v188 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(v11);
  uint64_t v189 = *(void *)(v188 - 8);
  unint64_t v190 = (*(void *)(v189 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v12);
  uint64_t v191 = (char *)&v87 - v190;
  uint64_t v269 = (char *)&v87 - v190;
  uint64_t v192 = type metadata accessor for Siri_Nlu_External_UserStatedTask(v13);
  uint64_t v193 = *(void *)(v192 - 8);
  unint64_t v194 = (*(void *)(v193 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v15 = __chkstk_darwin(v14);
  uint64_t v195 = (char *)&v87 - v194;
  unint64_t v196 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v15);
  uint64_t v197 = (char *)&v87 - v196;
  v268 = (char *)&v87 - v196;
  uint64_t v198 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v17);
  uint64_t v199 = *(void *)(v198 - 8);
  unint64_t v200 = (*(void *)(v199 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v19 = __chkstk_darwin(v18);
  unint64_t v201 = (char *)&v87 - v200;
  unint64_t v202 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v19);
  uint32_t v203 = (char *)&v87 - v202;
  unint64_t v267 = (char *)&v87 - v202;
  unint64_t v204 = (*(void *)(*(void *)(sub_5150(&qword_D7408) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v22 = __chkstk_darwin(v21);
  uint64_t v205 = (char *)&v87 - v204;
  unint64_t v206 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v24 = __chkstk_darwin(v22);
  uint64_t v207 = (char *)&v87 - v206;
  v266 = (char *)&v87 - v206;
  unint64_t v208 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v26 = __chkstk_darwin(v24);
  uint64_t v209 = (char *)&v87 - v208;
  unint64_t v210 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v26);
  uint64_t v211 = (char *)&v87 - v210;
  unint64_t v265 = (char *)&v87 - v210;
  uint64_t v213 = type metadata accessor for NLContextUpdate(v28);
  uint64_t v214 = *(void *)(v213 - 8);
  unint64_t v215 = (*(void *)(v214 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v29);
  uint64_t v216 = (char *)&v87 - v215;
  v264 = (char *)&v87 - v215;
  uint64_t v218 = type metadata accessor for Logger(v30);
  uint64_t v219 = *(void *)(v218 - 8);
  uint64_t v221 = *(void *)(v219 + 64);
  unint64_t v220 = (v221 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v32 = __chkstk_darwin(v31);
  uint64_t v222 = (char *)&v87 - v220;
  unint64_t v223 = (v221 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v32);
  BOOL v224 = (char *)&v87 - v223;
  char v263 = v33 & 1;
  uint64_t v262 = v34;
  uint64_t v261 = v3;
  swift_bridgeObjectRetain(v34);
  uint64_t v228 = &v260;
  uint64_t v260 = v225;
  uint64_t v226 = sub_5150(&qword_D7350);
  unint64_t v227 = sub_1BFB0();
  int v229 = Collection.isEmpty.getter(v226);
  sub_1B82C(v228);
  if ((v229 & 1) != 0)
  {
    uint64_t v35 = v224;
    uint64_t v36 = sub_AD514();
    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v219 + 16))(v35, v36, v218);
    uint64_t v169 = (os_log_s *)Logger.logObject.getter(v37);
    int v168 = static os_log_type_t.debug.getter();
    id v166 = &v234;
    uint64_t v234 = 2LL;
    unint64_t v164 = sub_7788();
    unint64_t v165 = sub_77F0();
    unint64_t v38 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v235, v166, &type metadata for UInt32, &type metadata for Int, v164, v165, v38);
    uint32_t v167 = v235;
    uint64_t v39 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v170 = _allocateUninitializedArray<A>(_:)(0LL, v39);
    if (os_log_type_enabled(v169, (os_log_type_t)v168))
    {
      uint64_t v40 = v175;
      uint64_t v154 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v152 = sub_5150(&qword_D6B60);
      uint64_t v153 = 0LL;
      uint64_t v155 = sub_74D0(0LL, v152, v152);
      uint64_t v156 = sub_74D0(v153, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v160 = &v233;
      uint64_t v233 = v154;
      uint64_t v161 = &v232;
      uint64_t v232 = v155;
      uint64_t v158 = &v231;
      uint64_t v231 = v156;
      unsigned int v157 = 0;
      sub_7528(0LL, &v233);
      sub_7528(v157, v160);
      uint64_t v230 = v170;
      Class v159 = &v87;
      __chkstk_darwin(v41);
      uint64_t v42 = v161;
      uint64_t v43 = &v87 - 6;
      uint64_t v162 = &v87 - 6;
      v43[2] = (uint64_t)v160;
      v43[3] = (uint64_t)v42;
      v43[4] = v44;
      uint64_t v163 = sub_5150(&qword_D6B78);
      unint64_t v45 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v162, v163, v45);
      if (v40)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v169, (os_log_type_t)v168, "Received empty intents for context update", v154, v167);
        uint64_t v151 = 0LL;
        sub_7580(v155, 0LL);
        sub_7580(v156, v151);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v170);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v170);
    }

    (*(void (**)(char *, uint64_t))(v219 + 8))(v224, v218);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v171, 1LL, 1LL, v213);
  }

  else
  {
    uint64_t v47 = v222;
    uint64_t v48 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v219 + 16))(v47, v48, v218);
    swift_bridgeObjectRetain(v225);
    uint64_t v140 = 7LL;
    uint64_t v49 = swift_allocObject(&unk_CA708, 24LL, 7LL);
    uint64_t v141 = v49;
    *(void *)(v49 + 16) = v225;
    uint64_t v149 = (os_log_s *)Logger.logObject.getter(v49);
    int v150 = static os_log_type_t.debug.getter();
    uint64_t v136 = &v258;
    uint64_t v258 = 12LL;
    unint64_t v134 = sub_7788();
    unint64_t v135 = sub_77F0();
    unint64_t v50 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v259, v136, &type metadata for UInt32, &type metadata for Int, v134, v135, v50);
    uint32_t v137 = v259;
    uint64_t v138 = 17LL;
    uint64_t v51 = swift_allocObject(&unk_CA730, 17LL, v140);
    uint64_t v52 = v138;
    uint64_t v53 = v140;
    uint64_t v143 = v51;
    *(_BYTE *)(v51 + 16) = 32;
    uint64_t v54 = swift_allocObject(&unk_CA758, v52, v53);
    uint64_t v55 = v140;
    uint64_t v144 = v54;
    *(_BYTE *)(v54 + 16) = 8;
    uint64_t v139 = 32LL;
    uint64_t v56 = swift_allocObject(&unk_CA780, 32LL, v55);
    uint64_t v57 = v139;
    uint64_t v58 = v140;
    uint64_t v59 = v56;
    uint64_t v60 = v141;
    uint64_t v142 = v59;
    *(void *)(v59 + 16) = sub_1C05C;
    *(void *)(v59 + 24) = v60;
    uint64_t v61 = swift_allocObject(&unk_CA7A8, v57, v58);
    uint64_t v62 = v142;
    uint64_t v146 = v61;
    *(void *)(v61 + 16) = sub_88B8;
    *(void *)(v61 + 24) = v62;
    uint64_t v148 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v145 = _allocateUninitializedArray<A>(_:)(3LL, v148);
    uint64_t v147 = v63;
    swift_retain();
    uint64_t v64 = v143;
    uint64_t v65 = v147;
    void *v147 = sub_884C;
    v65[1] = v64;
    swift_retain();
    uint64_t v66 = v144;
    uint64_t v67 = v147;
    v147[2] = sub_884C;
    v67[3] = v66;
    swift_retain();
    uint64_t v68 = v145;
    uint64_t v69 = v146;
    uint64_t v70 = v147;
    v147[4] = sub_8900;
    v70[5] = v69;
    sub_6648();
    swift_bridgeObjectRelease(v68);
    if (os_log_type_enabled(v149, (os_log_type_t)v150))
    {
      uint64_t v71 = v175;
      uint64_t v127 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v126 = sub_5150(&qword_D6B60);
      uint64_t v128 = sub_74D0(0LL, v126, v126);
      uint64_t v129 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      unint64_t v130 = &v240;
      v240 = v127;
      uint64_t v131 = &v239;
      uint64_t v239 = v128;
      uint64_t v132 = &v238;
      uint64_t v238 = v129;
      sub_7528(2LL, &v240);
      sub_7528(1LL, v130);
      uint64_t v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v237 = v143;
      sub_753C(&v236, (uint64_t)v130, (uint64_t)v131, (uint64_t)v132);
      uint64_t v133 = v71;
      if (v71)
      {
        __break(1u);
      }

      else
      {
        uint64_t v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v237 = v144;
        sub_753C(&v236, (uint64_t)&v240, (uint64_t)&v239, (uint64_t)&v238);
        uint64_t v124 = 0LL;
        uint64_t v73 = v124;
        uint64_t v236 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v237 = v146;
        sub_753C(&v236, (uint64_t)&v240, (uint64_t)&v239, (uint64_t)&v238);
        uint64_t v123 = v73;
        _os_log_impl(&dword_0, v149, (os_log_type_t)v150, "Creating NL context update for %s", v127, v137);
        sub_7580(v128, 0LL);
        sub_7580(v129, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v125 = v123;
      }
    }

    else
    {
      uint64_t v72 = v175;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v125 = v72;
    }

    uint64_t v122 = v125;

    uint64_t v74 = (*(uint64_t (**)(char *, uint64_t))(v219 + 8))(v222, v218);
    NLContextUpdate.init()(v74);
    if ((v217 & 1) != 0)
    {
      uint64_t v248 = _allocateUninitializedArray<A>(_:)(0LL, v198);
      swift_bridgeObjectRetain(v225);
      uint64_t v246 = v225;
      Collection<>.makeIterator()(v247, v226, v227);
      for (uint64_t i = v122; ; uint64_t i = v118)
      {
        uint64_t v118 = i;
        uint64_t v75 = sub_5150(&qword_D7418);
        IndexingIterator.next()(&v244, v75);
        uint64_t v119 = v244;
        uint64_t v120 = v245;
        if (!v245) {
          break;
        }
        uint64_t v116 = v119;
        uint64_t v117 = v120;
        uint64_t v113 = v120;
        uint64_t v241 = v119;
        uint64_t v242 = v120;
        sub_1A0DC(v119, v120, (uint64_t)v211);
        uint64_t v114 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
        uint64_t v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48LL);
        if (((uint64_t (*)(char *, uint64_t))v115)(v211, 1LL) != 1)
        {
          uint64_t v76 = Siri_Nlu_External_UserDialogAct.init()();
          Siri_Nlu_External_UserStatedTask.init()(v76);
          sub_1C20C(v211, v209);
          if (v115(v209, 1LL, v114) == 1)
          {
            LOBYTE(v86) = 2;
            _assertionFailure(_:_:file:line:flags:)(v172, 11LL, 2LL, v173, 57LL, 2LL, v174, 61LL, v86, 306LL, 0);
            __break(1u);
          }

          Siri_Nlu_External_UserStatedTask.task.setter(v209);
          (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v195, v197, v192);
          Siri_Nlu_External_UserDialogAct.userStatedTask.setter(v195);
          (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v201, v203, v198);
          uint64_t v77 = sub_5150(&qword_D7430);
          Array.append(_:)(v201, v77);
          (*(void (**)(char *, uint64_t))(v193 + 8))(v197, v192);
          (*(void (**)(char *, uint64_t))(v199 + 8))(v203, v198);
        }

        sub_1C19C((uint64_t)v211);
        swift_bridgeObjectRelease(v113);
      }

      sub_1B82C(v247);
      uint64_t v110 = v248;
      swift_bridgeObjectRetain(v248);
      swift_bridgeObjectRetain(v110);
      int v109 = &v243;
      uint64_t v243 = v110;
      uint64_t v108 = sub_5150(&qword_D7430);
      sub_1C2C8();
      int v111 = Collection.isEmpty.getter(v108);
      sub_1B82C(v109);
      swift_bridgeObjectRelease(v110);
      if ((v111 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v171, 1LL, 1LL, v213);
        sub_1B82C(&v248);
        return (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v216, v213);
      }

      uint64_t v78 = Siri_Nlu_External_SystemDialogAct.init()();
      Siri_Nlu_External_SystemGaveOptions.init()(v78);
      unint64_t v107 = &v248;
      uint64_t v105 = v248;
      swift_bridgeObjectRetain(v248);
      Siri_Nlu_External_SystemGaveOptions.choices.setter(v105);
      (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v185, v187, v182);
      Siri_Nlu_External_SystemDialogAct.gaveOptions.setter(v185);
      uint64_t v106 = _allocateUninitializedArray<A>(_:)(1LL, v188);
      (*(void (**)(uint64_t, char *, uint64_t))(v189 + 16))(v79, v191, v188);
      uint64_t v80 = v106;
      sub_6648();
      NLContextUpdate.nluSystemDialogActs.setter(v80);
      (*(void (**)(char *, uint64_t))(v183 + 8))(v187, v182);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v191, v188);
      sub_1B82C(v107);
    }

    else
    {
      uint64_t v102 = 0LL;
      uint64_t v103 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
      uint64_t v257 = _allocateUninitializedArray<A>(_:)(v102, v103);
      swift_bridgeObjectRetain(v225);
      uint64_t v255 = v225;
      Collection<>.makeIterator()(v256, v226, v227);
      for (uint64_t j = v122; ; uint64_t j = v99)
      {
        uint64_t v99 = j;
        uint64_t v81 = sub_5150(&qword_D7418);
        IndexingIterator.next()(&v253, v81);
        uint64_t v100 = v253;
        uint64_t v101 = v254;
        if (!v254) {
          break;
        }
        uint64_t v97 = v100;
        uint64_t v98 = v101;
        uint64_t v95 = v101;
        uint64_t v249 = v100;
        uint64_t v250 = v101;
        sub_1A0DC(v100, v101, (uint64_t)v207);
        uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v103 - 8) + 48LL);
        if (((uint64_t (*)(char *, uint64_t))v96)(v207, 1LL) != 1)
        {
          sub_1C20C(v207, v205);
          if (v96(v205, 1LL, v103) == 1)
          {
            LOBYTE(v86) = 2;
            _assertionFailure(_:_:file:line:flags:)(v172, 11LL, 2LL, v173, 57LL, 2LL, v174, 61LL, v86, 326LL, 0);
            __break(1u);
          }

          uint64_t v82 = sub_5150(&qword_D7420);
          Array.append(_:)(v205, v82);
        }

        sub_1C19C((uint64_t)v207);
        swift_bridgeObjectRelease(v95);
      }

      sub_1B82C(v256);
      uint64_t v92 = v257;
      swift_bridgeObjectRetain(v257);
      swift_bridgeObjectRetain(v92);
      uint64_t v91 = &v252;
      uint64_t v252 = v92;
      uint64_t v90 = sub_5150(&qword_D7420);
      sub_1C12C();
      int v93 = Collection.isEmpty.getter(v90);
      sub_1B82C(v91);
      swift_bridgeObjectRelease(v92);
      if ((v93 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v171, 1LL, 1LL, v213);
        sub_1B82C(&v257);
        return (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v216, v213);
      }

      v251 = v191;
      uint64_t v83 = Siri_Nlu_External_SystemDialogAct.init()();
      Siri_Nlu_External_SystemInformed.init()(v83);
      Swift::String v89 = &v257;
      uint64_t v87 = v257;
      swift_bridgeObjectRetain(v257);
      Siri_Nlu_External_SystemInformed.entities.setter(v87);
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v179, v181, v176);
      Siri_Nlu_External_SystemDialogAct.informed.setter(v179);
      uint64_t v88 = _allocateUninitializedArray<A>(_:)(1LL, v188);
      (*(void (**)(uint64_t, char *, uint64_t))(v189 + 16))(v84, v191, v188);
      uint64_t v85 = v88;
      sub_6648();
      NLContextUpdate.nluSystemDialogActs.setter(v85);
      (*(void (**)(char *, uint64_t))(v177 + 8))(v181, v176);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v191, v188);
      sub_1B82C(v89);
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v214 + 16))(v171, v216, v213);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v214 + 56))(v171, 0LL, 1LL, v213);
    return (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v216, v213);
  }

uint64_t sub_1A04C()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(",", 1uLL, 1);
  uint64_t v3 = sub_5150(&qword_D7350);
  unint64_t v1 = sub_1C950();
  uint64_t v4 = BidirectionalCollection<>.joined(separator:)(v0._countAndFlagsBits, v0._object, v3, v1);
  swift_bridgeObjectRelease(v0._object);
  return v4;
}

uint64_t sub_1A0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v61 = 0LL;
  uint64_t v59 = 0LL;
  uint64_t v60 = 0LL;
  uint64_t v58 = 0LL;
  uint64_t v57 = 0LL;
  uint64_t v56 = 0LL;
  uint64_t v55 = 0LL;
  uint64_t v54 = 0LL;
  uint64_t v52 = 0LL;
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = (*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v27 = &v22[-v26];
  uint64_t v28 = type metadata accessor for Siri_Nlu_External_UsoGraph(v5);
  uint64_t v29 = *(void *)(v28 - 8);
  unint64_t v30 = (*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v6);
  unint64_t v50 = &v22[-v30];
  unint64_t v31 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  double v32 = &v22[-v31];
  uint64_t v61 = &v22[-v31];
  unint64_t v33 = (*(void *)(*(void *)(sub_5150(&qword_D7440) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v48 = &v22[-v33];
  uint64_t v41 = type metadata accessor for UsoIdentifier(v10);
  uint64_t v39 = *(void *)(v41 - 8);
  unint64_t v34 = (*(void *)(v39 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v12 = __chkstk_darwin(v11);
  uint64_t v40 = &v22[-v34];
  uint64_t v59 = v13;
  uint64_t v60 = v14;
  uint64_t v58 = v3;
  type metadata accessor for UsoTaskBuilder_action_common_SocialConversation(v12);
  uint64_t v44 = UsoTaskBuilder_action_common_SocialConversation.__allocating_init()();
  uint64_t v57 = v44;
  type metadata accessor for UsoEntityBuilder_common_SocialConversation(v52);
  uint64_t v42 = UsoEntityBuilder_common_SocialConversation.__allocating_init()();
  uint64_t v56 = v42;
  swift_bridgeObjectRetain(v37);
  unsigned int v47 = 1;
  Swift::String v35 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.cati", 0xEuLL, 1);
  id v38 = (id)IdentifierNamespaceGuid;
  id v15 = IdentifierNamespaceGuid;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  UsoIdentifier.init(value:appBundleId:namespace:)(v36, v37, v35._countAndFlagsBits, v35._object, v16, v17);

  dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v40);
  (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v40, v41);
  dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)(v42);
  uint64_t v46 = type metadata accessor for UsoTaskBuilder(v52);
  uint64_t v43 = _allocateUninitializedArray<A>(_:)(1LL, v46);
  unint64_t v45 = v18;
  swift_retain();
  uint64_t v19 = v43;
  *unint64_t v45 = v44;
  sub_6648();
  uint64_t v49 = v19;
  uint64_t v20 = type metadata accessor for UsoBuilderOptions(v52);
  (*(void (**)(_BYTE *, void))(*(void *)(v20 - 8) + 56LL))(v48, v47);
  uint64_t v51 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v49, v48);
  sub_1C338((uint64_t)v48);
  swift_bridgeObjectRelease(v49);
  uint64_t v55 = v51;
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
  uint64_t v53 = 0LL;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 32))(v32, v50, v28);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v29 + 16))(v23, v32, v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v23, 0LL, 1LL, v28);
  (*(void (**)(_BYTE *, uint64_t))(v29 + 8))(v32, v28);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABD8()
{
  return v2;
}

uint64_t sub_1AC2C()
{
  return swift_deallocClassInstance();
}

id sub_1AC6C()
{
  return [v0 init];
}

uint64_t sub_1AC8C()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_1ACC8()
{
  return sub_EB8C(*(void *)(v0 + 16));
}

uint64_t sub_1ACD0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1ACF8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1AD20()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1AD5C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1AD98()
{
  return swift_deallocObject(v2, 40LL);
}

uint64_t sub_1ADDC(void *a1)
{
  return sub_EBC8(a1, v1[2], v1[3], v1[4]);
}

uint64_t type metadata accessor for CannedDialogHelper(uint64_t a1)
{
  uint64_t v2 = qword_D7470;
  if (!qword_D7470) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CannedDialogHelper);
  }
  return v2;
}

unint64_t sub_1AE50()
{
  uint64_t v3 = qword_D7338;
  if (!qword_D7338)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SABaseCommand);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7338);
    return ObjCClassMetadata;
  }

  return v3;
}

unint64_t sub_1AEB4()
{
  uint64_t v3 = qword_D7340;
  if (!qword_D7340)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SAUIRepeatIt);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7340);
    return ObjCClassMetadata;
  }

  return v3;
}

void *sub_1AF18(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7310);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t *sub_1AFD4(uint64_t *result)
{
  uint64_t v3 = result;
  uint64_t v4 = result[3];
  if ((*(_DWORD *)(*(void *)(v4 - 8) + 80LL) & 0x20000) != 0)
  {
    uint64_t v1 = swift_allocBox(v4);
    double result = v2;
    *uint64_t v3 = v1;
  }

  return result;
}

uint64_t sub_1B038(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_1B0A8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B0E4()
{
  return sub_127A0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B0F0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B118()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B140()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B17C()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_1B1B8()
{
  uint64_t v3 = qword_D7348;
  if (!qword_D7348)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SAUICloseAssistant);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7348);
    return ObjCClassMetadata;
  }

  return v3;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B21C( void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[7];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
}

unint64_t sub_1B278()
{
  uint64_t v3 = qword_D7358;
  if (!qword_D7358)
  {
    uint64_t v0 = sub_8D64(&qword_D7350);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7358);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_1B2E8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B324()
{
  return sub_13A50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B330()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B358()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B380()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B3BC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B3F8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B434()
{
  return sub_13B18(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B440()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B468()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B490()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B4CC()
{
  return swift_deallocObject(v2, 32LL);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B508( void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[7];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
}

uint64_t sub_1B564()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_1B5B8()
{
  return sub_1447C((void *)(v0 + 16));
}

uint64_t sub_1B5C0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B5E8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B610()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B64C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B688@<X0>(void *a1@<X8>)
{
  return sub_144C4( *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(uint64_t **)(v1 + 48),  *(void *)(v1 + 56),  *(void **)(v1 + 64),  a1);
}

void *sub_1B6A8(const void *a1, void *a2)
{
  uint64_t v6 = sub_5150(&qword_D7300);
  if (swift_getEnumCaseMultiPayload(a1, v6))
  {
    memcpy(a2, a1, *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  else
  {
    uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, const void *))(*(void *)(v2 - 8) + 32LL))(a2, a1);
    swift_storeEnumTagMultiPayload(a2, v6, 0LL);
  }

  return a2;
}

uint64_t sub_1B748(uint64_t a1)
{
  uint64_t v4 = *(int *)(sub_5150(&qword_D7360) + 48);
  uint64_t v1 = sub_5150(&qword_D7300);
  if (swift_getEnumCaseMultiPayload(a1 + v4, v1) == 1)
  {
    swift_errorRelease(*(void *)(a1 + v4));
  }

  else
  {
    uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8LL))(a1 + v4);
  }

  return a1;
}

__n128 sub_1B7F0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B804( uint64_t a1)
{
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1B82C( void *a1)
{
}

uint64_t sub_1B854()
{
  return swift_deallocObject(v2, 32LL);
}

void sub_1B890()
{
}

uint64_t sub_1B89C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B8C4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1B8EC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1B928()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_1B964()
{
  uint64_t v3 = qword_D7380;
  if (!qword_D7380)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SAAceView);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7380);
    return ObjCClassMetadata;
  }

  return v3;
}

void *sub_1B9C8(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7378);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t sub_1BA84(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_1BAF4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1BB30()
{
  return sub_183EC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BB3C()
{
  uint64_t v1 = *(void *)(sub_5150(&qword_D7378) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = v5 + *(void *)(v1 + 64);
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  return swift_deallocObject(v3, v4);
}

void *sub_1BC00(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7378);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t sub_1BCBC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(sub_5150(&qword_D7378) - 8) + 80LL);
  return sub_18484(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1BCF0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1BD18()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1BD40()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1BD7C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1BDB8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1BDE0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1BE08()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1BE44()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_1BE80()
{
  uint64_t v3 = qword_D7388;
  if (!qword_D7388)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SAUIButton);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7388);
    return ObjCClassMetadata;
  }

  return v3;
}

unint64_t sub_1BEE4()
{
  uint64_t v3 = qword_D73F8;
  if (!qword_D73F8)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SAUIAppPunchOut);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D73F8);
    return ObjCClassMetadata;
  }

  return v3;
}

unint64_t sub_1BF48()
{
  uint64_t v2 = qword_D7400;
  if (!qword_D7400)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7400);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_1BFB0()
{
  uint64_t v3 = qword_D7410;
  if (!qword_D7410)
  {
    uint64_t v0 = sub_8D64(&qword_D7350);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7410);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_1C020()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_1C05C()
{
  return sub_1A04C();
}

uint64_t sub_1C064()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1C08C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1C0B4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1C0F0()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_1C12C()
{
  uint64_t v3 = qword_D7428;
  if (!qword_D7428)
  {
    uint64_t v0 = sub_8D64(&qword_D7420);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7428);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_1C19C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

void *sub_1C20C(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7408);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

unint64_t sub_1C2C8()
{
  uint64_t v3 = qword_D7438;
  if (!qword_D7438)
  {
    uint64_t v0 = sub_8D64(&qword_D7430);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7438);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_1C338(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UsoBuilderOptions(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_1C3A8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1C3E4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1C40C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1C434()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1C470()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1C4AC()
{
  return type metadata accessor for CannedDialogHelper(0LL);
}

uint64_t sub_1C4C4(uint64_t a1)
{
  v6[0] = "(";
  uint64_t v1 = sub_1C594(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[1] = *(void *)(v1 - 8) + 64LL;
    void v6[2] = &unk_B6C10;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 3LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_1C594(uint64_t a1)
{
  uint64_t v7 = qword_D7480;
  if (!qword_D7480)
  {
    uint64_t v1 = type metadata accessor for Date(255LL);
    unint64_t v5 = type metadata accessor for Optional(a1, v1);
    uint64_t v7 = v5;
    if (!v2)
    {
      unint64_t v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_D7480);
      return v3;
    }
  }

  return v7;
}

uint64_t sub_1C638(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  swift_retain(*a2);
  *a1 = v4;
  return *a1 + 16LL;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1C678( void *a1, const void *a2)
{
}

uint64_t sub_1C6A4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(_BYTE *)(a1 + 65)) {
      int v3 = *(_DWORD *)a1;
    }
    else {
      int v3 = -1;
    }
  }

  else
  {
    int v3 = -1;
  }

  return (v3 + 1);
}

uint64_t sub_1C784(uint64_t result, int a2, int a3)
{
  int v3 = (_BYTE *)(result + 65);
  if (a2)
  {
    *(void *)(result + 56) = 0LL;
    *(void *)(result + 48) = 0LL;
    *(void *)(result + 40) = 0LL;
    *(void *)(result + 32) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 8) = 0LL;
    *(void *)__n128 result = (a2 - 1);
    *(_BYTE *)(result + 64) = 0;
    if (a3) {
      *int v3 = 1;
    }
  }

  else if (a3)
  {
    *int v3 = 0;
  }

  return result;
}

void *type metadata accessor for CannedDialogHelper.SignpostsName()
{
  return &unk_CA8F0;
}

unint64_t sub_1C950()
{
  uint64_t v3 = qword_D75A8;
  if (!qword_D75A8)
  {
    uint64_t v0 = sub_8D64(&qword_D7350);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D75A8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_1C9C0()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_1CA14()
{
  return sub_15364((uint64_t *)(v0 + 16));
}

uint64_t sub_1CA1C()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_1CA70()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_1CAAC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CAD4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CAFC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CB38()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CB74()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CB9C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CBC4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CC00()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CC3C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CC64()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CC8C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CCC8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CD04()
{
  return swift_deallocObject(v0, 24LL);
}

uint64_t sub_1CD2C()
{
  return nullsub_1(*(void *)(v0 + 16));
}

uint64_t sub_1CD34()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_1CD70@<X0>(void *a1@<X8>)
{
  return sub_110EC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1CD78()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CDB4()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = sub_5150(&qword_D7350);
  unint64_t v1 = sub_1CE00();
  return sub_75EC(v5, v3, v4, v1);
}

unint64_t sub_1CE00()
{
  uint64_t v3 = qword_D75B0;
  if (!qword_D75B0)
  {
    uint64_t v0 = sub_8D64(&qword_D7350);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D75B0);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_1CE70()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CE98()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CEC0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CEFC()
{
  return sub_55628(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1CF08()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CF44()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1CF80()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CFA8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1CFD0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D00C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D048()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D070()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D098()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D0D4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D110()
{
  return swift_deallocObject(v0, 24LL);
}

uint64_t sub_1D138()
{
  uint64_t v1 = *(void *)(sub_5150(&qword_D7310) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = v5 + *(void *)(v1 + 64);
  uint64_t v6 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  return swift_deallocObject(v3, v4);
}

void *sub_1D1FC(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7310);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t sub_1D2B8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(sub_5150(&qword_D7310) - 8) + 80LL);
  return sub_1111C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1D2EC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D314()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D33C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D378()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D3B4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D3F0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D418()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D440()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D47C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D4B8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D4E0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D508()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D544()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_1D580(void *a1)
{
  if (a1[3]) {
    sub_4598(a1);
  }
  return a1;
}

uint64_t sub_1D5C0()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_1D5FC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D624()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_1D64C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D688()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_1D6C4()
{
  uint64_t v2 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain(*(void *)(v0 + 88));
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_1D71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 88);
  *(void *)(v2 + swift_beginAccess(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  swift_bridgeObjectRelease(v3);
  swift_endAccess(v7);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*sub_1D788())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_1D7C8()
{
  uint64_t v2 = *(void *)(v0 + 112);
  swift_retain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_1D814(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 112);
  *(void *)(v1 + swift_beginAccess(v1 + 112) = a1;
  swift_release(v2);
  swift_endAccess(v5);
  return swift_release(a1);
}

uint64_t (*sub_1D870())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_1D8B0()
{
  uint64_t v2 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_1D8FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 160);
  *(void *)(v1 + swift_beginAccess(v1 + 160) = a1;
  swift_bridgeObjectRelease(v2);
  swift_endAccess(v5);
  return swift_bridgeObjectRelease(a1);
}

uint64_t (*sub_1D958())(uint64_t a1)
{
  return sub_440C;
}

Swift::String *sub_1D998(void *a1)
{
  return sub_1D9E0(a1);
}

Swift::String *sub_1D9E0(void *a1)
{
  uint64_t v163 = a1;
  unint64_t v208 = 0LL;
  uint64_t v207 = 0LL;
  v202[0] = 0LL;
  v202[1] = 0LL;
  uint64_t v197 = 0LL;
  uint64_t v198 = 0LL;
  unint64_t v196 = 0LL;
  uint64_t v162 = 0LL;
  uint64_t v194 = 0LL;
  uint64_t v195 = 0LL;
  uint64_t v185 = 0LL;
  uint64_t v179 = type metadata accessor for Logger(0LL);
  uint64_t v178 = *(void *)(v179 - 8);
  unint64_t v164 = (*(void *)(v178 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v2 = (char *)&v107 - v164;
  unint64_t v165 = (char *)&v107 - v164;
  uint64_t v207 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v208 = v177;
  Builtin::Word v166 = 5LL;
  id v174 = &type metadata for String;
  uint64_t v168 = _allocateUninitializedArray<A>(_:)(5LL, &type metadata for String);
  uint32_t v167 = v4;
  int v171 = 1;
  Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-AU", v166, 1);
  char v6 = v171;
  Builtin::Word v7 = v166;
  *uint32_t v167 = v5;
  Swift::String v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-CA", v7, v6 & 1);
  char v9 = v171;
  Builtin::Word v10 = v166;
  v167[1] = v8;
  Swift::String v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-IN", v10, v9 & 1);
  char v12 = v171;
  Builtin::Word v13 = v166;
  v167[2] = v11;
  Swift::String v14 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-GB", v13, v12 & 1);
  char v15 = v171;
  Builtin::Word v16 = v166;
  v167[3] = v14;
  Swift::String v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-US", v16, v15 & 1);
  double v18 = (void *)v168;
  v167[4] = v17;
  sub_6648();
  v177[4]._object = v18;
  swift_release();
  Swift::String v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.SiriSocialConversation",  0x25uLL,  v171 & 1);
  v177[5] = v19;
  swift_release();
  uint64_t v170 = _allocateUninitializedArray<A>(_:)(22LL, v174);
  uint64_t v169 = v20;
  uint64_t v180 = 2LL;
  Swift::String v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ar", 2uLL, v171 & 1);
  char v22 = v171;
  Builtin::Word v23 = v180;
  *uint64_t v169 = v21;
  Swift::String v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en", v23, v22 & 1);
  char v25 = v171;
  Builtin::Word v26 = v180;
  v169[1] = v24;
  Swift::String v27 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("fr", v26, v25 & 1);
  char v28 = v171;
  Builtin::Word v29 = v180;
  v169[2] = v27;
  Swift::String v30 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("it", v29, v28 & 1);
  char v31 = v171;
  Builtin::Word v32 = v180;
  v169[3] = v30;
  Swift::String v33 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ms", v32, v31 & 1);
  char v34 = v171;
  Builtin::Word v35 = v180;
  v169[4] = v33;
  Swift::String v36 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("pt", v35, v34 & 1);
  char v37 = v171;
  Builtin::Word v38 = v180;
  v169[5] = v36;
  Swift::String v39 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("th", v38, v37 & 1);
  char v40 = v171;
  Builtin::Word v41 = v180;
  v169[6] = v39;
  Swift::String v42 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("zh", v41, v40 & 1);
  char v43 = v171;
  Builtin::Word v44 = v180;
  v169[7] = v42;
  Swift::String v45 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("da", v44, v43 & 1);
  char v46 = v171;
  Builtin::Word v47 = v180;
  v169[8] = v45;
  Swift::String v48 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("es", v47, v46 & 1);
  char v49 = v171;
  Builtin::Word v50 = v180;
  v169[9] = v48;
  Swift::String v51 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("he", v50, v49 & 1);
  char v52 = v171;
  Builtin::Word v53 = v180;
  v169[10] = v51;
  Swift::String v54 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ja", v53, v52 & 1);
  char v55 = v171;
  Builtin::Word v56 = v180;
  v169[11] = v54;
  Swift::String v57 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("nb", v56, v55 & 1);
  char v58 = v171;
  Builtin::Word v59 = v180;
  v169[12] = v57;
  Swift::String v60 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ru", v59, v58 & 1);
  char v61 = v171;
  Builtin::Word v62 = v180;
  v169[13] = v60;
  Swift::String v63 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("tr", v62, v61 & 1);
  char v64 = v171;
  Builtin::Word v65 = v180;
  v169[14] = v63;
  Swift::String v66 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("de", v65, v64 & 1);
  char v67 = v171;
  Builtin::Word v68 = v180;
  v169[15] = v66;
  Swift::String v69 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("fi", v68, v67 & 1);
  char v70 = v171;
  Builtin::Word v71 = v180;
  v169[16] = v69;
  Swift::String v72 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("hi", v71, v70 & 1);
  char v73 = v171;
  Builtin::Word v74 = v180;
  v169[17] = v72;
  Swift::String v75 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ko", v74, v73 & 1);
  char v76 = v171;
  Builtin::Word v77 = v180;
  v169[18] = v75;
  Swift::String v78 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("nl", v77, v76 & 1);
  char v79 = v171;
  Builtin::Word v80 = v180;
  v169[19] = v78;
  Swift::String v81 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("sv", v80, v79 & 1);
  char v82 = v171;
  v169[20] = v81;
  Swift::String v83 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("yue", 3uLL, v82 & 1);
  uint64_t v84 = v170;
  v169[21] = v83;
  sub_6648();
  v177[6]._uint64_t countAndFlagsBits = v84;
  swift_release();
  uint64_t v173 = _allocateUninitializedArray<A>(_:)(1LL, v174);
  uint64_t v172 = v85;
  Swift::String v86 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalTellBearStory", 0x10uLL, v171 & 1);
  uint64_t v87 = (void *)v173;
  *uint64_t v172 = v86;
  sub_6648();
  v177[6]._object = v87;
  swift_release();
  v177[7]._uint64_t countAndFlagsBits = 0LL;
  swift_release();
  uint64_t v88 = sub_5150(&qword_D75C0);
  uint64_t v175 = _allocateUninitializedArray<A>(_:)(v185, v88);
  uint64_t v176 = sub_5150(&qword_D7350);
  uint64_t v89 = Dictionary.init(dictionaryLiteral:)(v175, v174, v176, &protocol witness table for String);
  v177[10]._uint64_t countAndFlagsBits = v89;
  swift_release();
  uint64_t v90 = sub_AD514();
  uint64_t v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v178 + 16))(v2, v90, v179);
  uint64_t v187 = (os_log_s *)Logger.logObject.getter(v91);
  int v186 = static os_log_type_t.debug.getter();
  uint64_t v183 = &v205;
  uint64_t v205 = v180;
  unint64_t v181 = sub_7788();
  unint64_t v182 = sub_77F0();
  unint64_t v92 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v206, v183, &type metadata for UInt32, &type metadata for Int, v181, v182, v92);
  uint32_t v184 = v206;
  uint64_t v93 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v188 = _allocateUninitializedArray<A>(_:)(v185, v93);
  if (os_log_type_enabled(v187, (os_log_type_t)v186))
  {
    uint64_t v94 = v162;
    uint64_t v151 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v149 = sub_5150(&qword_D6B60);
    uint64_t v150 = 0LL;
    uint64_t v152 = sub_74D0(0LL, v149, v149);
    uint64_t v153 = sub_74D0(v150, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    unsigned int v157 = &v192;
    uint64_t v192 = v151;
    uint64_t v158 = &v191;
    uint64_t v191 = v152;
    uint64_t v155 = &v190;
    uint64_t v190 = v153;
    unsigned int v154 = 0;
    sub_7528(0LL, &v192);
    sub_7528(v154, v157);
    uint64_t v189 = v188;
    uint64_t v156 = &v107;
    __chkstk_darwin(v95);
    uint64_t v96 = v158;
    uint64_t v97 = &v107 - 6;
    Class v159 = &v107 - 6;
    v97[2] = (uint64_t)v157;
    v97[3] = (uint64_t)v96;
    v97[4] = v98;
    uint64_t v160 = sub_5150(&qword_D6B78);
    unint64_t v99 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v159, v160, v99);
    uint64_t v161 = v94;
    if (v94)
    {
      __break(1u);
    }

    else
    {
      _os_log_impl(&dword_0, v187, (os_log_type_t)v186, "Initializing override SocialConversation plugin", v151, v184);
      uint64_t v147 = 0LL;
      sub_7580(v152, 0LL);
      sub_7580(v153, v147);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v188);
      uint64_t v148 = v161;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v188);
    uint64_t v148 = v162;
  }

  uint64_t v145 = v148;

  (*(void (**)(char *, uint64_t))(v178 + 8))(v165, v179);
  uint64_t v141 = type metadata accessor for AuthoredFlowFactory(0LL);
  uint64_t v100 = AuthoredFlowFactory.__allocating_init()();
  v204[3] = v141;
  v204[4] = &protocol witness table for AuthoredFlowFactory;
  v204[0] = v100;
  sub_C094(v204, &v177[7]._object);
  swift_release();
  uint64_t v142 = v203;
  sub_454C((uint64_t)v163, (uint64_t)v203);
  uint64_t v144 = (Swift::String *)sub_AD128(v142);
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v208 = v144;
  uint64_t countAndFlagsBits = v144[6]._countAndFlagsBits;
  swift_bridgeObjectRetain(countAndFlagsBits);
  uint64_t v201 = countAndFlagsBits;
  unint64_t v101 = sub_1BFB0();
  Collection<>.makeIterator()(v202, v176, v101);
  swift_release();
  for (uint64_t i = v145; ; uint64_t i = v118)
  {
    uint64_t v138 = i;
    uint64_t v102 = sub_5150(&qword_D7418);
    IndexingIterator.next()(&v199, v102);
    uint64_t v139 = v199;
    uint64_t v140 = v200;
    if (!v200) {
      break;
    }
    uint64_t v136 = v139;
    uint64_t v137 = v140;
    uint64_t v104 = v138;
    uint64_t v127 = v140;
    uint64_t v126 = v139;
    uint64_t v197 = v139;
    uint64_t v198 = v140;
    uint64_t v129 = 0LL;
    type metadata accessor for CATGlobals.Builder();
    swift_bridgeObjectRetain(v127);
    uint64_t v128 = CATGlobals.Builder.__allocating_init(siriLocale:)(v126, v127);
    unint64_t v130 = (void *)dispatch thunk of CATGlobals.Builder.build()();
    swift_release();
    unint64_t v196 = v130;
    sub_28CC4();
    type metadata accessor for SocialConversationFlowDelegatePlugin();
    id v131 = sub_1EB44();
    uint64_t v105 = sub_96984(v130, v131);
    uint64_t v132 = v104;
    uint64_t v133 = v105;
    uint64_t v134 = v106;
    uint64_t v135 = v104;
    if (v104)
    {
      uint64_t v108 = v135;
      uint64_t v109 = 0LL;
      uint64_t v110 = 0LL;

      swift_errorRelease(v108);
      uint64_t v123 = v109;
      uint64_t v124 = v109;
      uint64_t v125 = v110;
    }

    else
    {
      uint64_t v122 = v134;
      uint64_t v121 = v133;

      uint64_t v123 = v121;
      uint64_t v124 = v122;
      uint64_t v125 = v132;
    }

    uint64_t v118 = v125;
    uint64_t v119 = v124;
    uint64_t v120 = v123;
    if (v124)
    {
      uint64_t v116 = v120;
      uint64_t v117 = v119;
      uint64_t v115 = v119;
      uint64_t v113 = v120;
      uint64_t v194 = v120;
      uint64_t v195 = v119;
      type metadata accessor for CATExecutor(0LL);
      swift_retain();
      int v111 = &v193;
      swift_beginAccess(&v144[5]);
      uint64_t v112 = v144[5]._countAndFlagsBits;
      object = v144[5]._object;
      swift_bridgeObjectRetain(object);
      swift_endAccess(v111);
      static CATExecutor.registerBundle(bundleId:templateDir:)(v112, object, v113, v115);
      swift_bridgeObjectRelease(object);
      swift_release();
      swift_bridgeObjectRelease(v115);
    }

    swift_bridgeObjectRelease(v127);
  }

  swift_release();
  sub_1B82C(v202);
  sub_4598(v163);
  swift_release();
  return v144;
}

id sub_1EB44()
{
  uint64_t v1 = ((uint64_t (*)(void))swift_getObjCClassFromMetadata)();
  return [(id)((uint64_t (*)())swift_getObjCClassFromMetadata)() bundleForClass:v1];
}

uint64_t sub_1EB88(void *a1, void *a2)
{
  return sub_1EBD8(a1, a2);
}

uint64_t sub_1EBD8(void *a1, void *a2)
{
  uint64_t v121 = a1;
  uint64_t v122 = a2;
  uint64_t v157 = 0LL;
  uint64_t v156 = 0LL;
  uint64_t v155 = 0LL;
  uint64_t v120 = 0LL;
  uint64_t v143 = 0LL;
  uint64_t v137 = type metadata accessor for Logger(0LL);
  uint64_t v136 = *(void *)(v137 - 8);
  unint64_t v123 = (*(void *)(v136 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v3 = (char *)&v104 - v123;
  uint64_t v124 = (char *)&v104 - v123;
  uint64_t v156 = v4;
  uint64_t v155 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v157 = (uint64_t)v135;
  Builtin::Word v125 = 5LL;
  uint64_t v133 = &type metadata for String;
  uint64_t v127 = _allocateUninitializedArray<A>(_:)(5LL, &type metadata for String);
  uint64_t v126 = v6;
  int v130 = 1;
  Swift::String v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-AU", v125, 1);
  char v8 = v130;
  Builtin::Word v9 = v125;
  *uint64_t v126 = v7;
  Swift::String v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-CA", v9, v8 & 1);
  char v11 = v130;
  Builtin::Word v12 = v125;
  v126[1] = v10;
  Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-IN", v12, v11 & 1);
  char v14 = v130;
  Builtin::Word v15 = v125;
  v126[2] = v13;
  Swift::String v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-GB", v15, v14 & 1);
  char v17 = v130;
  Builtin::Word v18 = v125;
  v126[3] = v16;
  Swift::String v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en-US", v18, v17 & 1);
  uint64_t v20 = (void *)v127;
  v126[4] = v19;
  sub_6648();
  v135[4]._object = v20;
  swift_release();
  Swift::String v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.SiriSocialConversation",  0x25uLL,  v130 & 1);
  v135[5] = v21;
  swift_release();
  uint64_t v129 = _allocateUninitializedArray<A>(_:)(22LL, v133);
  uint64_t v128 = v22;
  uint64_t v138 = 2LL;
  Swift::String v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ar", 2uLL, v130 & 1);
  char v24 = v130;
  Builtin::Word v25 = v138;
  *uint64_t v128 = v23;
  Swift::String v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en", v25, v24 & 1);
  char v27 = v130;
  Builtin::Word v28 = v138;
  v128[1] = v26;
  Swift::String v29 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("fr", v28, v27 & 1);
  char v30 = v130;
  Builtin::Word v31 = v138;
  v128[2] = v29;
  Swift::String v32 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("it", v31, v30 & 1);
  char v33 = v130;
  Builtin::Word v34 = v138;
  v128[3] = v32;
  Swift::String v35 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ms", v34, v33 & 1);
  char v36 = v130;
  Builtin::Word v37 = v138;
  v128[4] = v35;
  Swift::String v38 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("pt", v37, v36 & 1);
  char v39 = v130;
  Builtin::Word v40 = v138;
  v128[5] = v38;
  Swift::String v41 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("th", v40, v39 & 1);
  char v42 = v130;
  Builtin::Word v43 = v138;
  v128[6] = v41;
  Swift::String v44 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("zh", v43, v42 & 1);
  char v45 = v130;
  Builtin::Word v46 = v138;
  v128[7] = v44;
  Swift::String v47 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("da", v46, v45 & 1);
  char v48 = v130;
  Builtin::Word v49 = v138;
  v128[8] = v47;
  Swift::String v50 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("es", v49, v48 & 1);
  char v51 = v130;
  Builtin::Word v52 = v138;
  v128[9] = v50;
  Swift::String v53 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("he", v52, v51 & 1);
  char v54 = v130;
  Builtin::Word v55 = v138;
  v128[10] = v53;
  Swift::String v56 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ja", v55, v54 & 1);
  char v57 = v130;
  Builtin::Word v58 = v138;
  v128[11] = v56;
  Swift::String v59 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("nb", v58, v57 & 1);
  char v60 = v130;
  Builtin::Word v61 = v138;
  v128[12] = v59;
  Swift::String v62 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ru", v61, v60 & 1);
  char v63 = v130;
  Builtin::Word v64 = v138;
  v128[13] = v62;
  Swift::String v65 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("tr", v64, v63 & 1);
  char v66 = v130;
  Builtin::Word v67 = v138;
  v128[14] = v65;
  Swift::String v68 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("de", v67, v66 & 1);
  char v69 = v130;
  Builtin::Word v70 = v138;
  v128[15] = v68;
  Swift::String v71 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("fi", v70, v69 & 1);
  char v72 = v130;
  Builtin::Word v73 = v138;
  v128[16] = v71;
  Swift::String v74 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("hi", v73, v72 & 1);
  char v75 = v130;
  Builtin::Word v76 = v138;
  v128[17] = v74;
  Swift::String v77 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ko", v76, v75 & 1);
  char v78 = v130;
  Builtin::Word v79 = v138;
  v128[18] = v77;
  Swift::String v80 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("nl", v79, v78 & 1);
  char v81 = v130;
  Builtin::Word v82 = v138;
  v128[19] = v80;
  Swift::String v83 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("sv", v82, v81 & 1);
  char v84 = v130;
  v128[20] = v83;
  Swift::String v85 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("yue", 3uLL, v84 & 1);
  uint64_t v86 = v129;
  v128[21] = v85;
  sub_6648();
  v135[6]._uint64_t countAndFlagsBits = v86;
  swift_release();
  uint64_t v132 = _allocateUninitializedArray<A>(_:)(1LL, v133);
  id v131 = v87;
  Swift::String v88 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalTellBearStory", 0x10uLL, v130 & 1);
  uint64_t v89 = (void *)v132;
  Swift::String *v131 = v88;
  sub_6648();
  v135[6]._object = v89;
  swift_release();
  v135[7]._uint64_t countAndFlagsBits = 0LL;
  swift_release();
  uint64_t v90 = sub_5150(&qword_D75C0);
  uint64_t v134 = _allocateUninitializedArray<A>(_:)(v143, v90);
  uint64_t v91 = sub_5150(&qword_D7350);
  uint64_t v92 = Dictionary.init(dictionaryLiteral:)(v134, v133, v91, &protocol witness table for String);
  v135[10]._uint64_t countAndFlagsBits = v92;
  swift_release();
  uint64_t v93 = sub_AD514();
  uint64_t v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v136 + 16))(v3, v93, v137);
  uint64_t v145 = (os_log_s *)Logger.logObject.getter(v94);
  int v144 = static os_log_type_t.debug.getter();
  uint64_t v141 = &v153;
  uint64_t v153 = v138;
  unint64_t v139 = sub_7788();
  unint64_t v140 = sub_77F0();
  unint64_t v95 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v154, v141, &type metadata for UInt32, &type metadata for Int, v139, v140, v95);
  uint32_t v142 = v154;
  uint64_t v96 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v146 = _allocateUninitializedArray<A>(_:)(v143, v96);
  if (os_log_type_enabled(v145, (os_log_type_t)v144))
  {
    uint64_t v97 = v120;
    uint64_t v110 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v108 = sub_5150(&qword_D6B60);
    uint64_t v109 = 0LL;
    uint64_t v111 = sub_74D0(0LL, v108, v108);
    uint64_t v112 = sub_74D0(v109, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v116 = &v150;
    uint64_t v150 = v110;
    uint64_t v117 = &v149;
    uint64_t v149 = v111;
    uint64_t v114 = &v148;
    uint64_t v148 = v112;
    unsigned int v113 = 0;
    sub_7528(0LL, &v150);
    sub_7528(v113, v116);
    uint64_t v147 = v146;
    uint64_t v115 = (const void **)&v104;
    __chkstk_darwin(v98);
    unint64_t v99 = v117;
    uint64_t v100 = (const void **)(&v104 - 6);
    uint64_t v118 = (const void **)(&v104 - 6);
    v100[2] = v116;
    v100[3] = v99;
    v100[4] = v101;
    uint64_t v119 = sub_5150(&qword_D6B78);
    unint64_t v102 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v118, v119, v102);
    if (v97)
    {
      __break(1u);
    }

    else
    {
      _os_log_impl(&dword_0, v145, (os_log_type_t)v144, "Initializing SocialConversation plugin", v110, v142);
      uint64_t v107 = 0LL;
      sub_7580(v111, 0LL);
      sub_7580(v112, v107);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v146);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v146);
  }

  (*(void (**)(char *, uint64_t))(v136 + 8))(v124, v137);
  uint64_t v104 = v152;
  sub_454C((uint64_t)v122, (uint64_t)v152);
  sub_C094(v104, &v135[7]._object);
  swift_release();
  uint64_t v105 = v151;
  sub_454C((uint64_t)v121, (uint64_t)v151);
  uint64_t v106 = sub_AD128(v105);
  swift_retain();
  uint64_t v157 = v106;
  sub_4598(v122);
  sub_4598(v121);
  swift_release();
  return v106;
}

Swift::String *sub_1F7E0()
{
  uint64_t v30 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t v34 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void *)(v34 - 8);
  unint64_t v31 = (*(void *)(v33 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v0);
  uint64_t v1 = (char *)&v14 - v31;
  Swift::String v32 = (char *)&v14 - v31;
  uint64_t v2 = sub_AD514();
  uint64_t v3 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v1, v2, v34);
  Swift::String v41 = (os_log_s *)Logger.logObject.getter(v3);
  int v40 = static os_log_type_t.debug.getter();
  Builtin::Word v37 = &v48;
  uint64_t v48 = 2LL;
  unint64_t v35 = sub_7788();
  unint64_t v36 = sub_77F0();
  unint64_t v4 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v49, v37, &type metadata for UInt32, &type metadata for Int, v35, v36, v4);
  uint32_t v38 = v49;
  uint64_t v5 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v42 = _allocateUninitializedArray<A>(_:)(v39, v5);
  if (os_log_type_enabled(v41, (os_log_type_t)v40))
  {
    uint64_t v6 = v30;
    uint64_t v20 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v18 = sub_5150(&qword_D6B60);
    uint64_t v19 = 0LL;
    uint64_t v21 = sub_74D0(0LL, v18, v18);
    uint64_t v22 = sub_74D0(v19, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    Swift::String v26 = &v46;
    Builtin::Word v46 = v20;
    char v27 = &v45;
    uint64_t v45 = v21;
    char v24 = &v44;
    uint64_t v44 = v22;
    unsigned int v23 = 0;
    sub_7528(0LL, &v46);
    sub_7528(v23, v26);
    uint64_t v43 = v42;
    Builtin::Word v25 = &v14;
    __chkstk_darwin(v7);
    char v8 = v27;
    Builtin::Word v9 = &v14 - 6;
    Builtin::Word v28 = &v14 - 6;
    v9[2] = (uint64_t)v26;
    v9[3] = (uint64_t)v8;
    v9[4] = v10;
    uint64_t v29 = sub_5150(&qword_D6B78);
    unint64_t v11 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v28, v29, v11);
    if (v6)
    {
      __break(1u);
    }

    else
    {
      _os_log_impl(&dword_0, v41, (os_log_type_t)v40, "convenience Initializing SocialConversation plugin", v20, v38);
      uint64_t v17 = 0LL;
      sub_7580(v21, 0LL);
      sub_7580(v22, v17);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v42);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v42);
  }

  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  uint64_t v15 = type metadata accessor for SharedObjectProvider();
  Builtin::Word v12 = sub_1FBC4();
  v47[3] = v15;
  v47[4] = &off_CBA90;
  v47[0] = v12;
  Swift::String v16 = sub_1D998(v47);
  swift_retain();
  Swift::String v50 = v16;
  swift_release();
  return v16;
}

void *sub_1FBC4()
{
  return sub_28B9C();
}

uint64_t sub_1FBFC(uint64_t a1)
{
  void (*v412)(void *__return_ptr, uint64_t);
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint8_t *v419;
  uint64_t v420;
  uint64_t v421;
  _BYTE **v422;
  uint64_t *v423;
  uint64_t *v424;
  uint64_t v425;
  const char *v426;
  const char *v427;
  uint64_t v428;
  unint64_t v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  unint64_t v434;
  char *v435;
  unint64_t v436;
  char *v437;
  unint64_t v438;
  char *v439;
  unint64_t v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  unint64_t v444;
  char *v445;
  unint64_t v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  unint64_t v451;
  char *v452;
  unint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  unint64_t v457;
  char *v458;
  uint64_t v459;
  unint64_t v460;
  uint64_t v461;
  unint64_t v462;
  char *v463;
  unint64_t v464;
  char *v465;
  unint64_t v466;
  char *v467;
  unint64_t v468;
  char *v469;
  unint64_t v470;
  char *v471;
  unint64_t v472;
  uint64_t v473;
  char *v474;
  unint64_t v475;
  char *v476;
  void *v477;
  uint64_t v478;
  void (*v479)(char *, uint64_t, uint64_t);
  uint64_t v480;
  void (*v481)(char *, uint64_t, uint64_t);
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  char *v486;
  uint64_t v487;
  uint64_t (*v488)(unint64_t, char *, uint64_t);
  unint64_t v489;
  unint64_t v490;
  uint64_t *v491;
  unint64_t v492;
  uint32_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  void *v503;
  uint64_t v504;
  os_log_s *v505;
  int v506;
  uint64_t (*v507)(uint64_t, uint64_t, uint64_t);
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  _BYTE *v511;
  uint64_t (*v512)(uint64_t, uint64_t, uint64_t);
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  _BYTE *v516[2];
  _BYTE v517[40];
  uint64_t v518;
  uint32_t v519;
  uint64_t (*v520)(uint64_t, uint64_t, uint64_t);
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  _BYTE *v524;
  uint64_t (*v525)(uint64_t, uint64_t, uint64_t);
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  _BYTE *v529;
  _BYTE v530[24];
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  _BYTE *v536[2];
  _BYTE v537[40];
  _BYTE v538[40];
  uint64_t v539;
  _BYTE v540[24];
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  _BYTE v544[24];
  uint64_t v545;
  uint64_t v546;
  _BYTE v547[24];
  uint64_t v548;
  uint64_t v549;
  _BYTE v550[40];
  uint64_t v551;
  uint64_t v552;
  uint32_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  _BYTE *v557[2];
  uint64_t v558;
  uint64_t v559;
  _BYTE v560[40];
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  void v565[3];
  uint64_t v566;
  uint64_t v567;
  void v568[3];
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint32_t v572;
  void *v573;
  _BYTE v574[24];
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint32_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  _BYTE *v584;
  uint64_t v585;
  uint32_t v586;
  void v587[2];
  void v588[2];
  uint64_t v589;
  uint32_t v590;
  uint64_t v591;
  uint64_t v592;
  char *v593;
  char *v594;
  v480 = a1;
  v426 = "Fatal error";
  v427 = "SocialConversationFlowDelegatePlugin/SocialConversationFlowDelegatePlugin.swift";
  v594 = 0LL;
  v593 = 0LL;
  v592 = 0LL;
  v591 = 0LL;
  v428 = 0LL;
  v577 = 0LL;
  v578 = 0LL;
  v573 = 0LL;
  v559 = 0LL;
  v551 = 0LL;
  v429 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  v430 = (char *)&v194 - v429;
  v459 = 0LL;
  v431 = type metadata accessor for AuthoredFlowDescriptor(0LL);
  v432 = *(void *)(v431 - 8);
  v433 = *(void *)(v432 + 64);
  v434 = (v433 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v3 = __chkstk_darwin(v2);
  v435 = (char *)&v194 - v434;
  v436 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v3);
  v437 = (char *)&v194 - v436;
  v438 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v5);
  v439 = (char *)&v194 - v438;
  v440 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  v441 = (char *)&v194 - v440;
  v594 = (char *)&v194 - v440;
  v442 = sub_5150(&qword_D6B20);
  v443 = *(void *)(v442 - 8);
  v444 = (*(void *)(v443 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  v445 = (char *)&v194 - v444;
  v446 = (*(void *)(*(void *)(sub_5150(&qword_D6B28) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  v447 = (char *)&v194 - v446;
  v448 = type metadata accessor for INSiriSocialConversation(v11);
  v449 = *(void *)(v448 - 8);
  v450 = *(void *)(v449 + 64);
  v451 = (v450 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v12);
  v452 = (char *)&v194 - v451;
  v453 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  v454 = (char *)&v194 - v453;
  v593 = (char *)&v194 - v453;
  v455 = sub_5150(&qword_D7180);
  v456 = *(void *)(v455 - 8);
  v457 = (*(void *)(v456 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v15);
  v458 = (char *)&v194 - v457;
  v487 = type metadata accessor for Parse(v16);
  v484 = *(void *)(v487 - 8);
  v482 = *(void *)(v484 + 64);
  v460 = (v482 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  v486 = (char *)&v194 - v460;
  v478 = type metadata accessor for Logger(v18);
  v477 = *(void **)(v478 - 8);
  v473 = v477[8];
  v462 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v20 = __chkstk_darwin(v19);
  v463 = (char *)&v194 - v462;
  v464 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v21 = __chkstk_darwin(v20);
  v465 = (char *)&v194 - v464;
  v466 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v22 = __chkstk_darwin(v21);
  v467 = (char *)&v194 - v466;
  v468 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v23 = __chkstk_darwin(v22);
  v469 = (char *)&v194 - v468;
  v470 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v24 = __chkstk_darwin(v23);
  v471 = (char *)&v194 - v470;
  v472 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v25 = __chkstk_darwin(v24);
  v474 = (char *)&v194 - v472;
  v475 = (v473 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v25);
  Swift::String v26 = (char *)&v194 - v475;
  v476 = (char *)&v194 - v475;
  v592 = v27;
  v591 = v28;
  uint64_t v29 = sub_AD514();
  v479 = (void (*)(char *, uint64_t, uint64_t))v477[2];
  v479(v26, v29, v478);
  v481 = *(void (**)(char *, uint64_t, uint64_t))(v484 + 16);
  v481(v486, v480, v487);
  v483 = *(unsigned int *)(v484 + 80);
  v485 = (v483 + 16LL) & ~(unint64_t)v483;
  v496 = 7LL;
  v497 = swift_allocObject(&unk_CB118, v485 + v482, v483 | 7LL);
  v488 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v484 + 32);
  uint64_t v30 = v488(v497 + v485, v486, v487);
  v505 = (os_log_s *)Logger.logObject.getter(v30);
  v506 = static os_log_type_t.debug.getter();
  v491 = &v589;
  v589 = 12LL;
  v489 = sub_7788();
  v490 = sub_77F0();
  v492 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v590, v491, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
  v493 = v590;
  v494 = 17LL;
  uint64_t v31 = swift_allocObject(&unk_CB140, 17LL, v496);
  uint64_t v32 = v494;
  uint64_t v33 = v496;
  v499 = v31;
  *(_BYTE *)(v31 + 16) = 32;
  uint64_t v34 = swift_allocObject(&unk_CB168, v32, v33);
  uint64_t v35 = v496;
  v500 = v34;
  *(_BYTE *)(v34 + 16) = 8;
  v495 = 32LL;
  uint64_t v36 = swift_allocObject(&unk_CB190, 32LL, v35);
  uint64_t v37 = v495;
  uint64_t v38 = v496;
  uint64_t v39 = v36;
  uint64_t v40 = v497;
  v498 = v39;
  *(void *)(v39 + 16) = sub_28DE0;
  *(void *)(v39 + 24) = v40;
  uint64_t v41 = swift_allocObject(&unk_CB1B8, v37, v38);
  uint64_t v42 = v498;
  v502 = v41;
  *(void *)(v41 + 16) = sub_88B8;
  *(void *)(v41 + 24) = v42;
  v504 = sub_5150((uint64_t *)&unk_D6B50);
  v501 = _allocateUninitializedArray<A>(_:)(3LL, v504);
  v503 = v43;
  swift_retain();
  uint64_t v44 = v499;
  uint64_t v45 = v503;
  *v503 = sub_884C;
  v45[1] = v44;
  swift_retain();
  uint64_t v46 = v500;
  Swift::String v47 = v503;
  v503[2] = sub_884C;
  v47[3] = v46;
  swift_retain();
  uint64_t v48 = v501;
  uint64_t v49 = v502;
  Swift::String v50 = v503;
  v503[4] = sub_8900;
  v50[5] = v49;
  sub_6648();
  swift_bridgeObjectRelease(v48);
  if (os_log_type_enabled(v505, (os_log_type_t)v506))
  {
    uint64_t v51 = v428;
    v419 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    v418 = sub_5150(&qword_D6B60);
    v420 = sub_74D0(0LL, v418, v418);
    v421 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v422 = &v511;
    v511 = v419;
    v423 = &v510;
    v510 = v420;
    v424 = &v509;
    v509 = v421;
    sub_7528(2LL, &v511);
    sub_7528(1LL, v422);
    v507 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    v508 = v499;
    sub_753C(&v507, (uint64_t)v422, (uint64_t)v423, (uint64_t)v424);
    v425 = v51;
    if (v51)
    {
      __break(1u);
    }

    else
    {
      v507 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      v508 = v500;
      sub_753C(&v507, (uint64_t)&v511, (uint64_t)&v510, (uint64_t)&v509);
      v416 = 0LL;
      uint64_t v53 = v416;
      v507 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      v508 = v502;
      sub_753C(&v507, (uint64_t)&v511, (uint64_t)&v510, (uint64_t)&v509);
      v415 = v53;
      _os_log_impl(&dword_0, v505, (os_log_type_t)v506, "Parsing Intent %s", v419, v493);
      sub_7580(v420, 0LL);
      sub_7580(v421, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      v417 = v415;
    }
  }

  else
  {
    uint64_t v52 = v428;
    swift_release();
    swift_release();
    swift_release();
    v417 = v52;
  }

  uint64_t v54 = v417;

  v410 = (void (*)(char *, uint64_t))v477[1];
  v410(v476, v478);
  sub_8115C();
  v412 = (void (*)(void *__return_ptr, uint64_t))Transformer.transform.getter(v455);
  uint64_t v411 = v55;
  (*(void (**)(char *, uint64_t))(v456 + 8))(v458, v455);
  v412(v588, v480);
  v413 = v54;
  v414 = v54;
  if (v54)
  {
    uint64_t v402 = v414;
    uint64_t v403 = 0LL;
    uint64_t v404 = 0LL;
    swift_release();
    swift_errorRelease(v402);
    uint64_t v407 = v403;
    uint64_t v408 = v403;
    uint64_t v409 = v404;
  }

  else
  {
    uint64_t v405 = v588[0];
    uint64_t v406 = v588[1];
    swift_release();
    uint64_t v407 = v405;
    uint64_t v408 = v406;
    uint64_t v409 = v413;
  }

  uint64_t v401 = v409;
  v587[0] = v407;
  v587[1] = v408;
  BOOL v400 = v408 != 0;
  BOOL v399 = v400;
  sub_8DD8((uint64_t)v587);
  if (v399)
  {
    Swift::String v56 = v474;
    uint64_t v57 = sub_AD514();
    v479(v56, v57, v478);
    v481(v486, v480, v487);
    unint64_t v385 = (v483 + 16LL) & ~(unint64_t)v483;
    uint64_t v389 = 7LL;
    uint64_t v390 = swift_allocObject(&unk_CB398, v385 + v482, v483 | 7LL);
    uint64_t v58 = v488(v390 + v385, v486, v487);
    v397 = (os_log_s *)Logger.logObject.getter(v58);
    int v398 = static os_log_type_t.debug.getter();
    v518 = 12LL;
    UnsignedInteger<>.init<A>(_:)(&v519, &v518, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
    uint32_t v386 = v519;
    uint64_t v387 = 17LL;
    uint64_t v59 = swift_allocObject(&unk_CB3C0, 17LL, v389);
    uint64_t v60 = v387;
    uint64_t v61 = v389;
    uint64_t v392 = v59;
    *(_BYTE *)(v59 + 16) = 32;
    uint64_t v62 = swift_allocObject(&unk_CB3E8, v60, v61);
    uint64_t v63 = v389;
    uint64_t v393 = v62;
    *(_BYTE *)(v62 + 16) = 8;
    uint64_t v388 = 32LL;
    uint64_t v64 = swift_allocObject(&unk_CB410, 32LL, v63);
    uint64_t v65 = v388;
    uint64_t v66 = v389;
    uint64_t v67 = v64;
    uint64_t v68 = v390;
    uint64_t v391 = v67;
    *(void *)(v67 + 16) = sub_28DE0;
    *(void *)(v67 + 24) = v68;
    uint64_t v69 = swift_allocObject(&unk_CB438, v65, v66);
    uint64_t v70 = v504;
    uint64_t v71 = v69;
    uint64_t v72 = v391;
    uint64_t v395 = v71;
    *(void *)(v71 + 16) = sub_88B8;
    *(void *)(v71 + 24) = v72;
    uint64_t v394 = _allocateUninitializedArray<A>(_:)(3LL, v70);
    v396 = v73;
    swift_retain();
    uint64_t v74 = v392;
    char v75 = v396;
    void *v396 = sub_884C;
    v75[1] = v74;
    swift_retain();
    uint64_t v76 = v393;
    Swift::String v77 = v396;
    v396[2] = sub_884C;
    v77[3] = v76;
    swift_retain();
    uint64_t v78 = v394;
    uint64_t v79 = v395;
    Swift::String v80 = v396;
    v396[4] = sub_8900;
    v80[5] = v79;
    sub_6648();
    swift_bridgeObjectRelease(v78);
    if (os_log_type_enabled(v397, (os_log_type_t)v398))
    {
      uint64_t v81 = v401;
      v378 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v377 = sub_5150(&qword_D6B60);
      uint64_t v379 = sub_74D0(0LL, v377, v377);
      uint64_t v380 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      v381 = v516;
      v516[0] = v378;
      v382 = &v515;
      v515 = v379;
      v383 = &v514;
      v514 = v380;
      sub_7528(2LL, v516);
      sub_7528(1LL, v381);
      v512 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      v513 = v392;
      sub_753C(&v512, (uint64_t)v381, (uint64_t)v382, (uint64_t)v383);
      uint64_t v384 = v81;
      if (v81)
      {
        __break(1u);
      }

      else
      {
        v512 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        v513 = v393;
        sub_753C(&v512, (uint64_t)v516, (uint64_t)&v515, (uint64_t)&v514);
        uint64_t v376 = 0LL;
        v512 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        v513 = v395;
        sub_753C(&v512, (uint64_t)v516, (uint64_t)&v515, (uint64_t)&v514);
        _os_log_impl( &dword_0,  v397,  (os_log_type_t)v398,  "Parsed INVoiceTrigger. Executing VoiceTriggerFlow %s",  v378,  v386);
        sub_7580(v379, 0LL);
        sub_7580(v380, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    v410(v474, v478);
    uint64_t v373 = type metadata accessor for CannedDialogVoiceTriggerFlow(0LL);
    swift_retain();
    v372 = v517;
    sub_454C(v461 + 16, (uint64_t)v517);
    swift_release();
    v516[1] = (_BYTE *)sub_9D04(v372);
    unint64_t v82 = sub_B810();
    uint64_t v374 = Flow.eraseToAnyFlow()(v373, v82);
    swift_release();
    return v374;
  }

  else
  {
    uint64_t v83 = v401;
    sub_81108();
    v369 = (void (*)(uint64_t))Transformer.transform.getter(v442);
    uint64_t v368 = v84;
    (*(void (**)(char *, uint64_t))(v443 + 8))(v445, v442);
    v369(v480);
    uint64_t v370 = v83;
    uint64_t v371 = v83;
    if (v83)
    {
      uint64_t v195 = v371;
      uint64_t v196 = 0LL;
      swift_release();
      swift_errorRelease(v195);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v449 + 56))(v447, 1LL, 1LL, v448);
      uint64_t v367 = v196;
    }

    else
    {
      (*(void (**)(char *, void, uint64_t, uint64_t))(v449 + 56))(v447, 0LL, 1LL, v448);
      swift_release();
      uint64_t v367 = v370;
    }

    uint64_t v366 = v367;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v449 + 48))(v447, 1LL, v448) == 1)
    {
      unint64_t v181 = v463;
      sub_890C((uint64_t)v447);
      uint64_t v182 = sub_AD514();
      uint64_t v183 = ((uint64_t (*)(char *, uint64_t, uint64_t))v479)(v181, v182, v478);
      uint64_t v212 = (os_log_s *)Logger.logObject.getter(v183);
      int v211 = static os_log_type_t.error.getter();
      v585 = 2LL;
      UnsignedInteger<>.init<A>(_:)(&v586, &v585, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
      uint32_t v210 = v586;
      uint64_t v213 = _allocateUninitializedArray<A>(_:)(0LL, v504);
      if (os_log_type_enabled(v212, (os_log_type_t)v211))
      {
        uint64_t v184 = v366;
        uint64_t v200 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
        uint64_t v198 = sub_5150(&qword_D6B60);
        uint64_t v199 = 0LL;
        uint64_t v201 = sub_74D0(0LL, v198, v198);
        uint64_t v202 = sub_74D0(v199, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint32_t v206 = &v584;
        v584 = v200;
        uint64_t v207 = &v583;
        v583 = v201;
        unint64_t v204 = &v582;
        v582 = v202;
        unsigned int v203 = 0;
        sub_7528(0LL, &v584);
        sub_7528(v203, v206);
        v581 = v213;
        uint64_t v205 = &v194;
        __chkstk_darwin(v185);
        int v186 = v207;
        uint64_t v187 = &v194 - 6;
        unint64_t v208 = &v194 - 6;
        v187[2] = (uint64_t)v206;
        v187[3] = (uint64_t)v186;
        v187[4] = v188;
        uint64_t v209 = sub_5150(&qword_D6B78);
        unint64_t v189 = sub_8CF4();
        Sequence.forEach(_:)(sub_8CC8, v208, v209, v189);
        if (v184)
        {
          __break(1u);
        }

        else
        {
          _os_log_impl( &dword_0,  v212,  (os_log_type_t)v211,  "SocialConversationFlowDelegatePlugin received an error for handling request even though the feature flag and locale is on for this",  v200,  v210);
          uint64_t v197 = 0LL;
          sub_7580(v201, 0LL);
          sub_7580(v202, v197);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v213);
        }
      }

      else
      {
        swift_bridgeObjectRelease(v213);
      }

      v410(v463, v478);
      Swift::String v190 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "SocialConversationFlowDelegatePlugin received makeFlowFor call with invalid parse",  0x51uLL,  1);
      uint64_t v192 = 110LL;
      int v193 = 0;
      _assertionFailure(_:_:file:line:flags:)(v426, 11LL, 2LL, v190._countAndFlagsBits, v190._object, v427, 79LL);
      __break(1u);
    }

    else
    {
      Swift::String v85 = v471;
      sub_89E0(v447, v454);
      uint64_t v86 = sub_AD514();
      v479(v85, v86, v478);
      sub_28ED8(v454, v452);
      uint64_t v87 = *(unsigned __int8 *)(v449 + 80);
      uint64_t v352 = (v87 + 16) & ~v87;
      uint64_t v356 = 7LL;
      uint64_t v357 = swift_allocObject(&unk_CB1E0, v352 + v450, v87 | 7);
      Swift::String v88 = sub_89E0(v452, (char *)(v357 + v352));
      v364 = (os_log_s *)Logger.logObject.getter(v88);
      int v365 = static os_log_type_t.debug.getter();
      v579 = 12LL;
      UnsignedInteger<>.init<A>(_:)(&v580, &v579, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
      uint32_t v353 = v580;
      uint64_t v354 = 17LL;
      uint64_t v89 = swift_allocObject(&unk_CB208, 17LL, v356);
      uint64_t v90 = v354;
      uint64_t v91 = v356;
      uint64_t v359 = v89;
      *(_BYTE *)(v89 + 16) = 32;
      uint64_t v92 = swift_allocObject(&unk_CB230, v90, v91);
      uint64_t v93 = v356;
      uint64_t v360 = v92;
      *(_BYTE *)(v92 + 16) = 8;
      uint64_t v355 = 32LL;
      uint64_t v94 = swift_allocObject(&unk_CB258, 32LL, v93);
      uint64_t v95 = v355;
      uint64_t v96 = v356;
      uint64_t v97 = v94;
      uint64_t v98 = v357;
      uint64_t v358 = v97;
      *(void *)(v97 + 16) = sub_2911C;
      *(void *)(v97 + 24) = v98;
      uint64_t v99 = swift_allocObject(&unk_CB280, v95, v96);
      uint64_t v100 = v504;
      uint64_t v101 = v99;
      uint64_t v102 = v358;
      uint64_t v362 = v101;
      *(void *)(v101 + 16) = sub_88B8;
      *(void *)(v101 + 24) = v102;
      uint64_t v361 = _allocateUninitializedArray<A>(_:)(3LL, v100);
      v363 = v103;
      swift_retain();
      uint64_t v104 = v359;
      uint64_t v105 = v363;
      void *v363 = sub_884C;
      v105[1] = v104;
      swift_retain();
      uint64_t v106 = v360;
      uint64_t v107 = v363;
      v363[2] = sub_884C;
      v107[3] = v106;
      swift_retain();
      uint64_t v108 = v361;
      uint64_t v109 = v362;
      uint64_t v110 = v363;
      v363[4] = sub_8900;
      v110[5] = v109;
      sub_6648();
      swift_bridgeObjectRelease(v108);
      if (os_log_type_enabled(v364, (os_log_type_t)v365))
      {
        uint64_t v111 = v366;
        v345 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v344 = sub_5150(&qword_D6B60);
        uint64_t v346 = sub_74D0(0LL, v344, v344);
        uint64_t v347 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v348 = &v524;
        v524 = v345;
        v349 = &v523;
        v523 = v346;
        v350 = &v522;
        v522 = v347;
        sub_7528(2LL, &v524);
        sub_7528(1LL, v348);
        v520 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        v521 = v359;
        sub_753C(&v520, (uint64_t)v348, (uint64_t)v349, (uint64_t)v350);
        uint64_t v351 = v111;
        if (v111)
        {
          __break(1u);
        }

        else
        {
          v520 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          v521 = v360;
          sub_753C(&v520, (uint64_t)&v524, (uint64_t)&v523, (uint64_t)&v522);
          uint64_t v342 = 0LL;
          uint64_t v113 = v342;
          v520 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          v521 = v362;
          sub_753C(&v520, (uint64_t)&v524, (uint64_t)&v523, (uint64_t)&v522);
          uint64_t v341 = v113;
          _os_log_impl(&dword_0, v364, (os_log_type_t)v365, "Parsed INSiriSocialConversation: %s", v345, v353);
          sub_7580(v346, 0LL);
          sub_7580(v347, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v343 = v341;
        }
      }

      else
      {
        uint64_t v112 = v366;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v343 = v112;
      }

      uint64_t v315 = v343;

      v410(v471, v478);
      uint64_t v316 = *(void *)v454;
      uint64_t v317 = (void *)*((void *)v454 + 1);
      swift_bridgeObjectRetain(v317);
      uint64_t v321 = sub_22A48(v316, v317);
      uint64_t v322 = v114;
      swift_bridgeObjectRelease(v317);
      v577 = v321;
      v578 = v322;
      swift_retain();
      uint64_t v320 = v574;
      sub_454C(v461 + 16, (uint64_t)v574);
      swift_release();
      uint64_t v319 = v575;
      uint64_t v318 = v576;
      sub_8C74(v320, v575);
      uint64_t v115 = (void *)(*(uint64_t (**)(uint64_t))(v318 + 32))(v319);
      uint64_t v116 = v469;
      uint64_t v323 = v115;
      v573 = v115;
      sub_4598(v320);
      sub_55B84(v321, v322, v323);
      uint64_t v117 = sub_AD514();
      v479(v116, v117, v478);
      v324 = *(void (**)(char *, char *, uint64_t))(v432 + 16);
      v324(v439, v441, v431);
      uint64_t v325 = *(unsigned int *)(v432 + 80);
      unint64_t v326 = (v325 + 16LL) & ~(unint64_t)v325;
      uint64_t v331 = 7LL;
      uint64_t v332 = swift_allocObject(&unk_CB2A8, v326 + v433, v325 | 7LL);
      v327 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v432 + 32);
      uint64_t v118 = v327(v332 + v326, v439, v431);
      uint64_t v339 = (os_log_s *)Logger.logObject.getter(v118);
      int v340 = static os_log_type_t.debug.getter();
      v571 = 12LL;
      UnsignedInteger<>.init<A>(_:)(&v572, &v571, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
      uint32_t v328 = v572;
      uint64_t v329 = 17LL;
      uint64_t v119 = swift_allocObject(&unk_CB2D0, 17LL, v331);
      uint64_t v120 = v329;
      uint64_t v121 = v331;
      uint64_t v334 = v119;
      *(_BYTE *)(v119 + 16) = 32;
      uint64_t v122 = swift_allocObject(&unk_CB2F8, v120, v121);
      uint64_t v123 = v331;
      uint64_t v335 = v122;
      *(_BYTE *)(v122 + 16) = 8;
      uint64_t v330 = 32LL;
      uint64_t v124 = swift_allocObject(&unk_CB320, 32LL, v123);
      uint64_t v125 = v330;
      uint64_t v126 = v331;
      uint64_t v127 = v124;
      uint64_t v128 = v332;
      uint64_t v333 = v127;
      *(void *)(v127 + 16) = sub_29284;
      *(void *)(v127 + 24) = v128;
      uint64_t v129 = swift_allocObject(&unk_CB348, v125, v126);
      uint64_t v130 = v504;
      uint64_t v131 = v129;
      uint64_t v132 = v333;
      uint64_t v337 = v131;
      *(void *)(v131 + 16) = sub_88B8;
      *(void *)(v131 + 24) = v132;
      uint64_t v336 = _allocateUninitializedArray<A>(_:)(3LL, v130);
      uint64_t v338 = v133;
      swift_retain();
      uint64_t v134 = v334;
      uint64_t v135 = v338;
      *uint64_t v338 = sub_884C;
      v135[1] = v134;
      swift_retain();
      uint64_t v136 = v335;
      uint64_t v137 = v338;
      v338[2] = sub_884C;
      v137[3] = v136;
      swift_retain();
      uint64_t v138 = v336;
      uint64_t v139 = v337;
      unint64_t v140 = v338;
      v338[4] = sub_8900;
      v140[5] = v139;
      sub_6648();
      swift_bridgeObjectRelease(v138);
      if (os_log_type_enabled(v339, (os_log_type_t)v340))
      {
        uint64_t v141 = v315;
        uint64_t v308 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v307 = sub_5150(&qword_D6B60);
        uint64_t v309 = sub_74D0(0LL, v307, v307);
        uint64_t v310 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        v311 = &v529;
        v529 = v308;
        uint64_t v312 = &v528;
        v528 = v309;
        v313 = &v527;
        v527 = v310;
        sub_7528(2LL, &v529);
        sub_7528(1LL, v311);
        v525 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        v526 = v334;
        sub_753C(&v525, (uint64_t)v311, (uint64_t)v312, (uint64_t)v313);
        uint64_t v314 = v141;
        if (v141)
        {
          __break(1u);
        }

        else
        {
          v525 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          v526 = v335;
          sub_753C(&v525, (uint64_t)&v529, (uint64_t)&v528, (uint64_t)&v527);
          uint64_t v305 = 0LL;
          uint64_t v143 = v305;
          v525 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          v526 = v337;
          sub_753C(&v525, (uint64_t)&v529, (uint64_t)&v528, (uint64_t)&v527);
          uint64_t v304 = v143;
          _os_log_impl(&dword_0, v339, (os_log_type_t)v340, "Parsed AuthoredFlowDescriptor: %s", v308, v328);
          sub_7580(v309, 0LL);
          sub_7580(v310, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v306 = v304;
        }
      }

      else
      {
        uint64_t v142 = v315;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v306 = v142;
      }

      uint64_t v296 = v306;

      v410(v469, v478);
      swift_retain();
      uint64_t v297 = v568;
      sub_454C(v461 + 16, (uint64_t)v568);
      swift_release();
      uint64_t v299 = v569;
      uint64_t v298 = v570;
      sub_8C74(v297, v569);
      int v144 = *(void (**)(uint64_t))(v298 + 40);
      uint64_t v300 = (void *)((char *)v565 + 4);
      v144(v299);
      uint64_t v302 = v566;
      uint64_t v301 = v567;
      sub_8C74(v300, v566);
      int v303 = (*(uint64_t (**)(uint64_t))(v301 + 8))(v302);
      swift_retain();
      v324(v437, v441, v431);
      if ((v303 & 1) != 0)
      {
        uint64_t v293 = v530;
        sub_454C(v461 + 120, (uint64_t)v530);
        uint64_t v291 = v531;
        uint64_t v292 = v532;
        sub_8C74(v293, v531);
        int v294 = dispatch thunk of AuthoredFlowProviding.authoredFlowIsPresent(flowDescriptor:)(v437, v291, v292);
        sub_4598(v293);
        int v295 = v294;
      }

      else
      {
        int v295 = 0;
      }

      int v290 = v295;
      swift_release();
      v289 = *(void (**)(char *, uint64_t))(v432 + 8);
      v289(v437, v431);
      sub_4598((void *)((char *)v565 + 4));
      sub_4598(v568);
      swift_retain();
      v324(v435, v441, v431);
      if ((v290 & 1) != 0) {
        int v288 = sub_23AB0((uint64_t)v435, v145);
      }
      else {
        int v288 = 0;
      }
      int v287 = v288;
      swift_release();
      v289(v435, v431);
      if ((v287 & 1) != 0)
      {
        uint64_t v146 = v467;
        uint64_t v147 = sub_AD514();
        uint64_t v148 = ((uint64_t (*)(char *, uint64_t, uint64_t))v479)(v146, v147, v478);
        v285 = (os_log_s *)Logger.logObject.getter(v148);
        int v284 = static os_log_type_t.debug.getter();
        v552 = 2LL;
        UnsignedInteger<>.init<A>(_:)(&v553, &v552, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
        uint32_t v283 = v553;
        uint64_t v286 = _allocateUninitializedArray<A>(_:)(0LL, v504);
        if (os_log_type_enabled(v285, (os_log_type_t)v284))
        {
          uint64_t v149 = v296;
          v273 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
          uint64_t v271 = sub_5150(&qword_D6B60);
          uint64_t v272 = 0LL;
          uint64_t v274 = sub_74D0(0LL, v271, v271);
          uint64_t v275 = sub_74D0(v272, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v279 = v536;
          v536[0] = v273;
          v280 = &v535;
          v535 = v274;
          v277 = &v534;
          v534 = v275;
          unsigned int v276 = 0;
          sub_7528(0LL, v536);
          sub_7528(v276, v279);
          v533 = v286;
          uint64_t v278 = &v194;
          __chkstk_darwin(v150);
          uint64_t v151 = v280;
          uint64_t v152 = &v194 - 6;
          uint64_t v281 = &v194 - 6;
          v152[2] = (uint64_t)v279;
          v152[3] = (uint64_t)v151;
          v152[4] = v153;
          uint64_t v282 = sub_5150(&qword_D6B78);
          unint64_t v154 = sub_8CF4();
          Sequence.forEach(_:)(sub_8CC8, v281, v282, v154);
          if (v149)
          {
            __break(1u);
          }

          else
          {
            _os_log_impl(&dword_0, v285, (os_log_type_t)v284, "Executing AuthoredFlow with SiriKit", v273, v283);
            uint64_t v270 = 0LL;
            sub_7580(v274, 0LL);
            sub_7580(v275, v270);
            UnsafeMutablePointer.deallocate()();
            swift_bridgeObjectRelease(v286);
          }
        }

        else
        {
          swift_bridgeObjectRelease(v286);
        }

        v410(v467, v478);
        uint64_t v261 = 0LL;
        uint64_t v155 = type metadata accessor for AuthoredFlowExtensions(0LL);
        uint64_t v268 = swift_allocBox(v155);
        uint64_t v254 = v156;
        v551 = v156;
        swift_retain();
        uint64_t v238 = v550;
        sub_454C(v461 + 16, (uint64_t)v550);
        swift_release();
        sub_55C50((uint64_t)v238, v254);
        sub_4598(v238);
        uint64_t v259 = sub_5150(&qword_D75D0);
        uint64_t v260 = _allocateUninitializedArray<A>(_:)(3LL, v259);
        uint64_t v258 = v157;
        uint64_t inited = type metadata accessor for InitDailyUpliftBehaviorResponseHandler(v261);
        sub_BAFC(&v454[*(int *)(v448 + 24)], v430);
        uint64_t v240 = sub_84408((uint64_t)v430);
        v258[3] = inited;
        unint64_t v158 = sub_293A4();
        uint64_t v159 = v240;
        uint64_t v160 = v258;
        v258[4] = v158;
        *uint64_t v160 = v159;
        uint64_t v249 = type metadata accessor for InitGreetingBehaviorResponseHandler();
        swift_retain();
        uint64_t v248 = v547;
        sub_454C(v461 + 16, (uint64_t)v547);
        swift_release();
        uint64_t v242 = v548;
        uint64_t v241 = v549;
        sub_8C74(v248, v548);
        uint64_t v245 = (void *)(*(uint64_t (**)(uint64_t))(v241 + 32))(v242);
        swift_retain();
        uint64_t v247 = v544;
        sub_454C(v461 + 16, (uint64_t)v544);
        swift_release();
        uint64_t v244 = v545;
        uint64_t v243 = v546;
        sub_8C74(v247, v545);
        uint64_t v161 = *(void (**)(uint64_t))(v243 + 8);
        uint64_t v246 = &v543;
        v161(v244);
        uint64_t v250 = sub_84450(v245, v246);
        sub_4598(v247);
        sub_4598(v248);
        v258[8] = v249;
        unint64_t v162 = sub_29414();
        uint64_t v163 = v250;
        unint64_t v164 = v258;
        v258[9] = v162;
        v164[5] = v163;
        uint64_t v256 = type metadata accessor for DismissSiriBehaviorResponseHandler();
        swift_retain();
        uint64_t v255 = v540;
        sub_454C(v461 + 16, (uint64_t)v540);
        swift_release();
        uint64_t v252 = v541;
        uint64_t v251 = v542;
        sub_8C74(v255, v541);
        unint64_t v165 = *(void (**)(uint64_t))(v251 + 16);
        uint64_t v253 = &v539;
        v165(v252);
        uint64_t v257 = sub_844A0(v253);
        sub_4598(v255);
        v258[13] = v256;
        unint64_t v166 = sub_29484();
        uint64_t v167 = v257;
        uint64_t v168 = v258;
        unint64_t v169 = v166;
        uint64_t v170 = v260;
        v258[14] = v169;
        v168[10] = v167;
        sub_6648();
        AuthoredFlowExtensions.behaviorResponseHandlers.setter(v170);
        unint64_t v267 = v538;
        sub_454C(v461 + 120, (uint64_t)v538);
        uint64_t v266 = type metadata accessor for AsyncConstructingFlow(v261);
        uint64_t v262 = v537;
        sub_454C((uint64_t)v267, (uint64_t)v537);
        v324(v439, v441, v431);
        swift_retain();
        unint64_t v263 = (v325 + 56LL) & ~(unint64_t)v325;
        unint64_t v264 = (v263 + v433 + 7) & 0xFFFFFFFFFFFFFFF8LL;
        uint64_t v265 = swift_allocObject(&unk_CB370, v264 + 8, v325 | 7LL);
        sub_C094(v262, (void *)(v265 + 16));
        v327(v265 + v263, v439, v431);
        *(void *)(v265 + v264) = v268;
        v536[1] = (_BYTE *)AsyncConstructingFlow.__allocating_init(_:)(&unk_D75F8);
        uint64_t v269 = Flow.eraseToAnyFlow()(v266, &protocol witness table for AsyncConstructingFlow);
        swift_release();
        sub_4598(v267);
        swift_release();
        v289(v441, v431);

        swift_bridgeObjectRelease(v322);
        sub_8AF4((uint64_t)v454);
        return v269;
      }

      else
      {
        int v171 = v465;
        uint64_t v172 = sub_AD514();
        uint64_t v173 = ((uint64_t (*)(char *, uint64_t, uint64_t))v479)(v171, v172, v478);
        uint64_t v236 = (os_log_s *)Logger.logObject.getter(v173);
        int v235 = static os_log_type_t.debug.getter();
        v564 = 2LL;
        UnsignedInteger<>.init<A>(_:)(v565, &v564, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
        uint32_t v234 = v565[0];
        uint64_t v237 = _allocateUninitializedArray<A>(_:)(0LL, v504);
        if (os_log_type_enabled(v236, (os_log_type_t)v235))
        {
          uint64_t v174 = v296;
          BOOL v224 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
          uint64_t v222 = sub_5150(&qword_D6B60);
          uint64_t v223 = 0LL;
          uint64_t v225 = sub_74D0(0LL, v222, v222);
          uint64_t v226 = sub_74D0(v223, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v230 = v557;
          v557[0] = v224;
          uint64_t v231 = &v556;
          v556 = v225;
          uint64_t v228 = &v555;
          v555 = v226;
          unsigned int v227 = 0;
          sub_7528(0LL, v557);
          sub_7528(v227, v230);
          v554 = v237;
          int v229 = &v194;
          __chkstk_darwin(v175);
          uint64_t v176 = v231;
          uint64_t v177 = &v194 - 6;
          uint64_t v232 = &v194 - 6;
          v177[2] = (uint64_t)v230;
          v177[3] = (uint64_t)v176;
          v177[4] = v178;
          uint64_t v233 = sub_5150(&qword_D6B78);
          unint64_t v179 = sub_8CF4();
          Sequence.forEach(_:)(sub_8CC8, v232, v233, v179);
          if (v174)
          {
            __break(1u);
          }

          else
          {
            _os_log_impl(&dword_0, v236, (os_log_type_t)v235, "Executing CannedDialogFlow", v224, v234);
            uint64_t v221 = 0LL;
            sub_7580(v225, 0LL);
            sub_7580(v226, v221);
            UnsafeMutablePointer.deallocate()();
            swift_bridgeObjectRelease(v237);
          }
        }

        else
        {
          swift_bridgeObjectRelease(v237);
        }

        v410(v465, v478);
        uint64_t v219 = &v562;
        swift_beginAccess(v461 + 112);
        uint64_t v220 = *(void *)(v461 + 112);
        swift_retain();
        swift_endAccess(v219);
        v561 = v220;
        swift_retain();
        if (v561)
        {
          v563 = v561;
        }

        else
        {
          type metadata accessor for CannedDialogFlow(0LL);
          swift_retain();
          uint64_t v218 = v560;
          sub_454C(v461 + 16, (uint64_t)v560);
          swift_release();
          v563 = sub_4448(v218);
          sub_2937C(&v561);
        }

        swift_release();
        uint64_t v216 = (_BYTE *)v563;
        v559 = v563;
        swift_retain();
        swift_retain();
        uint64_t v214 = &v558;
        swift_beginAccess(v461 + 112);
        *(void *)(v461 + swift_beginAccess(v0 + 112) = v216;
        swift_release();
        swift_endAccess(v214);
        swift_release();
        v557[1] = v216;
        uint64_t v215 = type metadata accessor for CannedDialogFlow(0LL);
        unint64_t v180 = sub_8C04();
        uint64_t v217 = Flow.eraseToAnyFlow()(v215, v180);
        swift_release();
        v289(v441, v431);

        swift_bridgeObjectRelease(v322);
        sub_8AF4((uint64_t)v454);
        return v217;
      }
    }
  }

  return v375;
}

uint64_t sub_2256C(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v5 = type metadata accessor for Parse(0LL);
  unint64_t v4 = (*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v3 - v4;
  (*(void (**)(void))(v1 + 16))();
  return String.init<A>(describing:)(v6, v5);
}

uint64_t sub_225E8(uint64_t a1)
{
  uint64_t v5 = a1;
  uint64_t v7 = type metadata accessor for INSiriSocialConversation(0LL);
  unint64_t v6 = (*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v8 = (char *)&v5 - v6;
  sub_28ED8(v2, (char *)&v5 - v6);
  unint64_t v3 = sub_2A734();
  return String.init<A>(describing:)(v8, v7, v3);
}

uint64_t sub_22668(uint64_t a1)
{
  uint64_t v6 = a1;
  uint64_t v8 = type metadata accessor for AuthoredFlowDescriptor(0LL);
  unint64_t v7 = (*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v2 = __chkstk_darwin(v1);
  double v9 = (char *)&v6 - v7;
  (*(void (**)(double))(v3 + 16))(v2);
  unint64_t v4 = sub_2A6C4();
  return String.init<A>(describing:)(v9, v8, v4);
}

uint64_t sub_226EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[12] = a2;
  v4[11] = a1;
  v4[7] = v4;
  v4[8] = 0LL;
  v4[9] = 0LL;
  v4[10] = 0LL;
  v4[8] = a2;
  v4[9] = a3;
  type metadata accessor for AuthoredFlowExtensions(0LL);
  uint64_t v5 = swift_projectBox(a4);
  v4[14] = v5;
  v4[10] = v5;
  return swift_task_switch(sub_2278C, 0LL);
}

uint64_t sub_2278C()
{
  uint64_t v4 = v0[14];
  double v1 = (void *)v0[12];
  v0[7] = v0;
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  sub_8C74(v1, v7);
  uint64_t v6 = swift_task_alloc(32LL);
  v0[15] = v6;
  *(void *)(v6 + 16) = v4;
  double v2 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AuthoredFlowProviding.makeAuthoredFlow(flowDescriptor:extensions:)[1]);
  v5[16] = v2;
  void *v2 = v5[7];
  v2[1] = sub_22854;
  return dispatch thunk of AuthoredFlowProviding.makeAuthoredFlow(flowDescriptor:extensions:)( v5 + 2,  v5[13],  &unk_D78F8,  v6,  v7,  v8);
}

uint64_t sub_22854()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 120LL);
  *(void *)(*(void *)v0 + 56LL) = *(void *)v0;
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return swift_task_switch(sub_228D0, 0LL);
}

uint64_t sub_228D0()
{
  uint64_t v4 = (uint64_t *)v0[11];
  v0[7] = v0;
  uint64_t v6 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = sub_8C74(v0 + 2, v6);
  v4[3] = v6;
  v4[4] = v3;
  uint64_t v1 = sub_1AFD4(v4);
  (*(void (**)(uint64_t *, void *))(*(void *)(v6 - 8) + 16LL))(v1, v5);
  sub_4598(v0 + 2);
  return (*(uint64_t (**)(void))(v0[7] + 8LL))();
}

uint64_t sub_22974(uint64_t a1, uint64_t a2)
{
  v2[7] = a2;
  v2[6] = a1;
  v2[5] = v2;
  return swift_task_switch(sub_2299C, 0LL);
}

uint64_t sub_2299C()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v1;
  uint64_t v5 = v0[6];
  v0[5] = v0;
  swift_beginAccess(v1);
  uint64_t v6 = type metadata accessor for AuthoredFlowExtensions(0LL);
  uint64_t v4 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v5, v3);
  swift_endAccess(v0 + 2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0LL, 1LL, v6);
  return (*(uint64_t (**)(void))(v0[5] + 8LL))();
}

uint64_t sub_22A48(uint64_t a1, void *a2)
{
  uint64_t v203 = a1;
  int v211 = a2;
  uint64_t v246 = 0LL;
  uint64_t v247 = 0LL;
  uint64_t v245 = 0LL;
  v230._uint64_t countAndFlagsBits = 0LL;
  v230._object = 0LL;
  uint64_t v226 = 0LL;
  uint64_t v183 = 0LL;
  uint64_t v188 = 0LL;
  uint64_t v184 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v185 = *(void *)(v184 - 8);
  unint64_t v186 = (*(void *)(v185 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v187 = (char *)&v97 - v186;
  uint64_t v189 = type metadata accessor for Logger(v4);
  uint64_t v190 = *(void *)(v189 - 8);
  unint64_t v191 = (*(void *)(v190 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v192 = (char *)&v97 - v191;
  unint64_t v193 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v194 = (char *)&v97 - v193;
  uint64_t v208 = type metadata accessor for Locale(v8);
  uint64_t v206 = *(void *)(v208 - 8);
  unint64_t v195 = (*(void *)(v206 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v207 = (uint64_t)&v97 - v195;
  uint64_t v246 = v10;
  uint64_t v247 = v11;
  uint64_t v245 = v2;
  uint64_t v212 = *sub_4A758();
  swift_retain();
  swift_bridgeObjectRetain(v211);
  swift_retain();
  uint32_t v210 = v238;
  sub_454C(v2 + 16, (uint64_t)v238);
  swift_release();
  uint64_t v197 = v239;
  uint64_t v196 = v240;
  sub_8C74(v210, v239);
  double v12 = *(void (**)(uint64_t))(v196 + 8);
  uint64_t v209 = &v235;
  v12(v197);
  uint64_t v199 = v236;
  uint64_t v198 = v237;
  sub_8C74(v209, v236);
  dispatch thunk of DeviceState.siriLocale.getter(v199, v198);
  uint64_t v13 = v200;
  swift_retain();
  uint64_t v205 = v232;
  sub_454C(v13 + 16, (uint64_t)v232);
  swift_release();
  uint64_t v202 = v233;
  uint64_t v201 = v234;
  sub_8C74(v205, v233);
  uint64_t v14 = *(void (**)(uint64_t))(v201 + 40);
  unint64_t v204 = &v231;
  v14(v202);
  sub_4BCF0(v203, (uint64_t)v211, v207, v204, v241);
  sub_4598(v204);
  sub_4598(v205);
  (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v207, v208);
  sub_4598(v209);
  sub_4598(v210);
  swift_bridgeObjectRelease(v211);
  swift_release();
  if (v241[3])
  {
    double v15 = v194;
    uint64_t v157 = __dst;
    sub_C094(v241, __dst);
    uint64_t v16 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v15, v16, v189);
    swift_bridgeObjectRetain(v211);
    uint64_t v168 = 32LL;
    uint64_t v169 = 7LL;
    uint64_t v17 = swift_allocObject(&unk_CB460, 32LL, 7LL);
    uint64_t v18 = v211;
    uint64_t v19 = v17;
    uint64_t v20 = (uint64_t)v157;
    uint64_t v163 = v19;
    *(void *)(v19 + 16) = v203;
    *(void *)(v19 + 24) = v18;
    unint64_t v158 = &v219[1];
    sub_454C(v20, (uint64_t)&v219[1]);
    uint64_t v170 = swift_allocObject(&unk_CB488, 56LL, v169);
    double v21 = sub_C094(v158, (void *)(v170 + 16));
    unint64_t v181 = (os_log_s *)Logger.logObject.getter(v21);
    int v182 = static os_log_type_t.debug.getter();
    uint64_t v161 = &v218;
    uint64_t v218 = 22LL;
    unint64_t v159 = sub_7788();
    unint64_t v160 = sub_77F0();
    unint64_t v22 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(v219, v161, &type metadata for UInt32, &type metadata for Int, v159, v160, v22);
    uint32_t v162 = v219[0];
    uint64_t v166 = 17LL;
    uint64_t v23 = swift_allocObject(&unk_CB4B0, 17LL, v169);
    uint64_t v24 = v166;
    uint64_t v25 = v169;
    uint64_t v172 = v23;
    int v165 = 32;
    *(_BYTE *)(v23 + 16) = 32;
    uint64_t v26 = swift_allocObject(&unk_CB4D8, v24, v25);
    uint64_t v27 = v168;
    uint64_t v28 = v169;
    uint64_t v173 = v26;
    int v167 = 8;
    *(_BYTE *)(v26 + 16) = 8;
    uint64_t v29 = swift_allocObject(&unk_CB500, v27, v28);
    uint64_t v30 = v168;
    uint64_t v31 = v169;
    uint64_t v32 = v29;
    uint64_t v33 = v163;
    uint64_t v164 = v32;
    *(void *)(v32 + 16) = sub_1B890;
    *(void *)(v32 + 24) = v33;
    uint64_t v34 = swift_allocObject(&unk_CB528, v30, v31);
    uint64_t v35 = v166;
    uint64_t v36 = v169;
    uint64_t v37 = v34;
    uint64_t v38 = v164;
    uint64_t v174 = v37;
    *(void *)(v37 + 16) = sub_88B8;
    *(void *)(v37 + 24) = v38;
    uint64_t v39 = swift_allocObject(&unk_CB550, v35, v36);
    uint64_t v40 = v166;
    uint64_t v41 = v169;
    uint64_t v175 = v39;
    *(_BYTE *)(v39 + 16) = v165;
    uint64_t v42 = swift_allocObject(&unk_CB578, v40, v41);
    uint64_t v43 = v168;
    uint64_t v44 = v169;
    uint64_t v176 = v42;
    *(_BYTE *)(v42 + 16) = v167;
    uint64_t v45 = swift_allocObject(&unk_CB5A0, v43, v44);
    uint64_t v46 = v168;
    uint64_t v47 = v169;
    uint64_t v48 = v45;
    uint64_t v49 = v170;
    uint64_t v171 = v48;
    *(void *)(v48 + 16) = sub_29810;
    *(void *)(v48 + 24) = v49;
    uint64_t v50 = swift_allocObject(&unk_CB5C8, v46, v47);
    uint64_t v51 = v171;
    uint64_t v178 = v50;
    *(void *)(v50 + 16) = sub_88B8;
    *(void *)(v50 + 24) = v51;
    uint64_t v180 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v177 = _allocateUninitializedArray<A>(_:)(6LL, v180);
    unint64_t v179 = v52;
    swift_retain();
    uint64_t v53 = v172;
    uint64_t v54 = v179;
    void *v179 = sub_884C;
    v54[1] = v53;
    swift_retain();
    uint64_t v55 = v173;
    Swift::String v56 = v179;
    v179[2] = sub_884C;
    v56[3] = v55;
    swift_retain();
    uint64_t v57 = v174;
    uint64_t v58 = v179;
    v179[4] = sub_8900;
    v58[5] = v57;
    swift_retain();
    uint64_t v59 = v175;
    uint64_t v60 = v179;
    v179[6] = sub_884C;
    v60[7] = v59;
    swift_retain();
    uint64_t v61 = v176;
    uint64_t v62 = v179;
    v179[8] = sub_884C;
    v62[9] = v61;
    swift_retain();
    uint64_t v63 = v177;
    uint64_t v64 = v178;
    uint64_t v65 = v179;
    v179[10] = sub_8900;
    v65[11] = v64;
    sub_6648();
    swift_bridgeObjectRelease(v63);
    if (os_log_type_enabled(v181, (os_log_type_t)v182))
    {
      uint64_t v66 = v183;
      uint64_t v149 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
      uint64_t v148 = sub_5150(&qword_D6B60);
      uint64_t v150 = sub_74D0(0LL, v148, v148);
      uint64_t v151 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v153 = &v217;
      uint64_t v217 = v149;
      unint64_t v154 = &v216;
      uint64_t v216 = v150;
      uint64_t v155 = &v215;
      uint64_t v215 = v151;
      unsigned int v152 = 2;
      sub_7528(2LL, &v217);
      sub_7528(v152, v153);
      uint64_t v213 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v214 = v172;
      sub_753C(&v213, (uint64_t)v153, (uint64_t)v154, (uint64_t)v155);
      uint64_t v156 = v66;
      if (v66)
      {
        __break(1u);
      }

      else
      {
        uint64_t v213 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v214 = v173;
        sub_753C(&v213, (uint64_t)&v217, (uint64_t)&v216, (uint64_t)&v215);
        uint64_t v147 = 0LL;
        uint64_t v67 = v147;
        uint64_t v213 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v214 = v174;
        sub_753C(&v213, (uint64_t)&v217, (uint64_t)&v216, (uint64_t)&v215);
        uint64_t v146 = v67;
        uint64_t v213 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v214 = v175;
        sub_753C(&v213, (uint64_t)&v217, (uint64_t)&v216, (uint64_t)&v215);
        uint64_t v145 = 0LL;
        uint64_t v213 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v214 = v176;
        sub_753C(&v213, (uint64_t)&v217, (uint64_t)&v216, (uint64_t)&v215);
        uint64_t v144 = 0LL;
        uint64_t v213 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v214 = v178;
        sub_753C(&v213, (uint64_t)&v217, (uint64_t)&v216, (uint64_t)&v215);
        _os_log_impl(&dword_0, v181, (os_log_type_t)v182, "Overriding %s with %s", v149, v162);
        sub_7580(v150, 0LL);
        sub_7580(v151, 2LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v190 + 8))(v194, v189);
    uint64_t v139 = __dst;
    uint64_t v138 = v243;
    uint64_t v137 = v244;
    sub_8C74(__dst, v243);
    uint64_t v68 = (*(uint64_t (**)(uint64_t))(v137 + 8))(v138);
    uint64_t v140 = NLGCATIdentifier.identifier.getter(v68);
    uint64_t v141 = v69;
    (*(void (**)(char *, uint64_t))(v185 + 8))(v187, v184);
    sub_4598(v139);
    uint64_t v142 = v140;
    uint64_t v143 = v141;
  }

  else
  {
    sub_1D580(v241);
    swift_bridgeObjectRetain(v211);
    v230._uint64_t countAndFlagsBits = v203;
    v230._object = v211;
    if ((sub_262C0() & 1) != 0)
    {
      uint64_t v133 = &type metadata for String;
      uint64_t v132 = _allocateUninitializedArray<A>(_:)(3LL, &type metadata for String);
      uint64_t v131 = v70;
      int v130 = 1;
      Swift::String v71 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHello", 8uLL, 1);
      char v72 = v130;
      Swift::String *v131 = v71;
      Swift::String v73 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHelloSiri", 0xCuLL, v72 & 1);
      char v74 = v130;
      v131[1] = v73;
      Swift::String v75 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalGreetingAsSummons", 0x14uLL, v74 & 1);
      uint64_t v76 = v132;
      v131[2] = v75;
      sub_6648();
      uint64_t v134 = v76;
      uint64_t v226 = v76;
      v225[2] = v76;
      uint64_t v136 = v225;
      v225[0] = v203;
      v225[1] = v211;
      uint64_t v135 = sub_5150(&qword_D7350);
      unint64_t v77 = sub_1B278();
      if ((Sequence<>.contains(_:)(v136, v135, v77, &protocol witness table for String) & 1) != 0)
      {
        uint64_t v78 = v192;
        uint64_t v79 = sub_AD514();
        uint64_t v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 16))(v78, v79, v189);
        uint64_t v128 = (os_log_s *)Logger.logObject.getter(v80);
        int v127 = static os_log_type_t.debug.getter();
        uint64_t v125 = &v223;
        uint64_t v223 = 2LL;
        unint64_t v123 = sub_7788();
        unint64_t v124 = sub_77F0();
        unint64_t v81 = sub_7858();
        UnsignedInteger<>.init<A>(_:)(&v224, v125, &type metadata for UInt32, &type metadata for Int, v123, v124, v81);
        uint32_t v126 = v224;
        uint64_t v82 = sub_5150((uint64_t *)&unk_D6B50);
        uint64_t v129 = _allocateUninitializedArray<A>(_:)(0LL, v82);
        if (os_log_type_enabled(v128, (os_log_type_t)v127))
        {
          uint64_t v83 = v183;
          uint64_t v113 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
          uint64_t v111 = sub_5150(&qword_D6B60);
          uint64_t v112 = 0LL;
          uint64_t v114 = sub_74D0(0LL, v111, v111);
          uint64_t v115 = sub_74D0(v112, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v119 = &v222;
          uint64_t v222 = v113;
          uint64_t v120 = &v221;
          uint64_t v221 = v114;
          uint64_t v117 = &v220;
          uint64_t v220 = v115;
          unsigned int v116 = 0;
          sub_7528(0LL, &v222);
          sub_7528(v116, v119);
          *(void *)&v219[11] = v129;
          uint64_t v118 = &v97;
          __chkstk_darwin(v84);
          Swift::String v85 = v120;
          uint64_t v86 = &v97 - 6;
          uint64_t v121 = &v97 - 6;
          v86[2] = (uint64_t)v119;
          v86[3] = (uint64_t)v85;
          v86[4] = v87;
          uint64_t v122 = sub_5150(&qword_D6B78);
          unint64_t v88 = sub_8CF4();
          Sequence.forEach(_:)(sub_8CC8, v121, v122, v88);
          if (v83)
          {
            __break(1u);
          }

          else
          {
            _os_log_impl(&dword_0, v128, (os_log_type_t)v127, "Overwriting greeting intents", v113, v126);
            uint64_t v110 = 0LL;
            sub_7580(v114, 0LL);
            sub_7580(v115, v110);
            UnsafeMutablePointer.deallocate()();
            swift_bridgeObjectRelease(v129);
          }
        }

        else
        {
          swift_bridgeObjectRelease(v129);
        }

        (*(void (**)(char *, uint64_t))(v190 + 8))(v192, v189);
        Swift::String v89 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("greeting", 8uLL, 1);
        object = v230._object;
        Swift::String v230 = v89;
        swift_bridgeObjectRelease(object);
      }

      swift_bridgeObjectRelease(v134);
    }

    Builtin::Word v98 = 19LL;
    uint64_t v91 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)(19LL, 1LL);
    uint64_t v104 = &v228;
    uint64_t v228 = v91;
    uint64_t v229 = v92;
    int v102 = 1;
    Swift::String v93 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation#", v98, 1);
    uint64_t v99 = v93._object;
    DefaultStringInterpolation.appendLiteral(_:)(v93);
    swift_bridgeObjectRelease(v99);
    uint64_t v107 = &v230;
    Swift::String v100 = v230;
    swift_bridgeObjectRetain(v230._object);
    uint64_t v101 = &v227;
    Swift::String v227 = v100;
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    sub_8DD8((uint64_t)v101);
    Swift::String v94 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, v102 & 1);
    uint64_t v103 = v94._object;
    DefaultStringInterpolation.appendLiteral(_:)(v94);
    swift_bridgeObjectRelease(v103);
    uint64_t v106 = v228;
    uint64_t v105 = v229;
    swift_bridgeObjectRetain(v229);
    sub_8DD8((uint64_t)v104);
    uint64_t v109 = String.init(stringInterpolation:)(v106, v105);
    uint64_t v108 = v95;
    sub_8DD8((uint64_t)v107);
    uint64_t v142 = v109;
    uint64_t v143 = v108;
  }

  return v142;
}

uint64_t sub_239DC(uint64_t a1)
{
  v6[1] = a1;
  uint64_t v12 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v10 = *(void *)(v12 - 8);
  unint64_t v7 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v11 = (char *)v6 - v7;
  uint64_t v9 = v2[3];
  uint64_t v8 = v2[4];
  sub_8C74(v2, v9);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v8 + 8))(v9);
  uint64_t v13 = NLGCATIdentifier.identifier.getter(v3);
  uint64_t v14 = v4;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v11, v12);
  return v13;
}

uint64_t sub_23AB0(uint64_t a1, double a2)
{
  uint64_t v339 = a1;
  uint64_t v3 = v2;
  uint64_t v376 = v3;
  int v340 = "Fatal error";
  uint64_t v341 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v342 = "SocialConversationFlowDelegatePlugin/SocialConversationFlowDelegatePlugin.swift";
  uint64_t v451 = 0LL;
  uint64_t v450 = 0LL;
  uint64_t v436 = 0LL;
  uint64_t v437 = 0LL;
  Swift::String v427 = (Swift::String)0LL;
  uint64_t v366 = 0LL;
  uint64_t v343 = 0LL;
  uint64_t v416 = 0LL;
  id v411 = 0LL;
  uint64_t v402 = 0LL;
  uint64_t v403 = 0LL;
  uint64_t v393 = 0LL;
  uint64_t v360 = 0LL;
  uint64_t v344 = type metadata accessor for Locale.Language(a2);
  uint64_t v345 = *(void *)(v344 - 8);
  unint64_t v346 = (*(void *)(v345 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v347 = (char *)&v156 - v346;
  unint64_t v348 = (*(void *)(*(void *)(sub_5150(&qword_D7600) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v349 = (uint64_t)&v156 - v348;
  uint64_t v350 = type metadata accessor for Locale(v7);
  uint64_t v351 = *(void *)(v350 - 8);
  unint64_t v352 = (*(void *)(v351 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  uint32_t v353 = (char *)&v156 - v352;
  unint64_t v354 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v355 = (char *)&v156 - v354;
  uint64_t v356 = sub_5150(&qword_D7608);
  uint64_t v357 = *(void *)(v356 - 8);
  unint64_t v358 = (*(void *)(v357 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v359 = (char *)&v156 - v358;
  uint64_t v361 = type metadata accessor for AuthoredFlowDescriptor(v12);
  uint64_t v362 = *(void *)(v361 - 8);
  uint64_t v363 = *(void *)(v362 + 64);
  unint64_t v364 = (v363 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  int v365 = (char *)&v156 - v364;
  uint64_t v367 = type metadata accessor for Logger(v14);
  uint64_t v368 = *(void *)(v367 - 8);
  uint64_t v372 = *(void *)(v368 + 64);
  unint64_t v369 = (v372 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v16 = __chkstk_darwin(v15);
  uint64_t v370 = (char *)&v156 - v369;
  unint64_t v371 = (v372 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v17 = __chkstk_darwin(v16);
  uint64_t v373 = (char *)&v156 - v371;
  unint64_t v374 = (v372 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  uint64_t v375 = (char *)&v156 - v374;
  uint64_t v451 = a1;
  uint64_t v450 = v18;
  uint64_t v377 = &v449;
  swift_beginAccess(v18 + 160);
  uint64_t v379 = *(void *)(v376 + 160);
  swift_bridgeObjectRetain(v379);
  swift_endAccess(v377);
  uint64_t v378 = sub_5150(&qword_D7350);
  uint64_t v380 = Dictionary.keys.getter(v379, &type metadata for String, v378, &protocol witness table for String);
  swift_bridgeObjectRelease(v379);
  v383 = &v448;
  uint64_t v448 = v380;
  uint64_t v19 = ((uint64_t (*)(void))AuthoredFlowDescriptor.flowId.getter)();
  v382 = v447;
  v447[0] = v19;
  v447[1] = v20;
  uint64_t v381 = sub_5150(&qword_D7610);
  unint64_t v21 = sub_299A8();
  int v384 = Sequence<>.contains(_:)(v382, v381, v21, &protocol witness table for String);
  sub_8DD8((uint64_t)v382);
  sub_1B82C(v383);
  if ((v384 & 1) != 0)
  {
    uint64_t v266 = v343;
    goto LABEL_27;
  }

  sub_29BF0();
  id v336 = sub_EB60();
  id v411 = v336;
  uint64_t v337 = AuthoredFlowDescriptor.templateDir.getter();
  uint64_t v338 = v22;
  if (v22)
  {
    uint64_t v334 = v337;
    uint64_t v335 = v338;
  }

  else
  {
    _assertionFailure(_:_:file:line:flags:)(v340, 11LL, 2LL, v341, 57LL, 2LL, v342, 79LL, 2, 138LL, 0);
    __break(1u);
  }

  uint64_t v329 = v335;
  id v332 = String._bridgeToObjectiveC()();
  uint64_t v23 = swift_bridgeObjectRelease(v329);
  AuthoredFlowDescriptor.flowId.getter(v23);
  uint64_t v330 = v24;
  id v331 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v330);
  unsigned int v333 = [v336 load:v332 withFlowId:v331];

  if ((v333 & 1) == 0)
  {
    Swift::String v89 = v373;
    uint64_t v90 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v368 + 16))(v89, v90, v367);
    (*(void (**)(char *, uint64_t, uint64_t))(v362 + 16))(v365, v339, v361);
    uint64_t v91 = *(unsigned __int8 *)(v362 + 80);
    uint64_t v242 = (v91 + 16) & ~v91;
    uint64_t v249 = 7LL;
    uint64_t v250 = swift_allocObject(&unk_CB6B8, v242 + v363, v91 | 7);
    uint64_t v92 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v362 + 32))(v250 + v242, v365, v361);
    uint64_t v258 = (os_log_s *)Logger.logObject.getter(v92);
    int v259 = static os_log_type_t.error.getter();
    uint64_t v245 = &v409;
    uint64_t v409 = 12LL;
    unint64_t v243 = sub_7788();
    unint64_t v244 = sub_77F0();
    unint64_t v93 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v410, v245, &type metadata for UInt32, &type metadata for Int, v243, v244, v93);
    uint32_t v246 = v410;
    uint64_t v247 = 17LL;
    uint64_t v94 = swift_allocObject(&unk_CB6E0, 17LL, v249);
    uint64_t v95 = v247;
    uint64_t v96 = v249;
    uint64_t v252 = v94;
    *(_BYTE *)(v94 + 16) = 32;
    uint64_t v97 = swift_allocObject(&unk_CB708, v95, v96);
    uint64_t v98 = v249;
    uint64_t v253 = v97;
    *(_BYTE *)(v97 + 16) = 8;
    uint64_t v248 = 32LL;
    uint64_t v99 = swift_allocObject(&unk_CB730, 32LL, v98);
    uint64_t v100 = v248;
    uint64_t v101 = v249;
    uint64_t v102 = v99;
    uint64_t v103 = v250;
    uint64_t v251 = v102;
    *(void *)(v102 + 16) = sub_29AF8;
    *(void *)(v102 + 24) = v103;
    uint64_t v104 = swift_allocObject(&unk_CB758, v100, v101);
    uint64_t v105 = v251;
    uint64_t v255 = v104;
    *(void *)(v104 + 16) = sub_88B8;
    *(void *)(v104 + 24) = v105;
    uint64_t v257 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v254 = _allocateUninitializedArray<A>(_:)(3LL, v257);
    uint64_t v256 = v106;
    swift_retain();
    uint64_t v107 = v252;
    uint64_t v108 = v256;
    *uint64_t v256 = sub_884C;
    v108[1] = v107;
    swift_retain();
    uint64_t v109 = v253;
    uint64_t v110 = v256;
    void v256[2] = sub_884C;
    v110[3] = v109;
    swift_retain();
    uint64_t v111 = v254;
    uint64_t v112 = v255;
    uint64_t v113 = v256;
    v256[4] = sub_8900;
    v113[5] = v112;
    sub_6648();
    swift_bridgeObjectRelease(v111);
    if (os_log_type_enabled(v258, (os_log_type_t)v259))
    {
      uint64_t v114 = v343;
      char v235 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v234 = sub_5150(&qword_D6B60);
      uint64_t v236 = sub_74D0(0LL, v234, v234);
      uint64_t v237 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v238 = &v408;
      uint64_t v408 = v235;
      uint64_t v239 = &v407;
      uint64_t v407 = v236;
      uint64_t v240 = &v406;
      uint64_t v406 = v237;
      sub_7528(2LL, &v408);
      sub_7528(1LL, v238);
      uint64_t v404 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v405 = v252;
      sub_753C(&v404, (uint64_t)v238, (uint64_t)v239, (uint64_t)v240);
      uint64_t v241 = v114;
      if (v114)
      {
        __break(1u);
      }

      else
      {
        uint64_t v404 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v405 = v253;
        sub_753C(&v404, (uint64_t)&v408, (uint64_t)&v407, (uint64_t)&v406);
        uint64_t v233 = 0LL;
        uint64_t v404 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v405 = v255;
        sub_753C(&v404, (uint64_t)&v408, (uint64_t)&v407, (uint64_t)&v406);
        _os_log_impl(&dword_0, v258, (os_log_type_t)v259, "Unable to load flow file for: %s", v235, v246);
        sub_7580(v236, 0LL);
        sub_7580(v237, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v368 + 8))(v373, v367);
    int v232 = 0;
    return v232 & 1;
  }

  uint64_t v25 = v375;
  object = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("languages", 9uLL, 1)._object;
  id v300 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  id v301 = [v336 getMetadata:v300];

  uint64_t v303 = static String._unconditionallyBridgeFromObjectiveC(_:)(v301);
  uint64_t v304 = v26;
  uint64_t v402 = v303;
  uint64_t v403 = v26;

  uint64_t v27 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v368 + 16))(v25, v27, v367);
  (*(void (**)(char *, uint64_t, uint64_t))(v362 + 16))(v365, v339, v361);
  uint64_t v28 = *(unsigned __int8 *)(v362 + 80);
  uint64_t v302 = (v28 + 16) & ~v28;
  uint64_t v315 = 7LL;
  uint64_t v309 = swift_allocObject(&unk_CB780, v302 + v363, v28 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v362 + 32))(v309 + v302, v365, v361);
  swift_bridgeObjectRetain(v304);
  uint64_t v314 = 32LL;
  uint64_t v29 = swift_allocObject(&unk_CB7A8, 32LL, v315);
  uint64_t v30 = v304;
  uint64_t v316 = v29;
  *(void *)(v29 + 16) = v303;
  *(void *)(v29 + 24) = v30;
  v327 = (os_log_s *)Logger.logObject.getter(v29);
  int v328 = static os_log_type_t.debug.getter();
  uint64_t v307 = &v400;
  uint64_t v400 = 22LL;
  unint64_t v305 = sub_7788();
  unint64_t v306 = sub_77F0();
  unint64_t v31 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v401, v307, &type metadata for UInt32, &type metadata for Int, v305, v306, v31);
  uint32_t v308 = v401;
  uint64_t v312 = 17LL;
  uint64_t v32 = swift_allocObject(&unk_CB7D0, 17LL, v315);
  uint64_t v33 = v312;
  uint64_t v34 = v315;
  uint64_t v318 = v32;
  int v311 = 32;
  *(_BYTE *)(v32 + 16) = 32;
  uint64_t v35 = swift_allocObject(&unk_CB7F8, v33, v34);
  uint64_t v36 = v314;
  uint64_t v37 = v315;
  uint64_t v319 = v35;
  int v313 = 8;
  *(_BYTE *)(v35 + 16) = 8;
  uint64_t v38 = swift_allocObject(&unk_CB820, v36, v37);
  uint64_t v39 = v314;
  uint64_t v40 = v315;
  uint64_t v41 = v38;
  uint64_t v42 = v309;
  uint64_t v310 = v41;
  *(void *)(v41 + 16) = sub_29AF8;
  *(void *)(v41 + 24) = v42;
  uint64_t v43 = swift_allocObject(&unk_CB848, v39, v40);
  uint64_t v44 = v312;
  uint64_t v45 = v315;
  uint64_t v46 = v43;
  uint64_t v47 = v310;
  uint64_t v320 = v46;
  *(void *)(v46 + 16) = sub_88B8;
  *(void *)(v46 + 24) = v47;
  uint64_t v48 = swift_allocObject(&unk_CB870, v44, v45);
  uint64_t v49 = v312;
  uint64_t v50 = v315;
  uint64_t v321 = v48;
  *(_BYTE *)(v48 + 16) = v311;
  uint64_t v51 = swift_allocObject(&unk_CB898, v49, v50);
  uint64_t v52 = v314;
  uint64_t v53 = v315;
  uint64_t v322 = v51;
  *(_BYTE *)(v51 + 16) = v313;
  uint64_t v54 = swift_allocObject(&unk_CB8C0, v52, v53);
  uint64_t v55 = v314;
  uint64_t v56 = v315;
  uint64_t v57 = v54;
  uint64_t v58 = v316;
  uint64_t v317 = v57;
  *(void *)(v57 + 16) = sub_1B890;
  *(void *)(v57 + 24) = v58;
  uint64_t v59 = swift_allocObject(&unk_CB8E8, v55, v56);
  uint64_t v60 = v317;
  uint64_t v324 = v59;
  *(void *)(v59 + 16) = sub_88B8;
  *(void *)(v59 + 24) = v60;
  uint64_t v326 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v323 = _allocateUninitializedArray<A>(_:)(6LL, v326);
  uint64_t v325 = v61;
  swift_retain();
  uint64_t v62 = v318;
  uint64_t v63 = v325;
  *uint64_t v325 = sub_884C;
  v63[1] = v62;
  swift_retain();
  uint64_t v64 = v319;
  uint64_t v65 = v325;
  v325[2] = sub_884C;
  void v65[3] = v64;
  swift_retain();
  uint64_t v66 = v320;
  uint64_t v67 = v325;
  v325[4] = sub_8900;
  v67[5] = v66;
  swift_retain();
  uint64_t v68 = v321;
  uint64_t v69 = v325;
  v325[6] = sub_884C;
  v69[7] = v68;
  swift_retain();
  uint64_t v70 = v322;
  Swift::String v71 = v325;
  v325[8] = sub_884C;
  v71[9] = v70;
  swift_retain();
  uint64_t v72 = v323;
  uint64_t v73 = v324;
  char v74 = v325;
  v325[10] = sub_8900;
  v74[11] = v73;
  sub_6648();
  swift_bridgeObjectRelease(v72);
  if (os_log_type_enabled(v327, (os_log_type_t)v328))
  {
    uint64_t v75 = v343;
    uint64_t v291 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v290 = sub_5150(&qword_D6B60);
    uint64_t v292 = sub_74D0(0LL, v290, v290);
    uint64_t v293 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    int v295 = &v389;
    uint64_t v389 = v291;
    uint64_t v296 = &v388;
    uint64_t v388 = v292;
    uint64_t v297 = &v387;
    uint64_t v387 = v293;
    unsigned int v294 = 2;
    sub_7528(2LL, &v389);
    sub_7528(v294, v295);
    unint64_t v385 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v386 = v318;
    sub_753C(&v385, (uint64_t)v295, (uint64_t)v296, (uint64_t)v297);
    uint64_t v298 = v75;
    if (v75)
    {
      __break(1u);
    }

    else
    {
      unint64_t v385 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v386 = v319;
      sub_753C(&v385, (uint64_t)&v389, (uint64_t)&v388, (uint64_t)&v387);
      uint64_t v287 = 0LL;
      uint64_t v77 = v287;
      unint64_t v385 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v386 = v320;
      sub_753C(&v385, (uint64_t)&v389, (uint64_t)&v388, (uint64_t)&v387);
      uint64_t v286 = v77;
      unint64_t v385 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v386 = v321;
      sub_753C(&v385, (uint64_t)&v389, (uint64_t)&v388, (uint64_t)&v387);
      uint64_t v285 = 0LL;
      unint64_t v385 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v386 = v322;
      sub_753C(&v385, (uint64_t)&v389, (uint64_t)&v388, (uint64_t)&v387);
      uint64_t v284 = 0LL;
      unint64_t v385 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v386 = v324;
      sub_753C(&v385, (uint64_t)&v389, (uint64_t)&v388, (uint64_t)&v387);
      uint64_t v283 = 0LL;
      _os_log_impl(&dword_0, v327, (os_log_type_t)v328, "Languages meta for %s: %s", v291, v308);
      sub_7580(v292, 0LL);
      sub_7580(v293, 2LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v288 = v283;
    }
  }

  else
  {
    uint64_t v76 = v343;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v288 = v76;
  }

  uint64_t v78 = v288;

  (*(void (**)(char *, uint64_t))(v368 + 8))(v375, v367);
  uint64_t v398 = v303;
  uint64_t v399 = v304;
  Builtin::Word v273 = 1LL;
  unsigned int v271 = 1;
  Swift::String v79 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-", 1uLL, 1);
  uint64_t v269 = &v397;
  Swift::String v397 = v79;
  Swift::String v80 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("_", v273, v271 & 1);
  uint64_t v268 = &v396;
  Swift::String v396 = v80;
  unint64_t v267 = sub_B880();
  v280 = &type metadata for String;
  uint64_t v81 = sub_25A20();
  uint64_t v272 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v269, v268, v81, 0LL, 0LL, v271, v280);
  uint64_t v270 = v82;
  sub_8DD8((uint64_t)v268);
  sub_8DD8((uint64_t)v269);
  v277 = v395;
  v395[0] = v272;
  v395[1] = v270;
  Swift::String v83 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("/[ ,]+/", 7uLL, v271 & 1);
  Regex.init(_regexString:version:)(v83._countAndFlagsBits, v83._object, v273, &type metadata for Substring);
  unint64_t v275 = sub_29FC8();
  unint64_t v276 = sub_2A030();
  uint64_t v274 = sub_25A3C();
  char v84 = sub_25A54();
  uint64_t v278 = BidirectionalCollection<>.split<A>(separator:maxSplits:omittingEmptySubsequences:)( v359,  v274,  v84 & 1,  v280,  v356,  v275,  v276);
  (*(void (**)(char *, uint64_t))(v357 + 8))(v359, v356);
  sub_8DD8((uint64_t)v277);
  uint64_t v394 = v278;
  uint64_t v279 = sub_5150(&qword_D7638);
  unint64_t v85 = sub_2A0A0();
  uint64_t result = sub_25AD4( (void (*)(char *, char *))sub_25A70,  0LL,  v279,  (uint64_t)v280,  (uint64_t)&type metadata for Never,  v85,  v86,  (uint64_t)&protocol witness table for Never,  v289);
  uint64_t v281 = v78;
  uint64_t v282 = result;
  if (!v78)
  {
    uint64_t v265 = v282;
    sub_1B82C(&v394);
    uint64_t v393 = v265;
    uint64_t v260 = AuthoredFlowDescriptor.flowId.getter(&v394);
    uint64_t v261 = v88;
    swift_bridgeObjectRetain(v265);
    unint64_t v263 = &v392;
    uint64_t v392 = v265;
    uint64_t v262 = v391;
    v391[0] = v260;
    v391[1] = v261;
    unint64_t v264 = &v390;
    swift_beginAccess(v376 + 160);
    sub_5150(&qword_D7648);
    Dictionary.subscript.setter(v263, v262);
    swift_endAccess(v264);
    swift_bridgeObjectRelease(v265);
    swift_bridgeObjectRelease(v304);

    uint64_t v266 = v281;
LABEL_27:
    uint64_t v204 = v266;
    swift_retain();
    uint64_t v218 = v444;
    sub_454C(v376 + 16, (uint64_t)v444);
    swift_release();
    uint64_t v206 = v445;
    uint64_t v205 = v446;
    sub_8C74(v218, v445);
    uint64_t v115 = *(void (**)(uint64_t))(v205 + 8);
    uint64_t v217 = &v441;
    v115(v206);
    uint64_t v208 = v442;
    uint64_t v207 = v443;
    sub_8C74(v217, v442);
    uint64_t v116 = dispatch thunk of DeviceState.siriLocale.getter(v208, v207);
    uint64_t v209 = Locale.identifier.getter(v116);
    uint64_t v210 = v117;
    Swift::String v227 = *(void (**)(char *, uint64_t))(v351 + 8);
    v227(v355, v350);
    uint64_t v216 = v440;
    v440[0] = v209;
    v440[1] = v210;
    Builtin::Word v211 = 1LL;
    unsigned int v229 = 1;
    Swift::String v118 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-", 1uLL, 1);
    uint64_t v215 = &v439;
    Swift::String v439 = v118;
    Swift::String v119 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("_", v211, v229 & 1);
    uint64_t v214 = &v438;
    Swift::String v438 = v119;
    unint64_t v212 = sub_B880();
    uint64_t v213 = &type metadata for String;
    uint64_t v120 = sub_25A20();
    uint64_t v228 = 0LL;
    uint64_t v219 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v215, v214, v120, 0LL, 0LL, v229, v213);
    uint64_t v220 = v121;
    sub_8DD8((uint64_t)v214);
    sub_8DD8((uint64_t)v215);
    sub_8DD8((uint64_t)v216);
    sub_4598(v217);
    sub_4598(v218);
    uint64_t v436 = v219;
    uint64_t v437 = v220;
    swift_retain();
    uint64_t v221 = v432;
    sub_454C(v376 + 16, (uint64_t)v432);
    swift_release();
    uint64_t v223 = v433;
    uint64_t v222 = v434;
    sub_8C74(v221, v433);
    uint64_t v122 = *(void (**)(uint64_t))(v222 + 8);
    uint32_t v224 = v429;
    v122(v223);
    uint64_t v226 = v430;
    uint64_t v225 = v431;
    sub_8C74(v224, v430);
    dispatch thunk of DeviceState.siriLocale.getter(v226, v225);
    Locale.language.getter(v123);
    uint64_t v124 = ((uint64_t (*)(char *, uint64_t))v227)(v353, v350);
    Locale.Language.languageCode.getter(v124);
    (*(void (**)(char *, uint64_t))(v345 + 8))(v347, v344);
    uint64_t v230 = type metadata accessor for Locale.LanguageCode(v228);
    uint64_t v231 = *(void *)(v230 - 8);
    if ((*(unsigned int (**)(uint64_t, void))(v231 + 48))(v349, v229) == 1)
    {
      uint64_t v157 = 0LL;
      sub_4598(v429);
      sub_4598(v432);
      uint32_t v126 = (Swift::String *)sub_29A18(v349);
      v203._uint64_t countAndFlagsBits = (uint64_t)v157;
      v203._object = v157;
    }

    else
    {
      v202._uint64_t countAndFlagsBits = Locale.LanguageCode.identifier.getter();
      v202._object = v125;
      (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v349, v230);
      sub_4598(v429);
      uint32_t v126 = (Swift::String *)sub_4598(v432);
      Swift::String v203 = v202;
    }

    Swift::String v428 = v203;
    if (v203._object)
    {
      Swift::String v435 = v428;
    }

    else
    {
      Swift::String v435 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
      uint32_t v126 = &v428;
      sub_8DD8((uint64_t)&v428);
    }

    Swift::String v195 = v435;
    Swift::String v427 = v435;
    uint64_t v197 = AuthoredFlowDescriptor.flowId.getter(v126);
    uint64_t v198 = v127;
    uint64_t v196 = &v426;
    swift_beginAccess(v376 + 160);
    uint64_t v199 = *(void *)(v376 + 160);
    swift_bridgeObjectRetain(v199);
    swift_endAccess(v196);
    uint64_t v200 = v424;
    v424[0] = v197;
    v424[1] = v198;
    Dictionary.subscript.getter(&v425);
    sub_8DD8((uint64_t)v200);
    uint64_t v201 = v425;
    if (v425)
    {
      uint64_t v194 = v201;
      uint64_t v192 = v201;
      uint64_t v416 = v201;
      swift_bridgeObjectRelease(v199);
      swift_bridgeObjectRetain(v192);
      unint64_t v191 = &v415;
      uint64_t v415 = v192;
      sub_1BFB0();
      int v193 = Collection.isEmpty.getter(v378);
      sub_1B82C(v191);
      swift_bridgeObjectRetain(v192);
      swift_bridgeObjectRetain(v195._object);
      if ((v193 & 1) != 0)
      {
        int v190 = 1;
      }

      else
      {
        uint64_t v414 = v192;
        uint64_t v189 = &v413;
        Swift::String v413 = v195;
        unint64_t v128 = sub_1B278();
        int v190 = Sequence<>.contains(_:)(v189, v378, v128, &protocol witness table for String);
      }

      int v188 = v190;
      swift_bridgeObjectRelease(v192);
      swift_bridgeObjectRelease(v195._object);
      swift_bridgeObjectRetain(v192);
      swift_bridgeObjectRetain(v220);
      if ((v188 & 1) != 0)
      {
        int v187 = 1;
      }

      else
      {
        v412[2] = v192;
        unint64_t v186 = v412;
        v412[0] = v219;
        v412[1] = v220;
        unint64_t v129 = sub_1B278();
        int v187 = Sequence<>.contains(_:)(v186, v378, v129, &protocol witness table for String);
      }

      int v185 = v187;
      swift_bridgeObjectRelease(v192);
      swift_bridgeObjectRelease(v220);
      swift_bridgeObjectRelease(v192);
      swift_bridgeObjectRelease(v195._object);
      swift_bridgeObjectRelease(v220);
      int v232 = v185;
    }

    else
    {
      int v130 = v370;
      swift_bridgeObjectRelease(v199);
      uint64_t v131 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v368 + 16))(v130, v131, v367);
      (*(void (**)(char *, uint64_t, uint64_t))(v362 + 16))(v365, v339, v361);
      uint64_t v132 = *(unsigned __int8 *)(v362 + 80);
      uint64_t v167 = (v132 + 16) & ~v132;
      uint64_t v174 = 7LL;
      uint64_t v175 = swift_allocObject(&unk_CB5F0, v167 + v363, v132 | 7);
      uint64_t v133 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v362 + 32))(v175 + v167, v365, v361);
      uint64_t v183 = (os_log_s *)Logger.logObject.getter(v133);
      int v184 = static os_log_type_t.error.getter();
      uint64_t v170 = &v422;
      uint64_t v422 = 12LL;
      unint64_t v168 = sub_7788();
      unint64_t v169 = sub_77F0();
      unint64_t v134 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v423, v170, &type metadata for UInt32, &type metadata for Int, v168, v169, v134);
      uint32_t v171 = v423;
      uint64_t v172 = 17LL;
      uint64_t v135 = swift_allocObject(&unk_CB618, 17LL, v174);
      uint64_t v136 = v172;
      uint64_t v137 = v174;
      uint64_t v177 = v135;
      *(_BYTE *)(v135 + 16) = 32;
      uint64_t v138 = swift_allocObject(&unk_CB640, v136, v137);
      uint64_t v139 = v174;
      uint64_t v178 = v138;
      *(_BYTE *)(v138 + 16) = 8;
      uint64_t v173 = 32LL;
      uint64_t v140 = swift_allocObject(&unk_CB668, 32LL, v139);
      uint64_t v141 = v173;
      uint64_t v142 = v174;
      uint64_t v143 = v140;
      uint64_t v144 = v175;
      uint64_t v176 = v143;
      *(void *)(v143 + 16) = sub_29AF8;
      *(void *)(v143 + 24) = v144;
      uint64_t v145 = swift_allocObject(&unk_CB690, v141, v142);
      uint64_t v146 = v176;
      uint64_t v180 = v145;
      *(void *)(v145 + 16) = sub_88B8;
      *(void *)(v145 + 24) = v146;
      uint64_t v182 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v179 = _allocateUninitializedArray<A>(_:)(3LL, v182);
      unint64_t v181 = v147;
      swift_retain();
      uint64_t v148 = v177;
      uint64_t v149 = v181;
      void *v181 = sub_884C;
      v149[1] = v148;
      swift_retain();
      uint64_t v150 = v178;
      uint64_t v151 = v181;
      v181[2] = sub_884C;
      v151[3] = v150;
      swift_retain();
      uint64_t v152 = v179;
      uint64_t v153 = v180;
      unint64_t v154 = v181;
      v181[4] = sub_8900;
      v154[5] = v153;
      sub_6648();
      swift_bridgeObjectRelease(v152);
      if (os_log_type_enabled(v183, (os_log_type_t)v184))
      {
        uint64_t v155 = v204;
        unint64_t v160 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v159 = sub_5150(&qword_D6B60);
        uint64_t v161 = sub_74D0(0LL, v159, v159);
        uint64_t v162 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v163 = &v421;
        v421 = v160;
        uint64_t v164 = &v420;
        uint64_t v420 = v161;
        int v165 = &v419;
        uint64_t v419 = v162;
        sub_7528(2LL, &v421);
        sub_7528(1LL, v163);
        v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v418 = v177;
        sub_753C(&v417, (uint64_t)v163, (uint64_t)v164, (uint64_t)v165);
        uint64_t v166 = v155;
        if (v155)
        {
          __break(1u);
        }

        else
        {
          v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v418 = v178;
          sub_753C(&v417, (uint64_t)&v421, (uint64_t)&v420, (uint64_t)&v419);
          uint64_t v158 = 0LL;
          v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v418 = v180;
          sub_753C(&v417, (uint64_t)&v421, (uint64_t)&v420, (uint64_t)&v419);
          _os_log_impl(&dword_0, v183, (os_log_type_t)v184, "Unable to find enabled locales for flow %s", v160, v171);
          sub_7580(v161, 0LL);
          sub_7580(v162, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v368 + 8))(v370, v367);
      swift_bridgeObjectRelease(v195._object);
      swift_bridgeObjectRelease(v220);
      int v232 = 0;
    }

    return v232 & 1;
  }

  __break(1u);
  return result;
}

uint64_t sub_25A00()
{
  return AuthoredFlowDescriptor.flowId.getter();
}

uint64_t sub_25A20()
{
  return 0LL;
}

uint64_t sub_25A3C()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t sub_25A54()
{
  return 1LL;
}

uint64_t sub_25A70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = String.init(_:)();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_25AD4( void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, uint64_t a8, uint64_t a9)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v61 = a3;
  uint64_t v52 = a4;
  uint64_t v39 = a5;
  uint64_t v60 = a6;
  uint64_t v42 = a9;
  uint64_t v43 = "Fatal error";
  uint64_t v44 = "Index out of bounds";
  uint64_t v45 = "Swift/Collection.swift";
  uint64_t v46 = "Range requires lowerBound <= upperBound";
  uint64_t v47 = "Swift/Range.swift";
  uint64_t v48 = "Index out of range";
  v72[3] = a3;
  v72[2] = a4;
  v72[1] = a5;
  uint64_t v49 = *(void *)(a5 - 8);
  unint64_t v50 = (*(void *)(v49 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(a7);
  uint64_t v51 = (char *)v22 - v50;
  uint64_t v53 = 0LL;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(v9);
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v56 = (*(void *)(v55 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v57 = (char *)v22 - v56;
  unint64_t v58 = (*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v11);
  uint64_t v59 = (char *)v22 - v58;
  uint64_t v62 = swift_getAssociatedTypeWitness(v13);
  uint64_t v63 = *(void *)(v62 - 8);
  unint64_t v64 = (*(void *)(v63 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v15 = __chkstk_darwin(v14);
  uint64_t v65 = (char *)v22 - v64;
  unint64_t v66 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v17 = __chkstk_darwin(v15);
  uint64_t v67 = (char *)v22 - v66;
  Swift::Int v68 = dispatch thunk of Collection.count.getter(v17);
  if (v68)
  {
    v72[0] = ContiguousArray.init()(v52);
    uint64_t v36 = type metadata accessor for ContiguousArray(0LL, v52);
    ContiguousArray.reserveCapacity(_:)(v68);
    uint64_t result = dispatch thunk of Collection.startIndex.getter(v61, v60);
    if (v68 >= 0)
    {
      uint64_t v34 = 0LL;
      for (uint64_t i = v41; ; uint64_t i = v25)
      {
        uint64_t v32 = i;
        uint64_t v33 = v34;
        if (v34 == v68) {
          goto LABEL_17;
        }
        if (v33 < 0 || v33 >= v68) {
          goto LABEL_16;
        }
        uint64_t v70 = v33;
        if (v68 < 0) {
          goto LABEL_15;
        }
        if (v33 >= v68) {
          break;
        }
        uint64_t v31 = v33 + 1;
        if (__OFADD__(v33, 1LL))
        {
          __break(1u);
          return result;
        }

        char v71 = 0;
        uint64_t v30 = v31;
LABEL_18:
        uint64_t v29 = v30;
        if ((v71 & 1) != 0)
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v65, v67, v62);
          _expectEnd<A>(of:is:)(v40, v65, v61, v60);
          (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v62);
          uint64_t v26 = v72[0];
          swift_retain();
          swift_release();
          uint64_t v27 = v26;
          uint64_t v28 = v32;
          return v27;
        }

        uint64_t v24 = &v69;
        uint64_t v23 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
        (*(void (**)(char *))(v55 + 16))(v57);
        v23(v24, 0LL);
        uint64_t v20 = v32;
        v37(v57, v51);
        uint64_t v25 = v20;
        if (v20)
        {
          (*(void (**)(char *, uint64_t))(v55 + 8))(v57, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v63 + 8))(v67, v62);
          sub_2937C(v72);
          (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v42, v51, v39);
          return v22[1];
        }

        (*(void (**)(char *, uint64_t))(v55 + 8))(v57, AssociatedTypeWitness);
        ContiguousArray.append(_:)(v59, v36);
        dispatch thunk of Collection.formIndex(after:)(v67, v61, v60);
        uint64_t result = v25;
        uint64_t v34 = v29;
      }

      LOBYTE(v21) = 2;
      _assertionFailure(_:_:file:line:flags:)(v43, 11LL, 2LL, v44, 19LL, 2LL, v45, 22LL, v21, 714LL, 0);
      __break(1u);
LABEL_15:
      LOBYTE(v21) = 2;
      _assertionFailure(_:_:file:line:flags:)(v43, 11LL, 2LL, v46, 39LL, 2LL, v47, 17LL, v21, 754LL, 0);
      __break(1u);
LABEL_16:
      LOBYTE(v21) = 2;
      _fatalErrorMessage(_:_:file:line:flags:)(v43, 11LL, 2LL, v48, 18LL, 2LL, v47, 17LL, v21, 305LL, 0);
      __break(1u);
LABEL_17:
      uint64_t v70 = 0LL;
      char v71 = 1;
      uint64_t v30 = v33;
      goto LABEL_18;
    }

    _assertionFailure(_:_:file:line:flags:)(v43, 11LL, 2LL, v46, 39LL, 2LL, v47, 17LL, 2, 754LL, 0);
    __break(1u);
  }

  uint64_t v27 = static Array._allocateUninitialized(_:)(0LL, v52);
  uint64_t v28 = v41;
  return v27;
}

uint64_t sub_262C0()
{
  uint64_t v162 = 0LL;
  uint64_t v161 = 0LL;
  uint64_t v112 = 0LL;
  uint64_t v113 = 0LL;
  uint64_t v114 = type metadata accessor for Logger(0LL);
  uint64_t v115 = *(void *)(v114 - 8);
  unint64_t v116 = (*(void *)(v115 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v2 = __chkstk_darwin(v1);
  uint64_t v117 = (char *)&v52 - v116;
  unint64_t v118 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  Swift::String v119 = (char *)&v52 - v118;
  uint64_t v120 = type metadata accessor for Locale(v4);
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v122 = *(void *)(v121 + 64);
  unint64_t v123 = (v122 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v124 = (char *)&v52 - v123;
  unint64_t v125 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint32_t v126 = (char *)&v52 - v125;
  uint64_t v162 = (char *)&v52 - v125;
  uint64_t v161 = v0;
  swift_retain();
  uint64_t v133 = v158;
  sub_454C(v0 + 16, (uint64_t)v158);
  swift_release();
  uint64_t v129 = v159;
  uint64_t v128 = v160;
  sub_8C74(v133, v159);
  double v8 = *(void (**)(uint64_t))(v128 + 40);
  uint64_t v132 = (void *)((char *)v155 + 4);
  v8(v129);
  uint64_t v131 = v156;
  uint64_t v130 = v157;
  sub_8C74(v132, v156);
  int v134 = (*(uint64_t (**)(uint64_t))(v130 + 24))(v131);
  sub_4598(v132);
  sub_4598(v133);
  if ((v134 & 1) != 0)
  {
    swift_retain();
    uint64_t v106 = v147;
    sub_454C(v127 + 16, (uint64_t)v147);
    swift_release();
    uint64_t v102 = v148;
    uint64_t v101 = v149;
    sub_8C74(v106, v148);
    double v9 = *(void (**)(uint64_t))(v101 + 8);
    uint64_t v105 = &v144;
    v9(v102);
    uint64_t v104 = v145;
    uint64_t v103 = v146;
    sub_8C74(v105, v145);
    dispatch thunk of DeviceState.siriLocale.getter(v104, v103);
    sub_4598(v105);
    sub_4598(v106);
    uint64_t v107 = *(void *)(v127 + 72);
    uint64_t v10 = swift_bridgeObjectRetain(v107);
    uint64_t v110 = &v143;
    uint64_t v143 = v107;
    uint64_t v11 = Locale.identifier.getter(v10);
    uint64_t v109 = v142;
    v142[0] = v11;
    v142[1] = v12;
    uint64_t v108 = sub_5150(&qword_D7350);
    unint64_t v13 = sub_1B278();
    int v111 = Sequence<>.contains(_:)(v109, v108, v13, &protocol witness table for String);
    sub_8DD8((uint64_t)v109);
    sub_1B82C(v110);
    if ((v111 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v121 + 8))(v126, v120);
      int v100 = 1;
    }

    else
    {
      double v14 = v119;
      uint64_t v15 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v14, v15, v114);
      (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v124, v126, v120);
      uint64_t v16 = *(unsigned __int8 *)(v121 + 80);
      uint64_t v82 = (v16 + 16) & ~v16;
      uint64_t v89 = 7LL;
      uint64_t v90 = swift_allocObject(&unk_CB910, v82 + v122, v16 | 7);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v121 + 32))(v90 + v82, v124, v120);
      uint64_t v98 = (os_log_s *)Logger.logObject.getter(v17);
      int v99 = static os_log_type_t.debug.getter();
      unint64_t v85 = &v140;
      uint64_t v140 = 12LL;
      unint64_t v83 = sub_7788();
      unint64_t v84 = sub_77F0();
      unint64_t v18 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v141, v85, &type metadata for UInt32, &type metadata for Int, v83, v84, v18);
      uint32_t v86 = v141;
      uint64_t v87 = 17LL;
      uint64_t v19 = swift_allocObject(&unk_CB938, 17LL, v89);
      uint64_t v20 = v87;
      uint64_t v21 = v89;
      uint64_t v92 = v19;
      *(_BYTE *)(v19 + 16) = 32;
      uint64_t v22 = swift_allocObject(&unk_CB960, v20, v21);
      uint64_t v23 = v89;
      uint64_t v93 = v22;
      *(_BYTE *)(v22 + 16) = 8;
      uint64_t v88 = 32LL;
      uint64_t v24 = swift_allocObject(&unk_CB988, 32LL, v23);
      uint64_t v25 = v88;
      uint64_t v26 = v89;
      uint64_t v27 = v24;
      uint64_t v28 = v90;
      uint64_t v91 = v27;
      *(void *)(v27 + 16) = sub_2A180;
      *(void *)(v27 + 24) = v28;
      uint64_t v29 = swift_allocObject(&unk_CB9B0, v25, v26);
      uint64_t v30 = v91;
      uint64_t v95 = v29;
      *(void *)(v29 + 16) = sub_88B8;
      *(void *)(v29 + 24) = v30;
      uint64_t v97 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v94 = _allocateUninitializedArray<A>(_:)(3LL, v97);
      uint64_t v96 = v31;
      swift_retain();
      uint64_t v32 = v92;
      uint64_t v33 = v96;
      *uint64_t v96 = sub_884C;
      v33[1] = v32;
      swift_retain();
      uint64_t v34 = v93;
      uint64_t v35 = v96;
      v96[2] = sub_884C;
      v35[3] = v34;
      swift_retain();
      uint64_t v36 = v94;
      uint64_t v37 = v95;
      uint64_t v38 = v96;
      v96[4] = sub_8900;
      v38[5] = v37;
      sub_6648();
      swift_bridgeObjectRelease(v36);
      if (os_log_type_enabled(v98, (os_log_type_t)v99))
      {
        uint64_t v39 = v112;
        uint64_t v75 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v74 = sub_5150(&qword_D6B60);
        uint64_t v76 = sub_74D0(0LL, v74, v74);
        uint64_t v77 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v78 = &v139;
        uint64_t v139 = v75;
        Swift::String v79 = &v138;
        uint64_t v138 = v76;
        Swift::String v80 = &v137;
        uint64_t v137 = v77;
        sub_7528(2LL, &v139);
        sub_7528(1LL, v78);
        uint64_t v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v136 = v92;
        sub_753C(&v135, (uint64_t)v78, (uint64_t)v79, (uint64_t)v80);
        uint64_t v81 = v39;
        if (v39)
        {
          __break(1u);
        }

        else
        {
          uint64_t v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v136 = v93;
          sub_753C(&v135, (uint64_t)&v139, (uint64_t)&v138, (uint64_t)&v137);
          uint64_t v73 = 0LL;
          uint64_t v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v136 = v95;
          sub_753C(&v135, (uint64_t)&v139, (uint64_t)&v138, (uint64_t)&v137);
          _os_log_impl(&dword_0, v98, (os_log_type_t)v99, "New greeting flow not supported for locale: %s", v75, v86);
          sub_7580(v76, 0LL);
          sub_7580(v77, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v115 + 8))(v119, v114);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v126, v120);
      int v100 = 0;
    }
  }

  else
  {
    uint64_t v40 = v117;
    uint64_t v41 = sub_AD514();
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 16))(v40, v41, v114);
    char v71 = (os_log_s *)Logger.logObject.getter(v42);
    int v70 = static os_log_type_t.debug.getter();
    Swift::Int v68 = &v154;
    uint64_t v154 = 2LL;
    unint64_t v66 = sub_7788();
    unint64_t v67 = sub_77F0();
    unint64_t v43 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(v155, v68, &type metadata for UInt32, &type metadata for Int, v66, v67, v43);
    uint32_t v69 = v155[0];
    uint64_t v44 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v72 = _allocateUninitializedArray<A>(_:)(0LL, v44);
    if (os_log_type_enabled(v71, (os_log_type_t)v70))
    {
      uint64_t v45 = v112;
      unint64_t v56 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v54 = sub_5150(&qword_D6B60);
      uint64_t v55 = 0LL;
      uint64_t v57 = sub_74D0(0LL, v54, v54);
      uint64_t v58 = sub_74D0(v55, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v62 = &v153;
      uint64_t v153 = v56;
      uint64_t v63 = &v152;
      uint64_t v152 = v57;
      uint64_t v60 = &v151;
      uint64_t v151 = v58;
      unsigned int v59 = 0;
      sub_7528(0LL, &v153);
      sub_7528(v59, v62);
      uint64_t v150 = v72;
      uint64_t v61 = &v52;
      __chkstk_darwin(v46);
      uint64_t v47 = v63;
      uint64_t v48 = &v52 - 6;
      unint64_t v64 = &v52 - 6;
      v48[2] = (uint64_t)v62;
      v48[3] = (uint64_t)v47;
      v48[4] = v49;
      uint64_t v65 = sub_5150(&qword_D6B78);
      unint64_t v50 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v64, v65, v50);
      if (v45)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v71, (os_log_type_t)v70, "New greeting flow not enabled", v56, v69);
        uint64_t v53 = 0LL;
        sub_7580(v57, 0LL);
        sub_7580(v58, v53);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v72);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v72);
    }

    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v114);
    int v100 = 0;
  }

  return v100 & 1;
}

uint64_t sub_26D50()
{
  return Locale.identifier.getter();
}

uint64_t sub_26D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v198)(void *__return_ptr, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _BYTE *v204;
  uint64_t v205;
  uint32_t v206;
  void v207[2];
  uint64_t v208;
  uint64_t (*v209)(uint64_t, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void v218[2];
  void v219[2];
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v160 = a2;
  uint64_t v197 = a1;
  uint64_t v222 = 0LL;
  uint64_t v221 = 0LL;
  uint64_t v220 = 0LL;
  uint64_t v182 = 0LL;
  uint64_t v161 = type metadata accessor for INSiriSocialConversation(0LL);
  uint64_t v162 = *(void *)(v161 - 8);
  uint64_t v163 = *(void *)(v162 + 64);
  unint64_t v164 = (v163 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v3 = __chkstk_darwin(v2);
  int v165 = (char *)&v68 - v164;
  unint64_t v166 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v3);
  uint64_t v167 = (char *)&v68 - v166;
  unint64_t v168 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  unint64_t v169 = (char *)&v68 - v168;
  uint64_t v222 = (char *)&v68 - v168;
  uint64_t v170 = type metadata accessor for Logger(v7);
  uint64_t v171 = *(void *)(v170 - 8);
  unint64_t v172 = (*(void *)(v171 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  uint64_t v173 = (char *)&v68 - v172;
  unint64_t v174 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v175 = (char *)&v68 - v174;
  uint64_t v176 = sub_5150(&qword_D6B20);
  uint64_t v177 = *(void *)(v176 - 8);
  unint64_t v178 = (*(void *)(v177 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v12 = __chkstk_darwin(v11);
  uint64_t v179 = (char *)&v68 - v178;
  unint64_t v180 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v12);
  unint64_t v181 = (char *)&v68 - v180;
  unint64_t v183 = (*(void *)(*(void *)(sub_5150(&qword_D6B28) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v15 = __chkstk_darwin(v14);
  int v184 = (char *)&v68 - v183;
  unint64_t v185 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v15);
  uint64_t v186 = (uint64_t)&v68 - v185;
  uint64_t v187 = type metadata accessor for Parse(v17);
  uint64_t v188 = *(void *)(v187 - 8);
  unint64_t v189 = (*(void *)(v188 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v18);
  int v190 = (char *)&v68 - v189;
  uint64_t v195 = sub_5150(&qword_D7180);
  uint64_t v193 = *(void *)(v195 - 8);
  unint64_t v192 = (*(void *)(v193 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v19);
  uint64_t v194 = (char *)&v68 - v192;
  uint64_t v221 = v20;
  uint64_t v220 = v21;
  sub_8115C();
  uint64_t v198 = (void (*)(void *__return_ptr, uint64_t))Transformer.transform.getter(v195);
  uint64_t v196 = v22;
  (*(void (**)(char *, uint64_t))(v193 + 8))(v194, v195);
  v198(v219, v197);
  uint64_t v199 = 0LL;
  uint64_t v200 = 0LL;
  uint64_t v155 = v219[0];
  uint64_t v156 = v219[1];
  swift_release();
  uint64_t v157 = v155;
  uint64_t v158 = v156;
  uint64_t v159 = v199;
  uint64_t v154 = v199;
  v218[0] = v155;
  v218[1] = v156;
  BOOL v153 = v156 == 0;
  BOOL v152 = v153;
  sub_8DD8((uint64_t)v218);
  (*(void (**)(char *, uint64_t, uint64_t))(v188 + 16))(v190, v197, v187);
  if (v152)
  {
    uint64_t v23 = v154;
    sub_81108();
    uint64_t v149 = (void (*)(char *))Transformer.transform.getter(v176);
    uint64_t v148 = v24;
    (*(void (**)(char *, uint64_t))(v177 + 8))(v181, v176);
    v149(v190);
    uint64_t v150 = v23;
    uint64_t v151 = v23;
    if (v23)
    {
      uint64_t v145 = v151;
      uint64_t v146 = 0LL;
      swift_release();
      swift_errorRelease(v145);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v162 + 56))(v186, 1LL, 1LL, v161);
      uint64_t v147 = v146;
    }

    else
    {
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v162 + 56))(v186, 0LL, 1LL, v161);
      swift_release();
      uint64_t v147 = v150;
    }

    uint64_t v144 = v147;
    BOOL v143 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48))(v186, 1LL, v161) == 1;
    BOOL v140 = v143;
    sub_890C(v186);
    BOOL v141 = v140;
    uint64_t v142 = v144;
  }

  else
  {
    BOOL v141 = 0;
    uint64_t v142 = v154;
  }

  uint64_t v138 = v142;
  BOOL v139 = v141;
  (*(void (**)(char *, uint64_t))(v188 + 8))(v190, v187);
  if (v139)
  {
    uint64_t v25 = v175;
    uint64_t v26 = sub_AD514();
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v171 + 16))(v25, v26, v170);
    uint64_t v136 = (os_log_s *)Logger.logObject.getter(v27);
    int v135 = static os_log_type_t.error.getter();
    uint64_t v133 = &v205;
    uint64_t v205 = 2LL;
    unint64_t v131 = sub_7788();
    unint64_t v132 = sub_77F0();
    unint64_t v28 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v206, v133, &type metadata for UInt32, &type metadata for Int, v131, v132, v28);
    uint32_t v134 = v206;
    uint64_t v29 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v137 = _allocateUninitializedArray<A>(_:)(0LL, v29);
    if (os_log_type_enabled(v136, (os_log_type_t)v135))
    {
      uint64_t v30 = v138;
      uint64_t v121 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v119 = sub_5150(&qword_D6B60);
      uint64_t v120 = 0LL;
      uint64_t v122 = sub_74D0(0LL, v119, v119);
      uint64_t v123 = sub_74D0(v120, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v127 = &v204;
      uint64_t v204 = v121;
      uint64_t v128 = &v203;
      Swift::String v203 = v122;
      unint64_t v125 = &v202;
      Swift::String v202 = v123;
      unsigned int v124 = 0;
      sub_7528(0LL, &v204);
      sub_7528(v124, v127);
      uint64_t v201 = v137;
      uint32_t v126 = &v68;
      __chkstk_darwin(v31);
      uint64_t v32 = v128;
      uint64_t v33 = &v68 - 6;
      uint64_t v129 = &v68 - 6;
      v33[2] = (uint64_t)v127;
      v33[3] = (uint64_t)v32;
      v33[4] = v34;
      uint64_t v130 = sub_5150(&qword_D6B78);
      unint64_t v35 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v129, v130, v35);
      if (v30)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl( &dword_0,  v136,  (os_log_type_t)v135,  "SocialConversationFlowDelegatePlugin received a parse that cannot be transformed to a valid type",  v121,  v134);
        uint64_t v118 = 0LL;
        sub_7580(v122, 0LL);
        sub_7580(v123, v118);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v137);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v137);
    }

    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t))(v171 + 8))(v175, v170);
    return static FlowSearchResult.noFlow.getter(v36);
  }

  uint64_t v38 = v138;
  sub_81108();
  uint64_t v115 = (void (*)(uint64_t))Transformer.transform.getter(v176);
  uint64_t v114 = v39;
  (*(void (**)(char *, uint64_t))(v177 + 8))(v179, v176);
  v115(v197);
  uint64_t v116 = v38;
  uint64_t v117 = v38;
  if (v38)
  {
    uint64_t v69 = v117;
    uint64_t v70 = 0LL;
    swift_release();
    swift_errorRelease(v69);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(v184, 1LL, 1LL, v161);
    uint64_t v113 = v70;
  }

  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v184, 0LL, 1LL, v161);
    swift_release();
    uint64_t v113 = v116;
  }

  uint64_t v112 = v113;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v184, 1LL, v161) == 1)
  {
    sub_890C((uint64_t)v184);
LABEL_32:
    uint64_t v71 = sub_1FBFC(v197);
    static FlowSearchResult.flow(_:)();
    return swift_release();
  }

  sub_89E0(v184, v169);
  swift_retain();
  uint64_t v110 = (uint64_t *)((char *)&v215 + 4);
  sub_AD3F8();
  swift_release();
  uint64_t v109 = v216;
  uint64_t v108 = v217;
  sub_8C74(v110, v216);
  int v111 = (*(uint64_t (**)(uint64_t))(v108 + 48))(v109);
  sub_4598(v110);
  swift_retain();
  sub_28ED8(v169, v167);
  if ((v111 & 1) != 0)
  {
    int v107 = 0;
  }

  else
  {
    uint64_t v100 = *(void *)(v191 + 104);
    swift_bridgeObjectRetain(v100);
    uint64_t v105 = &v208;
    uint64_t v208 = v100;
    uint64_t v101 = *(void *)v167;
    uint64_t v102 = *((void *)v167 + 1);
    swift_bridgeObjectRetain(v102);
    uint64_t v104 = v207;
    v207[0] = v101;
    v207[1] = v102;
    uint64_t v103 = sub_5150(&qword_D7350);
    unint64_t v40 = sub_1B278();
    int v106 = Sequence<>.contains(_:)(v104, v103, v40, &protocol witness table for String);
    sub_8DD8((uint64_t)v104);
    sub_1B82C(v105);
    int v107 = v106;
  }

  int v99 = v107;
  swift_release();
  sub_8AF4((uint64_t)v167);
  if ((v99 & 1) == 0)
  {
    sub_8AF4((uint64_t)v169);
    goto LABEL_32;
  }

  uint64_t v41 = v173;
  uint64_t v42 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v41, v42, v170);
  sub_28ED8(v169, v165);
  uint64_t v43 = *(unsigned __int8 *)(v162 + 80);
  uint64_t v81 = (v43 + 16) & ~v43;
  uint64_t v88 = 7LL;
  uint64_t v89 = swift_allocObject(&unk_CB9D8, v81 + v163, v43 | 7);
  uint64_t v44 = sub_89E0(v165, (char *)(v89 + v81));
  uint64_t v97 = (os_log_s *)Logger.logObject.getter(v44);
  int v98 = static os_log_type_t.debug.getter();
  unint64_t v84 = &v214;
  uint64_t v214 = 12LL;
  unint64_t v82 = sub_7788();
  unint64_t v83 = sub_77F0();
  unint64_t v45 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v215, v84, &type metadata for UInt32, &type metadata for Int, v82, v83, v45);
  uint32_t v85 = v215;
  uint64_t v86 = 17LL;
  uint64_t v46 = swift_allocObject(&unk_CBA00, 17LL, v88);
  uint64_t v47 = v86;
  uint64_t v48 = v88;
  uint64_t v91 = v46;
  *(_BYTE *)(v46 + 16) = 32;
  uint64_t v49 = swift_allocObject(&unk_CBA28, v47, v48);
  uint64_t v50 = v88;
  uint64_t v92 = v49;
  *(_BYTE *)(v49 + 16) = 8;
  uint64_t v87 = 32LL;
  uint64_t v51 = swift_allocObject(&unk_CBA50, 32LL, v50);
  uint64_t v52 = v87;
  uint64_t v53 = v88;
  uint64_t v54 = v51;
  uint64_t v55 = v89;
  uint64_t v90 = v54;
  *(void *)(v54 + 16) = sub_2A374;
  *(void *)(v54 + 24) = v55;
  uint64_t v56 = swift_allocObject(&unk_CBA78, v52, v53);
  uint64_t v57 = v90;
  uint64_t v94 = v56;
  *(void *)(v56 + 16) = sub_88B8;
  *(void *)(v56 + 24) = v57;
  uint64_t v96 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v93 = _allocateUninitializedArray<A>(_:)(3LL, v96);
  uint64_t v95 = v58;
  swift_retain();
  uint64_t v59 = v91;
  uint64_t v60 = v95;
  *uint64_t v95 = sub_884C;
  v60[1] = v59;
  swift_retain();
  uint64_t v61 = v92;
  uint64_t v62 = v95;
  v95[2] = sub_884C;
  v62[3] = v61;
  swift_retain();
  uint64_t v63 = v93;
  uint64_t v64 = v94;
  uint64_t v65 = v95;
  v95[4] = sub_8900;
  v65[5] = v64;
  sub_6648();
  swift_bridgeObjectRelease(v63);
  if (os_log_type_enabled(v97, (os_log_type_t)v98))
  {
    uint64_t v66 = v112;
    uint64_t v74 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v73 = sub_5150(&qword_D6B60);
    uint64_t v75 = sub_74D0(0LL, v73, v73);
    uint64_t v76 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v77 = &v213;
    uint64_t v213 = v74;
    uint64_t v78 = &v212;
    unint64_t v212 = v75;
    Swift::String v79 = &v211;
    Builtin::Word v211 = v76;
    sub_7528(2LL, &v213);
    sub_7528(1LL, v77);
    uint64_t v209 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v210 = v91;
    sub_753C(&v209, (uint64_t)v77, (uint64_t)v78, (uint64_t)v79);
    uint64_t v80 = v66;
    if (v66)
    {
      __break(1u);
    }

    else
    {
      uint64_t v209 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v210 = v92;
      sub_753C(&v209, (uint64_t)&v213, (uint64_t)&v212, (uint64_t)&v211);
      uint64_t v72 = 0LL;
      uint64_t v209 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v210 = v94;
      sub_753C(&v209, (uint64_t)&v213, (uint64_t)&v212, (uint64_t)&v211);
      _os_log_impl(&dword_0, v97, (os_log_type_t)v98, "Received intent for %s and newMultiturn FF disabled", v74, v85);
      sub_7580(v75, 0LL);
      sub_7580(v76, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v67 = (*(uint64_t (**)(char *, uint64_t))(v171 + 8))(v173, v170);
  static FlowSearchResult.noFlow.getter(v67);
  return sub_8AF4((uint64_t)v169);
}

void *sub_2832C()
{
  uint64_t result = v0 + 20;
  sub_1B82C(v0 + 20);
  return result;
}

void *sub_2839C()
{
  double v1 = (void *)sub_AD1DC();
  sub_1B82C(v1 + 9);
  sub_8DD8((uint64_t)(v1 + 10));
  sub_1B82C(v1 + 12);
  sub_1B82C(v1 + 13);
  sub_2937C(v1 + 14);
  sub_4598(v1 + 15);
  sub_1B82C(v1 + 20);
  return v1;
}

uint64_t sub_2841C()
{
  uint64_t v0 = sub_2839C();
  return swift_deallocClassInstance(v0, 168LL, 7LL);
}

uint64_t sub_28458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26D70(a1, a2);
}

Swift::String *sub_28478@<X0>(Swift::String **a1@<X8>)
{
  uint64_t result = sub_1F7E0();
  *a1 = result;
  return result;
}

void sub_284A0()
{
}

void sub_284B4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_284C8()
{
  return FlowPlugin.makeFlowFrame(parse:)();
}

uint64_t sub_284DC(uint64_t a1)
{
  return sub_1FBFC(a1);
}

uint64_t sub_284FC()
{
  return FlowPlugin.findFlowFor(parse:)();
}

uint64_t sub_28510@<X0>(uint64_t a1@<X8>)
{
  return swift_endAccess(v4);
}

uint64_t sub_28560(void *a1)
{
  return sub_4598(a1);
}

uint64_t (*sub_285CC())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_2860C()
{
  uint64_t v2 = *(void *)(v0 + 56);
  swift_retain(v2);
  return v2;
}

uint64_t sub_28634@<X0>(uint64_t a1@<X8>)
{
  __dst[5] = 0LL;
  swift_beginAccess(v1 + 64);
  sub_2A46C((void *)(v1 + 64), v9);
  swift_endAccess(v10);
  if (v9[3])
  {
    sub_C094(v9, __dst);
    sub_454C((uint64_t)__dst, a1);
    return sub_4598(__dst);
  }

  else
  {
    double v3 = sub_1D580(v9);
    static Device.current.getter(v3);
    sub_454C((uint64_t)v8, (uint64_t)v7);
    swift_beginAccess(v5 + 64);
    sub_2A4E8(v7, (void *)(v5 + 64));
    swift_endAccess(v6);
    sub_454C((uint64_t)v8, a1);
    return sub_4598(v8);
  }

uint64_t sub_28748(void *a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = a1;
  sub_454C((uint64_t)a1, (uint64_t)v5);
  swift_beginAccess(v1 + 64);
  sub_2A4E8(v5, (void *)(v1 + 64));
  swift_endAccess(v4);
  return sub_4598(a1);
}

void (*sub_287C0(void *a1))(void **a1, char a2)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[10] = v1;
  sub_28634((uint64_t)v4);
  return sub_28814;
}

void sub_28814(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_454C((uint64_t)v2, (uint64_t)(v2 + 5));
    sub_28748(v2 + 5);
    sub_4598(v2);
  }

  else
  {
    sub_28748(v2);
  }

  free(v2);
}

uint64_t sub_28888@<X0>(uint64_t a1@<X8>)
{
  __dst[5] = 0LL;
  swift_beginAccess(v1 + 104);
  sub_2A46C((void *)(v1 + 104), v9);
  swift_endAccess(v10);
  if (v9[3])
  {
    sub_C094(v9, __dst);
    sub_454C((uint64_t)__dst, a1);
    return sub_4598(__dst);
  }

  else
  {
    double v3 = sub_1D580(v9);
    static OutputPublisherFactory.makeOutputPublisherAsync()(v3);
    sub_454C((uint64_t)v8, (uint64_t)v7);
    swift_beginAccess(v5 + 104);
    sub_2A4E8(v7, (void *)(v5 + 104));
    swift_endAccess(v6);
    sub_454C((uint64_t)v8, a1);
    return sub_4598(v8);
  }

uint64_t sub_2899C(void *a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = a1;
  sub_454C((uint64_t)a1, (uint64_t)v5);
  swift_beginAccess(v1 + 104);
  sub_2A4E8(v5, (void *)(v1 + 104));
  swift_endAccess(v4);
  return sub_4598(a1);
}

void (*sub_28A14(void *a1))(void **a1, char a2)
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[10] = v1;
  sub_28888((uint64_t)v4);
  return sub_28A68;
}

void sub_28A68(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_454C((uint64_t)v2, (uint64_t)(v2 + 5));
    sub_2899C(v2 + 5);
    sub_4598(v2);
  }

  else
  {
    sub_2899C(v2);
  }

  free(v2);
}

uint64_t sub_28ADC()
{
  return CATGlobals.__allocating_init()();
}

uint64_t sub_28B14()
{
  return v2;
}

uint64_t sub_28B60()
{
  uint64_t v0 = sub_28B14();
  return swift_deallocClassInstance(v0, 144LL, 7LL);
}

void *sub_28B9C()
{
  *(void *)(v0 + 40) = &type metadata for SocialConversationFeatureFlagManager;
  *(void *)(v0 + 4sub_1D580(v0 + 8) = &protocol witness table for SocialConversationFeatureFlagManager;
  uint64_t v3 = *sub_2B8FC();
  swift_retain();
  uint64_t result = v2;
  v2[7] = v3;
  v2[8] = 0LL;
  v2[9] = 0LL;
  v2[10] = 0LL;
  v2[11] = 0LL;
  v2[12] = 0LL;
  v2[13] = 0LL;
  v2[14] = 0LL;
  v2[15] = 0LL;
  v2[16] = 0LL;
  v2[17] = 0LL;
  return result;
}

uint64_t sub_28C24@<X0>(uint64_t a1@<X8>)
{
  return sub_28634(a1);
}

uint64_t sub_28C44@<X0>(uint64_t a1@<X8>)
{
  return sub_28888(a1);
}

uint64_t sub_28C64()
{
  return sub_2860C();
}

uint64_t sub_28C84()
{
  return sub_28ADC();
}

uint64_t sub_28CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_28510(a1);
}

unint64_t sub_28CC4()
{
  uint64_t v3 = qword_D75C8;
  if (!qword_D75C8)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___NSBundle);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D75C8);
    return ObjCClassMetadata;
  }

  return v3;
}

uint64_t type metadata accessor for SocialConversationFlowDelegatePlugin()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin36SocialConversationFlowDelegatePlugin);
}

uint64_t type metadata accessor for SharedObjectProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePluginP33_F3682A97BB02AF70F1525D47DE1FF5EE20SharedObjectProvider);
}

uint64_t sub_28D70()
{
  uint64_t v1 = *(void *)(type metadata accessor for Parse(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_28DE0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Parse(0LL) - 8) + 80LL);
  return sub_2256C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_28E10()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_28E38()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_28E60()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_28E9C()
{
  return swift_deallocObject(v2, 32LL);
}

char *sub_28ED8(char *a1, char *a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v4 = *((void *)a1 + 1);
  swift_bridgeObjectRetain(v4);
  *((void *)a2 + 1) = v4;
  *((void *)a2 + sub_4598(v0 + 2) = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  swift_bridgeObjectRetain(v6);
  *((void *)a2 + 3) = v6;
  uint64_t v7 = *(int *)(type metadata accessor for INSiriSocialConversation(0LL) + 24);
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(&a1[v7], 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D8820);
    memcpy(&a2[v7], &a1[v7], *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v10 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(&a2[v7], 0LL, 1LL, v9);
  }

  return a2;
}

uint64_t sub_29020()
{
  uint64_t v6 = type metadata accessor for INSiriSocialConversation(0LL);
  uint64_t v1 = *(void *)(v6 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v4 + *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v4 + 24));
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  return swift_deallocObject(v3, v5);
}

uint64_t sub_2911C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for INSiriSocialConversation(0LL) - 8) + 80LL);
  return sub_225E8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_2914C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29174()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_2919C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_291D8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29214()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_29284()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8) + 80LL);
  return sub_22668(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_292B4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_292DC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29304()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29340()
{
  return swift_deallocObject(v2, 32LL);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2937C( void *a1)
{
}

unint64_t sub_293A4()
{
  uint64_t v3 = qword_D75D8;
  if (!qword_D75D8)
  {
    uint64_t inited = type metadata accessor for InitDailyUpliftBehaviorResponseHandler(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8024, inited);
    atomic_store(WitnessTable, (unint64_t *)&qword_D75D8);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_29414()
{
  uint64_t v3 = qword_D75E0;
  if (!qword_D75E0)
  {
    uint64_t inited = type metadata accessor for InitGreetingBehaviorResponseHandler();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7FF4, inited);
    atomic_store(WitnessTable, (unint64_t *)&qword_D75E0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_29484()
{
  uint64_t v3 = qword_D75E8;
  if (!qword_D75E8)
  {
    uint64_t v0 = type metadata accessor for DismissSiriBehaviorResponseHandler();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7FC4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D75E8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_294F4()
{
  uint64_t v4 = type metadata accessor for AuthoredFlowDescriptor(0LL);
  uint64_t v2 = *(void *)(v4 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = ((v3 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  sub_4598((void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v4);
  swift_release();
  return swift_deallocObject(v5, v6);
}

uint64_t sub_295A4(uint64_t a1)
{
  *(void *)(v2 + swift_beginAccess(v0 + 16) = v2;
  uint64_t v3 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v1 + ((v6 + *(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8LL));
  uint64_t v4 = (void *)swift_task_alloc(dword_D75F4);
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = *(void *)(v2 + 16);
  v4[1] = sub_65B4;
  return sub_226EC(a1, v1 + 16, v1 + v6, v7);
}

uint64_t sub_29660()
{
  uint64_t v1 = *(void *)(type metadata accessor for Parse(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_296D0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_296F8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29720()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_2975C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29798()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_297D4()
{
  return swift_deallocObject(v2, 56LL);
}

uint64_t sub_29810()
{
  return sub_239DC(v0 + 16);
}

uint64_t sub_29818()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29840()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29868()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_298A4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_298E0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29908()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29930()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_2996C()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_299A8()
{
  uint64_t v3 = qword_D7618;
  if (!qword_D7618)
  {
    uint64_t v0 = sub_8D64(&qword_D7610);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B].Keys, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7618);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_29A18(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Locale.LanguageCode(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_29A88()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_29AF8()
{
  return sub_25A00();
}

uint64_t sub_29B28()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29B50()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29B78()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29BB4()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_29BF0()
{
  uint64_t v3 = qword_D7620;
  if (!qword_D7620)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___IEIntelligence);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7620);
    return ObjCClassMetadata;
  }

  return v3;
}

uint64_t sub_29C54()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_29CC4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29CEC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29D14()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29D50()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29D8C()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_29DFC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29E38()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29E60()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29E88()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29EC4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29F00()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29F28()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_29F50()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_29F8C()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_29FC8()
{
  uint64_t v2 = qword_D7628;
  if (!qword_D7628)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7628);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_2A030()
{
  uint64_t v3 = qword_D7630;
  if (!qword_D7630)
  {
    uint64_t v0 = sub_8D64(&qword_D7608);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Regex<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7630);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_2A0A0()
{
  uint64_t v3 = qword_D7640;
  if (!qword_D7640)
  {
    uint64_t v0 = sub_8D64(&qword_D7638);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7640);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_2A110()
{
  uint64_t v1 = *(void *)(type metadata accessor for Locale(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_2A180()
{
  return sub_26D50();
}

uint64_t sub_2A1B0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_2A1D8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_2A200()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_2A23C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_2A278()
{
  uint64_t v6 = type metadata accessor for INSiriSocialConversation(0LL);
  uint64_t v1 = *(void *)(v6 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v4 + *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v4 + 24));
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  return swift_deallocObject(v3, v5);
}

uint64_t sub_2A374()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for INSiriSocialConversation(0LL) - 8) + 80LL);
  return sub_15364((uint64_t *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t sub_2A3A4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_2A3CC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_2A3F4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_2A430()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_2A46C(void *a1, void *a2)
{
  if (a1[3])
  {
    uint64_t v2 = a1[3];
    a2[3] = v2;
    a2[4] = a1[4];
    (**(void (***)(void))(v2 - 8))();
  }

  else
  {
    memcpy(a2, a1, 0x28uLL);
  }

  return a2;
}

void *sub_2A4E8(const void *a1, void *a2)
{
  if (a2[3])
  {
    sub_4598(a2);
    memcpy(a2, a1, 0x28uLL);
  }

  else
  {
    memcpy(a2, a1, 0x28uLL);
  }

  return a2;
}

unint64_t sub_2A5C0()
{
  return sub_2A5D4();
}

unint64_t sub_2A5D4()
{
  uint64_t v3 = qword_D78E8;
  if (!qword_D78E8)
  {
    uint64_t v0 = type metadata accessor for SocialConversationFlowDelegatePlugin();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6D58, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D78E8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_2A644(uint64_t a1)
{
  *(void *)(v2 + swift_beginAccess(v0 + 16) = v2;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v3 = (void *)swift_task_alloc(dword_D78F4);
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_65B4;
  return sub_22974(a1, v5);
}

unint64_t sub_2A6C4()
{
  uint64_t v3 = qword_D7900;
  if (!qword_D7900)
  {
    uint64_t v0 = type metadata accessor for AuthoredFlowDescriptor(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AuthoredFlowDescriptor, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7900);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_2A734()
{
  uint64_t v3 = qword_D7908;
  if (!qword_D7908)
  {
    uint64_t v0 = type metadata accessor for INSiriSocialConversation(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7D68, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7908);
    return WitnessTable;
  }

  return v3;
}

void *sub_2A7A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v117 = a5;
  v121._uint64_t countAndFlagsBits = a1;
  v121._object = a2;
  v124._uint64_t countAndFlagsBits = a3;
  v124._object = a4;
  memset(__b, 0, sizeof(__b));
  uint64_t v174 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v172 = 0LL;
  uint64_t v173 = 0LL;
  uint64_t v118 = 0LL;
  uint64_t v123 = type metadata accessor for Logger(0LL);
  uint64_t v122 = *(void *)(v123 - 8);
  unint64_t v119 = (*(void *)(v122 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v6 = (char *)&v69 - v119;
  uint64_t v120 = (char *)&v69 - v119;
  uint64_t v174 = v7;
  uint64_t v175 = v8;
  uint64_t v172 = v9;
  uint64_t v173 = v10;
  memset(&__b[2], 0, 32);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v121._object);
  __b[0] = v121;
  uint64_t v11 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v6, v11, v123);
  swift_bridgeObjectRetain(v124._object);
  uint64_t v130 = 32LL;
  uint64_t v131 = 7LL;
  uint64_t v12 = swift_allocObject(&unk_CBB38, 32LL, 7LL);
  object = v124._object;
  uint64_t v132 = v12;
  *(void *)(v12 + swift_beginAccess(v0 + 16) = v124._countAndFlagsBits;
  *(void *)(v12 + 24) = object;
  BOOL v140 = (os_log_s *)Logger.logObject.getter(v12);
  int v141 = static os_log_type_t.debug.getter();
  uint64_t v127 = &v170;
  uint64_t v170 = 12LL;
  unint64_t v125 = sub_7788();
  unint64_t v126 = sub_77F0();
  unint64_t v14 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v171, v127, &type metadata for UInt32, &type metadata for Int, v125, v126, v14);
  uint32_t v128 = v171;
  uint64_t v129 = 17LL;
  uint64_t v15 = swift_allocObject(&unk_CBB60, 17LL, v131);
  uint64_t v16 = v129;
  uint64_t v17 = v131;
  uint64_t v134 = v15;
  *(_BYTE *)(v15 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v18 = swift_allocObject(&unk_CBB88, v16, v17);
  uint64_t v19 = v130;
  uint64_t v20 = v131;
  uint64_t v135 = v18;
  *(_BYTE *)(v18 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v21 = swift_allocObject(&unk_CBBB0, v19, v20);
  uint64_t v22 = v130;
  uint64_t v23 = v131;
  uint64_t v24 = v21;
  uint64_t v25 = v132;
  uint64_t v133 = v24;
  *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = swift_allocObject(&unk_CBBD8, v22, v23);
  uint64_t v27 = v133;
  uint64_t v137 = v26;
  *(void *)(v26 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v26 + 24) = v27;
  uint64_t v139 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v136 = _allocateUninitializedArray<A>(_:)(3LL, v139);
  uint64_t v138 = v28;
  swift_retain();
  uint64_t v29 = v134;
  uint64_t v30 = v138;
  *uint64_t v138 = sub_884C;
  v30[1] = v29;
  swift_retain();
  uint64_t v31 = v135;
  uint64_t v32 = v138;
  v138[2] = sub_884C;
  v32[3] = v31;
  swift_retain();
  uint64_t v33 = v136;
  uint64_t v34 = v137;
  unint64_t v35 = v138;
  v138[4] = sub_8900;
  v35[5] = v34;
  sub_6648();
  swift_bridgeObjectRelease(v33);
  if (os_log_type_enabled(v140, (os_log_type_t)v141))
  {
    uint64_t v36 = v118;
    uint64_t v110 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v109 = sub_5150(&qword_D6B60);
    uint64_t v111 = sub_74D0(0LL, v109, v109);
    uint64_t v112 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v113 = &v146;
    uint64_t v146 = v110;
    uint64_t v114 = &v145;
    uint64_t v145 = v111;
    uint64_t v115 = &v144;
    uint64_t v144 = v112;
    sub_7528(2LL, &v146);
    sub_7528(1LL, v113);
    uint64_t v142 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v143 = v134;
    sub_753C(&v142, (uint64_t)v113, (uint64_t)v114, (uint64_t)v115);
    uint64_t v116 = v36;
    if (v36)
    {
      __break(1u);
    }

    else
    {
      uint64_t v142 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v143 = v135;
      sub_753C(&v142, (uint64_t)&v146, (uint64_t)&v145, (uint64_t)&v144);
      uint64_t v108 = 0LL;
      uint64_t v142 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v143 = v137;
      sub_753C(&v142, (uint64_t)&v146, (uint64_t)&v145, (uint64_t)&v144);
      _os_log_impl(&dword_0, v140, (os_log_type_t)v141, "rawId: %s", v110, v128);
      sub_7580(v111, 0LL);
      sub_7580(v112, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v122 + 8))(v120, v123);
  Swift::String v37 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHappy", 8uLL, 1);
  int v106 = v37._object;
  BOOL v107 = String.hasPrefix(_:)(v37);
  swift_bridgeObjectRelease(v106);
  if (!v107) {
    goto LABEL_41;
  }
  v169[1] = v124;
  Swift::String v38 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Day", 3uLL, 1);
  uint64_t v104 = v169;
  v169[0] = v38;
  unint64_t v39 = sub_B880();
  int v105 = StringProtocol.contains<A>(_:)(v104, &type metadata for String, &type metadata for String, v39);
  sub_8DD8((uint64_t)v104);
  if ((v105 & 1) == 0)
  {
    swift_bridgeObjectRetain(v124._object);
    Swift::String v80 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHappyAprilFools", 0x12uLL, 1);
    swift_bridgeObjectRetain(v80._object);
    Swift::String v168 = v124;
    int v81 = static String.== infix(_:_:)(v80._countAndFlagsBits, v80._object, v124._countAndFlagsBits, v124._object);
    swift_bridgeObjectRelease(v80._object);
    swift_bridgeObjectRelease(v80._object);
    if ((v81 & 1) != 0)
    {
      swift_bridgeObjectRelease(v124._object);
      Swift::String v49 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("aprilfool", 9uLL, 1);
      uint64_t v50 = __b[2]._object;
      __b[2] = v49;
      swift_bridgeObjectRelease(v50);
    }

    else
    {
      swift_bridgeObjectRelease(v124._object);
      swift_bridgeObjectRetain(v124._object);
      Swift::String v78 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHappyFestivalOfLights", 0x18uLL, 1);
      swift_bridgeObjectRetain(v78._object);
      Swift::String v167 = v124;
      int v79 = static String.== infix(_:_:)(v78._countAndFlagsBits, v78._object, v124._countAndFlagsBits, v124._object);
      swift_bridgeObjectRelease(v78._object);
      swift_bridgeObjectRelease(v78._object);
      if ((v79 & 1) != 0)
      {
        swift_bridgeObjectRelease(v124._object);
        Swift::String v51 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("festivaloflight", 0xFuLL, 1);
        uint64_t v52 = __b[2]._object;
        __b[2] = v51;
        swift_bridgeObjectRelease(v52);
      }

      else
      {
        swift_bridgeObjectRelease(v124._object);
        swift_bridgeObjectRetain(v124._object);
        Swift::String v76 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHappyValentines", 0x12uLL, 1);
        swift_bridgeObjectRetain(v76._object);
        Swift::String v166 = v124;
        int v77 = static String.== infix(_:_:)(v76._countAndFlagsBits, v76._object, v124._countAndFlagsBits, v124._object);
        swift_bridgeObjectRelease(v76._object);
        swift_bridgeObjectRelease(v76._object);
        if ((v77 & 1) != 0)
        {
          swift_bridgeObjectRelease(v124._object);
          Swift::String v53 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("valentine", 9uLL, 1);
          uint64_t v54 = __b[2]._object;
          __b[2] = v53;
        }

        else
        {
          swift_bridgeObjectRelease(v124._object);
          swift_bridgeObjectRetain(v124._object);
          Swift::String v164 = v124;
          unint64_t v55 = sub_1BF48();
          Collection.dropFirst(_:)(v165, 8LL, &type metadata for String, v55);
          uint64_t v74 = v165[3];
          v75._uint64_t countAndFlagsBits = String.init(_:)(v165[0], v165[1], v165[2]);
          v75._object = v56;
          swift_bridgeObjectRelease(v74);
          uint64_t v54 = __b[2]._object;
          __b[2] = v75;
        }

        swift_bridgeObjectRelease(v54);
      }
    }

    goto LABEL_41;
  }

  swift_bridgeObjectRetain(v124._object);
  Swift::String v161 = v124;
  unint64_t v40 = sub_1BF48();
  uint64_t v100 = &type metadata for String;
  Collection.dropFirst(_:)(v162, 8LL, &type metadata for String, v40);
  uint64_t v157 = v162[0];
  uint64_t v158 = v162[1];
  uint64_t v159 = v162[2];
  uint64_t v160 = v162[3];
  unint64_t v41 = sub_37B34();
  BidirectionalCollection.dropLast(_:)(v163, 3LL, &type metadata for Substring, v41);
  uint64_t v98 = v163[3];
  Swift::String v99 = Substring.lowercased()();
  swift_bridgeObjectRelease(v98);
  Swift::String v156 = v99;
  v102._uint64_t countAndFlagsBits = String.init<A>(_:)( &v156,  v100,  &protocol witness table for String,  &protocol witness table for String);
  v102._object = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v102._object);
  uint64_t v43 = __b[2]._object;
  __b[2] = v102;
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRetain(v102._object);
  Swift::String v44 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("fathers", 7uLL, 1);
  uint64_t countAndFlagsBits = v44._countAndFlagsBits;
  uint64_t v103 = v44._object;
  swift_bridgeObjectRetain(v44._object);
  Swift::String v153 = v102;
  uint64_t v154 = countAndFlagsBits;
  uint64_t v155 = v103;
  if (v102._object)
  {
    sub_139E0(&v153, &v147);
    if (v155)
    {
      uint64_t v91 = v147;
      uint64_t v94 = v148;
      swift_bridgeObjectRetain(v148);
      uint64_t v92 = v154;
      uint64_t v95 = &v153;
      uint64_t v93 = v155;
      swift_bridgeObjectRetain(v155);
      int v96 = static String.== infix(_:_:)(v91, v94, v92, v93);
      swift_bridgeObjectRelease(v93);
      swift_bridgeObjectRelease(v94);
      swift_bridgeObjectRelease(v93);
      swift_bridgeObjectRelease(v94);
      sub_8DD8((uint64_t)v95);
      int v97 = v96;
      goto LABEL_17;
    }

    sub_8DD8((uint64_t)&v147);
    goto LABEL_19;
  }

  if (v155)
  {
LABEL_19:
    sub_13A1C((uint64_t)&v153);
    int v97 = 0;
    goto LABEL_17;
  }

  sub_8DD8((uint64_t)&v153);
  int v97 = 1;
LABEL_17:
  int v90 = v97;
  swift_bridgeObjectRelease(v103);
  swift_bridgeObjectRelease(v102._object);
  if ((v90 & 1) != 0)
  {
    swift_bridgeObjectRelease(v102._object);
    Swift::String v45 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("father", 6uLL, 1);
    uint64_t v46 = __b[2]._object;
    __b[2] = v45;
    swift_bridgeObjectRelease(v46);
    goto LABEL_41;
  }

  swift_bridgeObjectRetain(v102._object);
  Swift::String v89 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("mothers", 7uLL, 1);
  swift_bridgeObjectRetain(v89._object);
  Swift::String v151 = v102;
  Swift::String v152 = v89;
  if (v102._object)
  {
    sub_139E0(&v151, &v149);
    if (v152._object)
    {
      uint64_t v83 = v149;
      uint64_t v85 = v150;
      swift_bridgeObjectRetain(v150);
      Swift::String v84 = v152;
      uint64_t v86 = &v151;
      swift_bridgeObjectRetain(v152._object);
      int v87 = static String.== infix(_:_:)(v83, v85, v84._countAndFlagsBits, v84._object);
      swift_bridgeObjectRelease(v84._object);
      swift_bridgeObjectRelease(v85);
      swift_bridgeObjectRelease(v84._object);
      swift_bridgeObjectRelease(v85);
      sub_8DD8((uint64_t)v86);
      int v88 = v87;
      goto LABEL_28;
    }

    sub_8DD8((uint64_t)&v149);
    goto LABEL_30;
  }

  if (v152._object)
  {
LABEL_30:
    sub_13A1C((uint64_t)&v151);
    int v88 = 0;
    goto LABEL_28;
  }

  sub_8DD8((uint64_t)&v151);
  int v88 = 1;
LABEL_28:
  int v82 = v88;
  swift_bridgeObjectRelease(v89._object);
  swift_bridgeObjectRelease(v102._object);
  if ((v82 & 1) != 0)
  {
    Swift::String v47 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("mother", 6uLL, 1);
    uint64_t v48 = __b[2]._object;
    __b[2] = v47;
    swift_bridgeObjectRelease(v48);
  }

LABEL_41:
  Swift::String v57 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalHappyFestivalOfLights", 0x18uLL, 1);
  uint64_t v72 = v57._object;
  int v73 = static String.== infix(_:_:)(v124._countAndFlagsBits, v124._object, v57._countAndFlagsBits, v57._object);
  swift_bridgeObjectRelease(v72);
  if ((v73 & 1) != 0)
  {
    Swift::String v58 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("HINDU", 5uLL, 1);
    uint64_t v59 = __b[3]._object;
    __b[3] = v58;
    swift_bridgeObjectRelease(v59);
  }

  swift_bridgeObjectRetain(v124._object);
  uint64_t v69 = (void *)__b;
  swift_bridgeObjectRetain(v124._object);
  __b[1] = v124;
  Swift::String v70 = __b[2];
  swift_bridgeObjectRetain(__b[2]._object);
  Swift::String v71 = __b[3];
  swift_bridgeObjectRetain(__b[3]._object);
  swift_bridgeObjectRetain(v121._object);
  swift_bridgeObjectRetain(v124._object);
  swift_bridgeObjectRetain(v70._object);
  swift_bridgeObjectRetain(v71._object);
  swift_bridgeObjectRelease(v71._object);
  swift_bridgeObjectRelease(v70._object);
  swift_bridgeObjectRelease(v124._object);
  swift_bridgeObjectRelease(v121._object);
  swift_bridgeObjectRelease(v124._object);
  swift_bridgeObjectRelease(v121._object);
  uint64_t result = sub_37AE8(v69);
  uint64_t v61 = v121._object;
  uint64_t v62 = v124._countAndFlagsBits;
  uint64_t v63 = v124._object;
  uint64_t v64 = v70._object;
  uint64_t v65 = v70._countAndFlagsBits;
  uint64_t v66 = v71._countAndFlagsBits;
  uint64_t v67 = v117;
  uint64_t v68 = v71._object;
  *uint64_t v117 = v121._countAndFlagsBits;
  v67[1] = (uint64_t)v61;
  v67[2] = v62;
  v67[3] = (uint64_t)v63;
  *((_OWORD *)v67 + sub_4598(v0 + 2) = __PAIR128__((unint64_t)v64, v65);
  v67[6] = v66;
  v67[7] = (uint64_t)v68;
  return result;
}

uint64_t sub_2B68C()
{
  uint64_t v15 = 0LL;
  uint64_t v13 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)();
  uint64_t v14 = v0;
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
  object = v1._object;
  DefaultStringInterpolation.appendLiteral(_:)(v1);
  swift_bridgeObjectRelease(object);
  __int128 v17 = *v7;
  sub_1B804((uint64_t)&v17);
  __int128 v12 = v17;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  sub_8DD8((uint64_t)&v12);
  Swift::String v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
  uint64_t v6 = v2._object;
  DefaultStringInterpolation.appendLiteral(_:)(v2);
  swift_bridgeObjectRelease(v6);
  __int128 v16 = v7[1];
  sub_1B804((uint64_t)&v16);
  __int128 v11 = v16;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  sub_8DD8((uint64_t)&v11);
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
  uint64_t v8 = v3._object;
  DefaultStringInterpolation.appendLiteral(_:)(v3);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = v13;
  uint64_t v9 = v14;
  swift_bridgeObjectRetain(v14);
  sub_8DD8((uint64_t)&v13);
  return String.init(stringInterpolation:)(v10, v9);
}

double sub_2B828@<D0>(char *a1@<X8>)
{
  uint64_t v15 = a1;
  __int128 v16 = 0LL;
  v10[1] = 0LL;
  uint64_t v13 = type metadata accessor for DialogServiceButton(0LL);
  unint64_t v11 = (*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  Swift::String v2 = (char *)v10 - v11;
  uint64_t v14 = v2;
  __int128 v16 = (char *)v10 - v11;
  *(void *)Swift::String v2 = 0LL;
  *((void *)v2 + 1) = 0LL;
  uint64_t v12 = *(int *)(v3 + 20);
  uint64_t v5 = type metadata accessor for URL(v4);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 56LL))(&v14[v12], 1LL);
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  uint64_t v8 = &v14[*(int *)(v13 + 24)];
  *(void *)uint64_t v8 = 0LL;
  *((void *)v8 + 1) = 0LL;
  *(void *)&double result = sub_3897C(v6, v7).n128_u64[0];
  return result;
}

uint64_t *sub_2B8FC()
{
  if (qword_D6840 != -1) {
    swift_once(&qword_D6840, sub_2B950);
  }
  return &qword_D94F0;
}

uint64_t sub_2B950()
{
  v3[1] = 0LL;
  unint64_t v4 = (*(void *)(*(void *)(type metadata accessor for CATOption(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v0);
  uint64_t v5 = (uint64_t)v3 - v4;
  type metadata accessor for DialogService(v1);
  sub_2B9DC();
  uint64_t result = sub_2B9F0(v5);
  qword_D94F0 = result;
  return result;
}

uint64_t sub_2B9DC()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_2B9F0(uint64_t a1)
{
  return sub_2BA38(a1);
}

uint64_t sub_2BA38(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v21 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v17 = type metadata accessor for CATOption(0LL);
  uint64_t v16 = *(void *)(v17 - 8);
  unint64_t v13 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v15 = (char *)&v12 - v13;
  uint64_t v21 = v3;
  uint64_t v20 = v1;
  sub_28CC4();
  type metadata accessor for DialogService(v14);
  id v4 = sub_1EB44();
  uint64_t v5 = v19;
  uint64_t v6 = v16;
  uint64_t v7 = v18;
  uint64_t v8 = v17;
  id v9 = v4;
  uint64_t v10 = v15;
  *(void *)(v19 + swift_beginAccess(v0 + 16) = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v7, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))( v5 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options,  v15,  v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  return v19;
}

uint64_t sub_2BB38@<X0>( void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v335 = a7;
  v383 = a1;
  uint64_t v382 = a2;
  uint64_t v378 = a3;
  uint64_t v379 = a4;
  uint64_t v390 = a5;
  uint64_t v380 = a6;
  id v336 = sub_381F0;
  v440 = 0LL;
  Swift::String v438 = 0LL;
  uint64_t v437 = 0LL;
  uint64_t v436 = 0LL;
  uint64_t v434 = 0LL;
  uint64_t v435 = 0LL;
  uint64_t v433 = 0LL;
  uint64_t v432 = 0LL;
  uint64_t v431 = 0LL;
  uint64_t v430 = 0LL;
  uint64_t v420 = 0LL;
  Swift::String v439 = 0LL;
  unint64_t v337 = (*(void *)(*(void *)(sub_5150(&qword_D7308) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v338 = &v181[-v337];
  uint64_t v376 = 0LL;
  uint64_t v339 = type metadata accessor for ActivityType(v8);
  uint64_t v340 = *(void *)(v339 - 8);
  unint64_t v341 = (*(void *)(v340 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v342 = &v181[-v341];
  uint64_t v343 = type metadata accessor for BehaviorAfterSpeaking(v10);
  uint64_t v344 = *(void *)(v343 - 8);
  unint64_t v345 = (*(void *)(v344 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v12 = __chkstk_darwin(v11);
  unint64_t v346 = &v181[-v345];
  unint64_t v347 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v12);
  unint64_t v348 = &v181[-v347];
  v440 = &v181[-v347];
  uint64_t v349 = type metadata accessor for TemplatingResult(v14);
  uint64_t v350 = *(void *)(v349 - 8);
  unint64_t v351 = (*(void *)(v350 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v15);
  unint64_t v352 = &v181[-v351];
  Swift::String v439 = &v181[-v351];
  uint64_t v353 = type metadata accessor for CATOption(v16);
  uint64_t v354 = *(void *)(v353 - 8);
  unint64_t v355 = (*(void *)(v354 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  uint64_t v356 = &v181[-v355];
  uint64_t v357 = sub_5150(&qword_D7300);
  uint64_t v358 = *(void *)(v357 - 8);
  uint64_t v359 = *(void *)(v358 + 64);
  unint64_t v360 = (v359 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v19 = __chkstk_darwin(v18);
  uint64_t v361 = (uint64_t *)&v181[-v360];
  unint64_t v362 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v21 = __chkstk_darwin(v19);
  uint64_t v363 = &v181[-v362];
  unint64_t v364 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v21);
  int v365 = &v181[-v364];
  Swift::String v438 = &v181[-v364];
  uint64_t v366 = type metadata accessor for Logger(v23);
  uint64_t v367 = *(void **)(v366 - 8);
  unint64_t v368 = (v367[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v25 = __chkstk_darwin(v24);
  unint64_t v369 = &v181[-v368];
  unint64_t v370 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v27 = __chkstk_darwin(v25);
  unint64_t v371 = &v181[-v370];
  unint64_t v372 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v29 = __chkstk_darwin(v27);
  uint64_t v373 = &v181[-v372];
  unint64_t v374 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v29);
  uint64_t v375 = &v181[-v374];
  unint64_t v377 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v31);
  uint64_t v388 = &v181[-v377];
  uint64_t v384 = type metadata accessor for URL(v32);
  uint64_t v385 = *(void *)(v384 - 8);
  unint64_t v386 = (*(void *)(v385 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v33);
  uint64_t v387 = &v181[-v386];
  uint64_t v437 = &v181[-v386];
  uint64_t v436 = v34;
  uint64_t v434 = v35;
  uint64_t v435 = v36;
  uint64_t v433 = v37;
  uint64_t v432 = v38;
  uint64_t v431 = v39;
  uint64_t v430 = v40;
  uint64_t v389 = *(void **)(v40 + 16);
  id v41 = v389;
  sub_97C54(v390, v389);
  uint64_t v391 = 0LL;
  uint64_t v392 = 0LL;

  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v385 + 56))(v388, 0LL, 1LL, v384);
  uint64_t v334 = v391;
  uint64_t v333 = v391;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v385 + 48))(v388, 1LL, v384) == 1)
  {
    sub_1BA84((uint64_t)v388);
    Builtin::Word v182 = 12LL;
    uint64_t v167 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)();
    int v190 = &v428;
    uint64_t v428 = v167;
    uint64_t v429 = v168;
    int v188 = 1;
    Swift::String v169 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CatGlobals: ", v182, 1);
    object = v169._object;
    DefaultStringInterpolation.appendLiteral(_:)(v169);
    swift_bridgeObjectRelease(object);
    id v170 = v390;
    unint64_t v185 = &v427;
    Swift::String v427 = v390;
    Builtin::Word v187 = 0LL;
    uint64_t v184 = type metadata accessor for CATGlobals(0LL);
    unint64_t v171 = sub_37C00();
    uint64_t v172 = String.init<A>(describing:)(v185, v184, v171);
    uint64_t v186 = v426;
    v426[0] = v172;
    v426[1] = v173;
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    sub_8DD8((uint64_t)v186);
    Swift::String v174 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", v187, v188 & 1);
    unint64_t v189 = v174._object;
    DefaultStringInterpolation.appendLiteral(_:)(v174);
    swift_bridgeObjectRelease(v189);
    uint64_t v192 = v428;
    uint64_t v191 = v429;
    swift_bridgeObjectRetain(v429);
    sub_8DD8((uint64_t)v190);
    uint64_t v194 = String.init(stringInterpolation:)(v192, v191);
    uint64_t v193 = v175;
    unint64_t v176 = sub_37C70();
    uint64_t v177 = swift_allocError(&unk_CEF08, v176, 0LL, 0LL);
    uint64_t v178 = v193;
    uint64_t v197 = v177;
    *(void *)uint64_t v179 = v194;
    *(void *)(v179 + sub_1D580(v0 + 8) = v178;
    *(_BYTE *)(v179 + swift_beginAccess(v0 + 16) = 1;
    uint64_t v195 = sub_2B68C();
    uint64_t v196 = v180;
    sub_35814(v197, v195, v180, v382, v378, v335);
    swift_bridgeObjectRelease(v196);
    return swift_errorRelease(v197);
  }

  else
  {
    uint64_t v42 = v375;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v385 + 32))(v387, v388, v384);
    uint64_t v43 = sub_AD514();
    uint64_t v314 = (void (*)(_BYTE *, uint64_t, uint64_t))v367[2];
    v314(v42, v43, v366);
    sub_1B508(v383);
    uint64_t v322 = 7LL;
    uint64_t v323 = swift_allocObject(&unk_CBC00, 80LL, 7LL);
    Swift::String v44 = memcpy((void *)(v323 + 16), v383, 0x40uLL);
    id v331 = (os_log_s *)Logger.logObject.getter(v44);
    int v332 = static os_log_type_t.debug.getter();
    uint64_t v317 = &v424;
    uint64_t v424 = 12LL;
    unint64_t v315 = sub_7788();
    unint64_t v316 = sub_77F0();
    unint64_t v318 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v425, v317, &type metadata for UInt32, &type metadata for Int, v315, v316, v318);
    uint32_t v319 = v425;
    uint64_t v320 = 17LL;
    uint64_t v45 = swift_allocObject(&unk_CBC28, 17LL, v322);
    uint64_t v46 = v320;
    uint64_t v47 = v322;
    uint64_t v325 = v45;
    *(_BYTE *)(v45 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v48 = swift_allocObject(&unk_CBC50, v46, v47);
    uint64_t v49 = v322;
    uint64_t v326 = v48;
    *(_BYTE *)(v48 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v321 = 32LL;
    uint64_t v50 = swift_allocObject(&unk_CBC78, 32LL, v49);
    uint64_t v51 = v321;
    uint64_t v52 = v322;
    uint64_t v53 = v50;
    uint64_t v54 = v323;
    uint64_t v324 = v53;
    *(void *)(v53 + swift_beginAccess(v0 + 16) = sub_37D2C;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject(&unk_CBCA0, v51, v52);
    uint64_t v56 = v324;
    uint64_t v328 = v55;
    *(void *)(v55 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v55 + 24) = v56;
    uint64_t v330 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v327 = _allocateUninitializedArray<A>(_:)(3LL, v330);
    uint64_t v329 = v57;
    swift_retain();
    uint64_t v58 = v325;
    uint64_t v59 = v329;
    *uint64_t v329 = sub_884C;
    v59[1] = v58;
    swift_retain();
    uint64_t v60 = v326;
    uint64_t v61 = v329;
    v329[2] = sub_884C;
    v61[3] = v60;
    swift_retain();
    uint64_t v62 = v327;
    uint64_t v63 = v328;
    uint64_t v64 = v329;
    v329[4] = sub_8900;
    v64[5] = v63;
    sub_6648();
    swift_bridgeObjectRelease(v62);
    if (os_log_type_enabled(v331, (os_log_type_t)v332))
    {
      uint64_t v65 = v333;
      uint64_t v307 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v306 = sub_5150(&qword_D6B60);
      uint64_t v308 = sub_74D0(0LL, v306, v306);
      uint64_t v309 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v310 = &v397;
      Swift::String v397 = v307;
      int v311 = &v396;
      uint64_t v396 = v308;
      uint64_t v312 = &v395;
      uint64_t v395 = v309;
      sub_7528(2LL, &v397);
      sub_7528(1LL, v310);
      uint64_t v393 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v394 = v325;
      sub_753C(&v393, (uint64_t)v310, (uint64_t)v311, (uint64_t)v312);
      uint64_t v313 = v65;
      if (v65)
      {
        __break(1u);
      }

      else
      {
        uint64_t v393 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v394 = v326;
        sub_753C(&v393, (uint64_t)&v397, (uint64_t)&v396, (uint64_t)&v395);
        uint64_t v303 = 0LL;
        uint64_t v67 = v303;
        uint64_t v393 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v394 = v328;
        sub_753C(&v393, (uint64_t)&v397, (uint64_t)&v396, (uint64_t)&v395);
        uint64_t v302 = v67;
        _os_log_impl(&dword_0, v331, (os_log_type_t)v332, "Calling CAT: %s", v307, v319);
        sub_7580(v308, 0LL);
        sub_7580(v309, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v304 = v302;
      }
    }

    else
    {
      uint64_t v66 = v333;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v304 = v66;
    }

    uint64_t v278 = v304;

    uint64_t v279 = (void (*)(_BYTE *, uint64_t))v367[1];
    v279(v375, v366);
    uint64_t v280 = 0LL;
    uint64_t v282 = type metadata accessor for CATExecutor();
    uint64_t v285 = sub_2B68C();
    uint64_t v287 = v68;
    uint64_t v283 = type metadata accessor for ParameterService(v280);
    swift_retain();
    sub_1B508(v383);
    id v69 = v390;
    uint64_t v281 = (void *)((char *)v422 + 4);
    sub_454C(v380, (uint64_t)v422 + 4);
    uint64_t v284 = sub_671EC(v381, v383, v390, v281);
    uint64_t v286 = v423;
    v423[3] = v283;
    v423[4] = sub_37DFC();
    v423[0] = v284;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v354 + 16))( v356,  v381 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options,  v353);
    static CATExecutor.execute(templateDir:catId:parameters:globals:callback:options:)( v387,  v285,  v287,  v379,  v390,  v286,  v356);
    Swift::String v70 = v373;
    (*(void (**)(_BYTE *, uint64_t))(v354 + 8))(v356, v353);
    sub_1D580(v286);
    swift_bridgeObjectRelease(v287);
    uint64_t v71 = sub_AD514();
    v314(v70, v71, v366);
    sub_18998(v365, v363);
    uint64_t v72 = *(unsigned __int8 *)(v358 + 80);
    uint64_t v288 = (v72 + 16) & ~v72;
    uint64_t v292 = 7LL;
    uint64_t v293 = swift_allocObject(&unk_CBCC8, v288 + v359, v72 | 7);
    int v73 = sub_1B6A8(v363, (void *)(v293 + v288));
    id v300 = (os_log_s *)Logger.logObject.getter(v73);
    int v301 = static os_log_type_t.debug.getter();
    uint64_t v421 = 12LL;
    UnsignedInteger<>.init<A>(_:)(v422, &v421, &type metadata for UInt32, &type metadata for Int, v315, v316, v318);
    uint32_t v289 = v422[0];
    uint64_t v290 = 17LL;
    uint64_t v74 = swift_allocObject(&unk_CBCF0, 17LL, v292);
    uint64_t v75 = v290;
    uint64_t v76 = v292;
    uint64_t v295 = v74;
    *(_BYTE *)(v74 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v77 = swift_allocObject(&unk_CBD18, v75, v76);
    uint64_t v78 = v292;
    uint64_t v296 = v77;
    *(_BYTE *)(v77 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v291 = 32LL;
    uint64_t v79 = swift_allocObject(&unk_CBD40, 32LL, v78);
    uint64_t v80 = v291;
    uint64_t v81 = v292;
    uint64_t v82 = v79;
    uint64_t v83 = v293;
    uint64_t v294 = v82;
    *(void *)(v82 + swift_beginAccess(v0 + 16) = sub_37F2C;
    *(void *)(v82 + 24) = v83;
    uint64_t v84 = swift_allocObject(&unk_CBD68, v80, v81);
    uint64_t v85 = v330;
    uint64_t v86 = v84;
    uint64_t v87 = v294;
    uint64_t v298 = v86;
    *(void *)(v86 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v86 + 24) = v87;
    uint64_t v297 = _allocateUninitializedArray<A>(_:)(3LL, v85);
    uint64_t v299 = v88;
    swift_retain();
    uint64_t v89 = v295;
    int v90 = v299;
    *uint64_t v299 = sub_884C;
    v90[1] = v89;
    swift_retain();
    uint64_t v91 = v296;
    uint64_t v92 = v299;
    v299[2] = sub_884C;
    v92[3] = v91;
    swift_retain();
    uint64_t v93 = v297;
    uint64_t v94 = v298;
    uint64_t v95 = v299;
    v299[4] = sub_8900;
    v95[5] = v94;
    sub_6648();
    swift_bridgeObjectRelease(v93);
    if (os_log_type_enabled(v300, (os_log_type_t)v301))
    {
      uint64_t v96 = v278;
      unsigned int v271 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v270 = sub_5150(&qword_D6B60);
      uint64_t v272 = sub_74D0(0LL, v270, v270);
      uint64_t v273 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v274 = &v402;
      uint64_t v402 = v271;
      unint64_t v275 = &v401;
      uint64_t v401 = v272;
      unint64_t v276 = &v400;
      uint64_t v400 = v273;
      sub_7528(2LL, &v402);
      sub_7528(1LL, v274);
      uint64_t v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v399 = v295;
      sub_753C(&v398, (uint64_t)v274, (uint64_t)v275, (uint64_t)v276);
      uint64_t v277 = v96;
      if (v96)
      {
        __break(1u);
      }

      else
      {
        uint64_t v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v399 = v296;
        sub_753C(&v398, (uint64_t)&v402, (uint64_t)&v401, (uint64_t)&v400);
        uint64_t v268 = 0LL;
        uint64_t v98 = v268;
        uint64_t v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v399 = v298;
        sub_753C(&v398, (uint64_t)&v402, (uint64_t)&v401, (uint64_t)&v400);
        uint64_t v267 = v98;
        _os_log_impl(&dword_0, v300, (os_log_type_t)v301, "result: %s", v271, v289);
        sub_7580(v272, 0LL);
        sub_7580(v273, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v269 = v267;
      }
    }

    else
    {
      uint64_t v97 = v278;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v269 = v97;
    }

    uint64_t v266 = v269;

    v279(v373, v366);
    sub_18998(v365, v361);
    if (swift_getEnumCaseMultiPayload(v361, v357) == 1)
    {
      uint64_t v201 = *v361;
      uint64_t v420 = v201;
      swift_errorRetain(v201);
      unint64_t v164 = sub_37C70();
      uint64_t v200 = swift_allocError(&unk_CEF08, v164, 0LL, 0LL);
      *(void *)uint64_t v165 = v201;
      *(void *)(v165 + sub_1D580(v0 + 8) = 0LL;
      *(_BYTE *)(v165 + swift_beginAccess(v0 + 16) = 2;
      uint64_t v198 = sub_2B68C();
      uint64_t v199 = v166;
      sub_35814(v200, v198, v166, v382, v378, v335);
      swift_bridgeObjectRelease(v199);
      swift_errorRelease(v200);
      swift_errorRelease(v201);
      sub_18A50(v365);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v385 + 8))(v387, v384);
    }

    else
    {
      uint64_t v99 = v266;
      uint64_t v100 = v352;
      uint64_t v101 = (*(uint64_t (**)(_BYTE *, uint64_t *, uint64_t))(v350 + 32))(v352, v361, v349);
      Swift::String v439 = v100;
      uint64_t v262 = TemplatingResult.meta.getter(v101);
      uint64_t v419 = TemplatingResult.sections.getter();
      uint64_t v263 = sub_5150(&qword_D7930);
      unint64_t v102 = sub_38028();
      uint64_t result = sub_25AD4( (void (*)(char *, char *))sub_2D94C,  0LL,  v263,  (uint64_t)&type metadata for String,  (uint64_t)&type metadata for Never,  v102,  v103,  (uint64_t)&protocol witness table for Never,  v305);
      uint64_t v264 = v99;
      uint64_t v265 = result;
      if (v99)
      {
        __break(1u);
      }

      else
      {
        uint64_t v248 = v265;
        sub_1B82C(&v419);
        sub_367D8(v262, v248, (uint64_t)v348);
        int v105 = v371;
        swift_bridgeObjectRelease(v248);
        swift_bridgeObjectRelease(v262);
        uint64_t v106 = sub_AD514();
        v314(v105, v106, v366);
        swift_bridgeObjectRetain(v378);
        uint64_t v251 = 32LL;
        uint64_t v252 = 7LL;
        uint64_t v107 = swift_allocObject(&unk_CBD90, 32LL, 7LL);
        uint64_t v108 = v378;
        uint64_t v253 = v107;
        *(void *)(v107 + swift_beginAccess(v0 + 16) = v382;
        *(void *)(v107 + 24) = v108;
        uint64_t v260 = (os_log_s *)Logger.logObject.getter(v107);
        int v261 = static os_log_type_t.debug.getter();
        uint64_t v417 = 12LL;
        UnsignedInteger<>.init<A>(_:)(&v418, &v417, &type metadata for UInt32, &type metadata for Int, v315, v316, v318);
        uint32_t v249 = v418;
        uint64_t v250 = 17LL;
        uint64_t v109 = swift_allocObject(&unk_CBDB8, 17LL, v252);
        uint64_t v110 = v250;
        uint64_t v111 = v252;
        uint64_t v255 = v109;
        *(_BYTE *)(v109 + swift_beginAccess(v0 + 16) = 32;
        uint64_t v112 = swift_allocObject(&unk_CBDE0, v110, v111);
        uint64_t v113 = v251;
        uint64_t v114 = v252;
        uint64_t v256 = v112;
        *(_BYTE *)(v112 + swift_beginAccess(v0 + 16) = 8;
        uint64_t v115 = swift_allocObject(&unk_CBE08, v113, v114);
        uint64_t v116 = v251;
        uint64_t v117 = v252;
        uint64_t v118 = v115;
        uint64_t v119 = v253;
        uint64_t v254 = v118;
        *(void *)(v118 + swift_beginAccess(v0 + 16) = sub_1B890;
        *(void *)(v118 + 24) = v119;
        uint64_t v120 = swift_allocObject(&unk_CBE30, v116, v117);
        uint64_t v121 = v330;
        uint64_t v122 = v120;
        uint64_t v123 = v254;
        uint64_t v258 = v122;
        *(void *)(v122 + swift_beginAccess(v0 + 16) = sub_88B8;
        *(void *)(v122 + 24) = v123;
        uint64_t v257 = _allocateUninitializedArray<A>(_:)(3LL, v121);
        int v259 = v124;
        swift_retain();
        uint64_t v125 = v255;
        unint64_t v126 = v259;
        void *v259 = sub_884C;
        v126[1] = v125;
        swift_retain();
        uint64_t v127 = v256;
        uint32_t v128 = v259;
        v259[2] = sub_884C;
        v128[3] = v127;
        swift_retain();
        uint64_t v129 = v257;
        uint64_t v130 = v258;
        uint64_t v131 = v259;
        v259[4] = sub_8900;
        v131[5] = v130;
        sub_6648();
        swift_bridgeObjectRelease(v129);
        if (os_log_type_enabled(v260, (os_log_type_t)v261))
        {
          uint64_t v132 = v264;
          uint64_t v241 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
          uint64_t v240 = sub_5150(&qword_D6B60);
          uint64_t v242 = sub_74D0(0LL, v240, v240);
          uint64_t v243 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          unint64_t v244 = &v407;
          uint64_t v407 = v241;
          uint64_t v245 = &v406;
          uint64_t v406 = v242;
          uint32_t v246 = &v405;
          uint64_t v405 = v243;
          sub_7528(2LL, &v407);
          sub_7528(1LL, v244);
          uint64_t v403 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v404 = v255;
          sub_753C(&v403, (uint64_t)v244, (uint64_t)v245, (uint64_t)v246);
          uint64_t v247 = v132;
          if (v132)
          {
            __break(1u);
          }

          else
          {
            uint64_t v403 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v404 = v256;
            sub_753C(&v403, (uint64_t)&v407, (uint64_t)&v406, (uint64_t)&v405);
            uint64_t v238 = 0LL;
            uint64_t v134 = v238;
            uint64_t v403 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
            uint64_t v404 = v258;
            sub_753C(&v403, (uint64_t)&v407, (uint64_t)&v406, (uint64_t)&v405);
            uint64_t v237 = v134;
            _os_log_impl(&dword_0, v260, (os_log_type_t)v261, "Sending SiriKitEvent .completed for %s", v241, v249);
            sub_7580(v242, 0LL);
            sub_7580(v243, 1LL);
            UnsafeMutablePointer.deallocate()();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v239 = v237;
          }
        }

        else
        {
          uint64_t v133 = v264;
          swift_release();
          swift_release();
          swift_release();
          uint64_t v239 = v133;
        }

        uint64_t v214 = v239;

        uint64_t v135 = ((uint64_t (*)(_BYTE *, uint64_t))v279)(v371, v366);
        uint64_t v221 = (void *)((char *)v414 + 4);
        static SiriKitEventSender.current.getter(v135);
        uint64_t v218 = v415;
        uint64_t v219 = v416;
        uint64_t v217 = sub_8C74(v221, v415);
        uint64_t v215 = 0LL;
        type metadata accessor for SiriKitEvent();
        (*(void (**)(_BYTE *, void, uint64_t))(v340 + 104))( v342,  enum case for ActivityType.completed(_:),  v339);
        swift_bridgeObjectRetain(v378);
        uint64_t v136 = type metadata accessor for SiriKitReliabilityCodes(v215);
        (*(void (**)(_BYTE *, uint64_t))(*(void *)(v136 - 8) + 56LL))(v338, 1LL);
        sub_1B508(v383);
        uint64_t v222 = 80LL;
        uint64_t v227 = 7LL;
        uint64_t v216 = swift_allocObject(&unk_CBE58, 80LL, 7LL);
        size_t v223 = 64LL;
        memcpy((void *)(v216 + 16), v383, 0x40uLL);
        uint64_t v220 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v342, v382, v378, v338, v336);
        dispatch thunk of SiriKitEventSending.send(_:)(v220, v218, v219);
        uint64_t v137 = v369;
        swift_release();
        sub_4598(v221);
        uint64_t v138 = sub_AD514();
        v314(v137, v138, v366);
        sub_1B508(v383);
        uint64_t v228 = swift_allocObject(&unk_CBE80, v222, v227);
        uint64_t v139 = memcpy((void *)(v228 + 16), v383, v223);
        char v235 = (os_log_s *)Logger.logObject.getter(v139);
        int v236 = static os_log_type_t.debug.getter();
        uint64_t v413 = 12LL;
        UnsignedInteger<>.init<A>(_:)(v414, &v413, &type metadata for UInt32, &type metadata for Int, v315, v316, v318);
        uint32_t v224 = v414[0];
        uint64_t v225 = 17LL;
        uint64_t v140 = swift_allocObject(&unk_CBEA8, 17LL, v227);
        uint64_t v141 = v225;
        uint64_t v142 = v227;
        uint64_t v230 = v140;
        *(_BYTE *)(v140 + swift_beginAccess(v0 + 16) = 32;
        uint64_t v143 = swift_allocObject(&unk_CBED0, v141, v142);
        uint64_t v144 = v227;
        uint64_t v231 = v143;
        *(_BYTE *)(v143 + swift_beginAccess(v0 + 16) = 8;
        uint64_t v226 = 32LL;
        uint64_t v145 = swift_allocObject(&unk_CBEF8, 32LL, v144);
        uint64_t v146 = v226;
        uint64_t v147 = v227;
        uint64_t v148 = v145;
        uint64_t v149 = v228;
        uint64_t v229 = v148;
        *(void *)(v148 + swift_beginAccess(v0 + 16) = sub_3824C;
        *(void *)(v148 + 24) = v149;
        uint64_t v150 = swift_allocObject(&unk_CBF20, v146, v147);
        uint64_t v151 = v330;
        uint64_t v152 = v150;
        uint64_t v153 = v229;
        uint64_t v233 = v152;
        *(void *)(v152 + swift_beginAccess(v0 + 16) = sub_88B8;
        *(void *)(v152 + 24) = v153;
        uint64_t v232 = _allocateUninitializedArray<A>(_:)(3LL, v151);
        uint64_t v234 = v154;
        swift_retain();
        uint64_t v155 = v230;
        Swift::String v156 = v234;
        *uint64_t v234 = sub_884C;
        v156[1] = v155;
        swift_retain();
        uint64_t v157 = v231;
        uint64_t v158 = v234;
        v234[2] = sub_884C;
        v158[3] = v157;
        swift_retain();
        uint64_t v159 = v232;
        uint64_t v160 = v233;
        Swift::String v161 = v234;
        v234[4] = sub_8900;
        v161[5] = v160;
        sub_6648();
        swift_bridgeObjectRelease(v159);
        if (os_log_type_enabled(v235, (os_log_type_t)v236))
        {
          uint64_t v162 = v214;
          uint64_t v207 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
          uint64_t v206 = sub_5150(&qword_D6B60);
          uint64_t v208 = sub_74D0(0LL, v206, v206);
          uint64_t v209 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v210 = &v412;
          v412 = v207;
          Builtin::Word v211 = &v411;
          uint64_t v411 = v208;
          unint64_t v212 = &v410;
          uint64_t v410 = v209;
          sub_7528(2LL, &v412);
          sub_7528(1LL, v210);
          uint64_t v408 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v409 = v230;
          sub_753C(&v408, (uint64_t)v210, (uint64_t)v211, (uint64_t)v212);
          uint64_t v213 = v162;
          if (v162)
          {
            __break(1u);
          }

          else
          {
            uint64_t v408 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v409 = v231;
            sub_753C(&v408, (uint64_t)&v412, (uint64_t)&v411, (uint64_t)&v410);
            uint64_t v205 = 0LL;
            uint64_t v408 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
            uint64_t v409 = v233;
            sub_753C(&v408, (uint64_t)&v412, (uint64_t)&v411, (uint64_t)&v410);
            _os_log_impl(&dword_0, v235, (os_log_type_t)v236, "Successful completion of CAT: %s", v207, v224);
            sub_7580(v208, 0LL);
            sub_7580(v209, 1LL);
            UnsafeMutablePointer.deallocate()();
            swift_release();
            swift_release();
            swift_release();
          }
        }

        else
        {
          swift_release();
          swift_release();
          swift_release();
        }

        v279(v369, v366);
        uint64_t v204 = sub_2B68C();
        uint64_t v202 = v163;
        uint64_t v203 = TemplatingResult.sections.getter();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v344 + 16))(v346, v348, v343);
        TemplatingResult.init(templateIdentifier:sections:behaviorAfterSpeaking:)(v204, v202, v203, v346);
        swift_storeEnumTagMultiPayload(v335, v357, 0LL);
        (*(void (**)(_BYTE *, uint64_t))(v344 + 8))(v348, v343);
        (*(void (**)(_BYTE *, uint64_t))(v350 + 8))(v352, v349);
        sub_18A50(v365);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v385 + 8))(v387, v384);
      }
    }
  }

  return result;
}

uint64_t sub_2D87C()
{
  v2[0] = sub_2B68C();
  v2[1] = v0;
  return String.init<A>(_:)( v2,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
}

uint64_t sub_2D8D0(uint64_t a1)
{
  uint64_t v4 = a1;
  uint64_t v6 = sub_5150(&qword_D7300);
  unint64_t v5 = (*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  double v7 = (char *)&v4 - v5;
  sub_18998(v2, (uint64_t *)((char *)&v4 - v5));
  return String.init<A>(describing:)(v7, v6);
}

uint64_t sub_2D94C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TemplatingSection.id.getter();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_2D998()
{
  uint64_t v0 = sub_2B68C();
  dispatch thunk of SiriKitEvent.SiriKitEventBuilder.responseId.setter(v0, v1);
  return swift_release();
}

uint64_t sub_2D9F4()
{
  return sub_2B68C();
}

uint64_t sub_2DA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(void *)(v8 + 28sub_1D580(v0 + 8) = v7;
  *(_BYTE *)(v8 + 505) = a7 & 1;
  *(void *)(v8 + 2swift_beginAccess(v0 + 80) = a6;
  *(void *)(v8 + 27sub_4598(v0 + 2) = a5;
  *(void *)(v8 + 264) = a4;
  *(void *)(v8 + 256) = a3;
  *(void *)(v8 + 24sub_1D580(v0 + 8) = a2;
  *(void *)(v8 + 240) = a1;
  *(void *)(v8 + 15sub_4598(v0 + 2) = v8;
  *(void *)(v8 + swift_beginAccess(v0 + 160) = 0LL;
  *(void *)(v8 + 136) = 0LL;
  *(void *)(v8 + 144) = 0LL;
  *(void *)(v8 + 16sub_1D580(v0 + 8) = 0LL;
  *(void *)(v8 + 176) = 0LL;
  *(void *)(v8 + 184) = 0LL;
  *(_BYTE *)(v8 + 504) = 0;
  *(void *)(v8 + 19sub_4598(v0 + 2) = 0LL;
  *(void *)(v8 + 20sub_1D580(v0 + 8) = 0LL;
  uint64_t v9 = sub_5150(&qword_D7308);
  *(void *)(v8 + 296) = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ActivityType(v10);
  *(void *)(v8 + 304) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 3sub_1B82C(v0 + 12) = v12;
  *(void *)(v8 + 320) = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for CATOption(0LL);
  *(void *)(v8 + 32sub_1D580(v0 + 8) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)(v8 + 336) = v14;
  *(void *)(v8 + 344) = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  *(void *)(v8 + 35sub_4598(v0 + 2) = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)(v8 + 360) = v16;
  uint64_t v20 = *(void *)(v16 + 64);
  *(void *)(v8 + 36sub_1D580(v0 + 8) = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 376) = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 384) = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + 39sub_4598(v0 + 2) = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for URL(0LL);
  *(void *)(v8 + 400) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v8 + 40sub_1D580(v0 + 8) = v18;
  *(void *)(v8 + 4swift_beginAccess(v0 + 16) = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + swift_beginAccess(v0 + 160) = a1;
  *(void *)(v8 + 136) = a2;
  *(void *)(v8 + 144) = a3;
  *(void *)(v8 + 16sub_1D580(v0 + 8) = a4;
  *(void *)(v8 + 176) = a5;
  *(void *)(v8 + 184) = a6;
  *(_BYTE *)(v8 + 504) = a7 & 1;
  *(void *)(v8 + 19sub_4598(v0 + 2) = v7;
  return swift_task_switch(sub_2DCB0, 0LL);
}

uint64_t sub_2DCB0()
{
  uint64_t v1 = v0[36];
  uint64_t v50 = (void *)v0[34];
  v0[19] = v0;
  uint64_t v49 = *(void **)(v1 + 16);
  id v2 = v49;
  sub_97C54(v50, v49);
  uint64_t v3 = v48[49];
  uint64_t v32 = v48[45];
  uint64_t v33 = v48[44];
  __src = (void *)v48[30];

  uint64_t v4 = sub_AD514();
  unint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  v48[53] = v5;
  v5(v3, v4, v33);
  sub_1B508(__src);
  uint64_t v38 = swift_allocObject(&unk_CBF48, 80LL, 7LL);
  uint64_t v6 = memcpy((void *)(v38 + 16), __src, 0x40uLL);
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  v48[25] = 12LL;
  unint64_t v35 = sub_7788();
  v48[54] = v35;
  unint64_t v36 = sub_77F0();
  v48[55] = v36;
  unint64_t v7 = sub_7858();
  v48[56] = v7;
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v48 + 508),  v48 + 25,  &type metadata for UInt32,  &type metadata for Int,  v35,  v36,  v7);
  uint32_t size = *((_DWORD *)v48 + 127);
  uint64_t v40 = swift_allocObject(&unk_CBF70, 17LL, 7LL);
  *(_BYTE *)(v40 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v41 = swift_allocObject(&unk_CBF98, 17LL, 7LL);
  *(_BYTE *)(v41 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v39 = swift_allocObject(&unk_CBFC0, 32LL, 7LL);
  *(void *)(v39 + swift_beginAccess(v0 + 16) = sub_37D2C;
  *(void *)(v39 + 24) = v38;
  uint64_t v43 = swift_allocObject(&unk_CBFE8, 32LL, 7LL);
  *(void *)(v43 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v43 + 24) = v39;
  uint64_t v45 = sub_5150((uint64_t *)&unk_D6B50);
  v48[57] = v45;
  uint64_t v42 = _allocateUninitializedArray<A>(_:)(3LL, v45);
  Swift::String v44 = v8;
  swift_retain();
  *Swift::String v44 = sub_884C;
  v44[1] = v40;
  swift_retain();
  v44[2] = sub_884C;
  v44[3] = v41;
  swift_retain();
  v44[4] = sub_8900;
  v44[5] = v43;
  sub_6648();
  swift_bridgeObjectRelease(v42);
  if (os_log_type_enabled(v46, v47))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v28 = sub_5150(&qword_D6B60);
    uint64_t v30 = sub_74D0(0LL, v28, v28);
    uint64_t v31 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v51 = buf;
    uint64_t v52 = v30;
    uint64_t v53 = v31;
    sub_7528(2LL, &v51);
    sub_7528(1LL, &v51);
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v55 = v40;
    sub_753C(&v54, (uint64_t)&v51, (uint64_t)&v52, (uint64_t)&v53);
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v55 = v41;
    sub_753C(&v54, (uint64_t)&v51, (uint64_t)&v52, (uint64_t)&v53);
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v55 = v43;
    sub_753C(&v54, (uint64_t)&v51, (uint64_t)&v52, (uint64_t)&v53);
    _os_log_impl(&dword_0, v46, v47, "Calling CAT: %s", buf, size);
    sub_7580(v30, 0LL);
    sub_7580(v31, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v15 = v48[49];
  uint64_t v14 = v48[45];
  uint64_t v16 = v48[44];
  uint64_t v25 = v48[43];
  uint64_t v23 = v48[42];
  uint64_t v24 = v48[41];
  uint64_t v22 = v48[36];
  uint64_t v17 = v48[35];
  id v19 = (id)v48[34];
  uint64_t v18 = (void *)v48[30];

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v48[58] = v9;
  v9(v15, v16);
  type metadata accessor for CATDialog();
  uint64_t v26 = sub_2B68C();
  uint64_t v27 = v10;
  v48[59] = v10;
  uint64_t v20 = type metadata accessor for ParameterService(0LL);
  swift_retain();
  sub_1B508(v18);
  id v11 = v19;
  sub_454C(v17, (uint64_t)(v48 + 7));
  uint64_t v21 = sub_671EC(v22, v18, v19, v48 + 7);
  v48[5] = v20;
  v48[6] = sub_37DFC();
  v48[2] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))( v25,  v22 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options,  v24);
  uint64_t v12 = (void *)swift_task_alloc(async function pointer to static CATDialog.execute(templateDir:catId:parameters:globals:callback:options:)[1]);
  v48[60] = v12;
  *uint64_t v12 = v48[19];
  v12[1] = sub_2E61C;
  return static CATDialog.execute(templateDir:catId:parameters:globals:callback:options:)( v48[52],  v26,  v27,  v48[33],  v48[34],  v48 + 2,  v48[43]);
}

uint64_t sub_2E61C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 480LL);
  v4[19] = *(void *)v2;
  v4 += 19;
  uint64_t v8 = v4 - 17;
  uint64_t v9 = v4 - 17;
  v4[42] = a1;
  v4[43] = v1;
  swift_task_dealloc(v5);
  if (v1) {
    return swift_task_switch(sub_2FC54, 0LL);
  }
  uint64_t v7 = v8[57];
  (*(void (**)(void, void))(v8[40] + 8LL))(v8[41], v8[39]);
  sub_1D580(v9);
  swift_bridgeObjectRelease(v7);
  return swift_task_switch(sub_2E708, 0LL);
}

uint64_t sub_2E708()
{
  id v99 = (id)v0[61];
  uint64_t v111 = v0[57];
  uint64_t v102 = v0[56];
  uint64_t v101 = v0[55];
  uint64_t v100 = v0[54];
  uint64_t v98 = (void (*)(uint64_t, uint64_t, uint64_t))v0[53];
  uint64_t v1 = v0[48];
  uint64_t v97 = v0[44];
  v0[19] = v0;
  v0[26] = v99;
  uint64_t v2 = sub_AD514();
  v98(v1, v2, v97);
  id v3 = v99;
  uint64_t v104 = swift_allocObject(&unk_CC010, 24LL, 7LL);
  *(void *)(v104 + swift_beginAccess(v0 + 16) = v99;
  uint64_t v112 = (os_log_s *)Logger.logObject.getter(v104);
  os_log_type_t v113 = static os_log_type_t.debug.getter();
  v0[27] = 12LL;
  UnsignedInteger<>.init<A>(_:)(v0 + 64, v0 + 27, &type metadata for UInt32, &type metadata for Int, v100, v101, v102);
  uint32_t size = *((_DWORD *)v0 + 128);
  uint64_t v106 = swift_allocObject(&unk_CC038, 17LL, 7LL);
  *(_BYTE *)(v106 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v107 = swift_allocObject(&unk_CC060, 17LL, 7LL);
  *(_BYTE *)(v107 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v105 = swift_allocObject(&unk_CC088, 32LL, 7LL);
  *(void *)(v105 + swift_beginAccess(v0 + 16) = sub_38474;
  *(void *)(v105 + 24) = v104;
  uint64_t v109 = swift_allocObject(&unk_CC0B0, 32LL, 7LL);
  *(void *)(v109 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v109 + 24) = v105;
  uint64_t v108 = _allocateUninitializedArray<A>(_:)(3LL, v111);
  uint64_t v110 = v4;
  swift_retain();
  *uint64_t v110 = sub_884C;
  v110[1] = v106;
  swift_retain();
  v110[2] = sub_884C;
  v110[3] = v107;
  swift_retain();
  v110[4] = sub_8900;
  v110[5] = v109;
  sub_6648();
  swift_bridgeObjectRelease(v108);
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v5 = *(void *)(v96 + 496);
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v92 = sub_5150(&qword_D6B60);
    uint64_t v94 = sub_74D0(0LL, v92, v92);
    uint64_t v95 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    Swift::String v124 = buf;
    uint64_t v125 = v94;
    uint64_t v126 = v95;
    sub_7528(2LL, &v124);
    sub_7528(1LL, &v124);
    uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v128 = v106;
    uint64_t result = sub_753C(&v127, (uint64_t)&v124, (uint64_t)&v125, (uint64_t)&v126);
    if (v5) {
      return result;
    }
    uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v128 = v107;
    sub_753C(&v127, (uint64_t)&v124, (uint64_t)&v125, (uint64_t)&v126);
    uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v128 = v109;
    sub_753C(&v127, (uint64_t)&v124, (uint64_t)&v125, (uint64_t)&v126);
    _os_log_impl(&dword_0, v112, v113, "result: %s", buf, size);
    sub_7580(v94, 0LL);
    sub_7580(v95, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v91 = 0LL;
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v91 = *(void *)(v96 + 496);
  }

  uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v96 + 464);
  uint64_t v87 = *(void *)(v96 + 384);
  uint64_t v88 = *(void *)(v96 + 352);
  char v90 = *(_BYTE *)(v96 + 505);

  v89(v87, v88);
  if ((v90 & 1) != 0)
  {
    uint64_t v63 = v91;
  }

  else
  {
    uint64_t v84 = *(void *)(v96 + 456);
    uint64_t v75 = *(void *)(v96 + 448);
    uint64_t v74 = *(void *)(v96 + 440);
    uint64_t v73 = *(void *)(v96 + 432);
    Swift::String v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 424);
    uint64_t v7 = *(void *)(v96 + 376);
    uint64_t v69 = *(void *)(v96 + 352);
    uint64_t v72 = *(void *)(v96 + 256);
    uint64_t v71 = *(void *)(v96 + 248);
    uint64_t v8 = sub_AD514();
    v70(v7, v8, v69);
    swift_bridgeObjectRetain(v72);
    uint64_t v77 = swift_allocObject(&unk_CC1A0, 32LL, 7LL);
    *(void *)(v77 + swift_beginAccess(v0 + 16) = v71;
    *(void *)(v77 + 24) = v72;
    oslog = (os_log_s *)Logger.logObject.getter(v77);
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    *(void *)(v96 + 23sub_4598(v0 + 2) = 12LL;
    UnsignedInteger<>.init<A>(_:)( (void *)(v96 + 520),  v96 + 232,  &type metadata for UInt32,  &type metadata for Int,  v73,  v74,  v75);
    uint32_t v76 = *(_DWORD *)(v96 + 520);
    uint64_t v79 = swift_allocObject(&unk_CC1C8, 17LL, 7LL);
    *(_BYTE *)(v79 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v80 = swift_allocObject(&unk_CC1F0, 17LL, 7LL);
    *(_BYTE *)(v80 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v78 = swift_allocObject(&unk_CC218, 32LL, 7LL);
    *(void *)(v78 + swift_beginAccess(v0 + 16) = sub_1B890;
    *(void *)(v78 + 24) = v77;
    uint64_t v82 = swift_allocObject(&unk_CC240, 32LL, 7LL);
    *(void *)(v82 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v82 + 24) = v78;
    uint64_t v81 = _allocateUninitializedArray<A>(_:)(3LL, v84);
    uint64_t v83 = v9;
    swift_retain();
    *uint64_t v83 = sub_884C;
    v83[1] = v79;
    swift_retain();
    v83[2] = sub_884C;
    v83[3] = v80;
    swift_retain();
    v83[4] = sub_8900;
    v83[5] = v82;
    sub_6648();
    swift_bridgeObjectRelease(v81);
    if (os_log_type_enabled(oslog, v86))
    {
      uint64_t v66 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v65 = sub_5150(&qword_D6B60);
      uint64_t v67 = sub_74D0(0LL, v65, v65);
      uint64_t v68 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v119 = v66;
      uint64_t v120 = v67;
      uint64_t v121 = v68;
      sub_7528(2LL, &v119);
      sub_7528(1LL, &v119);
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v123 = v79;
      uint64_t result = sub_753C(&v122, (uint64_t)&v119, (uint64_t)&v120, (uint64_t)&v121);
      if (v91) {
        return result;
      }
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v123 = v80;
      sub_753C(&v122, (uint64_t)&v119, (uint64_t)&v120, (uint64_t)&v121);
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v123 = v82;
      sub_753C(&v122, (uint64_t)&v119, (uint64_t)&v120, (uint64_t)&v121);
      _os_log_impl(&dword_0, oslog, v86, "Sending SiriKitEvent .completed for %s", v66, v76);
      sub_7580(v67, 0LL);
      sub_7580(v68, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v64 = 0LL;
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
      uint64_t v64 = v91;
    }

    uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v96 + 464);
    uint64_t v49 = *(void *)(v96 + 376);
    uint64_t v50 = *(void *)(v96 + 352);
    uint64_t v55 = *(void *)(v96 + 320);
    uint64_t v52 = *(void *)(v96 + 312);
    uint64_t v53 = *(void *)(v96 + 304);
    uint64_t v58 = *(void *)(v96 + 296);
    uint64_t v57 = *(void *)(v96 + 256);
    uint64_t v56 = *(void *)(v96 + 248);
    __src = *(void **)(v96 + 240);

    uint64_t v10 = v51(v49, v50);
    static SiriKitEventSender.current.getter(v10);
    uint64_t v60 = *(void *)(v96 + 120);
    uint64_t v61 = *(void *)(v96 + 128);
    sub_8C74((void *)(v96 + 96), v60);
    type metadata accessor for SiriKitEvent(0LL);
    (*(void (**)(uint64_t, void, uint64_t))(v52 + 104))(v55, enum case for ActivityType.completed(_:), v53);
    swift_bridgeObjectRetain(v57);
    uint64_t v11 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v58, 1LL);
    sub_1B508(__src);
    uint64_t v59 = swift_allocObject(&unk_CC268, 80LL, 7LL);
    memcpy((void *)(v59 + 16), __src, 0x40uLL);
    uint64_t v62 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v55, v56, v57, v58, sub_381F0);
    dispatch thunk of SiriKitEventSending.send(_:)(v62, v60, v61);
    swift_release();
    sub_4598((void *)(v96 + 96));
    uint64_t v63 = v64;
  }

  uint64_t v46 = *(void *)(v96 + 456);
  uint64_t v37 = *(void *)(v96 + 448);
  uint64_t v36 = *(void *)(v96 + 440);
  uint64_t v35 = *(void *)(v96 + 432);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 424);
  uint64_t v12 = *(void *)(v96 + 368);
  uint64_t v32 = *(void *)(v96 + 352);
  uint64_t v34 = *(void **)(v96 + 240);
  uint64_t v13 = sub_AD514();
  v33(v12, v13, v32);
  sub_1B508(v34);
  uint64_t v39 = swift_allocObject(&unk_CC0D8, 80LL, 7LL);
  uint64_t v14 = memcpy((void *)(v39 + 16), v34, 0x40uLL);
  log = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  *(void *)(v96 + 224) = 12LL;
  UnsignedInteger<>.init<A>(_:)( (void *)(v96 + 516),  v96 + 224,  &type metadata for UInt32,  &type metadata for Int,  v35,  v36,  v37);
  uint32_t v38 = *(_DWORD *)(v96 + 516);
  uint64_t v41 = swift_allocObject(&unk_CC100, 17LL, 7LL);
  *(_BYTE *)(v41 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v42 = swift_allocObject(&unk_CC128, 17LL, 7LL);
  *(_BYTE *)(v42 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v40 = swift_allocObject(&unk_CC150, 32LL, 7LL);
  *(void *)(v40 + swift_beginAccess(v0 + 16) = sub_3824C;
  *(void *)(v40 + 24) = v39;
  uint64_t v44 = swift_allocObject(&unk_CC178, 32LL, 7LL);
  *(void *)(v44 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v44 + 24) = v40;
  uint64_t v43 = _allocateUninitializedArray<A>(_:)(3LL, v46);
  uint64_t v45 = v15;
  swift_retain();
  *uint64_t v45 = sub_884C;
  v45[1] = v41;
  swift_retain();
  v45[2] = sub_884C;
  v45[3] = v42;
  swift_retain();
  v45[4] = sub_8900;
  v45[5] = v44;
  sub_6648();
  swift_bridgeObjectRelease(v43);
  if (!os_log_type_enabled(log, v48))
  {
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }

  double v29 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
  uint64_t v28 = sub_5150(&qword_D6B60);
  uint64_t v30 = sub_74D0(0LL, v28, v28);
  uint64_t v31 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
  uint64_t v114 = v29;
  uint64_t v115 = v30;
  uint64_t v116 = v31;
  sub_7528(2LL, &v114);
  sub_7528(1LL, &v114);
  uint64_t v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
  uint64_t v118 = v41;
  uint64_t result = sub_753C(&v117, (uint64_t)&v114, (uint64_t)&v115, (uint64_t)&v116);
  if (!v63)
  {
    uint64_t v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v118 = v42;
    sub_753C(&v117, (uint64_t)&v114, (uint64_t)&v115, (uint64_t)&v116);
    uint64_t v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v118 = v44;
    sub_753C(&v117, (uint64_t)&v114, (uint64_t)&v115, (uint64_t)&v116);
    _os_log_impl(&dword_0, log, v48, "Successful completion of CAT: %s", v29, v38);
    sub_7580(v30, 0LL);
    sub_7580(v31, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
LABEL_19:
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v96 + 464);
    uint64_t v20 = *(void *)(v96 + 416);
    uint64_t v18 = *(void *)(v96 + 408);
    uint64_t v19 = *(void *)(v96 + 400);
    uint64_t v21 = *(void *)(v96 + 392);
    uint64_t v22 = *(void *)(v96 + 384);
    uint64_t v23 = *(void *)(v96 + 376);
    uint64_t v24 = *(void *)(v96 + 368);
    uint64_t v16 = *(void *)(v96 + 352);
    uint64_t v25 = *(void *)(v96 + 344);
    uint64_t v26 = *(void *)(v96 + 320);
    uint64_t v27 = *(void *)(v96 + 296);

    v17(v24, v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(*(void *)(v96 + 152) + 8LL))(*(void *)(v96 + 488));
  }

  return result;
}

uint64_t sub_2FC54()
{
  uint64_t v5 = v0[59];
  uint64_t v7 = v0[52];
  uint64_t v6 = v0[51];
  uint64_t v8 = v0[50];
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[42];
  uint64_t v3 = v0[41];
  v0[19] = v0;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1D580(v0 + 2);
  swift_bridgeObjectRelease(v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  uint64_t v9 = v0[49];
  uint64_t v10 = v0[48];
  uint64_t v11 = v0[47];
  uint64_t v12 = v0[46];
  uint64_t v13 = v0[43];
  uint64_t v14 = v0[40];
  uint64_t v15 = v0[37];
  swift_task_dealloc(v0[52]);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)())(v0[19] + 8LL))();
}

uint64_t sub_2FDC0(void *a1)
{
  id v1 = a1;
  uint64_t v6 = a1;
  unint64_t v5 = sub_3B180();
  unint64_t v2 = sub_3B1E4();
  return String.init<A>(describing:)(&v6, v5, v2);
}

double sub_2FE10@<D0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v97 = a3;
  uint64_t v129 = a1;
  uint64_t v136 = a2;
  uint64_t v146 = 0LL;
  uint64_t v145 = 0LL;
  uint64_t v144 = 0LL;
  uint64_t v143 = 0LL;
  uint64_t v142 = 0LL;
  uint64_t v141 = 0LL;
  uint64_t v147 = 0LL;
  uint64_t v139 = 0LL;
  uint64_t v124 = 0LL;
  uint64_t v98 = type metadata accessor for TemplatingSection(0LL);
  uint64_t v99 = *(void *)(v98 - 8);
  unint64_t v100 = (*(void *)(v99 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v101 = (uint64_t *)((char *)&v60 - v100);
  uint64_t v102 = type metadata accessor for TemplatingText(v4);
  uint64_t v103 = *(void *)(v102 - 8);
  unint64_t v104 = (*(void *)(v103 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v105 = (char *)&v60 - v104;
  unint64_t v106 = (*(void *)(*(void *)(sub_5150(&qword_D7948) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v107 = (uint64_t *)((char *)&v60 - v106);
  uint64_t v108 = type metadata accessor for TemplatingResult(v7);
  uint64_t v109 = *(void *)(v108 - 8);
  unint64_t v110 = (*(void *)(v109 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v111 = (char *)&v60 - v110;
  uint64_t v147 = (char *)&v60 - v110;
  uint64_t v112 = type metadata accessor for DialogServiceButton(v9);
  unint64_t v113 = (*(void *)(*(void *)(v112 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v114 = (char *)&v60 - v113;
  uint64_t v146 = (char *)&v60 - v113;
  uint64_t v115 = type metadata accessor for CATOption(v11);
  uint64_t v116 = *(void *)(v115 - 8);
  unint64_t v117 = (*(void *)(v116 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v12);
  uint64_t v118 = (char *)&v60 - v117;
  uint64_t v119 = sub_5150(&qword_D7300);
  unint64_t v120 = (*(void *)(*(void *)(v119 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v14 = __chkstk_darwin(v13);
  uint64_t v121 = (uint64_t *)((char *)&v60 - v120);
  unint64_t v122 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v14);
  uint64_t v123 = (uint64_t *)((char *)&v60 - v122);
  uint64_t v145 = (char *)&v60 - v122;
  unint64_t v125 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v17 = __chkstk_darwin(v16);
  uint64_t v126 = (char *)&v60 - v125;
  unint64_t v127 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  uint64_t v134 = (uint64_t)&v60 - v127;
  uint64_t v130 = type metadata accessor for URL(v19);
  uint64_t v131 = *(void *)(v130 - 8);
  unint64_t v132 = (*(void *)(v131 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v20);
  uint64_t v133 = (uint64_t)&v60 - v132;
  uint64_t v144 = (char *)&v60 - v132;
  uint64_t v143 = v21;
  uint64_t v142 = v22;
  uint64_t v141 = v23;
  uint64_t v135 = *(void **)(v23 + 16);
  id v24 = v135;
  sub_97C54(v136, v135);
  uint64_t v137 = 0LL;

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v131 + 56))(v134, 0LL, 1LL, v130);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v134, 1LL, v130) == 1)
  {
    sub_1BA84(v134);
    return sub_2B828(v97);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 32))(v133, v134, v130);
    uint64_t v94 = sub_2B68C();
    uint64_t v95 = v25;
    int v96 = sub_35314(v133, v94, v25);
    swift_bridgeObjectRelease(v95);
    if ((v96 & 1) != 0)
    {
      uint64_t v89 = 0LL;
      uint64_t v88 = type metadata accessor for CATExecutor();
      uint64_t v90 = sub_2B68C();
      uint64_t v93 = v28;
      uint64_t v29 = sub_5150(&qword_D7370);
      uint64_t v30 = _allocateUninitializedArray<A>(_:)(v89, v29);
      uint64_t v92 = Dictionary.init(dictionaryLiteral:)( v30,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      uint64_t v91 = v140;
      memset(v140, 0, sizeof(v140));
      (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))( v118,  v128 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options,  v115);
      static CATExecutor.execute(templateDir:catId:parameters:globals:callback:options:)( v133,  v90,  v93,  v92,  v136,  v91,  v118);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v115);
      sub_1D580(v91);
      swift_bridgeObjectRelease(v92);
      swift_bridgeObjectRelease(v93);
      sub_2B828(v114);
      sub_18998(v123, v121);
      if (swift_getEnumCaseMultiPayload(v121, v119) == 1)
      {
        uint64_t v56 = v114;
        uint64_t v61 = *v121;
        uint64_t v57 = *((void *)v114 + 1);
        *(void *)uint64_t v114 = 0LL;
        *((void *)v56 + 1) = 0LL;
        swift_bridgeObjectRelease(v57);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v126, 1LL, 1LL, v130);
        sub_3881C(v126, &v114[*(int *)(v112 + 20)]);
        uint64_t v58 = &v114[*(int *)(v112 + 24)];
        uint64_t v59 = *((void *)v58 + 1);
        *(void *)uint64_t v58 = 0LL;
        *((void *)v58 + 1) = 0LL;
        swift_bridgeObjectRelease(v59);
        swift_errorRelease(v61);
      }

      else
      {
        uint64_t v31 = v111;
        uint64_t v32 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v109 + 32))(v111, v121, v108);
        uint64_t v147 = v31;
        uint64_t v85 = TemplatingResult.sections.getter(v32);
        uint64_t v139 = v85;
        swift_bridgeObjectRetain(v85);
        uint64_t v87 = &v138;
        uint64_t v138 = v85;
        uint64_t v86 = sub_5150(&qword_D7930);
        unint64_t v33 = sub_38028();
        Collection.first.getter(v107, v86, v33);
        sub_1B82C(v87);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v99 + 48))(v107, 1LL, v98) == 1)
        {
          uint64_t v62 = 0LL;
          sub_38AA4((uint64_t)v107);
          uint64_t v83 = v62;
          uint64_t v84 = v62;
        }

        else
        {
          ((void (*)(void))TemplatingSection.content.getter)();
          uint64_t v34 = (*(uint64_t (**)(void *, uint64_t))(v99 + 8))(v107, v98);
          uint64_t v81 = TemplatingText.text.getter(v34);
          uint64_t v82 = v35;
          (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v102);
          uint64_t v83 = v81;
          uint64_t v84 = v82;
        }

        uint64_t v36 = v114;
        uint64_t v37 = v84;
        uint64_t v38 = *((void *)v114 + 1);
        *(void *)uint64_t v114 = v83;
        *((void *)v36 + 1) = v37;
        swift_bridgeObjectRelease(v38);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v126, 1LL, 1LL, v130);
        sub_3881C(v126, &v114[*(int *)(v112 + 20)]);
        uint64_t v39 = &v114[*(int *)(v112 + 24)];
        uint64_t v40 = *((void *)v39 + 1);
        *(void *)uint64_t v39 = 0LL;
        *((void *)v39 + 1) = 0LL;
        swift_bridgeObjectRelease(v40);
        BOOL v80 = Array.count.getter(v85, v98) <= 1;
        swift_bridgeObjectRetain(v85);
        if (v80)
        {
          BOOL v79 = 0;
        }

        else
        {
          uint64_t v41 = Array.subscript.getter(v101, 1LL, v85);
          uint64_t v75 = TemplatingSection.id.getter(v41);
          uint64_t v77 = v42;
          (*(void (**)(void *, uint64_t))(v99 + 8))(v101, v98);
          Swift::String v43 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#link", 5uLL, 1);
          object = v43._object;
          BOOL v78 = String.hasSuffix(_:)(v43);
          swift_bridgeObjectRelease(object);
          swift_bridgeObjectRelease(v77);
          BOOL v79 = v78;
        }

        BOOL v74 = v79;
        swift_bridgeObjectRelease(v85);
        if (v74)
        {
          uint64_t v44 = Array.subscript.getter(v101, 1LL, v85);
          TemplatingSection.content.getter(v44);
          uint64_t v45 = (*(uint64_t (**)(void *, uint64_t))(v99 + 8))(v101, v98);
          uint64_t v72 = TemplatingText.text.getter(v45);
          uint64_t v73 = v46;
          (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v102);
          URL.init(string:)(v72, v73);
          swift_bridgeObjectRelease(v73);
          sub_3881C(v126, &v114[*(int *)(v112 + 20)]);
        }

        else
        {
          BOOL v71 = Array.count.getter(v85, v98) <= 1;
          swift_bridgeObjectRetain(v85);
          if (v71)
          {
            BOOL v70 = 0;
          }

          else
          {
            os_log_type_t v47 = Array.subscript.getter(v101, 1LL, v85);
            uint64_t v66 = TemplatingSection.id.getter(v47);
            uint64_t v68 = v48;
            (*(void (**)(void *, uint64_t))(v99 + 8))(v101, v98);
            Swift::String v49 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#intentName", 0xBuLL, 1);
            uint64_t v67 = v49._object;
            BOOL v69 = String.hasSuffix(_:)(v49);
            swift_bridgeObjectRelease(v67);
            swift_bridgeObjectRelease(v68);
            BOOL v70 = v69;
          }

          BOOL v65 = v70;
          swift_bridgeObjectRelease(v85);
          if (v65)
          {
            uint64_t v50 = Array.subscript.getter(v101, 1LL, v85);
            TemplatingSection.content.getter(v50);
            uint64_t v51 = (*(uint64_t (**)(void *, uint64_t))(v99 + 8))(v101, v98);
            uint64_t v63 = TemplatingText.text.getter(v51);
            uint64_t v64 = v52;
            (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v102);
            uint64_t v53 = v64;
            uint64_t v54 = &v114[*(int *)(v112 + 24)];
            uint64_t v55 = *((void *)v54 + 1);
            *(void *)uint64_t v54 = v63;
            *((void *)v54 + 1) = v53;
            swift_bridgeObjectRelease(v55);
          }
        }

        swift_bridgeObjectRelease(v85);
        (*(void (**)(char *, uint64_t))(v109 + 8))(v111, v108);
      }

      sub_3897C(v114, v97);
      sub_18A50(v123);
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v133, v130);
    }

    else
    {
      double v26 = sub_2B828(v97);
      (*(void (**)(uint64_t, uint64_t, double))(v131 + 8))(v133, v130, v26);
    }
  }

  return result;
}

uint64_t sub_30CCC(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v233 = a1;
  uint64_t v232 = a2;
  uint64_t v231 = a3;
  uint64_t v277 = 0LL;
  unint64_t v275 = 0LL;
  uint64_t v274 = 0LL;
  uint64_t v272 = 0LL;
  uint64_t v273 = 0LL;
  uint64_t v271 = 0LL;
  uint64_t v270 = 0LL;
  uint64_t v267 = 0LL;
  uint64_t v257 = 0LL;
  uint64_t v258 = 0LL;
  Swift::String v256 = (Swift::String)0LL;
  uint64_t v198 = 0LL;
  unint64_t v276 = 0LL;
  v252[0] = 0LL;
  v252[1] = 0LL;
  uint64_t v228 = 0LL;
  uint64_t v199 = type metadata accessor for TemplatingText(a4);
  uint64_t v200 = *(void *)(v199 - 8);
  unint64_t v201 = (*(void *)(v200 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v202 = (char *)&v110 - v201;
  uint64_t v203 = type metadata accessor for TemplatingSection(v6);
  uint64_t v204 = *(void *)(v203 - 8);
  unint64_t v205 = (*(void *)(v204 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v206 = (char *)&v110 - v205;
  unint64_t v207 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v208 = (char *)&v110 - v207;
  uint64_t v277 = (char *)&v110 - v207;
  unint64_t v209 = (*(void *)(*(void *)(sub_5150(&qword_D7948) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v210 = (uint64_t *)((char *)&v110 - v209);
  uint64_t v211 = type metadata accessor for TemplatingResult(v11);
  uint64_t v212 = *(void *)(v211 - 8);
  unint64_t v213 = (*(void *)(v212 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v12);
  uint64_t v214 = (char *)&v110 - v213;
  unint64_t v276 = (char *)&v110 - v213;
  uint64_t v215 = type metadata accessor for CATOption(v13);
  uint64_t v216 = *(void *)(v215 - 8);
  unint64_t v217 = (*(void *)(v216 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v14);
  uint64_t v218 = (char *)&v110 - v217;
  uint64_t v219 = sub_5150(&qword_D7300);
  unint64_t v220 = (*(void *)(*(void *)(v219 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v16 = __chkstk_darwin(v15);
  uint64_t v221 = (uint64_t *)((char *)&v110 - v220);
  unint64_t v222 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v16);
  size_t v223 = (uint64_t *)((char *)&v110 - v222);
  unint64_t v275 = (char *)&v110 - v222;
  uint64_t v224 = type metadata accessor for Logger(v18);
  uint64_t v225 = *(void *)(v224 - 8);
  unint64_t v226 = (*(void *)(v225 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v19);
  uint64_t v227 = (char *)&v110 - v226;
  unint64_t v229 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v20);
  uint64_t v230 = (uint64_t)&v110 - v229;
  uint64_t v234 = type metadata accessor for URL(v21);
  uint64_t v235 = *(void *)(v234 - 8);
  uint64_t v236 = *(void *)(v235 + 64);
  unint64_t v237 = (v236 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v23 = __chkstk_darwin(v22);
  uint64_t v238 = (char *)&v110 - v237;
  unint64_t v239 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v23);
  uint64_t v240 = (char *)&v110 - v239;
  uint64_t v274 = (char *)&v110 - v239;
  uint64_t v272 = v25;
  uint64_t v273 = v26;
  uint64_t v271 = v27;
  uint64_t v270 = v4;
  uint64_t v268 = v25;
  uint64_t v269 = v26;
  Swift::String v244 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
  unint64_t v243 = sub_B880();
  uint64_t v242 = &type metadata for String;
  uint64_t v241 = sub_3211C();
  char v28 = sub_32130();
  uint64_t v245 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)( v244._countAndFlagsBits,  v244._object,  v241,  v28 & 1,  v242,  v243);
  swift_bridgeObjectRelease(v244._object);
  uint64_t v267 = v245;
  if (Array.count.getter(v245, &type metadata for Substring) >= 2)
  {
    uint64_t v195 = &type metadata for Substring;
    Array.subscript.getter(v264, 0LL, v245);
    Builtin::Word v187 = v263;
    v263[0] = v264[0];
    v263[1] = v264[1];
    v263[2] = v264[2];
    v263[3] = v264[3];
    uint64_t v188 = 1LL;
    Swift::String v29 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
    uint64_t v186 = &v262;
    Swift::String v262 = v29;
    unint64_t v189 = sub_38B14();
    unint64_t v30 = sub_38B7C();
    static RangeReplaceableCollection.+ infix<A>(_:_:)( v265,  v187,  v186,  &type metadata for Substring,  &type metadata for String,  v189,  v30);
    uint64_t v31 = v195;
    sub_8DD8((uint64_t)v186);
    sub_38BE4((uint64_t)v187);
    uint64_t v191 = v261;
    v261[0] = v265[0];
    v261[1] = v265[1];
    v261[2] = v265[2];
    v261[3] = v265[3];
    Array.subscript.getter(v260, v188, v245);
    int v190 = v259;
    v259[0] = v260[0];
    v259[1] = v260[1];
    v259[2] = v260[2];
    v259[3] = v260[3];
    static RangeReplaceableCollection.+ infix<A>(_:_:)(v266, v191, v259, v31, v31, v189, v189);
    sub_38BE4((uint64_t)v190);
    sub_38BE4((uint64_t)v191);
    uint64_t v192 = v266[3];
    uint64_t v193 = String.init(_:)(v266[0], v266[1], v266[2]);
    uint64_t v194 = v32;
    swift_bridgeObjectRelease(v192);
    uint64_t v257 = v193;
    uint64_t v258 = v194;
    if (Array.count.getter(v245, v195) <= 2)
    {
      Swift::String v185 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
    }

    else
    {
      Array.subscript.getter(v246, 2LL, v245);
      uint64_t v183 = v246[3];
      v184._uint64_t countAndFlagsBits = String.init(_:)(v246[0], v246[1], v246[2]);
      v184._object = v33;
      swift_bridgeObjectRelease(v183);
      Swift::String v185 = v184;
    }

    uint64_t v34 = v198;
    object = v185._object;
    uint64_t countAndFlagsBits = v185._countAndFlagsBits;
    Swift::String v256 = v185;
    uint64_t v180 = *(void **)(v197 + 16);
    id v35 = v180;
    sub_97C54(v231, v180);
    uint64_t v181 = v34;
    uint64_t v182 = v34;
    if (v34)
    {
      uint64_t v110 = v182;
      uint64_t v111 = 0LL;

      swift_errorRelease(v110);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v235 + 56))(v230, 1LL, 1LL, v234);
      uint64_t v177 = v111;
    }

    else
    {

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v235 + 56))(v230, 0LL, 1LL, v234);
      uint64_t v177 = v181;
    }

    uint64_t v176 = v177;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v230, 1LL, v234) == 1)
    {
      sub_1BA84(v230);
      Swift::String v112 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
      swift_bridgeObjectRelease(object);
      swift_bridgeObjectRelease(v194);
      swift_bridgeObjectRelease(v245);
      return v112._countAndFlagsBits;
    }

    else
    {
      uint64_t v36 = v227;
      uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 32);
      v150(v240, v230, v234);
      uint64_t v37 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v225 + 16))(v36, v37, v224);
      swift_bridgeObjectRetain(v194);
      uint64_t v161 = 32LL;
      uint64_t v162 = 7LL;
      uint64_t v38 = swift_allocObject(&unk_CC290, 32LL, 7LL);
      uint64_t v39 = v194;
      uint64_t v40 = v240;
      uint64_t v41 = v235;
      uint64_t v42 = v234;
      uint64_t v43 = v38;
      uint64_t v44 = v238;
      uint64_t v156 = v43;
      *(void *)(v43 + swift_beginAccess(v0 + 16) = v193;
      *(void *)(v43 + 24) = v39;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v44, v40, v42);
      uint64_t v45 = *(unsigned __int8 *)(v235 + 80);
      uint64_t v149 = (v45 + 16) & ~v45;
      uint64_t v151 = swift_allocObject(&unk_CC2B8, v149 + v236, v162 | v45);
      v150((char *)(v151 + v149), (uint64_t)v238, v234);
      swift_retain();
      uint64_t v46 = swift_allocObject(&unk_CC2E0, v161, v162);
      uint64_t v47 = v151;
      uint64_t v163 = v46;
      *(void *)(v46 + swift_beginAccess(v0 + 16) = sub_38CB8;
      *(void *)(v46 + 24) = v47;
      uint64_t v48 = swift_release();
      Swift::String v174 = (os_log_s *)Logger.logObject.getter(v48);
      int v175 = static os_log_type_t.debug.getter();
      uint64_t v154 = &v254;
      uint64_t v254 = 22LL;
      unint64_t v152 = sub_7788();
      unint64_t v153 = sub_77F0();
      unint64_t v49 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v255, v154, &type metadata for UInt32, &type metadata for Int, v152, v153, v49);
      uint32_t v155 = v255;
      uint64_t v159 = 17LL;
      uint64_t v50 = swift_allocObject(&unk_CC308, 17LL, v162);
      uint64_t v51 = v159;
      uint64_t v52 = v162;
      uint64_t v165 = v50;
      int v158 = 32;
      *(_BYTE *)(v50 + swift_beginAccess(v0 + 16) = 32;
      uint64_t v53 = swift_allocObject(&unk_CC330, v51, v52);
      uint64_t v54 = v161;
      uint64_t v55 = v162;
      uint64_t v166 = v53;
      int v160 = 8;
      *(_BYTE *)(v53 + swift_beginAccess(v0 + 16) = 8;
      uint64_t v56 = swift_allocObject(&unk_CC358, v54, v55);
      uint64_t v57 = v161;
      uint64_t v58 = v162;
      uint64_t v59 = v56;
      uint64_t v60 = v156;
      uint64_t v157 = v59;
      *(void *)(v59 + swift_beginAccess(v0 + 16) = sub_1B890;
      *(void *)(v59 + 24) = v60;
      uint64_t v61 = swift_allocObject(&unk_CC380, v57, v58);
      uint64_t v62 = v159;
      uint64_t v63 = v162;
      uint64_t v64 = v61;
      uint64_t v65 = v157;
      uint64_t v167 = v64;
      *(void *)(v64 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v64 + 24) = v65;
      uint64_t v66 = swift_allocObject(&unk_CC3A8, v62, v63);
      uint64_t v67 = v159;
      uint64_t v68 = v162;
      uint64_t v168 = v66;
      *(_BYTE *)(v66 + swift_beginAccess(v0 + 16) = v158;
      uint64_t v69 = swift_allocObject(&unk_CC3D0, v67, v68);
      uint64_t v70 = v161;
      uint64_t v71 = v162;
      uint64_t v169 = v69;
      *(_BYTE *)(v69 + swift_beginAccess(v0 + 16) = v160;
      uint64_t v72 = swift_allocObject(&unk_CC3F8, v70, v71);
      uint64_t v73 = v161;
      uint64_t v74 = v162;
      uint64_t v75 = v72;
      uint64_t v76 = v163;
      uint64_t v164 = v75;
      *(void *)(v75 + swift_beginAccess(v0 + 16) = sub_38D34;
      *(void *)(v75 + 24) = v76;
      uint64_t v77 = swift_allocObject(&unk_CC420, v73, v74);
      uint64_t v78 = v164;
      uint64_t v171 = v77;
      *(void *)(v77 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v77 + 24) = v78;
      uint64_t v173 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v170 = _allocateUninitializedArray<A>(_:)(6LL, v173);
      uint64_t v172 = v79;
      swift_retain();
      uint64_t v80 = v165;
      uint64_t v81 = v172;
      *uint64_t v172 = sub_884C;
      v81[1] = v80;
      swift_retain();
      uint64_t v82 = v166;
      uint64_t v83 = v172;
      v172[2] = sub_884C;
      v83[3] = v82;
      swift_retain();
      uint64_t v84 = v167;
      uint64_t v85 = v172;
      void v172[4] = sub_8900;
      v85[5] = v84;
      swift_retain();
      uint64_t v86 = v168;
      uint64_t v87 = v172;
      v172[6] = sub_884C;
      v87[7] = v86;
      swift_retain();
      uint64_t v88 = v169;
      uint64_t v89 = v172;
      v172[8] = sub_884C;
      v89[9] = v88;
      swift_retain();
      uint64_t v90 = v170;
      uint64_t v91 = v171;
      uint64_t v92 = v172;
      v172[10] = sub_8900;
      v92[11] = v91;
      sub_6648();
      swift_bridgeObjectRelease(v90);
      if (os_log_type_enabled(v174, (os_log_type_t)v175))
      {
        uint64_t v93 = v176;
        uint64_t v141 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
        uint64_t v140 = sub_5150(&qword_D6B60);
        uint64_t v142 = sub_74D0(0LL, v140, v140);
        uint64_t v143 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v145 = v251;
        v251[0] = v141;
        uint64_t v146 = &v250;
        uint64_t v250 = v142;
        uint64_t v147 = &v249;
        uint64_t v249 = v143;
        unsigned int v144 = 2;
        sub_7528(2LL, v251);
        sub_7528(v144, v145);
        uint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v248 = v165;
        sub_753C(&v247, (uint64_t)v145, (uint64_t)v146, (uint64_t)v147);
        uint64_t v148 = v93;
        if (v93)
        {
          __break(1u);
        }

        else
        {
          uint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v248 = v166;
          sub_753C(&v247, (uint64_t)v251, (uint64_t)&v250, (uint64_t)&v249);
          uint64_t v138 = 0LL;
          uint64_t v95 = v138;
          uint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v248 = v167;
          sub_753C(&v247, (uint64_t)v251, (uint64_t)&v250, (uint64_t)&v249);
          uint64_t v137 = v95;
          uint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v248 = v168;
          sub_753C(&v247, (uint64_t)v251, (uint64_t)&v250, (uint64_t)&v249);
          uint64_t v136 = 0LL;
          uint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v248 = v169;
          sub_753C(&v247, (uint64_t)v251, (uint64_t)&v250, (uint64_t)&v249);
          uint64_t v135 = 0LL;
          uint64_t v247 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v248 = v171;
          sub_753C(&v247, (uint64_t)v251, (uint64_t)&v250, (uint64_t)&v249);
          uint64_t v134 = 0LL;
          _os_log_impl( &dword_0,  v174,  (os_log_type_t)v175,  "Loading label for CAT ID %s from template directory %s",  v141,  v155);
          sub_7580(v142, 0LL);
          sub_7580(v143, 2LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v139 = v134;
        }
      }

      else
      {
        uint64_t v94 = v176;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v139 = v94;
      }

      uint64_t v130 = v139;

      (*(void (**)(char *, uint64_t))(v225 + 8))(v227, v224);
      uint64_t v131 = 0LL;
      type metadata accessor for CATExecutor(0LL);
      uint64_t v96 = sub_5150(&qword_D7370);
      uint64_t v97 = _allocateUninitializedArray<A>(_:)(v131, v96);
      uint64_t v133 = Dictionary.init(dictionaryLiteral:)( v97,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      unint64_t v132 = v253;
      memset(v253, 0, sizeof(v253));
      (*(void (**)(char *, uint64_t, uint64_t))(v216 + 16))( v218,  v197 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options,  v215);
      static CATExecutor.execute(templateDir:catId:parameters:globals:callback:options:)( v240,  v193,  v194,  v133,  v231,  v132,  v218);
      (*(void (**)(char *, uint64_t))(v216 + 8))(v218, v215);
      sub_1D580(v132);
      swift_bridgeObjectRelease(v133);
      sub_18998(v223, v221);
      if (swift_getEnumCaseMultiPayload(v221, v219) == 1)
      {
        uint64_t v113 = *v221;
        Swift::String v114 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        swift_errorRelease(v113);
        sub_18A50(v223);
        (*(void (**)(char *, uint64_t))(v235 + 8))(v240, v234);
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v194);
        swift_bridgeObjectRelease(v245);
        return v114._countAndFlagsBits;
      }

      else
      {
        uint64_t v98 = v214;
        uint64_t v99 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v212 + 32))(v214, v221, v211);
        unint64_t v276 = v98;
        v251[1] = (_BYTE *)TemplatingResult.sections.getter(v99);
        uint64_t v128 = sub_5150(&qword_D7930);
        unint64_t v100 = sub_38028();
        Collection<>.makeIterator()(v252, v128, v100);
        for (uint64_t i = v130; ; uint64_t i = v127)
        {
          uint64_t v127 = i;
          uint64_t v101 = sub_5150(&qword_D7968);
          IndexingIterator.next()(v210, v101);
          (*(void (**)(char *, void *, uint64_t))(v204 + 32))(v208, v210, v203);
          unsigned int v126 = String.isEmpty.getter(countAndFlagsBits, object);
          (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v206, v208, v203);
          swift_bridgeObjectRetain(object);
          if ((v126 & 1) != 0)
          {
            int v125 = 1;
          }

          else
          {
            uint64_t v121 = TemplatingSection.id.getter(v126);
            uint64_t v123 = v102;
            Swift::String v103 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
            uint64_t v119 = v103._object;
            uint64_t v120 = static String.+ infix(_:_:)(v103._countAndFlagsBits, v103._object, countAndFlagsBits);
            unint64_t v122 = v104;
            swift_bridgeObjectRelease(v119);
            v105._uint64_t countAndFlagsBits = v120;
            v105._object = v122;
            BOOL v124 = String.hasSuffix(_:)(v105);
            swift_bridgeObjectRelease(v122);
            swift_bridgeObjectRelease(v123);
            int v125 = v124;
          }

          int v118 = v125;
          unint64_t v117 = *(void (**)(char *, uint64_t))(v204 + 8);
          v117(v206, v203);
          uint64_t v106 = swift_bridgeObjectRelease(object);
          if ((v118 & 1) != 0)
          {
            uint64_t v107 = TemplatingSection.content.getter(v106);
            *(void *)&__int128 v116 = TemplatingText.text.getter(v107);
            *((void *)&v116 + 1) = v108;
            (*(void (**)(char *, uint64_t))(v200 + 8))(v202, v199);
            v117(v208, v203);
            sub_1B82C(v252);
            (*(void (**)(char *, uint64_t))(v212 + 8))(v214, v211);
            sub_18A50(v223);
            (*(void (**)(char *, uint64_t))(v235 + 8))(v240, v234);
            swift_bridgeObjectRelease(object);
            swift_bridgeObjectRelease(v194);
            swift_bridgeObjectRelease(v245);
            return v116;
          }

          v117(v208, v203);
        }

        sub_1B82C(v252);
        Swift::String v115 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        (*(void (**)(char *, uint64_t))(v212 + 8))(v214, v211);
        sub_18A50(v223);
        (*(void (**)(char *, uint64_t))(v235 + 8))(v240, v234);
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v194);
        swift_bridgeObjectRelease(v245);
        return v115._countAndFlagsBits;
      }
    }
  }

  else
  {
    swift_bridgeObjectRetain(v232);
    swift_bridgeObjectRelease(v245);
    *(void *)&__int128 v196 = v233;
    *((void *)&v196 + 1) = v232;
  }

  return v196;
}

uint64_t sub_3211C()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t sub_32130()
{
  return 1LL;
}

uint64_t sub_32148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = type metadata accessor for URL(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a2, a1);
}

uint64_t sub_32188( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  v9[24] = v8;
  v9[23] = a7;
  v9[22] = a6;
  v9[21] = a5;
  v9[20] = a4;
  v9[19] = a3;
  v9[18] = a2;
  v9[17] = a1;
  v9[7] = v9;
  v9[8] = 0LL;
  v9[9] = 0LL;
  v9[10] = 0LL;
  v9[11] = 0LL;
  v9[12] = 0LL;
  v9[13] = 0LL;
  v9[14] = 0LL;
  v9[16] = 0LL;
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(a8);
  v9[25] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[26] = v11;
  v9[27] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  v9[28] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v9[29] = v13;
  v9[30] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v9[8] = a2;
  v9[9] = a3;
  v9[10] = a4;
  v9[11] = a5;
  v9[12] = a6;
  v9[13] = a7;
  v9[14] = v8;
  return swift_task_switch(sub_32314, 0LL);
}

uint64_t sub_32314()
{
  uint64_t v1 = v0[30];
  uint64_t v17 = v0[29];
  uint64_t v18 = v0[28];
  __src = (void *)v0[18];
  v0[7] = v0;
  uint64_t v2 = sub_AD514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v1, v2, v18);
  sub_1B508(__src);
  uint64_t v23 = swift_allocObject(&unk_CC448, 80LL, 7LL);
  double v3 = memcpy((void *)(v23 + 16), __src, 0x40uLL);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  v0[15] = 12LL;
  unint64_t v20 = sub_7788();
  unint64_t v21 = sub_77F0();
  unint64_t v4 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 36, v0 + 15, &type metadata for UInt32, &type metadata for Int, v20, v21, v4);
  uint32_t v22 = *((_DWORD *)v0 + 72);
  uint64_t v25 = swift_allocObject(&unk_CC470, 17LL, 7LL);
  *(_BYTE *)(v25 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v26 = swift_allocObject(&unk_CC498, 17LL, 7LL);
  *(_BYTE *)(v26 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v24 = swift_allocObject(&unk_CC4C0, 32LL, 7LL);
  *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_3824C;
  *(void *)(v24 + 24) = v23;
  uint64_t v28 = swift_allocObject(&unk_CC4E8, 32LL, 7LL);
  *(void *)(v28 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v28 + 24) = v24;
  uint64_t v30 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v27 = _allocateUninitializedArray<A>(_:)(3LL, v30);
  Swift::String v29 = v5;
  swift_retain();
  *Swift::String v29 = sub_884C;
  v29[1] = v25;
  swift_retain();
  v29[2] = sub_884C;
  v29[3] = v26;
  swift_retain();
  v29[4] = sub_8900;
  v29[5] = v28;
  sub_6648();
  swift_bridgeObjectRelease(v27);
  if (os_log_type_enabled(v31, v32))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v12 = sub_5150(&qword_D6B60);
    uint64_t v14 = sub_74D0(0LL, v12, v12);
    uint64_t v15 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    unint64_t v33 = buf;
    uint64_t v34 = v14;
    uint64_t v35 = v15;
    sub_7528(2LL, &v33);
    sub_7528(1LL, &v33);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v25;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v26;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v37 = v28;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    _os_log_impl(&dword_0, v31, v32, "executeAsPattern %s", buf, v22);
    sub_7580(v14, 0LL);
    sub_7580(v15, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v9 = v16[30];
  uint64_t v8 = v16[29];
  uint64_t v10 = v16[28];

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  char v11 = variable initialization expression of PlayWithMeData.initialized();
  uint64_t v6 = (void *)swift_task_alloc(dword_D797C);
  v16[31] = v6;
  void *v6 = v16[7];
  v6[1] = sub_329B4;
  return sub_32E48(v16[18], v16[19], v16[20], v16[21], v11 & 1);
}

void *sub_329B4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 248);
  *(void *)(v4 + 56) = *v2;
  uint64_t v8 = v4 + 16;
  uint64_t v9 = (void *)(v4 + 56);
  *(void *)(v4 + 256) = a1;
  swift_task_dealloc(v5);
  if (!v1) {
    return (void *)swift_task_switch(sub_32AF0, 0LL);
  }
  uint64_t v7 = *(void *)(v8 + 200);
  swift_task_dealloc(*(void *)(v8 + 224));
  swift_task_dealloc(v7);
  return (*(void *(**)(void *__return_ptr))(*v9 + 8LL))(v9);
}

uint64_t sub_32AF0()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[22];
  v0[7] = v0;
  v0[16] = v1;
  sub_36BE0(v1, v4, v3, v2);
  type metadata accessor for ResponseFactory(0LL);
  v0[33] = ResponseFactory.__allocating_init()();
  v7[34] = v5;
  *uint64_t v5 = v7[7];
  v5[1] = sub_32BD8;
  return ((uint64_t (*)(void *, void, void))v8)(v7 + 2, v7[32], v7[27]);
}

uint64_t sub_32BD8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 272);
  *(void *)(v2 + 56) = *v1;
  *(void *)(v2 + 2swift_beginAccess(v0 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_32D58, 0LL);
  }
  swift_release();
  return swift_task_switch(sub_32C90, 0LL);
}

uint64_t sub_32C90()
{
  id v5 = (id)v0[32];
  uint64_t v6 = v0[30];
  uint64_t v7 = v0[27];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[25];
  uint64_t v1 = v0[17];
  v0[7] = v0;
  sub_454C((uint64_t)(v0 + 2), v1);
  sub_4598(v0 + 2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v4);

  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0[7] + 8LL))();
}

uint64_t sub_32D58()
{
  uint64_t v1 = v0[33];
  id v6 = (id)v0[32];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[26];
  uint64_t v5 = v0[25];
  v0[7] = v0;
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);

  uint64_t v7 = v0[27];
  swift_task_dealloc(v0[30]);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0[7] + 8LL))();
}

uint64_t sub_32E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 400) = v5;
  *(_BYTE *)(v6 + 641) = a5 & 1;
  *(void *)(v6 + 39sub_4598(v0 + 2) = a4;
  *(void *)(v6 + 384) = a3;
  *(void *)(v6 + 376) = a2;
  *(void *)(v6 + 36sub_1D580(v0 + 8) = a1;
  *(void *)(v6 + 16sub_1D580(v0 + 8) = v6;
  *(void *)(v6 + 176) = 0LL;
  *(void *)(v6 + 184) = 0LL;
  *(void *)(v6 + 19sub_4598(v0 + 2) = 0LL;
  *(void *)(v6 + 200) = 0LL;
  *(_BYTE *)(v6 + 640) = 0;
  *(void *)(v6 + 20sub_1D580(v0 + 8) = 0LL;
  *(void *)(v6 + 27sub_4598(v0 + 2) = 0LL;
  *(void *)(v6 + 2swift_beginAccess(v0 + 80) = 0LL;
  uint64_t v7 = sub_5150(&qword_D7308);
  *(void *)(v6 + 40sub_1D580(v0 + 8) = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ActivityType(v8);
  *(void *)(v6 + 4swift_beginAccess(v0 + 16) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v6 + 424) = v10;
  *(void *)(v6 + 43sub_4598(v0 + 2) = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for CATOption(0LL);
  *(void *)(v6 + 440) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v6 + 44sub_1D580(v0 + 8) = v12;
  *(void *)(v6 + 456) = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_5150(&qword_D7378);
  *(void *)(v6 + 464) = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for URL(0LL);
  *(void *)(v6 + 47sub_4598(v0 + 2) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v6 + 4swift_beginAccess(v0 + 80) = v15;
  *(void *)(v6 + 48sub_1D580(v0 + 8) = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Logger(0LL);
  *(void *)(v6 + 496) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v6 + 504) = v17;
  uint64_t v19 = *(void *)(v17 + 64);
  *(void *)(v6 + 5sub_1B82C(v0 + 12) = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v6 + 520) = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v6 + 52sub_1D580(v0 + 8) = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v6 + 536) = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v6 + 544) = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v6 + 176) = a1;
  *(void *)(v6 + 184) = a2;
  *(void *)(v6 + 19sub_4598(v0 + 2) = a3;
  *(void *)(v6 + 200) = a4;
  *(_BYTE *)(v6 + 640) = a5 & 1;
  *(void *)(v6 + 20sub_1D580(v0 + 8) = v5;
  return swift_task_switch(sub_330E4, 0LL);
}

uint64_t sub_330E4()
{
  uint64_t v1 = v0[68];
  uint64_t v116 = v0[63];
  uint64_t v117 = v0[62];
  uint64_t v119 = (void *)v0[46];
  v0[21] = v0;
  uint64_t v2 = sub_AD514();
  int v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16);
  v0[69] = v118;
  v118(v1, v2, v117);
  sub_1B508(v119);
  uint64_t v124 = swift_allocObject(&unk_CC510, 80LL, 7LL);
  uint64_t v3 = memcpy((void *)(v124 + 16), v119, 0x40uLL);
  unint64_t v132 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v133 = static os_log_type_t.debug.getter();
  v0[27] = 12LL;
  unint64_t v120 = sub_7788();
  v0[70] = v120;
  unint64_t v121 = sub_77F0();
  v0[71] = v121;
  unint64_t v122 = sub_7858();
  v0[72] = v122;
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v0 + 644),  v0 + 27,  &type metadata for UInt32,  &type metadata for Int,  v120,  v121,  v122);
  uint32_t v123 = *((_DWORD *)v0 + 161);
  uint64_t v126 = swift_allocObject(&unk_CC538, 17LL, 7LL);
  *(_BYTE *)(v126 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v127 = swift_allocObject(&unk_CC560, 17LL, 7LL);
  *(_BYTE *)(v127 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v125 = swift_allocObject(&unk_CC588, 32LL, 7LL);
  *(void *)(v125 + swift_beginAccess(v0 + 16) = sub_3824C;
  *(void *)(v125 + 24) = v124;
  uint64_t v129 = swift_allocObject(&unk_CC5B0, 32LL, 7LL);
  *(void *)(v129 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v129 + 24) = v125;
  uint64_t v131 = sub_5150((uint64_t *)&unk_D6B50);
  v0[73] = v131;
  uint64_t v128 = _allocateUninitializedArray<A>(_:)(3LL, v131);
  uint64_t v130 = v4;
  swift_retain();
  *uint64_t v130 = sub_884C;
  v130[1] = v126;
  swift_retain();
  v130[2] = sub_884C;
  v130[3] = v127;
  swift_retain();
  v130[4] = sub_8900;
  v130[5] = v129;
  sub_6648();
  swift_bridgeObjectRelease(v128);
  if (os_log_type_enabled(v132, v133))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v111 = sub_5150(&qword_D6B60);
    uint64_t v113 = sub_74D0(0LL, v111, v111);
    uint64_t v114 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v134 = buf;
    uint64_t v135 = v113;
    uint64_t v136 = v114;
    sub_7528(2LL, &v134);
    sub_7528(1LL, &v134);
    uint64_t v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v138 = v126;
    sub_753C(&v137, (uint64_t)&v134, (uint64_t)&v135, (uint64_t)&v136);
    uint64_t v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v138 = v127;
    sub_753C(&v137, (uint64_t)&v134, (uint64_t)&v135, (uint64_t)&v136);
    uint64_t v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v138 = v129;
    sub_753C(&v137, (uint64_t)&v134, (uint64_t)&v135, (uint64_t)&v136);
    _os_log_impl(&dword_0, v132, v133, "Executing %s as pattern", buf, v123);
    sub_7580(v113, 0LL);
    sub_7580(v114, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v104 = *(void *)(v115 + 544);
  uint64_t v5 = *(void *)(v115 + 536);
  uint64_t v103 = *(void *)(v115 + 504);
  uint64_t v106 = *(void *)(v115 + 496);

  Swift::String v105 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  *(void *)(v115 + 59sub_4598(v0 + 2) = v105;
  v105(v104, v106);
  uint64_t v6 = sub_AD514();
  uint64_t v7 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v118)(v5, v6, v106);
  oslog = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v108 = static os_log_type_t.debug.getter();
  *(void *)(v115 + 224) = 2LL;
  UnsignedInteger<>.init<A>(_:)( (void *)(v115 + 648),  v115 + 224,  &type metadata for UInt32,  &type metadata for Int,  v120,  v121,  v122);
  uint32_t size = *(_DWORD *)(v115 + 648);
  uint64_t v110 = _allocateUninitializedArray<A>(_:)(0LL, v131);
  if (os_log_type_enabled(oslog, v108))
  {
    uint64_t v98 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v97 = sub_5150(&qword_D6B60);
    uint64_t v99 = sub_74D0(0LL, v97, v97);
    uint64_t v100 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    *(void *)(v115 + 336) = v98;
    *(void *)(v115 + 344) = v99;
    *(void *)(v115 + 35sub_4598(v0 + 2) = v100;
    sub_7528(0LL, (_BYTE **)(v115 + 336));
    sub_7528(0LL, (_BYTE **)(v115 + 336));
    *(void *)(v115 + 360) = v110;
    uint64_t v101 = (void *)swift_task_alloc(48LL);
    v101[2] = v115 + 336;
    v101[3] = v115 + 344;
    v101[4] = v115 + 352;
    uint64_t v102 = sub_5150(&qword_D6B78);
    unint64_t v8 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v101, v102, v8);
    swift_task_dealloc(v101);
    _os_log_impl( &dword_0,  oslog,  v108,  "Will execute pattern. If execution stops here, ssh into the device and run: ffctl DialogEngine/VisualCAT=on && ffc tl SiriUI/SnippetUI=on && reboot",  v98,  size);
    sub_7580(v99, 0LL);
    sub_7580(v100, 0LL);
    UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease(v110);
  uint64_t v92 = *(void *)(v115 + 536);
  uint64_t v93 = *(void *)(v115 + 496);
  uint64_t v94 = *(void *)(v115 + 400);
  uint64_t v96 = *(void **)(v115 + 384);

  v105(v92, v93);
  id v95 = *(id *)(v94 + 16);
  id v9 = v95;
  sub_97C54(v96, v95);
  uint64_t v89 = *(void *)(v115 + 480);
  uint64_t v91 = *(void *)(v115 + 472);
  uint64_t v90 = *(void *)(v115 + 464);

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0LL, 1LL, v91);
  if ((*(unsigned int (**)(void, uint64_t, void))(*(void *)(v115 + 480) + 48LL))( *(void *)(v115 + 464),  1LL,  *(void *)(v115 + 472)) == 1)
  {
    uint64_t v23 = *(void *)(v115 + 512);
    uint64_t v44 = *(void *)(v115 + 496);
    sub_1BA84(*(void *)(v115 + 464));
    uint64_t v24 = sub_AD514();
    uint64_t v25 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v118)(v23, v24, v44);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v46 = static os_log_type_t.error.getter();
    *(void *)(v115 + 23sub_4598(v0 + 2) = 2LL;
    UnsignedInteger<>.init<A>(_:)( (void *)(v115 + 652),  v115 + 232,  &type metadata for UInt32,  &type metadata for Int,  v120,  v121,  v122);
    uint32_t v45 = *(_DWORD *)(v115 + 652);
    uint64_t v48 = _allocateUninitializedArray<A>(_:)(0LL, v131);
    if (os_log_type_enabled(v47, v46))
    {
      uint64_t v39 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v38 = sub_5150(&qword_D6B60);
      uint64_t v40 = sub_74D0(0LL, v38, v38);
      uint64_t v41 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(void *)(v115 + 240) = v39;
      *(void *)(v115 + 24sub_1D580(v0 + 8) = v40;
      *(void *)(v115 + 256) = v41;
      sub_7528(0LL, (_BYTE **)(v115 + 240));
      sub_7528(0LL, (_BYTE **)(v115 + 240));
      *(void *)(v115 + 264) = v48;
      uint64_t v42 = (void *)swift_task_alloc(48LL);
      v42[2] = v115 + 240;
      v42[3] = v115 + 248;
      v42[4] = v115 + 256;
      uint64_t v43 = sub_5150(&qword_D6B78);
      unint64_t v26 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v42, v43, v26);
      swift_task_dealloc(v42);
      _os_log_impl(&dword_0, v47, v46, "Could not find template directory when executing pattern", v39, v45);
      sub_7580(v40, 0LL);
      sub_7580(v41, 0LL);
      UnsafeMutablePointer.deallocate()();
    }

    swift_bridgeObjectRelease(v48);
    uint64_t v36 = *(void *)(v115 + 512);
    uint64_t v37 = *(void *)(v115 + 496);

    v105(v36, v37);
    sub_391B4();
    id v70 = sub_EB60();
  }

  else
  {
    uint64_t v87 = *(uint64_t **)(v115 + 368);
    (*(void (**)(void, void, void))(*(void *)(v115 + 480) + 32LL))( *(void *)(v115 + 488),  *(void *)(v115 + 464),  *(void *)(v115 + 472));
    uint64_t v85 = *v87;
    uint64_t v86 = v87[1];
    swift_bridgeObjectRetain(v86);
    char v88 = String.isEmpty.getter(v85, v86);
    swift_bridgeObjectRelease(v86);
    sub_1B508(v87);
    if ((v88 & 1) != 0)
    {
      sub_1B21C(*(void **)(v115 + 368));
    }

    else
    {
      uint64_t v10 = *(void *)(v115 + 368);
      uint64_t v82 = *(void *)(v10 + 16);
      uint64_t v83 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain(v83);
      char v84 = String.isEmpty.getter(v82, v83);
      swift_bridgeObjectRelease(v83);
      sub_1B21C(*(void **)(v115 + 368));
      if ((v84 & 1) == 0)
      {
        uint64_t v61 = *(void *)(v115 + 456);
        uint64_t v59 = *(void *)(v115 + 448);
        uint64_t v60 = *(void *)(v115 + 440);
        uint64_t v58 = *(void *)(v115 + 400);
        uint64_t v49 = *(void *)(v115 + 392);
        id v50 = *(id *)(v115 + 384);
        uint64_t v51 = *(void **)(v115 + 368);
        uint64_t v56 = type metadata accessor for ParameterService(0LL);
        swift_retain();
        sub_1B508(v51);
        id v15 = v50;
        sub_454C(v49, v115 + 16);
        uint64_t v57 = sub_671EC(v58, v51, v50, (void *)(v115 + 16));
        *(void *)(v115 + 600) = v57;
        *(void *)(v115 + 27sub_4598(v0 + 2) = v57;
        type metadata accessor for CATResponse(0LL);
        *(void *)(v115 + 136) = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)(0LL, 1LL);
        *(void *)(v115 + 144) = v16;
        Swift::String v17 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        object = v17._object;
        DefaultStringInterpolation.appendLiteral(_:)(v17);
        swift_bridgeObjectRelease(object);
        *(void *)(v115 + 15sub_4598(v0 + 2) = sub_2B68C();
        *(void *)(v115 + swift_beginAccess(v0 + 160) = v18;
        DefaultStringInterpolation.appendInterpolation<A>(_:)();
        sub_8DD8(v115 + 152);
        Swift::String v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        uint64_t v53 = v19._object;
        DefaultStringInterpolation.appendLiteral(_:)(v19);
        swift_bridgeObjectRelease(v53);
        uint64_t v55 = *(void *)(v115 + 136);
        uint64_t v54 = *(void *)(v115 + 144);
        swift_bridgeObjectRetain(v54);
        sub_8DD8(v115 + 136);
        uint64_t v62 = String.init(stringInterpolation:)(v55, v54);
        uint64_t v63 = v20;
        *(void *)(v115 + 60sub_1D580(v0 + 8) = v20;
        swift_retain();
        *(void *)(v115 + swift_beginAccess(v0 + 80) = v56;
        *(void *)(v115 + 8sub_1D580(v0 + 8) = sub_37DFC();
        *(void *)(v115 + 56) = v57;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))( v61,  v58 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options,  v60);
        unint64_t v21 = (void *)swift_task_alloc(async function pointer to static CATResponse.executePattern(templateDir:patternId:parameters:globals:callback:options:)[1]);
        *(void *)(v115 + 6swift_beginAccess(v0 + 16) = v21;
        *unint64_t v21 = *(void *)(v115 + 168);
        v21[1] = sub_3479C;
        return static CATResponse.executePattern(templateDir:patternId:parameters:globals:callback:options:)( *(void *)(v115 + 488),  v62,  v63,  *(void *)(v115 + 376),  *(void *)(v115 + 384),  v115 + 56,  *(void *)(v115 + 456));
      }
    }

    uint64_t v11 = *(void *)(v115 + 528);
    uint64_t v77 = *(void *)(v115 + 496);
    uint64_t v12 = sub_AD514();
    uint64_t v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v118)(v11, v12, v77);
    log = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v79 = static os_log_type_t.error.getter();
    *(void *)(v115 + 296) = 2LL;
    UnsignedInteger<>.init<A>(_:)( (void *)(v115 + 660),  v115 + 296,  &type metadata for UInt32,  &type metadata for Int,  v120,  v121,  v122);
    uint32_t v78 = *(_DWORD *)(v115 + 660);
    uint64_t v81 = _allocateUninitializedArray<A>(_:)(0LL, v131);
    if (os_log_type_enabled(log, v79))
    {
      uint64_t v72 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v71 = sub_5150(&qword_D6B60);
      uint64_t v73 = sub_74D0(0LL, v71, v71);
      uint64_t v74 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(void *)(v115 + 304) = v72;
      *(void *)(v115 + 3sub_1B82C(v0 + 12) = v73;
      *(void *)(v115 + 320) = v74;
      sub_7528(0LL, (_BYTE **)(v115 + 304));
      sub_7528(0LL, (_BYTE **)(v115 + 304));
      *(void *)(v115 + 32sub_1D580(v0 + 8) = v81;
      uint64_t v75 = (void *)swift_task_alloc(48LL);
      v75[2] = v115 + 304;
      v75[3] = v115 + 312;
      v75[4] = v115 + 320;
      uint64_t v76 = sub_5150(&qword_D6B78);
      unint64_t v14 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v75, v76, v14);
      swift_task_dealloc(v75);
      _os_log_impl(&dword_0, log, v79, "Empty CAT id when executing pattern", v72, v78);
      sub_7580(v73, 0LL);
      sub_7580(v74, 0LL);
      UnsafeMutablePointer.deallocate()();
    }

    swift_bridgeObjectRelease(v81);
    uint64_t v64 = *(void *)(v115 + 528);
    uint64_t v65 = *(void *)(v115 + 496);
    uint64_t v68 = *(void *)(v115 + 488);
    uint64_t v66 = *(void *)(v115 + 480);
    uint64_t v67 = *(void *)(v115 + 472);

    v105(v64, v65);
    sub_391B4();
    id v69 = sub_EB60();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v68, v67);
    id v70 = v69;
  }

  uint64_t v27 = *(void *)(v115 + 536);
  uint64_t v28 = *(void *)(v115 + 528);
  uint64_t v29 = *(void *)(v115 + 520);
  uint64_t v30 = *(void *)(v115 + 512);
  uint64_t v31 = *(void *)(v115 + 488);
  uint64_t v32 = *(void *)(v115 + 464);
  uint64_t v33 = *(void *)(v115 + 456);
  uint64_t v34 = *(void *)(v115 + 432);
  uint64_t v35 = *(void *)(v115 + 408);
  swift_task_dealloc(*(void *)(v115 + 544));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(id))(*(void *)(v115 + 168) + 8LL))(v70);
}

uint64_t sub_3479C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 616LL);
  v4[21] = *(void *)v2;
  v4 += 21;
  unint64_t v8 = v4 - 19;
  id v9 = v4 - 14;
  v4[57] = a1;
  v4[58] = v1;
  swift_task_dealloc(v5);
  if (v1) {
    return swift_task_switch(sub_351B4, 0LL);
  }
  uint64_t v7 = v8[74];
  (*(void (**)(void, void))(v8[54] + 8LL))(v8[55], v8[53]);
  sub_1D580(v9);
  swift_bridgeObjectRelease(v7);
  return swift_task_switch(sub_34888, 0LL);
}

uint64_t sub_34888()
{
  uint64_t v1 = *(void *)(v0 + 624);
  char v2 = *(_BYTE *)(v0 + 641);
  *(void *)(v0 + 16sub_1D580(v0 + 8) = v0;
  *(void *)(v0 + 2swift_beginAccess(v0 + 80) = v1;
  if ((v2 & 1) != 0) {
    goto LABEL_8;
  }
  uint64_t v55 = v58[73];
  uint64_t v47 = v58[72];
  uint64_t v46 = v58[71];
  uint64_t v45 = v58[70];
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v58[69];
  uint64_t v3 = v58[65];
  uint64_t v43 = v58[62];
  uint64_t v4 = sub_AD514();
  uint64_t v5 = v44(v3, v4, v43);
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  v58[36] = 12LL;
  UnsignedInteger<>.init<A>(_:)(v58 + 82, v58 + 36, &type metadata for UInt32, &type metadata for Int, v45, v46, v47);
  uint32_t v48 = *((_DWORD *)v58 + 164);
  uint64_t v50 = swift_allocObject(&unk_CC5D8, 17LL, 7LL);
  *(_BYTE *)(v50 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v51 = swift_allocObject(&unk_CC600, 17LL, 7LL);
  *(_BYTE *)(v51 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v49 = swift_allocObject(&unk_CC628, 32LL, 7LL);
  *(void *)(v49 + swift_beginAccess(v0 + 16) = sub_629C;
  *(void *)(v49 + 24) = 0LL;
  uint64_t v53 = swift_allocObject(&unk_CC650, 32LL, 7LL);
  *(void *)(v53 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v53 + 24) = v49;
  uint64_t v52 = _allocateUninitializedArray<A>(_:)(3LL, v55);
  uint64_t v54 = v6;
  swift_retain();
  void *v54 = sub_884C;
  v54[1] = v50;
  swift_retain();
  v54[2] = sub_884C;
  v54[3] = v51;
  swift_retain();
  v54[4] = sub_8900;
  v54[5] = v53;
  sub_6648();
  swift_bridgeObjectRelease(v52);
  if (!os_log_type_enabled(v56, v57))
  {
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_7;
  }

  uint64_t v7 = v58[79];
  buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
  uint64_t v39 = sub_5150(&qword_D6B60);
  uint64_t v41 = sub_74D0(0LL, v39, v39);
  uint64_t v42 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
  uint64_t v59 = buf;
  uint64_t v60 = v41;
  uint64_t v61 = v42;
  sub_7528(2LL, &v59);
  sub_7528(1LL, &v59);
  uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
  uint64_t v63 = v50;
  uint64_t result = sub_753C(&v62, (uint64_t)&v59, (uint64_t)&v60, (uint64_t)&v61);
  if (!v7)
  {
    uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v63 = v51;
    sub_753C(&v62, (uint64_t)&v59, (uint64_t)&v60, (uint64_t)&v61);
    uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v63 = v53;
    sub_753C(&v62, (uint64_t)&v59, (uint64_t)&v60, (uint64_t)&v61);
    _os_log_impl(&dword_0, v56, v57, "SiriKitEvent .completed for %s", buf, v48);
    sub_7580(v41, 0LL);
    sub_7580(v42, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
LABEL_7:
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))v58[74];
    uint64_t v25 = v58[65];
    uint64_t v26 = v58[62];
    uint64_t v31 = v58[54];
    uint64_t v28 = v58[53];
    uint64_t v29 = v58[52];
    uint64_t v34 = v58[51];
    __src = (void *)v58[46];

    uint64_t v9 = v27(v25, v26);
    static SiriKitEventSender.current.getter(v9);
    uint64_t v36 = v58[15];
    uint64_t v37 = v58[16];
    sub_8C74(v58 + 12, v36);
    type metadata accessor for SiriKitEvent();
    (*(void (**)(uint64_t, void, uint64_t))(v28 + 104))(v31, enum case for ActivityType.completed(_:), v29);
    uint64_t v10 = sub_3B2A8();
    uint64_t v32 = *(void *)v10;
    uint64_t v33 = *((void *)v10 + 1);
    swift_bridgeObjectRetain(v33);
    uint64_t v11 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v34, 1LL);
    sub_1B508(__src);
    uint64_t v35 = swift_allocObject(&unk_CC678, 80LL, 7LL);
    memcpy((void *)(v35 + 16), __src, 0x40uLL);
    uint64_t v38 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v31, v32, v33, v34, sub_381F0);
    dispatch thunk of SiriKitEventSending.send(_:)(v38, v36, v37);
    swift_release();
    sub_4598(v58 + 12);
LABEL_8:
    uint64_t v13 = v58[61];
    uint64_t v12 = v58[60];
    uint64_t v14 = v58[59];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    uint64_t v24 = v58[78];
    uint64_t v15 = v58[67];
    uint64_t v16 = v58[66];
    uint64_t v17 = v58[65];
    uint64_t v18 = v58[64];
    uint64_t v19 = v58[61];
    uint64_t v20 = v58[58];
    uint64_t v21 = v58[57];
    uint64_t v22 = v58[54];
    uint64_t v23 = v58[51];
    swift_task_dealloc(v58[68]);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(uint64_t))(v58[21] + 8LL))(v24);
  }

  return result;
}

uint64_t sub_351B4()
{
  uint64_t v3 = v0[76];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  uint64_t v8 = v0[66];
  uint64_t v9 = v0[65];
  uint64_t v10 = v0[64];
  uint64_t v11 = v0[61];
  uint64_t v4 = v0[60];
  uint64_t v5 = v0[59];
  uint64_t v12 = v0[58];
  uint64_t v13 = v0[57];
  uint64_t v1 = v0[56];
  uint64_t v14 = v0[54];
  uint64_t v15 = v0[51];
  v0[21] = v0;
  (*(void (**)(void))(v1 + 8))();
  sub_1D580(v0 + 7);
  swift_bridgeObjectRelease(v3);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)())(*(void *)(v16 + 168) + 8LL))();
}

uint64_t sub_35314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = v70;
  uint64_t v48 = a1;
  uint64_t v47 = a2;
  uint64_t v46 = a3;
  memset(&v72[5], 0, 40);
  v72[2] = 0LL;
  char v64 = 0;
  uint64_t v49 = type metadata accessor for URL(0LL);
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v54 = *(void *)(v50 + 64);
  unint64_t v51 = (v54 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v26 - v51;
  unint64_t v53 = v51;
  double v6 = __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v26 - v53;
  unint64_t v56 = (v54 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  os_log_type_t v57 = (char *)&v26 - v56;
  v7[17] = (char *)&v26 - v56;
  v7[16] = v8;
  v7[14] = v9;
  v7[15] = v10;
  v7[13] = v3;
  v7[11] = v9;
  v7[12] = v10;
  Swift::String v61 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
  unint64_t v60 = sub_B880();
  uint64_t v59 = &type metadata for String;
  uint64_t v58 = sub_3211C();
  char v11 = sub_32130();
  uint64_t v63 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)( v61._countAndFlagsBits,  v61._object,  v58,  v11 & 1,  v59,  v60);
  swift_bridgeObjectRelease(v61._object);
  uint64_t v12 = v63;
  v62[10] = v63;
  if (Array.count.getter(v12, &type metadata for Substring) >= 2)
  {
    int v32 = 1;
    Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dialog", 6uLL, 1);
    object = v13._object;
    URL.appendingPathComponent(_:)(v13._countAndFlagsBits);
    swift_bridgeObjectRelease(object);
    uint64_t v33 = &type metadata for Substring;
    Array.subscript.getter(v71, 0LL, v63);
    uint64_t v14 = v62;
    char v15 = v32;
    uint64_t v16 = v62[4];
    uint64_t v17 = v62[5];
    uint64_t v18 = v62[6];
    uint64_t v19 = v62[7];
    uint64_t v29 = v70;
    v70[0] = v16;
    v70[1] = v17;
    v62[2] = v18;
    v14[3] = v19;
    Swift::String v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(".catfamily", 0xAuLL, v15 & 1);
    uint64_t v28 = &v69;
    Swift::String v69 = v20;
    unint64_t v34 = sub_38B7C();
    unint64_t v35 = sub_39334();
    uint64_t v30 = &type metadata for String;
    static RangeReplaceableCollection.+ infix<A>(_:_:)(v72, v29, v28, &type metadata for String, v33, v34);
    sub_8DD8((uint64_t)v28);
    sub_38BE4((uint64_t)v29);
    uint64_t v21 = v62[8];
    uint64_t v31 = v62[9];
    URL.appendingPathComponent(_:)(v21);
    uint64_t v22 = v30;
    swift_bridgeObjectRelease(v31);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v50 + 8);
    v43(v52, v49);
    Array.subscript.getter(v67, 1LL, v63);
    uint64_t v37 = v66;
    v66[0] = v67[0];
    v66[1] = v67[1];
    v66[2] = v67[2];
    void v66[3] = v67[3];
    Swift::String v23 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(".cat", 4uLL, v32 & 1);
    uint64_t v36 = &v65;
    Swift::String v65 = v23;
    static RangeReplaceableCollection.+ infix<A>(_:_:)(v68, v37, &v65, v22, v33, v34);
    sub_8DD8((uint64_t)v36);
    sub_38BE4((uint64_t)v37);
    uint64_t v38 = v68[1];
    URL.appendingPathComponent(_:)(v68[0]);
    swift_bridgeObjectRelease(v38);
    v43(v55, v49);
    uint64_t v40 = &v64;
    char v64 = 1;
    id v42 = [(id)objc_opt_self(NSFileManager) defaultManager];
    URL.path.getter();
    uint64_t v39 = v24;
    id v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    unsigned int v44 = [v42 fileExistsAtPath:v41 isDirectory:v40];

    v43(v57, v49);
    swift_bridgeObjectRelease(v63);
    unsigned int v45 = v44;
  }

  else
  {
    swift_bridgeObjectRelease(v63);
    unsigned int v45 = 0;
  }

  return v45 & 1;
}

uint64_t sub_35814@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  unint64_t v132 = a6;
  uint64_t v154 = a1;
  uint64_t v145 = a2;
  uint64_t v142 = a3;
  uint64_t v143 = a4;
  uint64_t v144 = a5;
  os_log_type_t v133 = sub_1ADDC;
  uint64_t v195 = 0LL;
  uint64_t v193 = 0LL;
  uint64_t v194 = 0LL;
  uint64_t v191 = 0LL;
  uint64_t v192 = 0LL;
  uint64_t v190 = 0LL;
  uint64_t v134 = 0LL;
  unint64_t v135 = (*(void *)(*(void *)(sub_5150(&qword_D7308) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v6);
  uint64_t v136 = (char *)&v86 - v135;
  uint64_t v137 = 0LL;
  uint64_t v138 = type metadata accessor for ActivityType(v7);
  uint64_t v139 = *(void *)(v138 - 8);
  unint64_t v140 = (*(void *)(v139 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v141 = (char *)&v86 - v140;
  uint64_t v152 = type metadata accessor for Logger(v9);
  uint64_t v151 = *(void **)(v152 - 8);
  uint64_t v147 = v151[8];
  unint64_t v146 = (v147 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v148 = (char *)&v86 - v146;
  unint64_t v149 = (v147 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v12 = (char *)&v86 - v149;
  uint64_t v150 = (char *)&v86 - v149;
  uint64_t v195 = v13;
  uint64_t v193 = v14;
  uint64_t v194 = v15;
  uint64_t v191 = v16;
  uint64_t v192 = v17;
  uint64_t v190 = v18;
  uint64_t v19 = sub_AD514();
  unint64_t v153 = (void (*)(char *, uint64_t, uint64_t))v151[2];
  v153(v12, v19, v152);
  swift_errorRetain(v154);
  uint64_t v162 = 7LL;
  uint64_t v20 = swift_allocObject(&unk_CC6A0, 24LL, 7LL);
  uint64_t v21 = v154;
  uint64_t v163 = v20;
  *(void *)(v20 + swift_beginAccess(v0 + 16) = v154;
  uint64_t v171 = (os_log_s *)Logger.logObject.getter(v21);
  int v172 = static os_log_type_t.error.getter();
  uint64_t v157 = &v188;
  uint64_t v188 = 12LL;
  unint64_t v155 = sub_7788();
  unint64_t v156 = sub_77F0();
  unint64_t v158 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v189, v157, &type metadata for UInt32, &type metadata for Int, v155, v156, v158);
  uint32_t v159 = v189;
  uint64_t v160 = 17LL;
  uint64_t v22 = swift_allocObject(&unk_CC6C8, 17LL, v162);
  uint64_t v23 = v160;
  uint64_t v24 = v162;
  uint64_t v165 = v22;
  *(_BYTE *)(v22 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v25 = swift_allocObject(&unk_CC6F0, v23, v24);
  uint64_t v26 = v162;
  uint64_t v166 = v25;
  *(_BYTE *)(v25 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v161 = 32LL;
  uint64_t v27 = swift_allocObject(&unk_CC718, 32LL, v26);
  uint64_t v28 = v161;
  uint64_t v29 = v162;
  uint64_t v30 = v27;
  uint64_t v31 = v163;
  uint64_t v164 = v30;
  *(void *)(v30 + swift_beginAccess(v0 + 16) = sub_1ACC8;
  *(void *)(v30 + 24) = v31;
  uint64_t v32 = swift_allocObject(&unk_CC740, v28, v29);
  uint64_t v33 = v164;
  uint64_t v168 = v32;
  *(void *)(v32 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v32 + 24) = v33;
  uint64_t v170 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v167 = _allocateUninitializedArray<A>(_:)(3LL, v170);
  uint64_t v169 = v34;
  swift_retain();
  uint64_t v35 = v165;
  uint64_t v36 = v169;
  *uint64_t v169 = sub_884C;
  v36[1] = v35;
  swift_retain();
  uint64_t v37 = v166;
  uint64_t v38 = v169;
  Swift::String v169[2] = sub_884C;
  v38[3] = v37;
  swift_retain();
  uint64_t v39 = v167;
  uint64_t v40 = v168;
  id v41 = v169;
  v169[4] = sub_8900;
  v41[5] = v40;
  sub_6648();
  swift_bridgeObjectRelease(v39);
  if (os_log_type_enabled(v171, (os_log_type_t)v172))
  {
    uint64_t v42 = v134;
    uint64_t v125 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v124 = sub_5150(&qword_D6B60);
    uint64_t v126 = sub_74D0(0LL, v124, v124);
    uint64_t v127 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v128 = &v177;
    uint64_t v177 = v125;
    uint64_t v129 = &v176;
    uint64_t v176 = v126;
    uint64_t v130 = &v175;
    uint64_t v175 = v127;
    sub_7528(2LL, &v177);
    sub_7528(1LL, v128);
    uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v174 = v165;
    sub_753C(&v173, (uint64_t)v128, (uint64_t)v129, (uint64_t)v130);
    uint64_t v131 = v42;
    if (v42)
    {
      __break(1u);
    }

    else
    {
      uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v174 = v166;
      sub_753C(&v173, (uint64_t)&v177, (uint64_t)&v176, (uint64_t)&v175);
      uint64_t v122 = 0LL;
      uint64_t v44 = v122;
      uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v174 = v168;
      sub_753C(&v173, (uint64_t)&v177, (uint64_t)&v176, (uint64_t)&v175);
      uint64_t v121 = v44;
      _os_log_impl(&dword_0, v171, (os_log_type_t)v172, "Error: %s", v125, v159);
      sub_7580(v126, 0LL);
      sub_7580(v127, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v123 = v121;
    }
  }

  else
  {
    uint64_t v43 = v134;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v123 = v43;
  }

  unsigned int v45 = v148;
  uint64_t v106 = v123;

  uint64_t v107 = (void (*)(char *, uint64_t))v151[1];
  v107(v150, v152);
  uint64_t v46 = sub_AD514();
  v153(v45, v46, v152);
  swift_bridgeObjectRetain(v144);
  uint64_t v110 = 32LL;
  uint64_t v111 = 7LL;
  uint64_t v47 = swift_allocObject(&unk_CC768, 32LL, 7LL);
  uint64_t v48 = v144;
  uint64_t v112 = v47;
  *(void *)(v47 + swift_beginAccess(v0 + 16) = v143;
  *(void *)(v47 + 24) = v48;
  uint64_t v119 = (os_log_s *)Logger.logObject.getter(v47);
  int v120 = static os_log_type_t.debug.getter();
  uint64_t v186 = 12LL;
  UnsignedInteger<>.init<A>(_:)(&v187, &v186, &type metadata for UInt32, &type metadata for Int, v155, v156, v158);
  uint32_t v108 = v187;
  uint64_t v109 = 17LL;
  uint64_t v49 = swift_allocObject(&unk_CC790, 17LL, v111);
  uint64_t v50 = v109;
  uint64_t v51 = v111;
  uint64_t v114 = v49;
  *(_BYTE *)(v49 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v52 = swift_allocObject(&unk_CC7B8, v50, v51);
  uint64_t v53 = v110;
  uint64_t v54 = v111;
  uint64_t v115 = v52;
  *(_BYTE *)(v52 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v55 = swift_allocObject(&unk_CC7E0, v53, v54);
  uint64_t v56 = v110;
  uint64_t v57 = v111;
  uint64_t v58 = v55;
  uint64_t v59 = v112;
  uint64_t v113 = v58;
  *(void *)(v58 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v58 + 24) = v59;
  uint64_t v60 = swift_allocObject(&unk_CC808, v56, v57);
  uint64_t v61 = v170;
  uint64_t v62 = v60;
  uint64_t v63 = v113;
  uint64_t v117 = v62;
  *(void *)(v62 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v62 + 24) = v63;
  uint64_t v116 = _allocateUninitializedArray<A>(_:)(3LL, v61);
  int v118 = v64;
  swift_retain();
  uint64_t v65 = v114;
  uint64_t v66 = v118;
  *int v118 = sub_884C;
  v66[1] = v65;
  swift_retain();
  uint64_t v67 = v115;
  uint64_t v68 = v118;
  v118[2] = sub_884C;
  v68[3] = v67;
  swift_retain();
  uint64_t v69 = v116;
  uint64_t v70 = v117;
  uint64_t v71 = v118;
  v118[4] = sub_8900;
  v71[5] = v70;
  sub_6648();
  swift_bridgeObjectRelease(v69);
  if (os_log_type_enabled(v119, (os_log_type_t)v120))
  {
    uint64_t v72 = v106;
    uint64_t v99 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v98 = sub_5150(&qword_D6B60);
    uint64_t v100 = sub_74D0(0LL, v98, v98);
    uint64_t v101 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v102 = &v182;
    uint64_t v182 = v99;
    uint64_t v103 = &v181;
    uint64_t v181 = v100;
    uint64_t v104 = &v180;
    uint64_t v180 = v101;
    sub_7528(2LL, &v182);
    sub_7528(1LL, v102);
    uint64_t v178 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v179 = v114;
    sub_753C(&v178, (uint64_t)v102, (uint64_t)v103, (uint64_t)v104);
    uint64_t v105 = v72;
    if (v72)
    {
      __break(1u);
    }

    else
    {
      uint64_t v178 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v179 = v115;
      sub_753C(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
      uint64_t v97 = 0LL;
      uint64_t v178 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v179 = v117;
      sub_753C(&v178, (uint64_t)&v182, (uint64_t)&v181, (uint64_t)&v180);
      _os_log_impl(&dword_0, v119, (os_log_type_t)v120, "Sending SiriKitEvent .failed for %s", v99, v108);
      sub_7580(v100, 0LL);
      sub_7580(v101, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v73 = ((uint64_t (*)(char *, uint64_t))v107)(v148, v152);
  id v95 = &v183;
  static SiriKitEventSender.current.getter(v73);
  uint64_t v92 = v184;
  uint64_t v93 = v185;
  uint64_t v91 = sub_8C74(v95, v184);
  uint64_t v87 = 0LL;
  type metadata accessor for SiriKitEvent();
  (*(void (**)(char *, void, uint64_t))(v139 + 104))(v141, enum case for ActivityType.failed(_:), v138);
  swift_bridgeObjectRetain(v144);
  unsigned int v88 = enum case for SiriKitReliabilityCodes.genericError(_:);
  uint64_t v90 = type metadata accessor for SiriKitReliabilityCodes(v87);
  uint64_t v89 = *(void *)(v90 - 8);
  (*(void (**)(char *, void))(v89 + 104))(v136, v88);
  uint64_t v74 = *(void (**)(char *, void))(v89 + 56);
  unsigned int v96 = 1;
  v74(v136, 0LL);
  swift_bridgeObjectRetain(v142);
  swift_errorRetain(v154);
  uint64_t v75 = swift_allocObject(&unk_CC830, 40LL, 7LL);
  uint64_t v76 = v142;
  uint64_t v77 = v143;
  uint64_t v78 = v144;
  os_log_type_t v79 = v136;
  uint64_t v80 = v133;
  uint64_t v81 = v154;
  uint64_t v82 = (void *)v75;
  uint64_t v83 = v141;
  v82[2] = v145;
  v82[3] = v76;
  v82[4] = v81;
  uint64_t v94 = SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)(v83, v77, v78, v79, v80);
  dispatch thunk of SiriKitEventSending.send(_:)(v94, v92, v93);
  swift_release();
  sub_4598(v95);
  swift_errorRetain(v154);
  *unint64_t v132 = v154;
  uint64_t v84 = sub_5150(&qword_D7300);
  return swift_storeEnumTagMultiPayload(v132, v84, v96);
}

void *sub_367D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = 0LL;
  v36[0] = 0LL;
  v36[1] = 0LL;
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v44 = a1;
  uint64_t v43 = a2;
  Swift::String v39 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("listenAfterSpeaking", 0x13uLL, 1);
  Dictionary.subscript.getter(&v40);
  sub_8DD8((uint64_t)&v39);
  uint64_t v24 = v40;
  uint64_t v25 = v41;
  swift_bridgeObjectRetain(v41);
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("true", 4uLL, 1);
  swift_bridgeObjectRetain(v3._object);
  v37[0] = v24;
  v37[1] = v25;
  Swift::String v38 = v3;
  if (v25)
  {
    sub_139E0(v37, &v26);
    if (v38._object)
    {
      uint64_t v17 = v26;
      uint64_t v19 = v27;
      swift_bridgeObjectRetain(v27);
      Swift::String v18 = v38;
      swift_bridgeObjectRetain(v38._object);
      char v20 = static String.== infix(_:_:)(v17, v19, v18._countAndFlagsBits, v18._object);
      swift_bridgeObjectRelease(v18._object);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v18._object);
      swift_bridgeObjectRelease(v19);
      sub_8DD8((uint64_t)v37);
      char v21 = v20;
      goto LABEL_7;
    }

    sub_8DD8((uint64_t)&v26);
    goto LABEL_9;
  }

  if (v38._object)
  {
LABEL_9:
    sub_13A1C((uint64_t)v37);
    char v21 = 0;
    goto LABEL_7;
  }

  sub_8DD8((uint64_t)v37);
  char v21 = 1;
LABEL_7:
  swift_bridgeObjectRelease(v3._object);
  swift_bridgeObjectRelease(v25);
  if ((v21 & 1) != 0)
  {
    unsigned int v16 = enum case for BehaviorAfterSpeaking.listen(_:);
    uint64_t v4 = type metadata accessor for BehaviorAfterSpeaking(0LL);
    return (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)(v4 - 8) + 104LL))(a3, v16);
  }

  else
  {
    swift_bridgeObjectRetain(a2);
    uint64_t v35 = a2;
    uint64_t v15 = sub_5150(&qword_D7350);
    unint64_t v6 = sub_1BFB0();
    Collection<>.makeIterator()(v36, v15, v6);
    while (1)
    {
      uint64_t v7 = sub_5150(&qword_D7418);
      IndexingIterator.next()(&v33, v7);
      uint64_t v14 = v34;
      if (!v34) {
        break;
      }
      uint64_t v31 = v33;
      uint64_t v32 = v34;
      uint64_t v29 = v33;
      uint64_t v30 = v34;
      Swift::String v28 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("listenAfterSpeaking", 0x13uLL, 1);
      unint64_t v8 = sub_B880();
      char v13 = StringProtocol.contains<A>(_:)(&v28, &type metadata for String, &type metadata for String, v8);
      sub_8DD8((uint64_t)&v28);
      if ((v13 & 1) != 0)
      {
        unsigned int v12 = enum case for BehaviorAfterSpeaking.listen(_:);
        uint64_t v9 = type metadata accessor for BehaviorAfterSpeaking(0LL);
        (*(void (**)(uint64_t, void))(*(void *)(v9 - 8) + 104LL))(a3, v12);
        swift_bridgeObjectRelease(v14);
        uint64_t result = v36;
        sub_1B82C(v36);
        return result;
      }

      swift_bridgeObjectRelease(v14);
    }

    sub_1B82C(v36);
    unsigned int v11 = enum case for BehaviorAfterSpeaking.defaultBehavior(_:);
    uint64_t v10 = type metadata accessor for BehaviorAfterSpeaking(0LL);
    return (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)(v10 - 8) + 104LL))(a3, v11);
  }

uint64_t sub_36BE0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v86 = a4;
  id v112 = a1;
  uint64_t v104 = a2;
  uint64_t v103 = a3;
  uint64_t v136 = 0LL;
  unint64_t v135 = 0LL;
  uint64_t v134 = 0LL;
  os_log_type_t v133 = 0LL;
  uint64_t v132 = 0LL;
  uint64_t v131 = 0LL;
  uint64_t v130 = 0LL;
  uint64_t v116 = 0LL;
  HIBYTE(v12sub_1D580(v0 + 8) = 0;
  uint64_t v114 = 0LL;
  unint64_t v87 = (*(void *)(*(void *)(type metadata accessor for DialogPhase() - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  unsigned int v88 = (char *)v58 - v87;
  uint64_t v89 = type metadata accessor for OutputGenerationManifest(v6);
  uint64_t v90 = *(void *)(v89 - 8);
  unint64_t v91 = (*(void *)(v90 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v92 = (char *)v58 - v91;
  uint64_t v136 = (char *)v58 - v91;
  uint64_t v93 = type metadata accessor for Logger(v8);
  uint64_t v94 = *(void *)(v93 - 8);
  unint64_t v95 = (*(void *)(v94 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  unsigned int v96 = (char *)v58 - v95;
  uint64_t v97 = *(void *)(sub_5150(&qword_D7310) - 8);
  uint64_t v98 = *(void *)(v97 + 64);
  unint64_t v99 = (v98 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v100 = (char *)v58 - v99;
  unint64_t v101 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v102 = (char *)v58 - v101;
  unint64_t v135 = (char *)v58 - v101;
  uint64_t v105 = type metadata accessor for BehaviorAfterSpeaking(v13);
  uint64_t v106 = *(void *)(v105 - 8);
  unint64_t v107 = (*(void *)(v106 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v15 = __chkstk_darwin(v14);
  uint32_t v108 = (char *)v58 - v107;
  unint64_t v109 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v17 = __chkstk_darwin(v15);
  uint64_t v110 = (uint64_t)v58 - v109;
  uint64_t v134 = (char *)v58 - v109;
  os_log_type_t v133 = v18;
  uint64_t v132 = v19;
  uint64_t v131 = v20;
  uint64_t v130 = v4;
  id v111 = objc_msgSend(v18, "meta", v17);
  int v118 = &type metadata for String;
  uint64_t v113 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v115 = [v112 dialog];
  unint64_t v21 = sub_395E8();
  uint64_t v129 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v115, v21);
  uint64_t v117 = sub_5150(&qword_D7998);
  unint64_t v22 = sub_3964C();
  uint64_t v24 = sub_25AD4( (void (*)(char *, char *))sub_377E0,  v116,  v117,  (uint64_t)v118,  (uint64_t)&type metadata for Never,  v22,  v23,  (uint64_t)&protocol witness table for Never,  v119);
  uint64_t v120 = 0LL;
  uint64_t v121 = v24;
  uint64_t v85 = v24;
  sub_1B82C(&v129);

  sub_367D8(v113, v85, v110);
  swift_bridgeObjectRelease(v85);
  swift_bridgeObjectRelease(v113);

  HIBYTE(v12sub_1D580(v0 + 8) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v108, v110, v105);
  if ((*(unsigned int (**)(char *, uint64_t))(v106 + 88))(v108, v105) == enum case for BehaviorAfterSpeaking.listen(_:))
  {
    (*(void (**)(char *, uint64_t))(v106 + 8))(v108, v105);
    HIBYTE(v12sub_1D580(v0 + 8) = 1;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v106 + 8))(v108, v105);
  }

  type metadata accessor for CannedDialogHelper(0LL);
  sub_18C5C(HIBYTE(v128) & 1, v104, (uint64_t)v102);
  uint64_t v25 = v96;
  uint64_t v26 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v25, v26, v93);
  sub_1AF18(v102, v100);
  uint64_t v27 = *(unsigned __int8 *)(v97 + 80);
  uint64_t v67 = (v27 + 16) & ~v27;
  uint64_t v74 = 7LL;
  uint64_t v75 = swift_allocObject(&unk_CC858, v67 + v98, v27 | 7);
  Swift::String v28 = sub_1D1FC(v100, (void *)(v75 + v67));
  uint64_t v83 = (os_log_s *)Logger.logObject.getter(v28);
  int v84 = static os_log_type_t.debug.getter();
  uint64_t v70 = &v127;
  uint64_t v127 = 12LL;
  unint64_t v68 = sub_7788();
  unint64_t v69 = sub_77F0();
  unint64_t v29 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v128, v70, &type metadata for UInt32, &type metadata for Int, v68, v69, v29);
  uint32_t v71 = v128;
  uint64_t v72 = 17LL;
  uint64_t v30 = swift_allocObject(&unk_CC880, 17LL, v74);
  uint64_t v31 = v72;
  uint64_t v32 = v74;
  uint64_t v77 = v30;
  *(_BYTE *)(v30 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v33 = swift_allocObject(&unk_CC8A8, v31, v32);
  uint64_t v34 = v74;
  uint64_t v78 = v33;
  *(_BYTE *)(v33 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v73 = 32LL;
  uint64_t v35 = swift_allocObject(&unk_CC8D0, 32LL, v34);
  uint64_t v36 = v73;
  uint64_t v37 = v74;
  uint64_t v38 = v35;
  uint64_t v39 = v75;
  uint64_t v76 = v38;
  *(void *)(v38 + swift_beginAccess(v0 + 16) = sub_1D2B8;
  *(void *)(v38 + 24) = v39;
  uint64_t v40 = swift_allocObject(&unk_CC8F8, v36, v37);
  uint64_t v41 = v76;
  uint64_t v80 = v40;
  *(void *)(v40 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v40 + 24) = v41;
  uint64_t v82 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v79 = _allocateUninitializedArray<A>(_:)(3LL, v82);
  uint64_t v81 = v42;
  swift_retain();
  uint64_t v43 = v77;
  uint64_t v44 = v81;
  void *v81 = sub_884C;
  v44[1] = v43;
  swift_retain();
  uint64_t v45 = v78;
  uint64_t v46 = v81;
  v81[2] = sub_884C;
  v46[3] = v45;
  swift_retain();
  uint64_t v47 = v79;
  uint64_t v48 = v80;
  uint64_t v49 = v81;
  v81[4] = sub_8900;
  v49[5] = v48;
  sub_6648();
  swift_bridgeObjectRelease(v47);
  if (os_log_type_enabled(v83, (os_log_type_t)v84))
  {
    uint64_t v50 = v120;
    uint64_t v60 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v59 = sub_5150(&qword_D6B60);
    uint64_t v61 = sub_74D0(0LL, v59, v59);
    uint64_t v62 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v63 = &v126;
    uint64_t v126 = v60;
    char v64 = &v125;
    uint64_t v125 = v61;
    uint64_t v65 = &v124;
    uint64_t v124 = v62;
    sub_7528(2LL, &v126);
    sub_7528(1LL, v63);
    uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v123 = v77;
    sub_753C(&v122, (uint64_t)v63, (uint64_t)v64, (uint64_t)v65);
    uint64_t v66 = v50;
    if (v50)
    {
      __break(1u);
    }

    else
    {
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v123 = v78;
      sub_753C(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      v58[2] = 0LL;
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v123 = v80;
      sub_753C(&v122, (uint64_t)&v126, (uint64_t)&v125, (uint64_t)&v124);
      _os_log_impl(&dword_0, v83, (os_log_type_t)v84, "NL context update: %s", v60, v71);
      sub_7580(v61, 0LL);
      sub_7580(v62, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v96, v93);
  static DialogPhase.completion.getter(v51);
  sub_1AF18(v102, v100);
  swift_bridgeObjectRetain(v103);
  v58[1] = v58;
  double v53 = __chkstk_darwin(v52);
  uint64_t v54 = v100;
  uint64_t v55 = v103;
  uint64_t v56 = &v58[-6];
  v56[2] = (char *)&v128 + 7;
  v56[3] = v54;
  v56[4] = v55;
  OutputGenerationManifest.init(dialogPhase:_:)(v53);
  sub_1B038((uint64_t)v100);
  swift_bridgeObjectRelease(v103);
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v86, v92, v89);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v89);
  sub_1B038((uint64_t)v102);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 8))(v110, v105);
}

void sub_377E0(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = [*a1 dialogId];
  *a2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2[1] = v2;
}

uint64_t sub_37844(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4)
{
  uint64_t v15 = a1;
  uint64_t v11 = a2;
  uint64_t v13 = a3;
  uint64_t v16 = a4;
  uint64_t v20 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v17 = 0LL;
  unint64_t v12 = (*(void *)(*(void *)(sub_5150(&qword_D7310) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  double v14 = (char *)&v11 - v12;
  uint64_t v20 = a1;
  uint64_t v19 = v7;
  uint64_t v18 = v8;
  uint64_t v17 = v9;
  OutputGenerationManifest.listenAfterSpeaking.setter(*v7 & 1, v6);
  sub_1AF18(v13, v14);
  OutputGenerationManifest.nlContextUpdate.setter(v14);
  swift_bridgeObjectRetain(v16);
  return OutputGenerationManifest.additionalCommands.setter(v16);
}

uint64_t sub_37928()
{
  uint64_t v3 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin13DialogService_options;
  uint64_t v1 = type metadata accessor for CATOption(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(v0 + v3);
  return v4;
}

uint64_t sub_37988()
{
  uint64_t v0 = sub_37928();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_379C8@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_379E4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_37A20()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_37A48()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_37A70()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_37AAC()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_37AE8(void *a1)
{
  return a1;
}

unint64_t sub_37B34()
{
  uint64_t v2 = qword_D7910;
  if (!qword_D7910)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7910);
    return WitnessTable;
  }

  return v2;
}

uint64_t type metadata accessor for DialogService(uint64_t a1)
{
  uint64_t v2 = qword_D79D0;
  if (!qword_D79D0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DialogService);
  }
  return v2;
}

unint64_t sub_37C00()
{
  uint64_t v3 = qword_D7918;
  if (!qword_D7918)
  {
    uint64_t v0 = type metadata accessor for CATGlobals(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7918);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_37C70()
{
  uint64_t v2 = qword_D7920;
  if (!qword_D7920)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7784, &unk_CEF08);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7920);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_37CD8()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_37D2C()
{
  return sub_2D87C();
}

uint64_t sub_37D34()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_37D5C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_37D84()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_37DC0()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_37DFC()
{
  uint64_t v3 = qword_D7928;
  if (!qword_D7928)
  {
    uint64_t v0 = type metadata accessor for ParameterService(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7B98, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7928);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_37E6C()
{
  uint64_t v1 = sub_5150(&qword_D7300);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v7 = v6 + *(void *)(v2 + 64);
  if (swift_getEnumCaseMultiPayload(v0 + v6, v1) == 1)
  {
    swift_errorRelease(*(void *)(v5 + v6));
  }

  else
  {
    uint64_t v3 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(unint64_t))(*(void *)(v3 - 8) + 8LL))(v5 + v6);
  }

  return swift_deallocObject(v5, v7);
}

uint64_t sub_37F2C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(sub_5150(&qword_D7300) - 8) + 80LL);
  return sub_2D8D0(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_37F60()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_37F88()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_37FB0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_37FEC()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_38028()
{
  uint64_t v3 = qword_D7938;
  if (!qword_D7938)
  {
    uint64_t v0 = sub_8D64(&qword_D7930);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7938);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_38098()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_380D4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_380FC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38124()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38160()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_3819C()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_381F0()
{
  return sub_2D998();
}

uint64_t sub_381F8()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_3824C()
{
  return sub_2D9F4();
}

uint64_t sub_38254()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_3827C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_382A4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_382E0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_3831C()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_38370()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38398()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_383C0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_383FC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38438()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_38474()
{
  return sub_2FDC0(*(void **)(v0 + 16));
}

uint64_t sub_3847C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_384A4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_384CC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38508()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38544()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_38598()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_385C0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_385E8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38624()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38660()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_3869C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_386C4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_386EC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38728()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38764()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t type metadata accessor for DialogServiceButton(uint64_t a1)
{
  uint64_t v2 = qword_D7B08;
  if (!qword_D7B08) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DialogServiceButton);
  }
  return v2;
}

void *sub_3881C(const void *a1, void *a2)
{
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  if (((unsigned int (*)(void *, uint64_t))v9)(a2, 1LL))
  {
    if (v9(a1, 1LL, v7))
    {
      uint64_t v3 = sub_5150(&qword_D7378);
      memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a2, a1, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a2, 0LL, 1LL, v7);
    }
  }

  else if (v9(a1, 1LL, v7))
  {
    (*(void (**)(void *, uint64_t))(v8 + 8))(a2, v7);
    uint64_t v2 = sub_5150(&qword_D7378);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a2, a1, v7);
  }

  return a2;
}

__n128 sub_3897C(char *a1, char *a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  uint64_t v5 = type metadata accessor for DialogServiceButton(0LL);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v8 = type metadata accessor for URL(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(&a1[v6], 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7378);
    memcpy(&a2[v6], &a1[v6], *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v9 + 32))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(&a2[v6], 0LL, 1LL, v8);
  }

  __n128 result = *(__n128 *)&a1[*(int *)(v5 + 24)];
  *(__n128 *)&a2[*(int *)(v5 + 24)] = result;
  return result;
}

uint64_t sub_38AA4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TemplatingSection(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

unint64_t sub_38B14()
{
  uint64_t v2 = qword_D7950;
  if (!qword_D7950)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7950);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_38B7C()
{
  uint64_t v2 = qword_D7958;
  if (!qword_D7958)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7958);
    return WitnessTable;
  }

  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_38BE4( uint64_t a1)
{
}

uint64_t sub_38C0C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38C48()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_38CB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for URL(0LL) - 8) + 80LL);
  return sub_32148(v1 + ((v2 + 16) & ~v2), a1);
}

uint64_t sub_38CF8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38D34()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = type metadata accessor for URL(0LL);
  unint64_t v1 = sub_38D7C();
  return sub_75EC(v5, v3, v4, v1);
}

unint64_t sub_38D7C()
{
  uint64_t v3 = qword_D7960;
  if (!qword_D7960)
  {
    uint64_t v0 = type metadata accessor for URL(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for URL, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7960);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_38DEC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38E14()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38E3C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38E78()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38EB4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38EDC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38F04()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38F40()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_38F7C()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_38FD0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_38FF8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39020()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_3905C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_39098()
{
  return swift_deallocObject(v2, 80LL);
}

uint64_t sub_390EC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39114()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_3913C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_39178()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_391B4()
{
  uint64_t v3 = qword_D7980;
  if (!qword_D7980)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___PatternExecutionResult);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7980);
    return ObjCClassMetadata;
  }

  return v3;
}

uint64_t sub_39218()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39240()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39268()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_392A4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_392E0()
{
  return swift_deallocObject(v2, 80LL);
}

unint64_t sub_39334()
{
  uint64_t v2 = qword_D7988;
  if (!qword_D7988)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7988);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_3939C()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_393D8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39400()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39428()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_39464()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_394A0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_394DC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_39504()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_3952C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_39568()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_395A4()
{
  return swift_deallocObject(v2, 40LL);
}

unint64_t sub_395E8()
{
  uint64_t v3 = qword_D7990;
  if (!qword_D7990)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___PatternExecutionDialog);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7990);
    return ObjCClassMetadata;
  }

  return v3;
}

unint64_t sub_3964C()
{
  uint64_t v3 = qword_D79A0;
  if (!qword_D79A0)
  {
    uint64_t v0 = sub_8D64(&qword_D7998);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D79A0);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_396BC()
{
  uint64_t v1 = *(void *)(sub_5150(&qword_D7310) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = v5 + *(void *)(v1 + 64);
  uint64_t v6 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  return swift_deallocObject(v3, v4);
}

uint64_t sub_39780()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_397A8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_397D0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_3980C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_39848(uint64_t a1)
{
  return sub_37844(a1, *(void *)(v1 + 16), *(const void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_39858()
{
  return type metadata accessor for DialogService(0LL);
}

uint64_t sub_39870(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t v1 = type metadata accessor for CATOption(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[1] = *(void *)(v1 - 8) + 64LL;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 2LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_39938(void *a1)
{
  return swift_bridgeObjectRelease(a1[5]);
}

void *sub_39980(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  swift_bridgeObjectRetain(v3);
  a1[1] = v3;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain(v4);
  a1[2] = v4;
  a1[3] = a2[3];
  uint64_t v5 = a2[4];
  swift_bridgeObjectRetain(v5);
  a1[4] = v5;
  uint64_t v8 = a2[5];
  swift_bridgeObjectRetain(v8);
  __n128 result = a1;
  a1[5] = v8;
  return result;
}

void *sub_39A1C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v7 = a2[1];
  swift_bridgeObjectRetain(v7);
  uint64_t v2 = a1[1];
  a1[1] = v7;
  swift_bridgeObjectRelease(v2);
  uint64_t v8 = a2[2];
  swift_bridgeObjectRetain(v8);
  uint64_t v3 = a1[2];
  a1[2] = v8;
  swift_bridgeObjectRelease(v3);
  a1[3] = a2[3];
  uint64_t v9 = a2[4];
  swift_bridgeObjectRetain(v9);
  uint64_t v4 = a1[4];
  a1[4] = v9;
  swift_bridgeObjectRelease(v4);
  uint64_t v11 = a2[5];
  swift_bridgeObjectRetain(v11);
  uint64_t v5 = a1[5];
  a1[5] = v11;
  swift_bridgeObjectRelease(v5);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_39AE0( void *a1, const void *a2)
{
}

void *sub_39B0C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  uint64_t v4 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v4);
  a1[3] = a2[3];
  uint64_t v5 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_39B9C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      int v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      int v3 = -1;
      if (!HIDWORD(*(void *)(a1 + 8))) {
        int v3 = *(void *)(a1 + 8);
      }
      int v4 = v3;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_39CB4(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)__n128 result = a2 + 0x80000000;
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)(result + swift_beginAccess(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 3sub_4598(v0 + 2) = 0LL;
    *(void *)(result + 40) = 0LL;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 4sub_1D580(v0 + 8) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 4sub_1D580(v0 + 8) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)(result + sub_1D580(v0 + 8) = a2 - 1;
    }
  }

  return result;
}

void *type metadata accessor for ParameterizedDialog()
{
  return &unk_CC978;
}

uint64_t sub_39ED8(void *a1)
{
  return swift_bridgeObjectRelease(a1[7]);
}

void *sub_39F20(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  swift_bridgeObjectRetain(v3);
  a1[1] = v3;
  a1[2] = a2[2];
  uint64_t v4 = a2[3];
  swift_bridgeObjectRetain(v4);
  a1[3] = v4;
  a1[4] = a2[4];
  uint64_t v5 = a2[5];
  swift_bridgeObjectRetain(v5);
  a1[5] = v5;
  a1[6] = a2[6];
  uint64_t v8 = a2[7];
  swift_bridgeObjectRetain(v8);
  __n128 result = a1;
  a1[7] = v8;
  return result;
}

void *sub_39FCC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v7 = a2[1];
  swift_bridgeObjectRetain(v7);
  uint64_t v2 = a1[1];
  a1[1] = v7;
  swift_bridgeObjectRelease(v2);
  a1[2] = a2[2];
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain(v8);
  uint64_t v3 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRelease(v3);
  a1[4] = a2[4];
  uint64_t v9 = a2[5];
  swift_bridgeObjectRetain(v9);
  uint64_t v4 = a1[5];
  a1[5] = v9;
  swift_bridgeObjectRelease(v4);
  a1[6] = a2[6];
  uint64_t v11 = a2[7];
  swift_bridgeObjectRetain(v11);
  uint64_t v5 = a1[7];
  a1[7] = v11;
  swift_bridgeObjectRelease(v5);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_3A0A8( void *a1, const void *a2)
{
}

void *sub_3A0D4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  a1[2] = a2[2];
  uint64_t v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v4);
  a1[4] = a2[4];
  uint64_t v5 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRelease(v5);
  a1[6] = a2[6];
  uint64_t v6 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t sub_3A174(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      int v4 = *(void *)a1 + 0x7FFFFFFF;
    }

    else
    {
      int v3 = -1;
      if (*(void *)(a1 + 8) < 0x100000000uLL) {
        int v3 = *(void *)(a1 + 8);
      }
      int v4 = v3;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_3A2D0(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)__n128 result = a2 + 0x80000000;
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)(result + swift_beginAccess(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 3sub_4598(v0 + 2) = 0LL;
    *(void *)(result + 40) = 0LL;
    *(void *)(result + 4sub_1D580(v0 + 8) = 0LL;
    *(void *)(result + 56) = 0LL;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 64) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 64) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)(result + sub_1D580(v0 + 8) = a2 - 1;
    }
  }

  return result;
}

void *type metadata accessor for CATMetadata()
{
  return &unk_CCA00;
}

unint64_t sub_3A4FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v18 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v18 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    swift_retain();
    *a1 = v13;
    return *a1 + ((v18 + 16LL) & ~(unint64_t)v18);
  }

  else
  {
    *a1 = *a2;
    uint64_t v8 = a2[1];
    swift_bridgeObjectRetain(v8);
    a1[1] = v8;
    __dst = (char *)a1 + *(int *)(a3 + 20);
    __src = (char *)a2 + *(int *)(a3 + 20);
    uint64_t v11 = type metadata accessor for URL(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(__src, 1LL))
    {
      uint64_t v3 = sub_5150(&qword_D7378);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, __src, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0LL, 1LL, v11);
    }

    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v4;
    *(uint64_t *)((char *)a1 + v4) = *(uint64_t *)((char *)a2 + v4);
    uint64_t v7 = *(uint64_t *)((char *)a2 + v4 + 8);
    swift_bridgeObjectRetain(v7);
    *((void *)v6 + 1) = v7;
    return (unint64_t)a1;
  }

uint64_t sub_3A6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  return swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(a2 + 24) + 8));
}

char *sub_3A754(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v9 = *((void *)a2 + 1);
  swift_bridgeObjectRetain(v9);
  *((void *)a1 + 1) = v9;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v13 = type metadata accessor for URL(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 48))(&a2[v11], 1LL))
  {
    uint64_t v3 = sub_5150(&qword_D7378);
    memcpy(&a1[v11], &a2[v11], *(void *)(*(void *)(v3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v14 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(&a1[v11], 0LL, 1LL, v13);
  }

  uint64_t v6 = &a1[*(int *)(a3 + 24)];
  uint64_t v4 = &a2[*(int *)(a3 + 24)];
  *(void *)uint64_t v6 = *(void *)v4;
  uint64_t v7 = *((void *)v4 + 1);
  swift_bridgeObjectRetain(v7);
  __n128 result = a1;
  *((void *)v6 + 1) = v7;
  return result;
}

char *sub_3A8B0(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v12 = *((void *)a2 + 1);
  swift_bridgeObjectRetain(v12);
  uint64_t v3 = *((void *)a1 + 1);
  *((void *)a1 + 1) = v12;
  swift_bridgeObjectRelease(v3);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v16 = type metadata accessor for URL(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t))v18)(&a1[v14], 1LL))
  {
    if (v18(&a2[v14], 1LL, v16))
    {
      uint64_t v5 = sub_5150(&qword_D7378);
      memcpy(&a1[v14], &a2[v14], *(void *)(*(void *)(v5 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void))(v17 + 16))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(&a1[v14], 0LL, 1LL, v16);
    }
  }

  else if (v18(&a2[v14], 1LL, v16))
  {
    (*(void (**)(void))(v17 + 8))();
    uint64_t v4 = sub_5150(&qword_D7378);
    memcpy(&a1[v14], &a2[v14], *(void *)(*(void *)(v4 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 24))(&a1[v14], &a2[v14], v16);
  }

  uint64_t v9 = &a1[*(int *)(a3 + 24)];
  uint64_t v6 = &a2[*(int *)(a3 + 24)];
  *(void *)uint64_t v9 = *(void *)v6;
  uint64_t v10 = *((void *)v6 + 1);
  swift_bridgeObjectRetain(v10);
  uint64_t v7 = *((void *)v9 + 1);
  *((void *)v9 + 1) = v10;
  swift_bridgeObjectRelease(v7);
  return a1;
}

__n128 sub_3AAF4(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(&a2[v7], 1LL))
  {
    uint64_t v3 = sub_5150(&qword_D7378);
    memcpy(&a1[v7], &a2[v7], *(void *)(*(void *)(v3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v10 + 32))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(&a1[v7], 0LL, 1LL, v9);
  }

  __n128 result = *(__n128 *)&a2[*(int *)(a3 + 24)];
  *(__n128 *)&a1[*(int *)(a3 + 24)] = result;
  return result;
}

char *sub_3AC0C(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *((void *)a1 + 1);
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRelease(v4);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v15 = type metadata accessor for URL(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (((unsigned int (*)(char *, uint64_t))v17)(&a1[v13], 1LL))
  {
    if (v17(&a2[v13], 1LL, v15))
    {
      uint64_t v6 = sub_5150(&qword_D7378);
      memcpy(&a1[v13], &a2[v13], *(void *)(*(void *)(v6 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void))(v16 + 32))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(&a1[v13], 0LL, 1LL, v15);
    }
  }

  else if (v17(&a2[v13], 1LL, v15))
  {
    (*(void (**)(void))(v16 + 8))();
    uint64_t v5 = sub_5150(&qword_D7378);
    memcpy(&a1[v13], &a2[v13], *(void *)(*(void *)(v5 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 40))(&a1[v13], &a2[v13], v15);
  }

  uint64_t v7 = &a1[*(int *)(a3 + 24)];
  uint64_t v8 = &a2[*(int *)(a3 + 24)];
  *(void *)uint64_t v7 = *(void *)v8;
  uint64_t v9 = *((void *)v7 + 1);
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t sub_3AE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3AE4C);
}

uint64_t sub_3AE4C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    int v8 = -1;
    if (*(void *)(a1 + 8) < 0x100000000uLL) {
      int v8 = *(void *)(a1 + 8);
    }
    int v3 = v8 - 1;
    if (v8 - 1 < 0) {
      int v3 = -1;
    }
    return (v3 + 1);
  }

  else
  {
    uint64_t v5 = sub_5150(&qword_D7378);
    uint64_t v6 = *(void *)(v5 - 8);
    if (a2 == *(_DWORD *)(v6 + 84)) {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(v6 + 48))(a1 + *(int *)(a3 + 20), a2, v5);
    }
    else {
      __break(1u);
    }
  }

  return v7;
}

uint64_t sub_3AF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3AF60);
}

uint64_t sub_3AF60(uint64_t result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + sub_1D580(v0 + 8) = a2;
  }

  else
  {
    __n128 result = sub_5150(&qword_D7378);
    uint64_t v4 = *(void *)(result - 8);
    if (a3 == *(_DWORD *)(v4 + 84)) {
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v4 + 56))( v5 + *(int *)(a4 + 20),  a2,  a2,  result);
    }
    else {
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_3B018(uint64_t a1)
{
  v6[0] = &unk_B6E78;
  uint64_t v4 = sub_3B0DC(319LL);
  uint64_t v5 = v4;
  if (v1 <= 0x3F)
  {
    v6[1] = *(void *)(v4 - 8) + 64LL;
    void v6[2] = &unk_B6E78;
    swift_initStructMetadata(a1, 256LL, 3LL, v6, a1 + 16);
    return 0LL;
  }

  return v5;
}

uint64_t sub_3B0DC(uint64_t a1)
{
  uint64_t v7 = qword_D7B18;
  if (!qword_D7B18)
  {
    uint64_t v1 = type metadata accessor for URL(255LL);
    unint64_t v5 = type metadata accessor for Optional(a1, v1);
    uint64_t v7 = v5;
    if (!v2)
    {
      unint64_t v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_D7B18);
      return v3;
    }
  }

  return v7;
}

unint64_t sub_3B180()
{
  uint64_t v3 = qword_D7B50;
  if (!qword_D7B50)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___DialogExecutionResult);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7B50);
    return ObjCClassMetadata;
  }

  return v3;
}

unint64_t sub_3B1E4()
{
  uint64_t v3 = qword_D7B58;
  if (!qword_D7B58)
  {
    unint64_t v0 = sub_3B180();
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7B58);
    return WitnessTable;
  }

  return v3;
}

__int128 *sub_3B254()
{
  if (qword_D6858 != -1) {
    swift_once(&qword_D6858, sub_3B478);
  }
  return &xmmword_D9520;
}

__int128 *sub_3B2A8()
{
  if (qword_D6868 != -1) {
    swift_once(&qword_D6868, sub_3B4F8);
  }
  return &xmmword_D9540;
}

__int128 *sub_3B2FC()
{
  if (qword_D6860 != -1) {
    swift_once(&qword_D6860, sub_3B4B8);
  }
  return &xmmword_D9530;
}

__int128 *sub_3B350()
{
  if (qword_D6848 != -1) {
    swift_once(&qword_D6848, sub_3B3F8);
  }
  return &xmmword_D9500;
}

__int128 *sub_3B3A4()
{
  if (qword_D6850 != -1) {
    swift_once(&qword_D6850, sub_3B438);
  }
  return &xmmword_D9510;
}

uint64_t sub_3B3F8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9500 = (__int128)v1;
  return result;
}

uint64_t sub_3B438()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CannedDialog", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9510 = (__int128)v1;
  return result;
}

uint64_t sub_3B478()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalVoiceTrigger", 0xFuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9520 = (__int128)v1;
  return result;
}

uint64_t sub_3B4B8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalAgain", 8uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9530 = (__int128)v1;
  return result;
}

uint64_t sub_3B4F8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SiriSocialConversation", 0x16uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9540 = (__int128)v1;
  return result;
}

uint64_t sub_3B538()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("common_SocialConversation", 0x19uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9550 = (__int128)v1;
  return result;
}

__int128 *sub_3B578()
{
  if (qword_D6870 != -1) {
    swift_once(&qword_D6870, sub_3B538);
  }
  return &xmmword_D9550;
}

uint64_t sub_3B5CC()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("uso_NoEntity", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9560 = (__int128)v1;
  return result;
}

__int128 *sub_3B60C()
{
  if (qword_D6878 != -1) {
    swift_once(&qword_D6878, sub_3B5CC);
  }
  return &xmmword_D9560;
}

uint64_t sub_3B660()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dialog", 6uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9570 = (__int128)v1;
  return result;
}

__int128 *sub_3B6A0()
{
  if (qword_D6880 != -1) {
    swift_once(&qword_D6880, sub_3B660);
  }
  return &xmmword_D9570;
}

uint64_t sub_3B6F4()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dialogId", 8uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9580 = (__int128)v1;
  return result;
}

__int128 *sub_3B734()
{
  if (qword_D6888 != -1) {
    swift_once(&qword_D6888, sub_3B6F4);
  }
  return &xmmword_D9580;
}

void *sub_3B788()
{
  return &unk_B6EA0;
}

void *type metadata accessor for Constants()
{
  return &unk_CCA30;
}

uint64_t sub_3B7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a4;
  v4[15] = a3;
  v4[14] = a2;
  v4[13] = a1;
  v4[4] = v4;
  v4[5] = 0LL;
  v4[6] = 0LL;
  v4[2] = 0LL;
  v4[3] = 0LL;
  v4[12] = 0LL;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[17] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[18] = v6;
  v4[19] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AuthoredFlowDescriptor(0LL);
  v4[20] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[21] = v8;
  uint64_t v9 = *(void *)(v8 + 64);
  v4[22] = v9;
  v4[23] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Donation(0LL);
  _BYTE v4[24] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[25] = v11;
  v4[26] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Interaction(0LL);
  v4[27] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v4[28] = v13;
  uint64_t v15 = *(void *)(v13 + 64);
  v4[29] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[30] = swift_task_alloc((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[5] = a1;
  v4[6] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return swift_task_switch(sub_3B950, 0LL);
}

uint64_t sub_3B950()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[14];
  v0[4] = v0;
  uint64_t v52 = sub_3BFB4(v3, v2, v1);
  if (v52)
  {
    uint64_t v50 = *(void *)(v53 + 240);
    uint64_t v38 = *(void *)(v53 + 232);
    uint64_t v49 = *(void *)(v53 + 224);
    uint64_t v51 = *(void *)(v53 + 216);
    uint64_t v47 = *(void *)(v53 + 208);
    uint64_t v46 = *(void *)(v53 + 200);
    uint64_t v48 = *(void *)(v53 + 192);
    uint64_t v43 = *(void *)(v53 + 184);
    uint64_t v40 = *(void *)(v53 + 176);
    uint64_t v42 = *(void *)(v53 + 168);
    uint64_t v44 = *(void *)(v53 + 160);
    uint64_t v37 = *(void *)(v53 + 128);
    uint64_t v36 = *(void *)(v53 + 120);
    uint64_t v39 = *(void *)(v53 + 104);
    *(void *)(v53 + 96) = v52;
    Interaction.init()();
    swift_bridgeObjectRetain(v37);
    uint64_t v4 = Interaction.domain.setter(v36, v37);
    uint64_t v5 = AuthoredFlowDescriptor.flowId.getter(v4);
    Interaction.type.setter(v5);
    Interaction.fields.setter(v52);
    Interaction.isDonatedBySiri.setter(1LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v38, v50, v51);
    uint64_t v6 = sub_3C294();
    Donation.init(interaction:entities:)(v38, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v43, v39, v44);
    uint64_t v7 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v41 = (v7 + 16) & ~v7;
    uint64_t v45 = swift_allocObject(&unk_CCA50, v41 + v40, v7 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v45 + v41, v43, v44);
    Donation.donate(completionHandler:)(sub_41DE0, v45);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v48);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
  }

  else
  {
    uint64_t v8 = *(void *)(v53 + 152);
    uint64_t v28 = *(void *)(v53 + 144);
    uint64_t v29 = *(void *)(v53 + 136);
    uint64_t v9 = sub_AD514();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v8, v9, v29);
    oslog = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    *(void *)(v53 + 56) = 2LL;
    unint64_t v30 = sub_7788();
    unint64_t v31 = sub_77F0();
    unint64_t v11 = sub_7858();
    UnsignedInteger<>.init<A>(_:)( (void *)(v53 + 248),  v53 + 56,  &type metadata for UInt32,  &type metadata for Int,  v30,  v31,  v11);
    uint32_t size = *(_DWORD *)(v53 + 248);
    uint64_t v12 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v35 = _allocateUninitializedArray<A>(_:)(0LL, v12);
    if (os_log_type_enabled(oslog, v33))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v22 = sub_5150(&qword_D6B60);
      uint64_t v24 = sub_74D0(0LL, v22, v22);
      uint64_t v25 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      *(void *)(v53 + 64) = buf;
      *(void *)(v53 + 7sub_4598(v0 + 2) = v24;
      *(void *)(v53 + swift_beginAccess(v0 + 80) = v25;
      sub_7528(0LL, (_BYTE **)(v53 + 64));
      sub_7528(0LL, (_BYTE **)(v53 + 64));
      *(void *)(v53 + 8sub_1D580(v0 + 8) = v35;
      uint64_t v26 = (void *)swift_task_alloc(48LL);
      v26[2] = v53 + 64;
      v26[3] = v53 + 72;
      v26[4] = v53 + 80;
      uint64_t v27 = sub_5150(&qword_D6B78);
      unint64_t v13 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v26, v27, v13);
      swift_task_dealloc(v26);
      _os_log_impl(&dword_0, oslog, v33, "Failed to encode flow variables for persisting", buf, size);
      sub_7580(v24, 0LL);
      sub_7580(v25, 0LL);
      UnsafeMutablePointer.deallocate()();
    }

    swift_bridgeObjectRelease(v35);
    uint64_t v20 = *(void *)(v53 + 152);
    uint64_t v19 = *(void *)(v53 + 144);
    uint64_t v21 = *(void *)(v53 + 136);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  }

  uint64_t v15 = *(void *)(v53 + 232);
  uint64_t v16 = *(void *)(v53 + 208);
  uint64_t v17 = *(void *)(v53 + 184);
  uint64_t v18 = *(void *)(v53 + 152);
  swift_task_dealloc(*(void *)(v53 + 240));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(*(void *)(v53 + 32) + 8LL))();
}

uint64_t sub_3BFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v49 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v32 = __b;
  size_t v34 = 40LL;
  memset(__b, 0, sizeof(__b));
  uint64_t v38 = 0LL;
  uint64_t v39 = 0LL;
  unint64_t v26 = (*(void *)(*(void *)(sub_5150(&qword_D7B68) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v27 = (void *)((char *)v12 - v26);
  uint64_t v49 = v4;
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  uint64_t v28 = type metadata accessor for JSONValue(0LL);
  unint64_t v30 = &type metadata for String;
  unint64_t v31 = &protocol witness table for String;
  uint64_t v46 = Dictionary.init()(v7);
  swift_bridgeObjectRetain(v29);
  os_log_type_t v33 = &v50;
  Dictionary.makeIterator()(v29, v30, (char *)&type metadata for Any + 8, v31);
  uint64_t v8 = v35;
  memcpy(v32, v33, v34);
  for (uint64_t i = v8; ; uint64_t i = v20)
  {
    uint64_t v22 = i;
    uint64_t v9 = sub_5150(&qword_D7B70);
    double v23 = &v41;
    Dictionary.Iterator.next()(v9);
    sub_41E30(v23, &v42);
    if (!v43)
    {
      sub_41E98(__b);
      unint64_t v13 = &v46;
      uint64_t v14 = v46;
      swift_bridgeObjectRetain(v46);
      sub_1B82C(v13);
      return v14;
    }

    uint64_t v17 = v42;
    uint64_t v18 = v43;
    uint64_t v38 = v42;
    uint64_t v39 = v43;
    uint64_t v19 = v40;
    sub_41F14((uint64_t)&v44, (uint64_t)v40);
    uint64_t v10 = v22;
    swift_bridgeObjectRetain(v18);
    sub_3EF1C((uint64_t)v19, v24, v25, v27);
    uint64_t v20 = v10;
    uint64_t v21 = v10;
    if (v10) {
      break;
    }
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 56LL))(v27, 0LL, 1LL);
    uint64_t v15 = v37;
    v37[0] = v17;
    v37[1] = v18;
    sub_5150(&qword_D7B78);
    Dictionary.subscript.setter(v27, v15);
    sub_4598(v40);
    swift_bridgeObjectRelease(v18);
  }

  v12[1] = v21;
  swift_bridgeObjectRelease(v18);
  sub_4598(v40);
  swift_bridgeObjectRelease(v18);
  sub_41E98(__b);
  sub_1B82C(&v46);
  return v16;
}

uint64_t sub_3C294()
{
  uint64_t v2 = sub_41F74(0LL);
  uint64_t v0 = sub_5150(&qword_D7C40);
  return Dictionary.init(dictionaryLiteral:)(v2, &type metadata for String, v0, &protocol witness table for String);
}

uint64_t sub_3C2E0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v127 = a1;
  int v126 = a2;
  uint64_t v125 = a3;
  uint64_t v150 = 0LL;
  char v151 = 0;
  uint64_t v149 = 0LL;
  uint64_t v148 = 0LL;
  uint64_t v118 = 0LL;
  uint64_t v119 = 0LL;
  uint64_t v120 = type metadata accessor for AuthoredFlowDescriptor(0LL);
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v122 = *(void *)(v121 + 64);
  unint64_t v123 = (v122 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v124 = (char *)&v63 - v123;
  uint64_t v128 = type metadata accessor for Logger(v4);
  uint64_t v129 = *(void *)(v128 - 8);
  unint64_t v130 = (*(void *)(v129 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v131 = (char *)&v63 - v130;
  unint64_t v132 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  os_log_type_t v133 = (char *)&v63 - v132;
  uint64_t v150 = v8;
  char v151 = v9 & 1;
  uint64_t v149 = v10;
  if ((v9 & 1) != 0)
  {
    uint64_t v117 = v127;
    uint64_t v38 = v131;
    uint64_t v72 = v127;
    swift_errorRetain(v127);
    uint64_t v148 = v72;
    uint64_t v39 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v38, v39, v128);
    swift_errorRetain(v72);
    uint64_t v79 = 7LL;
    uint64_t v40 = swift_allocObject(&unk_CCF78, 24LL, 7LL);
    uint64_t v80 = v40;
    *(void *)(v40 + swift_beginAccess(v0 + 16) = v72;
    unsigned int v88 = (os_log_s *)Logger.logObject.getter(v40);
    int v89 = static os_log_type_t.error.getter();
    uint64_t v75 = &v146;
    uint64_t v146 = 12LL;
    unint64_t v73 = sub_7788();
    unint64_t v74 = sub_77F0();
    unint64_t v41 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v147, v75, &type metadata for UInt32, &type metadata for Int, v73, v74, v41);
    uint32_t v76 = v147;
    uint64_t v77 = 17LL;
    uint64_t v42 = swift_allocObject(&unk_CCFA0, 17LL, v79);
    uint64_t v43 = v77;
    uint64_t v44 = v79;
    uint64_t v82 = v42;
    *(_BYTE *)(v42 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v45 = swift_allocObject(&unk_CCFC8, v43, v44);
    uint64_t v46 = v79;
    uint64_t v83 = v45;
    *(_BYTE *)(v45 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v78 = 32LL;
    uint64_t v47 = swift_allocObject(&unk_CCFF0, 32LL, v46);
    uint64_t v48 = v78;
    uint64_t v49 = v79;
    uint64_t v50 = v47;
    uint64_t v51 = v80;
    uint64_t v81 = v50;
    *(void *)(v50 + swift_beginAccess(v0 + 16) = sub_1ACC8;
    *(void *)(v50 + 24) = v51;
    uint64_t v52 = swift_allocObject(&unk_CD018, v48, v49);
    uint64_t v53 = v81;
    uint64_t v85 = v52;
    *(void *)(v52 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v52 + 24) = v53;
    uint64_t v87 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v84 = _allocateUninitializedArray<A>(_:)(3LL, v87);
    uint64_t v86 = v54;
    swift_retain();
    uint64_t v55 = v82;
    uint64_t v56 = v86;
    *uint64_t v86 = sub_884C;
    v56[1] = v55;
    swift_retain();
    uint64_t v57 = v83;
    uint64_t v58 = v86;
    v86[2] = sub_884C;
    void v58[3] = v57;
    swift_retain();
    uint64_t v59 = v84;
    uint64_t v60 = v85;
    uint64_t v61 = v86;
    v86[4] = sub_8900;
    v61[5] = v60;
    sub_6648();
    swift_bridgeObjectRelease(v59);
    if (os_log_type_enabled(v88, (os_log_type_t)v89))
    {
      uint64_t v62 = v118;
      uint64_t v65 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v64 = sub_5150(&qword_D6B60);
      uint64_t v66 = sub_74D0(0LL, v64, v64);
      uint64_t v67 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      unint64_t v68 = &v145;
      uint64_t v145 = v65;
      unint64_t v69 = &v144;
      uint64_t v144 = v66;
      uint64_t v70 = &v143;
      uint64_t v143 = v67;
      sub_7528(2LL, &v145);
      sub_7528(1LL, v68);
      uint64_t v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v142 = v82;
      sub_753C(&v141, (uint64_t)v68, (uint64_t)v69, (uint64_t)v70);
      uint64_t v71 = v62;
      if (v62)
      {
        __break(1u);
      }

      else
      {
        uint64_t v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v142 = v83;
        sub_753C(&v141, (uint64_t)&v145, (uint64_t)&v144, (uint64_t)&v143);
        uint64_t v63 = 0LL;
        uint64_t v141 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v142 = v85;
        sub_753C(&v141, (uint64_t)&v145, (uint64_t)&v144, (uint64_t)&v143);
        _os_log_impl(&dword_0, v88, (os_log_type_t)v89, "Failed to donate variable state: %s", v65, v76);
        sub_7580(v66, 0LL);
        sub_7580(v67, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v128);
    return swift_errorRelease(v72);
  }

  else
  {
    unint64_t v11 = v133;
    uint64_t v12 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v11, v12, v128);
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v124, v125, v120);
    uint64_t v13 = *(unsigned __int8 *)(v121 + 80);
    uint64_t v99 = (v13 + 16) & ~v13;
    uint64_t v106 = 7LL;
    uint64_t v107 = swift_allocObject(&unk_CD040, v99 + v122, v13 | 7);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v121 + 32))(v107 + v99, v124, v120);
    id v115 = (os_log_s *)Logger.logObject.getter(v14);
    int v116 = static os_log_type_t.debug.getter();
    uint64_t v102 = &v139;
    uint64_t v139 = 12LL;
    unint64_t v100 = sub_7788();
    unint64_t v101 = sub_77F0();
    unint64_t v15 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v140, v102, &type metadata for UInt32, &type metadata for Int, v100, v101, v15);
    uint32_t v103 = v140;
    uint64_t v104 = 17LL;
    uint64_t v16 = swift_allocObject(&unk_CD068, 17LL, v106);
    uint64_t v17 = v104;
    uint64_t v18 = v106;
    uint64_t v109 = v16;
    *(_BYTE *)(v16 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v19 = swift_allocObject(&unk_CD090, v17, v18);
    uint64_t v20 = v106;
    uint64_t v110 = v19;
    *(_BYTE *)(v19 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v105 = 32LL;
    uint64_t v21 = swift_allocObject(&unk_CD0B8, 32LL, v20);
    uint64_t v22 = v105;
    uint64_t v23 = v106;
    uint64_t v24 = v21;
    uint64_t v25 = v107;
    uint64_t v108 = v24;
    *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_29AF8;
    *(void *)(v24 + 24) = v25;
    uint64_t v26 = swift_allocObject(&unk_CD0E0, v22, v23);
    uint64_t v27 = v108;
    uint64_t v112 = v26;
    *(void *)(v26 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v26 + 24) = v27;
    uint64_t v114 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v111 = _allocateUninitializedArray<A>(_:)(3LL, v114);
    uint64_t v113 = v28;
    swift_retain();
    uint64_t v29 = v109;
    unint64_t v30 = v113;
    void *v113 = sub_884C;
    v30[1] = v29;
    swift_retain();
    uint64_t v31 = v110;
    uint64_t v32 = v113;
    v113[2] = sub_884C;
    v32[3] = v31;
    swift_retain();
    uint64_t v33 = v111;
    uint64_t v34 = v112;
    uint64_t v35 = v113;
    v113[4] = sub_8900;
    v35[5] = v34;
    sub_6648();
    swift_bridgeObjectRelease(v33);
    if (os_log_type_enabled(v115, (os_log_type_t)v116))
    {
      uint64_t v36 = v118;
      uint64_t v92 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v91 = sub_5150(&qword_D6B60);
      uint64_t v93 = sub_74D0(0LL, v91, v91);
      uint64_t v94 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      unint64_t v95 = &v138;
      uint64_t v138 = v92;
      unsigned int v96 = &v137;
      uint64_t v137 = v93;
      uint64_t v97 = &v136;
      uint64_t v136 = v94;
      sub_7528(2LL, &v138);
      sub_7528(1LL, v95);
      uint64_t v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v135 = v109;
      sub_753C(&v134, (uint64_t)v95, (uint64_t)v96, (uint64_t)v97);
      uint64_t v98 = v36;
      if (v36)
      {
        __break(1u);
      }

      else
      {
        uint64_t v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v135 = v110;
        sub_753C(&v134, (uint64_t)&v138, (uint64_t)&v137, (uint64_t)&v136);
        uint64_t v90 = 0LL;
        uint64_t v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v135 = v112;
        sub_753C(&v134, (uint64_t)&v138, (uint64_t)&v137, (uint64_t)&v136);
        _os_log_impl(&dword_0, v115, (os_log_type_t)v116, "Successfully donated variable state for %s", v92, v103);
        sub_7580(v93, 0LL);
        sub_7580(v94, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v133, v128);
  }

uint64_t sub_3D030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  v4[14] = a3;
  v4[13] = a1;
  v4[4] = v4;
  v4[5] = 0LL;
  v4[6] = 0LL;
  v4[2] = 0LL;
  v4[3] = 0LL;
  v4[7] = 0LL;
  v4[9] = 0LL;
  uint64_t v5 = type metadata accessor for AuthoredFlowDescriptor(0LL);
  v4[16] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[17] = v6;
  uint64_t v7 = *(void *)(v6 + 64);
  v4[18] = v7;
  v4[19] = swift_task_alloc((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  v4[20] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[21] = v9;
  uint64_t v18 = *(void *)(v9 + 64);
  v4[22] = swift_task_alloc((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[23] = swift_task_alloc((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  _BYTE v4[24] = swift_task_alloc((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_5150(&qword_D7B88);
  v4[25] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Interaction(0LL);
  v4[26] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[27] = v12;
  uint64_t v19 = *(void *)(v12 + 64);
  v4[28] = v19;
  v4[29] = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[30] = swift_task_alloc((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for InteractionQuery(0LL);
  v4[31] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v4[32] = v14;
  uint64_t v20 = *(void *)(v14 + 64);
  v4[33] = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[34] = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v4[35] = swift_task_alloc((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for InteractionStore(0LL);
  v4[36] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v4[37] = v16;
  v4[38] = swift_task_alloc((*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v4[5] = a1;
  v4[6] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return swift_task_switch(sub_3D28C, 0LL);
}

uint64_t sub_3D28C()
{
  *(void *)(v0 + 3sub_4598(v0 + 2) = v0;
  uint64_t v1 = static InteractionStore.inProcess()();
  uint64_t v116 = v118[38];
  uint64_t v113 = v118[34];
  uint64_t v111 = v118[33];
  uint64_t v110 = v118[32];
  uint64_t v114 = v118[31];
  uint64_t v109 = v118[15];
  uint64_t v108 = v118[14];
  InteractionQuery.init()(v1);
  swift_bridgeObjectRetain(v109);
  InteractionQuery.filter(domain:)(v108, v109);
  swift_bridgeObjectRelease(v109);
  id v115 = *(uint64_t (**)(uint64_t, uint64_t))(v110 + 8);
  uint64_t v2 = v115(v111, v114);
  uint64_t v3 = AuthoredFlowDescriptor.flowId.getter(v2);
  uint64_t v112 = v4;
  InteractionQuery.filter(type:)(v3);
  swift_bridgeObjectRelease(v112);
  v115(v113, v114);
  uint64_t v117 = InteractionQuery.fetchAll(_:)(v116);
  uint64_t v105 = v118[27];
  uint64_t v106 = v118[26];
  uint64_t v107 = v118[25];
  v115(v118[35], v118[31]);
  v118[9] = v117;
  swift_bridgeObjectRetain(v117);
  v118[10] = v117;
  uint64_t v104 = sub_5150(&qword_D7B90);
  unint64_t v5 = sub_424FC();
  BidirectionalCollection.last.getter(v104, v5);
  sub_1B82C(v118 + 10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v107, 1LL, v106) == 1)
  {
    uint64_t v13 = v118[23];
    uint64_t v43 = v118[21];
    uint64_t v44 = v118[20];
    uint64_t v49 = v118[19];
    uint64_t v46 = v118[18];
    uint64_t v48 = v118[17];
    uint64_t v50 = v118[16];
    uint64_t v45 = v118[13];
    sub_4256C(v118[25]);
    uint64_t v14 = sub_AD514();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v13, v14, v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v45, v50);
    uint64_t v15 = *(unsigned __int8 *)(v48 + 80);
    uint64_t v47 = (v15 + 16) & ~v15;
    uint64_t v54 = swift_allocObject(&unk_CCB68, v47 + v46, v15 | 7);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v54 + v47, v49, v50);
    log = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v63 = static os_log_type_t.debug.getter();
    v118[11] = 12LL;
    unint64_t v51 = sub_7788();
    unint64_t v52 = sub_77F0();
    unint64_t v17 = sub_7858();
    UnsignedInteger<>.init<A>(_:)( (void *)((char *)v118 + 316),  v118 + 11,  &type metadata for UInt32,  &type metadata for Int,  v51,  v52,  v17);
    uint32_t v53 = *((_DWORD *)v118 + 79);
    uint64_t v56 = swift_allocObject(&unk_CCB90, 17LL, 7LL);
    *(_BYTE *)(v56 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v57 = swift_allocObject(&unk_CCBB8, 17LL, 7LL);
    *(_BYTE *)(v57 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v55 = swift_allocObject(&unk_CCBE0, 32LL, 7LL);
    *(void *)(v55 + swift_beginAccess(v0 + 16) = sub_29AF8;
    *(void *)(v55 + 24) = v54;
    uint64_t v59 = swift_allocObject(&unk_CCC08, 32LL, 7LL);
    *(void *)(v59 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v59 + 24) = v55;
    uint64_t v61 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v58 = _allocateUninitializedArray<A>(_:)(3LL, v61);
    uint64_t v60 = v18;
    swift_retain();
    *uint64_t v60 = sub_884C;
    v60[1] = v56;
    swift_retain();
    v60[2] = sub_884C;
    v60[3] = v57;
    swift_retain();
    v60[4] = sub_8900;
    v60[5] = v59;
    sub_6648();
    swift_bridgeObjectRelease(v58);
    if (os_log_type_enabled(log, v63))
    {
      uint64_t v40 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v39 = sub_5150(&qword_D6B60);
      uint64_t v41 = sub_74D0(0LL, v39, v39);
      uint64_t v42 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v119 = v40;
      uint64_t v120 = v41;
      uint64_t v121 = v42;
      sub_7528(2LL, &v119);
      sub_7528(1LL, &v119);
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v123 = v56;
      sub_753C(&v122, (uint64_t)&v119, (uint64_t)&v120, (uint64_t)&v121);
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v123 = v57;
      sub_753C(&v122, (uint64_t)&v119, (uint64_t)&v120, (uint64_t)&v121);
      uint64_t v122 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v123 = v59;
      sub_753C(&v122, (uint64_t)&v119, (uint64_t)&v120, (uint64_t)&v121);
      _os_log_impl(&dword_0, log, v63, "No previously donated variable state found for %s", v40, v53);
      sub_7580(v41, 0LL);
      sub_7580(v42, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    uint64_t v36 = v118[38];
    uint64_t v35 = v118[37];
    uint64_t v37 = v118[36];
    uint64_t v33 = v118[23];
    uint64_t v32 = v118[21];
    uint64_t v34 = v118[20];

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    uint64_t v19 = sub_5150(&qword_D7370);
    uint64_t v20 = _allocateUninitializedArray<A>(_:)(0LL, v19);
    uint64_t v38 = Dictionary.init(dictionaryLiteral:)( v20,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    swift_bridgeObjectRelease(v117);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
    uint64_t v70 = v38;
  }

  else
  {
    uint64_t v84 = v118[30];
    uint64_t v88 = v118[29];
    uint64_t v86 = v118[28];
    uint64_t v85 = v118[27];
    uint64_t v89 = v118[26];
    uint64_t v6 = v118[24];
    uint64_t v82 = v118[21];
    uint64_t v83 = v118[20];
    uint64_t v90 = *(void (**)(void))(v85 + 32);
    v90();
    uint64_t v7 = sub_AD514();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v6, v7, v83);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v88, v84, v89);
    uint64_t v8 = *(unsigned __int8 *)(v85 + 80);
    uint64_t v87 = (v8 + 16) & ~v8;
    uint64_t v94 = swift_allocObject(&unk_CCC30, v87 + v86, v8 | 7);
    uint64_t v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v90)(v94 + v87, v88, v89);
    oslog = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v103 = static os_log_type_t.debug.getter();
    v118[12] = 12LL;
    unint64_t v91 = sub_7788();
    unint64_t v92 = sub_77F0();
    unint64_t v10 = sub_7858();
    UnsignedInteger<>.init<A>(_:)( v118 + 40,  v118 + 12,  &type metadata for UInt32,  &type metadata for Int,  v91,  v92,  v10);
    uint32_t size = *((_DWORD *)v118 + 80);
    uint64_t v96 = swift_allocObject(&unk_CCC58, 17LL, 7LL);
    *(_BYTE *)(v96 + swift_beginAccess(v0 + 16) = 0;
    uint64_t v97 = swift_allocObject(&unk_CCC80, 17LL, 7LL);
    *(_BYTE *)(v97 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v95 = swift_allocObject(&unk_CCCA8, 32LL, 7LL);
    *(void *)(v95 + swift_beginAccess(v0 + 16) = sub_42784;
    *(void *)(v95 + 24) = v94;
    uint64_t v99 = swift_allocObject(&unk_CCCD0, 32LL, 7LL);
    *(void *)(v99 + swift_beginAccess(v0 + 16) = sub_42840;
    *(void *)(v99 + 24) = v95;
    uint64_t v101 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v98 = _allocateUninitializedArray<A>(_:)(3LL, v101);
    unint64_t v100 = v11;
    swift_retain();
    *unint64_t v100 = sub_884C;
    v100[1] = v96;
    swift_retain();
    v100[2] = sub_884C;
    v100[3] = v97;
    swift_retain();
    v100[4] = sub_42888;
    v100[5] = v99;
    sub_6648();
    swift_bridgeObjectRelease(v98);
    if (os_log_type_enabled(oslog, v103))
    {
      buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v78 = sub_5150(&qword_D6B60);
      uint64_t v80 = sub_74D0(0LL, v78, v78);
      uint64_t v81 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v124 = buf;
      uint64_t v125 = v80;
      uint64_t v126 = v81;
      sub_7528(0LL, &v124);
      sub_7528(1LL, &v124);
      uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v128 = v96;
      sub_753C(&v127, (uint64_t)&v124, (uint64_t)&v125, (uint64_t)&v126);
      uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v128 = v97;
      sub_753C(&v127, (uint64_t)&v124, (uint64_t)&v125, (uint64_t)&v126);
      uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_42888;
      uint64_t v128 = v99;
      sub_753C(&v127, (uint64_t)&v124, (uint64_t)&v125, (uint64_t)&v126);
      _os_log_impl(&dword_0, oslog, v103, "Retrieved donated state for %ld variable(s)", buf, size);
      sub_7580(v80, 0LL);
      sub_7580(v81, 0LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    uint64_t v72 = v118[24];
    uint64_t v71 = v118[21];
    uint64_t v73 = v118[20];
    uint64_t v75 = v118[15];
    uint64_t v74 = v118[14];

    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v72, v73);
    uint64_t v76 = Interaction.fields.getter(v12);
    uint64_t v77 = sub_3EA6C(v76, v74, v75);
    uint64_t v68 = v118[38];
    uint64_t v67 = v118[37];
    uint64_t v69 = v118[36];
    uint64_t v65 = v118[30];
    uint64_t v64 = v118[27];
    uint64_t v66 = v118[26];
    swift_bridgeObjectRelease(v76);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v66);
    swift_bridgeObjectRelease(v117);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v69);
    uint64_t v70 = v77;
  }

  uint64_t v22 = v118[35];
  uint64_t v23 = v118[34];
  uint64_t v24 = v118[33];
  uint64_t v25 = v118[30];
  uint64_t v26 = v118[29];
  uint64_t v27 = v118[25];
  uint64_t v28 = v118[24];
  uint64_t v29 = v118[23];
  uint64_t v30 = v118[22];
  uint64_t v31 = v118[19];
  swift_task_dealloc(v118[38]);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(uint64_t))(v118[4] + 8LL))(v70);
}

uint64_t sub_3EA08()
{
  uint64_t v2 = Interaction.fields.getter();
  uint64_t v0 = type metadata accessor for JSONValue(0LL);
  uint64_t v3 = Dictionary.count.getter(v2, &type metadata for String, v0, &protocol witness table for String);
  swift_bridgeObjectRelease(v2);
  return v3;
}

uint64_t sub_3EA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v54 = 0LL;
  uint64_t v53 = 0LL;
  uint64_t v51 = 0LL;
  uint64_t v52 = 0LL;
  uint64_t v50 = 0LL;
  uint64_t v40 = __b;
  size_t v42 = 40LL;
  memset(__b, 0, sizeof(__b));
  uint64_t v47 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t v38 = type metadata accessor for JSONValue(0LL);
  uint64_t v27 = *(void *)(v38 - 8);
  unint64_t v28 = (*(void *)(v27 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v29 = (uint64_t)&v16 - v28;
  uint64_t v54 = (char *)&v16 - v28;
  unint64_t v32 = (*(void *)(*(void *)(sub_5150(&qword_D7BA8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  uint64_t v33 = (_OWORD *)((char *)&v16 - v32);
  unint64_t v34 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v5);
  uint64_t v35 = (_OWORD *)((char *)&v16 - v34);
  uint64_t v53 = v8;
  uint64_t v51 = v9;
  uint64_t v52 = v10;
  uint64_t v37 = &type metadata for String;
  uint64_t v39 = &protocol witness table for String;
  uint64_t v50 = Dictionary.init()(v7);
  swift_bridgeObjectRetain(v36);
  uint64_t v41 = &v55;
  Dictionary.makeIterator()(v36, v37, v38, v39);
  uint64_t v11 = v43;
  memcpy(v40, v41, v42);
  for (uint64_t i = v11; ; uint64_t i = v23)
  {
    uint64_t v25 = i;
    uint64_t v12 = sub_5150(&qword_D7BB0);
    Dictionary.Iterator.next()(v12);
    sub_42950(v33, v35);
    uint64_t v26 = sub_5150(&qword_D7BB8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t))(*(void *)(v26 - 8) + 48LL))(v35, 1LL) == 1)
    {
      sub_41E98(__b);
      unint64_t v17 = &v50;
      uint64_t v18 = v50;
      swift_bridgeObjectRetain(v50);
      sub_1B82C(v17);
      return v18;
    }

    uint64_t v21 = *(void *)v35;
    uint64_t v22 = *((void *)v35 + 1);
    uint64_t v13 = (char *)v35 + *(int *)(v26 + 48);
    uint64_t v47 = v21;
    uint64_t v48 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v13, v38);
    uint64_t v14 = v25;
    swift_bridgeObjectRetain(v22);
    sub_3FBBC(v29, v30, v31, (uint64_t)v46);
    uint64_t v23 = v14;
    uint64_t v24 = v14;
    if (v14) {
      break;
    }
    uint64_t v19 = v45;
    v45[0] = v21;
    v45[1] = v22;
    sub_5150(&qword_D7368);
    Dictionary.subscript.setter(v46, v19);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v38);
    swift_bridgeObjectRelease(v22);
  }

  uint64_t v16 = v24;
  swift_bridgeObjectRelease(v22);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v38);
  swift_bridgeObjectRelease(v22);
  sub_41E98(__b);
  sub_1B82C(&v50);
  return v20;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_3EED0()
{
}

uint64_t sub_3EEF4()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1)._countAndFlagsBits;
}

uint64_t sub_3EF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v119 = a4;
  uint64_t v130 = a1;
  uint64_t v129 = a2;
  uint64_t v128 = a3;
  uint64_t v177 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v176 = 0LL;
  uint64_t v156 = 0LL;
  uint64_t v155 = 0LL;
  memset(v154, 0, sizeof(v154));
  uint64_t v147 = 0LL;
  uint64_t v148 = 0LL;
  uint64_t v145 = 0LL;
  uint64_t v144 = 0LL;
  v143[0] = 0LL;
  v143[1] = 0LL;
  uint64_t v139 = 0LL;
  uint64_t v140 = 0LL;
  char v138 = 0;
  uint64_t v137 = 0LL;
  uint64_t v136 = 0LL;
  uint64_t v125 = 0LL;
  uint64_t v121 = type metadata accessor for Logger(0LL);
  uint64_t v122 = *(void *)(v121 - 8);
  unint64_t v123 = (*(void *)(v122 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v124 = (char *)v40 - v123;
  unint64_t v126 = (*(void *)(*(void *)(sub_5150(&qword_D7B68) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v127 = (char *)v40 - v126;
  uint64_t v131 = type metadata accessor for JSONValue(v6);
  uint64_t v132 = *(void *)(v131 - 8);
  unint64_t v133 = (*(void *)(v132 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v134 = (char *)v40 - v133;
  uint64_t v177 = v8;
  uint64_t v175 = v9;
  uint64_t v176 = v10;
  uint64_t v135 = v174;
  sub_9C90(v8, (uint64_t)v174);
  if ((swift_dynamicCast(&v173, v135, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL) & 1) != 0)
  {
    uint64_t v117 = v173;
    int v118 = 0;
  }

  else
  {
    uint64_t v117 = 0LL;
    int v118 = 1;
  }

  uint64_t v116 = v117;
  if ((v118 & 1) != 0)
  {
    uint64_t v113 = v172;
    sub_9C90(v130, (uint64_t)v172);
    if ((swift_dynamicCast(&v171, v113, (char *)&type metadata for Any + 8, &type metadata for Double, 6LL) & 1) != 0)
    {
      uint64_t v111 = v171;
      int v112 = 0;
    }

    else
    {
      uint64_t v111 = 0LL;
      int v112 = 1;
    }

    uint64_t v110 = v111;
    if ((v112 & 1) != 0)
    {
      uint64_t v108 = v170;
      sub_9C90(v130, (uint64_t)v170);
      else {
        int v107 = 2;
      }
      int v106 = v107;
      if (v107 == 2)
      {
        uint64_t v104 = v168;
        sub_9C90(v130, (uint64_t)v168);
        if ((swift_dynamicCast(v167, v104, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          uint64_t v102 = v167[0];
          uint64_t v103 = v167[1];
        }

        else
        {
          uint64_t v102 = 0LL;
          uint64_t v103 = 0LL;
        }

        uint64_t v100 = v103;
        uint64_t v101 = v102;
        if (v103)
        {
          uint64_t v98 = v101;
          uint64_t v99 = v100;
          uint64_t v97 = v100;
          uint64_t v96 = v101;
          uint64_t v139 = v101;
          uint64_t v140 = v100;
          swift_bridgeObjectRetain(v100);
          uint64_t v15 = v119;
          uint64_t v16 = v132;
          uint64_t v17 = v97;
          *uint64_t v119 = v96;
          v15[1] = v17;
          (*(void (**)(void))(v16 + 104))();
          swift_bridgeObjectRelease(v97);
          uint64_t result = v120;
          uint64_t v114 = v120;
        }

        else
        {
          uint64_t v94 = v166;
          sub_9C90(v130, (uint64_t)v166);
          uint64_t v95 = sub_5150(&qword_D7BC0);
          else {
            uint64_t v93 = 0LL;
          }
          uint64_t v92 = v93;
          if (v93)
          {
            uint64_t v91 = v92;
            uint64_t v89 = v92;
            uint64_t v145 = v92;
            uint64_t v144 = Array.init()(v131);
            swift_bridgeObjectRetain(v89);
            v142[4] = v89;
            unint64_t v18 = sub_42AB0();
            Collection<>.makeIterator()(v143, v95, v18);
            for (uint64_t i = v120; ; uint64_t i = v86)
            {
              uint64_t v88 = i;
              uint64_t v19 = sub_5150(&qword_D7BD8);
              IndexingIterator.next()(v142, v19);
              if (!v142[3])
              {
                sub_1B82C(v143);
                uint64_t v84 = &v144;
                uint64_t v83 = v144;
                swift_bridgeObjectRetain(v144);
                uint64_t v22 = v132;
                *uint64_t v119 = v83;
                (*(void (**)(void))(v22 + 104))();
                sub_1B82C(v84);
                swift_bridgeObjectRelease(v89);
                uint64_t result = v88;
                uint64_t v114 = v88;
                return result;
              }

              uint64_t v85 = v141;
              sub_41F14((uint64_t)v142, (uint64_t)v141);
              uint64_t v20 = v88;
              sub_3EF1C(v85, v129, v128);
              uint64_t v86 = v20;
              uint64_t v87 = v20;
              if (v20) {
                break;
              }
              uint64_t v21 = sub_5150(&qword_D7BE0);
              Array.append(_:)(v134, v21);
              sub_4598(v141);
            }

            uint64_t v41 = v87;
            sub_4598(v141);
            sub_1B82C(v143);
            sub_1B82C(&v144);
            uint64_t result = swift_bridgeObjectRelease(v89);
            uint64_t v43 = v41;
          }

          else
          {
            uint64_t v82 = v164;
            sub_9C90(v130, (uint64_t)v164);
            uint64_t v23 = sub_5150(&qword_D7368);
            else {
              uint64_t v81 = 0LL;
            }
            uint64_t v80 = v81;
            if (v81)
            {
              uint64_t v79 = v80;
              uint64_t v74 = v80;
              uint64_t v156 = v80;
              uint64_t v75 = &type metadata for String;
              uint64_t v76 = &protocol witness table for String;
              uint64_t v155 = Dictionary.init()(v24);
              swift_bridgeObjectRetain(v74);
              uint64_t v77 = &v178;
              Dictionary.makeIterator()(v74, v75, (char *)&type metadata for Any + 8, v76);
              memcpy(v154, v77, sizeof(v154));
              for (uint64_t j = v120; ; uint64_t j = v70)
              {
                uint64_t v72 = j;
                uint64_t v25 = sub_5150(&qword_D7B70);
                uint64_t v73 = &v150;
                Dictionary.Iterator.next()(v25);
                sub_41E30(v73, &v151);
                if (!v152)
                {
                  sub_41E98(v154);
                  uint64_t v65 = &v155;
                  uint64_t v64 = v155;
                  swift_bridgeObjectRetain(v155);
                  uint64_t v27 = v132;
                  *uint64_t v119 = v64;
                  (*(void (**)(void))(v27 + 104))();
                  sub_1B82C(v65);
                  swift_bridgeObjectRelease(v74);
                  uint64_t result = v72;
                  uint64_t v114 = v72;
                  return result;
                }

                uint64_t v67 = v151;
                uint64_t v68 = v152;
                uint64_t v147 = v151;
                uint64_t v148 = v152;
                uint64_t v69 = v149;
                sub_41F14((uint64_t)&v153, (uint64_t)v149);
                uint64_t v26 = v72;
                swift_bridgeObjectRetain(v68);
                sub_3EF1C(v69, v129, v128);
                uint64_t v70 = v26;
                uint64_t v71 = v26;
                if (v26) {
                  break;
                }
                (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v127, 0LL, 1LL, v131);
                uint64_t v66 = v146;
                v146[0] = v67;
                v146[1] = v68;
                sub_5150(&qword_D7B78);
                Dictionary.subscript.setter(v127, v66);
                sub_4598(v149);
                swift_bridgeObjectRelease(v68);
              }

              v40[1] = v71;
              swift_bridgeObjectRelease(v68);
              sub_4598(v149);
              swift_bridgeObjectRelease(v68);
              sub_41E98(v154);
              sub_1B82C(&v155);
              return swift_bridgeObjectRelease(v74);
            }

            else
            {
              unint64_t v28 = v124;
              uint64_t v29 = sub_AD514();
              uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 16))(v28, v29, v121);
              uint64_t v62 = (os_log_s *)Logger.logObject.getter(v30);
              int v61 = static os_log_type_t.error.getter();
              uint64_t v59 = &v161;
              uint64_t v161 = 2LL;
              unint64_t v57 = sub_7788();
              unint64_t v58 = sub_77F0();
              unint64_t v31 = sub_7858();
              UnsignedInteger<>.init<A>(_:)( &v162,  v59,  &type metadata for UInt32,  &type metadata for Int,  v57,  v58,  v31);
              uint32_t v60 = v162;
              uint64_t v32 = sub_5150((uint64_t *)&unk_D6B50);
              uint64_t v63 = _allocateUninitializedArray<A>(_:)(0LL, v32);
              if (os_log_type_enabled(v62, (os_log_type_t)v61))
              {
                uint64_t v47 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
                uint64_t v45 = sub_5150(&qword_D6B60);
                uint64_t v46 = 0LL;
                uint64_t v48 = sub_74D0(0LL, v45, v45);
                uint64_t v49 = sub_74D0(v46, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                uint64_t v53 = &v160;
                uint64_t v160 = v47;
                uint64_t v54 = &v159;
                uint64_t v159 = v48;
                uint64_t v51 = &v158;
                uint64_t v158 = v49;
                unsigned int v50 = 0;
                sub_7528(0LL, &v160);
                sub_7528(v50, v53);
                uint64_t v157 = v63;
                uint64_t v52 = v40;
                __chkstk_darwin(v33);
                unint64_t v34 = v54;
                uint64_t v35 = &v40[-6];
                char v55 = &v40[-6];
                v35[2] = v53;
                v35[3] = v34;
                v35[4] = v36;
                uint64_t v56 = sub_5150(&qword_D6B78);
                unint64_t v37 = sub_8CF4();
                uint64_t v38 = v120;
                Sequence.forEach(_:)(sub_8CC8, v55, v56, v37);
                if (v38)
                {
                  __break(1u);
                }

                else
                {
                  _os_log_impl( &dword_0,  v62,  (os_log_type_t)v61,  "Unable to convert [String: Any] to [String: JSONValue]",  v47,  v60);
                  uint64_t v44 = 0LL;
                  sub_7580(v48, 0LL);
                  sub_7580(v49, v44);
                  UnsafeMutablePointer.deallocate()();
                  swift_bridgeObjectRelease(v63);
                }
              }

              else
              {
                swift_bridgeObjectRelease(v63);
              }

              (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v121);
              unint64_t v39 = sub_42A44();
              uint64_t v42 = swift_allocError(&unk_CCED8, v39, 0LL, 0LL);
              swift_willThrow(v42);
              uint64_t result = v42;
              uint64_t v43 = v42;
            }
          }
        }
      }

      else
      {
        int v105 = v106;
        uint64_t v14 = v132;
        char v138 = v106 & 1;
        *(_BYTE *)uint64_t v119 = v106 & 1;
        (*(void (**)(void))(v14 + 104))();
        uint64_t result = v120;
        uint64_t v114 = v120;
      }
    }

    else
    {
      uint64_t v109 = v110;
      uint64_t v13 = v132;
      uint64_t v137 = v110;
      *uint64_t v119 = v110;
      (*(void (**)(void))(v13 + 104))();
      uint64_t result = v120;
      uint64_t v114 = v120;
    }
  }

  else
  {
    uint64_t v115 = v116;
    uint64_t v11 = v132;
    uint64_t v136 = v116;
    *uint64_t v119 = v116;
    (*(void (**)(void))(v11 + 104))();
    uint64_t result = v120;
    uint64_t v114 = v120;
  }

  return result;
}

uint64_t sub_3FBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v133 = a4;
  uint64_t v146 = a1;
  uint64_t v154 = a2;
  uint64_t v155 = a3;
  uint64_t v188 = 0LL;
  uint32_t v187 = 0LL;
  uint64_t v186 = 0LL;
  uint64_t v184 = 0LL;
  uint64_t v185 = 0LL;
  uint64_t v176 = 0LL;
  uint64_t v175 = 0LL;
  memset(__b, 0, sizeof(__b));
  uint64_t v172 = 0LL;
  uint64_t v173 = 0LL;
  uint64_t v169 = 0LL;
  uint64_t v168 = 0LL;
  v167[0] = 0LL;
  v167[1] = 0LL;
  uint64_t v164 = 0LL;
  uint64_t v165 = 0LL;
  char v163 = 0;
  uint64_t v162 = 0LL;
  uint64_t v161 = 0LL;
  uint64_t v143 = 0LL;
  uint64_t v135 = type metadata accessor for Logger(0LL);
  uint64_t v136 = *(void *)(v135 - 8);
  unint64_t v137 = (*(void *)(v136 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  char v138 = (char *)&v76 - v137;
  unint64_t v139 = (*(void *)(*(void *)(sub_5150(&qword_D7BA8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v140 = (_OWORD *)((char *)&v76 - v139);
  unint64_t v141 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v142 = (_OWORD *)((char *)&v76 - v141);
  unint64_t v144 = (*(void *)(*(void *)(sub_5150(&qword_D7B68) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v145 = (uint64_t *)((char *)&v76 - v144);
  uint64_t v158 = type metadata accessor for JSONValue(v9);
  uint64_t v157 = *(void *)(v158 - 8);
  uint64_t v152 = *(void *)(v157 + 64);
  unint64_t v147 = (v152 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v148 = (char *)&v76 - v147;
  unint64_t v149 = (v152 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v12 = __chkstk_darwin(v11);
  uint64_t v150 = (char *)&v76 - v149;
  uint64_t v188 = (char *)&v76 - v149;
  unint64_t v151 = (v152 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v12);
  uint64_t v153 = (char *)&v76 - v151;
  uint32_t v187 = (char *)&v76 - v151;
  double v14 = __chkstk_darwin(v13);
  uint64_t v159 = (char *)&v76 - v15;
  uint64_t v186 = v16;
  uint64_t v184 = v154;
  uint64_t v185 = v155;
  uint64_t v156 = *(void (**)(double))(v17 + 16);
  v156(v14);
  int v160 = (*(uint64_t (**)(char *, uint64_t))(v157 + 88))(v159, v158);
  if (v160 == enum case for JSONValue.BOOL(_:))
  {
    (*(void (**)(char *, uint64_t))(v157 + 96))(v159, v158);
    uint64_t v23 = (_BYTE *)v133;
    uint64_t result = v134;
    char v24 = *v159;
    char v163 = *v159 & 1;
    *(void *)(v133 + 24) = &type metadata for Bool;
    *uint64_t v23 = v24 & 1;
    uint64_t v132 = result;
  }

  else if (v160 == enum case for JSONValue.int(_:))
  {
    (*(void (**)(char *, uint64_t))(v157 + 96))(v159, v158);
    unint64_t v18 = (void *)v133;
    uint64_t result = v134;
    uint64_t v161 = *(void *)v159;
    uint64_t v20 = v161;
    *(void *)(v133 + 24) = &type metadata for Int;
    *unint64_t v18 = v20;
    uint64_t v132 = result;
  }

  else if (v160 == enum case for JSONValue.double(_:))
  {
    (*(void (**)(char *, uint64_t))(v157 + 96))(v159, v158);
    uint64_t v21 = (void *)v133;
    uint64_t result = v134;
    uint64_t v162 = *(void *)v159;
    uint64_t v22 = v162;
    *(void *)(v133 + 24) = &type metadata for Double;
    *uint64_t v21 = v22;
    uint64_t v132 = result;
  }

  else if (v160 == enum case for JSONValue.string(_:))
  {
    (*(void (**)(char *, uint64_t))(v157 + 96))(v159, v158);
    uint64_t v131 = *(void *)v159;
    uint64_t v130 = *((void *)v159 + 1);
    uint64_t v164 = v131;
    uint64_t v165 = v130;
    swift_bridgeObjectRetain(v130);
    uint64_t v25 = v130;
    uint64_t v26 = v131;
    uint64_t v27 = (void *)v133;
    *(void *)(v133 + 24) = &type metadata for String;
    *uint64_t v27 = v26;
    v27[1] = v25;
    swift_bridgeObjectRelease(v25);
    uint64_t result = v134;
    uint64_t v132 = v134;
  }

  else if (v160 == enum case for JSONValue.array(_:))
  {
    (*(void (**)(char *, uint64_t))(v157 + 96))(v159, v158);
    uint64_t v127 = *(void *)v159;
    uint64_t v169 = v127;
    uint64_t v168 = Array.init()((char *)&type metadata for Any + 8);
    swift_bridgeObjectRetain(v127);
    void v166[4] = v127;
    uint64_t v128 = sub_5150(&qword_D7BE0);
    unint64_t v28 = sub_42D8C();
    Collection<>.makeIterator()(v167, v128, v28);
    for (uint64_t i = v134; ; uint64_t i = v124)
    {
      uint64_t v126 = i;
      uint64_t v29 = sub_5150(&qword_D7BF8);
      IndexingIterator.next()(v145, v29);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v157 + 48))(v145, 1LL, v158) == 1)
      {
        sub_1B82C(v167);
        unint64_t v123 = &v168;
        uint64_t v122 = v168;
        swift_bridgeObjectRetain(v168);
        uint64_t v32 = sub_5150(&qword_D7BC0);
        double v33 = (uint64_t *)v133;
        uint64_t v34 = v122;
        uint64_t v35 = v32;
        uint64_t v36 = v123;
        *(void *)(v133 + 24) = v35;
        *double v33 = v34;
        sub_1B82C(v36);
        swift_bridgeObjectRelease(v127);
        uint64_t result = v126;
        uint64_t v132 = v126;
        return result;
      }

      (*(void (**)(char *, void *, uint64_t))(v157 + 32))(v153, v145, v158);
      uint64_t v30 = v126;
      sub_3FBBC(v166, v153, v154, v155);
      uint64_t v124 = v30;
      uint64_t v125 = v30;
      if (v30) {
        break;
      }
      uint64_t v31 = sub_5150(&qword_D7BC0);
      Array.append(_:)(v166, v31);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v153, v158);
    }

    uint64_t v77 = v125;
    (*(void (**)(char *, uint64_t))(v157 + 8))(v153, v158);
    sub_1B82C(v167);
    sub_1B82C(&v168);
    uint64_t result = swift_bridgeObjectRelease(v127);
    uint64_t v79 = v77;
  }

  else if (v160 == enum case for JSONValue.object(_:))
  {
    double v37 = (*(double (**)(char *, uint64_t))(v157 + 96))(v159, v158);
    uint64_t v117 = *(void *)v159;
    uint64_t v176 = v117;
    int v118 = &type metadata for String;
    uint64_t v119 = &protocol witness table for String;
    uint64_t v175 = Dictionary.init()(v37);
    swift_bridgeObjectRetain(v117);
    uint64_t v120 = &v189;
    Dictionary.makeIterator()(v117, v118, v158, v119);
    memcpy(__b, v120, sizeof(__b));
    for (uint64_t j = v134; ; uint64_t j = v113)
    {
      uint64_t v115 = j;
      uint64_t v38 = sub_5150(&qword_D7BB0);
      Dictionary.Iterator.next()(v38);
      sub_42950(v140, v142);
      uint64_t v116 = sub_5150(&qword_D7BB8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t))(*(void *)(v116 - 8) + 48LL))(v142, 1LL) == 1)
      {
        sub_41E98(__b);
        uint64_t v109 = &v175;
        uint64_t v108 = v175;
        swift_bridgeObjectRetain(v175);
        uint64_t v41 = sub_5150(&qword_D7368);
        uint64_t v42 = (uint64_t *)v133;
        uint64_t v43 = v108;
        uint64_t v44 = v41;
        uint64_t v45 = v109;
        *(void *)(v133 + 24) = v44;
        *uint64_t v42 = v43;
        sub_1B82C(v45);
        swift_bridgeObjectRelease(v117);
        uint64_t result = v115;
        uint64_t v132 = v115;
        return result;
      }

      uint64_t v111 = *(void *)v142;
      uint64_t v112 = *((void *)v142 + 1);
      unint64_t v39 = (char *)v142 + *(int *)(v116 + 48);
      uint64_t v172 = v111;
      uint64_t v173 = v112;
      (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v150, v39, v158);
      uint64_t v40 = v115;
      swift_bridgeObjectRetain(v112);
      sub_3FBBC(v171, v150, v154, v155);
      uint64_t v113 = v40;
      uint64_t v114 = v40;
      if (v40) {
        break;
      }
      uint64_t v110 = v170;
      v170[0] = v111;
      v170[1] = v112;
      sub_5150(&qword_D7368);
      Dictionary.subscript.setter(v171, v110);
      (*(void (**)(char *, uint64_t))(v157 + 8))(v150, v158);
      swift_bridgeObjectRelease(v112);
    }

    uint64_t v76 = v114;
    swift_bridgeObjectRelease(v112);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v150, v158);
    swift_bridgeObjectRelease(v112);
    sub_41E98(__b);
    sub_1B82C(&v175);
    return swift_bridgeObjectRelease(v117);
  }

  else
  {
    uint64_t v46 = v138;
    uint64_t v47 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v46, v47, v135);
    ((void (*)(char *, uint64_t, uint64_t))v156)(v148, v146, v158);
    uint64_t v48 = *(unsigned __int8 *)(v157 + 80);
    uint64_t v89 = (v48 + 16) & ~v48;
    uint64_t v97 = 7LL;
    uint64_t v90 = swift_allocObject(&unk_CCCF8, v89 + v152, v48 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v157 + 32))(v90 + v89, v148, v158);
    swift_retain();
    uint64_t v96 = 32LL;
    uint64_t v49 = swift_allocObject(&unk_CCD20, 32LL, v97);
    uint64_t v50 = v90;
    uint64_t v98 = v49;
    *(void *)(v49 + swift_beginAccess(v0 + 16) = sub_42B90;
    *(void *)(v49 + 24) = v50;
    uint64_t v51 = swift_release();
    int v106 = (os_log_s *)Logger.logObject.getter(v51);
    int v107 = static os_log_type_t.error.getter();
    uint64_t v93 = &v182;
    uint64_t v182 = 12LL;
    unint64_t v91 = sub_7788();
    unint64_t v92 = sub_77F0();
    unint64_t v52 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v183, v93, &type metadata for UInt32, &type metadata for Int, v91, v92, v52);
    uint32_t v94 = v183;
    uint64_t v95 = 17LL;
    uint64_t v53 = swift_allocObject(&unk_CCD48, 17LL, v97);
    uint64_t v54 = v95;
    uint64_t v55 = v97;
    uint64_t v100 = v53;
    *(_BYTE *)(v53 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v56 = swift_allocObject(&unk_CCD70, v54, v55);
    uint64_t v57 = v96;
    uint64_t v58 = v97;
    uint64_t v101 = v56;
    *(_BYTE *)(v56 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v59 = swift_allocObject(&unk_CCD98, v57, v58);
    uint64_t v60 = v96;
    uint64_t v61 = v97;
    uint64_t v62 = v59;
    uint64_t v63 = v98;
    uint64_t v99 = v62;
    *(void *)(v62 + swift_beginAccess(v0 + 16) = sub_42C0C;
    *(void *)(v62 + 24) = v63;
    uint64_t v64 = swift_allocObject(&unk_CCDC0, v60, v61);
    uint64_t v65 = v99;
    uint64_t v103 = v64;
    *(void *)(v64 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v64 + 24) = v65;
    uint64_t v105 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v102 = _allocateUninitializedArray<A>(_:)(3LL, v105);
    uint64_t v104 = v66;
    swift_retain();
    uint64_t v67 = v100;
    uint64_t v68 = v104;
    *uint64_t v104 = sub_884C;
    v68[1] = v67;
    swift_retain();
    uint64_t v69 = v101;
    uint64_t v70 = v104;
    v104[2] = sub_884C;
    v70[3] = v69;
    swift_retain();
    uint64_t v71 = v102;
    uint64_t v72 = v103;
    uint64_t v73 = v104;
    v104[4] = sub_8900;
    v73[5] = v72;
    sub_6648();
    swift_bridgeObjectRelease(v71);
    if (os_log_type_enabled(v106, (os_log_type_t)v107))
    {
      uint64_t v82 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v81 = sub_5150(&qword_D6B60);
      uint64_t v83 = sub_74D0(0LL, v81, v81);
      uint64_t v84 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v85 = &v181;
      uint64_t v181 = v82;
      uint64_t v86 = &v180;
      uint64_t v180 = v83;
      uint64_t v87 = &v179;
      uint64_t v179 = v84;
      sub_7528(2LL, &v181);
      sub_7528(1LL, v85);
      uint64_t v74 = v134;
      uint64_t v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v178 = v100;
      sub_753C(&v177, (uint64_t)v85, (uint64_t)v86, (uint64_t)v87);
      uint64_t v88 = v74;
      if (v74)
      {
        __break(1u);
      }

      else
      {
        uint64_t v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v178 = v101;
        sub_753C(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
        uint64_t v80 = 0LL;
        uint64_t v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v178 = v103;
        sub_753C(&v177, (uint64_t)&v181, (uint64_t)&v180, (uint64_t)&v179);
        _os_log_impl( &dword_0,  v106,  (os_log_type_t)v107,  "Unable to convert [String: JSONValue] to [String: Any] for %s",  v82,  v94);
        sub_7580(v83, 0LL);
        sub_7580(v84, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v136 + 8))(v138, v135);
    unint64_t v75 = sub_42A44();
    uint64_t v78 = swift_allocError(&unk_CCED8, v75, 0LL, 0LL);
    swift_willThrow(v78);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v158);
    uint64_t result = v78;
    uint64_t v79 = v78;
  }

  return result;
}

uint64_t sub_40A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = type metadata accessor for JSONValue(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a2, a1);
}

uint64_t sub_40A6C()
{
  return 1LL;
}

uint64_t sub_40A90(uint64_t a1)
{
  void v2[2] = a1;
  v2[1] = 0LL;
  v2[0] = 0LL;
  return Hasher.combine<A>(_:)(v2, &type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_40AE4()
{
  unint64_t v0 = sub_42DFC();
  return _hashValue<A>(for:)(v2, &unk_CCED8, v0);
}

uint64_t sub_40B18()
{
  return sub_40A6C() & 1;
}

uint64_t sub_40B30()
{
  return sub_40AE4();
}

uint64_t sub_40B44(uint64_t a1)
{
  return sub_40A90(a1);
}

Swift::Int sub_40B58(Swift::Int a1)
{
  return Hashable._rawHashValue(seed:)(a1);
}

uint64_t sub_40B6C()
{
  return LocalizedError.errorDescription.getter();
}

uint64_t sub_40B80()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_40B94()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_40BA8()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_40BBC()
{
  return Error._domain.getter();
}

uint64_t sub_40BD0()
{
  return Error._code.getter();
}

uint64_t sub_40BE4()
{
  return Error._userInfo.getter();
}

uint64_t sub_40BF8()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_40C0C()
{
  v2._uint64_t countAndFlagsBits = 0LL;
  v2._object = 0LL;
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
  swift_bridgeObjectRetain(v0._object);
  Swift::String v2 = v0;
  sub_8DD8((uint64_t)&v2);
  return v0._countAndFlagsBits;
}

uint64_t sub_40C80(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + swift_beginAccess(v0 + 16) = v3;
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  double v4 = (void *)swift_task_alloc(dword_D7B64);
  *(void *)(v3 + 24) = v4;
  *double v4 = *(void *)(v3 + 16);
  v4[1] = sub_65B4;
  return sub_3B7A8(a1, a2, v7, v8);
}

uint64_t sub_40D14(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + swift_beginAccess(v0 + 16) = v3;
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  double v4 = (void *)swift_task_alloc(dword_D7B84);
  *(void *)(v3 + 24) = v4;
  *double v4 = *(void *)(v3 + 16);
  v4[1] = sub_40DA8;
  return sub_3D030(a1, a2, v7, v8);
}

uint64_t sub_40DA8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v2 = *(void *)(*v1 + 24);
  *(void *)(*v1 + swift_beginAccess(v0 + 16) = *v1;
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 16) + 8LL))(a1);
}

uint64_t sub_40E10()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.SocialConversation.variables",  0x2BuLL,  1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9590 = (__int128)v1;
  return result;
}

__int128 *sub_40E50()
{
  if (qword_D6890 != -1) {
    swift_once(&qword_D6890, sub_40E10);
  }
  return &xmmword_D9590;
}

uint64_t sub_40EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v3[8] = a3;
  v3[7] = a2;
  v3[6] = a1;
  void v3[2] = v3;
  v3[3] = 0LL;
  v3[4] = 0LL;
  v3[5] = 0LL;
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  return swift_task_switch(sub_40EFC, 0LL);
}

uint64_t sub_40EFC()
{
  double v12 = *(void **)(v0 + 64);
  *(void *)(v0 + swift_beginAccess(v0 + 16) = v0;
  id v1 = v12;
  if (v12)
  {
    id v10 = (id)v11[8];
    sub_4101C(v11[7], (uint64_t)v10);
    uint64_t v6 = v2;
    NSString v9 = String._bridgeToObjectiveC()();
    uint64_t v3 = swift_bridgeObjectRelease(v6);
    AuthoredFlowDescriptor.flowId.getter(v3);
    uint64_t v7 = v4;
    id v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    [v10 setObject:v9 forKey:v8];

    swift_unknownObjectRelease(v9);
  }

  return (*(uint64_t (**)(void))(v11[2] + 8LL))();
}

uint64_t sub_4101C(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v33 = a2;
  uint64_t v46 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v48 = 0LL;
  unint64_t v49 = 0LL;
  uint64_t v37 = 0LL;
  unint64_t v34 = (*(void *)(*(void *)(type metadata accessor for String.Encoding() - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v13 - v34;
  uint64_t v46 = v3;
  uint64_t v45 = v4;
  uint64_t v50 = 0LL;
  id v39 = (id)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
  swift_bridgeObjectRetain(v36);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v36);
  uint64_t v5 = type metadata accessor for WritingOptions(v37);
  uint64_t v38 = _allocateUninitializedArray<A>(_:)(v37, v5);
  unint64_t v6 = sub_92C0();
  SetAlgebra<>.init(arrayLiteral:)(v38, v5, v6);
  v44[0] = v50;
  id v42 = [v39 dataWithJSONObject:isa options:v44[1] error:v44];
  id v40 = v44[0];
  id v7 = v44[0];
  id v8 = v50;
  uint64_t v50 = v40;

  swift_unknownObjectRelease(isa);
  if (v42)
  {
    id v32 = v42;
    id v27 = v42;
    uint64_t v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v9;

    uint64_t v30 = v28;
    unint64_t v31 = v29;
  }

  else
  {
    uint64_t v16 = 0LL;
    unint64_t v17 = 0xF000000000000000LL;
    id v14 = v50;
    uint64_t v15 = _convertNSErrorToError(_:)();

    swift_willThrow(v12);
    swift_errorRelease(v15);
    uint64_t v30 = v16;
    unint64_t v31 = v17;
  }

  unint64_t v25 = v31;
  uint64_t v26 = v30;
  if ((v31 & 0xF000000000000000LL) == 0xF000000000000000LL)
  {
    Swift::String v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
  }

  else
  {
    uint64_t v23 = v26;
    unint64_t v24 = v25;
    unint64_t v22 = v25;
    uint64_t v21 = v26;
    uint64_t v48 = v26;
    unint64_t v49 = v25;
    static String.Encoding.ascii.getter();
    v47._uint64_t countAndFlagsBits = String.init(data:encoding:)(v21, v22, v35);
    v47._object = v10;
    if (v10)
    {
      Swift::String v43 = v47;
    }

    else
    {
      Swift::String v43 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
      sub_8DD8((uint64_t)&v47);
    }

    Swift::String v19 = v43;
    sub_42E68(v21, v22);
    Swift::String v20 = v19;
  }

  object = v20._object;
  return v20._countAndFlagsBits;
}

uint64_t sub_41430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a3;
  v3[9] = a1;
  v3[4] = v3;
  v3[5] = 0LL;
  v3[6] = 0LL;
  v3[7] = 0LL;
  void v3[2] = 0LL;
  v3[3] = 0LL;
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  return swift_task_switch(sub_41490, 0LL);
}

uint64_t sub_41490()
{
  unint64_t v22 = *(void **)(v0 + 80);
  *(void *)(v0 + 3sub_4598(v0 + 2) = v0;
  id v1 = v22;
  if (v22)
  {
    Swift::String v19 = (void *)v21[10];
    AuthoredFlowDescriptor.flowId.getter(v19);
    uint64_t v17 = v2;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    id v20 = [v19 stringForKey:v18];

    if (v20)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v14 = v3;

      uint64_t v15 = v13;
      uint64_t v16 = v14;
    }

    else
    {
      uint64_t v15 = 0LL;
      uint64_t v16 = 0LL;
    }

    uint64_t v11 = v15;
    uint64_t v12 = v16;
  }

  else
  {
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
  }

  if (v12)
  {
    uint64_t v4 = v21[10];
    v21[2] = v11;
    v21[3] = v12;
    v21[8] = sub_417C8(v11, v12, v4);
    if (v21[8])
    {
      uint64_t v23 = v21[8];
    }

    else
    {
      uint64_t v5 = sub_5150(&qword_D7370);
      uint64_t v6 = _allocateUninitializedArray<A>(_:)(0LL, v5);
      uint64_t v23 = Dictionary.init(dictionaryLiteral:)( v6,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      sub_1B82C(v21 + 8);
    }

    swift_bridgeObjectRelease(v12);
    return (*(uint64_t (**)(uint64_t))(v21[4] + 8LL))(v23);
  }

  else
  {
    uint64_t v8 = sub_5150(&qword_D7370);
    uint64_t v9 = _allocateUninitializedArray<A>(_:)(0LL, v8);
    uint64_t v10 = Dictionary.init(dictionaryLiteral:)( v9,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    return (*(uint64_t (**)(uint64_t))(v21[4] + 8LL))(v10);
  }

uint64_t sub_417C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v38 = a3;
  uint64_t v52 = 0LL;
  uint64_t v53 = 0LL;
  uint64_t v51 = 0LL;
  uint64_t v57 = 0LL;
  unint64_t v58 = 0LL;
  uint64_t v49 = 0LL;
  uint64_t v45 = type metadata accessor for String.Encoding(0LL);
  uint64_t v42 = *(void *)(v45 - 8);
  unint64_t v39 = (*(void *)(v42 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  Swift::String v43 = (char *)&v19 - v39;
  uint64_t v52 = v5;
  uint64_t v53 = v6;
  uint64_t v51 = v7;
  static String.Encoding.utf8.getter(v4);
  char v8 = variable initialization expression of PlayWithMeData.initialized();
  uint64_t v44 = String.data(using:allowLossyConversion:)(v43, v8 & 1, v40, v41);
  unint64_t v46 = v9;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v45);
  if ((v46 & 0xF000000000000000LL) == 0xF000000000000000LL) {
    return 0LL;
  }
  uint64_t v36 = v44;
  unint64_t v37 = v46;
  unint64_t v28 = v46;
  uint64_t v29 = v44;
  uint64_t v57 = v44;
  unint64_t v58 = v46;
  uint64_t v30 = 0LL;
  uint64_t v56 = 0LL;
  id v32 = (id)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
  sub_42EF0(v29, v28);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_42E68(v29, v28);
  uint64_t v10 = type metadata accessor for ReadingOptions(v30);
  uint64_t v31 = _allocateUninitializedArray<A>(_:)(v30, v10);
  unint64_t v11 = sub_93C8();
  SetAlgebra<>.init(arrayLiteral:)(v31, v10, v11);
  v50[0] = v56;
  id v35 = [v32 JSONObjectWithData:isa options:v50[1] error:v50];
  id v33 = v50[0];
  id v12 = v50[0];
  uint64_t v13 = v56;
  uint64_t v56 = v33;

  if (!v35)
  {
    id v20 = v56;
    uint64_t v21 = _convertNSErrorToError(_:)();

    swift_willThrow(v17);
    swift_errorRetain(v21);
    uint64_t v49 = v21;
    swift_errorRelease(v21);
    swift_errorRelease(v21);
    sub_42E68(v29, v28);
    return 0LL;
  }

  id v27 = v35;
  id v25 = v35;
  uint64_t v26 = &v55;
  _bridgeAnyObjectToAny(_:)();
  uint64_t v14 = sub_5150(&qword_D7368);
  else {
    uint64_t v24 = 0LL;
  }
  uint64_t v54 = v24;
  if (v24)
  {
    uint64_t v47 = v54;
  }

  else
  {
    uint64_t v15 = sub_5150(&qword_D7370);
    uint64_t v16 = _allocateUninitializedArray<A>(_:)(0LL, v15);
    uint64_t v47 = Dictionary.init(dictionaryLiteral:)( v16,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    sub_1B82C(&v54);
  }

  swift_unknownObjectRelease(v25);
  uint64_t v22 = v47;
  sub_42E68(v29, v28);
  return v22;
}

uint64_t sub_41C60(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + swift_beginAccess(v0 + 16) = v3;
  uint64_t v7 = *v2;
  double v4 = (void *)swift_task_alloc(dword_D7C1C);
  *(void *)(v3 + 24) = v4;
  *double v4 = *(void *)(v3 + 16);
  v4[1] = sub_65B4;
  return sub_40EA4(a1, a2, v7);
}

uint64_t sub_41CE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + swift_beginAccess(v0 + 16) = v3;
  uint64_t v7 = *v2;
  double v4 = (void *)swift_task_alloc(dword_D7C24);
  *(void *)(v3 + 24) = v4;
  *double v4 = *(void *)(v3 + 16);
  v4[1] = sub_40DA8;
  return sub_41430(a1, a2, v7);
}

uint64_t sub_41D70()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_41DE0(uint64_t a1, char a2)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8) + 80LL);
  return sub_3C2E0(a1, a2 & 1, v2 + ((v3 + 16) & ~v3));
}

void *sub_41E30(const void *a1, void *a2)
{
  return a2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_41E98( uint64_t *a1)
{
}

uint64_t sub_41ED4(uint64_t a1)
{
  if (a1 < 0) {
    return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
  }
  else {
    return swift_release(a1);
  }
}

__n128 sub_41F14(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  __n128 result = *(__n128 *)(a1 + 16);
  *(__n128 *)(a2 + swift_beginAccess(v0 + 16) = result;
  return result;
}

uint64_t sub_41F30()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_41F6C()
{
  uint64_t result = *(void *)(v0 + 16);
  sub_3EED0();
  return result;
}

void *sub_41F74(void *result)
{
  uint64_t v4 = result;
  if ((uint64_t)result < 0)
  {
    __break(1u);
  }

  else if ((uint64_t)result > 0)
  {
    uint64_t v1 = sub_5150(&qword_D7C48);
    uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
    *(void *)(v2 + swift_beginAccess(v0 + 16) = v4;
    return (void *)v2;
  }

  else
  {
    swift_retain();
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

void *sub_4200C(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  uint64_t v4 = (void *)_swift_stdlib_bridgeErrorToNSError(v1);
  id v2 = v4;
  swift_unknownObjectRelease(v4);
  return v4;
}

uint64_t sub_4204C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_42074()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4209C()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_420D8()
{
  return sub_4200C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_420E4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_42120( uint64_t *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = a1;
  uint64_t v19 = a7;
  v14[1] = a8;
  uint64_t v23 = a7;
  uint64_t v17 = *(void *)(a7 - 8);
  v14[0] = (*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(a2);
  uint64_t v18 = (uint64_t)v14 - v14[0];
  v9(v8);
  uint64_t v15 = dispatch thunk of static FixedWidthInteger.bitWidth.getter() >> 3;
  uint64_t v21 = *v16;
  uint64_t v22 = v21 + v15;
  sub_42260( v18,  sub_43C88,  (uint64_t)v20,  v19,  (uint64_t)&type metadata for Never,  (uint64_t)&type metadata for () + 8,  (uint64_t)&protocol witness table for Never,  v14[2]);
  uint64_t v10 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  *v16 += v15;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
}

uint64_t sub_4223C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_42260( uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = a2;
  uint64_t v13 = a5;
  uint64_t v14 = a8;
  uint64_t v23 = a4;
  uint64_t v22 = a5;
  uint64_t v21 = a6;
  uint64_t v15 = *(void *)(a5 - 8);
  unint64_t v16 = (*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  uint64_t v9 = __chkstk_darwin();
  uint64_t v18 = (char *)&v12 - v16;
  uint64_t v20 = v9 + *(void *)(*(void *)(v10 - 8) + 64LL);
  uint64_t result = v17();
  uint64_t v19 = v8;
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v18, v13);
  }
  return result;
}

uint64_t sub_42344@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_42378(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v7 = (id)a4();
  uint64_t v8 = *a1;
  uint64_t v9 = *a1 + 8;
  if (v7)
  {
    id v10 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v8, v9);
  }

  else
  {
    uint64_t v11 = 0LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8, v9);
  }

  *a1 = v8 + 8;
  uint64_t v4 = *a2;
  if (*a2)
  {
    *uint64_t v4 = v7;
    *a2 = v4 + 1;
  }

  else
  {
  }

uint64_t sub_424B4()
{
  return swift_deallocObject(v2, 32LL);
}

void sub_424F0(uint64_t *a1, void **a2, uint64_t a3)
{
}

unint64_t sub_424FC()
{
  uint64_t v3 = qword_D7B98;
  if (!qword_D7B98)
  {
    uint64_t v0 = sub_8D64(&qword_D7B90);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7B98);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_4256C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Interaction(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_425DC()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_4264C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_42674()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4269C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_426D8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_42714()
{
  uint64_t v1 = *(void *)(type metadata accessor for Interaction(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_42784()
{
  return sub_3EA08();
}

uint64_t sub_427B4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_427DC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_42804()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_42840@<X0>(uint64_t *a1@<X8>)
{
  return sub_42344(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_4284C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_42888(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  unint64_t v4 = sub_428E8();
  return sub_42120(a1, v5, a2, a3, v9, v10, (uint64_t)&type metadata for Int, v4);
}

unint64_t sub_428E8()
{
  uint64_t v2 = qword_D7BA0;
  if (!qword_D7BA0)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7BA0);
    return WitnessTable;
  }

  return v2;
}

_OWORD *sub_42950(_OWORD *a1, _OWORD *a2)
{
  uint64_t v9 = sub_5150(&qword_D7BB8);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t))(v10 + 48))(a1, 1LL))
  {
    uint64_t v3 = sub_5150(&qword_D7BA8);
    memcpy(a2, a1, *(void *)(*(void *)(v3 - 8) + 64LL));
  }

  else
  {
    *a2 = *a1;
    uint64_t v6 = (char *)a2 + *(int *)(v9 + 48);
    double v5 = (char *)a1 + *(int *)(v9 + 48);
    uint64_t v2 = type metadata accessor for JSONValue(0LL);
    (*(void (**)(char *, char *))(*(void *)(v2 - 8) + 32LL))(v6, v5);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(a2, 0LL, 1LL, v9);
  }

  return a2;
}

unint64_t sub_42A44()
{
  uint64_t v2 = qword_D7BC8;
  if (!qword_D7BC8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7058, &unk_CCED8);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7BC8);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_42AB0()
{
  uint64_t v3 = qword_D7BD0;
  if (!qword_D7BD0)
  {
    uint64_t v0 = sub_8D64(&qword_D7BC0);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7BD0);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_42B20()
{
  uint64_t v1 = *(void *)(type metadata accessor for JSONValue(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_42B90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for JSONValue(0LL) - 8) + 80LL);
  return sub_40A2C(v1 + ((v2 + 16) & ~v2), a1);
}

uint64_t sub_42BD0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_42C0C()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = type metadata accessor for JSONValue(0LL);
  unint64_t v1 = sub_42C54();
  return sub_75EC(v5, v3, v4, v1);
}

unint64_t sub_42C54()
{
  uint64_t v3 = qword_D7BE8;
  if (!qword_D7BE8)
  {
    uint64_t v0 = type metadata accessor for JSONValue(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for JSONValue, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7BE8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_42CC4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_42CEC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_42D14()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_42D50()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_42D8C()
{
  uint64_t v3 = qword_D7BF0;
  if (!qword_D7BF0)
  {
    uint64_t v0 = sub_8D64(&qword_D7BE0);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7BF0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_42DFC()
{
  uint64_t v2 = qword_D7C00[0];
  if (!qword_D7C00[0])
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7018, &unk_CCED8);
    atomic_store(WitnessTable, qword_D7C00);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_42E68(uint64_t result, unint64_t a2)
{
  if (((a2 >> 62) & 3) == 1) {
    return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }
  if (((a2 >> 62) & 3) == 2)
  {
    swift_release(result);
    return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }

  return result;
}

uint64_t sub_42EF0(uint64_t result, unint64_t a2)
{
  if (((a2 >> 62) & 3) == 1) {
    return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }
  if (((a2 >> 62) & 3) == 2)
  {
    swift_retain(result);
    return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
  }

  return result;
}

void *sub_42F78(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain(v4);
  uint64_t result = a1;
  a1[1] = v4;
  return result;
}

uint64_t sub_42FB4(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

void *sub_42FCC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain(v4);
  uint64_t v2 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRelease(v2);
  return a1;
}

__n128 sub_43014(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *sub_43020(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t sub_4305C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      int v4 = *(_OWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      int v3 = -1;
      if (*(void *)(a1 + 8) < 0x100000000uLL) {
        int v3 = *(void *)(a1 + 8);
      }
      int v4 = v3;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_431BC(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(_OWORD *)__n128 result = a2 + 0x80000000;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + swift_beginAccess(v0 + 16) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + swift_beginAccess(v0 + 16) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)(result + sub_1D580(v0 + 8) = a2 - 1;
    }
  }

  return result;
}

void *type metadata accessor for SocialPersistenceHandlerSiriRemembers()
{
  return &unk_CCE40;
}

uint64_t sub_433DC(unsigned __int8 *a1, int a2)
{
  if (a2)
  {
    int v6 = 1;
    if ((a2 + 1) >= 0x100)
    {
      else {
        int v2 = 2;
      }
      int v6 = v2;
    }

    if (v6 == 1)
    {
      int v5 = *a1;
    }

    else if (v6 == 2)
    {
      int v5 = *(unsigned __int16 *)a1;
    }

    else
    {
      int v5 = *(_DWORD *)a1;
    }

    if (v5) {
      int v4 = v5 - 1;
    }
    else {
      int v4 = -1;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

_BYTE *sub_43570(_BYTE *result, int a2, int a3)
{
  int v5 = 0;
  if (a3)
  {
    int v4 = 1;
    if ((a3 + 1) >= 0x100)
    {
      else {
        int v3 = 2;
      }
      int v4 = v3;
    }

    int v5 = v4;
  }

  if (a2)
  {
    if (v5)
    {
      if (v5 == 1)
      {
        *__n128 result = a2;
      }

      else if (v5 == 2)
      {
        *(_WORD *)__n128 result = a2;
      }

      else
      {
        *(_DWORD *)__n128 result = a2;
      }
    }
  }

  else if (v5)
  {
    if (v5 == 1)
    {
      *__n128 result = 0;
    }

    else if (v5 == 2)
    {
      *(_WORD *)__n128 result = 0;
    }

    else
    {
      *(_DWORD *)__n128 result = 0;
    }
  }

  return result;
}

uint64_t sub_43780()
{
  return 0LL;
}

void *type metadata accessor for SocialPersistenceHandlerSiriRemembers.JSONValueError()
{
  return &unk_CCED8;
}

void *sub_4379C(void *a1, id *a2)
{
  id v4 = *a2;
  id v2 = *a2;
  __n128 result = a1;
  *a1 = v4;
  return result;
}

void sub_437D0(id *a1)
{
}

id *sub_437E8(id *a1, id *a2)
{
  id v5 = *a1;
  id v4 = *a2;
  id v2 = *a2;
  *a1 = v4;

  return a1;
}

void *sub_43830(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void **sub_4383C(void **a1, void **a2)
{
  id v2 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_43870(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFE && *(_BYTE *)(a1 + 8))
    {
      int v5 = *(void *)a1 + 2147483646;
    }

    else
    {
      int v4 = -1;
      if (*(void *)a1 < 0x100000000uLL) {
        int v4 = *(void *)a1;
      }
      int v2 = v4 - 1;
      if (v4 - 1 < 0) {
        int v2 = -1;
      }
      int v5 = v2;
    }
  }

  else
  {
    int v5 = -1;
  }

  return (v5 + 1);
}

uint64_t sub_439E4(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFE;
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 > 0x7FFFFFFE)
    {
      if (v3) {
        *(_BYTE *)(result + sub_1D580(v0 + 8) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFE)
    {
      if (v3) {
        *(_BYTE *)(result + sub_1D580(v0 + 8) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)__n128 result = a2;
    }
  }

  return result;
}

void *type metadata accessor for SocialPersistenceHandlerUserDefaults()
{
  return &unk_CCF50;
}

unint64_t sub_43BF4()
{
  return sub_42A44();
}

unint64_t sub_43C08()
{
  return sub_43C1C();
}

unint64_t sub_43C1C()
{
  uint64_t v2 = qword_D7C38;
  if (!qword_D7C38)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B6FF0, &unk_CCED8);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7C38);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_43C88()
{
  return sub_4223C();
}

uint64_t sub_43CB4()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_43CF0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_43D18()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_43D40()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_43D7C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_43DB8()
{
  uint64_t v1 = *(void *)(type metadata accessor for AuthoredFlowDescriptor(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_43E28()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_43E50()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_43E78()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_43EB4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_43EF0()
{
  uint64_t result = sub_43F44();
  qword_D95A0 = result;
  return result;
}

uint64_t type metadata accessor for MediaService()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin12MediaService);
}

uint64_t sub_43F44()
{
  return sub_46AA8();
}

uint64_t *sub_43F7C()
{
  if (qword_D6898 != -1) {
    swift_once(&qword_D6898, sub_43EF0);
  }
  return &qword_D95A0;
}

uint64_t sub_43FD0()
{
  uint64_t v191 = 0LL;
  uint64_t v190 = 0LL;
  id v189 = 0LL;
  dispatch_semaphore_t v188 = 0LL;
  BYTE4(v1swift_beginAccess(v0 + 80) = 0;
  uint64_t v128 = 0LL;
  uint64_t v149 = 0LL;
  uint64_t v129 = type metadata accessor for Logger(0LL);
  uint64_t v130 = *(void *)(v129 - 8);
  unint64_t v131 = (*(void *)(v130 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v2 = __chkstk_darwin(v1);
  uint64_t v132 = (char *)&v71 - v131;
  unint64_t v133 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v2);
  uint64_t v134 = (char *)&v71 - v133;
  uint64_t v160 = type metadata accessor for DispatchTimeInterval(v4);
  uint64_t v158 = *(void *)(v160 - 8);
  unint64_t v135 = (*(void *)(v158 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v159 = (uint64_t *)((char *)&v71 - v135);
  uint64_t v163 = type metadata accessor for DispatchTime(v6);
  uint64_t v161 = *(void *)(v163 - 8);
  unint64_t v136 = (*(void *)(v161 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v162 = (char *)&v71 - v136;
  unint64_t v137 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v165 = (char *)&v71 - v137;
  uint64_t v152 = type metadata accessor for DispatchWorkItemFlags(v10);
  uint64_t v150 = *(void *)(v152 - 8);
  unint64_t v138 = (*(void *)(v150 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  unint64_t v151 = (char *)&v71 - v138;
  unint64_t v139 = (*(void *)(*(void *)(type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(v12) - 8) + 64LL)
        + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  uint64_t v144 = (uint64_t)&v71 - v139;
  unint64_t v140 = (*(void *)(*(void *)(type metadata accessor for OS_dispatch_queue.Attributes(v14) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v16 = __chkstk_darwin(v15);
  uint64_t v143 = (char *)&v71 - v140;
  uint64_t v155 = type metadata accessor for DispatchQoS(v16);
  uint64_t v153 = *(void *)(v155 - 8);
  unint64_t v141 = (*(void *)(v153 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  uint64_t v154 = (char *)&v71 - v141;
  uint64_t v191 = v0;
  uint64_t v146 = 7LL;
  uint64_t v148 = swift_allocObject(&unk_CD1B0, 17LL, 7LL);
  uint64_t v190 = v148 + 16;
  *(_BYTE *)(v148 + swift_beginAccess(v0 + 16) = 0;
  sub_4511C();
  Swift::String v142 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.SiriSocialConversation.canPlayAppleMusic",  0x37uLL,  1);
  sub_45180();
  sub_45194();
  sub_45228(v144);
  id v145 = (id)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( v142._countAndFlagsBits,  v142._object,  v154,  v143,  v144,  v149);
  id v189 = v145;
  dispatch_semaphore_t v157 = dispatch_semaphore_create(v149);
  dispatch_semaphore_t v188 = v157;
  swift_retain();
  swift_retain();
  uint64_t v18 = v157;
  uint64_t v19 = swift_allocObject(&unk_CD1D8, 40LL, v146);
  uint64_t v20 = v148;
  uint64_t v21 = (void *)v19;
  dispatch_semaphore_t v22 = v157;
  v21[2] = v147;
  v21[3] = v20;
  v21[4] = v22;
  uint64_t v186 = sub_4536C;
  uint32_t v187 = v21;
  aBlock = _NSConcreteStackBlock;
  int v182 = 1107296256;
  int v183 = 0;
  uint64_t v184 = sub_45414;
  uint64_t v185 = &unk_CD1F0;
  uint64_t v156 = _Block_copy(&aBlock);
  sub_45180();
  sub_454B8();
  OS_dispatch_queue.async(group:qos:flags:execute:)(v149, v154, v151, v156);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v151, v152);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v155);
  _Block_release(v156);
  uint64_t v23 = swift_release();
  static DispatchTime.now()(v23);
  uint64_t v24 = v158;
  void *v159 = 1LL;
  (*(void (**)(void))(v24 + 104))();
  DispatchTime.advanced(by:)(v159);
  (*(void (**)(void *, uint64_t))(v158 + 8))(v159, v160);
  uint64_t v164 = *(void (**)(char *, uint64_t))(v161 + 8);
  v164(v162, v163);
  int v166 = OS_dispatch_semaphore.wait(timeout:)(v165);
  v164(v165, v163);
  BYTE4(v1swift_beginAccess(v0 + 80) = v166 & 1;
  if ((v166 & 1) != 0)
  {
    id v25 = v134;
    uint64_t v26 = sub_AD514();
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 16))(v25, v26, v129);
    uint64_t v125 = (os_log_s *)Logger.logObject.getter(v27);
    int v124 = static os_log_type_t.debug.getter();
    uint64_t v122 = &v171;
    uint64_t v171 = 2LL;
    unint64_t v120 = sub_7788();
    unint64_t v121 = sub_77F0();
    unint64_t v28 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v172, v122, &type metadata for UInt32, &type metadata for Int, v120, v121, v28);
    uint32_t v123 = v172;
    uint64_t v29 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v126 = _allocateUninitializedArray<A>(_:)(0LL, v29);
    if (os_log_type_enabled(v125, (os_log_type_t)v124))
    {
      uint64_t v30 = v128;
      uint64_t v109 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v107 = sub_5150(&qword_D6B60);
      uint64_t v108 = 0LL;
      uint64_t v110 = sub_74D0(0LL, v107, v107);
      uint64_t v111 = sub_74D0(v108, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v115 = &v170;
      uint64_t v170 = v109;
      uint64_t v116 = &v169;
      uint64_t v169 = v110;
      uint64_t v113 = &v168;
      uint64_t v168 = v111;
      unsigned int v112 = 0;
      sub_7528(0LL, &v170);
      sub_7528(v112, v115);
      uint64_t v167 = v126;
      uint64_t v114 = &v71;
      __chkstk_darwin(v31);
      id v32 = v116;
      id v33 = &v71 - 6;
      uint64_t v117 = &v71 - 6;
      v33[2] = (uint64_t)v115;
      v33[3] = (uint64_t)v32;
      v33[4] = v34;
      uint64_t v118 = sub_5150(&qword_D6B78);
      unint64_t v35 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v117, v118, v35);
      uint64_t v119 = v30;
      if (v30)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v125, (os_log_type_t)v124, "timed out waiting for canPlayAppleMusic value", v109, v123);
        uint64_t v105 = 0LL;
        sub_7580(v110, 0LL);
        sub_7580(v111, v105);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v126);
        uint64_t v106 = v119;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v126);
      uint64_t v106 = v128;
    }

    uint64_t v104 = v106;

    (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v129);
    uint64_t v127 = v104;
  }

  else
  {
    uint64_t v127 = v128;
  }

  uint64_t v36 = v132;
  uint64_t v85 = v127;
  uint64_t v37 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v36, v37, v129);
  uint64_t v38 = swift_retain();
  uint64_t v102 = (os_log_s *)Logger.logObject.getter(v38);
  int v103 = static os_log_type_t.debug.getter();
  uint64_t v88 = &v179;
  uint64_t v179 = 8LL;
  unint64_t v86 = sub_7788();
  unint64_t v87 = sub_77F0();
  unint64_t v39 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v180, v88, &type metadata for UInt32, &type metadata for Int, v86, v87, v39);
  uint32_t v89 = v180;
  uint64_t v90 = 17LL;
  uint64_t v93 = 7LL;
  uint64_t v40 = swift_allocObject(&unk_CD228, 17LL, 7LL);
  uint64_t v41 = v90;
  uint64_t v42 = v93;
  uint64_t v96 = v40;
  *(_BYTE *)(v40 + swift_beginAccess(v0 + 16) = 0;
  uint64_t v43 = swift_allocObject(&unk_CD250, v41, v42);
  uint64_t v44 = v93;
  uint64_t v97 = v43;
  *(_BYTE *)(v43 + swift_beginAccess(v0 + 16) = 4;
  uint64_t v92 = 32LL;
  uint64_t v45 = swift_allocObject(&unk_CD278, 32LL, v44);
  uint64_t v46 = v148;
  uint64_t v47 = v92;
  uint64_t v48 = v93;
  uint64_t v91 = v45;
  *(void *)(v45 + swift_beginAccess(v0 + 16) = sub_455A0;
  *(void *)(v45 + 24) = v46;
  uint64_t v49 = swift_allocObject(&unk_CD2A0, v47, v48);
  uint64_t v50 = v92;
  uint64_t v51 = v93;
  uint64_t v52 = v49;
  uint64_t v53 = v91;
  uint64_t v94 = v52;
  *(void *)(v52 + swift_beginAccess(v0 + 16) = sub_46E38;
  *(void *)(v52 + 24) = v53;
  uint64_t v54 = swift_allocObject(&unk_CD2C8, v50, v51);
  uint64_t v55 = v92;
  uint64_t v56 = v93;
  uint64_t v57 = v54;
  uint64_t v58 = v94;
  uint64_t v95 = v57;
  *(void *)(v57 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v57 + 24) = v58;
  uint64_t v59 = swift_allocObject(&unk_CD2F0, v55, v56);
  uint64_t v60 = v95;
  uint64_t v99 = v59;
  *(void *)(v59 + swift_beginAccess(v0 + 16) = sub_46EF0;
  *(void *)(v59 + 24) = v60;
  uint64_t v101 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v98 = _allocateUninitializedArray<A>(_:)(3LL, v101);
  uint64_t v100 = v61;
  swift_retain();
  uint64_t v62 = v96;
  uint64_t v63 = v100;
  *uint64_t v100 = sub_884C;
  v63[1] = v62;
  swift_retain();
  uint64_t v64 = v97;
  uint64_t v65 = v100;
  v100[2] = sub_884C;
  void v65[3] = v64;
  swift_retain();
  uint64_t v66 = v98;
  uint64_t v67 = v99;
  uint64_t v68 = v100;
  v100[4] = sub_46F38;
  v68[5] = v67;
  sub_6648();
  swift_bridgeObjectRelease(v66);
  if (os_log_type_enabled(v102, (os_log_type_t)v103))
  {
    uint64_t v69 = v85;
    uint64_t v78 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(8LL, &type metadata for UInt8);
    uint64_t v76 = sub_5150(&qword_D6B60);
    uint64_t v77 = 0LL;
    uint64_t v79 = sub_74D0(0LL, v76, v76);
    uint64_t v80 = sub_74D0(v77, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v81 = &v177;
    uint64_t v177 = v78;
    uint64_t v82 = &v176;
    uint64_t v176 = v79;
    uint64_t v83 = &v175;
    uint64_t v175 = v80;
    sub_7528(0LL, &v177);
    sub_7528(1LL, v81);
    uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v174 = v96;
    sub_753C(&v173, (uint64_t)v81, (uint64_t)v82, (uint64_t)v83);
    uint64_t v84 = v69;
    if (v69)
    {
      __break(1u);
    }

    else
    {
      uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v174 = v97;
      sub_753C(&v173, (uint64_t)&v177, (uint64_t)&v176, (uint64_t)&v175);
      uint64_t v75 = 0LL;
      uint64_t v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_46F38;
      uint64_t v174 = v99;
      sub_753C(&v173, (uint64_t)&v177, (uint64_t)&v176, (uint64_t)&v175);
      _os_log_impl(&dword_0, v102, (os_log_type_t)v103, "finished getting canPlayAppleMusic value: %{BOOL}d", v78, v89);
      uint64_t v74 = 0LL;
      sub_7580(v79, 0LL);
      sub_7580(v80, v74);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v130 + 8))(v132, v129);
  uint64_t v72 = &v178;
  swift_beginAccess(v148 + 16);
  int v73 = *(unsigned __int8 *)(v148 + 16);
  swift_endAccess(v72);

  swift_release();
  return v73 & 1;
}

uint64_t sub_450F4()
{
  return swift_deallocObject(v0, 17LL);
}

unint64_t sub_4511C()
{
  uint64_t v3 = qword_D7C50;
  if (!qword_D7C50)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7C50);
    return ObjCClassMetadata;
  }

  return v3;
}

uint64_t sub_45180()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_45194()
{
  uint64_t v2 = sub_46B08(0LL);
  type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v4 = v2;
  sub_47568();
  uint64_t v3 = sub_5150(&qword_D7D60);
  unint64_t v0 = sub_475D8();
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v4, v3, v0);
}

uint64_t sub_45228@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 8) + 104LL))(a1, v3);
}

uint64_t sub_45274(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  uint64_t v7 = swift_allocObject(&unk_CD480, 32LL, 7LL);
  *(void *)(v7 + swift_beginAccess(v0 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  sub_455A8((void (*)(void))sub_47558, v7);
  return swift_release();
}

uint64_t sub_45320()
{
  return swift_deallocObject(v2, 40LL);
}

uint64_t sub_4536C()
{
  return sub_45274(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

Swift::Int sub_4537C(char a1, uint64_t a2, uint64_t a3)
{
  char v9 = a1 & 1;
  uint64_t v8 = a2 + 16;
  uint64_t v7 = a3;
  swift_beginAccess(a2 + 16);
  *(_BYTE *)(a2 + swift_beginAccess(v0 + 16) = a1 & 1;
  swift_endAccess(v6);
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_45414(uint64_t a1)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v1 = swift_retain(v4);
  v3(v1);
  return swift_release(v4);
}

uint64_t sub_4545C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain(v5);
  uint64_t result = a1;
  *(void *)(a1 + 3sub_4598(v0 + 2) = v4;
  *(void *)(a1 + 40) = v5;
  return result;
}

uint64_t sub_454A0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_454B8()
{
  uint64_t v2 = sub_46BC0(0LL);
  type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v4 = v2;
  sub_47434();
  uint64_t v3 = sub_5150(&qword_D7D48);
  unint64_t v0 = sub_474A4();
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v4, v3, v0);
}

uint64_t sub_4554C(uint64_t a1)
{
  char v3 = *(_BYTE *)(a1 + 16);
  swift_endAccess(v4);
  return v3 & 1;
}

uint64_t sub_455A0()
{
  return sub_4554C(v0);
}

uint64_t sub_455A8(void (*a1)(void), uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v51 = a2;
  uint64_t v68 = 0LL;
  uint64_t v69 = 0LL;
  uint64_t v67 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v46 = 0LL;
  uint64_t v47 = type metadata accessor for Logger(0LL);
  uint64_t v48 = *(void *)(v47 - 8);
  unint64_t v49 = (*(void *)(v48 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)&v24 - v49;
  uint64_t v58 = type metadata accessor for MusicAuthorization.Status(v4);
  uint64_t v55 = *(void *)(v58 - 8);
  unint64_t v53 = (*(void *)(v55 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v56 = (char *)&v24 - v53;
  unint64_t v54 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v24 - v54;
  uint64_t v68 = v9;
  uint64_t v69 = v10;
  uint64_t v67 = v2;
  static MusicAuthorization.currentStatus.getter(v8);
  (*(void (**)(char *, void, uint64_t))(v55 + 104))( v56,  enum case for MusicAuthorization.Status.authorized(_:),  v58);
  unint64_t v11 = sub_47000();
  int v60 = == infix<A>(_:_:)(v57, v56, v58, v11, &protocol witness table for String);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
  v59(v56, v58);
  v59(v57, v58);
  if ((v60 & 1) != 0) {
    return sub_45AC4((uint64_t)v52, v51);
  }
  double v13 = v50;
  uint64_t v14 = sub_AD514();
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 16))(v13, v14, v47);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v15);
  int v42 = static os_log_type_t.debug.getter();
  uint64_t v40 = &v65;
  uint64_t v65 = 2LL;
  unint64_t v38 = sub_7788();
  unint64_t v39 = sub_77F0();
  unint64_t v16 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v66, v40, &type metadata for UInt32, &type metadata for Int, v38, v39, v16);
  uint32_t v41 = v66;
  uint64_t v17 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v44 = _allocateUninitializedArray<A>(_:)(0LL, v17);
  if (os_log_type_enabled(v43, (os_log_type_t)v42))
  {
    uint64_t v18 = v45;
    unint64_t v28 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v26 = sub_5150(&qword_D6B60);
    uint64_t v27 = 0LL;
    uint64_t v29 = sub_74D0(0LL, v26, v26);
    uint64_t v30 = sub_74D0(v27, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v34 = &v64;
    uint64_t v64 = v28;
    unint64_t v35 = &v63;
    uint64_t v63 = v29;
    id v32 = &v62;
    uint64_t v62 = v30;
    unsigned int v31 = 0;
    sub_7528(0LL, &v64);
    sub_7528(v31, v34);
    uint64_t v61 = v44;
    id v33 = &v24;
    __chkstk_darwin(v19);
    uint64_t v20 = v35;
    uint64_t v21 = &v24 - 6;
    uint64_t v36 = &v24 - 6;
    v21[2] = (uint64_t)v34;
    v21[3] = (uint64_t)v20;
    v21[4] = v22;
    uint64_t v37 = sub_5150(&qword_D6B78);
    unint64_t v23 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v36, v37, v23);
    if (v18)
    {
      __break(1u);
    }

    else
    {
      _os_log_impl(&dword_0, v43, (os_log_type_t)v42, "MediaService not music authorized", v28, v41);
      uint64_t v25 = 0LL;
      sub_7580(v29, 0LL);
      sub_7580(v30, v25);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v44);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v44);
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
  swift_retain();
  v52(0LL);
  return swift_release();
}

uint64_t sub_45AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v18 = 0LL;
  unint64_t v14 = (*(void *)(*(void *)(sub_5150(&qword_D7C68) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v17 = (char *)&v13 - v14;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v18 = v2;
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 56LL))(v17, 1LL);
  swift_retain();
  uint64_t v7 = swift_allocObject(&unk_CD318, 48LL, 7LL);
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  uint64_t v10 = (void *)v7;
  uint64_t v11 = (uint64_t)v17;
  void v10[2] = 0LL;
  void v10[3] = 0LL;
  v10[4] = v8;
  v10[5] = v9;
  sub_46880(v11, (uint64_t)&unk_D7C78, (uint64_t)v10, (uint64_t)&type metadata for () + 8);
  return swift_release();
}

uint64_t sub_45BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 12sub_1D580(v0 + 8) = a5;
  *(void *)(v5 + 120) = a4;
  *(void *)(v5 + 56) = v5;
  *(void *)(v5 + 40) = 0LL;
  *(void *)(v5 + 4sub_1D580(v0 + 8) = 0LL;
  *(_BYTE *)(v5 + 2swift_beginAccess(v0 + 16) = 0;
  *(void *)(v5 + 64) = 0LL;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  *(void *)(v5 + 136) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 144) = v7;
  uint64_t v12 = *(void *)(v7 + 64);
  *(void *)(v5 + 15sub_4598(v0 + 2) = swift_task_alloc((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v5 + swift_beginAccess(v0 + 160) = swift_task_alloc((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for MusicSubscription(0LL);
  *(void *)(v5 + 16sub_1D580(v0 + 8) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v5 + 176) = v9;
  uint64_t v16 = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v5 + 184) = v16;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 4sub_1D580(v0 + 8) = a5;
  *(_BYTE *)(v5 + 2swift_beginAccess(v0 + 16) = 0;
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to static MusicSubscription.current.getter[1]);
  *(void *)(v15 + 19sub_4598(v0 + 2) = v10;
  void *v10 = *(void *)(v15 + 56);
  v10[1] = sub_45D08;
  return static MusicSubscription.current.getter(v16);
}

uint64_t sub_45D08()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 192);
  *(void *)(v2 + 56) = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_46444, 0LL);
  }
  else {
    return swift_task_switch(sub_45DAC, 0LL);
  }
}

uint64_t sub_45DAC()
{
  uint64_t v22 = *(void *)(v0 + 184);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v21 = *(void *)(v0 + 168);
  uint64_t v19 = *(void *)(v0 + 160);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 136);
  *(void *)(v0 + 56) = v0;
  char v25 = MusicSubscription.canPlayCatalogContent.getter();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  *(_BYTE *)(v0 + 2swift_beginAccess(v0 + 16) = v25 & 1;
  uint64_t v1 = sub_AD514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v19, v1, v24);
  uint64_t v29 = swift_allocObject(&unk_CD368, 17LL, 7LL);
  *(_BYTE *)(v29 + swift_beginAccess(v0 + 16) = v25 & 1;
  unint64_t v39 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  *(void *)(v0 + swift_beginAccess(v0 + 112) = 8LL;
  unint64_t v26 = sub_7788();
  unint64_t v27 = sub_77F0();
  unint64_t v2 = sub_7858();
  UnsignedInteger<>.init<A>(_:)( (void *)(v0 + 212),  v0 + 112,  &type metadata for UInt32,  &type metadata for Int,  v26,  v27,  v2);
  uint32_t v28 = *(_DWORD *)(v0 + 212);
  uint64_t v33 = swift_allocObject(&unk_CD390, 17LL, 7LL);
  *(_BYTE *)(v33 + swift_beginAccess(v0 + 16) = 0;
  uint64_t v34 = swift_allocObject(&unk_CD3B8, 17LL, 7LL);
  *(_BYTE *)(v34 + swift_beginAccess(v0 + 16) = 4;
  uint64_t v30 = swift_allocObject(&unk_CD3E0, 32LL, 7LL);
  *(void *)(v30 + swift_beginAccess(v0 + 16) = sub_472E8;
  *(void *)(v30 + 24) = v29;
  uint64_t v31 = swift_allocObject(&unk_CD408, 32LL, 7LL);
  *(void *)(v31 + swift_beginAccess(v0 + 16) = sub_46E38;
  *(void *)(v31 + 24) = v30;
  uint64_t v32 = swift_allocObject(&unk_CD430, 32LL, 7LL);
  *(void *)(v32 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v32 + 24) = v31;
  uint64_t v36 = swift_allocObject(&unk_CD458, 32LL, 7LL);
  *(void *)(v36 + swift_beginAccess(v0 + 16) = sub_46EF0;
  *(void *)(v36 + 24) = v32;
  uint64_t v38 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v35 = _allocateUninitializedArray<A>(_:)(3LL, v38);
  uint64_t v37 = v3;
  swift_retain();
  *uint64_t v37 = sub_884C;
  v37[1] = v33;
  swift_retain();
  void v37[2] = sub_884C;
  void v37[3] = v34;
  swift_retain();
  v37[4] = sub_46F38;
  v37[5] = v36;
  sub_6648();
  swift_bridgeObjectRelease(v35);
  if (!os_log_type_enabled(v39, v40))
  {
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_6;
  }

  uint64_t v4 = *(void *)(v18 + 200);
  buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(8LL, &type metadata for UInt8);
  uint64_t v14 = sub_5150(&qword_D6B60);
  uint64_t v16 = sub_74D0(0LL, v14, v14);
  uint64_t v17 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
  uint32_t v41 = buf;
  uint64_t v42 = v16;
  uint64_t v43 = v17;
  sub_7528(0LL, &v41);
  sub_7528(1LL, &v41);
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
  uint64_t v45 = v33;
  uint64_t result = sub_753C(&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
  if (!v4)
  {
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v45 = v34;
    sub_753C(&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_46F38;
    uint64_t v45 = v36;
    sub_753C(&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    _os_log_impl(&dword_0, v39, v40, "MediaService canPlayMusic: %{BOOL}d", buf, v28);
    sub_7580(v16, 0LL);
    sub_7580(v17, 0LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
LABEL_6:
    uint64_t v7 = *(void *)(v18 + 160);
    uint64_t v6 = *(void *)(v18 + 144);
    uint64_t v8 = *(void *)(v18 + 136);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    uint64_t v11 = *(void *)(v18 + 184);
    uint64_t v12 = *(void *)(v18 + 160);
    uint64_t v13 = *(void *)(v18 + 152);
    uint64_t v10 = *(void (**)(void))(v18 + 120);
    swift_retain();
    swift_beginAccess(v18 + 216);
    char v9 = *(_BYTE *)(v18 + 216);
    swift_endAccess(v18 + 16);
    v10(v9 & 1);
    swift_release();
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(*(void *)(v18 + 56) + 8LL))();
  }

  return result;
}

uint64_t sub_46444()
{
  uint64_t v1 = v0[25];
  uint64_t v25 = v1;
  uint64_t v2 = v0[19];
  uint64_t v26 = v0[18];
  uint64_t v27 = v0[17];
  v0[7] = v0;
  swift_errorRetain(v1);
  v0[8] = v25;
  uint64_t v3 = sub_AD514();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v2, v3, v27);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  v0[9] = 2LL;
  unint64_t v28 = sub_7788();
  unint64_t v29 = sub_77F0();
  unint64_t v5 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 26, v0 + 9, &type metadata for UInt32, &type metadata for Int, v28, v29, v5);
  uint32_t v30 = *((_DWORD *)v0 + 52);
  uint64_t v6 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v33 = _allocateUninitializedArray<A>(_:)(0LL, v6);
  if (os_log_type_enabled(v32, v31))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v18 = sub_5150(&qword_D6B60);
    uint64_t v20 = sub_74D0(0LL, v18, v18);
    uint64_t v21 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    *(void *)(v24 + swift_beginAccess(v0 + 80) = buf;
    *(void *)(v24 + 8sub_1D580(v0 + 8) = v20;
    *(void *)(v24 + 96) = v21;
    sub_7528(0LL, (_BYTE **)(v24 + 80));
    sub_7528(0LL, (_BYTE **)(v24 + 80));
    *(void *)(v24 + 104) = v33;
    uint64_t v22 = (void *)swift_task_alloc(48LL);
    void v22[2] = v24 + 80;
    v22[3] = v24 + 88;
    v22[4] = v24 + 96;
    uint64_t v23 = sub_5150(&qword_D6B78);
    unint64_t v7 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v22, v23, v7);
    swift_task_dealloc(v22);
    _os_log_impl(&dword_0, v32, v31, "MediaService unable to get music subscription state", buf, v30);
    sub_7580(v20, 0LL);
    sub_7580(v21, 0LL);
    UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease(v33);
  uint64_t v12 = *(void *)(v24 + 200);
  uint64_t v10 = *(void *)(v24 + 152);
  uint64_t v9 = *(void *)(v24 + 144);
  uint64_t v11 = *(void *)(v24 + 136);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  swift_errorRelease(v12);
  swift_errorRelease(v12);
  uint64_t v15 = *(void *)(v24 + 184);
  uint64_t v16 = *(void *)(v24 + 160);
  uint64_t v17 = *(void *)(v24 + 152);
  uint64_t v14 = *(void (**)(void))(v24 + 120);
  swift_retain();
  swift_beginAccess(v24 + 216);
  char v13 = *(_BYTE *)(v24 + 216);
  swift_endAccess(v24 + 16);
  v14(v13 & 1);
  swift_release();
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(*(void *)(v24 + 56) + 8LL))();
}

uint64_t sub_46860(char a1)
{
  return a1 & 1;
}

uint64_t sub_46880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v23[4] = a4;
  uint64_t v21 = type metadata accessor for TaskPriority(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1LL) == 1)
  {
    sub_47158(a1);
    uint64_t v16 = 0LL;
  }

  else
  {
    unsigned __int8 v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a1, v21);
    uint64_t v16 = v15;
  }

  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(a3 + 24);
  swift_unknownObjectRetain();
  if (v14)
  {
    uint64_t ObjectType = swift_getObjectType(v14);
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
    uint64_t v10 = v5;
    swift_unknownObjectRelease(v14);
    uint64_t v11 = v9;
    uint64_t v12 = v10;
  }

  else
  {
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
  }

  unint64_t v7 = (void *)swift_allocObject(&unk_CD340, 40LL, 7LL);
  v7[2] = a4;
  v7[3] = a2;
  v7[4] = a3;
  uint64_t v8 = 0LL;
  if (v11 != 0 || v12 != 0)
  {
    v23[0] = 0LL;
    v23[1] = 0LL;
    v23[2] = v11;
    v23[3] = v12;
    uint64_t v8 = v23;
  }

  return swift_task_create(v16 | 0x1C00, v8, a4, &unk_D7D38, v7);
}

uint64_t sub_46AA8()
{
  return v0;
}

uint64_t sub_46ACC()
{
  uint64_t v0 = sub_46AA8();
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_46B08(uint64_t result)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    if (result > 0)
    {
      uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
      uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
      *(void *)(v2 + swift_beginAccess(v0 + 16) = v4;
      uint64_t v3 = (void *)v2;
    }

    else
    {
      swift_retain(&_swiftEmptyArrayStorage);
      uint64_t v3 = &_swiftEmptyArrayStorage;
    }

    type metadata accessor for OS_dispatch_queue.Attributes(0LL);
    return (uint64_t)v3;
  }

  return result;
}

uint64_t sub_46BC0(uint64_t result)
{
  uint64_t v4 = result;
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    if (result > 0)
    {
      uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
      uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
      *(void *)(v2 + swift_beginAccess(v0 + 16) = v4;
      uint64_t v3 = (void *)v2;
    }

    else
    {
      swift_retain(&_swiftEmptyArrayStorage);
      uint64_t v3 = &_swiftEmptyArrayStorage;
    }

    type metadata accessor for DispatchWorkItemFlags(0LL);
    return (uint64_t)v3;
  }

  return result;
}

uint64_t sub_46C78(uint64_t a1, int *a2)
{
  *(void *)(v2 + swift_beginAccess(v0 + 16) = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc(a2[1]);
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_46CFC;
  return v5(a1);
}

uint64_t sub_46CFC()
{
  uint64_t v3 = *v0;
  uint64_t v1 = *(void *)(*v0 + 24);
  *(void *)(*v0 + swift_beginAccess(v0 + 16) = *v0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(*(void *)(v3 + 16) + 8LL))();
}

uint64_t sub_46D60()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_46D88()
{
  return swift_deallocObject(v0, 17LL);
}

BOOL sub_46DB0(uint64_t (*a1)(void))
{
  return (a1() & 1) != 0;
}

uint64_t sub_46DFC()
{
  return swift_deallocObject(v2, 32LL);
}

BOOL sub_46E38()
{
  return sub_46DB0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_46E44()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_46E80@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_46EB4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_46EF0@<X0>(_DWORD *a1@<X8>)
{
  return sub_46E80(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_46EFC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_46F38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  unint64_t v4 = sub_46F98();
  return sub_42120(a1, v5, a2, a3, v9, v10, (uint64_t)&type metadata for Int32, v4);
}

unint64_t sub_46F98()
{
  uint64_t v2 = qword_D7C58;
  if (!qword_D7C58)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Int32, &type metadata for Int32);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7C58);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_47000()
{
  uint64_t v3 = qword_D7C60;
  if (!qword_D7C60)
  {
    uint64_t v0 = type metadata accessor for MusicAuthorization.Status(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for MusicAuthorization.Status, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7C60);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_47070()
{
  return swift_deallocObject(v2, 48LL);
}

uint64_t sub_470B4(uint64_t a1)
{
  *(void *)(v2 + swift_beginAccess(v0 + 16) = v2;
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v3 = (void *)swift_task_alloc(dword_D7C74);
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_65B4;
  return sub_45BD4(a1, v5, v6, v7, v8);
}

uint64_t sub_47158(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TaskPriority(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_471C8()
{
  return swift_deallocObject(v2, 40LL);
}

uint64_t sub_4720C(uint64_t a1)
{
  *(void *)(v2 + swift_beginAccess(v0 + 16) = v2;
  uint64_t v5 = *(int **)(v1 + 24);
  uint64_t v3 = (void *)swift_task_alloc(dword_D7D34);
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_65B4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_D7D30 + dword_D7D30))(a1, v5);
}

uint64_t sub_472C0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_472E8()
{
  return sub_46860(*(_BYTE *)(v0 + 16) & 1);
}

uint64_t sub_472F4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4731C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_47344()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_47380()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_473BC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_473F8()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_47434()
{
  uint64_t v3 = qword_D7D40;
  if (!qword_D7D40)
  {
    uint64_t v0 = type metadata accessor for DispatchWorkItemFlags(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7D40);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_474A4()
{
  uint64_t v3 = qword_D7D50;
  if (!qword_D7D50)
  {
    uint64_t v0 = sub_8D64(&qword_D7D48);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7D50);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_47514()
{
  return swift_deallocObject(v2, 32LL);
}

Swift::Int sub_47558(char a1)
{
  return sub_4537C(a1 & 1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_47568()
{
  uint64_t v3 = qword_D7D58;
  if (!qword_D7D58)
  {
    uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7D58);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_475D8()
{
  uint64_t v3 = qword_D7D68;
  if (!qword_D7D68)
  {
    uint64_t v0 = sub_8D64(&qword_D7D60);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7D68);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_47648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[31] = a5;
  v5[30] = a4;
  v5[29] = a3;
  v5[28] = a2;
  v5[27] = a1;
  v5[21] = v5;
  v5[17] = 0LL;
  v5[18] = 0LL;
  v5[19] = 0LL;
  v5[20] = 0LL;
  v5[22] = 0LL;
  _BYTE v5[24] = 0LL;
  v5[25] = 0LL;
  uint64_t v6 = type metadata accessor for IntentType();
  v5[32] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[33] = v7;
  v5[34] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  v5[35] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[36] = v9;
  uint64_t v11 = *(void *)(v9 + 64);
  v5[37] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v5[38] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v5[17] = a1;
  v5[18] = a2;
  v5[19] = a3;
  v5[20] = a4;
  v5[22] = a5;
  return swift_task_switch(sub_4779C, 0LL);
}

uint64_t sub_4779C()
{
  uint64_t v1 = v0[38];
  uint64_t v34 = v0[36];
  uint64_t v35 = v0[35];
  uint64_t v40 = v0[31];
  uint64_t v39 = v0[30];
  uint64_t v38 = v0[29];
  uint64_t v37 = v0[28];
  uint64_t v36 = v0[27];
  v0[21] = v0;
  uint64_t v2 = sub_AD514();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  v0[39] = v3;
  v3(v1, v2, v35);
  swift_bridgeObjectRetain(v37);
  uint64_t v45 = swift_allocObject(&unk_CD4A8, 32LL, 7LL);
  *(void *)(v45 + swift_beginAccess(v0 + 16) = v36;
  *(void *)(v45 + 24) = v37;
  swift_bridgeObjectRetain(v39);
  uint64_t v47 = swift_allocObject(&unk_CD4D0, 32LL, 7LL);
  *(void *)(v47 + swift_beginAccess(v0 + 16) = v38;
  *(void *)(v47 + 24) = v39;
  swift_bridgeObjectRetain(v40);
  uint64_t v41 = swift_allocObject(&unk_CD4F8, 24LL, 7LL);
  *(void *)(v41 + swift_beginAccess(v0 + 16) = v40;
  swift_retain();
  uint64_t v49 = swift_allocObject(&unk_CD520, 32LL, 7LL);
  *(void *)(v49 + swift_beginAccess(v0 + 16) = sub_1CD70;
  *(void *)(v49 + 24) = v41;
  uint64_t v4 = swift_release();
  uint64_t v63 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v64 = static os_log_type_t.info.getter();
  v0[23] = 32LL;
  unint64_t v42 = sub_7788();
  v0[40] = v42;
  unint64_t v43 = sub_77F0();
  v0[41] = v43;
  unint64_t v5 = sub_7858();
  v0[42] = v5;
  UnsignedInteger<>.init<A>(_:)(v0 + 51, v0 + 23, &type metadata for UInt32, &type metadata for Int, v42, v43, v5);
  uint32_t size = *((_DWORD *)v0 + 102);
  uint64_t v51 = swift_allocObject(&unk_CD548, 17LL, 7LL);
  *(_BYTE *)(v51 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v52 = swift_allocObject(&unk_CD570, 17LL, 7LL);
  *(_BYTE *)(v52 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v46 = swift_allocObject(&unk_CD598, 32LL, 7LL);
  *(void *)(v46 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v46 + 24) = v45;
  uint64_t v53 = swift_allocObject(&unk_CD5C0, 32LL, 7LL);
  *(void *)(v53 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v53 + 24) = v46;
  uint64_t v54 = swift_allocObject(&unk_CD5E8, 17LL, 7LL);
  *(_BYTE *)(v54 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v55 = swift_allocObject(&unk_CD610, 17LL, 7LL);
  *(_BYTE *)(v55 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v48 = swift_allocObject(&unk_CD638, 32LL, 7LL);
  *(void *)(v48 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v48 + 24) = v47;
  uint64_t v56 = swift_allocObject(&unk_CD660, 32LL, 7LL);
  *(void *)(v56 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v56 + 24) = v48;
  uint64_t v57 = swift_allocObject(&unk_CD688, 17LL, 7LL);
  *(_BYTE *)(v57 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v58 = swift_allocObject(&unk_CD6B0, 17LL, 7LL);
  *(_BYTE *)(v58 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v50 = swift_allocObject(&unk_CD6D8, 32LL, 7LL);
  *(void *)(v50 + swift_beginAccess(v0 + 16) = sub_49728;
  *(void *)(v50 + 24) = v49;
  uint64_t v60 = swift_allocObject(&unk_CD700, 32LL, 7LL);
  *(void *)(v60 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v60 + 24) = v50;
  uint64_t v62 = sub_5150((uint64_t *)&unk_D6B50);
  v0[43] = v62;
  uint64_t v59 = _allocateUninitializedArray<A>(_:)(9LL, v62);
  uint64_t v61 = v6;
  swift_retain();
  *uint64_t v61 = sub_884C;
  v61[1] = v51;
  swift_retain();
  v61[2] = sub_884C;
  v61[3] = v52;
  swift_retain();
  v61[4] = sub_8900;
  v61[5] = v53;
  swift_retain();
  v61[6] = sub_884C;
  v61[7] = v54;
  swift_retain();
  v61[8] = sub_884C;
  v61[9] = v55;
  swift_retain();
  v61[10] = sub_8900;
  v61[11] = v56;
  swift_retain();
  v61[12] = sub_884C;
  v61[13] = v57;
  swift_retain();
  v61[14] = sub_884C;
  v61[15] = v58;
  swift_retain();
  v61[16] = sub_8900;
  v61[17] = v60;
  sub_6648();
  swift_bridgeObjectRelease(v59);
  if (os_log_type_enabled(v63, v64))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(32LL, &type metadata for UInt8);
    uint64_t v29 = sub_5150(&qword_D6B60);
    uint64_t v31 = sub_74D0(0LL, v29, v29);
    uint64_t v32 = sub_74D0(3LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v65 = buf;
    uint64_t v66 = v31;
    uint64_t v67 = v32;
    sub_7528(2LL, &v65);
    sub_7528(3LL, &v65);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v69 = v51;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v69 = v52;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v69 = v53;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v69 = v54;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v69 = v55;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v69 = v56;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v69 = v57;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v69 = v58;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v69 = v60;
    sub_753C(&v68, (uint64_t)&v65, (uint64_t)&v66, (uint64_t)&v67);
    _os_log_impl( &dword_0,  v63,  v64,  "[SuggestionsProvider.submitIntentToSiriSuggestionsSubmitting] submitting: {requestId: %s, intent: %s, executionParameters: %s",  buf,  size);
    sub_7580(v31, 0LL);
    sub_7580(v32, 3LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v22 = v33[38];
  uint64_t v21 = v33[36];
  uint64_t v23 = v33[35];
  uint64_t v27 = (void *)v33[34];
  uint64_t v26 = v33[33];
  uint64_t v28 = v33[31];
  uint64_t v25 = v33[30];
  uint64_t v24 = v33[29];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v33[44] = v7;
  v7(v22, v23);
  type metadata accessor for SuggestionsIntentBuilder(0LL);
  swift_bridgeObjectRetain(v25);
  *uint64_t v27 = v24;
  v27[1] = v25;
  (*(void (**)(void))(v26 + 104))();
  uint64_t v8 = SuggestionsIntentBuilder.__allocating_init(intentName:)(v27);
  v33[45] = v8;
  v33[24] = v8;
  uint64_t v9 = sub_5150(&qword_D7D88);
  if ((Dictionary.isEmpty.getter(v28, &type metadata for String, v9, &protocol witness table for String) & 1) != 0)
  {
    ((void (*)(void))type metadata accessor for SiriSuggestionsAPIClients)();
    static SiriSuggestionsAPIClients.get()();
    uint64_t v18 = v33[5];
    uint64_t v16 = v33[6];
    sub_8C74(v33 + 2, v18);
    uint64_t v17 = dispatch thunk of SuggestionsIntentBuilder.build()();
    v33[48] = v17;
    uint64_t v15 = *sub_84124();
    swift_retain();
    v33[10] = type metadata accessor for DomainOwner(0LL);
    v33[11] = sub_49A3C();
    v33[7] = v15;
    uint64_t v13 = (void *)swift_task_alloc(async function pointer to SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)[1]);
    v33[49] = v13;
    uint64_t v14 = *(void *)(v16 + 8);
    *uint64_t v13 = v33[21];
    v13[1] = sub_487A8;
    return SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)(v33[27], v33[28], v17, v33 + 7, v18, v14);
  }

  else
  {
    type metadata accessor for SiriSuggestionsAPIClients(0LL);
    static SiriSuggestionsAPIClients.get()();
    uint64_t v20 = v33[15];
    uint64_t v19 = v33[16];
    sub_8C74(v33 + 12, v20);
    uint64_t v10 = (void *)swift_task_alloc(async function pointer to SiriSuggestionsBaseAPIClient.submitExecutionParams(for:executionParams:)[1]);
    v33[46] = v10;
    uint64_t v11 = *(void *)(v19 + 8);
    void *v10 = v33[21];
    v10[1] = sub_485C0;
    return SiriSuggestionsBaseAPIClient.submitExecutionParams(for:executionParams:)(v33[27], v33[28], v33[31], v20, v11);
  }

uint64_t sub_485C0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 368);
  *(void *)(v2 + 16sub_1D580(v0 + 8) = *v1;
  *(void *)(v2 + 376) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_48920, 0LL);
  }
  else {
    return swift_task_switch(sub_48664, 0LL);
  }
}

uint64_t sub_48664()
{
  v0[21] = v0;
  sub_4598(v0 + 12);
  type metadata accessor for SiriSuggestionsAPIClients();
  static SiriSuggestionsAPIClients.get()();
  uint64_t v8 = v0[5];
  uint64_t v5 = v0[6];
  sub_8C74(v0 + 2, v8);
  uint64_t v7 = dispatch thunk of SuggestionsIntentBuilder.build()();
  v0[48] = v7;
  uint64_t v4 = *sub_84124();
  swift_retain();
  v0[10] = type metadata accessor for DomainOwner(0LL);
  v0[11] = sub_49A3C();
  v0[7] = v4;
  uint64_t v1 = (void *)swift_task_alloc(async function pointer to SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)[1]);
  v6[49] = v1;
  uint64_t v2 = *(void *)(v5 + 8);
  *uint64_t v1 = v6[21];
  v1[1] = sub_487A8;
  return SiriSuggestionsBaseAPIClient.submitCurrentIntent(for:intent:owner:)(v6[27], v6[28], v7, v0 + 7, v8, v2);
}

uint64_t sub_487A8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 392);
  *(void *)(v2 + 16sub_1D580(v0 + 8) = *v1;
  v2 += 168LL;
  uint64_t v5 = (void *)(v2 - 112);
  *(void *)(v2 + 23sub_4598(v0 + 2) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_48FA0, 0LL);
  }
  sub_4598(v5);
  swift_release();
  return swift_task_switch(sub_48878, 0LL);
}

uint64_t sub_48878()
{
  v0[21] = v0;
  sub_4598(v0 + 2);
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[37];
  uint64_t v4 = v0[34];
  swift_release();
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0[21] + 8LL))();
}

uint64_t sub_48920()
{
  v0[21] = v0;
  sub_4598(v0 + 12);
  uint64_t v18 = v0[47];
  uint64_t v30 = v0[43];
  uint64_t v21 = v0[42];
  uint64_t v20 = v0[41];
  uint64_t v19 = v0[40];
  uint64_t v17 = (void (*)(uint64_t, uint64_t, uint64_t))v0[39];
  uint64_t v1 = v0[37];
  uint64_t v16 = v0[35];
  swift_errorRetain(v18);
  v0[25] = v18;
  uint64_t v2 = sub_AD514();
  v17(v1, v2, v16);
  swift_errorRetain(v18);
  uint64_t v23 = swift_allocObject(&unk_CD728, 24LL, 7LL);
  *(void *)(v23 + swift_beginAccess(v0 + 16) = v18;
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v32 = static os_log_type_t.error.getter();
  v0[26] = 12LL;
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v0 + 412),  v0 + 26,  &type metadata for UInt32,  &type metadata for Int,  v19,  v20,  v21);
  uint32_t size = *((_DWORD *)v0 + 103);
  uint64_t v25 = swift_allocObject(&unk_CD750, 17LL, 7LL);
  *(_BYTE *)(v25 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v26 = swift_allocObject(&unk_CD778, 17LL, 7LL);
  *(_BYTE *)(v26 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v24 = swift_allocObject(&unk_CD7A0, 32LL, 7LL);
  *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_1ACC8;
  *(void *)(v24 + 24) = v23;
  uint64_t v28 = swift_allocObject(&unk_CD7C8, 32LL, 7LL);
  *(void *)(v28 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v28 + 24) = v24;
  uint64_t v27 = _allocateUninitializedArray<A>(_:)(3LL, v30);
  uint64_t v29 = v3;
  swift_retain();
  *uint64_t v29 = sub_884C;
  v29[1] = v25;
  swift_retain();
  v29[2] = sub_884C;
  v29[3] = v26;
  swift_retain();
  v29[4] = sub_8900;
  v29[5] = v28;
  sub_6648();
  swift_bridgeObjectRelease(v27);
  if (os_log_type_enabled(v31, v32))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v11 = sub_5150(&qword_D6B60);
    uint64_t v13 = sub_74D0(0LL, v11, v11);
    uint64_t v14 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v33 = buf;
    uint64_t v34 = v13;
    uint64_t v35 = v14;
    sub_7528(2LL, &v33);
    sub_7528(1LL, &v33);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v25;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v26;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v37 = v28;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    _os_log_impl(&dword_0, v31, v32, "[SuggestionsProvider.submitIntentToSiriSuggestions] caught error: %s", buf, size);
    sub_7580(v13, 0LL);
    sub_7580(v14, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v7 = (void (*)(uint64_t, uint64_t))v15[44];
  uint64_t v5 = v15[37];
  uint64_t v6 = v15[35];

  v7(v5, v6);
  swift_errorRelease(v18);
  swift_errorRelease(v18);
  uint64_t v8 = v15[38];
  uint64_t v9 = v15[37];
  uint64_t v10 = v15[34];
  swift_release();
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v15[21] + 8LL))();
}

uint64_t sub_48FA0()
{
  v0[21] = v0;
  sub_4598(v0 + 7);
  swift_release();
  sub_4598(v0 + 2);
  uint64_t v18 = v0[50];
  uint64_t v30 = v0[43];
  uint64_t v21 = v0[42];
  uint64_t v20 = v0[41];
  uint64_t v19 = v0[40];
  uint64_t v17 = (void (*)(uint64_t, uint64_t, uint64_t))v0[39];
  uint64_t v1 = v0[37];
  uint64_t v16 = v0[35];
  swift_errorRetain(v18);
  v0[25] = v18;
  uint64_t v2 = sub_AD514();
  v17(v1, v2, v16);
  swift_errorRetain(v18);
  uint64_t v23 = swift_allocObject(&unk_CD728, 24LL, 7LL);
  *(void *)(v23 + swift_beginAccess(v0 + 16) = v18;
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v32 = static os_log_type_t.error.getter();
  v0[26] = 12LL;
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v0 + 412),  v0 + 26,  &type metadata for UInt32,  &type metadata for Int,  v19,  v20,  v21);
  uint32_t size = *((_DWORD *)v0 + 103);
  uint64_t v25 = swift_allocObject(&unk_CD750, 17LL, 7LL);
  *(_BYTE *)(v25 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v26 = swift_allocObject(&unk_CD778, 17LL, 7LL);
  *(_BYTE *)(v26 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v24 = swift_allocObject(&unk_CD7A0, 32LL, 7LL);
  *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_1ACC8;
  *(void *)(v24 + 24) = v23;
  uint64_t v28 = swift_allocObject(&unk_CD7C8, 32LL, 7LL);
  *(void *)(v28 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v28 + 24) = v24;
  uint64_t v27 = _allocateUninitializedArray<A>(_:)(3LL, v30);
  uint64_t v29 = v3;
  swift_retain();
  *uint64_t v29 = sub_884C;
  v29[1] = v25;
  swift_retain();
  v29[2] = sub_884C;
  v29[3] = v26;
  swift_retain();
  v29[4] = sub_8900;
  v29[5] = v28;
  sub_6648();
  swift_bridgeObjectRelease(v27);
  if (os_log_type_enabled(v31, v32))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v11 = sub_5150(&qword_D6B60);
    uint64_t v13 = sub_74D0(0LL, v11, v11);
    uint64_t v14 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v33 = buf;
    uint64_t v34 = v13;
    uint64_t v35 = v14;
    sub_7528(2LL, &v33);
    sub_7528(1LL, &v33);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v25;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v26;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v37 = v28;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    _os_log_impl(&dword_0, v31, v32, "[SuggestionsProvider.submitIntentToSiriSuggestions] caught error: %s", buf, size);
    sub_7580(v13, 0LL);
    sub_7580(v14, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v7 = (void (*)(uint64_t, uint64_t))v15[44];
  uint64_t v5 = v15[37];
  uint64_t v6 = v15[35];

  v7(v5, v6);
  swift_errorRelease(v18);
  swift_errorRelease(v18);
  uint64_t v8 = v15[38];
  uint64_t v9 = v15[37];
  uint64_t v10 = v15[34];
  swift_release();
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v15[21] + 8LL))();
}

uint64_t sub_49638()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49674()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_496B0()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_496EC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49728()
{
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = sub_5150(&qword_D7D78);
  unint64_t v1 = sub_49774();
  return sub_75EC(v5, v3, v4, v1);
}

unint64_t sub_49774()
{
  uint64_t v3 = qword_D7D80;
  if (!qword_D7D80)
  {
    uint64_t v0 = sub_8D64(&qword_D7D78);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7D80);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_497E4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4980C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_49834()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49870()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_498AC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_498D4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_498FC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49938()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49974()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4999C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_499C4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49A00()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_49A3C()
{
  uint64_t v3 = qword_D7D90;
  if (!qword_D7D90)
  {
    uint64_t v0 = type metadata accessor for DomainOwner(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DomainOwner, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7D90);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_49AAC()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_49AE8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_49B10()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_49B38()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_49B74()
{
  return swift_deallocObject(v2, 32LL);
}

void *type metadata accessor for SuggestionsProvider()
{
  return &unk_CD7F0;
}

Swift::Bool __swiftcall isResponseFramework2Available()()
{
  char v5 = 1;
  object = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "/System/Library/Snippets/UIPlugins/SiriSocialConversationUIPlugin.bundle",  0x48uLL,  1)._object;
  id v3 = [(id)objc_opt_self(NSFileManager) defaultManager];
  swift_bridgeObjectRetain(object);
  id v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  unsigned __int8 v2 = [v3 fileExistsAtPath:v1 isDirectory:&v5];

  swift_bridgeObjectRelease(object);
  return v2 & 1;
}

id sub_49CE4(uint64_t a1, uint64_t a2, void *a3)
{
  v25[4] = a1;
  v25[5] = a2;
  v25[3] = a3;
  sub_49F3C();
  uint64_t v3 = sub_49FA0();
  id v23 = sub_49FD0(v3, v4);
  v25[2] = v23;
  uint64_t v13 = sub_5150(&qword_D7DA0);
  uint64_t v9 = _allocateUninitializedArray<A>(_:)(1LL, v13);
  uint64_t v12 = v5;
  v25[0] = sub_4A014();
  v25[1] = v6;
  _convertToAnyHashable<A>(_:)();
  swift_bridgeObjectRetain(a2);
  v12[8] = &type metadata for String;
  v12[5] = a1;
  v12[6] = a2;
  sub_6648();
  sub_8DD8((uint64_t)v25);
  uint64_t v14 = Dictionary.init(dictionaryLiteral:)( v9,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  [v23 setUserData:isa];

  id v19 = (id)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  uint64_t v18 = a3[3];
  uint64_t v17 = a3[4];
  sub_8C74(a3, v18);
  uint64_t v20 = (void *)DeviceState.asInvocationContext.getter(v18, v17);
  id v22 = objc_msgSend(v19, "runSiriKitExecutorCommandWithContext:payload:");

  uint64_t v21 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  id v7 = v22;
  id v24 = [v21 wrapCommandInStartLocalRequest:v22];
  swift_unknownObjectRelease(v22);

  return v24;
}

unint64_t sub_49F3C()
{
  uint64_t v3 = qword_D7D98;
  if (!qword_D7D98)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___SKIDirectInvocationPayload);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7D98);
    return ObjCClassMetadata;
  }

  return v3;
}

uint64_t sub_49FA0()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.directInvocation.socialConversation",  0x32uLL,  1)._countAndFlagsBits;
}

id sub_49FD0(uint64_t a1, uint64_t a2)
{
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  return sub_4A700(a1, a2);
}

uint64_t sub_4A014()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("intentName", 0xAuLL, 1)._countAndFlagsBits;
}

BOOL sub_4A044(uint64_t a1, void *a2)
{
  string._uint64_t countAndFlagsBits = a1;
  string._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(1LL, &type metadata for StaticString);
  *(void *)uint64_t v3 = "com.apple.siri.directInvocation.socialConversation";
  *(void *)(v3 + sub_1D580(v0 + 8) = 50LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 16) = 2;
  sub_6648();
  rawValue = v2._rawValue;
  Swift::Int v7 = _findStringSwitchCase(cases:string:)(v2, string);
  swift_bridgeObjectRelease(rawValue);
  swift_bridgeObjectRelease(string._object);
  return v7 != 0;
}

uint64_t sub_4A124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_4A16C();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_4A16C()
{
  uint64_t v2 = qword_D7DA8;
  if (!qword_D7DA8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B72FC, &unk_CD8A0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DA8);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_4A1D8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_4A16C();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_4A214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_4A16C();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_4A258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_4A16C();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

BOOL sub_4A29C(uint64_t a1, void *a2)
{
  string._uint64_t countAndFlagsBits = a1;
  string._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(1LL, &type metadata for StaticString);
  *(void *)uint64_t v3 = "intentName";
  *(void *)(v3 + sub_1D580(v0 + 8) = 10LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 16) = 2;
  sub_6648();
  rawValue = v2._rawValue;
  Swift::Int v7 = _findStringSwitchCase(cases:string:)(v2, string);
  swift_bridgeObjectRelease(rawValue);
  swift_bridgeObjectRelease(string._object);
  return v7 != 0;
}

BOOL sub_4A37C@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_4A044(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_4A3B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_49FA0();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_4A3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_4A42C();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_4A42C()
{
  uint64_t v2 = qword_D7DB0;
  if (!qword_D7DB0)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B72C4, &unk_CD930);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DB0);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_4A498(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_4A42C();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_4A4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_4A42C();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_4A518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_4A42C();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

BOOL sub_4A55C@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_4A29C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_4A598@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_4A014();
  *a1 = result;
  a1[1] = v2;
  return result;
}

void *type metadata accessor for SocialConversationDirectInvocation()
{
  return &unk_CD810;
}

void *type metadata accessor for DirectInvocationURI()
{
  return &unk_CD8A0;
}

void *type metadata accessor for DirectInvocationKey()
{
  return &unk_CD930;
}

unint64_t sub_4A600()
{
  return sub_4A614();
}

unint64_t sub_4A614()
{
  uint64_t v2 = qword_D7DB8;
  if (!qword_D7DB8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7234, &unk_CD930);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DB8);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_4A680()
{
  return sub_4A694();
}

unint64_t sub_4A694()
{
  uint64_t v2 = qword_D7DC0;
  if (!qword_D7DC0)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B729C, &unk_CD8A0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DC0);
    return WitnessTable;
  }

  return v2;
}

id sub_4A700(uint64_t a1, uint64_t a2)
{
  id v4 = String._bridgeToObjectiveC()();
  id v6 = objc_msgSend(v3, "initWithIdentifier:");

  swift_bridgeObjectRelease(a2);
  return v6;
}

uint64_t *sub_4A758()
{
  if (qword_D68A0 != -1) {
    swift_once(&qword_D68A0, sub_4A7F0);
  }
  return &qword_D95A8;
}

void *sub_4A7AC@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = sub_C094(a1, a4);
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_4A7F0()
{
  uint64_t result = sub_4A87C(v2, v1);
  qword_D95A8 = result;
  return result;
}

uint64_t type metadata accessor for NLGOverrider()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin12NLGOverrider);
}

uint64_t sub_4A87C(void *a1, void *a2)
{
  return sub_4A8CC(a1, a2);
}

uint64_t sub_4A8CC(void *a1, void *a2)
{
  v30[5] = 0LL;
  uint64_t v26 = 0LL;
  uint64_t v24 = 0LL;
  v30[7] = a1;
  v30[6] = a2;
  type metadata accessor for GeneralJokeRetriever(0LL);
  sub_2A46C(a1, v30);
  sub_2A46C(a2, v29);
  uint64_t v17 = sub_61368(v30, v29);
  v28[5] = v17;
  type metadata accessor for SpecificJokeRetriever(0LL);
  sub_2A46C(a2, v28);
  uint64_t v15 = sub_613B8(v28);
  v27[1] = v15;
  uint64_t v16 = *sub_61400();
  swift_bridgeObjectRetain(v16);
  v27[0] = v16;
  swift_retain();
  uint64_t v18 = sub_5150(&qword_D7DC8);
  uint64_t v19 = sub_5150(&qword_D7DD0);
  unint64_t v21 = sub_4AC6C();
  uint64_t v22 = sub_25AD4( (void (*)(char *, char *))sub_4AC3C,  v17,  v18,  v19,  (uint64_t)&type metadata for Never,  v21,  v2,  (uint64_t)&protocol witness table for Never,  v20);
  swift_release();
  sub_1B82C(v27);
  uint64_t v26 = v22;
  uint64_t v10 = *sub_61454();
  swift_bridgeObjectRetain(v10);
  uint64_t v25 = v10;
  swift_retain();
  uint64_t v11 = sub_25AD4( (void (*)(char *, char *))sub_4AD84,  v15,  v18,  v19,  (uint64_t)&type metadata for Never,  v21,  v3,  (uint64_t)&protocol witness table for Never,  v20);
  swift_release();
  sub_1B82C(&v25);
  uint64_t v24 = v11;
  uint64_t v23 = static Array.+ infix(_:_:)(v22, v11, v19);
  uint64_t v6 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v7 = sub_5150(&qword_D7DE0);
  uint64_t v8 = sub_5150(&qword_D7DE8);
  unint64_t v9 = sub_4ADB4();
  unint64_t v4 = sub_4AE24();
  *(void *)(v12 + swift_beginAccess(v0 + 16) = Dictionary.init<A>(uniqueKeysWithValues:)(&v23, v6, v7, v8, v9, v4);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v22);
  swift_release();
  swift_release();
  sub_1D580(a2);
  sub_1D580(a1);
  return v12;
}

uint64_t sub_4AB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(int *)(sub_5150(&qword_D7DD0) + 48);
  uint64_t v3 = type metadata accessor for NLGCATIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a3, a1);
  swift_retain();
  uint64_t result = type metadata accessor for GeneralJokeRetriever(0LL);
  char v5 = (void *)(a3 + v7);
  v5[3] = result;
  v5[4] = &off_CF0D8;
  *char v5 = a2;
  return result;
}

uint64_t sub_4AC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_4AB94(a1, v3, a2);
}

unint64_t sub_4AC6C()
{
  uint64_t v3 = qword_D7DD8;
  if (!qword_D7DD8)
  {
    uint64_t v0 = sub_8D64(&qword_D7DC8);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DD8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_4ACDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(int *)(sub_5150(&qword_D7DD0) + 48);
  uint64_t v3 = type metadata accessor for NLGCATIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a3, a1);
  swift_retain();
  uint64_t result = type metadata accessor for SpecificJokeRetriever(0LL);
  char v5 = (void *)(a3 + v7);
  v5[3] = result;
  v5[4] = &off_CF0C0;
  *char v5 = a2;
  return result;
}

uint64_t sub_4AD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_4ACDC(a1, v3, a2);
}

unint64_t sub_4ADB4()
{
  uint64_t v3 = qword_D7DF0;
  if (!qword_D7DF0)
  {
    uint64_t v0 = type metadata accessor for NLGCATIdentifier(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NLGCATIdentifier, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DF0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_4AE24()
{
  uint64_t v3 = qword_D7DF8;
  if (!qword_D7DF8)
  {
    uint64_t v0 = sub_8D64(&qword_D7DE8);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7DF8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_4AE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v109 = a3;
  uint64_t v122 = a1;
  uint64_t v128 = a2;
  unint64_t v151 = 0LL;
  uint64_t v150 = 0LL;
  uint64_t v148 = 0LL;
  uint64_t v149 = 0LL;
  uint64_t v147 = 0LL;
  uint64_t v110 = 0LL;
  uint64_t v139 = 0LL;
  uint64_t v140 = 0LL;
  uint64_t v111 = 0LL;
  uint64_t v112 = type metadata accessor for Logger(0LL);
  uint64_t v113 = *(void *)(v112 - 8);
  unint64_t v114 = (*(void *)(v113 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  uint64_t v115 = (char *)&v54 - v114;
  unint64_t v116 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v117 = (char *)&v54 - v116;
  uint64_t v118 = type metadata accessor for NLGCATIdentifier(v7);
  uint64_t v119 = *(void *)(v118 - 8);
  unint64_t v120 = (*(void *)(v119 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  unint64_t v121 = (char *)&v54 - v120;
  unint64_t v151 = (char *)&v54 - v120;
  uint64_t v124 = *(void *)(*(void *)(sub_5150(&qword_D7E00) - 8) + 64LL);
  unint64_t v123 = (v124 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v10 = __chkstk_darwin(v9);
  uint64_t v125 = (char *)&v54 - v123;
  unint64_t v126 = (v124 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v127 = (char *)&v54 - v126;
  uint64_t v150 = (char *)&v54 - v126;
  uint64_t v148 = v11;
  uint64_t v149 = v12;
  uint64_t v147 = v3;
  swift_bridgeObjectRetain(v12);
  if (v128)
  {
    uint64_t v107 = v122;
    uint64_t v108 = v128;
    uint64_t v103 = v128;
    uint64_t v104 = v122;
    uint64_t v139 = v122;
    uint64_t v140 = v128;
    uint64_t v137 = v122;
    uint64_t v138 = v128;
    Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
    uint64_t v105 = &v136;
    Swift::String v136 = v13;
    unint64_t v14 = sub_B880();
    int v106 = StringProtocol.contains<A>(_:)(v105, &type metadata for String, &type metadata for String, v14);
    sub_8DD8((uint64_t)v105);
    if ((v106 & 1) != 0)
    {
      swift_bridgeObjectRetain(v103);
      NLGCATIdentifier.init(_:)(v104, v103);
    }

    else
    {
      unsigned int v102 = 1;
      Swift::String v101 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
      swift_bridgeObjectRetain(v103);
      NLGCATIdentifier.init(_:_:)(v101._countAndFlagsBits, v101._object, v104, v103);
      (*(void (**)(char *, void, void, uint64_t))(v119 + 56))(v127, 0LL, v102, v118);
    }

    sub_4F5C4(v127, v125);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v125, 1LL, v118) == 1)
    {
      uint64_t v16 = v117;
      sub_4F680((uint64_t)v125);
      uint64_t v17 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v16, v17, v112);
      swift_bridgeObjectRetain(v103);
      uint64_t v89 = 32LL;
      uint64_t v90 = 7LL;
      uint64_t v18 = swift_allocObject(&unk_CD9A8, 32LL, 7LL);
      uint64_t v19 = v103;
      uint64_t v91 = v18;
      *(void *)(v18 + swift_beginAccess(v0 + 16) = v104;
      *(void *)(v18 + 24) = v19;
      uint64_t v99 = (os_log_s *)Logger.logObject.getter(v18);
      int v100 = static os_log_type_t.error.getter();
      unint64_t v86 = &v134;
      uint64_t v134 = 12LL;
      unint64_t v84 = sub_7788();
      unint64_t v85 = sub_77F0();
      unint64_t v20 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v135, v86, &type metadata for UInt32, &type metadata for Int, v84, v85, v20);
      uint32_t v87 = v135;
      uint64_t v88 = 17LL;
      uint64_t v21 = swift_allocObject(&unk_CD9D0, 17LL, v90);
      uint64_t v22 = v88;
      uint64_t v23 = v90;
      uint64_t v93 = v21;
      *(_BYTE *)(v21 + swift_beginAccess(v0 + 16) = 32;
      uint64_t v24 = swift_allocObject(&unk_CD9F8, v22, v23);
      uint64_t v25 = v89;
      uint64_t v26 = v90;
      uint64_t v94 = v24;
      *(_BYTE *)(v24 + swift_beginAccess(v0 + 16) = 8;
      uint64_t v27 = swift_allocObject(&unk_CDA20, v25, v26);
      uint64_t v28 = v89;
      uint64_t v29 = v90;
      uint64_t v30 = v27;
      uint64_t v31 = v91;
      uint64_t v92 = v30;
      *(void *)(v30 + swift_beginAccess(v0 + 16) = sub_1B890;
      *(void *)(v30 + 24) = v31;
      uint64_t v32 = swift_allocObject(&unk_CDA48, v28, v29);
      uint64_t v33 = v92;
      uint64_t v96 = v32;
      *(void *)(v32 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v32 + 24) = v33;
      uint64_t v98 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v95 = _allocateUninitializedArray<A>(_:)(3LL, v98);
      uint64_t v97 = v34;
      swift_retain();
      uint64_t v35 = v93;
      uint64_t v36 = v97;
      void *v97 = sub_884C;
      v36[1] = v35;
      swift_retain();
      uint64_t v37 = v94;
      uint64_t v38 = v97;
      v97[2] = sub_884C;
      v38[3] = v37;
      swift_retain();
      uint64_t v39 = v95;
      uint64_t v40 = v96;
      uint64_t v41 = v97;
      v97[4] = sub_8900;
      v41[5] = v40;
      sub_6648();
      swift_bridgeObjectRelease(v39);
      if (os_log_type_enabled(v99, (os_log_type_t)v100))
      {
        uint64_t v42 = v110;
        uint64_t v77 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v76 = sub_5150(&qword_D6B60);
        uint64_t v78 = sub_74D0(0LL, v76, v76);
        uint64_t v79 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v80 = &v133;
        unint64_t v133 = v77;
        uint64_t v81 = &v132;
        uint64_t v132 = v78;
        uint64_t v82 = &v131;
        uint64_t v131 = v79;
        sub_7528(2LL, &v133);
        sub_7528(1LL, v80);
        uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v130 = v93;
        sub_753C(&v129, (uint64_t)v80, (uint64_t)v81, (uint64_t)v82);
        uint64_t v83 = v42;
        if (v42)
        {
          __break(1u);
        }

        else
        {
          uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v130 = v94;
          sub_753C(&v129, (uint64_t)&v133, (uint64_t)&v132, (uint64_t)&v131);
          uint64_t v75 = 0LL;
          uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v130 = v96;
          sub_753C(&v129, (uint64_t)&v133, (uint64_t)&v132, (uint64_t)&v131);
          _os_log_impl(&dword_0, v99, (os_log_type_t)v100, "Invalid identifier: %s", v77, v87);
          sub_7580(v78, 0LL);
          sub_7580(v79, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v113 + 8))(v117, v112);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v109, 1LL, 1LL, v118);
      sub_4F680((uint64_t)v127);
      return swift_bridgeObjectRelease(v103);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v121, v125, v118);
      (*(void (**)(uint64_t, char *, uint64_t))(v119 + 16))(v109, v121, v118);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v109, 0LL, 1LL, v118);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v121, v118);
      sub_4F680((uint64_t)v127);
      return swift_bridgeObjectRelease(v103);
    }
  }

  else
  {
    unint64_t v43 = v115;
    uint64_t v44 = sub_AD514();
    uint64_t v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v113 + 16))(v43, v44, v112);
    int v73 = (os_log_s *)Logger.logObject.getter(v45);
    int v72 = static os_log_type_t.error.getter();
    uint64_t v70 = &v145;
    uint64_t v145 = 2LL;
    unint64_t v68 = sub_7788();
    unint64_t v69 = sub_77F0();
    unint64_t v46 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v146, v70, &type metadata for UInt32, &type metadata for Int, v68, v69, v46);
    uint32_t v71 = v146;
    uint64_t v47 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v74 = _allocateUninitializedArray<A>(_:)(0LL, v47);
    if (os_log_type_enabled(v73, (os_log_type_t)v72))
    {
      uint64_t v48 = v110;
      uint64_t v58 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v56 = sub_5150(&qword_D6B60);
      uint64_t v57 = 0LL;
      uint64_t v59 = sub_74D0(0LL, v56, v56);
      uint64_t v60 = sub_74D0(v57, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      os_log_type_t v64 = &v144;
      uint64_t v144 = v58;
      uint64_t v65 = &v143;
      uint64_t v143 = v59;
      uint64_t v62 = &v142;
      uint64_t v142 = v60;
      unsigned int v61 = 0;
      sub_7528(0LL, &v144);
      sub_7528(v61, v64);
      uint64_t v141 = v74;
      uint64_t v63 = &v54;
      __chkstk_darwin(v49);
      uint64_t v50 = v65;
      uint64_t v51 = &v54 - 6;
      uint64_t v66 = &v54 - 6;
      v51[2] = (uint64_t)v64;
      v51[3] = (uint64_t)v50;
      v51[4] = v52;
      uint64_t v67 = sub_5150(&qword_D6B78);
      unint64_t v53 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v66, v67, v53);
      if (v48)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v73, (os_log_type_t)v72, "Identifier is empty", v58, v71);
        uint64_t v55 = 0LL;
        sub_7580(v59, 0LL);
        sub_7580(v60, v55);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v74);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v74);
    }

    (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v112);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v109, 1LL, 1LL, v118);
  }

uint64_t sub_4BCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v15 = a5;
  uint64_t v20 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v31 = 0LL;
  uint64_t v29 = 0LL;
  uint64_t v30 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t v27 = 0LL;
  uint64_t v26 = 0LL;
  unint64_t v16 = (*(void *)(*(void *)(sub_5150(&qword_D7E00) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v24 = (uint64_t)&v15 - v16;
  uint64_t v25 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v23 = *(void *)(v25 - 8);
  unint64_t v21 = (*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v22 = (uint64_t)&v15 - v21;
  uint64_t v31 = (char *)&v15 - v21;
  uint64_t v29 = v8;
  uint64_t v30 = v9;
  uint64_t v28 = v10;
  uint64_t v27 = v11;
  uint64_t v26 = v5;
  sub_4AE94(v8, v9, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1LL, v25) == 1)
  {
    uint64_t result = sub_4F680(v24);
    unint64_t v14 = v15;
    *uint64_t v15 = 0LL;
    v14[1] = 0LL;
    v14[2] = 0LL;
    void v14[3] = 0LL;
    v14[4] = 0LL;
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v24, v25);
    sub_4BE98(v22, v17, v18, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v25);
  }

  return result;
}

uint64_t sub_4BE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v104 = a4;
  uint64_t v119 = a1;
  uint64_t v120 = a2;
  unint64_t v121 = a3;
  uint64_t v144 = 0LL;
  uint64_t v143 = 0LL;
  uint64_t v142 = 0LL;
  uint64_t v141 = 0LL;
  uint64_t v106 = 0LL;
  uint64_t v112 = 0LL;
  uint64_t v107 = type metadata accessor for Locale(0LL);
  uint64_t v108 = *(void *)(v107 - 8);
  uint64_t v109 = *(void *)(v108 + 64);
  unint64_t v110 = (v109 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v111 = (char *)&v55 - v110;
  uint64_t v113 = type metadata accessor for Logger(v6);
  uint64_t v114 = *(void *)(v113 - 8);
  unint64_t v115 = (*(void *)(v114 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  unint64_t v116 = (char *)&v55 - v115;
  unint64_t v117 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v118 = (char *)&v55 - v117;
  uint64_t v122 = type metadata accessor for NLGCATIdentifier(v10);
  uint64_t v123 = *(void *)(v122 - 8);
  unint64_t v124 = (*(void *)(v123 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v125 = (char *)&v55 - v124;
  uint64_t v144 = v12;
  uint64_t v143 = v13;
  uint64_t v142 = v14;
  uint64_t v141 = v4;
  uint64_t v127 = v14[3];
  uint64_t v126 = v14[4];
  sub_8C74(v14, v127);
  if (((*(uint64_t (**)(uint64_t))(v126 + 40))(v127) & 1) != 0)
  {
    if ((sub_4CB14(v120, v121) & 1) != 0)
    {
      uint64_t v103 = *(void *)(v105 + 16);
      swift_bridgeObjectRetain(v103);
      (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v125, v119, v122);
      uint64_t v102 = sub_5150(&qword_D7DE0);
      sub_4ADB4();
      Dictionary.subscript.getter(v104);
      swift_bridgeObjectRelease(v103);
      return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v125, v122);
    }

    else
    {
      unint64_t v16 = v118;
      uint64_t v17 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v16, v17, v113);
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v111, v120, v107);
      uint64_t v18 = *(unsigned __int8 *)(v108 + 80);
      uint64_t v84 = (v18 + 16) & ~v18;
      uint64_t v91 = 7LL;
      uint64_t v92 = swift_allocObject(&unk_CDA70, v84 + v109, v18 | 7);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v108 + 32))(v92 + v84, v111, v107);
      int v100 = (os_log_s *)Logger.logObject.getter(v19);
      int v101 = static os_log_type_t.error.getter();
      uint32_t v87 = &v133;
      uint64_t v133 = 12LL;
      unint64_t v85 = sub_7788();
      unint64_t v86 = sub_77F0();
      unint64_t v20 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v134, v87, &type metadata for UInt32, &type metadata for Int, v85, v86, v20);
      uint32_t v88 = v134;
      uint64_t v89 = 17LL;
      uint64_t v21 = swift_allocObject(&unk_CDA98, 17LL, v91);
      uint64_t v22 = v89;
      uint64_t v23 = v91;
      uint64_t v94 = v21;
      *(_BYTE *)(v21 + swift_beginAccess(v0 + 16) = 32;
      uint64_t v24 = swift_allocObject(&unk_CDAC0, v22, v23);
      uint64_t v25 = v91;
      uint64_t v95 = v24;
      *(_BYTE *)(v24 + swift_beginAccess(v0 + 16) = 8;
      uint64_t v90 = 32LL;
      uint64_t v26 = swift_allocObject(&unk_CDAE8, 32LL, v25);
      uint64_t v27 = v90;
      uint64_t v28 = v91;
      uint64_t v29 = v26;
      uint64_t v30 = v92;
      uint64_t v93 = v29;
      *(void *)(v29 + swift_beginAccess(v0 + 16) = sub_2A180;
      *(void *)(v29 + 24) = v30;
      uint64_t v31 = swift_allocObject(&unk_CDB10, v27, v28);
      uint64_t v32 = v93;
      uint64_t v97 = v31;
      *(void *)(v31 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v31 + 24) = v32;
      uint64_t v99 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v96 = _allocateUninitializedArray<A>(_:)(3LL, v99);
      uint64_t v98 = v33;
      swift_retain();
      uint64_t v34 = v94;
      uint64_t v35 = v98;
      *uint64_t v98 = sub_884C;
      v35[1] = v34;
      swift_retain();
      uint64_t v36 = v95;
      uint64_t v37 = v98;
      v98[2] = sub_884C;
      void v37[3] = v36;
      swift_retain();
      uint64_t v38 = v96;
      uint64_t v39 = v97;
      uint64_t v40 = v98;
      v98[4] = sub_8900;
      v40[5] = v39;
      sub_6648();
      swift_bridgeObjectRelease(v38);
      if (os_log_type_enabled(v100, (os_log_type_t)v101))
      {
        uint64_t v41 = v106;
        uint64_t v77 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v76 = sub_5150(&qword_D6B60);
        uint64_t v78 = sub_74D0(0LL, v76, v76);
        uint64_t v79 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v80 = &v132;
        uint64_t v132 = v77;
        uint64_t v81 = &v131;
        uint64_t v131 = v78;
        uint64_t v82 = &v130;
        uint64_t v130 = v79;
        sub_7528(2LL, &v132);
        sub_7528(1LL, v80);
        uint64_t v128 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v129 = v94;
        sub_753C(&v128, (uint64_t)v80, (uint64_t)v81, (uint64_t)v82);
        uint64_t v83 = v41;
        if (v41)
        {
          __break(1u);
        }

        else
        {
          uint64_t v128 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v129 = v95;
          sub_753C(&v128, (uint64_t)&v132, (uint64_t)&v131, (uint64_t)&v130);
          uint64_t v75 = 0LL;
          uint64_t v128 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v129 = v97;
          sub_753C(&v128, (uint64_t)&v132, (uint64_t)&v131, (uint64_t)&v130);
          _os_log_impl(&dword_0, v100, (os_log_type_t)v101, "Unsupported locale: %s", v77, v88);
          sub_7580(v78, 0LL);
          sub_7580(v79, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v118, v113);
      uint64_t v42 = v104;
      *uint64_t v104 = 0LL;
      v42[1] = 0LL;
      v42[2] = 0LL;
      v42[3] = 0LL;
      v42[4] = 0LL;
    }
  }

  else
  {
    unint64_t v43 = v116;
    uint64_t v44 = sub_AD514();
    uint64_t v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 16))(v43, v44, v113);
    int v73 = (os_log_s *)Logger.logObject.getter(v45);
    int v72 = static os_log_type_t.debug.getter();
    uint64_t v70 = &v139;
    uint64_t v139 = 2LL;
    unint64_t v68 = sub_7788();
    unint64_t v69 = sub_77F0();
    unint64_t v46 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v140, v70, &type metadata for UInt32, &type metadata for Int, v68, v69, v46);
    uint32_t v71 = v140;
    uint64_t v47 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v74 = _allocateUninitializedArray<A>(_:)(0LL, v47);
    if (os_log_type_enabled(v73, (os_log_type_t)v72))
    {
      uint64_t v48 = v106;
      uint64_t v58 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v56 = sub_5150(&qword_D6B60);
      uint64_t v57 = 0LL;
      uint64_t v59 = sub_74D0(0LL, v56, v56);
      uint64_t v60 = sub_74D0(v57, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      os_log_type_t v64 = &v138;
      uint64_t v138 = v58;
      uint64_t v65 = &v137;
      uint64_t v137 = v59;
      uint64_t v62 = &v136;
      uint64_t v136 = v60;
      unsigned int v61 = 0;
      sub_7528(0LL, &v138);
      sub_7528(v61, v64);
      uint64_t v135 = v74;
      uint64_t v63 = &v55;
      __chkstk_darwin(v49);
      uint64_t v50 = v65;
      uint64_t v51 = &v55 - 6;
      uint64_t v66 = &v55 - 6;
      v51[2] = (uint64_t)v64;
      v51[3] = (uint64_t)v50;
      v51[4] = v52;
      uint64_t v67 = sub_5150(&qword_D6B78);
      unint64_t v53 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v66, v67, v53);
      if (v48)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v73, (os_log_type_t)v72, "Bobcat feature flag not enabled", v58, v71);
        uint64_t v55 = 0LL;
        sub_7580(v59, 0LL);
        sub_7580(v60, v55);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v74);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v74);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v116, v113);
    uint64_t v54 = v104;
    *uint64_t v104 = 0LL;
    v54[1] = 0LL;
    v54[2] = 0LL;
    v54[3] = 0LL;
    v54[4] = 0LL;
  }

  return result;
}

uint64_t sub_4CB14(uint64_t a1, void *a2)
{
  uint64_t v178 = a1;
  uint64_t v164 = a2;
  uint64_t v3 = v2;
  uint64_t v4 = v178;
  uint64_t v168 = v3;
  uint64_t v214 = 0LL;
  uint64_t v213 = 0LL;
  uint64_t v212 = 0LL;
  uint64_t v147 = 0LL;
  uint64_t v204 = 0LL;
  uint64_t v205 = 0LL;
  uint64_t v158 = 0LL;
  uint64_t v148 = type metadata accessor for Logger(0LL);
  uint64_t v149 = *(void *)(v148 - 8);
  unint64_t v150 = (*(void *)(v149 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  unint64_t v151 = (char *)&v47 - v150;
  unint64_t v152 = (*(void *)(*(void *)(sub_5150(&qword_D7600) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v153 = (uint64_t)&v47 - v152;
  unint64_t v154 = (*(void *)(*(void *)(sub_5150(&qword_D7E08) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v155 = (uint64_t)&v47 - v154;
  unint64_t v156 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v157 = (uint64_t)&v47 - v156;
  uint64_t v179 = type metadata accessor for Locale(v10);
  uint64_t v176 = *(void **)(v179 - 8);
  unint64_t v159 = (v176[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v12 = __chkstk_darwin(v11);
  uint64_t v160 = (char *)&v47 - v159;
  unint64_t v161 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v14 = __chkstk_darwin(v12);
  uint64_t v162 = (char *)&v47 - v161;
  unint64_t v163 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v16 = __chkstk_darwin(v14);
  uint64_t v177 = (char *)&v47 - v163;
  uint64_t v171 = type metadata accessor for Locale.Language(v16);
  uint64_t v169 = *(void *)(v171 - 8);
  unint64_t v165 = (*(void *)(v169 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v18 = __chkstk_darwin(v17);
  int v166 = (char *)&v47 - v165;
  unint64_t v167 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v20 = __chkstk_darwin(v18);
  uint64_t v170 = (char *)&v47 - v167;
  uint64_t v214 = v4;
  uint64_t v213 = v21;
  uint64_t v212 = v168;
  uint64_t v22 = Locale.language.getter(v20);
  uint64_t v173 = Locale.Language.minimalIdentifier.getter(v22);
  uint64_t v175 = v23;
  uint32_t v172 = *(void (**)(char *, uint64_t))(v169 + 8);
  v172(v170, v171);
  Swift::String v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en", 2uLL, 1);
  object = v24._object;
  int v181 = static String.== infix(_:_:)(v173, v175, v24._countAndFlagsBits, v24._object);
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v175);
  uint64_t v180 = (void (*)(char *, uint64_t, uint64_t))v176[2];
  v180(v177, v178, v179);
  if ((v181 & 1) != 0)
  {
    ((void (*)(void))Locale.region.getter)();
    uint64_t v145 = type metadata accessor for Locale.Region(0LL);
    uint64_t v146 = *(void *)(v145 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v146 + 48))(v157, 1LL) == 1)
    {
      uint64_t v140 = 0LL;
      sub_4F92C(v157);
      uint64_t v143 = v140;
      uint64_t v144 = v140;
    }

    else
    {
      uint64_t v141 = Locale.Region.identifier.getter();
      uint64_t v142 = v25;
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v157, v145);
      uint64_t v143 = v141;
      uint64_t v144 = v142;
    }

    uint64_t v138 = v144;
    uint64_t v137 = v143;
    swift_bridgeObjectRetain(v144);
    Swift::String v26 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("US", 2uLL, 1);
    uint64_t countAndFlagsBits = v26._countAndFlagsBits;
    uint64_t v139 = v26._object;
    swift_bridgeObjectRetain(v26._object);
    v184[0] = v137;
    v184[1] = v138;
    uint64_t v185 = countAndFlagsBits;
    uint64_t v186 = v139;
    if (v138)
    {
      sub_139E0(v184, &v182);
      if (v186)
      {
        uint64_t v129 = v182;
        uint64_t v132 = v183;
        swift_bridgeObjectRetain(v183);
        uint64_t v130 = v185;
        uint64_t v133 = v184;
        uint64_t v131 = v186;
        swift_bridgeObjectRetain(v186);
        int v134 = static String.== infix(_:_:)(v129, v132, v130, v131);
        swift_bridgeObjectRelease(v131);
        swift_bridgeObjectRelease(v132);
        swift_bridgeObjectRelease(v131);
        swift_bridgeObjectRelease(v132);
        sub_8DD8((uint64_t)v133);
        int v135 = v134;
LABEL_11:
        int v127 = v135;
        swift_bridgeObjectRelease(v139);
        swift_bridgeObjectRelease(v138);
        int v128 = v127;
        goto LABEL_15;
      }

      sub_8DD8((uint64_t)&v182);
    }

    else if (!v186)
    {
      sub_8DD8((uint64_t)v184);
      int v135 = 1;
      goto LABEL_11;
    }

    sub_13A1C((uint64_t)v184);
    int v135 = 0;
    goto LABEL_11;
  }

  int v128 = 0;
LABEL_15:
  int v126 = v128;
  uint64_t v125 = (void (*)(char *, uint64_t))v176[1];
  v125(v177, v179);
  if ((v126 & 1) != 0)
  {
    int v124 = 1;
    return v124 & 1;
  }

  uint64_t v123 = v164[3];
  uint64_t v122 = v164[4];
  sub_8C74(v164, v123);
  if (((*(uint64_t (**)(uint64_t))(v122 + 56))(v123) & 1) != 0)
  {
    uint64_t v28 = Locale.language.getter(v27);
    Locale.Language.languageCode.getter(v28);
    v172(v166, v171);
    uint64_t v120 = type metadata accessor for Locale.LanguageCode(0LL);
    uint64_t v121 = *(void *)(v120 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v121 + 48))(v153, 1LL) == 1)
    {
      uint64_t v68 = 0LL;
      sub_29A18(v153);
      uint64_t v118 = v68;
      uint64_t v119 = v68;
    }

    else
    {
      uint64_t v116 = Locale.LanguageCode.identifier.getter();
      uint64_t v117 = v29;
      (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v153, v120);
      uint64_t v118 = v116;
      uint64_t v119 = v117;
    }

    uint64_t v111 = v119;
    uint64_t v112 = v118;
    uint64_t v204 = v118;
    uint64_t v205 = v119;
    uint64_t v113 = v203;
    v203[0] = v118;
    v203[1] = v119;
    Swift::String v30 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("en", 2uLL, 1);
    uint64_t v115 = v30._countAndFlagsBits;
    uint64_t v114 = v30._object;
    swift_bridgeObjectRetain(v30._object);
    sub_139E0(v113, v200);
    uint64_t v201 = v115;
    uint64_t v202 = v114;
    if (v200[1])
    {
      sub_139E0(v200, &v187);
      if (v202)
      {
        uint64_t v104 = v187;
        uint64_t v107 = v188;
        swift_bridgeObjectRetain(v188);
        uint64_t v105 = v201;
        uint64_t v108 = v200;
        uint64_t v106 = v202;
        swift_bridgeObjectRetain(v202);
        int v109 = static String.== infix(_:_:)(v104, v107, v105, v106);
        swift_bridgeObjectRelease(v106);
        swift_bridgeObjectRelease(v107);
        swift_bridgeObjectRelease(v106);
        swift_bridgeObjectRelease(v107);
        sub_8DD8((uint64_t)v108);
        int v110 = v109;
        goto LABEL_26;
      }

      sub_8DD8((uint64_t)&v187);
    }

    else if (!v202)
    {
      sub_8DD8((uint64_t)v200);
      int v110 = 1;
LABEL_26:
      int v103 = v110;
      swift_bridgeObjectRelease(v114);
      swift_bridgeObjectRetain(v111);
      v180(v162, v178, v179);
      if ((v103 & 1) != 0)
      {
        int v102 = 1;
LABEL_54:
        int v69 = v102;
        swift_bridgeObjectRelease(v111);
        v125(v162, v179);
        swift_bridgeObjectRelease(v111);
        int v124 = v69;
        return v124 & 1;
      }

      uint64_t v99 = v199;
      v199[0] = v112;
      v199[1] = v111;
      Swift::String v31 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("zh", 2uLL, 1);
      uint64_t v101 = v31._countAndFlagsBits;
      int v100 = v31._object;
      swift_bridgeObjectRetain(v31._object);
      sub_139E0(v99, v196);
      uint64_t v197 = v101;
      uint64_t v198 = v100;
      if (v196[1])
      {
        sub_139E0(v196, &v189);
        if (v198)
        {
          uint64_t v92 = v189;
          uint64_t v95 = v190;
          swift_bridgeObjectRetain(v190);
          uint64_t v93 = v197;
          uint64_t v96 = v196;
          uint64_t v94 = v198;
          swift_bridgeObjectRetain(v198);
          int v97 = static String.== infix(_:_:)(v92, v95, v93, v94);
          swift_bridgeObjectRelease(v94);
          swift_bridgeObjectRelease(v95);
          swift_bridgeObjectRelease(v94);
          swift_bridgeObjectRelease(v95);
          sub_8DD8((uint64_t)v96);
          int v98 = v97;
          goto LABEL_37;
        }

        sub_8DD8((uint64_t)&v189);
      }

      else if (!v198)
      {
        sub_8DD8((uint64_t)v196);
        int v98 = 1;
LABEL_37:
        int v91 = v98;
        swift_bridgeObjectRelease(v100);
        uint64_t v32 = ((uint64_t (*)(char *, char *, uint64_t))v180)(v160, v162, v179);
        if ((v91 & 1) == 0)
        {
          int v88 = 0;
LABEL_49:
          int v70 = v88;
          v125(v160, v179);
          int v102 = v70;
          goto LABEL_54;
        }

        Locale.region.getter(v32);
        uint64_t v89 = type metadata accessor for Locale.Region(0LL);
        uint64_t v90 = *(void *)(v89 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v90 + 48))(v155, 1LL) == 1)
        {
          uint64_t v83 = 0LL;
          sub_4F92C(v155);
          uint64_t v86 = v83;
          uint64_t v87 = v83;
        }

        else
        {
          uint64_t v84 = Locale.Region.identifier.getter();
          uint64_t v85 = v33;
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v155, v89);
          uint64_t v86 = v84;
          uint64_t v87 = v85;
        }

        uint64_t v81 = v87;
        uint64_t v80 = v86;
        swift_bridgeObjectRetain(v87);
        Swift::String v34 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CN", 2uLL, 1);
        uint64_t v79 = v34._countAndFlagsBits;
        uint64_t v82 = v34._object;
        swift_bridgeObjectRetain(v34._object);
        v193[0] = v80;
        v193[1] = v81;
        uint64_t v194 = v79;
        uint64_t v195 = v82;
        if (v81)
        {
          sub_139E0(v193, &v191);
          if (v195)
          {
            uint64_t v72 = v191;
            uint64_t v75 = v192;
            swift_bridgeObjectRetain(v192);
            uint64_t v73 = v194;
            uint64_t v76 = v193;
            uint64_t v74 = v195;
            swift_bridgeObjectRetain(v195);
            int v77 = static String.== infix(_:_:)(v72, v75, v73, v74);
            swift_bridgeObjectRelease(v74);
            swift_bridgeObjectRelease(v75);
            swift_bridgeObjectRelease(v74);
            swift_bridgeObjectRelease(v75);
            sub_8DD8((uint64_t)v76);
            int v78 = v77;
LABEL_48:
            int v71 = v78;
            swift_bridgeObjectRelease(v82);
            swift_bridgeObjectRelease(v81);
            int v88 = v71;
            goto LABEL_49;
          }

          sub_8DD8((uint64_t)&v191);
        }

        else if (!v195)
        {
          sub_8DD8((uint64_t)v193);
          int v78 = 1;
          goto LABEL_48;
        }

        sub_13A1C((uint64_t)v193);
        int v78 = 0;
        goto LABEL_48;
      }

      sub_13A1C((uint64_t)v196);
      int v98 = 0;
      goto LABEL_37;
    }

    sub_13A1C((uint64_t)v200);
    int v110 = 0;
    goto LABEL_26;
  }

  uint64_t v35 = v151;
  uint64_t v36 = sub_AD514();
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v149 + 16))(v35, v36, v148);
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v37);
  int v65 = static os_log_type_t.debug.getter();
  uint64_t v63 = &v210;
  uint64_t v210 = 2LL;
  unint64_t v61 = sub_7788();
  unint64_t v62 = sub_77F0();
  unint64_t v38 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v211, v63, &type metadata for UInt32, &type metadata for Int, v61, v62, v38);
  uint32_t v64 = v211;
  uint64_t v39 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v67 = _allocateUninitializedArray<A>(_:)(0LL, v39);
  if (os_log_type_enabled(v66, (os_log_type_t)v65))
  {
    uint64_t v40 = v147;
    uint64_t v51 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v49 = sub_5150(&qword_D6B60);
    uint64_t v50 = 0LL;
    uint64_t v52 = sub_74D0(0LL, v49, v49);
    uint64_t v53 = sub_74D0(v50, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v57 = &v209;
    unint64_t v209 = v51;
    uint64_t v58 = &v208;
    uint64_t v208 = v52;
    uint64_t v55 = &v207;
    uint64_t v207 = v53;
    unsigned int v54 = 0;
    sub_7528(0LL, &v209);
    sub_7528(v54, v57);
    uint64_t v206 = v67;
    uint64_t v56 = &v47;
    __chkstk_darwin(v41);
    uint64_t v42 = v58;
    unint64_t v43 = &v47 - 6;
    uint64_t v59 = &v47 - 6;
    v43[2] = (uint64_t)v57;
    v43[3] = (uint64_t)v42;
    v43[4] = v44;
    uint64_t v60 = sub_5150(&qword_D6B78);
    unint64_t v45 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v59, v60, v45);
    if (v40)
    {
      __break(1u);
    }

    else
    {
      _os_log_impl(&dword_0, v66, (os_log_type_t)v65, "Bobcat locale expansion feature flag not enabled", v51, v64);
      uint64_t v48 = 0LL;
      sub_7580(v52, 0LL);
      sub_7580(v53, v48);
      UnsafeMutablePointer.deallocate()();
      swift_bridgeObjectRelease(v67);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v67);
  }

  (*(void (**)(char *, uint64_t))(v149 + 8))(v151, v148);
  int v124 = 0;
  return v124 & 1;
}

uint64_t sub_4DA40@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>, uint64_t a7)
{
  uint64_t v294 = a6;
  uint64_t v321 = a1;
  uint64_t v320 = a2;
  uint64_t v317 = a3;
  uint64_t v318 = a4;
  uint32_t v319 = a5;
  Swift::String v397 = 0LL;
  uint64_t v395 = 0LL;
  uint64_t v396 = 0LL;
  uint64_t v394 = 0LL;
  uint64_t v393 = 0LL;
  uint64_t v392 = 0LL;
  uint64_t v391 = 0LL;
  int __c = 0;
  memset(v382, 0, 0x38uLL);
  uint64_t v369 = 0LL;
  uint64_t v370 = 0LL;
  uint64_t v367 = 0LL;
  uint64_t v368 = 0LL;
  uint64_t v365 = 0LL;
  uint64_t v366 = 0LL;
  uint64_t v364 = 0LL;
  uint64_t v359 = 0LL;
  uint64_t v351 = 0LL;
  uint64_t v346 = 0LL;
  memset(&v336[1], 0, 0x30uLL);
  uint64_t v315 = 0LL;
  uint64_t v297 = type metadata accessor for NLGDialogProviderError();
  uint64_t v298 = *(void *)(v297 - 8);
  unint64_t v299 = (*(void *)(v298 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  id v300 = &v115[-v299];
  uint64_t v301 = type metadata accessor for Logger(v9);
  uint64_t v302 = *(void *)(v301 - 8);
  unint64_t v303 = (*(void *)(v302 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v304 = &v115[-v303];
  unint64_t v305 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v11);
  uint64_t v306 = &v115[-v305];
  unint64_t v307 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  uint64_t v308 = &v115[-v307];
  unint64_t v309 = (*(void *)(*(void *)(sub_5150(&qword_D7E10) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v15);
  uint64_t v310 = (uint64_t *)&v115[-v309];
  uint64_t v311 = type metadata accessor for URL(v16);
  uint64_t v312 = *(void *)(v311 - 8);
  unint64_t v313 = (*(void *)(v312 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  uint64_t v314 = &v115[-v313];
  unint64_t v316 = (*(void *)(*(void *)(sub_5150(&qword_D7E00) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v18);
  uint64_t v328 = &v115[-v316];
  uint64_t v329 = type metadata accessor for NLGCATIdentifier(v19);
  uint64_t v327 = *(void *)(v329 - 8);
  uint64_t v323 = *(void *)(v327 + 64);
  unint64_t v322 = (v323 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v21 = __chkstk_darwin(v20);
  uint64_t v324 = &v115[-v322];
  unint64_t v325 = (v323 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v21);
  uint64_t v326 = &v115[-v325];
  Swift::String v397 = &v115[-v325];
  uint64_t v395 = v22;
  uint64_t v396 = v23;
  uint64_t v394 = v24;
  uint64_t v393 = v25;
  uint64_t v392 = v26;
  uint64_t v391 = v7;
  sub_4AE94(v22, v23, v27);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v327 + 48))(v328, 1LL, v329) == 1)
  {
    sub_4F680((uint64_t)v328);
    uint64_t result = v295;
    uint64_t v168 = v315;
    uint64_t v169 = v315;
    uint64_t v170 = v315;
    uint64_t v171 = v315;
    uint64_t v172 = v315;
    uint64_t v173 = v315;
    uint64_t v174 = v295;
    goto LABEL_25;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v327 + 32))(v326, v328, v329);
  sub_4BE98((uint64_t)v326, v318, v319, (void *)((char *)v387 + 4));
  if (!*(void *)((char *)&v387[3] + 4))
  {
    int v88 = v306;
    sub_1D580((void *)((char *)v387 + 4));
    uint64_t v89 = sub_AD514();
    uint64_t v90 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v302 + 16))(v88, v89, v301);
    unint64_t v165 = (os_log_s *)Logger.logObject.getter(v90);
    int v164 = static os_log_type_t.debug.getter();
    uint64_t v162 = &v386;
    uint64_t v386 = 2LL;
    unint64_t v160 = sub_7788();
    unint64_t v161 = sub_77F0();
    unint64_t v91 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(v387, v162, &type metadata for UInt32, &type metadata for Int, v160, v161, v91);
    uint32_t v163 = v387[0];
    uint64_t v92 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v166 = _allocateUninitializedArray<A>(_:)(0LL, v92);
    if (os_log_type_enabled(v165, (os_log_type_t)v164))
    {
      uint64_t v149 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v147 = sub_5150(&qword_D6B60);
      uint64_t v148 = 0LL;
      uint64_t v150 = sub_74D0(0LL, v147, v147);
      uint64_t v151 = sub_74D0(v148, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v155 = &v385;
      uint64_t v385 = v149;
      unint64_t v156 = &v384;
      uint64_t v384 = v150;
      uint64_t v153 = &v383;
      uint64_t v383 = v151;
      unsigned int v152 = 0;
      sub_7528(0LL, &v385);
      sub_7528(v152, v155);
      v382[7] = v166;
      unint64_t v154 = v115;
      __chkstk_darwin(v93);
      uint64_t v94 = v156;
      uint64_t v95 = &v115[-48];
      uint64_t v157 = &v115[-48];
      v95[2] = v155;
      v95[3] = v94;
      v95[4] = v96;
      uint64_t v158 = sub_5150(&qword_D6B78);
      unint64_t v97 = sub_8CF4();
      uint64_t v98 = v295;
      Sequence.forEach(_:)(sub_8CC8, v157, v158, v97);
      uint64_t v159 = v98;
      if (v98)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v165, (os_log_type_t)v164, "No NLG dialog retriever triggered", v149, v163);
        uint64_t v145 = 0LL;
        sub_7580(v150, 0LL);
        sub_7580(v151, v145);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v166);
        uint64_t v146 = v159;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v166);
      uint64_t v146 = v295;
    }

    uint64_t v144 = v146;

    (*(void (**)(_BYTE *, uint64_t))(v302 + 8))(v306, v301);
    (*(void (**)(_BYTE *, uint64_t))(v327 + 8))(v326, v329);
    uint64_t result = v144;
    uint64_t v168 = v315;
    uint64_t v169 = v315;
    uint64_t v170 = v315;
    uint64_t v171 = v315;
    uint64_t v172 = v315;
    uint64_t v173 = v315;
    uint64_t v174 = v144;
    goto LABEL_25;
  }

  uint64_t v288 = __dst;
  sub_C094((char *)v387 + 4, __dst);
  uint64_t v289 = v389;
  uint64_t v290 = v390;
  uint64_t v28 = sub_8C74(v288, v389);
  uint64_t v29 = v295;
  uint64_t v291 = v28;
  sub_4F46C(v317);
  uint64_t v292 = v29;
  uint64_t v293 = v29;
  if (!v29)
  {
    (*(void (**)(void *__return_ptr, _BYTE *, _BYTE *, uint64_t, uint64_t))(v290 + 16))( v381,  v314,  v326,  v318,  v289);
    uint64_t v286 = 0LL;
    uint64_t v287 = 0LL;
    (*(void (**)(_BYTE *, uint64_t))(v312 + 8))(v314, v311);
    uint64_t v279 = v382;
    memcpy(v382, v381, 0x38uLL);
    uint64_t v280 = v374;
    sub_4F99C(v382, v374);
    uint64_t v281 = v371;
    sub_454C((uint64_t)v280, (uint64_t)v371);
    sub_4FA0C(v280);
    uint64_t v283 = v372;
    uint64_t v282 = v373;
    sub_8C74(v281, v372);
    dispatch thunk of NLGDialog.source.getter(v283, v282);
    uint64_t v284 = type metadata accessor for NLGDialogSource(0LL);
    uint64_t v285 = *(void *)(v284 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v285 + 48))(v310, 1LL) == 1)
    {
      sub_4FA3C((uint64_t)v310);
      sub_4598(v371);
    }

    else
    {
      if ((*(unsigned int (**)(uint64_t *, uint64_t))(v285 + 88))(v310, v284) == enum case for NLGDialogSource.catSwitch(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v285 + 96))(v310, v284);
        uint64_t v228 = *v310;
        uint64_t v229 = v310[1];
        uint64_t v230 = v310[2];
        uint64_t v231 = v310[3];
        uint64_t v234 = v310[4];
        uint64_t v235 = v310[5];
        uint64_t v369 = v228;
        uint64_t v370 = v229;
        uint64_t v367 = v230;
        uint64_t v368 = v231;
        uint64_t v365 = v234;
        uint64_t v366 = v235;
        sub_4598(v371);
        uint64_t v241 = sub_5150(&qword_D7370);
        uint64_t v219 = 0LL;
        uint64_t v30 = _allocateUninitializedArray<A>(_:)(0LL, v241);
        Swift::String v244 = &type metadata for String;
        uint64_t v245 = (char *)&type metadata for Any + 8;
        uint32_t v246 = &protocol witness table for String;
        uint64_t v31 = Dictionary.init(dictionaryLiteral:)( v30,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
        unint64_t v222 = &v364;
        uint64_t v364 = v31;
        uint64_t v32 = sub_560DC();
        uint64_t v188 = *(void *)v32;
        uint64_t v189 = *((void *)v32 + 1);
        swift_bridgeObjectRetain(v189);
        uint64_t v33 = sub_56130();
        uint64_t v186 = *(void *)v33;
        uint64_t v187 = *((void *)v33 + 1);
        swift_bridgeObjectRetain(v187);
        uint64_t v191 = v363;
        v363[3] = v244;
        v363[0] = v186;
        v363[1] = v187;
        uint64_t v190 = v362;
        v362[0] = v188;
        v362[1] = v189;
        uint64_t v227 = sub_5150(&qword_D7368);
        Dictionary.subscript.setter(v191, v190);
        Swift::String v34 = sub_56184();
        uint64_t v194 = *(void *)v34;
        uint64_t v195 = *((void *)v34 + 1);
        swift_bridgeObjectRetain(v195);
        uint64_t v35 = sub_561D8();
        uint64_t v192 = *(void *)v35;
        uint64_t v193 = *((void *)v35 + 1);
        swift_bridgeObjectRetain(v193);
        v361[3] = v244;
        v361[0] = v192;
        v361[1] = v193;
        v360[0] = v194;
        v360[1] = v195;
        Dictionary.subscript.setter(v361, v360);
        uint64_t v36 = _allocateUninitializedArray<A>(_:)(v219, v241);
        uint64_t v37 = Dictionary.init(dictionaryLiteral:)(v36, v244, v245, v246);
        uint64_t v215 = &v359;
        uint64_t v359 = v37;
        unint64_t v38 = sub_5622C();
        uint64_t v209 = *(void *)v38;
        uint64_t v210 = *((void *)v38 + 1);
        swift_bridgeObjectRetain(v210);
        uint64_t v39 = sub_3B350();
        uint64_t v196 = *(void *)v39;
        uint64_t v198 = *((void *)v39 + 1);
        swift_bridgeObjectRetain(v198);
        uint64_t v233 = 1LL;
        int v213 = 1;
        Swift::String v40 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
        object = v40._object;
        uint64_t v201 = static String.+ infix(_:_:)(v196, v198, v40._countAndFlagsBits);
        uint64_t v203 = v41;
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v198);
        uint64_t v247 = v382;
        uint64_t v199 = v356;
        sub_4F99C(v382, v356);
        uint64_t v200 = v356[5];
        uint64_t v202 = v357;
        swift_bridgeObjectRetain(v357);
        sub_4FA0C(v199);
        uint64_t v204 = static String.+ infix(_:_:)(v201, v203, v200);
        uint64_t v206 = v42;
        swift_bridgeObjectRelease(v202);
        swift_bridgeObjectRelease(v203);
        Swift::String v43 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#label", 6uLL, v213 & 1);
        uint64_t v205 = v43._object;
        uint64_t v207 = static String.+ infix(_:_:)(v204, v206, v43._countAndFlagsBits);
        uint64_t v208 = v44;
        swift_bridgeObjectRelease(v205);
        swift_bridgeObjectRelease(v206);
        v358[3] = v244;
        v358[0] = v207;
        v358[1] = v208;
        v355[0] = v209;
        v355[1] = v210;
        Dictionary.subscript.setter(v358, v355);
        unint64_t v45 = sub_56280();
        uint64_t v211 = *(void *)v45;
        uint64_t v212 = *((void *)v45 + 1);
        swift_bridgeObjectRetain(v212);
        Swift::String v46 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.directInvocation.socialConversation",  0x32uLL,  v213 & 1);
        uint64_t v354 = v244;
        Swift::String v353 = v46;
        v352[0] = v211;
        v352[1] = v212;
        Dictionary.subscript.setter(&v353, v352);
        uint64_t v47 = _allocateUninitializedArray<A>(_:)(v219, v241);
        uint64_t v351 = Dictionary.init(dictionaryLiteral:)(v47, v244, v245, v246);
        Swift::String v214 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("intentName", 0xAuLL, v213 & 1);
        swift_bridgeObjectRetain(v231);
        v350[3] = v244;
        v350[0] = v230;
        v350[1] = v231;
        Swift::String v349 = v214;
        Dictionary.subscript.setter(v350, &v349);
        uint64_t v48 = sub_562D4();
        uint64_t v217 = *(void *)v48;
        uint64_t v218 = *((void *)v48 + 1);
        swift_bridgeObjectRetain(v218);
        uint64_t v216 = v351;
        swift_bridgeObjectRetain(v351);
        v348[3] = v227;
        v348[0] = v216;
        v347[0] = v217;
        v347[1] = v218;
        Dictionary.subscript.setter(v348, v347);
        uint64_t v346 = _allocateUninitializedArray<A>(_:)(v219, v227);
        uint64_t v220 = v359;
        swift_bridgeObjectRetain(v359);
        uint64_t v221 = &v345;
        uint64_t v345 = v220;
        uint64_t v223 = sub_5150(&qword_D7E20);
        Array.append(_:)(v221, v223);
        uint64_t v49 = sub_56328();
        uint64_t v225 = *(void *)v49;
        uint64_t v226 = *((void *)v49 + 1);
        swift_bridgeObjectRetain(v226);
        uint64_t v224 = v346;
        swift_bridgeObjectRetain(v346);
        v344[3] = v223;
        v344[0] = v224;
        v343[0] = v225;
        v343[1] = v226;
        Dictionary.subscript.setter(v344, v343);
        swift_bridgeObjectRetain(v229);
        swift_bridgeObjectRetain(v231);
        uint64_t v50 = NLGCATIdentifier.init(_:_:)(v228, v229, v230, v231);
        uint64_t v249 = NLGCATIdentifier.identifier.getter(v50);
        uint64_t v250 = v51;
        uint64_t v232 = *(void (**)(_BYTE *, uint64_t))(v327 + 8);
        v232(v324, v329);
        uint64_t v240 = _allocateUninitializedArray<A>(_:)(v233, v241);
        unint64_t v239 = v52;
        swift_bridgeObjectRetain(v235);
        uint64_t v53 = v247;
        uint64_t v54 = v235;
        uint64_t v55 = v239;
        *unint64_t v239 = v234;
        v55[1] = v54;
        uint64_t v236 = v342;
        sub_4F99C(v53, v342);
        uint64_t v242 = v339;
        sub_454C((uint64_t)v236, (uint64_t)v339);
        sub_4FA0C(v236);
        uint64_t v238 = v340;
        uint64_t v237 = v341;
        sub_8C74(v242, v340);
        uint64_t v56 = dispatch thunk of NLGDialog.identifier.getter(v238, v237);
        uint64_t v57 = v308;
        uint64_t v58 = v239;
        uint64_t v59 = v56;
        uint64_t v60 = v240;
        v239[5] = v244;
        v58[2] = v59;
        void v58[3] = v61;
        sub_6648();
        uint64_t v243 = v60;
        sub_4598(v242);
        uint64_t v251 = Dictionary.init(dictionaryLiteral:)(v243, v244, v245, v246);
        uint64_t v248 = v337;
        sub_4F99C(v247, v337);
        uint64_t v252 = v337[5];
        uint64_t v253 = v338;
        swift_bridgeObjectRetain(v338);
        sub_4FA0C(v248);
        uint64_t v254 = v364;
        swift_bridgeObjectRetain(v364);
        int v261 = &v398;
        sub_379C8(v249, v250, v251, v252, v253, v254, &v398);
        uint64_t v255 = v398;
        uint64_t v256 = v399;
        uint64_t v257 = v400;
        uint64_t v258 = v401;
        uint64_t v259 = v402;
        uint64_t v260 = v403;
        *(void *)&v336[1] = v398;
        *(void *)&v336[3] = v399;
        *(void *)&v336[5] = v400;
        *(void *)&v336[7] = v401;
        *(void *)&v336[9] = v402;
        *(void *)&v336[11] = v403;
        uint64_t v62 = sub_AD514();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v302 + 16))(v57, v62, v301);
        sub_4FAAC(v261);
        uint64_t v268 = 7LL;
        uint64_t v269 = swift_allocObject(&unk_CDB38, 64LL, 7LL);
        uint64_t v63 = memcpy((void *)(v269 + 16), v261, 0x30uLL);
        uint64_t v277 = (os_log_s *)Logger.logObject.getter(v63);
        int v278 = static os_log_type_t.debug.getter();
        uint64_t v264 = &v335;
        uint64_t v335 = 12LL;
        unint64_t v262 = sub_7788();
        unint64_t v263 = sub_77F0();
        unint64_t v64 = sub_7858();
        UnsignedInteger<>.init<A>(_:)(v336, v264, &type metadata for UInt32, &type metadata for Int, v262, v263, v64);
        uint32_t v265 = v336[0];
        uint64_t v266 = 17LL;
        uint64_t v65 = swift_allocObject(&unk_CDB60, 17LL, v268);
        uint64_t v66 = v266;
        uint64_t v67 = v268;
        uint64_t v271 = v65;
        *(_BYTE *)(v65 + swift_beginAccess(v0 + 16) = 32;
        uint64_t v68 = swift_allocObject(&unk_CDB88, v66, v67);
        uint64_t v69 = v268;
        uint64_t v272 = v68;
        *(_BYTE *)(v68 + swift_beginAccess(v0 + 16) = 8;
        uint64_t v267 = 32LL;
        uint64_t v70 = swift_allocObject(&unk_CDBB0, 32LL, v69);
        uint64_t v71 = v267;
        uint64_t v72 = v268;
        uint64_t v73 = v70;
        uint64_t v74 = v269;
        uint64_t v270 = v73;
        *(void *)(v73 + swift_beginAccess(v0 + 16) = sub_4FB5C;
        *(void *)(v73 + 24) = v74;
        uint64_t v75 = swift_allocObject(&unk_CDBD8, v71, v72);
        uint64_t v76 = v270;
        uint64_t v274 = v75;
        *(void *)(v75 + swift_beginAccess(v0 + 16) = sub_88B8;
        *(void *)(v75 + 24) = v76;
        uint64_t v276 = sub_5150((uint64_t *)&unk_D6B50);
        uint64_t v273 = _allocateUninitializedArray<A>(_:)(3LL, v276);
        unint64_t v275 = v77;
        swift_retain();
        uint64_t v78 = v271;
        uint64_t v79 = v275;
        *unint64_t v275 = sub_884C;
        v79[1] = v78;
        swift_retain();
        uint64_t v80 = v272;
        uint64_t v81 = v275;
        v275[2] = sub_884C;
        v81[3] = v80;
        swift_retain();
        uint64_t v82 = v273;
        uint64_t v83 = v274;
        uint64_t v84 = v275;
        v275[4] = sub_8900;
        v84[5] = v83;
        sub_6648();
        swift_bridgeObjectRelease(v82);
        if (os_log_type_enabled(v277, (os_log_type_t)v278))
        {
          uint64_t v179 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
          uint64_t v178 = sub_5150(&qword_D6B60);
          uint64_t v180 = sub_74D0(0LL, v178, v178);
          uint64_t v181 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v182 = &v334;
          uint64_t v334 = v179;
          uint64_t v183 = &v333;
          uint64_t v333 = v180;
          uint64_t v184 = &v332;
          uint64_t v332 = v181;
          sub_7528(2LL, &v334);
          sub_7528(1LL, v182);
          uint64_t v85 = v286;
          uint64_t v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v331 = v271;
          sub_753C(&v330, (uint64_t)v182, (uint64_t)v183, (uint64_t)v184);
          uint64_t v185 = v85;
          if (v85)
          {
            __break(1u);
          }

          else
          {
            uint64_t v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v331 = v272;
            sub_753C(&v330, (uint64_t)&v334, (uint64_t)&v333, (uint64_t)&v332);
            uint64_t v176 = 0LL;
            uint64_t v86 = v176;
            uint64_t v330 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
            uint64_t v331 = v274;
            sub_753C(&v330, (uint64_t)&v334, (uint64_t)&v333, (uint64_t)&v332);
            uint64_t v175 = v86;
            _os_log_impl(&dword_0, v277, (os_log_type_t)v278, "Returning NLG override: %s", v179, v265);
            sub_7580(v180, 0LL);
            sub_7580(v181, 1LL);
            UnsafeMutablePointer.deallocate()();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v177 = v175;
          }
        }

        else
        {
          swift_release();
          swift_release();
          swift_release();
          uint64_t v177 = v286;
        }

        uint64_t v167 = v177;

        (*(void (**)(_BYTE *, uint64_t))(v302 + 8))(v308, v301);
        sub_1B82C(&v346);
        sub_1B82C(&v351);
        sub_1B82C(&v359);
        sub_1B82C(&v364);
        swift_bridgeObjectRelease(v235);
        swift_bridgeObjectRelease(v231);
        swift_bridgeObjectRelease(v229);
        sub_4FA0C(v382);
        sub_4598(__dst);
        v232(v326, v329);
        uint64_t result = v167;
        uint64_t v168 = v255;
        uint64_t v169 = v256;
        uint64_t v170 = v257;
        uint64_t v171 = v258;
        uint64_t v172 = v259;
        uint64_t v173 = v260;
        uint64_t v174 = v167;
        goto LABEL_25;
      }

      (*(void (**)(uint64_t *, uint64_t))(v285 + 8))(v310, v284);
      sub_4598(v371);
    }

    sub_4FA0C(v382);
    sub_4598(__dst);
    (*(void (**)(_BYTE *, uint64_t))(v327 + 8))(v326, v329);
    uint64_t result = v286;
    uint64_t v168 = v315;
    uint64_t v169 = v315;
    uint64_t v170 = v315;
    uint64_t v171 = v315;
    uint64_t v172 = v315;
    uint64_t v173 = v315;
    uint64_t v174 = v286;
LABEL_25:
    uint64_t v99 = v294;
    uint64_t v100 = v169;
    uint64_t v101 = v170;
    uint64_t v102 = v171;
    uint64_t v103 = v172;
    uint64_t v104 = v173;
    *uint64_t v294 = v168;
    v99[1] = v100;
    v99[2] = v101;
    v99[3] = v102;
    v99[4] = v103;
    v99[5] = v104;
    return result;
  }

  uint64_t v140 = v293;
  uint64_t v139 = 0LL;
  uint64_t v141 = v139;
  uint64_t v142 = v140;
  swift_errorRetain(v140);
  uint64_t v143 = &v380;
  uint64_t v380 = v142;
  uint64_t v105 = sub_5150(&qword_D7E18);
  if ((swift_dynamicCast(v300, v143, v105, v297, 0LL) & 1) != 0)
  {
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v298 + 88))(v300, v297) == enum case for NLGDialogProviderError.noFileFound(_:))
    {
      uint64_t v106 = v304;
      uint64_t v107 = sub_AD514();
      uint64_t v108 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v302 + 16))(v106, v107, v301);
      uint64_t v137 = (os_log_s *)Logger.logObject.getter(v108);
      int v136 = static os_log_type_t.error.getter();
      int v134 = &v378;
      uint64_t v378 = 2LL;
      unint64_t v132 = sub_7788();
      unint64_t v133 = sub_77F0();
      unint64_t v109 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v379, v134, &type metadata for UInt32, &type metadata for Int, v132, v133, v109);
      uint32_t v135 = v379;
      uint64_t v110 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v138 = _allocateUninitializedArray<A>(_:)(0LL, v110);
      if (os_log_type_enabled(v137, (os_log_type_t)v136))
      {
        uint64_t v121 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
        uint64_t v119 = sub_5150(&qword_D6B60);
        uint64_t v120 = 0LL;
        uint64_t v122 = sub_74D0(0LL, v119, v119);
        uint64_t v123 = sub_74D0(v120, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        int v127 = &v377;
        unint64_t v377 = v121;
        int v128 = &v376;
        uint64_t v376 = v122;
        uint64_t v125 = &v375;
        uint64_t v375 = v123;
        unsigned int v124 = 0;
        sub_7528(0LL, &v377);
        sub_7528(v124, v127);
        v374[7] = v138;
        int v126 = &a7;
        __chkstk_darwin(v111);
        uint64_t v129 = var20;
        var20[2] = v127;
        var20[3] = v128;
        var20[4] = v112;
        uint64_t v130 = sub_5150(&qword_D6B78);
        unint64_t v113 = sub_8CF4();
        uint64_t v114 = v141;
        Sequence.forEach(_:)(sub_8CC8, v129, v130, v113);
        uint64_t v131 = v114;
        if (v114)
        {
          __break(1u);
        }

        else
        {
          _os_log_impl(&dword_0, v137, (os_log_type_t)v136, "No NLG asset file found", v121, v135);
          uint64_t v117 = 0LL;
          sub_7580(v122, 0LL);
          sub_7580(v123, v117);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v138);
          uint64_t v118 = v131;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v138);
        uint64_t v118 = v141;
      }

      uint64_t v116 = v118;

      (*(void (**)(_BYTE *, uint64_t))(v302 + 8))(v304, v301);
      swift_errorRelease(v380);
      swift_errorRelease(v142);
      sub_4598(__dst);
      (*(void (**)(_BYTE *, uint64_t))(v327 + 8))(v326, v329);
      uint64_t result = v116;
      uint64_t v168 = v315;
      uint64_t v169 = v315;
      uint64_t v170 = v315;
      uint64_t v171 = v315;
      uint64_t v172 = v315;
      uint64_t v173 = v315;
      uint64_t v174 = v116;
      goto LABEL_25;
    }

    (*(void (**)(_BYTE *, uint64_t))(v298 + 8))(v300, v297);
    swift_errorRelease(v380);
    sub_4598(__dst);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v327 + 8))(v326, v329);
  }

  else
  {
    swift_errorRelease(v380);
    sub_4598(__dst);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v327 + 8))(v326, v329);
  }

uint64_t sub_4F424(void *a1)
{
  return String.init<A>(describing:)(__dst, &unk_CC978);
}

void sub_4F46C(void *a1)
{
  id v2 = sub_1EB44();
  id v1 = a1;
  sub_97C54(a1, v2);
}

uint64_t sub_4F558()
{
  return v2;
}

uint64_t sub_4F588()
{
  uint64_t v0 = sub_4F558();
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

void *sub_4F5C4(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7E00);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t sub_4F680(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_4F6F0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4F72C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4F754()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4F77C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4F7B8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4F7F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for Locale(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_4F864()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4F88C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4F8B4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4F8F0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4F92C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Locale.Region(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

void *sub_4F99C(void *a1, void *a2)
{
  uint64_t v2 = a1[3];
  a2[3] = v2;
  a2[4] = a1[4];
  (**(void (***)(void))(v2 - 8))();
  a2[5] = a1[5];
  uint64_t v6 = a1[6];
  swift_bridgeObjectRetain(v6);
  uint64_t result = a2;
  a2[6] = v6;
  return result;
}

void *sub_4FA0C(void *a1)
{
  return a1;
}

uint64_t sub_4FA3C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NLGDialogSource(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_4FAAC( void *a1)
{
  uint64_t v1 = a1[2];
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
}

uint64_t sub_4FB08()
{
  return swift_deallocObject(v2, 64LL);
}

uint64_t sub_4FB5C()
{
  return sub_4F424((void *)(v0 + 16));
}

uint64_t sub_4FB64()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4FB8C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_4FBB4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4FBF0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_4FC2C(void *a1)
{
  return swift_bridgeObjectRelease(a1[6]);
}

void *sub_4FC58(void *a1, void *a2)
{
  uint64_t v2 = a2[3];
  a1[3] = v2;
  a1[4] = a2[4];
  (**(void (***)(void))(v2 - 8))();
  a1[5] = a2[5];
  uint64_t v6 = a2[6];
  swift_bridgeObjectRetain(v6);
  uint64_t result = a1;
  a1[6] = v6;
  return result;
}

void *sub_4FCC0(void *a1, void *a2)
{
  a1[5] = a2[5];
  uint64_t v5 = a2[6];
  swift_bridgeObjectRetain(v5);
  uint64_t v2 = a1[6];
  a1[6] = v5;
  swift_bridgeObjectRelease(v2);
  return a1;
}

void *sub_4FD18(void *result, void *a2)
{
  double v10 = result;
  if (result != a2)
  {
    uint64_t v8 = result[3];
    uint64_t v9 = a2[3];
    if (v8 == v9)
    {
      if ((*(_DWORD *)(*(void *)(v8 - 8) + 80LL) & 0x20000) != 0)
      {
        uint64_t v6 = *result;
        uint64_t v7 = *a2;
        swift_retain(*a2);
        uint64_t result = (void *)swift_release(v6);
        void *v10 = v7;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *))(*(void *)(v8 - 8) + 24LL))(result, a2);
      }
    }

    else
    {
      result[3] = v9;
      result[4] = a2[4];
      BOOL v5 = (*(_DWORD *)(*(void *)(v9 - 8) + 80LL) & 0x20000) == 0;
      if ((*(_DWORD *)(*(void *)(v8 - 8) + 80LL) & 0x20000) != 0)
      {
        uint64_t v3 = *result;
        if ((*(_DWORD *)(*(void *)(v9 - 8) + 80LL) & 0x20000) != 0)
        {
          uint64_t v2 = *a2;
          swift_retain(*a2);
          void *v10 = v2;
        }

        else
        {
          (*(void (**)(void *, void *))(*(void *)(v9 - 8) + 16LL))(result, a2);
        }

        return (void *)swift_release(v3);
      }

      else
      {
        (*(void (**)(_BYTE *, void *))(*(void *)(v8 - 8) + 32LL))(v12, result);
        if (v5)
        {
          (*(void (**)(void *, void *))(*(void *)(v9 - 8) + 16LL))(v10, a2);
        }

        else
        {
          uint64_t v4 = *a2;
          swift_retain(*a2);
          void *v10 = v4;
        }

        return (void *)(*(uint64_t (**)(_BYTE *))(*(void *)(v8 - 8) + 8LL))(v12);
      }
    }
  }

  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_4FF00( void *a1, const void *a2)
{
}

void *sub_4FF2C(void *a1, void *a2)
{
  uint64_t v2 = a1[6];
  a1[6] = a2[6];
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_4FF88(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      int v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      int v3 = -1;
      if (!HIDWORD(*(void *)(a1 + 24))) {
        int v3 = *(void *)(a1 + 24);
      }
      int v4 = v3;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_500A0(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)uint64_t result = a2 + 0x80000000;
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)(result + swift_beginAccess(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 3sub_4598(v0 + 2) = 0LL;
    *(void *)(result + 40) = 0LL;
    *(void *)(result + 4sub_1D580(v0 + 8) = 0LL;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 56) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 56) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)(result + 24) = a2 - 1;
    }
  }

  return result;
}

void *type metadata accessor for DialogWithButton()
{
  return &unk_CDC58;
}

uint64_t *sub_502C8()
{
  if (qword_D68B8 != -1) {
    swift_once(&qword_D68B8, sub_51B3C);
  }
  return &qword_D95C8;
}

uint64_t *sub_5031C()
{
  if (qword_D68D0 != -1) {
    swift_once(&qword_D68D0, sub_51C98);
  }
  return &qword_D9610;
}

uint64_t *sub_50370()
{
  if (qword_D68D8 != -1) {
    swift_once(&qword_D68D8, sub_51CDC);
  }
  return &qword_D9628;
}

uint64_t *sub_503C4()
{
  if (qword_D68C0 != -1) {
    swift_once(&qword_D68C0, sub_51BBC);
  }
  return &qword_D95E0;
}

uint64_t *sub_50418()
{
  if (qword_D68E0 != -1) {
    swift_once(&qword_D68E0, sub_51D20);
  }
  return &qword_D9640;
}

uint64_t *sub_5046C()
{
  if (qword_D68E8 != -1) {
    swift_once(&qword_D68E8, sub_51D64);
  }
  return &qword_D9658;
}

uint64_t sub_504C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = a8;
  *(void *)(v8 + 96) = a7;
  *(void *)(v8 + 8sub_1D580(v0 + 8) = a6;
  *(_BYTE *)(v8 + 34) = a5 & 1;
  *(_BYTE *)(v8 + 33) = a4;
  *(void *)(v8 + swift_beginAccess(v0 + 80) = a3;
  *(void *)(v8 + 7sub_4598(v0 + 2) = a2;
  *(void *)(v8 + 64) = a1;
  *(void *)(v8 + 56) = v8;
  *(void *)(v8 + swift_beginAccess(v0 + 16) = 0LL;
  *(void *)(v8 + 24) = 0LL;
  *(_BYTE *)(v8 + 3sub_4598(v0 + 2) = 0;
  *(_BYTE *)(v8 + 16sub_1D580(v0 + 8) = 0;
  *(void *)(v8 + 40) = 0LL;
  *(void *)(v8 + 4sub_1D580(v0 + 8) = 0LL;
  uint64_t v9 = *(void *)(a8 - 8);
  *(void *)(v8 + swift_beginAccess(v0 + 112) = v9;
  *(void *)(v8 + 120) = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OSSignpostID(0LL);
  *(void *)(v8 + 12sub_1D580(v0 + 8) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 136) = v11;
  *(void *)(v8 + 144) = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v8 + swift_beginAccess(v0 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  *(_BYTE *)(v8 + 3sub_4598(v0 + 2) = a4;
  *(_BYTE *)(v8 + 16sub_1D580(v0 + 8) = a5 & 1;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 4sub_1D580(v0 + 8) = a7;
  return swift_task_switch(sub_50620, 0LL);
}

uint64_t sub_50620()
{
  uint64_t v10 = *(void *)(v0 + 144);
  double v13 = *(int **)(v0 + 88);
  unsigned int v9 = *(unsigned __int8 *)(v0 + 33);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 72);
  *(void *)(v0 + 56) = v0;
  uint64_t v6 = (void *)*sub_50EB0();
  id v1 = v6;
  uint64_t v2 = OSSignpostID.init(log:)(v6);
  unsigned int v11 = static os_signpost_type_t.begin.getter(v2);
  id v12 = (id)*sub_50EB0();
  id v3 = v12;
  os_signpost(_:dso:log:name:signpostID:)(v11, &dword_0, v12, v7, v8, v9, v10);

  double v15 = (uint64_t (*)(void))((char *)v13 + *v13);
  int v4 = (void *)swift_task_alloc(v13[1]);
  v14[19] = v4;
  *int v4 = v14[7];
  v4[1] = sub_50734;
  return v15(v14[15]);
}

uint64_t sub_50734()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 152);
  *(void *)(v2 + 56) = *v1;
  *(void *)(v2 + swift_beginAccess(v0 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_509E4, 0LL);
  }
  else {
    return swift_task_switch(sub_507D8, 0LL);
  }
}

uint64_t sub_507D8(uint64_t a1)
{
  char v21 = *(_BYTE *)(v1 + 34);
  *(void *)(v1 + 56) = v1;
  unsigned int v19 = static os_signpost_type_t.end.getter(a1);
  double v20 = (void *)*sub_50EB0();
  id v2 = v20;
  if ((v21 & 1) != 0)
  {
    uint64_t v16 = "enableTelemetry=YES";
    uint64_t v17 = 19LL;
  }

  else
  {
    uint64_t v16 = "";
    uint64_t v17 = 0LL;
  }

  uint64_t v14 = *(void *)(v18 + 144);
  uint64_t v12 = *(void *)(v18 + 136);
  uint64_t v13 = *(void *)(v18 + 128);
  uint64_t v15 = *(void *)(v18 + 120);
  uint64_t v10 = *(void *)(v18 + 112);
  uint64_t v11 = *(void *)(v18 + 104);
  unsigned int v7 = *(unsigned __int8 *)(v18 + 33);
  uint64_t v6 = *(void *)(v18 + 80);
  uint64_t v5 = *(void *)(v18 + 72);
  uint64_t v9 = *(void *)(v18 + 64);
  uint64_t v3 = sub_5150(&qword_D7F00);
  uint64_t v8 = _allocateUninitializedArray<A>(_:)(0LL, v3);
  os_signpost(_:dso:log:name:signpostID:_:_:)(v19, &dword_0, v20, v5, v6, v7, v14, v16, v17, 2, v8);
  swift_bridgeObjectRelease(v8);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v15, v11);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(*(void *)(v18 + 56) + 8LL))();
}

uint64_t sub_509E4()
{
  uint64_t v3 = v0[18];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[15];
  v0[7] = v0;
  (*(void (**)(void))(v1 + 8))();
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0[7] + 8LL))();
}

uint64_t sub_50A68@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  uint64_t v31 = a8;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  unsigned int v43 = a3;
  int v51 = a4;
  uint64_t v48 = a5;
  uint64_t v32 = a7;
  uint64_t v33 = "";
  Swift::String v34 = "enableTelemetry=YES";
  uint64_t v59 = 0LL;
  uint64_t v58 = 0LL;
  uint64_t v55 = 0LL;
  uint64_t v56 = 0LL;
  char v57 = 0;
  char v54 = 0;
  uint64_t v52 = 0LL;
  uint64_t v53 = 0LL;
  uint64_t v60 = a7;
  uint64_t v35 = *(void *)(a7 - 8);
  unint64_t v36 = (*(void *)(v35 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(a9);
  uint64_t v47 = (char *)&v23 - v36;
  uint64_t v59 = (char *)&v23 - v36;
  uint64_t v37 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  unint64_t v39 = (*(void *)(v38 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v23 - v39;
  uint64_t v58 = (char *)&v23 - v39;
  uint64_t v55 = v11;
  uint64_t v56 = v12;
  char v57 = v13;
  char v54 = v14 & 1;
  uint64_t v52 = v15;
  uint64_t v53 = a6;
  id v40 = (id)*sub_50EB0();
  id v16 = v40;
  uint64_t v17 = OSSignpostID.init(log:)(v40);
  unsigned int v45 = static os_signpost_type_t.begin.getter(v17);
  id v46 = (id)*sub_50EB0();
  id v18 = v46;
  os_signpost(_:dso:log:name:signpostID:)(v45, &dword_0, v46, v41, v42, v43, v44);

  uint64_t v19 = v48();
  unsigned int v49 = static os_signpost_type_t.end.getter(v19);
  id v50 = (id)*sub_50EB0();
  id v20 = v50;
  if ((v51 & 1) != 0)
  {
    uint64_t v28 = v34;
    uint64_t v29 = 19LL;
  }

  else
  {
    uint64_t v28 = v33;
    uint64_t v29 = 0LL;
  }

  int v30 = 2;
  int v25 = 2;
  uint64_t v24 = v29;
  uint64_t v26 = v28;
  uint64_t v21 = sub_5150(&qword_D7F00);
  uint64_t v27 = _allocateUninitializedArray<A>(_:)(0LL, v21);
  os_signpost(_:dso:log:name:signpostID:_:_:)(v49, &dword_0, v50, v41, v42, v43, v44, v26, v24, (_BYTE)v25, v27);
  swift_bridgeObjectRelease(v27);

  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v31, v47, v32);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v47, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v44, v37);
}

uint64_t sub_50D90()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.siri.canned", 0x15uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D95B0 = (__int128)v1;
  return result;
}

__int128 *sub_50DD0()
{
  if (qword_D68A8 != -1) {
    swift_once(&qword_D68A8, sub_50D90);
  }
  return &xmmword_D95B0;
}

uint64_t sub_50E24()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.siri.canned", 0x15uLL, 1);
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CannedDomainSupport", 0x13uLL, 1);
  uint64_t result = OS_os_log.init(subsystem:category:)(v0._countAndFlagsBits, v0._object, v1._countAndFlagsBits, v1._object);
  qword_D95C0 = result;
  return result;
}

uint64_t *sub_50EB0()
{
  if (qword_D68B0 != -1) {
    swift_once(&qword_D68B0, sub_50E24);
  }
  return &qword_D95C0;
}

char **sub_50F04()
{
  return &off_CDC70;
}

uint64_t sub_50F10( uint64_t a1, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t (*)(uint64_t a1)), uint64_t a8, uint64_t a9)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  unsigned int v56 = a3;
  int v49 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v62 = a7;
  uint64_t v60 = a9;
  uint64_t v78 = 0LL;
  uint64_t v75 = 0LL;
  uint64_t v76 = 0LL;
  char v77 = 0;
  char v74 = 0;
  uint64_t v72 = 0LL;
  uint64_t v73 = 0LL;
  uint64_t v70 = 0LL;
  uint64_t v71 = 0LL;
  uint64_t v68 = 0LL;
  uint64_t v69 = 0LL;
  uint64_t v79 = a9;
  uint64_t v67 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v45 = *(void *)(v65 + 64);
  unint64_t v42 = (v45 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v47 = (char *)&v42 - v42;
  unint64_t v43 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v66 = (char *)&v42 - v43;
  uint64_t v78 = (char *)&v42 - v43;
  uint64_t v75 = v13;
  uint64_t v76 = v14;
  char v77 = v15;
  int v48 = 1;
  char v74 = v16 & 1;
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  uint64_t v70 = v19;
  uint64_t v71 = a8;
  id v44 = (id)*sub_50EB0();
  id v20 = v44;
  OSSignpostID.init(log:)(v44);
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v47, v66, v67);
  swift_retain();
  uint64_t v21 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v46 = (v21 + 41) & ~v21;
  uint64_t v59 = 7LL;
  uint64_t v50 = v46 + v45;
  unint64_t v51 = (v46 + v45 + 8) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v22 = swift_allocObject(&unk_CDC98, v51 + 16, v21 | 7);
  uint64_t v23 = v46;
  uint64_t v24 = v47;
  uint64_t v25 = v54;
  uint64_t v26 = v55;
  char v27 = v56;
  uint64_t v28 = v65;
  uint64_t v29 = v67;
  uint64_t v64 = v22;
  *(void *)(v22 + swift_beginAccess(v0 + 16) = v60;
  *(void *)(v22 + 24) = v25;
  *(void *)(v22 + 3sub_4598(v0 + 2) = v26;
  *(_BYTE *)(v22 + 40) = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v22 + v23, v24, v29);
  unint64_t v30 = v51;
  uint64_t v31 = v52;
  uint64_t v32 = v53;
  uint64_t v33 = v64;
  *(_BYTE *)(v64 + v50) = v49 & v48;
  Swift::String v34 = (void *)(v33 + v30);
  void *v34 = v31;
  v34[1] = v32;
  uint64_t v61 = sub_51E50;
  uint64_t v68 = sub_51E50;
  uint64_t v69 = v33;
  unsigned int v57 = static os_signpost_type_t.begin.getter(v33);
  id v58 = (id)*sub_50EB0();
  id v35 = v58;
  os_signpost(_:dso:log:name:signpostID:)(v57, &dword_0, v58, v54, v55, v56, v66);

  swift_retain();
  uint64_t v36 = swift_allocObject(&unk_CDCC0, 40LL, v59);
  uint64_t v37 = v61;
  uint64_t v38 = v62;
  unint64_t v39 = (void *)v36;
  uint64_t v40 = v64;
  uint64_t v63 = v39;
  v39[2] = v60;
  v39[3] = v37;
  v39[4] = v40;
  v38(sub_51F38);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v66, v67);
}

uint64_t sub_5126C( uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, char a6, void (*a7)(uint64_t))
{
  unsigned int v19 = static os_signpost_type_t.end.getter(a1);
  id v20 = (void *)*sub_50EB0();
  id v7 = v20;
  if ((a6 & 1) != 0)
  {
    double v11 = "enableTelemetry=YES";
    uint64_t v12 = 19LL;
  }

  else
  {
    double v11 = "";
    uint64_t v12 = 0LL;
  }

  uint64_t v8 = sub_5150(&qword_D7F00);
  uint64_t v10 = _allocateUninitializedArray<A>(_:)(0LL, v8);
  os_signpost(_:dso:log:name:signpostID:_:_:)(v19, &dword_0, v20, a2, a3, a4, a5, v11, v12, 2, v10);
  swift_bridgeObjectRelease(v10);

  swift_retain();
  a7(a1);
  return swift_release();
}

uint64_t sub_5141C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  return swift_release(a3);
}

uint64_t sub_51488( uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t (*)(uint64_t a1)), uint64_t a12, uint64_t a13)
{
  uint64_t v69 = a1;
  uint64_t v70 = a2;
  unsigned int v71 = a3;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v72 = a6;
  uint64_t v67 = a7;
  int v68 = a8;
  uint64_t v62 = a9;
  uint64_t v64 = a10;
  uint64_t v79 = a11;
  uint64_t v77 = a13;
  uint64_t v99 = 0LL;
  uint64_t v96 = 0LL;
  uint64_t v97 = 0LL;
  char v98 = 0;
  uint64_t v94 = 0LL;
  uint64_t v95 = 0LL;
  uint64_t v91 = 0LL;
  uint64_t v92 = 0LL;
  char v93 = 0;
  uint64_t v89 = 0LL;
  uint64_t v90 = 0LL;
  uint64_t v87 = 0LL;
  uint64_t v88 = 0LL;
  uint64_t v85 = 0LL;
  uint64_t v86 = 0LL;
  uint64_t v100 = a13;
  uint64_t v84 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v82 = *(void *)(v84 - 8);
  uint64_t v56 = *(void *)(v82 + 64);
  unint64_t v54 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v14 = __chkstk_darwin(v13);
  id v58 = (char *)&v53 - v54;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v53 - v15;
  uint64_t v99 = (char *)&v53 - v15;
  uint64_t v96 = v16;
  uint64_t v97 = v17;
  char v98 = v18;
  uint64_t v94 = v19;
  uint64_t v95 = v20;
  uint64_t v91 = v21;
  uint64_t v92 = v22;
  char v93 = v23;
  uint64_t v89 = v62;
  uint64_t v90 = v64;
  uint64_t v87 = v24;
  uint64_t v88 = a12;
  id v55 = (id)*sub_50EB0();
  id v25 = v55;
  OSSignpostID.init(log:)(v55);
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v58, v83, v84);
  swift_retain();
  uint64_t v26 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v57 = (v26 + 41) & ~v26;
  uint64_t v76 = 7LL;
  unint64_t v59 = (v57 + v56 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v27 = swift_allocObject(&unk_CDCE8, v59 + 16, v26 | 7);
  uint64_t v28 = v57;
  uint64_t v29 = v58;
  uint64_t v30 = v69;
  uint64_t v31 = v70;
  char v32 = v71;
  uint64_t v33 = v82;
  uint64_t v34 = v84;
  uint64_t v81 = v27;
  *(void *)(v27 + swift_beginAccess(v0 + 16) = v77;
  *(void *)(v27 + 24) = v30;
  *(void *)(v27 + 3sub_4598(v0 + 2) = v31;
  *(_BYTE *)(v27 + 40) = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v27 + v28, v29, v34);
  uint64_t v35 = v61;
  uint64_t v36 = v81;
  uint64_t v37 = (void *)(v81 + v59);
  *uint64_t v37 = v60;
  v37[1] = v35;
  uint64_t v78 = sub_51FF4;
  uint64_t v85 = sub_51FF4;
  uint64_t v86 = v36;
  unsigned int v73 = static os_signpost_type_t.begin.getter(v36);
  id v75 = (id)*sub_50EB0();
  id v38 = v75;
  uint64_t v65 = sub_5150(&qword_D7F00);
  uint64_t v66 = _allocateUninitializedArray<A>(_:)(1LL, v65);
  uint64_t v63 = v39;
  swift_bridgeObjectRetain(v64);
  v63[3] = &type metadata for String;
  unint64_t v40 = sub_52074();
  uint64_t v41 = v62;
  unint64_t v42 = v63;
  uint64_t v43 = v64;
  unint64_t v44 = v40;
  uint64_t v45 = v66;
  v63[4] = v44;
  *unint64_t v42 = v41;
  v42[1] = v43;
  sub_6648();
  uint64_t v74 = v45;
  char v52 = v68;
  os_signpost(_:dso:log:name:signpostID:_:_:)(v73, &dword_0, v75, v69, v70, v71, v83, v72, v67, v52, v45);
  swift_bridgeObjectRelease(v74);

  swift_retain();
  uint64_t v46 = swift_allocObject(&unk_CDD10, 40LL, v76);
  uint64_t v47 = v78;
  int v48 = v79;
  int v49 = (void *)v46;
  uint64_t v50 = v81;
  uint64_t v80 = v49;
  v49[2] = v77;
  v49[3] = v47;
  v49[4] = v50;
  v48(sub_51F38);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v83, v84);
}

uint64_t sub_51930( uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, void (*a6)(uint64_t))
{
  unsigned int v12 = static os_signpost_type_t.end.getter(a1);
  id v13 = (id)*sub_50EB0();
  id v6 = v13;
  os_signpost(_:dso:log:name:signpostID:)(v12, &dword_0, v13, a2, a3, a4, a5);

  swift_retain();
  a6(a1);
  return swift_release();
}

uint64_t sub_51A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  unsigned int v16 = a3;
  uint64_t v26 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  char v25 = 0;
  uint64_t v21 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v20 = *(void *)(v21 - 8);
  unint64_t v12 = (*(void *)(v20 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v22 = (char *)&v12 - v12;
  uint64_t v26 = (char *)&v12 - v12;
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  char v25 = v7;
  id v13 = (id)*sub_50EB0();
  id v8 = v13;
  uint64_t v9 = OSSignpostID.init(log:)(v13);
  unsigned int v17 = static os_signpost_type_t.begin.getter(v9);
  id v18 = (id)*sub_50EB0();
  id v10 = v18;
  os_signpost(_:dso:log:name:signpostID:)(v17, &dword_0, v18, v14, v15, v16, v22);

  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v19, v22, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v21);
}

void sub_51B3C()
{
  qword_D95C8 = v0;
  qword_D95D0 = v1;
  byte_D95D8 = v2;
}

  ;
}

void sub_51BBC()
{
  qword_D95E0 = v0;
  qword_D95E8 = v1;
  byte_D95F0 = v2;
}

void sub_51C00()
{
  qword_D95F8 = v0;
  qword_D9600 = v1;
  byte_D9608 = v2;
}

uint64_t *sub_51C44()
{
  if (qword_D68C8 != -1) {
    swift_once(&qword_D68C8, sub_51C00);
  }
  return &qword_D95F8;
}

void sub_51C98()
{
  qword_D9610 = v0;
  qword_D9618 = v1;
  byte_D9620 = v2;
}

void sub_51CDC()
{
  qword_D9628 = v0;
  qword_D9630 = v1;
  byte_D9638 = v2;
}

void sub_51D20()
{
  qword_D9640 = v0;
  qword_D9648 = v1;
  byte_D9650 = v2;
}

void sub_51D64()
{
  qword_D9658 = v0;
  qword_D9660 = v1;
  byte_D9668 = v2;
}

uint64_t sub_51DA8()
{
  uint64_t v1 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 41LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = (v2 + *(void *)(v1 + 64) + 8) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release(*(void *)(v0 + v4 + 8));
  return swift_deallocObject(v5, v4 + 16);
}

uint64_t sub_51E50(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_5126C( a1,  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(unsigned __int8 *)(v1 + 40),  v1 + v3,  *(_BYTE *)(v1 + v3 + *(void *)(v2 + 64)) & 1,  *(void (**)(uint64_t))(v1 + ((v3 + *(void *)(v2 + 64) + 8) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_51EF4()
{
  return swift_deallocObject(v2, 40LL);
}

uint64_t sub_51F38(uint64_t a1)
{
  return sub_5141C(a1, *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_51F54()
{
  uint64_t v1 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 41LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = (v2 + *(void *)(v1 + 64) + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  swift_release(*(void *)(v0 + v4 + 8));
  return swift_deallocObject(v5, v4 + 16);
}

uint64_t sub_51FF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_51930( a1,  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(unsigned __int8 *)(v1 + 40),  v1 + v3,  *(void (**)(uint64_t))(v1 + ((v3 + *(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

unint64_t sub_52074()
{
  uint64_t v2 = qword_D7F08;
  if (!qword_D7F08)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F08);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_520DC()
{
  return swift_deallocObject(v2, 40LL);
}

void *type metadata accessor for Signposts()
{
  return &unk_CDD38;
}

__n128 sub_52134(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  return result;
}

uint64_t sub_52148(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(_BYTE *)(a1 + 17)) {
      int v3 = *(_DWORD *)a1;
    }
    else {
      int v3 = -1;
    }
  }

  else
  {
    int v3 = -1;
  }

  return (v3 + 1);
}

uint64_t sub_52228(uint64_t result, int a2, int a3)
{
  int v3 = (_BYTE *)(result + 17);
  if (a2)
  {
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)__n128 result = (a2 - 1);
    *(_BYTE *)(result + swift_beginAccess(v0 + 16) = 0;
    if (a3) {
      *int v3 = 1;
    }
  }

  else if (a3)
  {
    *int v3 = 0;
  }

  return result;
}

void *type metadata accessor for Signposts.Name()
{
  return &unk_CDDB0;
}

unint64_t sub_523D8()
{
  uint64_t v3 = qword_D7F10;
  if (!qword_D7F10)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___OS_os_log);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D7F10);
    return ObjCClassMetadata;
  }

  return v3;
}

BOOL sub_5243C(uint64_t a1, void *a2)
{
  string._uint64_t countAndFlagsBits = a1;
  string._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(1LL, &type metadata for StaticString);
  *(void *)uint64_t v3 = "graphName";
  *(void *)(v3 + sub_1D580(v0 + 8) = 9LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 16) = 2;
  sub_6648();
  rawValue = v2._rawValue;
  Swift::Int v7 = _findStringSwitchCase(cases:string:)(v2, string);
  swift_bridgeObjectRelease(rawValue);
  swift_bridgeObjectRelease(string._object);
  return v7 != 0;
}

uint64_t sub_5251C()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("graphName", 9uLL, 1)._countAndFlagsBits;
}

uint64_t sub_5254C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_52594();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_52594()
{
  uint64_t v2 = qword_D7F18;
  if (!qword_D7F18)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B74B0, &unk_CE2D0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F18);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_52600(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_52594();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_5263C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_52594();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_52680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_52594();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

BOOL sub_526C4@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_5243C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_52700@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_5251C();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_5272C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a1;
  v8[8] = v8;
  v8[2] = 0LL;
  v8[3] = 0LL;
  v8[4] = 0LL;
  void v8[5] = 0LL;
  v8[9] = 0LL;
  v8[6] = 0LL;
  v8[7] = 0LL;
  v8[10] = 0LL;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  v8[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[14] = v10;
  v8[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  v8[16] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[17] = v12;
  uint64_t v23 = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v8[18] = v23;
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  void v8[5] = a5;
  v8[9] = a6;
  v8[6] = a7;
  v8[7] = a8;
  id v13 = (void *)swift_task_alloc(dword_D7F2C);
  *(void *)(v15 + 15sub_4598(v0 + 2) = v13;
  *id v13 = *(void *)(v15 + 64);
  v13[1] = sub_528D8;
  return sub_53098(v23, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_528D8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 152);
  *(void *)(v2 + 64) = *v1;
  *(void *)(v2 + swift_beginAccess(v0 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_52A30, 0LL);
  }
  else {
    return swift_task_switch(sub_5297C, 0LL);
  }
}

uint64_t sub_5297C()
{
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[16];
  v0[8] = v0;
  static NLProducerResult.usoGraph(graph:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  uint64_t v5 = v0[15];
  swift_task_dealloc(v0[18]);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0[8] + 8LL))();
}

uint64_t sub_52A30()
{
  uint64_t v1 = v0[20];
  uint64_t v19 = v1;
  uint64_t v2 = v0[15];
  uint64_t v17 = v0[14];
  uint64_t v18 = v0[13];
  v0[8] = v0;
  swift_errorRetain(v1);
  v0[10] = v19;
  uint64_t v3 = sub_AD514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v2, v3, v18);
  swift_errorRetain(v19);
  uint64_t v23 = swift_allocObject(&unk_CDDD8, 24LL, 7LL);
  *(void *)(v23 + swift_beginAccess(v0 + 16) = v19;
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v32 = static os_log_type_t.error.getter();
  v0[11] = 12LL;
  unint64_t v20 = sub_7788();
  unint64_t v21 = sub_77F0();
  unint64_t v4 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 21, v0 + 11, &type metadata for UInt32, &type metadata for Int, v20, v21, v4);
  uint32_t v22 = *((_DWORD *)v0 + 42);
  uint64_t v25 = swift_allocObject(&unk_CDE00, 17LL, 7LL);
  *(_BYTE *)(v25 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v26 = swift_allocObject(&unk_CDE28, 17LL, 7LL);
  *(_BYTE *)(v26 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v24 = swift_allocObject(&unk_CDE50, 32LL, 7LL);
  *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_1ACC8;
  *(void *)(v24 + 24) = v23;
  uint64_t v28 = swift_allocObject(&unk_CDE78, 32LL, 7LL);
  *(void *)(v28 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v28 + 24) = v24;
  uint64_t v30 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v27 = _allocateUninitializedArray<A>(_:)(3LL, v30);
  uint64_t v29 = v5;
  swift_retain();
  *uint64_t v29 = sub_884C;
  v29[1] = v25;
  swift_retain();
  v29[2] = sub_884C;
  v29[3] = v26;
  swift_retain();
  v29[4] = sub_8900;
  void v29[5] = v28;
  sub_6648();
  swift_bridgeObjectRelease(v27);
  if (os_log_type_enabled(v31, v32))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v12 = sub_5150(&qword_D6B60);
    uint64_t v14 = sub_74D0(0LL, v12, v12);
    uint64_t v15 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v33 = buf;
    uint64_t v34 = v14;
    uint64_t v35 = v15;
    sub_7528(2LL, &v33);
    sub_7528(1LL, &v33);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v25;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v37 = v26;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v37 = v28;
    sub_753C(&v36, (uint64_t)&v33, (uint64_t)&v34, (uint64_t)&v35);
    _os_log_impl(&dword_0, v31, v32, "Unable to write USO protobuf graph: %s", buf, v22);
    sub_7580(v14, 0LL);
    sub_7580(v15, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v10 = v16[20];
  uint64_t v8 = v16[15];
  uint64_t v7 = v16[14];
  uint64_t v9 = v16[13];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  static NLProducerResult.error(error:)(v10);
  swift_errorRelease(v10);
  swift_errorRelease(v10);
  uint64_t v11 = v16[15];
  swift_task_dealloc(v16[18]);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v16[8] + 8LL))();
}

uint64_t sub_53098( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[31] = a8;
  v8[30] = a7;
  v8[29] = a6;
  v8[28] = a3;
  v8[27] = a2;
  v8[26] = a1;
  v8[18] = v8;
  v8[6] = 0LL;
  v8[7] = 0LL;
  v8[8] = 0LL;
  v8[9] = 0LL;
  v8[19] = 0LL;
  v8[10] = 0LL;
  v8[11] = 0LL;
  v8[22] = 0LL;
  v8[14] = 0LL;
  v8[15] = 0LL;
  v8[23] = 0LL;
  v8[25] = 0LL;
  uint64_t v9 = sub_5150(&qword_D7440);
  v8[32] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  v8[33] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[34] = v11;
  uint64_t v13 = *(void *)(v11 + 64);
  v8[35] = swift_task_alloc((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v8[36] = swift_task_alloc((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v8[37] = swift_task_alloc((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v8[6] = a2;
  v8[7] = a3;
  v8[8] = a4;
  v8[9] = a5;
  v8[19] = a6;
  v8[10] = a7;
  v8[11] = a8;
  return swift_task_switch(sub_53228, 0LL);
}

uint64_t sub_53228()
{
  uint64_t v1 = v0[37];
  uint64_t v80 = v0[34];
  uint64_t v81 = v0[33];
  v0[18] = v0;
  uint64_t v2 = sub_AD514();
  uint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
  uint64_t v3 = v82(v1, v2, v81);
  uint64_t v99 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v100 = static os_log_type_t.debug.getter();
  v0[20] = 22LL;
  unint64_t v83 = sub_7788();
  unint64_t v84 = sub_77F0();
  unint64_t v85 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 38, v0 + 20, &type metadata for UInt32, &type metadata for Int, v83, v84, v85);
  uint32_t size = *((_DWORD *)v0 + 76);
  uint64_t v90 = swift_allocObject(&unk_CDEA0, 17LL, 7LL);
  *(_BYTE *)(v90 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v91 = swift_allocObject(&unk_CDEC8, 17LL, 7LL);
  *(_BYTE *)(v91 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v87 = swift_allocObject(&unk_CDEF0, 32LL, 7LL);
  *(void *)(v87 + swift_beginAccess(v0 + 16) = sub_54B58;
  *(void *)(v87 + 24) = 0LL;
  uint64_t v88 = swift_allocObject(&unk_CDF18, 32LL, 7LL);
  *(void *)(v88 + swift_beginAccess(v0 + 16) = sub_1CEFC;
  *(void *)(v88 + 24) = v87;
  uint64_t v92 = swift_allocObject(&unk_CDF40, 32LL, 7LL);
  *(void *)(v92 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v92 + 24) = v88;
  uint64_t v93 = swift_allocObject(&unk_CDF68, 17LL, 7LL);
  *(_BYTE *)(v93 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v94 = swift_allocObject(&unk_CDF90, 17LL, 7LL);
  *(_BYTE *)(v94 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v89 = swift_allocObject(&unk_CDFB8, 32LL, 7LL);
  *(void *)(v89 + swift_beginAccess(v0 + 16) = sub_54B68;
  *(void *)(v89 + 24) = 0LL;
  uint64_t v96 = swift_allocObject(&unk_CDFE0, 32LL, 7LL);
  *(void *)(v96 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v96 + 24) = v89;
  uint64_t v98 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v95 = _allocateUninitializedArray<A>(_:)(6LL, v98);
  uint64_t v97 = v4;
  swift_retain();
  void *v97 = sub_884C;
  v97[1] = v90;
  swift_retain();
  v97[2] = sub_884C;
  v97[3] = v91;
  swift_retain();
  v97[4] = sub_8900;
  v97[5] = v92;
  swift_retain();
  v97[6] = sub_884C;
  v97[7] = v93;
  swift_retain();
  v97[8] = sub_884C;
  v97[9] = v94;
  swift_retain();
  v97[10] = sub_8900;
  v97[11] = v96;
  sub_6648();
  swift_bridgeObjectRelease(v95);
  if (os_log_type_enabled(v99, v100))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v75 = sub_5150(&qword_D6B60);
    uint64_t v77 = sub_74D0(0LL, v75, v75);
    uint64_t v78 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    double v111 = buf;
    uint64_t v112 = v77;
    uint64_t v113 = v78;
    sub_7528(2LL, &v111);
    sub_7528(2LL, &v111);
    uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v115 = v90;
    sub_753C(&v114, (uint64_t)&v111, (uint64_t)&v112, (uint64_t)&v113);
    uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v115 = v91;
    sub_753C(&v114, (uint64_t)&v111, (uint64_t)&v112, (uint64_t)&v113);
    uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v115 = v92;
    sub_753C(&v114, (uint64_t)&v111, (uint64_t)&v112, (uint64_t)&v113);
    uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v115 = v93;
    sub_753C(&v114, (uint64_t)&v111, (uint64_t)&v112, (uint64_t)&v113);
    uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v115 = v94;
    sub_753C(&v114, (uint64_t)&v111, (uint64_t)&v112, (uint64_t)&v113);
    uint64_t v114 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v115 = v96;
    sub_753C(&v114, (uint64_t)&v111, (uint64_t)&v112, (uint64_t)&v113);
    _os_log_impl(&dword_0, v99, v100, "%s.%s", buf, size);
    sub_7580(v77, 0LL);
    sub_7580(v78, 2LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v72 = v79[37];
  uint64_t v71 = v79[34];
  uint64_t v73 = v79[33];

  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v74(v72, v73);
  v79[12] = sub_5251C();
  v79[13] = v5;
  Dictionary.subscript.getter(v79 + 2);
  sub_8DD8((uint64_t)(v79 + 12));
  if (v79[5])
  {
    if ((swift_dynamicCast(v79 + 16, v79 + 2, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      uint64_t v69 = v79[16];
      uint64_t v70 = v79[17];
    }

    else
    {
      uint64_t v69 = 0LL;
      uint64_t v70 = 0LL;
    }

    uint64_t v67 = v69;
    uint64_t v68 = v70;
  }

  else
  {
    sub_1D580(v79 + 2);
    uint64_t v67 = 0LL;
    uint64_t v68 = 0LL;
  }

  if (v68)
  {
    uint64_t v6 = v79[31];
    uint64_t v7 = v79[30];
    v79[14] = v67;
    v79[15] = v68;
    uint64_t v66 = sub_54B94(v67, v68, v7, v6);
    if (v66)
    {
      uint64_t v8 = v79[36];
      uint64_t v55 = v79[33];
      v79[23] = v66;
      uint64_t v9 = sub_AD514();
      v82(v8, v9, v55);
      swift_bridgeObjectRetain(v68);
      uint64_t v57 = swift_allocObject(&unk_CE0D0, 32LL, 7LL);
      *(void *)(v57 + swift_beginAccess(v0 + 16) = v67;
      *(void *)(v57 + 24) = v68;
      oslog = (os_log_s *)Logger.logObject.getter(v57);
      os_log_type_t v65 = static os_log_type_t.debug.getter();
      v79[24] = 12LL;
      UnsignedInteger<>.init<A>(_:)( v79 + 39,  v79 + 24,  &type metadata for UInt32,  &type metadata for Int,  v83,  v84,  v85);
      uint32_t v56 = *((_DWORD *)v79 + 78);
      uint64_t v59 = swift_allocObject(&unk_CE0F8, 17LL, 7LL);
      *(_BYTE *)(v59 + swift_beginAccess(v0 + 16) = 32;
      uint64_t v60 = swift_allocObject(&unk_CE120, 17LL, 7LL);
      *(_BYTE *)(v60 + swift_beginAccess(v0 + 16) = 8;
      uint64_t v58 = swift_allocObject(&unk_CE148, 32LL, 7LL);
      *(void *)(v58 + swift_beginAccess(v0 + 16) = sub_1B890;
      *(void *)(v58 + 24) = v57;
      uint64_t v62 = swift_allocObject(&unk_CE170, 32LL, 7LL);
      *(void *)(v62 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v62 + 24) = v58;
      uint64_t v61 = _allocateUninitializedArray<A>(_:)(3LL, v98);
      uint64_t v63 = v10;
      swift_retain();
      *uint64_t v63 = sub_884C;
      v63[1] = v59;
      swift_retain();
      v63[2] = sub_884C;
      v63[3] = v60;
      swift_retain();
      v63[4] = sub_8900;
      v63[5] = v62;
      sub_6648();
      swift_bridgeObjectRelease(v61);
      if (os_log_type_enabled(oslog, v65))
      {
        char v52 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v51 = sub_5150(&qword_D6B60);
        uint64_t v53 = sub_74D0(0LL, v51, v51);
        uint64_t v54 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v106 = v52;
        uint64_t v107 = v53;
        uint64_t v108 = v54;
        sub_7528(2LL, &v106);
        sub_7528(1LL, &v106);
        unint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v110 = v59;
        sub_753C(&v109, (uint64_t)&v106, (uint64_t)&v107, (uint64_t)&v108);
        unint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v110 = v60;
        sub_753C(&v109, (uint64_t)&v106, (uint64_t)&v107, (uint64_t)&v108);
        unint64_t v109 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v110 = v62;
        sub_753C(&v109, (uint64_t)&v106, (uint64_t)&v107, (uint64_t)&v108);
        _os_log_impl(&dword_0, oslog, v65, "NLv4 producer returning a value SDA for %s", v52, v56);
        sub_7580(v53, 0LL);
        sub_7580(v54, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      uint64_t v44 = v79[36];
      uint64_t v45 = v79[33];
      uint64_t v49 = v79[32];

      v74(v44, v45);
      uint64_t v48 = type metadata accessor for UsoTaskBuilder(0LL);
      uint64_t v46 = _allocateUninitializedArray<A>(_:)(1LL, v48);
      uint64_t v47 = v11;
      swift_retain();
      uint64_t *v47 = v66;
      sub_6648();
      uint64_t v12 = type metadata accessor for UsoBuilderOptions(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v49, 1LL);
      uint64_t v50 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v46, v49);
      sub_1C338(v49);
      swift_bridgeObjectRelease(v46);
      v79[25] = v50;
      static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease(v68);
      goto LABEL_23;
    }

    swift_bridgeObjectRelease(v68);
  }

  uint64_t v13 = v79[35];
  uint64_t v31 = v79[33];
  uint64_t v33 = v79[28];
  uint64_t v32 = v79[27];
  uint64_t v14 = sub_AD514();
  v82(v13, v14, v31);
  swift_bridgeObjectRetain(v33);
  uint64_t v35 = swift_allocObject(&unk_CE008, 32LL, 7LL);
  *(void *)(v35 + swift_beginAccess(v0 + 16) = v32;
  *(void *)(v35 + 24) = v33;
  log = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v43 = static os_log_type_t.error.getter();
  v79[21] = 12LL;
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v79 + 308),  v79 + 21,  &type metadata for UInt32,  &type metadata for Int,  v83,  v84,  v85);
  uint32_t v34 = *((_DWORD *)v79 + 77);
  uint64_t v37 = swift_allocObject(&unk_CE030, 17LL, 7LL);
  *(_BYTE *)(v37 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v38 = swift_allocObject(&unk_CE058, 17LL, 7LL);
  *(_BYTE *)(v38 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v36 = swift_allocObject(&unk_CE080, 32LL, 7LL);
  *(void *)(v36 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v36 + 24) = v35;
  uint64_t v40 = swift_allocObject(&unk_CE0A8, 32LL, 7LL);
  *(void *)(v40 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v40 + 24) = v36;
  uint64_t v39 = _allocateUninitializedArray<A>(_:)(3LL, v98);
  uint64_t v41 = v15;
  swift_retain();
  *uint64_t v41 = sub_884C;
  v41[1] = v37;
  swift_retain();
  v41[2] = sub_884C;
  v41[3] = v38;
  swift_retain();
  v41[4] = sub_8900;
  v41[5] = v40;
  sub_6648();
  swift_bridgeObjectRelease(v39);
  if (os_log_type_enabled(log, v43))
  {
    uint64_t v28 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v27 = sub_5150(&qword_D6B60);
    uint64_t v29 = sub_74D0(0LL, v27, v27);
    uint64_t v30 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v101 = v28;
    uint64_t v102 = v29;
    uint64_t v103 = v30;
    sub_7528(2LL, &v101);
    sub_7528(1LL, &v101);
    uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v105 = v37;
    sub_753C(&v104, (uint64_t)&v101, (uint64_t)&v102, (uint64_t)&v103);
    uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v105 = v38;
    sub_753C(&v104, (uint64_t)&v101, (uint64_t)&v102, (uint64_t)&v103);
    uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v105 = v40;
    sub_753C(&v104, (uint64_t)&v101, (uint64_t)&v102, (uint64_t)&v103);
    _os_log_impl( &dword_0,  log,  v43,  "No valid configuration found for NLv4 producer for %s. Returning empty UsoGraph.",  v28,  v34);
    sub_7580(v29, 0LL);
    sub_7580(v30, 1LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v22 = v79[35];
  uint64_t v23 = v79[33];
  uint64_t v24 = v79[32];

  v74(v22, v23);
  uint64_t v16 = type metadata accessor for UsoTaskBuilder(0LL);
  uint64_t v25 = _allocateUninitializedArray<A>(_:)(0LL, v16);
  uint64_t v17 = type metadata accessor for UsoBuilderOptions(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v24, 1LL);
  uint64_t v26 = static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)(v25, v24);
  sub_1C338(v24);
  swift_bridgeObjectRelease(v25);
  v79[22] = v26;
  static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
  swift_release();
LABEL_23:
  uint64_t v19 = v79[36];
  uint64_t v20 = v79[35];
  uint64_t v21 = v79[32];
  swift_task_dealloc(v79[37]);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v79[18] + 8LL))();
}

uint64_t sub_54B1C()
{
  return swift_deallocObject(v2, 24LL);
}

void *sub_54B58()
{
  return &unk_CE348;
}

uint64_t sub_54B68()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "makeGraph(responseId:sourceIdentifier:parameters:)",  0x32uLL,  1)._countAndFlagsBits;
}

uint64_t sub_54B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v83 = a1;
  uint64_t v84 = a2;
  uint64_t v77 = a3;
  uint64_t v78 = a4;
  uint64_t v96 = 0LL;
  uint64_t v97 = 0LL;
  uint64_t v94 = 0LL;
  uint64_t v95 = 0LL;
  uint64_t v76 = 0LL;
  uint64_t v79 = type metadata accessor for Logger(0LL);
  uint64_t v80 = *(void *)(v79 - 8);
  unint64_t v81 = (*(void *)(v80 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v82 = (char *)&v41 - v81;
  uint64_t v96 = v5;
  uint64_t v97 = v6;
  uint64_t v94 = v7;
  uint64_t v95 = v8;
  Swift::String v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("tell_common_SiriContent", 0x17uLL, 1);
  object = v9._object;
  int v86 = static String.== infix(_:_:)(v83, v84, v9._countAndFlagsBits, v9._object);
  swift_bridgeObjectRelease(object);
  if ((v86 & 1) != 0)
  {
    type metadata accessor for UsoTaskBuilder_tell_common_SiriContent(0LL);
    return UsoTaskBuilder_tell_common_SiriContent.__allocating_init()();
  }

  else
  {
    Swift::String v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("like_common_SiriContent", 0x17uLL, 1);
    uint64_t v73 = v10._object;
    int v74 = static String.== infix(_:_:)(v83, v84, v10._countAndFlagsBits, v10._object);
    swift_bridgeObjectRelease(v73);
    if ((v74 & 1) != 0)
    {
      type metadata accessor for UsoTaskBuilder_like_common_SiriContent(0LL);
      return UsoTaskBuilder_like_common_SiriContent.__allocating_init()();
    }

    else
    {
      Swift::String v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("unlike_common_SiriContent", 0x19uLL, 1);
      uint64_t v71 = v11._object;
      int v72 = static String.== infix(_:_:)(v83, v84, v11._countAndFlagsBits, v11._object);
      swift_bridgeObjectRelease(v71);
      if ((v72 & 1) != 0)
      {
        type metadata accessor for UsoTaskBuilder_unlike_common_SiriContent(0LL);
        return UsoTaskBuilder_unlike_common_SiriContent.__allocating_init()();
      }

      else
      {
        Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "perform_common_SiriSocialAction",  0x1FuLL,  1);
        uint64_t v69 = v12._object;
        int v70 = static String.== infix(_:_:)(v83, v84, v12._countAndFlagsBits, v12._object);
        swift_bridgeObjectRelease(v69);
        if ((v70 & 1) != 0)
        {
          type metadata accessor for UsoTaskBuilder_perform_common_SiriSocialAction(0LL);
          return UsoTaskBuilder_perform_common_SiriSocialAction.__allocating_init()();
        }

        else
        {
          uint64_t v13 = v82;
          uint64_t v14 = sub_AD514();
          (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v13, v14, v79);
          swift_bridgeObjectRetain(v84);
          uint64_t v57 = 32LL;
          uint64_t v58 = 7LL;
          uint64_t v15 = swift_allocObject(&unk_CE198, 32LL, 7LL);
          uint64_t v16 = v84;
          uint64_t v59 = v15;
          *(void *)(v15 + swift_beginAccess(v0 + 16) = v83;
          *(void *)(v15 + 24) = v16;
          uint64_t v67 = (os_log_s *)Logger.logObject.getter(v15);
          int v68 = static os_log_type_t.error.getter();
          uint64_t v54 = &v92;
          uint64_t v92 = 12LL;
          unint64_t v52 = sub_7788();
          unint64_t v53 = sub_77F0();
          unint64_t v17 = sub_7858();
          UnsignedInteger<>.init<A>(_:)(&v93, v54, &type metadata for UInt32, &type metadata for Int, v52, v53, v17);
          uint32_t v55 = v93;
          uint64_t v56 = 17LL;
          uint64_t v18 = swift_allocObject(&unk_CE1C0, 17LL, v58);
          uint64_t v19 = v56;
          uint64_t v20 = v58;
          uint64_t v61 = v18;
          *(_BYTE *)(v18 + swift_beginAccess(v0 + 16) = 32;
          uint64_t v21 = swift_allocObject(&unk_CE1E8, v19, v20);
          uint64_t v22 = v57;
          uint64_t v23 = v58;
          uint64_t v62 = v21;
          *(_BYTE *)(v21 + swift_beginAccess(v0 + 16) = 8;
          uint64_t v24 = swift_allocObject(&unk_CE210, v22, v23);
          uint64_t v25 = v57;
          uint64_t v26 = v58;
          uint64_t v27 = v24;
          uint64_t v28 = v59;
          uint64_t v60 = v27;
          *(void *)(v27 + swift_beginAccess(v0 + 16) = sub_1B890;
          *(void *)(v27 + 24) = v28;
          uint64_t v29 = swift_allocObject(&unk_CE238, v25, v26);
          uint64_t v30 = v60;
          uint64_t v64 = v29;
          *(void *)(v29 + swift_beginAccess(v0 + 16) = sub_88B8;
          *(void *)(v29 + 24) = v30;
          uint64_t v66 = sub_5150((uint64_t *)&unk_D6B50);
          uint64_t v63 = _allocateUninitializedArray<A>(_:)(3LL, v66);
          os_log_type_t v65 = v31;
          swift_retain();
          uint64_t v32 = v61;
          uint64_t v33 = v65;
          *os_log_type_t v65 = sub_884C;
          v33[1] = v32;
          swift_retain();
          uint64_t v34 = v62;
          uint64_t v35 = v65;
          v65[2] = sub_884C;
          v35[3] = v34;
          swift_retain();
          uint64_t v36 = v63;
          uint64_t v37 = v64;
          uint64_t v38 = v65;
          v65[4] = sub_8900;
          v38[5] = v37;
          sub_6648();
          swift_bridgeObjectRelease(v36);
          if (os_log_type_enabled(v67, (os_log_type_t)v68))
          {
            uint64_t v39 = v76;
            uint64_t v45 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
            uint64_t v44 = sub_5150(&qword_D6B60);
            uint64_t v46 = sub_74D0(0LL, v44, v44);
            uint64_t v47 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
            uint64_t v48 = &v91;
            uint64_t v91 = v45;
            uint64_t v49 = &v90;
            uint64_t v90 = v46;
            uint64_t v50 = &v89;
            uint64_t v89 = v47;
            sub_7528(2LL, &v91);
            sub_7528(1LL, v48);
            uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v88 = v61;
            sub_753C(&v87, (uint64_t)v48, (uint64_t)v49, (uint64_t)v50);
            uint64_t v51 = v39;
            if (v39)
            {
              __break(1u);
            }

            else
            {
              uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v88 = v62;
              sub_753C(&v87, (uint64_t)&v91, (uint64_t)&v90, (uint64_t)&v89);
              uint64_t v43 = 0LL;
              uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
              uint64_t v88 = v64;
              sub_753C(&v87, (uint64_t)&v91, (uint64_t)&v90, (uint64_t)&v89);
              _os_log_impl( &dword_0,  v67,  (os_log_type_t)v68,  "Unsupported graphName found in NLv4 producer: %s",  v45,  v55);
              sub_7580(v46, 0LL);
              sub_7580(v47, 1LL);
              UnsafeMutablePointer.deallocate()();
              swift_release();
              swift_release();
              swift_release();
            }
          }

          else
          {
            swift_release();
            swift_release();
            swift_release();
          }

          uint64_t v42 = 0LL;

          (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v79);
          return v42;
        }
      }
    }
  }

uint64_t sub_553CC()
{
  v2._uint64_t countAndFlagsBits = 0LL;
  v2._object = 0LL;
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialNLv4", 0xAuLL, 1);
  swift_bridgeObjectRetain(v0._object);
  Swift::String v2 = v0;
  sub_8DD8((uint64_t)&v2);
  return v0._countAndFlagsBits;
}

uint64_t sub_55440()
{
  uint64_t result = *v0;
  sub_16150(*v0, v0[1]);
  return result;
}

uint64_t sub_5545C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + swift_beginAccess(v0 + 16) = v7;
  uint64_t v15 = *v6;
  uint64_t v16 = v6[1];
  uint64_t v8 = (void *)swift_task_alloc(dword_D7F24);
  *(void *)(v7 + 24) = v8;
  *uint64_t v8 = *(void *)(v7 + 16);
  v8[1] = sub_65B4;
  return sub_5272C(a1, a2, a3, a4, a5, a6, v15, v16);
}

uint64_t sub_55510()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55538()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55560()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5559C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_555D8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55600()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55628(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  return _typeName(_:qualified:)(v1, 0LL);
}

uint64_t sub_55654()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55690()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_556CC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55708()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55730()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55758()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55794()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_557D0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5580C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55834()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5585C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55898()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_558D4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55910()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55938()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55960()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5599C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_559D8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55A14()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55A3C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_55A64()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_55AA0()
{
  return swift_deallocObject(v2, 32LL);
}

void *type metadata accessor for NLv4ProducerParameterNames()
{
  return &unk_CE2D0;
}

void *type metadata accessor for NLv4Producer()
{
  return &unk_CE348;
}

unint64_t sub_55B04()
{
  return sub_55B18();
}

unint64_t sub_55B18()
{
  uint64_t v2 = qword_D7F38;
  if (!qword_D7F38)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7488, &unk_CE2D0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F38);
    return WitnessTable;
  }

  return v2;
}

void sub_55B84(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = sub_1EB44();
  swift_bridgeObjectRetain(a2);
  id v3 = a3;
  id v4 = v8;
  AuthoredFlowDescriptor.init(flowId:bundle:_:)(a1, a2);
}

uint64_t sub_55C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v49 = a1;
  uint64_t v84 = 0LL;
  uint64_t v83 = 0LL;
  uint64_t v82 = 0LL;
  v81._uint64_t countAndFlagsBits = 0LL;
  v81._object = 0LL;
  uint64_t v78 = 0LL;
  uint64_t v77 = 0LL;
  uint64_t v73 = 0LL;
  uint64_t v74 = 0LL;
  uint64_t v48 = 0LL;
  uint64_t v60 = type metadata accessor for AuthoredFlowExtensions(0LL);
  uint64_t v57 = *(void *)(v60 - 8);
  unint64_t v32 = (*(void *)(v57 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v59 = (char *)&v32 - v32;
  uint64_t v84 = (char *)&v32 - v32;
  uint64_t v68 = type metadata accessor for CATIConfigDefaults(v3);
  uint64_t v66 = *(void *)(v68 - 8);
  unint64_t v33 = (*(void *)(v66 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v67 = (uint64_t)&v32 - v33;
  uint64_t v83 = (char *)&v32 - v33;
  uint64_t v82 = v5;
  Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialCATI", 0xAuLL, 1);
  uint64_t countAndFlagsBits = v6._countAndFlagsBits;
  object = v6._object;
  Swift::String v81 = v6;
  sub_56A0C(v67);
  uint64_t v34 = type metadata accessor for CATIUserInputParserProvider(v48);
  uint64_t v79 = CATIUserInputParserProvider.__allocating_init()();
  os_log_type_t v65 = &v80;
  CATIUserInputParserProviding.makeCATIUserInputParser(name:catiConfig:)( countAndFlagsBits,  object,  v67,  v34,  &protocol witness table for CATIUserInputParserProvider);
  swift_release();
  uint64_t matched = type metadata accessor for SocialExactMatchUserInputParser();
  uint64_t v7 = sub_56B98();
  uint64_t v64 = sub_980C8(v7, v8);
  uint64_t v78 = v64;
  uint64_t v39 = type metadata accessor for NLv4UserInputParser();
  uint64_t v63 = sub_8A120();
  uint64_t v77 = v63;
  uint64_t v35 = type metadata accessor for CATINLRepresentationProducerFactory(v48);
  uint64_t v75 = CATINLRepresentationProducerFactory.__allocating_init()();
  uint64_t v62 = &v76;
  CATINLRepresentationProducerProviding.makeCATINLRepresentationProducer(name:catiConfig:)( countAndFlagsBits,  object,  v67,  v35,  &protocol witness table for CATINLRepresentationProducerFactory);
  swift_release();
  uint64_t v44 = sub_553CC();
  uint64_t v61 = v9;
  uint64_t v73 = v44;
  uint64_t v74 = v9;
  uint64_t v37 = sub_56B88();
  uint64_t v38 = v10;
  swift_retain();
  AuthoredFlowExtensions.init(_:)(v37, v38);
  swift_release();
  swift_release();
  uint64_t v42 = sub_5150(&qword_D7F40);
  uint64_t v43 = _allocateUninitializedArray<A>(_:)(3LL, v42);
  uint64_t v41 = v11;
  swift_retain();
  v41[3] = (Swift::String *)v39;
  unint64_t v12 = sub_56BC4();
  uint64_t v13 = v41;
  uint64_t v14 = v63;
  unint64_t v15 = v12;
  uint64_t v16 = v65;
  v41[4] = (Swift::String *)v15;
  *uint64_t v13 = v14;
  sub_454C((uint64_t)v16, (uint64_t)(v13 + 5));
  swift_retain();
  v41[13] = (Swift::String *)matched;
  unint64_t v17 = sub_56C34();
  uint64_t v18 = v41;
  uint64_t v19 = v64;
  unint64_t v20 = v17;
  uint64_t v21 = v43;
  v41[14] = (Swift::String *)v20;
  v18[10] = (Swift::String *)v19;
  sub_6648();
  AuthoredFlowExtensions.userInputParsers.setter(v21);
  uint64_t v46 = sub_5150(&qword_D7F58);
  uint64_t v47 = _allocateUninitializedArray<A>(_:)(2LL, v46);
  uint64_t v45 = v22;
  sub_454C((uint64_t)v62, v22);
  swift_bridgeObjectRetain(v61);
  *(void *)(v45 + 64) = &unk_CE348;
  unint64_t v23 = sub_56CA4();
  uint64_t v24 = v44;
  uint64_t v25 = v45;
  uint64_t v26 = v61;
  unint64_t v27 = v23;
  uint64_t v28 = v47;
  *(void *)(v45 + 7sub_4598(v0 + 2) = v27;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 4sub_1D580(v0 + 8) = v26;
  sub_6648();
  AuthoredFlowExtensions.nlRepresentationProducers.setter(v28);
  uint64_t v51 = type metadata accessor for SocialPresentationElementProvider();
  uint64_t v50 = v71;
  sub_454C(v49, (uint64_t)v71);
  uint64_t v29 = sub_56D30();
  uint64_t v52 = sub_56D5C(v50, v29);
  unint64_t v53 = v72;
  v72[3] = v51;
  void v72[4] = sub_56DAC();
  v72[0] = v52;
  AuthoredFlowExtensions.presentationElementsProvider.setter(v53);
  uint64_t v54 = sub_40C0C();
  uint64_t v55 = v30;
  uint64_t v56 = v70;
  v70[3] = &unk_CCE40;
  void v70[4] = sub_56E1C();
  v70[0] = v54;
  v70[1] = v55;
  AuthoredFlowExtensions.persistenceHandler.setter(v56);
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v58, v59, v60);
  swift_bridgeObjectRelease(v61);
  sub_4598(v62);
  swift_release();
  swift_release();
  sub_4598(v65);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v68);
  return swift_bridgeObjectRelease(object);
}

__int128 *sub_560DC()
{
  if (qword_D68F0 != -1) {
    swift_once(&qword_D68F0, sub_56E84);
  }
  return &xmmword_D9670;
}

__int128 *sub_56130()
{
  if (qword_D6908 != -1) {
    swift_once(&qword_D6908, sub_56F44);
  }
  return &xmmword_D96A0;
}

__int128 *sub_56184()
{
  if (qword_D68F8 != -1) {
    swift_once(&qword_D68F8, sub_56EC4);
  }
  return &xmmword_D9680;
}

__int128 *sub_561D8()
{
  if (qword_D6900 != -1) {
    swift_once(&qword_D6900, sub_56F04);
  }
  return &xmmword_D9690;
}

__int128 *sub_5622C()
{
  if (qword_D6928 != -1) {
    swift_once(&qword_D6928, sub_570EC);
  }
  return &xmmword_D96E0;
}

__int128 *sub_56280()
{
  if (qword_D6930 != -1) {
    swift_once(&qword_D6930, sub_5712C);
  }
  return &xmmword_D96F0;
}

__int128 *sub_562D4()
{
  if (qword_D6938 != -1) {
    swift_once(&qword_D6938, sub_5716C);
  }
  return &xmmword_D9700;
}

__int128 *sub_56328()
{
  if (qword_D6918 != -1) {
    swift_once(&qword_D6918, sub_57018);
  }
  return &xmmword_D96C0;
}

uint64_t sub_5637C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[29] = a1;
  v9[31] = a2;
  v9[30] = a3;
  uint64_t v19 = 0LL;
  uint64_t v18 = 0LL;
  unint64_t v17 = 0LL;
  uint64_t v16 = 0LL;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v13 = (char *)v9 - v12;
  uint64_t v19 = v4;
  uint64_t v18 = v5;
  unint64_t v17 = v6;
  uint64_t v14 = sub_96984(v5, v6);
  uint64_t v15 = 0LL;
  return AuthoredFlowDescriptor.templateDir.setter(v14, v7);
}

uint64_t sub_56A00(uint64_t a1)
{
  return sub_5637C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_56A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v18 = 0LL;
  uint64_t v17 = type metadata accessor for CATIConfigDefaults(0LL);
  uint64_t v14 = *(void *)(v17 - 8);
  unint64_t v8 = (*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v16 = (char *)&v8 - v8;
  uint64_t v18 = (char *)&v8 - v8;
  int v13 = 1;
  Swift::String v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("common_SocialConversation", 0x19uLL, 1);
  uint64_t v10 = sub_56B88();
  uint64_t v11 = v2;
  swift_retain();
  CATIConfigDefaults.init(entityName:_:)(v9._countAndFlagsBits, v9._object, v10, v11);
  swift_release();
  swift_release();
  Builtin::Word v12 = 6LL;
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("target", 6uLL, v13 & 1);
  CATIConfigDefaults.taskAttributeName.setter(v3._countAndFlagsBits, v3._object);
  Swift::String v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("action", v12, v13 & 1);
  CATIConfigDefaults.verb.setter(v4._countAndFlagsBits, v4._object);
  Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("guid", 4uLL, v13 & 1);
  CATIConfigDefaults.namespace.setter(v5._countAndFlagsBits, v5._object);
  Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dialog", v12, v13 & 1);
  CATIConfigDefaults.entityAttributeName.setter(v6._countAndFlagsBits, v6._object);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v15, v16, v17);
}

uint64_t (*sub_56B88())(void)
{
  return nullsub_1;
}

uint64_t sub_56B98()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("exactMatch", 0xAuLL, 1)._countAndFlagsBits;
}

unint64_t sub_56BC4()
{
  uint64_t v3 = qword_D7F48;
  if (!qword_D7F48)
  {
    uint64_t v0 = type metadata accessor for NLv4UserInputParser();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B84A4, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F48);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_56C34()
{
  uint64_t v3 = qword_D7F50;
  if (!qword_D7F50)
  {
    uint64_t matched = type metadata accessor for SocialExactMatchUserInputParser();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B86B0, matched);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F50);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_56CA4()
{
  uint64_t v2 = qword_D7F60;
  if (!qword_D7F60)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B74E8, &unk_CE348);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F60);
    return WitnessTable;
  }

  return v2;
}

uint64_t type metadata accessor for SocialPresentationElementProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin33SocialPresentationElementProvider);
}

uint64_t sub_56D30()
{
  uint64_t v1 = *sub_4A758();
  swift_retain();
  return v1;
}

uint64_t sub_56D5C(void *a1, uint64_t a2)
{
  return sub_5750C(a1, a2);
}

unint64_t sub_56DAC()
{
  uint64_t v3 = qword_D7F68;
  if (!qword_D7F68)
  {
    uint64_t v0 = type metadata accessor for SocialPresentationElementProvider();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B76BC, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F68);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_56E1C()
{
  uint64_t v2 = qword_D7F70;
  if (!qword_D7F70)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7098, &unk_CCE40);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F70);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_56E84()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("snippetName", 0xBuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9670 = (__int128)v1;
  return result;
}

uint64_t sub_56EC4()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("visualLocation", 0xEuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9680 = (__int128)v1;
  return result;
}

uint64_t sub_56F04()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("conversation", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9690 = (__int128)v1;
  return result;
}

uint64_t sub_56F44()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttonStack", 0xBuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D96A0 = (__int128)v1;
  return result;
}

uint64_t sub_56F84()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("playWithMeSection", 0x11uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D96B0 = (__int128)v1;
  return result;
}

__int128 *sub_56FC4()
{
  if (qword_D6910 != -1) {
    swift_once(&qword_D6910, sub_56F84);
  }
  return &xmmword_D96B0;
}

uint64_t sub_57018()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttons", 7uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D96C0 = (__int128)v1;
  return result;
}

uint64_t sub_57058()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("includeDialog", 0xDuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D96D0 = (__int128)v1;
  return result;
}

__int128 *sub_57098()
{
  if (qword_D6920 != -1) {
    swift_once(&qword_D6920, sub_57058);
  }
  return &xmmword_D96D0;
}

uint64_t sub_570EC()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("label", 5uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D96E0 = (__int128)v1;
  return result;
}

uint64_t sub_5712C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("directInvocation", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D96F0 = (__int128)v1;
  return result;
}

uint64_t sub_5716C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userData", 8uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9700 = (__int128)v1;
  return result;
}

uint64_t sub_571AC()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("showAll", 7uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9710 = (__int128)v1;
  return result;
}

__int128 *sub_571EC()
{
  if (qword_D6940 != -1) {
    swift_once(&qword_D6940, sub_571AC);
  }
  return &xmmword_D9710;
}

uint64_t sub_57240()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("separated", 9uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9720 = (__int128)v1;
  return result;
}

__int128 *sub_57280()
{
  if (qword_D6948 != -1) {
    swift_once(&qword_D6948, sub_57240);
  }
  return &xmmword_D9720;
}

uint64_t sub_572D4()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("content", 7uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9730 = (__int128)v1;
  return result;
}

__int128 *sub_57314()
{
  if (qword_D6950 != -1) {
    swift_once(&qword_D6950, sub_572D4);
  }
  return &xmmword_D9730;
}

uint64_t sub_57368()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("link", 4uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9740 = (__int128)v1;
  return result;
}

__int128 *sub_573A8()
{
  if (qword_D6958 != -1) {
    swift_once(&qword_D6958, sub_57368);
  }
  return &xmmword_D9740;
}

uint64_t sub_573FC(char a1)
{
  if ((a1 & 1) != 0) {
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("allInvocation", 0xDuLL, 1)._countAndFlagsBits;
  }
  else {
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("moreInvocation", 0xEuLL, 1)._countAndFlagsBits;
  }
}

uint64_t sub_57484(char a1)
{
  if ((a1 & 1) != 0) {
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("allContinuation", 0xFuLL, 1)._countAndFlagsBits;
  }
  else {
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("moreContinuation", 0x10uLL, 1)._countAndFlagsBits;
  }
}

uint64_t sub_5750C(void *a1, uint64_t a2)
{
  v8[6] = a1;
  void v8[5] = a2;
  swift_retain();
  uint64_t v9 = v2;
  swift_retain();
  *(void *)(v4 + 7sub_4598(v0 + 2) = a2;
  swift_release();
  sub_454C((uint64_t)a1, (uint64_t)v8);
  uint64_t v7 = sub_AD128(v8);
  swift_retain();
  uint64_t v9 = v7;
  swift_release();
  sub_4598(a1);
  swift_release();
  return v7;
}

uint64_t sub_575B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v509 = a3;
  uint64_t v538 = a1;
  uint64_t v544 = a2;
  v649 = 0LL;
  v648 = 0LL;
  v647 = 0LL;
  uint64_t v646 = 0LL;
  uint64_t v645 = 0LL;
  uint64_t v644 = 0LL;
  Swift::String v639 = (Swift::String)0LL;
  uint64_t v634 = 0LL;
  Swift::String v629 = (Swift::String)0LL;
  BYTE4(v626) = 0;
  uint64_t v511 = 0LL;
  uint64_t v613 = 0LL;
  v612[0] = 0LL;
  v612[1] = 0LL;
  uint64_t v610 = 0LL;
  Swift::String v605 = (Swift::String)0LL;
  Swift::String v600 = (Swift::String)0LL;
  uint64_t v595 = 0LL;
  char v590 = 0;
  Swift::String v585 = (Swift::String)0LL;
  uint64_t v584 = 0LL;
  v579._uint64_t countAndFlagsBits = 0LL;
  v579._object = 0LL;
  uint64_t v522 = 0LL;
  uint64_t v512 = type metadata accessor for SiriSocialConversationDataModels.ButtonStackModel();
  uint64_t v513 = *(void *)(v512 - 8);
  unint64_t v514 = (*(void *)(v513 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  v515 = (char *)&v251 - v514;
  v649 = (char *)&v251 - v514;
  uint64_t v516 = type metadata accessor for SiriSocialConversationDataModels.ButtonModel(v5);
  uint64_t v517 = *(void *)(v516 - 8);
  unint64_t v518 = (*(void *)(v517 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v6);
  v519 = (char *)&v251 - v518;
  unint64_t v520 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  v521 = (char *)&v251 - v520;
  v648 = (char *)&v251 - v520;
  uint64_t v523 = type metadata accessor for Logger(v9);
  v524 = *(void **)(v523 - 8);
  unint64_t v525 = (v524[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  v526 = (char *)&v251 - v525;
  unint64_t v527 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v13 = __chkstk_darwin(v11);
  v528 = (char *)&v251 - v527;
  unint64_t v529 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v15 = __chkstk_darwin(v13);
  v530 = (char *)&v251 - v529;
  unint64_t v531 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v17 = __chkstk_darwin(v15);
  v532 = (char *)&v251 - v531;
  unint64_t v533 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v19 = __chkstk_darwin(v17);
  v534 = (char *)&v251 - v533;
  uint64_t v535 = type metadata accessor for ResponseComponents(v19);
  uint64_t v536 = *(void *)(v535 - 8);
  unint64_t v537 = (*(void *)(v536 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v20);
  v539 = (char *)&v251 - v537;
  v647 = (char *)&v251 - v537;
  uint64_t v646 = v21;
  uint64_t v645 = v22;
  uint64_t v644 = v3;
  swift_bridgeObjectRetain(v21);
  v540 = sub_56B88();
  uint64_t v541 = v23;
  swift_retain();
  ResponseComponents.init(dialog:_:)(v538, v540, v541);
  swift_release();
  swift_release();
  uint64_t v24 = sub_560DC();
  uint64_t v542 = *(void *)v24;
  uint64_t v543 = *((void *)v24 + 1);
  swift_bridgeObjectRetain(v543);
  v545 = v641;
  v641[0] = v542;
  v641[1] = v543;
  Dictionary.subscript.getter(v642);
  sub_8DD8((uint64_t)v545);
  if (v642[3])
  {
    if ((swift_dynamicCast(&v546, v642, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      Swift::String v508 = v546;
    }

    else
    {
      v508._uint64_t countAndFlagsBits = 0LL;
      v508._object = 0LL;
    }

    Swift::String v507 = v508;
  }

  else
  {
    uint64_t v252 = 0LL;
    sub_1D580(v642);
    v507._uint64_t countAndFlagsBits = (uint64_t)v252;
    v507._object = v252;
  }

  Swift::String v640 = v507;
  if (v507._object)
  {
    Swift::String v643 = v640;
  }

  else
  {
    Swift::String v643 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("textOnlySnippet", 0xFuLL, 1);
    sub_8DD8((uint64_t)&v640);
  }

  uint64_t v25 = v534;
  Swift::String v488 = v643;
  Swift::String v639 = v643;
  uint64_t v26 = sub_AD514();
  v487 = (void (*)(char *, uint64_t, uint64_t))v524[2];
  v487(v25, v26, v523);
  swift_bridgeObjectRetain(v488._object);
  uint64_t v495 = 32LL;
  uint64_t v496 = 7LL;
  uint64_t v27 = swift_allocObject(&unk_CE3E0, 32LL, 7LL);
  object = v488._object;
  uint64_t v497 = v27;
  *(void *)(v27 + swift_beginAccess(v0 + 16) = v488._countAndFlagsBits;
  *(void *)(v27 + 24) = object;
  v505 = (os_log_s *)Logger.logObject.getter(v27);
  int v506 = static os_log_type_t.debug.getter();
  v491 = &v637;
  uint64_t v637 = 12LL;
  unint64_t v489 = sub_7788();
  unint64_t v490 = sub_77F0();
  unint64_t v492 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v638, v491, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
  uint32_t v493 = v638;
  uint64_t v494 = 17LL;
  uint64_t v29 = swift_allocObject(&unk_CE408, 17LL, v496);
  uint64_t v30 = v494;
  uint64_t v31 = v496;
  uint64_t v499 = v29;
  *(_BYTE *)(v29 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v32 = swift_allocObject(&unk_CE430, v30, v31);
  uint64_t v33 = v495;
  uint64_t v34 = v496;
  uint64_t v500 = v32;
  *(_BYTE *)(v32 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v35 = swift_allocObject(&unk_CE458, v33, v34);
  uint64_t v36 = v495;
  uint64_t v37 = v496;
  uint64_t v38 = v35;
  uint64_t v39 = v497;
  uint64_t v498 = v38;
  *(void *)(v38 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v38 + 24) = v39;
  uint64_t v40 = swift_allocObject(&unk_CE480, v36, v37);
  uint64_t v41 = v498;
  uint64_t v502 = v40;
  *(void *)(v40 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v40 + 24) = v41;
  uint64_t v504 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v501 = _allocateUninitializedArray<A>(_:)(3LL, v504);
  v503 = v42;
  swift_retain();
  uint64_t v43 = v499;
  uint64_t v44 = v503;
  void *v503 = sub_884C;
  v44[1] = v43;
  swift_retain();
  uint64_t v45 = v500;
  uint64_t v46 = v503;
  v503[2] = sub_884C;
  v46[3] = v45;
  swift_retain();
  uint64_t v47 = v501;
  uint64_t v48 = v502;
  uint64_t v49 = v503;
  v503[4] = sub_8900;
  v49[5] = v48;
  sub_6648();
  swift_bridgeObjectRelease(v47);
  if (os_log_type_enabled(v505, (os_log_type_t)v506))
  {
    uint64_t v50 = v511;
    v480 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v479 = sub_5150(&qword_D6B60);
    uint64_t v481 = sub_74D0(0LL, v479, v479);
    uint64_t v482 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v483 = &v551;
    v551 = v480;
    v484 = &v550;
    uint64_t v550 = v481;
    v485 = &v549;
    uint64_t v549 = v482;
    sub_7528(2LL, &v551);
    sub_7528(1LL, v483);
    v547 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v548 = v499;
    sub_753C(&v547, (uint64_t)v483, (uint64_t)v484, (uint64_t)v485);
    uint64_t v486 = v50;
    if (v50)
    {
      __break(1u);
    }

    else
    {
      v547 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v548 = v500;
      sub_753C(&v547, (uint64_t)&v551, (uint64_t)&v550, (uint64_t)&v549);
      uint64_t v477 = 0LL;
      uint64_t v52 = v477;
      v547 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v548 = v502;
      sub_753C(&v547, (uint64_t)&v551, (uint64_t)&v550, (uint64_t)&v549);
      uint64_t v476 = v52;
      _os_log_impl(&dword_0, v505, (os_log_type_t)v506, "snippetNameAfter: '%s'", v480, v493);
      sub_7580(v481, 0LL);
      sub_7580(v482, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v478 = v476;
    }
  }

  else
  {
    uint64_t v51 = v511;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v478 = v51;
  }

  uint64_t v458 = v478;

  v459 = (void (*)(char *, uint64_t))v524[1];
  v459(v534, v523);
  Swift::String v53 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation#", 0x13uLL, 1);
  v460 = v53._object;
  uint64_t v461 = static String.+ infix(_:_:)(v53._countAndFlagsBits, v53._object, v488._countAndFlagsBits);
  uint64_t v462 = v54;
  swift_bridgeObjectRelease(v460);
  ResponseComponents.responseViewId.setter(v461, v462);
  uint64_t v55 = v532;
  uint64_t v56 = sub_AD514();
  v487(v55, v56, v523);
  swift_bridgeObjectRetain(v488._object);
  uint64_t v465 = 32LL;
  uint64_t v466 = 7LL;
  uint64_t v57 = swift_allocObject(&unk_CE4A8, 32LL, 7LL);
  uint64_t v58 = v488._object;
  uint64_t v467 = v57;
  *(void *)(v57 + swift_beginAccess(v0 + 16) = v488._countAndFlagsBits;
  *(void *)(v57 + 24) = v58;
  v474 = (os_log_s *)Logger.logObject.getter(v57);
  int v475 = static os_log_type_t.debug.getter();
  uint64_t v635 = 12LL;
  UnsignedInteger<>.init<A>(_:)(&v636, &v635, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
  uint32_t v463 = v636;
  uint64_t v464 = 17LL;
  uint64_t v59 = swift_allocObject(&unk_CE4D0, 17LL, v466);
  uint64_t v60 = v464;
  uint64_t v61 = v466;
  uint64_t v469 = v59;
  *(_BYTE *)(v59 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v62 = swift_allocObject(&unk_CE4F8, v60, v61);
  uint64_t v63 = v465;
  uint64_t v64 = v466;
  uint64_t v470 = v62;
  *(_BYTE *)(v62 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v65 = swift_allocObject(&unk_CE520, v63, v64);
  uint64_t v66 = v465;
  uint64_t v67 = v466;
  uint64_t v68 = v65;
  uint64_t v69 = v467;
  uint64_t v468 = v68;
  *(void *)(v68 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v68 + 24) = v69;
  uint64_t v70 = swift_allocObject(&unk_CE548, v66, v67);
  uint64_t v71 = v504;
  uint64_t v72 = v70;
  uint64_t v73 = v468;
  uint64_t v472 = v72;
  *(void *)(v72 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v72 + 24) = v73;
  uint64_t v471 = _allocateUninitializedArray<A>(_:)(3LL, v71);
  v473 = v74;
  swift_retain();
  uint64_t v75 = v469;
  char v76 = v473;
  void *v473 = sub_884C;
  v76[1] = v75;
  swift_retain();
  uint64_t v77 = v470;
  uint64_t v78 = v473;
  v473[2] = sub_884C;
  v78[3] = v77;
  swift_retain();
  uint64_t v79 = v471;
  uint64_t v80 = v472;
  Swift::String v81 = v473;
  v473[4] = sub_8900;
  v81[5] = v80;
  sub_6648();
  swift_bridgeObjectRelease(v79);
  if (os_log_type_enabled(v474, (os_log_type_t)v475))
  {
    uint64_t v82 = v458;
    uint64_t v451 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v450 = sub_5150(&qword_D6B60);
    uint64_t v452 = sub_74D0(0LL, v450, v450);
    uint64_t v453 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v454 = &v556;
    v556 = v451;
    v455 = &v555;
    uint64_t v555 = v452;
    v456 = &v554;
    uint64_t v554 = v453;
    sub_7528(2LL, &v556);
    sub_7528(1LL, v454);
    v552 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v553 = v469;
    sub_753C(&v552, (uint64_t)v454, (uint64_t)v455, (uint64_t)v456);
    uint64_t v457 = v82;
    if (v82)
    {
      __break(1u);
    }

    else
    {
      v552 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v553 = v470;
      sub_753C(&v552, (uint64_t)&v556, (uint64_t)&v555, (uint64_t)&v554);
      uint64_t v448 = 0LL;
      uint64_t v84 = v448;
      v552 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v553 = v472;
      sub_753C(&v552, (uint64_t)&v556, (uint64_t)&v555, (uint64_t)&v554);
      uint64_t v447 = v84;
      _os_log_impl(&dword_0, v474, (os_log_type_t)v475, "visualParameters defines RF snippet '%s'", v451, v463);
      sub_7580(v452, 0LL);
      sub_7580(v453, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v449 = v447;
    }
  }

  else
  {
    uint64_t v83 = v458;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v449 = v83;
  }

  uint64_t v443 = v449;

  v459(v532, v523);
  uint64_t v634 = _allocateUninitializedArray<A>(_:)(0LL, v516);
  unint64_t v85 = sub_56130();
  uint64_t v444 = *(void *)v85;
  uint64_t v445 = *((void *)v85 + 1);
  swift_bridgeObjectRetain(v445);
  int v446 = static String.== infix(_:_:)(v488._countAndFlagsBits, v488._object, v444, v445);
  swift_bridgeObjectRelease(v445);
  if ((v446 & 1) != 0)
  {
    int v86 = sub_56328();
    uint64_t v440 = *(void *)v86;
    uint64_t v441 = *((void *)v86 + 1);
    swift_bridgeObjectRetain(v441);
    uint64_t v442 = v615;
    v615[0] = v440;
    v615[1] = v441;
    Dictionary.subscript.getter(v616);
    sub_8DD8((uint64_t)v442);
    if (v616[3])
    {
      uint64_t v87 = sub_5150(&qword_D7E20);
      else {
        uint64_t v439 = 0LL;
      }
      uint64_t v438 = v439;
    }

    else
    {
      uint64_t v307 = 0LL;
      sub_1D580(v616);
      uint64_t v438 = v307;
    }

    uint64_t v614 = v438;
    if (v438)
    {
      uint64_t v617 = v614;
    }

    else
    {
      uint64_t v88 = sub_5150(&qword_D7368);
      uint64_t v617 = _allocateUninitializedArray<A>(_:)(0LL, v88);
      sub_1B82C(&v614);
    }

    uint64_t v435 = v617;
    uint64_t v613 = v617;
    swift_bridgeObjectRetain(v617);
    v611[1] = v435;
    uint64_t v436 = sub_5150(&qword_D7E20);
    unint64_t v89 = sub_5EF10();
    Collection<>.makeIterator()(v612, v436, v89);
    for (uint64_t i = v443; ; uint64_t i = v324)
    {
      uint64_t v433 = i;
      uint64_t v90 = sub_5150(&qword_D7F90);
      IndexingIterator.next()(v611, v90);
      uint64_t v434 = v611[0];
      if (!v611[0]) {
        break;
      }
      uint64_t v432 = v434;
      uint64_t v430 = v434;
      uint64_t v610 = v434;
      uint64_t v91 = sub_5622C();
      uint64_t v428 = *(void *)v91;
      uint64_t v429 = *((void *)v91 + 1);
      swift_bridgeObjectRetain(v429);
      uint64_t v431 = v607;
      v607[0] = v428;
      v607[1] = v429;
      Dictionary.subscript.getter(v608);
      sub_8DD8((uint64_t)v431);
      if (v608[3])
      {
        if ((swift_dynamicCast(&v558, v608, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v427 = v558;
        }

        else
        {
          v427._uint64_t countAndFlagsBits = 0LL;
          v427._object = 0LL;
        }

        Swift::String v426 = v427;
      }

      else
      {
        unint64_t v309 = 0LL;
        sub_1D580(v608);
        v426._uint64_t countAndFlagsBits = (uint64_t)v309;
        v426._object = v309;
      }

      Swift::String v606 = v426;
      if (v426._object)
      {
        Swift::String v609 = v606;
      }

      else
      {
        Swift::String v609 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v606);
      }

      Swift::String v422 = v609;
      Swift::String v605 = v609;
      uint64_t v92 = sub_56280();
      uint64_t v423 = *(void *)v92;
      uint64_t v424 = *((void *)v92 + 1);
      swift_bridgeObjectRetain(v424);
      uint32_t v425 = v602;
      v602[0] = v423;
      v602[1] = v424;
      Dictionary.subscript.getter(v603);
      sub_8DD8((uint64_t)v425);
      if (v603[3])
      {
        if ((swift_dynamicCast(&v559, v603, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v421 = v559;
        }

        else
        {
          v421._uint64_t countAndFlagsBits = 0LL;
          v421._object = 0LL;
        }

        Swift::String v420 = v421;
      }

      else
      {
        uint64_t v310 = 0LL;
        sub_1D580(v603);
        v420._uint64_t countAndFlagsBits = (uint64_t)v310;
        v420._object = v310;
      }

      Swift::String v601 = v420;
      if (v420._object)
      {
        Swift::String v604 = v601;
      }

      else
      {
        Swift::String v604 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v601);
      }

      Swift::String v416 = v604;
      Swift::String v600 = v604;
      uint32_t v93 = sub_562D4();
      uint64_t v417 = *(void *)v93;
      uint64_t v418 = *((void *)v93 + 1);
      swift_bridgeObjectRetain(v418);
      uint64_t v419 = v597;
      v597[0] = v417;
      v597[1] = v418;
      Dictionary.subscript.getter(v598);
      sub_8DD8((uint64_t)v419);
      if (v598[3])
      {
        uint64_t v94 = sub_5150(&qword_D7FA8);
        else {
          uint64_t v415 = 0LL;
        }
        uint64_t v414 = v415;
      }

      else
      {
        uint64_t v311 = 0LL;
        sub_1D580(v598);
        uint64_t v414 = v311;
      }

      uint64_t v596 = v414;
      if (v414)
      {
        uint64_t v599 = v596;
      }

      else
      {
        uint64_t v95 = sub_5150(&qword_D7F98);
        uint64_t v96 = _allocateUninitializedArray<A>(_:)(0LL, v95);
        uint64_t v599 = Dictionary.init(dictionaryLiteral:)( v96,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
        sub_1B82C(&v596);
      }

      uint64_t v410 = v599;
      uint64_t v595 = v599;
      uint64_t v97 = sub_57280();
      uint64_t v411 = *(void *)v97;
      uint64_t v412 = *((void *)v97 + 1);
      swift_bridgeObjectRetain(v412);
      uint64_t v413 = v592;
      v592[0] = v411;
      v592[1] = v412;
      Dictionary.subscript.getter(v593);
      sub_8DD8((uint64_t)v413);
      if (v593[3])
      {
        else {
          int v409 = 2;
        }
        int v408 = v409;
      }

      else
      {
        sub_1D580(v593);
        int v408 = 2;
      }

      char v591 = v408;
      else {
        unsigned __int8 v594 = v591 & 1;
      }
      int v404 = v594;
      char v590 = v594 & 1;
      uint64_t v98 = sub_573A8();
      uint64_t v405 = *(void *)v98;
      uint64_t v406 = *((void *)v98 + 1);
      swift_bridgeObjectRetain(v406);
      uint64_t v407 = v587;
      v587[0] = v405;
      v587[1] = v406;
      Dictionary.subscript.getter(v588);
      sub_8DD8((uint64_t)v407);
      if (v588[3])
      {
        if ((swift_dynamicCast(&v562, v588, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v403 = v562;
        }

        else
        {
          v403._uint64_t countAndFlagsBits = 0LL;
          v403._object = 0LL;
        }

        Swift::String v402 = v403;
      }

      else
      {
        uint64_t v312 = 0LL;
        sub_1D580(v588);
        v402._uint64_t countAndFlagsBits = (uint64_t)v312;
        v402._object = v312;
      }

      Swift::String v586 = v402;
      if (v402._object)
      {
        Swift::String v589 = v586;
      }

      else
      {
        Swift::String v589 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v586);
      }

      Swift::String v373 = v589;
      Swift::String v585 = v589;
      uint64_t v388 = 32LL;
      uint64_t v389 = 7LL;
      uint64_t v383 = swift_allocObject(&unk_CE728, 32LL, 7LL);
      uint64_t v374 = v383 + 16;
      uint64_t v584 = v383 + 16;
      swift_retain();
      uint64_t v379 = sub_AD308();
      swift_release();
      swift_retain();
      uint64_t v378 = (void *)((char *)v581 + 4);
      sub_454C(v510 + 16, (uint64_t)v581 + 4);
      swift_release();
      uint64_t v376 = v582;
      uint64_t v375 = v583;
      sub_8C74(v378, v582);
      unint64_t v377 = (void *)(*(uint64_t (**)(uint64_t))(v375 + 32))(v376);
      uint64_t v100 = sub_30CCC(v422._countAndFlagsBits, (uint64_t)v422._object, v377, v99);
      uint64_t v101 = v530;
      uint64_t v380 = v100;
      uint64_t v381 = v102;

      sub_4598(v378);
      swift_release();
      uint64_t v103 = v381;
      uint64_t v104 = v383;
      *(void *)(v383 + swift_beginAccess(v0 + 16) = v380;
      *(void *)(v104 + 24) = v103;
      uint64_t v105 = sub_AD514();
      v487(v101, v105, v523);
      swift_retain();
      swift_bridgeObjectRetain(v422._object);
      uint64_t v106 = swift_allocObject(&unk_CE750, v388, v389);
      uint64_t v107 = v422._object;
      uint64_t v390 = v106;
      *(void *)(v106 + swift_beginAccess(v0 + 16) = v422._countAndFlagsBits;
      *(void *)(v106 + 24) = v107;
      uint64_t v400 = (os_log_s *)Logger.logObject.getter(v106);
      int v401 = static os_log_type_t.debug.getter();
      uint64_t v580 = 22LL;
      UnsignedInteger<>.init<A>(_:)(v581, &v580, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
      uint32_t v382 = v581[0];
      uint64_t v386 = 17LL;
      uint64_t v108 = swift_allocObject(&unk_CE778, 17LL, v389);
      uint64_t v109 = v386;
      uint64_t v110 = v389;
      uint64_t v392 = v108;
      int v385 = 32;
      *(_BYTE *)(v108 + swift_beginAccess(v0 + 16) = 32;
      uint64_t v111 = swift_allocObject(&unk_CE7A0, v109, v110);
      uint64_t v112 = v388;
      uint64_t v113 = v389;
      uint64_t v393 = v111;
      int v387 = 8;
      *(_BYTE *)(v111 + swift_beginAccess(v0 + 16) = 8;
      uint64_t v114 = swift_allocObject(&unk_CE7C8, v112, v113);
      uint64_t v115 = v388;
      uint64_t v116 = v389;
      uint64_t v117 = v114;
      uint64_t v118 = v383;
      uint64_t v384 = v117;
      *(void *)(v117 + swift_beginAccess(v0 + 16) = sub_5EFBC;
      *(void *)(v117 + 24) = v118;
      uint64_t v119 = swift_allocObject(&unk_CE7F0, v115, v116);
      uint64_t v120 = v386;
      uint64_t v121 = v389;
      uint64_t v122 = v119;
      uint64_t v123 = v384;
      uint64_t v394 = v122;
      *(void *)(v122 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v122 + 24) = v123;
      uint64_t v124 = swift_allocObject(&unk_CE818, v120, v121);
      uint64_t v125 = v386;
      uint64_t v126 = v389;
      uint64_t v395 = v124;
      *(_BYTE *)(v124 + swift_beginAccess(v0 + 16) = v385;
      uint64_t v127 = swift_allocObject(&unk_CE840, v125, v126);
      uint64_t v128 = v388;
      uint64_t v129 = v389;
      uint64_t v396 = v127;
      *(_BYTE *)(v127 + swift_beginAccess(v0 + 16) = v387;
      uint64_t v130 = swift_allocObject(&unk_CE868, v128, v129);
      uint64_t v131 = v388;
      uint64_t v132 = v389;
      uint64_t v133 = v130;
      uint64_t v134 = v390;
      uint64_t v391 = v133;
      *(void *)(v133 + swift_beginAccess(v0 + 16) = sub_1B890;
      *(void *)(v133 + 24) = v134;
      uint64_t v135 = swift_allocObject(&unk_CE890, v131, v132);
      uint64_t v136 = v504;
      uint64_t v137 = v135;
      uint64_t v138 = v391;
      uint64_t v398 = v137;
      *(void *)(v137 + swift_beginAccess(v0 + 16) = sub_88B8;
      *(void *)(v137 + 24) = v138;
      uint64_t v397 = _allocateUninitializedArray<A>(_:)(6LL, v136);
      uint64_t v399 = v139;
      swift_retain();
      uint64_t v140 = v392;
      uint64_t v141 = v399;
      *uint64_t v399 = sub_884C;
      v141[1] = v140;
      swift_retain();
      uint64_t v142 = v393;
      uint64_t v143 = v399;
      v399[2] = sub_884C;
      v143[3] = v142;
      swift_retain();
      uint64_t v144 = v394;
      uint64_t v145 = v399;
      v399[4] = sub_8900;
      v145[5] = v144;
      swift_retain();
      uint64_t v146 = v395;
      uint64_t v147 = v399;
      v399[6] = sub_884C;
      v147[7] = v146;
      swift_retain();
      uint64_t v148 = v396;
      uint64_t v149 = v399;
      v399[8] = sub_884C;
      v149[9] = v148;
      swift_retain();
      uint64_t v150 = v397;
      uint64_t v151 = v398;
      unsigned int v152 = v399;
      v399[10] = sub_8900;
      v152[11] = v151;
      sub_6648();
      swift_bridgeObjectRelease(v150);
      if (os_log_type_enabled(v400, (os_log_type_t)v401))
      {
        uint64_t v153 = v433;
        uint64_t v365 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
        uint64_t v364 = sub_5150(&qword_D6B60);
        uint64_t v366 = sub_74D0(0LL, v364, v364);
        uint64_t v367 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v369 = &v567;
        v567 = v365;
        uint64_t v370 = &v566;
        uint64_t v566 = v366;
        unint64_t v371 = &v565;
        uint64_t v565 = v367;
        unsigned int v368 = 2;
        sub_7528(2LL, &v567);
        sub_7528(v368, v369);
        v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v564 = v392;
        sub_753C(&v563, (uint64_t)v369, (uint64_t)v370, (uint64_t)v371);
        uint64_t v372 = v153;
        if (v153)
        {
          __break(1u);
        }

        else
        {
          v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v564 = v393;
          sub_753C(&v563, (uint64_t)&v567, (uint64_t)&v566, (uint64_t)&v565);
          uint64_t v362 = 0LL;
          uint64_t v155 = v362;
          v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v564 = v394;
          sub_753C(&v563, (uint64_t)&v567, (uint64_t)&v566, (uint64_t)&v565);
          uint64_t v361 = v155;
          v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v564 = v395;
          sub_753C(&v563, (uint64_t)&v567, (uint64_t)&v566, (uint64_t)&v565);
          uint64_t v360 = 0LL;
          v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v564 = v396;
          sub_753C(&v563, (uint64_t)&v567, (uint64_t)&v566, (uint64_t)&v565);
          uint64_t v359 = 0LL;
          v563 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v564 = v398;
          sub_753C(&v563, (uint64_t)&v567, (uint64_t)&v566, (uint64_t)&v565);
          uint64_t v358 = 0LL;
          _os_log_impl(&dword_0, v400, (os_log_type_t)v401, "dialog '%s' for button '%s'", v365, v382);
          sub_7580(v366, 0LL);
          sub_7580(v367, 2LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v363 = v358;
        }
      }

      else
      {
        uint64_t v154 = v433;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v363 = v154;
      }

      uint64_t v356 = v363;

      v459(v530, v523);
      int v357 = String.isEmpty.getter(v416._countAndFlagsBits, v416._object);
      swift_bridgeObjectRetain(v373._object);
      if ((v357 & 1) != 0) {
        int v355 = String.isEmpty.getter(v373._countAndFlagsBits, v373._object);
      }
      else {
        int v355 = 0;
      }
      int v354 = v355;
      swift_bridgeObjectRelease(v373._object);
      if ((v354 & 1) != 0)
      {
        unint64_t v156 = v528;
        uint64_t v341 = 12LL;
        Swift::String v157 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(" (No Action)", 0xCuLL, 1);
        uint64_t countAndFlagsBits = v157._countAndFlagsBits;
        uint64_t v340 = v157._object;
        uint64_t v339 = (char *)v574 + 4;
        swift_beginAccess(v374);
        static String.+= infix(_:_:)(v374, countAndFlagsBits, v340);
        swift_endAccess(v339);
        swift_bridgeObjectRelease(v340);
        uint64_t v158 = sub_AD514();
        uint64_t v159 = ((uint64_t (*)(char *, uint64_t, uint64_t))v487)(v156, v158, v523);
        unint64_t v352 = (os_log_s *)Logger.logObject.getter(v159);
        int v353 = static os_log_type_t.error.getter();
        uint64_t v573 = v341;
        UnsignedInteger<>.init<A>(_:)(v574, &v573, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
        uint32_t v342 = v574[0];
        uint64_t v343 = 17LL;
        uint64_t v345 = 7LL;
        uint64_t v160 = swift_allocObject(&unk_CE8B8, 17LL, 7LL);
        uint64_t v161 = v343;
        uint64_t v162 = v345;
        uint64_t v347 = v160;
        *(_BYTE *)(v160 + swift_beginAccess(v0 + 16) = 32;
        uint64_t v163 = swift_allocObject(&unk_CE8E0, v161, v162);
        uint64_t v164 = v345;
        uint64_t v348 = v163;
        *(_BYTE *)(v163 + swift_beginAccess(v0 + 16) = 8;
        uint64_t v344 = 32LL;
        uint64_t v165 = swift_allocObject(&unk_CE908, 32LL, v164);
        uint64_t v166 = v344;
        uint64_t v167 = v345;
        uint64_t v346 = v165;
        *(void *)(v165 + swift_beginAccess(v0 + 16) = sub_5A5D4;
        *(void *)(v165 + 24) = 0LL;
        uint64_t v168 = swift_allocObject(&unk_CE930, v166, v167);
        uint64_t v169 = v504;
        uint64_t v170 = v168;
        uint64_t v171 = v346;
        uint64_t v350 = v170;
        *(void *)(v170 + swift_beginAccess(v0 + 16) = sub_88B8;
        *(void *)(v170 + 24) = v171;
        uint64_t v349 = _allocateUninitializedArray<A>(_:)(3LL, v169);
        uint64_t v351 = v172;
        swift_retain();
        uint64_t v173 = v347;
        uint64_t v174 = v351;
        *uint64_t v351 = sub_884C;
        v174[1] = v173;
        swift_retain();
        uint64_t v175 = v348;
        uint64_t v176 = v351;
        v351[2] = sub_884C;
        v176[3] = v175;
        swift_retain();
        uint64_t v177 = v349;
        uint64_t v178 = v350;
        uint64_t v179 = v351;
        v351[4] = sub_8900;
        v179[5] = v178;
        sub_6648();
        swift_bridgeObjectRelease(v177);
        if (os_log_type_enabled(v352, (os_log_type_t)v353))
        {
          uint64_t v180 = v356;
          uint64_t v331 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
          uint64_t v330 = sub_5150(&qword_D6B60);
          uint64_t v332 = sub_74D0(0LL, v330, v330);
          uint64_t v333 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v334 = &v572;
          v572 = v331;
          uint64_t v335 = &v571;
          uint64_t v571 = v332;
          id v336 = &v570;
          uint64_t v570 = v333;
          sub_7528(2LL, &v572);
          sub_7528(1LL, v334);
          v568 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v569 = v347;
          sub_753C(&v568, (uint64_t)v334, (uint64_t)v335, (uint64_t)v336);
          uint64_t v337 = v180;
          if (v180)
          {
            __break(1u);
          }

          else
          {
            v568 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v569 = v348;
            sub_753C(&v568, (uint64_t)&v572, (uint64_t)&v571, (uint64_t)&v570);
            uint64_t v328 = 0LL;
            uint64_t v182 = v328;
            v568 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
            uint64_t v569 = v350;
            sub_753C(&v568, (uint64_t)&v572, (uint64_t)&v571, (uint64_t)&v570);
            uint64_t v327 = v182;
            _os_log_impl( &dword_0,  v352,  (os_log_type_t)v353,  "visualParameters for %s has a button with no direct invocation specified.",  v331,  v342);
            sub_7580(v332, 0LL);
            sub_7580(v333, 1LL);
            UnsafeMutablePointer.deallocate()();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v329 = v327;
          }
        }

        else
        {
          uint64_t v181 = v356;
          swift_release();
          swift_release();
          swift_release();
          uint64_t v329 = v181;
        }

        uint64_t v325 = v329;

        v459(v528, v523);
        uint64_t v326 = v325;
      }

      else
      {
        uint64_t v326 = v356;
      }

      uint64_t v324 = v326;
      Swift::String v579 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
      if ((String.isEmpty.getter(v373._countAndFlagsBits, v373._object) & 1) == 0)
      {
        swift_retain();
        uint64_t v322 = sub_AD308();
        swift_release();
        swift_retain();
        uint64_t v321 = v575;
        sub_454C(v510 + 16, (uint64_t)v575);
        swift_release();
        uint64_t v319 = v576;
        uint64_t v318 = v577;
        sub_8C74(v321, v576);
        uint64_t v320 = (void *)(*(uint64_t (**)(uint64_t))(v318 + 32))(v319);
        v323._uint64_t countAndFlagsBits = sub_30CCC(v373._countAndFlagsBits, (uint64_t)v373._object, v320, v183);
        v323._object = v184;

        sub_4598(v321);
        swift_release();
        uint64_t v185 = v579._object;
        Swift::String v579 = v323;
        swift_bridgeObjectRelease(v185);
      }

      unint64_t v313 = &v578;
      swift_beginAccess(v374);
      uint64_t v314 = *(void *)(v383 + 16);
      uint64_t v315 = *(void *)(v383 + 24);
      swift_bridgeObjectRetain(v315);
      swift_endAccess(v313);
      uint64_t v317 = &v579;
      Swift::String v316 = v579;
      swift_bridgeObjectRetain(v579._object);
      SiriSocialConversationDataModels.ButtonModel.init(label:directInvocation:userData:link:separated:)( v314,  v315,  v416._countAndFlagsBits,  v416._object,  v410,  v316._countAndFlagsBits,  v316._object,  v404 & 1);
      (*(void (**)(char *, char *, uint64_t))(v517 + 16))(v519, v521, v516);
      uint64_t v186 = sub_5150(&qword_D7FA0);
      Array.append(_:)(v519, v186);
      (*(void (**)(char *, uint64_t))(v517 + 8))(v521, v516);
      sub_8DD8((uint64_t)v317);
      swift_release();
      swift_bridgeObjectRelease(v373._object);
      swift_bridgeObjectRelease(v422._object);
      swift_bridgeObjectRelease(v430);
    }

    sub_1B82C(v612);
    swift_bridgeObjectRelease(v435);
    uint64_t v308 = v433;
  }

  else
  {
    uint64_t v308 = v443;
  }

  uint64_t v303 = v308;
  uint64_t v187 = sub_56184();
  uint64_t v304 = *(void *)v187;
  uint64_t v305 = *((void *)v187 + 1);
  swift_bridgeObjectRetain(v305);
  uint64_t v306 = v631;
  v631[0] = v304;
  v631[1] = v305;
  Dictionary.subscript.getter(v632);
  sub_8DD8((uint64_t)v306);
  if (v632[3])
  {
    if ((swift_dynamicCast(&v618, v632, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      Swift::String v302 = v618;
    }

    else
    {
      v302._uint64_t countAndFlagsBits = 0LL;
      v302._object = 0LL;
    }

    Swift::String v301 = v302;
  }

  else
  {
    uint64_t v253 = 0LL;
    sub_1D580(v632);
    v301._uint64_t countAndFlagsBits = (uint64_t)v253;
    v301._object = v253;
  }

  Swift::String v630 = v301;
  if (v301._object)
  {
    Swift::String v633 = v630;
  }

  else
  {
    Swift::String v633 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
    sub_8DD8((uint64_t)&v630);
  }

  uint64_t v274 = v633._object;
  Swift::String v629 = v633;
  Swift::String v188 = String.lowercased()();
  uint64_t v279 = &v628;
  Swift::String v628 = v188;
  uint64_t v189 = sub_561D8();
  uint64_t v275 = *(void *)v189;
  uint64_t v276 = *((void *)v189 + 1);
  swift_bridgeObjectRetain(v276);
  int v278 = v627;
  v627[0] = v275;
  v627[1] = v276;
  unint64_t v277 = sub_29FC8();
  unint64_t v190 = sub_5EBFC();
  int v191 = BidirectionalCollection<>.starts<A>(with:)( v278,  &type metadata for String,  &type metadata for String,  v277,  v190);
  uint64_t v192 = v526;
  int v281 = v191;
  sub_8DD8((uint64_t)v278);
  sub_8DD8((uint64_t)v279);
  int v280 = 1;
  BYTE4(v626) = v281 & 1;
  uint64_t v193 = sub_AD514();
  v487(v192, v193, v523);
  uint64_t v284 = 17LL;
  uint64_t v288 = 7LL;
  uint64_t v194 = swift_allocObject(&unk_CE570, 17LL, 7LL);
  uint64_t v285 = v194;
  *(_BYTE *)(v194 + swift_beginAccess(v0 + 16) = v281 & v280;
  unint64_t v299 = (os_log_s *)Logger.logObject.getter(v194);
  int v300 = static os_log_type_t.debug.getter();
  uint64_t v625 = 18LL;
  UnsignedInteger<>.init<A>(_:)(&v626, &v625, &type metadata for UInt32, &type metadata for Int, v489, v490, v492);
  uint32_t v282 = v626;
  uint64_t v195 = swift_allocObject(&unk_CE598, v284, v288);
  uint64_t v196 = v284;
  uint64_t v197 = v288;
  uint64_t v291 = v195;
  *(_BYTE *)(v195 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v198 = swift_allocObject(&unk_CE5C0, v196, v197);
  uint64_t v199 = v288;
  uint64_t v292 = v198;
  *(_BYTE *)(v198 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v287 = 32LL;
  uint64_t v200 = swift_allocObject(&unk_CE5E8, 32LL, v199);
  uint64_t v201 = v287;
  uint64_t v202 = v288;
  uint64_t v283 = v200;
  *(void *)(v200 + swift_beginAccess(v0 + 16) = sub_5A60C;
  *(void *)(v200 + 24) = 0LL;
  uint64_t v203 = swift_allocObject(&unk_CE610, v201, v202);
  uint64_t v204 = v284;
  uint64_t v205 = v288;
  uint64_t v206 = v203;
  uint64_t v207 = v283;
  uint64_t v293 = v206;
  *(void *)(v206 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v206 + 24) = v207;
  uint64_t v208 = swift_allocObject(&unk_CE638, v204, v205);
  uint64_t v209 = v284;
  uint64_t v210 = v288;
  uint64_t v294 = v208;
  *(_BYTE *)(v208 + swift_beginAccess(v0 + 16) = 0;
  uint64_t v211 = swift_allocObject(&unk_CE660, v209, v210);
  uint64_t v212 = v287;
  uint64_t v213 = v288;
  uint64_t v295 = v211;
  *(_BYTE *)(v211 + swift_beginAccess(v0 + 16) = 4;
  uint64_t v214 = swift_allocObject(&unk_CE688, v212, v213);
  uint64_t v215 = v287;
  uint64_t v216 = v288;
  uint64_t v217 = v214;
  uint64_t v218 = v285;
  uint64_t v286 = v217;
  *(void *)(v217 + swift_beginAccess(v0 + 16) = sub_5EC8C;
  *(void *)(v217 + 24) = v218;
  uint64_t v219 = swift_allocObject(&unk_CE6B0, v215, v216);
  uint64_t v220 = v287;
  uint64_t v221 = v288;
  uint64_t v222 = v219;
  uint64_t v223 = v286;
  uint64_t v289 = v222;
  *(void *)(v222 + swift_beginAccess(v0 + 16) = sub_46E38;
  *(void *)(v222 + 24) = v223;
  uint64_t v224 = swift_allocObject(&unk_CE6D8, v220, v221);
  uint64_t v225 = v287;
  uint64_t v226 = v288;
  uint64_t v227 = v224;
  uint64_t v228 = v289;
  uint64_t v290 = v227;
  *(void *)(v227 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v227 + 24) = v228;
  uint64_t v229 = swift_allocObject(&unk_CE700, v225, v226);
  uint64_t v230 = v504;
  uint64_t v231 = v229;
  uint64_t v232 = v290;
  uint64_t v297 = v231;
  *(void *)(v231 + swift_beginAccess(v0 + 16) = sub_46EF0;
  *(void *)(v231 + 24) = v232;
  uint64_t v296 = _allocateUninitializedArray<A>(_:)(6LL, v230);
  uint64_t v298 = v233;
  swift_retain();
  uint64_t v234 = v291;
  uint64_t v235 = v298;
  *uint64_t v298 = sub_884C;
  v235[1] = v234;
  swift_retain();
  uint64_t v236 = v292;
  uint64_t v237 = v298;
  v298[2] = sub_884C;
  v237[3] = v236;
  swift_retain();
  uint64_t v238 = v293;
  unint64_t v239 = v298;
  v298[4] = sub_8900;
  v239[5] = v238;
  swift_retain();
  uint64_t v240 = v294;
  uint64_t v241 = v298;
  v298[6] = sub_884C;
  v241[7] = v240;
  swift_retain();
  uint64_t v242 = v295;
  uint64_t v243 = v298;
  v298[8] = sub_884C;
  v243[9] = v242;
  swift_retain();
  uint64_t v244 = v296;
  uint64_t v245 = v297;
  uint32_t v246 = v298;
  v298[10] = sub_46F38;
  v246[11] = v245;
  sub_6648();
  swift_bridgeObjectRelease(v244);
  if (os_log_type_enabled(v299, (os_log_type_t)v300))
  {
    uint64_t v247 = v303;
    uint64_t v266 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(18LL, &type metadata for UInt8);
    uint64_t v265 = sub_5150(&qword_D6B60);
    uint64_t v267 = sub_74D0(0LL, v265, v265);
    uint64_t v268 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v270 = &v623;
    v623 = v266;
    uint64_t v271 = &v622;
    uint64_t v622 = v267;
    uint64_t v272 = &v621;
    uint64_t v621 = v268;
    unsigned int v269 = 2;
    sub_7528(2LL, &v623);
    sub_7528(v269, v270);
    v619 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v620 = v291;
    sub_753C(&v619, (uint64_t)v270, (uint64_t)v271, (uint64_t)v272);
    uint64_t v273 = v247;
    if (v247)
    {
      __break(1u);
    }

    else
    {
      v619 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v620 = v292;
      sub_753C(&v619, (uint64_t)&v623, (uint64_t)&v622, (uint64_t)&v621);
      uint64_t v264 = 0LL;
      uint64_t v248 = v264;
      v619 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v620 = v293;
      sub_753C(&v619, (uint64_t)&v623, (uint64_t)&v622, (uint64_t)&v621);
      uint64_t v263 = v248;
      v619 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v620 = v294;
      sub_753C(&v619, (uint64_t)&v623, (uint64_t)&v622, (uint64_t)&v621);
      uint64_t v262 = 0LL;
      v619 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v620 = v295;
      sub_753C(&v619, (uint64_t)&v623, (uint64_t)&v622, (uint64_t)&v621);
      uint64_t v261 = 0LL;
      v619 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_46F38;
      uint64_t v620 = v297;
      sub_753C(&v619, (uint64_t)&v623, (uint64_t)&v622, (uint64_t)&v621);
      _os_log_impl( &dword_0,  v299,  (os_log_type_t)v300,  "visualParameters conversationSpace for %s value is %{BOOL}d",  v266,  v282);
      sub_7580(v267, 0LL);
      sub_7580(v268, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  v459(v526, v523);
  uint64_t v260 = &v634;
  uint64_t v254 = v634;
  swift_bridgeObjectRetain(v634);
  uint64_t v256 = 0LL;
  Swift::String v249 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
  uint64_t v255 = v249._countAndFlagsBits;
  SiriSocialConversationDataModels.ButtonStackModel.init(buttons:text:sash:)( v254,  v249._countAndFlagsBits,  v249._object,  0LL);
  uint64_t v257 = type metadata accessor for SiriSocialConversationDataModels(v256);
  uint64_t v259 = v624;
  v624[3] = v257;
  v624[4] = sub_5EEA0();
  uint64_t v258 = sub_1AFD4(v259);
  (*(void (**)(uint64_t *, char *, uint64_t))(v513 + 16))(v258, v515, v512);
  (*(void (**)(uint64_t *, void))(*(void *)(v257 - 8) + 104LL))( v258,  enum case for SiriSocialConversationDataModels.buttonStackView(_:));
  ResponseComponents.conversationModel.setter(v259);
  (*(void (**)(uint64_t, char *, uint64_t))(v536 + 16))(v509, v539, v535);
  (*(void (**)(char *, uint64_t))(v513 + 8))(v515, v512);
  swift_bridgeObjectRelease(v274);
  sub_1B82C(v260);
  swift_bridgeObjectRelease(v488._object);
  return (*(uint64_t (**)(char *, uint64_t))(v536 + 8))(v539, v535);
}

uint64_t sub_5A538()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5A574(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain(*(void *)(a1 + 24));
  swift_endAccess(v4);
  return v3;
}

uint64_t sub_5A5D4()
{
  uint64_t v0 = sub_56130();
  uint64_t v2 = *(void *)v0;
  swift_bridgeObjectRetain(*((void *)v0 + 1));
  return v2;
}

uint64_t sub_5A60C()
{
  uint64_t v0 = sub_561D8();
  uint64_t v2 = *(void *)v0;
  swift_bridgeObjectRetain(*((void *)v0 + 1));
  return v2;
}

uint64_t sub_5A644(char a1)
{
  return a1 & 1;
}

uint64_t sub_5A64C(uint64_t a1)
{
  uint64_t v17 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t v18 = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v14 = a1;
  uint64_t v7 = sub_5150(&qword_D7350);
  unint64_t v1 = sub_1BFB0();
  Collection.first.getter(&v15, v7, v1);
  sub_1B82C(&v14);
  uint64_t v8 = v16;
  if (v16)
  {
    uint64_t v12 = v15;
    uint64_t v13 = v16;
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    Swift::String v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("tellMeAStory", 0xCuLL, 1);
    unint64_t v2 = sub_B880();
    char v4 = StringProtocol.contains<A>(_:)(&v9, &type metadata for String, &type metadata for String, v2);
    sub_8DD8((uint64_t)&v9);
    swift_bridgeObjectRelease(v8);
    char v5 = v4;
  }

  else
  {
    char v5 = 0;
  }

  return v5 & 1;
}

uint64_t sub_5A7A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  v9[52] = v8;
  v9[51] = a7;
  v9[50] = a6;
  v9[49] = a5;
  v9[48] = a4;
  v9[47] = a1;
  v9[53] = *v8;
  v9[35] = v9;
  v9[31] = 0LL;
  void v9[32] = 0LL;
  v9[33] = 0LL;
  v9[34] = 0LL;
  v9[37] = 0LL;
  v9[38] = 0LL;
  v9[39] = 0LL;
  v9[40] = 0LL;
  v9[41] = 0LL;
  uint64_t v10 = type metadata accessor for ResponseComponents(a8);
  v9[54] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[55] = v11;
  v9[56] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  v9[57] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v9[58] = v13;
  v9[59] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v9[31] = a2;
  void v9[32] = a3;
  v9[33] = a4;
  v9[34] = a5;
  v9[37] = a6;
  v9[38] = a7;
  v9[39] = v8;
  return swift_task_switch(sub_5A91C, 0LL);
}

uint64_t sub_5A91C()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[48];
  v0[35] = v0;
  sub_5C17C(v3, v2, v1, v0 + 10);
  uint64_t v17 = v0[10];
  uint64_t v18 = v0[11];
  swift_bridgeObjectRetain(v18);
  sub_5B458(v17, v18, v0 + 2);
  uint64_t v9 = v16[52];
  swift_bridgeObjectRelease(v18);
  swift_retain();
  v16[60] = sub_AD308();
  swift_release();
  uint64_t v14 = v16[12];
  v16[61] = v14;
  swift_bridgeObjectRetain(v14);
  swift_retain();
  sub_454C(v9 + 16, (uint64_t)(v16 + 16));
  swift_release();
  uint64_t v8 = v16[19];
  uint64_t v7 = v16[20];
  sub_8C74(v16 + 16, v8);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v7 + 32))(v8);
  v16[62] = v15;
  swift_retain();
  sub_454C(v9 + 16, (uint64_t)(v16 + 21));
  swift_release();
  uint64_t v11 = v16[24];
  uint64_t v10 = v16[25];
  sub_8C74(v16 + 21, v11);
  (*(void (**)(uint64_t))(v10 + 8))(v11);
  uint64_t v12 = sub_629C();
  uint64_t v13 = v4;
  v16[63] = v4;
  char v5 = (void *)swift_task_alloc(dword_D7944);
  v16[64] = v5;
  *char v5 = v16[35];
  v5[1] = sub_5AC24;
  return sub_2DA14((uint64_t)(v16 + 2), v12, v13, v14, v15, (uint64_t)(v16 + 26), 1);
}

uint64_t sub_5AC24(uint64_t a1)
{
  uint64_t v12 = *(void **)v2;
  uint64_t v8 = (void *)(*(void *)v2 + 16LL);
  uint64_t v9 = (void *)(*(void *)v2 + 128LL);
  uint64_t v10 = (void *)(*(void *)v2 + 168LL);
  uint64_t v11 = (void *)(*(void *)v2 + 208LL);
  uint64_t v4 = *(void *)(*(void *)v2 + 512LL);
  v12[35] = *(void *)v2;
  v12[65] = a1;
  v12[66] = v1;
  swift_task_dealloc(v4);
  if (v1) {
    return swift_task_switch(sub_5B354, 0LL);
  }
  double v6 = (void *)v8[60];
  uint64_t v7 = v8[59];
  swift_bridgeObjectRelease(v8[61]);
  sub_4598(v11);
  sub_4598(v10);

  sub_4598(v9);
  swift_bridgeObjectRelease(v7);
  swift_release();
  return swift_task_switch(sub_5AD48, 0LL);
}

uint64_t sub_5AD48()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[51];
  uint64_t v39 = v2;
  v0[35] = v0;
  v0[40] = v1;
  swift_bridgeObjectRetain(v2);
  v0[41] = v39;
  uint64_t v40 = v0[15];
  swift_bridgeObjectRetain(v40);
  char v41 = Dictionary.isEmpty.getter( v40,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  swift_bridgeObjectRelease(v40);
  if ((v41 & 1) == 0)
  {
    *(void *)(v38 + 28sub_1D580(v0 + 8) = *(void *)(v38 + 120);
    sub_5F2B4((void *)(v38 + 288));
    sub_5F2DC((uint64_t *)(v38 + 288), (uint64_t *)(v38 + 328));
  }

  uint64_t v3 = *(void *)(v38 + 472);
  uint64_t v30 = *(void *)(v38 + 464);
  uint64_t v31 = *(void *)(v38 + 456);
  uint64_t v4 = sub_AD514();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v3, v4, v31);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  *(void *)(v38 + 336) = 2LL;
  unint64_t v32 = sub_7788();
  unint64_t v33 = sub_77F0();
  unint64_t v6 = sub_7858();
  UnsignedInteger<>.init<A>(_:)( (void *)(v38 + 536),  v38 + 336,  &type metadata for UInt32,  &type metadata for Int,  v32,  v33,  v6);
  uint32_t v34 = *(_DWORD *)(v38 + 536);
  uint64_t v7 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v37 = _allocateUninitializedArray<A>(_:)(0LL, v7);
  if (!os_log_type_enabled(v36, v35))
  {
    swift_bridgeObjectRelease(v37);
    goto LABEL_8;
  }

  uint64_t v8 = *(void *)(v38 + 528);
  buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
  uint64_t v24 = sub_5150(&qword_D6B60);
  uint64_t v26 = sub_74D0(0LL, v24, v24);
  uint64_t v27 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
  *(void *)(v38 + 344) = buf;
  *(void *)(v38 + 35sub_4598(v0 + 2) = v26;
  *(void *)(v38 + 360) = v27;
  sub_7528(0LL, (_BYTE **)(v38 + 344));
  sub_7528(0LL, (_BYTE **)(v38 + 344));
  *(void *)(v38 + 36sub_1D580(v0 + 8) = v37;
  uint64_t v28 = (void *)swift_task_alloc(48LL);
  v28[2] = v38 + 344;
  v28[3] = v38 + 352;
  v28[4] = v38 + 360;
  uint64_t v29 = sub_5150(&qword_D6B78);
  unint64_t v9 = sub_8CF4();
  uint64_t result = Sequence.forEach(_:)(sub_8CC8, v28, v29, v9);
  if (!v8)
  {
    swift_task_dealloc(v28);
    _os_log_impl(&dword_0, v36, v35, "Creating RF snippet using visualParameters", buf, v34);
    sub_7580(v26, 0LL);
    sub_7580(v27, 0LL);
    UnsafeMutablePointer.deallocate()();
    swift_bridgeObjectRelease(v37);
LABEL_8:
    id v21 = *(id *)(v38 + 520);
    uint64_t v22 = *(void *)(v38 + 472);
    uint64_t v13 = *(void *)(v38 + 464);
    uint64_t v14 = *(void *)(v38 + 456);
    uint64_t v23 = *(void *)(v38 + 448);
    uint64_t v19 = *(void *)(v38 + 440);
    uint64_t v20 = *(void *)(v38 + 432);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v14);
    unint64_t v16 = sub_3B180();
    uint64_t v17 = _allocateUninitializedArray<A>(_:)(1LL, v16);
    uint64_t v15 = v11;
    id v12 = v21;
    *uint64_t v15 = v21;
    sub_6648();
    uint64_t v18 = *(void *)(v38 + 328);
    swift_bridgeObjectRetain(v18);
    sub_575B8(v17, v18, v23);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v17);
    static PresentationElements.responseFramework(responseComponents:)(v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v20);
    sub_1B82C((void *)(v38 + 328));

    sub_1B21C((void *)(v38 + 16));
    sub_5F258((void *)(v38 + 80));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(*(void *)(v38 + 280) + 8LL))();
  }

  return result;
}

uint64_t sub_5B354()
{
  uint64_t v1 = v0[63];
  id v3 = (id)v0[62];
  uint64_t v4 = v0[61];
  v0[35] = v0;
  swift_bridgeObjectRelease(v1);
  sub_4598(v0 + 26);
  sub_4598(v0 + 21);

  sub_4598(v0 + 16);
  swift_bridgeObjectRelease(v4);
  swift_release();
  sub_1B21C(v0 + 2);
  sub_5F258(v0 + 10);
  uint64_t v5 = v0[56];
  swift_task_dealloc(v0[59]);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0[35] + 8LL))();
}

void *sub_5B458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v19 = v3;
  swift_bridgeObjectRetain(a2);
  sub_5CD44(a1, a2, v22);
  uint64_t result = sub_5F30C(v22, &v23);
  if (v24)
  {
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    uint64_t v7 = v26;
    uint64_t v8 = v27;
    uint64_t v9 = v28;
    uint64_t v10 = v29;
    uint64_t v11 = v30;
    __b[0] = v23;
    __b[1] = v24;
    __b[2] = v25;
    __b[3] = v26;
    Swift::String __b[4] = v27;
    uint64_t __b[5] = v28;
    __b[6] = v29;
    __b[7] = v30;
    *a3 = v23;
    a3[1] = v5;
    a3[2] = v6;
    a3[3] = v7;
    a3[4] = v8;
    a3[5] = v9;
    a3[6] = v10;
    a3[7] = v11;
  }

  else
  {
    swift_bridgeObjectRetain(a2);
    unint64_t v12 = sub_5F374();
    uint64_t v14 = swift_allocError(&unk_CED30, v12, 0LL, 0LL);
    *uint64_t v13 = a1;
    v13[1] = a2;
    return (void *)swift_willThrow(v14);
  }

  return result;
}

uint64_t sub_5B5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[16] = v6;
  v7[15] = a6;
  v7[14] = a5;
  v7[13] = a4;
  v7[12] = a3;
  v7[11] = a2;
  v7[10] = a1;
  v7[17] = *v6;
  void v7[6] = v7;
  v7[2] = 0LL;
  v7[3] = 0LL;
  v7[4] = 0LL;
  v7[5] = 0LL;
  v7[7] = 0LL;
  v7[8] = 0LL;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  v7[18] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[19] = v9;
  v7[20] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  v7[5] = a5;
  v7[7] = a6;
  v7[8] = v6;
  return swift_task_switch(sub_5B6E4, 0LL);
}

uint64_t sub_5B6E4()
{
  uint64_t v1 = v0[20];
  uint64_t v19 = v0[19];
  uint64_t v20 = v0[18];
  uint64_t v21 = v0[17];
  v0[6] = v0;
  uint64_t v2 = sub_AD514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v1, v2, v20);
  uint64_t v25 = swift_allocObject(&unk_CE958, 24LL, 7LL);
  *(void *)(v25 + swift_beginAccess(v0 + 16) = v21;
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  v0[9] = 22LL;
  unint64_t v22 = sub_7788();
  unint64_t v23 = sub_77F0();
  unint64_t v3 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(v0 + 24, v0 + 9, &type metadata for UInt32, &type metadata for Int, v22, v23, v3);
  uint32_t size = *((_DWORD *)v0 + 48);
  uint64_t v29 = swift_allocObject(&unk_CE980, 17LL, 7LL);
  *(_BYTE *)(v29 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v30 = swift_allocObject(&unk_CE9A8, 17LL, 7LL);
  *(_BYTE *)(v30 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v26 = swift_allocObject(&unk_CE9D0, 32LL, 7LL);
  *(void *)(v26 + swift_beginAccess(v0 + 16) = sub_1CD2C;
  *(void *)(v26 + 24) = v25;
  uint64_t v27 = swift_allocObject(&unk_CE9F8, 32LL, 7LL);
  *(void *)(v27 + swift_beginAccess(v0 + 16) = sub_1CEFC;
  *(void *)(v27 + 24) = v26;
  uint64_t v31 = swift_allocObject(&unk_CEA20, 32LL, 7LL);
  *(void *)(v31 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v31 + 24) = v27;
  uint64_t v32 = swift_allocObject(&unk_CEA48, 17LL, 7LL);
  *(_BYTE *)(v32 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v33 = swift_allocObject(&unk_CEA70, 17LL, 7LL);
  *(_BYTE *)(v33 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v28 = swift_allocObject(&unk_CEA98, 32LL, 7LL);
  *(void *)(v28 + swift_beginAccess(v0 + 16) = sub_5C150;
  *(void *)(v28 + 24) = 0LL;
  uint64_t v35 = swift_allocObject(&unk_CEAC0, 32LL, 7LL);
  *(void *)(v35 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v35 + 24) = v28;
  uint64_t v37 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v34 = _allocateUninitializedArray<A>(_:)(6LL, v37);
  uint64_t v36 = v4;
  swift_retain();
  void *v36 = sub_884C;
  v36[1] = v29;
  swift_retain();
  void v36[2] = sub_884C;
  v36[3] = v30;
  swift_retain();
  void v36[4] = sub_8900;
  v36[5] = v31;
  swift_retain();
  v36[6] = sub_884C;
  v36[7] = v32;
  swift_retain();
  v36[8] = sub_884C;
  v36[9] = v33;
  swift_retain();
  v36[10] = sub_8900;
  v36[11] = v35;
  sub_6648();
  swift_bridgeObjectRelease(v34);
  if (os_log_type_enabled(v38, v39))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v14 = sub_5150(&qword_D6B60);
    uint64_t v16 = sub_74D0(0LL, v14, v14);
    uint64_t v17 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v40 = buf;
    uint64_t v41 = v16;
    uint64_t v42 = v17;
    sub_7528(2LL, &v40);
    sub_7528(2LL, &v40);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v44 = v29;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v44 = v30;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v44 = v31;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v44 = v32;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v44 = v33;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
    uint64_t v44 = v35;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    _os_log_impl(&dword_0, v38, v39, "%s.%s", buf, size);
    sub_7580(v16, 0LL);
    sub_7580(v17, 2LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v11 = v18[20];
  uint64_t v10 = v18[19];
  uint64_t v12 = v18[18];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  uint64_t v5 = sub_5150(&qword_D7370);
  uint64_t v6 = _allocateUninitializedArray<A>(_:)(0LL, v5);
  uint64_t v13 = Dictionary.init(dictionaryLiteral:)( v6,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  v18[21] = v13;
  uint64_t v7 = (void *)swift_task_alloc(dword_D7FB4);
  v18[22] = v7;
  *uint64_t v7 = v18[6];
  v7[1] = sub_5BFF0;
  return sub_5A7A4(v18[10], v18[11], v18[12], v18[13], v18[14], v18[15], v13, v8);
}

void *sub_5BFF0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 176LL);
  v2[6] = *(void *)v1;
  v2 += 6;
  uint64_t v6 = v2 - 4;
  uint64_t v7 = v2;
  v2[17] = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return (void *)swift_task_switch(sub_5C0E0, 0LL);
  }
  uint64_t v5 = v6[18];
  swift_bridgeObjectRelease(v6[19]);
  swift_task_dealloc(v5);
  return (*(void *(**)(void *__return_ptr))(*v7 + 8LL))(v7);
}

uint64_t sub_5C0E0()
{
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[20];
  v0[6] = v0;
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0[6] + 8LL))();
}

uint64_t sub_5C150()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "makePresentationElements(responseId:patternId:patternParameters:)",  0x41uLL,  1)._countAndFlagsBits;
}

void *sub_5C17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v69 = a4;
  uint64_t v93 = a1;
  uint64_t v94 = a2;
  uint64_t v75 = a3;
  uint64_t v123 = 0LL;
  uint64_t v124 = 0LL;
  uint64_t v122 = 0LL;
  uint64_t v121 = 0LL;
  v101[8] = 0LL;
  memset(v101, 0, 0x30uLL);
  uint64_t v100 = 0LL;
  uint64_t v70 = 0LL;
  uint64_t v71 = type metadata accessor for Logger(0LL);
  uint64_t v72 = *(void *)(v71 - 8);
  unint64_t v73 = (*(void *)(v72 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v74 = (char *)v27 - v73;
  uint64_t v76 = type metadata accessor for Locale(v6);
  uint64_t v77 = *(void *)(v76 - 8);
  unint64_t v78 = (*(void *)(v77 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v96 = (uint64_t)v27 - v78;
  uint64_t v123 = v8;
  uint64_t v124 = v9;
  uint64_t v122 = v10;
  uint64_t v121 = v4;
  uint64_t v92 = *(void *)(v4 + 72);
  swift_retain();
  swift_bridgeObjectRetain(v94);
  swift_retain();
  uint64_t v79 = v112;
  sub_454C(v4 + 16, (uint64_t)v112);
  swift_release();
  uint64_t v81 = v113;
  uint64_t v80 = v114;
  sub_8C74(v79, v113);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t))(v80 + 32))(v81);
  uint64_t v12 = v88;
  uint64_t v95 = v11;
  swift_retain();
  uint64_t v82 = v109;
  sub_454C(v12 + 16, (uint64_t)v109);
  swift_release();
  uint64_t v84 = v110;
  uint64_t v83 = v111;
  sub_8C74(v82, v110);
  uint64_t v13 = *(void (**)(uint64_t))(v83 + 8);
  unint64_t v85 = v106;
  v13(v84);
  uint64_t v87 = v107;
  uint64_t v86 = v108;
  sub_8C74(v85, v107);
  dispatch thunk of DeviceState.siriLocale.getter(v87, v86);
  uint64_t v14 = v88;
  swift_retain();
  unint64_t v89 = v103;
  sub_454C(v14 + 16, (uint64_t)v103);
  swift_release();
  uint64_t v91 = v104;
  uint64_t v90 = v105;
  sub_8C74(v89, v104);
  uint64_t v15 = *(void (**)(uint64_t))(v90 + 40);
  uint64_t v97 = v102;
  v15(v91);
  sub_4DA40(v93, v94, v95, v96, v97, v125, v27[0]);
  uint64_t v98 = 0LL;
  uint64_t v99 = 0LL;
  sub_4598(v102);
  sub_4598(v103);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v96, v76);
  sub_4598(v106);
  sub_4598(v109);

  sub_4598(v112);
  swift_bridgeObjectRelease(v94);
  swift_release();
  sub_41E30(v125, &v115);
  uint64_t v68 = v98;
  uint64_t v61 = v98;
  uint64_t v62 = v115;
  uint64_t v67 = v116;
  uint64_t v63 = v117;
  uint64_t v64 = v118;
  uint64_t v65 = v119;
  uint64_t v66 = v120;
  sub_5F714(v115, v116, v117, v118, v119, v120);
  if (!v67)
  {
    swift_bridgeObjectRetain(v94);
    swift_bridgeObjectRetain(v75);
    uint64_t v18 = sub_5150(&qword_D7370);
    uint64_t v28 = 0LL;
    uint64_t v19 = _allocateUninitializedArray<A>(_:)(0LL, v18);
    uint64_t v20 = Dictionary.init(dictionaryLiteral:)( v19,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    sub_379C8(v93, v94, v75, v28, v28, v20, v127);
    uint64_t v29 = v127[0];
    uint64_t v30 = v127[1];
    uint64_t v31 = v127[2];
    uint64_t v32 = v127[3];
    uint64_t v33 = v127[4];
    uint64_t v34 = v127[5];
    uint64_t result = sub_5F770(&v115);
    uint64_t v42 = v29;
    uint64_t v43 = v30;
    uint64_t v44 = v31;
    uint64_t v45 = v32;
    uint64_t v46 = v33;
    uint64_t v47 = v34;
    goto LABEL_5;
  }

  uint64_t v55 = v62;
  uint64_t v56 = v67;
  uint64_t v57 = v63;
  uint64_t v58 = v64;
  uint64_t v59 = v65;
  uint64_t v60 = v66;
  uint64_t v16 = v61;
  uint64_t v48 = v66;
  uint64_t v49 = v65;
  uint64_t v50 = v64;
  uint64_t v53 = v63;
  uint64_t v51 = v67;
  uint64_t v52 = v62;
  v101[0] = v62;
  v101[1] = v67;
  v101[2] = v63;
  v101[3] = v64;
  v101[4] = v65;
  v101[5] = v66;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRetain(v53);
  uint64_t result = (void *)Dictionary.merging(_:uniquingKeysWith:)( v53,  sub_5CCFC,  0LL,  v75,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v54 = (uint64_t)result;
  if (!v16)
  {
    uint64_t v35 = v54;
    uint64_t v100 = v54;
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v49);
    swift_bridgeObjectRetain(v48);
    sub_379C8(v52, v51, v35, v50, v49, v48, v126);
    uint64_t v36 = v126[0];
    uint64_t v37 = v126[1];
    uint64_t v38 = v126[2];
    uint64_t v39 = v126[3];
    uint64_t v40 = v126[4];
    uint64_t v41 = v126[5];
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v48);
    uint64_t result = sub_5F770(&v115);
    uint64_t v42 = v36;
    uint64_t v43 = v37;
    uint64_t v44 = v38;
    uint64_t v45 = v39;
    uint64_t v46 = v40;
    uint64_t v47 = v41;
LABEL_5:
    uint64_t v21 = v69;
    uint64_t v22 = v43;
    uint64_t v23 = v44;
    uint64_t v24 = v45;
    uint64_t v25 = v46;
    uint64_t v26 = v47;
    void *v69 = v42;
    v21[1] = v22;
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = v25;
    v21[5] = v26;
    return result;
  }

  __break(1u);
  return result;
}

uint64_t sub_5CCFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_9C90(a1, a2);
}

void *sub_5CD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v95 = a1;
  uint64_t v94 = a2;
  memset(__b, 0, sizeof(__b));
  uint64_t v117 = 0LL;
  uint64_t v118 = 0LL;
  uint64_t v113 = 0LL;
  uint64_t v93 = 0LL;
  uint64_t v96 = type metadata accessor for Logger(0LL);
  uint64_t v97 = *(void *)(v96 - 8);
  unint64_t v98 = (*(void *)(v97 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v99 = (char *)v46 - v98;
  uint64_t v117 = v4;
  uint64_t v118 = v5;
  uint64_t v115 = v4;
  uint64_t v116 = v5;
  Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("#", 1uLL, 1);
  uint64_t v100 = &v114;
  Swift::String v114 = v6;
  unint64_t v7 = sub_B880();
  uint64_t v101 = StringProtocol.components<A>(separatedBy:)(v100, &type metadata for String, &type metadata for String, v7);
  sub_8DD8((uint64_t)v100);
  uint64_t v113 = v101;
  if (specialized Array.count.getter() == 2)
  {
    uint64_t v104 = specialized Array.subscript.getter(0LL, v101);
    uint64_t v105 = v8;
    uint64_t v72 = v104;
    unint64_t v73 = v8;
    uint64_t v102 = specialized Array.subscript.getter(1LL, v101);
    uint64_t v103 = v9;
    uint64_t v74 = v120;
    sub_2A7A4(v72, v73, v102, v9, v120);
    uint64_t v76 = v120[0];
    uint64_t v77 = v120[1];
    uint64_t v78 = v120[2];
    uint64_t v79 = v120[3];
    uint64_t v80 = v120[4];
    uint64_t v81 = v120[5];
    uint64_t v82 = v120[6];
    uint64_t v83 = v120[7];
    sub_1B508(v74);
    uint64_t v75 = __b;
    memcpy(__b, v74, sizeof(__b));
    swift_bridgeObjectRelease(v101);
    swift_bridgeObjectRelease(v94);
    uint64_t result = sub_37AE8(v75);
    uint64_t v84 = v76;
    uint64_t v85 = v77;
    uint64_t v86 = v78;
    uint64_t v87 = v79;
    uint64_t v88 = v80;
    uint64_t v89 = v81;
    uint64_t v90 = v82;
    uint64_t v91 = v83;
  }

  else
  {
    uint64_t v11 = v99;
    uint64_t v12 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v11, v12, v96);
    swift_bridgeObjectRetain(v94);
    uint64_t v60 = 32LL;
    uint64_t v61 = 7LL;
    uint64_t v13 = swift_allocObject(&unk_CEBD8, 32LL, 7LL);
    uint64_t v14 = v94;
    uint64_t v62 = v13;
    *(void *)(v13 + swift_beginAccess(v0 + 16) = v95;
    *(void *)(v13 + 24) = v14;
    uint64_t v70 = (os_log_s *)Logger.logObject.getter(v13);
    int v71 = static os_log_type_t.error.getter();
    uint64_t v57 = &v111;
    uint64_t v111 = 12LL;
    unint64_t v55 = sub_7788();
    unint64_t v56 = sub_77F0();
    unint64_t v15 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v112, v57, &type metadata for UInt32, &type metadata for Int, v55, v56, v15);
    uint32_t v58 = v112;
    uint64_t v59 = 17LL;
    uint64_t v16 = swift_allocObject(&unk_CEC00, 17LL, v61);
    uint64_t v17 = v59;
    uint64_t v18 = v61;
    uint64_t v64 = v16;
    *(_BYTE *)(v16 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v19 = swift_allocObject(&unk_CEC28, v17, v18);
    uint64_t v20 = v60;
    uint64_t v21 = v61;
    uint64_t v65 = v19;
    *(_BYTE *)(v19 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v22 = swift_allocObject(&unk_CEC50, v20, v21);
    uint64_t v23 = v60;
    uint64_t v24 = v61;
    uint64_t v25 = v22;
    uint64_t v26 = v62;
    uint64_t v63 = v25;
    *(void *)(v25 + swift_beginAccess(v0 + 16) = sub_1B890;
    *(void *)(v25 + 24) = v26;
    uint64_t v27 = swift_allocObject(&unk_CEC78, v23, v24);
    uint64_t v28 = v63;
    uint64_t v67 = v27;
    *(void *)(v27 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v27 + 24) = v28;
    uint64_t v69 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v66 = _allocateUninitializedArray<A>(_:)(3LL, v69);
    uint64_t v68 = v29;
    swift_retain();
    uint64_t v30 = v64;
    uint64_t v31 = v68;
    void *v68 = sub_884C;
    v31[1] = v30;
    swift_retain();
    uint64_t v32 = v65;
    uint64_t v33 = v68;
    void v68[2] = sub_884C;
    v33[3] = v32;
    swift_retain();
    uint64_t v34 = v66;
    uint64_t v35 = v67;
    uint64_t v36 = v68;
    v68[4] = sub_8900;
    v36[5] = v35;
    sub_6648();
    swift_bridgeObjectRelease(v34);
    if (os_log_type_enabled(v70, (os_log_type_t)v71))
    {
      uint64_t v37 = v93;
      uint64_t v48 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v47 = sub_5150(&qword_D6B60);
      uint64_t v49 = sub_74D0(0LL, v47, v47);
      uint64_t v50 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v51 = &v110;
      uint64_t v110 = v48;
      uint64_t v52 = &v109;
      uint64_t v109 = v49;
      uint64_t v53 = &v108;
      uint64_t v108 = v50;
      sub_7528(2LL, &v110);
      sub_7528(1LL, v51);
      uint64_t v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v107 = v64;
      sub_753C(&v106, (uint64_t)v51, (uint64_t)v52, (uint64_t)v53);
      uint64_t v54 = v37;
      if (v37)
      {
        __break(1u);
      }

      else
      {
        uint64_t v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v107 = v65;
        sub_753C(&v106, (uint64_t)&v110, (uint64_t)&v109, (uint64_t)&v108);
        v46[1] = 0LL;
        uint64_t v106 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v107 = v67;
        sub_753C(&v106, (uint64_t)&v110, (uint64_t)&v109, (uint64_t)&v108);
        _os_log_impl( &dword_0,  v70,  (os_log_type_t)v71,  "Provided identifier '%s' is not separated by the '#' character",  v48,  v58);
        sub_7580(v49, 0LL);
        sub_7580(v50, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
    }

    v46[0] = 0LL;

    (*(void (**)(char *, uint64_t))(v97 + 8))(v99, v96);
    swift_bridgeObjectRelease(v101);
    uint64_t result = (void *)swift_bridgeObjectRelease(v94);
    uint64_t v84 = v46[0];
    uint64_t v85 = v46[0];
    uint64_t v86 = v46[0];
    uint64_t v87 = v46[0];
    uint64_t v88 = v46[0];
    uint64_t v89 = v46[0];
    uint64_t v90 = v46[0];
    uint64_t v91 = v46[0];
  }

  uint64_t v38 = v92;
  uint64_t v39 = v85;
  uint64_t v40 = v86;
  uint64_t v41 = v87;
  uint64_t v42 = v88;
  uint64_t v43 = v89;
  uint64_t v44 = v90;
  uint64_t v45 = v91;
  *uint64_t v92 = v84;
  v38[1] = v39;
  v38[2] = v40;
  v38[3] = v41;
  v38[4] = v42;
  v38[5] = v43;
  v38[6] = v44;
  v38[7] = v45;
  return result;
}

uint64_t sub_5D4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v14 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)(22LL, 1LL);
  uint64_t v15 = v2;
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Invalid identifier: '", 0x15uLL, 1);
  object = v3._object;
  DefaultStringInterpolation.appendLiteral(_:)(v3);
  swift_bridgeObjectRelease(object);
  v13[0] = a1;
  v13[1] = a2;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v13,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  Swift::String v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("'", 1uLL, 1);
  uint64_t v8 = v4._object;
  DefaultStringInterpolation.appendLiteral(_:)(v4);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = v14;
  uint64_t v9 = v15;
  swift_bridgeObjectRetain(v15);
  sub_8DD8((uint64_t)&v14);
  uint64_t v12 = String.init(stringInterpolation:)(v10, v9);
  swift_bridgeObjectRelease(a2);
  return v12;
}

uint64_t sub_5D628()
{
  return sub_5D670(v1);
}

uint64_t sub_5D670(double a1)
{
  if (!"SocialConversationFlowDelegatePlugin.SocialPresentationElementProvider")
  {
    char v2 = 2;
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StaticString.swift",  24LL,  v2,  136LL,  0);
    __break(1u);
  }

  uint64_t result = sub_5DD90( (uint64_t)"SocialConversationFlowDelegatePlugin.SocialPresentationElementProvider",  70LL,  (unint64_t)"init(sharedObjectProvider:)",  27LL,  2,  (unint64_t)"SocialConversationFlowDelegatePlugin/Social+Authored.swift",  58LL,  2,  v3,  a1,  0x55uLL,  7uLL);
  __break(1u);
  return result;
}

uint64_t sub_5D788()
{
  return sub_5D4B0(*v0, v0[1]);
}

uint64_t sub_5D7A4()
{
  return swift_release(*(void *)(v0 + 72));
}

uint64_t sub_5D7D0()
{
  uint64_t v1 = sub_AD1DC();
  swift_release();
  return v1;
}

uint64_t sub_5D808()
{
  uint64_t v0 = sub_5D7D0();
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t sub_5D844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + swift_beginAccess(v0 + 16) = v7;
  uint64_t v8 = (void *)swift_task_alloc(dword_D7FB4);
  *(void *)(v7 + 24) = v8;
  *uint64_t v8 = *(void *)(v7 + 16);
  v8[1] = sub_5D8EC;
  return sub_5A7A4(a1, a2, a3, a4, a5, a6, a7, v9);
}

void *sub_5D8EC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 24);
  *(void *)(v1 + swift_beginAccess(v0 + 16) = *v0;
  Swift::String v4 = (void *)(v1 + 16);
  swift_task_dealloc(v2);
  return (*(void *(**)(void *__return_ptr))(*v4 + 8LL))(v4);
}

uint64_t sub_5D97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + swift_beginAccess(v0 + 16) = v6;
  uint64_t v7 = (void *)swift_task_alloc(dword_D7FC4);
  *(void *)(v6 + 24) = v7;
  *uint64_t v7 = *(void *)(v6 + 16);
  v7[1] = sub_5D8EC;
  return sub_5B5C0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_5DA1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_5DA4C(uint64_t (*a1)(uint64_t *, uint64_t), uint64_t a2, unsigned int a3)
{
  if (a3 < 0x80uLL)
  {
    if (a3 > 0xFF) {
      goto LABEL_12;
    }
    unsigned int v6 = (a3 + 1);
  }

  else
  {
    int v8 = (a3 & 0x3F) << 8;
    if (a3 >> 6 < 0x20uLL)
    {
      unsigned int v6 = (v8 | (a3 >> 6)) + 33217;
    }

    else
    {
      int v7 = (v8 | (a3 >> 6) & 0x3F) << 8;
      if (a3 >> 12 < 0x10uLL) {
        unsigned int v6 = (v7 | (a3 >> 12)) + 8487393;
      }
      else {
        unsigned int v6 = ((a3 >> 18) | ((v7 | (a3 >> 12) & 0x3F) << 8)) - 2122219023;
      }
    }
  }

  uint64_t v5 = 4 - ((uint64_t)__clz(v6) >> 3);
  uint64_t v9 = (v6 - 0x101010101010101LL) & ((1LL << ((8 * v5) & 0x3F)) - 1);
  if (v5 >= 0) {
    return a1(&v9, v5);
  }
  _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeBufferPointer with negative count",  39LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  2,  1343LL,  0);
  __break(1u);
LABEL_12:
  LOBYTE(v4) = 2;
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  v4,  3455LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_5DD90@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, unint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, unint64_t a11, unint64_t a12)
{
  uint64_t v20 = a9;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  unint64_t v23 = a3;
  uint64_t v24 = a4;
  unint64_t v25 = a6;
  uint64_t v26 = a7;
  int v27 = a8;
  unint64_t v28 = a11;
  unint64_t v29 = a12;
  uint64_t v30 = "Fatal error";
  uint64_t v31 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v32 = "Swift/StaticString.swift";
  uint64_t v33 = "Not enough bits to represent the passed value";
  uint64_t v34 = "Swift/Integers.swift";
  uint64_t v35 = "UnsafeBufferPointer with negative count";
  uint64_t v36 = "Swift/UnsafeBufferPointer.swift";
  uint64_t v37 = 0LL;
  unint64_t v39 = a6;
  uint64_t v40 = a7;
  char v41 = a8;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  unint64_t v44 = a11;
  unint64_t v45 = a12;
  if ((a5 & 1) != 0)
  {
    if (v23 <= 0xFFFFFFFF)
    {
      unsigned int v19 = v23;
      if ((v23 < 0xD800 || v19 > 0xDFFF) && v19 <= 0x10FFFF)
      {
        uint64_t v18 = &v17;
        __chkstk_darwin(a10);
        uint64_t v15 = sub_5F918;
        uint64_t v16 = &v38;
        sub_5DA4C((uint64_t (*)(uint64_t *, uint64_t))sub_5F958, (uint64_t)&v14, v12);
        return (uint64_t)v18;
      }

      LOBYTE(vsub_2937C(v0 + 14) = 2;
      _assertionFailure(_:_:file:line:flags:)(v30, 11LL, 2LL, v31, 57LL, 2LL, v32, 24LL, v14, 148LL, 0);
      __break(1u);
    }

    LOBYTE(vsub_2937C(v0 + 14) = 2;
    _assertionFailure(_:_:file:line:flags:)(v30, 11LL, 2LL, v33, 45LL, 2LL, v34, 20LL, v14, 3455LL, 0);
    __break(1u);
  }

  if (v23) {
    uint64_t v46 = v23;
  }
  else {
    uint64_t v46 = 0LL;
  }
  uint64_t v17 = v46;
  if (!v46)
  {
    LOBYTE(vsub_2937C(v0 + 14) = 2;
    _assertionFailure(_:_:file:line:flags:)(v30, 11LL, 2LL, v31, 57LL, 2LL, v32, 24LL, v14, 136LL, 0);
    __break(1u);
  }

  if (v24 >= 0) {
    return sub_5E154(v17, v24, v25, v26, v27, v21, v22, v28, v20, a10, v29);
  }
  LOBYTE(vsub_2937C(v0 + 14) = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)(v30, 11LL, 2LL, v35, 39LL, 2LL, v36, 31LL, v14, 1343LL, 0);
  __break(1u);
  return result;
}

uint64_t sub_5E154@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, unint64_t a11)
{
  uint64_t v20 = a9;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  unint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  unint64_t v27 = a8;
  unint64_t v28 = a11;
  unint64_t v29 = "Fatal error";
  uint64_t v30 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v31 = "Swift/StaticString.swift";
  uint64_t v32 = "Not enough bits to represent the passed value";
  uint64_t v33 = "Swift/Integers.swift";
  uint64_t v34 = "UnsafeBufferPointer with negative count";
  uint64_t v35 = "Swift/UnsafeBufferPointer.swift";
  uint64_t v36 = 0LL;
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  unint64_t v42 = a8;
  unint64_t v43 = a11;
  if ((a5 & 1) != 0)
  {
    if (v23 <= 0xFFFFFFFF)
    {
      unsigned int v19 = v23;
      if ((v23 < 0xD800 || v19 > 0xDFFF) && v19 <= 0x10FFFF)
      {
        uint64_t v18 = &v16;
        __chkstk_darwin(a10);
        int v14 = sub_5F980;
        uint64_t v15 = &v37;
        sub_5DA4C((uint64_t (*)(uint64_t *, uint64_t))sub_5F958, (uint64_t)&v13, v11);
        return (uint64_t)v18;
      }

      LOBYTE(vsub_1D580(v0 + 13) = 2;
      _assertionFailure(_:_:file:line:flags:)(v29, 11LL, 2LL, v30, 57LL, 2LL, v31, 24LL, v13, 148LL, 0);
      __break(1u);
    }

    LOBYTE(vsub_1D580(v0 + 13) = 2;
    _assertionFailure(_:_:file:line:flags:)(v29, 11LL, 2LL, v32, 45LL, 2LL, v33, 20LL, v13, 3455LL, 0);
    __break(1u);
  }

  if (v23) {
    uint64_t v44 = v23;
  }
  else {
    uint64_t v44 = 0LL;
  }
  uint64_t v17 = v44;
  if (!v44)
  {
    LOBYTE(vsub_1D580(v0 + 13) = 2;
    _assertionFailure(_:_:file:line:flags:)(v29, 11LL, 2LL, v30, 57LL, 2LL, v31, 24LL, v13, 136LL, 0);
    __break(1u);
  }

  if (v24 >= 0) {
    return sub_5E4E8(v17, v24, v25, v26, v21, v22, v27, v28);
  }
  LOBYTE(vsub_1D580(v0 + 13) = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)(v29, 11LL, 2LL, v34, 39LL, 2LL, v35, 31LL, v13, 1343LL, 0);
  __break(1u);
  return result;
}

uint64_t sub_5E4E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  unint64_t v26 = a7;
  unint64_t v27 = a8;
  unint64_t v28 = "Fatal error";
  unint64_t v29 = "Not enough bits to represent the passed value";
  uint64_t v30 = "Swift/Integers.swift";
  uint64_t v31 = "Not enough bits to represent a signed value";
  uint64_t v32 = "Unexpectedly found nil while unwrapping an Optional value";
  uint64_t v33 = "Swift/AssertCommon.swift";
  if (a3)
  {
    uint64_t v19 = v22;
  }

  else
  {
    LOBYTE(vsub_1B82C(v0 + 9) = 2;
    _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v32, 57LL, 2LL, v33, 24LL, v9, 230LL, 0);
    __break(1u);
  }

  uint64_t v18 = v19;
  if (v23 >= (uint64_t)0xFFFFFFFF80000000LL)
  {
    if (v23 <= 0x7FFFFFFF)
    {
      unsigned int v17 = v23;
      if (v24)
      {
        uint64_t v16 = v24;
      }

      else
      {
        LOBYTE(vsub_1B82C(v0 + 9) = 2;
        _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v32, 57LL, 2LL, v33, 24LL, v9, 231LL, 0);
        __break(1u);
      }

      uint64_t v15 = v16;
      if (v25 >= (uint64_t)0xFFFFFFFF80000000LL)
      {
        if (v25 <= 0x7FFFFFFF)
        {
          unsigned int v14 = v25;
          if (v20)
          {
            uint64_t v13 = v20;
          }

          else
          {
            LOBYTE(vsub_1B82C(v0 + 9) = 2;
            _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v32, 57LL, 2LL, v33, 24LL, v9, 232LL, 0);
            __break(1u);
          }

          uint64_t v12 = v13;
          if (v21 >= (uint64_t)0xFFFFFFFF80000000LL)
          {
            if (v21 <= 0x7FFFFFFF)
            {
              unsigned int v11 = v21;
              if (v26 <= 0xFFFFFFFF)
              {
                unsigned int v10 = v26;
                if (v27 <= 0xFFFFFFFF) {
                  return _swift_stdlib_reportUnimplementedInitializerInFile(v18, v17, v15, v14, v12, v11, v10, v27, 0);
                }
                LOBYTE(vsub_1B82C(v0 + 9) = 2;
                _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v29, 45LL, 2LL, v30, 20LL, v9, 3455LL, 0);
                __break(1u);
              }

              LOBYTE(vsub_1B82C(v0 + 9) = 2;
              _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v29, 45LL, 2LL, v30, 20LL, v9, 3455LL, 0);
              __break(1u);
            }

            LOBYTE(vsub_1B82C(v0 + 9) = 2;
            _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v29, 45LL, 2LL, v30, 20LL, v9, 3687LL, 0);
            __break(1u);
          }

          LOBYTE(vsub_1B82C(v0 + 9) = 2;
          _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v31, 43LL, 2LL, v30, 20LL, v9, 3681LL, 0);
          __break(1u);
        }

        LOBYTE(vsub_1B82C(v0 + 9) = 2;
        _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v29, 45LL, 2LL, v30, 20LL, v9, 3687LL, 0);
        __break(1u);
      }

      LOBYTE(vsub_1B82C(v0 + 9) = 2;
      _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v31, 43LL, 2LL, v30, 20LL, v9, 3681LL, 0);
      __break(1u);
    }

    LOBYTE(vsub_1B82C(v0 + 9) = 2;
    _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v29, 45LL, 2LL, v30, 20LL, v9, 3687LL, 0);
    __break(1u);
  }

  LOBYTE(vsub_1B82C(v0 + 9) = 2;
  uint64_t result = _assertionFailure(_:_:file:line:flags:)(v28, 11LL, 2LL, v31, 43LL, 2LL, v30, 20LL, v9, 3681LL, 0);
  __break(1u);
  return result;
}

uint64_t sub_5EA30()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5EA58()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5EA80()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EABC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EAF8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EB34()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5EB5C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5EB84()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EBC0()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_5EBFC()
{
  uint64_t v2 = qword_D7F78;
  if (!qword_D7F78)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F78);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_5EC64()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5EC8C()
{
  return sub_5A644(*(_BYTE *)(v0 + 16) & 1);
}

uint64_t sub_5EC98()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5ECC0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5ECE8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5ED24()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5ED60()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5ED88()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5EDB0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EDEC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EE28()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EE64()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_5EEA0()
{
  uint64_t v3 = qword_D7F80;
  if (!qword_D7F80)
  {
    uint64_t v0 = type metadata accessor for SiriSocialConversationDataModels(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for SiriSocialConversationDataModels, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F80);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_5EF10()
{
  uint64_t v3 = qword_D7F88;
  if (!qword_D7F88)
  {
    uint64_t v0 = sub_8D64(&qword_D7E20);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7F88);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_5EF80()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5EFBC()
{
  return sub_5A574(v0);
}

uint64_t sub_5EFC4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F000()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F028()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F050()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F08C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F0C8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F0F0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F118()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F154()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F190()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F1B8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F1E0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F21C()
{
  return swift_deallocObject(v2, 32LL);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_5F258( void *a1)
{
  uint64_t v1 = a1[2];
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_5F2B4( void *a1)
{
}

uint64_t *sub_5F2DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  *a2 = v2;
  swift_bridgeObjectRelease(v3);
  return a2;
}

void *sub_5F30C(const void *a1, void *a2)
{
  return a2;
}

unint64_t sub_5F374()
{
  uint64_t v2 = qword_D7FB8;
  if (!qword_D7FB8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B767C, &unk_CED30);
    atomic_store(WitnessTable, (unint64_t *)&qword_D7FB8);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_5F3E0()
{
  return swift_deallocObject(v0, 24LL);
}

uint64_t sub_5F408()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F430()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F458()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F494()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F4D0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F50C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F534()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F55C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F598()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F5D4()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_5F610()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F638()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F660()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F69C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F6D8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a5);
    return swift_bridgeObjectRetain(a6);
  }

  return result;
}

void *sub_5F770(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[2]);
    swift_bridgeObjectRelease(a1[4]);
    swift_bridgeObjectRelease(a1[5]);
  }

  return a1;
}

uint64_t sub_5F7D8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F814()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F83C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5F864()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5F8A0()
{
  return swift_deallocObject(v2, 32LL);
}

void *type metadata accessor for VisualParameterKeys()
{
  return &unk_CECA0;
}

void *type metadata accessor for SocialPresentationElementProvider.PresentationError()
{
  return &unk_CED30;
}

unint64_t sub_5F904()
{
  return sub_5F374();
}

uint64_t sub_5F918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  return sub_5E154( a1,  a2,  *(void *)(v4 + 16),  *(void *)(v4 + 24),  *(_BYTE *)(v4 + 32),  *(void *)(v4 + 40),  *(void *)(v4 + 48),  *(void *)(v4 + 56),  a3,  a4,  *(void *)(v4 + 64));
}

uint64_t sub_5F958(uint64_t a1, uint64_t a2)
{
  return sub_5DA1C(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_5F980(uint64_t a1, uint64_t a2)
{
  return sub_5E4E8( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_5F99C()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_5F9D8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5FA00()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_5FA28()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5FA64()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_5FAA0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  char v12 = a3;
  if (!a3 || a3 == 1)
  {
    swift_bridgeObjectRetain(a2);
    return a1;
  }

  else
  {
    swift_errorRetain();
    uint64_t v9 = a1;
    swift_getErrorValue(a1, v8, v7);
    uint64_t v4 = Error.localizedDescription.getter(v7[1], v7[2]);
    swift_errorRelease(a1);
    return v4;
  }

uint64_t sub_5FC1C()
{
  return sub_5FAA0(*(void *)v0, *(void *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_5FC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_5FC94(*(void *)a2, v4, v5);
  uint64_t result = a1;
  *(void *)a1 = v3;
  *(void *)(a1 + sub_1D580(v0 + 8) = v4;
  *(_BYTE *)(a1 + swift_beginAccess(v0 + 16) = v5;
  return result;
}

uint64_t sub_5FC94(uint64_t result, uint64_t a2, char a3)
{
  if (!a3 || a3 == 1) {
    return swift_bridgeObjectRetain(a2);
  }
  if (a3 == 2) {
    return swift_errorRetain(result);
  }
  return result;
}

uint64_t sub_5FD1C(uint64_t a1)
{
  return sub_5FD40(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_5FD40(uint64_t result, uint64_t a2, char a3)
{
  if (!a3 || a3 == 1) {
    return swift_bridgeObjectRelease(a2);
  }
  if (a3 == 2) {
    return swift_errorRelease(result);
  }
  return result;
}

uint64_t sub_5FDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(_BYTE *)(a2 + 16);
  sub_5FC94(*(void *)a2, v7, v8);
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(_BYTE *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + sub_1D580(v0 + 8) = v7;
  *(_BYTE *)(a1 + swift_beginAccess(v0 + 16) = v8;
  sub_5FD40(v2, v3, v4);
  return a1;
}

uint64_t sub_5FE34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((_BYTE *)a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(_BYTE *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + sub_1D580(v0 + 8) = v4;
  *(_BYTE *)(a1 + swift_beginAccess(v0 + 16) = v5;
  sub_5FD40(v6, v7, v8);
  return a1;
}

uint64_t sub_5FE80(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      int v4 = *(_DWORD *)a1 + 253;
    }

    else
    {
      unsigned int v2 = *(unsigned __int8 *)(a1 + 16) ^ 0xFF;
      if (v2 >= 0xFD) {
        unsigned int v2 = -1;
      }
      int v4 = v2;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_5FF78(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = (_BYTE *)(result + 17);
  if (a2 > 0xFD)
  {
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)uint64_t result = a2 - 254;
    *(_BYTE *)(result + swift_beginAccess(v0 + 16) = 0;
    if (a3 >= 0xFE) {
      *uint64_t v3 = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *uint64_t v3 = 0;
    }
    if (a2) {
      *(_BYTE *)(result + swift_beginAccess(v0 + 16) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_60130(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_60138(uint64_t result, char a2)
{
  *(_BYTE *)(result + swift_beginAccess(v0 + 16) = a2;
  return result;
}

void *type metadata accessor for SocialConversationErrors()
{
  return &unk_CEF08;
}

unint64_t sub_60154()
{
  return sub_37C70();
}

uint64_t sub_60168()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("ContentTopic", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9750 = (__int128)v1;
  return result;
}

__int128 *sub_601A8()
{
  if (qword_D6960 != -1) {
    swift_once(&qword_D6960, sub_60168);
  }
  return &xmmword_D9750;
}

uint64_t sub_601FC()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("holidayPhrase", 0xDuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9760 = (__int128)v1;
  return result;
}

__int128 *sub_6023C()
{
  if (qword_D6968 != -1) {
    swift_once(&qword_D6968, sub_601FC);
  }
  return &xmmword_D9760;
}

uint64_t sub_60290()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("salutationPhrase", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9770 = (__int128)v1;
  return result;
}

__int128 *sub_602D0()
{
  if (qword_D6970 != -1) {
    swift_once(&qword_D6970, sub_60290);
  }
  return &xmmword_D9770;
}

uint64_t sub_60324()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriContentType", 0xFuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9780 = (__int128)v1;
  return result;
}

__int128 *sub_60364()
{
  if (qword_D6978 != -1) {
    swift_once(&qword_D6978, sub_60324);
  }
  return &xmmword_D9780;
}

uint64_t sub_603B8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriSocialAction", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9790 = (__int128)v1;
  return result;
}

__int128 *sub_603F8()
{
  if (qword_D6980 != -1) {
    swift_once(&qword_D6980, sub_603B8);
  }
  return &xmmword_D9790;
}

uint64_t sub_6044C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialInterjectionPhrase", 0x18uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D97A0 = (__int128)v1;
  return result;
}

__int128 *sub_6048C()
{
  if (qword_D6988 != -1) {
    swift_once(&qword_D6988, sub_6044C);
  }
  return &xmmword_D97A0;
}

uint64_t sub_604E0()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("tell", 4uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D97B0 = (__int128)v1;
  return result;
}

__int128 *sub_60520()
{
  if (qword_D6990 != -1) {
    swift_once(&qword_D6990, sub_604E0);
  }
  return &xmmword_D97B0;
}

uint64_t sub_60574()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("hear", 4uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D97C0 = (__int128)v1;
  return result;
}

__int128 *sub_605B4()
{
  if (qword_D6998 != -1) {
    swift_once(&qword_D6998, sub_60574);
  }
  return &xmmword_D97C0;
}

uint64_t sub_60608()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userSocialAction", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D97D0 = (__int128)v1;
  return result;
}

__int128 *sub_60648()
{
  if (qword_D69A0 != -1) {
    swift_once(&qword_D69A0, sub_60608);
  }
  return &xmmword_D97D0;
}

uint64_t sub_6069C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("favoriteInstance", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D97E0 = (__int128)v1;
  return result;
}

__int128 *sub_606DC()
{
  if (qword_D69A8 != -1) {
    swift_once(&qword_D69A8, sub_6069C);
  }
  return &xmmword_D97E0;
}

uint64_t sub_60730()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("favoriteCategory", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D97F0 = (__int128)v1;
  return result;
}

__int128 *sub_60770()
{
  if (qword_D69B0 != -1) {
    swift_once(&qword_D69B0, sub_60730);
  }
  return &xmmword_D97F0;
}

uint64_t sub_607C4()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("opinionTopic", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9800 = (__int128)v1;
  return result;
}

__int128 *sub_60804()
{
  if (qword_D69B8 != -1) {
    swift_once(&qword_D69B8, sub_607C4);
  }
  return &xmmword_D9800;
}

uint64_t sub_60858()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("opinionJudgment", 0xFuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9810 = (__int128)v1;
  return result;
}

__int128 *sub_60898()
{
  if (qword_D69C0 != -1) {
    swift_once(&qword_D69C0, sub_60858);
  }
  return &xmmword_D9810;
}

uint64_t sub_608EC()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriProperty", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9820 = (__int128)v1;
  return result;
}

__int128 *sub_6092C()
{
  if (qword_D69C8 != -1) {
    swift_once(&qword_D69C8, sub_608EC);
  }
  return &xmmword_D9820;
}

uint64_t sub_60980()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriPossession", 0xEuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9830 = (__int128)v1;
  return result;
}

__int128 *sub_609C0()
{
  if (qword_D69D0 != -1) {
    swift_once(&qword_D69D0, sub_60980);
  }
  return &xmmword_D9830;
}

uint64_t sub_60A14()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userPossession", 0xEuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9840 = (__int128)v1;
  return result;
}

__int128 *sub_60A54()
{
  if (qword_D69D8 != -1) {
    swift_once(&qword_D69D8, sub_60A14);
  }
  return &xmmword_D9840;
}

uint64_t sub_60AA8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userProperty", 0xCuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9850 = (__int128)v1;
  return result;
}

__int128 *sub_60AE8()
{
  if (qword_D69E0 != -1) {
    swift_once(&qword_D69E0, sub_60AA8);
  }
  return &xmmword_D9850;
}

uint64_t sub_60B3C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("personSocialAction", 0x12uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9860 = (__int128)v1;
  return result;
}

__int128 *sub_60B7C()
{
  if (qword_D69E8 != -1) {
    swift_once(&qword_D69E8, sub_60B3C);
  }
  return &xmmword_D9860;
}

uint64_t sub_60BD0()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("personProperty", 0xEuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9870 = (__int128)v1;
  return result;
}

__int128 *sub_60C10()
{
  if (qword_D69F0 != -1) {
    swift_once(&qword_D69F0, sub_60BD0);
  }
  return &xmmword_D9870;
}

uint64_t sub_60C64()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("like", 4uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9880 = (__int128)v1;
  return result;
}

__int128 *sub_60CA4()
{
  if (qword_D69F8 != -1) {
    swift_once(&qword_D69F8, sub_60C64);
  }
  return &xmmword_D9880;
}

uint64_t sub_60CF8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("checkLike", 9uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9890 = (__int128)v1;
  return result;
}

__int128 *sub_60D38()
{
  if (qword_D6A00 != -1) {
    swift_once(&qword_D6A00, sub_60CF8);
  }
  return &xmmword_D9890;
}

uint64_t sub_60D8C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("summarise", 9uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D98A0 = (__int128)v1;
  return result;
}

__int128 *sub_60DCC()
{
  if (qword_D6A08 != -1) {
    swift_once(&qword_D6A08, sub_60D8C);
  }
  return &xmmword_D98A0;
}

uint64_t sub_60E20()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("justify", 7uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D98B0 = (__int128)v1;
  return result;
}

__int128 *sub_60E60()
{
  if (qword_D6A10 != -1) {
    swift_once(&qword_D6A10, sub_60E20);
  }
  return &xmmword_D98B0;
}

uint64_t sub_60EB4()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Siri", 4uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D98C0 = (__int128)v1;
  return result;
}

__int128 *sub_60EF4()
{
  if (qword_D6A18 != -1) {
    swift_once(&qword_D6A18, sub_60EB4);
  }
  return &xmmword_D98C0;
}

uint64_t sub_60F48()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("User", 4uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D98D0 = (__int128)v1;
  return result;
}

__int128 *sub_60F88()
{
  if (qword_D6A20 != -1) {
    swift_once(&qword_D6A20, sub_60F48);
  }
  return &xmmword_D98D0;
}

uint64_t sub_60FDC()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Person", 6uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D98E0 = (__int128)v1;
  return result;
}

__int128 *sub_6101C()
{
  if (qword_D6A28 != -1) {
    swift_once(&qword_D6A28, sub_60FDC);
  }
  return &xmmword_D98E0;
}

uint64_t sub_61070()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("checkExistence", 0xEuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D98F0 = (__int128)v1;
  return result;
}

__int128 *sub_610B0()
{
  if (qword_D6A30 != -1) {
    swift_once(&qword_D6A30, sub_61070);
  }
  return &xmmword_D98F0;
}

uint64_t sub_61104()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("noVerb", 6uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9900 = (__int128)v1;
  return result;
}

__int128 *sub_61144()
{
  if (qword_D6A38 != -1) {
    swift_once(&qword_D6A38, sub_61104);
  }
  return &xmmword_D9900;
}

uint64_t sub_61198()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("state", 5uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9910 = (__int128)v1;
  return result;
}

__int128 *sub_611D8()
{
  if (qword_D6A40 != -1) {
    swift_once(&qword_D6A40, sub_61198);
  }
  return &xmmword_D9910;
}

uint64_t sub_6122C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Favorite", 8uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9920 = (__int128)v1;
  return result;
}

__int128 *sub_6126C()
{
  if (qword_D6A48 != -1) {
    swift_once(&qword_D6A48, sub_6122C);
  }
  return &xmmword_D9920;
}

uint64_t sub_612C0()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SiriOpinion", 0xBuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9930 = (__int128)v1;
  return result;
}

__int128 *sub_61300()
{
  if (qword_D6A50 != -1) {
    swift_once(&qword_D6A50, sub_612C0);
  }
  return &xmmword_D9930;
}

void *type metadata accessor for NLv4Constants()
{
  return &unk_CEF80;
}

uint64_t sub_61368(void *a1, void *a2)
{
  return sub_61FC8(a1, a2);
}

uint64_t sub_613B8(void *a1)
{
  return sub_627C8(a1);
}

uint64_t *sub_61400()
{
  if (qword_D6A78 != -1) {
    swift_once(&qword_D6A78, sub_6180C);
  }
  return &qword_D9998;
}

uint64_t *sub_61454()
{
  if (qword_D6A80 != -1) {
    swift_once(&qword_D6A80, sub_61A10);
  }
  return &qword_D99A0;
}

uint64_t sub_614A8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9940 = (__int128)v1;
  return result;
}

__int128 *sub_614E8()
{
  if (qword_D6A58 != -1) {
    swift_once(&qword_D6A58, sub_614A8);
  }
  return &xmmword_D9940;
}

uint64_t sub_6153C()
{
  uint64_t v3 = type metadata accessor for NLGCATIdentifier(0LL);
  sub_628A8(v3, qword_D9950);
  sub_62918(v3, (uint64_t)qword_D9950);
  uint64_t v0 = sub_614E8();
  uint64_t v4 = *(void *)v0;
  uint64_t v5 = *((void *)v0 + 1);
  swift_bridgeObjectRetain(v5);
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalGeneralJoke", 0xEuLL, 1);
  return NLGCATIdentifier.init(_:_:)(v4, v5, v1._countAndFlagsBits, v1._object);
}

uint64_t sub_615CC()
{
  if (qword_D6A60 != -1) {
    swift_once(&qword_D6A60, sub_6153C);
  }
  uint64_t v0 = type metadata accessor for NLGCATIdentifier(0LL);
  return sub_62918(v0, (uint64_t)qword_D9950);
}

uint64_t sub_6162C()
{
  uint64_t v3 = type metadata accessor for NLGCATIdentifier(0LL);
  sub_628A8(v3, qword_D9968);
  sub_62918(v3, (uint64_t)qword_D9968);
  uint64_t v0 = sub_614E8();
  uint64_t v4 = *(void *)v0;
  uint64_t v5 = *((void *)v0 + 1);
  swift_bridgeObjectRetain(v5);
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalSpecificJoke", 0xFuLL, 1);
  return NLGCATIdentifier.init(_:_:)(v4, v5, v1._countAndFlagsBits, v1._object);
}

uint64_t sub_616BC()
{
  if (qword_D6A68 != -1) {
    swift_once(&qword_D6A68, sub_6162C);
  }
  uint64_t v0 = type metadata accessor for NLGCATIdentifier(0LL);
  return sub_62918(v0, (uint64_t)qword_D9968);
}

uint64_t sub_6171C()
{
  uint64_t v3 = type metadata accessor for NLGCATIdentifier(0LL);
  sub_628A8(v3, qword_D9980);
  sub_62918(v3, (uint64_t)qword_D9980);
  uint64_t v0 = sub_614E8();
  uint64_t v4 = *(void *)v0;
  uint64_t v5 = *((void *)v0 + 1);
  swift_bridgeObjectRetain(v5);
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalAnotherSpecificJoke", 0x16uLL, 1);
  return NLGCATIdentifier.init(_:_:)(v4, v5, v1._countAndFlagsBits, v1._object);
}

uint64_t sub_617AC()
{
  if (qword_D6A70 != -1) {
    swift_once(&qword_D6A70, sub_6171C);
  }
  uint64_t v0 = type metadata accessor for NLGCATIdentifier(0LL);
  return sub_62918(v0, (uint64_t)qword_D9980);
}

uint64_t sub_6180C()
{
  uint64_t v11 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v8 = _allocateUninitializedArray<A>(_:)(1LL, v11);
  uint64_t v7 = v0;
  uint64_t v1 = sub_615CC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v7, v1);
  sub_6648();
  uint64_t v9 = _allocateUninitializedArray<A>(_:)(1LL, &type metadata for String);
  Swift::String *v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalRandomJoke", 0xDuLL, 1);
  sub_6648();
  uint64_t v14 = v9;
  uint64_t v10 = sub_5150(&qword_D7350);
  unint64_t v3 = sub_1BFB0();
  uint64_t v13 = sub_25AD4( (void (*)(char *, char *))sub_61994,  0LL,  v10,  v11,  (uint64_t)&type metadata for Never,  v3,  v4,  (uint64_t)&protocol witness table for Never,  v12);
  sub_1B82C(&v14);
  uint64_t v6 = static Array.+ infix(_:_:)(v8, v13, v11);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v8);
  uint64_t result = v6;
  qword_D9998 = v6;
  return result;
}

uint64_t sub_61994(uint64_t *a1)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v1 = sub_614E8();
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *((void *)v1 + 1);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  return NLGCATIdentifier.init(_:_:)(v3, v4, v5, v6);
}

uint64_t sub_61A10()
{
  uint64_t v16 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v12 = _allocateUninitializedArray<A>(_:)(2LL, v16);
  uint64_t v10 = v0;
  uint64_t v1 = sub_616BC();
  uint64_t v8 = *(void *)(v16 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 16);
  v11(v10, v1);
  uint64_t v9 = *(void *)(v8 + 72);
  uint64_t v2 = sub_617AC();
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v10 + v9, v2, v16);
  sub_6648();
  uint64_t v14 = _allocateUninitializedArray<A>(_:)(9LL, &type metadata for String);
  uint64_t v13 = v3;
  *uint64_t v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalAnimalJoke", 0xDuLL, 1);
  v13[1] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalDadJoke", 0xAuLL, 1);
  void v13[2] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalKidJoke", 0xAuLL, 1);
  v13[3] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalMathJoke", 0xBuLL, 1);
  void v13[4] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalMusicJoke", 0xCuLL, 1);
  v13[5] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalPun", 6uLL, 1);
  v13[6] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalScienceJoke", 0xEuLL, 1);
  v13[7] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalValentinesDayJoke", 0x14uLL, 1);
  _BYTE v13[8] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalWinterHolidayJoke", 0x14uLL, 1);
  sub_6648();
  uint64_t v19 = v14;
  uint64_t v15 = sub_5150(&qword_D7350);
  unint64_t v4 = sub_1BFB0();
  uint64_t v18 = sub_25AD4( (void (*)(char *, char *))sub_61994,  0LL,  v15,  v16,  (uint64_t)&type metadata for Never,  v4,  v5,  (uint64_t)&protocol witness table for Never,  v17);
  sub_1B82C(&v19);
  uint64_t v7 = static Array.+ infix(_:_:)(v12, v18, v16);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v12);
  uint64_t result = v7;
  qword_D99A0 = v7;
  return result;
}

uint64_t sub_61D1C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttonAnotherJoke", 0x11uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D99A8 = (__int128)v1;
  return result;
}

__int128 *sub_61D5C()
{
  if (qword_D6A88 != -1) {
    swift_once(&qword_D6A88, sub_61D1C);
  }
  return &xmmword_D99A8;
}

uint64_t sub_61DB0()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttonAnotherOne", 0x10uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D99B8 = (__int128)v1;
  return result;
}

__int128 *sub_61DF0()
{
  if (qword_D6A90 != -1) {
    swift_once(&qword_D6A90, sub_61DB0);
  }
  return &xmmword_D99B8;
}

uint64_t sub_61E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_flowIdentifier;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_flowIdentifier);
  uint64_t v2 = type metadata accessor for NLGCATIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v4);
  return swift_endAccess(v6);
}

uint64_t sub_61EB0(uint64_t a1)
{
  uint64_t v9 = a1;
  uint64_t v10 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v8 = *(void *)(v10 - 8);
  unint64_t v4 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v4 - v4;
  (*(void (**)(void))(v2 + 16))();
  uint64_t v5 = v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_flowIdentifier;
  uint64_t v7 = &v11;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_flowIdentifier);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v5, v6, v10);
  swift_endAccess(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
}

uint64_t (*sub_61F80())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_61FC8(void *a1, void *a2)
{
  uint64_t v14 = 0LL;
  uint64_t v16 = a1;
  uint64_t v15 = a2;
  Swift::String v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalGeneralJoke", 0xEuLL, 1);
  NLGCATIdentifier.init(_:_:)(v2._countAndFlagsBits, v2._object, v3._countAndFlagsBits, v3._object);
  unint64_t v4 = sub_2A46C(a1, v10);
  if (v10[3])
  {
    sub_C094(v10, __dst);
  }

  else
  {
    SystemRandomNumberGenerator.init()(v4);
    uint64_t v12 = &type metadata for SystemRandomNumberGenerator;
    uint64_t v13 = &protocol witness table for SystemRandomNumberGenerator;
    sub_1D580(v10);
  }

  sub_C094( __dst,  (void *)(v7 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_randomNumberGenerator));
  sub_2A46C(a2, v9);
  sub_62958( v9,  (void *)(v7 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_dialogRecorder));
  sub_1D580(a2);
  sub_1D580(a1);
  return v7;
}

uint64_t sub_6211C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v33 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v28 = 0LL;
  uint64_t v36 = a1;
  uint64_t v35 = a2;
  uint64_t v34 = a3;
  uint64_t v13 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v14 = _allocateUninitializedArray<A>(_:)(1LL, v13);
  uint64_t v12 = v4;
  uint64_t v5 = sub_615CC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 16LL))(v12, v5);
  sub_6648();
  uint64_t v32 = v14;
  type metadata accessor for NLGDefaultProvider(0LL);
  NLGDefaultProvider.__allocating_init()();
  dispatch thunk of NLGDefaultProvider.dialogProvider()();
  swift_release();
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  sub_8C74(v29, v30);
  uint64_t v20 = dispatch thunk of NLGDialogProvider.getDialogs(templateDir:catTemplates:locale:)(a1, v14, a3, v17, v18);
  if (v16)
  {
    sub_4598(v29);
    return swift_bridgeObjectRelease(v14);
  }

  else
  {
    uint64_t v28 = v20;
    sub_454C( v11 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_randomNumberGenerator,  (uint64_t)v24);
    sub_2A46C( (void *)(v11 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_dialogRecorder),  v23);
    static NLGDialogSelectors.randomOriginal(randomNumberGenerator:dialogRecorder:)(v24, v23);
    sub_1D580(v23);
    sub_4598(v24);
    uint64_t v8 = v26;
    uint64_t v9 = v27;
    sub_8C74(v25, v26);
    dispatch thunk of NLGDialogSelector.select(from:)(v22, v20, v8, v9);
    sub_454C((uint64_t)v22, (uint64_t)v21);
    Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttonAnotherOne", 0x10uLL, 1);
    sub_4A7AC(v21, v6._countAndFlagsBits, (uint64_t)v6._object, a4);
    sub_4598(v22);
    sub_4598(v25);
    swift_bridgeObjectRelease(v20);
    sub_4598(v29);
    return swift_bridgeObjectRelease(v14);
  }

uint64_t sub_623EC()
{
  uint64_t v3 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_flowIdentifier;
  uint64_t v1 = type metadata accessor for NLGCATIdentifier(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(v0 + v3);
  sub_4598((void *)(v0
                    + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_randomNumberGenerator));
  sub_1D580((void *)(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20GeneralJokeRetriever_dialogRecorder));
  return v4;
}

uint64_t sub_62460()
{
  uint64_t v0 = sub_623EC();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_624A0@<X0>(uint64_t a1@<X8>)
{
  return sub_61E44(a1);
}

uint64_t sub_624C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_6211C(a1, a2, a3, a4);
}

uint64_t sub_62518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_flowIdentifier;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_flowIdentifier);
  uint64_t v2 = type metadata accessor for NLGCATIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v4);
  return swift_endAccess(v6);
}

uint64_t sub_62584(uint64_t a1)
{
  uint64_t v9 = a1;
  uint64_t v10 = type metadata accessor for NLGCATIdentifier(0LL);
  uint64_t v8 = *(void *)(v10 - 8);
  unint64_t v4 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin();
  Swift::String v6 = (char *)&v4 - v4;
  (*(void (**)(void))(v2 + 16))();
  uint64_t v5 = v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_flowIdentifier;
  uint64_t v7 = &v11;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_flowIdentifier);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v5, v6, v10);
  swift_endAccess(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
}

uint64_t (*sub_62654())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_6269C()
{
  uint64_t v2 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
  swift_beginAccess(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  swift_endAccess(v4);
  return v3;
}

uint64_t sub_62704(uint64_t a1, uint64_t a2)
{
  Swift::String v6 = (void *)(v2
                + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
  swift_beginAccess(v2 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
  uint64_t v3 = v6[1];
  void *v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease(v3);
  swift_endAccess(v8);
  return swift_bridgeObjectRelease(a2);
}

uint64_t (*sub_62780())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_627C8(void *a1)
{
  void v8[5] = 0LL;
  v8[6] = a1;
  Swift::String v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dalSpecificJoke", 0xFuLL, 1);
  NLGCATIdentifier.init(_:_:)(v2._countAndFlagsBits, v2._object, v3._countAndFlagsBits, v3._object);
  unint64_t v4 = (void *)(v1
                + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
  *unint64_t v4 = 0LL;
  v4[1] = 0LL;
  sub_2A46C(a1, v8);
  sub_62958( v8,  (void *)(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_dialogRecorder));
  sub_1D580(a1);
  return v7;
}

uint64_t sub_628A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = a2;
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80LL) & 0x20000) != 0)
  {
    uint64_t v2 = swift_slowAlloc( *(void *)(*(void *)(a1 - 8) + 64LL),  *(_DWORD *)(*(void *)(a1 - 8) + 80LL));
    *a2 = v2;
    return v2;
  }

  return (uint64_t)v5;
}

uint64_t sub_62918(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80LL) & 0x20000) != 0) {
    return *(void *)a2;
  }
  return v3;
}

void *sub_62958(const void *a1, void *a2)
{
  return a2;
}

uint64_t sub_629C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v192 = a4;
  uint64_t v221 = a1;
  uint64_t v204 = a2;
  uint64_t v217 = a3;
  uint64_t v274 = 0LL;
  uint64_t v273 = 0LL;
  uint64_t v272 = 0LL;
  uint64_t v271 = 0LL;
  uint64_t v270 = 0LL;
  uint64_t v266 = 0LL;
  uint64_t v254 = 0LL;
  uint64_t v255 = 0LL;
  uint64_t v253 = 0LL;
  uint64_t v245 = 0LL;
  uint64_t v246 = 0LL;
  HIDWORD(v234) = 0;
  uint64_t v213 = 0LL;
  uint64_t v194 = type metadata accessor for Logger(0LL);
  uint64_t v195 = *(void *)(v194 - 8);
  unint64_t v196 = (*(void *)(v195 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v197 = (char *)v80 - v196;
  unint64_t v198 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v199 = (char *)v80 - v198;
  uint64_t v200 = type metadata accessor for Locale(v8);
  uint64_t v201 = *(void *)(v200 - 8);
  unint64_t v202 = (*(void *)(v201 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v203 = (uint64_t)v80 - v202;
  uint64_t v211 = type metadata accessor for NLGCATIdentifier(v10);
  uint64_t v207 = *(void *)(v211 - 8);
  unint64_t v205 = (*(void *)(v207 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v206 = (char *)v80 - v205;
  uint64_t v274 = v12;
  uint64_t v273 = v13;
  uint64_t v272 = v14;
  uint64_t v271 = v4;
  uint64_t v212 = _allocateUninitializedArray<A>(_:)(2LL, v15);
  uint64_t v209 = v16;
  uint64_t v17 = sub_615CC();
  uint64_t v210 = *(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16);
  v210(v209, v17, v211);
  uint64_t v208 = *(void *)(v207 + 72);
  uint64_t v18 = sub_616BC();
  v210(v209 + v208, v18, v211);
  uint64_t v19 = v212;
  sub_6648();
  uint64_t v216 = v19;
  uint64_t v270 = v19;
  type metadata accessor for NLGDefaultProvider(v213);
  uint64_t v214 = NLGDefaultProvider.__allocating_init()();
  uint64_t v215 = v267;
  dispatch thunk of NLGDefaultProvider.dialogProvider()();
  swift_release();
  uint64_t v219 = v268;
  uint64_t v220 = v269;
  sub_8C74(v215, v268);
  uint64_t v20 = v218;
  uint64_t v21 = dispatch thunk of NLGDialogProvider.getDialogs(templateDir:catTemplates:locale:)(v221, v216, v217, v219, v220);
  uint64_t v222 = v20;
  uint64_t v223 = v21;
  uint64_t v224 = v20;
  if (v20)
  {
    uint64_t v82 = v224;
    sub_4598(v267);
    uint64_t result = swift_bridgeObjectRelease(v216);
    uint64_t v83 = v82;
  }

  else
  {
    uint64_t v190 = v223;
    uint64_t v266 = v223;
    uint64_t v22 = sub_617AC();
    v210((uint64_t)v206, v22, v211);
    int v191 = static NLGCATIdentifier.== infix(_:_:)(v204, v206);
    (*(void (**)(char *, uint64_t))(v207 + 8))(v206, v211);
    if ((v191 & 1) != 0)
    {
      uint64_t v186 = (uint64_t *)(v193
                       + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
      uint64_t v187 = &v225;
      swift_beginAccess(v193 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
      uint64_t v188 = *v186;
      uint64_t v189 = v186[1];
      swift_bridgeObjectRetain(v189);
      swift_endAccess(v187);
      uint64_t v264 = v188;
      uint64_t v265 = v189;
    }

    else
    {
      uint64_t v182 = static NLGUtteranceProvider.currentUtterance.getter();
      uint64_t v185 = v23;
      swift_bridgeObjectRetain(v23);
      uint64_t v264 = v182;
      uint64_t v265 = v185;
      swift_bridgeObjectRetain(v185);
      double v183 = (uint64_t *)(v193
                       + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
      uint64_t v184 = (char *)v263 + 4;
      swift_beginAccess(v193 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
      uint64_t v24 = v183;
      uint64_t v25 = v185;
      uint64_t v26 = v183[1];
      *double v183 = v182;
      v24[1] = v25;
      swift_bridgeObjectRelease(v26);
      swift_endAccess(v184);
      swift_bridgeObjectRelease(v185);
    }

    uint64_t v180 = v264;
    uint64_t v181 = v265;
    swift_bridgeObjectRetain(v265);
    if (v181)
    {
      uint64_t v178 = v180;
      uint64_t v179 = v181;
      uint64_t v168 = v181;
      uint64_t v167 = v180;
      uint64_t v254 = v180;
      uint64_t v255 = v181;
      uint64_t v169 = type metadata accessor for RelevantDialogScorer(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 16))(v203, v217, v200);
      swift_bridgeObjectRetain(v168);
      uint64_t v170 = sub_63A94(v203, v167, v168);
      uint64_t v253 = v170;
      swift_retain();
      uint64_t v172 = v249;
      v249[3] = v169;
      v249[4] = sub_642F8();
      v249[0] = v170;
      uint64_t v171 = v248;
      sub_2A46C( (void *)(v193 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_dialogRecorder),  v248);
      uint64_t v173 = v250;
      static NLGDialogSelectors.highestScoringOriginal(using:dialogRecorder:)(v172, v171);
      sub_1D580(v171);
      sub_4598(v172);
      uint64_t v174 = v251;
      uint64_t v175 = v252;
      sub_8C74(v173, v251);
      uint64_t v27 = v222;
      dispatch thunk of NLGDialogSelector.select(from:)(v247, v190, v174, v175);
      uint64_t v176 = v27;
      uint64_t v177 = v27;
      if (v27)
      {
        v80[1] = v177;
        sub_4598(v250);
        swift_release();
        swift_bridgeObjectRelease(v168);
        sub_8DD8((uint64_t)&v264);
        swift_bridgeObjectRelease(v190);
        sub_4598(v267);
        return swift_bridgeObjectRelease(v216);
      }

      else
      {
        uint64_t v158 = v238;
        sub_454C( v170 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_keywordScorer,  (uint64_t)v238);
        uint64_t v161 = v239;
        uint64_t v162 = v240;
        sub_8C74(v158, v239);
        uint64_t v159 = sub_5150(&qword_D8108);
        uint64_t v160 = _allocateUninitializedArray<A>(_:)(1LL, v159);
        sub_454C((uint64_t)v247, v28);
        uint64_t v29 = v160;
        sub_6648();
        uint64_t v163 = v29;
        uint64_t v166 = dispatch thunk of NLGDialogScorer.score(dialogs:)();
        swift_bridgeObjectRelease(v163);
        swift_bridgeObjectRetain(v166);
        uint64_t v165 = &v237;
        uint64_t v237 = v166;
        uint64_t v164 = sub_5150(&qword_D8110);
        unint64_t v30 = sub_64368();
        Collection.first.getter(v241, v164, v30);
        sub_1B82C(v165);
        swift_bridgeObjectRelease(v166);
        if (v242)
        {
          uint64_t v154 = v241;
          uint64_t v153 = v242;
          uint64_t v152 = v243;
          sub_8C74(v241, v242);
          float v155 = dispatch thunk of NLGScoredDialog.score.getter(v153, v152);
          sub_4598(v154);
          sub_4598(v238);
          float v156 = v155;
          int v157 = 0;
        }

        else
        {
          float v110 = 0.0;
          sub_4598(v238);
          sub_1D580(v241);
          float v156 = v110;
          int v157 = 1;
        }

        float v235 = v156;
        char v236 = v157 & 1;
        if ((v157 & 1) != 0) {
          float v244 = 0.0;
        }
        else {
          float v244 = v235;
        }
        uint64_t v31 = v199;
        float v133 = v244;
        *((float *)&v234 + 1) = v244;
        uint64_t v32 = sub_AD514();
        (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v31, v32, v194);
        uint64_t v141 = 7LL;
        uint64_t v33 = swift_allocObject(&unk_CEFA0, 20LL, 7LL);
        uint64_t v139 = v33;
        *(float *)(v33 + swift_beginAccess(v0 + 16) = v133;
        uint64_t v150 = (os_log_s *)Logger.logObject.getter(v33);
        int v151 = static os_log_type_t.debug.getter();
        uint64_t v136 = &v233;
        uint64_t v233 = 12LL;
        unint64_t v134 = sub_7788();
        unint64_t v135 = sub_77F0();
        unint64_t v34 = sub_7858();
        UnsignedInteger<>.init<A>(_:)(&v234, v136, &type metadata for UInt32, &type metadata for Int, v134, v135, v34);
        uint32_t v137 = v234;
        uint64_t v138 = 17LL;
        uint64_t v35 = swift_allocObject(&unk_CEFC8, 17LL, v141);
        uint64_t v36 = v138;
        uint64_t v37 = v141;
        uint64_t v144 = v35;
        *(_BYTE *)(v35 + swift_beginAccess(v0 + 16) = 0;
        uint64_t v38 = swift_allocObject(&unk_CEFF0, v36, v37);
        uint64_t v39 = v141;
        uint64_t v145 = v38;
        *(_BYTE *)(v38 + swift_beginAccess(v0 + 16) = 8;
        uint64_t v140 = 32LL;
        uint64_t v40 = swift_allocObject(&unk_CF018, 32LL, v39);
        uint64_t v41 = v140;
        uint64_t v42 = v141;
        uint64_t v43 = v40;
        uint64_t v44 = v139;
        uint64_t v142 = v43;
        *(void *)(v43 + swift_beginAccess(v0 + 16) = sub_64400;
        *(void *)(v43 + 24) = v44;
        uint64_t v45 = swift_allocObject(&unk_CF040, v41, v42);
        uint64_t v46 = v140;
        uint64_t v47 = v141;
        uint64_t v48 = v45;
        uint64_t v49 = v142;
        uint64_t v143 = v48;
        *(void *)(v48 + swift_beginAccess(v0 + 16) = sub_64548;
        *(void *)(v48 + 24) = v49;
        uint64_t v50 = swift_allocObject(&unk_CF068, v46, v47);
        uint64_t v51 = v143;
        uint64_t v147 = v50;
        *(void *)(v50 + swift_beginAccess(v0 + 16) = sub_88B8;
        *(void *)(v50 + 24) = v51;
        uint64_t v149 = sub_5150((uint64_t *)&unk_D6B50);
        uint64_t v146 = _allocateUninitializedArray<A>(_:)(3LL, v149);
        uint64_t v148 = v52;
        swift_retain();
        uint64_t v53 = v144;
        uint64_t v54 = v148;
        *uint64_t v148 = sub_884C;
        v54[1] = v53;
        swift_retain();
        uint64_t v55 = v145;
        unint64_t v56 = v148;
        v148[2] = sub_884C;
        v56[3] = v55;
        swift_retain();
        uint64_t v57 = v146;
        uint64_t v58 = v147;
        uint64_t v59 = v148;
        v148[4] = sub_64630;
        v59[5] = v58;
        sub_6648();
        swift_bridgeObjectRelease(v57);
        if (os_log_type_enabled(v150, (os_log_type_t)v151))
        {
          uint64_t v126 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
          uint64_t v124 = sub_5150(&qword_D6B60);
          uint64_t v125 = 0LL;
          uint64_t v127 = sub_74D0(0LL, v124, v124);
          uint64_t v128 = sub_74D0(v125, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          uint64_t v129 = &v230;
          uint64_t v230 = v126;
          uint64_t v130 = &v229;
          uint64_t v229 = v127;
          uint64_t v131 = &v228;
          uint64_t v228 = v128;
          sub_7528(0LL, &v230);
          sub_7528(1LL, v129);
          uint64_t v60 = v176;
          uint64_t v226 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v227 = v144;
          sub_753C(&v226, (uint64_t)v129, (uint64_t)v130, (uint64_t)v131);
          uint64_t v132 = v60;
          if (v60)
          {
            __break(1u);
          }

          else
          {
            uint64_t v226 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v227 = v145;
            sub_753C(&v226, (uint64_t)&v230, (uint64_t)&v229, (uint64_t)&v228);
            uint64_t v122 = 0LL;
            uint64_t v61 = v122;
            uint64_t v226 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_64630;
            uint64_t v227 = v147;
            sub_753C(&v226, (uint64_t)&v230, (uint64_t)&v229, (uint64_t)&v228);
            uint64_t v121 = v61;
            _os_log_impl(&dword_0, v150, (os_log_type_t)v151, "Selected dialog keyword score: %f", v126, v137);
            uint64_t v120 = 0LL;
            sub_7580(v127, 0LL);
            sub_7580(v128, v120);
            UnsafeMutablePointer.deallocate()();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v123 = v121;
          }
        }

        else
        {
          swift_release();
          swift_release();
          swift_release();
          uint64_t v123 = v176;
        }

        uint64_t v119 = v123;

        (*(void (**)(char *, uint64_t))(v195 + 8))(v199, v194);
        if (v133 <= 0.0)
        {
          uint64_t v63 = sub_61D5C();
          sub_139E0(v63, &v245);
          uint64_t v117 = (void *)(v193
                          + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
          uint64_t v118 = &v232;
          swift_beginAccess(v193 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
          uint64_t v64 = v117;
          uint64_t v65 = v117[1];
          *uint64_t v117 = 0LL;
          v64[1] = 0LL;
          swift_bridgeObjectRelease(v65);
          swift_endAccess(v118);
        }

        else
        {
          uint64_t v62 = sub_61DF0();
          sub_139E0(v62, &v245);
        }

        uint64_t v115 = v247;
        uint64_t v111 = v231;
        sub_454C((uint64_t)v247, (uint64_t)v231);
        Swift::String v114 = &v245;
        uint64_t v112 = v245;
        uint64_t v113 = v246;
        swift_bridgeObjectRetain(v246);
        sub_4A7AC(v111, v112, v113, v192);
        sub_8DD8((uint64_t)v114);
        sub_4598(v115);
        sub_4598(v250);
        swift_release();
        swift_bridgeObjectRelease(v168);
        sub_8DD8((uint64_t)&v264);
        swift_bridgeObjectRelease(v190);
        sub_4598(v267);
        uint64_t result = swift_bridgeObjectRelease(v216);
        uint64_t v116 = v119;
      }
    }

    else
    {
      uint64_t v67 = v197;
      uint64_t v68 = sub_AD514();
      uint64_t v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v195 + 16))(v67, v68, v194);
      uint64_t v108 = (os_log_s *)Logger.logObject.getter(v69);
      int v107 = static os_log_type_t.error.getter();
      uint64_t v105 = &v262;
      uint64_t v262 = 2LL;
      unint64_t v103 = sub_7788();
      unint64_t v104 = sub_77F0();
      unint64_t v70 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(v263, v105, &type metadata for UInt32, &type metadata for Int, v103, v104, v70);
      uint32_t v106 = v263[0];
      uint64_t v71 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v109 = _allocateUninitializedArray<A>(_:)(0LL, v71);
      if (os_log_type_enabled(v108, (os_log_type_t)v107))
      {
        uint64_t v92 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
        uint64_t v90 = sub_5150(&qword_D6B60);
        uint64_t v91 = 0LL;
        uint64_t v93 = sub_74D0(0LL, v90, v90);
        uint64_t v94 = sub_74D0(v91, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        unint64_t v98 = &v259;
        uint64_t v259 = v92;
        uint64_t v99 = &v258;
        uint64_t v258 = v93;
        uint64_t v96 = &v257;
        uint64_t v257 = v94;
        unsigned int v95 = 0;
        sub_7528(0LL, &v259);
        sub_7528(v95, v98);
        uint64_t v256 = v109;
        uint64_t v97 = v80;
        __chkstk_darwin(v72);
        unint64_t v73 = v99;
        uint64_t v74 = &v80[-6];
        uint64_t v100 = &v80[-6];
        v74[2] = v98;
        v74[3] = v73;
        v74[4] = v75;
        uint64_t v101 = sub_5150(&qword_D6B78);
        unint64_t v76 = sub_8CF4();
        uint64_t v77 = v222;
        Sequence.forEach(_:)(sub_8CC8, v100, v101, v76);
        uint64_t v102 = v77;
        if (v77)
        {
          __break(1u);
        }

        else
        {
          _os_log_impl(&dword_0, v108, (os_log_type_t)v107, "No utterance, retrieving general joke", v92, v106);
          uint64_t v88 = 0LL;
          sub_7580(v93, 0LL);
          sub_7580(v94, v88);
          UnsafeMutablePointer.deallocate()();
          swift_bridgeObjectRelease(v109);
          uint64_t v89 = v102;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v109);
        uint64_t v89 = v222;
      }

      uint64_t v84 = v89;

      (*(void (**)(char *, uint64_t))(v195 + 8))(v197, v194);
      type metadata accessor for GeneralJokeRetriever(0LL);
      memset(v261, 0, sizeof(v261));
      memset(v260, 0, sizeof(v260));
      uint64_t v78 = sub_61368(v261, v260);
      uint64_t v79 = v84;
      uint64_t v85 = v78;
      sub_6211C(v221, v204, v217, v192);
      uint64_t v86 = v79;
      uint64_t v87 = v79;
      if (v79)
      {
        uint64_t v81 = v87;
        swift_release();
        sub_8DD8((uint64_t)&v264);
        swift_bridgeObjectRelease(v190);
        sub_4598(v267);
        uint64_t result = swift_bridgeObjectRelease(v216);
        uint64_t v83 = v81;
      }

      else
      {
        swift_release();
        sub_8DD8((uint64_t)&v264);
        swift_bridgeObjectRelease(v190);
        sub_4598(v267);
        swift_bridgeObjectRelease(v216);
        uint64_t result = v86;
        uint64_t v116 = v86;
      }
    }
  }

  return result;
}

uint64_t sub_63A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_63C18(a1, a2, a3);
}

uint64_t sub_63AEC()
{
  uint64_t v3 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_flowIdentifier;
  uint64_t v1 = type metadata accessor for NLGCATIdentifier(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(v0 + v3);
  sub_8DD8(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_lastSpecificUtterance);
  sub_1D580((void *)(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin21SpecificJokeRetriever_dialogRecorder));
  return v4;
}

uint64_t sub_63B60()
{
  uint64_t v0 = sub_63AEC();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_63BA0@<X0>(uint64_t a1@<X8>)
{
  return sub_62518(a1);
}

uint64_t sub_63BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_629C0(a1, a2, a3, a4);
}

uint64_t sub_63C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a1;
  uint64_t v35 = a2;
  uint64_t v46 = a3;
  uint64_t v4 = v3;
  uint64_t v50 = v4;
  uint64_t v57 = 0LL;
  uint64_t v55 = 0LL;
  uint64_t v56 = 0LL;
  uint64_t v54 = 0LL;
  uint64_t v49 = type metadata accessor for Locale(0LL);
  uint64_t v47 = *(void *)(v49 - 8);
  double v7 = __chkstk_darwin(v6);
  uint64_t v27 = (char *)&v26 - v8;
  uint64_t v57 = a1;
  uint64_t v55 = v9;
  uint64_t v56 = v46;
  uint64_t v54 = v50;
  (*(void (**)(double))(v10 + 16))(v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))( v50 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_siriLocale,  v27,  v49);
  uint64_t v11 = swift_bridgeObjectRetain(v46);
  uint64_t v12 = v46;
  uint64_t v13 = (void *)(v50 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_utterance);
  *uint64_t v13 = v35;
  v13[1] = v12;
  uint64_t v28 = Locale.identifier.getter(v11);
  uint64_t v30 = v14;
  uint64_t v29 = sub_63FFC();
  uint64_t v31 = &v53;
  uint64_t v33 = 0LL;
  int v34 = 1;
  static NLGDialogScorers.createTFIDFScorer(query:localeIdentifier:stopWords:using:overwriteSimilarityScore:)( v35,  v46,  v28,  v30);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v30);
  uint64_t v39 = &unk_D9000;
  uint64_t v15 = sub_C094( v31,  (void *)(v50 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_textScorer));
  uint64_t v16 = Locale.identifier.getter(v15);
  uint64_t v17 = v50;
  uint64_t v32 = v16;
  uint64_t v37 = v18;
  uint64_t v36 = sub_63FFC();
  uint64_t v38 = &v52;
  static NLGDialogScorers.createTFIDFScorer(query:localeIdentifier:stopWords:using:overwriteSimilarityScore:)( v35,  v46,  v32,  v37);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v37);
  uint64_t v40 = &unk_D9000;
  sub_C094( v38,  (void *)(v17 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_keywordScorer));
  uint64_t v43 = sub_5150(&qword_D8120);
  uint64_t v42 = _allocateUninitializedArray<A>(_:)(2LL, v43);
  uint64_t v41 = v19;
  sub_454C(v17 + v39[319], v19);
  Swift::Float v20 = Float.init(_:)(0.333333333);
  uint64_t v21 = v40;
  uint64_t v22 = v41;
  *(Swift::Float *)(v41 + 40) = v20;
  sub_454C(v17 + v21[316], v22 + 48);
  Swift::Float v23 = Float.init(_:)(0.666666667);
  uint64_t v24 = v42;
  *(Swift::Float *)(v41 + 8sub_1D580(v0 + 8) = v23;
  sub_6648();
  uint64_t v44 = v24;
  uint64_t v45 = &v51;
  static NLGDialogScorers.createWeightedScorer(adding:)();
  swift_bridgeObjectRelease(v44);
  sub_C094( v45,  (void *)(v17 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_weightedScorer));
  swift_bridgeObjectRelease(v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
  return v50;
}

uint64_t sub_63F60(void *a1)
{
  uint64_t v10 = a1;
  uint64_t v3 = a1[3];
  uint64_t v2 = a1[4];
  sub_8C74(a1, v3);
  dispatch thunk of NLGDialog.content.getter(v3, v2);
  uint64_t v5 = v8;
  uint64_t v4 = v9;
  sub_8C74(v7, v8);
  uint64_t v6 = dispatch thunk of NLGDialogContent.text.getter(v5, v4);
  sub_4598(v7);
  return v6;
}

void *sub_63FFC()
{
  return sub_64408(0LL);
}

uint64_t sub_64014(void *a1)
{
  uint64_t v10 = a1;
  uint64_t v3 = a1[3];
  uint64_t v2 = a1[4];
  sub_8C74(a1, v3);
  dispatch thunk of NLGDialog.content.getter(v3, v2);
  uint64_t v5 = v8;
  uint64_t v4 = v9;
  sub_8C74(v7, v8);
  uint64_t v6 = dispatch thunk of NLGDialogContent.keywords.getter(v5, v4);
  sub_4598(v7);
  return v6;
}

uint64_t sub_640B0(uint64_t a1)
{
  uint64_t v10 = 0LL;
  uint64_t v11 = a1;
  sub_454C( v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_weightedScorer,  (uint64_t)v7);
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  sub_8C74(v7, v8);
  uint64_t v6 = dispatch thunk of NLGDialogScorer.score(dialogs:)(a1, v3, v4);
  sub_4598(v7);
  return v6;
}

uint64_t sub_6413C()
{
  uint64_t v3 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_siriLocale;
  uint64_t v1 = type metadata accessor for Locale(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(v0 + v3);
  sub_8DD8(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_utterance);
  sub_4598((void *)(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_textScorer));
  sub_4598((void *)(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_keywordScorer));
  sub_4598((void *)(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin20RelevantDialogScorer_weightedScorer));
  return v4;
}

uint64_t sub_641D0()
{
  uint64_t v0 = sub_6413C();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_64210(uint64_t a1)
{
  return sub_640B0(a1);
}

uint64_t type metadata accessor for GeneralJokeRetriever(uint64_t a1)
{
  uint64_t v2 = qword_D8150;
  if (!qword_D8150) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GeneralJokeRetriever);
  }
  return v2;
}

uint64_t type metadata accessor for RelevantDialogScorer(uint64_t a1)
{
  uint64_t v2 = qword_D8328;
  if (!qword_D8328) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RelevantDialogScorer);
  }
  return v2;
}

unint64_t sub_642F8()
{
  uint64_t v3 = qword_D8100;
  if (!qword_D8100)
  {
    uint64_t v0 = type metadata accessor for RelevantDialogScorer(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7930, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8100);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_64368()
{
  uint64_t v3 = qword_D8118;
  if (!qword_D8118)
  {
    uint64_t v0 = sub_8D64(&qword_D8110);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8118);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_643D8()
{
  return swift_deallocObject(v0, 20LL);
}

uint64_t sub_64400(uint64_t a1)
{
  return nullsub_1(a1);
}

void *sub_64408(void *result)
{
  uint64_t v3 = result;
  if ((uint64_t)result < 0)
  {
    __break(1u);
  }

  else if ((uint64_t)result > 0)
  {
    uint64_t v1 = static Array._allocateBufferUninitialized(minimumCapacity:)(result, &type metadata for String);
    *(void *)(v1 + swift_beginAccess(v0 + 16) = v3;
    return (void *)v1;
  }

  else
  {
    swift_retain(&_swiftEmptyArrayStorage);
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

uint64_t sub_64498()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_644C0()
{
  return swift_deallocObject(v0, 17LL);
}

Swift::Double sub_644E8(float (*a1)(void))
{
  Swift::Float v1 = a1();
  return Double.init(_:)(v1);
}

uint64_t sub_6450C()
{
  return swift_deallocObject(v2, 32LL);
}

Swift::Double sub_64548()
{
  return sub_644E8(*(float (**)(void))(v0 + 16));
}

uint64_t sub_64554()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_64590(void *a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  double v4 = a4();
  uint64_t v7 = *a1;
  uint64_t v5 = *a1 + 8LL;
  double v9 = v4;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v7, v5);
  uint64_t result = a1;
  *a1 = v7 + 8;
  return result;
}

uint64_t sub_645F4()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_64630(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_64590(a1, a2, a3, *(double (**)(void))(v3 + 16));
}

void *type metadata accessor for JokeCATs()
{
  return &unk_CF090;
}

void *type metadata accessor for JokeButtons()
{
  return &unk_CF0B0;
}

uint64_t sub_64664()
{
  return type metadata accessor for GeneralJokeRetriever(0LL);
}

uint64_t sub_6467C(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for NLGCATIdentifier(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[0] = *(void *)(v1 - 8) + 64LL;
    v6[1] = "(";
    void v6[2] = &unk_B7890;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 3LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_6474C()
{
  return type metadata accessor for SpecificJokeRetriever(0LL);
}

uint64_t type metadata accessor for SpecificJokeRetriever(uint64_t a1)
{
  uint64_t v2 = qword_D8230;
  if (!qword_D8230) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SpecificJokeRetriever);
  }
  return v2;
}

uint64_t sub_647C8(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for NLGCATIdentifier(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[0] = *(void *)(v1 - 8) + 64LL;
    v6[1] = &unk_B78C8;
    void v6[2] = &unk_B7890;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 3LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_64898()
{
  return type metadata accessor for RelevantDialogScorer(0LL);
}

uint64_t sub_648B0(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for Locale(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[0] = *(void *)(v1 - 8) + 64LL;
    v6[1] = &unk_B78F8;
    void v6[2] = "(";
    void v6[3] = "(";
    v6[4] = "(";
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 5LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_64990()
{
  if (qword_D6A98 != -1) {
    swift_once(&qword_D6A98, sub_649E0);
  }
  return v1;
}

uint64_t sub_649E0(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t SocialConversationFeatureFlagManager.isMultiturnEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 0;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

unint64_t sub_64A54()
{
  uint64_t v2 = qword_D83D8;
  if (!qword_D83D8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7A98, &unk_CF5B8);
    atomic_store(WitnessTable, (unint64_t *)&qword_D83D8);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_64AC0(uint64_t a1)
{
  uint64_t v136 = a1;
  uint64_t v188 = 0LL;
  char v187 = 0;
  uint64_t v130 = 0LL;
  uint64_t v134 = type metadata accessor for Logger(0LL);
  uint64_t v133 = *(void *)(v134 - 8);
  unint64_t v131 = (*(void *)(v133 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v2 = __chkstk_darwin(v1);
  uint64_t v3 = (char *)v120 - v131;
  uint64_t v132 = (char *)v120 - v131;
  uint64_t v188 = v4;
  int v140 = isFeatureEnabled(_:)(v2);
  int v139 = 1;
  char v187 = v140 & 1;
  uint64_t v5 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v3, v5, v134);
  unint64_t v135 = v186;
  sub_454C(v136, (uint64_t)v186);
  uint64_t v137 = 56LL;
  uint64_t v156 = 7LL;
  uint64_t v148 = swift_allocObject(&unk_CF118, 56LL, 7LL);
  sub_C094(v135, (void *)(v148 + 16));
  uint64_t v138 = (char *)&v185 + 4;
  sub_454C(v136, (uint64_t)&v185 + 4);
  uint64_t v150 = swift_allocObject(&unk_CF140, v137, v156);
  sub_C094(v138, (void *)(v150 + 16));
  uint64_t v153 = 17LL;
  uint64_t v6 = swift_allocObject(&unk_CF168, 17LL, v156);
  uint64_t v157 = v6;
  *(_BYTE *)(v6 + swift_beginAccess(v0 + 16) = v140 & v139;
  uint64_t v177 = (os_log_s *)Logger.logObject.getter(v6);
  int v178 = static os_log_type_t.debug.getter();
  uint64_t v143 = &v184;
  uint64_t v184 = 52LL;
  unint64_t v141 = sub_7788();
  unint64_t v142 = sub_77F0();
  unint64_t v7 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v185, v143, &type metadata for UInt32, &type metadata for Int, v141, v142, v7);
  uint32_t v144 = v185;
  uint64_t v8 = swift_allocObject(&unk_CF190, v153, v156);
  uint64_t v9 = v153;
  uint64_t v10 = v156;
  uint64_t v159 = v8;
  int v152 = 32;
  *(_BYTE *)(v8 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v11 = swift_allocObject(&unk_CF1B8, v9, v10);
  uint64_t v12 = v156;
  uint64_t v160 = v11;
  int v154 = 8;
  *(_BYTE *)(v11 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v155 = 32LL;
  uint64_t v13 = swift_allocObject(&unk_CF1E0, 32LL, v12);
  uint64_t v14 = v155;
  uint64_t v15 = v156;
  uint64_t v145 = v13;
  *(void *)(v13 + swift_beginAccess(v0 + 16) = sub_65FAC;
  *(void *)(v13 + 24) = 0LL;
  uint64_t v16 = swift_allocObject(&unk_CF208, v14, v15);
  uint64_t v17 = v155;
  uint64_t v18 = v156;
  uint64_t v19 = v16;
  uint64_t v20 = v145;
  uint64_t v146 = v19;
  *(void *)(v19 + swift_beginAccess(v0 + 16) = sub_1CEFC;
  *(void *)(v19 + 24) = v20;
  uint64_t v21 = swift_allocObject(&unk_CF230, v17, v18);
  uint64_t v22 = v153;
  uint64_t v23 = v156;
  uint64_t v24 = v21;
  uint64_t v25 = v146;
  uint64_t v161 = v24;
  *(void *)(v24 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = swift_allocObject(&unk_CF258, v22, v23);
  uint64_t v27 = v153;
  uint64_t v28 = v156;
  uint64_t v162 = v26;
  *(_BYTE *)(v26 + swift_beginAccess(v0 + 16) = v152;
  uint64_t v29 = swift_allocObject(&unk_CF280, v27, v28);
  uint64_t v30 = v155;
  uint64_t v31 = v156;
  uint64_t v163 = v29;
  *(_BYTE *)(v29 + swift_beginAccess(v0 + 16) = v154;
  uint64_t v32 = swift_allocObject(&unk_CF2A8, v30, v31);
  uint64_t v33 = v155;
  uint64_t v34 = v156;
  uint64_t v147 = v32;
  *(void *)(v32 + swift_beginAccess(v0 + 16) = sub_65FBC;
  *(void *)(v32 + 24) = 0LL;
  uint64_t v35 = swift_allocObject(&unk_CF2D0, v33, v34);
  uint64_t v36 = v153;
  uint64_t v37 = v156;
  uint64_t v38 = v35;
  uint64_t v39 = v147;
  uint64_t v164 = v38;
  *(void *)(v38 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v38 + 24) = v39;
  uint64_t v40 = swift_allocObject(&unk_CF2F8, v36, v37);
  uint64_t v41 = v153;
  uint64_t v42 = v156;
  uint64_t v165 = v40;
  *(_BYTE *)(v40 + swift_beginAccess(v0 + 16) = v152;
  uint64_t v43 = swift_allocObject(&unk_CF320, v41, v42);
  uint64_t v44 = v155;
  uint64_t v45 = v156;
  uint64_t v166 = v43;
  *(_BYTE *)(v43 + swift_beginAccess(v0 + 16) = v154;
  uint64_t v46 = swift_allocObject(&unk_CF348, v44, v45);
  uint64_t v47 = v155;
  uint64_t v48 = v156;
  uint64_t v49 = v46;
  uint64_t v50 = v148;
  uint64_t v149 = v49;
  *(void *)(v49 + swift_beginAccess(v0 + 16) = sub_66090;
  *(void *)(v49 + 24) = v50;
  uint64_t v51 = swift_allocObject(&unk_CF370, v47, v48);
  uint64_t v52 = v153;
  uint64_t v53 = v156;
  uint64_t v54 = v51;
  uint64_t v55 = v149;
  uint64_t v167 = v54;
  *(void *)(v54 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v54 + 24) = v55;
  uint64_t v56 = swift_allocObject(&unk_CF398, v52, v53);
  uint64_t v57 = v153;
  uint64_t v58 = v156;
  uint64_t v168 = v56;
  *(_BYTE *)(v56 + swift_beginAccess(v0 + 16) = v152;
  uint64_t v59 = swift_allocObject(&unk_CF3C0, v57, v58);
  uint64_t v60 = v155;
  uint64_t v61 = v156;
  uint64_t v169 = v59;
  *(_BYTE *)(v59 + swift_beginAccess(v0 + 16) = v154;
  uint64_t v62 = swift_allocObject(&unk_CF3E8, v60, v61);
  uint64_t v63 = v155;
  uint64_t v64 = v156;
  uint64_t v65 = v62;
  uint64_t v66 = v150;
  uint64_t v151 = v65;
  *(void *)(v65 + swift_beginAccess(v0 + 16) = sub_66140;
  *(void *)(v65 + 24) = v66;
  uint64_t v67 = swift_allocObject(&unk_CF410, v63, v64);
  uint64_t v68 = v153;
  uint64_t v69 = v156;
  uint64_t v70 = v67;
  uint64_t v71 = v151;
  uint64_t v170 = v70;
  *(void *)(v70 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v70 + 24) = v71;
  uint64_t v72 = swift_allocObject(&unk_CF438, v68, v69);
  uint64_t v73 = v153;
  uint64_t v74 = v156;
  uint64_t v171 = v72;
  *(_BYTE *)(v72 + swift_beginAccess(v0 + 16) = v152;
  uint64_t v75 = swift_allocObject(&unk_CF460, v73, v74);
  uint64_t v76 = v155;
  uint64_t v77 = v156;
  uint64_t v172 = v75;
  *(_BYTE *)(v75 + swift_beginAccess(v0 + 16) = v154;
  uint64_t v78 = swift_allocObject(&unk_CF488, v76, v77);
  uint64_t v79 = v155;
  uint64_t v80 = v156;
  uint64_t v81 = v78;
  uint64_t v82 = v157;
  uint64_t v158 = v81;
  *(void *)(v81 + swift_beginAccess(v0 + 16) = sub_661E8;
  *(void *)(v81 + 24) = v82;
  uint64_t v83 = swift_allocObject(&unk_CF4B0, v79, v80);
  uint64_t v84 = v158;
  uint64_t v174 = v83;
  *(void *)(v83 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v83 + 24) = v84;
  uint64_t v176 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v173 = _allocateUninitializedArray<A>(_:)(15LL, v176);
  uint64_t v175 = v85;
  swift_retain();
  uint64_t v86 = v159;
  uint64_t v87 = v175;
  *uint64_t v175 = sub_884C;
  v87[1] = v86;
  swift_retain();
  uint64_t v88 = v160;
  uint64_t v89 = v175;
  v175[2] = sub_884C;
  v89[3] = v88;
  swift_retain();
  uint64_t v90 = v161;
  uint64_t v91 = v175;
  v175[4] = sub_8900;
  v91[5] = v90;
  swift_retain();
  uint64_t v92 = v162;
  uint64_t v93 = v175;
  v175[6] = sub_884C;
  v93[7] = v92;
  swift_retain();
  uint64_t v94 = v163;
  unsigned int v95 = v175;
  v175[8] = sub_884C;
  v95[9] = v94;
  swift_retain();
  uint64_t v96 = v164;
  uint64_t v97 = v175;
  v175[10] = sub_8900;
  v97[11] = v96;
  swift_retain();
  uint64_t v98 = v165;
  uint64_t v99 = v175;
  v175[12] = sub_884C;
  v99[13] = v98;
  swift_retain();
  uint64_t v100 = v166;
  uint64_t v101 = v175;
  v175[14] = sub_884C;
  v101[15] = v100;
  swift_retain();
  uint64_t v102 = v167;
  unint64_t v103 = v175;
  v175[16] = sub_8900;
  v103[17] = v102;
  swift_retain();
  uint64_t v104 = v168;
  uint64_t v105 = v175;
  v175[18] = sub_884C;
  v105[19] = v104;
  swift_retain();
  uint64_t v106 = v169;
  int v107 = v175;
  v175[20] = sub_884C;
  v107[21] = v106;
  swift_retain();
  uint64_t v108 = v170;
  uint64_t v109 = v175;
  v175[22] = sub_8900;
  v109[23] = v108;
  swift_retain();
  uint64_t v110 = v171;
  uint64_t v111 = v175;
  v175[24] = sub_884C;
  v111[25] = v110;
  swift_retain();
  uint64_t v112 = v172;
  uint64_t v113 = v175;
  v175[26] = sub_884C;
  v113[27] = v112;
  swift_retain();
  uint64_t v114 = v173;
  uint64_t v115 = v174;
  uint64_t v116 = v175;
  v175[28] = sub_8900;
  v116[29] = v115;
  sub_6648();
  swift_bridgeObjectRelease(v114);
  if (os_log_type_enabled(v177, (os_log_type_t)v178))
  {
    uint64_t v117 = v130;
    uint64_t v123 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(52LL, &type metadata for UInt8);
    uint64_t v122 = sub_5150(&qword_D6B60);
    uint64_t v124 = sub_74D0(0LL, v122, v122);
    uint64_t v125 = sub_74D0(5LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v126 = &v183;
    double v183 = v123;
    uint64_t v127 = &v182;
    uint64_t v182 = v124;
    uint64_t v128 = &v181;
    uint64_t v181 = v125;
    sub_7528(2LL, &v183);
    sub_7528(5LL, v126);
    uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v180 = v159;
    sub_753C(&v179, (uint64_t)v126, (uint64_t)v127, (uint64_t)v128);
    uint64_t v129 = v117;
    if (v117)
    {
      __break(1u);
    }

    else
    {
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v160;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      uint64_t v121 = 0LL;
      uint64_t v118 = v121;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v180 = v161;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[12] = v118;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v162;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[11] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v163;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[10] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v180 = v164;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[9] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v165;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      uint64_t v120[8] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v166;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[7] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v180 = v167;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[6] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v168;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[5] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v169;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[4] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v180 = v170;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[3] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v171;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[2] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v180 = v172;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      v120[1] = 0LL;
      uint64_t v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v180 = v174;
      sub_753C(&v179, (uint64_t)&v183, (uint64_t)&v182, (uint64_t)&v181);
      _os_log_impl(&dword_0, v177, (os_log_type_t)v178, "%s.%s %s/%s=%s", v123, v144);
      sub_7580(v124, 0LL);
      sub_7580(v125, 5LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v134);
  return v140 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isResponseFrameworkEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 1;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isGreetingRefreshEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 2;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isSiriRemembersEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 3;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isBobcatJokesEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 4;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isNewMultiturnEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 5;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isBobcatJokesLocaleExpansionEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 6;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isJokesUserFeedbackEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 7;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

uint64_t SocialConversationFeatureFlagManager.isSocialHintsEnabled.getter()
{
  void v2[3] = &unk_CF5B8;
  v2[4] = sub_64A54();
  LOBYTE(v2[0]) = 8;
  char v1 = sub_64AC0((uint64_t)v2);
  sub_4598(v2);
  return v1 & 1;
}

ValueMetadata *sub_65FAC()
{
  return &type metadata for SocialConversationFeatureFlagManager;
}

uint64_t sub_65FBC()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("logAndReturn(flag:)", 0x13uLL, 1)._countAndFlagsBits;
}

uint64_t sub_65FE8(void *a1)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  sub_8C74(a1, v5);
  v6[0] = dispatch thunk of FeatureFlagsKey.domain.getter(v5, v4);
  v6[1] = v1;
  char v7 = v2;
  return String.init<A>(describing:)(v6, &type metadata for StaticString, &protocol witness table for StaticString);
}

uint64_t sub_66054()
{
  return swift_deallocObject(v2, 56LL);
}

uint64_t sub_66090()
{
  return sub_65FE8((void *)(v0 + 16));
}

uint64_t sub_66098(void *a1)
{
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  sub_8C74(a1, v5);
  v6[0] = dispatch thunk of FeatureFlagsKey.feature.getter(v5, v4);
  v6[1] = v1;
  char v7 = v2;
  return String.init<A>(describing:)(v6, &type metadata for StaticString, &protocol witness table for StaticString);
}

uint64_t sub_66104()
{
  return swift_deallocObject(v2, 56LL);
}

uint64_t sub_66140()
{
  return sub_66098((void *)(v0 + 16));
}

uint64_t sub_66148(char a1)
{
  if ((a1 & 1) != 0) {
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("on", 2uLL, 1)._countAndFlagsBits;
  }
  else {
    return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("off", 3uLL, 1)._countAndFlagsBits;
  }
}

uint64_t sub_661C0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_661E8()
{
  return sub_66148(*(_BYTE *)(v0 + 16) & 1);
}

uint64_t sub_661F4()
{
  return SocialConversationFeatureFlagManager.isMultiturnEnabled.getter() & 1;
}

uint64_t sub_6620C()
{
  return SocialConversationFeatureFlagManager.isResponseFrameworkEnabled.getter() & 1;
}

uint64_t sub_66224()
{
  return SocialConversationFeatureFlagManager.isGreetingRefreshEnabled.getter() & 1;
}

uint64_t sub_6623C()
{
  return SocialConversationFeatureFlagManager.isSiriRemembersEnabled.getter() & 1;
}

uint64_t sub_66254()
{
  return SocialConversationFeatureFlagManager.isBobcatJokesEnabled.getter() & 1;
}

uint64_t sub_6626C()
{
  return SocialConversationFeatureFlagManager.isNewMultiturnEnabled.getter() & 1;
}

uint64_t sub_66284()
{
  return SocialConversationFeatureFlagManager.isBobcatJokesLocaleExpansionEnabled.getter() & 1;
}

uint64_t sub_6629C()
{
  return SocialConversationFeatureFlagManager.isJokesUserFeedbackEnabled.getter() & 1;
}

uint64_t sub_662B4()
{
  return SocialConversationFeatureFlagManager.isSocialHintsEnabled.getter() & 1;
}

const char *sub_662CC()
{
  return "SiriSocialConversation";
}

void sub_662FC(char a1)
{
  __asm { BR              X8 }

uint64_t sub_663B8()
{
  return v1;
}

void sub_66524(char a1)
{
  __asm { BR              X8 }

uint64_t sub_66568( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned __int8 a12)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_665F0
                                                                                       + *((int *)qword_666A8 + a12)))( a1,  a2,  a3,  a4,  a5,  a6);
}

BOOL sub_66600()
{
  return v1 == 0;
}

void sub_666CC(uint64_t a1, char a2)
{
  __asm { BR              X8 }

uint64_t sub_6671C()
{
  v1[1] = 0LL;
  v1[0] = 0LL;
  return Hasher.combine<A>(_:)(v1, &type metadata for Int, &protocol witness table for Int);
}

uint64_t sub_667DC(char a1)
{
  v3[1] = a1;
  v3[0] = a1;
  unint64_t v1 = sub_66CC8();
  return _hashValue<A>(for:)(v3, &unk_CF5B8, v1);
}

uint64_t sub_66824(char *a1)
{
  return v1 & 1;
}

uint64_t sub_66844()
{
  return sub_667DC(*v0);
}

void sub_6685C(uint64_t a1)
{
}

const char *sub_66874()
{
  return sub_662CC();
}

void sub_6688C()
{
}

uint64_t sub_668A4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_668CC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_668F4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66930()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6696C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_669A8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_669D0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_669F8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66A34()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66A70()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_66A98()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_66AC0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66AFC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66B38()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_66B60()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_66B88()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66BC4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66C00()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_66C28()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_66C50()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_66C8C()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_66CC8()
{
  uint64_t v2 = qword_D83E0;
  if (!qword_D83E0)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7A58, &unk_CF5B8);
    atomic_store(WitnessTable, (unint64_t *)&qword_D83E0);
    return WitnessTable;
  }

  return v2;
}

ValueMetadata *type metadata accessor for SocialConversationFeatureFlagManager()
{
  return &type metadata for SocialConversationFeatureFlagManager;
}

_BYTE *sub_66D48(_BYTE *result, _BYTE *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_66D54(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 <= 0xF7) {
      goto LABEL_15;
    }
    unsigned int v7 = ((a2 + 8) >> 8) + 1;
    int v8 = 1;
    if (v7 >= 0x100)
    {
      if (v7 >= 0x10000) {
        int v2 = 4;
      }
      else {
        int v2 = 2;
      }
      int v8 = v2;
    }

    if (v8 == 1) {
      int v6 = a1[1];
    }
    else {
      int v6 = v8 == 2 ? *(unsigned __int16 *)(a1 + 1) : *(_DWORD *)(a1 + 1);
    }
    if (v6)
    {
      int v5 = (*a1 | ((v6 - 1) << 8)) + 247;
    }

    else
    {
LABEL_15:
      int v3 = *a1 - 9;
      if (v3 < 0) {
        int v3 = -1;
      }
      int v5 = v3;
    }
  }

  else
  {
    int v5 = -1;
  }

  return (v5 + 1);
}

_BYTE *sub_66F04(_BYTE *result, unsigned int a2, unsigned int a3)
{
  int v7 = 0;
  if (a3 > 0xF7)
  {
    unsigned int v5 = ((a3 + 8) >> 8) + 1;
    int v6 = 1;
    if (v5 >= 0x100)
    {
      if (v5 >= 0x10000) {
        int v3 = 4;
      }
      else {
        int v3 = 2;
      }
      int v6 = v3;
    }

    int v7 = v6;
  }

  if (a2 > 0xF7)
  {
    unsigned int v4 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = v4;
      }

      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = v4;
      }

      else
      {
        *(_DWORD *)(result + 1) = v4;
      }
    }
  }

  else
  {
    if (v7)
    {
      if (v7 == 1)
      {
        result[1] = 0;
      }

      else if (v7 == 2)
      {
        *(_WORD *)(result + 1) = 0;
      }

      else
      {
        *(_DWORD *)(result + 1) = 0;
      }
    }

    if (a2) {
      *uint64_t result = a2 + 8;
    }
  }

  return result;
}

uint64_t sub_67148(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_67150(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

void *type metadata accessor for SocialConversationFeatureFlags()
{
  return &unk_CF5B8;
}

unint64_t sub_6716C()
{
  return sub_67180();
}

unint64_t sub_67180()
{
  uint64_t v2 = qword_D83E8;
  if (!qword_D83E8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7A30, &unk_CF5B8);
    atomic_store(WitnessTable, (unint64_t *)&qword_D83E8);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_671EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  return sub_677A4(a1, a2, a3, a4);
}

uint64_t sub_6724C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_retain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_67298(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v1 + swift_beginAccess(v1 + 16) = a1;
  swift_release(v2);
  swift_endAccess(v5);
  return swift_release(a1);
}

uint64_t sub_672F4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v11 = v1[10];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v11);
  uint64_t result = swift_endAccess(v12);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v11;
  return result;
}

void *sub_673D4(void *a1)
{
  uint64_t result = a1;
  sub_1B21C(a1);
  return result;
}

uint64_t (*sub_67430())(uint64_t a1)
{
  return sub_440C;
}

void *sub_67470()
{
  uint64_t v3 = *(void **)(v0 + 88);
  id v1 = v3;
  swift_endAccess(v4);
  return v3;
}

void sub_674BC(void *a1)
{
  id v2 = a1;
  swift_beginAccess(v1 + 88);
  uint64_t v3 = *(void **)(v1 + 88);
  *(void *)(v1 + 8sub_1D580(v0 + 8) = a1;

  swift_endAccess(v5);
}

uint64_t (*sub_67518())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_67558@<X0>(uint64_t a1@<X8>)
{
  return swift_endAccess(v4);
}

uint64_t sub_675A8(void *a1)
{
  return sub_4598(a1);
}

uint64_t (*sub_67614())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_67654@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  sub_6794C(v3, a1);
  return swift_endAccess(v5);
}

uint64_t sub_676AC(uint64_t a1)
{
  uint64_t v9 = a1;
  unint64_t v5 = (*(void *)(*(void *)(sub_5150(&qword_D83F8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v6 = (unint64_t *)((char *)&v5 - v5);
  sub_6794C(v3, (unint64_t *)((char *)&v5 - v5));
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  uint64_t v8 = &v10;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  sub_67B10(v6, v7);
  swift_endAccess(v8);
  return sub_67EC0(v9);
}

uint64_t (*sub_6775C())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_677A4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v19 = a1;
  uint64_t v18 = a2;
  uint64_t v17 = a3;
  uint64_t v16 = a4;
  uint64_t v15 = v4;
  uint64_t v8 = OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button;
  uint64_t v5 = type metadata accessor for DialogServiceButton(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 56LL))((char *)v4 + v8, 1LL);
  swift_retain();
  v4[2] = a1;
  sub_1B508(a2);
  memcpy(v4 + 3, a2, 0x40uLL);
  id v6 = a3;
  v4[11] = a3;
  sub_454C((uint64_t)a4, (uint64_t)v14);
  sub_C094(v14, v4 + 12);
  sub_4598(a4);

  sub_1B21C(a2);
  swift_release();
  return v13;
}

void *sub_678B0(void *a1, void *a2)
{
  *a2 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  a2[1] = v2;
  swift_bridgeObjectRelease(v3);
  a2[2] = a1[2];
  uint64_t v4 = a2[3];
  a2[3] = a1[3];
  swift_bridgeObjectRelease(v4);
  a2[4] = a1[4];
  uint64_t v5 = a2[5];
  a2[5] = a1[5];
  swift_bridgeObjectRelease(v5);
  a2[6] = a1[6];
  uint64_t v6 = a2[7];
  a2[7] = a1[7];
  swift_bridgeObjectRelease(v6);
  return a2;
}

void *sub_6794C(void *a1, void *a2)
{
  uint64_t v15 = type metadata accessor for DialogServiceButton(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v16 + 48))(a1, 1LL))
  {
    uint64_t v4 = sub_5150(&qword_D83F8);
    memcpy(a2, a1, *(void *)(*(void *)(v4 - 8) + 64LL));
  }

  else
  {
    *a2 = *a1;
    uint64_t v8 = a1[1];
    swift_bridgeObjectRetain(v8);
    a2[1] = v8;
    __dst = (char *)a2 + *(int *)(v15 + 20);
    __src = (char *)a1 + *(int *)(v15 + 20);
    uint64_t v11 = type metadata accessor for URL(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(__src, 1LL))
    {
      uint64_t v2 = sub_5150(&qword_D7378);
      memcpy(__dst, __src, *(void *)(*(void *)(v2 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, __src, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0LL, 1LL, v11);
    }

    uint64_t v3 = *(int *)(v15 + 24);
    uint64_t v6 = (char *)a2 + v3;
    *(void *)((char *)a2 + vswift_beginAccess(v1 + 3) = *(void *)((char *)a1 + v3);
    uint64_t v7 = *(void *)((char *)a1 + v3 + 8);
    swift_bridgeObjectRetain(v7);
    *((void *)v6 + 1) = v7;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a2, 0LL, 1LL, v15);
  }

  return a2;
}

void *sub_67B10(void *a1, void *a2)
{
  uint64_t v23 = type metadata accessor for DialogServiceButton(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48);
  if (((unsigned int (*)(void *, uint64_t))v25)(a2, 1LL))
  {
    if (v25(a1, 1LL, v23))
    {
      uint64_t v10 = sub_5150(&qword_D83F8);
      memcpy(a2, a1, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      *(_OWORD *)a2 = *(_OWORD *)a1;
      uint64_t v12 = (char *)a2 + *(int *)(v23 + 20);
      uint64_t v13 = (char *)a1 + *(int *)(v23 + 20);
      uint64_t v14 = type metadata accessor for URL(0LL);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v15 + 48))(v13, 1LL))
      {
        uint64_t v9 = sub_5150(&qword_D7378);
        memcpy(v12, v13, *(void *)(*(void *)(v9 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0LL, 1LL, v14);
      }

      *(_OWORD *)((char *)a2 + *(int *)(v23 + swift_release(*(void *)(v0 + 24)) = *(_OWORD *)((char *)a1 + *(int *)(v23 + 24));
      (*(void (**)(void))(v24 + 56))();
    }
  }

  else if (v25(a1, 1LL, v23))
  {
    sub_18AC8((uint64_t)a2);
    uint64_t v8 = sub_5150(&qword_D83F8);
    memcpy(a2, a1, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    *a2 = *a1;
    uint64_t v2 = a2[1];
    a2[1] = a1[1];
    swift_bridgeObjectRelease(v2);
    __dst = (char *)a2 + *(int *)(v23 + 20);
    __src = (char *)a1 + *(int *)(v23 + 20);
    uint64_t v18 = type metadata accessor for URL(0LL);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (((unsigned int (*)(char *, uint64_t))v20)(__dst, 1LL))
    {
      if (v20(__src, 1LL, v18))
      {
        uint64_t v4 = sub_5150(&qword_D7378);
        memcpy(__dst, __src, *(void *)(*(void *)(v4 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, __src, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0LL, 1LL, v18);
      }
    }

    else if (v20(__src, 1LL, v18))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(__dst, v18);
      uint64_t v3 = sub_5150(&qword_D7378);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(__dst, __src, v18);
    }

    uint64_t v5 = *(int *)(v23 + 24);
    uint64_t v6 = (void *)((char *)a2 + v5);
    void *v6 = *(void *)((char *)a1 + v5);
    uint64_t v7 = *(void *)((char *)a2 + v5 + 8);
    v6[1] = *(void *)((char *)a1 + v5 + 8);
    swift_bridgeObjectRelease(v7);
  }

  return a2;
}

uint64_t sub_67EC0(uint64_t a1)
{
  uint64_t v6 = type metadata accessor for DialogServiceButton(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(a1, 1LL))
  {
    swift_bridgeObjectRelease(*(void *)(a1 + 8));
    uint64_t v2 = a1 + *(int *)(v6 + 20);
    uint64_t v3 = type metadata accessor for URL(0LL);
    uint64_t v4 = *(void *)(v3 - 8);
    swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(v6 + 24) + 8));
  }

  return a1;
}

uint64_t sub_67FA0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, void *a8@<X8>)
{
  uint64_t v325 = a8;
  uint64_t v346 = a1;
  uint64_t v347 = a2;
  uint64_t v348 = a3;
  uint64_t v349 = a4;
  uint64_t v350 = a5;
  uint64_t v351 = a6;
  id v352 = a7;
  Swift::String v420 = 0LL;
  uint64_t v419 = 0LL;
  uint64_t v418 = 0LL;
  uint64_t v416 = 0LL;
  uint64_t v417 = 0LL;
  uint64_t v414 = 0LL;
  uint64_t v415 = 0LL;
  uint64_t v412 = 0LL;
  uint64_t v413 = 0LL;
  uint64_t v411 = 0LL;
  uint64_t v410 = 0LL;
  Swift::String v407 = (Swift::String)0LL;
  BOOL v406 = 0;
  Swift::String v403 = (Swift::String)0LL;
  BOOL v402 = 0;
  id v399 = 0LL;
  id v398 = 0LL;
  uint64_t v326 = 0LL;
  uint64_t v396 = 0LL;
  uint64_t v423 = 0LL;
  unint64_t v424 = 0LL;
  uint64_t v394 = 0LL;
  uint64_t v395 = 0LL;
  unint64_t v327 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  uint64_t v328 = (char *)&v192 - v327;
  unint64_t v329 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v330 = (char *)&v192 - v329;
  uint64_t v335 = 0LL;
  uint64_t v331 = type metadata accessor for URL(0LL);
  uint64_t v332 = *(void *)(v331 - 8);
  unint64_t v333 = (*(void *)(v332 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v334 = (char *)&v192 - v333;
  Swift::String v420 = (char *)&v192 - v333;
  uint64_t v336 = type metadata accessor for DialogServiceButton(v12);
  unint64_t v337 = (*(void *)(*(void *)(v336 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v14 = __chkstk_darwin(v13);
  uint64_t v338 = (char *)&v192 - v337;
  uint64_t v419 = (char *)&v192 - v337;
  unint64_t v339 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v14);
  uint64_t v340 = (char *)&v192 - v339;
  uint64_t v418 = (char *)&v192 - v339;
  uint64_t v345 = type metadata accessor for Logger(v16);
  uint64_t v344 = *(void *)(v345 - 8);
  unint64_t v342 = (*(void *)(v344 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v17);
  uint64_t v18 = (char *)&v192 - v342;
  uint64_t v343 = (char *)&v192 - v342;
  uint64_t v416 = v19;
  uint64_t v417 = v20;
  uint64_t v414 = v21;
  uint64_t v415 = v22;
  uint64_t v412 = v23;
  uint64_t v413 = v24;
  uint64_t v411 = v25;
  uint64_t v410 = v26;
  uint64_t v27 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v344 + 16))(v18, v27, v345);
  swift_bridgeObjectRetain(v347);
  uint64_t v366 = 32LL;
  uint64_t v367 = 7LL;
  uint64_t v28 = swift_allocObject(&unk_CF628, 32LL, 7LL);
  uint64_t v29 = v347;
  uint64_t v30 = v28;
  uint64_t v31 = v349;
  uint64_t v357 = v30;
  *(void *)(v30 + swift_beginAccess(v1 + 16) = v346;
  *(void *)(v30 + swift_beginAccess(v0 + 24) = v29;
  swift_bridgeObjectRetain(v31);
  uint64_t v32 = swift_allocObject(&unk_CF650, v366, v367);
  uint64_t v33 = v349;
  uint64_t v34 = v32;
  uint64_t v35 = v351;
  uint64_t v359 = v34;
  *(void *)(v34 + swift_beginAccess(v1 + 16) = v348;
  *(void *)(v34 + swift_beginAccess(v0 + 24) = v33;
  swift_bridgeObjectRetain(v35);
  uint64_t v36 = swift_allocObject(&unk_CF678, v366, v367);
  uint64_t v37 = v351;
  uint64_t v38 = v36;
  id v39 = v352;
  uint64_t v362 = v38;
  *(void *)(v38 + swift_beginAccess(v1 + 16) = v350;
  *(void *)(v38 + swift_beginAccess(v0 + 24) = v37;
  id v40 = v39;
  uint64_t v41 = swift_allocObject(&unk_CF6A0, 24LL, v367);
  uint64_t v368 = v41;
  *(void *)(v41 + swift_beginAccess(v1 + 16) = v352;
  int v385 = (os_log_s *)Logger.logObject.getter(v41);
  int v386 = static os_log_type_t.debug.getter();
  int v355 = &v408;
  uint64_t v408 = 42LL;
  unint64_t v353 = sub_7788();
  unint64_t v354 = sub_77F0();
  unint64_t v42 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v409, v355, &type metadata for UInt32, &type metadata for Int, v353, v354, v42);
  uint32_t v356 = v409;
  uint64_t v364 = 17LL;
  uint64_t v43 = swift_allocObject(&unk_CF6C8, 17LL, v367);
  uint64_t v44 = v364;
  uint64_t v45 = v367;
  uint64_t v370 = v43;
  int v361 = 32;
  *(_BYTE *)(v43 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v46 = swift_allocObject(&unk_CF6F0, v44, v45);
  uint64_t v47 = v366;
  uint64_t v48 = v367;
  uint64_t v371 = v46;
  int v365 = 8;
  *(_BYTE *)(v46 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v49 = swift_allocObject(&unk_CF718, v47, v48);
  uint64_t v50 = v366;
  uint64_t v51 = v367;
  uint64_t v52 = v49;
  uint64_t v53 = v357;
  uint64_t v358 = v52;
  *(void *)(v52 + swift_beginAccess(v1 + 16) = sub_1B890;
  *(void *)(v52 + swift_beginAccess(v0 + 24) = v53;
  uint64_t v54 = swift_allocObject(&unk_CF740, v50, v51);
  uint64_t v55 = v364;
  uint64_t v56 = v367;
  uint64_t v57 = v54;
  uint64_t v58 = v358;
  uint64_t v372 = v57;
  *(void *)(v57 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v57 + swift_beginAccess(v0 + 24) = v58;
  uint64_t v59 = swift_allocObject(&unk_CF768, v55, v56);
  uint64_t v60 = v364;
  uint64_t v61 = v367;
  uint64_t v373 = v59;
  *(_BYTE *)(v59 + swift_beginAccess(v1 + 16) = v361;
  uint64_t v62 = swift_allocObject(&unk_CF790, v60, v61);
  uint64_t v63 = v366;
  uint64_t v64 = v367;
  uint64_t v374 = v62;
  *(_BYTE *)(v62 + swift_beginAccess(v1 + 16) = v365;
  uint64_t v65 = swift_allocObject(&unk_CF7B8, v63, v64);
  uint64_t v66 = v366;
  uint64_t v67 = v367;
  uint64_t v68 = v65;
  uint64_t v69 = v359;
  uint64_t v360 = v68;
  *(void *)(v68 + swift_beginAccess(v1 + 16) = sub_1B890;
  *(void *)(v68 + swift_beginAccess(v0 + 24) = v69;
  uint64_t v70 = swift_allocObject(&unk_CF7E0, v66, v67);
  uint64_t v71 = v364;
  uint64_t v72 = v367;
  uint64_t v73 = v70;
  uint64_t v74 = v360;
  uint64_t v375 = v73;
  *(void *)(v73 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v73 + swift_beginAccess(v0 + 24) = v74;
  uint64_t v75 = swift_allocObject(&unk_CF808, v71, v72);
  uint64_t v76 = v364;
  uint64_t v77 = v367;
  uint64_t v376 = v75;
  *(_BYTE *)(v75 + swift_beginAccess(v1 + 16) = v361;
  uint64_t v78 = swift_allocObject(&unk_CF830, v76, v77);
  uint64_t v79 = v366;
  uint64_t v80 = v367;
  uint64_t v377 = v78;
  *(_BYTE *)(v78 + swift_beginAccess(v1 + 16) = v365;
  uint64_t v81 = swift_allocObject(&unk_CF858, v79, v80);
  uint64_t v82 = v366;
  uint64_t v83 = v367;
  uint64_t v84 = v81;
  uint64_t v85 = v362;
  uint64_t v363 = v84;
  *(void *)(v84 + swift_beginAccess(v1 + 16) = sub_1B890;
  *(void *)(v84 + swift_beginAccess(v0 + 24) = v85;
  uint64_t v86 = swift_allocObject(&unk_CF880, v82, v83);
  uint64_t v87 = v364;
  uint64_t v88 = v367;
  uint64_t v89 = v86;
  uint64_t v90 = v363;
  uint64_t v378 = v89;
  *(void *)(v89 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v89 + swift_beginAccess(v0 + 24) = v90;
  uint64_t v91 = swift_allocObject(&unk_CF8A8, v87, v88);
  uint64_t v92 = v364;
  uint64_t v93 = v367;
  uint64_t v379 = v91;
  *(_BYTE *)(v91 + swift_beginAccess(v1 + 16) = 64;
  uint64_t v94 = swift_allocObject(&unk_CF8D0, v92, v93);
  uint64_t v95 = v366;
  uint64_t v96 = v367;
  uint64_t v380 = v94;
  *(_BYTE *)(v94 + swift_beginAccess(v1 + 16) = v365;
  uint64_t v97 = swift_allocObject(&unk_CF8F8, v95, v96);
  uint64_t v98 = v366;
  uint64_t v99 = v367;
  uint64_t v100 = v97;
  uint64_t v101 = v368;
  uint64_t v369 = v100;
  *(void *)(v100 + swift_beginAccess(v1 + 16) = sub_6A10C;
  *(void *)(v100 + swift_beginAccess(v0 + 24) = v101;
  uint64_t v102 = swift_allocObject(&unk_CF920, v98, v99);
  uint64_t v103 = v369;
  uint64_t v382 = v102;
  *(void *)(v102 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v102 + swift_beginAccess(v0 + 24) = v103;
  uint64_t v384 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v381 = _allocateUninitializedArray<A>(_:)(12LL, v384);
  uint64_t v383 = v104;
  swift_retain();
  uint64_t v105 = v370;
  uint64_t v106 = v383;
  void *v383 = sub_884C;
  v106[1] = v105;
  swift_retain();
  uint64_t v107 = v371;
  uint64_t v108 = v383;
  v383[2] = sub_884C;
  v108[3] = v107;
  swift_retain();
  uint64_t v109 = v372;
  uint64_t v110 = v383;
  v383[4] = sub_8900;
  v110[5] = v109;
  swift_retain();
  uint64_t v111 = v373;
  uint64_t v112 = v383;
  v383[6] = sub_884C;
  v112[7] = v111;
  swift_retain();
  uint64_t v113 = v374;
  uint64_t v114 = v383;
  v383[8] = sub_884C;
  v114[9] = v113;
  swift_retain();
  uint64_t v115 = v375;
  uint64_t v116 = v383;
  v383[10] = sub_8900;
  v116[11] = v115;
  swift_retain();
  uint64_t v117 = v376;
  uint64_t v118 = v383;
  v383[12] = sub_884C;
  v118[13] = v117;
  swift_retain();
  uint64_t v119 = v377;
  uint64_t v120 = v383;
  v383[14] = sub_884C;
  v120[15] = v119;
  swift_retain();
  uint64_t v121 = v378;
  uint64_t v122 = v383;
  v383[16] = sub_8900;
  v122[17] = v121;
  swift_retain();
  uint64_t v123 = v379;
  uint64_t v124 = v383;
  v383[18] = sub_884C;
  v124[19] = v123;
  swift_retain();
  uint64_t v125 = v380;
  uint64_t v126 = v383;
  v383[20] = sub_884C;
  v126[21] = v125;
  swift_retain();
  uint64_t v127 = v381;
  uint64_t v128 = v382;
  uint64_t v129 = v383;
  v383[22] = sub_424F0;
  v129[23] = v128;
  sub_6648();
  swift_bridgeObjectRelease(v127);
  if (os_log_type_enabled(v385, (os_log_type_t)v386))
  {
    uint64_t v130 = v326;
    uint64_t v318 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(42LL, &type metadata for UInt8);
    uint64_t v317 = sub_5150(&qword_D6B60);
    uint64_t v319 = sub_74D0(1LL, v317, v317);
    uint64_t v320 = sub_74D0(3LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v321 = &v393;
    uint64_t v393 = v318;
    uint64_t v322 = &v422;
    uint64_t v422 = v319;
    Swift::String v323 = &v421;
    uint64_t v421 = v320;
    sub_7528(2LL, &v393);
    sub_7528(4LL, v321);
    uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v392 = v370;
    sub_753C(&v391, (uint64_t)v321, (uint64_t)v322, (uint64_t)v323);
    uint64_t v324 = v130;
    if (v130)
    {
      __break(1u);
    }

    else
    {
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v371;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v316 = 0LL;
      uint64_t v131 = v316;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v392 = v372;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v315 = v131;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v373;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v314 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v374;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v313 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v392 = v375;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v312 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v376;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v311 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v377;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v310 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v392 = v378;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v309 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v379;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v308 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v392 = v380;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      uint64_t v307 = 0LL;
      uint64_t v391 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_424F0;
      uint64_t v392 = v382;
      sub_753C(&v391, (uint64_t)&v393, (uint64_t)&v422, (uint64_t)&v421);
      _os_log_impl(&dword_0, v385, (os_log_type_t)v386, "Computing value: %s %s prop: %s params: %@", v318, v356);
      sub_7580(v319, 1LL);
      sub_7580(v320, 3LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v344 + 8))(v343, v345);
  Swift::String v132 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("canPlayAppleMusic", 0x11uLL, 1);
  object = v132._object;
  int v306 = static String.== infix(_:_:)(v346, v347, v132._countAndFlagsBits, v132._object);
  swift_bridgeObjectRelease(object);
  if ((v306 & 1) != 0)
  {
    uint64_t v303 = *sub_43F7C();
    swift_retain();
    unsigned int v304 = sub_43FD0();
    swift_release();
    uint64_t result = v304;
    uint64_t v134 = v325;
    v325[3] = &type metadata for Bool;
    *uint64_t v134 = result & 1;
  }

  else
  {
    Swift::String v135 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttonLabel", 0xBuLL, 1);
    Swift::String v301 = v135._object;
    int v302 = static String.== infix(_:_:)(v346, v347, v135._countAndFlagsBits, v135._object);
    swift_bridgeObjectRelease(v301);
    if ((v302 & 1) != 0)
    {
      sub_6A114(v340);
      uint64_t v299 = *(void *)v340;
      uint64_t v300 = *((void *)v340 + 1);
      swift_bridgeObjectRetain(v300);
      if (v300)
      {
        uint64_t v297 = v299;
        uint64_t v298 = v300;
        uint64_t v136 = v325;
        uint64_t v137 = v299;
        uint64_t v138 = v300;
        v325[3] = &type metadata for String;
        *uint64_t v136 = v137;
        v136[1] = v138;
      }

      else
      {
        int v139 = v325;
        *uint64_t v325 = 0LL;
        v139[1] = 0LL;
        v139[2] = 0LL;
        v139[3] = 0LL;
      }

      return sub_18AC8((uint64_t)v340);
    }

    else
    {
      Swift::String v140 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttonAction", 0xCuLL, 1);
      uint64_t v295 = v140._object;
      int v296 = static String.== infix(_:_:)(v346, v347, v140._countAndFlagsBits, v140._object);
      swift_bridgeObjectRelease(v295);
      if ((v296 & 1) != 0)
      {
        sub_6A114(v338);
        sub_1B9C8(&v338[*(int *)(v336 + 20)], v330);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v332 + 48))(v330, 1LL, v331) == 1)
        {
          sub_1BA84((uint64_t)v330);
          uint64_t v291 = *(void *)v338;
          uint64_t v292 = *((void *)v338 + 1);
          swift_bridgeObjectRetain(v292);
          v429[0] = v291;
          v429[1] = v292;
          BOOL v290 = v292 != 0;
          BOOL v289 = v290;
          sub_8DD8((uint64_t)v429);
          if (v289)
          {
            uint64_t v276 = &v428;
            uint64_t v277 = 32LL;
            uint64_t v278 = 0LL;
            swift_beginAccess(v341 + 3);
            uint64_t v283 = v341[4];
            uint64_t v281 = v341[5];
            uint64_t v284 = v341[6];
            uint64_t v285 = v341[8];
            uint64_t v286 = v341[10];
            swift_bridgeObjectRetain(v283);
            swift_bridgeObjectRetain(v284);
            swift_bridgeObjectRetain(v285);
            swift_bridgeObjectRetain(v286);
            swift_endAccess(v276);
            swift_bridgeObjectRetain(v284);
            uint64_t v279 = v341 + 12;
            int v280 = &v426;
            swift_beginAccess(v341 + 12);
            uint32_t v282 = v427;
            sub_454C((uint64_t)v279, (uint64_t)v427);
            swift_endAccess(v280);
            id v287 = sub_49CE4(v281, v284, v282);
            sub_4598(v282);
            swift_bridgeObjectRelease(v284);
            swift_bridgeObjectRelease(v283);
            swift_bridgeObjectRelease(v284);
            swift_bridgeObjectRelease(v285);
            swift_bridgeObjectRelease(v286);
            id v399 = v287;
            id v288 = [v287 dictionary];
            if (v288)
            {
              id v275 = v288;
              id v273 = v288;
              id v398 = v288;
              uint64_t v270 = 0LL;
              uint32_t v425 = 0LL;
              id v271 = (id)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
              id v145 = v273;
              id v397 = v425;
              id v274 = [v271 dataWithPropertyList:v273 format:200 options:v270 error:&v397];
              id v272 = v397;
              id v146 = v397;
              uint64_t v147 = v425;
              uint32_t v425 = v272;

              swift_unknownObjectRelease(v273);
              if (v274)
              {
                id v269 = v274;
                id v266 = v274;
                uint64_t v267 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v268 = v148;
                uint64_t v423 = v267;
                unint64_t v424 = v148;

                NSDataBase64EncodingOptions v149 = variable initialization expression of PlayWithMeData.presentedIndex();
                Swift::String v150 = Data.base64EncodedString(options:)(v149);
                uint64_t v151 = (Swift::String *)v325;
                uint64_t v152 = v267;
                unint64_t v153 = v268;
                v325[3] = &type metadata for String;
                *uint64_t v151 = v150;
                sub_42E68(v152, v153);
              }

              else
              {
                id v192 = v425;
                uint64_t v193 = _convertNSErrorToError(_:)();

                swift_willThrow(v188);
                swift_errorRetain(v193);
                uint64_t v396 = v193;
                Swift::String v189 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
                uint64_t v190 = (Swift::String *)v325;
                uint64_t v191 = v193;
                v325[3] = &type metadata for String;
                *uint64_t v190 = v189;
                swift_errorRelease(v191);
                swift_errorRelease(v193);
              }

              return sub_18AC8((uint64_t)v338);
            }

            else
            {
              Swift::String v154 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
              uint64_t v155 = (Swift::String *)v325;
              id v156 = v287;
              v325[3] = &type metadata for String;
              *uint64_t v155 = v154;

              return sub_18AC8((uint64_t)v338);
            }
          }

          else
          {
            Swift::String v157 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
            uint64_t v158 = (Swift::String *)v325;
            uint64_t v159 = v338;
            v325[3] = &type metadata for String;
            *uint64_t v158 = v157;
            return sub_18AC8((uint64_t)v159);
          }
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v332 + 32))(v334, v330, v331);
          (*(void (**)(char *, char *, uint64_t))(v332 + 16))(v328, v334, v331);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v332 + 56))(v328, 0LL, 1LL, v331);
          uint64_t v294 = sub_6A918(v328);
          uint64_t v293 = v141;
          sub_1BA84((uint64_t)v328);
          uint64_t v394 = v294;
          uint64_t v395 = v293;
          swift_bridgeObjectRetain(v293);
          uint64_t v142 = v293;
          uint64_t v143 = v294;
          uint32_t v144 = v325;
          v325[3] = &type metadata for String;
          *uint32_t v144 = v143;
          v144[1] = v142;
          swift_bridgeObjectRelease(v142);
          (*(void (**)(char *, uint64_t))(v332 + 8))(v334, v331);
          return sub_18AC8((uint64_t)v338);
        }
      }

      else
      {
        Swift::String v160 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("rockImage", 9uLL, 1);
        uint64_t v264 = v160._object;
        int v265 = static String.== infix(_:_:)(v346, v347, v160._countAndFlagsBits, v160._object);
        swift_bridgeObjectRelease(v264);
        if ((v265 & 1) != 0)
        {
          type metadata accessor for ImageLoader();
          uint64_t v261 = sub_43F44();
          Swift::String v161 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("rock", 4uLL, 1);
          uint64_t v260 = v161._object;
          uint64_t v262 = sub_AEDEC(v161._countAndFlagsBits, (uint64_t)v161._object);
          uint64_t v263 = v162;
          swift_bridgeObjectRelease(v260);
          swift_release();
          uint64_t result = v262;
          uint64_t v163 = v263;
          uint64_t v164 = v325;
          v325[3] = &type metadata for String;
          *uint64_t v164 = result;
          v164[1] = v163;
        }

        else
        {
          Swift::String v165 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("paperImage", 0xAuLL, 1);
          uint64_t v258 = v165._object;
          int v259 = static String.== infix(_:_:)(v346, v347, v165._countAndFlagsBits, v165._object);
          swift_bridgeObjectRelease(v258);
          if ((v259 & 1) != 0)
          {
            type metadata accessor for ImageLoader();
            uint64_t v255 = sub_43F44();
            Swift::String v166 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("paper", 5uLL, 1);
            uint64_t v254 = v166._object;
            uint64_t v256 = sub_AEDEC(v166._countAndFlagsBits, (uint64_t)v166._object);
            uint64_t v257 = v167;
            swift_bridgeObjectRelease(v254);
            swift_release();
            uint64_t result = v256;
            uint64_t v168 = v257;
            uint64_t v169 = v325;
            v325[3] = &type metadata for String;
            *uint64_t v169 = result;
            v169[1] = v168;
          }

          else
          {
            Swift::String v170 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("scissorsImage", 0xDuLL, 1);
            uint64_t v252 = v170._object;
            int v253 = static String.== infix(_:_:)(v346, v347, v170._countAndFlagsBits, v170._object);
            swift_bridgeObjectRelease(v252);
            if ((v253 & 1) != 0)
            {
              type metadata accessor for ImageLoader();
              uint64_t v249 = sub_43F44();
              Swift::String v171 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("scissors", 8uLL, 1);
              uint64_t v248 = v171._object;
              uint64_t v250 = sub_AEDEC(v171._countAndFlagsBits, (uint64_t)v171._object);
              uint64_t v251 = v172;
              swift_bridgeObjectRelease(v248);
              swift_release();
              uint64_t result = v250;
              uint64_t v173 = v251;
              uint64_t v174 = v325;
              v325[3] = &type metadata for String;
              uint64_t *v174 = result;
              v174[1] = v173;
            }

            else
            {
              Swift::String v175 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userChoiceImage", 0xFuLL, 1);
              uint64_t v246 = v175._object;
              int v247 = static String.== infix(_:_:)(v346, v347, v175._countAndFlagsBits, v175._object);
              swift_bridgeObjectRelease(v246);
              if ((v247 & 1) != 0)
              {
                uint64_t v243 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userChoice", 0xAuLL, 1)._object;
                id v244 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v243);
                id v245 = [v352 valueForKey:v244];

                if (v245)
                {
                  id v242 = v245;
                  id v241 = v245;
                  uint64_t v240 = &v430;
                  _bridgeAnyObjectToAny(_:)();
                  sub_41F14((uint64_t)v240, (uint64_t)&v440);
                  swift_unknownObjectRelease(v241);
                }

                else
                {
                  __int128 v440 = 0uLL;
                  uint64_t v441 = 0LL;
                  uint64_t v442 = 0LL;
                }

                sub_6B25C(&v440, &v443);
                if (v444)
                {
                  if ((swift_dynamicCast( &v400,  &v443,  (char *)&type metadata for Any + 8,  &type metadata for String,  6LL) & 1) != 0)
                  {
                    Swift::String v239 = v400;
                  }

                  else
                  {
                    v239._uint64_t countAndFlagsBits = 0LL;
                    v239._object = 0LL;
                  }

                  Swift::String v238 = v239;
                }

                else
                {
                  uint64_t v221 = 0LL;
                  sub_1D580(&v443);
                  v238._uint64_t countAndFlagsBits = (uint64_t)v221;
                  v238._object = v221;
                }

                Swift::String v439 = v238;
                if (v238._object)
                {
                  Swift::String v388 = v439;
                }

                else
                {
                  Swift::String v388 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
                  sub_8DD8((uint64_t)&v439);
                }

                Swift::String v234 = v388;
                Swift::String v403 = v388;
                float v235 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("userWinsInARow", 0xEuLL, 1)._object;
                id v236 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v235);
                id v237 = [v352 valueForKey:v236];

                if (v237)
                {
                  id v233 = v237;
                  id v232 = v237;
                  uint64_t v231 = &v431;
                  _bridgeAnyObjectToAny(_:)();
                  sub_41F14((uint64_t)v231, (uint64_t)&v434);
                  swift_unknownObjectRelease(v232);
                }

                else
                {
                  __int128 v434 = 0uLL;
                  uint64_t v435 = 0LL;
                  uint64_t v436 = 0LL;
                }

                sub_6B25C(&v434, &v437);
                if (v438)
                {
                  if ((swift_dynamicCast(&v401, &v437, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL) & 1) != 0)
                  {
                    uint64_t v229 = v401;
                    int v230 = 0;
                  }

                  else
                  {
                    uint64_t v229 = 0LL;
                    int v230 = 1;
                  }

                  uint64_t v227 = v229;
                  int v228 = v230;
                }

                else
                {
                  uint64_t v222 = 0LL;
                  sub_1D580(&v437);
                  uint64_t v227 = v222;
                  int v228 = 1;
                }

                uint64_t v432 = v227;
                char v433 = v228 & 1;
                if ((v228 & 1) != 0) {
                  uint64_t v387 = 0LL;
                }
                else {
                  uint64_t v387 = v432;
                }
                BOOL v223 = v387 > 0;
                BOOL v402 = v387 > 0;
                type metadata accessor for ImageLoader();
                uint64_t v224 = sub_43F44();
                uint64_t v225 = sub_AEF0C(v234._countAndFlagsBits, (uint64_t)v234._object, v223);
                uint64_t v226 = v176;
                swift_release();
                uint64_t v177 = v225;
                uint64_t v178 = v226;
                uint64_t v179 = v325;
                uint64_t v180 = v234._object;
                v325[3] = &type metadata for String;
                uint64_t *v179 = v177;
                v179[1] = v178;
                return swift_bridgeObjectRelease(v180);
              }

              else
              {
                Swift::String v181 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriChoiceImage", 0xFuLL, 1);
                uint64_t v219 = v181._object;
                unsigned int v220 = static String.== infix(_:_:)(v346, v347, v181._countAndFlagsBits, v181._object);
                swift_bridgeObjectRelease(v219);
                uint64_t result = v220;
                if ((v220 & 1) != 0)
                {
                  uint64_t v216 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriChoice", 0xAuLL, 1)._object;
                  id v217 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v216);
                  id v218 = [v352 valueForKey:v217];

                  if (v218)
                  {
                    id v215 = v218;
                    id v214 = v218;
                    uint64_t v213 = &v445;
                    _bridgeAnyObjectToAny(_:)();
                    sub_41F14((uint64_t)v213, (uint64_t)&v455);
                    swift_unknownObjectRelease(v214);
                  }

                  else
                  {
                    __int128 v455 = 0uLL;
                    uint64_t v456 = 0LL;
                    uint64_t v457 = 0LL;
                  }

                  sub_6B25C(&v455, &v458);
                  if (v459)
                  {
                    if ((swift_dynamicCast( &v404,  &v458,  (char *)&type metadata for Any + 8,  &type metadata for String,  6LL) & 1) != 0)
                    {
                      Swift::String v212 = v404;
                    }

                    else
                    {
                      v212._uint64_t countAndFlagsBits = 0LL;
                      v212._object = 0LL;
                    }

                    Swift::String v211 = v212;
                  }

                  else
                  {
                    uint64_t v194 = 0LL;
                    sub_1D580(&v458);
                    v211._uint64_t countAndFlagsBits = (uint64_t)v194;
                    v211._object = v194;
                  }

                  Swift::String v454 = v211;
                  if (v211._object)
                  {
                    Swift::String v390 = v454;
                  }

                  else
                  {
                    Swift::String v390 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
                    sub_8DD8((uint64_t)&v454);
                  }

                  Swift::String v207 = v390;
                  Swift::String v407 = v390;
                  uint64_t v208 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("siriWinsInARow", 0xEuLL, 1)._object;
                  id v209 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v208);
                  id v210 = [v352 valueForKey:v209];

                  if (v210)
                  {
                    id v206 = v210;
                    id v205 = v210;
                    uint64_t v204 = &v446;
                    _bridgeAnyObjectToAny(_:)();
                    sub_41F14((uint64_t)v204, (uint64_t)&v449);
                    swift_unknownObjectRelease(v205);
                  }

                  else
                  {
                    __int128 v449 = 0uLL;
                    uint64_t v450 = 0LL;
                    uint64_t v451 = 0LL;
                  }

                  sub_6B25C(&v449, &v452);
                  if (v453)
                  {
                    if ((swift_dynamicCast( &v405,  &v452,  (char *)&type metadata for Any + 8,  &type metadata for Int,  6LL) & 1) != 0)
                    {
                      uint64_t v202 = v405;
                      int v203 = 0;
                    }

                    else
                    {
                      uint64_t v202 = 0LL;
                      int v203 = 1;
                    }

                    uint64_t v200 = v202;
                    int v201 = v203;
                  }

                  else
                  {
                    uint64_t v195 = 0LL;
                    sub_1D580(&v452);
                    uint64_t v200 = v195;
                    int v201 = 1;
                  }

                  uint64_t v447 = v200;
                  char v448 = v201 & 1;
                  if ((v201 & 1) != 0) {
                    uint64_t v389 = 0LL;
                  }
                  else {
                    uint64_t v389 = v447;
                  }
                  BOOL v196 = v389 > 0;
                  BOOL v406 = v389 > 0;
                  type metadata accessor for ImageLoader();
                  uint64_t v197 = sub_43F44();
                  uint64_t v198 = sub_AEF0C(v207._countAndFlagsBits, (uint64_t)v207._object, v196);
                  uint64_t v199 = v182;
                  swift_release();
                  uint64_t v183 = v198;
                  uint64_t v184 = v199;
                  uint64_t v185 = v325;
                  uint64_t v186 = v207._object;
                  v325[3] = &type metadata for String;
                  *uint64_t v185 = v183;
                  v185[1] = v184;
                  return swift_bridgeObjectRelease(v186);
                }

                else
                {
                  char v187 = v325;
                  *uint64_t v325 = 0LL;
                  v187[1] = 0LL;
                  v187[2] = 0LL;
                  v187[3] = 0LL;
                }
              }
            }
          }
        }
      }
    }
  }

  return result;
}

uint64_t sub_69FF8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6A034()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6A070()
{
  return swift_deallocObject(v2, 32LL);
}

void *sub_6A0AC(void *a1)
{
  id v1 = a1;
  return a1;
}

uint64_t sub_6A0D0()
{
  return swift_deallocObject(v2, 24LL);
}

void *sub_6A10C()
{
  return sub_6A0AC(*(void **)(v0 + 16));
}

uint64_t sub_6A114@<X0>(char *a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v66 = "Fatal error";
  uint64_t v67 = "Range requires lowerBound <= upperBound";
  uint64_t v68 = "Swift/Range.swift";
  uint64_t v102 = 0LL;
  uint64_t v101 = 0LL;
  uint64_t v100 = 0LL;
  unint64_t v97 = 0LL;
  unint64_t v94 = 0LL;
  unint64_t v95 = 0LL;
  uint64_t v87 = 0LL;
  uint64_t v88 = 0LL;
  unint64_t v69 = (*(void *)(*(void *)(sub_5150(&qword_D83F8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v3 = __chkstk_darwin(v2);
  uint64_t v70 = (char **)((char *)&v17 - v69);
  unint64_t v71 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v17 - v71;
  unint64_t v73 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v81 = (char *)&v17 - v73;
  uint64_t v82 = type metadata accessor for DialogServiceButton(0LL);
  uint64_t v80 = *(void *)(v82 - 8);
  unint64_t v74 = (*(void *)(v80 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v75 = (char *)&v17 - v74;
  uint64_t v102 = (char *)&v17 - v74;
  unint64_t v76 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v17 - v76;
  uint64_t v101 = (char *)&v17 - v76;
  uint64_t v100 = v1;
  uint64_t v78 = (void *)(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  uint64_t v79 = &v99;
  swift_beginAccess(v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  sub_6794C(v78, v81);
  swift_endAccess(v79);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v81, 1LL, v82) == 1)
  {
    sub_67EC0((uint64_t)v81);
    uint64_t v48 = &v98;
    uint64_t v54 = 32LL;
    uint64_t v55 = 0LL;
    swift_beginAccess(v65 + 3);
    uint64_t v50 = v65[4];
    uint64_t v49 = v65[5];
    uint64_t v51 = v65[6];
    uint64_t v52 = v65[8];
    uint64_t v53 = v65[10];
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRetain(v53);
    swift_endAccess(v48);
    swift_bridgeObjectRetain(v51);
    unint64_t v63 = String.startIndex.getter(v49, v51);
    unint64_t v97 = v63;
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v53);
    uint64_t v56 = &v96;
    swift_beginAccess(v65 + 3);
    uint64_t v58 = v65[4];
    uint64_t v57 = v65[5];
    uint64_t v59 = v65[6];
    uint64_t v60 = v65[8];
    uint64_t v61 = v65[10];
    swift_bridgeObjectRetain(v58);
    swift_bridgeObjectRetain(v59);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v61);
    swift_endAccess(v56);
    swift_bridgeObjectRetain(v59);
    unint64_t v62 = String.index(_:offsetBy:)(v63, 3LL, v57, v59);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v61);
    if (v62 >> 14 < v63 >> 14)
    {
      _assertionFailure(_:_:file:line:flags:)(v66, 11LL, 2LL, v67, 39LL, 2LL, v68, 17LL, 2, 754LL, 0);
      __break(1u);
    }

    unint64_t v94 = v63;
    unint64_t v95 = v62;
    double v17 = &v93;
    uint64_t v37 = 32LL;
    uint64_t v43 = 0LL;
    swift_beginAccess(v65 + 3);
    uint64_t v25 = v65[4];
    uint64_t v18 = v65[5];
    uint64_t v26 = v65[6];
    uint64_t v27 = v65[8];
    uint64_t v28 = v65[10];
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
    swift_endAccess(v17);
    swift_bridgeObjectRetain(v26);
    uint64_t v24 = v92;
    v92[0] = v18;
    v92[1] = v26;
    unsigned int v42 = 1;
    Swift::String v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dal", 3uLL, 1);
    uint64_t v23 = &v91;
    Swift::String v91 = v11;
    Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("button", 6uLL, v42 & 1);
    uint64_t v22 = &v90;
    Swift::String v90 = v12;
    uint64_t v19 = 0LL;
    uint64_t v13 = type metadata accessor for CompareOptions(0LL);
    uint64_t v20 = _allocateUninitializedArray<A>(_:)(v19, v13);
    unint64_t v14 = sub_94D0();
    SetAlgebra<>.init(arrayLiteral:)(v20, v13, v14);
    uint64_t v21 = v89;
    sub_B880();
    unsigned int v41 = 0;
    uint64_t v31 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v23,  v22,  v21,  v63,  v62,  0LL,  &type metadata for String);
    uint64_t v47 = v15;
    sub_8DD8((uint64_t)v22);
    sub_8DD8((uint64_t)v23);
    sub_8DD8((uint64_t)v24);
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v28);
    uint64_t v87 = v31;
    uint64_t v88 = v47;
    uint64_t v29 = &v86;
    swift_beginAccess(v65 + 3);
    uint64_t v30 = v65[3];
    uint64_t v32 = (void *)v65[4];
    uint64_t v33 = v65[6];
    uint64_t v34 = v65[8];
    uint64_t v35 = v65[10];
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
    swift_endAccess(v29);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v47);
    uint64_t v46 = v103;
    sub_2A7A4(v30, v32, v31, v47, v103);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v35);
    uint64_t v36 = &v85;
    swift_beginAccess(v65 + 2);
    uint64_t v40 = v65[2];
    swift_retain();
    swift_endAccess(v36);
    uint64_t v38 = &v84;
    swift_beginAccess(v65 + 11);
    id v39 = (void *)v65[11];
    id v16 = v39;
    swift_endAccess(v38);
    sub_2FE10((uint64_t)v46, v39, v75);

    swift_release();
    sub_6B2C0(v75, v72);
    (*(void (**)(char *, void, void, uint64_t))(v80 + 56))(v72, v41, v42, v82);
    sub_6794C(v72, v70);
    uint64_t v44 = (void *)((char *)v65 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
    uint64_t v45 = &v83;
    swift_beginAccess((char *)v65 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
    sub_67B10(v70, v44);
    swift_endAccess(v45);
    sub_67EC0((uint64_t)v72);
    sub_6B2C0(v75, v64);
    sub_18AC8((uint64_t)v75);
    sub_1B21C(v46);
    return swift_bridgeObjectRelease(v47);
  }

  else
  {
    sub_3897C(v81, v77);
    sub_6B2C0(v77, v64);
    return sub_18AC8((uint64_t)v77);
  }

uint64_t sub_6A918(const void *a1)
{
  uint64_t v45 = a1;
  uint64_t v56 = 0LL;
  uint64_t v55 = 0LL;
  id v54 = 0LL;
  id v53 = 0LL;
  uint64_t v51 = 0LL;
  uint64_t v57 = 0LL;
  unint64_t v58 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t v40 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v40 - 8);
  unint64_t v42 = (*(void *)(v41 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v16 - v42;
  unint64_t v44 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v16 - v44;
  uint64_t v56 = v4;
  uint64_t v55 = v1;
  sub_1BEE4();
  id v46 = sub_EB60();
  id v54 = v46;
  sub_1B9C8(v45, v48);
  uint64_t v49 = type metadata accessor for URL(v47);
  uint64_t v50 = *(void *)(v49 - 8);
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t))(v50 + 48))(v48, 1LL) == 1;
  if (v5)
  {
    id v39 = 0LL;
  }

  else
  {
    URL._bridgeToObjectiveC()((NSURL *)v5);
    uint64_t v38 = v6;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
    id v39 = v38;
  }

  id v34 = v39;
  objc_msgSend(v46, "setPunchOutUri:");

  uint64_t v7 = UUID.init()(v46);
  UUID.uuidString.getter(v7);
  uint64_t v35 = v8;
  id v36 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  swift_bridgeObjectRelease(v35);
  [v46 setAceId:v36];

  id v37 = [v46 dictionary];
  if (v37)
  {
    id v33 = v37;
    id v31 = v37;
    id v53 = v37;
    uint64_t v28 = 0LL;
    uint64_t v59 = 0LL;
    id v29 = (id)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
    id v9 = v31;
    id v52 = v59;
    id v32 = [v29 dataWithPropertyList:v31 format:200 options:v28 error:&v52];
    id v30 = v52;
    id v10 = v52;
    Swift::String v11 = v59;
    uint64_t v59 = v30;

    swift_unknownObjectRelease(v31);
    if (v32)
    {
      id v27 = v32;
      id v22 = v32;
      uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v12;
      uint64_t v57 = v23;
      unint64_t v58 = v12;

      NSDataBase64EncodingOptions v13 = variable initialization expression of PlayWithMeData.presentedIndex();
      Swift::String v25 = Data.base64EncodedString(options:)(v13);
      sub_42E68(v23, v24);

      Swift::String v26 = v25;
    }

    else
    {
      id v17 = v59;
      uint64_t v18 = _convertNSErrorToError(_:)();

      swift_willThrow(v15);
      swift_errorRetain(v18);
      uint64_t v51 = v18;
      Swift::String v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
      swift_errorRelease(v18);
      swift_errorRelease(v18);

      Swift::String v26 = v19;
    }
  }

  else
  {
    Swift::String v21 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);

    Swift::String v26 = v21;
  }

  object = v26._object;
  return v26._countAndFlagsBits;
}

uint64_t sub_6AE80()
{
  sub_4598((void *)(v0 + 96));
  sub_67EC0(v0 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin16ParameterService_button);
  return v2;
}

uint64_t sub_6AEDC()
{
  uint64_t v0 = sub_6AE80();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_6AF1C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, void *a8@<X8>)
{
  return sub_67FA0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_6AF3C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6AF64()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6AF8C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6AFC8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6B004()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6B02C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6B054()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6B090()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6B0CC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6B0F4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6B11C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6B158()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6B194()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6B1BC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6B1E4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6B220()
{
  return swift_deallocObject(v2, 32LL);
}

_OWORD *sub_6B25C(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  a2[1] = a1[1];
  return a2;
}

char *sub_6B2C0(char *a1, char *a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v8 = *((void *)a1 + 1);
  swift_bridgeObjectRetain(v8);
  *((void *)a2 + 1) = v8;
  uint64_t v9 = type metadata accessor for DialogServiceButton(0LL);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v12 = type metadata accessor for URL(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 48))(&a1[v10], 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D7378);
    memcpy(&a2[v10], &a1[v10], *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v13 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(&a2[v10], 0LL, 1LL, v12);
  }

  BOOL v5 = &a2[*(int *)(v9 + 24)];
  double v3 = &a1[*(int *)(v9 + 24)];
  *(void *)BOOL v5 = *(void *)v3;
  uint64_t v6 = *((void *)v3 + 1);
  swift_bridgeObjectRetain(v6);
  uint64_t result = a2;
  *((void *)v5 + 1) = v6;
  return result;
}

uint64_t sub_6B428()
{
  return type metadata accessor for ParameterService(0LL);
}

uint64_t type metadata accessor for ParameterService(uint64_t a1)
{
  uint64_t v2 = qword_D8428;
  if (!qword_D8428) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ParameterService);
  }
  return v2;
}

uint64_t sub_6B4A4(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = "@";
  void v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v6[3] = &unk_B7B50;
  uint64_t v1 = sub_6B594(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[4] = *(void *)(v1 - 8) + 64LL;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 5LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t sub_6B594(uint64_t a1)
{
  uint64_t v7 = qword_D8438;
  if (!qword_D8438)
  {
    uint64_t v1 = type metadata accessor for DialogServiceButton(255LL);
    unint64_t v5 = type metadata accessor for Optional(a1, v1);
    uint64_t v7 = v5;
    if (!v2)
    {
      unint64_t v3 = v5;
      atomic_store(v5, (unint64_t *)&qword_D8438);
      return v3;
    }
  }

  return v7;
}

unint64_t sub_6B638()
{
  return sub_37DFC();
}

uint64_t sub_6B64C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("buttons", 7uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9A08 = (__int128)v1;
  return result;
}

__int128 *sub_6B68C()
{
  if (qword_D6AA0 != -1) {
    swift_once(&qword_D6AA0, sub_6B64C);
  }
  return &xmmword_D9A08;
}

uint64_t sub_6B6E0()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("condition", 9uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9A18 = (__int128)v1;
  return result;
}

__int128 *sub_6B720()
{
  if (qword_D6AA8 != -1) {
    swift_once(&qword_D6AA8, sub_6B6E0);
  }
  return &xmmword_D9A18;
}

uint64_t sub_6B774()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("label", 5uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9A28 = (__int128)v1;
  return result;
}

__int128 *sub_6B7B4()
{
  if (qword_D6AB0 != -1) {
    swift_once(&qword_D6AB0, sub_6B774);
  }
  return &xmmword_D9A28;
}

uint64_t sub_6B808()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("intentName", 0xAuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9A38 = (__int128)v1;
  return result;
}

__int128 *sub_6B848()
{
  if (qword_D6AB8 != -1) {
    swift_once(&qword_D6AB8, sub_6B808);
  }
  return &xmmword_D9A38;
}

uint64_t sub_6B89C()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dialog", 6uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9A48 = (__int128)v1;
  return result;
}

__int128 *sub_6B8DC()
{
  if (qword_D6AC0 != -1) {
    swift_once(&qword_D6AC0, sub_6B89C);
  }
  return &xmmword_D9A48;
}

uint64_t sub_6B930()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "com.apple.siri.directInvocation.socialConversation",  0x32uLL,  1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9A58 = (__int128)v1;
  return result;
}

__int128 *sub_6B970()
{
  if (qword_D6AC8 != -1) {
    swift_once(&qword_D6AC8, sub_6B930);
  }
  return &xmmword_D9A58;
}

uint64_t sub_6B9C4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_6BA10(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v1 + swift_beginAccess(v1 + 16) = a1;
  swift_bridgeObjectRelease(v2);
  swift_endAccess(v5);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_6BA6C()
{
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_6BAB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v1 + swift_beginAccess(v1 + 24) = a1;
  swift_bridgeObjectRelease(v2);
  swift_endAccess(v5);
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_6BB14()
{
  uint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_6BB60(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)(v1 + 3sub_4598(v0 + 2) = a1;
  swift_bridgeObjectRelease(v2);
  swift_endAccess(v5);
  return swift_bridgeObjectRelease(a1);
}

uint64_t (*sub_6BBBC())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_6BBFC()
{
  uint64_t v2 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain(v2);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_6BC48(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)(v1 + swift_beginAccess(v1 + 40) = a1;
  swift_bridgeObjectRelease(v2);
  swift_endAccess(v5);
  return swift_bridgeObjectRelease(a1);
}

uint64_t (*sub_6BCA4())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_6BCE4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_6BD2C(uint64_t a1)
{
  *(void *)(v1 + 4sub_1D580(v0 + 8) = a1;
  return swift_endAccess(v4);
}

uint64_t (*sub_6BD74())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_6BDB4()
{
  char v2 = *(_BYTE *)(v0 + 56);
  swift_endAccess(v3);
  return v2 & 1;
}

uint64_t sub_6BE00(char a1)
{
  *(_BYTE *)(v1 + swift_beginAccess(v1 + 56) = a1 & 1;
  return swift_endAccess(v4);
}

uint64_t (*sub_6BE4C())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_6BE8C(uint64_t a1)
{
  uint64_t v91 = a1;
  uint64_t v131 = 0LL;
  uint64_t v130 = 0LL;
  uint64_t v90 = 0LL;
  uint64_t v89 = 0LL;
  v124[0] = 0LL;
  v124[1] = 0LL;
  uint64_t v118 = 0LL;
  Swift::String v113 = (Swift::String)0LL;
  Swift::String v108 = (Swift::String)0LL;
  Swift::String v103 = (Swift::String)0LL;
  uint64_t v92 = type metadata accessor for Logger(0LL);
  uint64_t v93 = *(void *)(v92 - 8);
  unint64_t v94 = (*(void *)(v93 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  unint64_t v95 = (char *)&v29 - v94;
  uint64_t v131 = v3;
  uint64_t v130 = v1;
  char v96 = (char *)v129 + 4;
  swift_beginAccess(v1 + 56);
  int v97 = *(unsigned __int8 *)(v1 + 56);
  swift_endAccess(v96);
  if ((v97 & 1) != 0)
  {
    uint64_t v18 = v95;
    uint64_t v19 = sub_AD514();
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 16))(v18, v19, v92);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v20);
    int v47 = static os_log_type_t.debug.getter();
    uint64_t v45 = &v128;
    uint64_t v128 = 2LL;
    unint64_t v43 = sub_7788();
    unint64_t v44 = sub_77F0();
    unint64_t v21 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(v129, v45, &type metadata for UInt32, &type metadata for Int, v43, v44, v21);
    uint32_t v46 = v129[0];
    uint64_t v22 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v49 = _allocateUninitializedArray<A>(_:)(0LL, v22);
    if (os_log_type_enabled(v48, (os_log_type_t)v47))
    {
      uint64_t v23 = v89;
      id v33 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v31 = sub_5150(&qword_D6B60);
      uint64_t v32 = 0LL;
      uint64_t v34 = sub_74D0(0LL, v31, v31);
      uint64_t v35 = sub_74D0(v32, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      id v39 = &v127;
      uint64_t v127 = v33;
      uint64_t v40 = &v126;
      uint64_t v126 = v34;
      id v37 = &v125;
      uint64_t v125 = v35;
      unsigned int v36 = 0;
      sub_7528(0LL, &v127);
      sub_7528(v36, v39);
      v124[2] = v49;
      uint64_t v38 = &v29;
      __chkstk_darwin(v24);
      Swift::String v25 = v40;
      Swift::String v26 = &v29 - 6;
      uint64_t v41 = &v29 - 6;
      v26[2] = (uint64_t)v39;
      v26[3] = (uint64_t)v25;
      v26[4] = v27;
      uint64_t v42 = sub_5150(&qword_D6B78);
      unint64_t v28 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v41, v42, v28);
      if (v23)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v48, (os_log_type_t)v47, "Attempting to reinitialize PlayWithMeData!", v33, v46);
        uint64_t v30 = 0LL;
        sub_7580(v34, 0LL);
        sub_7580(v35, v30);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v49);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v49);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v95, v92);
  }

  else
  {
    swift_bridgeObjectRetain(v91);
    v123[1] = v91;
    uint64_t v86 = sub_5150(&qword_D7E20);
    unint64_t v4 = sub_5EF10();
    Collection<>.makeIterator()(v124, v86, v4);
    for (uint64_t i = v89; ; uint64_t i = v84)
    {
      uint64_t v84 = i;
      uint64_t v5 = sub_5150(&qword_D7F90);
      IndexingIterator.next()(v123, v5);
      uint64_t v85 = v123[0];
      if (!v123[0]) {
        break;
      }
      uint64_t v83 = v85;
      uint64_t v81 = v85;
      uint64_t v118 = v85;
      uint64_t v6 = sub_6B720();
      uint64_t v79 = *(void *)v6;
      uint64_t v80 = *((void *)v6 + 1);
      swift_bridgeObjectRetain(v80);
      uint64_t v82 = v115;
      v115[0] = v79;
      v115[1] = v80;
      Dictionary.subscript.getter(v116);
      sub_8DD8((uint64_t)v82);
      if (v116[3])
      {
        if ((swift_dynamicCast(&v98, v116, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v78 = v98;
        }

        else
        {
          v78._uint64_t countAndFlagsBits = 0LL;
          v78._object = 0LL;
        }

        Swift::String v77 = v78;
      }

      else
      {
        uint64_t v59 = 0LL;
        sub_1D580(v116);
        v77._uint64_t countAndFlagsBits = (uint64_t)v59;
        v77._object = v59;
      }

      Swift::String v114 = v77;
      if (v77._object)
      {
        Swift::String v117 = v114;
      }

      else
      {
        Swift::String v117 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v114);
      }

      Swift::String v73 = v117;
      Swift::String v113 = v117;
      uint64_t v7 = sub_6B7B4();
      uint64_t v74 = *(void *)v7;
      uint64_t v75 = *((void *)v7 + 1);
      swift_bridgeObjectRetain(v75);
      unint64_t v76 = v110;
      v110[0] = v74;
      v110[1] = v75;
      Dictionary.subscript.getter(v111);
      sub_8DD8((uint64_t)v76);
      if (v111[3])
      {
        if ((swift_dynamicCast(&v99, v111, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v72 = v99;
        }

        else
        {
          v72._uint64_t countAndFlagsBits = 0LL;
          v72._object = 0LL;
        }

        Swift::String v71 = v72;
      }

      else
      {
        uint64_t v60 = 0LL;
        sub_1D580(v111);
        v71._uint64_t countAndFlagsBits = (uint64_t)v60;
        v71._object = v60;
      }

      Swift::String v109 = v71;
      if (v71._object)
      {
        Swift::String v112 = v109;
      }

      else
      {
        Swift::String v112 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v109);
      }

      Swift::String v67 = v112;
      Swift::String v108 = v112;
      uint64_t v8 = sub_6B848();
      uint64_t v68 = *(void *)v8;
      uint64_t v69 = *((void *)v8 + 1);
      swift_bridgeObjectRetain(v69);
      uint64_t v70 = v105;
      v105[0] = v68;
      v105[1] = v69;
      Dictionary.subscript.getter(v106);
      sub_8DD8((uint64_t)v70);
      if (v106[3])
      {
        if ((swift_dynamicCast(&v100, v106, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v66 = v100;
        }

        else
        {
          v66._uint64_t countAndFlagsBits = 0LL;
          v66._object = 0LL;
        }

        Swift::String v65 = v66;
      }

      else
      {
        uint64_t v61 = 0LL;
        sub_1D580(v106);
        v65._uint64_t countAndFlagsBits = (uint64_t)v61;
        v65._object = v61;
      }

      Swift::String v104 = v65;
      if (v65._object)
      {
        Swift::String v107 = v104;
      }

      else
      {
        Swift::String v107 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v104);
      }

      Swift::String v64 = v107;
      Swift::String v103 = v107;
      if ((sub_6D7A8(v73._countAndFlagsBits, (uint64_t)v73._object) & 1) != 0)
      {
        swift_bridgeObjectRetain(v67._object);
        swift_bridgeObjectRetain(v64._object);
        uint64_t v9 = nullsub_1(v67._countAndFlagsBits);
        unint64_t v62 = v102;
        v102[0] = v9;
        v102[1] = v10;
        v102[2] = v11;
        v102[3] = v12;
        unint64_t v63 = &v101;
        swift_beginAccess(v88 + 16);
        uint64_t v13 = sub_5150(&qword_D8568);
        Array.append(_:)(v62, v13);
        swift_endAccess(v63);
      }

      swift_bridgeObjectRelease(v64._object);
      swift_bridgeObjectRelease(v67._object);
      swift_bridgeObjectRelease(v73._object);
      swift_bridgeObjectRelease(v81);
    }

    sub_1B82C(v124);
    uint64_t v50 = &v122;
    uint64_t v57 = 0LL;
    swift_beginAccess(v88 + 16);
    uint64_t v51 = *(void *)(v88 + 16);
    swift_bridgeObjectRetain(v51);
    swift_endAccess(v50);
    id v53 = &v121;
    uint64_t v121 = v51;
    uint64_t v52 = sub_5150(&qword_D8568);
    unint64_t v14 = sub_6FCD4();
    uint64_t v55 = Sequence.shuffled()(v52, v14);
    sub_1B82C(v53);
    swift_bridgeObjectRetain(v55);
    id v54 = &v120;
    uint64_t v56 = 33LL;
    swift_beginAccess(v88 + 24);
    uint64_t v15 = *(void *)(v88 + 24);
    *(void *)(v88 + swift_beginAccess(v1 + 24) = v55;
    swift_bridgeObjectRelease(v15);
    swift_endAccess(v54);
    swift_bridgeObjectRelease(v55);
    unint64_t v58 = &v119;
    swift_beginAccess(v88 + 56);
    uint64_t v16 = v58;
    *(_BYTE *)(v88 + swift_beginAccess(v0 + 56) = 1;
    return swift_endAccess(v16);
  }

void *sub_6C90C(uint64_t a1)
{
  uint64_t v121 = a1;
  uint64_t v176 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v120 = 0LL;
  uint64_t v119 = 0LL;
  v169[0] = 0LL;
  v169[1] = 0LL;
  uint64_t v167 = 0LL;
  Swift::String v162 = (Swift::String)0LL;
  Swift::String v153 = (Swift::String)0LL;
  uint64_t v148 = 0LL;
  uint64_t v147 = 0LL;
  v146[0] = 0LL;
  v146[1] = 0LL;
  uint64_t v142 = 0LL;
  Swift::String v137 = (Swift::String)0LL;
  Swift::String v132 = (Swift::String)0LL;
  uint64_t v122 = type metadata accessor for Logger(0LL);
  uint64_t v123 = *(void *)(v122 - 8);
  unint64_t v124 = (*(void *)(v123 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v125 = (char *)&v39 - v124;
  uint64_t v176 = v3;
  uint64_t v175 = v1;
  uint64_t v126 = (char *)v174 + 4;
  swift_beginAccess(v1 + 56);
  int v127 = *(unsigned __int8 *)(v1 + 56);
  swift_endAccess(v126);
  if ((v127 & 1) != 0)
  {
    unint64_t v28 = v125;
    uint64_t v29 = sub_AD514();
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 16))(v28, v29, v122);
    unint64_t v58 = (os_log_s *)Logger.logObject.getter(v30);
    int v57 = static os_log_type_t.debug.getter();
    uint64_t v55 = &v173;
    uint64_t v173 = 2LL;
    unint64_t v53 = sub_7788();
    unint64_t v54 = sub_77F0();
    unint64_t v31 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(v174, v55, &type metadata for UInt32, &type metadata for Int, v53, v54, v31);
    uint32_t v56 = v174[0];
    uint64_t v32 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v59 = _allocateUninitializedArray<A>(_:)(0LL, v32);
    if (os_log_type_enabled(v58, (os_log_type_t)v57))
    {
      uint64_t v33 = v119;
      unint64_t v43 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v41 = sub_5150(&qword_D6B60);
      uint64_t v42 = 0LL;
      uint64_t v44 = sub_74D0(0LL, v41, v41);
      uint64_t v45 = sub_74D0(v42, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v49 = &v172;
      uint64_t v172 = v43;
      uint64_t v50 = &v171;
      uint64_t v171 = v44;
      int v47 = &v170;
      uint64_t v170 = v45;
      unsigned int v46 = 0;
      sub_7528(0LL, &v172);
      sub_7528(v46, v49);
      Swift::String v169[2] = v59;
      uint64_t v48 = &v39;
      __chkstk_darwin(v34);
      uint64_t v35 = v50;
      unsigned int v36 = &v39 - 6;
      uint64_t v51 = &v39 - 6;
      void v36[2] = (uint64_t)v49;
      v36[3] = (uint64_t)v35;
      void v36[4] = v37;
      uint64_t v52 = sub_5150(&qword_D6B78);
      unint64_t v38 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v51, v52, v38);
      if (v33)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v58, (os_log_type_t)v57, "Attempting to reinitialize PlayWithMeData!", v43, v56);
        uint64_t v40 = 0LL;
        sub_7580(v44, 0LL);
        sub_7580(v45, v40);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v59);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v59);
    }

    return (void *)(*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v125, v122);
  }

  else
  {
    swift_bridgeObjectRetain(v121);
    v168[1] = v121;
    uint64_t v116 = sub_5150(&qword_D7E20);
    unint64_t v4 = sub_5EF10();
    Collection<>.makeIterator()(v169, v116, v4);
    for (uint64_t i = v119; ; uint64_t i = v70)
    {
      uint64_t v114 = i;
      uint64_t v5 = sub_5150(&qword_D7F90);
      IndexingIterator.next()(v168, v5);
      uint64_t v115 = v168[0];
      if (!v168[0]) {
        break;
      }
      uint64_t v113 = v115;
      uint64_t v111 = v115;
      uint64_t v167 = v115;
      uint64_t v6 = sub_6B720();
      uint64_t v109 = *(void *)v6;
      uint64_t v110 = *((void *)v6 + 1);
      swift_bridgeObjectRetain(v110);
      Swift::String v112 = v164;
      v164[0] = v109;
      v164[1] = v110;
      Dictionary.subscript.getter(v165);
      sub_8DD8((uint64_t)v112);
      if (v165[3])
      {
        if ((swift_dynamicCast(&v128, v165, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
        {
          Swift::String v108 = v128;
        }

        else
        {
          v108._uint64_t countAndFlagsBits = 0LL;
          v108._object = 0LL;
        }

        Swift::String v107 = v108;
      }

      else
      {
        uint64_t v60 = 0LL;
        sub_1D580(v165);
        v107._uint64_t countAndFlagsBits = (uint64_t)v60;
        v107._object = v60;
      }

      Swift::String v163 = v107;
      if (v107._object)
      {
        Swift::String v166 = v163;
      }

      else
      {
        Swift::String v166 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
        sub_8DD8((uint64_t)&v163);
      }

      object = v166._object;
      Swift::String v162 = v166;
      if ((sub_6D7A8(v166._countAndFlagsBits, (uint64_t)v166._object) & 1) != 0)
      {
        uint64_t v7 = sub_6B8DC();
        uint64_t v103 = *(void *)v7;
        uint64_t v104 = *((void *)v7 + 1);
        swift_bridgeObjectRetain(v104);
        uint64_t v105 = v155;
        v155[0] = v103;
        v155[1] = v104;
        Dictionary.subscript.getter(v156);
        sub_8DD8((uint64_t)v105);
        if (v156[3])
        {
          if ((swift_dynamicCast(&v129, v156, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
          {
            Swift::String v102 = v129;
          }

          else
          {
            v102._uint64_t countAndFlagsBits = 0LL;
            v102._object = 0LL;
          }

          Swift::String v101 = v102;
        }

        else
        {
          Swift::String v71 = 0LL;
          sub_1D580(v156);
          v101._uint64_t countAndFlagsBits = (uint64_t)v71;
          v101._object = v71;
        }

        Swift::String v154 = v101;
        if (v101._object)
        {
          Swift::String v157 = v154;
        }

        else
        {
          Swift::String v157 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
          sub_8DD8((uint64_t)&v154);
        }

        Swift::String v97 = v157;
        Swift::String v153 = v157;
        uint64_t v8 = sub_6B68C();
        uint64_t v98 = *(void *)v8;
        uint64_t v99 = *((void *)v8 + 1);
        swift_bridgeObjectRetain(v99);
        Swift::String v100 = v150;
        v150[0] = v98;
        v150[1] = v99;
        Dictionary.subscript.getter(v151);
        sub_8DD8((uint64_t)v100);
        if (v151[3])
        {
          uint64_t v9 = sub_5150(&qword_D8588);
          else {
            uint64_t v96 = 0LL;
          }
          uint64_t v95 = v96;
        }

        else
        {
          uint64_t v72 = 0LL;
          sub_1D580(v151);
          uint64_t v95 = v72;
        }

        uint64_t v149 = v95;
        if (v95)
        {
          uint64_t v152 = v149;
        }

        else
        {
          uint64_t v10 = sub_5150(&qword_D7FA8);
          uint64_t v152 = _allocateUninitializedArray<A>(_:)(0LL, v10);
          sub_1B82C(&v149);
        }

        uint64_t v92 = v152;
        uint64_t v148 = v152;
        uint64_t v147 = _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
        swift_bridgeObjectRetain(v92);
        v145[1] = v92;
        uint64_t v93 = sub_5150(&qword_D8588);
        unint64_t v11 = sub_6FDB4();
        Collection<>.makeIterator()(v146, v93, v11);
        for (uint64_t j = v114; ; uint64_t j = v90)
        {
          uint64_t v90 = j;
          uint64_t v12 = sub_5150(&qword_D8598);
          IndexingIterator.next()(v145, v12);
          uint64_t v91 = v145[0];
          if (!v145[0]) {
            break;
          }
          uint64_t v89 = v91;
          uint64_t v87 = v91;
          uint64_t v142 = v91;
          uint64_t v13 = sub_6B7B4();
          uint64_t v85 = *(void *)v13;
          uint64_t v86 = *((void *)v13 + 1);
          swift_bridgeObjectRetain(v86);
          uint64_t v88 = v139;
          v139[0] = v85;
          v139[1] = v86;
          Dictionary.subscript.getter(&v140);
          sub_8DD8((uint64_t)v88);
          Swift::String v138 = v140;
          if (v140._object)
          {
            Swift::String v141 = v138;
          }

          else
          {
            Swift::String v141 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
            sub_8DD8((uint64_t)&v138);
          }

          Swift::String v81 = v141;
          Swift::String v137 = v141;
          unint64_t v14 = sub_6B848();
          uint64_t v82 = *(void *)v14;
          uint64_t v83 = *((void *)v14 + 1);
          swift_bridgeObjectRetain(v83);
          uint64_t v84 = v134;
          v134[0] = v82;
          v134[1] = v83;
          Dictionary.subscript.getter(&v135);
          sub_8DD8((uint64_t)v84);
          Swift::String v133 = v135;
          if (v135._object)
          {
            Swift::String v136 = v133;
          }

          else
          {
            Swift::String v136 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
            sub_8DD8((uint64_t)&v133);
          }

          uint64_t countAndFlagsBits = v136._countAndFlagsBits;
          uint64_t v80 = v136._object;
          Swift::String v132 = v136;
          swift_bridgeObjectRetain(v81._object);
          swift_bridgeObjectRetain(v80);
          uint64_t v15 = nullsub_1(v81._countAndFlagsBits);
          uint64_t v79 = v131;
          v131[0] = v15;
          v131[1] = v16;
          v131[2] = v17;
          v131[3] = v18;
          uint64_t v19 = sub_5150(&qword_D8568);
          Array.append(_:)(v79, v19);
          swift_bridgeObjectRelease(v80);
          swift_bridgeObjectRelease(v81._object);
          swift_bridgeObjectRelease(v87);
        }

        sub_1B82C(v146);
        swift_bridgeObjectRetain(v97._object);
        unint64_t v76 = &v147;
        uint64_t v73 = v147;
        swift_bridgeObjectRetain(v147);
        uint64_t v20 = nullsub_1(v97._countAndFlagsBits);
        uint64_t v74 = v144;
        v144[0] = v20;
        v144[1] = v21;
        v144[2] = v22;
        uint64_t v75 = &v143;
        swift_beginAccess(v118 + 32);
        uint64_t v23 = sub_5150(&qword_D8578);
        Array.append(_:)(v74, v23);
        swift_endAccess(v75);
        sub_1B82C(v76);
        swift_bridgeObjectRelease(v92);
        swift_bridgeObjectRelease(v97._object);
        uint64_t v77 = v90;
      }

      else
      {
        uint64_t v77 = v114;
      }

      uint64_t v70 = v77;
      uint64_t v61 = &v161;
      uint64_t v68 = 0LL;
      swift_beginAccess(v118 + 32);
      uint64_t v62 = *(void *)(v118 + 32);
      swift_bridgeObjectRetain(v62);
      swift_endAccess(v61);
      Swift::String v64 = &v160;
      uint64_t v160 = v62;
      uint64_t v63 = sub_5150(&qword_D8578);
      unint64_t v24 = sub_6FD44();
      uint64_t v66 = Sequence.shuffled()(v63, v24);
      sub_1B82C(v64);
      swift_bridgeObjectRetain(v66);
      Swift::String v65 = &v159;
      uint64_t v67 = 33LL;
      swift_beginAccess(v118 + 40);
      uint64_t v25 = *(void *)(v118 + 40);
      *(void *)(v118 + swift_beginAccess(v0 + 40) = v66;
      swift_bridgeObjectRelease(v25);
      swift_endAccess(v65);
      swift_bridgeObjectRelease(v66);
      uint64_t v69 = &v158;
      swift_beginAccess(v118 + 56);
      Swift::String v26 = v69;
      *(_BYTE *)(v118 + swift_beginAccess(v0 + 56) = 1;
      swift_endAccess(v26);
      swift_bridgeObjectRelease(object);
      swift_bridgeObjectRelease(v111);
    }

    uint64_t result = v169;
    sub_1B82C(v169);
  }

  return result;
}

BOOL sub_6D664()
{
  uint64_t v9 = v0;
  swift_beginAccess(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain(v5);
  swift_endAccess(v8);
  uint64_t v6 = Array.count.getter(v5, &unk_CFBA0);
  swift_bridgeObjectRelease(v5);
  BOOL result = v6;
  if (__OFSUB__(v6, 1LL))
  {
    __break(1u);
  }

  else
  {
    swift_beginAccess(v4 + 48);
    uint64_t v3 = *(void *)(v4 + 48);
    swift_endAccess(v7);
    return v6 - 1 == v3;
  }

  return result;
}

BOOL sub_6D744()
{
  uint64_t v4 = v0;
  swift_beginAccess(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_endAccess(v3);
  return v2 <= 3;
}

uint64_t sub_6D7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v234 = a1;
  uint64_t v235 = a2;
  uint64_t v312 = 0LL;
  uint64_t v313 = 0LL;
  uint64_t v311 = 0LL;
  uint64_t v310 = 0LL;
  uint64_t v309 = 0LL;
  uint64_t v308 = 0LL;
  id v241 = v307;
  v307[0] = 0LL;
  v307[1] = 0LL;
  __int128 v300 = 0u;
  __int128 v301 = 0u;
  uint64_t v297 = 0LL;
  uint64_t v244 = 0LL;
  __int128 v285 = 0u;
  __int128 v286 = 0u;
  __int128 v280 = 0u;
  __int128 v281 = 0u;
  uint64_t v215 = 0LL;
  uint64_t v208 = type metadata accessor for Logger(0LL);
  uint64_t v209 = *(void *)(v208 - 8);
  unint64_t v210 = (*(void *)(v209 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v3 = __chkstk_darwin(v2);
  Swift::String v211 = (char *)v103 - v210;
  unint64_t v212 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v213 = (char *)v103 - v212;
  uint64_t v224 = type metadata accessor for Date(v5);
  uint64_t v218 = *(void *)(v224 - 8);
  unint64_t v214 = (*(void *)(v218 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v6);
  uint64_t v226 = (char *)v103 - v214;
  uint64_t v228 = type metadata accessor for Calendar.Component(v7);
  uint64_t v219 = *(void **)(v228 - 8);
  unint64_t v216 = (v219[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  uint64_t v227 = (char *)v103 - v216;
  uint64_t v231 = type metadata accessor for Calendar(v9);
  uint64_t v220 = *(void *)(v231 - 8);
  unint64_t v217 = (*(void *)(v220 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  int v230 = (char *)v103 - v217;
  uint64_t v312 = v12;
  uint64_t v313 = v13;
  uint64_t v311 = v14;
  static Calendar.current.getter(v11);
  BOOL v223 = (double (*)(char *, void, uint64_t))v219[13];
  double v15 = v223(v227, enum case for Calendar.Component.month(_:), v228);
  static Date.now.getter(v15);
  uint64_t v16 = Calendar.component(_:from:)(v227, v226);
  uint64_t v17 = v230;
  uint64_t v221 = v16;
  uint64_t v225 = *(void (**)(char *, uint64_t))(v218 + 8);
  v225(v226, v224);
  uint64_t v229 = (void (*)(char *, uint64_t))v219[1];
  v229(v227, v228);
  id v232 = *(void (**)(char *, uint64_t))(v220 + 8);
  v232(v17, v231);
  uint64_t v310 = v221;
  static Calendar.current.getter(v18);
  double v19 = v223(v227, enum case for Calendar.Component.day(_:), v228);
  static Date.now.getter(v19);
  uint64_t v20 = Calendar.component(_:from:)(v227, v226);
  uint64_t v21 = v230;
  uint64_t v222 = v20;
  v225(v226, v224);
  v229(v227, v228);
  v232(v21, v231);
  uint64_t v309 = v222;
  static Calendar.current.getter(v22);
  double v23 = v223(v227, enum case for Calendar.Component.year(_:), v228);
  static Date.now.getter(v23);
  uint64_t v233 = Calendar.component(_:from:)(v227, v226);
  v225(v226, v224);
  v229(v227, v228);
  v232(v230, v231);
  uint64_t v308 = v233;
  uint64_t v305 = v234;
  uint64_t v306 = v235;
  Swift::String v239 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(",", 1uLL, 1);
  unint64_t v238 = sub_B880();
  id v237 = &type metadata for String;
  uint64_t v236 = sub_3211C();
  char v24 = sub_32130();
  uint64_t v240 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)( v239._countAndFlagsBits,  v239._object,  v236,  v24 & 1,  v237,  v238);
  swift_bridgeObjectRelease(v239._object);
  uint64_t v304 = v240;
  uint64_t v242 = sub_5150(&qword_D7638);
  unint64_t v243 = sub_2A0A0();
  Collection<>.makeIterator()(v241, v242, v243);
  for (uint64_t i = v244; ; uint64_t i = v205)
  {
    uint64_t v205 = i;
    uint64_t v25 = sub_5150(&qword_D85A0);
    IndexingIterator.next()(&v302, v25);
    __int128 v206 = v302;
    __int128 v207 = v303;
    if (!*((void *)&v303 + 1))
    {
      sub_1B82C(v307);
      int v169 = 1;
      return v169 & 1;
    }

    __int128 v203 = v206;
    __int128 v204 = v207;
    uint64_t v191 = *((void *)&v207 + 1);
    uint64_t v192 = v207;
    uint64_t v193 = *((void *)&v206 + 1);
    uint64_t v194 = v206;
    __int128 v300 = v206;
    __int128 v301 = v207;
    __int128 v298 = v206;
    __int128 v299 = v207;
    Swift::String v198 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("==", 2uLL, 1);
    unint64_t v197 = sub_6FE24();
    BOOL v196 = &type metadata for Substring;
    uint64_t v195 = sub_3211C();
    char v26 = sub_32130();
    uint64_t v199 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)( v198._countAndFlagsBits,  v198._object,  v195,  v26 & 1,  v196,  v197);
    swift_bridgeObjectRelease(v198._object);
    uint64_t v297 = v199;
    swift_bridgeObjectRetain(v199);
    uint64_t v200 = &v294;
    uint64_t v294 = v199;
    Collection.first.getter(&v295, v242, v243);
    sub_1B82C(v200);
    __int128 v201 = v295;
    __int128 v202 = v296;
    if (!*((void *)&v296 + 1)) {
      goto LABEL_36;
    }
    __int128 v189 = v201;
    __int128 v190 = v202;
    uint64_t v182 = *((void *)&v202 + 1);
    uint64_t v183 = v202;
    uint64_t v184 = *((void *)&v201 + 1);
    uint64_t v185 = v201;
    __int128 v285 = v201;
    __int128 v286 = v202;
    swift_bridgeObjectRetain(v199);
    uint64_t v186 = &v282;
    uint64_t v282 = v199;
    unint64_t v27 = sub_6FFFC();
    BidirectionalCollection.last.getter(v242, v27);
    sub_1B82C(v186);
    __int128 v187 = v283;
    __int128 v188 = v284;
    if (!*((void *)&v284 + 1))
    {
      swift_bridgeObjectRelease(v182);
      goto LABEL_36;
    }

    __int128 v180 = v187;
    __int128 v181 = v188;
    uint64_t v176 = *((void *)&v188 + 1);
    uint64_t v177 = v188;
    uint64_t v178 = *((void *)&v187 + 1);
    uint64_t v179 = v187;
    __int128 v280 = v187;
    __int128 v281 = v188;
    if (Array.count.getter(v199, &type metadata for Substring) != 2) {
      break;
    }
    uint64_t v173 = v279;
    v279[0] = v185;
    v279[1] = v184;
    v279[2] = v183;
    v279[3] = v182;
    Swift::String v29 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("M", 1uLL, 1);
    uint64_t v174 = &v278;
    Swift::String v278 = v29;
    int v175 = static StringProtocol.== infix<A>(_:_:)(v173);
    sub_8DD8((uint64_t)v174);
    if ((v175 & 1) != 0)
    {
      uint64_t v172 = String.init(_:)(v179, v178, v177);
      uint64_t v171 = v30;
      unint64_t v31 = sub_428E8();
      FixedWidthInteger.init(_:)(&v251, v172, v171, &type metadata for Int, v31);
      uint64_t v247 = v221;
      char v248 = 0;
      uint64_t v249 = v251;
      char v250 = v252 & 1;
      sub_701AC((uint64_t)&v247, (uint64_t)&v246);
      if ((v250 & 1) != 0 || v246 != v249) {
        goto LABEL_27;
      }
    }

    else
    {
      Swift::String v166 = v277;
      v277[0] = v185;
      v277[1] = v184;
      v277[2] = v183;
      v277[3] = v182;
      Swift::String v32 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("D", 1uLL, 1);
      uint64_t v167 = &v276;
      Swift::String v276 = v32;
      int v168 = static StringProtocol.== infix<A>(_:_:)(v166);
      sub_8DD8((uint64_t)v167);
      if ((v168 & 1) != 0)
      {
        uint64_t v165 = String.init(_:)(v179, v178, v177);
        uint64_t v164 = v33;
        unint64_t v34 = sub_428E8();
        FixedWidthInteger.init(_:)(&v258, v165, v164, &type metadata for Int, v34);
        uint64_t v254 = v222;
        char v255 = 0;
        uint64_t v256 = v258;
        char v257 = v259 & 1;
        sub_701AC((uint64_t)&v254, (uint64_t)&v253);
        if ((v257 & 1) != 0 || v253 != v256) {
          goto LABEL_27;
        }
      }

      else
      {
        uint64_t v160 = v275;
        v275[0] = v185;
        v275[1] = v184;
        v275[2] = v183;
        v275[3] = v182;
        Swift::String v35 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("Y", 1uLL, 1);
        uint64_t v161 = &v274;
        Swift::String v274 = v35;
        int v162 = static StringProtocol.== infix<A>(_:_:)(v160);
        sub_8DD8((uint64_t)v161);
        if ((v162 & 1) == 0)
        {
          unint64_t v38 = v213;
          uint64_t v39 = sub_AD514();
          (*(void (**)(char *, uint64_t, uint64_t))(v209 + 16))(v38, v39, v208);
          swift_bridgeObjectRetain(v191);
          uint64_t v146 = 7LL;
          uint64_t v40 = (void *)swift_allocObject(&unk_CFA58, 48LL, 7LL);
          uint64_t v41 = v193;
          uint64_t v42 = v192;
          uint64_t v43 = v191;
          int v139 = v40;
          void v40[2] = v194;
          void v40[3] = v41;
          void v40[4] = v42;
          v40[5] = v43;
          swift_retain();
          uint64_t v145 = 32LL;
          uint64_t v44 = swift_allocObject(&unk_CFA80, 32LL, v146);
          uint64_t v45 = v139;
          uint64_t v147 = v44;
          *(void *)(v44 + swift_beginAccess(v1 + 16) = sub_6FEC8;
          *(void *)(v44 + swift_beginAccess(v1 + 24) = v45;
          uint64_t v46 = swift_release();
          uint64_t v155 = (os_log_s *)Logger.logObject.getter(v46);
          int v156 = static os_log_type_t.debug.getter();
          uint64_t v142 = &v272;
          uint64_t v272 = 12LL;
          unint64_t v140 = sub_7788();
          unint64_t v141 = sub_77F0();
          unint64_t v47 = sub_7858();
          UnsignedInteger<>.init<A>(_:)(&v273, v142, &type metadata for UInt32, &type metadata for Int, v140, v141, v47);
          uint32_t v143 = v273;
          uint64_t v144 = 17LL;
          uint64_t v48 = swift_allocObject(&unk_CFAA8, 17LL, v146);
          uint64_t v49 = v144;
          uint64_t v50 = v146;
          uint64_t v149 = v48;
          *(_BYTE *)(v48 + swift_beginAccess(v1 + 16) = 32;
          uint64_t v51 = swift_allocObject(&unk_CFAD0, v49, v50);
          uint64_t v52 = v145;
          uint64_t v53 = v146;
          uint64_t v150 = v51;
          *(_BYTE *)(v51 + swift_beginAccess(v1 + 16) = 8;
          uint64_t v54 = swift_allocObject(&unk_CFAF8, v52, v53);
          uint64_t v55 = v145;
          uint64_t v56 = v146;
          uint64_t v57 = v54;
          uint64_t v58 = v147;
          uint64_t v148 = v57;
          *(void *)(v57 + swift_beginAccess(v1 + 16) = sub_6FF18;
          *(void *)(v57 + swift_beginAccess(v1 + 24) = v58;
          uint64_t v59 = swift_allocObject(&unk_CFB20, v55, v56);
          uint64_t v60 = v148;
          uint64_t v152 = v59;
          *(void *)(v59 + swift_beginAccess(v1 + 16) = sub_88B8;
          *(void *)(v59 + swift_beginAccess(v1 + 24) = v60;
          uint64_t v154 = sub_5150((uint64_t *)&unk_D6B50);
          uint64_t v151 = _allocateUninitializedArray<A>(_:)(3LL, v154);
          Swift::String v153 = v61;
          swift_retain();
          uint64_t v62 = v149;
          uint64_t v63 = v153;
          *Swift::String v153 = sub_884C;
          v63[1] = v62;
          swift_retain();
          uint64_t v64 = v150;
          Swift::String v65 = v153;
          v153[2] = sub_884C;
          void v65[3] = v64;
          swift_retain();
          uint64_t v66 = v151;
          uint64_t v67 = v152;
          uint64_t v68 = v153;
          v153[4] = sub_8900;
          v68[5] = v67;
          sub_6648();
          swift_bridgeObjectRelease(v66);
          if (os_log_type_enabled(v155, (os_log_type_t)v156))
          {
            uint64_t v69 = v205;
            Swift::String v132 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
            uint64_t v131 = sub_5150(&qword_D6B60);
            uint64_t v133 = sub_74D0(0LL, v131, v131);
            uint64_t v134 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
            Swift::String v135 = &v271;
            id v271 = v132;
            Swift::String v136 = &v270;
            uint64_t v270 = v133;
            Swift::String v137 = &v269;
            uint64_t v269 = v134;
            sub_7528(2LL, &v271);
            sub_7528(1LL, v135);
            uint64_t v267 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v268 = v149;
            sub_753C(&v267, (uint64_t)v135, (uint64_t)v136, (uint64_t)v137);
            uint64_t v138 = v69;
            if (v69)
            {
              __break(1u);
            }

            else
            {
              uint64_t v267 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v268 = v150;
              sub_753C(&v267, (uint64_t)&v271, (uint64_t)&v270, (uint64_t)&v269);
              uint64_t v130 = 0LL;
              uint64_t v267 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
              uint64_t v268 = v152;
              sub_753C(&v267, (uint64_t)&v271, (uint64_t)&v270, (uint64_t)&v269);
              _os_log_impl(&dword_0, v155, (os_log_type_t)v156, "Unrecognized condition: %s", v132, v143);
              sub_7580(v133, 0LL);
              sub_7580(v134, 1LL);
              UnsafeMutablePointer.deallocate()();
              swift_release();
              swift_release();
              swift_release();
            }
          }

          else
          {
            swift_release();
            swift_release();
            swift_release();
          }

          (*(void (**)(char *, uint64_t))(v209 + 8))(v213, v208);
          swift_bridgeObjectRelease(v176);
          swift_bridgeObjectRelease(v182);
          swift_bridgeObjectRelease(v199);
          swift_bridgeObjectRelease(v191);
          sub_1B82C(v307);
          int v169 = 0;
          return v169 & 1;
        }

        uint64_t v159 = String.init(_:)(v179, v178, v177);
        uint64_t v158 = v36;
        unint64_t v37 = sub_428E8();
        FixedWidthInteger.init(_:)(&v265, v159, v158, &type metadata for Int, v37);
        uint64_t v261 = v233;
        char v262 = 0;
        uint64_t v263 = v265;
        char v264 = v266 & 1;
        sub_701AC((uint64_t)&v261, (uint64_t)&v260);
        if ((v264 & 1) != 0 || v260 != v263)
        {
LABEL_27:
          swift_bridgeObjectRelease(v176);
          swift_bridgeObjectRelease(v182);
          swift_bridgeObjectRelease(v199);
          swift_bridgeObjectRelease(v191);
          sub_1B82C(v307);
          int v169 = 0;
          return v169 & 1;
        }
      }
    }

    swift_bridgeObjectRelease(v176);
    swift_bridgeObjectRelease(v182);
    swift_bridgeObjectRelease(v199);
    swift_bridgeObjectRelease(v191);
  }

  swift_bridgeObjectRelease(v176);
  swift_bridgeObjectRelease(v182);
LABEL_36:
  uint64_t v70 = v211;
  uint64_t v71 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v209 + 16))(v70, v71, v208);
  swift_bridgeObjectRetain(v191);
  uint64_t v119 = 7LL;
  uint64_t v72 = (void *)swift_allocObject(&unk_CF968, 48LL, 7LL);
  uint64_t v73 = v193;
  uint64_t v74 = v192;
  uint64_t v75 = v191;
  Swift::String v112 = v72;
  v72[2] = v194;
  v72[3] = v73;
  void v72[4] = v74;
  void v72[5] = v75;
  swift_retain();
  uint64_t v118 = 32LL;
  uint64_t v76 = swift_allocObject(&unk_CF990, 32LL, v119);
  uint64_t v77 = v112;
  uint64_t v120 = v76;
  *(void *)(v76 + swift_beginAccess(v1 + 16) = sub_6FEC8;
  *(void *)(v76 + swift_beginAccess(v1 + 24) = v77;
  uint64_t v78 = swift_release();
  Swift::String v128 = (os_log_s *)Logger.logObject.getter(v78);
  int v129 = static os_log_type_t.debug.getter();
  uint64_t v115 = &v292;
  uint64_t v292 = 12LL;
  unint64_t v113 = sub_7788();
  unint64_t v114 = sub_77F0();
  unint64_t v79 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v293, v115, &type metadata for UInt32, &type metadata for Int, v113, v114, v79);
  uint32_t v116 = v293;
  uint64_t v117 = 17LL;
  uint64_t v80 = swift_allocObject(&unk_CF9B8, 17LL, v119);
  uint64_t v81 = v117;
  uint64_t v82 = v119;
  uint64_t v122 = v80;
  *(_BYTE *)(v80 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v83 = swift_allocObject(&unk_CF9E0, v81, v82);
  uint64_t v84 = v118;
  uint64_t v85 = v119;
  uint64_t v123 = v83;
  *(_BYTE *)(v83 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v86 = swift_allocObject(&unk_CFA08, v84, v85);
  uint64_t v87 = v118;
  uint64_t v88 = v119;
  uint64_t v89 = v86;
  uint64_t v90 = v120;
  uint64_t v121 = v89;
  *(void *)(v89 + swift_beginAccess(v1 + 16) = sub_6FF18;
  *(void *)(v89 + swift_beginAccess(v1 + 24) = v90;
  uint64_t v91 = swift_allocObject(&unk_CFA30, v87, v88);
  uint64_t v92 = v121;
  uint64_t v125 = v91;
  *(void *)(v91 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v91 + swift_beginAccess(v1 + 24) = v92;
  uint64_t v127 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v124 = _allocateUninitializedArray<A>(_:)(3LL, v127);
  uint64_t v126 = v93;
  swift_retain();
  uint64_t v94 = v122;
  uint64_t v95 = v126;
  *uint64_t v126 = sub_884C;
  v95[1] = v94;
  swift_retain();
  uint64_t v96 = v123;
  Swift::String v97 = v126;
  v126[2] = sub_884C;
  v97[3] = v96;
  swift_retain();
  uint64_t v98 = v124;
  uint64_t v99 = v125;
  Swift::String v100 = v126;
  v126[4] = sub_8900;
  v100[5] = v99;
  sub_6648();
  swift_bridgeObjectRelease(v98);
  if (os_log_type_enabled(v128, (os_log_type_t)v129))
  {
    uint64_t v101 = v205;
    uint64_t v105 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v104 = sub_5150(&qword_D6B60);
    uint64_t v106 = sub_74D0(0LL, v104, v104);
    uint64_t v107 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    Swift::String v108 = &v291;
    uint64_t v291 = v105;
    uint64_t v109 = &v290;
    uint64_t v290 = v106;
    uint64_t v110 = &v289;
    uint64_t v289 = v107;
    sub_7528(2LL, &v291);
    sub_7528(1LL, v108);
    id v287 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v288 = v122;
    sub_753C(&v287, (uint64_t)v108, (uint64_t)v109, (uint64_t)v110);
    uint64_t v111 = v101;
    if (v101)
    {
      __break(1u);
    }

    else
    {
      id v287 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v288 = v123;
      sub_753C(&v287, (uint64_t)&v291, (uint64_t)&v290, (uint64_t)&v289);
      v103[1] = 0LL;
      id v287 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v288 = v125;
      sub_753C(&v287, (uint64_t)&v291, (uint64_t)&v290, (uint64_t)&v289);
      _os_log_impl(&dword_0, v128, (os_log_type_t)v129, "Unrecognized condition: %s", v105, v116);
      sub_7580(v106, 0LL);
      sub_7580(v107, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v208);
  swift_bridgeObjectRelease(v199);
  swift_bridgeObjectRelease(v191);
  sub_1B82C(v307);
  int v169 = 0;
  return v169 & 1;
}

uint64_t sub_6EE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t result = a1;
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_6EEB4(uint64_t a1)
{
  uint64_t v53 = 0LL;
  uint64_t v52 = 0LL;
  memset(__b, 0, sizeof(__b));
  uint64_t v32 = 0LL;
  uint64_t v61 = a1;
  uint64_t v60 = v1;
  swift_beginAccess(v1 + 56);
  char v28 = *(_BYTE *)(v1 + 56);
  swift_endAccess(v59);
  if ((v28 & 1) == 0) {
    sub_6BE8C(a1);
  }
  swift_beginAccess(v26 + 48);
  uint64_t v25 = *(void *)(v26 + 48);
  uint64_t result = swift_endAccess(v57);
  if (__OFADD__(v25, 3LL))
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  uint64_t v56 = v25 + 3;
  swift_beginAccess(v26 + 24);
  uint64_t v23 = *(void *)(v26 + 24);
  swift_bridgeObjectRetain(v23);
  swift_endAccess(v55);
  uint64_t v24 = Array.count.getter(v23, &unk_CFBA0);
  swift_bridgeObjectRelease(v23);
  uint64_t result = v24;
  if (__OFSUB__(v24, 1LL)) {
    goto LABEL_26;
  }
  uint64_t v54 = v24 - 1;
  min<A>(_:_:)(&v58, &v56, &v54);
  uint64_t v22 = v58;
  uint64_t v53 = v58;
  uint64_t v52 = _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
  swift_beginAccess(v26 + 48);
  uint64_t v21 = *(void *)(v26 + 48);
  swift_endAccess(v49);
  uint64_t v48 = v21;
  uint64_t v47 = v22;
  uint64_t v46 = 1LL;
  stride<A>(from:to:by:)(v50, &v48, &v47, &v46, &type metadata for Int, &protocol witness table for Int);
  uint64_t v43 = v50[0];
  uint64_t v44 = v50[1];
  uint64_t v45 = v50[2];
  uint64_t v5 = sub_5150(&qword_D85B8);
  StrideTo.makeIterator()(__b, v5);
  while (1)
  {
    uint64_t v6 = sub_5150(&qword_D85C0);
    StrideToIterator.next()(&v41, v6);
    uint64_t v20 = v41;
    if ((v42 & 1) != 0) {
      break;
    }
    uint64_t v32 = v41;
    swift_beginAccess(v26 + 24);
    uint64_t v19 = *(void *)(v26 + 24);
    swift_bridgeObjectRetain(v19);
    swift_endAccess(v31);
    Array.subscript.getter(v30, v20, v19);
    v29[0] = v30[0];
    v29[1] = v30[1];
    v29[2] = v30[2];
    void v29[3] = v30[3];
    uint64_t v7 = sub_5150(&qword_D8568);
    Array.append(_:)(v29, v7);
    swift_bridgeObjectRelease(v19);
  }

  swift_beginAccess(v26 + 48);
  uint64_t v16 = *(void *)(v26 + 48);
  swift_endAccess(v40);
  swift_beginAccess(v26 + 24);
  uint64_t v17 = *(void *)(v26 + 24);
  swift_bridgeObjectRetain(v17);
  swift_endAccess(v39);
  uint64_t v18 = Array.count.getter(v17, &unk_CFBA0);
  swift_bridgeObjectRelease(v17);
  uint64_t result = v18;
  if (__OFSUB__(v18, 2LL)) {
    goto LABEL_27;
  }
  if (v16 != v18 - 2)
  {
LABEL_24:
    swift_beginAccess(v26 + 48);
    *(void *)(v26 + 4sub_1D580(v0 + 8) = v22;
    swift_endAccess(v38);
    uint64_t v12 = v52;
    swift_bridgeObjectRetain(v52);
    sub_1B82C(&v52);
    return v12;
  }

  uint64_t result = swift_beginAccess(v26 + 48);
  uint64_t v9 = *(void *)(v26 + 48);
  uint64_t v15 = v9 + 1;
  if (!__OFADD__(v9, 1LL))
  {
    *(void *)(v26 + 4sub_1D580(v0 + 8) = v15;
    swift_endAccess(v37);
    swift_beginAccess(v26 + 48);
    uint64_t v13 = *(void *)(v26 + 48);
    swift_endAccess(v36);
    swift_beginAccess(v26 + 24);
    uint64_t v14 = *(void *)(v26 + 24);
    swift_bridgeObjectRetain(v14);
    swift_endAccess(v35);
    Array.subscript.getter(v34, v13, v14);
    v33[0] = v34[0];
    v33[1] = v34[1];
    v33[2] = v34[2];
    v33[3] = v34[3];
    uint64_t v11 = sub_5150(&qword_D8568);
    Array.append(_:)(v33, v11);
    swift_bridgeObjectRelease(v14);
    goto LABEL_24;
  }

LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_6F454(uint64_t a1)
{
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v28 = a1;
  uint64_t v27 = v1;
  swift_beginAccess(v1 + 56);
  char v16 = *(_BYTE *)(v1 + 56);
  swift_endAccess(v26);
  if ((v16 & 1) == 0) {
    sub_6C90C(a1);
  }
  swift_beginAccess(v15 + 6);
  uint64_t v13 = v15[6];
  swift_endAccess(v25);
  swift_beginAccess(v15 + 3);
  uint64_t v11 = v15[3];
  swift_bridgeObjectRetain(v11);
  swift_endAccess(v24);
  uint64_t v12 = Array.count.getter(v11, &unk_CFBA0);
  swift_bridgeObjectRelease(v11);
  if (v13 >= v12)
  {
    uint64_t countAndFlagsBits = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1)._countAndFlagsBits;
    _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
    return nullsub_1(countAndFlagsBits);
  }

  swift_beginAccess(v15 + 6);
  uint64_t v7 = v15[6];
  swift_endAccess(v23);
  swift_beginAccess(v15 + 5);
  uint64_t v8 = v15[5];
  swift_bridgeObjectRetain(v8);
  swift_endAccess(v22);
  Array.subscript.getter(v21, v7, v8);
  uint64_t v9 = v21[0];
  uint64_t v18 = v21[0];
  uint64_t v19 = v21[1];
  uint64_t v20 = v21[2];
  swift_bridgeObjectRelease(v8);
  uint64_t result = swift_beginAccess(v15 + 6);
  uint64_t v3 = v15[6];
  uint64_t v10 = v3 + 1;
  if (!__OFADD__(v3, 1LL))
  {
    v15[6] = v10;
    swift_endAccess(v17);
    return v9;
  }

  __break(1u);
  return result;
}

uint64_t sub_6F720()
{
  uint64_t v53 = 0LL;
  uint64_t v39 = 0LL;
  uint64_t v38 = 0LL;
  uint64_t v40 = type metadata accessor for Logger(0LL);
  uint64_t v41 = *(void *)(v40 - 8);
  unint64_t v42 = (*(void *)(v41 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  uint64_t v43 = (char *)&v14 - v42;
  uint64_t v53 = v0;
  uint64_t v44 = (char *)&v52 + 4;
  swift_beginAccess(v0 + 56);
  int v45 = *(unsigned __int8 *)(v0 + 56);
  swift_endAccess(v44);
  if ((v45 & 1) != 0)
  {
    unint64_t v34 = &v46;
    swift_beginAccess(v37 + 16);
    uint64_t v35 = *(void *)(v37 + 16);
    swift_bridgeObjectRetain(v35);
    swift_endAccess(v34);
    return v35;
  }

  else
  {
    double v2 = v43;
    uint64_t v3 = sub_AD514();
    uint64_t v4 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v2, v3, v40);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v4);
    int v31 = static os_log_type_t.error.getter();
    Swift::String v29 = &v51;
    uint64_t v51 = 2LL;
    unint64_t v27 = sub_7788();
    unint64_t v28 = sub_77F0();
    unint64_t v5 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v52, v29, &type metadata for UInt32, &type metadata for Int, v27, v28, v5);
    uint32_t v30 = v52;
    uint64_t v6 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v33 = _allocateUninitializedArray<A>(_:)(0LL, v6);
    if (os_log_type_enabled(v32, (os_log_type_t)v31))
    {
      uint64_t v7 = v38;
      uint64_t v17 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v15 = sub_5150(&qword_D6B60);
      uint64_t v16 = 0LL;
      uint64_t v18 = sub_74D0(0LL, v15, v15);
      uint64_t v19 = sub_74D0(v16, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v23 = &v50;
      uint64_t v50 = v17;
      uint64_t v24 = &v49;
      uint64_t v49 = v18;
      uint64_t v21 = &v48;
      uint64_t v48 = v19;
      unsigned int v20 = 0;
      sub_7528(0LL, &v50);
      sub_7528(v20, v23);
      uint64_t v47 = v33;
      uint64_t v22 = &v14;
      __chkstk_darwin(v8);
      uint64_t v9 = v24;
      uint64_t v10 = &v14 - 6;
      uint64_t v25 = &v14 - 6;
      void v10[2] = (uint64_t)v23;
      void v10[3] = (uint64_t)v9;
      v10[4] = v11;
      uint64_t v26 = sub_5150(&qword_D6B78);
      unint64_t v12 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v25, v26, v12);
      if (v7)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl( &dword_0,  v32,  (os_log_type_t)v31,  "Attempting to access allGames before initialzing PlayWithMe",  v17,  v30);
        uint64_t v14 = 0LL;
        sub_7580(v18, 0LL);
        sub_7580(v19, v14);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v33);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v33);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
    return _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
  }

uint64_t PlayWithMeData.deinit()
{
  return v2;
}

uint64_t PlayWithMeData.__deallocating_deinit()
{
  uint64_t v0 = PlayWithMeData.deinit();
  return swift_deallocClassInstance(v0, 57LL, 7LL);
}

uint64_t sub_6FBFC()
{
  return sub_6FC34();
}

uint64_t sub_6FC34()
{
  v0[2] = _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
  v0[3] = _allocateUninitializedArray<A>(_:)(0LL, &unk_CFBA0);
  v0[4] = _allocateUninitializedArray<A>(_:)(0LL, &unk_CFC20);
  uint64_t v1 = _allocateUninitializedArray<A>(_:)(0LL, &unk_CFC20);
  uint64_t result = v3;
  *(void *)(v3 + swift_beginAccess(v0 + 40) = v1;
  *(void *)(v3 + 4sub_1D580(v0 + 8) = 0LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 56) = 0;
  return result;
}

unint64_t sub_6FCD4()
{
  uint64_t v3 = qword_D8570;
  if (!qword_D8570)
  {
    uint64_t v0 = sub_8D64(&qword_D8568);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8570);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_6FD44()
{
  uint64_t v3 = qword_D8580;
  if (!qword_D8580)
  {
    uint64_t v0 = sub_8D64(&qword_D8578);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8580);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_6FDB4()
{
  uint64_t v3 = qword_D8590;
  if (!qword_D8590)
  {
    uint64_t v0 = sub_8D64(&qword_D8588);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8590);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_6FE24()
{
  uint64_t v2 = qword_D85A8;
  if (!qword_D85A8)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(WitnessTable, (unint64_t *)&qword_D85A8);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_6FE8C()
{
  return swift_deallocObject(v2, 48LL);
}

uint64_t sub_6FEC8@<X0>(void *a1@<X8>)
{
  return sub_6EE5C(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_6FEDC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6FF18()
{
  return sub_75EC( *(void *)(v0 + 16),  *(void *)(v0 + 24),  (uint64_t)&type metadata for Substring,  (uint64_t)&protocol witness table for Substring);
}

uint64_t sub_6FF34()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6FF5C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_6FF84()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_6FFC0()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_6FFFC()
{
  uint64_t v3 = qword_D85B0;
  if (!qword_D85B0)
  {
    uint64_t v0 = sub_8D64(&qword_D7638);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D85B0);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_7006C()
{
  return swift_deallocObject(v2, 48LL);
}

uint64_t sub_700A8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_700E4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7010C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_70134()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_70170()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_701AC(uint64_t a1, uint64_t a2)
{
  uint64_t result = a2;
  *(void *)a2 = *(void *)a1;
  *(_BYTE *)(a2 + sub_1D580(v0 + 8) = *(_BYTE *)(a1 + 8);
  return result;
}

uint64_t type metadata accessor for PlayWithMeData()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin14PlayWithMeData);
}

uint64_t sub_701EC(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 24));
}

void *sub_7021C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  swift_bridgeObjectRetain(v3);
  a1[1] = v3;
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  swift_bridgeObjectRetain(v6);
  uint64_t result = a1;
  a1[3] = v6;
  return result;
}

void *sub_70280(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v5 = a2[1];
  swift_bridgeObjectRetain(v5);
  uint64_t v2 = a1[1];
  a1[1] = v5;
  swift_bridgeObjectRelease(v2);
  a1[2] = a2[2];
  uint64_t v7 = a2[3];
  swift_bridgeObjectRetain(v7);
  uint64_t v3 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRelease(v3);
  return a1;
}

__n128 sub_702FC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  *(__n128 *)(a1 + swift_beginAccess(v1 + 16) = result;
  return result;
}

void *sub_70310(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  a1[2] = a2[2];
  uint64_t v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_70370(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      int v4 = *(void *)a1 + 0x7FFFFFFF;
    }

    else
    {
      int v3 = -1;
      if (*(void *)(a1 + 8) < 0x100000000uLL) {
        int v3 = *(void *)(a1 + 8);
      }
      int v4 = v3;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_704CC(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)__n128 result = a2 + 0x80000000;
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)(result + swift_beginAccess(v1 + 16) = 0LL;
    *(void *)(result + swift_beginAccess(v1 + 24) = 0LL;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 3sub_1B82C(v0 + 2) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + 3sub_1B82C(v0 + 2) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)(result + sub_1D580(v0 + 8) = a2 - 1;
    }
  }

  return result;
}

void *type metadata accessor for PlayWithMeData.Game()
{
  return &unk_CFBA0;
}

void *sub_706E8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  swift_bridgeObjectRetain(v3);
  a1[1] = v3;
  uint64_t v6 = a2[2];
  swift_bridgeObjectRetain(v6);
  __n128 result = a1;
  a1[2] = v6;
  return result;
}

uint64_t sub_70744(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 16));
}

void *sub_70774(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v5 = a2[1];
  swift_bridgeObjectRetain(v5);
  uint64_t v2 = a1[1];
  a1[1] = v5;
  swift_bridgeObjectRelease(v2);
  uint64_t v7 = a2[2];
  swift_bridgeObjectRetain(v7);
  uint64_t v3 = a1[2];
  a1[2] = v7;
  swift_bridgeObjectRelease(v3);
  return a1;
}

__n128 sub_707E4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  return result;
}

void *sub_707F8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v3);
  uint64_t v4 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_70850(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      int v4 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      int v3 = -1;
      if (!HIDWORD(*(void *)(a1 + 8))) {
        int v3 = *(void *)(a1 + 8);
      }
      int v4 = v3;
    }
  }

  else
  {
    int v4 = -1;
  }

  return (v4 + 1);
}

uint64_t sub_70968(uint64_t result, unsigned int a2, unsigned int a3)
{
  BOOL v3 = a3 > 0x7FFFFFFF;
  if (a2 > 0x7FFFFFFF)
  {
    *(void *)__n128 result = a2 + 0x80000000;
    *(void *)(result + sub_1D580(v0 + 8) = 0LL;
    *(void *)(result + swift_beginAccess(v1 + 16) = 0LL;
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + swift_beginAccess(v1 + 24) = 1;
      }
      else {
        __break(1u);
      }
    }
  }

  else
  {
    if (a3 > 0x7FFFFFFF)
    {
      if (v3) {
        *(_BYTE *)(result + swift_beginAccess(v1 + 24) = 0;
      }
      else {
        __break(1u);
      }
    }

    if (a2) {
      *(void *)(result + sub_1D580(v0 + 8) = a2 - 1;
    }
  }

  return result;
}

void *type metadata accessor for PlayWithMeData.GamePair()
{
  return &unk_CFC20;
}

uint64_t type metadata accessor for PlayWithMeData.Constants()
{
  return objc_opt_self(&OBJC_CLASS____TtCC36SocialConversationFlowDelegatePlugin14PlayWithMeData9Constants);
}

uint64_t sub_70BA4()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_3B2A8();
  uint64_t v10 = *(void *)v1;
  uint64_t v11 = *((void *)v1 + 1);
  swift_bridgeObjectRetain(v11);
  Swift::String v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(":", 1uLL, 1);
  uint64_t v12 = static String.+ infix(_:_:)(v10, v11, v2._countAndFlagsBits);
  uint64_t v15 = v3;
  swift_bridgeObjectRelease(v2._object);
  swift_bridgeObjectRelease(v11);
  uint64_t countAndFlagsBits = v0->_countAndFlagsBits;
  object = v0->_object;
  swift_bridgeObjectRetain(object);
  uint64_t v16 = static String.+ infix(_:_:)(v12, v15, countAndFlagsBits);
  uint64_t v19 = v4;
  swift_bridgeObjectRelease(object);
  swift_bridgeObjectRelease(v15);
  Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(":", 1uLL, 1);
  uint64_t v17 = static String.+ infix(_:_:)(v16, v19, v5._countAndFlagsBits);
  uint64_t v18 = v6;
  swift_bridgeObjectRelease(v5._object);
  swift_bridgeObjectRelease(v19);
  Swift::String v20 = v0[1];
  swift_bridgeObjectRetain(v20._object);
  Swift::String v21 = v20;
  if (v20._object)
  {
    Swift::String v22 = v21;
  }

  else
  {
    Swift::String v22 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("0", 1uLL, 1);
    sub_8DD8((uint64_t)&v21);
  }

  double v8 = v22._object;
  uint64_t v9 = static String.+ infix(_:_:)(v17, v18, v22._countAndFlagsBits);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v18);
  return v9;
}

uint64_t sub_70D80@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  unint64_t v28 = a6;
  uint64_t v24 = a1;
  uint64_t v31 = a2;
  uint64_t v25 = a3;
  uint64_t v30 = a4;
  Swift::String v29 = (const void *)a5;
  uint64_t v38 = 0LL;
  uint64_t v36 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t v34 = 0LL;
  uint64_t v35 = 0LL;
  uint64_t v33 = 0LL;
  unint64_t v22 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  unint64_t v27 = (char *)&v21 - v22;
  uint64_t v26 = type metadata accessor for INSiriSocialConversation(0LL);
  unint64_t v23 = (*(void *)(*(void *)(v26 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v21 - v23;
  uint64_t v38 = (char *)&v21 - v23;
  uint64_t v36 = v8;
  uint64_t v37 = v9;
  uint64_t v34 = v10;
  uint64_t v35 = v11;
  uint64_t v33 = v12;
  swift_bridgeObjectRetain(v9);
  uint64_t v13 = v30;
  uint64_t v14 = v31;
  uint64_t v15 = v32;
  *(void *)uint64_t v32 = v24;
  *((void *)v15 + 1) = v14;
  swift_bridgeObjectRetain(v13);
  uint64_t v16 = v29;
  uint64_t v17 = v27;
  uint64_t v18 = v30;
  uint64_t v19 = v32;
  *((void *)v32 + sub_1B82C(v0 + 2) = v25;
  *((void *)v19 + sub_1B82C(v0 + 3) = v18;
  sub_BAFC(v16, v17);
  sub_70F6C(v27, &v32[*(int *)(v26 + 24)]);
  sub_28ED8(v32, v28);
  sub_BDC8((uint64_t)v29);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v31);
  return sub_8AF4((uint64_t)v32);
}

uint64_t type metadata accessor for INSiriSocialConversation(uint64_t a1)
{
  uint64_t v2 = qword_D8940;
  if (!qword_D8940) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for INSiriSocialConversation);
  }
  return v2;
}

void *sub_70F6C(const void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t))(v7 + 48))(a1, 1LL))
  {
    uint64_t v2 = sub_5150(&qword_D8820);
    memcpy(a2, a1, *(void *)(*(void *)(v2 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a2, a1, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a2, 0LL, 1LL, v6);
  }

  return a2;
}

uint64_t sub_71028()
{
  return sub_70BA4();
}

uint64_t sub_7103C()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("cannedMisc", 0xAuLL, 1);
  char v1 = sub_710C0();
  uint64_t result = TerminalOntologyNode.__allocating_init(name:multicardinal:)(v0._countAndFlagsBits, v0._object, v1 & 1);
  qword_D8800 = result;
  return result;
}

uint64_t sub_710C0()
{
  return 0LL;
}

uint64_t *sub_710D8()
{
  if (qword_D6AD0 != -1) {
    swift_once(&qword_D6AD0, sub_7103C);
  }
  return &qword_D8800;
}

uint64_t sub_7112C()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("cannedUtterance", 0xFuLL, 1);
  char v1 = sub_710C0();
  uint64_t result = TerminalOntologyNode.__allocating_init(name:multicardinal:)(v0._countAndFlagsBits, v0._object, v1 & 1);
  qword_D8808 = result;
  return result;
}

uint64_t *sub_711B0()
{
  if (qword_D6AD8 != -1) {
    swift_once(&qword_D6AD8, sub_7112C);
  }
  return &qword_D8808;
}

uint64_t sub_71204()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("cannedVerb", 0xAuLL, 1);
  char v1 = sub_710C0();
  uint64_t result = TerminalOntologyNode.__allocating_init(name:multicardinal:)(v0._countAndFlagsBits, v0._object, v1 & 1);
  qword_D8810 = result;
  return result;
}

uint64_t *sub_71288()
{
  if (qword_D6AE0 != -1) {
    swift_once(&qword_D6AE0, sub_71204);
  }
  return &qword_D8810;
}

uint64_t sub_712DC()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("cannedDialog", 0xCuLL, 1);
  uint64_t v10 = sub_5150(&qword_D8830);
  uint64_t v5 = _allocateUninitializedArray<A>(_:)(3LL, v10);
  uint64_t v8 = v1;
  uint64_t v3 = *sub_710D8();
  swift_retain();
  uint64_t v6 = sub_5150(&qword_D8828);
  v8[3] = v6;
  unint64_t v7 = sub_71418();
  v8[4] = v7;
  *uint64_t v8 = v3;
  uint64_t v4 = *sub_711B0();
  swift_retain();
  _BYTE v8[8] = v6;
  v8[9] = v7;
  void v8[5] = v4;
  uint64_t v9 = *sub_71288();
  swift_retain();
  v8[13] = v6;
  v8[14] = v7;
  v8[10] = v9;
  sub_6648();
  uint64_t result = DomainOntologyNode.__allocating_init(name:childNodes:isInEventTree:)( v0._countAndFlagsBits,  v0._object,  v5,  0LL);
  qword_D8818 = result;
  return result;
}

unint64_t sub_71418()
{
  uint64_t v3 = qword_D8838;
  if (!qword_D8838)
  {
    uint64_t v0 = sub_8D64(&qword_D8828);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TerminalOntologyNode<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8838);
    return WitnessTable;
  }

  return v3;
}

uint64_t *sub_71488()
{
  if (qword_D6AE8 != -1) {
    swift_once(&qword_D6AE8, sub_712DC);
  }
  return &qword_D8818;
}

uint64_t sub_714DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 - 8) + 16LL))(a1);
}

uint64_t sub_7151C()
{
  uint64_t v1 = *sub_71488();
  swift_retain();
  return v1;
}

uint64_t sub_71550()
{
  uint64_t v6 = v0;
  uint64_t v4 = *sub_710D8();
  swift_retain();
  uint64_t v3 = type metadata accessor for CannedDialogNLv3Intent(0LL);
  unint64_t v1 = sub_7161C();
  IntentNodeTraversable.value<A>(forNode:)(&v5, v4, v3, v1);
  swift_release();
  return v5;
}

uint64_t type metadata accessor for CannedDialogNLv3Intent(uint64_t a1)
{
  uint64_t v2 = qword_D89E0;
  if (!qword_D89E0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CannedDialogNLv3Intent);
  }
  return v2;
}

unint64_t sub_7161C()
{
  uint64_t v3 = qword_D8840;
  if (!qword_D8840)
  {
    uint64_t v0 = type metadata accessor for CannedDialogNLv3Intent(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7DD0, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8840);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_7168C()
{
  uint64_t v6 = v0;
  uint64_t v4 = *sub_711B0();
  swift_retain();
  uint64_t v3 = type metadata accessor for CannedDialogNLv3Intent(0LL);
  unint64_t v1 = sub_7161C();
  IntentNodeTraversable.value<A>(forNode:)(&v5, v4, v3, v1);
  swift_release();
  return v5;
}

uint64_t sub_716F4()
{
  uint64_t v6 = v0;
  uint64_t v4 = *sub_71288();
  swift_retain();
  uint64_t v3 = type metadata accessor for CannedDialogNLv3Intent(0LL);
  unint64_t v1 = sub_7161C();
  IntentNodeTraversable.value<A>(forNode:)(&v5, v4, v3, v1);
  swift_release();
  return v5;
}

uint64_t sub_7175C()
{
  return sub_7168C();
}

uint64_t sub_71784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a2, a1);
}

uint64_t sub_717C4@<X0>(uint64_t a1@<X8>)
{
  return sub_714DC(a1);
}

uint64_t sub_717D8()
{
  return sub_7151C();
}

uint64_t sub_717EC(uint64_t a1)
{
  unint64_t v1 = sub_71820();
  return NLIntentWrapper.traversableIntentNode.getter(a1, v1);
}

unint64_t sub_71820()
{
  uint64_t v3 = qword_D8848;
  if (!qword_D8848)
  {
    uint64_t v0 = type metadata accessor for CannedDialogNLv3Intent(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7D90, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8848);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_71890(uint64_t a1)
{
  unint64_t v1 = sub_71820();
  return NLIntentWrapper.traversableOntologyNode.getter(a1, v1);
}

uint64_t sub_718BC(uint64_t a1)
{
  unint64_t v1 = sub_71820();
  return NLIntentWrapper.description.getter(a1, v1);
}

uint64_t sub_718E8(uint64_t a1)
{
  uint64_t v3 = 0LL;
  ((void (*)(void))swift_unknownObjectRetain)();
  swift_unknownObjectRetain(a1);
  uint64_t v3 = a1;
  swift_unknownObjectRelease(a1);
  sub_71944(&v3);
  return a1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_71944( void *a1)
{
}

uint64_t sub_7196C(uint64_t a1)
{
  v8[1] = a1;
  swift_unknownObjectRetain(a1);
  uint64_t v6 = static UsoConversionUtils.convertUserDialogActToTasks(userDialogAct:)(a1);
  swift_unknownObjectRelease(a1);
  swift_bridgeObjectRetain(v6);
  uint64_t v7 = v6;
  uint64_t v3 = sub_5150(&qword_D8850);
  unint64_t v1 = sub_71A6C();
  Collection.first.getter(v8, v3, v1);
  sub_1B82C(&v7);
  uint64_t v4 = v8[0];
  swift_bridgeObjectRelease(v6);
  return v4;
}

unint64_t sub_71A6C()
{
  uint64_t v3 = qword_D8858;
  if (!qword_D8858)
  {
    uint64_t v0 = sub_8D64(&qword_D8850);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8858);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_71ADC(uint64_t a1)
{
  v14[1] = a1;
  uint64_t v1 = sub_7196C(a1);
  if (!v1) {
    return 0LL;
  }
  uint64_t v9 = UsoTask.arguments.getter(v1);
  swift_release();
  Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("target", 6uLL, 1);
  uint64_t v8 = sub_5150(&qword_D8860);
  Dictionary.subscript.getter(v14);
  sub_8DD8((uint64_t)&v13);
  uint64_t v10 = v14[0];
  swift_bridgeObjectRelease(v9);
  if (!v10) {
    return 0LL;
  }
  swift_bridgeObjectRetain(v10);
  uint64_t v11 = v10;
  unint64_t v2 = sub_71C8C();
  Collection.first.getter(&v12, v8, v2);
  sub_1B82C(&v11);
  uint64_t v7 = v12;
  uint64_t v3 = swift_bridgeObjectRelease(v10);
  if (!v7) {
    return 0LL;
  }
  uint64_t v5 = dispatch thunk of UsoValue.getAsEntity()(v3);
  swift_release();
  return v5;
}

unint64_t sub_71C8C()
{
  uint64_t v3 = qword_D8868;
  if (!qword_D8868)
  {
    uint64_t v0 = sub_8D64(&qword_D8860);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8868);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_71CFC(uint64_t a1)
{
  uint64_t v66 = a1;
  uint64_t v95 = 0LL;
  uint64_t v61 = 0LL;
  uint64_t v65 = type metadata accessor for Logger(0LL);
  uint64_t v64 = *(void *)(v65 - 8);
  unint64_t v62 = (*(void *)(v64 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v1);
  unint64_t v2 = (char *)v35 - v62;
  uint64_t v63 = (char *)v35 - v62;
  uint64_t v95 = v3;
  uint64_t v4 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v2, v4, v65);
  swift_unknownObjectRetain(v66);
  uint64_t v73 = 7LL;
  uint64_t v5 = swift_allocObject(&unk_CFC48, 24LL, 7LL);
  uint64_t v6 = v66;
  uint64_t v74 = v5;
  *(void *)(v5 + swift_beginAccess(v1 + 16) = v66;
  uint64_t v82 = (os_log_s *)Logger.logObject.getter(v6);
  int v83 = static os_log_type_t.debug.getter();
  uint64_t v69 = &v93;
  uint64_t v93 = 12LL;
  unint64_t v67 = sub_7788();
  unint64_t v68 = sub_77F0();
  unint64_t v7 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v94, v69, &type metadata for UInt32, &type metadata for Int, v67, v68, v7);
  uint32_t v70 = v94;
  uint64_t v71 = 17LL;
  uint64_t v8 = swift_allocObject(&unk_CFC70, 17LL, v73);
  uint64_t v9 = v71;
  uint64_t v10 = v73;
  uint64_t v76 = v8;
  *(_BYTE *)(v8 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v11 = swift_allocObject(&unk_CFC98, v9, v10);
  uint64_t v12 = v73;
  uint64_t v77 = v11;
  *(_BYTE *)(v11 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v72 = 32LL;
  uint64_t v13 = swift_allocObject(&unk_CFCC0, 32LL, v12);
  uint64_t v14 = v72;
  uint64_t v15 = v73;
  uint64_t v16 = v13;
  uint64_t v17 = v74;
  uint64_t v75 = v16;
  *(void *)(v16 + swift_beginAccess(v1 + 16) = sub_72654;
  *(void *)(v16 + swift_beginAccess(v1 + 24) = v17;
  uint64_t v18 = swift_allocObject(&unk_CFCE8, v14, v15);
  uint64_t v19 = v75;
  uint64_t v79 = v18;
  *(void *)(v18 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v18 + swift_beginAccess(v1 + 24) = v19;
  uint64_t v81 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v78 = _allocateUninitializedArray<A>(_:)(3LL, v81);
  uint64_t v80 = v20;
  swift_retain();
  uint64_t v21 = v76;
  unint64_t v22 = v80;
  *uint64_t v80 = sub_884C;
  v22[1] = v21;
  swift_retain();
  uint64_t v23 = v77;
  uint64_t v24 = v80;
  void v80[2] = sub_884C;
  v24[3] = v23;
  swift_retain();
  uint64_t v25 = v78;
  uint64_t v26 = v79;
  unint64_t v27 = v80;
  v80[4] = sub_8900;
  v27[5] = v26;
  sub_6648();
  swift_bridgeObjectRelease(v25);
  if (os_log_type_enabled(v82, (os_log_type_t)v83))
  {
    uint64_t v28 = v61;
    uint64_t v54 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v53 = sub_5150(&qword_D6B60);
    uint64_t v55 = sub_74D0(0LL, v53, v53);
    uint64_t v56 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v57 = &v88;
    uint64_t v88 = v54;
    uint64_t v58 = &v87;
    uint64_t v87 = v55;
    uint64_t v59 = &v86;
    uint64_t v86 = v56;
    sub_7528(2LL, &v88);
    sub_7528(1LL, v57);
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v85 = v76;
    sub_753C(&v84, (uint64_t)v57, (uint64_t)v58, (uint64_t)v59);
    uint64_t v60 = v28;
    if (v28)
    {
      __break(1u);
    }

    else
    {
      uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v85 = v77;
      sub_753C(&v84, (uint64_t)&v88, (uint64_t)&v87, (uint64_t)&v86);
      uint64_t v52 = 0LL;
      uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v85 = v79;
      sub_753C(&v84, (uint64_t)&v88, (uint64_t)&v87, (uint64_t)&v86);
      _os_log_impl(&dword_0, v82, (os_log_type_t)v83, "USO debug info %s", v54, v70);
      sub_7580(v55, 0LL);
      sub_7580(v56, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
  uint64_t v29 = sub_71ADC(v66);
  uint64_t v51 = v29;
  if (!v29) {
    goto LABEL_16;
  }
  uint64_t v50 = v51;
  uint64_t v45 = v51;
  uint64_t v48 = UsoEntity.attributes.getter(v29);
  swift_release();
  Swift::String v30 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dialogId", 8uLL, 1);
  uint64_t v47 = &v91;
  Swift::String v91 = v30;
  uint64_t v46 = sub_5150(&qword_D8860);
  Dictionary.subscript.getter(&v92);
  sub_8DD8((uint64_t)v47);
  uint64_t v49 = v92;
  swift_bridgeObjectRelease(v48);
  if (!v49) {
    goto LABEL_16;
  }
  uint64_t v44 = v49;
  uint64_t v42 = v49;
  swift_bridgeObjectRetain(v49);
  uint64_t v41 = &v89;
  uint64_t v89 = v42;
  unint64_t v31 = sub_71C8C();
  Collection.first.getter(&v90, v46, v31);
  sub_1B82C(v41);
  uint64_t v43 = v90;
  uint64_t v32 = swift_bridgeObjectRelease(v42);
  if (v43)
  {
    uint64_t v40 = v43;
    v35[1] = v43;
    uint64_t v36 = dispatch thunk of UsoValue.getAsPrimitiveValueString()(v32);
    uint64_t v37 = v33;
    swift_release();
    uint64_t v38 = v36;
    uint64_t v39 = v37;
  }

  else
  {
LABEL_16:
    uint64_t v38 = 0LL;
    uint64_t v39 = 0LL;
  }

  return v38;
}

uint64_t sub_724E4(uint64_t a1)
{
  uint64_t v1 = sub_71ADC(a1);
  if (v1)
  {
    uint64_t v5 = UsoEntity.attributes.getter(v1);
    swift_release();
    uint64_t v2 = sub_5150(&qword_D8860);
    v6._uint64_t countAndFlagsBits = Dictionary.debugDescription.getter( v5,  &type metadata for String,  v2,  &protocol witness table for String);
    v6._object = v3;
    swift_bridgeObjectRelease(v5);
    Swift::String v7 = v6;
  }

  else
  {
    Swift::String v7 = (Swift::String)0LL;
  }

  Swift::String v8 = v7;
  if (v7._object)
  {
    Swift::String v9 = v8;
  }

  else
  {
    Swift::String v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("<nil>", 5uLL, 1);
    sub_8DD8((uint64_t)&v8);
  }

  return v9._countAndFlagsBits;
}

uint64_t sub_72618()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_72654()
{
  return sub_724E4(*(void *)(v0 + 16));
}

uint64_t sub_7265C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v54 = a1;
  uint64_t v87 = 0LL;
  uint64_t v86 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v47 = 0LL;
  uint64_t v60 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v57 = *(void *)(v60 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  unint64_t v46 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v59 = (char *)v35 - v46;
  uint64_t v53 = type metadata accessor for Logger(v3);
  uint64_t v52 = *(void *)(v53 - 8);
  unint64_t v48 = (*(void *)(v52 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v5 = (char *)v35 - v48;
  uint64_t v49 = (char *)v35 - v48;
  unint64_t v50 = (*(void *)(*(void *)(type metadata accessor for CannedDialogActUso(v6) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v51 = (uint64_t)v35 - v50;
  uint64_t v87 = (char *)v35 - v50;
  uint64_t v86 = v8;
  uint64_t v9 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v5, v9, v53);
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v55(v59, v54, v60);
  uint64_t v10 = *(unsigned __int8 *)(v57 + 80);
  uint64_t v58 = (v10 + 16) & ~v10;
  uint64_t v68 = 7LL;
  uint64_t v69 = swift_allocObject(&unk_CFD10, v58 + v56, v10 | 7);
  uint64_t v61 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32);
  uint64_t v11 = v61(v69 + v58, v59, v60);
  uint64_t v77 = (os_log_s *)Logger.logObject.getter(v11);
  int v78 = static os_log_type_t.debug.getter();
  uint64_t v64 = &v84;
  uint64_t v84 = 12LL;
  unint64_t v62 = sub_7788();
  unint64_t v63 = sub_77F0();
  unint64_t v12 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v85, v64, &type metadata for UInt32, &type metadata for Int, v62, v63, v12);
  uint32_t v65 = v85;
  uint64_t v66 = 17LL;
  uint64_t v13 = swift_allocObject(&unk_CFD38, 17LL, v68);
  uint64_t v14 = v66;
  uint64_t v15 = v68;
  uint64_t v71 = v13;
  *(_BYTE *)(v13 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v16 = swift_allocObject(&unk_CFD60, v14, v15);
  uint64_t v17 = v68;
  uint64_t v72 = v16;
  *(_BYTE *)(v16 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v67 = 32LL;
  uint64_t v18 = swift_allocObject(&unk_CFD88, 32LL, v17);
  uint64_t v19 = v67;
  uint64_t v20 = v68;
  uint64_t v21 = v18;
  uint64_t v22 = v69;
  uint64_t v70 = v21;
  *(void *)(v21 + swift_beginAccess(v1 + 16) = sub_7E2D4;
  *(void *)(v21 + swift_beginAccess(v1 + 24) = v22;
  uint64_t v23 = swift_allocObject(&unk_CFDB0, v19, v20);
  uint64_t v24 = v70;
  uint64_t v74 = v23;
  *(void *)(v23 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v23 + swift_beginAccess(v1 + 24) = v24;
  uint64_t v76 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v73 = _allocateUninitializedArray<A>(_:)(3LL, v76);
  uint64_t v75 = v25;
  swift_retain();
  uint64_t v26 = v71;
  unint64_t v27 = v75;
  void *v75 = sub_884C;
  v27[1] = v26;
  swift_retain();
  uint64_t v28 = v72;
  uint64_t v29 = v75;
  v75[2] = sub_884C;
  void v29[3] = v28;
  swift_retain();
  uint64_t v30 = v73;
  uint64_t v31 = v74;
  uint64_t v32 = v75;
  v75[4] = sub_8900;
  v32[5] = v31;
  sub_6648();
  swift_bridgeObjectRelease(v30);
  if (os_log_type_enabled(v77, (os_log_type_t)v78))
  {
    uint64_t v33 = v45;
    uint64_t v37 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v36 = sub_5150(&qword_D6B60);
    uint64_t v38 = sub_74D0(0LL, v36, v36);
    uint64_t v39 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v40 = &v83;
    int v83 = v37;
    uint64_t v41 = &v82;
    uint64_t v82 = v38;
    uint64_t v42 = &v81;
    uint64_t v81 = v39;
    sub_7528(2LL, &v83);
    sub_7528(1LL, v40);
    uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v80 = v71;
    sub_753C(&v79, (uint64_t)v40, (uint64_t)v41, (uint64_t)v42);
    uint64_t v43 = v33;
    if (v33)
    {
      __break(1u);
    }

    else
    {
      uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v80 = v72;
      sub_753C(&v79, (uint64_t)&v83, (uint64_t)&v82, (uint64_t)&v81);
      v35[0] = 0LL;
      uint64_t v79 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v80 = v74;
      sub_753C(&v79, (uint64_t)&v83, (uint64_t)&v82, (uint64_t)&v81);
      _os_log_impl(&dword_0, v77, (os_log_type_t)v78, "dialogAct: %s", v37, v65);
      sub_7580(v38, 0LL);
      sub_7580(v39, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v53);
  v55(v59, v54, v60);
  v61(v51, v59, v60);
  sub_7E3CC(v51, v44);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v54, v60);
  return sub_7E410(v51);
}

uint64_t sub_72D98()
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  unint64_t v0 = sub_80FF0();
  return Message.debugDescription.getter(v2, v0);
}

uint64_t sub_72DD8()
{
  uint64_t v19 = 0LL;
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v1 = __chkstk_darwin(v0);
  uint64_t v14 = (char *)&v6 - v13;
  uint64_t v19 = v2;
  (*(void (**)(double))(v3 + 16))(v1);
  uint64_t v15 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(v14);
  uint64_t v16 = 0LL;
  uint64_t v9 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_bridgeObjectRetain(v9);
  uint64_t v8 = &v17;
  uint64_t v17 = v9;
  uint64_t v7 = sub_5150(&qword_D8850);
  unint64_t v4 = sub_71A6C();
  Collection.first.getter(&v18, v7, v4);
  sub_1B82C(v8);
  uint64_t v10 = v18;
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_72F44()
{
  uint64_t v14 = v0;
  if (!sub_72DD8()) {
    return 0LL;
  }
  uint64_t v8 = UsoTask.arguments.getter();
  swift_release();
  Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("target", 6uLL, 1);
  uint64_t v7 = sub_5150(&qword_D8860);
  Dictionary.subscript.getter(&v13);
  sub_8DD8((uint64_t)&v12);
  uint64_t v9 = v13;
  swift_bridgeObjectRelease(v8);
  if (!v9) {
    return 0LL;
  }
  swift_bridgeObjectRetain(v9);
  uint64_t v10 = v9;
  unint64_t v1 = sub_71C8C();
  Collection.first.getter(&v11, v7, v1);
  sub_1B82C(&v10);
  uint64_t v6 = v11;
  uint64_t v2 = swift_bridgeObjectRelease(v9);
  if (!v6) {
    return 0LL;
  }
  uint64_t v4 = dispatch thunk of UsoValue.getAsEntity()(v2);
  swift_release();
  return v4;
}

uint64_t sub_730F4()
{
  uint64_t v24 = v0;
  if (sub_72F44())
  {
    uint64_t v15 = UsoEntity.valueTypeString.getter();
    uint64_t v16 = v1;
    swift_release();
    uint64_t v17 = v15;
    uint64_t v18 = v16;
  }

  else
  {
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
  }

  swift_bridgeObjectRetain(v18);
  uint64_t v2 = sub_3B578();
  uint64_t v13 = *(void *)v2;
  uint64_t v14 = *((void *)v2 + 1);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v14);
  v23[0] = v17;
  v23[1] = v18;
  v20[0] = v13;
  v20[1] = v14;
  sub_139E0(v23, &v21);
  if (v14)
  {
    sub_139E0(v20, v19);
    if (v22)
    {
      uint64_t v9 = v21;
      uint64_t v10 = v22;
      swift_bridgeObjectRetain(v22);
      char v11 = static String.== infix(_:_:)(v19[0], v19[1], v9, v10);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v10);
      sub_8DD8((uint64_t)v19);
      sub_8DD8((uint64_t)v20);
      char v12 = v11;
      goto LABEL_9;
    }

    sub_8DD8((uint64_t)v19);
    goto LABEL_11;
  }

  if (v22)
  {
LABEL_11:
    sub_13A1C((uint64_t)v20);
    char v12 = 0;
    goto LABEL_9;
  }

  sub_8DD8((uint64_t)v20);
  char v12 = 1;
LABEL_9:
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v18);
  if ((v12 & 1) != 0)
  {
    uint64_t v3 = sub_3B6A0();
    uint64_t v7 = *(void *)v3;
    swift_bridgeObjectRetain(*((void *)v3 + 1));
    swift_bridgeObjectRelease(v18);
    return v7;
  }

  else
  {
    uint64_t v4 = sub_3B734();
    uint64_t v6 = *(void *)v4;
    swift_bridgeObjectRetain(*((void *)v4 + 1));
    swift_bridgeObjectRelease(v18);
    return v6;
  }

uint64_t sub_73378()
{
  id v2 = (id)IdentifierNamespaceIntentName;
  id v0 = IdentifierNamespaceIntentName;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

uint64_t sub_733D0()
{
  uint64_t v34 = v0;
  uint64_t v22 = sub_730F4();
  uint64_t v24 = v1;
  uint64_t v2 = sub_73378();
  uint64_t v23 = v3;
  uint64_t v25 = sub_7369C(v22, v24, v2, v3);
  uint64_t v26 = v4;
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRetain(v26);
  uint64_t v32 = v25;
  uint64_t v33 = v26;
  v31[0] = v25;
  v31[1] = v26;
  sub_8DD8((uint64_t)v31);
  if (!v26)
  {
    if (!sub_72F44()) {
      goto LABEL_12;
    }
    uint64_t v20 = UsoEntity.attributes.getter();
    swift_release();
    uint64_t v5 = sub_3B734();
    uint64_t v17 = *(void *)v5;
    uint64_t v18 = *((void *)v5 + 1);
    swift_bridgeObjectRetain(v18);
    v29[0] = v17;
    v29[1] = v18;
    uint64_t v19 = sub_5150(&qword_D8860);
    Dictionary.subscript.getter(&v30);
    sub_8DD8((uint64_t)v29);
    uint64_t v21 = v30;
    swift_bridgeObjectRelease(v20);
    if (v21
      && (swift_bridgeObjectRetain(v21),
          uint64_t v27 = v21,
          unint64_t v6 = sub_71C8C(),
          Collection.first.getter(&v28, v19, v6),
          sub_1B82C(&v27),
          uint64_t v16 = v28,
          uint64_t v7 = swift_bridgeObjectRelease(v21),
          v16))
    {
      uint64_t v12 = dispatch thunk of UsoValue.getAsPrimitiveValueString()(v7);
      uint64_t v13 = v8;
      swift_release();
      uint64_t v14 = v12;
      uint64_t v15 = v13;
    }

    else
    {
LABEL_12:
      uint64_t v14 = 0LL;
      uint64_t v15 = 0LL;
    }

    uint64_t v9 = v33;
    uint64_t v32 = v14;
    uint64_t v33 = v15;
    swift_bridgeObjectRelease(v9);
  }

  uint64_t v11 = v32;
  swift_bridgeObjectRetain(v33);
  sub_8DD8((uint64_t)&v32);
  return v11;
}

uint64_t sub_7369C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v131 = a1;
  uint64_t v132 = a2;
  uint64_t v133 = a3;
  uint64_t v134 = a4;
  uint64_t v175 = 0LL;
  uint64_t v176 = 0LL;
  uint64_t v173 = 0LL;
  uint64_t v174 = 0LL;
  uint64_t v172 = 0LL;
  uint64_t v169 = 0LL;
  uint64_t v124 = 0LL;
  unint64_t v125 = (*(void *)(*(void *)(sub_5150(&qword_D8888) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v126 = (void *)((char *)v76 - v125);
  uint64_t v130 = type metadata accessor for Logger(0LL);
  uint64_t v129 = *(void *)(v130 - 8);
  unint64_t v127 = (*(void *)(v129 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  unint64_t v6 = (char *)v76 - v127;
  Swift::String v128 = (char *)v76 - v127;
  uint64_t v175 = v7;
  uint64_t v176 = v8;
  uint64_t v173 = v9;
  uint64_t v174 = v10;
  uint64_t v172 = v11;
  uint64_t v12 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v6, v12, v130);
  swift_bridgeObjectRetain(v132);
  uint64_t v144 = 32LL;
  uint64_t v145 = 7LL;
  uint64_t v13 = swift_allocObject(&unk_CFDD8, 32LL, 7LL);
  uint64_t v14 = v132;
  uint64_t v15 = v13;
  uint64_t v16 = v134;
  uint64_t v139 = v15;
  *(void *)(v15 + swift_beginAccess(v1 + 16) = v131;
  *(void *)(v15 + swift_beginAccess(v1 + 24) = v14;
  swift_bridgeObjectRetain(v16);
  uint64_t v17 = swift_allocObject(&unk_CFE00, v144, v145);
  uint64_t v18 = v134;
  uint64_t v146 = v17;
  *(void *)(v17 + swift_beginAccess(v1 + 16) = v133;
  *(void *)(v17 + swift_beginAccess(v1 + 24) = v18;
  Swift::String v157 = (os_log_s *)Logger.logObject.getter(v17);
  int v158 = static os_log_type_t.debug.getter();
  Swift::String v137 = &v170;
  uint64_t v170 = 22LL;
  unint64_t v135 = sub_7788();
  unint64_t v136 = sub_77F0();
  unint64_t v19 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v171, v137, &type metadata for UInt32, &type metadata for Int, v135, v136, v19);
  uint32_t v138 = v171;
  uint64_t v142 = 17LL;
  uint64_t v20 = swift_allocObject(&unk_CFE28, 17LL, v145);
  uint64_t v21 = v142;
  uint64_t v22 = v145;
  uint64_t v148 = v20;
  int v141 = 32;
  *(_BYTE *)(v20 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v23 = swift_allocObject(&unk_CFE50, v21, v22);
  uint64_t v24 = v144;
  uint64_t v25 = v145;
  uint64_t v149 = v23;
  int v143 = 8;
  *(_BYTE *)(v23 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v26 = swift_allocObject(&unk_CFE78, v24, v25);
  uint64_t v27 = v144;
  uint64_t v28 = v145;
  uint64_t v29 = v26;
  uint64_t v30 = v139;
  uint64_t v140 = v29;
  *(void *)(v29 + swift_beginAccess(v1 + 16) = sub_1B890;
  *(void *)(v29 + swift_beginAccess(v1 + 24) = v30;
  uint64_t v31 = swift_allocObject(&unk_CFEA0, v27, v28);
  uint64_t v32 = v142;
  uint64_t v33 = v145;
  uint64_t v34 = v31;
  uint64_t v35 = v140;
  uint64_t v150 = v34;
  *(void *)(v34 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v34 + swift_beginAccess(v1 + 24) = v35;
  uint64_t v36 = swift_allocObject(&unk_CFEC8, v32, v33);
  uint64_t v37 = v142;
  uint64_t v38 = v145;
  uint64_t v151 = v36;
  *(_BYTE *)(v36 + swift_beginAccess(v1 + 16) = v141;
  uint64_t v39 = swift_allocObject(&unk_CFEF0, v37, v38);
  uint64_t v40 = v144;
  uint64_t v41 = v145;
  uint64_t v152 = v39;
  *(_BYTE *)(v39 + swift_beginAccess(v1 + 16) = v143;
  uint64_t v42 = swift_allocObject(&unk_CFF18, v40, v41);
  uint64_t v43 = v144;
  uint64_t v44 = v145;
  uint64_t v45 = v42;
  uint64_t v46 = v146;
  uint64_t v147 = v45;
  *(void *)(v45 + swift_beginAccess(v1 + 16) = sub_1B890;
  *(void *)(v45 + swift_beginAccess(v1 + 24) = v46;
  uint64_t v47 = swift_allocObject(&unk_CFF40, v43, v44);
  uint64_t v48 = v147;
  uint64_t v154 = v47;
  *(void *)(v47 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v47 + swift_beginAccess(v1 + 24) = v48;
  uint64_t v156 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v153 = _allocateUninitializedArray<A>(_:)(6LL, v156);
  uint64_t v155 = v49;
  swift_retain();
  uint64_t v50 = v148;
  uint64_t v51 = v155;
  *uint64_t v155 = sub_884C;
  v51[1] = v50;
  swift_retain();
  uint64_t v52 = v149;
  uint64_t v53 = v155;
  void v155[2] = sub_884C;
  v53[3] = v52;
  swift_retain();
  uint64_t v54 = v150;
  uint64_t v55 = v155;
  v155[4] = sub_8900;
  v55[5] = v54;
  swift_retain();
  uint64_t v56 = v151;
  uint64_t v57 = v155;
  v155[6] = sub_884C;
  v57[7] = v56;
  swift_retain();
  uint64_t v58 = v152;
  uint64_t v59 = v155;
  v155[8] = sub_884C;
  v59[9] = v58;
  swift_retain();
  uint64_t v60 = v153;
  uint64_t v61 = v154;
  unint64_t v62 = v155;
  v155[10] = sub_8900;
  v62[11] = v61;
  sub_6648();
  swift_bridgeObjectRelease(v60);
  if (os_log_type_enabled(v157, (os_log_type_t)v158))
  {
    uint64_t v63 = v124;
    uint32_t v116 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v115 = sub_5150(&qword_D6B60);
    uint64_t v117 = sub_74D0(0LL, v115, v115);
    uint64_t v118 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v120 = v163;
    v163[0] = v116;
    uint64_t v121 = &v162;
    uint64_t v162 = v117;
    uint64_t v122 = &v161;
    uint64_t v161 = v118;
    unsigned int v119 = 2;
    sub_7528(2LL, v163);
    sub_7528(v119, v120);
    uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v160 = v148;
    sub_753C(&v159, (uint64_t)v120, (uint64_t)v121, (uint64_t)v122);
    uint64_t v123 = v63;
    if (v63)
    {
      __break(1u);
    }

    else
    {
      uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v160 = v149;
      sub_753C(&v159, (uint64_t)v163, (uint64_t)&v162, (uint64_t)&v161);
      uint64_t v113 = 0LL;
      uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v160 = v150;
      sub_753C(&v159, (uint64_t)v163, (uint64_t)&v162, (uint64_t)&v161);
      uint64_t v112 = 0LL;
      uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v160 = v151;
      sub_753C(&v159, (uint64_t)v163, (uint64_t)&v162, (uint64_t)&v161);
      uint64_t v111 = 0LL;
      uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v160 = v152;
      sub_753C(&v159, (uint64_t)v163, (uint64_t)&v162, (uint64_t)&v161);
      uint64_t v110 = 0LL;
      uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v160 = v154;
      sub_753C(&v159, (uint64_t)v163, (uint64_t)&v162, (uint64_t)&v161);
      uint64_t v109 = 0LL;
      _os_log_impl(&dword_0, v157, (os_log_type_t)v158, "Getting identifier for %s and namespace %s", v116, v138);
      sub_7580(v117, 0LL);
      sub_7580(v118, 2LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v114 = v109;
    }
  }

  else
  {
    uint64_t v64 = v124;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v114 = v64;
  }

  uint64_t v107 = v114;

  (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v130);
  uint64_t v108 = sub_72F44();
  if (!v108) {
    goto LABEL_25;
  }
  uint64_t v106 = v108;
  uint64_t v101 = v108;
  uint64_t v104 = UsoEntity.attributes.getter();
  swift_release();
  swift_bridgeObjectRetain(v132);
  uint64_t v103 = v166;
  v166[0] = v131;
  v166[1] = v132;
  uint64_t v102 = sub_5150(&qword_D8860);
  Dictionary.subscript.getter(&v167);
  sub_8DD8((uint64_t)v103);
  uint64_t v105 = v167;
  swift_bridgeObjectRelease(v104);
  if (!v105) {
    goto LABEL_25;
  }
  uint64_t v100 = v105;
  uint64_t v98 = v105;
  swift_bridgeObjectRetain(v105);
  Swift::String v97 = &v164;
  uint64_t v164 = v98;
  unint64_t v65 = sub_71C8C();
  Collection.first.getter(&v165, v102, v65);
  sub_1B82C(v97);
  uint64_t v99 = v165;
  uint64_t v66 = swift_bridgeObjectRelease(v98);
  if (!v99)
  {
LABEL_25:
    uint64_t v89 = 0LL;
LABEL_17:
    uint64_t v87 = v89;
    uint64_t v169 = v89;
    swift_bridgeObjectRetain(v89);
    if (v87)
    {
      uint64_t v86 = v87;
      uint64_t v83 = v87;
      swift_bridgeObjectRetain(v87);
      uint64_t v82 = &v168;
      uint64_t v168 = v83;
      uint64_t v81 = sub_5150(&qword_D8890);
      unint64_t v73 = sub_7E654();
      Collection.first.getter(v126, v81, v73);
      sub_1B82C(v82);
      swift_bridgeObjectRelease(v83);
      uint64_t v84 = type metadata accessor for UsoIdentifier(0LL);
      uint64_t v85 = *(void *)(v84 - 8);
      if ((*(unsigned int (**)(void *, uint64_t))(v85 + 48))(v126, 1LL) != 1)
      {
        uint64_t v77 = UsoIdentifier.value.getter();
        uint64_t v78 = v75;
        (*(void (**)(void *, uint64_t))(v85 + 8))(v126, v84);
        uint64_t v79 = v77;
        uint64_t v80 = v78;
LABEL_23:
        v76[1] = v80;
        v76[0] = v79;
        swift_bridgeObjectRelease(v87);
        return v76[0];
      }

      sub_7E6C4((uint64_t)v126);
    }

    uint64_t v79 = 0LL;
    uint64_t v80 = 0LL;
    goto LABEL_23;
  }

  uint64_t v96 = v99;
  uint64_t v67 = v107;
  uint64_t v90 = v99;
  Swift::String v91 = (_BYTE *)dispatch thunk of UsoValue.getUsoIdentifiers()(v66);
  swift_release();
  v163[1] = v91;
  swift_bridgeObjectRetain(v134);
  uint64_t v92 = v76;
  __chkstk_darwin(v68);
  uint64_t v69 = &v76[-4];
  uint64_t v93 = &v76[-4];
  v69[2] = v133;
  v69[3] = v70;
  uint64_t v94 = sub_5150(&qword_D8890);
  unint64_t v71 = sub_7E760();
  uint64_t result = _ArrayProtocol.filter(_:)(sub_7E734, v93, v94, v71);
  uint64_t v95 = result;
  if (!v67)
  {
    uint64_t v88 = v95;
    swift_bridgeObjectRelease(v134);
    uint64_t v89 = v88;
    goto LABEL_17;
  }

  __break(1u);
  return result;
}

uint64_t sub_74564()
{
  uint64_t v32 = 0LL;
  uint64_t v33 = 0LL;
  uint64_t v37 = v0;
  if (sub_72F44())
  {
    uint64_t v26 = UsoEntity.valueTypeString.getter();
    uint64_t v27 = v1;
    swift_release();
    uint64_t v28 = v26;
    uint64_t v29 = v27;
  }

  else
  {
    uint64_t v28 = 0LL;
    uint64_t v29 = 0LL;
  }

  swift_bridgeObjectRetain(v29);
  uint64_t v2 = sub_3B578();
  uint64_t v24 = *(void *)v2;
  uint64_t v25 = *((void *)v2 + 1);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v25);
  v34[0] = v28;
  v34[1] = v29;
  uint64_t v35 = v24;
  uint64_t v36 = v25;
  if (v29)
  {
    sub_139E0(v34, &v30);
    if (v36)
    {
      uint64_t v18 = v30;
      uint64_t v21 = v31;
      swift_bridgeObjectRetain(v31);
      uint64_t v19 = v35;
      uint64_t v20 = v36;
      swift_bridgeObjectRetain(v36);
      char v22 = static String.== infix(_:_:)(v18, v21, v19, v20);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v21);
      sub_8DD8((uint64_t)v34);
      char v23 = v22;
      goto LABEL_9;
    }

    sub_8DD8((uint64_t)&v30);
    goto LABEL_11;
  }

  if (v36)
  {
LABEL_11:
    sub_13A1C((uint64_t)v34);
    char v23 = 0;
    goto LABEL_9;
  }

  sub_8DD8((uint64_t)v34);
  char v23 = 1;
LABEL_9:
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v29);
  if ((v23 & 1) != 0)
  {
    uint64_t v3 = sub_3B6A0();
    uint64_t v14 = *(void *)v3;
    uint64_t v15 = *((void *)v3 + 1);
    swift_bridgeObjectRetain(v15);
    uint64_t v16 = v14;
    uint64_t v17 = v15;
  }

  else
  {
    double v4 = sub_3B734();
    uint64_t v12 = *(void *)v4;
    uint64_t v13 = *((void *)v4 + 1);
    swift_bridgeObjectRetain(v13);
    uint64_t v16 = v12;
    uint64_t v17 = v13;
  }

  uint64_t v32 = v16;
  uint64_t v33 = v17;
  id v10 = (id)IdentifierNamespaceGuid;
  id v5 = IdentifierNamespaceGuid;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  uint64_t v9 = v7;
  uint64_t v11 = sub_7369C(v16, v17, v6, v7);
  swift_bridgeObjectRelease(v9);

  swift_bridgeObjectRelease(v17);
  return v11;
}

uint64_t sub_74854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v11 = UsoIdentifier.namespace.getter();
  uint64_t v12 = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a3);
  v17[0] = v11;
  v17[1] = v12;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  if (!v12)
  {
    if (!v19)
    {
      sub_8DD8((uint64_t)v17);
      char v10 = 1;
      goto LABEL_7;
    }

    goto LABEL_8;
  }

  sub_139E0(v17, &v15);
  if (!v19)
  {
    sub_8DD8((uint64_t)&v15);
LABEL_8:
    sub_13A1C((uint64_t)v17);
    char v10 = 0;
    goto LABEL_7;
  }

  uint64_t v5 = v15;
  uint64_t v8 = v16;
  swift_bridgeObjectRetain(v16);
  uint64_t v6 = v18;
  uint64_t v7 = v19;
  swift_bridgeObjectRetain(v19);
  char v9 = static String.== infix(_:_:)(v5, v8, v6, v7);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v8);
  sub_8DD8((uint64_t)v17);
  char v10 = v9;
LABEL_7:
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v12);
  return v10 & 1;
}

uint64_t sub_74A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v1608 = a2;
  uint64_t v1641 = a1;
  v1609 = "Fatal error";
  v1610 = "Unexpectedly found nil while unwrapping an Optional value";
  v1611 = "SocialConversationFlowDelegatePlugin/INSiriCanned.swift";
  v1923 = 0LL;
  uint64_t v1922 = 0LL;
  uint64_t v1612 = 0LL;
  uint64_t v1919 = 0LL;
  uint64_t v1911 = 0LL;
  uint64_t v1908 = 0LL;
  uint64_t v1826 = 0LL;
  uint64_t v1822 = 0LL;
  uint64_t v1823 = 0LL;
  uint64_t v1815 = 0LL;
  uint64_t v1816 = 0LL;
  uint64_t v1811 = 0LL;
  uint64_t v1812 = 0LL;
  uint64_t v1808 = 0LL;
  uint64_t v1809 = 0LL;
  uint64_t v1804 = 0LL;
  uint64_t v1805 = 0LL;
  uint64_t v1800 = 0LL;
  uint64_t v1801 = 0LL;
  uint64_t v1791 = 0LL;
  uint64_t v1792 = 0LL;
  uint64_t v1787 = 0LL;
  uint64_t v1788 = 0LL;
  uint64_t v1784 = 0LL;
  uint64_t v1785 = 0LL;
  uint64_t v1780 = 0LL;
  uint64_t v1781 = 0LL;
  uint64_t v1775 = 0LL;
  uint64_t v1776 = 0LL;
  uint64_t v1771 = 0LL;
  uint64_t v1772 = 0LL;
  uint64_t v1765 = 0LL;
  uint64_t v1766 = 0LL;
  uint64_t v1763 = 0LL;
  uint64_t v1764 = 0LL;
  uint64_t v1756 = 0LL;
  uint64_t v1757 = 0LL;
  uint64_t v1751 = 0LL;
  uint64_t v1752 = 0LL;
  uint64_t v1745 = 0LL;
  uint64_t v1746 = 0LL;
  uint64_t v1738 = 0LL;
  uint64_t v1739 = 0LL;
  uint64_t v1734 = 0LL;
  uint64_t v1735 = 0LL;
  uint64_t v1731 = 0LL;
  uint64_t v1732 = 0LL;
  uint64_t v1723 = 0LL;
  uint64_t v1724 = 0LL;
  uint64_t v1719 = 0LL;
  uint64_t v1720 = 0LL;
  uint64_t v1714 = 0LL;
  uint64_t v1715 = 0LL;
  uint64_t v1703 = 0LL;
  uint64_t v1704 = 0LL;
  uint64_t v1696 = 0LL;
  uint64_t v1693 = 0LL;
  uint64_t v1690 = 0LL;
  uint64_t v1683 = 0LL;
  uint64_t v1684 = 0LL;
  uint64_t v1680 = 0LL;
  uint64_t v1681 = 0LL;
  uint64_t v1676 = 0LL;
  uint64_t v1677 = 0LL;
  uint64_t v1631 = 0LL;
  uint64_t v1613 = type metadata accessor for DateComponents();
  uint64_t v1614 = *(void *)(v1613 - 8);
  unint64_t v1615 = (*(void *)(v1614 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  v1616 = (char *)&v566 - v1615;
  unint64_t v1617 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  v1618 = (char *)&v566 - v1617;
  unint64_t v1619 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  v1620 = (char *)&v566 - v1619;
  uint64_t v1639 = type metadata accessor for Logger(v6);
  v1638 = *(void **)(v1639 - 8);
  unint64_t v1621 = (v1638[8] + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  v1622 = (char *)&v566 - v1621;
  unint64_t v1623 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v10 = __chkstk_darwin(v8);
  v1624 = (char *)&v566 - v1623;
  unint64_t v1625 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v566 - v1625;
  v1626 = (char *)&v566 - v1625;
  uint64_t v1647 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v13);
  uint64_t v1643 = *(void *)(v1647 - 8);
  uint64_t v1644 = *(void *)(v1643 + 64);
  unint64_t v1627 = (v1644 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v14);
  v1646 = (char *)&v566 - v1627;
  v1636 = (int *)type metadata accessor for SocialConversationNLv4(v15);
  unint64_t v1628 = (*(void *)(*((void *)v1636 - 1) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v17 = __chkstk_darwin(v16);
  uint64_t v1629 = (uint64_t)&v566 - v1628;
  unint64_t v1630 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v19 = __chkstk_darwin(v17);
  unint64_t v20 = v1630;
  uint64_t v1637 = (uint64_t)&v566 - v1630;
  v1923 = (char *)&v566 - v1630;
  uint64_t v1922 = v1641;
  uint64_t v22 = (uint64_t *)((char *)&v566 + *(int *)(v21 + 20) - v1630);
  *uint64_t v22 = 0LL;
  v22[1] = 0LL;
  v1632 = (char *)&v566 + *(int *)(v21 + 24) - v20;
  static Date.now.getter(v19);
  uint64_t v1633 = type metadata accessor for Date(v1631);
  uint64_t v1634 = *(void *)(v1633 - 8);
  v1635 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1634 + 56);
  ((void (*)(char *, void, uint64_t))v1635)(v1632, 0LL, 1LL);
  uint64_t v23 = v1641;
  uint64_t v24 = v1643;
  uint64_t v25 = v1646;
  uint64_t v26 = v1647;
  *(_BYTE *)(v1637 + v1636[7]) = 0;
  v1642 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v1642(v25, v23, v26);
  v1648 = *(void (**)(uint64_t, char *, uint64_t))(v1643 + 32);
  v1648(v1637, v1646, v1647);
  uint64_t v27 = sub_AD514();
  v1640 = (void (*)(char *, uint64_t, uint64_t))v1638[2];
  v1640(v12, v27, v1639);
  v1642(v1646, v1641, v1647);
  uint64_t v28 = *(unsigned __int8 *)(v1643 + 80);
  uint64_t v1645 = (v28 + 16) & ~v28;
  uint64_t v1656 = 7LL;
  uint64_t v1657 = swift_allocObject(&unk_CFF68, v1645 + v1644, v28 | 7);
  uint64_t v29 = ((uint64_t (*)(uint64_t, char *, uint64_t))v1648)(v1657 + v1645, v1646, v1647);
  v1665 = (os_log_s *)Logger.logObject.getter(v29);
  int v1666 = static os_log_type_t.debug.getter();
  v1651 = &v1920;
  uint64_t v1920 = 12LL;
  unint64_t v1649 = sub_7788();
  unint64_t v1650 = sub_77F0();
  unint64_t v1652 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v1921, v1651, &type metadata for UInt32, &type metadata for Int, v1649, v1650, v1652);
  uint32_t v1653 = v1921;
  uint64_t v1654 = 17LL;
  uint64_t v30 = swift_allocObject(&unk_CFF90, 17LL, v1656);
  uint64_t v31 = v1654;
  uint64_t v32 = v1656;
  uint64_t v1659 = v30;
  *(_BYTE *)(v30 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v33 = swift_allocObject(&unk_CFFB8, v31, v32);
  uint64_t v34 = v1656;
  uint64_t v1660 = v33;
  *(_BYTE *)(v33 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v1655 = 32LL;
  uint64_t v35 = swift_allocObject(&unk_CFFE0, 32LL, v34);
  uint64_t v36 = v1655;
  uint64_t v37 = v1656;
  uint64_t v38 = v35;
  uint64_t v39 = v1657;
  uint64_t v1658 = v38;
  *(void *)(v38 + swift_beginAccess(v1 + 16) = sub_7E2D4;
  *(void *)(v38 + swift_beginAccess(v1 + 24) = v39;
  uint64_t v40 = swift_allocObject(&unk_D0008, v36, v37);
  uint64_t v41 = v1658;
  uint64_t v1662 = v40;
  *(void *)(v40 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v40 + swift_beginAccess(v1 + 24) = v41;
  uint64_t v1664 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v1661 = _allocateUninitializedArray<A>(_:)(3LL, v1664);
  v1663 = v42;
  swift_retain();
  uint64_t v43 = v1659;
  uint64_t v44 = v1663;
  void *v1663 = sub_884C;
  v44[1] = v43;
  swift_retain();
  uint64_t v45 = v1660;
  uint64_t v46 = v1663;
  v1663[2] = sub_884C;
  void v46[3] = v45;
  swift_retain();
  uint64_t v47 = v1661;
  uint64_t v48 = v1662;
  uint64_t v49 = v1663;
  v1663[4] = sub_8900;
  v49[5] = v48;
  sub_6648();
  swift_bridgeObjectRelease(v47);
  if (os_log_type_enabled(v1665, (os_log_type_t)v1666))
  {
    uint64_t v50 = v1612;
    v1601 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v1600 = sub_5150(&qword_D6B60);
    uint64_t v1602 = sub_74D0(0LL, v1600, v1600);
    uint64_t v1603 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v1604 = &v1671;
    v1671 = v1601;
    v1605 = &v1670;
    uint64_t v1670 = v1602;
    v1606 = &v1669;
    uint64_t v1669 = v1603;
    sub_7528(2LL, &v1671);
    sub_7528(1LL, v1604);
    v1667 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v1668 = v1659;
    sub_753C(&v1667, (uint64_t)v1604, (uint64_t)v1605, (uint64_t)v1606);
    uint64_t v1607 = v50;
    if (v50)
    {
      __break(1u);
    }

    else
    {
      v1667 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v1668 = v1660;
      sub_753C(&v1667, (uint64_t)&v1671, (uint64_t)&v1670, (uint64_t)&v1669);
      uint64_t v1598 = 0LL;
      v1667 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v1668 = v1662;
      sub_753C(&v1667, (uint64_t)&v1671, (uint64_t)&v1670, (uint64_t)&v1669);
      uint64_t v1597 = 0LL;
      _os_log_impl(&dword_0, v1665, (os_log_type_t)v1666, "dialogAct: %s", v1601, v1653);
      sub_7580(v1602, 0LL);
      sub_7580(v1603, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v1599 = v1597;
    }
  }

  else
  {
    uint64_t v51 = v1612;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v1599 = v51;
  }

  uint64_t v52 = v1599;

  v1593 = (void (*)(char *, uint64_t))v1638[1];
  v1593(v1626, v1639);
  uint64_t v53 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(v1641);
  uint64_t v1594 = v52;
  uint64_t v1595 = v53;
  uint64_t v1596 = v52;
  if (!v52)
  {
    uint64_t v1589 = v1595;
    uint64_t v1911 = v1595;
    swift_bridgeObjectRetain(v1595);
    v1591 = &v1909;
    uint64_t v1909 = v1589;
    uint64_t v1590 = sub_5150(&qword_D8850);
    unint64_t v54 = sub_71A6C();
    Collection.first.getter(&v1910, v1590, v54);
    sub_1B82C(v1591);
    uint64_t v1592 = v1910;
    if (!v1910) {
      goto LABEL_671;
    }
    uint64_t v1588 = v1592;
    uint64_t v1586 = v1592;
    uint64_t v1908 = v1592;
    swift_retain();
    v1587 = v1907;
    static UsoTask_CodegenConverter.convert(task:)(v1586);
    swift_release();
    sub_7ECD0((uint64_t)v1587, (uint64_t)v1906);
    if (v1906[3])
    {
      uint64_t v55 = type metadata accessor for UsoTask_tell_common_SiriContent(0LL);
      else {
        uint64_t v1583 = 0LL;
      }
      uint64_t v1585 = v1583;
    }

    else
    {
      uint64_t v1584 = 0LL;
      sub_1D580(v1906);
      uint64_t v1585 = v1584;
    }

    uint64_t v1581 = v1585;
    BOOL v1582 = v1585 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1905);
    if (v1582)
    {
      sub_7ECD0((uint64_t)v1905, (uint64_t)v1904);
      if (v1904[3])
      {
        uint64_t v56 = type metadata accessor for UsoTask_noVerb_common_SiriContent(0LL);
        else {
          uint64_t v1577 = 0LL;
        }
        uint64_t v1579 = v1577;
      }

      else
      {
        uint64_t v1578 = 0LL;
        sub_1D580(v1904);
        uint64_t v1579 = v1578;
      }

      BOOL v1576 = v1579 != 0;
      swift_release();
      int v1580 = v1576;
    }

    else
    {
      int v1580 = 1;
    }

    int v1575 = v1580;
    sub_1D580(v1905);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1903);
    if ((v1575 & 1) != 0)
    {
      int v1574 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1903, (uint64_t)v1902);
      if (v1902[3])
      {
        uint64_t v57 = type metadata accessor for UsoTask_hear_common_SiriContent(0LL);
        else {
          uint64_t v1571 = 0LL;
        }
        uint64_t v1573 = v1571;
      }

      else
      {
        uint64_t v1572 = 0LL;
        sub_1D580(v1902);
        uint64_t v1573 = v1572;
      }

      BOOL v1570 = v1573 != 0;
      swift_release();
      int v1574 = v1570;
    }

    int v1569 = v1574;
    sub_1D580(v1903);
    if ((v1569 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v58 = (uint64_t *)sub_60364();
      uint64_t v1565 = *v58;
      uint64_t v1566 = v58[1];
      swift_bridgeObjectRetain(v1566);
      uint64_t v1567 = sub_7D2CC(v1565, v1566);
      uint64_t v1568 = v59;
      swift_bridgeObjectRelease(v1566);
      sub_7EC00(v1629);
      if (v1568)
      {
        uint64_t v1563 = v1567;
        uint64_t v1564 = v1568;
        uint64_t v1548 = v1568;
        uint64_t v1547 = v1567;
        uint64_t v1680 = v1567;
        uint64_t v1681 = v1568;
        swift_bridgeObjectRetain(v1568);
        uint64_t v63 = v1548;
        uint64_t v64 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v65 = v64[1];
        uint64_t *v64 = v1547;
        v64[1] = v63;
        swift_bridgeObjectRelease(v65);
        sub_7EA78(v1637, v1629);
        v1679[2] = v1547;
        v1679[3] = v1548;
        uint64_t v66 = sub_601A8();
        uint64_t v1549 = *(void *)v66;
        uint64_t v1550 = *((void *)v66 + 1);
        swift_bridgeObjectRetain(v1550);
        v1552 = v1679;
        v1679[0] = v1549;
        v1679[1] = v1550;
        unint64_t v1551 = sub_B880();
        uint64_t v1553 = StringProtocol.appending<A>(_:)(v1552, &type metadata for String, &type metadata for String, v1551);
        uint64_t v1554 = v67;
        sub_8DD8((uint64_t)v1552);
        uint64_t v1555 = sub_7D2CC(v1553, v1554);
        uint64_t v1556 = v68;
        swift_bridgeObjectRelease(v1554);
        uint64_t v69 = sub_7EC00(v1629);
        if (v1556)
        {
          uint64_t v1545 = v1555;
          uint64_t v1546 = v1556;
          uint64_t v1541 = v1556;
          uint64_t v1542 = v1555;
          uint64_t v1676 = v1555;
          uint64_t v1677 = v1556;
          uint64_t v70 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1543 = *v70;
          uint64_t v1544 = v70[1];
          swift_bridgeObjectRetain(v1544);
          if (v1544)
          {
            uint64_t v1539 = v1543;
            uint64_t v1540 = v1544;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 169LL, 0);
            __break(1u);
          }

          uint64_t v1532 = v1540;
          uint64_t v1530 = v1539;
          swift_bridgeObjectRetain(v1540);
          v1531 = v1675;
          v1675[0] = v1530;
          v1675[1] = v1532;
          uint64_t v1533 = StringProtocol.capitalized.getter(&type metadata for String, v1551);
          uint64_t v1534 = v71;
          sub_8DD8((uint64_t)v1531);
          swift_bridgeObjectRelease(v1532);
          uint64_t v1535 = static String.+ infix(_:_:)(v1542, v1541, v1533);
          uint64_t v1536 = v72;
          swift_bridgeObjectRelease(v1534);
          uint64_t v73 = v1536;
          uint64_t v74 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v75 = v74[1];
          *uint64_t v74 = v1535;
          v74[1] = v73;
          swift_bridgeObjectRelease(v75);
          Swift::String v76 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("random", 6uLL, 1);
          object = v76._object;
          int v1538 = static String.== infix(_:_:)(v1542, v1541, v76._countAndFlagsBits, v76._object);
          swift_bridgeObjectRelease(object);
          if ((v1538 & 1) != 0)
          {
            v1635(v1620, 1LL, 1LL, v1633);
            sub_BC68(v1620, (void *)(v1637 + v1636[6]));
          }

          uint64_t v69 = swift_bridgeObjectRelease(v1541);
        }

        uint64_t v1525 = UsoTask.verbString.getter(v69);
        uint64_t v1528 = v77;
        uint64_t v78 = sub_605B4();
        uint64_t v1526 = *(void *)v78;
        uint64_t v1527 = *((void *)v78 + 1);
        swift_bridgeObjectRetain(v1527);
        unsigned int v1529 = static String.== infix(_:_:)(v1525, v1528, v1526, v1527);
        swift_bridgeObjectRelease(v1527);
        swift_bridgeObjectRelease(v1528);
        if ((v1529 & 1) != 0)
        {
          uint64_t v1521 = UsoTask.verbString.getter(v1529);
          uint64_t v1522 = v79;
          uint64_t v80 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1523 = *v80;
          uint64_t v1524 = v80[1];
          swift_bridgeObjectRetain(v1524);
          if (v1524)
          {
            uint64_t v1519 = v1523;
            uint64_t v1520 = v1524;
          }

          else
          {
            LOBYTE(v56sub_1B82C(v0 + 5) = 2;
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, v565, 177LL, 0);
            __break(1u);
          }

          uint64_t v1514 = v1520;
          uint64_t v1512 = v1519;
          swift_bridgeObjectRetain(v1520);
          v1513 = v1678;
          v1678[0] = v1512;
          v1678[1] = v1514;
          uint64_t v1515 = StringProtocol.capitalized.getter(&type metadata for String, v1551);
          uint64_t v1516 = v81;
          sub_8DD8((uint64_t)v1513);
          swift_bridgeObjectRelease(v1514);
          uint64_t v1517 = static String.+ infix(_:_:)(v1521, v1522, v1515);
          uint64_t v1518 = v82;
          swift_bridgeObjectRelease(v1516);
          swift_bridgeObjectRelease(v1522);
          uint64_t v83 = v1518;
          uint64_t v84 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v85 = v84[1];
          *uint64_t v84 = v1517;
          v84[1] = v83;
          swift_bridgeObjectRelease(v85);
        }

        uint64_t v62 = swift_bridgeObjectRelease(v1548);
      }

      else
      {
        sub_7EA78(v1637, v1629);
        uint64_t v60 = (uint64_t *)sub_601A8();
        uint64_t v1559 = *v60;
        uint64_t v1560 = v60[1];
        swift_bridgeObjectRetain(v1560);
        uint64_t v1561 = sub_7D6D8(v1559, v1560);
        uint64_t v1562 = v61;
        swift_bridgeObjectRelease(v1560);
        uint64_t v62 = sub_7EC00(v1629);
        if (v1562)
        {
          uint64_t v1557 = v1561;
          uint64_t v1558 = v1562;
          uint64_t v1506 = v1562;
          uint64_t v1505 = v1561;
          uint64_t v1683 = v1561;
          uint64_t v1684 = v1562;
          swift_bridgeObjectRetain(v1562);
          uint64_t v86 = v1506;
          uint64_t v87 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v88 = v87[1];
          *uint64_t v87 = v1505;
          v87[1] = v86;
          uint64_t v89 = swift_bridgeObjectRelease(v88);
          uint64_t v1507 = UsoTask.verbString.getter(v89);
          uint64_t v1510 = v90;
          Swift::String v91 = sub_605B4();
          uint64_t v1508 = *(void *)v91;
          uint64_t v1509 = *((void *)v91 + 1);
          swift_bridgeObjectRetain(v1509);
          unsigned int v1511 = static String.== infix(_:_:)(v1507, v1510, v1508, v1509);
          swift_bridgeObjectRelease(v1509);
          swift_bridgeObjectRelease(v1510);
          if ((v1511 & 1) != 0)
          {
            uint64_t v1501 = UsoTask.verbString.getter(v1511);
            uint64_t v1502 = v92;
            uint64_t v93 = (uint64_t *)(v1637 + v1636[5]);
            uint64_t v1503 = *v93;
            uint64_t v1504 = v93[1];
            swift_bridgeObjectRetain(v1504);
            if (v1504)
            {
              uint64_t v1499 = v1503;
              uint64_t v1500 = v1504;
            }

            else
            {
              _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 182LL, 0);
              __break(1u);
            }

            uint64_t v1494 = v1500;
            uint64_t v1492 = v1499;
            swift_bridgeObjectRetain(v1500);
            v1493 = v1682;
            v1682[0] = v1492;
            v1682[1] = v1494;
            unint64_t v94 = sub_B880();
            uint64_t v1495 = StringProtocol.capitalized.getter(&type metadata for String, v94);
            uint64_t v1496 = v95;
            sub_8DD8((uint64_t)v1493);
            swift_bridgeObjectRelease(v1494);
            uint64_t v1497 = static String.+ infix(_:_:)(v1501, v1502, v1495);
            uint64_t v1498 = v96;
            swift_bridgeObjectRelease(v1496);
            swift_bridgeObjectRelease(v1502);
            uint64_t v97 = v1498;
            uint64_t v98 = (uint64_t *)(v1637 + v1636[5]);
            uint64_t v99 = v98[1];
            *uint64_t v98 = v1497;
            v98[1] = v97;
            swift_bridgeObjectRelease(v99);
          }

          uint64_t v62 = swift_bridgeObjectRelease(v1506);
        }
      }

      uint64_t v1490 = UsoTask.arguments.getter(v62);
      Swift::String v100 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("reference", 9uLL, 1);
      v1489 = &v1697;
      Swift::String v1697 = v100;
      uint64_t v1488 = sub_5150(&qword_D8860);
      Dictionary.subscript.getter(&v1698);
      sub_8DD8((uint64_t)v1489);
      uint64_t v1491 = v1698;
      uint64_t v101 = swift_bridgeObjectRelease(v1490);
      if (!v1491) {
        goto LABEL_94;
      }
      uint64_t v1487 = v1491;
      uint64_t v1485 = v1491;
      swift_bridgeObjectRetain(v1491);
      v1484 = &v1685;
      uint64_t v1685 = v1485;
      unint64_t v102 = sub_71C8C();
      Collection.first.getter(&v1686, v1488, v102);
      sub_1B82C(v1484);
      uint64_t v1486 = v1686;
      uint64_t v101 = swift_bridgeObjectRelease(v1485);
      if (v1486)
      {
        uint64_t v1483 = v1486;
        uint64_t v1480 = v1486;
        uint64_t v1481 = dispatch thunk of UsoValue.getAsEntity()(v101);
        uint64_t v101 = swift_release();
        uint64_t v1482 = v1481;
      }

      else
      {
LABEL_94:
        uint64_t v1482 = 0LL;
      }

      uint64_t v1479 = v1482;
      if (v1482)
      {
        uint64_t v1478 = v1479;
        uint64_t v1474 = v1479;
        uint64_t v1696 = v1479;
        uint64_t v1476 = UsoEntity.attributes.getter(v101);
        Swift::String v103 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("associatedDateTime", 0x12uLL, 1);
        v1475 = &v1694;
        Swift::String v1694 = v103;
        Dictionary.subscript.getter(&v1695);
        sub_8DD8((uint64_t)v1475);
        uint64_t v1477 = v1695;
        swift_bridgeObjectRelease(v1476);
        if (!v1477) {
          goto LABEL_92;
        }
        uint64_t v1473 = v1477;
        uint64_t v1471 = v1477;
        swift_bridgeObjectRetain(v1477);
        v1470 = &v1687;
        uint64_t v1687 = v1471;
        unint64_t v104 = sub_71C8C();
        Collection.first.getter(&v1688, v1488, v104);
        sub_1B82C(v1470);
        uint64_t v1472 = v1688;
        uint64_t v105 = swift_bridgeObjectRelease(v1471);
        if (v1472)
        {
          uint64_t v1469 = v1472;
          uint64_t v1466 = v1472;
          uint64_t v1467 = dispatch thunk of UsoValue.getAsEntity()(v105);
          swift_release();
          uint64_t v1468 = v1467;
        }

        else
        {
LABEL_92:
          uint64_t v1468 = 0LL;
        }

        uint64_t v1465 = v1468;
        if (v1468)
        {
          uint64_t v1464 = v1465;
          uint64_t v1462 = v1465;
          uint64_t v1693 = v1465;
          swift_retain();
          v1463 = v1692;
          static UsoEntity_CodeGenConverter.convert(entity:)(v1462);
          swift_release();
          sub_7ECD0((uint64_t)v1463, (uint64_t)v1691);
          if (v1691[3])
          {
            uint64_t v106 = type metadata accessor for UsoEntity_common_DateTime(0LL);
            else {
              uint64_t v1459 = 0LL;
            }
            uint64_t v1461 = v1459;
          }

          else
          {
            uint64_t v1460 = 0LL;
            sub_1D580(v1691);
            uint64_t v1461 = v1460;
          }

          uint64_t v1458 = v1461;
          if (v1461)
          {
            uint64_t v1457 = v1458;
            uint64_t v1456 = v1458;
            uint64_t v1690 = v1458;
            sub_7EA78(v1637, v1629);
            sub_7DAE4(v1456, (uint64_t)v1620);
            sub_7EC00(v1629);
            sub_BC68(v1620, (void *)(v1637 + v1636[6]));
            sub_BAFC((const void *)(v1637 + v1636[6]), v1618);
            BOOL v1455 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1634 + 48))(v1618, 1LL, v1633) == 1;
            BOOL v1454 = v1455;
            sub_BDC8((uint64_t)v1618);
            if (v1454)
            {
              uint64_t v1453 = UsoEntity_common_DateTime.toDateTime(recurrencePattern:)(0LL);
              dispatch thunk of DateTime.dateComponents.getter();
              uint64_t v107 = swift_release();
              DateComponents.date.getter(v107);
              (*(void (**)(char *, uint64_t))(v1614 + 8))(v1616, v1613);
              sub_BC68(v1620, (void *)(v1637 + v1636[6]));
            }

            swift_release();
          }

          sub_1D580(v1692);
          swift_release();
        }

        swift_release();
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1901);
    if (v1901[3])
    {
      uint64_t v108 = type metadata accessor for UsoTask_perform_common_SiriSocialAction(0LL);
      else {
        uint64_t v1450 = 0LL;
      }
      uint64_t v1452 = v1450;
    }

    else
    {
      uint64_t v1451 = 0LL;
      sub_1D580(v1901);
      uint64_t v1452 = v1451;
    }

    uint64_t v1448 = v1452;
    BOOL v1449 = v1452 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1900);
    if (v1449)
    {
      sub_7ECD0((uint64_t)v1900, (uint64_t)v1899);
      if (v1899[3])
      {
        uint64_t v109 = type metadata accessor for UsoTask_summarise_common_SiriSocialAction(0LL);
        else {
          uint64_t v1444 = 0LL;
        }
        uint64_t v1446 = v1444;
      }

      else
      {
        uint64_t v1445 = 0LL;
        sub_1D580(v1899);
        uint64_t v1446 = v1445;
      }

      BOOL v1443 = v1446 != 0;
      swift_release();
      int v1447 = v1443;
    }

    else
    {
      int v1447 = 1;
    }

    int v1442 = v1447;
    sub_1D580(v1900);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1898);
    if ((v1442 & 1) != 0)
    {
      int v1441 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1898, (uint64_t)v1897);
      if (v1897[3])
      {
        uint64_t v110 = type metadata accessor for UsoTask_noVerb_common_SiriSocialAction(0LL);
        else {
          uint64_t v1438 = 0LL;
        }
        uint64_t v1440 = v1438;
      }

      else
      {
        uint64_t v1439 = 0LL;
        sub_1D580(v1897);
        uint64_t v1440 = v1439;
      }

      BOOL v1437 = v1440 != 0;
      swift_release();
      int v1441 = v1437;
    }

    int v1436 = v1441;
    sub_1D580(v1898);
    if ((v1436 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v111 = (uint64_t *)sub_603F8();
      uint64_t v1432 = *v111;
      uint64_t v1433 = v111[1];
      swift_bridgeObjectRetain(v1433);
      uint64_t v1434 = sub_7D2CC(v1432, v1433);
      uint64_t v1435 = v112;
      swift_bridgeObjectRelease(v1433);
      sub_7EC00(v1629);
      if (v1435)
      {
        uint64_t v1430 = v1434;
        uint64_t v1431 = v1435;
        uint64_t v1424 = v1435;
        uint64_t v1423 = v1434;
        uint64_t v1703 = v1434;
        uint64_t v1704 = v1435;
        swift_bridgeObjectRetain(v1435);
        uint64_t v113 = v1424;
        uint64_t v114 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v115 = v114[1];
        *uint64_t v114 = v1423;
        v114[1] = v113;
        uint64_t v116 = swift_bridgeObjectRelease(v115);
        uint64_t v1425 = UsoTask.verbString.getter(v116);
        uint64_t v1428 = v117;
        uint64_t v118 = sub_60DCC();
        uint64_t v1426 = *(void *)v118;
        uint64_t v1427 = *((void *)v118 + 1);
        swift_bridgeObjectRetain(v1427);
        unsigned int v1429 = static String.== infix(_:_:)(v1425, v1428, v1426, v1427);
        swift_bridgeObjectRelease(v1427);
        swift_bridgeObjectRelease(v1428);
        if ((v1429 & 1) != 0)
        {
          uint64_t v1419 = UsoTask.verbString.getter(v1429);
          uint64_t v1420 = v119;
          uint64_t v120 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1421 = *v120;
          uint64_t v1422 = v120[1];
          swift_bridgeObjectRetain(v1422);
          if (v1422)
          {
            uint64_t v1417 = v1421;
            uint64_t v1418 = v1422;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 202LL, 0);
            __break(1u);
          }

          uint64_t v1412 = v1418;
          uint64_t v1410 = v1417;
          swift_bridgeObjectRetain(v1418);
          v1411 = v1702;
          v1702[0] = v1410;
          v1702[1] = v1412;
          unint64_t v121 = sub_B880();
          uint64_t v1413 = StringProtocol.capitalized.getter(&type metadata for String, v121);
          uint64_t v1414 = v122;
          sub_8DD8((uint64_t)v1411);
          swift_bridgeObjectRelease(v1412);
          uint64_t v1415 = static String.+ infix(_:_:)(v1419, v1420, v1413);
          uint64_t v1416 = v123;
          swift_bridgeObjectRelease(v1414);
          swift_bridgeObjectRelease(v1420);
          uint64_t v124 = v1416;
          unint64_t v125 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v126 = v125[1];
          *unint64_t v125 = v1415;
          v125[1] = v124;
          swift_bridgeObjectRelease(v126);
        }

        swift_bridgeObjectRelease(v1424);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1896);
    if (v1896[3])
    {
      uint64_t v127 = type metadata accessor for UsoTask_noVerb_common_HolidayPhrase(0LL);
      else {
        uint64_t v1407 = 0LL;
      }
      uint64_t v1409 = v1407;
    }

    else
    {
      uint64_t v1408 = 0LL;
      sub_1D580(v1896);
      uint64_t v1409 = v1408;
    }

    uint64_t v1405 = v1409;
    BOOL v1406 = v1409 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1895);
    if (v1406)
    {
      sub_7ECD0((uint64_t)v1895, (uint64_t)v1894);
      if (v1894[3])
      {
        uint64_t v128 = type metadata accessor for UsoTask_tell_common_HolidayPhrase(0LL);
        else {
          uint64_t v1401 = 0LL;
        }
        uint64_t v1403 = v1401;
      }

      else
      {
        uint64_t v1402 = 0LL;
        sub_1D580(v1894);
        uint64_t v1403 = v1402;
      }

      BOOL v1400 = v1403 != 0;
      swift_release();
      int v1404 = v1400;
    }

    else
    {
      int v1404 = 1;
    }

    int v1399 = v1404;
    sub_1D580(v1895);
    swift_release();
    if ((v1399 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v129 = (uint64_t *)sub_6023C();
      uint64_t v1395 = *v129;
      uint64_t v1396 = v129[1];
      swift_bridgeObjectRetain(v1396);
      uint64_t v1397 = sub_7D2CC(v1395, v1396);
      uint64_t v1398 = v130;
      swift_bridgeObjectRelease(v1396);
      sub_7EC00(v1629);
      if (v1398)
      {
        uint64_t v1393 = v1397;
        uint64_t v1394 = v1398;
        uint64_t v131 = v1624;
        uint64_t v1379 = v1398;
        uint64_t v1378 = v1397;
        uint64_t v1714 = v1397;
        uint64_t v1715 = v1398;
        uint64_t v132 = sub_AD514();
        v1640(v131, v132, v1639);
        swift_bridgeObjectRetain(v1379);
        uint64_t v1382 = 32LL;
        uint64_t v1383 = 7LL;
        uint64_t v133 = swift_allocObject(&unk_D00F8, 32LL, 7LL);
        uint64_t v134 = v1379;
        uint64_t v1384 = v133;
        *(void *)(v133 + swift_beginAccess(v1 + 16) = v1378;
        *(void *)(v133 + swift_beginAccess(v1 + 24) = v134;
        v1391 = (os_log_s *)Logger.logObject.getter(v133);
        int v1392 = static os_log_type_t.debug.getter();
        uint64_t v1712 = 12LL;
        UnsignedInteger<>.init<A>(_:)( &v1713,  &v1712,  &type metadata for UInt32,  &type metadata for Int,  v1649,  v1650,  v1652);
        uint32_t v1380 = v1713;
        uint64_t v1381 = 17LL;
        uint64_t v135 = swift_allocObject(&unk_D0120, 17LL, v1383);
        uint64_t v136 = v1381;
        uint64_t v137 = v1383;
        uint64_t v1386 = v135;
        *(_BYTE *)(v135 + swift_beginAccess(v1 + 16) = 32;
        uint64_t v138 = swift_allocObject(&unk_D0148, v136, v137);
        uint64_t v139 = v1382;
        uint64_t v140 = v1383;
        uint64_t v1387 = v138;
        *(_BYTE *)(v138 + swift_beginAccess(v1 + 16) = 8;
        uint64_t v141 = swift_allocObject(&unk_D0170, v139, v140);
        uint64_t v142 = v1382;
        uint64_t v143 = v1383;
        uint64_t v144 = v141;
        uint64_t v145 = v1384;
        uint64_t v1385 = v144;
        *(void *)(v144 + swift_beginAccess(v1 + 16) = sub_1B890;
        *(void *)(v144 + swift_beginAccess(v1 + 24) = v145;
        uint64_t v146 = swift_allocObject(&unk_D0198, v142, v143);
        uint64_t v147 = v1664;
        uint64_t v148 = v146;
        uint64_t v149 = v1385;
        uint64_t v1389 = v148;
        *(void *)(v148 + swift_beginAccess(v1 + 16) = sub_88B8;
        *(void *)(v148 + swift_beginAccess(v1 + 24) = v149;
        uint64_t v1388 = _allocateUninitializedArray<A>(_:)(3LL, v147);
        v1390 = v150;
        swift_retain();
        uint64_t v151 = v1386;
        uint64_t v152 = v1390;
        void *v1390 = sub_884C;
        v152[1] = v151;
        swift_retain();
        uint64_t v153 = v1387;
        uint64_t v154 = v1390;
        v1390[2] = sub_884C;
        v154[3] = v153;
        swift_retain();
        uint64_t v155 = v1388;
        uint64_t v156 = v1389;
        Swift::String v157 = v1390;
        v1390[4] = sub_8900;
        v157[5] = v156;
        sub_6648();
        swift_bridgeObjectRelease(v155);
        if (os_log_type_enabled(v1391, (os_log_type_t)v1392))
        {
          uint64_t v158 = v1594;
          v1371 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
          uint64_t v1370 = sub_5150(&qword_D6B60);
          uint64_t v1372 = sub_74D0(0LL, v1370, v1370);
          uint64_t v1373 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
          v1374 = &v1711;
          v1711 = v1371;
          v1375 = &v1710;
          uint64_t v1710 = v1372;
          v1376 = &v1709;
          uint64_t v1709 = v1373;
          sub_7528(2LL, &v1711);
          sub_7528(1LL, v1374);
          v1707 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v1708 = v1386;
          sub_753C(&v1707, (uint64_t)v1374, (uint64_t)v1375, (uint64_t)v1376);
          uint64_t v1377 = v158;
          if (v158)
          {
            __break(1u);
          }

          else
          {
            v1707 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v1708 = v1387;
            sub_753C(&v1707, (uint64_t)&v1711, (uint64_t)&v1710, (uint64_t)&v1709);
            uint64_t v1369 = 0LL;
            v1707 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
            uint64_t v1708 = v1389;
            sub_753C(&v1707, (uint64_t)&v1711, (uint64_t)&v1710, (uint64_t)&v1709);
            _os_log_impl(&dword_0, v1391, (os_log_type_t)v1392, "USO holiday parse: %s", v1371, v1380);
            sub_7580(v1372, 0LL);
            sub_7580(v1373, 1LL);
            UnsafeMutablePointer.deallocate()();
            swift_release();
            swift_release();
            swift_release();
          }
        }

        else
        {
          swift_release();
          swift_release();
          swift_release();
        }

        v1593(v1624, v1639);
        uint64_t v159 = v1379;
        *(_BYTE *)(v1637 + v1636[7]) = 1;
        swift_bridgeObjectRetain(v159);
        uint64_t v160 = v1379;
        uint64_t v161 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v162 = v161[1];
        uint64_t *v161 = v1378;
        v161[1] = v160;
        swift_bridgeObjectRelease(v162);
        swift_bridgeObjectRelease(v1379);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1893);
    if (v1893[3])
    {
      uint64_t v163 = type metadata accessor for UsoTask_noVerb_common_Salutation(0LL);
      else {
        uint64_t v1366 = 0LL;
      }
      uint64_t v1368 = v1366;
    }

    else
    {
      uint64_t v1367 = 0LL;
      sub_1D580(v1893);
      uint64_t v1368 = v1367;
    }

    uint64_t v1364 = v1368;
    BOOL v1365 = v1368 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1892);
    if (v1365)
    {
      sub_7ECD0((uint64_t)v1892, (uint64_t)v1891);
      if (v1891[3])
      {
        uint64_t v164 = type metadata accessor for UsoTask_tell_common_Salutation(0LL);
        else {
          uint64_t v1360 = 0LL;
        }
        uint64_t v1362 = v1360;
      }

      else
      {
        uint64_t v1361 = 0LL;
        sub_1D580(v1891);
        uint64_t v1362 = v1361;
      }

      BOOL v1359 = v1362 != 0;
      swift_release();
      int v1363 = v1359;
    }

    else
    {
      int v1363 = 1;
    }

    int v1358 = v1363;
    sub_1D580(v1892);
    swift_release();
    if ((v1358 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v165 = (uint64_t *)sub_602D0();
      uint64_t v1354 = *v165;
      uint64_t v1355 = v165[1];
      swift_bridgeObjectRetain(v1355);
      uint64_t v1356 = sub_7D2CC(v1354, v1355);
      uint64_t v1357 = v166;
      swift_bridgeObjectRelease(v1355);
      sub_7EC00(v1629);
      if (v1357)
      {
        uint64_t v1352 = v1356;
        uint64_t v1353 = v1357;
        uint64_t v1346 = v1357;
        uint64_t v1345 = v1356;
        uint64_t v1719 = v1356;
        uint64_t v1720 = v1357;
        swift_bridgeObjectRetain(v1357);
        uint64_t v167 = v1346;
        uint64_t v168 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v169 = v168[1];
        uint64_t *v168 = v1345;
        v168[1] = v167;
        uint64_t v170 = swift_bridgeObjectRelease(v169);
        uint64_t v1347 = UsoTask.verbString.getter(v170);
        uint64_t v1350 = v171;
        uint64_t v172 = sub_60520();
        uint64_t v1348 = *(void *)v172;
        uint64_t v1349 = *((void *)v172 + 1);
        swift_bridgeObjectRetain(v1349);
        unsigned int v1351 = static String.== infix(_:_:)(v1347, v1350, v1348, v1349);
        swift_bridgeObjectRelease(v1349);
        swift_bridgeObjectRelease(v1350);
        if ((v1351 & 1) != 0)
        {
          uint64_t v1341 = UsoTask.verbString.getter(v1351);
          uint64_t v1342 = v173;
          uint64_t v174 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1343 = *v174;
          uint64_t v1344 = v174[1];
          swift_bridgeObjectRetain(v1344);
          if (v1344)
          {
            uint64_t v1339 = v1343;
            uint64_t v1340 = v1344;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 215LL, 0);
            __break(1u);
          }

          uint64_t v1334 = v1340;
          uint64_t v1332 = v1339;
          swift_bridgeObjectRetain(v1340);
          v1333 = v1718;
          v1718[0] = v1332;
          v1718[1] = v1334;
          unint64_t v175 = sub_B880();
          uint64_t v1335 = StringProtocol.capitalized.getter(&type metadata for String, v175);
          uint64_t v1336 = v176;
          sub_8DD8((uint64_t)v1333);
          swift_bridgeObjectRelease(v1334);
          uint64_t v1337 = static String.+ infix(_:_:)(v1341, v1342, v1335);
          uint64_t v1338 = v177;
          swift_bridgeObjectRelease(v1336);
          swift_bridgeObjectRelease(v1342);
          uint64_t v178 = v1338;
          uint64_t v179 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v180 = v179[1];
          uint64_t *v179 = v1337;
          v179[1] = v178;
          swift_bridgeObjectRelease(v180);
        }

        swift_bridgeObjectRelease(v1346);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1890);
    if (v1890[3])
    {
      uint64_t v181 = type metadata accessor for UsoTask_noVerb_common_SocialInterjection(0LL);
      else {
        uint64_t v1329 = 0LL;
      }
      uint64_t v1331 = v1329;
    }

    else
    {
      uint64_t v1330 = 0LL;
      sub_1D580(v1890);
      uint64_t v1331 = v1330;
    }

    uint64_t v1327 = v1331;
    BOOL v1328 = v1331 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1889);
    if (v1328)
    {
      sub_7ECD0((uint64_t)v1889, (uint64_t)v1888);
      if (v1888[3])
      {
        uint64_t v182 = type metadata accessor for UsoTask_tell_common_SocialInterjection(0LL);
        else {
          uint64_t v1323 = 0LL;
        }
        uint64_t v1325 = v1323;
      }

      else
      {
        uint64_t v1324 = 0LL;
        sub_1D580(v1888);
        uint64_t v1325 = v1324;
      }

      BOOL v1322 = v1325 != 0;
      swift_release();
      int v1326 = v1322;
    }

    else
    {
      int v1326 = 1;
    }

    int v1321 = v1326;
    sub_1D580(v1889);
    swift_release();
    if ((v1321 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v183 = (uint64_t *)sub_6048C();
      uint64_t v1317 = *v183;
      uint64_t v1318 = v183[1];
      swift_bridgeObjectRetain(v1318);
      uint64_t v1319 = sub_7D2CC(v1317, v1318);
      uint64_t v1320 = v184;
      swift_bridgeObjectRelease(v1318);
      sub_7EC00(v1629);
      if (v1320)
      {
        uint64_t v1315 = v1319;
        uint64_t v1316 = v1320;
        uint64_t v1314 = v1320;
        uint64_t v1313 = v1319;
        uint64_t v1723 = v1319;
        uint64_t v1724 = v1320;
        swift_bridgeObjectRetain(v1320);
        uint64_t v185 = v1314;
        uint64_t v186 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v187 = v186[1];
        *uint64_t v186 = v1313;
        v186[1] = v185;
        swift_bridgeObjectRelease(v187);
        swift_bridgeObjectRelease(v1314);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1887);
    if (v1887[3])
    {
      uint64_t v188 = type metadata accessor for UsoTask_checkLike_common_SiriFavorite(0LL);
      else {
        uint64_t v1310 = 0LL;
      }
      uint64_t v1312 = v1310;
    }

    else
    {
      uint64_t v1311 = 0LL;
      sub_1D580(v1887);
      uint64_t v1312 = v1311;
    }

    uint64_t v1308 = v1312;
    BOOL v1309 = v1312 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1886);
    if (v1309)
    {
      sub_7ECD0((uint64_t)v1886, (uint64_t)v1885);
      if (v1885[3])
      {
        uint64_t v189 = type metadata accessor for UsoTask_checkUnlike_common_SiriFavorite(0LL);
        else {
          uint64_t v1304 = 0LL;
        }
        uint64_t v1306 = v1304;
      }

      else
      {
        uint64_t v1305 = 0LL;
        sub_1D580(v1885);
        uint64_t v1306 = v1305;
      }

      BOOL v1303 = v1306 != 0;
      swift_release();
      int v1307 = v1303;
    }

    else
    {
      int v1307 = 1;
    }

    int v1302 = v1307;
    sub_1D580(v1886);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1884);
    if ((v1302 & 1) != 0)
    {
      int v1301 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1884, (uint64_t)v1883);
      if (v1883[3])
      {
        uint64_t v190 = type metadata accessor for UsoTask_like_common_SiriFavorite(0LL);
        else {
          uint64_t v1298 = 0LL;
        }
        uint64_t v1300 = v1298;
      }

      else
      {
        uint64_t v1299 = 0LL;
        sub_1D580(v1883);
        uint64_t v1300 = v1299;
      }

      BOOL v1297 = v1300 != 0;
      swift_release();
      int v1301 = v1297;
    }

    int v1296 = v1301;
    sub_1D580(v1884);
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1882);
    if ((v1296 & 1) != 0)
    {
      int v1295 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1882, (uint64_t)v1881);
      if (v1881[3])
      {
        uint64_t v191 = type metadata accessor for UsoTask_unlike_common_SiriFavorite(0LL);
        else {
          uint64_t v1292 = 0LL;
        }
        uint64_t v1294 = v1292;
      }

      else
      {
        uint64_t v1293 = 0LL;
        sub_1D580(v1881);
        uint64_t v1294 = v1293;
      }

      BOOL v1291 = v1294 != 0;
      swift_release();
      int v1295 = v1291;
    }

    int v1290 = v1295;
    sub_1D580(v1882);
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1880);
    if ((v1290 & 1) != 0)
    {
      int v1289 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1880, (uint64_t)v1879);
      if (v1879[3])
      {
        uint64_t v192 = type metadata accessor for UsoTask_noVerb_common_SiriFavorite(0LL);
        else {
          uint64_t v1286 = 0LL;
        }
        uint64_t v1288 = v1286;
      }

      else
      {
        uint64_t v1287 = 0LL;
        sub_1D580(v1879);
        uint64_t v1288 = v1287;
      }

      BOOL v1285 = v1288 != 0;
      swift_release();
      int v1289 = v1285;
    }

    int v1284 = v1289;
    sub_1D580(v1880);
    if ((v1284 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v193 = (uint64_t *)sub_606DC();
      uint64_t v1280 = *v193;
      uint64_t v1281 = v193[1];
      swift_bridgeObjectRetain(v1281);
      uint64_t v1282 = sub_7D2CC(v1280, v1281);
      uint64_t v1283 = v194;
      swift_bridgeObjectRelease(v1281);
      sub_7EC00(v1629);
      if (v1283)
      {
        uint64_t v1278 = v1282;
        uint64_t v1279 = v1283;
        uint64_t v1266 = v1283;
        uint64_t v1265 = v1282;
        uint64_t v1731 = v1282;
        uint64_t v1732 = v1283;
        swift_bridgeObjectRetain(v1283);
        uint64_t v197 = v1266;
        Swift::String v198 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v199 = v198[1];
        uint64_t *v198 = v1265;
        v198[1] = v197;
        uint64_t v200 = swift_bridgeObjectRelease(v199);
        uint64_t v1267 = UsoTask.verbString.getter(v200);
        uint64_t v1270 = v201;
        swift_bridgeObjectRetain(v201);
        __int128 v202 = sub_60CA4();
        uint64_t v1268 = *(void *)v202;
        uint64_t v1269 = *((void *)v202 + 1);
        swift_bridgeObjectRetain(v1269);
        swift_bridgeObjectRetain(v1269);
        unsigned int v1271 = static String.== infix(_:_:)(v1267, v1270, v1268, v1269);
        swift_bridgeObjectRelease(v1269);
        swift_bridgeObjectRelease(v1270);
        swift_bridgeObjectRelease(v1269);
        swift_bridgeObjectRelease(v1270);
        if ((v1271 & 1) == 0)
        {
          uint64_t v1261 = UsoTask.verbString.getter(v1271);
          uint64_t v1262 = v203;
          __int128 v204 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1263 = *v204;
          uint64_t v1264 = v204[1];
          swift_bridgeObjectRetain(v1264);
          if (v1264)
          {
            uint64_t v1259 = v1263;
            uint64_t v1260 = v1264;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 226LL, 0);
            __break(1u);
          }

          uint64_t v1254 = v1260;
          uint64_t v1252 = v1259;
          swift_bridgeObjectRetain(v1260);
          v1253 = v1730;
          v1730[0] = v1252;
          v1730[1] = v1254;
          unint64_t v205 = sub_B880();
          uint64_t v1255 = StringProtocol.capitalized.getter(&type metadata for String, v205);
          uint64_t v1256 = v206;
          sub_8DD8((uint64_t)v1253);
          swift_bridgeObjectRelease(v1254);
          uint64_t v1257 = static String.+ infix(_:_:)(v1261, v1262, v1255);
          uint64_t v1258 = v207;
          swift_bridgeObjectRelease(v1256);
          swift_bridgeObjectRelease(v1262);
          uint64_t v208 = v1258;
          uint64_t v209 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v210 = v209[1];
          *uint64_t v209 = v1257;
          v209[1] = v208;
          swift_bridgeObjectRelease(v210);
        }

        swift_bridgeObjectRelease(v1266);
      }

      else
      {
        sub_7EA78(v1637, v1629);
        uint64_t v195 = (uint64_t *)sub_60770();
        uint64_t v1274 = *v195;
        uint64_t v1275 = v195[1];
        swift_bridgeObjectRetain(v1275);
        uint64_t v1276 = sub_7D2CC(v1274, v1275);
        uint64_t v1277 = v196;
        swift_bridgeObjectRelease(v1275);
        sub_7EC00(v1629);
        if (v1277)
        {
          uint64_t v1272 = v1276;
          uint64_t v1273 = v1277;
          uint64_t v1243 = v1277;
          uint64_t v1242 = v1276;
          uint64_t v1734 = v1276;
          uint64_t v1735 = v1277;
          swift_bridgeObjectRetain(v1277);
          uint64_t v211 = v1243;
          unint64_t v212 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v213 = v212[1];
          *unint64_t v212 = v1242;
          v212[1] = v211;
          uint64_t v214 = swift_bridgeObjectRelease(v213);
          uint64_t v1244 = UsoTask.verbString.getter(v214);
          uint64_t v1249 = v215;
          unint64_t v216 = sub_60EF4();
          uint64_t v1245 = *(void *)v216;
          uint64_t v1246 = *((void *)v216 + 1);
          swift_bridgeObjectRetain(v1246);
          uint64_t v1247 = static String.+ infix(_:_:)(v1244, v1249, v1245);
          uint64_t v1248 = v217;
          swift_bridgeObjectRelease(v1246);
          swift_bridgeObjectRelease(v1249);
          uint64_t v218 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1250 = *v218;
          uint64_t v1251 = v218[1];
          swift_bridgeObjectRetain(v1251);
          if (v1251)
          {
            uint64_t v1240 = v1250;
            uint64_t v1241 = v1251;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 230LL, 0);
            __break(1u);
          }

          uint64_t v1235 = v1241;
          uint64_t v1233 = v1240;
          swift_bridgeObjectRetain(v1241);
          v1234 = v1733;
          v1733[0] = v1233;
          v1733[1] = v1235;
          unint64_t v219 = sub_B880();
          uint64_t v1236 = StringProtocol.capitalized.getter(&type metadata for String, v219);
          uint64_t v1237 = v220;
          sub_8DD8((uint64_t)v1234);
          swift_bridgeObjectRelease(v1235);
          uint64_t v1238 = static String.+ infix(_:_:)(v1247, v1248, v1236);
          uint64_t v1239 = v221;
          swift_bridgeObjectRelease(v1237);
          swift_bridgeObjectRelease(v1248);
          uint64_t v222 = v1239;
          BOOL v223 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v224 = v223[1];
          *BOOL v223 = v1238;
          v223[1] = v222;
          swift_bridgeObjectRelease(v224);
          swift_bridgeObjectRelease(v1243);
        }
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1878);
    if (v1878[3])
    {
      uint64_t v225 = type metadata accessor for UsoTask_request_common_SiriFavorite(0LL);
      else {
        uint64_t v1230 = 0LL;
      }
      uint64_t v1232 = v1230;
    }

    else
    {
      uint64_t v1231 = 0LL;
      sub_1D580(v1878);
      uint64_t v1232 = v1231;
    }

    BOOL v1229 = v1232 == 0;
    uint64_t v226 = swift_release();
    if (!v1229)
    {
      uint64_t v227 = UsoTask.verbString.getter(v226);
      uint64_t v228 = v1629;
      uint64_t v1215 = v227;
      uint64_t v1218 = v229;
      int v230 = sub_60EF4();
      uint64_t v1216 = *(void *)v230;
      uint64_t v1217 = *((void *)v230 + 1);
      swift_bridgeObjectRetain(v1217);
      uint64_t v1219 = static String.+ infix(_:_:)(v1215, v1218, v1216);
      uint64_t v1222 = v231;
      swift_bridgeObjectRelease(v1217);
      swift_bridgeObjectRelease(v1218);
      id v232 = sub_6126C();
      uint64_t v1220 = *(void *)v232;
      uint64_t v1221 = *((void *)v232 + 1);
      swift_bridgeObjectRetain(v1221);
      uint64_t v1223 = static String.+ infix(_:_:)(v1219, v1222, v1220);
      uint64_t v1224 = v233;
      swift_bridgeObjectRelease(v1221);
      swift_bridgeObjectRelease(v1222);
      uint64_t v234 = v1224;
      uint64_t v235 = (uint64_t *)(v1637 + v1636[5]);
      uint64_t v236 = v235[1];
      *uint64_t v235 = v1223;
      v235[1] = v234;
      swift_bridgeObjectRelease(v236);
      sub_7EA78(v1637, v228);
      id v237 = (uint64_t *)sub_60770();
      uint64_t v1225 = *v237;
      uint64_t v1226 = v237[1];
      swift_bridgeObjectRetain(v1226);
      uint64_t v1227 = sub_7D2CC(v1225, v1226);
      uint64_t v1228 = v238;
      swift_bridgeObjectRelease(v1226);
      sub_7EC00(v1629);
      if (v1228)
      {
        uint64_t v1213 = v1227;
        uint64_t v1214 = v1228;
        uint64_t v1204 = v1228;
        uint64_t v1203 = v1227;
        uint64_t v1738 = v1227;
        uint64_t v1739 = v1228;
        swift_bridgeObjectRetain(v1228);
        uint64_t v239 = v1204;
        uint64_t v240 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v241 = v240[1];
        uint64_t *v240 = v1203;
        v240[1] = v239;
        uint64_t v242 = swift_bridgeObjectRelease(v241);
        uint64_t v1205 = UsoTask.verbString.getter(v242);
        uint64_t v1210 = v243;
        uint64_t v244 = sub_60EF4();
        uint64_t v1206 = *(void *)v244;
        uint64_t v1207 = *((void *)v244 + 1);
        swift_bridgeObjectRetain(v1207);
        uint64_t v1208 = static String.+ infix(_:_:)(v1205, v1210, v1206);
        uint64_t v1209 = v245;
        swift_bridgeObjectRelease(v1207);
        swift_bridgeObjectRelease(v1210);
        uint64_t v246 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v1211 = *v246;
        uint64_t v1212 = v246[1];
        swift_bridgeObjectRetain(v1212);
        if (v1212)
        {
          uint64_t v1201 = v1211;
          uint64_t v1202 = v1212;
        }

        else
        {
          _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 236LL, 0);
          __break(1u);
        }

        uint64_t v1196 = v1202;
        uint64_t v1194 = v1201;
        swift_bridgeObjectRetain(v1202);
        v1195 = v1737;
        v1737[0] = v1194;
        v1737[1] = v1196;
        unint64_t v247 = sub_B880();
        uint64_t v1197 = StringProtocol.capitalized.getter(&type metadata for String, v247);
        uint64_t v1198 = v248;
        sub_8DD8((uint64_t)v1195);
        swift_bridgeObjectRelease(v1196);
        uint64_t v1199 = static String.+ infix(_:_:)(v1208, v1209, v1197);
        uint64_t v1200 = v249;
        swift_bridgeObjectRelease(v1198);
        swift_bridgeObjectRelease(v1209);
        uint64_t v250 = v1200;
        uint64_t v251 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v252 = v251[1];
        uint64_t *v251 = v1199;
        v251[1] = v250;
        swift_bridgeObjectRelease(v252);
        swift_bridgeObjectRelease(v1204);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1877);
    if (v1877[3])
    {
      uint64_t v253 = type metadata accessor for UsoTask_summarise_common_SiriFavorite(0LL);
      else {
        uint64_t v1191 = 0LL;
      }
      uint64_t v1193 = v1191;
    }

    else
    {
      uint64_t v1192 = 0LL;
      sub_1D580(v1877);
      uint64_t v1193 = v1192;
    }

    BOOL v1190 = v1193 == 0;
    swift_release();
    if (!v1190)
    {
      uint64_t v254 = sub_60DCC();
      uint64_t v1184 = *(void *)v254;
      uint64_t v1187 = *((void *)v254 + 1);
      swift_bridgeObjectRetain(v1187);
      char v255 = sub_60EF4();
      uint64_t v1185 = *(void *)v255;
      uint64_t v1186 = *((void *)v255 + 1);
      swift_bridgeObjectRetain(v1186);
      uint64_t v1188 = static String.+ infix(_:_:)(v1184, v1187, v1185);
      uint64_t v1189 = v256;
      swift_bridgeObjectRelease(v1186);
      swift_bridgeObjectRelease(v1187);
      uint64_t v257 = v1189;
      uint64_t v258 = (uint64_t *)(v1637 + v1636[5]);
      uint64_t v259 = v258[1];
      *uint64_t v258 = v1188;
      v258[1] = v257;
      swift_bridgeObjectRelease(v259);
      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1876);
    if (v1876[3])
    {
      uint64_t v260 = type metadata accessor for UsoTask_like_common_UserFavorite(0LL);
      else {
        uint64_t v1181 = 0LL;
      }
      uint64_t v1183 = v1181;
    }

    else
    {
      uint64_t v1182 = 0LL;
      sub_1D580(v1876);
      uint64_t v1183 = v1182;
    }

    uint64_t v1179 = v1183;
    BOOL v1180 = v1183 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1875);
    if (v1180)
    {
      sub_7ECD0((uint64_t)v1875, (uint64_t)v1874);
      if (v1874[3])
      {
        uint64_t v261 = type metadata accessor for UsoTask_unlike_common_UserFavorite(0LL);
        else {
          uint64_t v1175 = 0LL;
        }
        uint64_t v1177 = v1175;
      }

      else
      {
        uint64_t v1176 = 0LL;
        sub_1D580(v1874);
        uint64_t v1177 = v1176;
      }

      BOOL v1174 = v1177 != 0;
      swift_release();
      int v1178 = v1174;
    }

    else
    {
      int v1178 = 1;
    }

    int v1173 = v1178;
    sub_1D580(v1875);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1873);
    if ((v1173 & 1) != 0)
    {
      int v1172 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1873, (uint64_t)v1872);
      if (v1872[3])
      {
        uint64_t v262 = type metadata accessor for UsoTask_checkLike_common_UserFavorite(0LL);
        else {
          uint64_t v1169 = 0LL;
        }
        uint64_t v1171 = v1169;
      }

      else
      {
        uint64_t v1170 = 0LL;
        sub_1D580(v1872);
        uint64_t v1171 = v1170;
      }

      BOOL v1168 = v1171 != 0;
      swift_release();
      int v1172 = v1168;
    }

    int v1167 = v1172;
    sub_1D580(v1873);
    if ((v1167 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v263 = (uint64_t *)sub_606DC();
      uint64_t v1163 = *v263;
      uint64_t v1164 = v263[1];
      swift_bridgeObjectRetain(v1164);
      uint64_t v1165 = sub_7D2CC(v1163, v1164);
      uint64_t v1166 = v264;
      swift_bridgeObjectRelease(v1164);
      sub_7EC00(v1629);
      if (v1166)
      {
        uint64_t v1161 = v1165;
        uint64_t v1162 = v1166;
        uint64_t v1155 = v1166;
        uint64_t v1154 = v1165;
        uint64_t v1745 = v1165;
        uint64_t v1746 = v1166;
        swift_bridgeObjectRetain(v1166);
        uint64_t v265 = v1155;
        char v266 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v267 = v266[1];
        uint64_t *v266 = v1154;
        v266[1] = v265;
        uint64_t v268 = swift_bridgeObjectRelease(v267);
        uint64_t v1156 = UsoTask.verbString.getter(v268);
        uint64_t v1159 = v269;
        swift_bridgeObjectRetain(v269);
        uint64_t v270 = sub_60D38();
        uint64_t v1157 = *(void *)v270;
        uint64_t v1158 = *((void *)v270 + 1);
        swift_bridgeObjectRetain(v1158);
        swift_bridgeObjectRetain(v1158);
        unsigned int v1160 = static String.== infix(_:_:)(v1156, v1159, v1157, v1158);
        swift_bridgeObjectRelease(v1158);
        swift_bridgeObjectRelease(v1159);
        swift_bridgeObjectRelease(v1158);
        swift_bridgeObjectRelease(v1159);
        if ((v1160 & 1) == 0)
        {
          uint64_t v1146 = UsoTask.verbString.getter(v1160);
          uint64_t v1151 = v271;
          uint64_t v272 = sub_60F88();
          uint64_t v1147 = *(void *)v272;
          uint64_t v1148 = *((void *)v272 + 1);
          swift_bridgeObjectRetain(v1148);
          uint64_t v1149 = static String.+ infix(_:_:)(v1146, v1151, v1147);
          uint64_t v1150 = v273;
          swift_bridgeObjectRelease(v1148);
          swift_bridgeObjectRelease(v1151);
          Swift::String v274 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1152 = *v274;
          uint64_t v1153 = v274[1];
          swift_bridgeObjectRetain(v1153);
          if (v1153)
          {
            uint64_t v1144 = v1152;
            uint64_t v1145 = v1153;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 244LL, 0);
            __break(1u);
          }

          uint64_t v1139 = v1145;
          uint64_t v1137 = v1144;
          swift_bridgeObjectRetain(v1145);
          v1138 = v1744;
          v1744[0] = v1137;
          v1744[1] = v1139;
          unint64_t v275 = sub_B880();
          uint64_t v1140 = StringProtocol.capitalized.getter(&type metadata for String, v275);
          uint64_t v1141 = v276;
          sub_8DD8((uint64_t)v1138);
          swift_bridgeObjectRelease(v1139);
          uint64_t v1142 = static String.+ infix(_:_:)(v1149, v1150, v1140);
          uint64_t v1143 = v277;
          swift_bridgeObjectRelease(v1141);
          swift_bridgeObjectRelease(v1150);
          uint64_t v278 = v1143;
          uint64_t v279 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v280 = v279[1];
          *uint64_t v279 = v1142;
          v279[1] = v278;
          swift_bridgeObjectRelease(v280);
        }

        swift_bridgeObjectRelease(v1155);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1871);
    if (v1871[3])
    {
      uint64_t v281 = type metadata accessor for UsoTask_guess_common_UserFavorite(0LL);
      else {
        uint64_t v1134 = 0LL;
      }
      uint64_t v1136 = v1134;
    }

    else
    {
      uint64_t v1135 = 0LL;
      sub_1D580(v1871);
      uint64_t v1136 = v1135;
    }

    uint64_t v1132 = v1136;
    BOOL v1133 = v1136 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1870);
    if (v1133)
    {
      sub_7ECD0((uint64_t)v1870, (uint64_t)v1869);
      if (v1869[3])
      {
        uint64_t v282 = type metadata accessor for UsoTask_request_common_UserFavorite(0LL);
        else {
          uint64_t v1128 = 0LL;
        }
        uint64_t v1130 = v1128;
      }

      else
      {
        uint64_t v1129 = 0LL;
        sub_1D580(v1869);
        uint64_t v1130 = v1129;
      }

      BOOL v1127 = v1130 != 0;
      swift_release();
      int v1131 = v1127;
    }

    else
    {
      int v1131 = 1;
    }

    int v1126 = v1131;
    sub_1D580(v1870);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1868);
    if ((v1126 & 1) != 0)
    {
      int v1125 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1868, (uint64_t)v1867);
      if (v1867[3])
      {
        uint64_t v283 = type metadata accessor for UsoTask_noVerb_common_UserFavorite(0LL);
        else {
          uint64_t v1122 = 0LL;
        }
        uint64_t v1124 = v1122;
      }

      else
      {
        uint64_t v1123 = 0LL;
        sub_1D580(v1867);
        uint64_t v1124 = v1123;
      }

      BOOL v1121 = v1124 != 0;
      swift_release();
      int v1125 = v1121;
    }

    int v1120 = v1125;
    __int128 v284 = sub_1D580(v1868);
    if ((v1120 & 1) != 0)
    {
      uint64_t v285 = UsoTask.verbString.getter(v284);
      uint64_t v286 = v1629;
      uint64_t v1106 = v285;
      uint64_t v1109 = v287;
      uint64_t v288 = sub_60F88();
      uint64_t v1107 = *(void *)v288;
      uint64_t v1108 = *((void *)v288 + 1);
      swift_bridgeObjectRetain(v1108);
      uint64_t v1110 = static String.+ infix(_:_:)(v1106, v1109, v1107);
      uint64_t v1113 = v289;
      swift_bridgeObjectRelease(v1108);
      swift_bridgeObjectRelease(v1109);
      uint64_t v290 = sub_6126C();
      uint64_t v1111 = *(void *)v290;
      uint64_t v1112 = *((void *)v290 + 1);
      swift_bridgeObjectRetain(v1112);
      uint64_t v1114 = static String.+ infix(_:_:)(v1110, v1113, v1111);
      uint64_t v1115 = v291;
      swift_bridgeObjectRelease(v1112);
      swift_bridgeObjectRelease(v1113);
      uint64_t v292 = v1115;
      uint32_t v293 = (uint64_t *)(v1637 + v1636[5]);
      uint64_t v294 = v293[1];
      *uint32_t v293 = v1114;
      v293[1] = v292;
      swift_bridgeObjectRelease(v294);
      sub_7EA78(v1637, v286);
      __int128 v295 = (uint64_t *)sub_60770();
      uint64_t v1116 = *v295;
      uint64_t v1117 = v295[1];
      swift_bridgeObjectRetain(v1117);
      uint64_t v1118 = sub_7D2CC(v1116, v1117);
      uint64_t v1119 = v296;
      swift_bridgeObjectRelease(v1117);
      sub_7EC00(v1629);
      if (v1119)
      {
        uint64_t v1104 = v1118;
        uint64_t v1105 = v1119;
        uint64_t v1098 = v1119;
        uint64_t v1097 = v1118;
        uint64_t v1751 = v1118;
        uint64_t v1752 = v1119;
        swift_bridgeObjectRetain(v1119);
        uint64_t v297 = v1098;
        __int128 v298 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v299 = v298[1];
        *__int128 v298 = v1097;
        v298[1] = v297;
        uint64_t v300 = swift_bridgeObjectRelease(v299);
        uint64_t v1099 = UsoTask.verbString.getter(v300);
        uint64_t v1102 = v301;
        swift_bridgeObjectRetain(v301);
        __int128 v302 = sub_61144();
        uint64_t v1100 = *(void *)v302;
        uint64_t v1101 = *((void *)v302 + 1);
        swift_bridgeObjectRetain(v1101);
        swift_bridgeObjectRetain(v1101);
        unsigned int v1103 = static String.== infix(_:_:)(v1099, v1102, v1100, v1101);
        swift_bridgeObjectRelease(v1101);
        swift_bridgeObjectRelease(v1102);
        swift_bridgeObjectRelease(v1101);
        swift_bridgeObjectRelease(v1102);
        if ((v1103 & 1) == 0)
        {
          uint64_t v1089 = UsoTask.verbString.getter(v1103);
          uint64_t v1094 = v303;
          uint64_t v304 = sub_60F88();
          uint64_t v1090 = *(void *)v304;
          uint64_t v1091 = *((void *)v304 + 1);
          swift_bridgeObjectRetain(v1091);
          uint64_t v1092 = static String.+ infix(_:_:)(v1089, v1094, v1090);
          uint64_t v1093 = v305;
          swift_bridgeObjectRelease(v1091);
          swift_bridgeObjectRelease(v1094);
          uint64_t v306 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1095 = *v306;
          uint64_t v1096 = v306[1];
          swift_bridgeObjectRetain(v1096);
          if (v1096)
          {
            uint64_t v1087 = v1095;
            uint64_t v1088 = v1096;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 252LL, 0);
            __break(1u);
          }

          uint64_t v1082 = v1088;
          uint64_t v1080 = v1087;
          swift_bridgeObjectRetain(v1088);
          v1081 = v1750;
          v1750[0] = v1080;
          v1750[1] = v1082;
          unint64_t v307 = sub_B880();
          uint64_t v1083 = StringProtocol.capitalized.getter(&type metadata for String, v307);
          uint64_t v1084 = v308;
          sub_8DD8((uint64_t)v1081);
          swift_bridgeObjectRelease(v1082);
          uint64_t v1085 = static String.+ infix(_:_:)(v1092, v1093, v1083);
          uint64_t v1086 = v309;
          swift_bridgeObjectRelease(v1084);
          swift_bridgeObjectRelease(v1093);
          uint64_t v310 = v1086;
          uint64_t v311 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v312 = v311[1];
          uint64_t *v311 = v1085;
          v311[1] = v310;
          swift_bridgeObjectRelease(v312);
        }

        swift_bridgeObjectRelease(v1098);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1866);
    if (v1866[3])
    {
      uint64_t v313 = type metadata accessor for UsoTask_summarise_common_SiriOpinion(0LL);
      else {
        uint64_t v1077 = 0LL;
      }
      uint64_t v1079 = v1077;
    }

    else
    {
      uint64_t v1078 = 0LL;
      sub_1D580(v1866);
      uint64_t v1079 = v1078;
    }

    uint64_t v1075 = v1079;
    BOOL v1076 = v1079 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1865);
    if (v1076)
    {
      sub_7ECD0((uint64_t)v1865, (uint64_t)v1864);
      if (v1864[3])
      {
        uint64_t v314 = type metadata accessor for UsoTask_noVerb_common_SiriOpinion(0LL);
        else {
          uint64_t v1071 = 0LL;
        }
        uint64_t v1073 = v1071;
      }

      else
      {
        uint64_t v1072 = 0LL;
        sub_1D580(v1864);
        uint64_t v1073 = v1072;
      }

      BOOL v1070 = v1073 != 0;
      swift_release();
      int v1074 = v1070;
    }

    else
    {
      int v1074 = 1;
    }

    int v1069 = v1074;
    sub_1D580(v1865);
    swift_release();
    if ((v1069 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v315 = (uint64_t *)sub_60804();
      uint64_t v1065 = *v315;
      uint64_t v1066 = v315[1];
      swift_bridgeObjectRetain(v1066);
      uint64_t v1067 = sub_7D2CC(v1065, v1066);
      uint64_t v1068 = v316;
      swift_bridgeObjectRelease(v1066);
      sub_7EC00(v1629);
      if (v1068)
      {
        uint64_t v1063 = v1067;
        uint64_t v1064 = v1068;
        uint64_t v1057 = v1068;
        uint64_t v1056 = v1067;
        uint64_t v1756 = v1067;
        uint64_t v1757 = v1068;
        swift_bridgeObjectRetain(v1068);
        uint64_t v317 = v1057;
        uint64_t v318 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v319 = v318[1];
        *uint64_t v318 = v1056;
        v318[1] = v317;
        uint64_t v320 = swift_bridgeObjectRelease(v319);
        uint64_t v1058 = UsoTask.verbString.getter(v320);
        uint64_t v1061 = v321;
        uint64_t v322 = sub_60DCC();
        uint64_t v1059 = *(void *)v322;
        uint64_t v1060 = *((void *)v322 + 1);
        swift_bridgeObjectRetain(v1060);
        unsigned int v1062 = static String.== infix(_:_:)(v1058, v1061, v1059, v1060);
        swift_bridgeObjectRelease(v1060);
        swift_bridgeObjectRelease(v1061);
        if ((v1062 & 1) != 0)
        {
          uint64_t v1048 = UsoTask.verbString.getter(v1062);
          uint64_t v1053 = v323;
          uint64_t v324 = sub_61300();
          uint64_t v1049 = *(void *)v324;
          uint64_t v1050 = *((void *)v324 + 1);
          swift_bridgeObjectRetain(v1050);
          uint64_t v1051 = static String.+ infix(_:_:)(v1048, v1053, v1049);
          uint64_t v1052 = v325;
          swift_bridgeObjectRelease(v1050);
          swift_bridgeObjectRelease(v1053);
          uint64_t v326 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1054 = *v326;
          uint64_t v1055 = v326[1];
          swift_bridgeObjectRetain(v1055);
          if (v1055)
          {
            uint64_t v1046 = v1054;
            uint64_t v1047 = v1055;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 259LL, 0);
            __break(1u);
          }

          uint64_t v1041 = v1047;
          uint64_t v1039 = v1046;
          swift_bridgeObjectRetain(v1047);
          v1040 = v1755;
          v1755[0] = v1039;
          v1755[1] = v1041;
          unint64_t v327 = sub_B880();
          uint64_t v1042 = StringProtocol.capitalized.getter(&type metadata for String, v327);
          uint64_t v1043 = v328;
          sub_8DD8((uint64_t)v1040);
          swift_bridgeObjectRelease(v1041);
          uint64_t v1044 = static String.+ infix(_:_:)(v1051, v1052, v1042);
          uint64_t v1045 = v329;
          swift_bridgeObjectRelease(v1043);
          swift_bridgeObjectRelease(v1052);
          uint64_t v330 = v1045;
          uint64_t v331 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v332 = v331[1];
          *uint64_t v331 = v1044;
          v331[1] = v330;
          swift_bridgeObjectRelease(v332);
        }

        swift_bridgeObjectRelease(v1057);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1863);
    if (v1863[3])
    {
      uint64_t v333 = type metadata accessor for UsoTask_checkExistence_common_SiriOpinion(0LL);
      else {
        uint64_t v1036 = 0LL;
      }
      uint64_t v1038 = v1036;
    }

    else
    {
      uint64_t v1037 = 0LL;
      sub_1D580(v1863);
      uint64_t v1038 = v1037;
    }

    uint64_t v1034 = v1038;
    BOOL v1035 = v1038 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1862);
    if (v1035)
    {
      sub_7ECD0((uint64_t)v1862, (uint64_t)v1861);
      if (v1861[3])
      {
        uint64_t v334 = type metadata accessor for UsoTask_justify_common_SiriOpinion(0LL);
        else {
          uint64_t v1030 = 0LL;
        }
        uint64_t v1032 = v1030;
      }

      else
      {
        uint64_t v1031 = 0LL;
        sub_1D580(v1861);
        uint64_t v1032 = v1031;
      }

      BOOL v1029 = v1032 != 0;
      swift_release();
      int v1033 = v1029;
    }

    else
    {
      int v1033 = 1;
    }

    int v1028 = v1033;
    sub_1D580(v1862);
    swift_release();
    if ((v1028 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v335 = (uint64_t *)sub_60804();
      uint64_t v1024 = *v335;
      uint64_t v1025 = v335[1];
      swift_bridgeObjectRetain(v1025);
      uint64_t v1026 = sub_7D2CC(v1024, v1025);
      uint64_t v1027 = v336;
      swift_bridgeObjectRelease(v1025);
      sub_7EC00(v1629);
      if (v1027)
      {
        uint64_t v1022 = v1026;
        uint64_t v1023 = v1027;
        uint64_t v1016 = v1027;
        uint64_t v1015 = v1026;
        uint64_t v1765 = v1026;
        uint64_t v1766 = v1027;
        swift_bridgeObjectRetain(v1027);
        uint64_t v337 = v1016;
        uint64_t v338 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v339 = v338[1];
        *uint64_t v338 = v1015;
        v338[1] = v337;
        uint64_t v340 = swift_bridgeObjectRelease(v339);
        uint64_t v1017 = UsoTask.verbString.getter(v340);
        uint64_t v1020 = v341;
        unint64_t v342 = sub_60E60();
        uint64_t v1018 = *(void *)v342;
        uint64_t v1019 = *((void *)v342 + 1);
        swift_bridgeObjectRetain(v1019);
        unsigned int v1021 = static String.== infix(_:_:)(v1017, v1020, v1018, v1019);
        swift_bridgeObjectRelease(v1019);
        swift_bridgeObjectRelease(v1020);
        if ((v1021 & 1) != 0)
        {
          uint64_t v1011 = UsoTask.verbString.getter(v1021);
          uint64_t v1012 = v343;
          uint64_t v344 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v1013 = *v344;
          uint64_t v1014 = v344[1];
          swift_bridgeObjectRetain(v1014);
          if (v1014)
          {
            uint64_t v1009 = v1013;
            uint64_t v1010 = v1014;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 266LL, 0);
            __break(1u);
          }

          uint64_t v1004 = v1010;
          uint64_t v1002 = v1009;
          swift_bridgeObjectRetain(v1010);
          v1003 = v1760;
          v1760[0] = v1002;
          v1760[1] = v1004;
          unint64_t v345 = sub_B880();
          uint64_t v1005 = StringProtocol.capitalized.getter(&type metadata for String, v345);
          uint64_t v1006 = v346;
          sub_8DD8((uint64_t)v1003);
          swift_bridgeObjectRelease(v1004);
          uint64_t v1007 = static String.+ infix(_:_:)(v1011, v1012, v1005);
          uint64_t v1008 = v347;
          swift_bridgeObjectRelease(v1006);
          swift_bridgeObjectRelease(v1012);
          uint64_t v348 = v1008;
          uint64_t v349 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v350 = v349[1];
          uint64_t *v349 = v1007;
          v349[1] = v348;
          swift_bridgeObjectRelease(v350);
        }

        sub_7EA78(v1637, v1629);
        uint64_t v351 = (uint64_t *)sub_60898();
        uint64_t v998 = *v351;
        uint64_t v999 = v351[1];
        swift_bridgeObjectRetain(v999);
        uint64_t v1000 = sub_7D2CC(v998, v999);
        uint64_t v1001 = v352;
        swift_bridgeObjectRelease(v999);
        sub_7EC00(v1629);
        if (v1001)
        {
          uint64_t v996 = v1000;
          uint64_t v997 = v1001;
          uint64_t v992 = v1001;
          uint64_t v993 = v1000;
          uint64_t v1763 = v1000;
          uint64_t v1764 = v1001;
          unint64_t v353 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v994 = *v353;
          uint64_t v995 = v353[1];
          swift_bridgeObjectRetain(v995);
          if (v995)
          {
            uint64_t v990 = v994;
            uint64_t v991 = v995;
          }

          else
          {
            LOBYTE(v56sub_1B82C(v0 + 5) = 2;
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, v565, 269LL, 0);
            __break(1u);
          }

          uint64_t v980 = v991;
          uint64_t v977 = v990;
          swift_bridgeObjectRetain(v991);
          v979 = v1762;
          v1762[0] = v977;
          v1762[1] = v980;
          unint64_t v978 = sub_B880();
          uint64_t v981 = StringProtocol.capitalized.getter(&type metadata for String, v978);
          uint64_t v982 = v354;
          sub_8DD8((uint64_t)v979);
          swift_bridgeObjectRelease(v980);
          uint64_t v983 = static String.+ infix(_:_:)(v993, v992, v981);
          uint64_t v984 = v355;
          swift_bridgeObjectRelease(v982);
          uint64_t v356 = v984;
          uint64_t v357 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v358 = v357[1];
          *uint64_t v357 = v983;
          v357[1] = v356;
          uint64_t v359 = swift_bridgeObjectRelease(v358);
          uint64_t v985 = UsoTask.verbString.getter(v359);
          uint64_t v988 = v360;
          int v361 = sub_60E60();
          uint64_t v986 = *(void *)v361;
          uint64_t v987 = *((void *)v361 + 1);
          swift_bridgeObjectRetain(v987);
          unsigned int v989 = static String.== infix(_:_:)(v985, v988, v986, v987);
          swift_bridgeObjectRelease(v987);
          swift_bridgeObjectRelease(v988);
          if ((v989 & 1) != 0)
          {
            uint64_t v973 = UsoTask.verbString.getter(v989);
            uint64_t v974 = v362;
            uint64_t v363 = (uint64_t *)(v1637 + v1636[5]);
            uint64_t v975 = *v363;
            uint64_t v976 = v363[1];
            swift_bridgeObjectRetain(v976);
            if (v976)
            {
              uint64_t v971 = v975;
              uint64_t v972 = v976;
            }

            else
            {
              LOBYTE(v56sub_1B82C(v0 + 5) = 2;
              _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, v565, 271LL, 0);
              __break(1u);
            }

            uint64_t v966 = v972;
            uint64_t v964 = v971;
            swift_bridgeObjectRetain(v972);
            v965 = v1761;
            v1761[0] = v964;
            v1761[1] = v966;
            uint64_t v967 = StringProtocol.capitalized.getter(&type metadata for String, v978);
            uint64_t v968 = v364;
            sub_8DD8((uint64_t)v965);
            swift_bridgeObjectRelease(v966);
            uint64_t v969 = static String.+ infix(_:_:)(v973, v974, v967);
            uint64_t v970 = v365;
            swift_bridgeObjectRelease(v968);
            swift_bridgeObjectRelease(v974);
            uint64_t v366 = v970;
            uint64_t v367 = (uint64_t *)(v1637 + v1636[5]);
            uint64_t v368 = v367[1];
            *uint64_t v367 = v969;
            v367[1] = v366;
            swift_bridgeObjectRelease(v368);
          }

          swift_bridgeObjectRelease(v992);
        }

        swift_bridgeObjectRelease(v1016);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1860);
    if (v1860[3])
    {
      uint64_t v369 = type metadata accessor for UsoTask_state_common_SiriProperty(0LL);
      else {
        uint64_t v961 = 0LL;
      }
      uint64_t v963 = v961;
    }

    else
    {
      uint64_t v962 = 0LL;
      sub_1D580(v1860);
      uint64_t v963 = v962;
    }

    uint64_t v959 = v963;
    BOOL v960 = v963 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1859);
    if (v960)
    {
      sub_7ECD0((uint64_t)v1859, (uint64_t)v1858);
      if (v1858[3])
      {
        uint64_t v370 = type metadata accessor for UsoTask_summarise_common_SiriProperty(0LL);
        else {
          uint64_t v955 = 0LL;
        }
        uint64_t v957 = v955;
      }

      else
      {
        uint64_t v956 = 0LL;
        sub_1D580(v1858);
        uint64_t v957 = v956;
      }

      BOOL v954 = v957 != 0;
      swift_release();
      int v958 = v954;
    }

    else
    {
      int v958 = 1;
    }

    int v953 = v958;
    sub_1D580(v1859);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1857);
    if ((v953 & 1) != 0)
    {
      int v952 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1857, (uint64_t)v1856);
      if (v1856[3])
      {
        uint64_t v371 = type metadata accessor for UsoTask_noVerb_common_SiriProperty(0LL);
        else {
          uint64_t v949 = 0LL;
        }
        uint64_t v951 = v949;
      }

      else
      {
        uint64_t v950 = 0LL;
        sub_1D580(v1856);
        uint64_t v951 = v950;
      }

      BOOL v948 = v951 != 0;
      swift_release();
      int v952 = v948;
    }

    int v947 = v952;
    sub_1D580(v1857);
    if ((v947 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v372 = (uint64_t *)sub_6092C();
      uint64_t v943 = *v372;
      uint64_t v944 = v372[1];
      swift_bridgeObjectRetain(v944);
      uint64_t v945 = sub_7D2CC(v943, v944);
      uint64_t v946 = v373;
      swift_bridgeObjectRelease(v944);
      sub_7EC00(v1629);
      if (v946)
      {
        uint64_t v941 = v945;
        uint64_t v942 = v946;
        uint64_t v935 = v946;
        uint64_t v934 = v945;
        uint64_t v1771 = v945;
        uint64_t v1772 = v946;
        swift_bridgeObjectRetain(v946);
        uint64_t v374 = v935;
        uint64_t v375 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v376 = v375[1];
        *uint64_t v375 = v934;
        v375[1] = v374;
        uint64_t v377 = swift_bridgeObjectRelease(v376);
        uint64_t v936 = UsoTask.verbString.getter(v377);
        uint64_t v939 = v378;
        uint64_t v379 = sub_60DCC();
        uint64_t v937 = *(void *)v379;
        uint64_t v938 = *((void *)v379 + 1);
        swift_bridgeObjectRetain(v938);
        unsigned int v940 = static String.== infix(_:_:)(v936, v939, v937, v938);
        swift_bridgeObjectRelease(v938);
        swift_bridgeObjectRelease(v939);
        if ((v940 & 1) != 0)
        {
          uint64_t v926 = UsoTask.verbString.getter(v940);
          uint64_t v931 = v380;
          uint64_t v381 = sub_60EF4();
          uint64_t v927 = *(void *)v381;
          uint64_t v928 = *((void *)v381 + 1);
          swift_bridgeObjectRetain(v928);
          uint64_t v929 = static String.+ infix(_:_:)(v926, v931, v927);
          uint64_t v930 = v382;
          swift_bridgeObjectRelease(v928);
          swift_bridgeObjectRelease(v931);
          uint64_t v383 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v932 = *v383;
          uint64_t v933 = v383[1];
          swift_bridgeObjectRetain(v933);
          if (v933)
          {
            uint64_t v924 = v932;
            uint64_t v925 = v933;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 279LL, 0);
            __break(1u);
          }

          uint64_t v919 = v925;
          uint64_t v917 = v924;
          swift_bridgeObjectRetain(v925);
          v918 = v1770;
          v1770[0] = v917;
          v1770[1] = v919;
          unint64_t v384 = sub_B880();
          uint64_t v920 = StringProtocol.capitalized.getter(&type metadata for String, v384);
          uint64_t v921 = v385;
          sub_8DD8((uint64_t)v918);
          swift_bridgeObjectRelease(v919);
          uint64_t v922 = static String.+ infix(_:_:)(v929, v930, v920);
          uint64_t v923 = v386;
          swift_bridgeObjectRelease(v921);
          swift_bridgeObjectRelease(v930);
          uint64_t v387 = v923;
          Swift::String v388 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v389 = v388[1];
          *Swift::String v388 = v922;
          v388[1] = v387;
          swift_bridgeObjectRelease(v389);
        }

        swift_bridgeObjectRelease(v935);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1855);
    if (v1855[3])
    {
      uint64_t v390 = type metadata accessor for UsoTask_checkExistence_common_SiriProperty(0LL);
      else {
        uint64_t v914 = 0LL;
      }
      uint64_t v916 = v914;
    }

    else
    {
      uint64_t v915 = 0LL;
      sub_1D580(v1855);
      uint64_t v916 = v915;
    }

    BOOL v913 = v916 == 0;
    swift_release();
    if (!v913)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v391 = (uint64_t *)sub_6092C();
      uint64_t v909 = *v391;
      uint64_t v910 = v391[1];
      swift_bridgeObjectRetain(v910);
      uint64_t v911 = sub_7D2CC(v909, v910);
      uint64_t v912 = v392;
      swift_bridgeObjectRelease(v910);
      sub_7EC00(v1629);
      if (v912)
      {
        uint64_t v907 = v911;
        uint64_t v908 = v912;
        uint64_t v898 = v912;
        uint64_t v897 = v911;
        uint64_t v1775 = v911;
        uint64_t v1776 = v912;
        swift_bridgeObjectRetain(v912);
        uint64_t v393 = v898;
        uint64_t v394 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v395 = v394[1];
        *uint64_t v394 = v897;
        v394[1] = v393;
        swift_bridgeObjectRelease(v395);
        uint64_t v396 = sub_610B0();
        uint64_t v899 = *(void *)v396;
        uint64_t v904 = *((void *)v396 + 1);
        swift_bridgeObjectRetain(v904);
        id v397 = sub_60EF4();
        uint64_t v900 = *(void *)v397;
        uint64_t v901 = *((void *)v397 + 1);
        swift_bridgeObjectRetain(v901);
        uint64_t v902 = static String.+ infix(_:_:)(v899, v904, v900);
        uint64_t v903 = v398;
        swift_bridgeObjectRelease(v901);
        swift_bridgeObjectRelease(v904);
        id v399 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v905 = *v399;
        uint64_t v906 = v399[1];
        swift_bridgeObjectRetain(v906);
        if (v906)
        {
          uint64_t v895 = v905;
          uint64_t v896 = v906;
        }

        else
        {
          _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 285LL, 0);
          __break(1u);
        }

        uint64_t v890 = v896;
        uint64_t v888 = v895;
        swift_bridgeObjectRetain(v896);
        v889 = v1774;
        v1774[0] = v888;
        v1774[1] = v890;
        unint64_t v400 = sub_B880();
        uint64_t v891 = StringProtocol.capitalized.getter(&type metadata for String, v400);
        uint64_t v892 = v401;
        sub_8DD8((uint64_t)v889);
        swift_bridgeObjectRelease(v890);
        uint64_t v893 = static String.+ infix(_:_:)(v902, v903, v891);
        uint64_t v894 = v402;
        swift_bridgeObjectRelease(v892);
        swift_bridgeObjectRelease(v903);
        uint64_t v403 = v894;
        Swift::String v404 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v405 = v404[1];
        *Swift::String v404 = v893;
        v404[1] = v403;
        swift_bridgeObjectRelease(v405);
        swift_bridgeObjectRelease(v898);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1854);
    if (v1854[3])
    {
      uint64_t v406 = type metadata accessor for UsoTask_state_common_UserProperty(0LL);
      else {
        uint64_t v885 = 0LL;
      }
      uint64_t v887 = v885;
    }

    else
    {
      uint64_t v886 = 0LL;
      sub_1D580(v1854);
      uint64_t v887 = v886;
    }

    uint64_t v883 = v887;
    BOOL v884 = v887 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1853);
    if (v884)
    {
      sub_7ECD0((uint64_t)v1853, (uint64_t)v1852);
      if (v1852[3])
      {
        uint64_t v407 = type metadata accessor for UsoTask_summarise_common_UserProperty(0LL);
        else {
          uint64_t v879 = 0LL;
        }
        uint64_t v881 = v879;
      }

      else
      {
        uint64_t v880 = 0LL;
        sub_1D580(v1852);
        uint64_t v881 = v880;
      }

      BOOL v878 = v881 != 0;
      swift_release();
      int v882 = v878;
    }

    else
    {
      int v882 = 1;
    }

    int v877 = v882;
    sub_1D580(v1853);
    swift_release();
    if ((v877 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v408 = (uint64_t *)sub_60AE8();
      uint64_t v873 = *v408;
      uint64_t v874 = v408[1];
      swift_bridgeObjectRetain(v874);
      uint64_t v875 = sub_7D2CC(v873, v874);
      uint64_t v876 = v409;
      swift_bridgeObjectRelease(v874);
      sub_7EC00(v1629);
      if (v876)
      {
        uint64_t v871 = v875;
        uint64_t v872 = v876;
        uint64_t v865 = v876;
        uint64_t v864 = v875;
        uint64_t v1780 = v875;
        uint64_t v1781 = v876;
        swift_bridgeObjectRetain(v876);
        uint64_t v410 = v865;
        uint64_t v411 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v412 = v411[1];
        *uint64_t v411 = v864;
        v411[1] = v410;
        uint64_t v413 = swift_bridgeObjectRelease(v412);
        uint64_t v866 = UsoTask.verbString.getter(v413);
        uint64_t v869 = v414;
        uint64_t v415 = sub_60DCC();
        uint64_t v867 = *(void *)v415;
        uint64_t v868 = *((void *)v415 + 1);
        swift_bridgeObjectRetain(v868);
        unsigned int v870 = static String.== infix(_:_:)(v866, v869, v867, v868);
        swift_bridgeObjectRelease(v868);
        swift_bridgeObjectRelease(v869);
        if ((v870 & 1) != 0)
        {
          uint64_t v856 = UsoTask.verbString.getter(v870);
          uint64_t v861 = v416;
          uint64_t v417 = sub_60F88();
          uint64_t v857 = *(void *)v417;
          uint64_t v858 = *((void *)v417 + 1);
          swift_bridgeObjectRetain(v858);
          uint64_t v859 = static String.+ infix(_:_:)(v856, v861, v857);
          uint64_t v860 = v418;
          swift_bridgeObjectRelease(v858);
          swift_bridgeObjectRelease(v861);
          uint64_t v419 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v862 = *v419;
          uint64_t v863 = v419[1];
          swift_bridgeObjectRetain(v863);
          if (v863)
          {
            uint64_t v854 = v862;
            uint64_t v855 = v863;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 291LL, 0);
            __break(1u);
          }

          uint64_t v849 = v855;
          uint64_t v847 = v854;
          swift_bridgeObjectRetain(v855);
          v848 = v1779;
          v1779[0] = v847;
          v1779[1] = v849;
          unint64_t v420 = sub_B880();
          uint64_t v850 = StringProtocol.capitalized.getter(&type metadata for String, v420);
          uint64_t v851 = v421;
          sub_8DD8((uint64_t)v848);
          swift_bridgeObjectRelease(v849);
          uint64_t v852 = static String.+ infix(_:_:)(v859, v860, v850);
          uint64_t v853 = v422;
          swift_bridgeObjectRelease(v851);
          swift_bridgeObjectRelease(v860);
          uint64_t v423 = v853;
          unint64_t v424 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v425 = v424[1];
          *unint64_t v424 = v852;
          v424[1] = v423;
          swift_bridgeObjectRelease(v425);
        }

        swift_bridgeObjectRelease(v865);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1851);
    if (v1851[3])
    {
      uint64_t v426 = type metadata accessor for UsoTask_checkExistence_common_UserProperty(0LL);
      else {
        uint64_t v844 = 0LL;
      }
      uint64_t v846 = v844;
    }

    else
    {
      uint64_t v845 = 0LL;
      sub_1D580(v1851);
      uint64_t v846 = v845;
    }

    BOOL v843 = v846 == 0;
    swift_release();
    if (!v843)
    {
      sub_7EA78(v1637, v1629);
      Swift::String v427 = (uint64_t *)sub_60AE8();
      uint64_t v839 = *v427;
      uint64_t v840 = v427[1];
      swift_bridgeObjectRetain(v840);
      uint64_t v841 = sub_7D2CC(v839, v840);
      uint64_t v842 = v428;
      swift_bridgeObjectRelease(v840);
      sub_7EC00(v1629);
      if (v842)
      {
        uint64_t v837 = v841;
        uint64_t v838 = v842;
        uint64_t v828 = v842;
        uint64_t v827 = v841;
        uint64_t v1784 = v841;
        uint64_t v1785 = v842;
        swift_bridgeObjectRetain(v842);
        uint64_t v429 = v828;
        uint64_t v430 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v431 = v430[1];
        *uint64_t v430 = v827;
        v430[1] = v429;
        swift_bridgeObjectRelease(v431);
        uint64_t v432 = sub_610B0();
        uint64_t v829 = *(void *)v432;
        uint64_t v834 = *((void *)v432 + 1);
        swift_bridgeObjectRetain(v834);
        char v433 = sub_60F88();
        uint64_t v830 = *(void *)v433;
        uint64_t v831 = *((void *)v433 + 1);
        swift_bridgeObjectRetain(v831);
        uint64_t v832 = static String.+ infix(_:_:)(v829, v834, v830);
        uint64_t v833 = v434;
        swift_bridgeObjectRelease(v831);
        swift_bridgeObjectRelease(v834);
        uint64_t v435 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v835 = *v435;
        uint64_t v836 = v435[1];
        swift_bridgeObjectRetain(v836);
        if (v836)
        {
          uint64_t v825 = v835;
          uint64_t v826 = v836;
        }

        else
        {
          _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 297LL, 0);
          __break(1u);
        }

        uint64_t v820 = v826;
        uint64_t v818 = v825;
        swift_bridgeObjectRetain(v826);
        v819 = v1783;
        v1783[0] = v818;
        v1783[1] = v820;
        unint64_t v436 = sub_B880();
        uint64_t v821 = StringProtocol.capitalized.getter(&type metadata for String, v436);
        uint64_t v822 = v437;
        sub_8DD8((uint64_t)v819);
        swift_bridgeObjectRelease(v820);
        uint64_t v823 = static String.+ infix(_:_:)(v832, v833, v821);
        uint64_t v824 = v438;
        swift_bridgeObjectRelease(v822);
        swift_bridgeObjectRelease(v833);
        uint64_t v439 = v824;
        __int128 v440 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v441 = v440[1];
        uint64_t *v440 = v823;
        v440[1] = v439;
        swift_bridgeObjectRelease(v441);
        swift_bridgeObjectRelease(v828);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1850);
    if (v1850[3])
    {
      uint64_t v442 = type metadata accessor for UsoTask_state_common_PersonProperty(0LL);
      else {
        uint64_t v815 = 0LL;
      }
      uint64_t v817 = v815;
    }

    else
    {
      uint64_t v816 = 0LL;
      sub_1D580(v1850);
      uint64_t v817 = v816;
    }

    BOOL v814 = v817 == 0;
    swift_release();
    if (!v814)
    {
      sub_7EA78(v1637, v1629);
      __int128 v443 = (uint64_t *)sub_60C10();
      uint64_t v810 = *v443;
      uint64_t v811 = v443[1];
      swift_bridgeObjectRetain(v811);
      uint64_t v812 = sub_7D2CC(v810, v811);
      uint64_t v813 = v444;
      swift_bridgeObjectRelease(v811);
      sub_7EC00(v1629);
      if (v813)
      {
        uint64_t v808 = v812;
        uint64_t v809 = v813;
        uint64_t v807 = v813;
        uint64_t v806 = v812;
        uint64_t v1787 = v812;
        uint64_t v1788 = v813;
        swift_bridgeObjectRetain(v813);
        uint64_t v445 = v807;
        char v446 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v447 = v446[1];
        *char v446 = v806;
        v446[1] = v445;
        swift_bridgeObjectRelease(v447);
        swift_bridgeObjectRelease(v807);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1849);
    if (v1849[3])
    {
      uint64_t v448 = type metadata accessor for UsoTask_checkExistence_common_PersonProperty(0LL);
      else {
        uint64_t v803 = 0LL;
      }
      uint64_t v805 = v803;
    }

    else
    {
      uint64_t v804 = 0LL;
      sub_1D580(v1849);
      uint64_t v805 = v804;
    }

    BOOL v802 = v805 == 0;
    swift_release();
    if (!v802)
    {
      sub_7EA78(v1637, v1629);
      __int128 v449 = (uint64_t *)sub_60C10();
      uint64_t v798 = *v449;
      uint64_t v799 = v449[1];
      swift_bridgeObjectRetain(v799);
      uint64_t v800 = sub_7D2CC(v798, v799);
      uint64_t v801 = v450;
      swift_bridgeObjectRelease(v799);
      sub_7EC00(v1629);
      if (v801)
      {
        uint64_t v796 = v800;
        uint64_t v797 = v801;
        uint64_t v787 = v801;
        uint64_t v786 = v800;
        uint64_t v1791 = v800;
        uint64_t v1792 = v801;
        swift_bridgeObjectRetain(v801);
        uint64_t v451 = v787;
        __int128 v452 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v453 = v452[1];
        *__int128 v452 = v786;
        v452[1] = v451;
        swift_bridgeObjectRelease(v453);
        Swift::String v454 = sub_610B0();
        uint64_t v788 = *(void *)v454;
        uint64_t v793 = *((void *)v454 + 1);
        swift_bridgeObjectRetain(v793);
        __int128 v455 = sub_6101C();
        uint64_t v789 = *(void *)v455;
        uint64_t v790 = *((void *)v455 + 1);
        swift_bridgeObjectRetain(v790);
        uint64_t v791 = static String.+ infix(_:_:)(v788, v793, v789);
        uint64_t v792 = v456;
        swift_bridgeObjectRelease(v790);
        swift_bridgeObjectRelease(v793);
        uint64_t v457 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v794 = *v457;
        uint64_t v795 = v457[1];
        swift_bridgeObjectRetain(v795);
        if (v795)
        {
          uint64_t v784 = v794;
          uint64_t v785 = v795;
        }

        else
        {
          _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 306LL, 0);
          __break(1u);
        }

        uint64_t v779 = v785;
        uint64_t v777 = v784;
        swift_bridgeObjectRetain(v785);
        v778 = v1790;
        v1790[0] = v777;
        v1790[1] = v779;
        unint64_t v458 = sub_B880();
        uint64_t v780 = StringProtocol.capitalized.getter(&type metadata for String, v458);
        uint64_t v781 = v459;
        sub_8DD8((uint64_t)v778);
        swift_bridgeObjectRelease(v779);
        uint64_t v782 = static String.+ infix(_:_:)(v791, v792, v780);
        uint64_t v783 = v460;
        swift_bridgeObjectRelease(v781);
        swift_bridgeObjectRelease(v792);
        uint64_t v461 = v783;
        uint64_t v462 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v463 = v462[1];
        *uint64_t v462 = v782;
        v462[1] = v461;
        swift_bridgeObjectRelease(v463);
        swift_bridgeObjectRelease(v787);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1848);
    if (v1848[3])
    {
      uint64_t v464 = type metadata accessor for UsoTask_summarise_common_SiriPossession(0LL);
      else {
        uint64_t v774 = 0LL;
      }
      uint64_t v776 = v774;
    }

    else
    {
      uint64_t v775 = 0LL;
      sub_1D580(v1848);
      uint64_t v776 = v775;
    }

    uint64_t v772 = v776;
    BOOL v773 = v776 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1847);
    if (v773)
    {
      sub_7ECD0((uint64_t)v1847, (uint64_t)v1846);
      if (v1846[3])
      {
        uint64_t v465 = type metadata accessor for UsoTask_state_common_SiriPossession(0LL);
        else {
          uint64_t v768 = 0LL;
        }
        uint64_t v770 = v768;
      }

      else
      {
        uint64_t v769 = 0LL;
        sub_1D580(v1846);
        uint64_t v770 = v769;
      }

      BOOL v767 = v770 != 0;
      swift_release();
      int v771 = v767;
    }

    else
    {
      int v771 = 1;
    }

    int v766 = v771;
    sub_1D580(v1847);
    swift_release();
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1845);
    if ((v766 & 1) != 0)
    {
      int v765 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1845, (uint64_t)v1844);
      if (v1844[3])
      {
        uint64_t v466 = type metadata accessor for UsoTask_checkExistence_common_SiriPossession(0LL);
        else {
          uint64_t v762 = 0LL;
        }
        uint64_t v764 = v762;
      }

      else
      {
        uint64_t v763 = 0LL;
        sub_1D580(v1844);
        uint64_t v764 = v763;
      }

      BOOL v761 = v764 != 0;
      swift_release();
      int v765 = v761;
    }

    int v760 = v765;
    sub_1D580(v1845);
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1843);
    if ((v760 & 1) != 0)
    {
      int v759 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1843, (uint64_t)v1842);
      if (v1842[3])
      {
        uint64_t v467 = type metadata accessor for UsoTask_deny_common_SiriPossession(0LL);
        else {
          uint64_t v756 = 0LL;
        }
        uint64_t v758 = v756;
      }

      else
      {
        uint64_t v757 = 0LL;
        sub_1D580(v1842);
        uint64_t v758 = v757;
      }

      BOOL v755 = v758 != 0;
      swift_release();
      int v759 = v755;
    }

    int v754 = v759;
    sub_1D580(v1843);
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1841);
    if ((v754 & 1) != 0)
    {
      int v753 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1841, (uint64_t)v1840);
      if (v1840[3])
      {
        uint64_t v468 = type metadata accessor for UsoTask_noVerb_common_SiriPossession(0LL);
        else {
          uint64_t v750 = 0LL;
        }
        uint64_t v752 = v750;
      }

      else
      {
        uint64_t v751 = 0LL;
        sub_1D580(v1840);
        uint64_t v752 = v751;
      }

      BOOL v749 = v752 != 0;
      swift_release();
      int v753 = v749;
    }

    int v748 = v753;
    sub_1D580(v1841);
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1839);
    if ((v748 & 1) != 0)
    {
      int v747 = 1;
    }

    else
    {
      sub_7ECD0((uint64_t)v1839, (uint64_t)v1838);
      if (v1838[3])
      {
        uint64_t v469 = type metadata accessor for UsoTask_summarise_common_SiriPossession(0LL);
        else {
          uint64_t v744 = 0LL;
        }
        uint64_t v746 = v744;
      }

      else
      {
        uint64_t v745 = 0LL;
        sub_1D580(v1838);
        uint64_t v746 = v745;
      }

      BOOL v743 = v746 != 0;
      swift_release();
      int v747 = v743;
    }

    int v742 = v747;
    sub_1D580(v1839);
    if ((v742 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v470 = (uint64_t *)sub_609C0();
      uint64_t v738 = *v470;
      uint64_t v739 = v470[1];
      swift_bridgeObjectRetain(v739);
      uint64_t v740 = sub_7D2CC(v738, v739);
      uint64_t v741 = v471;
      swift_bridgeObjectRelease(v739);
      sub_7EC00(v1629);
      if (v741)
      {
        uint64_t v736 = v740;
        uint64_t v737 = v741;
        uint64_t v730 = v741;
        uint64_t v729 = v740;
        uint64_t v1800 = v740;
        uint64_t v1801 = v741;
        swift_bridgeObjectRetain(v741);
        uint64_t v472 = v730;
        v473 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v474 = v473[1];
        uint64_t *v473 = v729;
        v473[1] = v472;
        uint64_t v475 = swift_bridgeObjectRelease(v474);
        uint64_t v731 = UsoTask.verbString.getter(v475);
        uint64_t v734 = v476;
        uint64_t v477 = sub_611D8();
        uint64_t v732 = *(void *)v477;
        uint64_t v733 = *((void *)v477 + 1);
        swift_bridgeObjectRetain(v733);
        unsigned int v735 = static String.== infix(_:_:)(v731, v734, v732, v733);
        swift_bridgeObjectRelease(v733);
        swift_bridgeObjectRelease(v734);
        if ((v735 & 1) != 0)
        {
          uint64_t v721 = UsoTask.verbString.getter(v735);
          uint64_t v726 = v478;
          uint64_t v479 = sub_60EF4();
          uint64_t v722 = *(void *)v479;
          uint64_t v723 = *((void *)v479 + 1);
          swift_bridgeObjectRetain(v723);
          uint64_t v724 = static String.+ infix(_:_:)(v721, v726, v722);
          uint64_t v725 = v480;
          swift_bridgeObjectRelease(v723);
          swift_bridgeObjectRelease(v726);
          uint64_t v481 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v727 = *v481;
          uint64_t v728 = v481[1];
          swift_bridgeObjectRetain(v728);
          if (v728)
          {
            uint64_t v719 = v727;
            uint64_t v720 = v728;
          }

          else
          {
            _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 312LL, 0);
            __break(1u);
          }

          uint64_t v714 = v720;
          uint64_t v712 = v719;
          swift_bridgeObjectRetain(v720);
          v713 = v1799;
          v1799[0] = v712;
          v1799[1] = v714;
          unint64_t v482 = sub_B880();
          uint64_t v715 = StringProtocol.capitalized.getter(&type metadata for String, v482);
          uint64_t v716 = v483;
          sub_8DD8((uint64_t)v713);
          swift_bridgeObjectRelease(v714);
          uint64_t v717 = static String.+ infix(_:_:)(v724, v725, v715);
          uint64_t v718 = v484;
          swift_bridgeObjectRelease(v716);
          swift_bridgeObjectRelease(v725);
          uint64_t v485 = v718;
          uint64_t v486 = (uint64_t *)(v1637 + v1636[5]);
          uint64_t v487 = v486[1];
          *uint64_t v486 = v717;
          v486[1] = v485;
          swift_bridgeObjectRelease(v487);
        }

        swift_bridgeObjectRelease(v730);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1837);
    if (v1837[3])
    {
      uint64_t v488 = type metadata accessor for UsoTask_request_common_SiriPossession(0LL);
      else {
        uint64_t v709 = 0LL;
      }
      uint64_t v711 = v709;
    }

    else
    {
      uint64_t v710 = 0LL;
      sub_1D580(v1837);
      uint64_t v711 = v710;
    }

    BOOL v708 = v711 == 0;
    swift_release();
    if (!v708)
    {
      sub_7EA78(v1637, v1629);
      unint64_t v489 = (uint64_t *)sub_609C0();
      uint64_t v704 = *v489;
      uint64_t v705 = v489[1];
      swift_bridgeObjectRetain(v705);
      uint64_t v706 = sub_7D2CC(v704, v705);
      uint64_t v707 = v490;
      swift_bridgeObjectRelease(v705);
      sub_7EC00(v1629);
      if (v707)
      {
        uint64_t v702 = v706;
        uint64_t v703 = v707;
        uint64_t v693 = v707;
        uint64_t v692 = v706;
        uint64_t v1804 = v706;
        uint64_t v1805 = v707;
        swift_bridgeObjectRetain(v707);
        uint64_t v491 = v693;
        unint64_t v492 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v493 = v492[1];
        *unint64_t v492 = v692;
        v492[1] = v491;
        uint64_t v494 = swift_bridgeObjectRelease(v493);
        uint64_t v694 = UsoTask.verbString.getter(v494);
        uint64_t v699 = v495;
        uint64_t v496 = sub_60EF4();
        uint64_t v695 = *(void *)v496;
        uint64_t v696 = *((void *)v496 + 1);
        swift_bridgeObjectRetain(v696);
        uint64_t v697 = static String.+ infix(_:_:)(v694, v699, v695);
        uint64_t v698 = v497;
        swift_bridgeObjectRelease(v696);
        swift_bridgeObjectRelease(v699);
        uint64_t v498 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v700 = *v498;
        uint64_t v701 = v498[1];
        swift_bridgeObjectRetain(v701);
        if (v701)
        {
          uint64_t v690 = v700;
          uint64_t v691 = v701;
        }

        else
        {
          _assertionFailure(_:_:file:line:flags:)(v1609, 11LL, 2LL, v1610, 57LL, 2LL, v1611, 55LL, 2, 318LL, 0);
          __break(1u);
        }

        uint64_t v685 = v691;
        uint64_t v683 = v690;
        swift_bridgeObjectRetain(v691);
        v684 = v1803;
        v1803[0] = v683;
        v1803[1] = v685;
        unint64_t v499 = sub_B880();
        uint64_t v686 = StringProtocol.capitalized.getter(&type metadata for String, v499);
        uint64_t v687 = v500;
        sub_8DD8((uint64_t)v684);
        swift_bridgeObjectRelease(v685);
        uint64_t v688 = static String.+ infix(_:_:)(v697, v698, v686);
        uint64_t v689 = v501;
        swift_bridgeObjectRelease(v687);
        swift_bridgeObjectRelease(v698);
        uint64_t v502 = v689;
        v503 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v504 = v503[1];
        uint64_t *v503 = v688;
        v503[1] = v502;
        swift_bridgeObjectRelease(v504);
        swift_bridgeObjectRelease(v693);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1836);
    if (v1836[3])
    {
      uint64_t v505 = type metadata accessor for UsoTask_state_common_UserPossession(0LL);
      else {
        uint64_t v680 = 0LL;
      }
      uint64_t v682 = v680;
    }

    else
    {
      uint64_t v681 = 0LL;
      sub_1D580(v1836);
      uint64_t v682 = v681;
    }

    uint64_t v678 = v682;
    BOOL v679 = v682 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1835);
    if (v679)
    {
      sub_7ECD0((uint64_t)v1835, (uint64_t)v1834);
      if (v1834[3])
      {
        uint64_t v506 = type metadata accessor for UsoTask_deny_common_UserPossession(0LL);
        else {
          uint64_t v674 = 0LL;
        }
        uint64_t v676 = v674;
      }

      else
      {
        uint64_t v675 = 0LL;
        sub_1D580(v1834);
        uint64_t v676 = v675;
      }

      BOOL v673 = v676 != 0;
      swift_release();
      int v677 = v673;
    }

    else
    {
      int v677 = 1;
    }

    int v672 = v677;
    sub_1D580(v1835);
    swift_release();
    if ((v672 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      Swift::String v507 = (uint64_t *)sub_60A54();
      uint64_t v668 = *v507;
      uint64_t v669 = v507[1];
      swift_bridgeObjectRetain(v669);
      uint64_t v670 = sub_7D2CC(v668, v669);
      uint64_t v671 = v508;
      swift_bridgeObjectRelease(v669);
      sub_7EC00(v1629);
      if (v671)
      {
        uint64_t v666 = v670;
        uint64_t v667 = v671;
        uint64_t v665 = v671;
        uint64_t v664 = v670;
        uint64_t v1808 = v670;
        uint64_t v1809 = v671;
        swift_bridgeObjectRetain(v671);
        uint64_t v509 = v665;
        uint64_t v510 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v511 = v510[1];
        *uint64_t v510 = v664;
        v510[1] = v509;
        swift_bridgeObjectRelease(v511);
        swift_bridgeObjectRelease(v665);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1833);
    if (v1833[3])
    {
      uint64_t v512 = type metadata accessor for UsoTask_state_common_PersonSocialAction(0LL);
      else {
        uint64_t v661 = 0LL;
      }
      uint64_t v663 = v661;
    }

    else
    {
      uint64_t v662 = 0LL;
      sub_1D580(v1833);
      uint64_t v663 = v662;
    }

    BOOL v660 = v663 == 0;
    swift_release();
    if (!v660)
    {
      sub_7EA78(v1637, v1629);
      uint64_t v513 = (uint64_t *)sub_60B7C();
      uint64_t v656 = *v513;
      uint64_t v657 = v513[1];
      swift_bridgeObjectRetain(v657);
      uint64_t v658 = sub_7D2CC(v656, v657);
      uint64_t v659 = v514;
      swift_bridgeObjectRelease(v657);
      sub_7EC00(v1629);
      if (v659)
      {
        uint64_t v654 = v658;
        uint64_t v655 = v659;
        uint64_t v653 = v659;
        uint64_t v652 = v658;
        uint64_t v1811 = v658;
        uint64_t v1812 = v659;
        swift_bridgeObjectRetain(v659);
        uint64_t v515 = v653;
        uint64_t v516 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v517 = v516[1];
        *uint64_t v516 = v652;
        v516[1] = v515;
        swift_bridgeObjectRelease(v517);
        swift_bridgeObjectRelease(v653);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1832);
    if (v1832[3])
    {
      uint64_t v518 = type metadata accessor for UsoTask_state_common_UserSocialAction(0LL);
      else {
        uint64_t v649 = 0LL;
      }
      uint64_t v651 = v649;
    }

    else
    {
      uint64_t v650 = 0LL;
      sub_1D580(v1832);
      uint64_t v651 = v650;
    }

    uint64_t v647 = v651;
    BOOL v648 = v651 == 0;
    sub_7ECD0((uint64_t)v1907, (uint64_t)v1831);
    if (v648)
    {
      sub_7ECD0((uint64_t)v1831, (uint64_t)v1830);
      if (v1830[3])
      {
        uint64_t v519 = type metadata accessor for UsoTask_summarise_common_UserSocialAction(0LL);
        else {
          uint64_t v643 = 0LL;
        }
        uint64_t v645 = v643;
      }

      else
      {
        uint64_t v644 = 0LL;
        sub_1D580(v1830);
        uint64_t v645 = v644;
      }

      BOOL v642 = v645 != 0;
      swift_release();
      int v646 = v642;
    }

    else
    {
      int v646 = 1;
    }

    int v641 = v646;
    sub_1D580(v1831);
    swift_release();
    if ((v641 & 1) != 0)
    {
      sub_7EA78(v1637, v1629);
      unint64_t v520 = (uint64_t *)sub_60648();
      uint64_t v637 = *v520;
      uint64_t v638 = v520[1];
      swift_bridgeObjectRetain(v638);
      uint64_t v639 = sub_7D2CC(v637, v638);
      uint64_t v640 = v521;
      swift_bridgeObjectRelease(v638);
      sub_7EC00(v1629);
      if (v640)
      {
        uint64_t v635 = v639;
        uint64_t v636 = v640;
        uint64_t v634 = v640;
        uint64_t v633 = v639;
        uint64_t v1815 = v639;
        uint64_t v1816 = v640;
        swift_bridgeObjectRetain(v640);
        uint64_t v522 = v634;
        uint64_t v523 = (uint64_t *)(v1637 + v1636[5]);
        uint64_t v524 = v523[1];
        *uint64_t v523 = v633;
        v523[1] = v522;
        swift_bridgeObjectRelease(v524);
        swift_bridgeObjectRelease(v634);
      }

      goto LABEL_670;
    }

    sub_7ECD0((uint64_t)v1907, (uint64_t)v1829);
    if (v1829[3])
    {
      uint64_t v525 = type metadata accessor for UsoTask_noVerb_common_VoiceTrigger(0LL);
      else {
        uint64_t v630 = 0LL;
      }
      uint64_t v632 = v630;
    }

    else
    {
      uint64_t v631 = 0LL;
      sub_1D580(v1829);
      uint64_t v632 = v631;
    }

    BOOL v629 = v632 == 0;
    uint64_t v526 = swift_release();
    if (v629)
    {
LABEL_670:
      sub_1D580(v1907);
      swift_release();
LABEL_671:
      swift_bridgeObjectRelease(v1589);
      goto LABEL_672;
    }

    uint64_t v626 = UsoTask.arguments.getter(v526);
    swift_bridgeObjectRetain(v626);
    uint64_t v625 = &v1827;
    uint64_t v1827 = v626;
    uint64_t v624 = sub_5150(&qword_D88A8);
    unint64_t v527 = sub_7ED48();
    Collection.first.getter(v1828, v624, v527);
    sub_1B82C(v625);
    uint64_t v628 = v1828[1];
    uint64_t v627 = v1828[2];
    uint64_t v528 = swift_bridgeObjectRelease(v626);
    if (v628)
    {
      uint64_t v622 = v628;
      uint64_t v623 = v627;
      uint64_t v620 = v627;
      uint64_t v617 = v628;
      swift_bridgeObjectRetain(v627);
      v619 = &v1818;
      uint64_t v1818 = v620;
      uint64_t v618 = sub_5150(&qword_D8860);
      unint64_t v529 = sub_71C8C();
      Collection.first.getter(&v1819, v618, v529);
      sub_1B82C(v619);
      uint64_t v621 = v1819;
      uint64_t v530 = swift_bridgeObjectRelease(v620);
      if (v621)
      {
        uint64_t v616 = v621;
        uint64_t v613 = v621;
        uint64_t v614 = dispatch thunk of UsoValue.getAsEntity()(v530);
        swift_release();
        uint64_t v528 = swift_bridgeObjectRelease(v617);
        uint64_t v615 = v614;
        goto LABEL_655;
      }

      uint64_t v528 = swift_bridgeObjectRelease(v617);
    }

    uint64_t v615 = 0LL;
LABEL_655:
    uint64_t v612 = v615;
    if (v615)
    {
      uint64_t v611 = v612;
      uint64_t v606 = v612;
      uint64_t v1826 = v612;
      uint64_t v609 = UsoEntity.attributes.getter(v528);
      Swift::String v531 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("definedValue", 0xCuLL, 1);
      v608 = &v1824;
      Swift::String v1824 = v531;
      uint64_t v607 = sub_5150(&qword_D8860);
      Dictionary.subscript.getter(&v1825);
      sub_8DD8((uint64_t)v608);
      uint64_t v610 = v1825;
      swift_bridgeObjectRelease(v609);
      if (!v610) {
        goto LABEL_668;
      }
      uint64_t v605 = v610;
      uint64_t v603 = v610;
      swift_bridgeObjectRetain(v610);
      v602 = &v1820;
      uint64_t v1820 = v603;
      unint64_t v532 = sub_71C8C();
      Collection.first.getter(&v1821, v607, v532);
      sub_1B82C(v602);
      uint64_t v604 = v1821;
      uint64_t v533 = swift_bridgeObjectRelease(v603);
      if (v604
        && (v601 = v604, uint64_t v599 = v604, v600 = dispatch thunk of UsoValue.getAsEntity()(v533), swift_release(), v600))
      {
        uint64_t v598 = v600;
        uint64_t v593 = v600;
        uint64_t v594 = UsoEntity.valueTypeString.getter();
        uint64_t v595 = v534;
        swift_release();
        uint64_t v596 = v594;
        uint64_t v597 = v595;
      }

      else
      {
LABEL_668:
        uint64_t v596 = 0LL;
        uint64_t v597 = 0LL;
      }

      uint64_t v592 = v597;
      uint64_t v591 = v596;
      uint64_t v1822 = v596;
      uint64_t v1823 = v597;
      swift_bridgeObjectRetain(v597);
      uint64_t v535 = v592;
      uint64_t v536 = (uint64_t *)(v1637 + v1636[5]);
      uint64_t v537 = v536[1];
      *uint64_t v536 = v591;
      v536[1] = v535;
      swift_bridgeObjectRelease(v537);
      swift_bridgeObjectRelease(v592);
      swift_release();
    }

    goto LABEL_670;
  }

  v540 = v1622;
  uint64_t v574 = v1596;
  uint64_t v581 = 0LL;
  swift_errorRetain(v1596);
  uint64_t v1919 = v574;
  uint64_t v541 = sub_AD514();
  v1640(v540, v541, v1639);
  swift_errorRetain(v574);
  uint64_t v569 = 7LL;
  uint64_t v542 = swift_allocObject(&unk_D0030, 24LL, 7LL);
  uint64_t v570 = v542;
  *(void *)(v542 + swift_beginAccess(v1 + 16) = v574;
  v575 = (os_log_s *)Logger.logObject.getter(v542);
  int v576 = static os_log_type_t.debug.getter();
  uint64_t v1917 = 12LL;
  UnsignedInteger<>.init<A>(_:)(&v1918, &v1917, &type metadata for UInt32, &type metadata for Int, v1649, v1650, v1652);
  uint32_t v577 = v1918;
  uint64_t v567 = 17LL;
  uint64_t v543 = swift_allocObject(&unk_D0058, 17LL, v569);
  uint64_t v544 = v567;
  uint64_t v545 = v569;
  uint64_t v586 = v543;
  *(_BYTE *)(v543 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v546 = swift_allocObject(&unk_D0080, v544, v545);
  uint64_t v547 = v569;
  uint64_t v579 = v546;
  *(_BYTE *)(v546 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v568 = 32LL;
  uint64_t v548 = swift_allocObject(&unk_D00A8, 32LL, v547);
  uint64_t v549 = v568;
  uint64_t v550 = v569;
  uint64_t v551 = v548;
  uint64_t v552 = v570;
  uint64_t v571 = v551;
  *(void *)(v551 + swift_beginAccess(v1 + 16) = sub_7E9A8;
  *(void *)(v551 + swift_beginAccess(v1 + 24) = v552;
  uint64_t v553 = swift_allocObject(&unk_D00D0, v549, v550);
  uint64_t v554 = v1664;
  uint64_t v555 = v553;
  uint64_t v556 = v571;
  uint64_t v580 = v555;
  *(void *)(v555 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v555 + swift_beginAccess(v1 + 24) = v556;
  uint64_t v572 = _allocateUninitializedArray<A>(_:)(3LL, v554);
  uint64_t v573 = v557;
  swift_retain();
  uint64_t v558 = v586;
  Swift::String v559 = v573;
  *uint64_t v573 = sub_884C;
  v559[1] = v558;
  swift_retain();
  uint64_t v560 = v579;
  char v561 = v573;
  v573[2] = sub_884C;
  v561[3] = v560;
  swift_retain();
  uint64_t v562 = v572;
  uint64_t v563 = v580;
  uint64_t v564 = v573;
  v573[4] = sub_8900;
  v564[5] = v563;
  sub_6648();
  swift_bridgeObjectRelease(v562);
  if (os_log_type_enabled(v575, (os_log_type_t)v576))
  {
    uint64_t v539 = v581;
    uint64_t v583 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v582 = sub_5150(&qword_D6B60);
    uint64_t v584 = sub_74D0(0LL, v582, v582);
    uint64_t v585 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    v587 = &v1916;
    v1916 = v583;
    v588 = &v1915;
    uint64_t v1915 = v584;
    Swift::String v589 = &v1914;
    uint64_t v1914 = v585;
    sub_7528(2LL, &v1916);
    sub_7528(1LL, v587);
    v1912 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v1913 = v586;
    sub_753C(&v1912, (uint64_t)v587, (uint64_t)v588, (uint64_t)v589);
    uint64_t v590 = v539;
    if (v539)
    {
      __break(1u);
    }

    else
    {
      sub_753C(&v1912, (uint64_t)&v1916, (uint64_t)&v1915, (uint64_t)&v1914);
      uint64_t v578 = 0LL;
      v1912 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v1913 = v580;
      sub_753C(&v1912, (uint64_t)&v1916, (uint64_t)&v1915, (uint64_t)&v1914);
      _os_log_impl(&dword_0, v575, (os_log_type_t)v576, "Could not convert user dialog act to tasks: %s", v583, v577);
      sub_7580(v584, 0LL);
      sub_7580(v585, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  v1593(v1622, v1639);
  swift_errorRelease(v574);
  swift_errorRelease(v574);
LABEL_672:
  sub_7EA78(v1637, v1608);
  (*(void (**)(uint64_t, uint64_t))(v1643 + 8))(v1641, v1647);
  return sub_7EC00(v1637);
}

uint64_t sub_7D2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v59 = 0LL;
  uint64_t v60 = 0LL;
  uint64_t v58 = 0LL;
  uint64_t v56 = 0LL;
  unint64_t v31 = (*(void *)(*(void *)(sub_5150(&qword_D88C0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v32 = (uint64_t *)((char *)&v19 - v31);
  uint64_t v34 = 0LL;
  uint64_t v44 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v43 = *(void *)(v44 - 8);
  unint64_t v33 = (*(void *)(v43 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v19 - v33;
  uint64_t v42 = type metadata accessor for Siri_Nlu_External_UserStatedTask(v4);
  uint64_t v40 = *(void *)(v42 - 8);
  unint64_t v35 = (*(void *)(v40 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v19 - v35;
  uint64_t v39 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v6);
  uint64_t v37 = *(void *)(v39 - 8);
  unint64_t v36 = (*(void *)(v37 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v38 = (char *)&v19 - v36;
  uint64_t v59 = v9;
  uint64_t v60 = v48;
  uint64_t v58 = v10;
  uint64_t v12 = (*(uint64_t (**)(char *, double))(v11 + 16))((char *)&v19 - v36, v8);
  Siri_Nlu_External_UserDialogAct.userStatedTask.getter(v12);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  Siri_Nlu_External_UserStatedTask.task.getter(v13);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  uint64_t v46 = Siri_Nlu_External_UsoGraph.identifiers.getter(v14);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
  uint64_t v57 = v46;
  swift_bridgeObjectRetain(v48);
  uint64_t v49 = &v52;
  uint64_t v53 = v47;
  uint64_t v54 = v48;
  uint64_t v50 = sub_5150(&qword_D88C8);
  unint64_t v15 = sub_7EEE8();
  uint64_t v51 = _ArrayProtocol.filter(_:)(sub_7EEBC, v49, v50, v15);
  uint64_t v27 = v51;
  swift_bridgeObjectRelease(v48);
  uint64_t v56 = v27;
  swift_bridgeObjectRetain(v27);
  uint64_t v28 = &v55;
  uint64_t v55 = v27;
  unint64_t v16 = sub_7EF58();
  Collection.first.getter(v32, v50, v16);
  sub_1B82C(v28);
  uint64_t v29 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v30 + 48))(v32, 1LL) == 1)
  {
    uint64_t v20 = 0LL;
    sub_7EFC8((uint64_t)v32);
    uint64_t v25 = v20;
    uint64_t v26 = v20;
  }

  else
  {
    uint64_t v23 = Siri_Nlu_External_UsoEntityIdentifier.value.getter();
    uint64_t v24 = v17;
    (*(void (**)(void *, uint64_t))(v30 + 8))(v32, v29);
    uint64_t v25 = v23;
    uint64_t v26 = v24;
  }

  uint64_t v22 = v26;
  uint64_t v21 = v25;
  swift_bridgeObjectRelease(v27);
  return v21;
}

uint64_t sub_7D6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v59 = 0LL;
  uint64_t v60 = 0LL;
  uint64_t v58 = 0LL;
  uint64_t v56 = 0LL;
  unint64_t v31 = (*(void *)(*(void *)(sub_5150(&qword_D88C0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v32 = (uint64_t *)((char *)&v19 - v31);
  uint64_t v34 = 0LL;
  uint64_t v44 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v43 = *(void *)(v44 - 8);
  unint64_t v33 = (*(void *)(v43 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v19 - v33;
  uint64_t v42 = type metadata accessor for Siri_Nlu_External_UserStatedTask(v4);
  uint64_t v40 = *(void *)(v42 - 8);
  unint64_t v35 = (*(void *)(v40 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v19 - v35;
  uint64_t v39 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v6);
  uint64_t v37 = *(void *)(v39 - 8);
  unint64_t v36 = (*(void *)(v37 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v38 = (char *)&v19 - v36;
  uint64_t v59 = v9;
  uint64_t v60 = v48;
  uint64_t v58 = v10;
  uint64_t v12 = (*(uint64_t (**)(char *, double))(v11 + 16))((char *)&v19 - v36, v8);
  Siri_Nlu_External_UserDialogAct.userStatedTask.getter(v12);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  Siri_Nlu_External_UserStatedTask.task.getter(v13);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  uint64_t v46 = Siri_Nlu_External_UsoGraph.identifiers.getter(v14);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
  uint64_t v57 = v46;
  swift_bridgeObjectRetain(v48);
  uint64_t v49 = &v52;
  uint64_t v53 = v47;
  uint64_t v54 = v48;
  uint64_t v50 = sub_5150(&qword_D88C8);
  unint64_t v15 = sub_7EEE8();
  uint64_t v51 = _ArrayProtocol.filter(_:)(sub_7F038, v49, v50, v15);
  uint64_t v27 = v51;
  swift_bridgeObjectRelease(v48);
  uint64_t v56 = v27;
  swift_bridgeObjectRetain(v27);
  uint64_t v28 = &v55;
  uint64_t v55 = v27;
  unint64_t v16 = sub_7EF58();
  Collection.first.getter(v32, v50, v16);
  sub_1B82C(v28);
  uint64_t v29 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(void *, uint64_t))(v30 + 48))(v32, 1LL) == 1)
  {
    uint64_t v20 = 0LL;
    sub_7EFC8((uint64_t)v32);
    uint64_t v25 = v20;
    uint64_t v26 = v20;
  }

  else
  {
    uint64_t v23 = Siri_Nlu_External_UsoEntityIdentifier.value.getter();
    uint64_t v24 = v17;
    (*(void (**)(void *, uint64_t))(v30 + 8))(v32, v29);
    uint64_t v25 = v23;
    uint64_t v26 = v24;
  }

  uint64_t v22 = v26;
  uint64_t v21 = v25;
  swift_bridgeObjectRelease(v27);
  return v21;
}

uint64_t sub_7DAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v3 = v2;
  uint64_t v4 = v25;
  uint64_t v30 = v3;
  uint64_t v36 = 0LL;
  uint64_t v35 = 0LL;
  uint64_t v34 = 0LL;
  uint64_t v26 = type metadata accessor for Date(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  unint64_t v28 = (*(void *)(v27 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v29 = &v18[-v28];
  unint64_t v31 = (*(void *)(*(void *)(sub_5150(&qword_D88E0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v6);
  uint64_t v32 = &v18[-v31];
  uint64_t v36 = v4;
  uint64_t v35 = v8;
  uint64_t v33 = dispatch thunk of UsoEntity_common_DateTime.date.getter(v7);
  if (!v33) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v24, 1LL, 1LL, v26);
  }
  uint64_t v23 = v33;
  uint64_t v20 = v33;
  uint64_t v34 = v33;
  dispatch thunk of UsoEntity_common_Date.definedValue.getter();
  uint64_t v21 = type metadata accessor for UsoEntity_common_Date.DefinedValues(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v22 + 48))(v32, 1LL) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v24, 1LL, 1LL, v26);
    return swift_release();
  }

  else
  {
    int v19 = (*(uint64_t (**)(_BYTE *, uint64_t))(v22 + 88))(v32, v21);
    if (v19 == enum case for UsoEntity_common_Date.DefinedValues.common_Date_Tomorrow(_:))
    {
      uint64_t v9 = static Date.now.getter();
      uint64_t v10 = static Double.days(_:)(v9, 1.0);
      Date.advanced(by:)(v10);
      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v29, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0LL, 1LL, v26);
      return swift_release();
    }

    else if (v19 == enum case for UsoEntity_common_Date.DefinedValues.common_Date_DayBeforeYesterday(_:))
    {
      uint64_t v11 = static Date.now.getter();
      uint64_t v12 = static Double.days(_:)(v11, -2.0);
      Date.advanced(by:)(v12);
      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v29, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0LL, 1LL, v26);
      return swift_release();
    }

    else if (v19 == enum case for UsoEntity_common_Date.DefinedValues.common_Date_DayAfterTomorrow(_:))
    {
      uint64_t v15 = static Date.now.getter();
      uint64_t v16 = static Double.days(_:)(v15, 2.0);
      Date.advanced(by:)(v16);
      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v29, v26);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0LL, 1LL, v26);
      return swift_release();
    }

    else if (v19 == enum case for UsoEntity_common_Date.DefinedValues.common_Date_Today(_:))
    {
      static Date.now.getter();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0LL, 1LL, v26);
      return swift_release();
    }

    else
    {
      if (v19 == enum case for UsoEntity_common_Date.DefinedValues.common_Date_Yesterday(_:))
      {
        uint64_t v13 = static Date.now.getter();
        uint64_t v14 = static Double.days(_:)(v13, -1.0);
        Date.advanced(by:)(v14);
        (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v29, v26);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0LL, 1LL, v26);
      }

      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v24, 1LL, 1LL, v26);
        (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v32, v21);
      }

      return swift_release();
    }
  }

uint64_t sub_7DEF8(uint64_t a1)
{
  uint64_t v4 = a1;
  uint64_t v1 = sub_5150(&qword_D7E18);
  return String.init<A>(describing:)(&v4, v1);
}

uint64_t sub_7DF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v21 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v13 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v11 = *(void *)(v13 - 8);
  unint64_t v10 = (*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v9 - v10;
  uint64_t v21 = a1;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v6 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter();
  uint64_t v14 = Google_Protobuf_StringValue.value.getter(v6);
  uint64_t v17 = v7;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v13);
  int v18 = static String.== infix(_:_:)(v14, v17, v15, v16);
  swift_bridgeObjectRelease(v17);
  return v18 & 1;
}

BOOL sub_7E03C(uint64_t a1, uint64_t a2, void *a3)
{
  v14._uint64_t countAndFlagsBits = a2;
  v14._object = a3;
  uint64_t v20 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t v13 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v11 = *(void *)(v13 - 8);
  unint64_t v10 = (*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v9 - v10;
  uint64_t v20 = a1;
  uint64_t v18 = v4;
  uint64_t v19 = v5;
  uint64_t v6 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter();
  uint64_t v15 = Google_Protobuf_StringValue.value.getter(v6);
  uint64_t v16 = v7;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v13);
  BOOL v17 = String.hasSuffix(_:)(v14);
  swift_bridgeObjectRelease(v16);
  return v17;
}

uint64_t sub_7E138()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E160()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E188()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E1C4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t type metadata accessor for CannedDialogActUso(uint64_t a1)
{
  uint64_t v2 = qword_D8A70;
  if (!qword_D8A70) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CannedDialogActUso);
  }
  return v2;
}

uint64_t sub_7E264()
{
  uint64_t v1 = *(void *)(type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_7E2D4()
{
  return sub_72D98();
}

uint64_t sub_7E304()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E32C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E354()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E390()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a2, a1);
  return a2;
}

uint64_t sub_7E410(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(a1);
  return a1;
}

uint64_t sub_7E44C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E488()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E4C4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E4EC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E514()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E550()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E58C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E5B4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E5DC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E618()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_7E654()
{
  uint64_t v3 = qword_D8898;
  if (!qword_D8898)
  {
    uint64_t v0 = sub_8D64(&qword_D8890);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8898);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_7E6C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_7E734(uint64_t a1)
{
  return sub_74854(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

unint64_t sub_7E760()
{
  uint64_t v3 = qword_D88A0;
  if (!qword_D88A0)
  {
    uint64_t v0 = sub_8D64(&qword_D8890);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D88A0);
    return WitnessTable;
  }

  return v3;
}

uint64_t type metadata accessor for SocialConversationNLv4(uint64_t a1)
{
  uint64_t v2 = qword_D8B00;
  if (!qword_D8B00) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SocialConversationNLv4);
  }
  return v2;
}

uint64_t sub_7E834()
{
  uint64_t v1 = *(void *)(type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_7E8A4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E8CC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E8F4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E930()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7E96C()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_7E9A8()
{
  return sub_7DEF8(*(void *)(v0 + 16));
}

uint64_t sub_7E9B0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7E9D8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7EA00()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7EA3C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a2, a1);
  uint64_t v9 = (int *)type metadata accessor for SocialConversationNLv4(0LL);
  uint64_t v3 = (void *)(a1 + v9[5]);
  uint64_t v7 = (void *)(a2 + v9[5]);
  *uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  swift_bridgeObjectRetain(v8);
  v7[1] = v8;
  uint64_t v10 = v9[6];
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(a1 + v10, 1LL))
  {
    uint64_t v4 = sub_5150(&qword_D8820);
    memcpy((void *)(a2 + v10), (const void *)(a1 + v10), *(void *)(*(void *)(v4 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v13 + 16))();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2 + v10, 0LL, 1LL, v12);
  }

  uint64_t result = a2;
  *(_BYTE *)(a2 + v9[7]) = *(_BYTE *)(a1 + v9[7]);
  return result;
}

uint64_t sub_7EC00(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(a1);
  uint64_t v3 = type metadata accessor for SocialConversationNLv4(0LL);
  swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(v3 + 20) + 8));
  uint64_t v4 = *(int *)(v3 + 24);
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  return a1;
}

uint64_t sub_7ECD0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v2 = *(void *)(a1 + 24);
    *(void *)(a2 + swift_beginAccess(v1 + 24) = v2;
    (**(void (***)(void))(v2 - 8))();
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + swift_beginAccess(v1 + 16) = *(_OWORD *)(a1 + 16);
  }

  return a2;
}

unint64_t sub_7ED48()
{
  uint64_t v3 = qword_D88B0;
  if (!qword_D88B0)
  {
    uint64_t v0 = sub_8D64(&qword_D88A8);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D88B0);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_7EDB8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7EDF4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7EE1C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_7EE44()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7EE80()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_7EEBC(uint64_t a1)
{
  return sub_7DF40(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

unint64_t sub_7EEE8()
{
  uint64_t v3 = qword_D88D0;
  if (!qword_D88D0)
  {
    uint64_t v0 = sub_8D64(&qword_D88C8);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D88D0);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_7EF58()
{
  uint64_t v3 = qword_D88D8;
  if (!qword_D88D8)
  {
    uint64_t v0 = sub_8D64(&qword_D88C8);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D88D8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_7EFC8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

BOOL sub_7F038(uint64_t a1)
{
  return sub_7E03C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_7F064(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v16 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v16 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    swift_retain();
    *a1 = v11;
    return *a1 + ((v16 + 16LL) & ~(unint64_t)v16);
  }

  else
  {
    *a1 = *a2;
    uint64_t v5 = a2[1];
    swift_bridgeObjectRetain(v5);
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = a2[3];
    swift_bridgeObjectRetain(v6);
    a1[3] = v6;
    __dst = (char *)a1 + *(int *)(a3 + 24);
    __src = (char *)a2 + *(int *)(a3 + 24);
    uint64_t v9 = type metadata accessor for Date(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v10 + 48))(__src, 1LL))
    {
      uint64_t v3 = sub_5150(&qword_D8820);
      memcpy(__dst, __src, *(void *)(*(void *)(v3 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, __src, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0LL, 1LL, v9);
    }

    return (unint64_t)a1;
  }

uint64_t sub_7F1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(a1 + v4, 1LL);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1 + v4, v6);
  }
  return result;
}

char *sub_7F294(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *((void *)a2 + 1);
  swift_bridgeObjectRetain(v5);
  *((void *)a1 + 1) = v5;
  *((void *)a1 + sub_1B82C(v0 + 2) = *((void *)a2 + 2);
  uint64_t v7 = *((void *)a2 + 3);
  swift_bridgeObjectRetain(v7);
  *((void *)a1 + sub_1B82C(v0 + 3) = v7;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(&a2[v9], 1LL))
  {
    uint64_t v3 = sub_5150(&qword_D8820);
    memcpy(&a1[v9], &a2[v9], *(void *)(*(void *)(v3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v12 + 16))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(&a1[v9], 0LL, 1LL, v11);
  }

  return a1;
}

char *sub_7F3D4(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v8 = *((void *)a2 + 1);
  swift_bridgeObjectRetain(v8);
  uint64_t v3 = *((void *)a1 + 1);
  *((void *)a1 + 1) = v8;
  swift_bridgeObjectRelease(v3);
  *((void *)a1 + sub_1B82C(v0 + 2) = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  swift_bridgeObjectRetain(v10);
  uint64_t v4 = *((void *)a1 + 3);
  *((void *)a1 + sub_1B82C(v0 + 3) = v10;
  swift_bridgeObjectRelease(v4);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v14 = type metadata accessor for Date(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (((unsigned int (*)(char *, uint64_t))v16)(&a1[v12], 1LL))
  {
    if (v16(&a2[v12], 1LL, v14))
    {
      uint64_t v6 = sub_5150(&qword_D8820);
      memcpy(&a1[v12], &a2[v12], *(void *)(*(void *)(v6 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void))(v15 + 16))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(&a1[v12], 0LL, 1LL, v14);
    }
  }

  else if (v16(&a2[v12], 1LL, v14))
  {
    (*(void (**)(void))(v15 + 8))();
    uint64_t v5 = sub_5150(&qword_D8820);
    memcpy(&a1[v12], &a2[v12], *(void *)(*(void *)(v5 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 24))(&a1[v12], &a2[v12], v14);
  }

  return a1;
}

char *sub_7F600(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 48))(&a2[v6], 1LL))
  {
    uint64_t v3 = sub_5150(&qword_D8820);
    memcpy(&a1[v6], &a2[v6], *(void *)(*(void *)(v3 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v9 + 32))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(&a1[v6], 0LL, 1LL, v8);
  }

  return a1;
}

char *sub_7F704(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *((void *)a1 + 1);
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRelease(v4);
  *((void *)a1 + sub_1B82C(v0 + 2) = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  *((void *)a1 + sub_1B82C(v0 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRelease(v5);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (((unsigned int (*)(char *, uint64_t))v15)(&a1[v11], 1LL))
  {
    if (v15(&a2[v11], 1LL, v13))
    {
      uint64_t v7 = sub_5150(&qword_D8820);
      memcpy(&a1[v11], &a2[v11], *(void *)(*(void *)(v7 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void))(v14 + 32))();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(&a1[v11], 0LL, 1LL, v13);
    }
  }

  else if (v15(&a2[v11], 1LL, v13))
  {
    (*(void (**)(void))(v14 + 8))();
    uint64_t v6 = sub_5150(&qword_D8820);
    memcpy(&a1[v11], &a2[v11], *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 40))(&a1[v11], &a2[v11], v13);
  }

  return a1;
}

uint64_t sub_7F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7F930);
}

uint64_t sub_7F930(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    int v7 = -1;
    if (*(void *)(a1 + 8) < 0x100000000uLL) {
      int v7 = *(void *)(a1 + 8);
    }
    return (v7 + 1);
  }

  else
  {
    uint64_t v4 = sub_5150(&qword_D8820);
    uint64_t v5 = *(void *)(v4 - 8);
    if (a2 == *(_DWORD *)(v5 + 84)) {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(v5 + 48))(a1 + *(int *)(a3 + 24), a2, v4);
    }
    else {
      __break(1u);
    }
  }

  return v6;
}

uint64_t sub_7FA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7FA2C);
}

uint64_t sub_7FA2C(uint64_t result, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + sub_1D580(v0 + 8) = a2 - 1;
  }

  else
  {
    uint64_t result = sub_5150(&qword_D8820);
    uint64_t v4 = *(void *)(result - 8);
    if (a3 == *(_DWORD *)(v4 + 84)) {
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v4 + 56))( v5 + *(int *)(a4 + 24),  a2,  a2,  result);
    }
    else {
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_7FAE0(uint64_t a1)
{
  v6[0] = &unk_B7C90;
  v6[1] = &unk_B7CA8;
  uint64_t v4 = sub_1C594(319LL);
  uint64_t v5 = v4;
  if (v1 <= 0x3F)
  {
    void v6[2] = *(void *)(v4 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 3LL, v6, a1 + 16);
    return 0LL;
  }

  return v5;
}

uint64_t sub_7FBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  return (**(uint64_t (***)(uint64_t, uint64_t))(v2 - 8))(a1, a2);
}

uint64_t sub_7FBE4(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(a1);
}

uint64_t sub_7FC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, a2);
  return a1;
}

uint64_t sub_7FC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 24LL))(a1, a2);
  return a1;
}

uint64_t sub_7FCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, a2);
  return a1;
}

uint64_t sub_7FCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 40LL))(a1, a2);
  return a1;
}

uint64_t sub_7FD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_7FD48);
}

uint64_t sub_7FD48(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v2 - 8) + 48LL))(a1, a2);
}

uint64_t sub_7FD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_7FDA4);
}

uint64_t sub_7FDA4(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v2 - 8) + 56LL))(a1, a2);
}

uint64_t sub_7FDE8(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for NLIntent(319LL);
  uint64_t v5 = v4;
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(v4 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 1LL, &v6, a1 + 16);
    return 0LL;
  }

  return v5;
}

void *type metadata accessor for CannedDialogAct()
{
  return &unk_D01C0;
}

uint64_t sub_7FEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  return (**(uint64_t (***)(uint64_t, uint64_t))(v2 - 8))(a1, a2);
}

uint64_t sub_7FEE8(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(a1);
}

uint64_t sub_7FF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, a2);
  return a1;
}

uint64_t sub_7FF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 24LL))(a1, a2);
  return a1;
}

uint64_t sub_7FFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(a1, a2);
  return a1;
}

uint64_t sub_7FFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 40LL))(a1, a2);
  return a1;
}

uint64_t sub_80030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_8004C);
}

uint64_t sub_8004C(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v2 - 8) + 48LL))(a1, a2);
}

uint64_t sub_8008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_800A8);
}

uint64_t sub_800A8(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v2 - 8) + 56LL))(a1, a2);
}

uint64_t sub_800EC(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Siri_Nlu_External_UserDialogAct(319LL);
  uint64_t v5 = v4;
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(v4 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 1LL, &v6, a1 + 16);
    return 0LL;
  }

  return v5;
}

unint64_t sub_80198(void *a1, void *a2, int *a3)
{
  int v18 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v18 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    swift_retain();
    *a1 = v13;
    return *a1 + ((v18 + 16LL) & ~(unint64_t)v18);
  }

  else
  {
    uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
    (*(void (**)(void *, void *))(*(void *)(v3 - 8) + 16LL))(a1, a2);
    uint64_t v4 = a3[5];
    int v7 = (char *)a1 + v4;
    *(void *)((char *)a1 + vsub_1B82C(v0 + 4) = *(void *)((char *)a2 + v4);
    uint64_t v8 = *(void *)((char *)a2 + v4 + 8);
    swift_bridgeObjectRetain(v8);
    *((void *)v7 + 1) = v8;
    __dst = (char *)a1 + a3[6];
    __src = (char *)a2 + a3[6];
    uint64_t v11 = type metadata accessor for Date(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(__src, 1LL))
    {
      uint64_t v5 = sub_5150(&qword_D8820);
      memcpy(__dst, __src, *(void *)(*(void *)(v5 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, __src, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0LL, 1LL, v11);
    }

    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    return (unint64_t)a1;
  }

uint64_t sub_80368(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t))(*(void *)(v2 - 8) + 8LL))(a1);
  swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(a2 + 20) + 8));
  uint64_t v5 = *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(a1 + v5, 1LL);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1 + v5, v7);
  }
  return result;
}

uint64_t sub_8042C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, a2);
  uint64_t v4 = (void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + a3[5]);
  *uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  swift_bridgeObjectRetain(v9);
  v8[1] = v9;
  uint64_t v11 = a3[6];
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a2 + v11, 1LL))
  {
    uint64_t v5 = sub_5150(&qword_D8820);
    memcpy((void *)(a1 + v11), (const void *)(a2 + v11), *(void *)(*(void *)(v5 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v14 + 16))();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1 + v11, 0LL, 1LL, v13);
  }

  uint64_t result = a1;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return result;
}

uint64_t sub_805AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 24LL))(a1, a2);
  uint64_t v4 = (void *)(a2 + a3[5]);
  uint64_t v10 = (void *)(a1 + a3[5]);
  void *v10 = *v4;
  uint64_t v11 = v4[1];
  swift_bridgeObjectRetain(v11);
  uint64_t v5 = v10[1];
  v10[1] = v11;
  swift_bridgeObjectRelease(v5);
  uint64_t v13 = a3[6];
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  BOOL v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t))v17)(a1 + v13, 1LL))
  {
    if (v17(a2 + v13, 1LL, v15))
    {
      uint64_t v7 = sub_5150(&qword_D8820);
      memcpy((void *)(a1 + v13), (const void *)(a2 + v13), *(void *)(*(void *)(v7 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void))(v16 + 16))();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1 + v13, 0LL, 1LL, v15);
    }
  }

  else if (v17(a2 + v13, 1LL, v15))
  {
    (*(void (**)(void))(v16 + 8))();
    uint64_t v6 = sub_5150(&qword_D8820);
    memcpy((void *)(a1 + v13), (const void *)(a2 + v13), *(void *)(*(void *)(v6 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(a1 + v13, a2 + v13, v15);
  }

  uint64_t result = a1;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]) & 1;
  return result;
}

uint64_t sub_8080C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL))(a1, a2);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 48))(a2 + v8, 1LL))
  {
    uint64_t v4 = sub_5150(&qword_D8820);
    memcpy((void *)(a1 + v8), (const void *)(a2 + v8), *(void *)(*(void *)(v4 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void))(v11 + 32))();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1 + v8, 0LL, 1LL, v10);
  }

  uint64_t result = a1;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return result;
}

uint64_t sub_80968(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 40LL))(a1, a2);
  uint64_t v4 = (void *)(a2 + a3[5]);
  uint64_t v5 = (void *)(a1 + a3[5]);
  *uint64_t v5 = *v4;
  uint64_t v6 = v5[1];
  v5[1] = v4[1];
  swift_bridgeObjectRelease(v6);
  uint64_t v12 = a3[6];
  uint64_t v14 = type metadata accessor for Date(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t))v16)(a1 + v12, 1LL))
  {
    if (v16(a2 + v12, 1LL, v14))
    {
      uint64_t v8 = sub_5150(&qword_D8820);
      memcpy((void *)(a1 + v12), (const void *)(a2 + v12), *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void))(v15 + 32))();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1 + v12, 0LL, 1LL, v14);
    }
  }

  else if (v16(a2 + v12, 1LL, v14))
  {
    (*(void (**)(void))(v15 + 8))();
    uint64_t v7 = sub_5150(&qword_D8820);
    memcpy((void *)(a1 + v12), (const void *)(a2 + v12), *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(a1 + v12, a2 + v12, v14);
  }

  uint64_t result = a1;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]) & 1;
  return result;
}

uint64_t sub_80BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_80BD0);
}

uint64_t sub_80BD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v12 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if (a2 == *(_DWORD *)(v13 + 84))
  {
    return (*(unsigned int (**)(uint64_t, void, uint64_t))(v13 + 48))(a1, a2, v12);
  }

  else if (a2 == 2147483646)
  {
    int v7 = -1;
    int v3 = v7 - 1;
    if (v7 - 1 < 0) {
      int v3 = -1;
    }
    return (v3 + 1);
  }

  else
  {
    uint64_t v5 = sub_5150(&qword_D8820);
    uint64_t v6 = *(void *)(v5 - 8);
    if (a2 == *(_DWORD *)(v6 + 84)) {
      return (*(unsigned int (**)(uint64_t, void, uint64_t))(v6 + 48))(a1 + *(int *)(a3 + 24), a2, v5);
    }
    else {
      __break(1u);
    }
  }

  return v8;
}

uint64_t sub_80D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_80D40);
}

uint64_t sub_80D40(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v10 = *(void *)(result - 8);
  if (a3 == *(_DWORD *)(v10 + 84)) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v10 + 56))(a1, a2, a2, result);
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + sub_1D580(v0 + 8) = a2;
  }

  else
  {
    uint64_t result = sub_5150(&qword_D8820);
    uint64_t v5 = *(void *)(result - 8);
    if (a3 == *(_DWORD *)(v5 + 84)) {
      return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(v5 + 56))( a1 + *(int *)(a4 + 24),  a2,  a2,  result);
    }
    else {
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_80E54(uint64_t a1)
{
  uint64_t v6 = type metadata accessor for Siri_Nlu_External_UserDialogAct(319LL);
  uint64_t v7 = v6;
  if (v1 <= 0x3F)
  {
    v8[0] = *(void *)(v6 - 8) + 64LL;
    v8[1] = &unk_B7CA8;
    uint64_t v2 = sub_1C594(319LL);
    uint64_t v7 = v2;
    if (v3 <= 0x3F)
    {
      void v8[2] = *(void *)(v2 - 8) + 64LL;
      v8[3] = &unk_B7D28;
      swift_initStructMetadata(a1, 256LL, 4LL, v8, a1 + 16);
      return 0LL;
    }
  }

  return v7;
}

unint64_t sub_80F58()
{
  return sub_7161C();
}

unint64_t sub_80F6C()
{
  return sub_80F80();
}

unint64_t sub_80F80()
{
  uint64_t v3 = qword_D8B40;
  if (!qword_D8B40)
  {
    uint64_t v0 = type metadata accessor for CannedDialogNLv3Intent(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B7D40, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8B40);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_80FF0()
{
  uint64_t v3 = qword_D8B50;
  if (!qword_D8B50)
  {
    uint64_t v0 = type metadata accessor for Siri_Nlu_External_UserDialogAct(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8B50);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_81060()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SiriSocialConversationVoiceTrigger", 0x22uLL, 1)._countAndFlagsBits;
}

uint64_t sub_8108C()
{
  uint64_t v4 = 0LL;
  uint64_t v5 = 0LL;
  uint64_t v0 = sub_3B254();
  uint64_t v3 = *(void *)v0;
  uint64_t v2 = *((void *)v0 + 1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v2);
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  sub_8DD8((uint64_t)&v4);
  return v3;
}

void *type metadata accessor for INVoiceTrigger()
{
  return &unk_D0290;
}

uint64_t sub_81108()
{
  uint64_t v2 = type metadata accessor for Parse(0LL);
  uint64_t v0 = type metadata accessor for INSiriSocialConversation(0LL);
  return Transformer.init(transform:)(sub_811A0, 0LL, v2, v0);
}

uint64_t sub_8115C()
{
  uint64_t v0 = type metadata accessor for Parse(0LL);
  return Transformer.init(transform:)(sub_8332C, 0LL, v0, &unk_D0290);
}

uint64_t sub_811A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v103 = a1;
  uint64_t v117 = 0LL;
  uint64_t v115 = 0LL;
  uint64_t v114 = 0LL;
  uint64_t v112 = 0LL;
  uint64_t v110 = 0LL;
  uint64_t v116 = 0LL;
  uint64_t v113 = 0LL;
  uint64_t v111 = 0LL;
  uint64_t v68 = sub_5150(&qword_D8B88);
  uint64_t v69 = *(void *)(v68 - 8);
  unint64_t v70 = (*(void *)(v69 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v3 = __chkstk_darwin(v2);
  uint64_t v71 = (char *)&v43 - v70;
  uint64_t v117 = (char *)&v43 - v70;
  uint64_t v98 = 0LL;
  uint64_t v72 = type metadata accessor for Parse.DirectInvocation(v3);
  uint64_t v73 = *(void *)(v72 - 8);
  unint64_t v74 = (*(void *)(v73 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v75 = (char *)&v43 - v74;
  uint64_t v116 = (char *)&v43 - v74;
  uint64_t v76 = sub_5150(&qword_D8B90);
  uint64_t v77 = *(void *)(v76 - 8);
  unint64_t v78 = (*(void *)(v77 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v79 = (char *)&v43 - v78;
  uint64_t v115 = (char *)&v43 - v78;
  unint64_t v80 = (*(void *)(*(void *)(sub_5150(&qword_D8B80) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v81 = (uint64_t *)((char *)&v43 - v80);
  uint64_t v82 = type metadata accessor for Siri_Nlu_External_UserParse(v7);
  uint64_t v83 = *(void *)(v82 - 8);
  unint64_t v84 = (*(void *)(v83 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v85 = (char *)&v43 - v84;
  uint64_t v86 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v9);
  uint64_t v87 = *(void *)(v86 - 8);
  unint64_t v88 = (*(void *)(v87 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v43 - v88;
  uint64_t v114 = (char *)&v43 - v88;
  uint64_t v90 = type metadata accessor for USOParse(v11);
  uint64_t v91 = *(void *)(v90 - 8);
  unint64_t v92 = (*(void *)(v91 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v12);
  uint64_t v93 = (char *)&v43 - v92;
  uint64_t v113 = (char *)&v43 - v92;
  uint64_t v94 = sub_5150(&qword_D8B98);
  uint64_t v95 = *(void *)(v94 - 8);
  unint64_t v96 = (*(void *)(v95 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  uint64_t v97 = (char *)&v43 - v96;
  uint64_t v112 = (char *)&v43 - v96;
  uint64_t v99 = type metadata accessor for NLIntent(v14);
  uint64_t v100 = *(void *)(v99 - 8);
  unint64_t v101 = (*(void *)(v100 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v15);
  unint64_t v102 = (char *)&v43 - v101;
  uint64_t v111 = (char *)&v43 - v101;
  uint64_t v106 = type metadata accessor for Parse(v16);
  uint64_t v105 = *(void *)(v106 - 8);
  unint64_t v104 = (*(void *)(v105 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v18 = __chkstk_darwin(v17);
  uint64_t v107 = (char *)&v43 - v104;
  uint64_t v110 = v19;
  (*(void (**)(double))(v20 + 16))(v18);
  int v108 = (*(uint64_t (**)(char *, uint64_t))(v105 + 88))(v107, v106);
  if (v108 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(char *, uint64_t))(v105 + 96))(v107, v106);
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v102, v107, v99);
    uint64_t v111 = v102;
    sub_81CE8();
    uint64_t v21 = (void (*)(char *))Transformer.transform.getter(v94);
    uint64_t v22 = v67;
    uint64_t v63 = v23;
    v21(v102);
    uint64_t v64 = v22;
    uint64_t v65 = v22;
    if (v22)
    {
      uint64_t v45 = v65;
      swift_release();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v94);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v102, v99);
      uint64_t v58 = v45;
    }

    else
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v94);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v102, v99);
      uint64_t v62 = v64;
    }
  }

  else if (v108 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v105 + 96))(v107, v106);
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v75, v107, v72);
    uint64_t v116 = v75;
    sub_81D90();
    uint64_t v36 = (void (*)(char *))Transformer.transform.getter(v68);
    uint64_t v37 = v67;
    uint64_t v48 = v38;
    v36(v75);
    uint64_t v49 = v37;
    uint64_t v50 = v37;
    if (v37)
    {
      uint64_t v43 = v50;
      swift_release();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
      return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v75, v72);
    }

    else
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);
      uint64_t result = v49;
      uint64_t v62 = v49;
    }
  }

  else if (v108 == enum case for Parse.uso(_:))
  {
    uint64_t v24 = v93;
    (*(void (**)(char *, uint64_t))(v105 + 96))(v107, v106);
    uint64_t v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v91 + 32))(v24, v107, v90);
    uint64_t v113 = v24;
    uint64_t v26 = USOParse.userParse.getter(v25);
    uint64_t v59 = Siri_Nlu_External_UserParse.userDialogActs.getter(v26);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v82);
    swift_bridgeObjectRetain(v59);
    uint64_t v61 = &v109;
    uint64_t v109 = v59;
    uint64_t v60 = sub_5150(&qword_D7430);
    unint64_t v27 = sub_1C2C8();
    Collection.first.getter(v81, v60, v27);
    sub_1B82C(v61);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v87 + 48))(v81, 1LL, v86) == 1)
    {
      sub_83F10((uint64_t)v81);
      swift_bridgeObjectRelease(v59);
      uint64_t v55 = type metadata accessor for TransformationError(0LL);
      unint64_t v28 = sub_83CF0();
      int v54 = 1;
      uint64_t v57 = swift_allocError(v55, v28, 0LL, 0LL);
      uint64_t v56 = v29;
      Swift::String v30 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Could not get User Dialog Act",  0x1DuLL,  v54 & 1);
      uint64_t v31 = v55;
      *uint64_t v56 = v30;
      uint64_t v32 = (*(uint64_t (**)(void))(*(void *)(v31 - 8) + 104LL))();
      swift_willThrow(v32);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v90);
      uint64_t result = v57;
      uint64_t v58 = v57;
    }

    else
    {
      (*(void (**)(char *, void *, uint64_t))(v87 + 32))(v89, v81, v86);
      swift_bridgeObjectRelease(v59);
      sub_81D3C();
      uint64_t v33 = (void (*)(char *))Transformer.transform.getter(v76);
      uint64_t v34 = v67;
      uint64_t v51 = v35;
      v33(v89);
      uint64_t v52 = v34;
      uint64_t v53 = v34;
      if (v34)
      {
        uint64_t v44 = v53;
        swift_release();
        (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v76);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v86);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v93, v90);
        uint64_t v58 = v44;
      }

      else
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v76);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v86);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v93, v90);
        uint64_t v62 = v52;
      }
    }
  }

  else
  {
    uint64_t v46 = type metadata accessor for TransformationError(0LL);
    unint64_t v39 = sub_83CF0();
    uint64_t v47 = swift_allocError(v46, v39, 0LL, 0LL);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, void))(*(void *)(v46 - 8) + 104LL))( v40,  enum case for TransformationError.notImplemented(_:));
    swift_willThrow(v41);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v107, v106);
    uint64_t result = v47;
    uint64_t v58 = v47;
  }

  return result;
}

uint64_t sub_81CE8()
{
  uint64_t v2 = type metadata accessor for NLIntent(0LL);
  uint64_t v0 = type metadata accessor for INSiriSocialConversation(0LL);
  return Transformer.init(transform:)(sub_81DE4, 0LL, v2, v0);
}

uint64_t sub_81D3C()
{
  uint64_t v2 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v0 = type metadata accessor for INSiriSocialConversation(0LL);
  return Transformer.init(transform:)(sub_82060, 0LL, v2, v0);
}

uint64_t sub_81D90()
{
  uint64_t v2 = type metadata accessor for Parse.DirectInvocation();
  uint64_t v0 = type metadata accessor for INSiriSocialConversation(0LL);
  return Transformer.init(transform:)(sub_82D24, 0LL, v2, v0);
}

uint64_t sub_81DE4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  unint64_t v28 = a2;
  uint64_t v35 = a1;
  uint64_t v43 = 0LL;
  uint64_t v41 = 0LL;
  uint64_t v42 = 0LL;
  unint64_t v29 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v30 = (uint64_t)&v18 - v29;
  uint64_t v31 = 0LL;
  uint64_t v34 = type metadata accessor for NLIntent(0LL);
  uint64_t v33 = *(void *)(v34 - 8);
  unint64_t v32 = (*(void *)(v33 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v38 = (uint64_t)&v18 - v32;
  unint64_t v36 = (*(void *)(*(void *)(type metadata accessor for CannedDialogNLv3Intent(v4) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - v36;
  uint64_t v37 = (uint64_t)&v18 - v36;
  uint64_t v43 = v8;
  (*(void (**)(double))(v9 + 16))(v6);
  sub_71784(v38, (uint64_t)v7);
  uint64_t v39 = sub_7175C();
  uint64_t v40 = v10;
  if (v10)
  {
    uint64_t v26 = v39;
    uint64_t v27 = v40;
    uint64_t v20 = v40;
    uint64_t v19 = v39;
    uint64_t v41 = v39;
    uint64_t v42 = v40;
    sub_83ED4(v37);
    uint64_t v21 = 0LL;
    uint64_t v16 = type metadata accessor for Date(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v30, 1LL);
    return sub_70D80(v19, v20, v21, v21, v30, v28);
  }

  else
  {
    sub_83ED4(v37);
    uint64_t v23 = type metadata accessor for TransformationError(0LL);
    unint64_t v11 = sub_83CF0();
    int v22 = 1;
    uint64_t v25 = swift_allocError(v23, v11, 0LL, 0LL);
    uint64_t v24 = v12;
    Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Could not parse dialogId from NLv3 Intent",  0x29uLL,  v22 & 1);
    uint64_t v14 = v23;
    *uint64_t v24 = v13;
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)(v14 - 8) + 104LL))();
    return swift_willThrow(v15);
  }

uint64_t sub_82060@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v137 = a2;
  uint64_t v151 = a1;
  uint64_t v182 = 0LL;
  uint64_t v181 = 0LL;
  uint64_t v180 = 0LL;
  uint64_t v178 = 0LL;
  uint64_t v179 = 0LL;
  uint64_t v176 = 0LL;
  uint64_t v177 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v162 = 0LL;
  uint64_t v163 = 0LL;
  uint64_t v147 = 0LL;
  unint64_t v139 = (*(void *)(*(void *)(type metadata accessor for CannedDialogActUso(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v140 = (uint64_t)&v61 - v139;
  uint64_t v182 = (char *)&v61 - v139;
  unint64_t v141 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v142 = (char *)&v61 - v141;
  uint64_t v143 = type metadata accessor for Logger(v4);
  uint64_t v144 = *(void *)(v143 - 8);
  unint64_t v145 = (*(void *)(v144 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v5);
  uint64_t v146 = (char *)&v61 - v145;
  uint64_t v150 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v6);
  uint64_t v149 = *(void *)(v150 - 8);
  unint64_t v148 = (*(void *)(v149 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v7);
  uint64_t v154 = (uint64_t)&v61 - v148;
  uint64_t v155 = (int *)type metadata accessor for SocialConversationNLv4(v8);
  unint64_t v152 = (*(void *)(*((void *)v155 - 1) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v10 = __chkstk_darwin(v9);
  uint64_t v156 = (uint64_t)&v61 - v152;
  uint64_t v181 = (char *)&v61 - v152;
  uint64_t v180 = v11;
  uint64_t v153 = *(void (**)(double))(v12 + 16);
  v153(v10);
  sub_74A08(v154, v156);
  Swift::String v13 = (uint64_t *)(v156 + v155[5]);
  uint64_t v157 = *v13;
  uint64_t v158 = v13[1];
  swift_bridgeObjectRetain(v158);
  if (!v158) {
    goto LABEL_23;
  }
  uint64_t v135 = v157;
  uint64_t v136 = v158;
  uint64_t v133 = v158;
  uint64_t v134 = v157;
  uint64_t v176 = v157;
  uint64_t v177 = v158;
  char v14 = String.isEmpty.getter(v157, v158);
  if ((v14 & 1) != 0)
  {
    swift_bridgeObjectRelease(v133);
LABEL_23:
    uint64_t v52 = v140;
    ((void (*)(uint64_t, uint64_t, uint64_t))v153)(v154, v151, v150);
    sub_7265C(v154, v52);
    uint64_t v72 = sub_733D0();
    uint64_t v73 = v53;
    if (v53)
    {
      uint64_t v70 = v72;
      uint64_t v71 = v73;
      uint64_t v63 = v73;
      uint64_t v62 = v72;
      uint64_t v178 = v72;
      uint64_t v179 = v73;
      uint64_t v64 = sub_74564();
      uint64_t v65 = v59;
      uint64_t v60 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v60 - 8) + 56LL))(v142, 1LL);
      sub_70D80(v62, v63, v64, v65, (uint64_t)v142, v137);
      sub_7E410(v140);
      sub_7EC00(v156);
      uint64_t result = v138;
      uint64_t v78 = v138;
    }

    else
    {
      uint64_t v67 = type metadata accessor for TransformationError(0LL);
      unint64_t v54 = sub_83CF0();
      int v66 = 1;
      uint64_t v69 = swift_allocError(v67, v54, 0LL, 0LL);
      uint64_t v68 = v55;
      Swift::String v56 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Could not parse dialogId from USO Intent",  0x28uLL,  v66 & 1);
      uint64_t v57 = v67;
      Swift::String *v68 = v56;
      uint64_t v58 = (*(uint64_t (**)(void))(*(void *)(v57 - 8) + 104LL))();
      swift_willThrow(v58);
      sub_7E410(v140);
      return sub_7EC00(v156);
    }

    return result;
  }

  uint64_t v128 = swift_allocObject(&unk_D02B8, 32LL, 7LL);
  uint64_t v129 = v128 + 16;
  uint64_t v175 = v128 + 16;
  uint64_t v131 = *sub_9A7E8();
  swift_bridgeObjectRetain(v131);
  swift_bridgeObjectRetain(v133);
  uint64_t v130 = v173;
  v173[0] = v134;
  v173[1] = v133;
  Dictionary.subscript.getter(&v174);
  sub_8DD8((uint64_t)v130);
  __int128 v132 = v174;
  swift_bridgeObjectRelease(v131);
  __int128 v172 = v132;
  swift_bridgeObjectRetain(v133);
  if (*((void *)&v172 + 1))
  {
    *(_OWORD *)(v128 + swift_beginAccess(v1 + 16) = v172;
  }

  else
  {
    swift_bridgeObjectRetain(v133);
    uint64_t v15 = v128;
    uint64_t v16 = v133;
    *(void *)(v128 + swift_beginAccess(v1 + 16) = v134;
    *(void *)(v15 + swift_beginAccess(v1 + 24) = v16;
    sub_8DD8((uint64_t)&v172);
  }

  swift_bridgeObjectRelease(v133);
  int v127 = *(unsigned __int8 *)(v156 + v155[7]);
  swift_bridgeObjectRetain(v133);
  if ((v127 & 1) != 0)
  {
    uint64_t v120 = *sub_9A7E8();
    swift_bridgeObjectRetain(v120);
    uint64_t v121 = Dictionary.keys.getter( v120,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
    swift_bridgeObjectRelease(v120);
    uint64_t v124 = v160;
    v160[0] = v121;
    uint64_t v123 = v159;
    v159[0] = v134;
    v159[1] = v133;
    uint64_t v122 = sub_5150(&qword_D8B68);
    unint64_t v17 = sub_83E64();
    int v125 = Sequence<>.contains(_:)(v123, v122, v17, &protocol witness table for String);
    sub_1B82C(v124);
    int v126 = v125 ^ 1;
  }

  else
  {
    int v126 = 0;
  }

  int v119 = v126;
  swift_bridgeObjectRelease(v133);
  if ((v119 & 1) != 0)
  {
    swift_bridgeObjectRetain(v133);
    swift_bridgeObjectRetain(v133);
    swift_bridgeObjectRetain(v133);
    uint64_t v162 = v134;
    uint64_t v163 = v133;
    Swift::String v18 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("happy", 5uLL, 1);
    object = v18._object;
    BOOL v118 = String.hasPrefix(_:)(v18);
    swift_bridgeObjectRelease(object);
    swift_bridgeObjectRelease(v133);
    if (v118)
    {
      v160[1] = v134;
      v160[2] = v133;
      unint64_t v19 = sub_1BF48();
      Collection.dropFirst(_:)(v161, 5LL, &type metadata for String, v19);
      uint64_t v114 = v161[3];
      uint64_t v115 = String.init(_:)(v161[0], v161[1], v161[2]);
      uint64_t v116 = v20;
      swift_bridgeObjectRelease(v114);
      uint64_t v21 = v163;
      uint64_t v162 = v115;
      uint64_t v163 = v116;
      swift_bridgeObjectRelease(v21);
    }

    else
    {
      swift_bridgeObjectRelease(v133);
    }

    Swift::String v22 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("holiday:", 8uLL, 1);
    uint64_t countAndFlagsBits = v22._countAndFlagsBits;
    uint64_t v110 = v22._object;
    uint64_t v113 = &v162;
    uint64_t v106 = v162;
    uint64_t v107 = v163;
    swift_bridgeObjectRetain(v163);
    Swift::String v109 = String.lowercased()();
    swift_bridgeObjectRelease(v107);
    uint64_t v111 = static String.+ infix(_:_:)(countAndFlagsBits, v110, v109._countAndFlagsBits);
    uint64_t v112 = v23;
    swift_bridgeObjectRelease(v109._object);
    swift_bridgeObjectRelease(v110);
    uint64_t v24 = v112;
    uint64_t v25 = v128;
    uint64_t v26 = *(void *)(v128 + 24);
    *(void *)(v128 + swift_beginAccess(v1 + 16) = v111;
    *(void *)(v25 + swift_beginAccess(v1 + 24) = v24;
    swift_bridgeObjectRelease(v26);
    sub_8DD8((uint64_t)v113);
  }

  uint64_t v27 = v146;
  uint64_t v28 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v27, v28, v143);
  uint64_t v29 = swift_retain();
  unint64_t v104 = (os_log_s *)Logger.logObject.getter(v29);
  int v105 = static os_log_type_t.debug.getter();
  unint64_t v92 = &v170;
  uint64_t v170 = 12LL;
  unint64_t v90 = sub_7788();
  unint64_t v91 = sub_77F0();
  unint64_t v30 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v171, v92, &type metadata for UInt32, &type metadata for Int, v90, v91, v30);
  uint32_t v93 = v171;
  uint64_t v94 = 17LL;
  uint64_t v96 = 7LL;
  uint64_t v31 = swift_allocObject(&unk_D02E0, 17LL, 7LL);
  uint64_t v32 = v94;
  uint64_t v33 = v96;
  uint64_t v98 = v31;
  *(_BYTE *)(v31 + swift_beginAccess(v1 + 16) = 32;
  uint64_t v34 = swift_allocObject(&unk_D0308, v32, v33);
  uint64_t v35 = v96;
  uint64_t v99 = v34;
  *(_BYTE *)(v34 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v95 = 32LL;
  uint64_t v36 = swift_allocObject(&unk_D0330, 32LL, v35);
  uint64_t v37 = v128;
  uint64_t v38 = v95;
  uint64_t v39 = v96;
  uint64_t v97 = v36;
  *(void *)(v36 + swift_beginAccess(v1 + 16) = sub_5EFBC;
  *(void *)(v36 + swift_beginAccess(v1 + 24) = v37;
  uint64_t v40 = swift_allocObject(&unk_D0358, v38, v39);
  uint64_t v41 = v97;
  uint64_t v101 = v40;
  *(void *)(v40 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v40 + swift_beginAccess(v1 + 24) = v41;
  uint64_t v103 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v100 = _allocateUninitializedArray<A>(_:)(3LL, v103);
  unint64_t v102 = v42;
  swift_retain();
  uint64_t v43 = v98;
  uint64_t v44 = v102;
  void *v102 = sub_884C;
  v44[1] = v43;
  swift_retain();
  uint64_t v45 = v99;
  uint64_t v46 = v102;
  v102[2] = sub_884C;
  void v46[3] = v45;
  swift_retain();
  uint64_t v47 = v100;
  uint64_t v48 = v101;
  uint64_t v49 = v102;
  void v102[4] = sub_8900;
  v49[5] = v48;
  sub_6648();
  swift_bridgeObjectRelease(v47);
  if (os_log_type_enabled(v104, (os_log_type_t)v105))
  {
    uint64_t v83 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v82 = sub_5150(&qword_D6B60);
    uint64_t v84 = sub_74D0(0LL, v82, v82);
    uint64_t v85 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v86 = &v168;
    uint64_t v168 = v83;
    uint64_t v87 = &v167;
    uint64_t v167 = v84;
    unint64_t v88 = &v166;
    uint64_t v166 = v85;
    sub_7528(2LL, &v168);
    sub_7528(1LL, v86);
    uint64_t v50 = v138;
    uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v165 = v98;
    sub_753C(&v164, (uint64_t)v86, (uint64_t)v87, (uint64_t)v88);
    uint64_t v89 = v50;
    if (v50)
    {
      __break(1u);
    }

    else
    {
      uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v165 = v99;
      sub_753C(&v164, (uint64_t)&v168, (uint64_t)&v167, (uint64_t)&v166);
      uint64_t v80 = 0LL;
      uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v165 = v101;
      sub_753C(&v164, (uint64_t)&v168, (uint64_t)&v167, (uint64_t)&v166);
      uint64_t v79 = 0LL;
      _os_log_impl(&dword_0, v104, (os_log_type_t)v105, "NLv4 supported intent: %s", v83, v93);
      sub_7580(v84, 0LL);
      sub_7580(v85, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v81 = v79;
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v81 = v138;
  }

  uint64_t v77 = v81;

  (*(void (**)(char *, uint64_t))(v144 + 8))(v146, v143);
  unint64_t v74 = &v169;
  swift_beginAccess(v129);
  uint64_t v76 = *(void *)(v128 + 16);
  uint64_t v75 = *(void *)(v128 + 24);
  swift_bridgeObjectRetain(v75);
  swift_endAccess(v74);
  sub_BAFC((const void *)(v156 + v155[6]), v142);
  sub_70D80(v76, v75, 0LL, 0LL, (uint64_t)v142, v137);
  swift_release();
  swift_bridgeObjectRelease(v133);
  sub_7EC00(v156);
  uint64_t result = v77;
  uint64_t v78 = v77;
  return result;
}

uint64_t sub_82D24@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v60 = "Fatal error";
  uint64_t v61 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  uint64_t v62 = "SocialConversationFlowDelegatePlugin/Transformers.swift";
  uint64_t v76 = 0LL;
  uint64_t v72 = 0LL;
  uint64_t v73 = 0LL;
  unint64_t v63 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v64 = (uint64_t)&v19 - v63;
  uint64_t v76 = a1;
  uint64_t v65 = Parse.DirectInvocation.userData.getter(v4);
  if (v65)
  {
    uint64_t v58 = v65;
    uint64_t v57 = v65;
    uint64_t v5 = sub_4A014();
    Swift::String v56 = v66;
    v66[0] = v5;
    v66[1] = v6;
    Dictionary.subscript.getter(v74);
    sub_8DD8((uint64_t)v56);
    swift_bridgeObjectRelease(v57);
  }

  else
  {
    memset(v74, 0, sizeof(v74));
    uint64_t v75 = 0LL;
  }

  if (v75)
  {
    uint64_t v7 = swift_dynamicCast(v67, v74, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
    if ((v7 & 1) != 0)
    {
      uint64_t v51 = v67[0];
      uint64_t v52 = v67[1];
    }

    else
    {
      uint64_t v51 = 0LL;
      uint64_t v52 = 0LL;
    }

    uint64_t v54 = v51;
    uint64_t v55 = v52;
  }

  else
  {
    uint64_t v53 = 0LL;
    uint64_t v7 = (uint64_t)sub_1D580(v74);
    uint64_t v54 = v53;
    uint64_t v55 = v53;
  }

  uint64_t v49 = v55;
  uint64_t v50 = v54;
  if (v55)
  {
    uint64_t v47 = v50;
    uint64_t v48 = v49;
    uint64_t v34 = v49;
    uint64_t v35 = v50;
    uint64_t v72 = v50;
    uint64_t v73 = v49;
    uint64_t v36 = &v69;
    static SiriKitEventSender.current.getter(v7);
    uint64_t v37 = v70;
    uint64_t v38 = v71;
    uint64_t v39 = sub_8C74(v36, v70);
    uint64_t v40 = 0LL;
    uint64_t v41 = type metadata accessor for SiriKitEvent(0LL);
    uint64_t v14 = type metadata accessor for SocialConversationIntent(v40);
    id v42 = [(id)swift_getObjCClassFromMetadata(v14) typeName];
    if (v42)
    {
      id v33 = v42;
      id v28 = v42;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      uint64_t v30 = v15;

      uint64_t v31 = v29;
      uint64_t v32 = v30;
    }

    else
    {
      uint64_t v31 = 0LL;
      uint64_t v32 = 0LL;
    }

    uint64_t v26 = v32;
    uint64_t v27 = v31;
    if (v32)
    {
      uint64_t v24 = v27;
      uint64_t v25 = v26;
    }

    else
    {
      _assertionFailure(_:_:file:line:flags:)(v60, 11LL, 2LL, v61, 68LL, 2LL, v62, 55LL, 2, 85LL, 0);
      __break(1u);
    }

    uint64_t v19 = v25;
    uint64_t v20 = v24;
    uint64_t v16 = sub_56B88();
    LODWORD(v6sub_1D580(v0 + 8) = 0;
    unsigned int v22 = 1;
    BYTE4(v6sub_1D580(v0 + 8) = 1;
    uint64_t v21 = SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)(140LL, v20, v19, v68, v16, v17);
    dispatch thunk of SiriKitEventSending.send(_:)(v21, v37, v38);
    swift_release();
    sub_4598(&v69);
    uint64_t v23 = 0LL;
    uint64_t v18 = type metadata accessor for Date(0LL);
    (*(void (**)(uint64_t, void))(*(void *)(v18 - 8) + 56LL))(v64, v22);
    return sub_70D80(v35, v34, v23, v23, v64, v59);
  }

  else
  {
    uint64_t v44 = type metadata accessor for TransformationError(0LL);
    unint64_t v8 = sub_83CF0();
    int v43 = 1;
    uint64_t v46 = swift_allocError(v44, v8, 0LL, 0LL);
    uint64_t v45 = v9;
    Swift::String v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Could not parse dialogId from direct invocation",  0x2FuLL,  v43 & 1);
    uint64_t v11 = v44;
    *uint64_t v45 = v10;
    uint64_t v12 = (*(uint64_t (**)(void))(*(void *)(v11 - 8) + 104LL))();
    return swift_willThrow(v12);
  }

uint64_t sub_8332C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v24)(void *__return_ptr, char *);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  Swift::String *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void v77[2];
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v51 = a2;
  uint64_t v72 = a1;
  uint64_t v82 = 0LL;
  uint64_t v81 = 0LL;
  uint64_t v79 = 0LL;
  uint64_t v80 = 0LL;
  uint64_t v53 = sub_5150(&qword_D8B78);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = (*(void *)(v54 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  Swift::String v56 = (char *)&v35 - v55;
  uint64_t v82 = (char *)&v35 - v55;
  uint64_t v57 = (*(void *)(*(void *)(sub_5150(&qword_D8B80) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v58 = (uint64_t *)((char *)&v35 - v57);
  uint64_t v67 = 0LL;
  uint64_t v59 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = (*(void *)(v60 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v35 - v61;
  unint64_t v63 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v5);
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = (*(void *)(v64 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  int v66 = (char *)&v35 - v65;
  uint64_t v81 = (char *)&v35 - v65;
  uint64_t v68 = type metadata accessor for USOParse(v7);
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = (*(void *)(v69 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v8);
  uint64_t v71 = (char *)&v35 - v70;
  uint64_t v80 = (char *)&v35 - v70;
  uint64_t v75 = type metadata accessor for Parse(v9);
  unint64_t v74 = *(void *)(v75 - 8);
  uint64_t v73 = (*(void *)(v74 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v11 = __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v35 - v73;
  uint64_t v79 = v12;
  (*(void (**)(double))(v13 + 16))(v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v74 + 88))(v76, v75) == enum case for Parse.uso(_:))
  {
    uint64_t v14 = v71;
    (*(void (**)(char *, uint64_t))(v74 + 96))(v76, v75);
    uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v69 + 32))(v14, v76, v68);
    uint64_t v80 = v14;
    uint64_t v16 = USOParse.userParse.getter(v15);
    uint64_t v48 = Siri_Nlu_External_UserParse.userDialogActs.getter(v16);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
    swift_bridgeObjectRetain(v48);
    uint64_t v50 = &v78;
    uint64_t v78 = v48;
    uint64_t v49 = sub_5150(&qword_D7430);
    unint64_t v17 = sub_1C2C8();
    Collection.first.getter(v58, v49, v17);
    sub_1B82C(v50);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v64 + 48))(v58, 1LL, v63) == 1)
    {
      sub_83F10((uint64_t)v58);
      swift_bridgeObjectRelease(v48);
      uint64_t v44 = type metadata accessor for TransformationError(0LL);
      unint64_t v18 = sub_83CF0();
      int v43 = 1;
      uint64_t v46 = swift_allocError(v44, v18, 0LL, 0LL);
      uint64_t v45 = v19;
      Swift::String v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Could not get User Dialog Act",  0x1DuLL,  v43 & 1);
      uint64_t v21 = v44;
      *uint64_t v45 = v20;
      uint64_t v22 = (*(uint64_t (**)(void))(*(void *)(v21 - 8) + 104LL))();
      swift_willThrow(v22);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
      uint64_t result = v46;
      uint64_t v47 = v46;
    }

    else
    {
      (*(void (**)(char *, void *, uint64_t))(v64 + 32))(v66, v58, v63);
      swift_bridgeObjectRelease(v48);
      sub_83994();
      uint64_t v24 = (void (*)(void *__return_ptr, char *))Transformer.transform.getter(v53);
      uint64_t v25 = v52;
      uint64_t v40 = v26;
      v24(v77, v66);
      uint64_t v41 = v25;
      id v42 = v25;
      if (v25)
      {
        uint64_t v37 = v42;
        swift_release();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v63);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
        uint64_t result = v37;
        uint64_t v47 = v37;
      }

      else
      {
        uint64_t v38 = v77[0];
        uint64_t v39 = v77[1];
        swift_release();
        uint64_t v27 = v51;
        id v28 = v39;
        uint64_t v29 = v54;
        uint64_t v30 = v56;
        uint64_t v31 = v53;
        *uint64_t v51 = v38;
        v27[1] = v28;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v63);
        return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v71, v68);
      }
    }
  }

  else
  {
    uint64_t v35 = type metadata accessor for TransformationError(0LL);
    uint64_t v32 = sub_83CF0();
    uint64_t v36 = swift_allocError(v35, v32, 0LL, 0LL);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, void))(*(void *)(v35 - 8) + 104LL))( v33,  enum case for TransformationError.notImplemented(_:));
    swift_willThrow(v34);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);
    return v36;
  }

  return result;
}

uint64_t sub_83994()
{
  uint64_t v0 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  return Transformer.init(transform:)(sub_839D8, 0LL, v0, &unk_D0290);
}

uint64_t sub_839D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v49 = a1;
  uint64_t v57 = 0LL;
  uint64_t v55 = 0LL;
  uint64_t v56 = 0LL;
  uint64_t v45 = 0LL;
  uint64_t v48 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v47 = *(void *)(v48 - 8);
  unint64_t v46 = (*(void *)(v47 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v52 = &v27[-v46];
  unint64_t v50 = (*(void *)(*(void *)(type metadata accessor for CannedDialogActUso(v3) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  double v6 = &v27[-v50];
  uint64_t v51 = &v27[-v50];
  uint64_t v57 = v7;
  (*(void (**)(double))(v8 + 16))(v5);
  sub_7265C((uint64_t)v52, (uint64_t)v6);
  uint64_t v53 = sub_733D0();
  uint64_t v54 = v9;
  if (v9)
  {
    uint64_t v42 = v53;
    uint64_t v43 = v54;
    uint64_t v33 = v54;
    uint64_t v32 = v53;
    uint64_t v55 = v53;
    uint64_t v56 = v54;
    sub_7E410((uint64_t)v51);
    uint64_t v16 = sub_3B254();
    uint64_t v34 = *(void *)v16;
    uint64_t v35 = *((void *)v16 + 1);
    swift_bridgeObjectRetain(v35);
    int v36 = static String.== infix(_:_:)(v32, v33, v34, v35);
    swift_bridgeObjectRelease(v35);
    if ((v36 & 1) != 0)
    {
      uint64_t v17 = sub_8108C();
      unint64_t v18 = v44;
      uint64_t v19 = v17;
      uint64_t v20 = v33;
      *uint64_t v44 = v19;
      v18[1] = v21;
      return swift_bridgeObjectRelease(v20);
    }

    else
    {
      uint64_t v29 = type metadata accessor for TransformationError(0LL);
      unint64_t v22 = sub_83CF0();
      int v28 = 1;
      uint64_t v31 = swift_allocError(v29, v22, 0LL, 0LL);
      uint64_t v30 = v23;
      Swift::String v24 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Cannot transform to INVoiceTrigger",  0x22uLL,  v28 & 1);
      uint64_t v25 = v29;
      *uint64_t v30 = v24;
      uint64_t v26 = (*(uint64_t (**)(void))(*(void *)(v25 - 8) + 104LL))();
      swift_willThrow(v26);
      swift_bridgeObjectRelease(v33);
      return v31;
    }
  }

  else
  {
    sub_7E410((uint64_t)v51);
    uint64_t v38 = type metadata accessor for TransformationError(0LL);
    unint64_t v10 = sub_83CF0();
    int v37 = 1;
    uint64_t v40 = swift_allocError(v38, v10, 0LL, 0LL);
    uint64_t v39 = v11;
    Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "Could not parse dialogId USO Intent",  0x23uLL,  v37 & 1);
    uint64_t v13 = v38;
    Swift::String *v39 = v12;
    uint64_t v14 = (*(uint64_t (**)(void))(*(void *)(v13 - 8) + 104LL))();
    swift_willThrow(v14);
    uint64_t result = v40;
    uint64_t v41 = v40;
  }

  return result;
}

unint64_t sub_83CF0()
{
  uint64_t v3 = qword_D8B60;
  if (!qword_D8B60)
  {
    uint64_t v0 = type metadata accessor for TransformationError(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TransformationError, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8B60);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_83D60()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_83D9C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_83DC4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_83DEC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_83E28()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_83E64()
{
  uint64_t v3 = qword_D8B70;
  if (!qword_D8B70)
  {
    uint64_t v0 = sub_8D64(&qword_D8B68);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B].Keys, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8B70);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_83ED4(uint64_t a1)
{
  uint64_t v1 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8LL))(a1);
  return a1;
}

uint64_t sub_83F10(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_83F80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = 0LL;
  uint64_t v6 = 0LL;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a2);
  uint64_t v5 = a1;
  uint64_t v6 = a2;
  swift_bridgeObjectRelease(a2);
  sub_8DD8((uint64_t)&v5);
  return a1;
}

uint64_t sub_84000(uint64_t a1, uint64_t a2)
{
  v10[0] = 0LL;
  v10[1] = a1;
  void v10[2] = a2;
  sub_5150(&qword_D7D88);
  v10[0] = Dictionary.init()(v2);
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialConversationDialogID", 0x1AuLL, 1);
  swift_bridgeObjectRetain(a2);
  v9[3] = &type metadata for String;
  v9[4] = &protocol witness table for String;
  void v9[5] = &protocol witness table for String;
  v9[0] = a1;
  v9[1] = a2;
  Swift::String v8 = v3;
  sub_5150(&qword_D7D78);
  Dictionary.subscript.setter(v9, &v8);
  uint64_t v7 = v10[0];
  swift_bridgeObjectRetain(v10[0]);
  sub_1B82C(v10);
  return v7;
}

uint64_t *sub_84124()
{
  if (qword_D6AF0 != -1) {
    swift_once(&qword_D6AF0, sub_84394);
  }
  return &qword_D9A68;
}

uint64_t sub_84178(uint64_t a1)
{
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  v16[6] = a1;
  Swift::String v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialConversationDialogID", 0x1AuLL, 1);
  uint64_t v11 = sub_5150(&qword_D7D88);
  Dictionary.subscript.getter(v16);
  sub_8DD8((uint64_t)&v15);
  if (v16[3])
  {
    if ((swift_dynamicCast(v12, v16, v11, &type metadata for String, 6LL) & 1) != 0)
    {
      uint64_t v6 = v12[0];
      uint64_t v7 = v12[1];
    }

    else
    {
      uint64_t v6 = 0LL;
      uint64_t v7 = 0LL;
    }

    uint64_t v8 = v6;
    uint64_t v9 = v7;
  }

  else
  {
    sub_1D580(v16);
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
  }

  if (v9)
  {
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    swift_bridgeObjectRetain(v9);
    uint64_t v4 = sub_83F80(v8, v9);
    uint64_t v3 = v1;
    swift_bridgeObjectRetain(v1);
    uint64_t v17 = v4;
    uint64_t v18 = v3;
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(a1);
    sub_8DD8((uint64_t)&v17);
    return v4;
  }

  else
  {
    swift_bridgeObjectRelease(a1);
    return 0LL;
  }

uint64_t sub_84394()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation", 0x12uLL, 1);
  uint64_t result = DomainOwner.__allocating_init(_:)(v0._countAndFlagsBits, v0._object);
  qword_D9A68 = result;
  return result;
}

void *type metadata accessor for SocialSuggestionsExecutionParameter()
{
  return &unk_D03D8;
}

void *type metadata accessor for SocialSuggestionsConstants()
{
  return &unk_D0400;
}

uint64_t sub_84408(uint64_t a1)
{
  return sub_85450(a1);
}

uint64_t sub_84450(void *a1, void *a2)
{
  return sub_859B4(a1, a2);
}

uint64_t sub_844A0(void *a1)
{
  return sub_8451C(a1);
}

uint64_t sub_844E8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain(*(void *)(v0 + 24));
  return v2;
}

uint64_t sub_8451C(void *a1)
{
  uint64_t v7 = a1;
  uint64_t v6 = v1;
  v1[1] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("dismissSiri", 0xBuLL, 1);
  sub_454C((uint64_t)a1, (uint64_t)v5);
  sub_C094(v5, &v1[2]);
  sub_4598(a1);
  return v4;
}

uint64_t sub_845A0(uint64_t a1, uint64_t a2)
{
  v3[23] = v2;
  v3[22] = a1;
  v3[12] = v3;
  v3[13] = 0LL;
  v3[14] = 0LL;
  v3[16] = 0LL;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  _BYTE v3[24] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[25] = v5;
  uint64_t v9 = *(void *)(v5 + 64);
  v3[26] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v3[27] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for AceOutput(0LL);
  v3[28] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[29] = v7;
  v3[30] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v3[13] = a2;
  v3[14] = v2;
  return swift_task_switch(sub_846A0, 0LL);
}

uint64_t sub_846A0()
{
  uint64_t v28 = v0[27];
  uint64_t v32 = v0[25];
  uint64_t v33 = v0[24];
  v0[12] = v0;
  unint64_t v30 = sub_1AE50();
  uint64_t v31 = _allocateUninitializedArray<A>(_:)(1LL, v30);
  uint64_t v29 = v1;
  sub_1B1B8();
  *uint64_t v29 = sub_EB60();
  sub_6648();
  memset(v40, 0, 40);
  AceOutput.init(commands:flowActivity:)(v31, v40);
  uint64_t v2 = sub_AD514();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  v0[31] = v3;
  uint64_t v4 = v3(v28, v2, v33);
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  v0[15] = 2LL;
  unint64_t v34 = sub_7788();
  v0[32] = v34;
  unint64_t v35 = sub_77F0();
  v0[33] = v35;
  unint64_t v5 = sub_7858();
  v0[34] = v5;
  UnsignedInteger<>.init<A>(_:)(v0 + 39, v0 + 15, &type metadata for UInt32, &type metadata for Int, v34, v35, v5);
  uint64_t v36 = *((unsigned int *)v0 + 78);
  uint64_t v6 = sub_5150((uint64_t *)&unk_D6B50);
  v0[35] = v6;
  uint64_t v39 = _allocateUninitializedArray<A>(_:)(HIDWORD(v36), v6);
  if (os_log_type_enabled(v38, v37))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
    uint64_t v21 = sub_5150(&qword_D6B60);
    uint64_t v23 = sub_74D0(0LL, v21, v21);
    uint64_t v24 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    *(void *)(v27 + 14sub_1B82C(v0 + 4) = buf;
    *(void *)(v27 + 15sub_1B82C(v0 + 2) = v23;
    *(void *)(v27 + swift_beginAccess(v0 + 160) = v24;
    sub_7528(0LL, (_BYTE **)(v27 + 144));
    sub_7528(0LL, (_BYTE **)(v27 + 144));
    *(void *)(v27 + 16sub_1D580(v0 + 8) = v39;
    uint64_t v25 = (void *)swift_task_alloc(48LL);
    v25[2] = v27 + 144;
    void v25[3] = v27 + 152;
    v25[4] = v27 + 160;
    uint64_t v26 = sub_5150(&qword_D6B78);
    unint64_t v7 = sub_8CF4();
    Sequence.forEach(_:)(sub_8CC8, v25, v26, v7);
    swift_task_dealloc(v25);
    _os_log_impl(&dword_0, v38, v37, "Dismissing Siri", buf, v36);
    sub_7580(v23, 0LL);
    sub_7580(v24, 0LL);
    UnsafeMutablePointer.deallocate()();
  }

  swift_bridgeObjectRelease(v39);
  uint64_t v17 = *(void *)(v27 + 240);
  uint64_t v16 = *(void *)(v27 + 232);
  uint64_t v18 = *(void *)(v27 + 224);
  uint64_t v13 = *(void *)(v27 + 216);
  uint64_t v12 = *(void *)(v27 + 200);
  uint64_t v14 = *(void *)(v27 + 192);
  uint64_t v15 = *(void *)(v27 + 184);

  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  *(void *)(v27 + 28sub_1D580(v0 + 8) = v8;
  v8(v13, v14);
  sub_454C(v15 + 32, v27 + 16);
  uint64_t v19 = *(void *)(v27 + 40);
  uint64_t v20 = *(void *)(v27 + 48);
  sub_8C74((void *)(v27 + 16), v19);
  *(void *)(v27 + swift_beginAccess(v0 + 80) = v18;
  *(void *)(v27 + 8sub_1D580(v0 + 8) = &protocol witness table for AceOutput;
  uint64_t v9 = sub_1AFD4((uint64_t *)(v27 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v9, v17, v18);
  unint64_t v10 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  *(void *)(v27 + 2swift_beginAccess(v0 + 96) = v10;
  void *v10 = *(void *)(v27 + 96);
  v10[1] = sub_84B58;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v27 + 56, v19, v20);
}

uint64_t sub_84B58()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 296LL);
  v2[12] = *(void *)v1;
  unint64_t v5 = v2 + 7;
  v2[38] = v0;
  swift_task_dealloc(v3);
  if (v0) {
    return swift_task_switch(sub_84CC4, 0LL);
  }
  sub_4598(v5);
  return swift_task_switch(sub_84C0C, 0LL);
}

uint64_t sub_84C0C()
{
  v0[12] = v0;
  uint64_t v1 = sub_4598(v0 + 2);
  uint64_t v5 = v0[30];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[28];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[26];
  static BehaviorResponseResult.complete()(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0[12] + 8LL))();
}

uint64_t sub_84CC4()
{
  uint64_t v24 = v0[38];
  uint64_t v37 = v0[35];
  uint64_t v27 = v0[34];
  uint64_t v26 = v0[33];
  uint64_t v25 = v0[32];
  uint64_t v23 = (void (*)(uint64_t, uint64_t, uint64_t))v0[31];
  uint64_t v1 = v0[26];
  uint64_t v22 = v0[24];
  v0[12] = v0;
  sub_4598(v0 + 7);
  sub_4598(v0 + 2);
  swift_errorRetain(v24);
  v0[16] = v24;
  uint64_t v2 = sub_AD514();
  v23(v1, v2, v22);
  swift_errorRetain(v24);
  uint64_t v29 = swift_allocObject(&unk_D0420, 24LL, 7LL);
  *(void *)(v29 + swift_beginAccess(v1 + 16) = v24;
  sub_3EEF4();
  uint64_t v4 = swift_bridgeObjectRelease(v3);
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v39 = static os_log_type_t.error.getter();
  v0[17] = 12LL;
  UnsignedInteger<>.init<A>(_:)( (void *)((char *)v0 + 316),  v0 + 17,  &type metadata for UInt32,  &type metadata for Int,  v25,  v26,  v27);
  uint32_t v28 = *((_DWORD *)v0 + 79);
  uint64_t v32 = swift_allocObject(&unk_D0448, 17LL, 7LL);
  *(_BYTE *)(v32 + swift_beginAccess(v1 + 16) = 64;
  uint64_t v33 = swift_allocObject(&unk_D0470, 17LL, 7LL);
  *(_BYTE *)(v33 + swift_beginAccess(v1 + 16) = 8;
  uint64_t v30 = swift_allocObject(&unk_D0498, 32LL, 7LL);
  *(void *)(v30 + swift_beginAccess(v1 + 16) = sub_41F6C;
  *(void *)(v30 + swift_beginAccess(v1 + 24) = v29;
  uint64_t v31 = swift_allocObject(&unk_D04C0, 32LL, 7LL);
  *(void *)(v31 + swift_beginAccess(v1 + 16) = sub_420D8;
  *(void *)(v31 + swift_beginAccess(v1 + 24) = v30;
  uint64_t v35 = swift_allocObject(&unk_D04E8, 32LL, 7LL);
  *(void *)(v35 + swift_beginAccess(v1 + 16) = sub_88B8;
  *(void *)(v35 + swift_beginAccess(v1 + 24) = v31;
  uint64_t v34 = _allocateUninitializedArray<A>(_:)(3LL, v37);
  uint64_t v36 = v5;
  swift_retain();
  void *v36 = sub_884C;
  v36[1] = v32;
  swift_retain();
  void v36[2] = sub_884C;
  v36[3] = v33;
  swift_retain();
  void v36[4] = sub_424F0;
  v36[5] = v35;
  sub_6648();
  swift_bridgeObjectRelease(v34);
  if (os_log_type_enabled(v38, v39))
  {
    buf = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v17 = sub_5150(&qword_D6B60);
    uint64_t v19 = sub_74D0(1LL, v17, v17);
    uint64_t v20 = sub_74D0(0LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v40 = buf;
    uint64_t v41 = v19;
    uint64_t v42 = v20;
    sub_7528(2LL, &v40);
    sub_7528(1LL, &v40);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v44 = v32;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v44 = v33;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_424F0;
    uint64_t v44 = v35;
    sub_753C(&v43, (uint64_t)&v40, (uint64_t)&v41, (uint64_t)&v42);
    _os_log_impl(&dword_0, v38, v39, "Error publishing SAUICloseAssistant command: %@", buf, v28);
    sub_7580(v19, 1LL);
    sub_7580(v20, 0LL);
    UnsafeMutablePointer.deallocate()();
    swift_release();
    swift_release();
    swift_release();
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  uint64_t v11 = v21[38];
  unint64_t v10 = (void (*)(uint64_t, uint64_t))v21[36];
  uint64_t v8 = v21[26];
  uint64_t v9 = v21[24];

  v10(v8, v9);
  swift_errorRelease(v11);
  uint64_t v6 = swift_errorRelease(v11);
  uint64_t v14 = v21[30];
  uint64_t v12 = v21[29];
  uint64_t v13 = v21[28];
  uint64_t v15 = v21[27];
  uint64_t v16 = v21[26];
  static BehaviorResponseResult.complete()(v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v21[12] + 8LL))();
}

uint64_t sub_85338()
{
  return v2;
}

uint64_t sub_85374()
{
  uint64_t v0 = sub_85338();
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t sub_853B0()
{
  return sub_844E8();
}

uint64_t sub_853D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_8DD8(v0 + 16) = v2;
  uint64_t v3 = (void *)swift_task_alloc(dword_D8BA4);
  *(void *)(v2 + swift_beginAccess(v1 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_5D8EC;
  return sub_845A0(a1, a2);
}

uint64_t sub_85450(uint64_t a1)
{
  unint64_t v10 = (const void *)a1;
  uint64_t v13 = 0LL;
  uint64_t v12 = 0LL;
  unint64_t v8 = (*(void *)(*(void *)(sub_5150(&qword_D8820) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v9 = (char *)&v8 - v8;
  uint64_t v13 = v3;
  uint64_t v12 = v1;
  Swift::String v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("initDailyUplift", 0xFuLL, 1);
  uint64_t v5 = v10;
  uint64_t v6 = v9;
  v1[1] = v4;
  sub_BAFC(v5, v6);
  sub_70F6C( v9,  (char *)v1 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin38InitDailyUpliftBehaviorResponseHandler_date);
  sub_BDC8((uint64_t)v10);
  return v11;
}

uint64_t sub_85528(uint64_t a1, uint64_t a2)
{
  _BYTE v3[8] = v2;
  v3[7] = a1;
  void v3[2] = v3;
  v3[3] = 0LL;
  v3[4] = 0LL;
  v3[5] = 0LL;
  uint64_t v4 = sub_5150(&qword_D8820);
  _BYTE v3[9] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Date(0LL);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  v3[12] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v3[3] = a2;
  v3[4] = v2;
  return swift_task_switch(sub_85600, 0LL);
}

uint64_t sub_85600()
{
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[10];
  uint64_t v1 = (void *)v0[9];
  uint64_t v24 = v1;
  uint64_t v2 = v0[8];
  v0[2] = v0;
  sub_BAFC( (const void *)(v2 + OBJC_IVAR____TtC36SocialConversationFlowDelegatePlugin38InitDailyUpliftBehaviorResponseHandler_date),  v1);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v24, 1LL, v23) == 1)
  {
    uint64_t v7 = sub_BDC8(v21[9]);
    static BehaviorResponseResult.complete()(v7);
  }

  else
  {
    uint64_t v19 = v21[12];
    uint64_t v18 = v21[11];
    uint64_t v20 = v21[10];
    (*(void (**)(void))(v18 + 32))();
    type metadata accessor for DialogCalendar.Builder();
    uint64_t v10 = DialogCalendar.Builder.__allocating_init()();
    double v3 = Date.timeIntervalSince1970.getter(v10);
    dispatch thunk of DialogCalendar.Builder.withSecs(_:)(*(void *)&v3, 0LL);
    uint64_t v4 = swift_release();
    uint64_t v17 = dispatch thunk of DialogCalendar.Builder.build()(v4);
    swift_release();
    v21[5] = v17;
    uint64_t v14 = sub_5150(&qword_D7370);
    uint64_t v15 = _allocateUninitializedArray<A>(_:)(1LL, v14);
    uint64_t v13 = v5;
    *uint64_t v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("date", 4uLL, 1);
    swift_retain();
    v21[6] = v17;
    uint64_t v11 = type metadata accessor for DialogCalendar(0LL);
    unint64_t v6 = sub_86458();
    uint64_t v12 = CATType.toDictionary.getter(v11, v6);
    swift_release();
    v13[2]._object = (void *)sub_5150(&qword_D7368);
    v13[1]._uint64_t countAndFlagsBits = v12;
    sub_6648();
    uint64_t v16 = Dictionary.init(dictionaryLiteral:)( v15,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    static BehaviorResponseResult.setAuthoredFlowVariables(variables:)();
    swift_bridgeObjectRelease(v16);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  }

  uint64_t v9 = v21[9];
  swift_task_dealloc(v21[12]);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v21[2] + 8LL))();
}

uint64_t sub_858B0()
{
  return v2;
}

uint64_t sub_858F4()
{
  uint64_t v0 = sub_858B0();
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_85934(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_8DD8(v0 + 16) = v2;
  double v3 = (void *)swift_task_alloc(dword_D8BB4);
  *(void *)(v2 + swift_beginAccess(v1 + 24) = v3;
  *double v3 = *(void *)(v2 + 16);
  v3[1] = sub_5D8EC;
  return sub_85528(a1, a2);
}

uint64_t sub_859B4(void *a1, void *a2)
{
  uint64_t v11 = a1;
  uint64_t v10 = a2;
  uint64_t v9 = v2;
  v2[1] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("initGreeting", 0xCuLL, 1);
  id v3 = a1;
  v2[2]._uint64_t countAndFlagsBits = (uint64_t)a1;
  sub_454C((uint64_t)a2, (uint64_t)v8);
  sub_C094(v8, &v2[2]._object);
  sub_4598(a2);

  return v7;
}

uint64_t sub_85A5C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 176) = v2;
  *(void *)(v3 + 16sub_1D580(v0 + 8) = a1;
  *(void *)(v3 + 136) = v3;
  *(void *)(v3 + 14sub_1B82C(v0 + 4) = 0LL;
  *(void *)(v3 + 15sub_1B82C(v0 + 2) = 0LL;
  *(_BYTE *)(v3 + 19sub_1B82C(v0 + 2) = 0;
  *(_BYTE *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 18sub_1B82C(v0 + 4) = 0;
  *(_BYTE *)(v3 + 20sub_1D580(v0 + 8) = 0;
  *(void *)(v3 + swift_beginAccess(v0 + 160) = 0LL;
  *(void *)(v3 + 14sub_1B82C(v0 + 4) = a2;
  *(void *)(v3 + 15sub_1B82C(v0 + 2) = v2;
  return swift_task_switch(sub_85AB4, 0LL);
}

uint64_t sub_85AB4()
{
  uint64_t v14 = *(void *)(v0 + 176);
  *(void *)(v0 + 136) = v0;
  sub_454C(v14 + 40, v0 + 16);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  sub_8C74((void *)(v0 + 16), v5);
  char v20 = dispatch thunk of DeviceState.isPhone.getter(v5, v4);
  *(_BYTE *)(v0 + 19sub_1B82C(v0 + 2) = v20 & 1;
  sub_4598((void *)(v0 + 16));
  sub_454C(v14 + 40, v0 + 56);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  sub_8C74((void *)(v0 + 56), v7);
  char v21 = dispatch thunk of DeviceState.isCarPlay.getter(v7, v6);
  *(_BYTE *)(v0 + 200) = v21 & 1;
  sub_4598((void *)(v0 + 56));
  id v9 = (id)objc_opt_self(&OBJC_CLASS___CAT);
  object = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation#dalGreeting", 0x1EuLL, 1)._object;
  id v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  id v11 = [v9 getDialogStateFamily:v10];

  unsigned int v22 = [v11 usageCount];
  *(_DWORD *)(v0 + 18sub_1B82C(v0 + 4) = v22;
  sub_454C(v14 + 40, v0 + 96);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  sub_8C74((void *)(v0 + 96), v13);
  char v23 = dispatch thunk of DeviceState.isPhone.getter(v13, v12);
  *(_BYTE *)(v0 + 20sub_1D580(v0 + 8) = v23 & 1;
  sub_4598((void *)(v0 + 96));
  id v16 = (id)objc_opt_self(&OBJC_CLASS___CAT);
  uint64_t v15 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SocialConversation#dalGreeting", 0x1EuLL, 1)._object;
  id v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  id v18 = [v16 getDialogStateFamily:v17];

  [v18 lastTimestamp];
  double v19 = v1;

  uint64_t v25 = sub_85F68(v19);
  *(void *)(v0 + swift_beginAccess(v0 + 160) = v25;
  uint64_t v27 = sub_5150(&qword_D7370);
  uint64_t v26 = _allocateUninitializedArray<A>(_:)(5LL, v27);
  uint64_t v24 = v2;
  Swift::String *v2 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("supportsSiriHelp", 0x10uLL, 1);
  v24[2]._object = &type metadata for Bool;
  LOBYTE(v24[1]._countAndFlagsBits) = v20 & 1;
  v24[3] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("isCarPlay", 9uLL, 1);
  v24[5]._object = &type metadata for Bool;
  LOBYTE(v24[4]._countAndFlagsBits) = v21 & 1;
  v24[6] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("familyUsageCount", 0x10uLL, 1);
  v24[8]._object = &type metadata for Int32;
  LODWORD(v24[7]._countAndFlagsBits) = v22;
  v24[9] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("isPhone", 7uLL, 1);
  v24[11]._object = &type metadata for Bool;
  LOBYTE(v24[10]._countAndFlagsBits) = v23 & 1;
  v24[12] = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("familyDaysSinceLastUse", 0x16uLL, 1);
  v24[14]._object = &type metadata for Int;
  v24[13]._uint64_t countAndFlagsBits = v25;
  sub_6648();
  uint64_t v28 = Dictionary.init(dictionaryLiteral:)( v26,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  static BehaviorResponseResult.setAuthoredFlowVariables(variables:)();
  swift_bridgeObjectRelease(v28);
  return (*(uint64_t (**)(void))(*(void *)(v0 + 136) + 8LL))();
}

uint64_t sub_85F68(double a1)
{
  double v15 = a1;
  id v10 = "Fatal error";
  id v11 = "Double value cannot be converted to Int because it is either infinite or NaN";
  uint64_t v12 = "Swift/IntegerTypes.swift";
  uint64_t v13 = "Double value cannot be converted to Int because the result would be less than Int.min";
  uint64_t v14 = "Double value cannot be converted to Int because the result would be greater than Int.max";
  double v22 = 0.0;
  uint64_t v21 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v16 = type metadata accessor for Date(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v19 = (char *)v6 - v18;
  double v22 = __chkstk_darwin(v15);
  uint64_t v21 = v1;
  if (v22 == 0.0) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v2 = Date.init()();
  double v7 = Date.timeIntervalSince1970.getter(v2);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  double v8 = v7 - v15;
  if (((COERCE_UNSIGNED_INT64(v7 - v15) >> 52) & 0x7FF) == 0x7FF)
  {
    char v5 = 2;
    _assertionFailure(_:_:file:line:flags:)(v10, 11LL, 2LL, v11, 76LL, 2LL, v12, 24LL, v5, 14133LL, 0);
    __break(1u);
  }

  if (v8 <= -9.22337204e18)
  {
    LOBYTE(vsub_1B82C(v0 + 4) = 2;
    _assertionFailure(_:_:file:line:flags:)(v10, 11LL, 2LL, v13, 85LL, 2LL, v12, 24LL, v4, 14136LL, 0);
    __break(1u);
  }

  if (v8 >= 9.22337204e18)
  {
    LOBYTE(vsub_1B82C(v0 + 4) = 2;
    _assertionFailure(_:_:file:line:flags:)(v10, 11LL, 2LL, v14, 88LL, 2LL, v12, 24LL, v4, 14139LL, 0);
    __break(1u);
  }

  v6[1] = (uint64_t)v8;
  uint64_t v20 = (uint64_t)v8;
  return (uint64_t)v8 / 86400;
}

uint64_t sub_86218()
{
  sub_4598((void *)(v0 + 40));
  return v2;
}

uint64_t sub_8625C()
{
  uint64_t v0 = sub_86218();
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t sub_86298(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_8DD8(v0 + 16) = v2;
  uint64_t v3 = (void *)swift_task_alloc(dword_D8BCC);
  *(void *)(v2 + swift_beginAccess(v1 + 24) = v3;
  *uint64_t v3 = *(void *)(v2 + 16);
  v3[1] = sub_5D8EC;
  return sub_85A5C(a1, a2);
}

uint64_t sub_86318()
{
  return swift_deallocObject(v2, 24LL);
}

uint64_t sub_86354()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_8637C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_863A4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_863E0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_8641C()
{
  return swift_deallocObject(v2, 32LL);
}

unint64_t sub_86458()
{
  uint64_t v3 = qword_D8BB8;
  if (!qword_D8BB8)
  {
    uint64_t v0 = type metadata accessor for DialogCalendar(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for DialogCalendar, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8BB8);
    return WitnessTable;
  }

  return v3;
}

uint64_t type metadata accessor for DismissSiriBehaviorResponseHandler()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin34DismissSiriBehaviorResponseHandler);
}

uint64_t sub_864EC()
{
  return type metadata accessor for InitDailyUpliftBehaviorResponseHandler(0LL);
}

uint64_t type metadata accessor for InitDailyUpliftBehaviorResponseHandler(uint64_t a1)
{
  uint64_t v2 = qword_D8CB0;
  if (!qword_D8CB0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InitDailyUpliftBehaviorResponseHandler);
  }
  return v2;
}

uint64_t sub_86568(uint64_t a1)
{
  v6[0] = &unk_B7F68;
  uint64_t v1 = sub_1C594(319LL);
  uint64_t updated = v1;
  if (v2 <= 0x3F)
  {
    v6[1] = *(void *)(v1 - 8) + 64LL;
    uint64_t updated = swift_updateClassMetadata2(a1, 256LL, 2LL, v6, a1 + 80);
    if (!updated) {
      return 0LL;
    }
  }

  return updated;
}

uint64_t type metadata accessor for InitGreetingBehaviorResponseHandler()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin35InitGreetingBehaviorResponseHandler);
}

uint64_t sub_86650()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_866A8(uint64_t a1, char a2)
{
  *(void *)(v2 + swift_beginAccess(v2 + 16) = a1;
  *(_BYTE *)(v2 + swift_beginAccess(v1 + 24) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t sub_86704()
{
  uint64_t v2 = *(void *)(v0 + 32);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_8675C(uint64_t a1, char a2)
{
  *(void *)(v2 + 3sub_1B82C(v0 + 2) = a1;
  *(_BYTE *)(v2 + swift_beginAccess(v0 + 40) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t sub_867B8()
{
  uint64_t v2 = *(void *)(v0 + 48);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_86810(uint64_t a1, char a2)
{
  *(void *)(v2 + 4sub_1D580(v0 + 8) = a1;
  *(_BYTE *)(v2 + swift_beginAccess(v0 + 56) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t sub_8686C()
{
  uint64_t v2 = *(void *)(v0 + 64);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_868C4(uint64_t a1, char a2)
{
  *(void *)(v2 + 6sub_1B82C(v0 + 4) = a1;
  *(_BYTE *)(v2 + 7sub_1B82C(v0 + 2) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t (*sub_86920())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_86960()
{
  uint64_t v2 = *(void *)(v0 + 80);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_869B8(uint64_t a1, char a2)
{
  *(void *)(v2 + swift_beginAccess(v2 + 80) = a1;
  *(_BYTE *)(v2 + 8sub_1D580(v0 + 8) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t sub_86A14()
{
  uint64_t v2 = *(void *)(v0 + 96);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_86A6C(uint64_t a1, char a2)
{
  *(void *)(v2 + swift_beginAccess(v2 + 96) = a1;
  *(_BYTE *)(v2 + 10sub_1B82C(v0 + 4) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t sub_86AC8()
{
  uint64_t v2 = *(void *)(v0 + 112);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_86B20(uint64_t a1, char a2)
{
  *(void *)(v2 + swift_beginAccess(v2 + 112) = a1;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t sub_86B7C()
{
  uint64_t v2 = *(void *)(v0 + 128);
  swift_endAccess(v3);
  return v2;
}

uint64_t sub_86BD4(uint64_t a1, char a2)
{
  *(void *)(v2 + 12sub_1D580(v0 + 8) = a1;
  *(_BYTE *)(v2 + 136) = a2 & 1;
  return swift_endAccess(v6);
}

uint64_t (*sub_86C30())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_86C70()
{
  char v2 = *(_BYTE *)(v0 + 137);
  swift_endAccess(v3);
  return v2 & 1;
}

uint64_t sub_86CBC(char a1)
{
  *(_BYTE *)(v1 + swift_beginAccess(v1 + 137) = a1 & 1;
  return swift_endAccess(v4);
}

uint64_t (*sub_86D08())(uint64_t a1)
{
  return sub_440C;
}

uint64_t sub_86D48()
{
  return sub_86D80();
}

uint64_t sub_86D80()
{
  uint64_t result = v0;
  *(void *)(v0 + swift_beginAccess(v2 + 16) = 0LL;
  *(_BYTE *)(v0 + swift_beginAccess(v1 + 24) = 1;
  *(void *)(v0 + 3sub_1B82C(v0 + 2) = 0LL;
  *(_BYTE *)(v0 + swift_beginAccess(v0 + 40) = 1;
  *(void *)(v0 + 4sub_1D580(v0 + 8) = 0LL;
  *(_BYTE *)(v0 + swift_beginAccess(v0 + 56) = 1;
  *(void *)(v0 + 6sub_1B82C(v0 + 4) = 0LL;
  *(_BYTE *)(v0 + 7sub_1B82C(v0 + 2) = 1;
  *(void *)(v0 + swift_beginAccess(v2 + 80) = 0LL;
  *(_BYTE *)(v0 + 8sub_1D580(v0 + 8) = 1;
  *(void *)(v0 + swift_beginAccess(v2 + 96) = 0LL;
  *(_BYTE *)(v0 + 10sub_1B82C(v0 + 4) = 1;
  *(void *)(v0 + swift_beginAccess(v2 + 112) = 0LL;
  *(_BYTE *)(v0 + 120) = 1;
  *(void *)(v0 + 12sub_1D580(v0 + 8) = 0LL;
  *(_BYTE *)(v0 + 136) = 1;
  *(_BYTE *)(v0 + swift_beginAccess(v0 + 137) = 0;
  return result;
}

uint64_t sub_86E2C(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 16);
  *(void *)(v2 + swift_beginAccess(v2 + 16) = a1;
  *(_BYTE *)(v2 + swift_beginAccess(v1 + 24) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_86ED8(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 32);
  *(void *)(v2 + 3sub_1B82C(v0 + 2) = a1;
  *(_BYTE *)(v2 + swift_beginAccess(v0 + 40) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_86F84(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 48);
  *(void *)(v2 + 4sub_1D580(v0 + 8) = a1;
  *(_BYTE *)(v2 + swift_beginAccess(v0 + 56) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_87030(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 64);
  *(void *)(v2 + 6sub_1B82C(v0 + 4) = a1;
  *(_BYTE *)(v2 + 7sub_1B82C(v0 + 2) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_870DC(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 80);
  *(void *)(v2 + swift_beginAccess(v2 + 80) = a1;
  *(_BYTE *)(v2 + 8sub_1D580(v0 + 8) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_87188(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 96);
  *(void *)(v2 + swift_beginAccess(v2 + 96) = a1;
  *(_BYTE *)(v2 + 10sub_1B82C(v0 + 4) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_87234(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 112);
  *(void *)(v2 + swift_beginAccess(v2 + 112) = a1;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_872E0(uint64_t a1, char a2)
{
  uint64_t v9 = a1;
  char v10 = a2 & 1;
  uint64_t v8 = v2;
  swift_retain();
  swift_beginAccess(v2 + 128);
  *(void *)(v2 + 12sub_1D580(v0 + 8) = a1;
  *(_BYTE *)(v2 + 136) = a2 & 1;
  swift_endAccess(v7);
  swift_release();
  swift_retain();
  return v6;
}

uint64_t sub_8738C(char a1)
{
  char v7 = a1 & 1;
  uint64_t v6 = v1;
  swift_retain();
  swift_beginAccess(v1 + 137);
  *(_BYTE *)(v1 + swift_beginAccess(v0 + 137) = a1 & 1;
  swift_endAccess(v5);
  swift_release();
  swift_retain();
  return v4;
}

uint64_t sub_87420()
{
  return sub_8748C(v1);
}

uint64_t type metadata accessor for SocialConversationUsage()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin23SocialConversationUsage);
}

uint64_t sub_8748C(uint64_t a1)
{
  return sub_87610(a1);
}

uint64_t sub_874D4()
{
  uint64_t v0 = sub_46AA8();
  return swift_deallocClassInstance(v0, 138LL, 7LL);
}

uint64_t sub_87510()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialConversation.Usage", 0x18uLL, 1)._countAndFlagsBits;
}

uint64_t sub_8754C()
{
  return 0LL;
}

void *sub_87568()
{
  uint64_t v3 = *(void **)(v0 + 16);
  id v1 = v3;
  swift_endAccess(v4);
  return v3;
}

void sub_875B4(void *a1)
{
  id v2 = a1;
  swift_beginAccess(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + swift_beginAccess(v0 + 16) = a1;

  swift_endAccess(v5);
}

uint64_t sub_87610(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v31 = v1;
  *(void *)(v1 + swift_beginAccess(v0 + 16) = 0LL;
  swift_beginAccess(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(_BYTE *)(a1 + 24);
  swift_endAccess(v30);
  *(void *)(v1 + swift_beginAccess(v1 + 24) = v3;
  *(_BYTE *)(v1 + 3sub_1B82C(v0 + 2) = v4 & 1;
  swift_beginAccess(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(_BYTE *)(a1 + 40);
  swift_endAccess(v29);
  *(void *)(v1 + swift_beginAccess(v0 + 40) = v5;
  *(_BYTE *)(v1 + 4sub_1D580(v0 + 8) = v6 & 1;
  swift_beginAccess(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(_BYTE *)(a1 + 56);
  swift_endAccess(v28);
  *(void *)(v1 + swift_beginAccess(v0 + 56) = v7;
  *(_BYTE *)(v1 + 6sub_1B82C(v0 + 4) = v8 & 1;
  swift_beginAccess(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 64);
  char v10 = *(_BYTE *)(a1 + 72);
  swift_endAccess(v27);
  *(void *)(v1 + 7sub_1B82C(v0 + 2) = v9;
  *(_BYTE *)(v1 + swift_beginAccess(v2 + 80) = v10 & 1;
  swift_beginAccess(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 80);
  char v12 = *(_BYTE *)(a1 + 88);
  swift_endAccess(v26);
  *(void *)(v1 + 8sub_1D580(v0 + 8) = v11;
  *(_BYTE *)(v1 + swift_beginAccess(v2 + 96) = v12 & 1;
  swift_beginAccess(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 96);
  char v14 = *(_BYTE *)(a1 + 104);
  swift_endAccess(v25);
  *(void *)(v1 + 10sub_1B82C(v0 + 4) = v13;
  *(_BYTE *)(v1 + swift_beginAccess(v2 + 112) = v14 & 1;
  swift_beginAccess(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 112);
  char v16 = *(_BYTE *)(a1 + 120);
  swift_endAccess(v24);
  *(void *)(v1 + 120) = v15;
  *(_BYTE *)(v1 + 12sub_1D580(v0 + 8) = v16 & 1;
  swift_beginAccess(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 128);
  char v18 = *(_BYTE *)(a1 + 136);
  swift_endAccess(v23);
  *(void *)(v1 + 136) = v17;
  *(_BYTE *)(v1 + 14sub_1B82C(v0 + 4) = v18 & 1;
  swift_beginAccess(a1 + 137);
  char v19 = *(_BYTE *)(a1 + 137);
  swift_endAccess(v22);
  *(_BYTE *)(v1 + 14sub_1B82C(v0 + 5) = v19 & 1;
  swift_release();
  return v21;
}

uint64_t sub_8794C( uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, char a17)
{
  uint64_t v26 = sub_8738C(a17 & 1);
  swift_release();
  swift_retain();
  uint64_t v27 = sub_8748C(v26);
  swift_retain();
  swift_release();
  swift_release();
  return v27;
}

uint64_t type metadata accessor for SocialConversationUsage.Builder()
{
  return objc_opt_self(&OBJC_CLASS____TtCC36SocialConversationFlowDelegatePlugin23SocialConversationUsage7Builder);
}

uint64_t sub_87C48()
{
  return 1LL;
}

uint64_t sub_87C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  Swift::String v3 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCount", 0xAuLL, 1);
  swift_bridgeObjectRetain(v3._object);
  char v34 = static String.== infix(_:_:)(v3._countAndFlagsBits, v3._object, a1, a2);
  swift_bridgeObjectRelease(v3._object);
  swift_bridgeObjectRelease(v3._object);
  if ((v34 & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease(a2);
    uint64_t v29 = *(void *)(v31 + 24);
    if ((*(_BYTE *)(v31 + 32) & 1) != 0)
    {
      *a3 = 0LL;
      a3[1] = 0LL;
      a3[2] = 0LL;
      a3[3] = 0LL;
    }

    else
    {
      a3[3] = &type metadata for Double;
      *a3 = v29;
    }
  }

  else
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRetain(a2);
    Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCountInLast2Mins", 0x15uLL, 1);
    swift_bridgeObjectRetain(v5._object);
    char v28 = static String.== infix(_:_:)(v5._countAndFlagsBits, v5._object, a1, a2);
    swift_bridgeObjectRelease(v5._object);
    swift_bridgeObjectRelease(v5._object);
    if ((v28 & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease(a2);
      uint64_t v27 = *(void *)(v31 + 40);
      if ((*(_BYTE *)(v31 + 48) & 1) != 0)
      {
        *a3 = 0LL;
        a3[1] = 0LL;
        a3[2] = 0LL;
        a3[3] = 0LL;
      }

      else
      {
        a3[3] = &type metadata for Double;
        *a3 = v27;
      }
    }

    else
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRetain(a2);
      Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCountInLast10Mins", 0x16uLL, 1);
      swift_bridgeObjectRetain(v6._object);
      char v26 = static String.== infix(_:_:)(v6._countAndFlagsBits, v6._object, a1, a2);
      swift_bridgeObjectRelease(v6._object);
      swift_bridgeObjectRelease(v6._object);
      if ((v26 & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease(a2);
        uint64_t v25 = *(void *)(v31 + 56);
        if ((*(_BYTE *)(v31 + 64) & 1) != 0)
        {
          *a3 = 0LL;
          a3[1] = 0LL;
          a3[2] = 0LL;
          a3[3] = 0LL;
        }

        else
        {
          a3[3] = &type metadata for Double;
          *a3 = v25;
        }
      }

      else
      {
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRetain(a2);
        Swift::String v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCountInLast1Hour", 0x15uLL, 1);
        swift_bridgeObjectRetain(v7._object);
        char v24 = static String.== infix(_:_:)(v7._countAndFlagsBits, v7._object, a1, a2);
        swift_bridgeObjectRelease(v7._object);
        swift_bridgeObjectRelease(v7._object);
        if ((v24 & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease(a2);
          uint64_t v23 = *(void *)(v31 + 72);
          if ((*(_BYTE *)(v31 + 80) & 1) != 0)
          {
            *a3 = 0LL;
            a3[1] = 0LL;
            a3[2] = 0LL;
            a3[3] = 0LL;
          }

          else
          {
            a3[3] = &type metadata for Double;
            *a3 = v23;
          }
        }

        else
        {
          swift_bridgeObjectRelease(a2);
          swift_bridgeObjectRetain(a2);
          Swift::String v8 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCountInLast6Hours", 0x16uLL, 1);
          swift_bridgeObjectRetain(v8._object);
          char v22 = static String.== infix(_:_:)(v8._countAndFlagsBits, v8._object, a1, a2);
          swift_bridgeObjectRelease(v8._object);
          swift_bridgeObjectRelease(v8._object);
          if ((v22 & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease(a2);
            uint64_t v21 = *(void *)(v31 + 88);
            if ((*(_BYTE *)(v31 + 96) & 1) != 0)
            {
              *a3 = 0LL;
              a3[1] = 0LL;
              a3[2] = 0LL;
              a3[3] = 0LL;
            }

            else
            {
              a3[3] = &type metadata for Double;
              *a3 = v21;
            }
          }

          else
          {
            swift_bridgeObjectRelease(a2);
            swift_bridgeObjectRetain(a2);
            Swift::String v9 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCountInLast1Day", 0x14uLL, 1);
            swift_bridgeObjectRetain(v9._object);
            char v20 = static String.== infix(_:_:)(v9._countAndFlagsBits, v9._object, a1, a2);
            swift_bridgeObjectRelease(v9._object);
            swift_bridgeObjectRelease(v9._object);
            if ((v20 & 1) != 0)
            {
              uint64_t result = swift_bridgeObjectRelease(a2);
              uint64_t v19 = *(void *)(v31 + 104);
              if ((*(_BYTE *)(v31 + 112) & 1) != 0)
              {
                *a3 = 0LL;
                a3[1] = 0LL;
                a3[2] = 0LL;
                a3[3] = 0LL;
              }

              else
              {
                a3[3] = &type metadata for Double;
                *a3 = v19;
              }
            }

            else
            {
              swift_bridgeObjectRelease(a2);
              swift_bridgeObjectRetain(a2);
              Swift::String v10 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCountInLast7Days", 0x15uLL, 1);
              swift_bridgeObjectRetain(v10._object);
              char v18 = static String.== infix(_:_:)(v10._countAndFlagsBits, v10._object, a1, a2);
              swift_bridgeObjectRelease(v10._object);
              swift_bridgeObjectRelease(v10._object);
              if ((v18 & 1) != 0)
              {
                uint64_t result = swift_bridgeObjectRelease(a2);
                uint64_t v17 = *(void *)(v31 + 120);
                if ((*(_BYTE *)(v31 + 128) & 1) != 0)
                {
                  *a3 = 0LL;
                  a3[1] = 0LL;
                  a3[2] = 0LL;
                  a3[3] = 0LL;
                }

                else
                {
                  a3[3] = &type metadata for Double;
                  *a3 = v17;
                }
              }

              else
              {
                swift_bridgeObjectRelease(a2);
                swift_bridgeObjectRetain(a2);
                Swift::String v11 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "usageCountInLast28Days",  0x16uLL,  1);
                swift_bridgeObjectRetain(v11._object);
                char v16 = static String.== infix(_:_:)(v11._countAndFlagsBits, v11._object, a1, a2);
                swift_bridgeObjectRelease(v11._object);
                swift_bridgeObjectRelease(v11._object);
                if ((v16 & 1) != 0)
                {
                  uint64_t result = swift_bridgeObjectRelease(a2);
                  uint64_t v15 = *(void *)(v31 + 136);
                  if ((*(_BYTE *)(v31 + 144) & 1) != 0)
                  {
                    *a3 = 0LL;
                    a3[1] = 0LL;
                    a3[2] = 0LL;
                    a3[3] = 0LL;
                  }

                  else
                  {
                    a3[3] = &type metadata for Double;
                    *a3 = v15;
                  }
                }

                else
                {
                  swift_bridgeObjectRelease(a2);
                  swift_bridgeObjectRetain(a2);
                  Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usedToday", 9uLL, 1);
                  swift_bridgeObjectRetain(v12._object);
                  char v14 = static String.== infix(_:_:)(v12._countAndFlagsBits, v12._object, a1, a2);
                  swift_bridgeObjectRelease(v12._object);
                  swift_bridgeObjectRelease(v12._object);
                  uint64_t result = swift_bridgeObjectRelease(a2);
                  if ((v14 & 1) != 0)
                  {
                    char v13 = *(_BYTE *)(v31 + 145);
                    a3[3] = &type metadata for Bool;
                    *(_BYTE *)a3 = v13 & 1;
                  }

                  else
                  {
                    *a3 = 0LL;
                    a3[1] = 0LL;
                    a3[2] = 0LL;
                    a3[3] = 0LL;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return result;
}

uint64_t sub_884BC(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(9LL, &type metadata for StaticString);
  *(void *)uint64_t v3 = "usageCount";
  *(void *)(v3 + sub_1D580(v0 + 8) = 10LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 16) = 2;
  *(void *)(v3 + swift_beginAccess(v1 + 24) = "usageCountInLast2Mins";
  *(void *)(v3 + 3sub_1B82C(v0 + 2) = 21LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 40) = 2;
  *(void *)(v3 + 4sub_1D580(v0 + 8) = "usageCountInLast10Mins";
  *(void *)(v3 + swift_beginAccess(v0 + 56) = 22LL;
  *(_BYTE *)(v3 + 6sub_1B82C(v0 + 4) = 2;
  *(void *)(v3 + 7sub_1B82C(v0 + 2) = "usageCountInLast1Hour";
  *(void *)(v3 + swift_beginAccess(v2 + 80) = 21LL;
  *(_BYTE *)(v3 + 8sub_1D580(v0 + 8) = 2;
  *(void *)(v3 + swift_beginAccess(v2 + 96) = "usageCountInLast6Hours";
  *(void *)(v3 + 10sub_1B82C(v0 + 4) = 22LL;
  *(_BYTE *)(v3 + swift_beginAccess(v2 + 112) = 2;
  *(void *)(v3 + 120) = "usageCountInLast1Day";
  *(void *)(v3 + 12sub_1D580(v0 + 8) = 20LL;
  *(_BYTE *)(v3 + 136) = 2;
  *(void *)(v3 + 14sub_1B82C(v0 + 4) = "usageCountInLast7Days";
  *(void *)(v3 + 15sub_1B82C(v0 + 2) = 21LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 160) = 2;
  *(void *)(v3 + 16sub_1D580(v0 + 8) = "usageCountInLast28Days";
  *(void *)(v3 + 176) = 22LL;
  *(_BYTE *)(v3 + 18sub_1B82C(v0 + 4) = 2;
  *(void *)(v3 + 19sub_1B82C(v0 + 2) = "usedToday";
  *(void *)(v3 + 200) = 9LL;
  *(_BYTE *)(v3 + 20sub_1D580(v0 + 8) = 2;
  sub_6648();
  rawValue = v2._rawValue;
  Swift::Int v8 = _findStringSwitchCase(cases:string:)(v2, v6);
  swift_bridgeObjectRelease(rawValue);
  switch(v8)
  {
    case 0LL:
      unsigned __int8 v9 = 0;
LABEL_20:
      swift_bridgeObjectRelease(v6._object);
      return v9;
    case 1LL:
      unsigned __int8 v9 = 1;
      goto LABEL_20;
    case 2LL:
      unsigned __int8 v9 = 2;
      goto LABEL_20;
    case 3LL:
      unsigned __int8 v9 = 3;
      goto LABEL_20;
    case 4LL:
      unsigned __int8 v9 = 4;
      goto LABEL_20;
    case 5LL:
      unsigned __int8 v9 = 5;
      goto LABEL_20;
    case 6LL:
      unsigned __int8 v9 = 6;
      goto LABEL_20;
    case 7LL:
      unsigned __int8 v9 = 7;
      goto LABEL_20;
    case 8LL:
      unsigned __int8 v9 = 8;
      goto LABEL_20;
  }

  swift_bridgeObjectRelease(v6._object);
  return 9;
}

uint64_t sub_887C4(uint64_t a1, void *a2)
{
  unsigned int v6 = sub_884BC(a1, a2);
  swift_bridgeObjectRelease(a2);
  else {
    return v6;
  }
}

uint64_t sub_8885C()
{
  return 9LL;
}

uint64_t sub_88874()
{
  return 0LL;
}

void sub_88890(char a1)
{
  __asm { BR              X8 }

uint64_t sub_888D0()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usageCount", 0xAuLL, 1)._countAndFlagsBits;
}

void sub_88A70(char a1)
{
}

uint64_t sub_88A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_88ADC();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_88ADC()
{
  uint64_t v2 = qword_D8E08;
  if (!qword_D8E08)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8314, &unk_D0598);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8E08);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_88B48(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_88ADC();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_88B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_88ADC();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_88BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_88ADC();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_88C0C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_884BC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_88C40(void *a1@<X8>)
{
  *a1 = v2;
  a1[1] = v3;
}

void sub_88C70()
{
}

uint64_t sub_88C88@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_887C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_88CB0()
{
  return sub_88874();
}

uint64_t sub_88CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_8885C();
  *a1 = result;
  return result;
}

uint64_t sub_88CF4(uint64_t a1)
{
  unint64_t v1 = sub_88D20();
  return CodingKey.description.getter(a1, v1);
}

unint64_t sub_88D20()
{
  uint64_t v2 = qword_D8E10;
  if (!qword_D8E10)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B82C4, &unk_D0598);
    atomic_store(WitnessTable, (unint64_t *)&qword_D8E10);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_88D8C(uint64_t a1)
{
  unint64_t v1 = sub_88D20();
  return CodingKey.debugDescription.getter(a1, v1);
}

uint64_t sub_88DB8()
{
  return v2;
}

uint64_t sub_88DE8()
{
  uint64_t v0 = sub_88DB8();
  return swift_deallocClassInstance(v0, 146LL, 7LL);
}

uint64_t sub_88E24(uint64_t a1)
{
  v24[27] = a1;
  uint64_t v45 = 0LL;
  uint64_t v44 = 0LL;
  uint64_t v31 = sub_5150(&qword_D9180);
  uint64_t v25 = *(void *)(v31 - 8);
  unint64_t v26 = (*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v29 = (char *)v24 - v26;
  uint64_t v45 = v3;
  uint64_t v44 = v1;
  uint64_t v27 = v3[3];
  uint64_t v28 = v3[4];
  sub_8C74(v3, v27);
  unint64_t v4 = sub_88D20();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&unk_D0598, &unk_D0598, v4, v27, v28);
  uint64_t v5 = v32;
  uint64_t v6 = *(void *)(v30 + 24);
  char v7 = *(_BYTE *)(v30 + 32);
  char v43 = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v6, v7 & 1, &v43, v31);
  uint64_t v33 = v5;
  uint64_t v34 = v5;
  if (v5)
  {
    v24[9] = v34;
  }

  else
  {
    uint64_t v8 = *(void *)(v30 + 40);
    char v9 = *(_BYTE *)(v30 + 48);
    char v42 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v8, v9 & 1, &v42, v31);
    v24[25] = 0LL;
    v24[26] = 0LL;
    uint64_t v10 = *(void *)(v30 + 56);
    char v11 = *(_BYTE *)(v30 + 64);
    char v41 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v10, v11 & 1, &v41, v31);
    v24[23] = 0LL;
    _BYTE v24[24] = 0LL;
    uint64_t v12 = *(void *)(v30 + 72);
    char v13 = *(_BYTE *)(v30 + 80);
    char v40 = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13 & 1, &v40, v31);
    v24[21] = 0LL;
    v24[22] = 0LL;
    uint64_t v14 = *(void *)(v30 + 88);
    char v15 = *(_BYTE *)(v30 + 96);
    char v39 = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v14, v15 & 1, &v39, v31);
    v24[19] = 0LL;
    v24[20] = 0LL;
    uint64_t v16 = *(void *)(v30 + 104);
    char v17 = *(_BYTE *)(v30 + 112);
    char v38 = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17 & 1, &v38, v31);
    v24[17] = 0LL;
    v24[18] = 0LL;
    uint64_t v18 = *(void *)(v30 + 120);
    char v19 = *(_BYTE *)(v30 + 128);
    char v37 = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v18, v19 & 1, &v37, v31);
    v24[15] = 0LL;
    v24[16] = 0LL;
    uint64_t v20 = *(void *)(v30 + 136);
    char v21 = *(_BYTE *)(v30 + 144);
    char v36 = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v20, v21 & 1, &v36, v31);
    v24[13] = 0LL;
    v24[14] = 0LL;
    char v22 = *(_BYTE *)(v30 + 145);
    char v35 = 8;
    KeyedEncodingContainer.encode(_:forKey:)(v22 & 1, &v35, v31);
    v24[11] = 0LL;
    v24[12] = 0LL;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v29, v31);
}

uint64_t sub_89360(void *a1)
{
  uint64_t v6 = sub_893EC(a1);
  if (v4) {
    return v3;
  }
  else {
    return v6;
  }
}

uint64_t sub_893EC(void *a1)
{
  uint32_t v93 = a1;
  uint64_t v113 = 0LL;
  uint64_t v112 = 0LL;
  uint64_t v94 = sub_5150(&qword_D9178);
  uint64_t v95 = *(void *)(v94 - 8);
  unint64_t v96 = (*(void *)(v95 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v2);
  uint64_t v97 = (char *)v52 - v96;
  uint64_t v113 = v3;
  uint64_t v112 = v1;
  __int16 v114 = 1;
  *(void *)(v1 + swift_beginAccess(v0 + 16) = 0LL;
  uint64_t v99 = v3[3];
  uint64_t v100 = v3[4];
  sub_8C74(v3, v99);
  unint64_t v4 = sub_88D20();
  uint64_t v5 = v98;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&unk_D0598, &unk_D0598, v4, v99, v100);
  uint64_t v101 = v5;
  uint64_t v102 = v5;
  if (v5)
  {
    uint64_t v56 = v102;
    uint64_t v55 = v102;
    if ((v114 & 0x3FF) == 0x3FF)
    {
      swift_release();
    }

    else
    {
      sub_8A0F8((id *)(v92 + 16));
      uint64_t v54 = v92;
      uint64_t v53 = v92;
      uint64_t v51 = type metadata accessor for SocialConversationUsage();
      swift_deallocPartialClassInstance(v53, v51, 146LL, 7LL);
    }

    sub_4598(v93);
    return v52[1];
  }

  else
  {
    char v111 = 0;
    uint64_t v6 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v111, v94);
    uint64_t v88 = 0LL;
    uint64_t v89 = v6;
    int v90 = v7;
    uint64_t v91 = 0LL;
    uint64_t v8 = v94;
    uint64_t v9 = v92;
    char v10 = v90;
    __int16 v114 = 3;
    *(void *)(v92 + swift_beginAccess(v1 + 24) = v6;
    *(_BYTE *)(v9 + 3sub_1B82C(v0 + 2) = v10 & 1;
    char v110 = 1;
    uint64_t v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v110, v8);
    uint64_t v84 = 0LL;
    uint64_t v85 = v11;
    int v86 = v12;
    uint64_t v87 = 0LL;
    uint64_t v13 = v94;
    uint64_t v14 = v92;
    char v15 = v86;
    __int16 v114 = 7;
    *(void *)(v92 + swift_beginAccess(v0 + 40) = v11;
    *(_BYTE *)(v14 + 4sub_1D580(v0 + 8) = v15 & 1;
    char v109 = 2;
    uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v109, v13);
    uint64_t v80 = 0LL;
    uint64_t v81 = v16;
    int v82 = v17;
    uint64_t v83 = 0LL;
    uint64_t v18 = v94;
    uint64_t v19 = v92;
    char v20 = v82;
    __int16 v114 = 15;
    *(void *)(v92 + swift_beginAccess(v0 + 56) = v16;
    *(_BYTE *)(v19 + 6sub_1B82C(v0 + 4) = v20 & 1;
    char v108 = 3;
    uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v108, v18);
    uint64_t v76 = 0LL;
    uint64_t v77 = v21;
    int v78 = v22;
    uint64_t v79 = 0LL;
    uint64_t v23 = v94;
    uint64_t v24 = v92;
    char v25 = v78;
    __int16 v114 = 31;
    *(void *)(v92 + 7sub_1B82C(v0 + 2) = v21;
    *(_BYTE *)(v24 + swift_beginAccess(v2 + 80) = v25 & 1;
    char v107 = 4;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v107, v23);
    uint64_t v72 = 0LL;
    uint64_t v73 = v26;
    int v74 = v27;
    uint64_t v75 = 0LL;
    uint64_t v28 = v94;
    uint64_t v29 = v92;
    char v30 = v74;
    __int16 v114 = 63;
    *(void *)(v92 + 8sub_1D580(v0 + 8) = v26;
    *(_BYTE *)(v29 + swift_beginAccess(v2 + 96) = v30 & 1;
    char v106 = 5;
    uint64_t v31 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v106, v28);
    uint64_t v68 = 0LL;
    uint64_t v69 = v31;
    int v70 = v32;
    uint64_t v71 = 0LL;
    uint64_t v33 = v94;
    uint64_t v34 = v92;
    char v35 = v70;
    __int16 v114 = 127;
    *(void *)(v92 + 10sub_1B82C(v0 + 4) = v31;
    *(_BYTE *)(v34 + swift_beginAccess(v2 + 112) = v35 & 1;
    char v105 = 6;
    uint64_t v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v105, v33);
    uint64_t v64 = 0LL;
    uint64_t v65 = v36;
    int v66 = v37;
    uint64_t v67 = 0LL;
    uint64_t v38 = v94;
    uint64_t v39 = v92;
    char v40 = v66;
    __int16 v114 = 255;
    *(void *)(v92 + 120) = v36;
    *(_BYTE *)(v39 + 12sub_1D580(v0 + 8) = v40 & 1;
    char v104 = 7;
    uint64_t v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v104, v38);
    uint64_t v60 = 0LL;
    uint64_t v61 = v41;
    int v62 = v42;
    uint64_t v63 = 0LL;
    uint64_t v43 = v94;
    uint64_t v44 = v92;
    char v45 = v62;
    __int16 v114 = 511;
    *(void *)(v92 + 136) = v41;
    *(_BYTE *)(v44 + 14sub_1B82C(v0 + 4) = v45 & 1;
    char v103 = 8;
    int v46 = KeyedDecodingContainer.decode(_:forKey:)(&v103, v43);
    uint64_t v57 = 0LL;
    int v58 = v46;
    uint64_t v59 = 0LL;
    uint64_t v47 = v94;
    uint64_t v48 = v97;
    uint64_t v49 = v95;
    __int16 v114 = 1023;
    *(_BYTE *)(v92 + 14sub_1B82C(v0 + 5) = v58 & 1;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v47);
    sub_4598(v93);
    return v92;
  }

uint64_t sub_89C50()
{
  return CATType.toDictionary.getter();
}

uint64_t sub_89C64()
{
  return sub_87510();
}

uint64_t sub_89C78()
{
  return sub_8754C() & 1;
}

void *sub_89C90()
{
  return sub_87568();
}

void sub_89CB0(void *a1)
{
}

void (*sub_89CD0(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = sub_285CC();
  return sub_89D28;
}

void sub_89D28(void **a1, char a2)
{
  double v2 = (void (**)(void *, uint64_t))*a1;
  if ((a2 & 1) != 0) {
    v2[4](v2, 1LL);
  }
  else {
    v2[4](v2, 0LL);
  }
  free(v2);
}

uint64_t sub_89D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_87C64(a1, a2, a3);
}

void *type metadata accessor for SocialConversationUsage.CodingKeys()
{
  return &unk_D0598;
}

unint64_t sub_89DBC()
{
  return sub_89DD0();
}

unint64_t sub_89DD0()
{
  uint64_t v2 = qword_D9150;
  if (!qword_D9150)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B81E4, &unk_D0598);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9150);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_89E3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_89360(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_89E98(uint64_t a1)
{
  return sub_88E24(a1);
}

unint64_t sub_89EF0()
{
  return sub_89F04();
}

unint64_t sub_89F04()
{
  uint64_t v3 = qword_D9158;
  if (!qword_D9158)
  {
    uint64_t v0 = type metadata accessor for SocialConversationUsage();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8234, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9158);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_89F74()
{
  return sub_89F88();
}

unint64_t sub_89F88()
{
  uint64_t v3 = qword_D9160;
  if (!qword_D9160)
  {
    uint64_t v0 = type metadata accessor for SocialConversationUsage();
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B820C, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9160);
    return WitnessTable;
  }

  return v3;
}

unint64_t sub_89FF8()
{
  return sub_8A00C();
}

unint64_t sub_8A00C()
{
  uint64_t v2 = qword_D9168;
  if (!qword_D9168)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8154, &unk_D0598);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9168);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_8A078()
{
  return sub_8A08C();
}

unint64_t sub_8A08C()
{
  uint64_t v2 = qword_D9170;
  if (!qword_D9170)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B817C, &unk_D0598);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9170);
    return WitnessTable;
  }

  return v2;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_8A0F8( id *a1)
{
}

Swift::String *sub_8A120()
{
  return sub_94CD8();
}

uint64_t sub_8A158(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(9LL, &type metadata for StaticString);
  *(void *)uint64_t v3 = "taskAttributeName";
  *(void *)(v3 + sub_1D580(v0 + 8) = 17LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 16) = 2;
  *(void *)(v3 + swift_beginAccess(v1 + 24) = "entityName";
  *(void *)(v3 + 3sub_1B82C(v0 + 2) = 10LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 40) = 2;
  *(void *)(v3 + 4sub_1D580(v0 + 8) = "verb";
  *(void *)(v3 + swift_beginAccess(v0 + 56) = 4LL;
  *(_BYTE *)(v3 + 6sub_1B82C(v0 + 4) = 2;
  *(void *)(v3 + 7sub_1B82C(v0 + 2) = "name";
  *(void *)(v3 + swift_beginAccess(v2 + 80) = 4LL;
  *(_BYTE *)(v3 + 8sub_1D580(v0 + 8) = 2;
  *(void *)(v3 + swift_beginAccess(v2 + 96) = "vocNodeName";
  *(void *)(v3 + 10sub_1B82C(v0 + 4) = 11LL;
  *(_BYTE *)(v3 + swift_beginAccess(v2 + 112) = 2;
  *(void *)(v3 + 120) = "vocSemanticCategory";
  *(void *)(v3 + 12sub_1D580(v0 + 8) = 19LL;
  *(_BYTE *)(v3 + 136) = 2;
  *(void *)(v3 + 14sub_1B82C(v0 + 4) = "searchQualifierDefinedValue";
  *(void *)(v3 + 15sub_1B82C(v0 + 2) = 27LL;
  *(_BYTE *)(v3 + swift_beginAccess(v0 + 160) = 2;
  *(void *)(v3 + 16sub_1D580(v0 + 8) = "similarityQualifierDefinedValue";
  *(void *)(v3 + 176) = 31LL;
  *(_BYTE *)(v3 + 18sub_1B82C(v0 + 4) = 2;
  *(void *)(v3 + 19sub_1B82C(v0 + 2) = "userProperty";
  *(void *)(v3 + 200) = 12LL;
  *(_BYTE *)(v3 + 20sub_1D580(v0 + 8) = 2;
  sub_6648();
  rawValue = v2._rawValue;
  Swift::Int v8 = _findStringSwitchCase(cases:string:)(v2, v6);
  swift_bridgeObjectRelease(rawValue);
  switch(v8)
  {
    case 0LL:
      unsigned __int8 v9 = 0;
LABEL_20:
      swift_bridgeObjectRelease(v6._object);
      return v9;
    case 1LL:
      unsigned __int8 v9 = 1;
      goto LABEL_20;
    case 2LL:
      unsigned __int8 v9 = 2;
      goto LABEL_20;
    case 3LL:
      unsigned __int8 v9 = 3;
      goto LABEL_20;
    case 4LL:
      unsigned __int8 v9 = 4;
      goto LABEL_20;
    case 5LL:
      unsigned __int8 v9 = 5;
      goto LABEL_20;
    case 6LL:
      unsigned __int8 v9 = 6;
      goto LABEL_20;
    case 7LL:
      unsigned __int8 v9 = 7;
      goto LABEL_20;
    case 8LL:
      unsigned __int8 v9 = 8;
      goto LABEL_20;
  }

  swift_bridgeObjectRelease(v6._object);
  return 9;
}

void sub_8A468(char a1)
{
  __asm { BR              X8 }

uint64_t sub_8A4A8()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("taskAttributeName", 0x11uLL, 1)._countAndFlagsBits;
}

uint64_t sub_8A648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_8A690();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

unint64_t sub_8A690()
{
  uint64_t v2 = qword_D9188;
  if (!qword_D9188)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B846C, &unk_D1A80);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9188);
    return WitnessTable;
  }

  return v2;
}

uint64_t sub_8A6FC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_8A690();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_8A738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_8A690();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_8A77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_8A690();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_8A7C0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_8A158(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_8A7F4(void *a1@<X8>)
{
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_8A824(uint64_t a1, uint64_t a2)
{
  uint64_t v1757 = a1;
  uint64_t v1756 = a2;
  uint64_t v1705 = &unk_D91B8;
  uint64_t v1798 = *v2;
  v2086 = 0LL;
  v2085 = 0LL;
  v2084 = 0LL;
  uint64_t v2083 = 0LL;
  uint64_t v2082 = 0LL;
  uint64_t v2081 = 0LL;
  uint64_t v1706 = 0LL;
  memset(__b, 0, 0x28uLL);
  uint64_t v2068 = 0LL;
  uint64_t v2069 = 0LL;
  uint64_t v2067 = 0LL;
  uint64_t v2051 = 0LL;
  uint64_t v2032 = 0LL;
  uint64_t v2033 = 0LL;
  uint64_t v2029 = 0LL;
  uint64_t v2026 = 0LL;
  uint64_t v2022 = 0LL;
  uint64_t v2023 = 0LL;
  uint64_t v1995 = 0LL;
  uint64_t v1996 = 0LL;
  uint64_t v1992 = 0LL;
  uint64_t v1989 = 0LL;
  uint64_t v1986 = 0LL;
  uint64_t v1982 = 0LL;
  uint64_t v1983 = 0LL;
  uint64_t v1953 = 0LL;
  uint64_t v1954 = 0LL;
  uint64_t v1950 = 0LL;
  uint64_t v1947 = 0LL;
  uint64_t v1943 = 0LL;
  uint64_t v1944 = 0LL;
  uint64_t v1915 = 0LL;
  uint64_t v1916 = 0LL;
  uint64_t v1907 = 0LL;
  uint64_t v1902 = 0LL;
  v1901 = 0LL;
  uint64_t v1878 = 0LL;
  uint64_t v1848 = 0LL;
  uint64_t v1849 = 0LL;
  unint64_t v1707 = (*(void *)(*(void *)(sub_5150(&qword_D8888) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v3);
  uint64_t v1708 = (uint64_t *)((char *)&v842 - v1707);
  uint64_t v1748 = 0LL;
  uint64_t v1709 = type metadata accessor for Siri_Nlu_External_UsoGraph(0LL);
  uint64_t v1710 = *(void *)(v1709 - 8);
  unint64_t v1711 = (*(void *)(v1710 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v5 = __chkstk_darwin(v4);
  uint64_t v1712 = (char *)&v842 - v1711;
  unint64_t v1713 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v7 = __chkstk_darwin(v5);
  uint64_t v1714 = (char *)&v842 - v1713;
  uint64_t v1715 = type metadata accessor for Siri_Nlu_External_UserStatedTask(v7);
  uint64_t v1716 = *(void *)(v1715 - 8);
  unint64_t v1717 = (*(void *)(v1716 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  v1718 = (char *)&v842 - v1717;
  unint64_t v1719 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v1720 = (char *)&v842 - v1719;
  uint64_t v1721 = sub_5150(&qword_D9190);
  uint64_t v1722 = *(void *)(v1721 - 8);
  unint64_t v1723 = (*(void *)(v1722 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v11);
  uint64_t v1724 = (char *)&v842 - v1723;
  unint64_t v1725 = (*(void *)(*(void *)(sub_5150(&qword_D9198) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v12);
  uint64_t v1726 = (uint64_t)&v842 - v1725;
  uint64_t v1727 = sub_5150(&qword_D91A0);
  uint64_t v1728 = *(void *)(v1727 - 8);
  unint64_t v1729 = (*(void *)(v1728 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v13);
  v1730 = (char *)&v842 - v1729;
  v2086 = (char *)&v842 - v1729;
  unint64_t v1731 = (*(void *)(*(void *)(sub_5150(&qword_D8B80) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v14);
  uint64_t v1732 = (char *)&v842 - v1731;
  uint64_t v1733 = type metadata accessor for Siri_Nlu_External_UserParse(v15);
  uint64_t v1734 = *(void *)(v1733 - 8);
  unint64_t v1735 = (*(void *)(v1734 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v16);
  uint64_t v1736 = (char *)&v842 - v1735;
  uint64_t v1737 = type metadata accessor for Siri_Nlu_External_UserDialogAct(v17);
  uint64_t v1738 = *(void *)(v1737 - 8);
  uint64_t v1739 = *(void *)(v1738 + 64);
  unint64_t v1740 = (v1739 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v19 = __chkstk_darwin(v18);
  uint64_t v1741 = (char *)&v842 - v1740;
  unint64_t v1742 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v19);
  uint64_t v1743 = (char *)&v842 - v1742;
  v2085 = (char *)&v842 - v1742;
  uint64_t v1744 = type metadata accessor for Parse(v21);
  uint64_t v1745 = *(void *)(v1744 - 8);
  unint64_t v1746 = (*(void *)(v1745 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v22);
  uint64_t v1747 = (char *)&v842 - v1746;
  uint64_t v1749 = type metadata accessor for USOParse(v23);
  uint64_t v1750 = *(void *)(v1749 - 8);
  uint64_t v1751 = *(void *)(v1750 + 64);
  unint64_t v1752 = (v1751 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v25 = __chkstk_darwin(v24);
  uint64_t v1753 = (char *)&v842 - v1752;
  unint64_t v1754 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v25);
  v1755 = (char *)&v842 - v1754;
  v2084 = (char *)&v842 - v1754;
  uint64_t v1796 = type metadata accessor for Logger(v27);
  uint64_t v1795 = *(void **)(v1796 - 8);
  uint64_t v1791 = v1795[8];
  unint64_t v1758 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v29 = __chkstk_darwin(v28);
  uint64_t v1759 = (char *)&v842 - v1758;
  unint64_t v1760 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v30 = __chkstk_darwin(v29);
  v1761 = (char *)&v842 - v1760;
  unint64_t v1762 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v31 = __chkstk_darwin(v30);
  uint64_t v1763 = (char *)&v842 - v1762;
  unint64_t v1764 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v32 = __chkstk_darwin(v31);
  uint64_t v1765 = (char *)&v842 - v1764;
  unint64_t v1766 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v33 = __chkstk_darwin(v32);
  uint64_t v1767 = (char *)&v842 - v1766;
  unint64_t v1768 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v34 = __chkstk_darwin(v33);
  uint64_t v1769 = (char *)&v842 - v1768;
  unint64_t v1770 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v35 = __chkstk_darwin(v34);
  uint64_t v1771 = (char *)&v842 - v1770;
  unint64_t v1772 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v36 = __chkstk_darwin(v35);
  uint64_t v1773 = (char *)&v842 - v1772;
  unint64_t v1774 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v37 = __chkstk_darwin(v36);
  uint64_t v1775 = (char *)&v842 - v1774;
  unint64_t v1776 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v38 = __chkstk_darwin(v37);
  uint64_t v1777 = (char *)&v842 - v1776;
  unint64_t v1778 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v39 = __chkstk_darwin(v38);
  v1779 = (char *)&v842 - v1778;
  unint64_t v1780 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v40 = __chkstk_darwin(v39);
  uint64_t v1781 = (char *)&v842 - v1780;
  unint64_t v1782 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v41 = __chkstk_darwin(v40);
  v1783 = (char *)&v842 - v1782;
  unint64_t v1784 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v42 = __chkstk_darwin(v41);
  uint64_t v1785 = (char *)&v842 - v1784;
  unint64_t v1786 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v43 = __chkstk_darwin(v42);
  uint64_t v1787 = (char *)&v842 - v1786;
  unint64_t v1788 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v44 = __chkstk_darwin(v43);
  uint64_t v1789 = (char *)&v842 - v1788;
  unint64_t v1790 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v45 = __chkstk_darwin(v44);
  uint64_t v1792 = (char *)&v842 - v1790;
  unint64_t v1793 = (v1791 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v45);
  int v46 = (char *)&v842 - v1793;
  uint64_t v1794 = (char *)&v842 - v1793;
  uint64_t v2083 = v47;
  uint64_t v2082 = v48;
  uint64_t v2081 = v49;
  uint64_t v50 = sub_AD514();
  uint64_t v1797 = (void (*)(char *, uint64_t, uint64_t))v1795[2];
  v1797(v46, v50, v1796);
  uint64_t v1811 = 7LL;
  uint64_t v51 = swift_allocObject(&unk_D06D8, 24LL, 7LL);
  uint64_t v1804 = v51;
  *(void *)(v51 + swift_beginAccess(v0 + 16) = v1798;
  uint64_t v1822 = (os_log_s *)Logger.logObject.getter(v51);
  int v1823 = static os_log_type_t.debug.getter();
  uint64_t v1801 = &v2079;
  uint64_t v2079 = 22LL;
  unint64_t v1799 = sub_7788();
  unint64_t v1800 = sub_77F0();
  unint64_t v1802 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v2080, v1801, &type metadata for UInt32, &type metadata for Int, v1799, v1800, v1802);
  uint32_t v1803 = v2080;
  uint64_t v1808 = 17LL;
  uint64_t v52 = swift_allocObject(&unk_D0700, 17LL, v1811);
  uint64_t v53 = v1808;
  uint64_t v54 = v1811;
  uint64_t v1813 = v52;
  int v1807 = 32;
  *(_BYTE *)(v52 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v55 = swift_allocObject(&unk_D0728, v53, v54);
  uint64_t v56 = v1811;
  uint64_t v1814 = v55;
  int v1809 = 8;
  *(_BYTE *)(v55 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v1810 = 32LL;
  uint64_t v57 = swift_allocObject(&unk_D0750, 32LL, v56);
  uint64_t v58 = v1810;
  uint64_t v59 = v1811;
  uint64_t v60 = v57;
  uint64_t v61 = v1804;
  uint64_t v1805 = v60;
  *(void *)(v60 + swift_beginAccess(v0 + 16) = sub_1CD2C;
  *(void *)(v60 + swift_beginAccess(v1 + 24) = v61;
  uint64_t v62 = swift_allocObject(&unk_D0778, v58, v59);
  uint64_t v63 = v1810;
  uint64_t v64 = v1811;
  uint64_t v65 = v62;
  uint64_t v66 = v1805;
  uint64_t v1806 = v65;
  *(void *)(v65 + swift_beginAccess(v0 + 16) = sub_1CEFC;
  *(void *)(v65 + swift_beginAccess(v1 + 24) = v66;
  uint64_t v67 = swift_allocObject(&unk_D07A0, v63, v64);
  uint64_t v68 = v1808;
  uint64_t v69 = v1811;
  uint64_t v70 = v67;
  uint64_t v71 = v1806;
  uint64_t v1815 = v70;
  *(void *)(v70 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v70 + swift_beginAccess(v1 + 24) = v71;
  uint64_t v72 = swift_allocObject(&unk_D07C8, v68, v69);
  uint64_t v73 = v1808;
  uint64_t v74 = v1811;
  uint64_t v1816 = v72;
  *(_BYTE *)(v72 + swift_beginAccess(v0 + 16) = v1807;
  uint64_t v75 = swift_allocObject(&unk_D07F0, v73, v74);
  uint64_t v76 = v1810;
  uint64_t v77 = v1811;
  uint64_t v1817 = v75;
  *(_BYTE *)(v75 + swift_beginAccess(v0 + 16) = v1809;
  uint64_t v78 = swift_allocObject(&unk_D0818, v76, v77);
  uint64_t v79 = v1810;
  uint64_t v80 = v1811;
  uint64_t v1812 = v78;
  *(void *)(v78 + swift_beginAccess(v0 + 16) = sub_940C4;
  *(void *)(v78 + swift_beginAccess(v1 + 24) = 0LL;
  uint64_t v81 = swift_allocObject(&unk_D0840, v79, v80);
  uint64_t v82 = v1812;
  uint64_t v1819 = v81;
  *(void *)(v81 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v81 + swift_beginAccess(v1 + 24) = v82;
  uint64_t v1821 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v1818 = _allocateUninitializedArray<A>(_:)(6LL, v1821);
  uint64_t v1820 = v83;
  swift_retain();
  uint64_t v84 = v1813;
  uint64_t v85 = v1820;
  *uint64_t v1820 = sub_884C;
  v85[1] = v84;
  swift_retain();
  uint64_t v86 = v1814;
  uint64_t v87 = v1820;
  v1820[2] = sub_884C;
  v87[3] = v86;
  swift_retain();
  uint64_t v88 = v1815;
  uint64_t v89 = v1820;
  v1820[4] = sub_8900;
  v89[5] = v88;
  swift_retain();
  uint64_t v90 = v1816;
  uint64_t v91 = v1820;
  v1820[6] = sub_884C;
  v91[7] = v90;
  swift_retain();
  uint64_t v92 = v1817;
  uint32_t v93 = v1820;
  v1820[8] = sub_884C;
  v93[9] = v92;
  swift_retain();
  uint64_t v94 = v1818;
  uint64_t v95 = v1819;
  unint64_t v96 = v1820;
  v1820[10] = sub_8900;
  v96[11] = v95;
  sub_6648();
  swift_bridgeObjectRelease(v94);
  if (os_log_type_enabled(v1822, (os_log_type_t)v1823))
  {
    uint64_t v97 = v1706;
    Swift::String v1697 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v1696 = sub_5150(&qword_D6B60);
    uint64_t v1698 = sub_74D0(0LL, v1696, v1696);
    uint64_t v1699 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v1701 = &v1828;
    v1828 = v1697;
    v1702 = &v1827;
    uint64_t v1827 = v1698;
    uint64_t v1703 = &v1826;
    uint64_t v1826 = v1699;
    unsigned int v1700 = 2;
    sub_7528(2LL, &v1828);
    sub_7528(v1700, v1701);
    Swift::String v1824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v1825 = v1813;
    sub_753C(&v1824, (uint64_t)v1701, (uint64_t)v1702, (uint64_t)v1703);
    uint64_t v1704 = v97;
    if (v97)
    {
      __break(1u);
    }

    else
    {
      Swift::String v1824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v1825 = v1814;
      sub_753C(&v1824, (uint64_t)&v1828, (uint64_t)&v1827, (uint64_t)&v1826);
      uint64_t v1693 = 0LL;
      Swift::String v1824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v1825 = v1815;
      sub_753C(&v1824, (uint64_t)&v1828, (uint64_t)&v1827, (uint64_t)&v1826);
      uint64_t v1692 = 0LL;
      Swift::String v1824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v1825 = v1816;
      sub_753C(&v1824, (uint64_t)&v1828, (uint64_t)&v1827, (uint64_t)&v1826);
      uint64_t v1691 = 0LL;
      Swift::String v1824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v1825 = v1817;
      sub_753C(&v1824, (uint64_t)&v1828, (uint64_t)&v1827, (uint64_t)&v1826);
      uint64_t v1690 = 0LL;
      Swift::String v1824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v1825 = v1819;
      sub_753C(&v1824, (uint64_t)&v1828, (uint64_t)&v1827, (uint64_t)&v1826);
      uint64_t v1689 = 0LL;
      _os_log_impl(&dword_0, v1822, (os_log_type_t)v1823, "%s.%s", v1697, v1803);
      sub_7580(v1698, 0LL);
      sub_7580(v1699, 2LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v1694 = v1689;
    }
  }

  else
  {
    uint64_t v98 = v1706;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v1694 = v98;
  }

  uint64_t v1687 = v1694;

  uint64_t v1688 = (uint64_t (*)(char *, uint64_t))v1795[1];
  uint64_t v99 = v1688(v1794, v1796);
  Input.parse.getter(v99);
  if ((*(unsigned int (**)(char *, uint64_t))(v1745 + 88))(v1747, v1744) != enum case for Parse.uso(_:))
  {
    uint64_t v833 = v1759;
    (*(void (**)(char *, uint64_t))(v1745 + 8))(v1747, v1744);
    uint64_t v834 = sub_AD514();
    uint64_t v835 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1797)(v833, v834, v1796);
    uint64_t v859 = (os_log_s *)Logger.logObject.getter(v835);
    int v858 = static os_log_type_t.debug.getter();
    uint64_t v2077 = 2LL;
    UnsignedInteger<>.init<A>(_:)( &v2078,  &v2077,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
    uint32_t v857 = v2078;
    uint64_t v860 = _allocateUninitializedArray<A>(_:)(0LL, v1821);
    if (os_log_type_enabled(v859, (os_log_type_t)v858))
    {
      uint64_t v836 = v1687;
      uint64_t v847 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
      uint64_t v845 = sub_5150(&qword_D6B60);
      uint64_t v846 = 0LL;
      uint64_t v848 = sub_74D0(0LL, v845, v845);
      uint64_t v849 = sub_74D0(v846, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v853 = &v2076;
      v2076 = v847;
      uint64_t v854 = &v2075;
      uint64_t v2075 = v848;
      uint64_t v851 = &v2074;
      uint64_t v2074 = v849;
      unsigned int v850 = 0;
      sub_7528(0LL, &v2076);
      sub_7528(v850, v853);
      uint64_t __b[5] = v860;
      uint64_t v852 = &v842;
      __chkstk_darwin(v837);
      uint64_t v838 = v854;
      uint64_t v839 = &v842 - 6;
      uint64_t v855 = &v842 - 6;
      v839[2] = (uint64_t)v853;
      v839[3] = (uint64_t)v838;
      v839[4] = v840;
      uint64_t v856 = sub_5150(&qword_D6B78);
      unint64_t v841 = sub_8CF4();
      Sequence.forEach(_:)(sub_8CC8, v855, v856, v841);
      if (v836)
      {
        __break(1u);
      }

      else
      {
        _os_log_impl(&dword_0, v859, (os_log_type_t)v858, "Not a USO Parse... will not process", v847, v857);
        uint64_t v844 = 0LL;
        sub_7580(v848, 0LL);
        sub_7580(v849, v844);
        UnsafeMutablePointer.deallocate()();
        swift_bridgeObjectRelease(v860);
      }
    }

    else
    {
      swift_bridgeObjectRelease(v860);
    }

    v1688(v1759, v1796);
    uint64_t v914 = v1748;
    uint64_t v915 = (uint64_t)v1748;
    return (uint64_t)v914;
  }

  (*(void (**)(char *, uint64_t))(v1745 + 96))(v1747, v1744);
  uint64_t v1684 = *(void (**)(char *, char *, uint64_t))(v1750 + 32);
  v1684(v1755, v1747, v1749);
  swift_bridgeObjectRetain(v1756);
  uint64_t v100 = sub_5150(&qword_D7368);
  uint64_t v1685 = &v2087;
  Dictionary.makeIterator()(v1756, &type metadata for String, v100, &protocol witness table for String);
  memcpy(__b, v1685, 0x28uLL);
  for (uint64_t i = v1687; ; uint64_t i = v977)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
                while (1)
                {
                  while (1)
                  {
                    uint64_t v1680 = i;
                    uint64_t v101 = sub_5150(&qword_D91A8);
                    uint64_t v102 = Dictionary.Iterator.next()(v101);
                    uint64_t v1681 = v2070;
                    uint64_t v1682 = v2071;
                    uint64_t v1683 = v2072;
                    if (!v2071)
                    {
                      sub_41E98(__b);
                      (*(void (**)(char *, uint64_t))(v1750 + 8))(v1755, v1749);
                      uint64_t v914 = v1748;
                      uint64_t v915 = (uint64_t)v1748;
                      return (uint64_t)v914;
                    }

                    uint64_t v1677 = v1681;
                    uint64_t v1678 = v1682;
                    uint64_t v1679 = v1683;
                    uint64_t v1671 = v1683;
                    uint64_t v1672 = v1682;
                    uint64_t v1673 = v1681;
                    uint64_t v2068 = v1681;
                    uint64_t v2069 = v1682;
                    uint64_t v2067 = v1683;
                    uint64_t v103 = USOParse.userParse.getter(v102);
                    uint64_t v1674 = Siri_Nlu_External_UserParse.userDialogActs.getter(v103);
                    (*(void (**)(char *, uint64_t))(v1734 + 8))(v1736, v1733);
                    swift_bridgeObjectRetain(v1674);
                    uint64_t v1676 = &v2066;
                    uint64_t v2066 = v1674;
                    uint64_t v1675 = sub_5150(&qword_D7430);
                    unint64_t v104 = sub_1C2C8();
                    Collection.first.getter(v1732, v1675, v104);
                    sub_1B82C(v1676);
                    uint64_t v805 = v1761;
                    sub_83F10((uint64_t)v1732);
                    swift_bridgeObjectRelease(v1674);
                    uint64_t v806 = sub_AD514();
                    v1797(v805, v806, v1796);
                    (*(void (**)(char *, char *, uint64_t))(v1750 + 16))(v1753, v1755, v1749);
                    uint64_t v807 = *(unsigned __int8 *)(v1750 + 80);
                    uint64_t v873 = (v807 + 16) & ~v807;
                    uint64_t v877 = 7LL;
                    uint64_t v878 = swift_allocObject(&unk_D0868, v873 + v1751, v807 | 7);
                    uint64_t v808 = ((uint64_t (*)(uint64_t, char *, uint64_t))v1684)(v878 + v873, v1753, v1749);
                    uint64_t v885 = (os_log_s *)Logger.logObject.getter(v808);
                    int v886 = static os_log_type_t.debug.getter();
                    uint64_t v2064 = 12LL;
                    UnsignedInteger<>.init<A>(_:)( &v2065,  &v2064,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
                    uint32_t v874 = v2065;
                    uint64_t v875 = 17LL;
                    uint64_t v809 = swift_allocObject(&unk_D0890, 17LL, v877);
                    uint64_t v810 = v875;
                    uint64_t v811 = v877;
                    uint64_t v880 = v809;
                    *(_BYTE *)(v809 + swift_beginAccess(v0 + 16) = 32;
                    uint64_t v812 = swift_allocObject(&unk_D08B8, v810, v811);
                    uint64_t v813 = v877;
                    uint64_t v881 = v812;
                    *(_BYTE *)(v812 + swift_beginAccess(v0 + 16) = 8;
                    uint64_t v876 = 32LL;
                    uint64_t v814 = swift_allocObject(&unk_D08E0, 32LL, v813);
                    uint64_t v815 = v876;
                    uint64_t v816 = v877;
                    uint64_t v817 = v814;
                    uint64_t v818 = v878;
                    uint64_t v879 = v817;
                    *(void *)(v817 + swift_beginAccess(v0 + 16) = sub_94F84;
                    *(void *)(v817 + swift_beginAccess(v1 + 24) = v818;
                    uint64_t v819 = swift_allocObject(&unk_D0908, v815, v816);
                    uint64_t v820 = v1821;
                    uint64_t v821 = v819;
                    uint64_t v822 = v879;
                    uint64_t v883 = v821;
                    *(void *)(v821 + swift_beginAccess(v0 + 16) = sub_88B8;
                    *(void *)(v821 + swift_beginAccess(v1 + 24) = v822;
                    uint64_t v882 = _allocateUninitializedArray<A>(_:)(3LL, v820);
                    BOOL v884 = v823;
                    swift_retain();
                    uint64_t v824 = v880;
                    uint64_t v825 = v884;
                    *BOOL v884 = sub_884C;
                    v825[1] = v824;
                    swift_retain();
                    uint64_t v826 = v881;
                    uint64_t v827 = v884;
                    v884[2] = sub_884C;
                    v827[3] = v826;
                    swift_retain();
                    uint64_t v828 = v882;
                    uint64_t v829 = v883;
                    uint64_t v830 = v884;
                    v884[4] = sub_8900;
                    v830[5] = v829;
                    sub_6648();
                    swift_bridgeObjectRelease(v828);
                    if (os_log_type_enabled(v885, (os_log_type_t)v886))
                    {
                      uint64_t v831 = v1680;
                      uint64_t v866 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
                      uint64_t v865 = sub_5150(&qword_D6B60);
                      uint64_t v867 = sub_74D0(0LL, v865, v865);
                      uint64_t v868 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                      uint64_t v869 = &v2063;
                      v2063 = v866;
                      unsigned int v870 = &v2062;
                      uint64_t v2062 = v867;
                      uint64_t v871 = &v2061;
                      uint64_t v2061 = v868;
                      sub_7528(2LL, &v2063);
                      sub_7528(1LL, v869);
                      v2059 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                      uint64_t v2060 = v880;
                      sub_753C(&v2059, (uint64_t)v869, (uint64_t)v870, (uint64_t)v871);
                      uint64_t v872 = v831;
                      if (v831)
                      {
                        __break(1u);
                      }

                      else
                      {
                        v2059 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                        uint64_t v2060 = v881;
                        sub_753C(&v2059, (uint64_t)&v2063, (uint64_t)&v2062, (uint64_t)&v2061);
                        uint64_t v863 = 0LL;
                        v2059 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                        uint64_t v2060 = v883;
                        sub_753C(&v2059, (uint64_t)&v2063, (uint64_t)&v2062, (uint64_t)&v2061);
                        uint64_t v862 = 0LL;
                        _os_log_impl( &dword_0,  v885,  (os_log_type_t)v886,  "Unable to get unique UDA from userParse. Will not parse: %s",  v866,  v874);
                        sub_7580(v867, 0LL);
                        sub_7580(v868, 1LL);
                        UnsafeMutablePointer.deallocate()();
                        swift_release();
                        swift_release();
                        swift_release();
                        uint64_t v864 = v862;
                      }
                    }

                    else
                    {
                      uint64_t v832 = v1680;
                      swift_release();
                      swift_release();
                      swift_release();
                      uint64_t v864 = v832;
                    }

                    uint64_t v861 = v864;

                    v1688(v1761, v1796);
                    swift_bridgeObjectRelease(v1671);
                    swift_bridgeObjectRelease(v1672);
                    uint64_t i = v861;
                  }

                  uint64_t v105 = v1680;
                  v1667 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v1738 + 32);
                  v1667((uint64_t)v1743, v1732, v1737);
                  swift_bridgeObjectRelease(v1674);
                  uint64_t v106 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(v1743);
                  uint64_t v1668 = v105;
                  uint64_t v1669 = v106;
                  uint64_t v1670 = v105;
                  if (v105)
                  {
                    uint64_t v842 = 0LL;
                    uint64_t v843 = 0LL;
                    swift_errorRelease(v1670);
                    uint64_t v1665 = v842;
                    uint64_t v1666 = v843;
                  }

                  else
                  {
                    uint64_t v1663 = v1669;
                    swift_bridgeObjectRetain(v1669);
                    uint64_t v1662 = &v1829;
                    uint64_t v1829 = v1663;
                    uint64_t v1661 = sub_5150(&qword_D8850);
                    unint64_t v107 = sub_71A6C();
                    Collection.first.getter(&v1830, v1661, v107);
                    sub_1B82C(v1662);
                    uint64_t v1664 = v1830;
                    swift_bridgeObjectRelease(v1663);
                    uint64_t v1665 = v1664;
                    uint64_t v1666 = v1668;
                  }

                  uint64_t v1659 = v1666;
                  uint64_t v1660 = v1665;
                  if (v1665) {
                    break;
                  }
                  uint64_t v777 = v1763;
                  uint64_t v778 = sub_AD514();
                  v1797(v777, v778, v1796);
                  (*(void (**)(char *, char *, uint64_t))(v1738 + 16))(v1741, v1743, v1737);
                  uint64_t v779 = *(unsigned __int8 *)(v1738 + 80);
                  uint64_t v899 = (v779 + 16) & ~v779;
                  uint64_t v903 = 7LL;
                  uint64_t v904 = swift_allocObject(&unk_D0930, v899 + v1739, v779 | 7);
                  uint64_t v780 = v1667(v904 + v899, v1741, v1737);
                  uint64_t v911 = (os_log_s *)Logger.logObject.getter(v780);
                  int v912 = static os_log_type_t.debug.getter();
                  uint64_t v2057 = 12LL;
                  UnsignedInteger<>.init<A>(_:)( &v2058,  &v2057,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
                  uint32_t v900 = v2058;
                  uint64_t v901 = 17LL;
                  uint64_t v781 = swift_allocObject(&unk_D0958, 17LL, v903);
                  uint64_t v782 = v901;
                  uint64_t v783 = v903;
                  uint64_t v906 = v781;
                  *(_BYTE *)(v781 + swift_beginAccess(v0 + 16) = 32;
                  uint64_t v784 = swift_allocObject(&unk_D0980, v782, v783);
                  uint64_t v785 = v903;
                  uint64_t v907 = v784;
                  *(_BYTE *)(v784 + swift_beginAccess(v0 + 16) = 8;
                  uint64_t v902 = 32LL;
                  uint64_t v786 = swift_allocObject(&unk_D09A8, 32LL, v785);
                  uint64_t v787 = v902;
                  uint64_t v788 = v903;
                  uint64_t v789 = v786;
                  uint64_t v790 = v904;
                  uint64_t v905 = v789;
                  *(void *)(v789 + swift_beginAccess(v0 + 16) = sub_7E2D4;
                  *(void *)(v789 + swift_beginAccess(v1 + 24) = v790;
                  uint64_t v791 = swift_allocObject(&unk_D09D0, v787, v788);
                  uint64_t v792 = v1821;
                  uint64_t v793 = v791;
                  uint64_t v794 = v905;
                  uint64_t v909 = v793;
                  *(void *)(v793 + swift_beginAccess(v0 + 16) = sub_88B8;
                  *(void *)(v793 + swift_beginAccess(v1 + 24) = v794;
                  uint64_t v908 = _allocateUninitializedArray<A>(_:)(3LL, v792);
                  uint64_t v910 = v795;
                  swift_retain();
                  uint64_t v796 = v906;
                  uint64_t v797 = v910;
                  *uint64_t v910 = sub_884C;
                  v797[1] = v796;
                  swift_retain();
                  uint64_t v798 = v907;
                  uint64_t v799 = v910;
                  v910[2] = sub_884C;
                  v799[3] = v798;
                  swift_retain();
                  uint64_t v800 = v908;
                  uint64_t v801 = v909;
                  BOOL v802 = v910;
                  v910[4] = sub_8900;
                  v802[5] = v801;
                  sub_6648();
                  swift_bridgeObjectRelease(v800);
                  if (os_log_type_enabled(v911, (os_log_type_t)v912))
                  {
                    uint64_t v803 = v1659;
                    uint64_t v892 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
                    uint64_t v891 = sub_5150(&qword_D6B60);
                    uint64_t v893 = sub_74D0(0LL, v891, v891);
                    uint64_t v894 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                    uint64_t v895 = &v2056;
                    v2056 = v892;
                    uint64_t v896 = &v2055;
                    uint64_t v2055 = v893;
                    uint64_t v897 = &v2054;
                    uint64_t v2054 = v894;
                    sub_7528(2LL, &v2056);
                    sub_7528(1LL, v895);
                    v2052 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v2053 = v906;
                    sub_753C(&v2052, (uint64_t)v895, (uint64_t)v896, (uint64_t)v897);
                    uint64_t v898 = v803;
                    if (v803)
                    {
                      __break(1u);
                    }

                    else
                    {
                      v2052 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                      uint64_t v2053 = v907;
                      sub_753C(&v2052, (uint64_t)&v2056, (uint64_t)&v2055, (uint64_t)&v2054);
                      uint64_t v889 = 0LL;
                      v2052 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                      uint64_t v2053 = v909;
                      sub_753C(&v2052, (uint64_t)&v2056, (uint64_t)&v2055, (uint64_t)&v2054);
                      uint64_t v888 = 0LL;
                      _os_log_impl( &dword_0,  v911,  (os_log_type_t)v912,  "No task in userDialogAct. Will not parse: %s",  v892,  v900);
                      sub_7580(v893, 0LL);
                      sub_7580(v894, 1LL);
                      UnsafeMutablePointer.deallocate()();
                      swift_release();
                      swift_release();
                      swift_release();
                      uint64_t v890 = v888;
                    }
                  }

                  else
                  {
                    uint64_t v804 = v1659;
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v890 = v804;
                  }

                  uint64_t v887 = v890;

                  v1688(v1763, v1796);
                  (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
                  swift_bridgeObjectRelease(v1671);
                  swift_bridgeObjectRelease(v1672);
                  uint64_t i = v887;
                }

                uint64_t v1658 = v1660;
                uint64_t v1656 = v1660;
                uint64_t v2051 = v1660;
                sub_8A468(2);
                uint64_t v1657 = v2049;
                v2049[0] = v108;
                v2049[1] = v109;
                Dictionary.subscript.getter(v2050);
                sub_8DD8((uint64_t)v1657);
                if (v2050[3])
                {
                  uint64_t v110 = swift_dynamicCast( v1831,  v2050,  (char *)&type metadata for Any + 8,  &type metadata for String,  6LL);
                  if ((v110 & 1) != 0)
                  {
                    uint64_t v1654 = v1831[0];
                    uint64_t v1655 = v1831[1];
                  }

                  else
                  {
                    uint64_t v1654 = 0LL;
                    uint64_t v1655 = 0LL;
                  }

                  uint64_t v1652 = v1654;
                  uint64_t v1653 = v1655;
                }

                else
                {
                  uint64_t v1581 = 0LL;
                  uint64_t v110 = (uint64_t)sub_1D580(v2050);
                  uint64_t v1652 = v1581;
                  uint64_t v1653 = v1581;
                }

                uint64_t v1650 = v1653;
                uint64_t v1651 = v1652;
                if (!v1653) {
                  break;
                }
                uint64_t v1648 = v1651;
                uint64_t v1649 = v1650;
                uint64_t v1644 = v1650;
                uint64_t v1643 = v1651;
                uint64_t v1848 = v1651;
                uint64_t v1849 = v1650;
                uint64_t v1642 = UsoTask.verbString.getter(v110);
                uint64_t v1645 = v111;
                swift_bridgeObjectRetain(v111);
                uint64_t v1846 = v1643;
                uint64_t v1847 = v1644;
                int v1646 = static String.== infix(_:_:)(v1642, v1645, v1643, v1644);
                swift_bridgeObjectRelease(v1645);
                swift_bridgeObjectRelease(v1645);
                if ((v1646 & 1) != 0)
                {
                  uint64_t v162 = v1789;
                  uint64_t v163 = sub_AD514();
                  v1797(v162, v163, v1796);
                  swift_bridgeObjectRetain(v1644);
                  uint64_t v1596 = 32LL;
                  uint64_t v1597 = 7LL;
                  uint64_t v164 = swift_allocObject(&unk_D17E0, 32LL, 7LL);
                  uint64_t v165 = v1644;
                  uint64_t v1598 = v164;
                  *(void *)(v164 + swift_beginAccess(v0 + 16) = v1643;
                  *(void *)(v164 + swift_beginAccess(v1 + 24) = v165;
                  v1605 = (os_log_s *)Logger.logObject.getter(v164);
                  int v1606 = static os_log_type_t.debug.getter();
                  uint64_t v1844 = 12LL;
                  UnsignedInteger<>.init<A>(_:)( &v1845,  &v1844,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
                  uint32_t v1594 = v1845;
                  uint64_t v1595 = 17LL;
                  uint64_t v166 = swift_allocObject(&unk_D1808, 17LL, v1597);
                  uint64_t v167 = v1595;
                  uint64_t v168 = v1597;
                  uint64_t v1600 = v166;
                  *(_BYTE *)(v166 + swift_beginAccess(v0 + 16) = 32;
                  uint64_t v169 = swift_allocObject(&unk_D1830, v167, v168);
                  uint64_t v170 = v1596;
                  uint64_t v171 = v1597;
                  uint64_t v1601 = v169;
                  *(_BYTE *)(v169 + swift_beginAccess(v0 + 16) = 8;
                  uint64_t v172 = swift_allocObject(&unk_D1858, v170, v171);
                  uint64_t v173 = v1596;
                  uint64_t v174 = v1597;
                  uint64_t v175 = v172;
                  uint64_t v176 = v1598;
                  uint64_t v1599 = v175;
                  *(void *)(v175 + swift_beginAccess(v0 + 16) = sub_1B890;
                  *(void *)(v175 + swift_beginAccess(v1 + 24) = v176;
                  uint64_t v177 = swift_allocObject(&unk_D1880, v173, v174);
                  uint64_t v178 = v1821;
                  uint64_t v179 = v177;
                  uint64_t v180 = v1599;
                  uint64_t v1603 = v179;
                  *(void *)(v179 + swift_beginAccess(v0 + 16) = sub_88B8;
                  *(void *)(v179 + swift_beginAccess(v1 + 24) = v180;
                  uint64_t v1602 = _allocateUninitializedArray<A>(_:)(3LL, v178);
                  v1604 = v181;
                  swift_retain();
                  uint64_t v182 = v1600;
                  uint64_t v183 = v1604;
                  void *v1604 = sub_884C;
                  v183[1] = v182;
                  swift_retain();
                  uint64_t v184 = v1601;
                  uint64_t v185 = v1604;
                  v1604[2] = sub_884C;
                  v185[3] = v184;
                  swift_retain();
                  uint64_t v186 = v1602;
                  uint64_t v187 = v1603;
                  uint64_t v188 = v1604;
                  v1604[4] = sub_8900;
                  v188[5] = v187;
                  sub_6648();
                  swift_bridgeObjectRelease(v186);
                  if (os_log_type_enabled(v1605, (os_log_type_t)v1606))
                  {
                    uint64_t v189 = v1659;
                    v1587 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
                    uint64_t v1586 = sub_5150(&qword_D6B60);
                    uint64_t v1588 = sub_74D0(0LL, v1586, v1586);
                    uint64_t v1589 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                    uint64_t v1590 = &v1843;
                    v1843 = v1587;
                    v1591 = &v1842;
                    uint64_t v1842 = v1588;
                    uint64_t v1592 = &v1841;
                    uint64_t v1841 = v1589;
                    sub_7528(2LL, &v1843);
                    sub_7528(1LL, v1590);
                    v1839 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1840 = v1600;
                    sub_753C(&v1839, (uint64_t)v1590, (uint64_t)v1591, (uint64_t)v1592);
                    uint64_t v1593 = v189;
                    if (v189)
                    {
                      __break(1u);
                    }

                    else
                    {
                      v1839 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                      uint64_t v1840 = v1601;
                      sub_753C(&v1839, (uint64_t)&v1843, (uint64_t)&v1842, (uint64_t)&v1841);
                      uint64_t v1584 = 0LL;
                      v1839 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                      uint64_t v1840 = v1603;
                      sub_753C(&v1839, (uint64_t)&v1843, (uint64_t)&v1842, (uint64_t)&v1841);
                      uint64_t v1583 = 0LL;
                      _os_log_impl(&dword_0, v1605, (os_log_type_t)v1606, "USO verb matched: %s", v1587, v1594);
                      sub_7580(v1588, 0LL);
                      sub_7580(v1589, 1LL);
                      UnsafeMutablePointer.deallocate()();
                      swift_release();
                      swift_release();
                      swift_release();
                      uint64_t v1585 = v1583;
                    }
                  }

                  else
                  {
                    uint64_t v190 = v1659;
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v1585 = v190;
                  }

                  uint64_t v1582 = v1585;

                  v1688(v1789, v1796);
                  swift_bridgeObjectRelease(v1644);
                  uint64_t v1647 = v1582;
                  goto LABEL_35;
                }

                uint64_t v112 = v1792;
                uint64_t v113 = sub_AD514();
                v1797(v112, v113, v1796);
                swift_retain();
                swift_bridgeObjectRetain(v1644);
                uint64_t v1628 = 32LL;
                uint64_t v1629 = 7LL;
                uint64_t v114 = swift_allocObject(&unk_D18A8, 32LL, 7LL);
                uint64_t v115 = v1644;
                uint64_t v1630 = v114;
                *(void *)(v114 + swift_beginAccess(v0 + 16) = v1643;
                *(void *)(v114 + swift_beginAccess(v1 + 24) = v115;
                v1640 = (os_log_s *)Logger.logObject.getter(v114);
                int v1641 = static os_log_type_t.debug.getter();
                uint64_t v1837 = 22LL;
                UnsignedInteger<>.init<A>(_:)( &v1838,  &v1837,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
                uint32_t v1623 = v1838;
                uint64_t v1626 = 17LL;
                uint64_t v116 = swift_allocObject(&unk_D18D0, 17LL, v1629);
                uint64_t v117 = v1626;
                uint64_t v118 = v1629;
                uint64_t v1632 = v116;
                int v1625 = 32;
                *(_BYTE *)(v116 + swift_beginAccess(v0 + 16) = 32;
                uint64_t v119 = swift_allocObject(&unk_D18F8, v117, v118);
                uint64_t v120 = v1628;
                uint64_t v121 = v1629;
                uint64_t v1633 = v119;
                int v1627 = 8;
                *(_BYTE *)(v119 + swift_beginAccess(v0 + 16) = 8;
                uint64_t v122 = swift_allocObject(&unk_D1920, v120, v121);
                uint64_t v123 = v1656;
                uint64_t v124 = v1628;
                uint64_t v125 = v1629;
                uint64_t v1624 = v122;
                *(void *)(v122 + swift_beginAccess(v0 + 16) = sub_96688;
                *(void *)(v122 + swift_beginAccess(v1 + 24) = v123;
                uint64_t v126 = swift_allocObject(&unk_D1948, v124, v125);
                uint64_t v127 = v1626;
                uint64_t v128 = v1629;
                uint64_t v129 = v126;
                uint64_t v130 = v1624;
                uint64_t v1634 = v129;
                *(void *)(v129 + swift_beginAccess(v0 + 16) = sub_88B8;
                *(void *)(v129 + swift_beginAccess(v1 + 24) = v130;
                uint64_t v131 = swift_allocObject(&unk_D1970, v127, v128);
                uint64_t v132 = v1626;
                uint64_t v133 = v1629;
                uint64_t v1635 = v131;
                *(_BYTE *)(v131 + swift_beginAccess(v0 + 16) = v1625;
                uint64_t v134 = swift_allocObject(&unk_D1998, v132, v133);
                uint64_t v135 = v1628;
                uint64_t v136 = v1629;
                uint64_t v1636 = v134;
                *(_BYTE *)(v134 + swift_beginAccess(v0 + 16) = v1627;
                uint64_t v137 = swift_allocObject(&unk_D19C0, v135, v136);
                uint64_t v138 = v1628;
                uint64_t v139 = v1629;
                uint64_t v140 = v137;
                uint64_t v141 = v1630;
                uint64_t v1631 = v140;
                *(void *)(v140 + swift_beginAccess(v0 + 16) = sub_1B890;
                *(void *)(v140 + swift_beginAccess(v1 + 24) = v141;
                uint64_t v142 = swift_allocObject(&unk_D19E8, v138, v139);
                uint64_t v143 = v1821;
                uint64_t v144 = v142;
                uint64_t v145 = v1631;
                uint64_t v1638 = v144;
                *(void *)(v144 + swift_beginAccess(v0 + 16) = sub_88B8;
                *(void *)(v144 + swift_beginAccess(v1 + 24) = v145;
                uint64_t v1637 = _allocateUninitializedArray<A>(_:)(6LL, v143);
                uint64_t v1639 = v146;
                swift_retain();
                uint64_t v147 = v1632;
                unint64_t v148 = v1639;
                *uint64_t v1639 = sub_884C;
                v148[1] = v147;
                swift_retain();
                uint64_t v149 = v1633;
                uint64_t v150 = v1639;
                v1639[2] = sub_884C;
                v150[3] = v149;
                swift_retain();
                uint64_t v151 = v1634;
                unint64_t v152 = v1639;
                v1639[4] = sub_8900;
                v152[5] = v151;
                swift_retain();
                uint64_t v153 = v1635;
                uint64_t v154 = v1639;
                v1639[6] = sub_884C;
                v154[7] = v153;
                swift_retain();
                uint64_t v155 = v1636;
                uint64_t v156 = v1639;
                v1639[8] = sub_884C;
                v156[9] = v155;
                swift_retain();
                uint64_t v157 = v1637;
                uint64_t v158 = v1638;
                uint64_t v159 = v1639;
                v1639[10] = sub_8900;
                v159[11] = v158;
                sub_6648();
                swift_bridgeObjectRelease(v157);
                if (os_log_type_enabled(v1640, (os_log_type_t)v1641))
                {
                  uint64_t v160 = v1659;
                  unint64_t v1615 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
                  uint64_t v1614 = sub_5150(&qword_D6B60);
                  uint64_t v1616 = sub_74D0(0LL, v1614, v1614);
                  uint64_t v1617 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                  unint64_t v1619 = &v1836;
                  v1836 = v1615;
                  v1620 = &v1835;
                  uint64_t v1835 = v1616;
                  unint64_t v1621 = &v1834;
                  uint64_t v1834 = v1617;
                  unsigned int v1618 = 2;
                  sub_7528(2LL, &v1836);
                  sub_7528(v1618, v1619);
                  v1832 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1833 = v1632;
                  sub_753C(&v1832, (uint64_t)v1619, (uint64_t)v1620, (uint64_t)v1621);
                  uint64_t v1622 = v160;
                  if (v160)
                  {
                    __break(1u);
                  }

                  else
                  {
                    v1832 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1833 = v1633;
                    sub_753C(&v1832, (uint64_t)&v1836, (uint64_t)&v1835, (uint64_t)&v1834);
                    uint64_t v1612 = 0LL;
                    v1832 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                    uint64_t v1833 = v1634;
                    sub_753C(&v1832, (uint64_t)&v1836, (uint64_t)&v1835, (uint64_t)&v1834);
                    uint64_t v1611 = 0LL;
                    v1832 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1833 = v1635;
                    sub_753C(&v1832, (uint64_t)&v1836, (uint64_t)&v1835, (uint64_t)&v1834);
                    uint64_t v1610 = 0LL;
                    v1832 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1833 = v1636;
                    sub_753C(&v1832, (uint64_t)&v1836, (uint64_t)&v1835, (uint64_t)&v1834);
                    uint64_t v1609 = 0LL;
                    v1832 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                    uint64_t v1833 = v1638;
                    sub_753C(&v1832, (uint64_t)&v1836, (uint64_t)&v1835, (uint64_t)&v1834);
                    uint64_t v1608 = 0LL;
                    _os_log_impl(&dword_0, v1640, (os_log_type_t)v1641, "USO verb match failed: %s vs %s", v1615, v1623);
                    sub_7580(v1616, 0LL);
                    sub_7580(v1617, 2LL);
                    UnsafeMutablePointer.deallocate()();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v1613 = v1608;
                  }
                }

                else
                {
                  uint64_t v161 = v1659;
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v1613 = v161;
                }

                uint64_t v1607 = v1613;

                v1688(v1792, v1796);
                swift_bridgeObjectRelease(v1644);
                swift_release();
                (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
                swift_bridgeObjectRelease(v1671);
                swift_bridgeObjectRelease(v1672);
                uint64_t i = v1607;
              }

              uint64_t v1647 = v1659;
LABEL_35:
              uint64_t v1579 = v1647;
              sub_8A468(1);
              int v1580 = v2047;
              v2047[0] = v191;
              v2047[1] = v192;
              Dictionary.subscript.getter(v2048);
              sub_8DD8((uint64_t)v1580);
              if (v2048[3])
              {
                if ((swift_dynamicCast( v1850,  v2048,  (char *)&type metadata for Any + 8,  &type metadata for String,  6LL) & 1) != 0)
                {
                  uint64_t v1577 = v1850[0];
                  uint64_t v1578 = v1850[1];
                }

                else
                {
                  uint64_t v1577 = 0LL;
                  uint64_t v1578 = 0LL;
                }

                uint64_t v1575 = v1577;
                uint64_t v1576 = v1578;
              }

              else
              {
                uint64_t v1355 = 0LL;
                sub_1D580(v2048);
                uint64_t v1575 = v1355;
                uint64_t v1576 = v1355;
              }

              uint64_t v1573 = v1576;
              uint64_t v1574 = v1575;
              if (!v1576)
              {
                uint64_t v1570 = v1579;
                goto LABEL_93;
              }

              uint64_t v1571 = v1574;
              uint64_t v1572 = v1573;
              uint64_t v1567 = v1573;
              uint64_t v1566 = v1574;
              uint64_t v1915 = v1574;
              uint64_t v1916 = v1573;
              uint64_t v1565 = UsoTask.baseEntityAsString.getter();
              uint64_t v1568 = v193;
              swift_bridgeObjectRetain(v193);
              uint64_t v1913 = v1566;
              uint64_t v1914 = v1567;
              int v1569 = static String.== infix(_:_:)(v1565, v1568, v1566, v1567);
              swift_bridgeObjectRelease(v1568);
              swift_bridgeObjectRelease(v1568);
              if ((v1569 & 1) != 0) {
                break;
              }
              uint64_t v194 = v1787;
              uint64_t v195 = sub_AD514();
              v1797(v194, v195, v1796);
              swift_retain();
              swift_bridgeObjectRetain(v1567);
              uint64_t v1551 = 32LL;
              uint64_t v1552 = 7LL;
              uint64_t v196 = swift_allocObject(&unk_D1678, 32LL, 7LL);
              uint64_t v197 = v1567;
              uint64_t v1553 = v196;
              *(void *)(v196 + swift_beginAccess(v0 + 16) = v1566;
              *(void *)(v196 + swift_beginAccess(v1 + 24) = v197;
              uint64_t v1563 = (os_log_s *)Logger.logObject.getter(v196);
              int v1564 = static os_log_type_t.debug.getter();
              uint64_t v1856 = 22LL;
              UnsignedInteger<>.init<A>(_:)( &v1857,  &v1856,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
              uint32_t v1546 = v1857;
              uint64_t v1549 = 17LL;
              uint64_t v198 = swift_allocObject(&unk_D16A0, 17LL, v1552);
              uint64_t v199 = v1549;
              uint64_t v200 = v1552;
              uint64_t v1555 = v198;
              int v1548 = 32;
              *(_BYTE *)(v198 + swift_beginAccess(v0 + 16) = 32;
              uint64_t v201 = swift_allocObject(&unk_D16C8, v199, v200);
              uint64_t v202 = v1551;
              uint64_t v203 = v1552;
              uint64_t v1556 = v201;
              int v1550 = 8;
              *(_BYTE *)(v201 + swift_beginAccess(v0 + 16) = 8;
              uint64_t v204 = swift_allocObject(&unk_D16F0, v202, v203);
              uint64_t v205 = v1656;
              uint64_t v206 = v1551;
              uint64_t v207 = v1552;
              uint64_t v1547 = v204;
              *(void *)(v204 + swift_beginAccess(v0 + 16) = sub_963B0;
              *(void *)(v204 + swift_beginAccess(v1 + 24) = v205;
              uint64_t v208 = swift_allocObject(&unk_D1718, v206, v207);
              uint64_t v209 = v1549;
              uint64_t v210 = v1552;
              uint64_t v211 = v208;
              uint64_t v212 = v1547;
              uint64_t v1557 = v211;
              *(void *)(v211 + swift_beginAccess(v0 + 16) = sub_88B8;
              *(void *)(v211 + swift_beginAccess(v1 + 24) = v212;
              uint64_t v213 = swift_allocObject(&unk_D1740, v209, v210);
              uint64_t v214 = v1549;
              uint64_t v215 = v1552;
              uint64_t v1558 = v213;
              *(_BYTE *)(v213 + swift_beginAccess(v0 + 16) = v1548;
              uint64_t v216 = swift_allocObject(&unk_D1768, v214, v215);
              uint64_t v217 = v1551;
              uint64_t v218 = v1552;
              uint64_t v1559 = v216;
              *(_BYTE *)(v216 + swift_beginAccess(v0 + 16) = v1550;
              uint64_t v219 = swift_allocObject(&unk_D1790, v217, v218);
              uint64_t v220 = v1551;
              uint64_t v221 = v1552;
              uint64_t v222 = v219;
              uint64_t v223 = v1553;
              uint64_t v1554 = v222;
              *(void *)(v222 + swift_beginAccess(v0 + 16) = sub_1B890;
              *(void *)(v222 + swift_beginAccess(v1 + 24) = v223;
              uint64_t v224 = swift_allocObject(&unk_D17B8, v220, v221);
              uint64_t v225 = v1821;
              uint64_t v226 = v224;
              uint64_t v227 = v1554;
              uint64_t v1561 = v226;
              *(void *)(v226 + swift_beginAccess(v0 + 16) = sub_88B8;
              *(void *)(v226 + swift_beginAccess(v1 + 24) = v227;
              uint64_t v1560 = _allocateUninitializedArray<A>(_:)(6LL, v225);
              uint64_t v1562 = v228;
              swift_retain();
              uint64_t v229 = v1555;
              int v230 = v1562;
              *uint64_t v1562 = sub_884C;
              v230[1] = v229;
              swift_retain();
              uint64_t v231 = v1556;
              id v232 = v1562;
              v1562[2] = sub_884C;
              v232[3] = v231;
              swift_retain();
              uint64_t v233 = v1557;
              uint64_t v234 = v1562;
              v1562[4] = sub_8900;
              v234[5] = v233;
              swift_retain();
              uint64_t v235 = v1558;
              uint64_t v236 = v1562;
              v1562[6] = sub_884C;
              v236[7] = v235;
              swift_retain();
              uint64_t v237 = v1559;
              uint64_t v238 = v1562;
              v1562[8] = sub_884C;
              v238[9] = v237;
              swift_retain();
              uint64_t v239 = v1560;
              uint64_t v240 = v1561;
              uint64_t v241 = v1562;
              v1562[10] = sub_8900;
              v241[11] = v240;
              sub_6648();
              swift_bridgeObjectRelease(v239);
              if (os_log_type_enabled(v1563, (os_log_type_t)v1564))
              {
                uint64_t v242 = v1579;
                int v1538 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
                uint64_t v1537 = sub_5150(&qword_D6B60);
                uint64_t v1539 = sub_74D0(0LL, v1537, v1537);
                uint64_t v1540 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                uint64_t v1542 = &v1855;
                v1855 = v1538;
                uint64_t v1543 = &v1854;
                uint64_t v1854 = v1539;
                uint64_t v1544 = &v1853;
                uint64_t v1853 = v1540;
                unsigned int v1541 = 2;
                sub_7528(2LL, &v1855);
                sub_7528(v1541, v1542);
                v1851 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1852 = v1555;
                sub_753C(&v1851, (uint64_t)v1542, (uint64_t)v1543, (uint64_t)v1544);
                uint64_t v1545 = v242;
                if (v242)
                {
                  __break(1u);
                }

                else
                {
                  v1851 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1852 = v1556;
                  sub_753C(&v1851, (uint64_t)&v1855, (uint64_t)&v1854, (uint64_t)&v1853);
                  uint64_t v1535 = 0LL;
                  v1851 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                  uint64_t v1852 = v1557;
                  sub_753C(&v1851, (uint64_t)&v1855, (uint64_t)&v1854, (uint64_t)&v1853);
                  uint64_t v1534 = 0LL;
                  v1851 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1852 = v1558;
                  sub_753C(&v1851, (uint64_t)&v1855, (uint64_t)&v1854, (uint64_t)&v1853);
                  uint64_t v1533 = 0LL;
                  v1851 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1852 = v1559;
                  sub_753C(&v1851, (uint64_t)&v1855, (uint64_t)&v1854, (uint64_t)&v1853);
                  uint64_t v1532 = 0LL;
                  v1851 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                  uint64_t v1852 = v1561;
                  sub_753C(&v1851, (uint64_t)&v1855, (uint64_t)&v1854, (uint64_t)&v1853);
                  uint64_t v1531 = 0LL;
                  _os_log_impl( &dword_0,  v1563,  (os_log_type_t)v1564,  "USO entityName match failed: %s vs %s",  v1538,  v1546);
                  sub_7580(v1539, 0LL);
                  sub_7580(v1540, 2LL);
                  UnsafeMutablePointer.deallocate()();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v1536 = v1531;
                }
              }

              else
              {
                uint64_t v243 = v1579;
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v1536 = v243;
              }

              uint64_t v1530 = v1536;

              v1688(v1787, v1796);
              swift_bridgeObjectRelease(v1567);
              swift_release();
              (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
              swift_bridgeObjectRelease(v1671);
              swift_bridgeObjectRelease(v1672);
              uint64_t i = v1530;
            }

            uint64_t v244 = v1785;
            uint64_t v245 = sub_AD514();
            v1797(v244, v245, v1796);
            swift_bridgeObjectRetain(v1567);
            uint64_t v1519 = 32LL;
            uint64_t v1520 = 7LL;
            uint64_t v246 = swift_allocObject(&unk_D12E0, 32LL, 7LL);
            uint64_t v247 = v1567;
            uint64_t v1521 = v246;
            *(void *)(v246 + swift_beginAccess(v0 + 16) = v1566;
            *(void *)(v246 + swift_beginAccess(v1 + 24) = v247;
            uint64_t v1528 = (os_log_s *)Logger.logObject.getter(v246);
            int v1529 = static os_log_type_t.debug.getter();
            uint64_t v1911 = 12LL;
            UnsignedInteger<>.init<A>(_:)( &v1912,  &v1911,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
            uint32_t v1517 = v1912;
            uint64_t v1518 = 17LL;
            uint64_t v248 = swift_allocObject(&unk_D1308, 17LL, v1520);
            uint64_t v249 = v1518;
            uint64_t v250 = v1520;
            uint64_t v1523 = v248;
            *(_BYTE *)(v248 + swift_beginAccess(v0 + 16) = 32;
            uint64_t v251 = swift_allocObject(&unk_D1330, v249, v250);
            uint64_t v252 = v1519;
            uint64_t v253 = v1520;
            uint64_t v1524 = v251;
            *(_BYTE *)(v251 + swift_beginAccess(v0 + 16) = 8;
            uint64_t v254 = swift_allocObject(&unk_D1358, v252, v253);
            uint64_t v255 = v1519;
            uint64_t v256 = v1520;
            uint64_t v257 = v254;
            uint64_t v258 = v1521;
            uint64_t v1522 = v257;
            *(void *)(v257 + swift_beginAccess(v0 + 16) = sub_1B890;
            *(void *)(v257 + swift_beginAccess(v1 + 24) = v258;
            uint64_t v259 = swift_allocObject(&unk_D1380, v255, v256);
            uint64_t v260 = v1821;
            uint64_t v261 = v259;
            uint64_t v262 = v1522;
            uint64_t v1526 = v261;
            *(void *)(v261 + swift_beginAccess(v0 + 16) = sub_88B8;
            *(void *)(v261 + swift_beginAccess(v1 + 24) = v262;
            uint64_t v1525 = _allocateUninitializedArray<A>(_:)(3LL, v260);
            uint64_t v1527 = v263;
            swift_retain();
            uint64_t v264 = v1523;
            uint64_t v265 = v1527;
            *uint64_t v1527 = sub_884C;
            v265[1] = v264;
            swift_retain();
            uint64_t v266 = v1524;
            uint64_t v267 = v1527;
            v1527[2] = sub_884C;
            void v267[3] = v266;
            swift_retain();
            uint64_t v268 = v1525;
            uint64_t v269 = v1526;
            uint64_t v270 = v1527;
            v1527[4] = sub_8900;
            v270[5] = v269;
            sub_6648();
            swift_bridgeObjectRelease(v268);
            if (os_log_type_enabled(v1528, (os_log_type_t)v1529))
            {
              uint64_t v271 = v1579;
              uint64_t v1510 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
              uint64_t v1509 = sub_5150(&qword_D6B60);
              uint64_t v1511 = sub_74D0(0LL, v1509, v1509);
              uint64_t v1512 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
              v1513 = &v1862;
              v1862 = v1510;
              uint64_t v1514 = &v1861;
              uint64_t v1861 = v1511;
              uint64_t v1515 = &v1860;
              uint64_t v1860 = v1512;
              sub_7528(2LL, &v1862);
              sub_7528(1LL, v1513);
              v1858 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v1859 = v1523;
              sub_753C(&v1858, (uint64_t)v1513, (uint64_t)v1514, (uint64_t)v1515);
              uint64_t v1516 = v271;
              if (v271)
              {
                __break(1u);
              }

              else
              {
                v1858 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1859 = v1524;
                sub_753C(&v1858, (uint64_t)&v1862, (uint64_t)&v1861, (uint64_t)&v1860);
                uint64_t v1507 = 0LL;
                v1858 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                uint64_t v1859 = v1526;
                sub_753C(&v1858, (uint64_t)&v1862, (uint64_t)&v1861, (uint64_t)&v1860);
                uint64_t v1506 = 0LL;
                _os_log_impl(&dword_0, v1528, (os_log_type_t)v1529, "USO entityName matched: %s", v1510, v1517);
                sub_7580(v1511, 0LL);
                sub_7580(v1512, 1LL);
                UnsafeMutablePointer.deallocate()();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v1508 = v1506;
              }
            }

            else
            {
              uint64_t v272 = v1579;
              swift_release();
              swift_release();
              swift_release();
              uint64_t v1508 = v272;
            }

            uint64_t v1504 = v1508;

            v1688(v1785, v1796);
            sub_8A468(5);
            uint64_t v1505 = v1908;
            v1908[0] = v273;
            v1908[1] = v274;
            Dictionary.subscript.getter(v1909);
            sub_8DD8((uint64_t)v1505);
            if (!v1909[3]) {
              break;
            }
            sub_41F14((uint64_t)v1909, (uint64_t)v1910);
            uint64_t v1500 = swift_allocObject(&unk_D13A8, 32LL, 7LL);
            uint64_t v1501 = v1500 + 16;
            uint64_t v1907 = v1500 + 16;
            sub_8A468(4);
            uint64_t v1502 = v1905;
            v1905[0] = v275;
            v1905[1] = v276;
            Dictionary.subscript.getter(v1906);
            sub_8DD8((uint64_t)v1502);
            if (v1906[3])
            {
              if ((swift_dynamicCast(v1501, v1906, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
              {
                uint64_t v277 = v1500;
                *(void *)(v1500 + swift_beginAccess(v0 + 16) = 0LL;
                *(void *)(v277 + swift_beginAccess(v1 + 24) = 0LL;
              }
            }

            else
            {
              sub_1D580(v1906);
              uint64_t v416 = v1500;
              *(void *)(v1500 + swift_beginAccess(v0 + 16) = 0LL;
              *(void *)(v416 + swift_beginAccess(v1 + 24) = 0LL;
            }

            uint64_t v1497 = &v1904;
            swift_beginAccess(v1501);
            uint64_t v1498 = *(void *)(v1500 + 16);
            uint64_t v1499 = *(void *)(v1500 + 24);
            swift_bridgeObjectRetain(v1499);
            swift_endAccess(v1497);
            v1903[0] = v1498;
            v1903[1] = v1499;
            BOOL v1496 = v1499 == 0;
            BOOL v1495 = v1496;
            sub_8DD8((uint64_t)v1903);
            if (v1495)
            {
              uint64_t v1874 = v1566;
              uint64_t v1875 = v1567;
              unsigned int v1494 = 1;
              Swift::String v278 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("/\\w+_(\\w)(\\w+)$/", 0x10uLL, 1);
              uint64_t countAndFlagsBits = v278._countAndFlagsBits;
              object = v278._object;
              uint64_t v1492 = sub_5150(&qword_D91C0);
              Regex.init(_regexString:version:)(countAndFlagsBits, object, 1LL, v1492);
              unint64_t v1493 = sub_29FC8();
              unint64_t v279 = sub_962CC();
              BidirectionalCollection<>.firstMatch<A, B>(of:)( v1724,  &type metadata for String,  v1492,  v1721,  v1493,  v279);
              (*(void (**)(char *, uint64_t))(v1722 + 8))(v1724, v1721);
              if ((*(unsigned int (**)(uint64_t, void, uint64_t))(v1728 + 48))(v1726, v1494, v1727) != 1)
              {
                (*(void (**)(char *, uint64_t, uint64_t))(v1728 + 32))(v1730, v1726, v1727);
                uint64_t KeyPath = swift_getKeyPath(&unk_B8350, v1695);
                Regex.Match.subscript.getter(v1867, KeyPath, v1727);
                uint64_t v1480 = v1867[3];
                Swift::String v1482 = Substring.lowercased()();
                swift_bridgeObjectRelease(v1480);
                swift_release();
                uint64_t v1486 = &v1866;
                Swift::String v1866 = v1482;
                uint64_t v1485 = swift_getKeyPath(&unk_B8370, v1695);
                Regex.Match.subscript.getter(v1865, v1485, v1727);
                v1484 = v1864;
                v1864[0] = v1865[0];
                v1864[1] = v1865[1];
                v1864[2] = v1865[2];
                v1864[3] = v1865[3];
                unint64_t v1483 = sub_38B7C();
                unint64_t v280 = sub_38B14();
                static RangeReplaceableCollection.+ infix<A>(_:_:)( v1868,  v1486,  v1484,  &type metadata for String,  &type metadata for Substring,  v1483,  v280);
                sub_38BE4((uint64_t)v1484);
                swift_release();
                sub_8DD8((uint64_t)v1486);
                uint64_t v1487 = v1868[0];
                uint64_t v1488 = v1868[1];
                v1489 = &v1863;
                swift_beginAccess(v1501);
                uint64_t v281 = v1500;
                uint64_t v282 = v1488;
                uint64_t v283 = *(void *)(v1500 + 24);
                *(void *)(v1500 + swift_beginAccess(v0 + 16) = v1487;
                *(void *)(v281 + swift_beginAccess(v1 + 24) = v282;
                swift_bridgeObjectRelease(v283);
                swift_endAccess(v1489);
                (*(void (**)(char *, uint64_t))(v1728 + 8))(v1730, v1727);
                goto LABEL_69;
              }

              __int128 v284 = v1783;
              sub_9633C(v1726);
              uint64_t v285 = sub_AD514();
              uint64_t v286 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1797)(v284, v285, v1796);
              uint64_t v1478 = (os_log_s *)Logger.logObject.getter(v286);
              int v1477 = static os_log_type_t.error.getter();
              uint64_t v1872 = 2LL;
              UnsignedInteger<>.init<A>(_:)( &v1873,  &v1872,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
              uint32_t v1476 = v1873;
              uint64_t v1479 = _allocateUninitializedArray<A>(_:)(0LL, v1821);
              if (os_log_type_enabled(v1478, (os_log_type_t)v1477))
              {
                uint64_t v287 = v1504;
                uint64_t v1465 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(2LL, &type metadata for UInt8);
                uint64_t v1463 = sub_5150(&qword_D6B60);
                uint64_t v1464 = 0LL;
                uint64_t v1466 = sub_74D0(0LL, v1463, v1463);
                uint64_t v1467 = sub_74D0(v1464, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                uint64_t v1471 = &v1871;
                v1871 = v1465;
                uint64_t v1472 = &v1870;
                uint64_t v1870 = v1466;
                uint64_t v1469 = &v1869;
                uint64_t v1869 = v1467;
                unsigned int v1468 = 0;
                sub_7528(0LL, &v1871);
                sub_7528(v1468, v1471);
                v1868[2] = v1479;
                v1470 = &v842;
                __chkstk_darwin(v288);
                uint64_t v289 = v1472;
                uint64_t v290 = &v842 - 6;
                uint64_t v1473 = &v842 - 6;
                v290[2] = (uint64_t)v1471;
                v290[3] = (uint64_t)v289;
                v290[4] = v291;
                uint64_t v1474 = sub_5150(&qword_D6B78);
                unint64_t v292 = sub_8CF4();
                Sequence.forEach(_:)(sub_8CC8, v1473, v1474, v292);
                uint64_t v1475 = v287;
                if (v287)
                {
                  __break(1u);
                }

                else
                {
                  _os_log_impl( &dword_0,  v1478,  (os_log_type_t)v1477,  "Unable to convert USO entity to VOC node name",  v1465,  v1476);
                  uint64_t v1461 = 0LL;
                  sub_7580(v1466, 0LL);
                  sub_7580(v1467, v1461);
                  UnsafeMutablePointer.deallocate()();
                  swift_bridgeObjectRelease(v1479);
                  uint64_t v1462 = v1475;
                }
              }

              else
              {
                swift_bridgeObjectRelease(v1479);
                uint64_t v1462 = v1504;
              }

              uint64_t v1460 = v1462;

              v1688(v1783, v1796);
              swift_release();
              sub_4598(v1910);
              swift_bridgeObjectRelease(v1567);
              swift_release();
              (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
              swift_bridgeObjectRelease(v1671);
              swift_bridgeObjectRelease(v1672);
              uint64_t i = v1460;
            }

            else
            {
LABEL_69:
              Builtin::Word v1455 = 0LL;
              uint64_t v293 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(0LL);
              uint64_t v1902 = Array.init()(v293);
              uint64_t v1457 = (Swift::String *)swift_allocObject(&unk_D13D0, 32LL, 7LL);
              uint64_t v1456 = v1457 + 1;
              v1901 = v1457 + 1;
              Swift::String v294 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", v1455, 1);
              v1457[1] = v294;
              uint64_t v1458 = v1900;
              sub_9C90((uint64_t)v1910, (uint64_t)v1900);
              uint64_t v1459 = sub_5150(&qword_D7350);
              if ((swift_dynamicCast(&v1899, v1458, (char *)&type metadata for Any + 8, v1459, 6LL) & 1) != 0)
              {
                swift_bridgeObjectRelease(v1899);
                int v1454 = 1;
              }

              else
              {
                int v1454 = 0;
              }

              if ((v1454 & 1) != 0)
              {
                uint64_t v295 = v1504;
                int v1442 = v1880;
                sub_9C90((uint64_t)v1910, (uint64_t)v1880);
                swift_dynamicCast(&v1879, v1442, (char *)&type metadata for Any + 8, v1459, 7LL);
                uint64_t v1449 = v1879;
                uint64_t v1878 = v1879;
                v1877[3] = v1879;
                Swift::String v1443 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(",", 1uLL, 1);
                unint64_t v296 = sub_1C950();
                uint64_t v1444 = BidirectionalCollection<>.joined(separator:)( v1443._countAndFlagsBits,  v1443._object,  v1459,  v296);
                uint64_t v1445 = v297;
                swift_bridgeObjectRelease(v1443._object);
                uint64_t v1446 = v1877;
                swift_beginAccess(v1456);
                __int128 v298 = v1445;
                uint64_t v299 = v1457;
                uint64_t v300 = v1457[1]._object;
                v1457[1]._uint64_t countAndFlagsBits = v1444;
                v299[1]._object = v298;
                swift_bridgeObjectRelease(v300);
                uint64_t v301 = swift_endAccess(v1446);
                uint64_t v302 = Siri_Nlu_External_UserDialogAct.userStatedTask.getter(v301);
                Siri_Nlu_External_UserStatedTask.task.getter(v302);
                uint64_t v303 = (*(uint64_t (**)(char *, uint64_t))(v1716 + 8))(v1720, v1715);
                uint64_t v1447 = Siri_Nlu_External_UsoGraph.identifiers.getter(v303);
                (*(void (**)(char *, uint64_t))(v1710 + 8))(v1714, v1709);
                uint64_t v1876 = v1447;
                swift_bridgeObjectRetain(v1449);
                uint64_t v1448 = &v842;
                __chkstk_darwin(v304);
                uint64_t v305 = &v842 - 4;
                uint64_t v1450 = &v842 - 4;
                v305[2] = v1449;
                v305[3] = v306;
                uint64_t v1451 = sub_5150(&qword_D88C8);
                unint64_t v307 = sub_7EEE8();
                uint64_t result = _ArrayProtocol.filter(_:)(sub_962A0, v1450, v1451, v307);
                uint64_t v1452 = v295;
                uint64_t v1453 = result;
                if (v295)
                {
                  __break(1u);
LABEL_299:
                  __break(1u);
                  return result;
                }

                uint64_t v1440 = v1453;
                swift_bridgeObjectRelease(v1449);
                uint64_t v309 = v1902;
                uint64_t v1902 = v1440;
                swift_bridgeObjectRelease(v309);
                swift_bridgeObjectRelease(v1449);
                uint64_t v1441 = 0LL;
              }

              else
              {
                uint64_t v310 = v1504;
                uint64_t v1430 = v1898;
                sub_9C90((uint64_t)v1910, (uint64_t)v1898);
                swift_dynamicCast(v1897, v1430, (char *)&type metadata for Any + 8, &type metadata for String, 7LL);
                uint64_t v1431 = v1897[0];
                uint64_t v1432 = (void *)v1897[1];
                uint64_t v1433 = &v1896;
                swift_beginAccess(v1456);
                uint64_t v311 = v1457;
                uint64_t v312 = v1432;
                uint64_t v313 = v1457[1]._object;
                v1457[1]._uint64_t countAndFlagsBits = v1431;
                v311[1]._object = v312;
                swift_bridgeObjectRelease(v313);
                uint64_t v314 = swift_endAccess(v1433);
                uint64_t v315 = Siri_Nlu_External_UserDialogAct.userStatedTask.getter(v314);
                Siri_Nlu_External_UserStatedTask.task.getter(v315);
                uint64_t v316 = (*(uint64_t (**)(char *, uint64_t))(v1716 + 8))(v1718, v1715);
                uint64_t v1434 = Siri_Nlu_External_UsoGraph.identifiers.getter(v316);
                double v317 = (*(double (**)(char *, uint64_t))(v1710 + 8))(v1712, v1709);
                v1895[1] = v1434;
                uint64_t v1435 = &v842;
                __chkstk_darwin(v317);
                uint64_t v318 = &v842 - 4;
                int v1436 = &v842 - 4;
                v318[2] = (uint64_t)v1456;
                v318[3] = v319;
                uint64_t v1437 = sub_5150(&qword_D88C8);
                unint64_t v320 = sub_7EEE8();
                uint64_t result = _ArrayProtocol.filter(_:)(sub_95F4C, v1436, v1437, v320);
                uint64_t v1438 = v310;
                uint64_t v1439 = result;
                if (v310) {
                  goto LABEL_299;
                }
                uint64_t v321 = v1902;
                uint64_t v1902 = v1439;
                swift_bridgeObjectRelease(v321);
                uint64_t v1441 = v1438;
              }

              uint64_t v1425 = v1441;
              uint64_t v1428 = v1902;
              swift_bridgeObjectRetain(v1902);
              swift_bridgeObjectRetain(v1428);
              uint64_t v1427 = v1895;
              v1895[0] = v1428;
              uint64_t v1426 = sub_5150(&qword_D88C8);
              sub_7EF58();
              int v1429 = Collection.isEmpty.getter(v1426);
              sub_1B82C(v1427);
              swift_bridgeObjectRelease(v1428);
              if ((v1429 & 1) == 0)
              {
                uint64_t v369 = v1779;
                uint64_t v370 = sub_AD514();
                v1797(v369, v370, v1796);
                swift_retain();
                uint64_t v371 = swift_retain();
                uint64_t v1389 = (os_log_s *)Logger.logObject.getter(v371);
                int v1390 = static os_log_type_t.debug.getter();
                uint64_t v1893 = 22LL;
                UnsignedInteger<>.init<A>(_:)( &v1894,  &v1893,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
                uint32_t v1373 = v1894;
                uint64_t v1376 = 17LL;
                uint64_t v1379 = 7LL;
                uint64_t v372 = swift_allocObject(&unk_D13F8, 17LL, 7LL);
                uint64_t v373 = v1376;
                uint64_t v374 = v1379;
                uint64_t v1381 = v372;
                int v1375 = 32;
                *(_BYTE *)(v372 + swift_beginAccess(v0 + 16) = 32;
                uint64_t v375 = swift_allocObject(&unk_D1420, v373, v374);
                uint64_t v376 = v1379;
                uint64_t v1382 = v375;
                int v1377 = 8;
                *(_BYTE *)(v375 + swift_beginAccess(v0 + 16) = 8;
                uint64_t v1378 = 32LL;
                uint64_t v377 = swift_allocObject(&unk_D1448, 32LL, v376);
                uint64_t v378 = v1500;
                uint64_t v379 = v1378;
                uint64_t v380 = v1379;
                uint64_t v1374 = v377;
                *(void *)(v377 + swift_beginAccess(v0 + 16) = sub_95F78;
                *(void *)(v377 + swift_beginAccess(v1 + 24) = v378;
                uint64_t v381 = swift_allocObject(&unk_D1470, v379, v380);
                uint64_t v382 = v1376;
                uint64_t v383 = v1379;
                uint64_t v384 = v381;
                uint64_t v385 = v1374;
                uint64_t v1383 = v384;
                *(void *)(v384 + swift_beginAccess(v0 + 16) = sub_88B8;
                *(void *)(v384 + swift_beginAccess(v1 + 24) = v385;
                uint64_t v386 = swift_allocObject(&unk_D1498, v382, v383);
                uint64_t v387 = v1376;
                uint64_t v388 = v1379;
                uint64_t v1384 = v386;
                *(_BYTE *)(v386 + swift_beginAccess(v0 + 16) = v1375;
                uint64_t v389 = swift_allocObject(&unk_D14C0, v387, v388);
                uint64_t v390 = v1378;
                uint64_t v391 = v1379;
                uint64_t v1385 = v389;
                *(_BYTE *)(v389 + swift_beginAccess(v0 + 16) = v1377;
                uint64_t v392 = swift_allocObject(&unk_D14E8, v390, v391);
                uint64_t v393 = v1457;
                uint64_t v394 = v1378;
                uint64_t v395 = v1379;
                uint64_t v1380 = v392;
                *(void *)(v392 + swift_beginAccess(v0 + 16) = sub_5EFBC;
                *(void *)(v392 + swift_beginAccess(v1 + 24) = v393;
                uint64_t v396 = swift_allocObject(&unk_D1510, v394, v395);
                uint64_t v397 = v1821;
                uint64_t v398 = v396;
                uint64_t v399 = v1380;
                uint64_t v1387 = v398;
                *(void *)(v398 + swift_beginAccess(v0 + 16) = sub_88B8;
                *(void *)(v398 + swift_beginAccess(v1 + 24) = v399;
                uint64_t v1386 = _allocateUninitializedArray<A>(_:)(6LL, v397);
                uint64_t v1388 = v400;
                swift_retain();
                uint64_t v401 = v1381;
                uint64_t v402 = v1388;
                *uint64_t v1388 = sub_884C;
                v402[1] = v401;
                swift_retain();
                uint64_t v403 = v1382;
                Swift::String v404 = v1388;
                v1388[2] = sub_884C;
                v404[3] = v403;
                swift_retain();
                uint64_t v405 = v1383;
                uint64_t v406 = v1388;
                v1388[4] = sub_8900;
                v406[5] = v405;
                swift_retain();
                uint64_t v407 = v1384;
                uint64_t v408 = v1388;
                v1388[6] = sub_884C;
                v408[7] = v407;
                swift_retain();
                uint64_t v409 = v1385;
                uint64_t v410 = v1388;
                v1388[8] = sub_884C;
                v410[9] = v409;
                swift_retain();
                uint64_t v411 = v1386;
                uint64_t v412 = v1387;
                uint64_t v413 = v1388;
                v1388[10] = sub_8900;
                v413[11] = v412;
                sub_6648();
                swift_bridgeObjectRelease(v411);
                if (os_log_type_enabled(v1389, (os_log_type_t)v1390))
                {
                  uint64_t v414 = v1425;
                  BOOL v1365 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
                  uint64_t v1364 = sub_5150(&qword_D6B60);
                  uint64_t v1366 = sub_74D0(0LL, v1364, v1364);
                  uint64_t v1367 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                  uint64_t v1369 = &v1892;
                  v1892 = v1365;
                  uint64_t v1370 = &v1891;
                  uint64_t v1891 = v1366;
                  v1371 = &v1890;
                  uint64_t v1890 = v1367;
                  unsigned int v1368 = 2;
                  sub_7528(2LL, &v1892);
                  sub_7528(v1368, v1369);
                  v1888 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1889 = v1381;
                  sub_753C(&v1888, (uint64_t)v1369, (uint64_t)v1370, (uint64_t)v1371);
                  uint64_t v1372 = v414;
                  if (v414)
                  {
                    __break(1u);
                  }

                  else
                  {
                    v1888 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1889 = v1382;
                    sub_753C(&v1888, (uint64_t)&v1892, (uint64_t)&v1891, (uint64_t)&v1890);
                    uint64_t v1362 = 0LL;
                    v1888 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                    uint64_t v1889 = v1383;
                    sub_753C(&v1888, (uint64_t)&v1892, (uint64_t)&v1891, (uint64_t)&v1890);
                    uint64_t v1361 = 0LL;
                    v1888 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1889 = v1384;
                    sub_753C(&v1888, (uint64_t)&v1892, (uint64_t)&v1891, (uint64_t)&v1890);
                    uint64_t v1360 = 0LL;
                    v1888 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                    uint64_t v1889 = v1385;
                    sub_753C(&v1888, (uint64_t)&v1892, (uint64_t)&v1891, (uint64_t)&v1890);
                    uint64_t v1359 = 0LL;
                    v1888 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                    uint64_t v1889 = v1387;
                    sub_753C(&v1888, (uint64_t)&v1892, (uint64_t)&v1891, (uint64_t)&v1890);
                    uint64_t v1358 = 0LL;
                    _os_log_impl( &dword_0,  v1389,  (os_log_type_t)v1390,  "VOC match for node: %s category: %s",  v1365,  v1373);
                    sub_7580(v1366, 0LL);
                    sub_7580(v1367, 2LL);
                    UnsafeMutablePointer.deallocate()();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    uint64_t v1363 = v1358;
                  }
                }

                else
                {
                  uint64_t v415 = v1425;
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v1363 = v415;
                }

                uint64_t v1357 = v1363;

                v1688(v1779, v1796);
                swift_release();
                sub_1B82C(&v1902);
                swift_release();
                sub_4598(v1910);
                uint64_t v1503 = v1357;
                goto LABEL_91;
              }

              uint64_t v322 = v1781;
              uint64_t v323 = sub_AD514();
              v1797(v322, v323, v1796);
              swift_retain();
              uint64_t v324 = swift_retain();
              uint64_t v1423 = (os_log_s *)Logger.logObject.getter(v324);
              int v1424 = static os_log_type_t.debug.getter();
              uint64_t v1886 = 22LL;
              UnsignedInteger<>.init<A>(_:)( &v1887,  &v1886,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
              uint32_t v1407 = v1887;
              uint64_t v1410 = 17LL;
              uint64_t v1413 = 7LL;
              uint64_t v325 = swift_allocObject(&unk_D1538, 17LL, 7LL);
              uint64_t v326 = v1410;
              uint64_t v327 = v1413;
              uint64_t v1415 = v325;
              int v1409 = 32;
              *(_BYTE *)(v325 + swift_beginAccess(v0 + 16) = 32;
              uint64_t v328 = swift_allocObject(&unk_D1560, v326, v327);
              uint64_t v329 = v1413;
              uint64_t v1416 = v328;
              int v1411 = 8;
              *(_BYTE *)(v328 + swift_beginAccess(v0 + 16) = 8;
              uint64_t v1412 = 32LL;
              uint64_t v330 = swift_allocObject(&unk_D1588, 32LL, v329);
              uint64_t v331 = v1500;
              uint64_t v332 = v1412;
              uint64_t v333 = v1413;
              uint64_t v1408 = v330;
              *(void *)(v330 + swift_beginAccess(v0 + 16) = sub_95F78;
              *(void *)(v330 + swift_beginAccess(v1 + 24) = v331;
              uint64_t v334 = swift_allocObject(&unk_D15B0, v332, v333);
              uint64_t v335 = v1410;
              uint64_t v336 = v1413;
              uint64_t v337 = v334;
              uint64_t v338 = v1408;
              uint64_t v1417 = v337;
              *(void *)(v337 + swift_beginAccess(v0 + 16) = sub_88B8;
              *(void *)(v337 + swift_beginAccess(v1 + 24) = v338;
              uint64_t v339 = swift_allocObject(&unk_D15D8, v335, v336);
              uint64_t v340 = v1410;
              uint64_t v341 = v1413;
              uint64_t v1418 = v339;
              *(_BYTE *)(v339 + swift_beginAccess(v0 + 16) = v1409;
              uint64_t v342 = swift_allocObject(&unk_D1600, v340, v341);
              uint64_t v343 = v1412;
              uint64_t v344 = v1413;
              uint64_t v1419 = v342;
              *(_BYTE *)(v342 + swift_beginAccess(v0 + 16) = v1411;
              uint64_t v345 = swift_allocObject(&unk_D1628, v343, v344);
              uint64_t v346 = v1457;
              uint64_t v347 = v1412;
              uint64_t v348 = v1413;
              uint64_t v1414 = v345;
              *(void *)(v345 + swift_beginAccess(v0 + 16) = sub_5EFBC;
              *(void *)(v345 + swift_beginAccess(v1 + 24) = v346;
              uint64_t v349 = swift_allocObject(&unk_D1650, v347, v348);
              uint64_t v350 = v1821;
              uint64_t v351 = v349;
              uint64_t v352 = v1414;
              uint64_t v1421 = v351;
              *(void *)(v351 + swift_beginAccess(v0 + 16) = sub_88B8;
              *(void *)(v351 + swift_beginAccess(v1 + 24) = v352;
              uint64_t v1420 = _allocateUninitializedArray<A>(_:)(6LL, v350);
              uint64_t v1422 = v353;
              swift_retain();
              uint64_t v354 = v1415;
              uint64_t v355 = v1422;
              *uint64_t v1422 = sub_884C;
              v355[1] = v354;
              swift_retain();
              uint64_t v356 = v1416;
              uint64_t v357 = v1422;
              v1422[2] = sub_884C;
              v357[3] = v356;
              swift_retain();
              uint64_t v358 = v1417;
              uint64_t v359 = v1422;
              v1422[4] = sub_8900;
              v359[5] = v358;
              swift_retain();
              uint64_t v360 = v1418;
              int v361 = v1422;
              v1422[6] = sub_884C;
              v361[7] = v360;
              swift_retain();
              uint64_t v362 = v1419;
              uint64_t v363 = v1422;
              v1422[8] = sub_884C;
              v363[9] = v362;
              swift_retain();
              uint64_t v364 = v1420;
              uint64_t v365 = v1421;
              uint64_t v366 = v1422;
              v1422[10] = sub_8900;
              v366[11] = v365;
              sub_6648();
              swift_bridgeObjectRelease(v364);
              if (os_log_type_enabled(v1423, (os_log_type_t)v1424))
              {
                uint64_t v367 = v1425;
                int v1399 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
                uint64_t v1398 = sub_5150(&qword_D6B60);
                uint64_t v1400 = sub_74D0(0LL, v1398, v1398);
                uint64_t v1401 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                uint64_t v1403 = &v1885;
                v1885 = v1399;
                int v1404 = &v1884;
                uint64_t v1884 = v1400;
                uint64_t v1405 = &v1883;
                uint64_t v1883 = v1401;
                unsigned int v1402 = 2;
                sub_7528(2LL, &v1885);
                sub_7528(v1402, v1403);
                v1881 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1882 = v1415;
                sub_753C(&v1881, (uint64_t)v1403, (uint64_t)v1404, (uint64_t)v1405);
                uint64_t v1406 = v367;
                if (v367)
                {
                  __break(1u);
                }

                else
                {
                  v1881 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1882 = v1416;
                  sub_753C(&v1881, (uint64_t)&v1885, (uint64_t)&v1884, (uint64_t)&v1883);
                  uint64_t v1396 = 0LL;
                  v1881 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                  uint64_t v1882 = v1417;
                  sub_753C(&v1881, (uint64_t)&v1885, (uint64_t)&v1884, (uint64_t)&v1883);
                  uint64_t v1395 = 0LL;
                  v1881 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1882 = v1418;
                  sub_753C(&v1881, (uint64_t)&v1885, (uint64_t)&v1884, (uint64_t)&v1883);
                  uint64_t v1394 = 0LL;
                  v1881 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1882 = v1419;
                  sub_753C(&v1881, (uint64_t)&v1885, (uint64_t)&v1884, (uint64_t)&v1883);
                  uint64_t v1393 = 0LL;
                  v1881 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                  uint64_t v1882 = v1421;
                  sub_753C(&v1881, (uint64_t)&v1885, (uint64_t)&v1884, (uint64_t)&v1883);
                  uint64_t v1392 = 0LL;
                  _os_log_impl( &dword_0,  v1423,  (os_log_type_t)v1424,  "No matching identifiers for VOC node: %s category: %s",  v1399,  v1407);
                  sub_7580(v1400, 0LL);
                  sub_7580(v1401, 2LL);
                  UnsafeMutablePointer.deallocate()();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v1397 = v1392;
                }
              }

              else
              {
                uint64_t v368 = v1425;
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v1397 = v368;
              }

              uint64_t v1391 = v1397;

              v1688(v1781, v1796);
              swift_release();
              sub_1B82C(&v1902);
              swift_release();
              sub_4598(v1910);
              swift_bridgeObjectRelease(v1567);
              swift_release();
              (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
              swift_bridgeObjectRelease(v1671);
              swift_bridgeObjectRelease(v1672);
              uint64_t i = v1391;
            }
          }

          sub_1D580(v1909);
          uint64_t v1503 = v1504;
LABEL_91:
          uint64_t v1356 = v1503;
          swift_bridgeObjectRelease(v1567);
          uint64_t v1570 = v1356;
LABEL_93:
          uint64_t v1353 = v1570;
          sub_8A468(3);
          uint64_t v1354 = v2045;
          v2045[0] = v417;
          v2045[1] = v418;
          Dictionary.subscript.getter(v2046);
          sub_8DD8((uint64_t)v1354);
          if (v2046[3])
          {
            uint64_t v419 = swift_dynamicCast(v1917, v2046, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
            if ((v419 & 1) != 0)
            {
              uint64_t v1351 = v1917[0];
              uint64_t v1352 = v1917[1];
            }

            else
            {
              uint64_t v1351 = 0LL;
              uint64_t v1352 = 0LL;
            }

            uint64_t v1349 = v1351;
            uint64_t v1350 = v1352;
          }

          else
          {
            uint64_t v1227 = 0LL;
            uint64_t v419 = (uint64_t)sub_1D580(v2046);
            uint64_t v1349 = v1227;
            uint64_t v1350 = v1227;
          }

          uint64_t v1347 = v1350;
          uint64_t v1348 = v1349;
          if (!v1350) {
            break;
          }
          uint64_t v1345 = v1348;
          uint64_t v1346 = v1347;
          uint64_t v1338 = v1347;
          uint64_t v1339 = v1348;
          uint64_t v1953 = v1348;
          uint64_t v1954 = v1347;
          uint64_t v1342 = UsoTask.arguments.getter(v419);
          Swift::String v420 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("reference", 9uLL, 1);
          uint64_t v1341 = &v1951;
          Swift::String v1951 = v420;
          uint64_t v1340 = sub_5150(&qword_D8860);
          Dictionary.subscript.getter(&v1952);
          sub_8DD8((uint64_t)v1341);
          uint64_t v1343 = v1952;
          uint64_t v421 = swift_bridgeObjectRelease(v1342);
          if (!v1343) {
            goto LABEL_140;
          }
          uint64_t v1337 = v1343;
          uint64_t v1335 = v1343;
          swift_bridgeObjectRetain(v1343);
          uint64_t v1334 = &v1918;
          uint64_t v1918 = v1335;
          unint64_t v422 = sub_71C8C();
          Collection.first.getter(&v1919, v1340, v422);
          sub_1B82C(v1334);
          uint64_t v1336 = v1919;
          uint64_t v421 = swift_bridgeObjectRelease(v1335);
          if (v1336)
          {
            uint64_t v1333 = v1336;
            uint64_t v1330 = v1336;
            uint64_t v1331 = dispatch thunk of UsoValue.getAsEntity()(v421);
            uint64_t v421 = swift_release();
            uint64_t v1332 = v1331;
          }

          else
          {
LABEL_140:
            uint64_t v1332 = 0LL;
          }

          uint64_t v1329 = v1332;
          if (v1332)
          {
            uint64_t v1328 = v1329;
            uint64_t v1324 = v1329;
            uint64_t v1950 = v1329;
            uint64_t v1326 = UsoEntity.attributes.getter(v421);
            Swift::String v423 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("type", 4uLL, 1);
            uint64_t v1325 = &v1948;
            Swift::String v1948 = v423;
            Dictionary.subscript.getter(&v1949);
            sub_8DD8((uint64_t)v1325);
            uint64_t v1327 = v1949;
            uint64_t v424 = swift_bridgeObjectRelease(v1326);
            if (!v1327) {
              goto LABEL_139;
            }
            uint64_t v1323 = v1327;
            uint64_t v1321 = v1327;
            swift_bridgeObjectRetain(v1327);
            uint64_t v1320 = &v1920;
            uint64_t v1920 = v1321;
            unint64_t v425 = sub_71C8C();
            Collection.first.getter(&v1921, v1340, v425);
            sub_1B82C(v1320);
            uint64_t v1322 = v1921;
            uint64_t v424 = swift_bridgeObjectRelease(v1321);
            if (v1322)
            {
              uint64_t v1319 = v1322;
              uint64_t v1316 = v1322;
              uint64_t v1317 = dispatch thunk of UsoValue.getAsEntity()(v424);
              uint64_t v424 = swift_release();
              uint64_t v1318 = v1317;
            }

            else
            {
LABEL_139:
              uint64_t v1318 = 0LL;
            }

            uint64_t v1315 = v1318;
            if (!v1318)
            {
              swift_release();
              goto LABEL_141;
            }

            uint64_t v1314 = v1315;
            uint64_t v1310 = v1315;
            uint64_t v1947 = v1315;
            uint64_t v1312 = UsoEntity.attributes.getter(v424);
            Swift::String v426 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("name", 4uLL, 1);
            uint64_t v1311 = &v1945;
            Swift::String v1945 = v426;
            Dictionary.subscript.getter(&v1946);
            sub_8DD8((uint64_t)v1311);
            uint64_t v1313 = v1946;
            swift_bridgeObjectRelease(v1312);
            if (v1313)
            {
              uint64_t v1309 = v1313;
              uint64_t v1307 = v1313;
              swift_bridgeObjectRetain(v1313);
              uint64_t v1306 = &v1923;
              uint64_t v1923 = v1307;
              unint64_t v427 = sub_71C8C();
              Collection.first.getter(&v1924, v1340, v427);
              sub_1B82C(v1306);
              uint64_t v1308 = v1924;
              uint64_t v428 = swift_bridgeObjectRelease(v1307);
              if (v1308)
              {
                uint64_t v1305 = v1308;
                uint64_t v1299 = v1308;
                uint64_t v1302 = dispatch thunk of UsoValue.getUsoIdentifiers()(v428);
                swift_release();
                swift_bridgeObjectRetain(v1302);
                int v1301 = &v1922;
                uint64_t v1922 = v1302;
                uint64_t v1300 = sub_5150(&qword_D8890);
                unint64_t v429 = sub_7E654();
                Collection.first.getter(v1708, v1300, v429);
                sub_1B82C(v1301);
                swift_bridgeObjectRelease(v1302);
                uint64_t v1303 = type metadata accessor for UsoIdentifier(0LL);
                uint64_t v1304 = *(void *)(v1303 - 8);
                if ((*(unsigned int (**)(void *, uint64_t))(v1304 + 48))(v1708, 1LL) != 1)
                {
                  uint64_t v1295 = UsoIdentifier.value.getter();
                  uint64_t v1296 = v431;
                  (*(void (**)(void *, uint64_t))(v1304 + 8))(v1708, v1303);
                  uint64_t v1297 = v1295;
                  uint64_t v1298 = v1296;
                  goto LABEL_128;
                }

                sub_7E6C4((uint64_t)v1708);
              }
            }

            uint64_t v1297 = 0LL;
            uint64_t v1298 = 0LL;
LABEL_128:
            uint64_t v1293 = v1298;
            uint64_t v1294 = v1297;
            if (!v1298)
            {
              swift_release();
              swift_release();
              goto LABEL_141;
            }

            uint64_t v1291 = v1294;
            uint64_t v1292 = v1293;
            uint64_t v1289 = v1293;
            uint64_t v1290 = v1294;
            uint64_t v1943 = v1294;
            uint64_t v1944 = v1293;
            uint64_t v1941 = v1294;
            uint64_t v1942 = v1293;
            uint64_t v1939 = v1339;
            uint64_t v1940 = v1338;
            char v432 = static String.== infix(_:_:)(v1294, v1293, v1339, v1338);
            if ((v432 & 1) != 0)
            {
              uint64_t v488 = v1775;
              uint64_t v489 = sub_AD514();
              v1797(v488, v489, v1796);
              swift_bridgeObjectRetain(v1289);
              uint64_t v1242 = 32LL;
              uint64_t v1243 = 7LL;
              uint64_t v490 = swift_allocObject(&unk_D1088, 32LL, 7LL);
              uint64_t v491 = v1289;
              uint64_t v1244 = v490;
              *(void *)(v490 + swift_beginAccess(v0 + 16) = v1290;
              *(void *)(v490 + swift_beginAccess(v1 + 24) = v491;
              uint64_t v1251 = (os_log_s *)Logger.logObject.getter(v490);
              int v1252 = static os_log_type_t.debug.getter();
              uint64_t v1937 = 12LL;
              UnsignedInteger<>.init<A>(_:)( &v1938,  &v1937,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
              uint32_t v1240 = v1938;
              uint64_t v1241 = 17LL;
              uint64_t v492 = swift_allocObject(&unk_D10B0, 17LL, v1243);
              uint64_t v493 = v1241;
              uint64_t v494 = v1243;
              uint64_t v1246 = v492;
              *(_BYTE *)(v492 + swift_beginAccess(v0 + 16) = 32;
              uint64_t v495 = swift_allocObject(&unk_D10D8, v493, v494);
              uint64_t v496 = v1242;
              uint64_t v497 = v1243;
              uint64_t v1247 = v495;
              *(_BYTE *)(v495 + swift_beginAccess(v0 + 16) = 8;
              uint64_t v498 = swift_allocObject(&unk_D1100, v496, v497);
              uint64_t v499 = v1242;
              uint64_t v500 = v1243;
              uint64_t v501 = v498;
              uint64_t v502 = v1244;
              uint64_t v1245 = v501;
              *(void *)(v501 + swift_beginAccess(v0 + 16) = sub_1B890;
              *(void *)(v501 + swift_beginAccess(v1 + 24) = v502;
              uint64_t v503 = swift_allocObject(&unk_D1128, v499, v500);
              uint64_t v504 = v1821;
              uint64_t v505 = v503;
              uint64_t v506 = v1245;
              uint64_t v1249 = v505;
              *(void *)(v505 + swift_beginAccess(v0 + 16) = sub_88B8;
              *(void *)(v505 + swift_beginAccess(v1 + 24) = v506;
              uint64_t v1248 = _allocateUninitializedArray<A>(_:)(3LL, v504);
              uint64_t v1250 = v507;
              swift_retain();
              uint64_t v508 = v1246;
              uint64_t v509 = v1250;
              *uint64_t v1250 = sub_884C;
              v509[1] = v508;
              swift_retain();
              uint64_t v510 = v1247;
              uint64_t v511 = v1250;
              v1250[2] = sub_884C;
              v511[3] = v510;
              swift_retain();
              uint64_t v512 = v1248;
              uint64_t v513 = v1249;
              uint64_t v514 = v1250;
              v1250[4] = sub_8900;
              v514[5] = v513;
              sub_6648();
              swift_bridgeObjectRelease(v512);
              if (os_log_type_enabled(v1251, (os_log_type_t)v1252))
              {
                uint64_t v515 = v1353;
                uint64_t v1233 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
                uint64_t v1232 = sub_5150(&qword_D6B60);
                uint64_t v1234 = sub_74D0(0LL, v1232, v1232);
                uint64_t v1235 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
                uint64_t v1236 = &v1936;
                v1936 = v1233;
                uint64_t v1237 = &v1935;
                uint64_t v1935 = v1234;
                uint64_t v1238 = &v1934;
                uint64_t v1934 = v1235;
                sub_7528(2LL, &v1936);
                sub_7528(1LL, v1236);
                v1932 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1933 = v1246;
                sub_753C(&v1932, (uint64_t)v1236, (uint64_t)v1237, (uint64_t)v1238);
                uint64_t v1239 = v515;
                if (v515)
                {
                  __break(1u);
                }

                else
                {
                  v1932 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                  uint64_t v1933 = v1247;
                  sub_753C(&v1932, (uint64_t)&v1936, (uint64_t)&v1935, (uint64_t)&v1934);
                  uint64_t v1230 = 0LL;
                  v1932 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                  uint64_t v1933 = v1249;
                  sub_753C(&v1932, (uint64_t)&v1936, (uint64_t)&v1935, (uint64_t)&v1934);
                  uint64_t v1229 = 0LL;
                  _os_log_impl(&dword_0, v1251, (os_log_type_t)v1252, "Name matched: %s", v1233, v1240);
                  sub_7580(v1234, 0LL);
                  sub_7580(v1235, 1LL);
                  UnsafeMutablePointer.deallocate()();
                  swift_release();
                  swift_release();
                  swift_release();
                  uint64_t v1231 = v1229;
                }
              }

              else
              {
                uint64_t v516 = v1353;
                swift_release();
                swift_release();
                swift_release();
                uint64_t v1231 = v516;
              }

              uint64_t v1228 = v1231;

              v1688(v1775, v1796);
              swift_bridgeObjectRelease(v1289);
              swift_release();
              swift_release();
              swift_bridgeObjectRelease(v1338);
              uint64_t v1344 = v1228;
              goto LABEL_149;
            }

            char v433 = v1777;
            uint64_t v434 = sub_AD514();
            v1797(v433, v434, v1796);
            swift_bridgeObjectRetain(v1338);
            uint64_t v1275 = 32LL;
            uint64_t v1276 = 7LL;
            uint64_t v435 = swift_allocObject(&unk_D1150, 32LL, 7LL);
            uint64_t v436 = v1338;
            uint64_t v437 = v435;
            uint64_t v438 = v1289;
            uint64_t v1270 = v437;
            *(void *)(v437 + swift_beginAccess(v0 + 16) = v1339;
            *(void *)(v437 + swift_beginAccess(v1 + 24) = v436;
            swift_bridgeObjectRetain(v438);
            uint64_t v439 = swift_allocObject(&unk_D1178, v1275, v1276);
            uint64_t v440 = v1289;
            uint64_t v1277 = v439;
            *(void *)(v439 + swift_beginAccess(v0 + 16) = v1290;
            *(void *)(v439 + swift_beginAccess(v1 + 24) = v440;
            uint64_t v1287 = (os_log_s *)Logger.logObject.getter(v439);
            int v1288 = static os_log_type_t.debug.getter();
            uint64_t v1930 = 22LL;
            UnsignedInteger<>.init<A>(_:)( &v1931,  &v1930,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
            uint32_t v1269 = v1931;
            uint64_t v1273 = 17LL;
            uint64_t v441 = swift_allocObject(&unk_D11A0, 17LL, v1276);
            uint64_t v442 = v1273;
            uint64_t v443 = v1276;
            uint64_t v1279 = v441;
            int v1272 = 32;
            *(_BYTE *)(v441 + swift_beginAccess(v0 + 16) = 32;
            uint64_t v444 = swift_allocObject(&unk_D11C8, v442, v443);
            uint64_t v445 = v1275;
            uint64_t v446 = v1276;
            uint64_t v1280 = v444;
            int v1274 = 8;
            *(_BYTE *)(v444 + swift_beginAccess(v0 + 16) = 8;
            uint64_t v447 = swift_allocObject(&unk_D11F0, v445, v446);
            uint64_t v448 = v1275;
            uint64_t v449 = v1276;
            uint64_t v450 = v447;
            uint64_t v451 = v1270;
            uint64_t v1271 = v450;
            *(void *)(v450 + swift_beginAccess(v0 + 16) = sub_1B890;
            *(void *)(v450 + swift_beginAccess(v1 + 24) = v451;
            uint64_t v452 = swift_allocObject(&unk_D1218, v448, v449);
            uint64_t v453 = v1273;
            uint64_t v454 = v1276;
            uint64_t v455 = v452;
            uint64_t v456 = v1271;
            uint64_t v1281 = v455;
            *(void *)(v455 + swift_beginAccess(v0 + 16) = sub_88B8;
            *(void *)(v455 + swift_beginAccess(v1 + 24) = v456;
            uint64_t v457 = swift_allocObject(&unk_D1240, v453, v454);
            uint64_t v458 = v1273;
            uint64_t v459 = v1276;
            uint64_t v1282 = v457;
            *(_BYTE *)(v457 + swift_beginAccess(v0 + 16) = v1272;
            uint64_t v460 = swift_allocObject(&unk_D1268, v458, v459);
            uint64_t v461 = v1275;
            uint64_t v462 = v1276;
            uint64_t v1283 = v460;
            *(_BYTE *)(v460 + swift_beginAccess(v0 + 16) = v1274;
            uint64_t v463 = swift_allocObject(&unk_D1290, v461, v462);
            uint64_t v464 = v1275;
            uint64_t v465 = v1276;
            uint64_t v466 = v463;
            uint64_t v467 = v1277;
            uint64_t v1278 = v466;
            *(void *)(v466 + swift_beginAccess(v0 + 16) = sub_1B890;
            *(void *)(v466 + swift_beginAccess(v1 + 24) = v467;
            uint64_t v468 = swift_allocObject(&unk_D12B8, v464, v465);
            uint64_t v469 = v1821;
            uint64_t v470 = v468;
            uint64_t v471 = v1278;
            uint64_t v1285 = v470;
            *(void *)(v470 + swift_beginAccess(v0 + 16) = sub_88B8;
            *(void *)(v470 + swift_beginAccess(v1 + 24) = v471;
            uint64_t v1284 = _allocateUninitializedArray<A>(_:)(6LL, v469);
            uint64_t v1286 = v472;
            swift_retain();
            uint64_t v473 = v1279;
            uint64_t v474 = v1286;
            *uint64_t v1286 = sub_884C;
            v474[1] = v473;
            swift_retain();
            uint64_t v475 = v1280;
            uint64_t v476 = v1286;
            v1286[2] = sub_884C;
            v476[3] = v475;
            swift_retain();
            uint64_t v477 = v1281;
            uint64_t v478 = v1286;
            v1286[4] = sub_8900;
            v478[5] = v477;
            swift_retain();
            uint64_t v479 = v1282;
            uint64_t v480 = v1286;
            v1286[6] = sub_884C;
            v480[7] = v479;
            swift_retain();
            uint64_t v481 = v1283;
            unint64_t v482 = v1286;
            v1286[8] = sub_884C;
            v482[9] = v481;
            swift_retain();
            uint64_t v483 = v1284;
            uint64_t v484 = v1285;
            uint64_t v485 = v1286;
            v1286[10] = sub_8900;
            v485[11] = v484;
            sub_6648();
            swift_bridgeObjectRelease(v483);
            if (os_log_type_enabled(v1287, (os_log_type_t)v1288))
            {
              uint64_t v486 = v1353;
              uint64_t v1261 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
              uint64_t v1260 = sub_5150(&qword_D6B60);
              uint64_t v1262 = sub_74D0(0LL, v1260, v1260);
              uint64_t v1263 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
              uint64_t v1265 = &v1929;
              v1929 = v1261;
              uint64_t v1266 = &v1928;
              uint64_t v1928 = v1262;
              uint64_t v1267 = &v1927;
              uint64_t v1927 = v1263;
              unsigned int v1264 = 2;
              sub_7528(2LL, &v1929);
              sub_7528(v1264, v1265);
              v1925 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v1926 = v1279;
              sub_753C(&v1925, (uint64_t)v1265, (uint64_t)v1266, (uint64_t)v1267);
              uint64_t v1268 = v486;
              if (v486)
              {
                __break(1u);
              }

              else
              {
                v1925 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1926 = v1280;
                sub_753C(&v1925, (uint64_t)&v1929, (uint64_t)&v1928, (uint64_t)&v1927);
                uint64_t v1258 = 0LL;
                v1925 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                uint64_t v1926 = v1281;
                sub_753C(&v1925, (uint64_t)&v1929, (uint64_t)&v1928, (uint64_t)&v1927);
                uint64_t v1257 = 0LL;
                v1925 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1926 = v1282;
                sub_753C(&v1925, (uint64_t)&v1929, (uint64_t)&v1928, (uint64_t)&v1927);
                uint64_t v1256 = 0LL;
                v1925 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1926 = v1283;
                sub_753C(&v1925, (uint64_t)&v1929, (uint64_t)&v1928, (uint64_t)&v1927);
                uint64_t v1255 = 0LL;
                v1925 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                uint64_t v1926 = v1285;
                sub_753C(&v1925, (uint64_t)&v1929, (uint64_t)&v1928, (uint64_t)&v1927);
                uint64_t v1254 = 0LL;
                _os_log_impl(&dword_0, v1287, (os_log_type_t)v1288, "Name does not match: %s vs %s", v1261, v1269);
                sub_7580(v1262, 0LL);
                sub_7580(v1263, 2LL);
                UnsafeMutablePointer.deallocate()();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v1259 = v1254;
              }
            }

            else
            {
              uint64_t v487 = v1353;
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v1259 = v487;
            }

            uint64_t v1253 = v1259;

            v1688(v1777, v1796);
            swift_bridgeObjectRelease(v1289);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease(v1338);
            swift_release();
            (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
            swift_bridgeObjectRelease(v1671);
            swift_bridgeObjectRelease(v1672);
            uint64_t i = v1253;
          }

          else
          {
LABEL_141:
            swift_bridgeObjectRelease(v1338);
            swift_release();
            (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
            swift_bridgeObjectRelease(v1671);
            swift_bridgeObjectRelease(v1672);
            uint64_t i = v1353;
          }
        }

        uint64_t v1344 = v1353;
LABEL_149:
        uint64_t v1225 = v1344;
        sub_8A468(7);
        uint64_t v1226 = v2043;
        v2043[0] = v517;
        v2043[1] = v518;
        Dictionary.subscript.getter(v2044);
        sub_8DD8((uint64_t)v1226);
        if (v2044[3])
        {
          uint64_t v519 = swift_dynamicCast(v1955, v2044, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
          if ((v519 & 1) != 0)
          {
            uint64_t v1223 = v1955[0];
            uint64_t v1224 = v1955[1];
          }

          else
          {
            uint64_t v1223 = 0LL;
            uint64_t v1224 = 0LL;
          }

          uint64_t v1221 = v1223;
          uint64_t v1222 = v1224;
        }

        else
        {
          uint64_t v1082 = 0LL;
          uint64_t v519 = (uint64_t)sub_1D580(v2044);
          uint64_t v1221 = v1082;
          uint64_t v1222 = v1082;
        }

        uint64_t v1219 = v1222;
        uint64_t v1220 = v1221;
        if (!v1222) {
          break;
        }
        uint64_t v1217 = v1220;
        uint64_t v1218 = v1219;
        uint64_t v1209 = v1219;
        uint64_t v1210 = v1220;
        uint64_t v1995 = v1220;
        uint64_t v1996 = v1219;
        uint64_t v1213 = UsoTask.arguments.getter(v519);
        swift_bridgeObjectRetain(v1213);
        uint64_t v1212 = &v1993;
        uint64_t v1993 = v1213;
        uint64_t v1211 = sub_5150(&qword_D88A8);
        unint64_t v520 = sub_7ED48();
        Collection.first.getter(v1994, v1211, v520);
        sub_1B82C(v1212);
        uint64_t v1215 = v1994[1];
        uint64_t v1214 = v1994[2];
        uint64_t v521 = swift_bridgeObjectRelease(v1213);
        if (!v1215) {
          goto LABEL_206;
        }
        uint64_t v1207 = v1215;
        uint64_t v1208 = v1214;
        uint64_t v1205 = v1214;
        uint64_t v1202 = v1215;
        swift_bridgeObjectRetain(v1214);
        uint64_t v1204 = &v1956;
        uint64_t v1956 = v1205;
        uint64_t v1203 = sub_5150(&qword_D8860);
        unint64_t v522 = sub_71C8C();
        Collection.first.getter(&v1957, v1203, v522);
        sub_1B82C(v1204);
        uint64_t v1206 = v1957;
        uint64_t v523 = swift_bridgeObjectRelease(v1205);
        if (!v1206)
        {
          uint64_t v521 = swift_bridgeObjectRelease(v1202);
LABEL_206:
          uint64_t v1200 = 0LL;
          goto LABEL_163;
        }

        uint64_t v1201 = v1206;
        uint64_t v1198 = v1206;
        uint64_t v1199 = dispatch thunk of UsoValue.getAsEntity()(v523);
        swift_release();
        uint64_t v521 = swift_bridgeObjectRelease(v1202);
        uint64_t v1200 = v1199;
LABEL_163:
        uint64_t v1197 = v1200;
        if (v1200)
        {
          uint64_t v1196 = v1197;
          uint64_t v1191 = v1197;
          uint64_t v1992 = v1197;
          uint64_t v1194 = UsoEntity.attributes.getter(v521);
          Swift::String v524 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usoSearchQualifier", 0x12uLL, 1);
          uint64_t v1193 = &v1990;
          Swift::String v1990 = v524;
          uint64_t v1192 = sub_5150(&qword_D8860);
          Dictionary.subscript.getter(&v1991);
          sub_8DD8((uint64_t)v1193);
          uint64_t v1195 = v1991;
          uint64_t v525 = swift_bridgeObjectRelease(v1194);
          if (!v1195) {
            goto LABEL_205;
          }
          uint64_t v1190 = v1195;
          uint64_t v1188 = v1195;
          swift_bridgeObjectRetain(v1195);
          uint64_t v1187 = &v1958;
          uint64_t v1958 = v1188;
          unint64_t v526 = sub_71C8C();
          Collection.first.getter(&v1959, v1192, v526);
          sub_1B82C(v1187);
          uint64_t v1189 = v1959;
          uint64_t v525 = swift_bridgeObjectRelease(v1188);
          if (v1189)
          {
            uint64_t v1186 = v1189;
            uint64_t v1183 = v1189;
            uint64_t v1184 = dispatch thunk of UsoValue.getAsEntity()(v525);
            uint64_t v525 = swift_release();
            uint64_t v1185 = v1184;
          }

          else
          {
LABEL_205:
            uint64_t v1185 = 0LL;
          }

          uint64_t v1182 = v1185;
          if (!v1185)
          {
            swift_release();
            goto LABEL_207;
          }

          uint64_t v1181 = v1182;
          uint64_t v1177 = v1182;
          uint64_t v1989 = v1182;
          uint64_t v1179 = UsoEntity.attributes.getter(v525);
          Swift::String v527 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("similarity", 0xAuLL, 1);
          int v1178 = &v1987;
          Swift::String v1987 = v527;
          Dictionary.subscript.getter(&v1988);
          sub_8DD8((uint64_t)v1178);
          uint64_t v1180 = v1988;
          uint64_t v528 = swift_bridgeObjectRelease(v1179);
          if (!v1180) {
            goto LABEL_204;
          }
          uint64_t v1176 = v1180;
          uint64_t v1174 = v1180;
          swift_bridgeObjectRetain(v1180);
          int v1173 = &v1960;
          uint64_t v1960 = v1174;
          unint64_t v529 = sub_71C8C();
          Collection.first.getter(&v1961, v1192, v529);
          sub_1B82C(v1173);
          uint64_t v1175 = v1961;
          uint64_t v528 = swift_bridgeObjectRelease(v1174);
          if (v1175)
          {
            uint64_t v1172 = v1175;
            uint64_t v1169 = v1175;
            uint64_t v1170 = dispatch thunk of UsoValue.getAsEntity()(v528);
            uint64_t v528 = swift_release();
            uint64_t v1171 = v1170;
          }

          else
          {
LABEL_204:
            uint64_t v1171 = 0LL;
          }

          uint64_t v1168 = v1171;
          if (!v1171)
          {
            swift_release();
            swift_release();
            goto LABEL_207;
          }

          uint64_t v1167 = v1168;
          uint64_t v1163 = v1168;
          uint64_t v1986 = v1168;
          uint64_t v1165 = UsoEntity.attributes.getter(v528);
          Swift::String v530 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("definedValue", 0xCuLL, 1);
          uint64_t v1164 = &v1984;
          Swift::String v1984 = v530;
          Dictionary.subscript.getter(&v1985);
          sub_8DD8((uint64_t)v1164);
          uint64_t v1166 = v1985;
          swift_bridgeObjectRelease(v1165);
          if (!v1166) {
            goto LABEL_203;
          }
          uint64_t v1162 = v1166;
          uint64_t v1160 = v1166;
          swift_bridgeObjectRetain(v1166);
          uint64_t v1159 = &v1962;
          uint64_t v1962 = v1160;
          unint64_t v531 = sub_71C8C();
          Collection.first.getter(&v1963, v1192, v531);
          sub_1B82C(v1159);
          uint64_t v1161 = v1963;
          uint64_t v532 = swift_bridgeObjectRelease(v1160);
          if (v1161
            && (uint64_t v1158 = v1161,
                uint64_t v1156 = v1161,
                uint64_t v1157 = dispatch thunk of UsoValue.getAsEntity()(v532),
                swift_release(),
                v1157))
          {
            uint64_t v1155 = v1157;
            uint64_t v1150 = v1157;
            uint64_t v1151 = UsoEntity.valueTypeString.getter();
            uint64_t v1152 = v533;
            swift_release();
            uint64_t v1153 = v1151;
            uint64_t v1154 = v1152;
          }

          else
          {
LABEL_203:
            uint64_t v1153 = 0LL;
            uint64_t v1154 = 0LL;
          }

          uint64_t v1148 = v1154;
          uint64_t v1149 = v1153;
          if (!v1154)
          {
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_207;
          }

          uint64_t v1146 = v1149;
          uint64_t v1147 = v1148;
          uint64_t v1144 = v1148;
          uint64_t v1145 = v1149;
          uint64_t v1982 = v1149;
          uint64_t v1983 = v1148;
          uint64_t v1980 = v1149;
          uint64_t v1981 = v1148;
          uint64_t v1978 = v1210;
          uint64_t v1979 = v1209;
          char v534 = static String.== infix(_:_:)(v1149, v1148, v1210, v1209);
          if ((v534 & 1) != 0)
          {
            uint64_t v590 = v1771;
            uint64_t v591 = sub_AD514();
            v1797(v590, v591, v1796);
            swift_bridgeObjectRetain(v1209);
            uint64_t v1097 = 32LL;
            uint64_t v1098 = 7LL;
            uint64_t v592 = swift_allocObject(&unk_D0E30, 32LL, 7LL);
            uint64_t v593 = v1209;
            uint64_t v1099 = v592;
            *(void *)(v592 + swift_beginAccess(v0 + 16) = v1210;
            *(void *)(v592 + swift_beginAccess(v1 + 24) = v593;
            uint64_t v1106 = (os_log_s *)Logger.logObject.getter(v592);
            int v1107 = static os_log_type_t.debug.getter();
            uint64_t v1976 = 12LL;
            UnsignedInteger<>.init<A>(_:)( &v1977,  &v1976,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
            uint32_t v1095 = v1977;
            uint64_t v1096 = 17LL;
            uint64_t v594 = swift_allocObject(&unk_D0E58, 17LL, v1098);
            uint64_t v595 = v1096;
            uint64_t v596 = v1098;
            uint64_t v1101 = v594;
            *(_BYTE *)(v594 + swift_beginAccess(v0 + 16) = 32;
            uint64_t v597 = swift_allocObject(&unk_D0E80, v595, v596);
            uint64_t v598 = v1097;
            uint64_t v599 = v1098;
            uint64_t v1102 = v597;
            *(_BYTE *)(v597 + swift_beginAccess(v0 + 16) = 8;
            uint64_t v600 = swift_allocObject(&unk_D0EA8, v598, v599);
            uint64_t v601 = v1097;
            uint64_t v602 = v1098;
            uint64_t v603 = v600;
            uint64_t v604 = v1099;
            uint64_t v1100 = v603;
            *(void *)(v603 + swift_beginAccess(v0 + 16) = sub_1B890;
            *(void *)(v603 + swift_beginAccess(v1 + 24) = v604;
            uint64_t v605 = swift_allocObject(&unk_D0ED0, v601, v602);
            uint64_t v606 = v1821;
            uint64_t v607 = v605;
            uint64_t v608 = v1100;
            uint64_t v1104 = v607;
            *(void *)(v607 + swift_beginAccess(v0 + 16) = sub_88B8;
            *(void *)(v607 + swift_beginAccess(v1 + 24) = v608;
            uint64_t v1103 = _allocateUninitializedArray<A>(_:)(3LL, v606);
            uint64_t v1105 = v609;
            swift_retain();
            uint64_t v610 = v1101;
            uint64_t v611 = v1105;
            *uint64_t v1105 = sub_884C;
            v611[1] = v610;
            swift_retain();
            uint64_t v612 = v1102;
            uint64_t v613 = v1105;
            v1105[2] = sub_884C;
            v613[3] = v612;
            swift_retain();
            uint64_t v614 = v1103;
            uint64_t v615 = v1104;
            uint64_t v616 = v1105;
            v1105[4] = sub_8900;
            v616[5] = v615;
            sub_6648();
            swift_bridgeObjectRelease(v614);
            if (os_log_type_enabled(v1106, (os_log_type_t)v1107))
            {
              uint64_t v617 = v1225;
              uint64_t v1088 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
              uint64_t v1087 = sub_5150(&qword_D6B60);
              uint64_t v1089 = sub_74D0(0LL, v1087, v1087);
              uint64_t v1090 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
              uint64_t v1091 = &v1975;
              v1975 = v1088;
              uint64_t v1092 = &v1974;
              uint64_t v1974 = v1089;
              uint64_t v1093 = &v1973;
              uint64_t v1973 = v1090;
              sub_7528(2LL, &v1975);
              sub_7528(1LL, v1091);
              v1971 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v1972 = v1101;
              sub_753C(&v1971, (uint64_t)v1091, (uint64_t)v1092, (uint64_t)v1093);
              uint64_t v1094 = v617;
              if (v617)
              {
                __break(1u);
              }

              else
              {
                v1971 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
                uint64_t v1972 = v1102;
                sub_753C(&v1971, (uint64_t)&v1975, (uint64_t)&v1974, (uint64_t)&v1973);
                uint64_t v1085 = 0LL;
                v1971 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
                uint64_t v1972 = v1104;
                sub_753C(&v1971, (uint64_t)&v1975, (uint64_t)&v1974, (uint64_t)&v1973);
                uint64_t v1084 = 0LL;
                _os_log_impl( &dword_0,  v1106,  (os_log_type_t)v1107,  "USO search qualifier defined value matched: %s",  v1088,  v1095);
                sub_7580(v1089, 0LL);
                sub_7580(v1090, 1LL);
                UnsafeMutablePointer.deallocate()();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v1086 = v1084;
              }
            }

            else
            {
              uint64_t v618 = v1225;
              swift_release();
              swift_release();
              swift_release();
              uint64_t v1086 = v618;
            }

            uint64_t v1083 = v1086;

            v1688(v1771, v1796);
            swift_bridgeObjectRelease(v1144);
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease(v1209);
            uint64_t v1216 = v1083;
            goto LABEL_215;
          }

          uint64_t v535 = v1773;
          uint64_t v536 = sub_AD514();
          v1797(v535, v536, v1796);
          swift_bridgeObjectRetain(v1144);
          uint64_t v1130 = 32LL;
          uint64_t v1131 = 7LL;
          uint64_t v537 = swift_allocObject(&unk_D0EF8, 32LL, 7LL);
          uint64_t v538 = v1144;
          uint64_t v539 = v537;
          uint64_t v540 = v1209;
          uint64_t v1125 = v539;
          *(void *)(v539 + swift_beginAccess(v0 + 16) = v1145;
          *(void *)(v539 + swift_beginAccess(v1 + 24) = v538;
          swift_bridgeObjectRetain(v540);
          uint64_t v541 = swift_allocObject(&unk_D0F20, v1130, v1131);
          uint64_t v542 = v1209;
          uint64_t v1132 = v541;
          *(void *)(v541 + swift_beginAccess(v0 + 16) = v1210;
          *(void *)(v541 + swift_beginAccess(v1 + 24) = v542;
          uint64_t v1142 = (os_log_s *)Logger.logObject.getter(v541);
          int v1143 = static os_log_type_t.debug.getter();
          uint64_t v1969 = 22LL;
          UnsignedInteger<>.init<A>(_:)( &v1970,  &v1969,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
          uint32_t v1124 = v1970;
          uint64_t v1128 = 17LL;
          uint64_t v543 = swift_allocObject(&unk_D0F48, 17LL, v1131);
          uint64_t v544 = v1128;
          uint64_t v545 = v1131;
          uint64_t v1134 = v543;
          int v1127 = 32;
          *(_BYTE *)(v543 + swift_beginAccess(v0 + 16) = 32;
          uint64_t v546 = swift_allocObject(&unk_D0F70, v544, v545);
          uint64_t v547 = v1130;
          uint64_t v548 = v1131;
          uint64_t v1135 = v546;
          int v1129 = 8;
          *(_BYTE *)(v546 + swift_beginAccess(v0 + 16) = 8;
          uint64_t v549 = swift_allocObject(&unk_D0F98, v547, v548);
          uint64_t v550 = v1130;
          uint64_t v551 = v1131;
          uint64_t v552 = v549;
          uint64_t v553 = v1125;
          uint64_t v1126 = v552;
          *(void *)(v552 + swift_beginAccess(v0 + 16) = sub_1B890;
          *(void *)(v552 + swift_beginAccess(v1 + 24) = v553;
          uint64_t v554 = swift_allocObject(&unk_D0FC0, v550, v551);
          uint64_t v555 = v1128;
          uint64_t v556 = v1131;
          uint64_t v557 = v554;
          uint64_t v558 = v1126;
          uint64_t v1136 = v557;
          *(void *)(v557 + swift_beginAccess(v0 + 16) = sub_88B8;
          *(void *)(v557 + swift_beginAccess(v1 + 24) = v558;
          uint64_t v559 = swift_allocObject(&unk_D0FE8, v555, v556);
          uint64_t v560 = v1128;
          uint64_t v561 = v1131;
          uint64_t v1137 = v559;
          *(_BYTE *)(v559 + swift_beginAccess(v0 + 16) = v1127;
          uint64_t v562 = swift_allocObject(&unk_D1010, v560, v561);
          uint64_t v563 = v1130;
          uint64_t v564 = v1131;
          uint64_t v1138 = v562;
          *(_BYTE *)(v562 + swift_beginAccess(v0 + 16) = v1129;
          uint64_t v565 = swift_allocObject(&unk_D1038, v563, v564);
          uint64_t v566 = v1130;
          uint64_t v567 = v1131;
          uint64_t v568 = v565;
          uint64_t v569 = v1132;
          uint64_t v1133 = v568;
          *(void *)(v568 + swift_beginAccess(v0 + 16) = sub_1B890;
          *(void *)(v568 + swift_beginAccess(v1 + 24) = v569;
          uint64_t v570 = swift_allocObject(&unk_D1060, v566, v567);
          uint64_t v571 = v1821;
          uint64_t v572 = v570;
          uint64_t v573 = v1133;
          uint64_t v1140 = v572;
          *(void *)(v572 + swift_beginAccess(v0 + 16) = sub_88B8;
          *(void *)(v572 + swift_beginAccess(v1 + 24) = v573;
          uint64_t v1139 = _allocateUninitializedArray<A>(_:)(6LL, v571);
          uint64_t v1141 = v574;
          swift_retain();
          uint64_t v575 = v1134;
          int v576 = v1141;
          *uint64_t v1141 = sub_884C;
          v576[1] = v575;
          swift_retain();
          uint64_t v577 = v1135;
          uint64_t v578 = v1141;
          v1141[2] = sub_884C;
          v578[3] = v577;
          swift_retain();
          uint64_t v579 = v1136;
          uint64_t v580 = v1141;
          v1141[4] = sub_8900;
          v580[5] = v579;
          swift_retain();
          uint64_t v581 = v1137;
          uint64_t v582 = v1141;
          v1141[6] = sub_884C;
          v582[7] = v581;
          swift_retain();
          uint64_t v583 = v1138;
          uint64_t v584 = v1141;
          v1141[8] = sub_884C;
          v584[9] = v583;
          swift_retain();
          uint64_t v585 = v1139;
          uint64_t v586 = v1140;
          v587 = v1141;
          v1141[10] = sub_8900;
          v587[11] = v586;
          sub_6648();
          swift_bridgeObjectRelease(v585);
          if (os_log_type_enabled(v1142, (os_log_type_t)v1143))
          {
            uint64_t v588 = v1225;
            uint64_t v1116 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
            uint64_t v1115 = sub_5150(&qword_D6B60);
            uint64_t v1117 = sub_74D0(0LL, v1115, v1115);
            uint64_t v1118 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
            int v1120 = &v1968;
            v1968 = v1116;
            BOOL v1121 = &v1967;
            uint64_t v1967 = v1117;
            uint64_t v1122 = &v1966;
            uint64_t v1966 = v1118;
            unsigned int v1119 = 2;
            sub_7528(2LL, &v1968);
            sub_7528(v1119, v1120);
            v1964 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
            uint64_t v1965 = v1134;
            sub_753C(&v1964, (uint64_t)v1120, (uint64_t)v1121, (uint64_t)v1122);
            uint64_t v1123 = v588;
            if (v588)
            {
              __break(1u);
            }

            else
            {
              v1964 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v1965 = v1135;
              sub_753C(&v1964, (uint64_t)&v1968, (uint64_t)&v1967, (uint64_t)&v1966);
              uint64_t v1113 = 0LL;
              v1964 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
              uint64_t v1965 = v1136;
              sub_753C(&v1964, (uint64_t)&v1968, (uint64_t)&v1967, (uint64_t)&v1966);
              uint64_t v1112 = 0LL;
              v1964 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v1965 = v1137;
              sub_753C(&v1964, (uint64_t)&v1968, (uint64_t)&v1967, (uint64_t)&v1966);
              uint64_t v1111 = 0LL;
              v1964 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
              uint64_t v1965 = v1138;
              sub_753C(&v1964, (uint64_t)&v1968, (uint64_t)&v1967, (uint64_t)&v1966);
              uint64_t v1110 = 0LL;
              v1964 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
              uint64_t v1965 = v1140;
              sub_753C(&v1964, (uint64_t)&v1968, (uint64_t)&v1967, (uint64_t)&v1966);
              uint64_t v1109 = 0LL;
              _os_log_impl( &dword_0,  v1142,  (os_log_type_t)v1143,  "USO search qualifier defined value match failed: %s vs %s",  v1116,  v1124);
              sub_7580(v1117, 0LL);
              sub_7580(v1118, 2LL);
              UnsafeMutablePointer.deallocate()();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v1114 = v1109;
            }
          }

          else
          {
            uint64_t v589 = v1225;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v1114 = v589;
          }

          uint64_t v1108 = v1114;

          v1688(v1773, v1796);
          swift_bridgeObjectRelease(v1144);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease(v1209);
          swift_release();
          (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
          swift_bridgeObjectRelease(v1671);
          swift_bridgeObjectRelease(v1672);
          uint64_t i = v1108;
        }

        else
        {
LABEL_207:
          swift_bridgeObjectRelease(v1209);
          swift_release();
          (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
          swift_bridgeObjectRelease(v1671);
          swift_bridgeObjectRelease(v1672);
          uint64_t i = v1225;
        }
      }

      uint64_t v1216 = v1225;
LABEL_215:
      uint64_t v1080 = v1216;
      sub_8A468(6);
      v1081 = v2041;
      v2041[0] = v619;
      v2041[1] = v620;
      Dictionary.subscript.getter(v2042);
      sub_8DD8((uint64_t)v1081);
      if (v2042[3])
      {
        uint64_t v621 = swift_dynamicCast(v1997, v2042, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
        if ((v621 & 1) != 0)
        {
          uint64_t v1078 = v1997[0];
          uint64_t v1079 = v1997[1];
        }

        else
        {
          uint64_t v1078 = 0LL;
          uint64_t v1079 = 0LL;
        }

        uint64_t v1076 = v1078;
        uint64_t v1077 = v1079;
      }

      else
      {
        uint64_t v951 = 0LL;
        uint64_t v621 = (uint64_t)sub_1D580(v2042);
        uint64_t v1076 = v951;
        uint64_t v1077 = v951;
      }

      uint64_t v1074 = v1077;
      uint64_t v1075 = v1076;
      if (!v1077)
      {
        uint64_t v1071 = v1080;
        goto LABEL_271;
      }

      uint64_t v1072 = v1075;
      uint64_t v1073 = v1074;
      uint64_t v1064 = v1074;
      uint64_t v1065 = v1075;
      uint64_t v2032 = v1075;
      uint64_t v2033 = v1074;
      uint64_t v1068 = UsoTask.arguments.getter(v621);
      swift_bridgeObjectRetain(v1068);
      uint64_t v1067 = &v2030;
      uint64_t v2030 = v1068;
      uint64_t v1066 = sub_5150(&qword_D88A8);
      unint64_t v622 = sub_7ED48();
      Collection.first.getter(v2031, v1066, v622);
      sub_1B82C(v1067);
      uint64_t v1070 = v2031[1];
      uint64_t v1069 = v2031[2];
      uint64_t v623 = swift_bridgeObjectRelease(v1068);
      if (v1070)
      {
        uint64_t v1062 = v1070;
        uint64_t v1063 = v1069;
        uint64_t v1060 = v1069;
        uint64_t v1057 = v1070;
        swift_bridgeObjectRetain(v1069);
        uint64_t v1059 = &v1998;
        uint64_t v1998 = v1060;
        uint64_t v1058 = sub_5150(&qword_D8860);
        unint64_t v624 = sub_71C8C();
        Collection.first.getter(&v1999, v1058, v624);
        sub_1B82C(v1059);
        uint64_t v1061 = v1999;
        uint64_t v625 = swift_bridgeObjectRelease(v1060);
        if (v1061)
        {
          uint64_t v1056 = v1061;
          uint64_t v1053 = v1061;
          uint64_t v1054 = dispatch thunk of UsoValue.getAsEntity()(v625);
          swift_release();
          uint64_t v623 = swift_bridgeObjectRelease(v1057);
          uint64_t v1055 = v1054;
          goto LABEL_229;
        }

        uint64_t v623 = swift_bridgeObjectRelease(v1057);
      }

      uint64_t v1055 = 0LL;
LABEL_229:
      uint64_t v1052 = v1055;
      if (v1055) {
        break;
      }
LABEL_263:
      swift_bridgeObjectRelease(v1064);
      swift_release();
      (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
      swift_bridgeObjectRelease(v1671);
      swift_bridgeObjectRelease(v1672);
      uint64_t i = v1080;
    }

    uint64_t v1051 = v1052;
    uint64_t v1046 = v1052;
    uint64_t v2029 = v1052;
    uint64_t v1049 = UsoEntity.attributes.getter(v623);
    Swift::String v626 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("usoSearchQualifier", 0x12uLL, 1);
    uint64_t v1048 = &v2027;
    Swift::String v2027 = v626;
    uint64_t v1047 = sub_5150(&qword_D8860);
    Dictionary.subscript.getter(&v2028);
    sub_8DD8((uint64_t)v1048);
    uint64_t v1050 = v2028;
    uint64_t v627 = swift_bridgeObjectRelease(v1049);
    if (!v1050) {
      goto LABEL_261;
    }
    uint64_t v1045 = v1050;
    uint64_t v1043 = v1050;
    swift_bridgeObjectRetain(v1050);
    uint64_t v1042 = &v2000;
    uint64_t v2000 = v1043;
    unint64_t v628 = sub_71C8C();
    Collection.first.getter(&v2001, v1047, v628);
    sub_1B82C(v1042);
    uint64_t v1044 = v2001;
    uint64_t v627 = swift_bridgeObjectRelease(v1043);
    if (v1044)
    {
      uint64_t v1041 = v1044;
      uint64_t v1038 = v1044;
      uint64_t v1039 = dispatch thunk of UsoValue.getAsEntity()(v627);
      uint64_t v627 = swift_release();
      uint64_t v1040 = v1039;
    }

    else
    {
LABEL_261:
      uint64_t v1040 = 0LL;
    }

    uint64_t v1037 = v1040;
    if (!v1040)
    {
      swift_release();
      goto LABEL_263;
    }

    uint64_t v1036 = v1037;
    uint64_t v1032 = v1037;
    uint64_t v2026 = v1037;
    uint64_t v1034 = UsoEntity.attributes.getter(v627);
    Swift::String v629 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("definedValue", 0xCuLL, 1);
    int v1033 = &v2024;
    Swift::String v2024 = v629;
    Dictionary.subscript.getter(&v2025);
    sub_8DD8((uint64_t)v1033);
    uint64_t v1035 = v2025;
    swift_bridgeObjectRelease(v1034);
    if (!v1035) {
      goto LABEL_260;
    }
    uint64_t v1031 = v1035;
    uint64_t v1029 = v1035;
    swift_bridgeObjectRetain(v1035);
    int v1028 = &v2002;
    uint64_t v2002 = v1029;
    unint64_t v630 = sub_71C8C();
    Collection.first.getter(&v2003, v1047, v630);
    sub_1B82C(v1028);
    uint64_t v1030 = v2003;
    uint64_t v631 = swift_bridgeObjectRelease(v1029);
    if (v1030
      && (v1027 = v1030, uint64_t v1025 = v1030, v1026 = dispatch thunk of UsoValue.getAsEntity()(v631), swift_release(), v1026))
    {
      uint64_t v1024 = v1026;
      uint64_t v1019 = v1026;
      uint64_t v1020 = UsoEntity.valueTypeString.getter();
      uint64_t v1021 = v632;
      swift_release();
      uint64_t v1022 = v1020;
      uint64_t v1023 = v1021;
    }

    else
    {
LABEL_260:
      uint64_t v1022 = 0LL;
      uint64_t v1023 = 0LL;
    }

    uint64_t v1017 = v1023;
    uint64_t v1018 = v1022;
    if (!v1023)
    {
      swift_release();
      swift_release();
      goto LABEL_263;
    }

    uint64_t v1015 = v1018;
    uint64_t v1016 = v1017;
    uint64_t v1013 = v1017;
    uint64_t v1014 = v1018;
    uint64_t v2022 = v1018;
    uint64_t v2023 = v1017;
    uint64_t v2020 = v1018;
    uint64_t v2021 = v1017;
    uint64_t v2018 = v1065;
    uint64_t v2019 = v1064;
    char v633 = static String.== infix(_:_:)(v1018, v1017, v1065, v1064);
    if ((v633 & 1) != 0) {
      break;
    }
    uint64_t v634 = v1769;
    uint64_t v635 = sub_AD514();
    v1797(v634, v635, v1796);
    swift_bridgeObjectRetain(v1013);
    uint64_t v999 = 32LL;
    uint64_t v1000 = 7LL;
    uint64_t v636 = swift_allocObject(&unk_D0CA0, 32LL, 7LL);
    uint64_t v637 = v1013;
    uint64_t v638 = v636;
    uint64_t v639 = v1064;
    uint64_t v994 = v638;
    *(void *)(v638 + swift_beginAccess(v0 + 16) = v1014;
    *(void *)(v638 + swift_beginAccess(v1 + 24) = v637;
    swift_bridgeObjectRetain(v639);
    uint64_t v640 = swift_allocObject(&unk_D0CC8, v999, v1000);
    uint64_t v641 = v1064;
    uint64_t v1001 = v640;
    *(void *)(v640 + swift_beginAccess(v0 + 16) = v1065;
    *(void *)(v640 + swift_beginAccess(v1 + 24) = v641;
    uint64_t v1011 = (os_log_s *)Logger.logObject.getter(v640);
    int v1012 = static os_log_type_t.debug.getter();
    uint64_t v2009 = 22LL;
    UnsignedInteger<>.init<A>(_:)( &v2010,  &v2009,  &type metadata for UInt32,  &type metadata for Int,  v1799,  v1800,  v1802);
    uint32_t v993 = v2010;
    uint64_t v997 = 17LL;
    uint64_t v642 = swift_allocObject(&unk_D0CF0, 17LL, v1000);
    uint64_t v643 = v997;
    uint64_t v644 = v1000;
    uint64_t v1003 = v642;
    int v996 = 32;
    *(_BYTE *)(v642 + swift_beginAccess(v0 + 16) = 32;
    uint64_t v645 = swift_allocObject(&unk_D0D18, v643, v644);
    uint64_t v646 = v999;
    uint64_t v647 = v1000;
    uint64_t v1004 = v645;
    int v998 = 8;
    *(_BYTE *)(v645 + swift_beginAccess(v0 + 16) = 8;
    uint64_t v648 = swift_allocObject(&unk_D0D40, v646, v647);
    uint64_t v649 = v999;
    uint64_t v650 = v1000;
    uint64_t v651 = v648;
    uint64_t v652 = v994;
    uint64_t v995 = v651;
    *(void *)(v651 + swift_beginAccess(v0 + 16) = sub_1B890;
    *(void *)(v651 + swift_beginAccess(v1 + 24) = v652;
    uint64_t v653 = swift_allocObject(&unk_D0D68, v649, v650);
    uint64_t v654 = v997;
    uint64_t v655 = v1000;
    uint64_t v656 = v653;
    uint64_t v657 = v995;
    uint64_t v1005 = v656;
    *(void *)(v656 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v656 + swift_beginAccess(v1 + 24) = v657;
    uint64_t v658 = swift_allocObject(&unk_D0D90, v654, v655);
    uint64_t v659 = v997;
    uint64_t v660 = v1000;
    uint64_t v1006 = v658;
    *(_BYTE *)(v658 + swift_beginAccess(v0 + 16) = v996;
    uint64_t v661 = swift_allocObject(&unk_D0DB8, v659, v660);
    uint64_t v662 = v999;
    uint64_t v663 = v1000;
    uint64_t v1007 = v661;
    *(_BYTE *)(v661 + swift_beginAccess(v0 + 16) = v998;
    uint64_t v664 = swift_allocObject(&unk_D0DE0, v662, v663);
    uint64_t v665 = v999;
    uint64_t v666 = v1000;
    uint64_t v667 = v664;
    uint64_t v668 = v1001;
    uint64_t v1002 = v667;
    *(void *)(v667 + swift_beginAccess(v0 + 16) = sub_1B890;
    *(void *)(v667 + swift_beginAccess(v1 + 24) = v668;
    uint64_t v669 = swift_allocObject(&unk_D0E08, v665, v666);
    uint64_t v670 = v1821;
    uint64_t v671 = v669;
    uint64_t v672 = v1002;
    uint64_t v1009 = v671;
    *(void *)(v671 + swift_beginAccess(v0 + 16) = sub_88B8;
    *(void *)(v671 + swift_beginAccess(v1 + 24) = v672;
    uint64_t v1008 = _allocateUninitializedArray<A>(_:)(6LL, v670);
    uint64_t v1010 = v673;
    swift_retain();
    uint64_t v674 = v1003;
    uint64_t v675 = v1010;
    *uint64_t v1010 = sub_884C;
    v675[1] = v674;
    swift_retain();
    uint64_t v676 = v1004;
    int v677 = v1010;
    v1010[2] = sub_884C;
    v677[3] = v676;
    swift_retain();
    uint64_t v678 = v1005;
    BOOL v679 = v1010;
    v1010[4] = sub_8900;
    v679[5] = v678;
    swift_retain();
    uint64_t v680 = v1006;
    uint64_t v681 = v1010;
    v1010[6] = sub_884C;
    v681[7] = v680;
    swift_retain();
    uint64_t v682 = v1007;
    uint64_t v683 = v1010;
    v1010[8] = sub_884C;
    v683[9] = v682;
    swift_retain();
    uint64_t v684 = v1008;
    uint64_t v685 = v1009;
    uint64_t v686 = v1010;
    v1010[10] = sub_8900;
    v686[11] = v685;
    sub_6648();
    swift_bridgeObjectRelease(v684);
    if (os_log_type_enabled(v1011, (os_log_type_t)v1012))
    {
      uint64_t v687 = v1080;
      uint64_t v985 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
      uint64_t v984 = sub_5150(&qword_D6B60);
      uint64_t v986 = sub_74D0(0LL, v984, v984);
      uint64_t v987 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      unsigned int v989 = &v2008;
      v2008 = v985;
      uint64_t v990 = &v2007;
      uint64_t v2007 = v986;
      uint64_t v991 = &v2006;
      uint64_t v2006 = v987;
      unsigned int v988 = 2;
      sub_7528(2LL, &v2008);
      sub_7528(v988, v989);
      v2004 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v2005 = v1003;
      sub_753C(&v2004, (uint64_t)v989, (uint64_t)v990, (uint64_t)v991);
      uint64_t v992 = v687;
      if (v687)
      {
        __break(1u);
      }

      else
      {
        v2004 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v2005 = v1004;
        sub_753C(&v2004, (uint64_t)&v2008, (uint64_t)&v2007, (uint64_t)&v2006);
        uint64_t v982 = 0LL;
        v2004 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v2005 = v1005;
        sub_753C(&v2004, (uint64_t)&v2008, (uint64_t)&v2007, (uint64_t)&v2006);
        uint64_t v981 = 0LL;
        v2004 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v2005 = v1006;
        sub_753C(&v2004, (uint64_t)&v2008, (uint64_t)&v2007, (uint64_t)&v2006);
        uint64_t v980 = 0LL;
        v2004 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v2005 = v1007;
        sub_753C(&v2004, (uint64_t)&v2008, (uint64_t)&v2007, (uint64_t)&v2006);
        uint64_t v979 = 0LL;
        v2004 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v2005 = v1009;
        sub_753C(&v2004, (uint64_t)&v2008, (uint64_t)&v2007, (uint64_t)&v2006);
        uint64_t v978 = 0LL;
        _os_log_impl( &dword_0,  v1011,  (os_log_type_t)v1012,  "USO search qualifier defined value match failed: %s vs %s",  v985,  v993);
        sub_7580(v986, 0LL);
        sub_7580(v987, 2LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v983 = v978;
      }
    }

    else
    {
      uint64_t v688 = v1080;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v983 = v688;
    }

    uint64_t v977 = v983;

    v1688(v1769, v1796);
    swift_bridgeObjectRelease(v1013);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v1064);
    swift_release();
    (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
    swift_bridgeObjectRelease(v1671);
    swift_bridgeObjectRelease(v1672);
  }

  uint64_t v689 = v1767;
  uint64_t v690 = sub_AD514();
  v1797(v689, v690, v1796);
  swift_bridgeObjectRetain(v1064);
  uint64_t v966 = 32LL;
  uint64_t v967 = 7LL;
  uint64_t v691 = swift_allocObject(&unk_D0BD8, 32LL, 7LL);
  uint64_t v692 = v1064;
  uint64_t v968 = v691;
  *(void *)(v691 + swift_beginAccess(v0 + 16) = v1065;
  *(void *)(v691 + swift_beginAccess(v1 + 24) = v692;
  uint64_t v975 = (os_log_s *)Logger.logObject.getter(v691);
  int v976 = static os_log_type_t.debug.getter();
  uint64_t v2016 = 12LL;
  UnsignedInteger<>.init<A>(_:)(&v2017, &v2016, &type metadata for UInt32, &type metadata for Int, v1799, v1800, v1802);
  uint32_t v964 = v2017;
  uint64_t v965 = 17LL;
  uint64_t v693 = swift_allocObject(&unk_D0C00, 17LL, v967);
  uint64_t v694 = v965;
  uint64_t v695 = v967;
  uint64_t v970 = v693;
  *(_BYTE *)(v693 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v696 = swift_allocObject(&unk_D0C28, v694, v695);
  uint64_t v697 = v966;
  uint64_t v698 = v967;
  uint64_t v971 = v696;
  *(_BYTE *)(v696 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v699 = swift_allocObject(&unk_D0C50, v697, v698);
  uint64_t v700 = v966;
  uint64_t v701 = v967;
  uint64_t v702 = v699;
  uint64_t v703 = v968;
  uint64_t v969 = v702;
  *(void *)(v702 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v702 + swift_beginAccess(v1 + 24) = v703;
  uint64_t v704 = swift_allocObject(&unk_D0C78, v700, v701);
  uint64_t v705 = v1821;
  uint64_t v706 = v704;
  uint64_t v707 = v969;
  uint64_t v973 = v706;
  *(void *)(v706 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v706 + swift_beginAccess(v1 + 24) = v707;
  uint64_t v972 = _allocateUninitializedArray<A>(_:)(3LL, v705);
  uint64_t v974 = v708;
  swift_retain();
  uint64_t v709 = v970;
  uint64_t v710 = v974;
  *uint64_t v974 = sub_884C;
  v710[1] = v709;
  swift_retain();
  uint64_t v711 = v971;
  uint64_t v712 = v974;
  v974[2] = sub_884C;
  v712[3] = v711;
  swift_retain();
  uint64_t v713 = v972;
  uint64_t v714 = v973;
  uint64_t v715 = v974;
  v974[4] = sub_8900;
  v715[5] = v714;
  sub_6648();
  swift_bridgeObjectRelease(v713);
  if (os_log_type_enabled(v975, (os_log_type_t)v976))
  {
    uint64_t v716 = v1080;
    uint64_t v957 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v956 = sub_5150(&qword_D6B60);
    uint64_t v958 = sub_74D0(0LL, v956, v956);
    uint64_t v959 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    BOOL v960 = &v2015;
    v2015 = v957;
    uint64_t v961 = &v2014;
    uint64_t v2014 = v958;
    uint64_t v962 = &v2013;
    uint64_t v2013 = v959;
    sub_7528(2LL, &v2015);
    sub_7528(1LL, v960);
    v2011 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v2012 = v970;
    sub_753C(&v2011, (uint64_t)v960, (uint64_t)v961, (uint64_t)v962);
    uint64_t v963 = v716;
    if (v716)
    {
      __break(1u);
    }

    else
    {
      v2011 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v2012 = v971;
      sub_753C(&v2011, (uint64_t)&v2015, (uint64_t)&v2014, (uint64_t)&v2013);
      uint64_t v954 = 0LL;
      v2011 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v2012 = v973;
      sub_753C(&v2011, (uint64_t)&v2015, (uint64_t)&v2014, (uint64_t)&v2013);
      uint64_t v953 = 0LL;
      _os_log_impl(&dword_0, v975, (os_log_type_t)v976, "USO search qualifier defined value matched: %s", v957, v964);
      sub_7580(v958, 0LL);
      sub_7580(v959, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v955 = v953;
    }
  }

  else
  {
    uint64_t v717 = v1080;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v955 = v717;
  }

  uint64_t v952 = v955;

  v1688(v1767, v1796);
  swift_bridgeObjectRelease(v1013);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v1064);
  uint64_t v1071 = v952;
LABEL_271:
  uint64_t v718 = v1765;
  uint64_t v929 = v1071;
  uint64_t v719 = sub_AD514();
  v1797(v718, v719, v1796);
  uint64_t v938 = 7LL;
  uint64_t v720 = swift_allocObject(&unk_D09F8, 24LL, 7LL);
  uint64_t v721 = v1672;
  uint64_t v931 = v720;
  *(void *)(v720 + swift_beginAccess(v0 + 16) = v1798;
  swift_bridgeObjectRetain(v721);
  uint64_t v937 = 32LL;
  uint64_t v722 = swift_allocObject(&unk_D0A20, 32LL, v938);
  uint64_t v723 = v1672;
  uint64_t v939 = v722;
  *(void *)(v722 + swift_beginAccess(v0 + 16) = v1673;
  *(void *)(v722 + swift_beginAccess(v1 + 24) = v723;
  uint64_t v949 = (os_log_s *)Logger.logObject.getter(v722);
  int v950 = static os_log_type_t.debug.getter();
  uint64_t v2039 = 22LL;
  UnsignedInteger<>.init<A>(_:)(&v2040, &v2039, &type metadata for UInt32, &type metadata for Int, v1799, v1800, v1802);
  uint32_t v930 = v2040;
  uint64_t v935 = 17LL;
  uint64_t v724 = swift_allocObject(&unk_D0A48, 17LL, v938);
  uint64_t v725 = v935;
  uint64_t v726 = v938;
  uint64_t v941 = v724;
  int v934 = 32;
  *(_BYTE *)(v724 + swift_beginAccess(v0 + 16) = 32;
  uint64_t v727 = swift_allocObject(&unk_D0A70, v725, v726);
  uint64_t v728 = v937;
  uint64_t v729 = v938;
  uint64_t v942 = v727;
  int v936 = 8;
  *(_BYTE *)(v727 + swift_beginAccess(v0 + 16) = 8;
  uint64_t v730 = swift_allocObject(&unk_D0A98, v728, v729);
  uint64_t v731 = v937;
  uint64_t v732 = v938;
  uint64_t v733 = v730;
  uint64_t v734 = v931;
  uint64_t v932 = v733;
  *(void *)(v733 + swift_beginAccess(v0 + 16) = sub_1CD2C;
  *(void *)(v733 + swift_beginAccess(v1 + 24) = v734;
  uint64_t v735 = swift_allocObject(&unk_D0AC0, v731, v732);
  uint64_t v736 = v937;
  uint64_t v737 = v938;
  uint64_t v738 = v735;
  uint64_t v739 = v932;
  uint64_t v933 = v738;
  *(void *)(v738 + swift_beginAccess(v0 + 16) = sub_1CEFC;
  *(void *)(v738 + swift_beginAccess(v1 + 24) = v739;
  uint64_t v740 = swift_allocObject(&unk_D0AE8, v736, v737);
  uint64_t v741 = v935;
  uint64_t v742 = v938;
  uint64_t v743 = v740;
  uint64_t v744 = v933;
  uint64_t v943 = v743;
  *(void *)(v743 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v743 + swift_beginAccess(v1 + 24) = v744;
  uint64_t v745 = swift_allocObject(&unk_D0B10, v741, v742);
  uint64_t v746 = v935;
  uint64_t v747 = v938;
  uint64_t v944 = v745;
  *(_BYTE *)(v745 + swift_beginAccess(v0 + 16) = v934;
  uint64_t v748 = swift_allocObject(&unk_D0B38, v746, v747);
  uint64_t v749 = v937;
  uint64_t v750 = v938;
  uint64_t v945 = v748;
  *(_BYTE *)(v748 + swift_beginAccess(v0 + 16) = v936;
  uint64_t v751 = swift_allocObject(&unk_D0B60, v749, v750);
  uint64_t v752 = v937;
  uint64_t v753 = v938;
  uint64_t v754 = v751;
  uint64_t v755 = v939;
  uint64_t v940 = v754;
  *(void *)(v754 + swift_beginAccess(v0 + 16) = sub_1B890;
  *(void *)(v754 + swift_beginAccess(v1 + 24) = v755;
  uint64_t v756 = swift_allocObject(&unk_D0B88, v752, v753);
  uint64_t v757 = v1821;
  uint64_t v758 = v756;
  uint64_t v759 = v940;
  uint64_t v947 = v758;
  *(void *)(v758 + swift_beginAccess(v0 + 16) = sub_88B8;
  *(void *)(v758 + swift_beginAccess(v1 + 24) = v759;
  uint64_t v946 = _allocateUninitializedArray<A>(_:)(6LL, v757);
  BOOL v948 = v760;
  swift_retain();
  uint64_t v761 = v941;
  uint64_t v762 = v948;
  *BOOL v948 = sub_884C;
  v762[1] = v761;
  swift_retain();
  uint64_t v763 = v942;
  uint64_t v764 = v948;
  v948[2] = sub_884C;
  v764[3] = v763;
  swift_retain();
  uint64_t v765 = v943;
  int v766 = v948;
  v948[4] = sub_8900;
  v766[5] = v765;
  swift_retain();
  uint64_t v767 = v944;
  uint64_t v768 = v948;
  v948[6] = sub_884C;
  v768[7] = v767;
  swift_retain();
  uint64_t v769 = v945;
  uint64_t v770 = v948;
  v948[8] = sub_884C;
  v770[9] = v769;
  swift_retain();
  uint64_t v771 = v946;
  uint64_t v772 = v947;
  BOOL v773 = v948;
  v948[10] = sub_8900;
  v773[11] = v772;
  sub_6648();
  swift_bridgeObjectRelease(v771);
  if (os_log_type_enabled(v949, (os_log_type_t)v950))
  {
    uint64_t v774 = v929;
    uint64_t v921 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v920 = sub_5150(&qword_D6B60);
    uint64_t v922 = sub_74D0(0LL, v920, v920);
    uint64_t v923 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v925 = &v2038;
    v2038 = v921;
    uint64_t v926 = &v2037;
    uint64_t v2037 = v922;
    uint64_t v927 = &v2036;
    uint64_t v2036 = v923;
    unsigned int v924 = 2;
    sub_7528(2LL, &v2038);
    sub_7528(v924, v925);
    v2034 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v2035 = v941;
    sub_753C(&v2034, (uint64_t)v925, (uint64_t)v926, (uint64_t)v927);
    uint64_t v928 = v774;
    if (v774)
    {
      __break(1u);
    }

    else
    {
      v2034 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v2035 = v942;
      sub_753C(&v2034, (uint64_t)&v2038, (uint64_t)&v2037, (uint64_t)&v2036);
      uint64_t v919 = 0LL;
      v2034 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v2035 = v943;
      sub_753C(&v2034, (uint64_t)&v2038, (uint64_t)&v2037, (uint64_t)&v2036);
      uint64_t v918 = 0LL;
      v2034 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v2035 = v944;
      sub_753C(&v2034, (uint64_t)&v2038, (uint64_t)&v2037, (uint64_t)&v2036);
      uint64_t v917 = 0LL;
      v2034 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v2035 = v945;
      sub_753C(&v2034, (uint64_t)&v2038, (uint64_t)&v2037, (uint64_t)&v2036);
      uint64_t v916 = 0LL;
      v2034 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v2035 = v947;
      sub_753C(&v2034, (uint64_t)&v2038, (uint64_t)&v2037, (uint64_t)&v2036);
      _os_log_impl(&dword_0, v949, (os_log_type_t)v950, "%s returning a match for event %s", v921, v930);
      sub_7580(v922, 0LL);
      sub_7580(v923, 2LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  v1688(v1765, v1796);
  uint64_t v775 = swift_allocObject(&unk_D0BB0, 32LL, 7LL);
  uint64_t v776 = v1672;
  *(void *)(v775 + swift_beginAccess(v0 + 16) = v1673;
  *(void *)(v775 + swift_beginAccess(v1 + 24) = v776;
  uint64_t v913 = v775;
  swift_release();
  (*(void (**)(char *, uint64_t))(v1738 + 8))(v1743, v1737);
  swift_bridgeObjectRelease(v1671);
  sub_41E98(__b);
  (*(void (**)(char *, uint64_t))(v1750 + 8))(v1755, v1749);
  uint64_t v914 = v1705;
  uint64_t v915 = v913;
  return (uint64_t)v914;
}

uint64_t sub_9409C()
{
  return swift_deallocObject(v0, 24LL);
}

uint64_t sub_940C4()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)( "makeParseHandler(input:parametersByEventId:)",  0x2CuLL,  1)._countAndFlagsBits;
}

uint64_t sub_940F0()
{
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v6 = *(void *)(v8 - 8);
  unint64_t v5 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v0);
  double v7 = (char *)&v5 - v5;
  USOParse.userParse.getter(v1);
  unint64_t v2 = sub_96914();
  uint64_t v9 = Message.debugDescription.getter(v8, v2);
  uint64_t v10 = v3;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v7, v8);
  return v9;
}

uint64_t sub_941A0()
{
  return UsoTask.verbString.getter();
}

uint64_t sub_941C0()
{
  return UsoTask.baseEntityAsString.getter();
}

uint64_t sub_941E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v44 = a1;
  uint64_t v38 = a2;
  double v37 = a3;
  uint64_t v58 = 0LL;
  uint64_t v57 = 0LL;
  uint64_t v56 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v33 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(void *)(v34 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  double v36 = &v16[-v35];
  uint64_t v45 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(v5);
  uint64_t v43 = *(void *)(v45 - 8);
  unint64_t v39 = (*(void *)(v43 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  int v46 = &v16[-v39];
  uint64_t v58 = a1;
  uint64_t v57 = v7;
  uint64_t v56 = v8;
  double v40 = &v55;
  uint64_t v55 = v7;
  uint64_t v9 = Siri_Nlu_External_UsoEntityIdentifier.value.getter(a1);
  double v42 = v54;
  v54[0] = v9;
  v54[1] = v10;
  uint64_t v41 = sub_5150(&qword_D7350);
  unint64_t v11 = sub_1B278();
  int v47 = Sequence<>.contains(_:)(v42, v41, v11, &protocol witness table for String);
  sub_8DD8((uint64_t)v42);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v43 + 16))(v46, v44, v45);
  if ((v47 & 1) == 0)
  {
    int v19 = 0;
    goto LABEL_12;
  }

  uint64_t v27 = &v53;
  swift_beginAccess(v37);
  uint64_t v29 = *v37;
  uint64_t v30 = v37[1];
  swift_bridgeObjectRetain(v30);
  swift_endAccess(v27);
  uint64_t v12 = swift_bridgeObjectRetain(v30);
  uint64_t v13 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter(v12);
  uint64_t v28 = Google_Protobuf_StringValue.value.getter(v13);
  uint64_t v31 = v14;
  (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v36, v33);
  swift_bridgeObjectRetain(v31);
  v50[0] = v29;
  v50[1] = v30;
  uint64_t v51 = v28;
  uint64_t v52 = v31;
  if (!v30)
  {
    if (!v52)
    {
      sub_8DD8((uint64_t)v50);
      int v26 = 1;
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  sub_139E0(v50, &v48);
  if (!v52)
  {
    sub_8DD8((uint64_t)&v48);
LABEL_9:
    sub_13A1C((uint64_t)v50);
    int v26 = 0;
    goto LABEL_8;
  }

  uint64_t v20 = v48;
  uint64_t v23 = v49;
  swift_bridgeObjectRetain(v49);
  uint64_t v21 = v51;
  double v24 = v50;
  uint64_t v22 = v52;
  swift_bridgeObjectRetain(v52);
  int v25 = static String.== infix(_:_:)(v20, v23, v21, v22);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  sub_8DD8((uint64_t)v24);
  int v26 = v25;
LABEL_8:
  int v18 = v26;
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v30);
  int v19 = v18;
LABEL_12:
  int v17 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v46, v45);
  return v17 & 1;
}

uint64_t sub_94608(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v46 = a1;
  unint64_t v39 = a2;
  double v37 = a3;
  uint64_t v58 = 0LL;
  uint64_t v57 = 0LL;
  uint64_t v56 = 0LL;
  uint64_t v32 = 0LL;
  uint64_t v33 = type metadata accessor for Google_Protobuf_StringValue(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(void *)(v34 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  double v36 = &v16[-v35];
  uint64_t v47 = type metadata accessor for Siri_Nlu_External_UsoEntityIdentifier(v5);
  uint64_t v44 = *(void *)(v47 - 8);
  unint64_t v38 = (*(void *)(v44 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v45 = &v16[-v38];
  uint64_t v58 = a1;
  uint64_t v57 = v7;
  uint64_t v56 = v8;
  double v40 = &v55;
  swift_beginAccess(v7);
  uint64_t v41 = *v39;
  uint64_t v43 = v39[1];
  swift_bridgeObjectRetain(v43);
  uint64_t v9 = swift_endAccess(v40);
  uint64_t v10 = Siri_Nlu_External_UsoEntityIdentifier.value.getter(v9);
  uint64_t v42 = v11;
  int v48 = static String.== infix(_:_:)(v41, v43, v10, v11);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v43);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v44 + 16))(v45, v46, v47);
  if ((v48 & 1) == 0)
  {
    int v19 = 0;
    goto LABEL_12;
  }

  uint64_t v27 = &v54;
  swift_beginAccess(v37);
  uint64_t v29 = *v37;
  uint64_t v30 = v37[1];
  swift_bridgeObjectRetain(v30);
  swift_endAccess(v27);
  uint64_t v12 = swift_bridgeObjectRetain(v30);
  uint64_t v13 = Siri_Nlu_External_UsoEntityIdentifier.namespace.getter(v12);
  uint64_t v28 = Google_Protobuf_StringValue.value.getter(v13);
  uint64_t v31 = v14;
  (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v36, v33);
  swift_bridgeObjectRetain(v31);
  v51[0] = v29;
  v51[1] = v30;
  uint64_t v52 = v28;
  uint64_t v53 = v31;
  if (!v30)
  {
    if (!v53)
    {
      sub_8DD8((uint64_t)v51);
      int v26 = 1;
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  sub_139E0(v51, &v49);
  if (!v53)
  {
    sub_8DD8((uint64_t)&v49);
LABEL_9:
    sub_13A1C((uint64_t)v51);
    int v26 = 0;
    goto LABEL_8;
  }

  uint64_t v20 = v49;
  uint64_t v23 = v50;
  swift_bridgeObjectRetain(v50);
  uint64_t v21 = v52;
  double v24 = v51;
  uint64_t v22 = v53;
  swift_bridgeObjectRetain(v53);
  int v25 = static String.== infix(_:_:)(v20, v23, v21, v22);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v23);
  sub_8DD8((uint64_t)v24);
  int v26 = v25;
LABEL_8:
  int v18 = v26;
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v30);
  int v19 = v18;
LABEL_12:
  int v17 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v45, v47);
  return v17 & 1;
}

uint64_t sub_94A48(Swift::String *a1)
{
  Swift::String v3 = a1[1];
  swift_bridgeObjectRetain(v3._object);
  swift_endAccess(v5);
  Swift::String v4 = v3;
  if (v3._object)
  {
    Swift::String v6 = v4;
  }

  else
  {
    Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("<nil>", 5uLL, 1);
    sub_8DD8((uint64_t)&v4);
  }

  return v6._countAndFlagsBits;
}

uint64_t sub_94B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a3;
  v3[6] = a2;
  v3[5] = a1;
  v3[4] = v3;
  void v3[2] = 0LL;
  v3[3] = 0LL;
  uint64_t v4 = type metadata accessor for UserResponse();
  _BYTE v3[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  _BYTE v3[9] = v5;
  v3[10] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  void v3[2] = a2;
  v3[3] = a3;
  return swift_task_switch(sub_94BBC, 0LL);
}

uint64_t sub_94BBC()
{
  uint64_t v8 = v0[10];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[8];
  uint64_t v1 = v0[7];
  uint64_t v4 = v1;
  uint64_t v5 = v0[6];
  v0[4] = v0;
  swift_bridgeObjectRetain(v1);
  uint64_t v2 = sub_98118();
  UserResponse.init(id:attributes:)(v5, v4, v2);
  static UserInputParseResult.userResponse(userResponse:)(v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0[4] + 8LL))();
}

uint64_t sub_94C6C()
{
  return v2;
}

uint64_t sub_94C9C()
{
  uint64_t v0 = sub_94C6C();
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

Swift::String *sub_94CD8()
{
  Swift::String v0 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("socialNLv4", 0xAuLL, 1);
  uint64_t result = v2;
  v2[1] = v0;
  return result;
}

uint64_t sub_94D28(uint64_t a1, uint64_t a2)
{
  return sub_8A824(a1, a2);
}

uint64_t sub_94D48()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_94D70()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_94D98()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_94DD4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_94E10()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_94E4C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_94E74()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_94E9C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_94ED8()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_94F14()
{
  uint64_t v1 = *(void *)(type metadata accessor for USOParse(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_94F84()
{
  return sub_940F0();
}

uint64_t sub_94FB4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_94FDC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95004()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95040()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9507C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v5 = v2 + *(void *)(v1 + 64);
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);
  return swift_deallocObject(v4, v5);
}

uint64_t sub_950EC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95114()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9513C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95178()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_951B4()
{
  return swift_deallocObject(v0, 24LL);
}

uint64_t sub_951DC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95218()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95240()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95268()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_952A4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_952E0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9531C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95344()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9536C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_953A8()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_953E4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95420(uint64_t a1)
{
  *(void *)(v2 + sub_8DD8(v0 + 16) = v2;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  Swift::String v3 = (void *)swift_task_alloc(dword_D91B4);
  *(void *)(v2 + swift_beginAccess(v1 + 24) = v3;
  *Swift::String v3 = *(void *)(v2 + 16);
  v3[1] = sub_65B4;
  return sub_94B10(a1, v5, v6);
}

uint64_t sub_954AC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_954E8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95510()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95538()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95574()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_955B0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_955EC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95628()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95650()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95678()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_956B4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_956F0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95718()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95740()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9577C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_957B8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_957F4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9581C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95844()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95880()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_958BC()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_958F8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95934()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9595C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95984()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_959C0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_959FC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95A24()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95A4C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95A88()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95AC4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95B00()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95B28()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95B50()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95B8C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95BC8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95C04()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95C40()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95C68()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95C90()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95CCC()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95D08()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95D30()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95D58()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95D94()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95DD0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95E0C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95E34()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95E5C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95E98()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_95ED4()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95F10()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_95F4C(uint64_t a1)
{
  return sub_94608(a1, *(uint64_t **)(v1 + 16), *(uint64_t **)(v1 + 24)) & 1;
}

uint64_t sub_95F78()
{
  return sub_94A48(v0);
}

uint64_t sub_95F80()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95FA8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_95FD0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9600C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96048()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96070()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96098()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_960D4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96110()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96138()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96160()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9619C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_961D8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96200()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96228()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96264()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_962A0(uint64_t a1)
{
  return sub_941E0(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24)) & 1;
}

unint64_t sub_962CC()
{
  uint64_t v3 = qword_D91C8;
  if (!qword_D91C8)
  {
    uint64_t v0 = sub_8D64(&qword_D9190);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Regex<A>, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D91C8);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_9633C(uint64_t a1)
{
  uint64_t v3 = sub_5150(&qword_D91A0);
  uint64_t v4 = *(void *)(v3 - 8);
  return a1;
}

uint64_t sub_963B0()
{
  return sub_941C0();
}

uint64_t sub_963B8()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_963F4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9641C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96444()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96480()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_964BC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_964E4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9650C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96548()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96584()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_965C0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_965E8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_96610()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9664C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96688()
{
  return sub_941A0();
}

uint64_t sub_96690()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_966CC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_966F4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9671C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96758()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96794()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_967BC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_967E4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_96820()
{
  return swift_deallocObject(v1, 32LL);
}

void *type metadata accessor for NLv4MatcherParameterNames()
{
  return &unk_D1A80;
}

uint64_t type metadata accessor for NLv4UserInputParser()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin19NLv4UserInputParser);
}

unint64_t sub_96894()
{
  return sub_968A8();
}

unint64_t sub_968A8()
{
  uint64_t v2 = qword_D9278;
  if (!qword_D9278)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8444, &unk_D1A80);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9278);
    return WitnessTable;
  }

  return v2;
}

unint64_t sub_96914()
{
  uint64_t v3 = qword_D9280;
  if (!qword_D9280)
  {
    uint64_t v0 = type metadata accessor for Siri_Nlu_External_UserParse(255LL);
    unint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Siri_Nlu_External_UserParse, v0);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9280);
    return WitnessTable;
  }

  return v3;
}

uint64_t sub_96984(void *a1, void *a2)
{
  id v230 = a1;
  id v243 = a2;
  uint64_t v300 = 0LL;
  uint64_t v299 = 0LL;
  uint64_t v291 = 0LL;
  uint64_t v292 = 0LL;
  uint64_t v284 = 0LL;
  uint64_t v285 = 0LL;
  uint64_t v282 = 0LL;
  uint64_t v283 = 0LL;
  uint64_t v275 = 0LL;
  uint64_t v276 = 0LL;
  uint64_t v270 = 0LL;
  uint64_t v271 = 0LL;
  uint64_t v268 = 0LL;
  uint64_t v269 = 0LL;
  uint64_t v266 = 0LL;
  uint64_t v267 = 0LL;
  uint64_t v238 = 0LL;
  uint64_t v232 = type metadata accessor for Logger(0LL);
  uint64_t v233 = *(void *)(v232 - 8);
  unint64_t v234 = (*(void *)(v233 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v235 = (char *)&v93 - v234;
  unint64_t v236 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v237 = (char *)&v93 - v236;
  uint64_t v239 = type metadata accessor for URL(v6);
  uint64_t v240 = *(void *)(v239 - 8);
  unint64_t v241 = (*(void *)(v240 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v8 = __chkstk_darwin(v7);
  uint64_t v242 = (char *)&v93 - v241;
  uint64_t v244 = type metadata accessor for CharacterSet(v8);
  uint64_t v245 = *(void *)(v244 - 8);
  unint64_t v246 = (*(void *)(v245 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v10 = __chkstk_darwin(v9);
  uint64_t v247 = (char *)&v93 - v246;
  uint64_t v300 = a1;
  uint64_t v299 = v11;
  uint64_t v249 = dispatch thunk of CATGlobals.toDictionary.getter(v10);
  Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("locale", 6uLL, 1);
  uint64_t v248 = &v297;
  Swift::String v297 = v12;
  Dictionary.subscript.getter(v298);
  sub_8DD8((uint64_t)v248);
  swift_bridgeObjectRelease(v249);
  if (v298[3])
  {
    if ((swift_dynamicCast(v250, v298, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      uint64_t v228 = v250[0];
      uint64_t v229 = v250[1];
    }

    else
    {
      uint64_t v228 = 0LL;
      uint64_t v229 = 0LL;
    }

    uint64_t v226 = v228;
    uint64_t v227 = v229;
  }

  else
  {
    uint64_t v109 = 0LL;
    sub_1D580(v298);
    uint64_t v226 = v109;
    uint64_t v227 = v109;
  }

  uint64_t v224 = v227;
  uint64_t v225 = v226;
  if (!v227) {
    goto LABEL_36;
  }
  uint64_t v222 = v225;
  uint64_t v223 = v224;
  uint64_t v214 = v224;
  uint64_t v291 = v225;
  uint64_t v292 = v224;
  uint64_t v289 = v225;
  uint64_t v290 = v224;
  Swift::String v13 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-_", 2uLL, 1);
  object = v13._object;
  CharacterSet.init(charactersIn:)(v13._countAndFlagsBits);
  swift_bridgeObjectRelease(object);
  unint64_t v216 = sub_B880();
  uint64_t v217 = StringProtocol.components(separatedBy:)(v247, &type metadata for String);
  (*(void (**)(char *, uint64_t))(v245 + 8))(v247, v244);
  swift_bridgeObjectRetain(v217);
  uint64_t v219 = &v286;
  uint64_t v286 = v217;
  uint64_t v218 = sub_5150(&qword_D7350);
  unint64_t v14 = sub_1BFB0();
  Collection.first.getter(&v287, v218, v14);
  sub_1B82C(v219);
  uint64_t v220 = v287;
  uint64_t v221 = v288;
  if (!v288)
  {
    swift_bridgeObjectRelease(v217);
    swift_bridgeObjectRelease(v214);
LABEL_36:
    Builtin::Word v94 = 12LL;
    uint64_t v80 = DefaultStringInterpolation.init(literalCapacity:interpolationCount:)();
    uint64_t v102 = &v295;
    uint64_t v295 = v80;
    uint64_t v296 = v81;
    int v100 = 1;
    Swift::String v82 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("CatGlobals: ", v94, 1);
    uint64_t v95 = v82._object;
    DefaultStringInterpolation.appendLiteral(_:)(v82);
    swift_bridgeObjectRelease(v95);
    id v83 = v230;
    uint64_t v97 = &v294;
    id v294 = v230;
    Builtin::Word v99 = 0LL;
    uint64_t v96 = type metadata accessor for CATGlobals(0LL);
    unint64_t v84 = sub_37C00();
    uint64_t v85 = String.init<A>(describing:)(v97, v96, v84);
    uint64_t v98 = v293;
    v293[0] = v85;
    v293[1] = v86;
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    sub_8DD8((uint64_t)v98);
    Swift::String v87 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", v99, v100 & 1);
    uint64_t v101 = v87._object;
    DefaultStringInterpolation.appendLiteral(_:)(v87);
    swift_bridgeObjectRelease(v101);
    uint64_t v104 = v295;
    uint64_t v103 = v296;
    swift_bridgeObjectRetain(v296);
    sub_8DD8((uint64_t)v102);
    uint64_t v106 = String.init(stringInterpolation:)(v104, v103);
    uint64_t v105 = v88;
    unint64_t v89 = sub_37C70();
    uint64_t v90 = swift_allocError(&unk_CEF08, v89, 0LL, 0LL);
    uint64_t v91 = v105;
    uint64_t v108 = v90;
    *(void *)uint64_t v92 = v106;
    *(void *)(v92 + sub_1D580(v0 + 8) = v91;
    *(_BYTE *)(v92 + sub_8DD8(v0 + 16) = 1;
    swift_willThrow();
    return v107;
  }

  uint64_t v212 = v220;
  uint64_t v213 = v221;
  uint64_t v209 = v221;
  uint64_t v210 = v220;
  uint64_t v284 = v220;
  uint64_t v285 = v221;
  swift_bridgeObjectRelease(v217);
  id v211 = [v243 resourcePath];
  if (v211)
  {
    id v208 = v211;
    id v203 = v211;
    uint64_t v204 = static String._unconditionallyBridgeFromObjectiveC(_:)(v211);
    uint64_t v205 = v15;

    uint64_t v206 = v204;
    uint64_t v207 = v205;
  }

  else
  {
    uint64_t v206 = 0LL;
    uint64_t v207 = 0LL;
  }

  uint64_t v201 = v207;
  uint64_t v202 = v206;
  if (!v207)
  {
    swift_bridgeObjectRelease(v209);
    swift_bridgeObjectRelease(v214);
    goto LABEL_36;
  }

  uint64_t v199 = v202;
  uint64_t v200 = v201;
  uint64_t v184 = v201;
  uint64_t v183 = v202;
  uint64_t v282 = v202;
  uint64_t v283 = v201;
  uint64_t v280 = v202;
  uint64_t v281 = v201;
  uint64_t v186 = "/Templates/";
  Builtin::Word v185 = 11LL;
  int v190 = 1;
  Swift::String v16 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("/Templates/", 0xBuLL, 1);
  uint64_t v178 = &v279;
  Swift::String v279 = v16;
  uint64_t v187 = &type metadata for String;
  uint64_t v180 = ((uint64_t (*)(void))StringProtocol.appending<A>(_:))();
  uint64_t v179 = v17;
  sub_8DD8((uint64_t)v178);
  uint64_t v181 = v278;
  v278[0] = v180;
  v278[1] = v179;
  v277[0] = v210;
  v277[1] = v209;
  uint64_t v182 = StringProtocol.appending<A>(_:)(v277, v187, v187, v216);
  uint64_t v197 = v18;
  sub_8DD8((uint64_t)v181);
  uint64_t v275 = v182;
  uint64_t v276 = v197;
  uint64_t v273 = v183;
  uint64_t v274 = v184;
  Swift::String v19 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(v186, v185, v190 & 1);
  uint64_t v188 = &v272;
  Swift::String v272 = v19;
  uint64_t v194 = StringProtocol.appending<A>(_:)(&v272, v187, v187, v216);
  uint64_t v195 = v20;
  sub_8DD8((uint64_t)v188);
  uint64_t v270 = v194;
  uint64_t v271 = v195;
  id v189 = (id)objc_opt_self(&OBJC_CLASS___CAT);
  URL.init(fileURLWithPath:)(v194, v195);
  URL._bridgeToObjectiveC()(v21);
  id v191 = v22;
  (*(void (**)(char *, uint64_t))(v240 + 8))(v242, v239);
  id v192 = [v189 getDialogAssetsVersion:v191 enableUpdates:v190 & 1];

  uint64_t v193 = static String._unconditionallyBridgeFromObjectiveC(_:)(v192);
  uint64_t v196 = v23;
  uint64_t v268 = v193;
  uint64_t v269 = v23;

  swift_bridgeObjectRetain(v195);
  uint64_t v266 = v194;
  uint64_t v267 = v195;
  int v198 = String.isEmpty.getter(v193, v196);
  swift_bridgeObjectRetain(v197);
  if ((v198 & 1) != 0) {
    int v177 = sub_97CF8(v182, v197);
  }
  else {
    int v177 = 0;
  }
  int v176 = v177;
  swift_bridgeObjectRelease(v197);
  if ((v176 & 1) != 0)
  {
    double v24 = v237;
    uint64_t v25 = sub_AD514();
    (*(void (**)(char *, uint64_t, uint64_t))(v233 + 16))(v24, v25, v232);
    swift_bridgeObjectRetain(v195);
    uint64_t v164 = 32LL;
    uint64_t v165 = 7LL;
    uint64_t v26 = swift_allocObject(&unk_D1BD8, 32LL, 7LL);
    uint64_t v27 = v195;
    uint64_t v166 = v26;
    *(void *)(v26 + sub_8DD8(v0 + 16) = v194;
    *(void *)(v26 + swift_beginAccess(v1 + 24) = v27;
    uint64_t v174 = (os_log_s *)Logger.logObject.getter(v26);
    int v175 = static os_log_type_t.debug.getter();
    uint64_t v161 = &v256;
    uint64_t v256 = 12LL;
    unint64_t v159 = sub_7788();
    unint64_t v160 = sub_77F0();
    unint64_t v28 = sub_7858();
    UnsignedInteger<>.init<A>(_:)(&v257, v161, &type metadata for UInt32, &type metadata for Int, v159, v160, v28);
    uint32_t v162 = v257;
    uint64_t v163 = 17LL;
    uint64_t v29 = swift_allocObject(&unk_D1C00, 17LL, v165);
    uint64_t v30 = v163;
    uint64_t v31 = v165;
    uint64_t v168 = v29;
    *(_BYTE *)(v29 + sub_8DD8(v0 + 16) = 32;
    uint64_t v32 = swift_allocObject(&unk_D1C28, v30, v31);
    uint64_t v33 = v164;
    uint64_t v34 = v165;
    uint64_t v169 = v32;
    *(_BYTE *)(v32 + sub_8DD8(v0 + 16) = 8;
    uint64_t v35 = swift_allocObject(&unk_D1C50, v33, v34);
    uint64_t v36 = v164;
    uint64_t v37 = v165;
    uint64_t v38 = v35;
    uint64_t v39 = v166;
    uint64_t v167 = v38;
    *(void *)(v38 + sub_8DD8(v0 + 16) = sub_1B890;
    *(void *)(v38 + swift_beginAccess(v1 + 24) = v39;
    uint64_t v40 = swift_allocObject(&unk_D1C78, v36, v37);
    uint64_t v41 = v167;
    uint64_t v171 = v40;
    *(void *)(v40 + sub_8DD8(v0 + 16) = sub_88B8;
    *(void *)(v40 + swift_beginAccess(v1 + 24) = v41;
    uint64_t v173 = sub_5150((uint64_t *)&unk_D6B50);
    uint64_t v170 = _allocateUninitializedArray<A>(_:)(3LL, v173);
    uint64_t v172 = v42;
    swift_retain();
    uint64_t v43 = v168;
    uint64_t v44 = v172;
    *uint64_t v172 = sub_884C;
    v44[1] = v43;
    swift_retain();
    uint64_t v45 = v169;
    uint64_t v46 = v172;
    v172[2] = sub_884C;
    void v46[3] = v45;
    swift_retain();
    uint64_t v47 = v170;
    uint64_t v48 = v171;
    uint64_t v49 = v172;
    void v172[4] = sub_8900;
    v49[5] = v48;
    sub_6648();
    swift_bridgeObjectRelease(v47);
    if (os_log_type_enabled(v174, (os_log_type_t)v175))
    {
      unint64_t v152 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
      uint64_t v151 = sub_5150(&qword_D6B60);
      uint64_t v153 = sub_74D0(0LL, v151, v151);
      uint64_t v154 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
      uint64_t v155 = &v255;
      uint64_t v255 = v152;
      uint64_t v156 = &v254;
      uint64_t v254 = v153;
      uint64_t v157 = &v253;
      uint64_t v253 = v154;
      sub_7528(2LL, &v255);
      sub_7528(1LL, v155);
      uint64_t v50 = v231;
      uint64_t v251 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v252 = v168;
      sub_753C(&v251, (uint64_t)v155, (uint64_t)v156, (uint64_t)v157);
      uint64_t v158 = v50;
      if (v50)
      {
        __break(1u);
      }

      else
      {
        uint64_t v251 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v252 = v169;
        sub_753C(&v251, (uint64_t)&v255, (uint64_t)&v254, (uint64_t)&v253);
        uint64_t v149 = 0LL;
        uint64_t v251 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
        uint64_t v252 = v171;
        sub_753C(&v251, (uint64_t)&v255, (uint64_t)&v254, (uint64_t)&v253);
        uint64_t v148 = 0LL;
        _os_log_impl( &dword_0,  v174,  (os_log_type_t)v175,  "Unable to find shared dialog assets in %s. Falling back to legacy dialog path.",  v152,  v162);
        sub_7580(v153, 0LL);
        sub_7580(v154, 1LL);
        UnsafeMutablePointer.deallocate()();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v150 = v148;
      }
    }

    else
    {
      swift_release();
      swift_release();
      swift_release();
      uint64_t v150 = v231;
    }

    uint64_t v146 = v150;

    (*(void (**)(char *, uint64_t))(v233 + 8))(v237, v232);
    swift_bridgeObjectRetain(v197);
    uint64_t v51 = v267;
    uint64_t v266 = v182;
    uint64_t v267 = v197;
    swift_bridgeObjectRelease(v51);
    uint64_t v147 = v146;
  }

  else
  {
    uint64_t v147 = v231;
  }

  uint64_t v52 = v235;
  uint64_t v126 = v147;
  uint64_t v53 = sub_AD514();
  (*(void (**)(char *, uint64_t, uint64_t))(v233 + 16))(v52, v53, v232);
  uint64_t v127 = v266;
  uint64_t v128 = v267;
  swift_bridgeObjectRetain(v267);
  uint64_t v134 = 32LL;
  uint64_t v135 = 7LL;
  uint64_t v54 = swift_allocObject(&unk_D1B10, 32LL, 7LL);
  uint64_t v55 = v128;
  uint64_t v136 = v54;
  *(void *)(v54 + sub_8DD8(v0 + 16) = v127;
  *(void *)(v54 + swift_beginAccess(v1 + 24) = v55;
  uint64_t v144 = (os_log_s *)Logger.logObject.getter(v54);
  int v145 = static os_log_type_t.debug.getter();
  uint64_t v131 = &v264;
  uint64_t v264 = 12LL;
  unint64_t v129 = sub_7788();
  unint64_t v130 = sub_77F0();
  unint64_t v56 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v265, v131, &type metadata for UInt32, &type metadata for Int, v129, v130, v56);
  uint32_t v132 = v265;
  uint64_t v133 = 17LL;
  uint64_t v57 = swift_allocObject(&unk_D1B38, 17LL, v135);
  uint64_t v58 = v133;
  uint64_t v59 = v135;
  uint64_t v138 = v57;
  *(_BYTE *)(v57 + sub_8DD8(v0 + 16) = 32;
  uint64_t v60 = swift_allocObject(&unk_D1B60, v58, v59);
  uint64_t v61 = v134;
  uint64_t v62 = v135;
  uint64_t v139 = v60;
  *(_BYTE *)(v60 + sub_8DD8(v0 + 16) = 8;
  uint64_t v63 = swift_allocObject(&unk_D1B88, v61, v62);
  uint64_t v64 = v134;
  uint64_t v65 = v135;
  uint64_t v66 = v63;
  uint64_t v67 = v136;
  uint64_t v137 = v66;
  *(void *)(v66 + sub_8DD8(v0 + 16) = sub_97EDC;
  *(void *)(v66 + swift_beginAccess(v1 + 24) = v67;
  uint64_t v68 = swift_allocObject(&unk_D1BB0, v64, v65);
  uint64_t v69 = v137;
  uint64_t v141 = v68;
  *(void *)(v68 + sub_8DD8(v0 + 16) = sub_88B8;
  *(void *)(v68 + swift_beginAccess(v1 + 24) = v69;
  uint64_t v143 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v140 = _allocateUninitializedArray<A>(_:)(3LL, v143);
  uint64_t v142 = v70;
  swift_retain();
  uint64_t v71 = v138;
  uint64_t v72 = v142;
  void *v142 = sub_884C;
  v72[1] = v71;
  swift_retain();
  uint64_t v73 = v139;
  uint64_t v74 = v142;
  void v142[2] = sub_884C;
  void v74[3] = v73;
  swift_retain();
  uint64_t v75 = v140;
  uint64_t v76 = v141;
  uint64_t v77 = v142;
  v142[4] = sub_8900;
  v77[5] = v76;
  sub_6648();
  swift_bridgeObjectRelease(v75);
  if (os_log_type_enabled(v144, (os_log_type_t)v145))
  {
    uint64_t v119 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v118 = sub_5150(&qword_D6B60);
    uint64_t v120 = sub_74D0(0LL, v118, v118);
    uint64_t v121 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v122 = &v262;
    uint64_t v262 = v119;
    uint64_t v123 = &v261;
    uint64_t v261 = v120;
    uint64_t v124 = &v260;
    uint64_t v260 = v121;
    sub_7528(2LL, &v262);
    sub_7528(1LL, v122);
    uint64_t v78 = v126;
    uint64_t v258 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v259 = v138;
    sub_753C(&v258, (uint64_t)v122, (uint64_t)v123, (uint64_t)v124);
    uint64_t v125 = v78;
    if (v78)
    {
      __break(1u);
    }

    else
    {
      uint64_t v258 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v259 = v139;
      sub_753C(&v258, (uint64_t)&v262, (uint64_t)&v261, (uint64_t)&v260);
      uint64_t v116 = 0LL;
      uint64_t v258 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v259 = v141;
      sub_753C(&v258, (uint64_t)&v262, (uint64_t)&v261, (uint64_t)&v260);
      uint64_t v115 = 0LL;
      _os_log_impl(&dword_0, v144, (os_log_type_t)v145, "templateDir: %s", v119, v132);
      sub_7580(v120, 0LL);
      sub_7580(v121, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v117 = v115;
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t v117 = v126;
  }

  uint64_t v114 = v117;

  (*(void (**)(char *, uint64_t))(v233 + 8))(v235, v232);
  uint64_t v111 = &v266;
  uint64_t v110 = &v263;
  swift_beginAccess(&v266);
  uint64_t v112 = v266;
  uint64_t v113 = v267;
  swift_bridgeObjectRetain(v267);
  swift_endAccess(v110);
  sub_8DD8((uint64_t)v111);
  swift_bridgeObjectRelease(v196);
  swift_bridgeObjectRelease(v195);
  swift_bridgeObjectRelease(v197);
  swift_bridgeObjectRelease(v184);
  swift_bridgeObjectRelease(v209);
  swift_bridgeObjectRelease(v214);
  return v112;
}

uint64_t sub_97C54(void *a1, void *a2)
{
  uint64_t result = sub_96984(a1, a2);
  uint64_t v5 = v4;
  if (!v2)
  {
    URL.init(fileURLWithPath:)(result, v4);
    return swift_bridgeObjectRelease(v5);
  }

  return result;
}

uint64_t sub_97CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a1;
  uint64_t v10 = a2;
  char v8 = 1;
  id v6 = [(id)objc_opt_self(NSFileManager) defaultManager];
  swift_bridgeObjectRetain(a2);
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  unsigned __int8 v7 = [v6 fileExistsAtPath:v5 isDirectory:&v8];

  if ((v7 & 1) != 0) {
    char v3 = v8;
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_97E30(uint64_t a1, uint64_t a2)
{
  v5[2] = a1;
  v5[3] = a2;
  swift_bridgeObjectRetain(a2);
  v5[0] = a1;
  v5[1] = a2;
  return String.init<A>(_:)( v5,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
}

uint64_t sub_97EA0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_97EDC()
{
  return sub_97E30(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_97EE8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_97F10()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_97F38()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_97F74()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_97FB0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_97FEC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_98014()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9803C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_98078()
{
  return swift_deallocObject(v1, 32LL);
}

void *type metadata accessor for TemplateHelper()
{
  return &unk_D1CA0;
}

uint64_t sub_980C8(uint64_t a1, uint64_t a2)
{
  return sub_983D4(a1, a2);
}

uint64_t sub_98118()
{
  uint64_t v0 = sub_9A0F8(0LL);
  return Dictionary.init(dictionaryLiteral:)( v0,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
}

BOOL sub_98150(uint64_t a1, void *a2)
{
  string._uint64_t countAndFlagsBits = a1;
  string._object = a2;
  v2._rawValue = (void *)_allocateUninitializedArray<A>(_:)(1LL, &type metadata for StaticString);
  *(void *)uint64_t v3 = "utterances";
  *(void *)(v3 + sub_1D580(v0 + 8) = 10LL;
  *(_BYTE *)(v3 + sub_8DD8(v0 + 16) = 2;
  sub_6648();
  rawValue = v2._rawValue;
  Swift::Int v7 = _findStringSwitchCase(cases:string:)(v2, string);
  swift_bridgeObjectRelease(rawValue);
  swift_bridgeObjectRelease(string._object);
  return v7 != 0;
}

uint64_t sub_98230()
{
  return String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("utterances", 0xAuLL, 1)._countAndFlagsBits;
}

uint64_t sub_98260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_98440();
  return == infix<A>(_:_:)(a1, a2, a3, v3, &protocol witness table for String) & 1;
}

uint64_t sub_982A8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_98440();
  return RawRepresentable<>.hashValue.getter(a1, a2, v2, &protocol witness table for String);
}

uint64_t sub_982E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_98440();
  return RawRepresentable<>.hash(into:)(a1, a2, a3, v3, &protocol witness table for String);
}

uint64_t sub_98328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_98440();
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, v3, &protocol witness table for String);
}

BOOL sub_9836C@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_98150(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_983A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_98230();
  *a1 = result;
  a1[1] = v2;
  return result;
}

uint64_t sub_983D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + sub_8DD8(v0 + 16) = a1;
  *(void *)(v2 + swift_beginAccess(v1 + 24) = a2;
  swift_bridgeObjectRelease(a2);
  return v6;
}

unint64_t sub_98440()
{
  uint64_t v2 = qword_D9288;
  if (!qword_D9288)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8678, &unk_D2140);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9288);
    return WitnessTable;
  }

  return v2;
}

void *sub_984AC(uint64_t a1, uint64_t a2)
{
  uint64_t v306 = a1;
  uint64_t v305 = a2;
  uint64_t v300 = "Fatal error";
  uint64_t v301 = "Unexpectedly found nil while implicitly unwrapping an Optional value";
  uint64_t v302 = "SocialConversationFlowDelegatePlugin/SocialExactMatchUserInputParser.swift";
  uint64_t v303 = &unk_D9298;
  uint64_t v319 = *v2;
  uint64_t v393 = 0LL;
  uint64_t v392 = 0LL;
  uint64_t v391 = 0LL;
  Swift::String v386 = (Swift::String)0LL;
  uint64_t v384 = 0LL;
  uint64_t v385 = 0LL;
  memset(__b, 0, sizeof(__b));
  uint64_t v376 = 0LL;
  uint64_t v377 = 0LL;
  uint64_t v375 = 0LL;
  uint64_t v372 = 0LL;
  uint64_t v304 = 0LL;
  uint64_t v317 = type metadata accessor for Logger(0LL);
  uint64_t v316 = *(void **)(v317 - 8);
  uint64_t v312 = v316[8];
  unint64_t v307 = (v312 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v308 = (char *)&v160 - v307;
  unint64_t v309 = v307;
  double v5 = __chkstk_darwin(v4);
  uint64_t v310 = (char *)&v160 - v309;
  unint64_t v311 = (v312 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v6 = __chkstk_darwin(v5);
  uint64_t v313 = (char *)&v160 - v311;
  unint64_t v314 = (v312 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  Swift::Int v7 = (char *)&v160 - v314;
  uint64_t v315 = (char *)&v160 - v314;
  uint64_t v393 = v8;
  uint64_t v392 = v9;
  uint64_t v391 = v10;
  uint64_t v11 = sub_AD514();
  uint64_t v318 = (void (*)(char *, uint64_t, uint64_t))v316[2];
  v318(v7, v11, v317);
  uint64_t v332 = 7LL;
  uint64_t v12 = swift_allocObject(&unk_D1CC0, 24LL, 7LL);
  uint64_t v325 = v12;
  *(void *)(v12 + sub_8DD8(v0 + 16) = v319;
  uint64_t v343 = (os_log_s *)Logger.logObject.getter(v12);
  int v344 = static os_log_type_t.debug.getter();
  uint64_t v322 = &v389;
  uint64_t v389 = 22LL;
  unint64_t v320 = sub_7788();
  unint64_t v321 = sub_77F0();
  unint64_t v323 = sub_7858();
  UnsignedInteger<>.init<A>(_:)(&v390, v322, &type metadata for UInt32, &type metadata for Int, v320, v321, v323);
  uint32_t v324 = v390;
  uint64_t v329 = 17LL;
  uint64_t v13 = swift_allocObject(&unk_D1CE8, 17LL, v332);
  uint64_t v14 = v329;
  uint64_t v15 = v332;
  uint64_t v334 = v13;
  int v328 = 32;
  *(_BYTE *)(v13 + sub_8DD8(v0 + 16) = 32;
  uint64_t v16 = swift_allocObject(&unk_D1D10, v14, v15);
  uint64_t v17 = v332;
  uint64_t v335 = v16;
  int v330 = 8;
  *(_BYTE *)(v16 + sub_8DD8(v0 + 16) = 8;
  uint64_t v331 = 32LL;
  uint64_t v18 = swift_allocObject(&unk_D1D38, 32LL, v17);
  uint64_t v19 = v331;
  uint64_t v20 = v332;
  uint64_t v21 = v18;
  uint64_t v22 = v325;
  uint64_t v326 = v21;
  *(void *)(v21 + sub_8DD8(v0 + 16) = sub_1CD2C;
  *(void *)(v21 + swift_beginAccess(v1 + 24) = v22;
  uint64_t v23 = swift_allocObject(&unk_D1D60, v19, v20);
  uint64_t v24 = v331;
  uint64_t v25 = v332;
  uint64_t v26 = v23;
  uint64_t v27 = v326;
  uint64_t v327 = v26;
  *(void *)(v26 + sub_8DD8(v0 + 16) = sub_1CEFC;
  *(void *)(v26 + swift_beginAccess(v1 + 24) = v27;
  uint64_t v28 = swift_allocObject(&unk_D1D88, v24, v25);
  uint64_t v29 = v329;
  uint64_t v30 = v332;
  uint64_t v31 = v28;
  uint64_t v32 = v327;
  uint64_t v336 = v31;
  *(void *)(v31 + sub_8DD8(v0 + 16) = sub_88B8;
  *(void *)(v31 + swift_beginAccess(v1 + 24) = v32;
  uint64_t v33 = swift_allocObject(&unk_D1DB0, v29, v30);
  uint64_t v34 = v329;
  uint64_t v35 = v332;
  uint64_t v337 = v33;
  *(_BYTE *)(v33 + sub_8DD8(v0 + 16) = v328;
  uint64_t v36 = swift_allocObject(&unk_D1DD8, v34, v35);
  uint64_t v37 = v331;
  uint64_t v38 = v332;
  uint64_t v338 = v36;
  *(_BYTE *)(v36 + sub_8DD8(v0 + 16) = v330;
  uint64_t v39 = swift_allocObject(&unk_D1E00, v37, v38);
  uint64_t v40 = v331;
  uint64_t v41 = v332;
  uint64_t v333 = v39;
  *(void *)(v39 + sub_8DD8(v0 + 16) = sub_940C4;
  *(void *)(v39 + swift_beginAccess(v1 + 24) = 0LL;
  uint64_t v42 = swift_allocObject(&unk_D1E28, v40, v41);
  uint64_t v43 = v333;
  uint64_t v340 = v42;
  *(void *)(v42 + sub_8DD8(v0 + 16) = sub_88B8;
  *(void *)(v42 + swift_beginAccess(v1 + 24) = v43;
  uint64_t v342 = sub_5150((uint64_t *)&unk_D6B50);
  uint64_t v339 = _allocateUninitializedArray<A>(_:)(6LL, v342);
  uint64_t v341 = v44;
  swift_retain();
  uint64_t v45 = v334;
  uint64_t v46 = v341;
  void *v341 = sub_884C;
  v46[1] = v45;
  swift_retain();
  uint64_t v47 = v335;
  uint64_t v48 = v341;
  v341[2] = sub_884C;
  v48[3] = v47;
  swift_retain();
  uint64_t v49 = v336;
  uint64_t v50 = v341;
  v341[4] = sub_8900;
  v50[5] = v49;
  swift_retain();
  uint64_t v51 = v337;
  uint64_t v52 = v341;
  v341[6] = sub_884C;
  v52[7] = v51;
  swift_retain();
  uint64_t v53 = v338;
  uint64_t v54 = v341;
  v341[8] = sub_884C;
  v54[9] = v53;
  swift_retain();
  uint64_t v55 = v339;
  uint64_t v56 = v340;
  uint64_t v57 = v341;
  v341[10] = sub_8900;
  v57[11] = v56;
  sub_6648();
  swift_bridgeObjectRelease(v55);
  if (os_log_type_enabled(v343, (os_log_type_t)v344))
  {
    uint64_t v58 = v304;
    uint64_t v292 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(22LL, &type metadata for UInt8);
    uint64_t v291 = sub_5150(&qword_D6B60);
    uint64_t v293 = sub_74D0(0LL, v291, v291);
    uint64_t v294 = sub_74D0(2LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v296 = &v349;
    uint64_t v349 = v292;
    Swift::String v297 = &v348;
    uint64_t v348 = v293;
    __int128 v298 = &v347;
    uint64_t v347 = v294;
    unsigned int v295 = 2;
    sub_7528(2LL, &v349);
    sub_7528(v295, v296);
    uint64_t v345 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v346 = v334;
    sub_753C(&v345, (uint64_t)v296, (uint64_t)v297, (uint64_t)v298);
    uint64_t v299 = v58;
    if (v58)
    {
      __break(1u);
    }

    else
    {
      uint64_t v345 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v346 = v335;
      sub_753C(&v345, (uint64_t)&v349, (uint64_t)&v348, (uint64_t)&v347);
      uint64_t v289 = 0LL;
      uint64_t v345 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v346 = v336;
      sub_753C(&v345, (uint64_t)&v349, (uint64_t)&v348, (uint64_t)&v347);
      uint64_t v288 = 0LL;
      uint64_t v345 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v346 = v337;
      sub_753C(&v345, (uint64_t)&v349, (uint64_t)&v348, (uint64_t)&v347);
      uint64_t v287 = 0LL;
      uint64_t v345 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v346 = v338;
      sub_753C(&v345, (uint64_t)&v349, (uint64_t)&v348, (uint64_t)&v347);
      uint64_t v286 = 0LL;
      uint64_t v345 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v346 = v340;
      sub_753C(&v345, (uint64_t)&v349, (uint64_t)&v348, (uint64_t)&v347);
      uint64_t v285 = 0LL;
      _os_log_impl(&dword_0, v343, (os_log_type_t)v344, "%s.%s", v292, v324);
      sub_7580(v293, 0LL);
      sub_7580(v294, 2LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v290 = v285;
    }
  }

  else
  {
    uint64_t v59 = v304;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v290 = v59;
  }

  uint64_t v282 = v290;

  uint64_t v283 = (void (*)(char *, uint64_t))v316[1];
  v283(v315, v317);
  type metadata accessor for SiriEnvironment(0LL);
  uint64_t v284 = static SiriEnvironment.forCurrentTask.getter();
  if (v284
    && (uint64_t v281 = v284,
        uint64_t v278 = v284,
        uint64_t v279 = SiriEnvironment.currentRequest.getter(),
        uint64_t v60 = swift_release(),
        id v280 = (id)CurrentRequest.speechPackage.getter(v60),
        swift_release(),
        v280))
  {
    id v277 = v280;
    id v275 = v280;
    id v276 = [v280 recognition];

    if (v276)
    {
      id v274 = v276;
    }

    else
    {
      _assertionFailure(_:_:file:line:flags:)(v300, 11LL, 2LL, v301, 68LL, 2LL, v302, 74LL, 2, 42LL, 0);
      __break(1u);
    }

    id v272 = v274;
    id v273 = [v274 oneBestTranscript];

    if (v273)
    {
      id v271 = v273;
      id v268 = v273;
      *(void *)&unsigned __int128 v269 = static String._unconditionallyBridgeFromObjectiveC(_:)(v273);
      *((void *)&v269 + 1) = v61;

      unsigned __int128 v270 = v269;
    }

    else
    {
      *(void *)&unsigned __int128 v270 = 0LL;
      *((void *)&v270 + 1) = 0LL;
    }

    unsigned __int128 v267 = v270;
  }

  else
  {
    unsigned __int128 v267 = 0uLL;
  }

  Swift::String v387 = (Swift::String)v267;
  if (*((void *)&v267 + 1))
  {
    Swift::String v388 = v387;
  }

  else
  {
    Swift::String v388 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
    sub_8DD8((uint64_t)&v387);
  }

  uint64_t v62 = v313;
  Swift::String v248 = v388;
  Swift::String v386 = v388;
  id v249 = (id)objc_opt_self(&OBJC_CLASS___IEEvent);
  swift_bridgeObjectRetain(v248._object);
  id v250 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v248._object);
  id v251 = [v249 normalizeUtterance:v250];

  uint64_t v252 = static String._unconditionallyBridgeFromObjectiveC(_:)(v251);
  uint64_t v253 = v63;
  uint64_t v384 = v252;
  uint64_t v385 = v63;

  uint64_t v64 = sub_AD514();
  v318(v62, v64, v317);
  swift_bridgeObjectRetain(v253);
  uint64_t v256 = 32LL;
  uint64_t v257 = 7LL;
  uint64_t v65 = swift_allocObject(&unk_D1E50, 32LL, 7LL);
  uint64_t v66 = v253;
  uint64_t v258 = v65;
  *(void *)(v65 + sub_8DD8(v0 + 16) = v252;
  *(void *)(v65 + swift_beginAccess(v1 + 24) = v66;
  uint32_t v265 = (os_log_s *)Logger.logObject.getter(v65);
  int v266 = static os_log_type_t.debug.getter();
  uint64_t v382 = 12LL;
  UnsignedInteger<>.init<A>(_:)(&v383, &v382, &type metadata for UInt32, &type metadata for Int, v320, v321, v323);
  uint32_t v254 = v383;
  uint64_t v255 = 17LL;
  uint64_t v67 = swift_allocObject(&unk_D1E78, 17LL, v257);
  uint64_t v68 = v255;
  uint64_t v69 = v257;
  uint64_t v260 = v67;
  *(_BYTE *)(v67 + sub_8DD8(v0 + 16) = 32;
  uint64_t v70 = swift_allocObject(&unk_D1EA0, v68, v69);
  uint64_t v71 = v256;
  uint64_t v72 = v257;
  uint64_t v261 = v70;
  *(_BYTE *)(v70 + sub_8DD8(v0 + 16) = 8;
  uint64_t v73 = swift_allocObject(&unk_D1EC8, v71, v72);
  uint64_t v74 = v256;
  uint64_t v75 = v257;
  uint64_t v76 = v73;
  uint64_t v77 = v258;
  uint64_t v259 = v76;
  *(void *)(v76 + sub_8DD8(v0 + 16) = sub_1B890;
  *(void *)(v76 + swift_beginAccess(v1 + 24) = v77;
  uint64_t v78 = swift_allocObject(&unk_D1EF0, v74, v75);
  uint64_t v79 = v342;
  uint64_t v80 = v78;
  uint64_t v81 = v259;
  uint64_t v263 = v80;
  *(void *)(v80 + sub_8DD8(v0 + 16) = sub_88B8;
  *(void *)(v80 + swift_beginAccess(v1 + 24) = v81;
  uint64_t v262 = _allocateUninitializedArray<A>(_:)(3LL, v79);
  uint64_t v264 = v82;
  swift_retain();
  uint64_t v83 = v260;
  unint64_t v84 = v264;
  void *v264 = sub_884C;
  v84[1] = v83;
  swift_retain();
  uint64_t v85 = v261;
  uint64_t v86 = v264;
  v264[2] = sub_884C;
  v86[3] = v85;
  swift_retain();
  uint64_t v87 = v262;
  uint64_t v88 = v263;
  unint64_t v89 = v264;
  void v264[4] = sub_8900;
  v89[5] = v88;
  sub_6648();
  swift_bridgeObjectRelease(v87);
  if (os_log_type_enabled(v265, (os_log_type_t)v266))
  {
    uint64_t v90 = v282;
    unint64_t v241 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v240 = sub_5150(&qword_D6B60);
    uint64_t v242 = sub_74D0(0LL, v240, v240);
    uint64_t v243 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v244 = &v354;
    uint64_t v354 = v241;
    uint64_t v245 = &v353;
    uint64_t v353 = v242;
    unint64_t v246 = &v352;
    uint64_t v352 = v243;
    sub_7528(2LL, &v354);
    sub_7528(1LL, v244);
    uint64_t v350 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v351 = v260;
    sub_753C(&v350, (uint64_t)v244, (uint64_t)v245, (uint64_t)v246);
    uint64_t v247 = v90;
    if (v90)
    {
      __break(1u);
    }

    else
    {
      uint64_t v350 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v351 = v261;
      sub_753C(&v350, (uint64_t)&v354, (uint64_t)&v353, (uint64_t)&v352);
      uint64_t v238 = 0LL;
      uint64_t v350 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v351 = v263;
      sub_753C(&v350, (uint64_t)&v354, (uint64_t)&v353, (uint64_t)&v352);
      uint64_t v237 = 0LL;
      _os_log_impl( &dword_0,  v265,  (os_log_type_t)v266,  "Checking for exact match using ASR hypothesis: '%s'",  v241,  v254);
      sub_7580(v242, 0LL);
      sub_7580(v243, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v239 = v237;
    }
  }

  else
  {
    uint64_t v91 = v282;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v239 = v91;
  }

  uint64_t v235 = v239;

  v283(v313, v317);
  swift_bridgeObjectRetain(v305);
  uint64_t v92 = sub_5150(&qword_D7368);
  unint64_t v234 = &v394;
  Dictionary.makeIterator()(v305, &type metadata for String, v92, &protocol witness table for String);
  memcpy(__b, v234, sizeof(__b));
  for (uint64_t i = v235; ; uint64_t i = v162)
  {
    while (1)
    {
      uint64_t v230 = i;
      uint64_t v93 = sub_5150(&qword_D91A8);
      Dictionary.Iterator.next()(v93);
      uint64_t v231 = v378;
      uint64_t v232 = v379;
      uint64_t v233 = v380;
      if (!v379)
      {
        unint64_t v160 = 0LL;
        sub_41E98(__b);
        swift_bridgeObjectRelease(v253);
        swift_bridgeObjectRelease(v248._object);
        id v192 = v160;
        uint64_t v193 = (uint64_t)v160;
        return v192;
      }

      uint64_t v227 = v231;
      uint64_t v228 = v232;
      uint64_t v229 = v233;
      uint64_t v225 = v233;
      uint64_t v223 = v232;
      uint64_t v224 = v231;
      uint64_t v376 = v231;
      uint64_t v377 = v232;
      uint64_t v375 = v233;
      uint64_t v94 = sub_98230();
      uint64_t v226 = v373;
      v373[0] = v94;
      v373[1] = v95;
      Dictionary.subscript.getter(v374);
      sub_8DD8((uint64_t)v226);
      if (v374[3])
      {
        uint64_t v96 = sub_5150(&qword_D7350);
        uint64_t v222 = (swift_dynamicCast(&v355, v374, (char *)&type metadata for Any + 8, v96, 6LL) & 1) != 0 ? v355 : 0LL;
        uint64_t v221 = v222;
      }

      else
      {
        uint64_t v161 = 0LL;
        sub_1D580(v374);
        uint64_t v221 = v161;
      }

      uint64_t v220 = v221;
      if (v221) {
        break;
      }
      swift_bridgeObjectRelease(v225);
      swift_bridgeObjectRelease(v223);
      uint64_t i = v230;
    }

    uint64_t v219 = v220;
    uint64_t v216 = v220;
    uint64_t v372 = v220;
    v371[2] = v220;
    uint64_t v218 = v371;
    v371[0] = v252;
    v371[1] = v253;
    uint64_t v217 = sub_5150(&qword_D7350);
    unint64_t v97 = sub_1B278();
    if ((Sequence<>.contains(_:)(v218, v217, v97, &protocol witness table for String) & 1) != 0) {
      break;
    }
    swift_bridgeObjectRetain(v216);
    id v189 = &v370;
    uint64_t v370 = v216;
    sub_1BFB0();
    int v190 = Collection.isEmpty.getter(v217);
    sub_1B82C(v189);
    if ((v190 & 1) != 0)
    {
      uint64_t v164 = v230;
    }

    else
    {
      unint64_t v130 = v308;
      uint64_t v131 = sub_AD514();
      v318(v130, v131, v317);
      swift_bridgeObjectRetain(v223);
      uint64_t v178 = 32LL;
      uint64_t v179 = 7LL;
      uint64_t v132 = swift_allocObject(&unk_D1F18, 32LL, 7LL);
      uint64_t v133 = v223;
      uint64_t v180 = v132;
      *(void *)(v132 + sub_8DD8(v0 + 16) = v224;
      *(void *)(v132 + swift_beginAccess(v1 + 24) = v133;
      uint64_t v187 = (os_log_s *)Logger.logObject.getter(v132);
      int v188 = static os_log_type_t.debug.getter();
      uint64_t v368 = 12LL;
      UnsignedInteger<>.init<A>(_:)(&v369, &v368, &type metadata for UInt32, &type metadata for Int, v320, v321, v323);
      uint32_t v176 = v369;
      uint64_t v177 = 17LL;
      uint64_t v134 = swift_allocObject(&unk_D1F40, 17LL, v179);
      uint64_t v135 = v177;
      uint64_t v136 = v179;
      uint64_t v182 = v134;
      *(_BYTE *)(v134 + sub_8DD8(v0 + 16) = 32;
      uint64_t v137 = swift_allocObject(&unk_D1F68, v135, v136);
      uint64_t v138 = v178;
      uint64_t v139 = v179;
      uint64_t v183 = v137;
      *(_BYTE *)(v137 + sub_8DD8(v0 + 16) = 8;
      uint64_t v140 = swift_allocObject(&unk_D1F90, v138, v139);
      uint64_t v141 = v178;
      uint64_t v142 = v179;
      uint64_t v143 = v140;
      uint64_t v144 = v180;
      uint64_t v181 = v143;
      *(void *)(v143 + sub_8DD8(v0 + 16) = sub_1B890;
      *(void *)(v143 + swift_beginAccess(v1 + 24) = v144;
      uint64_t v145 = swift_allocObject(&unk_D1FB8, v141, v142);
      uint64_t v146 = v342;
      uint64_t v147 = v145;
      uint64_t v148 = v181;
      uint64_t v185 = v147;
      *(void *)(v147 + sub_8DD8(v0 + 16) = sub_88B8;
      *(void *)(v147 + swift_beginAccess(v1 + 24) = v148;
      uint64_t v184 = _allocateUninitializedArray<A>(_:)(3LL, v146);
      uint64_t v186 = v149;
      swift_retain();
      uint64_t v150 = v182;
      uint64_t v151 = v186;
      *uint64_t v186 = sub_884C;
      v151[1] = v150;
      swift_retain();
      uint64_t v152 = v183;
      uint64_t v153 = v186;
      v186[2] = sub_884C;
      v153[3] = v152;
      swift_retain();
      uint64_t v154 = v184;
      uint64_t v155 = v185;
      uint64_t v156 = v186;
      v186[4] = sub_8900;
      v156[5] = v155;
      sub_6648();
      swift_bridgeObjectRelease(v154);
      if (os_log_type_enabled(v187, (os_log_type_t)v188))
      {
        uint64_t v157 = v230;
        uint64_t v169 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v168 = sub_5150(&qword_D6B60);
        uint64_t v170 = sub_74D0(0LL, v168, v168);
        uint64_t v171 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v172 = &v367;
        uint64_t v367 = v169;
        uint64_t v173 = &v366;
        uint64_t v366 = v170;
        uint64_t v174 = &v365;
        uint64_t v365 = v171;
        sub_7528(2LL, &v367);
        sub_7528(1LL, v172);
        uint64_t v363 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v364 = v182;
        sub_753C(&v363, (uint64_t)v172, (uint64_t)v173, (uint64_t)v174);
        uint64_t v175 = v157;
        if (v157)
        {
          __break(1u);
        }

        else
        {
          uint64_t v363 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v364 = v183;
          sub_753C(&v363, (uint64_t)&v367, (uint64_t)&v366, (uint64_t)&v365);
          uint64_t v166 = 0LL;
          uint64_t v363 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v364 = v185;
          sub_753C(&v363, (uint64_t)&v367, (uint64_t)&v366, (uint64_t)&v365);
          uint64_t v165 = 0LL;
          _os_log_impl(&dword_0, v187, (os_log_type_t)v188, "No exact match found for event %s", v169, v176);
          sub_7580(v170, 0LL);
          sub_7580(v171, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v167 = v165;
        }
      }

      else
      {
        uint64_t v158 = v230;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v167 = v158;
      }

      uint64_t v163 = v167;

      v283(v308, v317);
      uint64_t v164 = v163;
    }

    uint64_t v162 = v164;
    swift_bridgeObjectRelease(v216);
    swift_bridgeObjectRelease(v225);
    swift_bridgeObjectRelease(v223);
  }

  uint64_t v98 = v310;
  uint64_t v99 = sub_AD514();
  v318(v98, v99, v317);
  swift_bridgeObjectRetain(v223);
  uint64_t v205 = 32LL;
  uint64_t v206 = 7LL;
  uint64_t v100 = swift_allocObject(&unk_D1FE0, 32LL, 7LL);
  uint64_t v101 = v223;
  uint64_t v207 = v100;
  *(void *)(v100 + sub_8DD8(v0 + 16) = v224;
  *(void *)(v100 + swift_beginAccess(v1 + 24) = v101;
  uint64_t v214 = (os_log_s *)Logger.logObject.getter(v100);
  int v215 = static os_log_type_t.debug.getter();
  uint64_t v361 = 12LL;
  UnsignedInteger<>.init<A>(_:)(&v362, &v361, &type metadata for UInt32, &type metadata for Int, v320, v321, v323);
  uint32_t v203 = v362;
  uint64_t v204 = 17LL;
  uint64_t v102 = swift_allocObject(&unk_D2008, 17LL, v206);
  uint64_t v103 = v204;
  uint64_t v104 = v206;
  uint64_t v209 = v102;
  *(_BYTE *)(v102 + sub_8DD8(v0 + 16) = 32;
  uint64_t v105 = swift_allocObject(&unk_D2030, v103, v104);
  uint64_t v106 = v205;
  uint64_t v107 = v206;
  uint64_t v210 = v105;
  *(_BYTE *)(v105 + sub_8DD8(v0 + 16) = 8;
  uint64_t v108 = swift_allocObject(&unk_D2058, v106, v107);
  uint64_t v109 = v205;
  uint64_t v110 = v206;
  uint64_t v111 = v108;
  uint64_t v112 = v207;
  uint64_t v208 = v111;
  *(void *)(v111 + sub_8DD8(v0 + 16) = sub_1B890;
  *(void *)(v111 + swift_beginAccess(v1 + 24) = v112;
  uint64_t v113 = swift_allocObject(&unk_D2080, v109, v110);
  uint64_t v114 = v342;
  uint64_t v115 = v113;
  uint64_t v116 = v208;
  uint64_t v212 = v115;
  *(void *)(v115 + sub_8DD8(v0 + 16) = sub_88B8;
  *(void *)(v115 + swift_beginAccess(v1 + 24) = v116;
  uint64_t v211 = _allocateUninitializedArray<A>(_:)(3LL, v114);
  uint64_t v213 = v117;
  swift_retain();
  uint64_t v118 = v209;
  uint64_t v119 = v213;
  *uint64_t v213 = sub_884C;
  v119[1] = v118;
  swift_retain();
  uint64_t v120 = v210;
  uint64_t v121 = v213;
  v213[2] = sub_884C;
  v121[3] = v120;
  swift_retain();
  uint64_t v122 = v211;
  uint64_t v123 = v212;
  uint64_t v124 = v213;
  v213[4] = sub_8900;
  v124[5] = v123;
  sub_6648();
  swift_bridgeObjectRelease(v122);
  if (os_log_type_enabled(v214, (os_log_type_t)v215))
  {
    uint64_t v125 = v230;
    uint64_t v196 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
    uint64_t v195 = sub_5150(&qword_D6B60);
    uint64_t v197 = sub_74D0(0LL, v195, v195);
    uint64_t v198 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
    uint64_t v199 = &v360;
    uint64_t v360 = v196;
    uint64_t v200 = &v359;
    uint64_t v359 = v197;
    uint64_t v201 = &v358;
    uint64_t v358 = v198;
    sub_7528(2LL, &v360);
    sub_7528(1LL, v199);
    uint64_t v356 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
    uint64_t v357 = v209;
    sub_753C(&v356, (uint64_t)v199, (uint64_t)v200, (uint64_t)v201);
    uint64_t v202 = v125;
    if (v125)
    {
      __break(1u);
    }

    else
    {
      uint64_t v356 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
      uint64_t v357 = v210;
      sub_753C(&v356, (uint64_t)&v360, (uint64_t)&v359, (uint64_t)&v358);
      uint64_t v194 = 0LL;
      uint64_t v356 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
      uint64_t v357 = v212;
      sub_753C(&v356, (uint64_t)&v360, (uint64_t)&v359, (uint64_t)&v358);
      _os_log_impl(&dword_0, v214, (os_log_type_t)v215, "Found an exact match for event %s", v196, v203);
      sub_7580(v197, 0LL);
      sub_7580(v198, 1LL);
      UnsafeMutablePointer.deallocate()();
      swift_release();
      swift_release();
      swift_release();
    }
  }

  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  v283(v310, v317);
  uint64_t v126 = swift_allocObject(&unk_D20A8, 32LL, 7LL);
  uint64_t v127 = v223;
  uint64_t v128 = v126;
  uint64_t v129 = v216;
  *(void *)(v128 + sub_8DD8(v0 + 16) = v224;
  *(void *)(v128 + swift_beginAccess(v1 + 24) = v127;
  uint64_t v191 = v128;
  swift_bridgeObjectRelease(v129);
  swift_bridgeObjectRelease(v225);
  sub_41E98(__b);
  swift_bridgeObjectRelease(v253);
  swift_bridgeObjectRelease(v248._object);
  id v192 = v303;
  uint64_t v193 = v191;
  return v192;
}

uint64_t sub_9A074()
{
  return swift_deallocObject(v0, 24LL);
}

uint64_t sub_9A09C()
{
  uint64_t v0 = sub_94C6C();
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

void *sub_9A0D8(uint64_t a1, uint64_t a2)
{
  return sub_984AC(a1, a2);
}

void *sub_9A0F8(void *result)
{
  double v4 = result;
  if ((uint64_t)result < 0)
  {
    __break(1u);
  }

  else if ((uint64_t)result > 0)
  {
    uint64_t v1 = sub_5150(&qword_D7370);
    uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4, v1);
    *(void *)(v2 + sub_8DD8(v0 + 16) = v4;
    return (void *)v2;
  }

  else
  {
    swift_retain();
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

uint64_t sub_9A190()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A1B8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A1E0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A21C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A258()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A294()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A2BC()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A2E4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A320()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A35C()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_9A398()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A3C0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A3E8()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A424()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A460()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_9A49C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A4C4()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A4EC()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A528()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A564()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_9A5A0()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A5C8()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_9A5F0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A62C()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_9A668()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_9A6A4(uint64_t a1)
{
  *(void *)(v2 + sub_8DD8(v0 + 16) = v2;
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  double v3 = (void *)swift_task_alloc(dword_D9294);
  *(void *)(v2 + swift_beginAccess(v1 + 24) = v3;
  *double v3 = *(void *)(v2 + 16);
  v3[1] = sub_65B4;
  return sub_94B10(a1, v5, v6);
}

uint64_t type metadata accessor for SocialExactMatchUserInputParser()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin31SocialExactMatchUserInputParser);
}

void *type metadata accessor for SocialExactMatchUserInputParser.ParameterNames()
{
  return &unk_D2140;
}

unint64_t sub_9A768()
{
  return sub_9A77C();
}

unint64_t sub_9A77C()
{
  uint64_t v2 = qword_D9340;
  if (!qword_D9340)
  {
    unint64_t WitnessTable = swift_getWitnessTable(&unk_B8650, &unk_D2140);
    atomic_store(WitnessTable, (unint64_t *)&qword_D9340);
    return WitnessTable;
  }

  return v2;
}

uint64_t *sub_9A7E8()
{
  if (qword_D6AF8 != -1) {
    swift_once(&qword_D6AF8, sub_9A83C);
  }
  return &qword_D9A78;
}

#error "9A83C: too big function (funcsize=0)"
void *type metadata accessor for NLv4ToCat()
{
  return &unk_D21D0;
}

uint64_t sub_AD128(void *a1)
{
  uint64_t v8 = a1;
  uint64_t v7 = v1;
  sub_454C((uint64_t)a1, (uint64_t)v6);
  sub_C094(v6, (void *)(v1 + 16));
  type metadata accessor for CannedDialogHelper(0LL);
  sub_454C((uint64_t)a1, (uint64_t)v5);
  *(void *)(v4 + swift_beginAccess(v0 + 56) = sub_BFAC(v5);
  type metadata accessor for PlayWithMeData();
  *(void *)(v4 + 6sub_1B82C(v0 + 4) = sub_6FBFC();
  sub_4598(a1);
  return v4;
}

uint64_t sub_AD1DC()
{
  return v2;
}

uint64_t sub_AD220()
{
  uint64_t v7 = 0LL;
  sub_454C(v0 + 16, (uint64_t)v4);
  uint64_t v3 = v5;
  uint64_t v2 = v6;
  sub_8C74(v4, v5);
  (*(void (**)(uint64_t))(v2 + 8))(v3);
  return sub_4598(v4);
}

uint64_t sub_AD294()
{
  uint64_t v7 = 0LL;
  sub_454C(v0 + 16, (uint64_t)v4);
  uint64_t v3 = v5;
  uint64_t v2 = v6;
  sub_8C74(v4, v5);
  (*(void (**)(uint64_t))(v2 + 16))(v3);
  return sub_4598(v4);
}

uint64_t sub_AD308()
{
  uint64_t v8 = 0LL;
  sub_454C(v0 + 16, (uint64_t)v5);
  uint64_t v3 = v6;
  uint64_t v2 = v7;
  sub_8C74(v5, v6);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 24))(v3);
  sub_4598(v5);
  return v4;
}

uint64_t sub_AD380()
{
  uint64_t v8 = 0LL;
  sub_454C(v0 + 16, (uint64_t)v5);
  uint64_t v3 = v6;
  uint64_t v2 = v7;
  sub_8C74(v5, v6);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 32))(v3);
  sub_4598(v5);
  return v4;
}

uint64_t sub_AD3F8()
{
  uint64_t v7 = 0LL;
  sub_454C(v0 + 16, (uint64_t)v4);
  uint64_t v3 = v5;
  uint64_t v2 = v6;
  sub_8C74(v4, v5);
  (*(void (**)(uint64_t))(v2 + 40))(v3);
  return sub_4598(v4);
}

uint64_t sub_AD46C(void *a1)
{
  return sub_AD128(a1);
}

uint64_t sub_AD4B4()
{
  uint64_t v0 = sub_AD1DC();
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t type metadata accessor for SharedObjectsHolder()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin19SharedObjectsHolder);
}

uint64_t sub_AD514()
{
  if (qword_D6B00 != -1) {
    swift_once(&qword_D6B00, sub_AD574);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  return sub_62918(v0, (uint64_t)qword_D9A80);
}

uint64_t sub_AD574()
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_628A8(v2, qword_D9A80);
  sub_62918(v2, (uint64_t)qword_D9A80);
  uint64_t v3 = (void *)*sub_AD5D4();
  id v0 = v3;
  return Logger.init(_:)(v3);
}

uint64_t *sub_AD5D4()
{
  if (qword_D6B08 != -1) {
    swift_once(&qword_D6B08, sub_AD628);
  }
  return &qword_D9A98;
}

uint64_t sub_AD628()
{
  id v0 = sub_AD6A0();
  uint64_t v3 = *(void *)v0;
  uint64_t v4 = *((void *)v0 + 1);
  swift_bridgeObjectRetain(v4);
  uint64_t v1 = sub_AD6F4();
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = *((void *)v1 + 1);
  swift_bridgeObjectRetain(v6);
  uint64_t result = OS_os_log.init(subsystem:category:)(v3, v4, v5, v6);
  qword_D9A98 = result;
  return result;
}

__int128 *sub_AD6A0()
{
  if (qword_D6B10 != -1) {
    ((void (*)(uint64_t *, uint64_t (*)()))swift_once)(&qword_D6B10, sub_ADAB8);
  }
  return &xmmword_D9AA0;
}

__int128 *sub_AD6F4()
{
  if (qword_D6B18 != -1) {
    swift_once(&qword_D6B18, sub_ADAF8);
  }
  return &xmmword_D9AB0;
}

uint64_t sub_AD748()
{
  uint64_t v2 = (void *)*sub_AD5D4();
  id v0 = v2;
  return OSSignpostID.init(log:)(v2);
}

uint64_t sub_AD780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  unsigned int v15 = a3;
  uint64_t v25 = 0LL;
  uint64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  char v24 = 0;
  uint64_t v20 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v19 = *(void *)(v20 - 8);
  unint64_t v12 = (*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v21 = (char *)&v11 - v12;
  uint64_t v25 = (char *)&v11 - v12;
  uint64_t v22 = v5;
  uint64_t v23 = v6;
  char v24 = v7;
  uint64_t v8 = sub_AD748();
  unsigned int v16 = static os_signpost_type_t.begin.getter(v8);
  id v17 = (id)*sub_AD5D4();
  id v9 = v17;
  os_signpost(_:dso:log:name:signpostID:)(v16, &dword_0, v17, v13, v14, v15, v21);

  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v18, v21, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v20);
}

void sub_AD898(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v9 = static os_signpost_type_t.begin.getter(a1);
  id v10 = (id)*sub_AD5D4();
  id v4 = v10;
  os_signpost(_:dso:log:name:signpostID:)(v9, &dword_0, v10, a2, a3, a4, a1);
}

void sub_AD924(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v9 = static os_signpost_type_t.end.getter(a1);
  id v10 = (id)*sub_AD5D4();
  id v4 = v10;
  os_signpost(_:dso:log:name:signpostID:)(v9, &dword_0, v10, a2, a3, a4, a1);
}

void sub_AD9B0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  unsigned int v13 = a3;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  char v20 = 0;
  uint64_t v16 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v14 = *(void *)(v16 - 8);
  unint64_t v9 = (*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  unsigned int v15 = (char *)&v9 - v9;
  uint64_t v18 = v5;
  uint64_t v19 = v6;
  char v20 = v7;
  unsigned int v10 = static os_signpost_type_t.event.getter(v4);
  id v17 = (id)*sub_AD5D4();
  id v8 = v17;
  sub_ADAA4();
  os_signpost(_:dso:log:name:signpostID:)(v10, &dword_0, v17, v11, v12, v13, v15);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
}

uint64_t sub_ADAA4()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t sub_ADAB8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("com.apple.siri", 0xEuLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9AA0 = (__int128)v1;
  return result;
}

uint64_t sub_ADAF8()
{
  Swift::String v1 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("SiriSocialConversation", 0x16uLL, 1);
  uint64_t result = v1._countAndFlagsBits;
  xmmword_D9AB0 = (__int128)v1;
  return result;
}

char **sub_ADB38()
{
  return &off_D21E0;
}

void *type metadata accessor for Logger()
{
  return &unk_D2208;
}

void *type metadata accessor for Log()
{
  return &unk_D2228;
}

void *type metadata accessor for LogConst()
{
  return &unk_D2248;
}

void *type metadata accessor for LogConst.Category()
{
  return &unk_D2268;
}

void *type metadata accessor for LogConst.AnalyticsEvent()
{
  return &unk_D2288;
}

uint64_t sub_ADBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v148 = a1;
  uint64_t v149 = a2;
  uint64_t v181 = 0LL;
  uint64_t v179 = 0LL;
  uint64_t v180 = 0LL;
  uint64_t v178 = 0LL;
  id v177 = 0LL;
  uint64_t v175 = 0LL;
  uint64_t v176 = 0LL;
  uint64_t v139 = 0LL;
  id v167 = 0LL;
  uint64_t v157 = 0LL;
  uint64_t v140 = type metadata accessor for Logger(0LL);
  uint64_t v141 = *(void *)(v140 - 8);
  unint64_t v142 = (*(void *)(v141 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  double v4 = __chkstk_darwin(v3);
  uint64_t v143 = (char *)&v72 - v142;
  unint64_t v144 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v4);
  uint64_t v145 = (char *)&v72 - v144;
  unint64_t v146 = (*(void *)(*(void *)(sub_5150(&qword_D7378) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v6);
  uint64_t v147 = (uint64_t)&v72 - v146;
  uint64_t v150 = type metadata accessor for URL(v7);
  uint64_t v151 = *(void *)(v150 - 8);
  uint64_t v153 = *(void *)(v151 + 64);
  unint64_t v152 = (v153 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  double v9 = __chkstk_darwin(v8);
  uint64_t v154 = (char *)&v72 - v152;
  unint64_t v155 = (v153 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  __chkstk_darwin(v9);
  uint64_t v156 = (char *)&v72 - v155;
  uint64_t v181 = (char *)&v72 - v155;
  uint64_t v179 = v10;
  uint64_t v180 = v11;
  uint64_t v178 = v2;
  sub_28CC4();
  type metadata accessor for SocialConversationFlowDelegatePlugin();
  id v158 = sub_1EB44();
  id v177 = v158;
  id v159 = [v158 resourceURL];
  if (v159)
  {
    id v138 = v159;
    id v137 = v159;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v151 + 32))(v147, v154, v150);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v151 + 56))(v147, 0LL, 1LL, v150);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v151 + 56))(v147, 1LL, 1LL, v150);
  }

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v147, 1LL, v150) == 1)
  {
    sub_1BA84(v147);

    uint64_t v103 = v157;
    uint64_t v104 = v157;
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v151 + 32))(v156, v147, v150);
    uint64_t v12 = URL.appendingPathComponent(_:)(v148);
    uint64_t v134 = URL.path.getter(v12);
    uint64_t v135 = v13;
    uint64_t v175 = v134;
    uint64_t v176 = v13;
    uint64_t v133 = *(void (**)(char *, uint64_t))(v151 + 8);
    v133(v154, v150);
    sub_AED08();
    swift_bridgeObjectRetain(v135);
    id v136 = sub_AED6C(v134, v135);
    if (v136)
    {
      id v132 = v136;
      uint64_t v14 = v145;
      id v114 = v136;
      id v167 = v136;
      uint64_t v15 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v14, v15, v140);
      swift_bridgeObjectRetain(v135);
      uint64_t v120 = 32LL;
      uint64_t v121 = 7LL;
      uint64_t v16 = swift_allocObject(&unk_D2370, 32LL, 7LL);
      uint64_t v17 = v135;
      uint64_t v122 = v16;
      *(void *)(v16 + sub_8DD8(v0 + 16) = v134;
      *(void *)(v16 + swift_beginAccess(v1 + 24) = v17;
      unint64_t v130 = (os_log_s *)Logger.logObject.getter(v16);
      int v131 = static os_log_type_t.debug.getter();
      uint64_t v117 = &v165;
      uint64_t v165 = 12LL;
      unint64_t v115 = sub_7788();
      unint64_t v116 = sub_77F0();
      unint64_t v18 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v166, v117, &type metadata for UInt32, &type metadata for Int, v115, v116, v18);
      uint32_t v118 = v166;
      uint64_t v119 = 17LL;
      uint64_t v19 = swift_allocObject(&unk_D2398, 17LL, v121);
      uint64_t v20 = v119;
      uint64_t v21 = v121;
      uint64_t v124 = v19;
      *(_BYTE *)(v19 + sub_8DD8(v0 + 16) = 32;
      uint64_t v22 = swift_allocObject(&unk_D23C0, v20, v21);
      uint64_t v23 = v120;
      uint64_t v24 = v121;
      uint64_t v125 = v22;
      *(_BYTE *)(v22 + sub_8DD8(v0 + 16) = 8;
      uint64_t v25 = swift_allocObject(&unk_D23E8, v23, v24);
      uint64_t v26 = v120;
      uint64_t v27 = v121;
      uint64_t v28 = v25;
      uint64_t v29 = v122;
      uint64_t v123 = v28;
      *(void *)(v28 + sub_8DD8(v0 + 16) = sub_1B890;
      *(void *)(v28 + swift_beginAccess(v1 + 24) = v29;
      uint64_t v30 = swift_allocObject(&unk_D2410, v26, v27);
      uint64_t v31 = v123;
      uint64_t v127 = v30;
      *(void *)(v30 + sub_8DD8(v0 + 16) = sub_88B8;
      *(void *)(v30 + swift_beginAccess(v1 + 24) = v31;
      uint64_t v129 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v126 = _allocateUninitializedArray<A>(_:)(3LL, v129);
      uint64_t v128 = v32;
      swift_retain();
      uint64_t v33 = v124;
      uint64_t v34 = v128;
      *uint64_t v128 = sub_884C;
      v34[1] = v33;
      swift_retain();
      uint64_t v35 = v125;
      uint64_t v36 = v128;
      v128[2] = sub_884C;
      v36[3] = v35;
      swift_retain();
      uint64_t v37 = v126;
      uint64_t v38 = v127;
      uint64_t v39 = v128;
      v128[4] = sub_8900;
      v39[5] = v38;
      sub_6648();
      swift_bridgeObjectRelease(v37);
      if (os_log_type_enabled(v130, (os_log_type_t)v131))
      {
        uint64_t v40 = v139;
        uint64_t v107 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v106 = sub_5150(&qword_D6B60);
        uint64_t v108 = sub_74D0(0LL, v106, v106);
        uint64_t v109 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v110 = v164;
        v164[0] = v107;
        uint64_t v111 = &v163;
        uint64_t v163 = v108;
        uint64_t v112 = &v162;
        uint64_t v162 = v109;
        sub_7528(2LL, v164);
        sub_7528(1LL, v110);
        unint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v161 = v124;
        sub_753C(&v160, (uint64_t)v110, (uint64_t)v111, (uint64_t)v112);
        uint64_t v113 = v40;
        if (v40)
        {
          __break(1u);
        }

        else
        {
          unint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v161 = v125;
          sub_753C(&v160, (uint64_t)v164, (uint64_t)&v163, (uint64_t)&v162);
          uint64_t v105 = 0LL;
          unint64_t v160 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v161 = v127;
          sub_753C(&v160, (uint64_t)v164, (uint64_t)&v163, (uint64_t)&v162);
          _os_log_impl(&dword_0, v130, (os_log_type_t)v131, "Loaded image from bundle: %s", v107, v118);
          sub_7580(v108, 0LL);
          sub_7580(v109, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v141 + 8))(v145, v140);
      uint64_t v98 = 0LL;
      uint64_t v41 = type metadata accessor for Base64EncodingOptions(0LL);
      uint64_t v99 = _allocateUninitializedArray<A>(_:)(v98, v41);
      unint64_t v42 = sub_95D8();
      SetAlgebra<>.init(arrayLiteral:)(v99, v41, v42);
      id v100 = [v114 base64EncodedStringWithOptions:v164[1]];
      uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
      uint64_t v102 = v43;

      swift_bridgeObjectRelease(v135);
      v133(v156, v150);

      uint64_t v103 = v101;
      uint64_t v104 = v102;
    }

    else
    {
      uint64_t v44 = v143;
      uint64_t v45 = sub_AD514();
      (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v44, v45, v140);
      swift_bridgeObjectRetain(v135);
      uint64_t v86 = 32LL;
      uint64_t v87 = 7LL;
      uint64_t v46 = swift_allocObject(&unk_D22A8, 32LL, 7LL);
      uint64_t v47 = v135;
      uint64_t v88 = v46;
      *(void *)(v46 + sub_8DD8(v0 + 16) = v134;
      *(void *)(v46 + swift_beginAccess(v1 + 24) = v47;
      uint64_t v96 = (os_log_s *)Logger.logObject.getter(v46);
      int v97 = static os_log_type_t.error.getter();
      uint64_t v83 = &v173;
      uint64_t v173 = 12LL;
      unint64_t v81 = sub_7788();
      unint64_t v82 = sub_77F0();
      unint64_t v48 = sub_7858();
      UnsignedInteger<>.init<A>(_:)(&v174, v83, &type metadata for UInt32, &type metadata for Int, v81, v82, v48);
      uint32_t v84 = v174;
      uint64_t v85 = 17LL;
      uint64_t v49 = swift_allocObject(&unk_D22D0, 17LL, v87);
      uint64_t v50 = v85;
      uint64_t v51 = v87;
      uint64_t v90 = v49;
      *(_BYTE *)(v49 + sub_8DD8(v0 + 16) = 32;
      uint64_t v52 = swift_allocObject(&unk_D22F8, v50, v51);
      uint64_t v53 = v86;
      uint64_t v54 = v87;
      uint64_t v91 = v52;
      *(_BYTE *)(v52 + sub_8DD8(v0 + 16) = 8;
      uint64_t v55 = swift_allocObject(&unk_D2320, v53, v54);
      uint64_t v56 = v86;
      uint64_t v57 = v87;
      uint64_t v58 = v55;
      uint64_t v59 = v88;
      uint64_t v89 = v58;
      *(void *)(v58 + sub_8DD8(v0 + 16) = sub_1B890;
      *(void *)(v58 + swift_beginAccess(v1 + 24) = v59;
      uint64_t v60 = swift_allocObject(&unk_D2348, v56, v57);
      uint64_t v61 = v89;
      uint64_t v93 = v60;
      *(void *)(v60 + sub_8DD8(v0 + 16) = sub_88B8;
      *(void *)(v60 + swift_beginAccess(v1 + 24) = v61;
      uint64_t v95 = sub_5150((uint64_t *)&unk_D6B50);
      uint64_t v92 = _allocateUninitializedArray<A>(_:)(3LL, v95);
      uint64_t v94 = v62;
      swift_retain();
      uint64_t v63 = v90;
      uint64_t v64 = v94;
      *uint64_t v94 = sub_884C;
      v64[1] = v63;
      swift_retain();
      uint64_t v65 = v91;
      uint64_t v66 = v94;
      v94[2] = sub_884C;
      void v66[3] = v65;
      swift_retain();
      uint64_t v67 = v92;
      uint64_t v68 = v93;
      uint64_t v69 = v94;
      v94[4] = sub_8900;
      v69[5] = v68;
      sub_6648();
      swift_bridgeObjectRelease(v67);
      if (os_log_type_enabled(v96, (os_log_type_t)v97))
      {
        uint64_t v70 = v139;
        uint64_t v74 = (uint8_t *)static UnsafeMutablePointer.allocate(capacity:)(12LL, &type metadata for UInt8);
        uint64_t v73 = sub_5150(&qword_D6B60);
        uint64_t v75 = sub_74D0(0LL, v73, v73);
        uint64_t v76 = sub_74D0(1LL, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Any + 8);
        uint64_t v77 = &v172;
        uint64_t v172 = v74;
        uint64_t v78 = &v171;
        uint64_t v171 = v75;
        uint64_t v79 = &v170;
        uint64_t v170 = v76;
        sub_7528(2LL, &v172);
        sub_7528(1LL, v77);
        uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
        uint64_t v169 = v90;
        sub_753C(&v168, (uint64_t)v77, (uint64_t)v78, (uint64_t)v79);
        uint64_t v80 = v70;
        if (v70)
        {
          __break(1u);
        }

        else
        {
          uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_884C;
          uint64_t v169 = v91;
          sub_753C(&v168, (uint64_t)&v172, (uint64_t)&v171, (uint64_t)&v170);
          uint64_t v72 = 0LL;
          uint64_t v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_8900;
          uint64_t v169 = v93;
          sub_753C(&v168, (uint64_t)&v172, (uint64_t)&v171, (uint64_t)&v170);
          _os_log_impl(&dword_0, v96, (os_log_type_t)v97, "Failed to loaded image from bundle: %s", v74, v84);
          sub_7580(v75, 0LL);
          sub_7580(v76, 1LL);
          UnsafeMutablePointer.deallocate()();
          swift_release();
          swift_release();
          swift_release();
        }
      }

      else
      {
        swift_release();
        swift_release();
        swift_release();
      }

      (*(void (**)(char *, uint64_t))(v141 + 8))(v143, v140);
      swift_bridgeObjectRelease(v135);
      v133(v156, v150);

      uint64_t v103 = v157;
      uint64_t v104 = v157;
    }
  }

  return v103;
}

unint64_t sub_AED08()
{
  uint64_t v3 = qword_D9420;
  if (!qword_D9420)
  {
    uint64_t v0 = objc_opt_self(&OBJC_CLASS___NSData);
    unint64_t ObjCClassMetadata = swift_getObjCClassMetadata(v0);
    atomic_store(ObjCClassMetadata, (unint64_t *)&qword_D9420);
    return ObjCClassMetadata;
  }

  return v3;
}

id sub_AED6C(uint64_t a1, uint64_t a2)
{
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  return sub_AF0F8(a1, a2);
}

uint64_t sub_AEDB0()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_AEDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v13 = v2;
  Swift::String v3 = String.lowercased()();
  Swift::String v4 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(".png", 4uLL, 1);
  uint64_t v8 = static String.+ infix(_:_:)(v3._countAndFlagsBits, v3._object, v4._countAndFlagsBits);
  uint64_t v9 = v5;
  swift_bridgeObjectRelease(v4._object);
  swift_bridgeObjectRelease(v3._object);
  v10._uint64_t countAndFlagsBits = sub_ADBA8(v8, v9);
  v10._object = v6;
  swift_bridgeObjectRelease(v9);
  Swift::String v11 = v10;
  if (v10._object)
  {
    Swift::String v12 = v11;
  }

  else
  {
    Swift::String v12 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
    sub_8DD8((uint64_t)&v11);
  }

  return v12._countAndFlagsBits;
}

uint64_t sub_AEF0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v22 = 0LL;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  char v23 = a3 & 1;
  Swift::String v21 = String.lowercased()();
  if ((a3 & 1) != 0)
  {
    Swift::String v5 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-win", 4uLL, 1);
    object = v5._object;
    uint64_t countAndFlagsBits = v5._countAndFlagsBits;
  }

  else
  {
    Swift::String v6 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("-lose", 5uLL, 1);
    object = v6._object;
    uint64_t countAndFlagsBits = v6._countAndFlagsBits;
  }

  uint64_t v17 = object;
  static String.+= infix(_:_:)(&v21, countAndFlagsBits, object);
  swift_bridgeObjectRelease(v17);
  uint64_t v12 = v21._countAndFlagsBits;
  uint64_t v13 = v21._object;
  swift_bridgeObjectRetain(v21._object);
  Swift::String v7 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)(".png", 4uLL, 1);
  uint64_t v14 = static String.+ infix(_:_:)(v12, v13, v7._countAndFlagsBits);
  uint64_t v15 = v8;
  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v13);
  v16._uint64_t countAndFlagsBits = sub_ADBA8(v14, v15);
  v16._object = v9;
  swift_bridgeObjectRelease(v15);
  Swift::String v19 = v16;
  if (v16._object)
  {
    Swift::String v20 = v19;
  }

  else
  {
    Swift::String v20 = String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)("", 0LL, 1);
    sub_8DD8((uint64_t)&v19);
  }

  uint64_t v11 = v20._countAndFlagsBits;
  sub_8DD8((uint64_t)&v21);
  return v11;
}

id sub_AF0F8(uint64_t a1, uint64_t a2)
{
  id v4 = String._bridgeToObjectiveC()();
  id v6 = objc_msgSend(v3, "initWithContentsOfFile:");

  swift_bridgeObjectRelease(a2);
  return v6;
}

uint64_t sub_AF150()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_AF178()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_AF1A0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_AF1DC()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_AF218()
{
  return swift_deallocObject(v2, 32LL);
}

uint64_t sub_AF254()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_AF27C()
{
  return swift_deallocObject(v0, 17LL);
}

uint64_t sub_AF2A4()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t sub_AF2E0()
{
  return swift_deallocObject(v1, 32LL);
}

uint64_t type metadata accessor for ImageLoader()
{
  return objc_opt_self(&OBJC_CLASS____TtC36SocialConversationFlowDelegatePlugin11ImageLoader);
}