LABEL_25:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v103 = v258;
  v104 = sub_6960(v258, (uint64_t)qword_2969C8);
  v105 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v55 + 16);
  v106 = v254;
  v105(v254, v104, v103);
  v107 = v36;
  v108 = (os_log_s *)Logger.logObject.getter(v107);
  v109 = static os_log_type_t.default.getter(v108);
  v110 = os_log_type_enabled(v108, v109);
  v250 = v107;
  if (v110)
  {
    v111 = swift_slowAlloc(12LL, -1LL);
    v249 = v104;
    v112 = (uint8_t *)v111;
    v113 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v261 = v113;
    *(_DWORD *)v112 = 136315138;
    v248 = v112 + 4;
    v114 = v107;
    v115 = v105;
    v116 = [v114 description];
    v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
    v119 = v118;

    v105 = v115;
    *(void *)&v260 = sub_6978(v117, v119, (uint64_t *)&v261);
    v103 = v258;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);

    swift_bridgeObjectRelease(v119);
    _os_log_impl(&dword_0, v108, v109, "CommonMedia#makeSiriKitIntentHandler for intent: %s", v112, 0xCu);
    swift_arrayDestroy(v113, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v113, -1LL, -1LL);
    v120 = v112;
    v104 = v249;
    swift_slowDealloc(v120, -1LL, -1LL);

    v121 = *(void (**)(_BYTE *, uint64_t))(v257 + 8);
    v121(v254, v103);
  }

  else
  {

    v121 = *(void (**)(_BYTE *, uint64_t))(v55 + 8);
    v121(v106, v103);
  }

  v122 = v251;
  v123 = v253;
  if ((sub_7F354() & 1) == 0)
  {
    v105(v252, v104, v103);
    v133 = v250;
    swift_retain_n(v122, 2LL);
    v134 = v133;
    v135 = (os_log_s *)Logger.logObject.getter(v134);
    v136 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v135, v136))
    {
      v137 = swift_slowAlloc(22LL, -1LL);
      v138 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)v137 = 138412546;
      v139 = App.appIdentifier.getter(v138);
      v141 = v140;
      if (v140)
      {
        v142 = String.debugDescription.getter(v139, v140);
        v144 = v143;
        swift_bridgeObjectRelease(v141);
        v145 = sub_6C9C();
        v146 = swift_allocError(&type metadata for String, v145, 0LL, 0LL);
        *v147 = v142;
        v147[1] = v144;
        v122 = v251;
        v141 = _swift_stdlib_bridgeErrorToNSError(v146);
        v264 = v141;
      }

      else
      {
        v264 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v264, v265);
      *v138 = v141;
      swift_release_n(v122, 2LL);
      *(_WORD *)(v137 + 12) = 2112;
      v163 = [v134 launchId];
      v164 = v163;
      if (v163)
      {
        v165 = static String._unconditionallyBridgeFromObjectiveC(_:)(v163);
        v167 = v166;

        v168 = sub_6C9C();
        v169 = swift_allocError(&type metadata for String, v168, 0LL, 0LL);
        *v170 = v165;
        v170[1] = v167;
        v164 = (void *)_swift_stdlib_bridgeErrorToNSError(v169);
        v264 = (uint64_t)v164;
      }

      else
      {
        v264 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v264, v265);
      v138[1] = (uint64_t)v164;

      _os_log_impl( &dword_0,  v135,  v136,  "CommonMedia#makeSiriKitIntentHandler not for 1p music or podcasts (or radio on watch). Bundle: %@, intent launchId: %@",  (uint8_t *)v137,  0x16u);
      v171 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v138, 2LL, v171);
      swift_slowDealloc(v138, -1LL, -1LL);
      swift_slowDealloc(v137, -1LL, -1LL);

      v103 = v258;
    }

    else
    {

      swift_release_n(v122, 2LL);
    }

    v121(v252, v103);
    v155 = type metadata accessor for SiriKitIntentHandler(0LL);
    v156 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56LL);
    v157 = v256;
    v158 = 1LL;
    return v156(v157, v158, 1LL, v155);
  }

  v124 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v105)(v123, v104, v103);
  v125 = (os_log_s *)Logger.logObject.getter(v124);
  v126 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v125, v126))
  {
    v127 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    v128 = swift_slowAlloc(32LL, -1LL);
    v264 = v128;
    *(_DWORD *)v127 = 136315138;
    if (qword_283998 != -1) {
      swift_once(&qword_283998, sub_1E433C);
    }
    swift_beginAccess(&static PlayMedia.intentHandler, &v261, 0LL, 0LL);
    *(void *)&v260 = swift_getObjectType(static PlayMedia.intentHandler);
    v129 = sub_6C5C((uint64_t *)&unk_2875F0);
    v130 = String.init<A>(describing:)(&v260, v129);
    v132 = v131;
    *(void *)&v260 = sub_6978(v130, v131, &v264);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);
    swift_bridgeObjectRelease(v132);
    _os_log_impl( &dword_0,  v125,  v126,  "CommonMedia#makeSiriKitIntentHandler IS for 1p music or podcasts, returning embedded handler: %s",  v127,  0xCu);
    swift_arrayDestroy(v128, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v128, -1LL, -1LL);
    swift_slowDealloc(v127, -1LL, -1LL);

    v121(v253, v258);
    v122 = v251;
  }

  else
  {

    v121(v123, v103);
  }

  v148 = qword_283998;
  swift_retain(v122);
  v149 = v148 == -1;
  v150 = v250;
  if (!v149) {
    swift_once(&qword_283998, sub_1E433C);
  }
  swift_beginAccess(&static PlayMedia.intentHandler, &v264, 0LL, 0LL);
  v151 = (void *)static PlayMedia.intentHandler;
  v152 = v150;
  v153 = v151;
  v154 = v256;
  SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v122, v153, v152, v255);
  v155 = type metadata accessor for SiriKitIntentHandler(0LL);
  v156 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56LL);
  v157 = v154;
LABEL_42:
  v158 = 0LL;
  return v156(v157, v158, 1LL, v155);
}

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v102 = v256;
  v103 = sub_6960(v256, (uint64_t)qword_2969C8);
  v104 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  v105 = v252;
  v104(v252, v103, v102);
  v106 = v36;
  v107 = (os_log_s *)Logger.logObject.getter(v106);
  v108 = static os_log_type_t.default.getter();
  v109 = os_log_type_enabled(v107, v108);
  v248 = v106;
  if (v109)
  {
    v110 = swift_slowAlloc(12LL, -1LL);
    v247 = v103;
    v111 = (uint8_t *)v110;
    v112 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v259 = v112;
    *(_DWORD *)v111 = 136315138;
    v246 = (char *)(v111 + 4);
    v113 = v106;
    v114 = v104;
    v115 = [v113 description];
    v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
    v118 = v117;

    v104 = v114;
    *(void *)&v258 = sub_6978(v116, v118, (uint64_t *)&v259);
    v102 = v256;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);

    swift_bridgeObjectRelease(v118);
    _os_log_impl(&dword_0, v107, v108, "CommonMedia#makeSiriKitIntentHandler for intent: %s", v111, 0xCu);
    swift_arrayDestroy(v112, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v112, -1LL, -1LL);
    v119 = v111;
    v103 = v247;
    swift_slowDealloc(v119, -1LL, -1LL);

    v120 = *(void (**)(char *, uint64_t))(v255 + 8);
    v120(v252, v102);
  }

  else
  {

    v120 = *(void (**)(char *, uint64_t))(v55 + 8);
    v120(v105, v102);
  }

  v121 = v249;
  v122 = v251;
  if ((sub_7F354() & 1) == 0)
  {
    v104(v250, v103, v102);
    v132 = v248;
    swift_retain_n(v121, 2LL);
    v133 = v132;
    v134 = (os_log_s *)Logger.logObject.getter(v133);
    v135 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v134, v135))
    {
      v136 = swift_slowAlloc(22LL, -1LL);
      v137 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)v136 = 138412546;
      v138 = App.appIdentifier.getter(v137);
      v140 = v139;
      if (v139)
      {
        v141 = String.debugDescription.getter(v138, v139);
        v143 = v142;
        swift_bridgeObjectRelease(v140);
        v144 = sub_6C9C();
        v145 = swift_allocError(&type metadata for String, v144, 0LL, 0LL);
        *v146 = v141;
        v146[1] = v143;
        v121 = v249;
        v140 = _swift_stdlib_bridgeErrorToNSError(v145);
        v262 = v140;
      }

      else
      {
        v262 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v262, v263);
      *v137 = v140;
      swift_release_n(v121, 2LL);
      *(_WORD *)(v136 + 12) = 2112;
      v162 = [v133 launchId];
      v163 = v162;
      if (v162)
      {
        v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
        v166 = v165;

        v167 = sub_6C9C();
        v168 = swift_allocError(&type metadata for String, v167, 0LL, 0LL);
        *v169 = v164;
        v169[1] = v166;
        v163 = (void *)_swift_stdlib_bridgeErrorToNSError(v168);
        v262 = (uint64_t)v163;
      }

      else
      {
        v262 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v262, v263);
      v137[1] = (uint64_t)v163;

      _os_log_impl( &dword_0,  v134,  v135,  "CommonMedia#makeSiriKitIntentHandler not for 1p music or podcasts (or radio on watch). Bundle: %@, intent launchId: %@",  (uint8_t *)v136,  0x16u);
      v170 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v137, 2LL, v170);
      swift_slowDealloc(v137, -1LL, -1LL);
      swift_slowDealloc(v136, -1LL, -1LL);

      v102 = v256;
    }

    else
    {

      swift_release_n(v121, 2LL);
    }

    v120(v250, v102);
    v154 = type metadata accessor for SiriKitIntentHandler(0LL);
    v155 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56LL);
    v156 = v254;
    v157 = 1LL;
    return v155(v156, v157, 1LL, v154);
  }

  v123 = ((uint64_t (*)(char *, uint64_t, uint64_t))v104)(v122, v103, v102);
  v124 = (os_log_s *)Logger.logObject.getter(v123);
  v125 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v124, v125))
  {
    v126 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    v127 = swift_slowAlloc(32LL, -1LL);
    v262 = v127;
    *(_DWORD *)v126 = 136315138;
    if (qword_283998 != -1) {
      swift_once(&qword_283998, sub_1E433C);
    }
    swift_beginAccess(&static PlayMedia.intentHandler, &v259, 0LL, 0LL);
    *(void *)&v258 = swift_getObjectType(static PlayMedia.intentHandler);
    v128 = sub_6C5C((uint64_t *)&unk_2875F0);
    v129 = String.init<A>(describing:)(&v258, v128);
    v131 = v130;
    *(void *)&v258 = sub_6978(v129, v130, &v262);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);
    swift_bridgeObjectRelease(v131);
    _os_log_impl( &dword_0,  v124,  v125,  "CommonMedia#makeSiriKitIntentHandler IS for 1p music or podcasts, returning embedded handler: %s",  v126,  0xCu);
    swift_arrayDestroy(v127, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v127, -1LL, -1LL);
    swift_slowDealloc(v126, -1LL, -1LL);

    v120(v251, v256);
    v121 = v249;
  }

  else
  {

    v120(v122, v102);
  }

  v147 = qword_283998;
  swift_retain(v121);
  v148 = v147 == -1;
  v149 = v248;
  if (!v148) {
    swift_once(&qword_283998, sub_1E433C);
  }
  swift_beginAccess(&static PlayMedia.intentHandler, &v262, 0LL, 0LL);
  v150 = (void *)static PlayMedia.intentHandler;
  v151 = v149;
  v152 = v150;
  v153 = v254;
  SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v121, v152, v151, v253);
  v154 = type metadata accessor for SiriKitIntentHandler(0LL);
  v155 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56LL);
  v156 = v153;
LABEL_42:
  v157 = 0LL;
  return v155(v156, v157, 1LL, v154);
}

    v70 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v78, 1LL, 1LL, v75);
    v77(v70);
    return sub_1F6CC(v70, (uint64_t *)&unk_286C50);
  }

  v27 = (void *)v26;
  swift_bridgeObjectRelease(v25);
  sub_96388();
  v28 = sub_6C5C(&qword_287980);
  v29 = swift_allocObject(v28, 40LL, 7LL);
  *(_OWORD *)(v29 + 16) = xmmword_214980;
  *(void *)(v29 + 32) = v27;
  v83[0] = v29;
  specialized Array._endMutation()(v29);
  v30 = v83[0];
  v31 = v27;
  NLContextUpdate.conversationStateAttachments.setter(v30);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  v32 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v33 = MachineUtteranceBuilder.init()();
  v34 = App.appIdentifier.getter(v33);
  if (v35) {
    v36 = v34;
  }
  else {
    v36 = 0LL;
  }
  if (v35) {
    v37 = v35;
  }
  else {
    v37 = 0xE000000000000000LL;
  }
  v38 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)( 0x656D614E707061LL,  0xE700000000000000LL,  v36,  v37);
  swift_bridgeObjectRelease(v37);
  v39 = swift_release(v33);
  v40 = dispatch thunk of MachineUtteranceBuilder.build()(v39);
  v42 = v41;
  swift_release(v38);
  NLContextUpdate.nlInput.setter(v40, v42);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v43 = sub_6960(v6, (uint64_t)qword_2969C8);
  v44 = v79;
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 16))(v14, v43, v6);
  v46 = (os_log_s *)Logger.logObject.getter(v45);
  v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    v72 = swift_slowAlloc(32LL, -1LL);
    v83[0] = v72;
    v73 = v31;
    *(_DWORD *)v48 = 136315138;
    v71 = v48 + 4;
    swift_beginAccess(v21, &v81, 0LL, 0LL);
    v49 = v74;
    v50 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v18, v21, v75);
    v51 = String.init<A>(describing:)(v18, v50);
    v53 = v52;
    v80 = sub_6978(v51, v52, v83);
    v31 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81);
    swift_bridgeObjectRelease(v53);
    _os_log_impl(&dword_0, v46, v47, "CommonNLContextProvider#makeAppNeedsConfirmation for update: %s", v48, 0xCu);
    v54 = v72;
    swift_arrayDestroy(v72, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v48, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v14, v6);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v6);
    v49 = v74;
    v50 = v75;
  }

  swift_beginAccess(v21, v83, 0LL, 0LL);
  v68 = (uint64_t)v78;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v78, v21, v50);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v68, 0LL, 1LL, v50);
  v77(v68);

  sub_1F6CC(v68, (uint64_t *)&unk_286C50);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v21, v50);
}

    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(void *)(v40 + 72);
    v25 = *(void *)(v7 + 48) + v24 * v19;
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
    v26(v6, v25, v4);
    v27 = *(void *)(v9 + 40);
    v28 = sub_CA240(&qword_287DD0, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v29 = -1LL << *(_BYTE *)(v9 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1LL << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1LL << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }

        v34 = v31 == v33;
        if (v31 == v33) {
          v31 = 0LL;
        }
        v32 |= v34;
        v35 = *(void *)(v14 + 8 * v31);
      }

      while (v35 == -1);
      v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }

    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v17;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v9 + 48) + v17 * v24, v6, v4);
    ++*(void *)(v9 + 16);
    v7 = v23;
  }

  v22 = v20 + 3;
  if (v22 < v38)
  {
    v21 = v39[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1LL)) {
          goto LABEL_41;
        }
        if (v16 >= v38) {
          goto LABEL_35;
        }
        v21 = v39[v16];
        ++v22;
        if (v21) {
          goto LABEL_25;
        }
      }
    }

    v16 = v22;
    goto LABEL_25;
  }

    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(void *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v24 * v20, v4);
    v25 = *(void *)(v10 + 40);
    v26 = sub_CA240(&qword_287DD0, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v27 = -1LL << *(_BYTE *)(v10 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1LL << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1LL << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        v32 = v29 == v31;
        if (v29 == v31) {
          v29 = 0LL;
        }
        v30 |= v32;
        v33 = *(void *)(v15 + 8 * v29);
      }

      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v29 << 6);
    }

    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))( *(void *)(v10 + 48) + v18 * v24,  v7,  v4);
    ++*(void *)(v10 + 16);
  }

  v23 = v21 + 3;
  if (v23 >= v37)
  {
LABEL_35:
    result = swift_release_n(v8, 2LL);
    v2 = v35;
    goto LABEL_37;
  }

  v22 = *(void *)(v36 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }

  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_35;
    }
    v22 = *(void *)(v36 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }

  swift_bridgeObjectRelease("er");
  swift_bridgeObjectRelease(a5);
  a5 = v205;
  a7 = v206;
  v8 = v189;
LABEL_32:
  swift_arrayDestroy(&qword_26A2F0, 1LL, &type metadata for String);
  v62 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A300);
  v44 = v209;
  if ((v62 & 1) != 0)
  {
LABEL_33:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    v206 = a7;
    v63 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    v64 = v210;
    v65 = (*(uint64_t (**)(char *, uint64_t, char *))(v210 + 16))(v15, v63, v44);
    v66 = (os_log_s *)Logger.logObject.getter(v65);
    v67 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_0, v66, v67, "Calling podcast promotion canned dialog", v68, 2u);
      swift_slowDealloc(v68, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v64 + 8))(v15, v44);
    sub_30544();
    v70 = v69;
    v71 = sub_6C5C(&qword_2844D0);
    inited = swift_initStackObject(v71, &v214);
    *(_OWORD *)(inited + 16) = xmmword_219300;
    *(void *)(inited + 32) = 0xD000000000000016LL;
    *(void *)(inited + 40) = 0x8000000000221980LL;
    if (v70)
    {
      v73 = v8;
      v74 = String.lowercased()();
      v75 = String.lowercased()();
      object = v75._object;
      if (v74._object)
      {
        if (v74._countAndFlagsBits == v75._countAndFlagsBits && v74._object == v75._object)
        {
          swift_bridgeObjectRelease_n(v74._object, 2LL);
          v77 = 1;
        }

        else
        {
          v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v74._countAndFlagsBits, v74._object);
          swift_bridgeObjectRelease(v74._object);
          swift_bridgeObjectRelease(v75._object);
        }

        *(_BYTE *)(inited + 48) = v77 & 1;
        *(void *)(inited + 72) = &type metadata for Bool;
        strcpy((char *)(inited + 80), "isStoryTelling");
        *(_BYTE *)(inited + 95) = -18;
        goto LABEL_66;
      }
    }

    else
    {
      object = String.lowercased()()._object;
    }

    swift_bridgeObjectRelease(object);
    *(_BYTE *)(inited + 48) = 0;
    *(void *)(inited + 72) = &type metadata for Bool;
    strcpy((char *)(inited + 80), "isStoryTelling");
    *(_BYTE *)(inited + 95) = -18;
    if (!v70)
    {
      v93 = String.lowercased()()._object;
      goto LABEL_71;
    }

    v73 = v8;
LABEL_66:
    v102 = String.lowercased()();
    v103 = String.lowercased()();
    v93 = v103._object;
    if (v102._object)
    {
      if (v102._countAndFlagsBits == v103._countAndFlagsBits && v102._object == v103._object)
      {
        swift_bridgeObjectRelease_n(v102._object, 2LL);
        v104 = 1;
      }

      else
      {
        v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v102._countAndFlagsBits, v102._object);
        swift_bridgeObjectRelease(v102._object);
        swift_bridgeObjectRelease(v103._object);
      }

      *(_BYTE *)(inited + 96) = v104 & 1;
      *(void *)(inited + 120) = &type metadata for Bool;
      strcpy((char *)(inited + 128), "isStorySleep");
      *(_BYTE *)(inited + 141) = 0;
      *(_WORD *)(inited + 142) = -5120;
      goto LABEL_75;
    }

    v8 = v73;
LABEL_71:
    swift_bridgeObjectRelease(v93);
    *(_BYTE *)(inited + 96) = 0;
    *(void *)(inited + 120) = &type metadata for Bool;
    strcpy((char *)(inited + 128), "isStorySleep");
    *(_BYTE *)(inited + 141) = 0;
    *(_WORD *)(inited + 142) = -5120;
    if (!v70)
    {
      v107 = String.lowercased()()._object;
      goto LABEL_83;
    }

    v73 = v8;
LABEL_75:
    v105 = String.lowercased()();
    v106 = String.lowercased()();
    v107 = v106._object;
    if (v105._object)
    {
      if (v105._countAndFlagsBits == v106._countAndFlagsBits && v105._object == v106._object)
      {
        swift_bridgeObjectRelease_n(v105._object, 2LL);
        v108 = 1;
      }

      else
      {
        v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v105._countAndFlagsBits, v105._object);
        swift_bridgeObjectRelease(v105._object);
        swift_bridgeObjectRelease(v106._object);
      }

      *(_BYTE *)(inited + 144) = v108 & 1;
      *(void *)(inited + 168) = &type metadata for Bool;
      *(void *)(inited + 176) = 0xD000000000000011LL;
      *(void *)(inited + 184) = 0x80000000002219A0LL;
      goto LABEL_85;
    }

    v8 = v73;
LABEL_83:
    swift_bridgeObjectRelease(v107);
    *(_BYTE *)(inited + 144) = 0;
    *(void *)(inited + 168) = &type metadata for Bool;
    *(void *)(inited + 176) = 0xD000000000000011LL;
    *(void *)(inited + 184) = 0x80000000002219A0LL;
    if (!v70)
    {
      v111 = String.lowercased()()._object;
      goto LABEL_93;
    }

    v73 = v8;
LABEL_85:
    v109 = String.lowercased()();
    v110 = String.lowercased()();
    v111 = v110._object;
    if (v109._object)
    {
      if (v109._countAndFlagsBits == v110._countAndFlagsBits && v109._object == v110._object)
      {
        swift_bridgeObjectRelease_n(v109._object, 2LL);
        v112 = 1;
      }

      else
      {
        v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v109._countAndFlagsBits, v109._object);
        swift_bridgeObjectRelease(v109._object);
        swift_bridgeObjectRelease(v110._object);
      }

      *(_BYTE *)(inited + 192) = v112 & 1;
      *(void *)(inited + 216) = &type metadata for Bool;
      strcpy((char *)(inited + 224), "isWordOfTheDay");
      *(_BYTE *)(inited + 239) = -18;
      v8 = v73;
      goto LABEL_94;
    }

    v8 = v73;
LABEL_93:
    swift_bridgeObjectRelease(v111);
    *(_BYTE *)(inited + 192) = 0;
    *(void *)(inited + 216) = &type metadata for Bool;
    strcpy((char *)(inited + 224), "isWordOfTheDay");
    *(_BYTE *)(inited + 239) = -18;
    if (!v70)
    {
      v115 = String.lowercased()()._object;
      goto LABEL_100;
    }

  v65 = v399;
  *(void *)&v427 = v90;
  v100 = String.init<A>(describing:)(&v427, v85);
  v102 = v101;
  *(void *)&v427 = sub_6978(v100, v101, (uint64_t *)&v430);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v427, (char *)&v427 + 8);
  v103 = (void *)v419;

  swift_bridgeObjectRelease(v102);
  _os_log_impl( &dword_0,  v71,  (os_log_type_t)v91,  "PlayMediaDialogProvider: makePlayDialog with intent internal signals: %s and first media item signals: %s",  (uint8_t *)v77,  0x16u);
  v104 = v378;
  swift_arrayDestroy(v378, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v104, -1LL, -1LL);
  v105 = v77;
  v70 = v103;
  swift_slowDealloc(v105, -1LL, -1LL);

  v82 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8);
  v74 = v400;
  v83 = v82(v420, v400);
  v84 = v407;
  v69 = v404;
LABEL_26:
  v106 = v418;
  App.appIdentifier.getter(v83);
  if (v107)
  {
    if ((v405 & 1) != 0)
    {
      v421 = v107;
      v407 = v84;
      v404 = v69;
      v419 = (unint64_t)v70;
      *(void *)&v430 = v70;
      v411 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      v420 = MediaIntentCommons.getMediaType()(v411, &protocol witness table for INPlayMediaIntent);
      v108 = sub_6C5C(&qword_28B5F0);
      inited = swift_initStackObject(v108, v433);
      *(_OWORD *)(inited + 16) = xmmword_214510;
      sub_157C4(v406 + 168, (uint64_t)&v430);
      *(void *)(inited + 32) = 4LL;
      sub_FF54(&v430, inited + 40);
      swift_bridgeObjectRetain(inited);
      sub_2FD10(inited + 32, (uint64_t)&v425);
      v110 = *sub_6EA8(v426, v426[3]);
      swift_beginAccess(v110 + 16, &v424, 0LL, 0LL);
      v111 = *(void *)(v110 + 16);
      if (*(void *)(v111 + 16))
      {
        v112 = v65;
        swift_bridgeObjectRetain(v111);
        v113 = sub_9A744(0xD00000000000001ALL, 0x800000000021D140LL);
        if ((v114 & 1) != 0)
        {
          v115 = *(void *)(*(void *)(v111 + 56) + 8 * v113);
          swift_bridgeObjectRelease(v111);
          v116 = v401;
          if (v115 < v425) {
            goto LABEL_48;
          }
        }

        else
        {
          swift_bridgeObjectRelease(v111);
          v116 = v401;
          if (v425 >= 1) {
            goto LABEL_48;
          }
        }
      }

      else
      {
        v112 = v65;
        v116 = v401;
        if (v425 > 0) {
          goto LABEL_48;
        }
      }

      v141 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v116, v412, v74);
      v142 = (os_log_s *)Logger.logObject.getter(v141);
      v143 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v142, v143))
      {
        v144 = swift_slowAlloc(12LL, -1LL);
        v400 = v74;
        v145 = v144;
        v146 = swift_slowAlloc(32LL, -1LL);
        v399 = v112;
        v147 = v82;
        v148 = v146;
        v422 = v146;
        *(_DWORD *)v145 = 136315138;
        *(void *)(v145 + 4) = sub_6978(0xD00000000000001ALL, 0x800000000021D140LL, &v422);
        _os_log_impl( &dword_0,  v142,  v143,  "DialogMemoryUseCase#%s#meetsCondition dialog occurence exceeded the dialog memory limit",  (uint8_t *)v145,  0xCu);
        swift_arrayDestroy(v148, 1LL, (char *)&type metadata for Any + 8);
        v149 = v148;
        v82 = v147;
        v112 = v399;
        v106 = v418;
        swift_slowDealloc(v149, -1LL, -1LL);
        v150 = v145;
        v74 = v400;
        swift_slowDealloc(v150, -1LL, -1LL);
      }

      v82((uint64_t)v116, v74);
LABEL_48:
      sub_2FD94((uint64_t)&v425);
      swift_bridgeObjectRelease(inited);
      v428 = 0u;
      v429 = 0u;
      v427 = 0u;
      swift_bridgeObjectRelease(inited);
      if ((void)v429)
      {
        swift_bridgeObjectRelease(v421);
        v430 = v427;
        v431 = v428;
        v432 = v429;
        v151 = (uint64_t)v414;
        sub_15DF60(v106, (void *)v419, *(void **)(v406 + 120), (uint64_t)sub_16F1B0, (uint64_t)v414);
        sub_2FD94((uint64_t)&v430);

        swift_bridgeObjectRelease(v415);
        swift_release(v416);
        swift_release(v407);
        swift_release(v151);
        v139 = v417;
        v65 = v112;
        goto LABEL_41;
      }

      sub_1F6CC((uint64_t)&v427, &qword_28B5F8);
      v152 = (void *)v419;
      v65 = v112;
      if ((sub_18048C(v106) & 1) != 0)
      {
        swift_bridgeObjectRelease(v421);
        v153 = [v152 privatePlayMediaIntentData];
        v154 = v153;
        v379 = (void (*)(char *, uint64_t))v82;
        if (v153)
        {
          v155 = [v153 pegasusMetaData];

          v157 = (uint64_t)v397;
          v156 = v398;
          v158 = v74;
          if (v155)
          {
            v154 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v155);
            v160 = v159;
          }

          else
          {
            v154 = 0LL;
            v160 = 0xF000000000000000LL;
          }
        }

        else
        {
          v158 = v74;
          v160 = 0xF000000000000000LL;
          v157 = (uint64_t)v397;
          v156 = v398;
        }

        sub_1C75F0((uint64_t)v154, v160, v157);
        sub_16B6A0((uint64_t)v154, v160);
        v191 = v396;
        sub_FF10(v157, v396, &qword_28B5E8);
        v192 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
        v193 = *(void *)(v192 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48))(v191, 1LL, v192) == 1)
        {
          sub_1F6CC(v191, &qword_28B5E8);
          v421 = 0LL;
          v194 = 0LL;
        }

        else
        {
          v421 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.nlsContainerID.getter();
          v194 = v195;
          (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v191, v192);
        }

        v196 = v158;
        ((void (*)(char *, uint64_t, uint64_t))v404)(v156, v412, v158);
        v197 = swift_bridgeObjectRetain(v194);
        v198 = (os_log_s *)Logger.logObject.getter(v197);
        v199 = static os_log_type_t.info.getter(v198);
        if (os_log_type_enabled(v198, v199))
        {
          v400 = v196;
          v200 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          v201 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)v200 = 138412290;
          if (v194)
          {
            v202 = sub_6C9C();
            v203 = v65;
            v204 = swift_allocError(&type metadata for String, v202, 0LL, 0LL);
            *v205 = v421;
            v205[1] = v194;
            swift_bridgeObjectRetain(v194);
            v206 = v204;
            v65 = v203;
            v157 = (uint64_t)v397;
            v207 = _swift_stdlib_bridgeErrorToNSError(v206);
            *(void *)&v430 = v207;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v430, (char *)&v430 + 8);
          }

          else
          {
            *(void *)&v430 = 0LL;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v430, (char *)&v430 + 8);
            v207 = 0LL;
          }

          *v201 = v207;
          swift_bridgeObjectRelease_n(v194, 2LL);
          _os_log_impl(&dword_0, v198, v199, "PlayMediaDialogProvider going to makeNlsContainer for %@", v200, 0xCu);
          v208 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v201, 1LL, v208);
          swift_slowDealloc(v201, -1LL, -1LL);
          swift_slowDealloc(v200, -1LL, -1LL);

          v106 = v418;
          v196 = v400;
          v156 = v398;
        }

        else
        {

          swift_bridgeObjectRelease_n(v194, 2LL);
        }

        v379(v156, v196);
        v169 = (uint64_t)v414;
        sub_15E198(v106, (void *)v419, (uint64_t)sub_16F1B0, (uint64_t)v414);
        sub_1F6CC(v157, &qword_28B5E8);
LABEL_81:

        swift_bridgeObjectRelease(v415);
        swift_release(v416);
        v190 = v407;
        goto LABEL_82;
      }

      sub_25864();
      v161 = v407;
      if ((v162 & 1) != 0)
      {
        swift_bridgeObjectRelease(v421);
        v163 = v395;
        v164 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v395, v412, v74);
        v165 = (os_log_s *)Logger.logObject.getter(v164);
        v166 = static os_log_type_t.info.getter(v165);
        if (os_log_type_enabled(v165, v166))
        {
          v167 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v167 = 0;
          _os_log_impl( &dword_0,  v165,  v166,  "PlayMediaDialogProvider going to isPodcastPromotion for storytelling",  v167,  2u);
          v168 = v167;
          v152 = (void *)v419;
          swift_slowDealloc(v168, -1LL, -1LL);
        }

        v82((uint64_t)v163, v74);
        v169 = (uint64_t)v414;
        sub_15E560(v106, v152, (uint64_t)sub_16F1B0, (uint64_t)v414);
LABEL_69:

        swift_bridgeObjectRelease(v415);
        swift_release(v416);
        v190 = v161;
LABEL_82:
        swift_release(v190);
        v138 = v169;
        goto LABEL_39;
      }

      v400 = v74;
      sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
      v170 = (void *)INPlayMediaIntent.privateMediaIntentData.getter();
      isa = (Class)[v170 isAppCorrection];

      if (!isa) {
        isa = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
      }
      v172 = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
      v173 = static NSObject.== infix(_:_:)(isa, v172);

      if ((v173 & 1) == 0)
      {
        swift_bridgeObjectRelease(v421);
        v184 = v394;
        v185 = v400;
        v186 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v394, v412, v400);
        v187 = (os_log_s *)Logger.logObject.getter(v186);
        v188 = static os_log_type_t.info.getter(v187);
        if (os_log_type_enabled(v187, v188))
        {
          v189 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v189 = 0;
          _os_log_impl( &dword_0,  v187,  v188,  "PlayMediaDialogProvider going to makePlayWithAppCorrection for app correction",  v189,  2u);
          swift_slowDealloc(v189, -1LL, -1LL);
        }

        v82((uint64_t)v184, v185);
        v169 = (uint64_t)v414;
        sub_163208(v106, (void *)v419, (uint64_t)sub_16F1B0, (uint64_t)v414);
        goto LABEL_69;
      }

      v174 = (void *)v419;
      sub_2FE18();
      v175 = (uint64_t (*)(char *, uint64_t, uint64_t))v404;
      if ((v176 & 1) != 0)
      {
        swift_bridgeObjectRelease(v421);
        v177 = v393;
        v178 = v400;
        v179 = v175(v393, v412, v400);
        v180 = (os_log_s *)Logger.logObject.getter(v179);
        v181 = static os_log_type_t.info.getter(v180);
        if (os_log_type_enabled(v180, v181))
        {
          v182 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v182 = 0;
          _os_log_impl( &dword_0,  v180,  v181,  "PlayMediaDialogProvider going to makeWholeLibrary when playback item identifier is to play whole library",  v182,  2u);
          v183 = v182;
          v174 = (void *)v419;
          swift_slowDealloc(v183, -1LL, -1LL);
        }

        v82((uint64_t)v177, v178);
        v169 = (uint64_t)v414;
        sub_15FBCC(v106, v174, (uint64_t)sub_16F1B0, (uint64_t)v414);
        goto LABEL_69;
      }

      v379 = (void (*)(char *, uint64_t))v82;
      sub_30240();
      if (v210)
      {
        v90 = v209;
        v77 = v210;
        *(void *)&v430 = v209;
        *((void *)&v430 + 1) = v210;
        *(void *)&v427 = 0x7C295C3F2A2E285CLL;
        *((void *)&v427 + 1) = 0xEF5D5C3F2A2E5B5CLL;
        v425 = 0LL;
        v426[0] = 0xE000000000000000LL;
        v211 = sub_6D68();
        v85 = (void *)StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v427,  &v425,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v211,  v211,  v211);
        v213 = v212;
        v91 = String.count.getter(v90, v77);
        v214 = String.count.getter(v85, v213);
        if (__OFSUB__(v91, v214))
        {
          __break(1u);
          goto LABEL_214;
        }

        if (v91 - v214 < 35 || String.count.getter(v85, v213) <= 5)
        {
          swift_bridgeObjectRelease(v213);
        }

        else
        {
          swift_bridgeObjectRelease(v77);
          v90 = v85;
          v77 = v213;
        }
      }

      else
      {
        sub_30240();
        v90 = v215;
        v77 = v216;
      }

      v217 = sub_3024C();
      v219 = v218;
      swift_bridgeObjectRetain(v218);
      v220 = INPlayMediaIntent.isCreateRadioFromCurrentlyPlayingUnknownReference()()
          && INPlayMediaIntent.isServerSearchSuppressed()();
      if (!(v77 | v219))
      {
        v221 = [(id)v419 mediaSearch];
        if (v221)
        {
          v222 = v221;
          v223 = (char *)[v221 reference];

          if (v223 == (_BYTE *)&dword_0 + 1 || v220) {
            goto LABEL_96;
          }
LABEL_106:
          swift_bridgeObjectRelease(v421);
          v239 = v391;
          v240 = v400;
          v241 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v391, v412, v400);
          v242 = (os_log_s *)Logger.logObject.getter(v241);
          v243 = static os_log_type_t.info.getter(v242);
          if (os_log_type_enabled(v242, v243))
          {
            v244 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)v244 = 0;
            _os_log_impl( &dword_0,  v242,  v243,  "PlayMediaDialogProvider going to makePlayDialogEmptyContentTitle for empty title and artist",  v244,  2u);
            swift_slowDealloc(v244, -1LL, -1LL);
          }

          v379(v239, v240);
          v169 = (uint64_t)v414;
          sub_15E380(v418, (id)v419, (uint64_t)sub_16F1B0, (uint64_t)v414);
          goto LABEL_81;
        }

        if (!v220) {
          goto LABEL_106;
        }
      }

    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (void *)(*(void *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (void *)(*(void *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    result = (void *)swift_bridgeObjectRetain(v22);
  }

  v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }

  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }

    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_6C00(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (void *)(*(void *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21964(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain(v18);
  }

  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }

  v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }

  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }

    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(void *)(*(void *)(v2 + 56) + v20);
    v22 = (void *)(*(void *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain(v18);
  }

  v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }

  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }

    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(void *)(v2 + 48) + v16);
    v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }

  v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }

  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }

        v48 = object;
        if (!object) {
          goto LABEL_34;
        }
        goto LABEL_28;
      }

      if (v47._object) {
        goto LABEL_28;
      }
      v34 = 0LL;
      v35 = 0LL;
      v33 = 0LL;
    }

    else
    {
      v34 = 0LL;
      v35 = 0LL;
      *(void *)&v107 = 0LL;
      v33 = 0LL;
      v28 = 0LL;
    }

    swift_bridgeObjectRelease(v27);
    *(_BYTE *)(inited + 96) = 0;
    *(void *)(inited + 104) = 0xD000000000000011LL;
    *(void *)(inited + 112) = 0x80000000002219A0LL;
    if (!v11)
    {
      v31 = String.lowercased()()._object;
      goto LABEL_33;
    }

uint64_t sub_7D098@<X0>( uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v243 = a5;
  v244 = a3;
  uint64_t v254 = a8;
  v248 = (void *)type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v247 = *(v248 - 1);
  uint64_t v13 = __chkstk_darwin(v248);
  v242 = (char *)v229 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  v246 = (char *)v229 - v15;
  uint64_t v256 = type metadata accessor for Logger(0LL);
  uint64_t v255 = *(void *)(v256 - 8);
  uint64_t v16 = __chkstk_darwin(v256);
  v250 = (char *)v229 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  v251 = (char *)v229 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v252 = (char *)v229 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v240 = (char *)v229 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v239 = (char *)v229 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v241 = (char *)v229 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v245 = (char *)v229 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v32 = (char *)v229 - v31;
  __chkstk_darwin(v30);
  v34 = (char *)v229 - v33;
  uint64_t v35 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v264 = v35;
  v265 = &protocol witness table for INPlayMediaIntent;
  uint64_t v262 = (uint64_t)a2;
  sub_6EA8(&v262, v35);
  id v36 = a2;
  uint64_t v253 = v35;
  if (CommonIntentSignals.userAcceptedSiriForAirPlayTCCPrompt()())
  {
    v37 = v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = v256;
    uint64_t v39 = sub_6960(v256, (uint64_t)qword_2969C8);
    uint64_t v40 = v255;
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v255 + 16))(v34, v39, v38);
    v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v44 = 0;
      _os_log_impl( &dword_0,  v42,  v43,  "CommonMedia#makeSiriKitIntentHandler User just accepted TCC initiated from the HomePod for an SFA request. Using the dialog producing intent handler",  v44,  2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v38);
    id v45 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
    swift_retain(a1);
    id v46 = [v45 init];
    id v47 = v37;
    uint64_t v48 = v254;
    SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(a1, v46, v47, v253);
    uint64_t v49 = type metadata accessor for SiriKitIntentHandler(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v48, 0LL, 1LL, v49);
    v50 = &v262;
    return sub_6C3C(v50);
  }

  sub_6C3C(&v262);
  uint64_t v249 = a1;
  char v52 = sub_1F5C38(a1);
  sub_157C4(a4, (uint64_t)&v262);
  if ((v52 & 1) != 0)
  {
    id v238 = v36;
    uint64_t v53 = v264;
    v54 = v265;
    sub_6EA8(&v262, v264);
    LOBYTE(v53) = dispatch thunk of DeviceProviding.isPhone.getter(v53, v54);
    sub_157C4((uint64_t)&v262, (uint64_t)&v259);
    uint64_t v55 = v255;
    if ((v53 & 1) != 0)
    {
      sub_6C3C(&v259);
      sub_6C3C(&v262);
      id v36 = v238;
    }

    else
    {
      uint64_t v56 = v260;
      uint64_t v57 = v261;
      sub_6EA8(&v259, v260);
      LOBYTE(v56) = dispatch thunk of DeviceProviding.isIPad.getter(v56, v57);
      sub_6C3C(&v259);
      sub_6C3C(&v262);
      id v36 = v238;
      if ((v56 & 1) == 0) {
        goto LABEL_25;
      }
    }

    uint64_t v58 = type metadata accessor for AirPlayRouteSetupContext(0LL);
    id v59 = v36;
    uint64_t v60 = static AirPlayRouteSetupContext.shared(refId:)(a6, a7);
    if (v60)
    {
      uint64_t v61 = v60;
      uint64_t v234 = v58;
      uint64_t v233 = a4;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v62 = v256;
      uint64_t v63 = sub_6960(v256, (uint64_t)qword_2969C8);
      v235 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      v235(v32, v63, v62);
      id v64 = v59;
      swift_retain_n(v61, 2LL);
      id v65 = v64;
      v66 = (os_log_s *)Logger.logObject.getter(v65);
      os_log_type_t v67 = static os_log_type_t.debug.getter();
      int v68 = v67;
      BOOL v69 = os_log_type_enabled(v66, v67);
      id v236 = v65;
      if (v69)
      {
        uint64_t v70 = swift_slowAlloc(22LL, -1LL);
        uint64_t v237 = v61;
        uint64_t v71 = v70;
        uint64_t v232 = swift_slowAlloc(64LL, -1LL);
        *(void *)&__int128 v259 = v232;
        *(_DWORD *)uint64_t v71 = 136315394;
        os_log_t v231 = v66;
        *(void *)&__int128 v258 = v237;
        uint64_t v72 = sub_6DF0( &qword_2858C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
        int v230 = v68;
        uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter(v234, v72);
        unint64_t v75 = v74;
        *(void *)&__int128 v258 = sub_6978(v73, v74, (uint64_t *)&v259);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);
        swift_release_n(v237, 2LL);
        swift_bridgeObjectRelease(v75);
        *(_WORD *)(v71 + 12) = 2080;
        v229[1] = v71 + 14;
        id v76 = [v65 debugDescription];
        uint64_t v77 = v55;
        uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
        unint64_t v80 = v79;

        uint64_t v81 = v78;
        uint64_t v55 = v77;
        *(void *)&__int128 v258 = sub_6978(v81, v80, (uint64_t *)&v259);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);

        swift_bridgeObjectRelease(v80);
        os_log_t v82 = v231;
        _os_log_impl( &dword_0,  v231,  (os_log_type_t)v230,  "CommonMedia#makeSiriKitIntentHandler Handling AirPlay Route setup for 3p app on iOS. Context: %s Intent: %s",  (uint8_t *)v71,  0x16u);
        uint64_t v83 = v232;
        swift_arrayDestroy(v232, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v83, -1LL, -1LL);
        uint64_t v84 = v71;
        uint64_t v61 = v237;
        swift_slowDealloc(v84, -1LL, -1LL);

        v85 = *(uint64_t (**)(char *, uint64_t))(v77 + 8);
      }

      else
      {

        swift_release_n(v61, 2LL);
        v85 = *(uint64_t (**)(char *, uint64_t))(v55 + 8);
      }

      uint64_t v86 = v85(v32, v62);
      uint64_t v87 = v62;
      v88 = v246;
      dispatch thunk of AirPlayRouteSetupContext.state.getter(v86);
      uint64_t v89 = v247;
      v90 = v248;
      int v91 = (*(uint64_t (**)(char *, void *))(v247 + 88))(v88, v248);
      if (v91 == enum case for AirPlayRouteSetupState.none(_:))
      {
        uint64_t v92 = ((uint64_t (*)(char *, uint64_t, uint64_t))v235)(v245, v63, v87);
        v93 = (os_log_s *)Logger.logObject.getter(v92);
        os_log_type_t v94 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v93, v94))
        {
          v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v95 = 0;
          _os_log_impl( &dword_0,  v93,  v94,  "CommonMedia#makeSiriKitIntentHandler Suppressing common WHA routes",  v95,  2u);
          swift_slowDealloc(v95, -1LL, -1LL);
        }

        v85(v245, v87);
        id v96 = v236;
        INPlayMediaIntent.setShouldSuppressCommonWholeHouseAudioRoutes()();
        v97 = v242;
        (*(void (**)(char *, void, void *))(v89 + 104))( v242,  enum case for AirPlayRouteSetupState.suppressedCommonRouteSetup(_:),  v90);
        dispatch thunk of AirPlayRouteSetupContext.state.setter(v97);
        v98 = v244;
        uint64_t v99 = v244[3];
        uint64_t v100 = v244[4];
        sub_6EA8(v244, v99);
        sub_157C4((uint64_t)v98, (uint64_t)&v259);
        sub_157C4(v233, (uint64_t)&v258);
        sub_157C4(v243, (uint64_t)&v257);
        uint64_t v101 = swift_allocObject(&unk_26CB28, 136LL, 7LL);
        sub_FF54(&v259, v101 + 16);
        sub_FF54(&v258, v101 + 56);
        sub_FF54(&v257, v101 + 96);
        dispatch thunk of AirPlayRouteProviding.getRouteIdsFrom(intent:completion:)(v96, sub_7F658, v101, v99, v100);
        swift_release(v101);

        swift_release(v61);
LABEL_24:
        id v36 = v238;
        goto LABEL_25;
      }

      if (v91 == enum case for AirPlayRouteSetupState.startedDeviceSearch(_:))
      {
        sub_157C4((uint64_t)v244, (uint64_t)&v259);
        uint64_t v158 = v260;
        uint64_t v159 = v261;
        sub_6EA8(&v259, v260);
        dispatch thunk of AirPlayRouteProviding.waitForDeviceDiscovery()(v158, v159);
        uint64_t v160 = v260;
        uint64_t v161 = v261;
        sub_6EA8(&v259, v260);
        dispatch thunk of AirPlayRouteProviding.setOutputDevices(_:)(v243, v160, v161);
      }

      else
      {
        if (v91 == enum case for AirPlayRouteSetupState.startedDeviceSearchWithRouteSetup(_:))
        {
          sub_157C4((uint64_t)v244, (uint64_t)&v259);
          uint64_t v171 = v260;
          uint64_t v172 = v261;
          sub_6EA8(&v259, v260);
          dispatch thunk of AirPlayRouteProviding.waitForDeviceDiscovery()(v171, v172);
        }

        else
        {
          if (v91 != enum case for AirPlayRouteSetupState.startedRouteSetup(_:))
          {
            if (v91 == enum case for AirPlayRouteSetupState.complete(_:))
            {
              uint64_t v237 = v61;
              uint64_t v176 = v63;
              v177 = v241;
              v235(v241, v176, v87);
              id v178 = v236;
              v179 = (os_log_s *)Logger.logObject.getter(v178);
              os_log_type_t v180 = static os_log_type_t.info.getter(v179);
              if (os_log_type_enabled(v179, v180))
              {
                v181 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                uint64_t v182 = swift_slowAlloc(32LL, -1LL);
                *(void *)&__int128 v259 = v182;
                *(_DWORD *)v181 = 136315138;
                v248 = v181 + 4;
                id v183 = [v178 debugDescription];
                uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)(v183);
                unint64_t v186 = v185;

                uint64_t v187 = v184;
                uint64_t v55 = v255;
                *(void *)&__int128 v258 = sub_6978(v187, v186, (uint64_t *)&v259);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);

                swift_bridgeObjectRelease(v186);
                _os_log_impl( &dword_0,  v179,  v180,  "CommonMedia#makeSiriKitIntentHandler AirPlay route setup is complete, no need to wait before executing Handle, intent: %s",  v181,  0xCu);
                swift_arrayDestroy(v182, 1LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v182, -1LL, -1LL);
                swift_slowDealloc(v181, -1LL, -1LL);
                swift_release(v237);

                v85(v241, v256);
              }

              else
              {

                swift_release(v237);
                v85(v177, v87);
              }
            }

            else
            {
              if (v91 == enum case for AirPlayRouteSetupState.error(_:))
              {
                v188 = v239;
                v235(v239, v63, v87);
                uint64_t v189 = swift_retain_n(v61, 2LL);
                v190 = (os_log_s *)Logger.logObject.getter(v189);
                os_log_type_t v191 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v190, v191))
                {
                  v192 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                  uint64_t v193 = v61;
                  uint64_t v194 = swift_slowAlloc(32LL, -1LL);
                  *(void *)&__int128 v259 = v194;
                  *(_DWORD *)v192 = 136315138;
                  *(void *)&__int128 v258 = v193;
                  uint64_t v195 = sub_6DF0( &qword_2858C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
                  uint64_t v196 = dispatch thunk of CustomStringConvertible.description.getter(v234, v195);
                  unint64_t v198 = v197;
                  *(void *)&__int128 v258 = sub_6978(v196, v197, (uint64_t *)&v259);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);
                  swift_release_n(v193, 2LL);
                  swift_bridgeObjectRelease(v198);
                  _os_log_impl( &dword_0,  v190,  v191,  "CommonMedia#makeSiriKitIntentHandler Something went wrong setting up AirPlay routes %s. Nothing to d o here, will create error dialog in makePreHandleIntentOutput or makeIntentHandledResponse",  v192,  0xCu);
                  swift_arrayDestroy(v194, 1LL, (char *)&type metadata for Any + 8);
                  uint64_t v199 = v194;
                  uint64_t v61 = v193;
                  swift_slowDealloc(v199, -1LL, -1LL);
                  swift_slowDealloc(v192, -1LL, -1LL);

                  v200 = v239;
                  uint64_t v201 = v256;
                }

                else
                {

                  swift_release_n(v61, 2LL);
                  v200 = v188;
                  uint64_t v201 = v87;
                }

                v85(v200, v201);
                id v224 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
                uint64_t v225 = v249;
                swift_retain(v249);
                id v226 = [v224 init];
                id v227 = v236;
                uint64_t v228 = v254;
                SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v225, v226, v227, v253);

                swift_release(v61);
                uint64_t v154 = type metadata accessor for SiriKitIntentHandler(0LL);
                v155 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56LL);
                uint64_t v156 = v228;
                goto LABEL_42;
              }

              v202 = v240;
              v235(v240, v63, v87);
              id v203 = v236;
              swift_retain_n(v61, 2LL);
              id v204 = v203;
              v205 = (os_log_s *)Logger.logObject.getter(v204);
              os_log_type_t v206 = static os_log_type_t.info.getter(v205);
              int v207 = v206;
              if (os_log_type_enabled(v205, v206))
              {
                uint64_t v208 = v61;
                uint64_t v209 = swift_slowAlloc(22LL, -1LL);
                uint64_t v210 = swift_slowAlloc(64LL, -1LL);
                v245 = (char *)v210;
                *(void *)&__int128 v259 = v210;
                *(_DWORD *)uint64_t v209 = 136315394;
                LODWORD(v244) = v207;
                v211 = v242;
                dispatch thunk of AirPlayRouteSetupContext.state.getter(v210);
                uint64_t v212 = String.init<A>(describing:)(v211, v248);
                unint64_t v214 = v213;
                *(void *)&__int128 v258 = sub_6978(v212, v213, (uint64_t *)&v259);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);
                swift_release_n(v208, 2LL);
                swift_bridgeObjectRelease(v214);
                *(_WORD *)(v209 + 12) = 2080;
                id v215 = [v204 debugDescription];
                uint64_t v216 = static String._unconditionallyBridgeFromObjectiveC(_:)(v215);
                unint64_t v218 = v217;

                uint64_t v219 = v216;
                uint64_t v55 = v255;
                *(void *)&__int128 v258 = sub_6978(v219, v218, (uint64_t *)&v259);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 8);

                swift_bridgeObjectRelease(v218);
                _os_log_impl( &dword_0,  v205,  (os_log_type_t)v244,  "CommonMedia#makeSiriKitIntentHandler Unexpected state of AirPlay route setup: %s, intent: %s",  (uint8_t *)v209,  0x16u);
                v220 = v245;
                swift_arrayDestroy(v245, 2LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v220, -1LL, -1LL);
                swift_slowDealloc(v209, -1LL, -1LL);
                uint64_t v221 = v208;
                v90 = v248;
                swift_release(v221);

                v222 = v240;
                uint64_t v223 = v256;
              }

              else
              {

                swift_release_n(v61, 3LL);
                v222 = v202;
                uint64_t v223 = v87;
              }

              v85(v222, v223);
              (*(void (**)(char *, void *))(v247 + 8))(v246, v90);
            }

            goto LABEL_24;
          }

          sub_157C4((uint64_t)v244, (uint64_t)&v259);
        }

        uint64_t v173 = v260;
        uint64_t v174 = v261;
        sub_6EA8(&v259, v260);
        dispatch thunk of AirPlayRouteProviding.waitForSetOutputDevices()(v173, v174);
      }

      id v175 = v236;
      sub_76008( v249,  (uint64_t)v236,  (void (*)(uint64_t, uint64_t, void *, void *, void *, uint64_t, uint64_t))sub_7D098);

      swift_release(v61);
      v50 = (uint64_t *)&v259;
      return sub_6C3C(v50);
    }
  }

  else
  {
    sub_6C3C(&v262);
    uint64_t v55 = v255;
  }

uint64_t sub_7E8FC@<X0>(id a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v115 = a4;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  v11 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  v114 = (char *)&v105 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v105 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v105 - v17;
  uint64_t ObjectType = (uint64_t)a2;
  uint64_t v19 = type metadata accessor for DetermineIntent();
  id v20 = a2;
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286C70);
  if (swift_dynamicCast(&v117, &ObjectType, v19, v21, 6LL))
  {
    id v113 = v20;
    sub_FF54(&v117, (uint64_t)&v120);
    sub_6EA8(&v120, v122);
    if (CommonIntentSignals.userAcceptedSiriForAirPlayTCCPrompt()())
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v22 = sub_6960(v7, (uint64_t)qword_2969C8);
      uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v18, v22, v7);
      uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl( &dword_0,  v24,  v25,  "CommonMedia#makeSiriKitIntentHandler User just accepted TCC initiated from the HomePod for an SFA request. Usi ng the dialog producing intent handler",  v26,  2u);
        swift_slowDealloc(v26, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
      id v27 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
      swift_retain(a1);
      id v28 = [v27 init];
      id v29 = v113;
      uint64_t v30 = v115;
      SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(a1, v28, v29, v19);
      uint64_t v31 = type metadata accessor for SiriKitIntentHandler(0LL);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v30, 0LL, 1LL, v31);
      return sub_6C3C(&v120);
    }

    sub_6C3C(&v120);
    id v20 = v113;
  }

  else
  {
    uint64_t v119 = 0LL;
    __int128 v117 = 0u;
    __int128 v118 = 0u;
    sub_1F6CC((uint64_t)&v117, &qword_2858C8);
  }

  char v33 = sub_1F5DBC((uint64_t)a1);
  sub_157C4(a3, (uint64_t)&v120);
  if ((v33 & 1) != 0)
  {
    id v34 = v20;
    uint64_t v35 = v122;
    uint64_t v36 = v123;
    sub_6EA8(&v120, v122);
    LOBYTE(v35) = dispatch thunk of DeviceProviding.isPhone.getter(v35, v36);
    sub_157C4((uint64_t)&v120, (uint64_t)&v117);
    if ((v35 & 1) == 0)
    {
      uint64_t v37 = *((void *)&v118 + 1);
      uint64_t v38 = v119;
      sub_6EA8(&v117, *((uint64_t *)&v118 + 1));
      dispatch thunk of DeviceProviding.isIPad.getter(v37, v38);
    }

    sub_6C3C(&v117);
    id v20 = v34;
  }

  sub_6C3C(&v120);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v40 = v8;
  uint64_t v41 = *(void (**)(char *))(v8 + 16);
  id v112 = (id)v39;
  v41(v16);
  id v42 = v20;
  os_log_type_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v44 = static os_log_type_t.default.getter();
  BOOL v45 = os_log_type_enabled(v43, v44);
  id v113 = a1;
  if (v45)
  {
    v107 = v16;
    uint64_t v46 = swift_slowAlloc(12LL, -1LL);
    uint64_t v111 = v7;
    id v47 = (uint8_t *)v46;
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v117 = v48;
    uint64_t v106 = v40;
    *(_DWORD *)id v47 = 136315138;
    v105 = v47 + 4;
    id v49 = v42;
    os_log_type_t v108 = v41;
    id v50 = v49;
    id v51 = [v49 description];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    uint64_t v53 = v19;
    id v54 = v42;
    uint64_t v55 = v52;
    BOOL v109 = v11;
    uint64_t v110 = v53;
    unint64_t v57 = v56;

    uint64_t v58 = v115;
    uint64_t v59 = v55;
    id v42 = v54;
    uint64_t ObjectType = sub_6978(v59, v57, (uint64_t *)&v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v117);

    unint64_t v60 = v57;
    uint64_t v19 = v110;
    uint64_t v41 = v108;
    v11 = v109;
    swift_bridgeObjectRelease(v60);
    _os_log_impl(&dword_0, v43, v44, "CommonMedia#makeSiriKitIntentHandler for intent: %s", v47, 0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v61 = v48;
    a1 = v113;
    swift_slowDealloc(v61, -1LL, -1LL);
    uint64_t v62 = v47;
    uint64_t v7 = v111;
    swift_slowDealloc(v62, -1LL, -1LL);

    uint64_t v63 = *(void (**)(char *, uint64_t))(v106 + 8);
    v63(v107, v7);
    id v64 = v114;
  }

  else
  {

    uint64_t v63 = *(void (**)(char *, uint64_t))(v40 + 8);
    v63(v16, v7);
    id v64 = v114;
    uint64_t v58 = v115;
  }

  if ((sub_7F354() & 1) != 0)
  {
    uint64_t v65 = v19;
    uint64_t v66 = ((uint64_t (*)(char *, id, uint64_t))v41)(v64, v112, v7);
    os_log_type_t v67 = (os_log_s *)Logger.logObject.getter(v66);
    os_log_type_t v68 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v67, v68))
    {
      id v112 = v42;
      os_log_type_t v108 = (void (*)(char *))v63;
      uint64_t v110 = v65;
      BOOL v69 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      uint64_t v120 = v70;
      *(_DWORD *)BOOL v69 = 136315138;
      if (qword_2838B8 != -1) {
        swift_once(&qword_2838B8, sub_F3718);
      }
      swift_beginAccess(&static Determine.intentHandler, &v117, 0LL, 0LL);
      uint64_t ObjectType = swift_getObjectType(static Determine.intentHandler);
      uint64_t v71 = sub_6C5C((uint64_t *)&unk_2875F0);
      uint64_t v72 = String.init<A>(describing:)(&ObjectType, v71);
      unint64_t v74 = v73;
      uint64_t ObjectType = sub_6978(v72, v73, &v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v117);
      swift_bridgeObjectRelease(v74);
      _os_log_impl( &dword_0,  v67,  v68,  "CommonMedia#makeSiriKitIntentHandler IS for 1p music or podcasts, returning embedded handler: %s",  v69,  0xCu);
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      swift_slowDealloc(v69, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v108)(v114, v7);
      uint64_t v58 = v115;
      uint64_t v75 = v110;
      id v42 = v112;
    }

    else
    {

      v63(v64, v7);
      uint64_t v75 = v65;
    }

    uint64_t v92 = qword_2838B8;
    id v93 = v113;
    swift_retain(v113);
    if (v92 != -1) {
      swift_once(&qword_2838B8, sub_F3718);
    }
    swift_beginAccess(&static Determine.intentHandler, &v120, 0LL, 0LL);
    SiriKitIntentHandler.init<A>(app:intentHandler:intent:)( v93,  (id)static Determine.intentHandler,  v42,  v75);
    uint64_t v94 = type metadata accessor for SiriKitIntentHandler(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56LL))( v58,  0LL,  1LL,  v94);
  }

  else
  {
    os_log_type_t v108 = (void (*)(char *))v63;
    ((void (*)(char *, id, uint64_t))v41)(v11, v112, v7);
    id v76 = v42;
    swift_retain_n(a1, 2LL);
    id v77 = v76;
    uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
    os_log_type_t v79 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v78, v79))
    {
      BOOL v109 = v11;
      uint64_t v111 = v7;
      uint64_t v80 = v58;
      uint64_t v81 = swift_slowAlloc(22LL, -1LL);
      os_log_t v82 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)uint64_t v81 = 138412546;
      uint64_t v83 = App.appIdentifier.getter(v82);
      uint64_t v85 = v84;
      if (v84)
      {
        uint64_t v86 = String.debugDescription.getter(v83, v84);
        uint64_t v88 = v87;
        swift_bridgeObjectRelease(v85);
        unint64_t v89 = sub_6C9C();
        uint64_t v90 = swift_allocError(&type metadata for String, v89, 0LL, 0LL);
        *int v91 = v86;
        v91[1] = v88;
        uint64_t v85 = _swift_stdlib_bridgeErrorToNSError(v90);
        uint64_t v120 = v85;
      }

      else
      {
        uint64_t v120 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, v121);
      *os_log_t v82 = v85;
      swift_release_n(v113, 2LL);
      *(_WORD *)(v81 + 12) = 2112;
      id v95 = [v77 launchId];
      id v96 = v95;
      if (v95)
      {
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
        uint64_t v99 = v98;

        unint64_t v100 = sub_6C9C();
        uint64_t v101 = swift_allocError(&type metadata for String, v100, 0LL, 0LL);
        *uint64_t v102 = v97;
        v102[1] = v99;
        id v96 = (void *)_swift_stdlib_bridgeErrorToNSError(v101);
        uint64_t v120 = (uint64_t)v96;
      }

      else
      {
        uint64_t v120 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, v121);
      uint64_t v58 = v80;
      uint64_t v7 = v111;
      v82[1] = (uint64_t)v96;

      _os_log_impl( &dword_0,  v78,  v79,  "CommonMedia#makeSiriKitIntentHandler not for 1p music or podcasts (or radio on watch). Bundle: %@, intent launchId: %@",  (uint8_t *)v81,  0x16u);
      uint64_t v103 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v82, 2LL, v103);
      swift_slowDealloc(v82, -1LL, -1LL);
      swift_slowDealloc(v81, -1LL, -1LL);

      v11 = v109;
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    ((void (*)(char *, uint64_t))v108)(v11, v7);
    uint64_t v104 = type metadata accessor for SiriKitIntentHandler(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56LL))( v58,  1LL,  1LL,  v104);
  }

uint64_t sub_7F354()
{
  uint64_t v0 = ((uint64_t (*)(void))App.appIdentifier.getter)();
  uint64_t v2 = v1;
  uint64_t v3 = static BundleIdentifiers.music.getter();
  uint64_t v5 = v4;
  if (v2)
  {
    if (v0 == v3 && v2 == v4) {
      goto LABEL_16;
    }
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v2);
    swift_bridgeObjectRelease(v2);
    uint64_t v7 = swift_bridgeObjectRelease(v5);
    if ((v6 & 1) != 0) {
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v7 = swift_bridgeObjectRelease(v4);
  }

  uint64_t v8 = App.appIdentifier.getter(v7);
  uint64_t v2 = v9;
  uint64_t v10 = static BundleIdentifiers.podcasts.getter();
  uint64_t v5 = v11;
  if (!v2)
  {
    uint64_t v13 = swift_bridgeObjectRelease(v11);
    goto LABEL_13;
  }

  if (v8 == v10 && v2 == v11) {
    goto LABEL_16;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v2);
  swift_bridgeObjectRelease(v2);
  uint64_t v13 = swift_bridgeObjectRelease(v5);
  if ((v12 & 1) == 0)
  {
LABEL_13:
    uint64_t v15 = App.appIdentifier.getter(v13);
    uint64_t v2 = v16;
    uint64_t v17 = static BundleIdentifiers.musicOnAppleTV.getter();
    uint64_t v5 = v18;
    if (!v2)
    {
      char v14 = 0;
      goto LABEL_18;
    }

    if (v15 != v17 || v2 != v18)
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v2);
      goto LABEL_17;
    }

uint64_t sub_7F4AC()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_7F4F0(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_79F00);
}

uint64_t sub_7F4FC(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_285730,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for AddMedia.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for AddMedia.HandleIntentStrategy);
}

uint64_t type metadata accessor for AddMedia.HandleIntentStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin8AddMedia20HandleIntentStrategy);
}

unint64_t sub_7F548(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_6C5C(&qword_2858A0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v1);
  Swift::UInt v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_9A7D8(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v3;
  }

  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    char v14 = v9 + 3;
    Swift::UInt v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain(v6);
    unint64_t result = sub_9A7D8(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if ((v16 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_7F658(uint64_t a1)
{
  return sub_BB554(a1, (void *)(v1 + 16), v1 + 56, v1 + 96);
}

uint64_t sub_7F66C()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_7F6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_76AC4( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(void **)(v7 + 16),  *(void **)(v7 + 24),  *(void (**)(void))(v7 + 32),  *(void *)(v7 + 40),  *(void *)(v7 + 48),  *(void **)(v7 + 56));
}

uint64_t sub_7F6E4()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 48));

  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_7F728(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_77170);
}

uint64_t sub_7F734( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_7F748()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));

  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 48));

  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);

  return swift_deallocObject(v0, v5, v6);
}

void sub_7F7FC(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  sub_774FC( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void *)(v1 + 32),  *(void (**)(void))(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  v1 + ((v3 + 64) & ~v3));
}

void sub_7F848(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v180 = a5;
  uint64_t v181 = a6;
  uint64_t v173 = a4;
  uint64_t v192 = a1;
  uint64_t v188 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v191 = *(void *)(v188 - 8);
  uint64_t v8 = __chkstk_darwin(v188);
  v163 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v162 = v9;
  __chkstk_darwin(v8);
  v177 = (char *)&v152 - v10;
  uint64_t v11 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v11);
  uint64_t v172 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v178 = *(void *)(v13 - 8);
  uint64_t v179 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v176 = (char *)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v175 = v15;
  __chkstk_darwin(v14);
  v190 = (char *)&v152 - v16;
  uint64_t v161 = type metadata accessor for ResponseMode(0LL);
  uint64_t v160 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v159 = (char *)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v165 = sub_6C5C(&qword_284170);
  uint64_t v18 = __chkstk_darwin(v165);
  uint64_t v187 = (uint64_t)&v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v164 = (uint64_t)&v152 - v21;
  __chkstk_darwin(v20);
  uint64_t v195 = (uint64_t)&v152 - v22;
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v193 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v189 = (char *)&v152 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  id v27 = (char *)&v152 - v26;
  uint64_t v28 = sub_6C5C(&qword_289340);
  uint64_t v170 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v174 = (char *)&v152 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v29);
  id v183 = (char *)&v152 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v167 = (char *)&v152 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v152 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v194 = (char *)&v152 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  id v42 = (char *)&v152 - v41;
  uint64_t v171 = v43;
  __chkstk_darwin(v40);
  BOOL v45 = (char *)&v152 - v44;
  uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v158 = *(void *)(v46 - 8);
  id v47 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 16);
  v47(v45, a2, v46);
  *(void *)&v45[*(int *)(v28 + 48)] = a3;
  uint64_t v48 = qword_283888;
  id v49 = a3;
  if (v48 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v50 = sub_6960(v23, (uint64_t)qword_2969C8);
  id v51 = *(void (**)(char *, uint64_t, uint64_t))(v193 + 16);
  uint64_t v168 = v50;
  v169 = v51;
  ((void (*)(char *))v51)(v27);
  sub_FF10(v192, v195, &qword_284170);
  uint64_t v52 = *(int *)(v28 + 48);
  uint64_t v196 = v45;
  v47(v42, (uint64_t)v45, v46);
  *(void *)&v42[v52] = v49;
  sub_FF10((uint64_t)v42, (uint64_t)v194, &qword_289340);
  sub_45F6C((uint64_t)v42, (uint64_t)v37, &qword_289340);
  id v182 = v49;
  uint64_t v53 = (os_log_s *)Logger.logObject.getter(v182);
  int v54 = static os_log_type_t.debug.getter();
  BOOL v55 = os_log_type_enabled(v53, (os_log_type_t)v54);
  uint64_t v185 = v46;
  uint64_t v186 = v28;
  uint64_t v184 = v47;
  uint64_t v166 = v23;
  if (v55)
  {
    unint64_t v56 = (void (*)(char *, char *, uint64_t))v47;
    int v154 = v54;
    os_log_t v155 = v53;
    uint64_t v156 = v37;
    uint64_t v157 = v27;
    uint64_t v57 = v193;
    uint64_t v58 = v46;
    uint64_t v59 = swift_slowAlloc(32LL, -1LL);
    uint64_t v153 = swift_slowAlloc(96LL, -1LL);
    uint64_t v198 = v153;
    *(_DWORD *)uint64_t v59 = 136315650;
    uint64_t v60 = v195;
    uint64_t v61 = v164;
    sub_FF10(v195, v164, &qword_284170);
    uint64_t v62 = String.init<A>(describing:)(v61, v165);
    unint64_t v64 = v63;
    uint64_t v197 = sub_6978(v62, v63, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198);
    swift_bridgeObjectRelease(v64);
    sub_1F6CC(v60, &qword_284170);
    *(_WORD *)(v59 + 12) = 2080;
    uint64_t v65 = *(int *)(v28 + 48);
    uint64_t v66 = v167;
    os_log_type_t v67 = v194;
    uint64_t v68 = v58;
    v56(v167, v194, v58);
    BOOL v69 = *(void **)&v67[v65];
    *(void *)&v66[v65] = v69;
    id v70 = [v69 dialog];
    uint64_t v71 = sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
    uint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

    uint64_t v73 = (uint64_t)v67;
    if ((unint64_t)v72 >> 62)
    {
      if (v72 < 0) {
        uint64_t v84 = v72;
      }
      else {
        uint64_t v84 = v72 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v72);
      uint64_t v74 = _CocoaArrayWrapper.endIndex.getter(v84);
      swift_bridgeObjectRelease(v72);
      uint64_t v75 = v57;
      if (v74) {
        goto LABEL_6;
      }
    }

    else
    {
      uint64_t v74 = *(void *)((char *)&dword_10 + (v72 & 0xFFFFFFFFFFFFF8LL));
      uint64_t v75 = v57;
      if (v74)
      {
LABEL_6:
        if ((v72 & 0xC000000000000001LL) != 0)
        {
          id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v72);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v72 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            return;
          }

          id v76 = *(id *)(v72 + 32);
        }

        id v77 = v76;
        swift_bridgeObjectRelease(v72);
        id v78 = [v77 fullPrint];

        uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
        unint64_t v80 = v79;

        goto LABEL_16;
      }
    }

    swift_bridgeObjectRelease(v72);
    unint64_t v80 = 0xE000000000000000LL;
LABEL_16:
    uint64_t v83 = v189;
    (*(void (**)(char *, uint64_t))(v158 + 8))(v167, v68);
    uint64_t v197 = sub_6978(v74, v80, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198);
    swift_bridgeObjectRelease(v80);
    sub_1F6CC((uint64_t)v156, &qword_289340);
    uint64_t v85 = sub_1F6CC(v73, &qword_289340);
    *(_WORD *)(v59 + 22) = 2082;
    uint64_t v86 = static Insights.responseFramework.getter(v85);
    unint64_t v88 = v87;
    uint64_t v197 = sub_6978(v86, v87, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198);
    swift_bridgeObjectRelease(v88);
    os_log_t v89 = v155;
    _os_log_impl( &dword_0,  v155,  (os_log_type_t)v154,  "HandleIntentStrategy#handleResponse with snippet: %s, dialog: %s %{public}s",  (uint8_t *)v59,  0x20u);
    uint64_t v90 = v153;
    swift_arrayDestroy(v153, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1LL, -1LL);
    swift_slowDealloc(v59, -1LL, -1LL);

    uint64_t v81 = *(uint64_t (**)(char *, uint64_t))(v75 + 8);
    uint64_t v23 = v166;
    uint64_t v82 = v81(v157, v166);
    goto LABEL_17;
  }

  sub_1F6CC(v195, &qword_284170);
  sub_1F6CC((uint64_t)v37, &qword_289340);
  sub_1F6CC((uint64_t)v194, &qword_289340);

  uint64_t v81 = *(uint64_t (**)(char *, uint64_t))(v193 + 8);
  uint64_t v82 = v81(v27, v23);
  uint64_t v83 = v189;
LABEL_17:
  int v91 = v169;
  uint64_t v92 = v168;
  uint64_t v93 = static SiriEnvironmentWrapper.retrieve()(v82);
  if (!v93)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v93 = static SiriEnvironment.default.getter();
  }

  uint64_t v94 = v93;
  v91(v83, v92, v23);
  uint64_t v95 = swift_retain_n(v94, 2LL);
  id v96 = (os_log_s *)Logger.logObject.getter(v95);
  os_log_type_t v97 = static os_log_type_t.info.getter(v96);
  BOOL v98 = os_log_type_enabled(v96, v97);
  uint64_t v195 = v94;
  if (v98)
  {
    uint64_t v99 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v100 = swift_slowAlloc(32LL, -1LL);
    uint64_t v194 = (char *)v81;
    uint64_t v101 = v100;
    uint64_t v198 = v100;
    *(_DWORD *)uint64_t v99 = 136315138;
    uint64_t v102 = SiriEnvironment.currentRequest.getter(v100);
    uint64_t v103 = v159;
    CurrentRequest.responseMode.getter(v102);
    uint64_t v104 = swift_release(v102);
    uint64_t v105 = ResponseMode.description.getter(v104);
    unint64_t v107 = v106;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v103, v161);
    uint64_t v197 = sub_6978(v105, v107, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, &v198);
    swift_release_n(v94, 2LL);
    swift_bridgeObjectRelease(v107);
    _os_log_impl(&dword_0, v96, v97, "AddMedia+HandleIntentStrategy#handleResponse with responseMode = %s", v99, 0xCu);
    swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v101, -1LL, -1LL);
    swift_slowDealloc(v99, -1LL, -1LL);

    uint64_t v108 = ((uint64_t (*)(char *, uint64_t))v194)(v189, v166);
  }

  else
  {

    swift_release_n(v94, 2LL);
    uint64_t v108 = v81(v83, v23);
  }

  BOOL v109 = v190;
  uint64_t v110 = v173;
  uint64_t v111 = v172;
  static DialogPhase.completion.getter(v108);
  uint64_t v112 = v185;
  uint64_t v113 = v186;
  uint64_t v114 = *(int *)(v186 + 48);
  uint64_t v115 = (uint64_t)v183;
  uint64_t v116 = (void (*)(char *, char *, uint64_t))v184;
  uint64_t v117 = ((uint64_t (*)(char *, char *, uint64_t))v184)(v183, v196, v185);
  *(void *)(v115 + v114) = v182;
  __chkstk_darwin(v117);
  uint64_t v118 = v195;
  *(&v152 - 4) = v110;
  *(&v152 - 3) = v118;
  *(&v152 - 2) = v115;
  uint64_t v194 = (char *)v119;
  uint64_t v120 = v109;
  OutputGenerationManifest.init(dialogPhase:_:)(v111, sub_80638, &v152 - 6);
  sub_1F6CC(v115, &qword_289340);
  uint64_t v121 = v187;
  sub_FF10(v192, v187, &qword_284170);
  uint64_t v122 = v191;
  uint64_t v123 = v188;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v121, 1LL, v188) == 1)
  {
    sub_1F6CC(v121, &qword_284170);
    uint64_t v124 = *(int *)(v113 + 48);
    uint64_t v125 = (uint64_t)v174;
    uint64_t v126 = (uint64_t)v196;
    v116(v174, v196, v112);
    id v127 = v194;
    *(void *)(v125 + v124) = v194;
    uint64_t v128 = v178;
    uint64_t v129 = v179;
    unint64_t v130 = v176;
    (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v176, v109, v179);
    uint64_t v131 = *(unsigned __int8 *)(v170 + 80);
    uint64_t v132 = (v131 + 16) & ~v131;
    uint64_t v133 = *(unsigned __int8 *)(v128 + 80);
    uint64_t v134 = (v171 + v133 + v132) & ~v133;
    uint64_t v135 = swift_allocObject(&unk_26CBF0, v134 + v175, v131 | v133 | 7);
    sub_45F6C(v125, v135 + v132, &qword_289340);
    (*(void (**)(uint64_t, char *, uint64_t))(v128 + 32))(v135 + v134, v130, v129);
    id v136 = v127;
    uint64_t v137 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v180, v181, &unk_285908, v135, v137);
    swift_release(v195);
    swift_release(v135);
  }

  else
  {
    uint64_t v193 = *(void *)(v122 + 32);
    uint64_t v138 = v177;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v177, v121, v123);
    uint64_t v139 = v163;
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v163, v138, v123);
    uint64_t v140 = *(int *)(v113 + 48);
    uint64_t v141 = (uint64_t)v174;
    v116(v174, v196, v112);
    *(void *)(v141 + v140) = v194;
    uint64_t v128 = v178;
    uint64_t v129 = v179;
    uint64_t v142 = v176;
    (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v176, v109, v179);
    uint64_t v143 = *(unsigned __int8 *)(v122 + 80);
    uint64_t v144 = (v143 + 16) & ~v143;
    uint64_t v145 = *(unsigned __int8 *)(v170 + 80);
    uint64_t v146 = (v162 + v145 + v144) & ~v145;
    uint64_t v147 = *(unsigned __int8 *)(v128 + 80);
    uint64_t v148 = (v171 + v147 + v146) & ~v147;
    uint64_t v149 = swift_allocObject(&unk_26CC18, v148 + v175, v143 | v147 | v145 | 7);
    ((void (*)(uint64_t, char *, uint64_t))v193)(v149 + v144, v139, v123);
    uint64_t v120 = v190;
    sub_45F6C(v141, v149 + v146, &qword_289340);
    (*(void (**)(uint64_t, char *, uint64_t))(v128 + 32))(v149 + v148, v142, v129);
    v150 = v194;
    uint64_t v151 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v180, v181, &unk_285918, v149, v151);
    swift_release(v195);
    swift_release(v149);
    uint64_t v126 = (uint64_t)v196;
    (*(void (**)(char *, uint64_t))(v191 + 8))(v177, v123);
  }

  (*(void (**)(char *, uint64_t))(v128 + 8))(v120, v129);
  sub_1F6CC(v126, &qword_289340);
}

uint64_t sub_80638(uint64_t a1)
{
  return sub_77C7C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_80644()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  uint64_t v12 = v0 + v4;
  uint64_t v13 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_80710(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + (v8 & ~v7);
  uint64_t v11 = (void *)swift_task_alloc(dword_285904);
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_3B08C;
  return sub_78030(a1, v9, v10);
}

uint64_t sub_807B4()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v17 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v8, v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return swift_deallocObject(v0, v17, v14);
}

uint64_t sub_808D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_285914);
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_11C64;
  return sub_77E38(a1, v12, v13, v14);
}

uint64_t sub_809A4()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

void sub_809F0(void (*a1)(char *, uint64_t, uint64_t))
{
}

uint64_t sub_80A08()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 48));
}

uint64_t type metadata accessor for DetermineCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin25DetermineCatDialogService);
}

uint64_t initializeBufferWithCopyOfBuffer for TypedDisambiguationItems(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((_BYTE *)a2 + 8);
  *(void *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for TypedDisambiguationItems(void *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for TypedDisambiguationItems(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((_BYTE *)a2 + 8);
  uint64_t v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t initializeWithTake for TypedDisambiguationItems(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t *assignWithTake for TypedDisambiguationItems(uint64_t *a1, uint64_t *a2)
{
  char v3 = *((_BYTE *)a2 + 8);
  uint64_t v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TypedDisambiguationItems(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TypedDisambiguationItems( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_80B84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_80B8C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TypedDisambiguationItems()
{
  return &type metadata for TypedDisambiguationItems;
}

void *sub_80BA8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    unint64_t result = _swiftEmptyArrayStorage;
    if (v5)
    {
      uint64_t v15 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v5);
      uint64_t v6 = *(void *)(type metadata accessor for INMediaDestination(0LL) - 8);
      uint64_t v7 = (char *)(a2 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
      uint64_t v8 = *(void *)(v6 + 72);
      do
      {
        sub_81DBC(v7, &v14);
        uint64_t v9 = v14;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        uint64_t v11 = v15[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        uint64_t v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
        specialized ContiguousArray._endMutation()(v12);
        v7 += v8;
        --v5;
      }

      while (v5);
      return v15;
    }
  }

  else
  {
    v13[2] = a1;
    return sub_80CC4((void (*)(uint64_t *__return_ptr, id *))sub_59030, (uint64_t)v13, a2);
  }

  return result;
}

void *sub_80CC4(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    unint64_t result = &_swiftEmptyArrayStorage;
    if (!v7) {
      break;
    }
    uint64_t v19 = &_swiftEmptyArrayStorage;
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)(v7);
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }

    uint64_t v9 = 0LL;
    while (v7 != v9)
    {
      if ((a3 & 0xC000000000000001LL) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      }
      else {
        id v10 = *(id *)(a3 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v17 = v10;
      a1(&v18, &v17);

      if (v4) {
        return (void *)swift_release(v19);
      }
      ++v9;
      uint64_t v13 = v18;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      uint64_t v14 = v19[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      uint64_t v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
      specialized ContiguousArray._endMutation()(v15);
      if (v7 == v9) {
        return v19;
      }
    }

    __break(1u);
LABEL_16:
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
  }

  return result;
}

void *sub_80E2C(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t result = &_swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v14[0] = *(v8 - 1);
      v14[1] = v9;
      swift_bridgeObjectRetain(v9);
      a1(&v15, v14);
      uint64_t v10 = swift_bridgeObjectRelease(v9);
      if (v3) {
        break;
      }
      v8 += 2;
      uint64_t v11 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      uint64_t v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      uint64_t v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (!--v5) {
        return v16;
      }
    }

    return (void *)swift_release(v16);
  }

  return result;
}

uint64_t sub_80F28()
{
  uint64_t v0 = type metadata accessor for StringsFileResolver(0LL);
  sub_8248C(v0, qword_285B28);
  uint64_t v1 = sub_6960(v0, (uint64_t)qword_285B28);
  return static StringsFileResolver.shared.getter(v1);
}

void sub_80F70(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v173 = a2;
  uint64_t v158 = type metadata accessor for Image(0LL);
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v159 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = (void *)type metadata accessor for StringsFileResolver(0LL);
  uint64_t v171 = *(v7 - 1);
  uint64_t v172 = v7;
  __chkstk_darwin(v7);
  uint64_t v170 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v165 = sub_6C5C(&qword_284628);
  uint64_t v9 = __chkstk_darwin(v165);
  uint64_t v164 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v166 = (char *)&v155 - v11;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v161 = (char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v156 = (char *)&v155 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v155 - v18;
  uint64_t v20 = *a1;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v22 = (void (*)(char *, uint64_t, uint64_t))*((void *)v13 + 2);
  uint64_t v168 = v21;
  v169 = v22;
  ((void (*)(char *))v22)(v19);
  id v23 = v20;
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  int v25 = static os_log_type_t.debug.getter();
  BOOL v26 = os_log_type_enabled(v24, (os_log_type_t)v25);
  uint64_t v174 = v3;
  uint64_t v175 = v12;
  unint64_t v167 = a3;
  if (v26)
  {
    LODWORD(v162) = v25;
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    uint64_t v160 = swift_slowAlloc(96LL, -1LL);
    uint64_t v179 = v160;
    *(_DWORD *)uint64_t v27 = 136315650;
    id v28 = [v23 title];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      uint64_t v32 = v31;
    }

    else
    {
      uint64_t v30 = 0LL;
      uint64_t v32 = 0LL;
    }

    uint64_t v176 = v30;
    uint64_t v177 = v32;
    uint64_t v34 = sub_6C5C(&qword_284600);
    uint64_t v35 = String.init<A>(describing:)(&v176, v34);
    unint64_t v37 = v36;
    uint64_t v176 = sub_6978(v35, v36, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);

    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v27 + 12) = 2080;
    id v38 = [v23 artist];
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      uint64_t v42 = v41;
    }

    else
    {
      uint64_t v40 = 0LL;
      uint64_t v42 = 0LL;
    }

    v163 = v13;
    uint64_t v176 = v40;
    uint64_t v177 = v42;
    uint64_t v43 = String.init<A>(describing:)(&v176, v34);
    unint64_t v45 = v44;
    uint64_t v176 = sub_6978(v43, v44, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);

    swift_bridgeObjectRelease(v45);
    *(_WORD *)(v27 + 22) = 2080;
    id v46 = [v23 artwork];
    if (v46)
    {
      id v47 = v46;
      id v48 = [v46 _uri];

      uint64_t v49 = (uint64_t)v166;
      if (v48)
      {
        uint64_t v50 = (uint64_t)v164;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v48);

        uint64_t v51 = type metadata accessor for URL(0LL);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v50, 0LL, 1LL, v51);
      }

      else
      {
        uint64_t v55 = type metadata accessor for URL(0LL);
        uint64_t v50 = (uint64_t)v164;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v164, 1LL, 1LL, v55);
      }

      uint64_t v53 = v175;
      uint64_t v54 = v165;
      sub_2646C(v50, v49);
    }

    else
    {
      uint64_t v52 = type metadata accessor for URL(0LL);
      uint64_t v49 = (uint64_t)v166;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v166, 1LL, 1LL, v52);
      uint64_t v53 = v175;
      uint64_t v54 = v165;
    }

    uint64_t v56 = String.init<A>(describing:)(v49, v54);
    unint64_t v58 = v57;
    uint64_t v176 = sub_6978(v56, v57, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);

    swift_bridgeObjectRelease(v58);
    _os_log_impl( &dword_0,  v24,  (os_log_type_t)v162,  "Converting mediaItem for disambiguation. Title: %s artist: %s artwork: %s",  (uint8_t *)v27,  0x20u);
    uint64_t v59 = v160;
    swift_arrayDestroy(v160, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1LL, -1LL);
    swift_slowDealloc(v27, -1LL, -1LL);

    uint64_t v33 = (void (*)(char *, uint64_t))*((void *)v163 + 1);
    v33(v19, v53);
  }

  else
  {

    uint64_t v33 = (void (*)(char *, uint64_t))*((void *)v13 + 1);
    v33(v19, v12);
  }

  uint64_t v60 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
  uint64_t v61 = MachineUtteranceBuilder.init()();
  id v62 = [v23 identifier];
  if (v62)
  {
    unint64_t v63 = v62;
    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    uint64_t v66 = v65;
  }

  else
  {
    uint64_t v64 = 0LL;
    uint64_t v66 = 0LL;
  }

  uint64_t v67 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x6449616964656DLL,  0xE700000000000000LL,  v64,  v66);
  swift_release(v61);
  uint64_t v68 = swift_bridgeObjectRelease(v66);
  uint64_t v69 = static BundleIdentifiers.sentinelBundleIdentifier.getter(v68);
  uint64_t v71 = v70;
  uint64_t v72 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x746163696C707061LL,  0xED000064496E6F69LL,  v69,  v70);
  swift_release(v67);
  swift_bridgeObjectRelease(v71);
  uint64_t v73 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x656D614E707061LL,  0xE700000000000000LL,  0x6964754169726953LL,  0xE90000000000006FLL);
  uint64_t v74 = swift_release(v72);
  uint64_t v160 = dispatch thunk of MachineUtteranceBuilder.build()(v74);
  uint64_t v76 = v75;
  swift_release(v73);
  id v77 = [v23 identifier];
  if (v77)
  {
    id v78 = v77;
    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
    unint64_t v81 = v80;
  }

  else
  {
    uint64_t v79 = 0LL;
    unint64_t v81 = 0xE000000000000000LL;
  }

  uint64_t v82 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v82, v178);
  *(_OWORD *)(inited + 16) = xmmword_214510;
  *(void *)(inited + 32) = 0x64496D657469LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v79;
  *(void *)(inited + 56) = v81;
  swift_bridgeObjectRetain(v81);
  unint64_t v84 = sub_74D54(inited);
  uint64_t v85 = (char *)sub_1CDDB8(0xD000000000000034LL, 0x800000000021D8A0LL, v84);
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v84);
  id v86 = [v23 title];
  if (v86)
  {
    unint64_t v87 = v86;
    uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
    unint64_t v90 = v89;
  }

  else
  {
    uint64_t v88 = 0LL;
    unint64_t v90 = 0xE000000000000000LL;
  }

  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v91 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v88, v90);
  uint64_t v92 = swift_bridgeObjectRelease(v90);
  uint64_t v165 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v92);
  swift_release(v91);
  id v93 = [v23 artist];
  if (v93)
  {
    uint64_t v94 = v93;
    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
    unint64_t v97 = v96;
  }

  else
  {
    uint64_t v95 = 0LL;
    unint64_t v97 = 0xE000000000000000LL;
  }

  uint64_t v166 = v85;
  uint64_t v162 = v76;
  v163 = v33;
  uint64_t v98 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v95, v97);
  uint64_t v99 = swift_bridgeObjectRelease(v97);
  uint64_t v164 = (char *)dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v99);
  swift_release(v98);
  if (qword_283860 != -1) {
    swift_once(&qword_283860, sub_80F28);
  }
  uint64_t v100 = v172;
  uint64_t v101 = sub_6960((uint64_t)v172, (uint64_t)qword_285B28);
  uint64_t v102 = v170;
  uint64_t v103 = v171;
  (*(void (**)(char *, uint64_t, void *))(v171 + 16))(v170, v101, v100);
  uint64_t v104 = sub_25AD0((uint64_t)[v23 type]);
  uint64_t v106 = v105;
  uint64_t v107 = type metadata accessor for PlayMediaAlternativesViewProvider();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v107);
  id v109 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  uint64_t v110 = StringsFileResolver.value(for:table:bundle:locale:defaultValue:)( v104,  v106,  0x657449616964654DLL,  0xED0000657079546DLL,  v109,  v173,  0LL,  0xE000000000000000LL);
  uint64_t v112 = v111;
  swift_bridgeObjectRelease(v106);

  (*(void (**)(char *, void *))(v103 + 8))(v102, v100);
  uint64_t v113 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v110, v112);
  uint64_t v114 = swift_bridgeObjectRelease(v112);
  uint64_t v173 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v114);
  swift_release(v113);
  uint64_t v115 = [v23 artwork];
  if (v115)
  {
    uint64_t v172 = v115;
    uint64_t v116 = v161;
    v169(v161, v168, v175);
    id v117 = v23;
    uint64_t v118 = (os_log_s *)Logger.logObject.getter(v117);
    os_log_type_t v119 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v121 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v120 = 138412290;
      uint64_t v176 = (uint64_t)v117;
      id v122 = v117;
      uint64_t v116 = v161;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
      *uint64_t v121 = v117;

      _os_log_impl(&dword_0, v118, v119, "Successfully created disambiguation for item: %@", v120, 0xCu);
      uint64_t v123 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v121, 1LL, v123);
      swift_slowDealloc(v121, -1LL, -1LL);
      swift_slowDealloc(v120, -1LL, -1LL);
    }

    else
    {

      uint64_t v118 = (os_log_s *)v117;
    }

    uint64_t v133 = v167;
    uint64_t v134 = v159;
    uint64_t v135 = v158;
    uint64_t v136 = v157;
    uint64_t v137 = v163;
    uint64_t v138 = v162;

    v137(v116, v175);
    uint64_t v139 = sub_6C5C(&qword_287980);
    uint64_t v140 = swift_allocObject(v139, 56LL, 7LL);
    *(_OWORD *)(v140 + 16) = xmmword_215B10;
    uint64_t v141 = v164;
    *(void *)(v140 + 32) = v165;
    *(void *)(v140 + 40) = v141;
    *(void *)(v140 + 48) = v173;
    uint64_t v176 = v140;
    specialized Array._endMutation()(v140);
    uint64_t v142 = v176;
    void *v134 = v172;
    (*(void (**)(void *, void, uint64_t))(v136 + 104))(v134, enum case for Image.fromApp(_:), v135);
    uint64_t v143 = type metadata accessor for SiriKitDisambiguationItem(0LL);
    swift_allocObject(v143, *(unsigned int *)(v143 + 48), *(unsigned __int16 *)(v143 + 52));
    uint64_t v144 = SiriKitDisambiguationItem.init(components:image:directInvocation:utterance:allowLineWrapForDisplayText:)( v142,  v134,  v166,  v160,  v138,  1LL);
  }

  else
  {
    uint64_t v124 = v156;
    uint64_t v125 = v175;
    v169(v156, v168, v175);
    id v126 = v23;
    id v127 = (os_log_s *)Logger.logObject.getter(v126);
    os_log_type_t v128 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v172 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v129 = 138412290;
      uint64_t v176 = (uint64_t)v126;
      id v130 = v126;
      uint64_t v125 = v175;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
      uint64_t v131 = v172;
      *uint64_t v172 = v126;

      uint64_t v124 = v156;
      _os_log_impl(&dword_0, v127, v128, "Missing image for disambiguation item: %@", v129, 0xCu);
      uint64_t v132 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v131, 1LL, v132);
      swift_slowDealloc(v131, -1LL, -1LL);
      swift_slowDealloc(v129, -1LL, -1LL);
    }

    else
    {

      id v127 = (os_log_s *)v126;
    }

    uint64_t v145 = v163;
    uint64_t v146 = v162;
    uint64_t v147 = v166;
    uint64_t v148 = v165;
    uint64_t v149 = v164;

    v145(v124, v125);
    v150 = v147;
    swift_bridgeObjectRelease(v146);
    uint64_t v151 = sub_6C5C(&qword_287980);
    uint64_t v152 = swift_allocObject(v151, 56LL, 7LL);
    *(_OWORD *)(v152 + 16) = xmmword_215B10;
    *(void *)(v152 + 32) = v148;
    *(void *)(v152 + 40) = v149;
    *(void *)(v152 + 48) = v173;
    uint64_t v176 = v152;
    specialized Array._endMutation()(v152);
    uint64_t v153 = v176;
    uint64_t v154 = type metadata accessor for SiriKitDisambiguationItem(0LL);
    swift_allocObject(v154, *(unsigned int *)(v154 + 48), *(unsigned __int16 *)(v154 + 52));
    uint64_t v144 = SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)(v153, v150, 1LL);

    uint64_t v133 = v167;
  }

  uint64_t *v133 = v144;
}

void sub_81DBC(id a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v87 = a2;
  uint64_t v3 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v86 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v78 - v7;
  uint64_t v89 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v89 - 8);
  uint64_t v10 = __chkstk_darwin(v89);
  uint64_t v88 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v78 - v12;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = v89;
  uint64_t v15 = sub_6960(v89, (uint64_t)qword_2969C8);
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v85(v13, v15, v14);
  unint64_t v84 = *(uint64_t (**)(char *, id, uint64_t))(v4 + 16);
  uint64_t v16 = v84(v8, a1, v3);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  uint64_t v18 = v9;
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v19))
  {
    uint64_t v79 = v18;
    uint64_t v20 = swift_slowAlloc(12LL, -1LL);
    id v81 = a1;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v80 = v15;
    uint64_t v23 = v22;
    uint64_t v93 = v22;
    uint64_t v82 = v3;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v83 = (void (*)(char *, uint64_t))(v21 + 4);
    uint64_t v90 = INMediaDestination.playlistName.getter(v22);
    uint64_t v91 = v24;
    uint64_t v25 = sub_6C5C(&qword_284600);
    uint64_t v26 = String.init<A>(describing:)(&v90, v25);
    unint64_t v28 = v27;
    uint64_t v90 = sub_6978(v26, v27, &v93);
    uint64_t v3 = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
    swift_bridgeObjectRelease(v28);
    uint64_t v83 = *(void (**)(char *, uint64_t))(v4 + 8);
    v83(v8, v3);
    _os_log_impl(&dword_0, v17, v19, "Converting mediaDestination for disambiguation. Playlist: %s", v21, 0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v29 = v23;
    uint64_t v15 = v80;
    swift_slowDealloc(v29, -1LL, -1LL);
    uint64_t v30 = v21;
    a1 = v81;
    swift_slowDealloc(v30, -1LL, -1LL);

    uint64_t v31 = *(void (**)(char *, uint64_t))(v79 + 8);
  }

  else
  {
    uint64_t v83 = *(void (**)(char *, uint64_t))(v4 + 8);
    v83(v8, v3);

    uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
  }

  v31(v13, v89);
  uint64_t v32 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  uint64_t v33 = MachineUtteranceBuilder.init()();
  uint64_t v34 = static BundleIdentifiers.sentinelBundleIdentifier.getter(v33);
  uint64_t v36 = v35;
  uint64_t v37 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x746163696C707061LL,  0xED000064496E6F69LL,  v34,  v35);
  swift_release(v33);
  swift_bridgeObjectRelease(v36);
  uint64_t v38 = dispatch thunk of MachineUtteranceBuilder.addMappingIfPresent(node:value:)( 0x656D614E707061LL,  0xE700000000000000LL,  0x6964754169726953LL,  0xE90000000000006FLL);
  uint64_t v39 = swift_release(v37);
  dispatch thunk of MachineUtteranceBuilder.build()(v39);
  uint64_t v41 = v40;
  uint64_t v42 = swift_release(v38);
  uint64_t v43 = INMediaDestination.playlistName.getter(v42);
  if (v44) {
    uint64_t v45 = v43;
  }
  else {
    uint64_t v45 = 0LL;
  }
  if (v44) {
    unint64_t v46 = v44;
  }
  else {
    unint64_t v46 = 0xE000000000000000LL;
  }
  uint64_t v47 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v47, v92);
  *(_OWORD *)(inited + 16) = xmmword_214510;
  *(void *)(inited + 32) = 0x64496D657469LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v45;
  *(void *)(inited + 56) = v46;
  swift_bridgeObjectRetain(v46);
  unint64_t v49 = sub_74D54(inited);
  id v81 = sub_1CDDB8(0xD000000000000034LL, 0x800000000021D8A0LL, v49);
  swift_bridgeObjectRelease(v46);
  uint64_t v50 = swift_bridgeObjectRelease(v49);
  uint64_t v51 = INMediaDestination.playlistName.getter(v50);
  if (v52) {
    uint64_t v53 = v51;
  }
  else {
    uint64_t v53 = 0LL;
  }
  if (v52) {
    unint64_t v54 = v52;
  }
  else {
    unint64_t v54 = 0xE000000000000000LL;
  }
  type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
  uint64_t v55 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v53, v54);
  uint64_t v56 = swift_bridgeObjectRelease(v54);
  uint64_t v82 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v56);
  swift_release(v55);
  unint64_t v57 = v88;
  v85(v88, v15, v89);
  unint64_t v58 = v86;
  uint64_t v59 = v84(v86, a1, v3);
  uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
  os_log_type_t v61 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = swift_slowAlloc(12LL, -1LL);
    unint64_t v84 = (uint64_t (*)(char *, id, uint64_t))v31;
    unint64_t v63 = (uint8_t *)v62;
    uint64_t v64 = swift_slowAlloc(32LL, -1LL);
    uint64_t v85 = v41;
    uint64_t v65 = v64;
    uint64_t v90 = v64;
    *(_DWORD *)unint64_t v63 = 136315138;
    unint64_t v66 = sub_824CC();
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter(v3, v66);
    unint64_t v69 = v68;
    uint64_t v93 = sub_6978(v67, v68, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94);
    swift_bridgeObjectRelease(v69);
    v83(v58, v3);
    _os_log_impl(&dword_0, v60, v61, "Successfully created disambiguation for mediaDestination: %s", v63, 0xCu);
    swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v70 = v65;
    uint64_t v41 = v85;
    swift_slowDealloc(v70, -1LL, -1LL);
    swift_slowDealloc(v63, -1LL, -1LL);

    ((void (*)(char *, uint64_t))v84)(v88, v89);
  }

  else
  {
    v83(v58, v3);

    v31(v57, v89);
  }

  id v71 = v81;
  swift_bridgeObjectRelease(v41);
  uint64_t v72 = sub_6C5C(&qword_287980);
  uint64_t v73 = swift_allocObject(v72, 40LL, 7LL);
  *(_OWORD *)(v73 + 16) = xmmword_214980;
  uint64_t v74 = v82;
  *(void *)(v73 + 32) = v82;
  uint64_t v90 = v73;
  specialized Array._endMutation()(v73);
  uint64_t v75 = v90;
  uint64_t v76 = type metadata accessor for SiriKitDisambiguationItem(0LL);
  swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
  swift_retain(v74);
  uint64_t v77 = SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)(v75, v71, 1LL);
  swift_release(v74);

  *unint64_t v87 = v77;
}

uint64_t *sub_8248C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    uint64_t v4 = swift_slowAlloc(*(void *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }

  return a2;
}

unint64_t sub_824CC()
{
  unint64_t result = qword_284608;
  if (!qword_284608)
  {
    uint64_t v1 = type metadata accessor for INMediaDestination(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for INMediaDestination, v1);
    atomic_store(result, (unint64_t *)&qword_284608);
  }

  return result;
}

void CommonFlowStrategy.actionForInput(input:)(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  v277 = a1;
  uint64_t v271 = *v2;
  uint64_t v4 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v4);
  v268 = (char *)&v235 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v269 = type metadata accessor for CommonAudio.Confirmation(0LL);
  v266 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v269 - 8);
  uint64_t v6 = __chkstk_darwin(v269);
  __int128 v257 = (char *)&v235 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v261 = (char *)&v235 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v263 = (char *)&v235 - v11;
  __chkstk_darwin(v10);
  v265 = (char *)&v235 - v12;
  uint64_t v13 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v239 = *(void *)(v13 - 8);
  uint64_t v240 = v13;
  __chkstk_darwin(v13);
  id v238 = (char *)&v235 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v255 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v253 = *(void *)(v255 - 8);
  __chkstk_darwin(v255);
  v241 = (char *)&v235 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v251 = sub_6C5C(&qword_284DA8);
  uint64_t v16 = __chkstk_darwin(v251);
  uint64_t v247 = (char *)&v235 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v248 = (uint64_t)&v235 - v18;
  uint64_t v19 = sub_6C5C(&qword_284DB0);
  uint64_t v20 = __chkstk_darwin(v19);
  v242 = (char *)&v235 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  v244 = (char *)&v235 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v245 = (uint64_t)&v235 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v243 = (uint64_t)&v235 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v249 = (uint64_t)&v235 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v250 = (uint64_t)&v235 - v31;
  __chkstk_darwin(v30);
  v252 = (char *)&v235 - v32;
  uint64_t v272 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v267 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  uint64_t v34 = (char *)&v235 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = type metadata accessor for Parse(0LL);
  uint64_t v36 = *(uint64_t (***)(void **, uint64_t))(v35 - 8);
  uint64_t v275 = v35;
  v276 = v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v270 = (char *)&v235 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v37);
  v274 = (void **)((char *)&v235 - v39);
  uint64_t v40 = type metadata accessor for Logger(0LL);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v260 = (char *)&v235 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v256 = (char *)&v235 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v254 = (char *)&v235 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v264 = (char *)&v235 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v52 = (char *)&v235 - v51;
  uint64_t v53 = __chkstk_darwin(v50);
  v246 = (char *)&v235 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v237 = (char *)&v235 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  __int128 v258 = (char *)&v235 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v262 = (char *)&v235 - v60;
  __chkstk_darwin(v59);
  uint64_t v62 = (char *)&v235 - v61;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v63 = sub_6960(v40, (uint64_t)qword_2969C8);
  uint64_t v64 = *(uint64_t (**)(char *))(v41 + 16);
  uint64_t v273 = v63;
  uint64_t v65 = v64(v62);
  unint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  os_log_type_t v67 = static os_log_type_t.info.getter(v66);
  if (os_log_type_enabled(v66, v67))
  {
    unint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v236 = v41;
    unint64_t v69 = v52;
    uint64_t v70 = v34;
    id v71 = v64;
    uint64_t v72 = v40;
    uint64_t v73 = a2;
    uint64_t v74 = v68;
    *(_WORD *)unint64_t v68 = 0;
    _os_log_impl(&dword_0, v66, v67, "CommonFlowStrategy#actionForInput...", v68, 2u);
    uint64_t v75 = v74;
    a2 = v73;
    uint64_t v40 = v72;
    uint64_t v64 = v71;
    uint64_t v34 = v70;
    unint64_t v52 = v69;
    uint64_t v41 = v236;
    swift_slowDealloc(v75, -1LL, -1LL);
  }

  uint64_t v76 = *(uint64_t (***)(void **, uint64_t))(v41 + 8);
  uint64_t v77 = ((uint64_t (*)(char *, uint64_t))v76)(v62, v40);
  uint64_t v78 = v274;
  Input.parse.getter(v77);
  uint64_t v80 = v275;
  uint64_t v79 = v276;
  uint64_t v81 = v276[11](v78, v275);
  if ((_DWORD)v81 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    v79[12](v78, v80);
    uint64_t v82 = sub_6C5C(&qword_284618);
    uint64_t v83 = v78;
    uint64_t v84 = *(uint64_t *)((char *)v78 + *(int *)(v82 + 48));
    uint64_t v85 = (void *)Parse.ServerConversion.siriKitIntent.getter(v82);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    if (!swift_dynamicCastUnknownClass(v85, AssociatedTypeWitness))
    {

      uint64_t v121 = v262;
      uint64_t v122 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v262, v273, v40);
      uint64_t v123 = (os_log_s *)Logger.logObject.getter(v122);
      os_log_type_t v124 = static os_log_type_t.info.getter(v123);
      if (os_log_type_enabled(v123, v124))
      {
        uint64_t v125 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v125 = 0;
        _os_log_impl( &dword_0,  v123,  v124,  "CommonFlowStrategy#actionForInput received unexpected NLv3IntentPlusServerConversion parse, ignoring",  v125,  2u);
        swift_slowDealloc(v125, -1LL, -1LL);
      }

      uint64_t v126 = ((uint64_t (*)(char *, uint64_t))v76)(v121, v40);
      static ActionForInput.ignore()(v126);
      swift_release(v84);
      uint64_t v127 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(void **, uint64_t))(*(void *)(v127 - 8) + 8LL))(v274, v127);
      return;
    }

    swift_release(v84);

    uint64_t v87 = type metadata accessor for NLIntent(0LL);
    uint64_t v88 = (*(uint64_t (**)(void **, uint64_t))(*(void *)(v87 - 8) + 8LL))(v83, v87);
    uint64_t v89 = v269;
    goto LABEL_8;
  }

  if ((_DWORD)v81 == enum case for Parse.directInvocation(_:))
  {
    v79[12](v78, v80);
    unint64_t v97 = v78;
    uint64_t v98 = v267;
    (*(void (**)(char *, void **, uint64_t))(v267 + 32))(v34, v97, v272);
    sub_1CF340((uint64_t)v34, (uint64_t)v290);
    sub_8747C((uint64_t)v290, (uint64_t)v291);
    if (v292 != 255)
    {
      sub_45D94((uint64_t)v291, (uint64_t)&v293);
      sub_45D94((uint64_t)&v293, (uint64_t)&v295);
      if (v300 == 4)
      {
        uint64_t v269 = (uint64_t)v34;
        v274 = (void **)v295;
        uint64_t v99 = v79;
        uint64_t v100 = v296;
        uint64_t v101 = v298;
        swift_bridgeObjectRelease(v299);
        swift_bridgeObjectRelease(v101);
        uint64_t v102 = swift_bridgeObjectRelease(v100);
        uint64_t v103 = v270;
        Input.parse.getter(v102);
        double v104 = sub_B7C84(v103, (uint64_t)&v284);
        ((void (*)(char *, uint64_t, double))v99[1])(v103, v80, v104);
        if (!v285)
        {
          sub_1F6CC((uint64_t)&v284, &qword_2848C0);
          uint64_t v111 = v274;
          goto LABEL_56;
        }

        uint64_t v275 = v40;
        v276 = v76;
        uint64_t v271 = a2;
        sub_49B60(&v284, &v287);
        uint64_t v105 = v288;
        uint64_t v106 = v289;
        sub_6EA8(&v287, v288);
        uint64_t v107 = (uint64_t)v252;
        dispatch thunk of AudioIntent.verb.getter(v105, v106);
        uint64_t v108 = v253;
        id v109 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v253 + 48);
        int v110 = v109(v107, 1LL, v255);
        sub_1F6CC(v107, &qword_284DB0);
        sub_874C4((uint64_t)&v287, (uint64_t)&v284);
        uint64_t v111 = v274;
        if (v110 == 1)
        {
LABEL_17:
          sub_6C3C(&v284);
          sub_874C4((uint64_t)&v287, (uint64_t)v281);
LABEL_18:
          sub_6C3C(v281);
          sub_874C4((uint64_t)&v287, (uint64_t)v278);
          uint64_t v112 = v272;
LABEL_19:
          uint64_t v113 = sub_6C3C(v278);
LABEL_20:
          static ActionForInput.handle()(v113);

          (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v269, v112);
          uint64_t v114 = &v287;
LABEL_54:
          sub_6C3C(v114);
          return;
        }

        v266 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v52;
        v277 = v64;
        uint64_t v182 = v285;
        uint64_t v183 = v286;
        sub_6EA8(&v284, v285);
        uint64_t v184 = v250;
        uint64_t v185 = v183;
        uint64_t v186 = v255;
        dispatch thunk of AudioIntent.verb.getter(v182, v185);
        uint64_t v187 = v249;
        v268 = *(char **)(v108 + 104);
        ((void (*)(uint64_t, void, uint64_t))v268)(v249, enum case for CommonAudio.Verb.play(_:), v186);
        v270 = *(char **)(v108 + 56);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v270)(v187, 0LL, 1LL, v186);
        uint64_t v188 = v248;
        uint64_t v189 = v248 + *(int *)(v251 + 48);
        sub_FF10(v184, v248, &qword_284DB0);
        sub_FF10(v187, v189, &qword_284DB0);
        if (v109(v188, 1LL, v186) == 1)
        {
          sub_1F6CC(v187, &qword_284DB0);
          sub_1F6CC(v184, &qword_284DB0);
          int v190 = v109(v189, 1LL, v186);
          uint64_t v191 = (uint64_t)v247;
          if (v190 == 1)
          {
            sub_1F6CC(v188, &qword_284DB0);
            goto LABEL_17;
          }
        }

        else
        {
          uint64_t v199 = v243;
          sub_FF10(v188, v243, &qword_284DB0);
          if (v109(v189, 1LL, v186) != 1)
          {
            uint64_t v222 = v199;
            uint64_t v223 = v241;
            (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v241, v189, v186);
            uint64_t v224 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
            char v225 = dispatch thunk of static Equatable.== infix(_:_:)(v222, v223, v186, v224);
            id v226 = *(void (**)(char *, uint64_t))(v108 + 8);
            v226(v223, v186);
            sub_1F6CC(v249, &qword_284DB0);
            sub_1F6CC(v250, &qword_284DB0);
            uint64_t v227 = v222;
            uint64_t v111 = v274;
            v226((char *)v227, v186);
            sub_1F6CC(v188, &qword_284DB0);
            sub_6C3C(&v284);
            sub_874C4((uint64_t)&v287, (uint64_t)v281);
            uint64_t v191 = (uint64_t)v247;
            if ((v225 & 1) != 0) {
              goto LABEL_18;
            }
LABEL_75:
            uint64_t v200 = v282;
            uint64_t v201 = v283;
            sub_6EA8(v281, v282);
            uint64_t v202 = v245;
            dispatch thunk of AudioIntent.verb.getter(v200, v201);
            uint64_t v203 = (uint64_t)v244;
            uint64_t v204 = v255;
            ((void (*)(char *, void, uint64_t))v268)(v244, enum case for CommonAudio.Verb.start(_:), v255);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v270)(v203, 0LL, 1LL, v204);
            uint64_t v205 = v191 + *(int *)(v251 + 48);
            sub_FF10(v202, v191, &qword_284DB0);
            sub_FF10(v203, v205, &qword_284DB0);
            if (v109(v191, 1LL, v204) == 1)
            {
              sub_1F6CC(v203, &qword_284DB0);
              sub_1F6CC(v202, &qword_284DB0);
              int v206 = v109(v205, 1LL, v204);
              uint64_t v64 = v277;
              uint64_t v112 = v272;
              if (v206 == 1)
              {
                sub_1F6CC(v191, &qword_284DB0);
                goto LABEL_18;
              }
            }

            else
            {
              uint64_t v207 = (uint64_t)v242;
              sub_FF10(v191, (uint64_t)v242, &qword_284DB0);
              int v208 = v109(v205, 1LL, v204);
              uint64_t v64 = v277;
              if (v208 != 1)
              {
                uint64_t v228 = v207;
                uint64_t v229 = v253;
                int v230 = v241;
                (*(void (**)(char *, uint64_t, uint64_t))(v253 + 32))(v241, v205, v204);
                uint64_t v231 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
                char v232 = dispatch thunk of static Equatable.== infix(_:_:)(v228, v230, v204, v231);
                uint64_t v233 = v204;
                uint64_t v234 = *(void (**)(char *, uint64_t))(v229 + 8);
                v234(v230, v233);
                sub_1F6CC(v203, &qword_284DB0);
                sub_1F6CC(v245, &qword_284DB0);
                v234(v242, v233);
                sub_1F6CC(v191, &qword_284DB0);
                sub_6C3C(v281);
                sub_874C4((uint64_t)&v287, (uint64_t)v278);
                uint64_t v112 = v272;
                if ((v232 & 1) != 0) {
                  goto LABEL_19;
                }
                goto LABEL_81;
              }

              sub_1F6CC(v203, &qword_284DB0);
              sub_1F6CC(v202, &qword_284DB0);
              (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v207, v204);
              uint64_t v112 = v272;
            }

            sub_1F6CC(v191, &qword_284DA8);
            sub_6C3C(v281);
            sub_874C4((uint64_t)&v287, (uint64_t)v278);
LABEL_81:
            uint64_t v209 = v279;
            uint64_t v210 = v280;
            sub_6EA8(v278, v279);
            uint64_t v212 = v238;
            uint64_t v211 = v239;
            uint64_t v213 = v240;
            (*(void (**)(char *, void, uint64_t))(v239 + 104))( v238,  enum case for CommonAudio.Attribute.playNext(_:),  v240);
            LOBYTE(v209) = AudioIntent.hasAttribute(_:)(v212, v209, v210);
            (*(void (**)(char *, uint64_t))(v211 + 8))(v212, v213);
            uint64_t v113 = sub_6C3C(v278);
            if ((v209 & 1) != 0) {
              goto LABEL_20;
            }
            sub_6C3C(&v287);
            uint64_t v40 = v275;
            uint64_t v76 = v276;
            unint64_t v52 = (char *)v266;
LABEL_56:
            uint64_t v176 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v52, v273, v40);
            uint64_t v177 = (os_log_s *)Logger.logObject.getter(v176);
            os_log_type_t v178 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v177, v178))
            {
              uint64_t v179 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v179 = 0;
              _os_log_impl( &dword_0,  v177,  v178,  "PlayMediaFlowStrategy#actionForInput received unsupported pommesResponse",  v179,  2u);
              swift_slowDealloc(v179, -1LL, -1LL);
            }

            uint64_t v180 = ((uint64_t (*)(char *, uint64_t))v76)(v52, v40);
            static ActionForInput.ignore()(v180);

            (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v269, v272);
            return;
          }

          sub_1F6CC(v249, &qword_284DB0);
          sub_1F6CC(v250, &qword_284DB0);
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v199, v186);
          uint64_t v191 = (uint64_t)v247;
        }

        sub_1F6CC(v188, &qword_284DA8);
        sub_6C3C(&v284);
        sub_874C4((uint64_t)&v287, (uint64_t)v281);
        goto LABEL_75;
      }

      sub_45DD0((uint64_t)v290);
    }

    uint64_t v147 = v34;
    uint64_t v148 = v264;
    uint64_t v149 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v264, v273, v40);
    v150 = (os_log_s *)Logger.logObject.getter(v149);
    os_log_type_t v151 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v152 = 0;
      _os_log_impl( &dword_0,  v150,  v151,  "CommonFlowStrategy#actionForInput received unsupported directinvocation parse",  v152,  2u);
      uint64_t v153 = v152;
      uint64_t v148 = v264;
      swift_slowDealloc(v153, -1LL, -1LL);
    }

    uint64_t v154 = ((uint64_t (*)(char *, uint64_t))v76)(v148, v40);
    static ActionForInput.ignore()(v154);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v147, v272);
    return;
  }

  if ((_DWORD)v81 == enum case for Parse.pommesResponse(_:))
  {
    v79[12](v78, v80);
    uint64_t v115 = *v78;
    uint64_t v116 = v258;
    uint64_t v117 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v258, v273, v40);
    uint64_t v118 = (os_log_s *)Logger.logObject.getter(v117);
    os_log_type_t v119 = static os_log_type_t.info.getter(v118);
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v120 = 0;
      _os_log_impl(&dword_0, v118, v119, "CommonFlowStrategy#actionForInput received pommesResponse parse", v120, 2u);
      swift_slowDealloc(v120, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v76)(v116, v40);
    (*(void (**)(void *, uint64_t (*)(char *)))(*(void *)v259 + 248LL))(v115, v277);

    return;
  }

  if ((_DWORD)v81 != enum case for Parse.uso(_:))
  {
    uint64_t v155 = v254;
    uint64_t v156 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v254, v273, v40);
    uint64_t v157 = (os_log_s *)Logger.logObject.getter(v156);
    os_log_type_t v158 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v159 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v159 = 0;
      _os_log_impl(&dword_0, v157, v158, "CommonFlowStrategy#actionForInput received unsupported parse", v159, 2u);
      uint64_t v160 = v159;
      uint64_t v80 = v275;
      swift_slowDealloc(v160, -1LL, -1LL);
    }

    uint64_t v161 = ((uint64_t (*)(char *, uint64_t))v76)(v155, v40);
    static ActionForInput.ignore()(v161);
    v276[1](v78, v80);
    return;
  }

  uint64_t v271 = a2;
  uint64_t v134 = v270;
  uint64_t v135 = Input.parse.getter(v81);
  uint64_t v136 = Parse.firstUsoTask()(v135);
  uint64_t v137 = v276[1];
  v137((void **)v134, v80);
  if (!v136)
  {
    uint64_t v192 = v246;
    uint64_t v193 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v246, v273, v40);
    uint64_t v194 = (os_log_s *)Logger.logObject.getter(v193);
    uint64_t v195 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v194, (os_log_type_t)v195))
    {
      uint64_t v196 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v196 = 0;
      _os_log_impl( &dword_0,  v194,  (os_log_type_t)v195,  "CommonFlowStrategy#actionForInput failed to get uso task from parse",  v196,  2u);
      uint64_t v197 = v196;
      uint64_t v80 = v275;
      swift_slowDealloc(v197, -1LL, -1LL);
    }

    uint64_t v198 = ((uint64_t (*)(char *, uint64_t))v76)(v192, v40);
    static ActionForInput.ignore()(v198);
    v137(v78, v80);
    return;
  }

  static UsoTask_CodegenConverter.convert(task:)(&v295, v136);
  if (!v297)
  {
    sub_1F6CC((uint64_t)&v295, &qword_284028);
    uint64_t v89 = v269;
LABEL_68:
    if ((sub_4A218() & 1) == 0 && (sub_49CA0() & 1) == 0)
    {
      unint64_t v214 = v237;
      uint64_t v215 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v237, v273, v40);
      uint64_t v216 = v214;
      unint64_t v217 = (os_log_s *)Logger.logObject.getter(v215);
      os_log_type_t v218 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v217, v218))
      {
        uint64_t v219 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v219 = 0;
        _os_log_impl( &dword_0,  v217,  v218,  "CommonFlowStrategy#actionForInput uso parse is not a shuffle media item or play on shuffle, ignoring",  v219,  2u);
        v220 = v219;
        uint64_t v78 = v274;
        swift_slowDealloc(v220, -1LL, -1LL);
      }

      uint64_t v221 = ((uint64_t (*)(char *, uint64_t))v76)(v216, v40);
      static ActionForInput.ignore()(v221);
      swift_release(v136);
      v137(v78, v275);
      return;
    }

    uint64_t v141 = v136;
    goto LABEL_71;
  }

  uint64_t v138 = type metadata accessor for UsoTask_shuffle_common_MediaItem(0LL);
  char v139 = swift_dynamicCast(&v293, &v295, (char *)&type metadata for Any + 8, v138, 6LL);
  uint64_t v89 = v269;
  if ((v139 & 1) == 0) {
    goto LABEL_68;
  }
  uint64_t v140 = v293;
  swift_release(v136);
  uint64_t v141 = v140;
LABEL_71:
  swift_release(v141);
  uint64_t v88 = v137(v78, v275);
LABEL_8:
  uint64_t v90 = v270;
  Input.parse.getter(v88);
  double v91 = sub_B7C84(v90, (uint64_t)&v293);
  ((void (*)(char *, uint64_t, double))v276[1])(v90, v275, v91);
  uint64_t v92 = (uint64_t)v268;
  if (v294)
  {
    sub_49B60(&v293, &v295);
    uint64_t v94 = v297;
    uint64_t v93 = v298;
    sub_6EA8(&v295, v297);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v94, *(void *)(v93 + 8));
    uint64_t v95 = v266;
    if (v266[6](v92, 1LL, v89) == 1)
    {
      uint64_t v96 = sub_1F6CC(v92, &qword_284630);
LABEL_11:
      static ActionForInput.handle()(v96);
LABEL_53:
      uint64_t v114 = &v295;
      goto LABEL_54;
    }

    v277 = v64;
    v95[4]((uint64_t)v265, v92, v89);
    uint64_t v142 = v95[13];
    v142((uint64_t)v263, enum case for CommonAudio.Confirmation.cancel(_:), v89);
    uint64_t v143 = sub_10430( qword_286CD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
    dispatch thunk of RawRepresentable.rawValue.getter(&v293, v89, v143);
    dispatch thunk of RawRepresentable.rawValue.getter(v291, v89, v143);
    uint64_t v144 = *((void *)&v293 + 1);
    uint64_t v145 = *((void *)&v291[0] + 1);
    if (v293 == v291[0])
    {
      char v146 = 1;
      uint64_t v145 = *((void *)&v293 + 1);
    }

    else
    {
      char v146 = _stringCompareWithSmolCheck(_:_:expecting:)(v293, *((void *)&v293 + 1));
    }

    swift_bridgeObjectRelease(v144);
    swift_bridgeObjectRelease(v145);
    uint64_t v162 = v266;
    v163 = v266[1];
    uint64_t v164 = v269;
    ((void (*)(char *, uint64_t))v163)(v263, v269);
    uint64_t v165 = v162[2];
    uint64_t v166 = v261;
    v165((uint64_t)v261, (uint64_t)v265, v164);
    if ((v146 & 1) == 0)
    {
      v142((uint64_t)v257, enum case for CommonAudio.Confirmation.no(_:), v164);
      dispatch thunk of RawRepresentable.rawValue.getter(&v293, v164, v143);
      dispatch thunk of RawRepresentable.rawValue.getter(v291, v164, v143);
      uint64_t v167 = *((void *)&v293 + 1);
      uint64_t v168 = *((void *)&v291[0] + 1);
      uint64_t v169 = v164;
      if (v293 != v291[0])
      {
        char v181 = _stringCompareWithSmolCheck(_:_:expecting:)(v293, *((void *)&v293 + 1));
        swift_bridgeObjectRelease(v167);
        swift_bridgeObjectRelease(v168);
        ((void (*)(char *, uint64_t))v163)(v257, v169);
        ((void (*)(char *, uint64_t))v163)(v261, v169);
        if ((v181 & 1) == 0)
        {
          uint64_t v96 = ((uint64_t (*)(char *, uint64_t))v163)(v265, v169);
          goto LABEL_11;
        }

LABEL_50:
        uint64_t v170 = v256;
        uint64_t v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v277)(v256, v273, v40);
        uint64_t v172 = (os_log_s *)Logger.logObject.getter(v171);
        os_log_type_t v173 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v172, v173))
        {
          uint64_t v174 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v174 = 0;
          _os_log_impl( &dword_0,  v172,  v173,  "CommonFlowStrategy#actionForInput found cancellation node - treating state as cancelled",  v174,  2u);
          swift_slowDealloc(v174, -1LL, -1LL);
        }

        uint64_t v175 = ((uint64_t (*)(char *, uint64_t))v76)(v170, v40);
        static ActionForInput.cancel()(v175);
        ((void (*)(char *, uint64_t))v163)(v265, v169);
        goto LABEL_53;
      }

      swift_bridgeObjectRelease_n(*((void *)&v293 + 1), 2LL);
      ((void (*)(char *, uint64_t))v163)(v257, v164);
      uint64_t v166 = v261;
    }

    ((void (*)(char *, uint64_t))v163)(v166, v164);
    uint64_t v169 = v164;
    goto LABEL_50;
  }

  sub_1F6CC((uint64_t)&v293, &qword_2848C0);
  os_log_type_t v128 = v260;
  uint64_t v129 = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v260, v273, v40);
  id v130 = (os_log_s *)Logger.logObject.getter(v129);
  os_log_type_t v131 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v132 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v132 = 0;
    _os_log_impl(&dword_0, v130, v131, "CommonFlowStrategy#actionForInput received invalid NL intent", v132, 2u);
    swift_slowDealloc(v132, -1LL, -1LL);
  }

  uint64_t v133 = ((uint64_t (*)(char *, uint64_t))v76)(v128, v40);
  static ActionForInput.ignore()(v133);
}

    uint64_t v49 = v50;
LABEL_51:
    v25(v49, v4);
    uint64_t v65 = type metadata accessor for SiriAudioSnippets(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56LL))( v99,  1LL,  1LL,  v65);
  }

  uint64_t v57 = v97;
  uint64_t v58 = App.appIdentifier.getter(v56);
  uint64_t v60 = v59;
  uint64_t v61 = static BundleIdentifiers.music.getter(v58);
  uint64_t v63 = v62;
  if (!v60)
  {
    swift_bridgeObjectRelease(v62);
    goto LABEL_57;
  }

  if (v58 != v61 || v60 != v62)
  {
    os_log_type_t v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v60);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v63);
    if ((v67 & 1) != 0) {
      goto LABEL_54;
    }
LABEL_57:
    v20(v96, v19, v4);
    uint64_t v77 = swift_retain(v57);
    uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
    uint64_t v79 = static os_log_type_t.info.getter(v78);
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v81 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v80 = 138412290;
      uint64_t v82 = App.appIdentifier.getter(v81);
      if (v83)
      {
        uint64_t v84 = v82;
        uint64_t v85 = v83;
        id v86 = sub_6C9C();
        uint64_t v87 = swift_allocError(&type metadata for String, v86, 0LL, 0LL);
        char *v88 = v84;
        v88[1] = v85;
        uint64_t v89 = _swift_stdlib_bridgeErrorToNSError(v87);
        uint64_t v100 = v89;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
      }

      else
      {
        uint64_t v100 = 0LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, &v101);
        uint64_t v89 = 0LL;
      }

      *uint64_t v81 = v89;
      swift_release(v97);
      _os_log_impl( &dword_0,  v78,  v79,  "PlayMediaUnsupportedValueSnippetProvider#appleMusicButton returning nil since appID: %@ ",  v80,  0xCu);
      uint64_t v90 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v81, 1LL, v90);
      swift_slowDealloc(v81, -1LL, -1LL);
      swift_slowDealloc(v80, -1LL, -1LL);

      uint64_t v49 = v96;
    }

    else
    {

      swift_release(v57);
      uint64_t v49 = v96;
    }

    goto LABEL_51;
  }

  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v63);
LABEL_54:
  unint64_t v68 = v94;
  unint64_t v69 = v20(v94, v19, v4);
  uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
  id v71 = static os_log_type_t.info.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v72 = 0;
    _os_log_impl( &dword_0,  v70,  v71,  "PlayMediaUnsupportedValueSnippetProvider#unsupportedValueOutputView returning an apple music button",  v72,  2u);
    swift_slowDealloc(v72, -1LL, -1LL);
  }

  v25(v68, v4);
  uint64_t v73 = v99;
  sub_D572C(v99);
  uint64_t v74 = enum case for SiriAudioSnippets.actionButton(_:);
  uint64_t v75 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v76 = *(void *)(v75 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 104))(v73, v74, v75);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v73, 0LL, 1LL, v75);
}

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v34);
  swift_arrayDestroy(&qword_26AD60, 1LL, &type metadata for String);
  uint64_t v44 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
  uint64_t v70 = -[__objc2_ivar_list mediaSearch](v35, "mediaSearch");
  if (v70)
  {
    id v71 = v70;
    uint64_t v72 = [v70 releaseDate];

    if (v72)
    {
      uint64_t v73 = [v72 startDateComponents];

      uint64_t v74 = v149;
      uint64_t v75 = (uint64_t)v162;
      if (v73)
      {
        uint64_t v76 = (uint64_t)v160;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v73);

        uint64_t v77 = v163;
        uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56);
        v78(v76, 0LL, 1LL, v74);
      }

      else
      {
        uint64_t v77 = v163;
        uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56);
        uint64_t v76 = (uint64_t)v160;
        v78((uint64_t)v160, 1LL, 1LL, v149);
      }

      sub_181F3C(v76, v75);
      uint64_t v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
      if (v85(v75, 1LL, v74) == 1) {
        goto LABEL_69;
      }
      uint64_t v6 = *(const char **)(v77 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v6)(v161, v75, v74);
      uint64_t v87 = -[__objc2_ivar_list mediaSearch](v35, "mediaSearch");
      if (!v87
        || (uint64_t v88 = v87,
            uint64_t v89 = [v87 releaseDate],
            v88,
            !v89))
      {
        double v91 = (uint64_t)v159;
        uint64_t v95 = v149;
        v78((uint64_t)v159, 1LL, 1LL, v149);
LABEL_78:
        (*(void (**)(char *, unint64_t))(v163 + 8))(v161, v95);
        id v86 = v91;
        goto LABEL_70;
      }

      uint64_t v90 = [v89 endDateComponents];

      double v91 = (uint64_t)v159;
      if (v90)
      {
        uint64_t v92 = (uint64_t)v157;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v90);

        uint64_t v93 = 0LL;
      }

      else
      {
        uint64_t v93 = 1LL;
        uint64_t v92 = (uint64_t)v157;
      }

      uint64_t v94 = v158;
      uint64_t v95 = v149;
      v78(v92, v93, 1LL, v149);
      sub_181F3C(v92, v91);
      if (v85(v91, 1LL, v95) == 1) {
        goto LABEL_78;
      }
      uint64_t v35 = v155;
      uint64_t v96 = ((uint64_t (*)(__objc2_ivar_list *, uint64_t, unint64_t))v6)(v155, v91, v95);
      unint64_t v97 = DateComponents.year.getter(v96);
      if ((v98 & 1) != 0) {
        uint64_t v99 = 0LL;
      }
      else {
        uint64_t v99 = v97;
      }
      uint64_t v34 = v161;
      uint64_t v100 = DateComponents.year.getter(v97);
      if ((v101 & 1) != 0) {
        uint64_t v102 = 0LL;
      }
      else {
        uint64_t v102 = v100;
      }
      uint64_t v103 = __OFSUB__(v99, v102);
      double v104 = v99 - v102;
      if (v103)
      {
        __break(1u);
        goto LABEL_137;
      }

      uint64_t v105 = v163;
      uint64_t v39 = *(void *)(v163 + 16);
      uint64_t v106 = ((uint64_t (*)(char *, const char *, unint64_t))v39)(v94, v34, v95);
      uint64_t v6 = v153;
      if (v104 == 9)
      {
        uint64_t v107 = DateComponents.month.getter(v106);
        uint64_t v108 = v94;
        uint64_t v33 = v95;
        int v110 = v109;
        uint64_t v44 = *(__objc2_ivar_list **)(v105 + 8);
        ((void (*)(char *, unint64_t))v44)(v108, v33);
        if ((v110 & 1) == 0)
        {
          uint64_t v111 = v152;
          uint64_t v112 = ((uint64_t (*)(char *, const char *, unint64_t))v39)(v152, v34, v33);
          uint64_t v95 = v33;
          if (v107 == 1)
          {
            uint64_t v113 = DateComponents.day.getter(v112);
            uint64_t v115 = v114;
            ((void (*)(char *, unint64_t))v44)(v111, v33);
            if ((v115 & 1) == 0)
            {
              uint64_t v116 = ((uint64_t (*)(char *, __objc2_ivar_list *, unint64_t))v39)(v156, v35, v33);
              uint64_t v95 = v33;
              if (v113 == 1)
              {
                uint64_t v117 = v156;
                uint64_t v118 = DateComponents.month.getter(v116);
                os_log_type_t v119 = v95;
                uint64_t v121 = v120;
                ((void (*)(char *, unint64_t))v44)(v117, v119);
                if ((v121 & 1) == 0)
                {
                  uint64_t v122 = ((uint64_t (*)(char *, __objc2_ivar_list *, uint64_t))v39)(v154, v35, v149);
                  if (v118 == 12)
                  {
                    uint64_t v123 = v154;
                    os_log_type_t v124 = DateComponents.day.getter(v122);
                    uint64_t v126 = v125;
                    ((void (*)(char *, uint64_t))v44)(v123, v149);
                    if ((v126 & 1) == 0 && v124 == 31)
                    {
                      if (qword_283888 != -1) {
                        swift_once(&qword_283888, sub_BFC5C);
                      }
                      uint64_t v127 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
                      os_log_type_t v128 = (*(uint64_t (**)(char *, uint64_t, const char **))(v150 + 16))(v151, v127, v2);
                      uint64_t v129 = (os_log_s *)Logger.logObject.getter(v128);
                      id v130 = static os_log_type_t.info.getter(v129);
                      if (os_log_type_enabled(v129, v130))
                      {
                        os_log_type_t v131 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)os_log_type_t v131 = 0;
                        _os_log_impl( &dword_0,  v129,  v130,  "INPlayMediaIntent#isQueryStationDecade returning true with internal signal QueryStationEditori al,  startDateComponents and endDateComponents",  v131,  2u);
                        swift_slowDealloc(v131, -1LL, -1LL);
                      }

                      (*(void (**)(char *, const char **))(v150 + 8))(v151, v2);
                      uint64_t v132 = v149;
                      ((void (*)(__objc2_ivar_list *, uint64_t))v44)(v155, v149);
                      ((void (*)(char *, uint64_t))v44)(v161, v132);
                      return 1LL;
                    }

                    uint64_t v34 = v161;
                    uint64_t v35 = v155;
                    uint64_t v6 = v153;
LABEL_108:
                    double v104 = v150;
                    if (qword_283888 == -1)
                    {
LABEL_109:
                      uint64_t v135 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
                      uint64_t v136 = (*(uint64_t (**)(const char *, uint64_t, const char **))(v104 + 16))(v6, v135, v2);
                      uint64_t v137 = (os_log_s *)Logger.logObject.getter(v136);
                      uint64_t v138 = static os_log_type_t.info.getter(v137);
                      if (os_log_type_enabled(v137, v138))
                      {
                        char v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)char v139 = 0;
                        _os_log_impl( &dword_0,  v137,  v138,  "INPlayMediaIntent#isQueryStationDecade not returning false as releaseDate matches that of a decade",  v139,  2u);
                        swift_slowDealloc(v139, -1LL, -1LL);
                      }

                      (*(void (**)(const char *, const char **))(v104 + 8))(v6, v2);
                      uint64_t v140 = v149;
                      ((void (*)(__objc2_ivar_list *, uint64_t))v44)(v35, v149);
                      ((void (*)(const char *, uint64_t))v44)(v34, v140);
                      return 0LL;
                    }

                uint64_t v70 = objc_msgSend(v108, "privateMediaItemValueData", v62, v104, v105);
                if (v70)
                {
                  id v71 = v70;
                  uint64_t v72 = [v70 provider];

                  if (v72)
                  {
                    uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
                    uint64_t v75 = v74;

                    swift_bridgeObjectRelease(v75);
                    uint64_t v76 = HIBYTE(v75) & 0xF;
                    if ((v75 & 0x2000000000000000LL) == 0) {
                      uint64_t v76 = v73 & 0xFFFFFFFFFFFFLL;
                    }
                    if (v76) {
                      goto LABEL_56;
                    }
                  }
                }

                goto LABEL_55;
              }

              uint64_t v65 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, &type metadata for String);

              if (v65[2])
              {
                uint64_t v34 = v65[4];
                uint64_t v64 = v65[5];
                swift_bridgeObjectRetain(v64);
                *(void *)&uint64_t v62 = swift_bridgeObjectRelease(v65).n128_u64[0];
                if (!v28) {
                  goto LABEL_55;
                }
                goto LABEL_50;
              }

              *(void *)&uint64_t v62 = swift_bridgeObjectRelease(v65).n128_u64[0];
            }

            uint64_t v34 = 0LL;
            uint64_t v64 = 0LL;
            if (!v28) {
              goto LABEL_55;
            }
            goto LABEL_50;
          }

void CommonFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)( char *a1, void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v107 = a4;
  uint64_t v108 = a3;
  uint64_t v111 = *v4;
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (void **)((char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v102 = (char *)&v95 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v95 - v14;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v113 = *(void (**)(char *, uint64_t))(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v103 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v95 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v95 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v95 - v25;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v99 = v24;
  uint64_t v27 = sub_6960(v16, (uint64_t)qword_2969C8);
  uint64_t v28 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v113 + 2);
  uint64_t v105 = v27;
  uint64_t v106 = v28;
  ((void (*)(char *))v28)(v26);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  int v110 = a1;
  uint64_t v112 = v29;
  v29(v15, a1, v7);
  id v30 = a2;
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  id v109 = v31;
  int v101 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v100 = v21;
    uint64_t v34 = v33;
    uint64_t v96 = swift_slowAlloc(96LL, -1LL);
    uint64_t v115 = v96;
    *(_DWORD *)uint64_t v34 = 136446722;
    uint64_t v35 = static Insights.frameKit.getter();
    uint64_t v98 = v11;
    unint64_t v37 = v36;
    uint64_t v114 = sub_6978(v35, v36, &v115);
    uint64_t v97 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
    swift_bridgeObjectRelease(v37);
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v38 = v102;
    v112(v102, v15, v7);
    uint64_t v39 = String.init<A>(describing:)(v38, v7);
    unint64_t v41 = v40;
    uint64_t v114 = sub_6978(v39, v40, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
    swift_bridgeObjectRelease(v41);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v8 + 8);
    v42(v15, v7);
    *(_WORD *)(v34 + 22) = 2080;
    uint64_t v114 = (uint64_t)a2;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
    uint64_t v44 = type metadata accessor for Optional(0LL, AssociatedTypeWitness);
    id v45 = v30;
    uint64_t v46 = String.init<A>(describing:)(&v114, v44);
    unint64_t v48 = v47;
    uint64_t v114 = sub_6978(v46, v47, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);

    unint64_t v49 = v48;
    uint64_t v11 = v98;
    swift_bridgeObjectRelease(v49);
    uint64_t v50 = v109;
    _os_log_impl( &dword_0,  v109,  (os_log_type_t)v101,  "CommonFlowStrategy#makeIntentFromParse %{public}s for parse:%s and previousIntent:%s",  (uint8_t *)v34,  0x20u);
    uint64_t v51 = v96;
    swift_arrayDestroy(v96, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1LL, -1LL);
    uint64_t v52 = v34;
    uint64_t v21 = v100;
    swift_slowDealloc(v52, -1LL, -1LL);

    uint64_t v53 = (void (*)(char *, uint64_t))*((void *)v113 + 1);
    uint64_t v54 = v97;
    v53(v26, v97);
  }

  else
  {
    uint64_t v42 = *(void (**)(char *, uint64_t))(v8 + 8);
    v42(v15, v7);

    uint64_t v53 = (void (*)(char *, uint64_t))*((void *)v113 + 1);
    v53(v26, v16);
    uint64_t v54 = v16;
  }

  v112((char *)v11, v110, v7);
  int v55 = (*(uint64_t (**)(void **, uint64_t))(v8 + 88))(v11, v7);
  if (v55 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v56 = sub_6C5C(&qword_284618);
    uint64_t v57 = *(uint64_t *)((char *)v11 + *(int *)(v56 + 48));
    uint64_t v58 = (void *)Parse.ServerConversion.siriKitIntent.getter(v56);
    uint64_t v59 = swift_getAssociatedTypeWitness(0LL);
    uint64_t v60 = swift_dynamicCastUnknownClass(v58, v59);
    uint64_t v61 = v11;
    if (v60)
    {
      uint64_t v62 = v60;
      uint64_t v63 = Parse.ServerConversion.parameterMetadata.getter();
      uint64_t v64 = v104[2];
      v104[2] = v63;
      swift_bridgeObjectRelease(v64);
      id v65 = v58;
      v108(v62, 0LL);
      swift_release(v57);
    }

    else
    {

      uint64_t v85 = v99;
      uint64_t v86 = v106(v99, v105, v54);
      uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
      os_log_type_t v88 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v89 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v89 = 0;
        _os_log_impl( &dword_0,  v87,  v88,  "CommonFlowStrategy#makeIntentFromParse received unsupported NLv3IntentPlusServerConversion parse, ignoring",  v89,  2u);
        swift_slowDealloc(v89, -1LL, -1LL);
      }

      v53(v85, v54);
      uint64_t v90 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v91 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v92 = swift_allocError(v90, v91, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v90 - 8) + 104LL))( v93,  enum case for PlaybackCode.ceGE13(_:),  v90);
      v108(v92, 1LL);
      swift_errorRelease(v92);
      swift_release(v57);
    }

    uint64_t v94 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(void **, uint64_t))(*(void *)(v94 - 8) + 8LL))(v61, v94);
  }

  else if (v55 == enum case for Parse.pommesResponse(_:))
  {
    (*(void (**)(void **, uint64_t))(v8 + 96))(v11, v7);
    unint64_t v66 = *v11;
    v106(v21, v105, v54);
    id v67 = v66;
    unint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc(12LL, -1LL);
      uint64_t v100 = v21;
      id v71 = (uint8_t *)v70;
      uint64_t v112 = (void (*)(char *, char *, uint64_t))swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)id v71 = 138477827;
      uint64_t v115 = (uint64_t)v67;
      id v72 = v67;
      uint64_t v113 = v53;
      id v73 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);
      uint64_t v74 = v112;
      *(void *)uint64_t v112 = v67;

      uint64_t v53 = v113;
      _os_log_impl( &dword_0,  v68,  v69,  "CommonFlowStrategy#makeIntentFromParse received pommesResponse: %{private}@",  v71,  0xCu);
      uint64_t v75 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v74, 1LL, v75);
      swift_slowDealloc(v74, -1LL, -1LL);
      uint64_t v76 = v71;
      uint64_t v21 = v100;
      swift_slowDealloc(v76, -1LL, -1LL);
    }

    else
    {

      unint64_t v68 = (os_log_s *)v67;
    }

    v53(v21, v54);
    (*(void (**)(id, void (*)(uint64_t, uint64_t), uint64_t))(*v104 + 240LL))(v67, v108, v107);
  }

  else
  {
    uint64_t v77 = v106(v103, v105, v54);
    uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
    os_log_type_t v79 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl( &dword_0,  v78,  v79,  "CommonFlowStrategy#makeIntentFromParse received non NLv3IntentPlusServerConversion or NLv3IntentOnly parse",  v80,  2u);
      swift_slowDealloc(v80, -1LL, -1LL);
    }

    v53(v103, v54);
    uint64_t v81 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v82 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v83 = swift_allocError(v81, v82, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v81 - 8) + 104LL))( v84,  enum case for PlaybackCode.ceGE14(_:),  v81);
    v108(v83, 1LL);
    swift_errorRelease(v83);
    v42((char *)v11, v7);
  }

uint64_t sub_845C0(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v7 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "CommonFlowStrategy#makeIntentFrom pommesResponse unsupported", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v12 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v13 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v14 = swift_allocError(v12, v13, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104LL))( v15,  enum case for PlaybackCode.ceGE15(_:),  v12);
  a2(v14, 1LL);
  return swift_errorRelease(v14);
}

uint64_t sub_84774()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v4 = sub_6960(v0, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl( &dword_0,  v6,  v7,  "CommonFlowStrategy#actionForInput received pommesResponse which is unsupported",  v8,  2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return static ActionForInput.ignore()(v9);
}

uint64_t sub_848B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((sub_87F84(a3) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v50 = a1;
      uint64_t v21 = a2;
      uint64_t v22 = a5;
      uint64_t v23 = a4;
      uint64_t v24 = v20;
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_0, v18, v19, "CommonFlowStrategy#makeErrorResponse Barge-In error", v20, 2u);
      uint64_t v25 = v24;
      a4 = v23;
      a5 = v22;
      a2 = v21;
      a1 = v50;
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (a1)
    {
      uint64_t v26 = a1;
    }

    else
    {
      uint64_t v36 = type metadata accessor for App(0LL);
      uint64_t v37 = static BundleIdentifiers.music.getter(v36);
      uint64_t v26 = App.__allocating_init(appIdentifier:)(v37, v38);
    }

    uint64_t v39 = (void *)swift_allocObject(&unk_26CEF0, 56LL, 7LL);
    v39[2] = v6;
    v39[3] = a1;
    v39[4] = a2;
    v39[5] = a4;
    v39[6] = a5;
    id v40 = a2;
    swift_retain(v6);
    swift_retain_n(a1, 2LL);
    swift_retain(a5);
    sub_1F0928(v26, (uint64_t)sub_881BC, (uint64_t)v39);
    swift_release(v26);
    unint64_t v41 = v39;
    return swift_release(v41);
  }

  *(void *)&v51[0] = a3;
  swift_errorRetain(a3);
  uint64_t v27 = sub_6C5C(&qword_284010);
  uint64_t v28 = type metadata accessor for CommandFailure(0LL);
  if ((swift_dynamicCast(&v53, v51, v27, v28, 6LL) & 1) == 0)
  {
LABEL_17:
    uint64_t v42 = a4;
    if (a1)
    {
      uint64_t v43 = a1;
    }

    else
    {
      uint64_t v44 = type metadata accessor for App(0LL);
      uint64_t v45 = static BundleIdentifiers.music.getter(v44);
      uint64_t v43 = App.__allocating_init(appIdentifier:)(v45, v46);
    }

    unint64_t v47 = (void *)swift_allocObject(&unk_26CEA0, 64LL, 7LL);
    v47[2] = v6;
    v47[3] = a1;
    v47[4] = a2;
    v47[5] = v42;
    v47[6] = a5;
    v47[7] = a3;
    swift_retain(a1);
    swift_errorRetain(a3);
    id v48 = a2;
    swift_retain(v6);
    swift_retain(a1);
    swift_retain(a5);
    sub_1F06FC(v43, (uint64_t)sub_88164, (uint64_t)v47);
    swift_release(v43);
    unint64_t v41 = v47;
    return swift_release(v41);
  }

  uint64_t v29 = v53;
  if (CommandFailure.errorCode.getter() != 1307)
  {
    swift_release(v29);
    goto LABEL_17;
  }

  if (!a2
    || (uint64_t v53 = a2,
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL),
        id v31 = a2,
        uint64_t v32 = sub_6C5C(&qword_285BC8),
        (swift_dynamicCast(v51, &v53, AssociatedTypeWitness, v32, 6LL) & 1) == 0))
  {
    uint64_t v52 = 0LL;
    memset(v51, 0, sizeof(v51));
  }

  uint64_t v33 = (void *)swift_allocObject(&unk_26CEC8, 64LL, 7LL);
  v33[2] = v6;
  v33[3] = a1;
  v33[4] = a2;
  v33[5] = a4;
  v33[6] = a5;
  v33[7] = a3;
  swift_errorRetain(a3);
  swift_retain(a1);
  swift_retain(a5);
  id v34 = a2;
  swift_retain(v6);
  sub_1F1F9C(a1, (uint64_t)v51, (uint64_t)sub_88174, (uint64_t)v33);
  swift_release(v33);
  swift_release(v29);
  return sub_1F6CC((uint64_t)v51, &qword_283FE8);
}

uint64_t sub_84CB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v114 = a5;
  uint64_t v115 = a6;
  uint64_t v112 = a3;
  uint64_t v113 = a4;
  uint64_t v108 = a2;
  uint64_t v102 = a1;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v6);
  int v101 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289340);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v100 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v95 - v11;
  uint64_t v13 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v13);
  uint64_t v111 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v15);
  int v110 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v17);
  id v109 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v105 = *(v107 - 1);
  __chkstk_darwin(v107);
  double v104 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v103 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v95 - v27;
  uint64_t v29 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v29);
  id v31 = (uint64_t *)((char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v102, (uint64_t)v31, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v31, v29) == 1)
  {
    uint64_t v102 = *v31;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = sub_6960(v22, (uint64_t)qword_2969C8);
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16))(v28, v32, v22);
    id v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl( &dword_0,  v34,  v35,  "CommonFlowStrategy#makeErrorResponse FAILED to create BargeIn error dialog",  v36,  2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    uint64_t v37 = v103;
    uint64_t v38 = v106;
    (*(void (**)(char *, void, uint64_t))(v103 + 104))( v21,  enum case for AdditionalMetricsDescription.ModuleName.err(_:),  v106);
    id v40 = v104;
    uint64_t v39 = v105;
    unint64_t v41 = v107;
    (*(void (**)(char *, void, void *))(v105 + 104))( v104,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v107);
    int v101 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v21,  v40,  0x6E492D6567726142LL,  0xE800000000000000LL,  0LL,  1LL);
    uint64_t v43 = v42;
    (*(void (**)(char *, void *))(v39 + 8))(v40, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
    sub_157C4(v108 + 56, (uint64_t)v116);
    uint64_t v44 = v117;
    uint64_t v45 = v118;
    sub_6EA8(v116, v117);
    uint64_t v46 = enum case for ActivityType.failed(_:);
    uint64_t v47 = type metadata accessor for ActivityType(0LL);
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v109, v46, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0LL, 1LL, v47);
    uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v51 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56LL))(v110, 1LL, 1LL, v50);
    uint64_t v52 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v111, v52, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v112,  v113,  v49,  v51,  v55,  v101,  v43,  0LL,  1,  v44,  v45);
    swift_bridgeObjectRelease(v43);
    sub_1F6CC(v55, &qword_2845A0);
    sub_1F6CC(v51, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v49, &qword_2845A8);
    sub_6C3C(v116);
    uint64_t v56 = v102;
    v116[0] = v102;
    char v119 = 1;
    swift_errorRetain(v102);
    v114(v116);
    swift_errorRelease(v56);
    return sub_1F6CC((uint64_t)v116, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v58 = *(int *)(v8 + 48);
    uint64_t v59 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v99 = *(void *)(v59 - 8);
    uint64_t v60 = *(void (**)(char *, uint64_t *))(v99 + 32);
    uint64_t v102 = v59;
    v60(v12, v31);
    uint64_t v61 = *(void **)((char *)v31 + v58);
    *(void *)&v12[v58] = v61;
    uint64_t v62 = qword_283888;
    id v96 = v61;
    if (v62 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v97 = v8;
    uint64_t v98 = v12;
    uint64_t v63 = sub_6960(v22, (uint64_t)qword_2969C8);
    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v63, v22);
    id v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      id v67 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v67 = 0;
      _os_log_impl( &dword_0,  v65,  v66,  "CommonFlowStrategy#makeErrorResponse successfully created BargeIn error dialog",  v67,  2u);
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    uint64_t v68 = v103;
    uint64_t v69 = v106;
    (*(void (**)(char *, void, uint64_t))(v103 + 104))( v21,  enum case for AdditionalMetricsDescription.ModuleName.err(_:),  v106);
    id v71 = v104;
    uint64_t v70 = v105;
    id v72 = v107;
    (*(void (**)(char *, void, void *))(v105 + 104))( v104,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v107);
    uint64_t v95 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v21,  v71,  0x6E492D6567726142LL,  0xE800000000000000LL,  0LL,  1LL);
    uint64_t v74 = v73;
    (*(void (**)(char *, void *))(v70 + 8))(v71, v72);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v21, v69);
    uint64_t v75 = v108;
    sub_157C4(v108 + 56, (uint64_t)v116);
    uint64_t v77 = v117;
    uint64_t v76 = v118;
    uint64_t v107 = sub_6EA8(v116, v117);
    uint64_t v78 = enum case for ActivityType.completed(_:);
    uint64_t v79 = type metadata accessor for ActivityType(0LL);
    uint64_t v80 = *(void *)(v79 - 8);
    uint64_t v81 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v109, v78, v79);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v81, 0LL, 1LL, v79);
    uint64_t v82 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v110, 1LL, 1LL, v102);
    uint64_t v83 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v84 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v85 = *(void *)(v84 - 8);
    uint64_t v86 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 104))(v111, v83, v84);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0LL, 1LL, v84);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v112,  v113,  v81,  v82,  v86,  v95,  v74,  0LL,  1,  v77,  v76);
    swift_bridgeObjectRelease(v74);
    sub_1F6CC(v86, &qword_2845A0);
    sub_1F6CC(v82, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v81, &qword_2845A8);
    sub_6C3C(v116);
    sub_6EA8((void *)(v75 + 96), *(void *)(v75 + 120));
    uint64_t v87 = *(int *)(v97 + 48);
    uint64_t v88 = v99;
    uint64_t v89 = (uint64_t)v100;
    uint64_t v90 = (uint64_t)v98;
    uint64_t v91 = v102;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v100, v98, v102);
    uint64_t v92 = v96;
    *(void *)(v89 + v87) = v96;
    uint64_t v93 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v94 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56LL))(v101, 1LL, 1LL, v93);
    sub_177784(v89, v92, v94, v114, v115);

    sub_1F6CC(v94, (uint64_t *)&unk_286C50);
    sub_1F6CC(v90, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 8))(v89, v91);
  }

uint64_t sub_8566C( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7)
{
  uint64_t v105 = a7;
  uint64_t v121 = a5;
  uint64_t v122 = a6;
  uint64_t v119 = a3;
  uint64_t v120 = a4;
  uint64_t v115 = a2;
  uint64_t v109 = a1;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  uint64_t v108 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v107 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v102 - v12;
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  uint64_t v118 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  uint64_t v117 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v116 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v112 = *(v114 - 1);
  __chkstk_darwin(v114);
  uint64_t v111 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v113 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v110 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v22 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v102 - v28;
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v109, (uint64_t)v32, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v109 = *v32;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v33 = sub_6960(v23, (uint64_t)qword_2969C8);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16))(v29, v33, v23);
    os_log_type_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl( &dword_0,  v35,  v36,  "CommonFlowStrategy#makeErrorResponse FAILED to create generic error dialog",  v37,  2u);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v23);
    uint64_t v38 = v110;
    uint64_t v39 = v113;
    (*(void (**)(char *, void, uint64_t))(v110 + 104))( v22,  enum case for AdditionalMetricsDescription.ModuleName.err(_:),  v113);
    uint64_t v40 = v112;
    unint64_t v41 = v111;
    uint64_t v42 = v114;
    (*(void (**)(char *, void, void *))(v112 + 104))( v111,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v114);
    uint64_t v43 = v109;
    swift_getErrorValue(v109, v128, v127);
    uint64_t v44 = Error.localizedDescription.getter(v127[1], v127[2]);
    uint64_t v46 = v45;
    uint64_t v108 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v22,  v41,  v44,  v45,  0LL,  1LL);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease(v46);
    (*(void (**)(char *, void *))(v40 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
    sub_157C4((uint64_t)(v115 + 7), (uint64_t)v123);
    uint64_t v50 = v124;
    uint64_t v49 = v125;
    uint64_t v115 = sub_6EA8(v123, v124);
    uint64_t v51 = enum case for ActivityType.failed(_:);
    uint64_t v52 = type metadata accessor for ActivityType(0LL);
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v116, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0LL, 1LL, v52);
    uint64_t v55 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v56 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v117, 1LL, 1LL, v55);
    uint64_t v57 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v58 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v118, v57, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v60, 0LL, 1LL, v58);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v119,  v120,  v54,  v56,  v60,  v108,  v48,  0LL,  1,  v50,  v49);
    swift_bridgeObjectRelease(v48);
    sub_1F6CC(v60, &qword_2845A0);
    sub_1F6CC(v56, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v54, &qword_2845A8);
    sub_6C3C(v123);
    v123[0] = v43;
    char v126 = 1;
    swift_errorRetain(v43);
    v121(v123);
    swift_errorRelease(v43);
    return sub_1F6CC((uint64_t)v123, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v62 = *(int *)(v9 + 48);
    uint64_t v63 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v106 = *(void *)(v63 - 8);
    uint64_t v64 = *(void (**)(char *, uint64_t *))(v106 + 32);
    uint64_t v109 = v63;
    v64(v13, v32);
    id v65 = *(void **)((char *)v32 + v62);
    *(void *)&v13[v62] = v65;
    uint64_t v66 = qword_283888;
    id v102 = v65;
    if (v66 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v103 = v9;
    double v104 = v13;
    uint64_t v67 = sub_6960(v23, (uint64_t)qword_2969C8);
    uint64_t v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v67, v23);
    uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
    os_log_type_t v70 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v69, v70))
    {
      id v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v71 = 0;
      _os_log_impl( &dword_0,  v69,  v70,  "CommonFlowStrategy#makeErrorResponse successfully created generic error dialog",  v71,  2u);
      swift_slowDealloc(v71, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    uint64_t v72 = v110;
    uint64_t v73 = v113;
    (*(void (**)(char *, void, uint64_t))(v110 + 104))( v22,  enum case for AdditionalMetricsDescription.ModuleName.err(_:),  v113);
    uint64_t v74 = v112;
    uint64_t v75 = v111;
    uint64_t v76 = v114;
    (*(void (**)(char *, void, void *))(v112 + 104))( v111,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v114);
    swift_getErrorValue(v105, v130, v129);
    uint64_t v77 = Error.localizedDescription.getter(v129[1], v129[2]);
    uint64_t v79 = v78;
    uint64_t v105 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v22,  v75,  v77,  v78,  0LL,  1LL);
    uint64_t v81 = v80;
    swift_bridgeObjectRelease(v79);
    (*(void (**)(char *, void *))(v74 + 8))(v75, v76);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v73);
    uint64_t v82 = v115;
    sub_157C4((uint64_t)(v115 + 7), (uint64_t)v123);
    uint64_t v84 = v124;
    uint64_t v83 = v125;
    uint64_t v114 = sub_6EA8(v123, v124);
    uint64_t v85 = enum case for ActivityType.failed(_:);
    uint64_t v86 = type metadata accessor for ActivityType(0LL);
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v116, v85, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v88, 0LL, 1LL, v86);
    uint64_t v89 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56))(v117, 1LL, 1LL, v109);
    uint64_t v90 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v91 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v92 = *(void *)(v91 - 8);
    uint64_t v93 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 104))(v118, v90, v91);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v93, 0LL, 1LL, v91);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v119,  v120,  v88,  v89,  v93,  v105,  v81,  0LL,  1,  v84,  v83);
    swift_bridgeObjectRelease(v81);
    sub_1F6CC(v93, &qword_2845A0);
    sub_1F6CC(v89, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v88, &qword_2845A8);
    sub_6C3C(v123);
    sub_6EA8(v82 + 12, v82[15]);
    uint64_t v94 = *(int *)(v103 + 48);
    uint64_t v95 = v106;
    uint64_t v96 = (uint64_t)v107;
    uint64_t v97 = (uint64_t)v104;
    uint64_t v98 = v109;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v107, v104, v109);
    uint64_t v99 = v102;
    *(void *)(v96 + v94) = v102;
    uint64_t v100 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v101 = (uint64_t)v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56LL))(v108, 1LL, 1LL, v100);
    sub_177784(v96, v99, v101, v121, v122);

    sub_1F6CC(v101, (uint64_t *)&unk_286C50);
    sub_1F6CC(v97, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v96, v98);
  }

uint64_t sub_860F4( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7)
{
  uint64_t v108 = a7;
  uint64_t v123 = a5;
  uint64_t v124 = a6;
  uint64_t v121 = a3;
  uint64_t v122 = a4;
  uint64_t v125 = a2;
  uint64_t v112 = a1;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  uint64_t v111 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v110 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v103 - v12;
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  uint64_t v120 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  uint64_t v119 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v118 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v115 = *(v117 - 1);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v116 = (void *)type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v113 = *(v116 - 1);
  __chkstk_darwin(v116);
  uint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v103 - v28;
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v112, (uint64_t)v32, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v33 = *v32;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v34 = sub_6960(v23, (uint64_t)qword_2969C8);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16))(v29, v34, v23);
    os_log_type_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl( &dword_0,  v36,  v37,  "CommonFlowStrategy#makeErrorResponse FAILED to create app timeout dialog",  v38,  2u);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v23);
    uint64_t v39 = v113;
    uint64_t v40 = v116;
    (*(void (**)(char *, void, void *))(v113 + 104))( v22,  enum case for AdditionalMetricsDescription.ModuleName.err(_:),  v116);
    uint64_t v41 = v115;
    uint64_t v42 = v114;
    uint64_t v43 = v117;
    (*(void (**)(char *, void, void *))(v115 + 104))( v114,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v117);
    swift_getErrorValue(v33, v131, v130);
    uint64_t v44 = Error.localizedDescription.getter(v130[1], v130[2]);
    uint64_t v46 = v45;
    uint64_t v112 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v22,  v42,  v44,  v45,  0LL,  1LL);
    uint64_t v48 = v47;
    swift_bridgeObjectRelease(v46);
    (*(void (**)(char *, void *))(v41 + 8))(v42, v43);
    (*(void (**)(char *, void *))(v39 + 8))(v22, v40);
    sub_157C4((uint64_t)(v125 + 7), (uint64_t)v126);
    uint64_t v50 = v127;
    uint64_t v49 = v128;
    uint64_t v125 = sub_6EA8(v126, v127);
    uint64_t v51 = enum case for ActivityType.failed(_:);
    uint64_t v52 = type metadata accessor for ActivityType(0LL);
    uint64_t v53 = v33;
    uint64_t v54 = *(void *)(v52 - 8);
    uint64_t v55 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v118, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v52);
    uint64_t v56 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v57 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56LL))(v119, 1LL, 1LL, v56);
    uint64_t v58 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v59 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v120, v58, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v61, 0LL, 1LL, v59);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v121,  v122,  v55,  v57,  v61,  v112,  v48,  0LL,  1,  v50,  v49);
    swift_bridgeObjectRelease(v48);
    sub_1F6CC(v61, &qword_2845A0);
    sub_1F6CC(v57, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v55, &qword_2845A8);
    sub_6C3C(v126);
    v126[0] = v53;
    char v129 = 1;
    swift_errorRetain(v53);
    v123(v126);
    swift_errorRelease(v53);
    return sub_1F6CC((uint64_t)v126, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v63 = *(int *)(v9 + 48);
    uint64_t v64 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v109 = *(void *)(v64 - 8);
    id v65 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 32);
    uint64_t v107 = v64;
    uint64_t v105 = v65;
    ((void (*)(char *, uint64_t *))v65)(v13, v32);
    uint64_t v66 = *(void **)((char *)v32 + v63);
    *(void *)&v13[v63] = v66;
    uint64_t v67 = qword_283888;
    id v106 = v66;
    uint64_t v68 = v13;
    if (v67 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v112 = v9;
    uint64_t v69 = sub_6960(v23, (uint64_t)qword_2969C8);
    uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v69, v23);
    id v71 = (os_log_s *)Logger.logObject.getter(v70);
    os_log_type_t v72 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl( &dword_0,  v71,  v72,  "CommonFlowStrategy#makeErrorResponse successfully created app timeout dialog",  v73,  2u);
      swift_slowDealloc(v73, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    uint64_t v74 = v113;
    uint64_t v75 = v116;
    (*(void (**)(char *, void, void *))(v113 + 104))( v22,  enum case for AdditionalMetricsDescription.ModuleName.err(_:),  v116);
    uint64_t v76 = v115;
    uint64_t v77 = v114;
    uint64_t v78 = v117;
    (*(void (**)(char *, void, void *))(v115 + 104))( v114,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v117);
    swift_getErrorValue(v108, v133, v132);
    uint64_t v79 = Error.localizedDescription.getter(v132[1], v132[2]);
    uint64_t v81 = v80;
    uint64_t v108 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v22,  v77,  v79,  v80,  0LL,  1LL);
    uint64_t v104 = v82;
    swift_bridgeObjectRelease(v81);
    (*(void (**)(char *, void *))(v76 + 8))(v77, v78);
    (*(void (**)(char *, void *))(v74 + 8))(v22, v75);
    sub_157C4((uint64_t)(v125 + 7), (uint64_t)v126);
    uint64_t v83 = v127;
    uint64_t v115 = v128;
    uint64_t v116 = sub_6EA8(v126, v127);
    uint64_t v84 = enum case for ActivityType.failed(_:);
    uint64_t v85 = type metadata accessor for ActivityType(0LL);
    uint64_t v86 = *(void *)(v85 - 8);
    uint64_t v87 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v118, v84, v85);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v87, 0LL, 1LL, v85);
    uint64_t v88 = *(int *)(v112 + 48);
    uint64_t v117 = *(void **)(v109 + 16);
    uint64_t v89 = v109;
    uint64_t v90 = (uint64_t)v110;
    uint64_t v91 = v107;
    ((void (*)(char *, char *, uint64_t))v117)(v110, v68, v107);
    uint64_t v92 = v106;
    *(void *)(v90 + v88) = v106;
    uint64_t v93 = (uint64_t)v119;
    v105(v119, v90, v91);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v93, 0LL, 1LL, v91);
    uint64_t v94 = enum case for SiriKitReliabilityCodes.handleIntentTimeOut(_:);
    uint64_t v95 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v114 = v68;
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t v97 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 104))(v120, v94, v95);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v97, 0LL, 1LL, v95);
    uint64_t v98 = v104;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v121,  v122,  v87,  v93,  v97,  v108,  v104,  0LL,  1,  v83,  v115);
    swift_bridgeObjectRelease(v98);
    sub_1F6CC(v97, &qword_2845A0);
    sub_1F6CC(v93, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v87, &qword_2845A8);
    sub_6C3C(v126);
    sub_6EA8(v125 + 12, v125[15]);
    uint64_t v99 = *(int *)(v112 + 48);
    uint64_t v100 = (uint64_t)v114;
    ((void (*)(uint64_t, char *, uint64_t))v117)(v90, v114, v91);
    *(void *)(v90 + v99) = v92;
    uint64_t v101 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v102 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56LL))(v111, 1LL, 1LL, v101);
    sub_177784(v90, v92, v102, v123, v124);

    sub_1F6CC(v102, (uint64_t *)&unk_286C50);
    sub_1F6CC(v100, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v90, v91);
  }

uint64_t CommonFlowStrategy.makeErrorResponse(app:intent:error:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  swift_retain(a1);
  id v17 = a2;
  swift_errorRetain(a3);
  swift_retain(a1);
  id v18 = v17;
  uint64_t v19 = swift_errorRetain(a3);
  uint64_t v20 = v13;
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v22 = static os_log_type_t.error.getter();
  int v46 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v43 = v20;
    uint64_t v24 = v23;
    uint64_t v39 = (void *)swift_slowAlloc(16LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = a1;
    uint64_t v48 = v41;
    *(_DWORD *)uint64_t v24 = 136315650;
    uint64_t v42 = v12;
    uint64_t v25 = type metadata accessor for App(0LL);
    uint64_t v44 = a5;
    uint64_t v26 = v25;
    uint64_t v27 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v45 = v6;
    os_log_t v40 = v21;
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v26, v27);
    unint64_t v30 = v29;
    uint64_t v47 = sub_6978(v28, v29, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v24 + 12) = 2112;
    uint64_t v47 = (uint64_t)v18;
    id v31 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    uint64_t v32 = v39;
    *uint64_t v39 = v18;

    *(_WORD *)(v24 + 22) = 2112;
    swift_errorRetain(a3);
    uint64_t v33 = _swift_stdlib_bridgeErrorToNSError(a3);
    uint64_t v47 = v33;
    a5 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    v32[1] = v33;
    uint64_t v34 = v32;
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    os_log_t v35 = v40;
    _os_log_impl( &dword_0,  v40,  (os_log_type_t)v46,  "CommonFlowStrategy#makeErrorResponse with App %s, Intent %@, Error %@",  (uint8_t *)v24,  0x20u);
    uint64_t v36 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v34, 2LL, v36);
    swift_slowDealloc(v34, -1LL, -1LL);
    uint64_t v37 = v41;
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v42);
  }

  else
  {

    swift_release_n(a1, 2LL);
    swift_errorRelease(a3);
    swift_errorRelease(a3);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v12);
  }

  return sub_848B4(a1, v18, a3, a4, a5);
}

uint64_t CommonFlowStrategy.makeErrorResponse(error:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  swift_errorRetain(a1);
  uint64_t v13 = swift_errorRetain(a1);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = v9;
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = v4;
    id v17 = (uint8_t *)v16;
    uint64_t v26 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v28 = a2;
    *(_DWORD *)id v17 = 138412290;
    swift_errorRetain(a1);
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError(a1);
    uint64_t v30 = v18;
    a2 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    uint64_t v19 = v26;
    *uint64_t v26 = v18;
    uint64_t v9 = v27;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v14, v15, "CommonFlowStrategy#makeErrorResponse with Error %@", v17, 0xCu);
    uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v19, 1LL, v20);
    swift_slowDealloc(v19, -1LL, -1LL);
    uint64_t v21 = v17;
    uint64_t v4 = v29;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v22 = *(void *)(v4 + 32);
  uint64_t v23 = swift_retain(v22);
  sub_848B4(v23, 0LL, a1, a2, a3);
  return swift_release(v22);
}

void *PlayMediaFlowStrategy.deinit()
{
  return v0;
}

uint64_t CommonFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

void sub_8722C(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_8724C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for CommonFlowStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), a4);
  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_872AC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216LL))();
}

uint64_t sub_872D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CommonFlowStrategy.makeErrorResponse(error:_:)(a1, a2, a3);
}

uint64_t sub_872F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_873CC( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:));
}

uint64_t sub_87300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_873CC( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:));
}

uint64_t sub_8730C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_873CC( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:));
}

uint64_t sub_87318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for CommonFlowStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), a4);
  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_87388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for CommonFlowStrategy(0LL, *(void *)(a2 + 80), *(void *)(a2 + 88), a4);
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v6, a3);
}

uint64_t sub_873CC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = type metadata accessor for CommonFlowStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), a4);
  return a7(a1, a2, a3, a4, v12, a6);
}

uint64_t sub_8743C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return CommonFlowStrategy.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5);
}

uint64_t sub_8745C(uint64_t (*a1)(void))
{
  uint64_t v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

uint64_t sub_8747C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2845F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_874C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_87508(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CommonFlowStrategy<A>, a1);
}

uint64_t sub_87518(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CommonFlowStrategy<A>, a1);
}

uint64_t sub_87528(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CommonFlowStrategy<A>, a1);
}

uint64_t sub_87538(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for CommonFlowStrategy<A>, a1);
}

uint64_t sub_87548(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[2] = "\b";
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = &unk_215D50;
  v2[6] = &unk_215D50;
  return swift_initClassMetadata2(a1, 0LL, 7LL, v2, a1 + 96);
}

void sub_875C0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v118 = a3;
  id v126 = a2;
  uint64_t v8 = type metadata accessor for Parse(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (void **)((char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v113 = (char *)&v109 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v109 - v15;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v127 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v112 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v116 = (char *)&v109 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v117 = (char *)&v109 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v109 - v24;
  uint64_t v26 = swift_allocObject(&unk_26CE78, 32LL, 7LL);
  *(void *)(v26 + 16) = a4;
  *(void *)(v26 + 24) = a5;
  uint64_t v122 = a4;
  uint64_t v123 = v26;
  uint64_t v27 = qword_283888;
  swift_retain(a4);
  dispatch_group_t v121 = a5;
  if (v27 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v17, (uint64_t)qword_2969C8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 16);
  uint64_t v119 = v28;
  uint64_t v120 = v29;
  ((void (*)(char *))v29)(v25);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t, __n128))(v9 + 16);
  uint64_t v124 = a1;
  uint64_t v31 = a1;
  uint64_t v32 = v30;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v16, v31, v8);
  id v33 = v126;
  uint64_t v34 = Logger.logObject.getter(v33);
  uint64_t v125 = v17;
  os_log_t v35 = (os_log_s *)v34;
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  uint64_t v37 = v9;
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v114 = v32;
    uint64_t v39 = v38;
    uint64_t v110 = swift_slowAlloc(96LL, -1LL);
    uint64_t v129 = v110;
    *(_DWORD *)uint64_t v39 = 136446722;
    uint64_t v111 = v12;
    uint64_t v40 = static Insights.frameKit.getter();
    unint64_t v42 = v41;
    uint64_t v128 = sub_6978(v40, v41, &v129);
    uint64_t v115 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
    __n128 v43 = swift_bridgeObjectRelease(v42);
    *(_WORD *)(v39 + sub_6C3C(v0 + 12) = 2080;
    uint64_t v44 = v113;
    v114(v113, v16, v8, v43);
    uint64_t v45 = String.init<A>(describing:)(v44, v8);
    unint64_t v47 = v46;
    uint64_t v128 = sub_6978(v45, v46, &v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
    __n128 v48 = swift_bridgeObjectRelease(v47);
    uint64_t v49 = *(void (**)(char *, uint64_t, __n128))(v115 + 8);
    v49(v16, v8, v48);
    *(_WORD *)(v39 + 22) = 2080;
    uint64_t v128 = (uint64_t)v126;
    id v50 = v33;
    uint64_t v51 = sub_6C5C(&qword_285BC0);
    uint64_t v52 = String.init<A>(describing:)(&v128, v51);
    unint64_t v54 = v53;
    uint64_t v128 = sub_6978(v52, v53, &v129);
    uint64_t v37 = v115;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);

    uint64_t v12 = v111;
    swift_bridgeObjectRelease(v54);
    _os_log_impl( &dword_0,  v35,  v36,  "CommonFlowStrategy#makeIntentFromParse %{public}s for parse:%s and previousIntent:%s",  (uint8_t *)v39,  0x20u);
    uint64_t v55 = v110;
    swift_arrayDestroy(v110, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    uint64_t v56 = v39;
    uint64_t v32 = v114;
    swift_slowDealloc(v56, -1LL, -1LL);
  }

  else
  {
    uint64_t v49 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    ((void (*)(char *, uint64_t))v49)(v16, v8);
  }

  uint64_t v57 = *(void (**)(char *, uint64_t))(v127 + 8);
  uint64_t v58 = v125;
  v57(v25, v125);
  ((void (*)(void **, uint64_t, uint64_t))v32)(v12, v124, v8);
  int v59 = (*(uint64_t (**)(void **, uint64_t))(v37 + 88))(v12, v8);
  if (v59 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v37 + 96))(v12, v8);
    uint64_t v60 = sub_6C5C(&qword_284618);
    uint64_t v61 = *(uint64_t *)((char *)v12 + *(int *)(v60 + 48));
    uint64_t v62 = (void *)Parse.ServerConversion.siriKitIntent.getter(v60);
    uint64_t v63 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v64 = swift_dynamicCastObjCClass(v62, v63);
    if (v64)
    {
      uint64_t v65 = v64;
      uint64_t v66 = Parse.ServerConversion.parameterMetadata.getter();
      uint64_t v67 = v118[2];
      v118[2] = v66;
      swift_bridgeObjectRelease(v67);
      uint64_t v68 = v122;
      swift_beginAccess(v122 + 16, &v129, 1LL, 0LL);
      uint64_t v69 = *(void **)(v68 + 16);
      *(void *)(v68 + 16) = v65;
      uint64_t v70 = v12;
      unsigned __int8 v71 = *(_BYTE *)(v68 + 24);
      *(_BYTE *)(v68 + 24) = 0;
      id v72 = v62;
      sub_87F60(v69, v71);
      dispatch_group_leave(v121);
      swift_release(v61);

      uint64_t v73 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(void **, uint64_t))(*(void *)(v73 - 8) + 8LL))(v70, v73);
    }

    else
    {

      uint64_t v93 = v112;
      uint64_t v94 = v120(v112, v119, v58);
      uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
      os_log_type_t v96 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = v12;
        uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v98 = 0;
        _os_log_impl( &dword_0,  v95,  v96,  "CommonFlowStrategy#makeIntentFromParse received unsupported NLv3IntentPlusServerConversion parse, ignoring",  v98,  2u);
        uint64_t v99 = v98;
        uint64_t v12 = v97;
        swift_slowDealloc(v99, -1LL, -1LL);
      }

      v57(v93, v58);
      uint64_t v100 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v101 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v102 = swift_allocError(v100, v101, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v100 - 8) + 104LL))( v103,  enum case for PlaybackCode.ceGE13(_:),  v100);
      uint64_t v104 = v122;
      swift_beginAccess(v122 + 16, &v129, 1LL, 0LL);
      uint64_t v105 = *(void **)(v104 + 16);
      *(void *)(v104 + 16) = v102;
      unsigned __int8 v106 = *(_BYTE *)(v104 + 24);
      *(_BYTE *)(v104 + 24) = 1;
      sub_87F60(v105, v106);
      dispatch_group_leave(v121);
      swift_release(v61);
      uint64_t v107 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(void **, uint64_t))(*(void *)(v107 - 8) + 8LL))(v12, v107);
    }

uint64_t sub_87F28()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_87F54(void *a1, char a2)
{
}

void sub_87F60(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_87F78(a1, a2 & 1);
  }
}

void sub_87F78(void *a1, char a2)
{
  if ((a2 & 1) != 0) {
    swift_errorRelease(a1);
  }
  else {
}
  }

uint64_t sub_87F84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubmitCommandError(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = type metadata accessor for BargeInError(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v15 - v11;
  uint64_t v16 = a1;
  swift_errorRetain(a1);
  uint64_t v13 = sub_6C5C(&qword_284010);
  if (swift_dynamicCast(v12, &v16, v13, v6, 6LL))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return 1LL;
  }

  uint64_t v16 = a1;
  swift_errorRetain(a1);
  if (swift_dynamicCast(v5, &v16, v13, v2, 0LL))
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2) == enum case for SubmitCommandError.internalError(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
      uint64_t v15 = *v5;
      if (swift_dynamicCast(v10, &v15, v13, v6, 6LL))
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        swift_errorRelease(v16);
        return 1LL;
      }
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    }
  }

  swift_errorRelease(v16);
  return 0LL;
}

uint64_t sub_88164(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_8566C);
}

uint64_t sub_88174(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_860F4);
}

uint64_t sub_88180()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_881BC(uint64_t a1)
{
  return sub_84CB8( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void (**)(uint64_t *))(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t sub_881D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0LL;
  }
  uint64_t v7 = a3[4];
  uint64_t v8 = a3[5];
  if (v7 == a1 && v8 == a2) {
    return 1LL;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8);
  if ((result & 1) != 0) {
    return 1LL;
  }
  if (v3 == 1) {
    return 0LL;
  }
  uint64_t v11 = a3 + 7;
  for (uint64_t i = 1LL; ; ++i)
  {
    uint64_t v13 = i + 1;
    if (__OFADD__(i, 1LL)) {
      break;
    }
    uint64_t v14 = *(v11 - 1);
    uint64_t v15 = *v11;
    BOOL v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15) & 1) != 0) {
      return 1LL;
    }
    uint64_t result = 0LL;
    v11 += 2;
    if (v13 == v3) {
      return result;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_88294(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0LL;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1LL;
  }
  if (v2 == 1) {
    return 0LL;
  }
  for (uint64_t i = 5LL; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1LL)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_882F8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v4 = (_BYTE *)(a3 + 40);
    do
    {
      if ((*v4 & 1) != 0)
      {
        if ((a2 & 1) != 0) {
          return 1LL;
        }
      }

      else if ((a2 & 1) == 0 && *((void *)v4 - 1) == a1)
      {
        return 1LL;
      }

      v4 += 16;
      --v3;
    }

    while (v3);
  }

  return 0LL;
}

uint64_t sub_88340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WarmupComponent(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = *(void *)(a2 + 16);
  if (!v26) {
    return 0LL;
  }
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  v9(v7, a2 + v8, v4);
  uint64_t v10 = sub_10430( &qword_285E90,  (uint64_t (*)(uint64_t))&type metadata accessor for WarmupComponent,  (uint64_t)&protocol conformance descriptor for WarmupComponent);
  swift_bridgeObjectRetain(a2);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v4, v10);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  if ((v11 & 1) != 0)
  {
    uint64_t v13 = a2;
LABEL_15:
    swift_bridgeObjectRelease(v13);
    return 1LL;
  }

  else if (v26 == 1)
  {
    uint64_t v15 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v15);
    return 0LL;
  }

  else
  {
    uint64_t v24 = a2;
    uint64_t v25 = a1;
    uint64_t v16 = *(void *)(v5 + 72);
    unint64_t v17 = a2 + v16 + v8;
    uint64_t v18 = 1LL;
    while (1)
    {
      uint64_t v19 = v9;
      uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v9)(v7, v17, v4);
      uint64_t v20 = v18 + 1;
      if (__OFADD__(v18, 1LL)) {
        break;
      }
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v25, v4, v10);
      v12(v7, v4);
      if ((v21 & 1) != 0)
      {
        uint64_t v13 = v24;
        goto LABEL_15;
      }

      ++v18;
      v17 += v16;
      BOOL v22 = v20 == v26;
      uint64_t v9 = v19;
      if (v22)
      {
        uint64_t v15 = v24;
        goto LABEL_13;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_884F4(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v3 = type metadata accessor for DeviceType(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_285138);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v27 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_6C5C(&qword_285E80);
  __chkstk_darwin(v28);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(a2 + 16);
  if (!v11) {
    return 0LL;
  }
  uint64_t v12 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v13 = *(void *)(v7 + 72);
  uint64_t v24 = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v25 = v13;
  while (1)
  {
    uint64_t v14 = (uint64_t)&v10[*(int *)(v28 + 48)];
    sub_FF10(v12, (uint64_t)v10, &qword_285138);
    sub_FF10(v29, v14, &qword_285138);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    if (v15(v10, 1LL, v3) == 1) {
      break;
    }
    sub_FF10((uint64_t)v10, v27, &qword_285138);
    if (v15((char *)v14, 1LL, v3) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v27, v3);
      goto LABEL_4;
    }

    uint64_t v16 = v26;
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v26, v14, v3);
    uint64_t v18 = sub_10430( &qword_285E88,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceType,  (uint64_t)&protocol conformance descriptor for DeviceType);
    char v19 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v16, v3, v18);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
    char v21 = v16;
    uint64_t v13 = v25;
    v20(v21, v3);
    v20((char *)v17, v3);
    sub_1F6CC((uint64_t)v10, &qword_285138);
    if ((v19 & 1) != 0) {
      goto LABEL_14;
    }
LABEL_5:
    v12 += v13;
    if (!--v11)
    {
      uint64_t v22 = 0LL;
      goto LABEL_15;
    }
  }

  if (v15((char *)v14, 1LL, v3) != 1)
  {
LABEL_4:
    sub_1F6CC((uint64_t)v10, &qword_285E80);
    goto LABEL_5;
  }

  sub_1F6CC((uint64_t)v10, &qword_285138);
LABEL_14:
  uint64_t v22 = 1LL;
LABEL_15:
  swift_bridgeObjectRelease(v24);
  return v22;
}

BOOL sub_887A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_887B8()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3, 0LL);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_887FC()
{
}

Swift::Int sub_88824(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t ExecuteMusicOnRemoteFlow.exitValue.getter()
{
  Swift::UInt v1 = *(void **)(v0 + 48);
  char v2 = *(_BYTE *)(v0 + 56);
  sub_88B64(v1, v2);
  sub_888C4((uint64_t)v1, v2);
  uint64_t v4 = v3;
  sub_88B98(v1, v2);
  return v4;
}

void sub_888C4(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v3);
  __asm { BR              X10 }

uint64_t sub_88940()
{
  return v0;
}

id sub_88B64(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
      uint64_t result = (id)swift_errorRetain();
      break;
    case 2:
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }

  return result;
}

void sub_88B98(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
      swift_errorRelease(a1);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }

uint64_t ExecuteMusicOnRemoteFlow.on(input:)(uint64_t a1)
{
  uint64_t v3 = sub_6C5C(&qword_285BD0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v4);
  uint64_t v8 = &v16[-v7 - 8];
  int v9 = *(unsigned __int8 *)(v1 + 56);
  if (v9 != 2 && (v9 != 4 || *(void *)(v1 + 48))) {
    return 0LL;
  }
  uint64_t v11 = type metadata accessor for Input(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v8, a1, v11);
  uint64_t v10 = 1LL;
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0LL, 1LL, v11);
  sub_88CFC((uint64_t)v8, (uint64_t)v6);
  uint64_t v13 = v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_inputToExecute;
  swift_beginAccess(v13, v16, 33LL, 0LL);
  sub_1B3B0((uint64_t)v6, v13);
  swift_endAccess(v16);
  return v10;
}

uint64_t sub_88CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t ExecuteMusicOnRemoteFlow.execute()(uint64_t a1)
{
  v2[61] = a1;
  v2[62] = v1;
  unint64_t v3 = (*(void *)(*(void *)(sub_6C5C(&qword_2845A0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[63] = swift_task_alloc(v3);
  v2[64] = swift_task_alloc(v3);
  v2[65] = swift_task_alloc(v3);
  v2[66] = swift_task_alloc(v3);
  unint64_t v4 = (*(void *)(*(void *)(sub_6C5C((uint64_t *)&unk_286BD0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[67] = swift_task_alloc(v4);
  v2[68] = swift_task_alloc(v4);
  v2[69] = swift_task_alloc(v4);
  v2[70] = swift_task_alloc(v4);
  unint64_t v5 = (*(void *)(*(void *)(sub_6C5C(&qword_2845A8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[71] = swift_task_alloc(v5);
  v2[72] = swift_task_alloc(v5);
  v2[73] = swift_task_alloc(v5);
  v2[74] = swift_task_alloc(v5);
  uint64_t v6 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  v2[75] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[76] = v7;
  v2[77] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  v2[78] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[79] = v9;
  v2[80] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  v2[81] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v2[82] = v11;
  v2[83] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v2[84] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v2[85] = v13;
  v2[86] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchQoS(0LL);
  v2[87] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v2[88] = v15;
  v2[89] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Parse(0LL);
  v2[90] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v2[91] = v17;
  v2[92] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_285BE8);
  v2[93] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v2[94] = v19;
  unint64_t v20 = (*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[95] = swift_task_alloc(v20);
  v2[96] = swift_task_alloc(v20);
  v2[97] = swift_task_alloc(v20);
  unint64_t v21 = (*(void *)(*(void *)(sub_6C5C(&qword_285BF0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[98] = swift_task_alloc(v21);
  v2[99] = swift_task_alloc(v21);
  v2[100] = swift_task_alloc(v21);
  v2[101] = swift_task_alloc(v21);
  uint64_t v22 = sub_6C5C(&qword_285BF8);
  v2[102] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v2[103] = v23;
  v2[104] = swift_task_alloc((*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_285C00);
  v2[105] = swift_task_alloc((*(void *)(*(void *)(v24 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for SubmitCommandError(0LL);
  v2[106] = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  v2[107] = v26;
  unint64_t v27 = (*(void *)(v26 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[108] = swift_task_alloc(v27);
  v2[109] = swift_task_alloc(v27);
  v2[110] = swift_task_alloc(v27);
  uint64_t v28 = type metadata accessor for Logger(0LL);
  v2[111] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v2[112] = v29;
  unint64_t v30 = (*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[113] = swift_task_alloc(v30);
  v2[114] = swift_task_alloc(v30);
  v2[115] = swift_task_alloc(v30);
  v2[116] = swift_task_alloc(v30);
  v2[117] = swift_task_alloc(v30);
  v2[118] = swift_task_alloc(v30);
  v2[119] = swift_task_alloc(v30);
  v2[120] = swift_task_alloc(v30);
  v2[121] = swift_task_alloc(v30);
  v2[122] = swift_task_alloc(v30);
  v2[123] = swift_task_alloc(v30);
  v2[124] = swift_task_alloc(v30);
  v2[125] = swift_task_alloc(v30);
  v2[126] = swift_task_alloc(v30);
  v2[127] = swift_task_alloc(v30);
  uint64_t v31 = sub_6C5C(&qword_285BD0);
  v2[128] = swift_task_alloc((*(void *)(*(void *)(v31 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = type metadata accessor for Input(0LL);
  v2[129] = v32;
  uint64_t v33 = *(void *)(v32 - 8);
  v2[130] = v33;
  v2[131] = swift_task_alloc((*(void *)(v33 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_891C4, 0LL, 0LL);
}

id sub_891C4()
{
  uint64_t v1 = *(void *)(v0 + 1040);
  uint64_t v2 = *(void *)(v0 + 1032);
  uint64_t v3 = *(void *)(v0 + 1024);
  uint64_t v4 = *(void *)(v0 + 496) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_inputToExecute;
  swift_beginAccess(v4, v0 + 320, 0LL, 0LL);
  sub_FF10(v4, v3, &qword_285BD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1LL, v2) == 1)
  {
    sub_1F6CC(*(void *)(v0 + 1024), &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v5 = *(void *)(v0 + 912);
    uint64_t v6 = *(void *)(v0 + 896);
    uint64_t v7 = *(void *)(v0 + 888);
    uint64_t v8 = sub_6960(v7, (uint64_t)qword_2969C8);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl( &dword_0,  v10,  v11,  "ExecuteMusicOnRemoteFlow#execute() called with no input to execute? If you are pushing this flow from an existin g flow, you must provide an initialInput. If this flow was returned as a main flow from makeFlowFor, something h as gone wrong and you should file a radar.",  v12,  2u);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    uint64_t v13 = *(void *)(v0 + 912);
    uint64_t v14 = *(void *)(v0 + 896);
    uint64_t v15 = *(void *)(v0 + 888);
    uint64_t v16 = *(void *)(v0 + 496);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    uint64_t v17 = *(void **)(v16 + 48);
    *(void *)(v16 + 48) = 1LL;
    char v18 = *(_BYTE *)(v16 + 56);
    *(_BYTE *)(v16 + 56) = 4;
    sub_88B98(v17, v18);
    static ExecuteResponse.complete()(v19);
    goto LABEL_16;
  }

  (*(void (**)(void, void, void))(*(void *)(v0 + 1040) + 32LL))( *(void *)(v0 + 1048),  *(void *)(v0 + 1024),  *(void *)(v0 + 1032));
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = *(void *)(v0 + 1016);
  uint64_t v21 = *(void *)(v0 + 896);
  uint64_t v22 = *(void *)(v0 + 888);
  uint64_t v23 = *(void *)(v0 + 496);
  uint64_t v24 = sub_6960(v22, (uint64_t)qword_2969C8);
  *(void *)(v0 + 1056) = v24;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v0 + 1064) = v25;
  v25(v20, v24, v22);
  uint64_t v26 = swift_retain(v23);
  unint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.info.getter(v27);
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 1016);
  uint64_t v31 = *(void *)(v0 + 896);
  uint64_t v32 = *(void *)(v0 + 888);
  uint64_t v33 = *(void *)(v0 + 496);
  if (v29)
  {
    uint64_t v110 = *(void *)(v0 + 888);
    uint64_t v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    v113[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    uint64_t v108 = v30;
    uint64_t v36 = *(void *)(v33 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload);
    unint64_t v37 = *(void *)(v33
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload
                    + 8);
    swift_bridgeObjectRetain(v37);
    *(void *)(v0 + 480) = sub_6978(v36, v37, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 480, v0 + 488);
    swift_release(v33);
    swift_bridgeObjectRelease(v37);
    _os_log_impl(&dword_0, v27, v28, "ExecuteMusicOnRemoteFlow#execute remoteAssistantId = %s", v34, 0xCu);
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v34, -1LL, -1LL);

    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
    uint64_t v39 = v38(v108, v110);
  }

  else
  {

    swift_release(v33);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
    uint64_t v39 = v38(v30, v32);
  }

  *(void *)(v0 + 1072) = v38;
  uint64_t v40 = *(void *)(v0 + 496);
  int v41 = *(unsigned __int8 *)(v40 + 56);
  if (v41 != 2 && (v41 != 4 || *(void *)(v40 + 48)))
  {
    uint64_t v42 = *(void *)(v0 + 1048);
    uint64_t v43 = *(void *)(v0 + 1040);
    uint64_t v44 = *(void *)(v0 + 1032);
    static ExecuteResponse.complete()(v39);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
LABEL_16:
    uint64_t v45 = *(void *)(v0 + 1024);
    uint64_t v46 = *(void *)(v0 + 1016);
    uint64_t v47 = *(void *)(v0 + 1008);
    uint64_t v48 = *(void *)(v0 + 1000);
    uint64_t v49 = *(void *)(v0 + 992);
    uint64_t v50 = *(void *)(v0 + 984);
    uint64_t v51 = *(void *)(v0 + 976);
    uint64_t v52 = *(void *)(v0 + 968);
    uint64_t v53 = *(void *)(v0 + 960);
    uint64_t v74 = *(void *)(v0 + 952);
    uint64_t v75 = *(void *)(v0 + 944);
    uint64_t v76 = *(void *)(v0 + 936);
    uint64_t v77 = *(void *)(v0 + 928);
    uint64_t v78 = *(void *)(v0 + 920);
    uint64_t v79 = *(void *)(v0 + 912);
    uint64_t v80 = *(void *)(v0 + 904);
    uint64_t v81 = *(void *)(v0 + 880);
    uint64_t v82 = *(void *)(v0 + 872);
    uint64_t v83 = *(void *)(v0 + 864);
    uint64_t v84 = *(void *)(v0 + 840);
    uint64_t v85 = *(void *)(v0 + 832);
    uint64_t v86 = *(void *)(v0 + 808);
    uint64_t v87 = *(void *)(v0 + 800);
    uint64_t v88 = *(void *)(v0 + 792);
    uint64_t v89 = *(void *)(v0 + 784);
    uint64_t v90 = *(void *)(v0 + 776);
    uint64_t v91 = *(void *)(v0 + 768);
    uint64_t v92 = *(void *)(v0 + 760);
    uint64_t v93 = *(void *)(v0 + 736);
    uint64_t v94 = *(void *)(v0 + 712);
    uint64_t v95 = *(void *)(v0 + 688);
    uint64_t v96 = *(void *)(v0 + 664);
    uint64_t v97 = *(void *)(v0 + 640);
    uint64_t v98 = *(void *)(v0 + 616);
    uint64_t v99 = *(void *)(v0 + 592);
    uint64_t v100 = *(void *)(v0 + 584);
    uint64_t v101 = *(void *)(v0 + 576);
    uint64_t v102 = *(void *)(v0 + 568);
    uint64_t v103 = *(void *)(v0 + 560);
    uint64_t v104 = *(void *)(v0 + 552);
    uint64_t v105 = *(void *)(v0 + 544);
    uint64_t v106 = *(void *)(v0 + 536);
    uint64_t v107 = *(void *)(v0 + 528);
    uint64_t v109 = *(void *)(v0 + 520);
    uint64_t v111 = *(void *)(v0 + 512);
    uint64_t v112 = *(void *)(v0 + 504);
    swift_task_dealloc(*(void *)(v0 + 1048));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v103);
    swift_task_dealloc(v104);
    swift_task_dealloc(v105);
    swift_task_dealloc(v106);
    swift_task_dealloc(v107);
    swift_task_dealloc(v109);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v55 = static SiriEnvironmentWrapper.retrieve()(v39);
  if (!v55)
  {
    uint64_t v56 = type metadata accessor for ExecuteMusicOnRemoteFlow(0LL);
    uint64_t v57 = sub_10430( &qword_285C08,  type metadata accessor for ExecuteMusicOnRemoteFlow,  (uint64_t)&protocol conformance descriptor for ExecuteMusicOnRemoteFlow);
    uint64_t v55 = SiriEnvironmentLocating<>.siriEnvironment.getter(v56, v57);
  }

  *(void *)(v0 + 1080) = v55;
  uint64_t v58 = *(void *)(v0 + 1048);
  uint64_t v59 = *(void *)(v0 + 496);
  uint64_t v60 = *(void **)(v59 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload);
  unint64_t v61 = *(void *)(v59 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload + 8);
  uint64_t v62 = SiriEnvironment.currentRequest.getter(v55);
  id v63 = ExecuteMusicOnRemoteFlow.makeExecuteOnRemoteRequest(input:targetDeviceId:currentRequest:)(v58, v60, v61, v62);
  *(void *)(v0 + 1088) = v63;
  swift_release(v62);
  id result = [v63 remoteExecution];
  if (result)
  {
    uint64_t v64 = result;
    id v65 = [result executionDeviceAssistantId];

    if (v65)
    {
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      unint64_t v68 = v67;
    }

    else
    {
      uint64_t v66 = 0LL;
      unint64_t v68 = 0LL;
    }

    uint64_t v69 = *(void *)(v0 + 496);
    id v70 = sub_91F70(v63, v66, v68);
    *(void *)(v0 + 1096) = v70;
    swift_bridgeObjectRelease(v68);
    uint64_t v71 = swift_task_alloc(32LL);
    *(void *)(v0 + 1104) = v71;
    *(void *)(v71 + 16) = v69;
    *(void *)(v71 + 24) = v70;
    id v72 = (void *)swift_task_alloc(async function pointer to Result<>.init(catching:)[1]);
    *(void *)(v0 + 11sub_6C3C(v0 + 12) = v72;
    uint64_t v73 = sub_1641C(0LL, &qword_285C28, &OBJC_CLASS___SAExecuteOnRemoteResponse_ptr);
    *id v72 = v0;
    v72[1] = sub_89A0C;
    return (id)Result<>.init(catching:)(v0 + 344, &unk_285C20, v71, v73);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_89A0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1104LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1112LL));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_89A98, 0LL, 0LL);
}

id sub_89A98()
{
  uint64_t v1 = *(void **)(v0 + 344);
  *(void *)(v0 + 1120) = v1;
  if (*(_BYTE *)(v0 + 352) != 1)
  {
    uint64_t v17 = (void *)swift_task_alloc(dword_285C34);
    *(void *)(v0 + 1128) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_8ADC0;
    return (id)sub_8F3E0();
  }

  uint64_t v2 = v0 + 416;
  uint64_t v179 = v0 + 464;
  (*(void (**)(void, void, void))(v0 + 1064))( *(void *)(v0 + 1008),  *(void *)(v0 + 1056),  *(void *)(v0 + 888));
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
  uint64_t v8 = *(void *)(v0 + 1008);
  uint64_t v9 = *(void *)(v0 + 888);
  if (v6)
  {
    uint64_t v173 = *(void *)(v0 + 888);
    uint64_t v171 = *(void *)(v0 + 1008);
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v182 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v0 + 464) = v1;
    swift_errorRetain(v1);
    uint64_t v12 = sub_6C5C(&qword_284010);
    uint64_t v13 = String.init<A>(describing:)(v179, v12);
    unint64_t v15 = v14;
    *(void *)(v0 + 472) = sub_6978(v13, v14, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 472, v0 + 480);
    swift_bridgeObjectRelease(v15);
    sub_87F78(v1, 1);
    sub_87F78(v1, 1);
    _os_log_impl( &dword_0,  v4,  v5,  "ExecuteMusicOnRemoteFlow#execute Error submitting SAExecuteOnRemoteRequest: %s",  v10,  0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v16 = v11;
    uint64_t v2 = v0 + 416;
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);

    v7(v171, v173);
  }

  else
  {
    sub_87F78(v1, 1);
    sub_87F78(v1, 1);

    v7(v8, v9);
  }

  uint64_t v19 = *(void *)(v0 + 856);
  uint64_t v20 = *(void *)(v0 + 848);
  uint64_t v21 = *(void *)(v0 + 840);
  uint64_t v22 = *(void *)(v0 + 496);
  uint64_t v23 = *(void **)(v22 + 48);
  *(void *)(v22 + 48) = v1;
  char v24 = *(_BYTE *)(v22 + 56);
  *(_BYTE *)(v22 + 56) = 1;
  swift_errorRetain(v1);
  sub_88B98(v23, v24);
  *(void *)(v0 + 416) = v1;
  swift_errorRetain(v1);
  uint64_t v25 = sub_6C5C(&qword_284010);
  int v26 = swift_dynamicCast(v21, v2, v25, v20, 6LL);
  unint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v28 = *(void *)(v0 + 848);
  uint64_t v29 = *(void *)(v0 + 840);
  if (!v26)
  {
    uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
    uint64_t v56 = *(void *)(v0 + 1056);
    uint64_t v57 = *(void *)(v0 + 968);
    uint64_t v58 = *(void *)(v0 + 888);
    v27(v29, 1LL, 1LL, v28);
    sub_1F6CC(v29, &qword_285C00);
    v55(v57, v56, v58);
    swift_errorRetain(v1);
    uint64_t v59 = swift_errorRetain(v1);
    uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
    os_log_type_t v61 = static os_log_type_t.error.getter();
    BOOL v62 = os_log_type_enabled(v60, v61);
    id v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
    uint64_t v64 = *(void *)(v0 + 968);
    uint64_t v65 = *(void *)(v0 + 888);
    if (v62)
    {
      uint64_t v177 = *(void *)(v0 + 888);
      uint64_t v175 = *(void *)(v0 + 968);
      uint64_t v66 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v67 = swift_slowAlloc(32LL, -1LL);
      uint64_t v182 = v67;
      *(_DWORD *)uint64_t v66 = 136315138;
      *(void *)(v0 + 360) = v1;
      swift_errorRetain(v1);
      uint64_t v68 = String.init<A>(describing:)(v0 + 360, v25);
      unint64_t v70 = v69;
      *(void *)(v0 + 368) = sub_6978(v68, v69, &v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 368, v0 + 376);
      swift_bridgeObjectRelease(v70);
      sub_87F78(v1, 1);
      sub_87F78(v1, 1);
      _os_log_impl( &dword_0,  v60,  v61,  "ExecuteMusicOnRemoteFlow#execute Error submitting SAExecuteOnRemoteRequest: %s",  v66,  0xCu);
      swift_arrayDestroy(v67, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1LL, -1LL);
      swift_slowDealloc(v66, -1LL, -1LL);

      v63(v175, v177);
    }

    else
    {
      sub_87F78(v1, 1);
      sub_87F78(v1, 1);

      v63(v64, v65);
    }

    uint64_t v91 = (void *)swift_task_alloc(dword_285C44);
    *(void *)(v0 + 1216) = v91;
    *uint64_t v91 = v0;
    v91[1] = sub_8DE78;
    uint64_t v92 = "siriForAirPlayGenericError5";
    goto LABEL_53;
  }

  uint64_t v30 = *(void *)(v0 + 880);
  uint64_t v31 = *(void *)(v0 + 872);
  uint64_t v32 = *(void *)(v0 + 856);
  v27(v29, 0LL, 1LL, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v28);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  v33(v31, v30, v28);
  int v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88))(v31, v28);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v36 = *(void *)(v0 + 1056);
  uint64_t v37 = *(void *)(v0 + 888);
  if (v34 != enum case for SubmitCommandError.failedResponse(_:))
  {
    uint64_t v180 = (uint64_t *)(v0 + 376);
    uint64_t v71 = *(void *)(v0 + 880);
    uint64_t v72 = *(void *)(v0 + 864);
    uint64_t v73 = *(void *)(v0 + 848);
    v35(*(void *)(v0 + 976), v36, v37);
    uint64_t v74 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v33)(v72, v71, v73);
    uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
    os_log_type_t v76 = static os_log_type_t.error.getter();
    BOOL v77 = os_log_type_enabled(v75, v76);
    uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
    uint64_t v79 = *(void *)(v0 + 976);
    uint64_t v80 = *(void *)(v0 + 888);
    uint64_t v81 = *(void *)(v0 + 864);
    uint64_t v82 = *(void *)(v0 + 856);
    uint64_t v83 = *(void *)(v0 + 848);
    if (v77)
    {
      os_log_type_t v178 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
      uint64_t v84 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v176 = v79;
      uint64_t v85 = swift_slowAlloc(32LL, -1LL);
      uint64_t v182 = v85;
      *(_DWORD *)uint64_t v84 = 136315138;
      uint64_t v86 = sub_10430( &qword_285C48,  (uint64_t (*)(uint64_t))&type metadata accessor for SubmitCommandError,  (uint64_t)&protocol conformance descriptor for SubmitCommandError);
      uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter(v83, v86);
      unint64_t v89 = v88;
      *uint64_t v180 = sub_6978(v87, v88, &v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v180, v0 + 384);
      swift_bridgeObjectRelease(v89);
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v90(v81, v83);
      _os_log_impl(&dword_0, v75, v76, "ExecuteMusicOnRemoteFlow#execute SubmitCommandError %s", v84, 0xCu);
      swift_arrayDestroy(v85, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1LL, -1LL);
      swift_slowDealloc(v84, -1LL, -1LL);

      v178(v176, v80);
    }

    else
    {
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v90(*(void *)(v0 + 864), *(void *)(v0 + 848));

      v78(v79, v80);
    }

    *(void *)(v0 + 1200) = v90;
    uint64_t v93 = (void *)swift_task_alloc(dword_285C44);
    *(void *)(v0 + 1208) = v93;
    void *v93 = v0;
    v93[1] = sub_8DA94;
    uint64_t v92 = "siriForAirPlayGenericError4";
LABEL_53:
    unint64_t v150 = (unint64_t)(v92 - 32) | 0x8000000000000000LL;
    char v151 = 0;
    return (id)sub_8FBA0(v151, 0xD00000000000001BLL, v150);
  }

  uint64_t v38 = *(void *)(v0 + 1000);
  uint64_t v39 = *(void ***)(v0 + 872);
  (*(void (**)(void **, void))(*(void *)(v0 + 856) + 96LL))(v39, *(void *)(v0 + 848));
  uint64_t v40 = *v39;
  *(void *)(v0 + 1144) = v40;
  v35(v38, v36, v37);
  id v41 = v40;
  uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v172 = (uint64_t *)(v0 + 456);
    uint64_t v44 = swift_slowAlloc(22LL, -1LL);
    uint64_t v45 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v44 = 134218242;
    *(void *)(v0 + 440) = [v41 errorCode];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 440, v0 + 448);
    *(_WORD *)(v44 + sub_6C3C(v0 + 12) = 2112;
    uint64_t v174 = v41;
    id v46 = [v41 reason];
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      uint64_t v50 = v49;

      unint64_t v51 = sub_6C9C();
      uint64_t v52 = swift_allocError(&type metadata for String, v51, 0LL, 0LL);
      *uint64_t v53 = v48;
      v53[1] = v50;
      uint64_t v54 = _swift_stdlib_bridgeErrorToNSError(v52);
      *uint64_t v172 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v172, v179);
    }

    else
    {
      *(void *)(v0 + 448) = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 448, v172);
      uint64_t v54 = 0LL;
    }

    *uint64_t v45 = v54;
    id v41 = v174;

    _os_log_impl( &dword_0,  v42,  v43,  "ExecuteMusicOnRemoteFlow#execute SubmitCommandError.failedResponse errorCode: %ld, reason: %@",  (uint8_t *)v44,  0x16u);
    uint64_t v94 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v45, 1LL, v94);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  else
  {

    uint64_t v42 = (os_log_s *)v41;
  }

  uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
  uint64_t v96 = *(void *)(v0 + 1000);
  uint64_t v97 = *(void *)(v0 + 888);

  v95(v96, v97);
  uint64_t v98 = sub_6C5C(&qword_285C50);
  Regex.init(_regexString:version:)(0xD000000000000031LL, 0x800000000021E720LL, 1LL, v98);
  id v99 = [v41 reason];
  if (!v99)
  {
    uint64_t v105 = (*(uint64_t (**)(void, void, void))(v0 + 1064))( *(void *)(v0 + 984),  *(void *)(v0 + 1056),  *(void *)(v0 + 888));
    uint64_t v106 = (os_log_s *)Logger.logObject.getter(v105);
    os_log_type_t v107 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl( &dword_0,  v106,  v107,  "ExecuteMusicOnRemoteFlow#execute Error parsing failedResponse.reason is nil",  v108,  2u);
      swift_slowDealloc(v108, -1LL, -1LL);
    }

    uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
    uint64_t v110 = *(void *)(v0 + 984);
    uint64_t v111 = *(void *)(v0 + 888);

    v109(v110, v111);
    uint64_t v112 = (void *)swift_task_alloc(dword_285C44);
    *(void *)(v0 + 1192) = v112;
    *uint64_t v112 = v0;
    v112[1] = sub_8D694;
    uint64_t v92 = "siriForAirPlayGenericError3";
    goto LABEL_53;
  }

  id result = [v41 reason];
  if (!result)
  {
    __break(1u);
    return result;
  }

  uint64_t v100 = result;
  uint64_t v101 = *(void *)(v0 + 816);
  uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  uint64_t v104 = v103;

  Regex.firstMatch(in:)(v102, v104, v101);
  *(void *)(v0 + 1152) = 0LL;
  uint64_t v113 = *(void *)(v0 + 808);
  uint64_t v114 = *(void *)(v0 + 800);
  uint64_t v115 = *(void *)(v0 + 752);
  uint64_t v116 = *(void *)(v0 + 744);
  swift_bridgeObjectRelease(v104);
  sub_FF10(v113, v114, &qword_285BF0);
  uint64_t v117 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
  int v118 = v117(v114, 1LL, v116);
  if (v118 == 1)
  {
    sub_1F6CC(*(void *)(v0 + 800), &qword_285BF0);
  }

  else
  {
    uint64_t v119 = *(void *)(v0 + 744);
    (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 752) + 32LL))( *(void *)(v0 + 776),  *(void *)(v0 + 800),  v119);
    uint64_t KeyPath = swift_getKeyPath(&unk_215D88);
    Regex.Match.subscript.getter(KeyPath, v119);
    swift_release(KeyPath);
    uint64_t v121 = *(void *)(v0 + 280);
    uint64_t v122 = static String._fromSubstring(_:)(*(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), v121);
    unint64_t v124 = v123;
    swift_bridgeObjectRelease(v121);
    uint64_t v125 = sub_8E788(v122, v124);
    if ((v126 & 1) == 0
      && (sub_88294( v125,  *(void *)(*(void *)(v0 + 496)
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionNotInRangeErrorCodes)) & 1) != 0)
    {
      uint64_t v127 = (void *)swift_task_alloc(dword_285C44);
      *(void *)(v0 + 1160) = v127;
      *uint64_t v127 = v0;
      v127[1] = sub_8C5E4;
      return (id)sub_8FBA0(1, 0xD00000000000001ELL, 0x800000000021E7E0LL);
    }

    (*(void (**)(void, void))(*(void *)(v0 + 752) + 8LL))(*(void *)(v0 + 776), *(void *)(v0 + 744));
  }

  uint64_t v128 = *(void *)(v0 + 792);
  uint64_t v129 = *(void *)(v0 + 744);
  sub_FF10(*(void *)(v0 + 808), v128, &qword_285BF0);
  if (v117(v128, 1LL, v129) == 1)
  {
    sub_1F6CC(*(void *)(v0 + 792), &qword_285BF0);
  }

  else
  {
    uint64_t v130 = *(void *)(v0 + 744);
    (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 752) + 32LL))( *(void *)(v0 + 768),  *(void *)(v0 + 792),  v130);
    uint64_t v131 = swift_getKeyPath(&unk_215D88);
    Regex.Match.subscript.getter(v131, v130);
    swift_release(v131);
    uint64_t v132 = *(void *)(v0 + 312);
    uint64_t v133 = static String._fromSubstring(_:)(*(void *)(v0 + 288), *(void *)(v0 + 296), *(void *)(v0 + 304), v132);
    unint64_t v135 = v134;
    swift_bridgeObjectRelease(v132);
    uint64_t v136 = sub_8E788(v133, v135);
    if ((v137 & 1) == 0
      && (sub_88294( v136,  *(void *)(*(void *)(v0 + 496)
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionWifiMismatchErrorCodes)) & 1) != 0)
    {
      uint64_t v138 = (void *)swift_task_alloc(dword_285C44);
      *(void *)(v0 + 1168) = v138;
      *uint64_t v138 = v0;
      v138[1] = sub_8CA18;
      return (id)sub_8FBA0(2, 0x6D73694D69666977LL, 0xEC00000068637461LL);
    }

    (*(void (**)(void, void))(*(void *)(v0 + 752) + 8LL))(*(void *)(v0 + 768), *(void *)(v0 + 744));
  }

  uint64_t v139 = *(void *)(v0 + 784);
  uint64_t v140 = *(void *)(v0 + 744);
  sub_FF10(*(void *)(v0 + 808), v139, &qword_285BF0);
  if (v117(v139, 1LL, v140) == 1)
  {
    sub_1F6CC(*(void *)(v0 + 784), &qword_285BF0);
LABEL_46:
    (*(void (**)(void, void, void))(v0 + 1064))( *(void *)(v0 + 992),  *(void *)(v0 + 1056),  *(void *)(v0 + 888));
    id v152 = v41;
    uint64_t v153 = (os_log_s *)Logger.logObject.getter(v152);
    os_log_type_t v154 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v153, v154))
    {
      uint64_t v155 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v156 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v155 = 138412290;
      id v157 = [v152 reason];
      os_log_type_t v158 = v157;
      if (v157)
      {
        uint64_t v181 = static String._unconditionallyBridgeFromObjectiveC(_:)(v157);
        uint64_t v160 = v159;

        unint64_t v161 = sub_6C9C();
        uint64_t v162 = swift_allocError(&type metadata for String, v161, 0LL, 0LL);
        uint64_t *v163 = v181;
        v163[1] = v160;
        os_log_type_t v158 = (void *)_swift_stdlib_bridgeErrorToNSError(v162);
        *(void *)(v0 + 408) = v158;
        uint64_t v164 = v0 + 408;
        uint64_t v165 = v2;
      }

      else
      {
        uint64_t v164 = v0 + 400;
        *(void *)(v0 + 400) = 0LL;
        uint64_t v165 = v0 + 408;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(v164, v165);
      *uint64_t v156 = v158;

      _os_log_impl( &dword_0,  v153,  v154,  "ExecuteMusicOnRemoteFlow#execute Failed parsing failedResponseReason: %@",  v155,  0xCu);
      uint64_t v166 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v156, 1LL, v166);
      swift_slowDealloc(v156, -1LL, -1LL);
      swift_slowDealloc(v155, -1LL, -1LL);
    }

    else
    {

      uint64_t v153 = (os_log_s *)v152;
    }

    uint64_t v167 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
    uint64_t v168 = *(void *)(v0 + 992);
    uint64_t v169 = *(void *)(v0 + 888);

    v167(v168, v169);
    uint64_t v170 = (void *)swift_task_alloc(dword_285C44);
    *(void *)(v0 + 1184) = v170;
    *uint64_t v170 = v0;
    v170[1] = sub_8D280;
    uint64_t v92 = "siriForAirPlayGenericError1";
    goto LABEL_53;
  }

  uint64_t v141 = *(void *)(v0 + 744);
  (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 752) + 32LL))( *(void *)(v0 + 760),  *(void *)(v0 + 784),  v141);
  uint64_t v142 = swift_getKeyPath(&unk_215D88);
  Regex.Match.subscript.getter(v142, v141);
  swift_release(v142);
  uint64_t v143 = *(void *)(v0 + 248);
  uint64_t v144 = static String._fromSubstring(_:)(*(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), v143);
  unint64_t v146 = v145;
  swift_bridgeObjectRelease(v143);
  uint64_t v147 = sub_8E788(v144, v146);
  if ((v148 & 1) != 0
    || (sub_88294( v147,  *(void *)(*(void *)(v0 + 496)
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionConnectionTimedOut)) & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 752) + 8LL))(*(void *)(v0 + 760), *(void *)(v0 + 744));
    goto LABEL_46;
  }

  uint64_t v149 = (void *)swift_task_alloc(dword_285C44);
  *(void *)(v0 + 1176) = v149;
  *uint64_t v149 = v0;
  v149[1] = sub_8CE4C;
  unint64_t v150 = 0x800000000021E7C0LL;
  char v151 = 3;
  return (id)sub_8FBA0(v151, 0xD00000000000001BLL, v150);
}

uint64_t sub_8ADC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1128LL);
  *(void *)(*(void *)v1 + 1136LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_8AE48, 0LL, 0LL);
}

uint64_t sub_8AE48(uint64_t a1)
{
  uint64_t v2 = (void *)v1[140];
  v305 = v1 + 54;
  uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v1[133];
  uint64_t v4 = v1[132];
  uint64_t v5 = v1[120];
  uint64_t v6 = v1[111];
  uint64_t v7 = v1[92];
  uint64_t v8 = v1[91];
  uint64_t v9 = v1[90];
  uint64_t v10 = Input.parse.getter(a1);
  v309 = (void *)Parse.playMediaIntent.getter(v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v3(v5, v4, v6);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (void *)v1[140];
    uint64_t v289 = v1[120];
    uint64_t v296 = (uint64_t (*)(uint64_t, uint64_t))v1[134];
    uint64_t v281 = v1[111];
    unint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    v311[0] = v15;
    *(_DWORD *)unint64_t v14 = 136315138;
    id v16 = [v13 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v19 = v18;

    sub_87F78(v13, 0);
    v1[53] = sub_6978(v17, v19, v311);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 53, v305);
    swift_bridgeObjectRelease(v19);
    sub_87F78(v13, 0);
    sub_87F78(v13, 0);
    _os_log_impl( &dword_0,  v11,  v12,  "ExecuteMusicOnRemoteFlow#execute Got response from SAExecuteOnRemoteRequest: %s",  v14,  0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);

    uint64_t v20 = v296(v289, v281);
  }

  else
  {
    uint64_t v21 = (void *)v1[140];
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))v1[134];
    uint64_t v23 = v1[120];
    uint64_t v24 = v1[111];
    sub_87F78(v21, 0);
    sub_87F78(v21, 0);

    uint64_t v20 = v22(v23, v24);
  }

  uint64_t v290 = v1[132];
  uint64_t v297 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1[133];
  uint64_t v25 = v1[119];
  uint64_t v26 = v1[89];
  uint64_t v267 = v1[88];
  uint64_t v274 = v1[87];
  uint64_t v282 = v1[111];
  uint64_t v27 = v1[86];
  uint64_t v28 = v1[85];
  uint64_t v29 = v1[84];
  uint64_t v30 = (void *)static DispatchQueues.analytics.getter(v20);
  uint64_t v31 = swift_allocObject(&unk_26CFF8, 24LL, 7LL);
  *(void *)(v31 + 16) = v309;
  v1[6] = sub_92558;
  v1[7] = v31;
  v1[2] = _NSConcreteStackBlock;
  v1[3] = 1107296256LL;
  v1[4] = sub_6E7C;
  v1[5] = &unk_26D010;
  uint64_t v32 = _Block_copy(v1 + 2);
  id v301 = v309;
  static DispatchQoS.unspecified.getter(v301);
  v1[54] = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v33 = sub_6C5C(&qword_285480);
  sub_21358();
  dispatch thunk of SetAlgebra.init<A>(_:)(v305, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v27, v32);
  _Block_release(v32);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v26, v274);
  swift_release(v1[7]);
  uint64_t v34 = v297(v25, v290, v282);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl(&dword_0, v35, v36, "ExecuteMusicOnRemoteFlow#execute saving app selection record...", v37, 2u);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  uint64_t v38 = v1[142];
  uint64_t v39 = (void *)v1[140];
  uint64_t v40 = (void (*)(uint64_t, uint64_t))v1[134];
  uint64_t v41 = v1[119];
  uint64_t v42 = v1[111];

  v40(v41, v42);
  uint64_t v43 = type metadata accessor for PSESignalsStitcher(0LL);
  swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
  uint64_t v44 = PSESignalsStitcher.init()();
  sub_DF2AC(v38, v309, 4LL, 0, 0, v44);
  swift_release(v44);
  id v45 = [v39 result];
  if (v45)
  {
    id v46 = v45;
    uint64_t v47 = objc_opt_self(&OBJC_CLASS___SAIntentGroupRunSiriKitExecutorCompleted);
    uint64_t v48 = (void *)swift_dynamicCastObjCClass(v46, v47);
    if (v48)
    {
      uint64_t v49 = v48;
      id v306 = v46;
      uint64_t v298 = v48;
      if ([v48 needsUserInput])
      {
        v291 = v1 + 13;
        uint64_t v50 = ((uint64_t (*)(void, void, void))v1[133])(v1[118], v1[132], v1[111]);
        unint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
        os_log_type_t v52 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v53 = 0;
          _os_log_impl( &dword_0,  v51,  v52,  "ExecuteMusicOnRemoteFlow#execute remote request is waiting on user input. But follow ups are not currently s upported by this flow. Returning .complete()",  v53,  2u);
          swift_slowDealloc(v53, -1LL, -1LL);
        }

        uint64_t v54 = (void (*)(uint64_t, uint64_t))v1[134];
        uint64_t v55 = v1[118];
        uint64_t v56 = v1[111];
        uint64_t v57 = v1[83];
        uint64_t v58 = v1[82];
        uint64_t v59 = v1[81];
        uint64_t v60 = v1[80];
        uint64_t v213 = v1[79];
        uint64_t v220 = v1[78];
        uint64_t v61 = v1[77];
        uint64_t v227 = v1[76];
        uint64_t v236 = v1[74];
        uint64_t v259 = v1[70];
        uint64_t v268 = v1[66];
        uint64_t v244 = v1[75];
        uint64_t v252 = v1[62];

        v54(v55, v56);
        (*(void (**)(uint64_t, void, uint64_t))(v58 + 104))( v57,  enum case for AdditionalMetricsDescription.ModuleName.emorf(_:),  v59);
        (*(void (**)(uint64_t, void, uint64_t))(v213 + 104))( v60,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v220);
        (*(void (**)(uint64_t, void, uint64_t))(v227 + 104))( v61,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v244);
        uint64_t v275 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v57,  v60,  v61,  0LL,  1LL);
        uint64_t v283 = v62;
        (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v61, v244);
        (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v60, v220);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
        sub_157C4( v252 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider,  (uint64_t)v291);
        uint64_t v63 = v1[16];
        uint64_t v245 = v1[17];
        sub_6EA8(v291, v63);
        uint64_t v64 = enum case for ActivityType.resolveSlotNeedsValue(_:);
        uint64_t v65 = type metadata accessor for ActivityType(0LL);
        uint64_t v66 = *(void *)(v65 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 104))(v236, v64, v65);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v236, 0LL, 1LL, v65);
        uint64_t v67 = type metadata accessor for TemplatingResult(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56LL))(v259, 1LL, 1LL, v67);
        uint64_t v68 = enum case for SiriKitReliabilityCodes.success(_:);
        uint64_t v69 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v70 = *(void *)(v69 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 104))(v268, v68, v69);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v268, 0LL, 1LL, v69);
        if (v309)
        {
          uint64_t v71 = v301;
          uint64_t v72 = INPlayMediaIntent.firstMediaItemType()(v301);
        }

        else
        {
          uint64_t v72 = 0LL;
          uint64_t v71 = v301;
        }

        uint64_t v155 = v1[142];
        uint64_t v264 = (void *)v1[140];
        uint64_t v216 = (void *)v1[137];
        uint64_t v233 = (void *)v1[136];
        uint64_t v223 = v1[135];
        uint64_t v303 = v1[131];
        uint64_t v241 = v1[130];
        uint64_t v272 = v1[129];
        uint64_t v156 = v1[74];
        uint64_t v157 = v1[70];
        uint64_t v158 = v1[66];
        uint64_t v159 = v1[62];
        dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v155,  v309,  v156,  v157,  v158,  v275,  v283,  v72,  v309 == 0LL,  v63,  v245);
        swift_bridgeObjectRelease(v283);

        sub_1F6CC(v158, &qword_2845A0);
        sub_1F6CC(v157, (uint64_t *)&unk_286BD0);
        sub_1F6CC(v156, &qword_2845A8);
        sub_6C3C(v291);
        uint64_t v160 = *(void **)(v159 + 48);
        *(void *)(v159 + 48) = v298;
        LOBYTE(v156) = *(_BYTE *)(v159 + 56);
        *(_BYTE *)(v159 + 56) = 3;
        swift_unknownObjectRetain(v306, v161);
        sub_88B98(v160, v156);
        static ExecuteResponse.complete()(v162);

        swift_release(v223);
        swift_unknownObjectRelease(v306);

        uint64_t v163 = v155;
      }

      else
      {
        unsigned int v105 = [v49 needsServerExecution];
        uint64_t v106 = (uint64_t (*)(void, uint64_t, uint64_t))v1[133];
        uint64_t v107 = v1[132];
        uint64_t v108 = v1[111];
        if (v105)
        {
          __int128 v293 = v1 + 18;
          uint64_t v109 = v106(v1[117], v107, v108);
          uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
          os_log_type_t v111 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v110, v111))
          {
            uint64_t v112 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v112 = 0;
            _os_log_impl( &dword_0,  v110,  v111,  "ExecuteMusicOnRemoteFlow#execute remote request redirected to the server. Will return .unhandled(reason: . needsServerExecution)",  v112,  2u);
            swift_slowDealloc(v112, -1LL, -1LL);
          }

          uint64_t v113 = (void (*)(uint64_t, uint64_t))v1[134];
          uint64_t v114 = v1[117];
          uint64_t v115 = v1[111];
          uint64_t v116 = v1[83];
          uint64_t v117 = v1[82];
          uint64_t v118 = v1[81];
          uint64_t v119 = v1[80];
          uint64_t v214 = v1[79];
          uint64_t v221 = v1[78];
          uint64_t v120 = v1[77];
          uint64_t v230 = v1[76];
          uint64_t v239 = v1[75];
          uint64_t v255 = v1[73];
          uint64_t v262 = v1[69];
          uint64_t v270 = v1[65];
          uint64_t v248 = v1[62];

          v113(v114, v115);
          (*(void (**)(uint64_t, void, uint64_t))(v117 + 104))( v116,  enum case for AdditionalMetricsDescription.ModuleName.emorf(_:),  v118);
          (*(void (**)(uint64_t, void, uint64_t))(v214 + 104))( v119,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v221);
          (*(void (**)(uint64_t, void, uint64_t))(v230 + 104))( v120,  enum case for AdditionalMetricsDescription.StatusReason.needsServerExec(_:),  v239);
          uint64_t v278 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v116,  v119,  v120,  0LL,  1LL);
          uint64_t v286 = v121;
          (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v120, v239);
          (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v119, v221);
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
          sub_157C4( v248 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider,  (uint64_t)v293);
          uint64_t v122 = v1[21];
          uint64_t v231 = v1[22];
          sub_6EA8(v293, v122);
          uint64_t v123 = enum case for ActivityType.needsServerExecution(_:);
          uint64_t v124 = type metadata accessor for ActivityType(0LL);
          uint64_t v125 = *(void *)(v124 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 104))(v255, v123, v124);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v125 + 56))(v255, 0LL, 1LL, v124);
          uint64_t v126 = type metadata accessor for TemplatingResult(0LL);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56LL))( v262,  1LL,  1LL,  v126);
          uint64_t v127 = enum case for SiriKitReliabilityCodes.success(_:);
          uint64_t v128 = type metadata accessor for SiriKitReliabilityCodes(0LL);
          uint64_t v129 = *(void *)(v128 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 104))(v270, v127, v128);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v270, 0LL, 1LL, v128);
          if (v309)
          {
            uint64_t v130 = v301;
            uint64_t v131 = INPlayMediaIntent.firstMediaItemType()(v301);
          }

          else
          {
            uint64_t v131 = 0LL;
            uint64_t v130 = v301;
          }

          uint64_t v164 = v1[142];
          v265 = (void *)v1[140];
          unint64_t v217 = (void *)v1[137];
          v242 = (void *)v1[136];
          uint64_t v224 = v1[135];
          uint64_t v303 = v1[131];
          uint64_t v257 = v1[130];
          uint64_t v272 = v1[129];
          uint64_t v165 = v1[73];
          uint64_t v166 = v1[69];
          uint64_t v167 = v1[65];
          uint64_t v168 = v1[62];
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v164,  v309,  v165,  v166,  v167,  v278,  v286,  v131,  v309 == 0LL,  v122,  v231);
          swift_bridgeObjectRelease(v286);

          sub_1F6CC(v167, &qword_2845A0);
          sub_1F6CC(v166, (uint64_t *)&unk_286BD0);
          sub_1F6CC(v165, &qword_2845A8);
          sub_6C3C(v293);
          uint64_t v169 = *(void **)(v168 + 48);
          *(void *)(v168 + 48) = v298;
          LOBYTE(v16sub_6C3C(v0 + 7) = *(_BYTE *)(v168 + 56);
          *(_BYTE *)(v168 + 56) = 3;
          swift_unknownObjectRetain(v306, v170);
          sub_88B98(v169, v167);
          type metadata accessor for ErrorFilingProvider(0LL);
          uint64_t v171 = static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000042LL,  0x800000000021E670LL,  0xD00000000000001FLL,  0x800000000021E6C0LL,  0xD00000000000001FLL,  0x800000000021E6C0LL);
          static ExecuteResponse.complete()(v171);

          swift_release(v224);
          swift_unknownObjectRelease(v306);

          swift_release(v164);
          sub_87F78(v265, 0);
          uint64_t v172 = v257;
          goto LABEL_36;
        }

        uint64_t v294 = v1 + 8;
        uint64_t v132 = v106(v1[116], v107, v108);
        uint64_t v133 = (os_log_s *)Logger.logObject.getter(v132);
        os_log_type_t v134 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v133, v134))
        {
          unint64_t v135 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v135 = 0;
          _os_log_impl( &dword_0,  v133,  v134,  "ExecuteMusicOnRemoteFlow#execute remote request is not waiting on user input. Will return .complete",  v135,  2u);
          swift_slowDealloc(v135, -1LL, -1LL);
        }

        uint64_t v136 = (void (*)(uint64_t, uint64_t))v1[134];
        uint64_t v137 = v1[116];
        uint64_t v138 = v1[111];
        uint64_t v139 = v1[83];
        uint64_t v140 = v1[82];
        uint64_t v141 = v1[81];
        uint64_t v142 = v1[80];
        uint64_t v215 = v1[79];
        uint64_t v222 = v1[78];
        uint64_t v143 = v1[77];
        uint64_t v232 = v1[76];
        uint64_t v240 = v1[72];
        uint64_t v263 = v1[68];
        uint64_t v271 = v1[64];
        uint64_t v249 = v1[75];
        uint64_t v256 = v1[62];

        v136(v137, v138);
        (*(void (**)(uint64_t, void, uint64_t))(v140 + 104))( v139,  enum case for AdditionalMetricsDescription.ModuleName.emorf(_:),  v141);
        (*(void (**)(uint64_t, void, uint64_t))(v215 + 104))( v142,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v222);
        (*(void (**)(uint64_t, void, uint64_t))(v232 + 104))( v143,  enum case for AdditionalMetricsDescription.StatusReason.unknown(_:),  v249);
        uint64_t v279 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v139,  v142,  v143,  0LL,  1LL);
        uint64_t v287 = v144;
        (*(void (**)(uint64_t, uint64_t))(v232 + 8))(v143, v249);
        (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v142, v222);
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v141);
        sub_157C4( v256 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider,  (uint64_t)v294);
        uint64_t v145 = v1[11];
        uint64_t v250 = v1[12];
        sub_6EA8(v294, v145);
        uint64_t v146 = enum case for ActivityType.completed(_:);
        uint64_t v147 = type metadata accessor for ActivityType(0LL);
        uint64_t v148 = *(void *)(v147 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 104))(v240, v146, v147);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v148 + 56))(v240, 0LL, 1LL, v147);
        uint64_t v149 = type metadata accessor for TemplatingResult(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 56LL))( v263,  1LL,  1LL,  v149);
        uint64_t v150 = enum case for SiriKitReliabilityCodes.success(_:);
        uint64_t v151 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v152 = *(void *)(v151 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 104))(v271, v150, v151);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v152 + 56))(v271, 0LL, 1LL, v151);
        if (v309)
        {
          uint64_t v153 = v301;
          uint64_t v154 = INPlayMediaIntent.firstMediaItemType()(v301);
        }

        else
        {
          uint64_t v154 = 0LL;
          uint64_t v153 = v301;
        }

        uint64_t v173 = v1[142];
        uint64_t v264 = (void *)v1[140];
        os_log_type_t v218 = (void *)v1[137];
        uint64_t v234 = (void *)v1[136];
        uint64_t v225 = v1[135];
        uint64_t v303 = v1[131];
        uint64_t v241 = v1[130];
        uint64_t v272 = v1[129];
        uint64_t v174 = v1[72];
        uint64_t v175 = v1[68];
        uint64_t v176 = v1[64];
        uint64_t v177 = v1[62];
        dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v173,  v309,  v174,  v175,  v176,  v279,  v287,  v154,  v309 == 0LL,  v145,  v250);
        swift_bridgeObjectRelease(v287);

        sub_1F6CC(v176, &qword_2845A0);
        sub_1F6CC(v175, (uint64_t *)&unk_286BD0);
        sub_1F6CC(v174, &qword_2845A8);
        sub_6C3C(v294);
        os_log_type_t v178 = *(void **)(v177 + 48);
        *(void *)(v177 + 48) = v298;
        LOBYTE(v174) = *(_BYTE *)(v177 + 56);
        *(_BYTE *)(v177 + 56) = 3;
        swift_unknownObjectRetain(v306, v179);
        sub_88B98(v178, v174);
        static ExecuteResponse.complete()(v180);

        swift_release(v225);
        swift_unknownObjectRelease(v306);

        uint64_t v163 = v173;
      }

      swift_release(v163);
      sub_87F78(v264, 0);
      uint64_t v172 = v241;
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v303, v272);
      goto LABEL_37;
    }

    swift_unknownObjectRelease(v46);
  }

  v307 = v1 + 23;
  uint64_t v73 = ((uint64_t (*)(void, void, void))v1[133])(v1[115], v1[132], v1[111]);
  uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
  os_log_type_t v75 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v74, v75))
  {
    os_log_type_t v76 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v76 = 0;
    _os_log_impl( &dword_0,  v74,  v75,  "ExecuteMusicOnRemoteFlow#execute response is not SAIntentGroupRunSiriKitExecutorCompleted.",  v76,  2u);
    swift_slowDealloc(v76, -1LL, -1LL);
  }

  BOOL v77 = (void (*)(uint64_t, uint64_t))v1[134];
  uint64_t v78 = v1[115];
  uint64_t v79 = v1[111];
  uint64_t v80 = v1[83];
  uint64_t v81 = v1[82];
  uint64_t v82 = v1[81];
  uint64_t v83 = v1[80];
  uint64_t v228 = v1[79];
  uint64_t v237 = v1[78];
  uint64_t v84 = v1[77];
  uint64_t v246 = v1[76];
  uint64_t v253 = v1[71];
  uint64_t v276 = v1[67];
  uint64_t v284 = v1[63];
  uint64_t v260 = v1[75];
  uint64_t v269 = v1[62];

  v77(v78, v79);
  (*(void (**)(uint64_t, void, uint64_t))(v81 + 104))( v80,  enum case for AdditionalMetricsDescription.ModuleName.emorf(_:),  v82);
  (*(void (**)(uint64_t, void, uint64_t))(v228 + 104))( v83,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v237);
  (*(void (**)(uint64_t, void, uint64_t))(v246 + 104))( v84,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v260);
  uint64_t v292 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v80, v83, v84, 0LL, 1LL);
  uint64_t v299 = v85;
  (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v84, v260);
  (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v83, v237);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
  sub_157C4( v269 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider,  (uint64_t)v307);
  uint64_t v86 = v1[26];
  uint64_t v261 = v1[27];
  sub_6EA8(v307, v86);
  uint64_t v87 = enum case for ActivityType.resolveSlotNeedsValue(_:);
  uint64_t v88 = type metadata accessor for ActivityType(0LL);
  uint64_t v89 = *(void *)(v88 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 104))(v253, v87, v88);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v253, 0LL, 1LL, v88);
  uint64_t v90 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56LL))(v276, 1LL, 1LL, v90);
  uint64_t v91 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v92 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v93 = *(void *)(v92 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 104))(v284, v91, v92);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v284, 0LL, 1LL, v92);
  if (v309)
  {
    uint64_t v94 = v301;
    uint64_t v95 = INPlayMediaIntent.firstMediaItemType()(v301);
  }

  else
  {
    uint64_t v95 = 0LL;
    uint64_t v94 = v301;
  }

  uint64_t v96 = v1[142];
  uint64_t v247 = (void *)v1[136];
  uint64_t v229 = (void *)v1[137];
  uint64_t v238 = v1[135];
  uint64_t v302 = v1[131];
  uint64_t v254 = v1[130];
  v277 = (void *)v1[140];
  uint64_t v285 = v1[129];
  uint64_t v97 = v1[71];
  uint64_t v98 = v1[67];
  uint64_t v100 = v1[62];
  uint64_t v99 = v1[63];
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v96,  v309,  v97,  v98,  v99,  v292,  v299,  v95,  v309 == 0LL,  v86,  v261);
  swift_bridgeObjectRelease(v299);

  sub_1F6CC(v99, &qword_2845A0);
  sub_1F6CC(v98, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v97, &qword_2845A8);
  sub_6C3C(v307);
  id v101 = [objc_allocWithZone(SAIntentGroupRunSiriKitExecutorCompleted) init];
  uint64_t v102 = *(void **)(v100 + 48);
  *(void *)(v100 + 48) = v101;
  char v103 = *(_BYTE *)(v100 + 56);
  *(_BYTE *)(v100 + 56) = 3;
  sub_88B98(v102, v103);
  static ExecuteResponse.complete()(v104);

  swift_release(v238);
  swift_release(v96);
  sub_87F78(v277, 0);
  (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v302, v285);
LABEL_37:
  uint64_t v181 = v1[128];
  uint64_t v182 = v1[127];
  uint64_t v183 = v1[126];
  uint64_t v184 = v1[125];
  uint64_t v185 = v1[124];
  uint64_t v186 = v1[123];
  uint64_t v187 = v1[122];
  uint64_t v188 = v1[121];
  uint64_t v189 = v1[120];
  uint64_t v191 = v1[119];
  uint64_t v192 = v1[118];
  uint64_t v193 = v1[117];
  uint64_t v194 = v1[116];
  uint64_t v195 = v1[115];
  uint64_t v196 = v1[114];
  uint64_t v197 = v1[113];
  uint64_t v198 = v1[110];
  uint64_t v199 = v1[109];
  uint64_t v200 = v1[108];
  uint64_t v201 = v1[105];
  uint64_t v202 = v1[104];
  uint64_t v203 = v1[101];
  uint64_t v204 = v1[100];
  uint64_t v205 = v1[99];
  uint64_t v206 = v1[98];
  uint64_t v207 = v1[97];
  uint64_t v208 = v1[96];
  uint64_t v209 = v1[95];
  uint64_t v210 = v1[92];
  uint64_t v211 = v1[89];
  uint64_t v212 = v1[86];
  uint64_t v219 = v1[83];
  uint64_t v226 = v1[80];
  uint64_t v235 = v1[77];
  uint64_t v243 = v1[74];
  uint64_t v251 = v1[73];
  uint64_t v258 = v1[72];
  uint64_t v266 = v1[71];
  uint64_t v273 = v1[70];
  uint64_t v280 = v1[69];
  uint64_t v288 = v1[68];
  uint64_t v295 = v1[67];
  uint64_t v300 = v1[66];
  uint64_t v304 = v1[65];
  uint64_t v308 = v1[64];
  uint64_t v310 = v1[63];
  swift_task_dealloc(v1[131]);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v187);
  swift_task_dealloc(v188);
  swift_task_dealloc(v189);
  swift_task_dealloc(v191);
  swift_task_dealloc(v192);
  swift_task_dealloc(v193);
  swift_task_dealloc(v194);
  swift_task_dealloc(v195);
  swift_task_dealloc(v196);
  swift_task_dealloc(v197);
  swift_task_dealloc(v198);
  swift_task_dealloc(v199);
  swift_task_dealloc(v200);
  swift_task_dealloc(v201);
  swift_task_dealloc(v202);
  swift_task_dealloc(v203);
  swift_task_dealloc(v204);
  swift_task_dealloc(v205);
  swift_task_dealloc(v206);
  swift_task_dealloc(v207);
  swift_task_dealloc(v208);
  swift_task_dealloc(v209);
  swift_task_dealloc(v210);
  swift_task_dealloc(v211);
  swift_task_dealloc(v212);
  swift_task_dealloc(v219);
  swift_task_dealloc(v226);
  swift_task_dealloc(v235);
  swift_task_dealloc(v243);
  swift_task_dealloc(v251);
  swift_task_dealloc(v258);
  swift_task_dealloc(v266);
  swift_task_dealloc(v273);
  swift_task_dealloc(v280);
  swift_task_dealloc(v288);
  swift_task_dealloc(v295);
  swift_task_dealloc(v300);
  swift_task_dealloc(v304);
  swift_task_dealloc(v308);
  swift_task_dealloc(v310);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_8C5E4()
{
  return swift_task_switch(sub_8C664, 0LL, 0LL);
}

uint64_t sub_8C664()
{
  uint64_t v64 = *(void *)(v0 + 880);
  uint64_t v1 = *(void *)(v0 + 856);
  uint64_t v2 = *(void *)(v0 + 848);
  uint64_t v3 = *(void *)(v0 + 832);
  uint64_t v4 = *(void *)(v0 + 824);
  uint64_t v5 = *(void *)(v0 + 816);
  uint64_t v6 = *(void *)(v0 + 808);
  uint64_t v7 = *(void *)(v0 + 776);
  uint64_t v8 = *(void *)(v0 + 752);
  uint64_t v9 = *(void *)(v0 + 744);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_1F6CC(v6, &qword_285BF0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v64, v2);
  uint64_t v11 = *(void **)(v0 + 1120);
  os_log_type_t v12 = *(void **)(v0 + 1096);
  uint64_t v13 = *(void **)(v0 + 1088);
  uint64_t v14 = *(void *)(v0 + 1080);
  uint64_t v15 = *(void *)(v0 + 1048);
  uint64_t v16 = *(void *)(v0 + 1040);
  uint64_t v17 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v10);

  swift_release(v14);
  sub_87F78(v11, 1);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v18 = *(void *)(v0 + 1024);
  uint64_t v19 = *(void *)(v0 + 1016);
  uint64_t v20 = *(void *)(v0 + 1008);
  uint64_t v21 = *(void *)(v0 + 1000);
  uint64_t v22 = *(void *)(v0 + 992);
  uint64_t v23 = *(void *)(v0 + 984);
  uint64_t v24 = *(void *)(v0 + 976);
  uint64_t v25 = *(void *)(v0 + 968);
  uint64_t v26 = *(void *)(v0 + 960);
  uint64_t v28 = *(void *)(v0 + 952);
  uint64_t v29 = *(void *)(v0 + 944);
  uint64_t v30 = *(void *)(v0 + 936);
  uint64_t v31 = *(void *)(v0 + 928);
  uint64_t v32 = *(void *)(v0 + 920);
  uint64_t v33 = *(void *)(v0 + 912);
  uint64_t v34 = *(void *)(v0 + 904);
  uint64_t v35 = *(void *)(v0 + 880);
  uint64_t v36 = *(void *)(v0 + 872);
  uint64_t v37 = *(void *)(v0 + 864);
  uint64_t v38 = *(void *)(v0 + 840);
  uint64_t v39 = *(void *)(v0 + 832);
  uint64_t v40 = *(void *)(v0 + 808);
  uint64_t v41 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 792);
  uint64_t v43 = *(void *)(v0 + 784);
  uint64_t v44 = *(void *)(v0 + 776);
  uint64_t v45 = *(void *)(v0 + 768);
  uint64_t v46 = *(void *)(v0 + 760);
  uint64_t v47 = *(void *)(v0 + 736);
  uint64_t v48 = *(void *)(v0 + 712);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 664);
  uint64_t v51 = *(void *)(v0 + 640);
  uint64_t v52 = *(void *)(v0 + 616);
  uint64_t v53 = *(void *)(v0 + 592);
  uint64_t v54 = *(void *)(v0 + 584);
  uint64_t v55 = *(void *)(v0 + 576);
  uint64_t v56 = *(void *)(v0 + 568);
  uint64_t v57 = *(void *)(v0 + 560);
  uint64_t v58 = *(void *)(v0 + 552);
  uint64_t v59 = *(void *)(v0 + 544);
  uint64_t v60 = *(void *)(v0 + 536);
  uint64_t v61 = *(void *)(v0 + 528);
  uint64_t v62 = *(void *)(v0 + 520);
  uint64_t v63 = *(void *)(v0 + 512);
  uint64_t v65 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8CA18()
{
  return swift_task_switch(sub_8CA98, 0LL, 0LL);
}

uint64_t sub_8CA98()
{
  uint64_t v64 = *(void *)(v0 + 880);
  uint64_t v1 = *(void *)(v0 + 856);
  uint64_t v2 = *(void *)(v0 + 848);
  uint64_t v3 = *(void *)(v0 + 832);
  uint64_t v4 = *(void *)(v0 + 824);
  uint64_t v5 = *(void *)(v0 + 816);
  uint64_t v6 = *(void *)(v0 + 808);
  uint64_t v7 = *(void *)(v0 + 768);
  uint64_t v8 = *(void *)(v0 + 752);
  uint64_t v9 = *(void *)(v0 + 744);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_1F6CC(v6, &qword_285BF0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v64, v2);
  uint64_t v11 = *(void **)(v0 + 1120);
  os_log_type_t v12 = *(void **)(v0 + 1096);
  uint64_t v13 = *(void **)(v0 + 1088);
  uint64_t v14 = *(void *)(v0 + 1080);
  uint64_t v15 = *(void *)(v0 + 1048);
  uint64_t v16 = *(void *)(v0 + 1040);
  uint64_t v17 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v10);

  swift_release(v14);
  sub_87F78(v11, 1);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v18 = *(void *)(v0 + 1024);
  uint64_t v19 = *(void *)(v0 + 1016);
  uint64_t v20 = *(void *)(v0 + 1008);
  uint64_t v21 = *(void *)(v0 + 1000);
  uint64_t v22 = *(void *)(v0 + 992);
  uint64_t v23 = *(void *)(v0 + 984);
  uint64_t v24 = *(void *)(v0 + 976);
  uint64_t v25 = *(void *)(v0 + 968);
  uint64_t v26 = *(void *)(v0 + 960);
  uint64_t v28 = *(void *)(v0 + 952);
  uint64_t v29 = *(void *)(v0 + 944);
  uint64_t v30 = *(void *)(v0 + 936);
  uint64_t v31 = *(void *)(v0 + 928);
  uint64_t v32 = *(void *)(v0 + 920);
  uint64_t v33 = *(void *)(v0 + 912);
  uint64_t v34 = *(void *)(v0 + 904);
  uint64_t v35 = *(void *)(v0 + 880);
  uint64_t v36 = *(void *)(v0 + 872);
  uint64_t v37 = *(void *)(v0 + 864);
  uint64_t v38 = *(void *)(v0 + 840);
  uint64_t v39 = *(void *)(v0 + 832);
  uint64_t v40 = *(void *)(v0 + 808);
  uint64_t v41 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 792);
  uint64_t v43 = *(void *)(v0 + 784);
  uint64_t v44 = *(void *)(v0 + 776);
  uint64_t v45 = *(void *)(v0 + 768);
  uint64_t v46 = *(void *)(v0 + 760);
  uint64_t v47 = *(void *)(v0 + 736);
  uint64_t v48 = *(void *)(v0 + 712);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 664);
  uint64_t v51 = *(void *)(v0 + 640);
  uint64_t v52 = *(void *)(v0 + 616);
  uint64_t v53 = *(void *)(v0 + 592);
  uint64_t v54 = *(void *)(v0 + 584);
  uint64_t v55 = *(void *)(v0 + 576);
  uint64_t v56 = *(void *)(v0 + 568);
  uint64_t v57 = *(void *)(v0 + 560);
  uint64_t v58 = *(void *)(v0 + 552);
  uint64_t v59 = *(void *)(v0 + 544);
  uint64_t v60 = *(void *)(v0 + 536);
  uint64_t v61 = *(void *)(v0 + 528);
  uint64_t v62 = *(void *)(v0 + 520);
  uint64_t v63 = *(void *)(v0 + 512);
  uint64_t v65 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8CE4C()
{
  return swift_task_switch(sub_8CECC, 0LL, 0LL);
}

uint64_t sub_8CECC()
{
  uint64_t v64 = *(void *)(v0 + 880);
  uint64_t v1 = *(void *)(v0 + 856);
  uint64_t v2 = *(void *)(v0 + 848);
  uint64_t v3 = *(void *)(v0 + 832);
  uint64_t v4 = *(void *)(v0 + 824);
  uint64_t v5 = *(void *)(v0 + 816);
  uint64_t v6 = *(void *)(v0 + 808);
  uint64_t v7 = *(void *)(v0 + 760);
  uint64_t v8 = *(void *)(v0 + 752);
  uint64_t v9 = *(void *)(v0 + 744);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_1F6CC(v6, &qword_285BF0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v64, v2);
  uint64_t v11 = *(void **)(v0 + 1120);
  os_log_type_t v12 = *(void **)(v0 + 1096);
  uint64_t v13 = *(void **)(v0 + 1088);
  uint64_t v14 = *(void *)(v0 + 1080);
  uint64_t v15 = *(void *)(v0 + 1048);
  uint64_t v16 = *(void *)(v0 + 1040);
  uint64_t v17 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v10);

  swift_release(v14);
  sub_87F78(v11, 1);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v18 = *(void *)(v0 + 1024);
  uint64_t v19 = *(void *)(v0 + 1016);
  uint64_t v20 = *(void *)(v0 + 1008);
  uint64_t v21 = *(void *)(v0 + 1000);
  uint64_t v22 = *(void *)(v0 + 992);
  uint64_t v23 = *(void *)(v0 + 984);
  uint64_t v24 = *(void *)(v0 + 976);
  uint64_t v25 = *(void *)(v0 + 968);
  uint64_t v26 = *(void *)(v0 + 960);
  uint64_t v28 = *(void *)(v0 + 952);
  uint64_t v29 = *(void *)(v0 + 944);
  uint64_t v30 = *(void *)(v0 + 936);
  uint64_t v31 = *(void *)(v0 + 928);
  uint64_t v32 = *(void *)(v0 + 920);
  uint64_t v33 = *(void *)(v0 + 912);
  uint64_t v34 = *(void *)(v0 + 904);
  uint64_t v35 = *(void *)(v0 + 880);
  uint64_t v36 = *(void *)(v0 + 872);
  uint64_t v37 = *(void *)(v0 + 864);
  uint64_t v38 = *(void *)(v0 + 840);
  uint64_t v39 = *(void *)(v0 + 832);
  uint64_t v40 = *(void *)(v0 + 808);
  uint64_t v41 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 792);
  uint64_t v43 = *(void *)(v0 + 784);
  uint64_t v44 = *(void *)(v0 + 776);
  uint64_t v45 = *(void *)(v0 + 768);
  uint64_t v46 = *(void *)(v0 + 760);
  uint64_t v47 = *(void *)(v0 + 736);
  uint64_t v48 = *(void *)(v0 + 712);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 664);
  uint64_t v51 = *(void *)(v0 + 640);
  uint64_t v52 = *(void *)(v0 + 616);
  uint64_t v53 = *(void *)(v0 + 592);
  uint64_t v54 = *(void *)(v0 + 584);
  uint64_t v55 = *(void *)(v0 + 576);
  uint64_t v56 = *(void *)(v0 + 568);
  uint64_t v57 = *(void *)(v0 + 560);
  uint64_t v58 = *(void *)(v0 + 552);
  uint64_t v59 = *(void *)(v0 + 544);
  uint64_t v60 = *(void *)(v0 + 536);
  uint64_t v61 = *(void *)(v0 + 528);
  uint64_t v62 = *(void *)(v0 + 520);
  uint64_t v63 = *(void *)(v0 + 512);
  uint64_t v65 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8D280()
{
  return swift_task_switch(sub_8D300, 0LL, 0LL);
}

uint64_t sub_8D300()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v3 = *(void *)(v0 + 848);
  uint64_t v4 = *(void *)(v0 + 832);
  uint64_t v5 = *(void *)(v0 + 824);
  uint64_t v6 = *(void *)(v0 + 816);
  uint64_t v7 = *(void *)(v0 + 808);

  sub_1F6CC(v7, &qword_285BF0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v9 = *(void **)(v0 + 1120);
  uint64_t v10 = *(void **)(v0 + 1096);
  uint64_t v11 = *(void **)(v0 + 1088);
  uint64_t v12 = *(void *)(v0 + 1080);
  uint64_t v13 = *(void *)(v0 + 1048);
  uint64_t v14 = *(void *)(v0 + 1040);
  uint64_t v15 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v8);

  swift_release(v12);
  sub_87F78(v9, 1);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v16 = *(void *)(v0 + 1024);
  uint64_t v17 = *(void *)(v0 + 1016);
  uint64_t v18 = *(void *)(v0 + 1008);
  uint64_t v19 = *(void *)(v0 + 1000);
  uint64_t v20 = *(void *)(v0 + 992);
  uint64_t v21 = *(void *)(v0 + 984);
  uint64_t v22 = *(void *)(v0 + 976);
  uint64_t v23 = *(void *)(v0 + 968);
  uint64_t v24 = *(void *)(v0 + 960);
  uint64_t v26 = *(void *)(v0 + 952);
  uint64_t v27 = *(void *)(v0 + 944);
  uint64_t v28 = *(void *)(v0 + 936);
  uint64_t v29 = *(void *)(v0 + 928);
  uint64_t v30 = *(void *)(v0 + 920);
  uint64_t v31 = *(void *)(v0 + 912);
  uint64_t v32 = *(void *)(v0 + 904);
  uint64_t v33 = *(void *)(v0 + 880);
  uint64_t v34 = *(void *)(v0 + 872);
  uint64_t v35 = *(void *)(v0 + 864);
  uint64_t v36 = *(void *)(v0 + 840);
  uint64_t v37 = *(void *)(v0 + 832);
  uint64_t v38 = *(void *)(v0 + 808);
  uint64_t v39 = *(void *)(v0 + 800);
  uint64_t v40 = *(void *)(v0 + 792);
  uint64_t v41 = *(void *)(v0 + 784);
  uint64_t v42 = *(void *)(v0 + 776);
  uint64_t v43 = *(void *)(v0 + 768);
  uint64_t v44 = *(void *)(v0 + 760);
  uint64_t v45 = *(void *)(v0 + 736);
  uint64_t v46 = *(void *)(v0 + 712);
  uint64_t v47 = *(void *)(v0 + 688);
  uint64_t v48 = *(void *)(v0 + 664);
  uint64_t v49 = *(void *)(v0 + 640);
  uint64_t v50 = *(void *)(v0 + 616);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  uint64_t v53 = *(void *)(v0 + 576);
  uint64_t v54 = *(void *)(v0 + 568);
  uint64_t v55 = *(void *)(v0 + 560);
  uint64_t v56 = *(void *)(v0 + 552);
  uint64_t v57 = *(void *)(v0 + 544);
  uint64_t v58 = *(void *)(v0 + 536);
  uint64_t v59 = *(void *)(v0 + 528);
  uint64_t v60 = *(void *)(v0 + 520);
  uint64_t v61 = *(void *)(v0 + 512);
  uint64_t v62 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8D694()
{
  return swift_task_switch(sub_8D714, 0LL, 0LL);
}

uint64_t sub_8D714()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v3 = *(void *)(v0 + 848);
  uint64_t v4 = *(void *)(v0 + 832);
  uint64_t v5 = *(void *)(v0 + 824);
  uint64_t v6 = *(void *)(v0 + 816);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v8 = *(void **)(v0 + 1120);
  uint64_t v9 = *(void **)(v0 + 1096);
  uint64_t v10 = *(void **)(v0 + 1088);
  uint64_t v11 = *(void *)(v0 + 1080);
  uint64_t v12 = *(void *)(v0 + 1048);
  uint64_t v13 = *(void *)(v0 + 1040);
  uint64_t v14 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v7);

  swift_release(v11);
  sub_87F78(v8, 1);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v15 = *(void *)(v0 + 1024);
  uint64_t v16 = *(void *)(v0 + 1016);
  uint64_t v17 = *(void *)(v0 + 1008);
  uint64_t v18 = *(void *)(v0 + 1000);
  uint64_t v19 = *(void *)(v0 + 992);
  uint64_t v20 = *(void *)(v0 + 984);
  uint64_t v21 = *(void *)(v0 + 976);
  uint64_t v22 = *(void *)(v0 + 968);
  uint64_t v23 = *(void *)(v0 + 960);
  uint64_t v25 = *(void *)(v0 + 952);
  uint64_t v26 = *(void *)(v0 + 944);
  uint64_t v27 = *(void *)(v0 + 936);
  uint64_t v28 = *(void *)(v0 + 928);
  uint64_t v29 = *(void *)(v0 + 920);
  uint64_t v30 = *(void *)(v0 + 912);
  uint64_t v31 = *(void *)(v0 + 904);
  uint64_t v32 = *(void *)(v0 + 880);
  uint64_t v33 = *(void *)(v0 + 872);
  uint64_t v34 = *(void *)(v0 + 864);
  uint64_t v35 = *(void *)(v0 + 840);
  uint64_t v36 = *(void *)(v0 + 832);
  uint64_t v37 = *(void *)(v0 + 808);
  uint64_t v38 = *(void *)(v0 + 800);
  uint64_t v39 = *(void *)(v0 + 792);
  uint64_t v40 = *(void *)(v0 + 784);
  uint64_t v41 = *(void *)(v0 + 776);
  uint64_t v42 = *(void *)(v0 + 768);
  uint64_t v43 = *(void *)(v0 + 760);
  uint64_t v44 = *(void *)(v0 + 736);
  uint64_t v45 = *(void *)(v0 + 712);
  uint64_t v46 = *(void *)(v0 + 688);
  uint64_t v47 = *(void *)(v0 + 664);
  uint64_t v48 = *(void *)(v0 + 640);
  uint64_t v49 = *(void *)(v0 + 616);
  uint64_t v50 = *(void *)(v0 + 592);
  uint64_t v51 = *(void *)(v0 + 584);
  uint64_t v52 = *(void *)(v0 + 576);
  uint64_t v53 = *(void *)(v0 + 568);
  uint64_t v54 = *(void *)(v0 + 560);
  uint64_t v55 = *(void *)(v0 + 552);
  uint64_t v56 = *(void *)(v0 + 544);
  uint64_t v57 = *(void *)(v0 + 536);
  uint64_t v58 = *(void *)(v0 + 528);
  uint64_t v59 = *(void *)(v0 + 520);
  uint64_t v60 = *(void *)(v0 + 512);
  uint64_t v61 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8DA94()
{
  return swift_task_switch(sub_8DB14, 0LL, 0LL);
}

uint64_t sub_8DB14()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1200);
  uint64_t v2 = *(void *)(v0 + 872);
  uint64_t v3 = *(void *)(v0 + 848);
  v1(*(void *)(v0 + 880), v3);
  uint64_t v4 = v1(v2, v3);
  uint64_t v5 = *(void **)(v0 + 1120);
  uint64_t v6 = *(void **)(v0 + 1096);
  uint64_t v7 = *(void **)(v0 + 1088);
  uint64_t v8 = *(void *)(v0 + 1080);
  uint64_t v9 = *(void *)(v0 + 1048);
  uint64_t v10 = *(void *)(v0 + 1040);
  uint64_t v11 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v4);

  swift_release(v8);
  sub_87F78(v5, 1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v12 = *(void *)(v0 + 1024);
  uint64_t v13 = *(void *)(v0 + 1016);
  uint64_t v14 = *(void *)(v0 + 1008);
  uint64_t v15 = *(void *)(v0 + 1000);
  uint64_t v16 = *(void *)(v0 + 992);
  uint64_t v17 = *(void *)(v0 + 984);
  uint64_t v18 = *(void *)(v0 + 976);
  uint64_t v19 = *(void *)(v0 + 968);
  uint64_t v20 = *(void *)(v0 + 960);
  uint64_t v22 = *(void *)(v0 + 952);
  uint64_t v23 = *(void *)(v0 + 944);
  uint64_t v24 = *(void *)(v0 + 936);
  uint64_t v25 = *(void *)(v0 + 928);
  uint64_t v26 = *(void *)(v0 + 920);
  uint64_t v27 = *(void *)(v0 + 912);
  uint64_t v28 = *(void *)(v0 + 904);
  uint64_t v29 = *(void *)(v0 + 880);
  uint64_t v30 = *(void *)(v0 + 872);
  uint64_t v31 = *(void *)(v0 + 864);
  uint64_t v32 = *(void *)(v0 + 840);
  uint64_t v33 = *(void *)(v0 + 832);
  uint64_t v34 = *(void *)(v0 + 808);
  uint64_t v35 = *(void *)(v0 + 800);
  uint64_t v36 = *(void *)(v0 + 792);
  uint64_t v37 = *(void *)(v0 + 784);
  uint64_t v38 = *(void *)(v0 + 776);
  uint64_t v39 = *(void *)(v0 + 768);
  uint64_t v40 = *(void *)(v0 + 760);
  uint64_t v41 = *(void *)(v0 + 736);
  uint64_t v42 = *(void *)(v0 + 712);
  uint64_t v43 = *(void *)(v0 + 688);
  uint64_t v44 = *(void *)(v0 + 664);
  uint64_t v45 = *(void *)(v0 + 640);
  uint64_t v46 = *(void *)(v0 + 616);
  uint64_t v47 = *(void *)(v0 + 592);
  uint64_t v48 = *(void *)(v0 + 584);
  uint64_t v49 = *(void *)(v0 + 576);
  uint64_t v50 = *(void *)(v0 + 568);
  uint64_t v51 = *(void *)(v0 + 560);
  uint64_t v52 = *(void *)(v0 + 552);
  uint64_t v53 = *(void *)(v0 + 544);
  uint64_t v54 = *(void *)(v0 + 536);
  uint64_t v55 = *(void *)(v0 + 528);
  uint64_t v56 = *(void *)(v0 + 520);
  uint64_t v57 = *(void *)(v0 + 512);
  uint64_t v58 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8DE78()
{
  return swift_task_switch(sub_8DEF8, 0LL, 0LL);
}

uint64_t sub_8DEF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 1120);
  uint64_t v3 = *(void **)(v1 + 1096);
  uint64_t v4 = *(void **)(v1 + 1088);
  uint64_t v5 = *(void *)(v1 + 1080);
  uint64_t v6 = *(void *)(v1 + 1048);
  uint64_t v7 = *(void *)(v1 + 1040);
  uint64_t v8 = *(void *)(v1 + 1032);
  static ExecuteResponse.complete()(a1);

  swift_release(v5);
  sub_87F78(v2, 1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v9 = *(void *)(v1 + 1024);
  uint64_t v10 = *(void *)(v1 + 1016);
  uint64_t v11 = *(void *)(v1 + 1008);
  uint64_t v12 = *(void *)(v1 + 1000);
  uint64_t v13 = *(void *)(v1 + 992);
  uint64_t v14 = *(void *)(v1 + 984);
  uint64_t v15 = *(void *)(v1 + 976);
  uint64_t v16 = *(void *)(v1 + 968);
  uint64_t v17 = *(void *)(v1 + 960);
  uint64_t v19 = *(void *)(v1 + 952);
  uint64_t v20 = *(void *)(v1 + 944);
  uint64_t v21 = *(void *)(v1 + 936);
  uint64_t v22 = *(void *)(v1 + 928);
  uint64_t v23 = *(void *)(v1 + 920);
  uint64_t v24 = *(void *)(v1 + 912);
  uint64_t v25 = *(void *)(v1 + 904);
  uint64_t v26 = *(void *)(v1 + 880);
  uint64_t v27 = *(void *)(v1 + 872);
  uint64_t v28 = *(void *)(v1 + 864);
  uint64_t v29 = *(void *)(v1 + 840);
  uint64_t v30 = *(void *)(v1 + 832);
  uint64_t v31 = *(void *)(v1 + 808);
  uint64_t v32 = *(void *)(v1 + 800);
  uint64_t v33 = *(void *)(v1 + 792);
  uint64_t v34 = *(void *)(v1 + 784);
  uint64_t v35 = *(void *)(v1 + 776);
  uint64_t v36 = *(void *)(v1 + 768);
  uint64_t v37 = *(void *)(v1 + 760);
  uint64_t v38 = *(void *)(v1 + 736);
  uint64_t v39 = *(void *)(v1 + 712);
  uint64_t v40 = *(void *)(v1 + 688);
  uint64_t v41 = *(void *)(v1 + 664);
  uint64_t v42 = *(void *)(v1 + 640);
  uint64_t v43 = *(void *)(v1 + 616);
  uint64_t v44 = *(void *)(v1 + 592);
  uint64_t v45 = *(void *)(v1 + 584);
  uint64_t v46 = *(void *)(v1 + 576);
  uint64_t v47 = *(void *)(v1 + 568);
  uint64_t v48 = *(void *)(v1 + 560);
  uint64_t v49 = *(void *)(v1 + 552);
  uint64_t v50 = *(void *)(v1 + 544);
  uint64_t v51 = *(void *)(v1 + 536);
  uint64_t v52 = *(void *)(v1 + 528);
  uint64_t v53 = *(void *)(v1 + 520);
  uint64_t v54 = *(void *)(v1 + 512);
  uint64_t v55 = *(void *)(v1 + 504);
  swift_task_dealloc(*(void *)(v1 + 1048));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_8E238()
{
  return swift_task_switch(sub_8E2B8, 0LL, 0LL);
}

uint64_t sub_8E2B8()
{
  uint64_t v1 = *(void **)(v0 + 1144);
  uint64_t v2 = *(void *)(v0 + 880);
  uint64_t v3 = *(void *)(v0 + 856);
  uint64_t v4 = *(void *)(v0 + 848);
  uint64_t v5 = *(void *)(v0 + 832);
  uint64_t v6 = *(void *)(v0 + 824);
  uint64_t v7 = *(void *)(v0 + 816);
  swift_errorRelease(*(void *)(v0 + 1152));

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v9 = *(void **)(v0 + 1120);
  uint64_t v10 = *(void **)(v0 + 1096);
  uint64_t v11 = *(void **)(v0 + 1088);
  uint64_t v12 = *(void *)(v0 + 1080);
  uint64_t v13 = *(void *)(v0 + 1048);
  uint64_t v14 = *(void *)(v0 + 1040);
  uint64_t v15 = *(void *)(v0 + 1032);
  static ExecuteResponse.complete()(v8);

  swift_release(v12);
  sub_87F78(v9, 1);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v16 = *(void *)(v0 + 1024);
  uint64_t v17 = *(void *)(v0 + 1016);
  uint64_t v18 = *(void *)(v0 + 1008);
  uint64_t v19 = *(void *)(v0 + 1000);
  uint64_t v20 = *(void *)(v0 + 992);
  uint64_t v21 = *(void *)(v0 + 984);
  uint64_t v22 = *(void *)(v0 + 976);
  uint64_t v23 = *(void *)(v0 + 968);
  uint64_t v24 = *(void *)(v0 + 960);
  uint64_t v26 = *(void *)(v0 + 952);
  uint64_t v27 = *(void *)(v0 + 944);
  uint64_t v28 = *(void *)(v0 + 936);
  uint64_t v29 = *(void *)(v0 + 928);
  uint64_t v30 = *(void *)(v0 + 920);
  uint64_t v31 = *(void *)(v0 + 912);
  uint64_t v32 = *(void *)(v0 + 904);
  uint64_t v33 = *(void *)(v0 + 880);
  uint64_t v34 = *(void *)(v0 + 872);
  uint64_t v35 = *(void *)(v0 + 864);
  uint64_t v36 = *(void *)(v0 + 840);
  uint64_t v37 = *(void *)(v0 + 832);
  uint64_t v38 = *(void *)(v0 + 808);
  uint64_t v39 = *(void *)(v0 + 800);
  uint64_t v40 = *(void *)(v0 + 792);
  uint64_t v41 = *(void *)(v0 + 784);
  uint64_t v42 = *(void *)(v0 + 776);
  uint64_t v43 = *(void *)(v0 + 768);
  uint64_t v44 = *(void *)(v0 + 760);
  uint64_t v45 = *(void *)(v0 + 736);
  uint64_t v46 = *(void *)(v0 + 712);
  uint64_t v47 = *(void *)(v0 + 688);
  uint64_t v48 = *(void *)(v0 + 664);
  uint64_t v49 = *(void *)(v0 + 640);
  uint64_t v50 = *(void *)(v0 + 616);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  uint64_t v53 = *(void *)(v0 + 576);
  uint64_t v54 = *(void *)(v0 + 568);
  uint64_t v55 = *(void *)(v0 + 560);
  uint64_t v56 = *(void *)(v0 + 552);
  uint64_t v57 = *(void *)(v0 + 544);
  uint64_t v58 = *(void *)(v0 + 536);
  uint64_t v59 = *(void *)(v0 + 528);
  uint64_t v60 = *(void *)(v0 + 520);
  uint64_t v61 = *(void *)(v0 + 512);
  uint64_t v62 = *(void *)(v0 + 504);
  swift_task_dealloc(*(void *)(v0 + 1048));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_8E65C, 0LL, 0LL);
}

uint64_t sub_8E65C()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[11];
  uint64_t v2 = v1[12];
  sub_6EA8(v1 + 8, v3);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to AceServiceInvokerAsync.submit<A>(_:)[1]);
  v0[5] = v4;
  uint64_t v5 = sub_1641C(0LL, &qword_285C28, &OBJC_CLASS___SAExecuteOnRemoteResponse_ptr);
  *uint64_t v4 = v0;
  v4[1] = sub_8E6F4;
  return AceServiceInvokerAsync.submit<A>(_:)(v0[4], v3, v5, v2);
}

uint64_t sub_8E6F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 40);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (v1) {
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  *(void *)(v4 + 48) = a1;
  return swift_task_switch(sub_8E770, 0LL, 0LL);
}

uint64_t sub_8E770()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_8E788(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease(a2);
    return 0LL;
  }

  if ((a2 & 0x1000000000000000LL) == 0)
  {
    if ((a2 & 0x2000000000000000LL) == 0)
    {
      if ((result & 0x1000000000000000LL) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, a2);
      }
      uint64_t v7 = (uint64_t)sub_91530(v6, v4, 10LL);
      char v9 = v8 & 1;
      goto LABEL_37;
    }

    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          uint64_t v7 = v17 + v16;
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }

    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                uint64_t v7 = v13 - v12;
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }

            goto LABEL_36;
          }

id ExecuteMusicOnRemoteFlow.makeExecuteOnRemoteRequest(input:targetDeviceId:currentRequest:)( uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v89 = a3;
  id v82 = a2;
  uint64_t v8 = type metadata accessor for MultiUserContext(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for MultiUserState(0LL);
  __chkstk_darwin(v11);
  uint64_t v86 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = type metadata accessor for ResponseMode(0LL);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = type metadata accessor for Logger(0LL);
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v14 = __chkstk_darwin(v93);
  __chkstk_darwin(v14);
  uint64_t v91 = (char *)&v80 - v15;
  uint64_t v16 = type metadata accessor for PropertyListEncoder(0LL);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v17 = PropertyListEncoder.init()();
  uint64_t v18 = type metadata accessor for Input(0LL);
  uint64_t v19 = sub_10430( &qword_285C70,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
  uint64_t v20 = dispatch thunk of PropertyListEncoder.encode<A>(_:)(a1, v18, v19);
  unint64_t v22 = v21;
  uint64_t v23 = v5[3];
  id v24 = objc_allocWithZone(&OBJC_CLASS___SKIDirectInvocationPayload);
  swift_bridgeObjectRetain(v23);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  id v26 = [v24 initWithIdentifier:v25];

  uint64_t v27 = sub_6C5C(&qword_285C78);
  uint64_t inited = swift_initStackObject(v27, v99);
  *(_OWORD *)(inited + 16) = xmmword_214510;
  uint64_t v29 = v5[5];
  uint64_t v96 = v5[4];
  uint64_t v97 = v29;
  swift_bridgeObjectRetain(v29);
  AnyHashable.init<A>(_:)(&v96, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 96) = &type metadata for Data;
  *(void *)(inited + 72) = v20;
  *(void *)(inited + 80) = v22;
  uint64_t v88 = v20;
  sub_92560(v20, v22);
  unint64_t v30 = sub_75538(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  [v26 setUserData:isa];

  uint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___SKIDirectInvocation);
  uint64_t v33 = (void *)static SiriAudioEnvironment.directInvocationContext.getter();
  id v87 = v26;
  id v94 = [v32 runSiriKitExecutorCommandWithContext:v33 payload:v26];

  id v34 = [objc_allocWithZone(SAIntentGroupSiriKitRemoteExecution) init];
  NSString v35 = String._bridgeToObjectiveC()();
  [v34 setExecutionDeviceAssistantId:v35];

  CurrentRequest.currentDeviceAssistantId.getter();
  uint64_t v37 = v36;
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  [v34 setInvocationDeviceAssistantId:v38];

  [v34 setRunLocation:SAIntentGroupSiriKitRunLocationExecutionDeviceValue];
  id v39 = v34;
  CurrentRequest.refId.getter();
  if (v40)
  {
    uint64_t v41 = v40;
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41);
  }

  else
  {
    NSString v42 = 0LL;
  }

  uint64_t v43 = v93;
  uint64_t v44 = v92;
  uint64_t v45 = v91;
  unint64_t v89 = v22;
  [v39 setRefId:v42];

  id v82 = v39;
  [v94 setRemoteExecution:v39];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v46 = sub_6960(v43, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v45, v46, v43);
  uint64_t v47 = swift_retain_n(a4, 2LL);
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  BOOL v50 = os_log_type_enabled(v48, v49);
  uint64_t v90 = v17;
  if (v50)
  {
    uint64_t v51 = swift_slowAlloc(12LL, -1LL);
    uint64_t v80 = v9;
    uint64_t v52 = (uint8_t *)v51;
    uint64_t v53 = v8;
    uint64_t v54 = swift_slowAlloc(32LL, -1LL);
    uint64_t v95 = v54;
    *(_DWORD *)uint64_t v52 = 136315138;
    uint64_t v96 = CurrentRequest.refId.getter();
    uint64_t v97 = v55;
    uint64_t v56 = sub_6C5C(&qword_284600);
    uint64_t v57 = String.init<A>(describing:)(&v96, v56);
    unint64_t v59 = v58;
    uint64_t v96 = sub_6978(v57, v58, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97);
    swift_release_n(a4, 2LL);
    swift_bridgeObjectRelease(v59);
    _os_log_impl(&dword_0, v48, v49, "Setting refID for RSKE to %s", v52, 0xCu);
    swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v60 = v54;
    uint64_t v8 = v53;
    swift_slowDealloc(v60, -1LL, -1LL);
    uint64_t v61 = v52;
    uint64_t v9 = v80;
    swift_slowDealloc(v61, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
  }

  else
  {

    swift_release_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
  }

  id v62 = v94;
  CurrentRequest.refId.getter();
  unint64_t v64 = v89;
  uint64_t v65 = v82;
  if (v63)
  {
    uint64_t v66 = v63;
    NSString v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v66);
  }

  else
  {
    NSString v67 = 0LL;
  }

  [v62 setRefId:v67];

  uint64_t v68 = v83;
  uint64_t v70 = CurrentRequest.responseMode.getter(v69);
  ResponseMode.aceValue.getter(v70);
  uint64_t v72 = v71;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v68, v85);
  NSString v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v72);
  [v62 setMode:v73];

  uint64_t v74 = v86;
  CurrentRequest.multiUserState.getter(v75);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v74, 1LL, v8) == 1)
  {
    [v62 setMultiUser:0];
    sub_925A4(v88, v64);
    swift_release(v90);
  }

  else
  {
    os_log_type_t v76 = v81;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v81, v74, v8);
    MultiUserContext.meCardProxy.getter(&v96, [v62 setMultiUser:1]);
    BOOL v77 = v98;
    if (v98)
    {
      sub_6EA8(&v96, (uint64_t)v98);
      BOOL v77 = (void *)MeCardProxy.fetchMeCard()();
      if (v77)
      {
        sub_1641C(0LL, &qword_285C88, &OBJC_CLASS___SAPerson_ptr);
        BOOL v77 = (void *)SAPerson.init(contact:)(v77);
      }

      uint64_t v78 = v88;
      sub_6C3C(&v96);
    }

    else
    {
      sub_1F6CC((uint64_t)&v96, &qword_285C80);
      uint64_t v78 = v88;
    }

    [v62 setIdentifiedUserMeCard:v77];

    [v62 setRequiresConditionalMultiUserGrounding:MultiUserContext.requiresUserGrounding.getter() & 1];
    swift_release(v90);

    sub_925A4(v78, v64);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v76, v8);
  }

  return v62;
}

uint64_t sub_8F3E0()
{
  v1[25] = v0;
  uint64_t v2 = sub_6C5C(&qword_285EA0);
  v1[26] = v2;
  unint64_t v3 = (*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[27] = swift_task_alloc(v3);
  v1[28] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for Parse(0LL);
  v1[29] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[30] = v5;
  v1[31] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_285BD0);
  v1[32] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Input(0LL);
  v1[33] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v1[34] = v8;
  v1[35] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_8F4C4, 0LL, 0LL);
}

uint64_t sub_8F4C4()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 200) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_inputToExecute;
  swift_beginAccess(v4, v0 + 176, 0LL, 0LL);
  sub_FF10(v4, v3, &qword_285BD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_1F6CC(*(void *)(v0 + 256), &qword_285BD0);
  }

  else
  {
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v8 = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 272) + 32LL))( *(void *)(v0 + 280),  *(void *)(v0 + 256),  *(void *)(v0 + 264));
    uint64_t v9 = Input.parse.getter(v8);
    uint64_t v10 = Parse.playMediaIntent.getter(v9);
    *(void *)(v0 + 288) = v10;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 224);
      uint64_t v12 = *(int *)(*(void *)(v0 + 208) + 48LL);
      *(_DWORD *)(v0 + 320) = v12;
      uint64_t v13 = v11 + v12;
      *(_OWORD *)(v0 + 32) = 0u;
      *(void *)(v0 + 48) = 0LL;
      *(_OWORD *)(v0 + 16) = 0u;
      *(void *)(v0 + 80) = type metadata accessor for UserPreferenceProvider(0LL);
      *(void *)(v0 + 88) = &protocol witness table for UserPreferenceProvider;
      uint64_t v14 = sub_10974((void *)(v0 + 56));
      static UserPreferenceProvider.shared.getter(v14);
      *(void *)(v0 + 120) = type metadata accessor for DeviceProvider(0LL);
      *(void *)(v0 + 128) = &protocol witness table for DeviceProvider;
      uint64_t v15 = sub_10974((void *)(v0 + 96));
      static DeviceProvider.shared.getter(v15);
      *(void *)(v0 + 160) = type metadata accessor for FeatureFlagProvider(0LL);
      *(void *)(v0 + 168) = &protocol witness table for FeatureFlagProvider;
      uint64_t v16 = sub_10974((void *)(v0 + 136));
      static FeatureFlagProvider.shared.getter(v16);
      uint64_t v17 = (void *)swift_task_alloc(async function pointer to INIntent.targetBundleIdentifier(userPreferenceProvider:deviceProvider:featureFlagProvider:internalSearchResults:alwaysInferAppFromSearchResults:nowPlaying:)[1]);
      *(void *)(v0 + 296) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_8F6F4;
      return INIntent.targetBundleIdentifier(userPreferenceProvider:deviceProvider:featureFlagProvider:internalSearchResults:alwaysInferAppFromSearchResults:nowPlaying:)( v13,  v0 + 56,  v0 + 96,  v0 + 136,  0LL,  0LL,  v0 + 16);
    }

    (*(void (**)(void, void))(*(void *)(v0 + 272) + 8LL))(*(void *)(v0 + 280), *(void *)(v0 + 264));
  }

  uint64_t v19 = *(void *)(v0 + 248);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v21 = *(void *)(v0 + 224);
  swift_task_dealloc(*(void *)(v0 + 280));
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

uint64_t sub_8F6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  uint64_t v5 = (void *)(*v2 + 56);
  uint64_t v6 = (void *)(*v2 + 96);
  uint64_t v7 = (void *)(*v2 + 136);
  uint64_t v8 = *(void *)(*v2 + 296);
  *(void *)(v3 + 304) = a1;
  *(void *)(v3 + 3sub_6C3C(v0 + 12) = a2;
  swift_task_dealloc(v8);
  sub_6C3C(v7);
  sub_6C3C(v6);
  sub_6C3C(v5);
  sub_1F6CC(v4, &qword_285EA8);
  return swift_task_switch(sub_8F790, 0LL, 0LL);
}

uint64_t sub_8F790()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void **)(v0 + 288);
  uint64_t v17 = *(void *)(v0 + 272);
  uint64_t v18 = *(void *)(v0 + 264);
  uint64_t v19 = *(void *)(v0 + 280);
  uint64_t v5 = *(void **)(v0 + 216);
  uint64_t v4 = *(void **)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v7 = (char *)v4 + *(int *)(v0 + 320);
  *uint64_t v4 = v1;
  v4[1] = v2;
  type metadata accessor for App(0LL);
  uint64_t v8 = (char *)v5 + *(int *)(v6 + 48);
  *uint64_t v5 = v1;
  v5[1] = v2;
  uint64_t v9 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v7, v9);
  swift_bridgeObjectRetain(v2);
  uint64_t v11 = App.__allocating_init(appIdentifier:)(v1, v2);

  sub_1F6CC((uint64_t)v4, &qword_285EA0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  uint64_t v13 = *(void *)(v0 + 248);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v15 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 224);
  swift_task_dealloc(*(void *)(v0 + 280));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t ExecuteMusicOnRemoteFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExecuteMusicOnRemoteFlow(0LL);
  uint64_t v5 = sub_10430( &qword_285C90,  type metadata accessor for ExecuteMusicOnRemoteFlow,  (uint64_t)&protocol conformance descriptor for ExecuteMusicOnRemoteFlow);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t (*sub_8F938(char a1))()
{
  uint64_t v2 = off_26D2B8[a1];
  swift_retain(*(void *)(v1
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_playMediaCatDialogService));
  return v2;
}

uint64_t sub_8F97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = a6[4];
  uint64_t v7 = a6[6];
  uint64_t v10 = a6[5];
  uint64_t v11 = v7;
  unint64_t v12 = 0xD00000000000001ELL;
  unint64_t v13 = 0x800000000021E9C0LL;
  uint64_t v14 = v6;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v10,  v7,  0xD00000000000001ELL,  0x800000000021E9C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v9);
}

uint64_t sub_8FA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = a6[4];
  uint64_t v7 = a6[6];
  uint64_t v10 = a6[5];
  uint64_t v11 = v7;
  strcpy((char *)v12, "WifiMismatch");
  HIBYTE(v12[6]) = 0;
  v12[7] = -5120;
  uint64_t v13 = v6;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v10,  v7,  0x6D73694D69666957LL,  0xEC00000068637461LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v9);
}

uint64_t sub_8FA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = a6[4];
  uint64_t v7 = a6[6];
  uint64_t v10 = a6[5];
  uint64_t v11 = v7;
  unint64_t v12 = 0xD00000000000001BLL;
  unint64_t v13 = 0x800000000021E9E0LL;
  uint64_t v14 = v6;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v10,  v7,  0xD00000000000001BLL,  0x800000000021E9E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v9);
}

uint64_t sub_8FB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = a6[4];
  uint64_t v7 = a6[6];
  uint64_t v10 = a6[5];
  uint64_t v11 = v7;
  unint64_t v12 = 0xD00000000000001ALL;
  unint64_t v13 = 0x800000000021EA00LL;
  uint64_t v14 = v6;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v10,  v7,  0xD00000000000001ALL,  0x800000000021EA00LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v9);
}

uint64_t sub_8FBA0(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 1sub_6C3C(v0 + 12) = v3;
  *(void *)(v4 + 96) = a2;
  *(_BYTE *)(v4 + 344) = a1;
  uint64_t v5 = type metadata accessor for ExecuteResponse(0LL);
  *(void *)(v4 + 120) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v4 + 128) = v6;
  *(void *)(v4 + 136) = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_2845A0);
  *(void *)(v4 + 144) = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  *(void *)(v4 + 152) = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_2845A8);
  *(void *)(v4 + 160) = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  *(void *)(v4 + 168) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v4 + 176) = v11;
  *(void *)(v4 + 184) = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  *(void *)(v4 + 192) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v4 + 200) = v13;
  *(void *)(v4 + 208) = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  *(void *)(v4 + 216) = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  *(void *)(v4 + 224) = v15;
  unint64_t v16 = (*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v4 + 232) = swift_task_alloc(v16);
  *(void *)(v4 + 240) = swift_task_alloc(v16);
  uint64_t v17 = type metadata accessor for Parse(0LL);
  *(void *)(v4 + 248) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)(v4 + 256) = v18;
  *(void *)(v4 + 264) = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_285BD0);
  *(void *)(v4 + 272) = swift_task_alloc((*(void *)(*(void *)(v19 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Input(0LL);
  *(void *)(v4 + 280) = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  *(void *)(v4 + 288) = v21;
  *(void *)(v4 + 296) = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_8FD70, 0LL, 0LL);
}

uint64_t sub_8FD70()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 112) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_inputToExecute;
  swift_beginAccess(v4, v0 + 56, 0LL, 0LL);
  sub_FF10(v4, v3, &qword_285BD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_1F6CC(*(void *)(v0 + 272), &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v8 = sub_6960(v7, (uint64_t)qword_2969C8);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_0, v10, v11, "ExecuteMusicOnRemoteFlow#generateDialog input is nil", v12, 2u);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v15 = *(void *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 272);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v18 = *(void *)(v0 + 240);
    uint64_t v20 = *(void *)(v0 + 208);
    uint64_t v21 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 152);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 144);
    uint64_t v27 = *(void *)(v0 + 136);
    swift_task_dealloc(*(void *)(v0 + 296));
    swift_task_dealloc(v17);
    swift_task_dealloc(v16);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 288) + 32LL))( *(void *)(v0 + 296),  *(void *)(v0 + 272),  *(void *)(v0 + 280));
    id v26 = (void *)swift_task_alloc(dword_285C34);
    *(void *)(v0 + 304) = v26;
    *id v26 = v0;
    v26[1] = sub_8FFC4;
    return sub_8F3E0();
  }

uint64_t sub_8FFC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 304LL);
  *(void *)(*(void *)v1 + 312LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_90020, 0LL, 0LL);
}

uint64_t sub_90020(uint64_t a1)
{
  uint64_t v68 = (void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 256);
  uint64_t v3 = *(void *)(v1 + 264);
  uint64_t v4 = *(void *)(v1 + 248);
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = Input.parse.getter(a1);
  NSString v67 = (void *)Parse.playMediaIntent.getter(v6);
  *(void *)(v1 + 320) = v67;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  uint64_t v7 = v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                           + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload
                                                           + 16);
  if (!v8) {
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(v7 + 24);
  uint64_t v11 = *(void *)(v1 + 96);
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v12 = *(unsigned __int8 *)(v1 + 344);
  swift_retain(v9);
  uint64_t v13 = v8(v12, v11, v10);
  if (!v13)
  {
    sub_925E8((uint64_t)v8, v9);
LABEL_9:
    uint64_t v33 = *(void *)(v1 + 104);
    *(void *)(v1 + 80) = sub_8F938(*(_BYTE *)(v1 + 344));
    *(void *)(v1 + 88) = v34;
    swift_bridgeObjectRetain(v33);
    uint64_t v32 = *(void *)(v1 + 96);
    uint64_t v31 = *(void *)(v1 + 104);
    goto LABEL_10;
  }

  uint64_t v17 = v14;
  uint64_t v18 = v13;
  uint64_t v65 = v15;
  uint64_t v19 = v16;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = *(void *)(v1 + 240);
  uint64_t v22 = *(void *)(v1 + 216);
  uint64_t v21 = *(void *)(v1 + 224);
  uint64_t v23 = sub_6960(v22, (uint64_t)qword_2969C8);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
  NSString v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl( &dword_0,  v25,  v26,  "ExecuteMusicOnRemoteFlow#generateDialog Found valid error dialog override. Using that instead",  v27,  2u);
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  uint64_t v28 = *(void *)(v1 + 240);
  uint64_t v29 = *(void *)(v1 + 216);
  uint64_t v30 = *(void *)(v1 + 224);
  sub_925E8((uint64_t)v8, v9);

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  *(void *)(v1 + 80) = v18;
  *(void *)(v1 + 88) = v17;
  uint64_t v31 = v19;
  uint64_t v32 = v65;
LABEL_10:
  uint64_t v36 = *(void *)(v1 + 200);
  uint64_t v35 = *(void *)(v1 + 208);
  uint64_t v37 = *(void *)(v1 + 184);
  uint64_t v38 = *(void *)(v1 + 192);
  uint64_t v40 = *(void *)(v1 + 168);
  uint64_t v39 = *(void *)(v1 + 176);
  uint64_t v41 = *(void *)(v1 + 160);
  uint64_t v61 = *(void *)(v1 + 152);
  uint64_t v62 = *(void *)(v1 + 144);
  uint64_t v60 = *(void *)(v1 + 112);
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))( v35,  enum case for AdditionalMetricsDescription.ModuleName.emorf(_:),  v38);
  (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))( v37,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v40);
  uint64_t v64 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v35,  v37,  v32,  v31,  0LL,  1LL);
  uint64_t v66 = v42;
  swift_bridgeObjectRelease(v31);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v40);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v38);
  sub_157C4( v60 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider,  (uint64_t)v68);
  uint64_t v44 = *(void *)(v1 + 40);
  uint64_t v43 = *(void *)(v1 + 48);
  sub_6EA8(v68, v44);
  uint64_t v45 = enum case for ActivityType.failed(_:);
  uint64_t v46 = type metadata accessor for ActivityType(0LL);
  uint64_t v47 = *(void *)(v46 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 104))(v41, v45, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v41, 0LL, 1LL, v46);
  uint64_t v48 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56LL))(v61, 1LL, 1LL, v48);
  uint64_t v49 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v50 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 104))(v62, v49, v50);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v62, 0LL, 1LL, v50);
  if (v67) {
    uint64_t v52 = INPlayMediaIntent.firstMediaItemType()(v67);
  }
  else {
    uint64_t v52 = 0LL;
  }
  uint64_t v53 = *(void *)(v1 + 312);
  uint64_t v55 = *(void *)(v1 + 152);
  uint64_t v54 = *(void *)(v1 + 160);
  uint64_t v56 = *(void *)(v1 + 144);
  uint64_t v63 = *(void *)(v1 + 112);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v53,  v67,  v54,  v55,  v56,  v64,  v66,  v52,  v67 == 0LL,  v44,  v43);

  swift_bridgeObjectRelease(v66);
  sub_1F6CC(v56, &qword_2845A0);
  sub_1F6CC(v55, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v54, &qword_2845A8);
  sub_6C3C(v68);
  uint64_t v57 = (void *)swift_task_alloc(48LL);
  *(void *)(v1 + 328) = v57;
  v57[2] = v1 + 80;
  v57[3] = v53;
  v57[4] = v67;
  v57[5] = v63;
  unint64_t v58 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v1 + 336) = v58;
  *unint64_t v58 = v1;
  v58[1] = sub_904C4;
  return withCheckedContinuation<A>(isolation:function:_:)( *(void *)(v1 + 136),  0LL,  0LL,  0xD000000000000023LL,  0x800000000021EAA0LL,  sub_92D70,  v57,  *(void *)(v1 + 120));
}

uint64_t sub_904C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 328LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 128LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 136LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 120LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 336LL));
  swift_task_dealloc(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_90540, 0LL, 0LL);
}

uint64_t sub_90540()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 280);

  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release(*(void *)(v0 + 88));
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v10 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 136);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9062C( uint64_t a1, void (**a2)(unint64_t, uint64_t, __int128 *, uint64_t (*)(uint64_t a1), uint64_t), uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v9 = sub_6C5C(&qword_285E98);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  NSString v25 = v13;
  swift_retain(v14);
  unint64_t v24 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  if (!a3)
  {
    type metadata accessor for App(0LL);
    uint64_t v15 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v29 = 0LL;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    goto LABEL_6;
  }

  uint64_t v15 = a3;
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v28 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v29 = &off_272BD0;
  *(void *)&__int128 v27 = a4;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  uint64_t v18 = swift_allocObject(&unk_26D1E8, v17 + v11, v16 | 7);
  uint64_t v19 = v26;
  *(void *)(v18 + 16) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, v12, v9);
  swift_retain(a3);
  id v20 = a4;
  swift_retain(v19);
  unint64_t v21 = v24;
  v25(v24, v15, &v27, sub_92DF4, v18);
  swift_release(v15);
  swift_bridgeObjectRelease(v21);
  swift_release(v14);
  swift_release(v18);
  return sub_1F6CC((uint64_t)&v27, &qword_283FE8);
}

uint64_t sub_907FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_6C5C(&qword_285E98);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))( (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a3,  v5);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 + 16) & ~v8;
  uint64_t v10 = swift_allocObject(&unk_26D210, v9 + v7, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))( v10 + v9,  (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v5);
  sub_9096C(a1, (void (*)(char *))sub_92E9C, v10);
  return swift_release(v10);
}

uint64_t sub_908E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExecuteResponse(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  uint64_t v6 = sub_6C5C(&qword_285E98);
  return CheckedContinuation.resume(returning:)(v4, v6);
}

uint64_t sub_9096C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v68 = a3;
  uint64_t v69 = a2;
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v63);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v65);
  uint64_t v11 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v64 = (char *)&v62 - v18;
  __chkstk_darwin(v17);
  id v20 = (char *)&v62 - v19;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v66 = (char *)v21;
  NSString v67 = v22;
  uint64_t v23 = ((uint64_t (*)(char *))v22)(v20);
  unint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v62 = a1;
    __int128 v27 = v4;
    __int128 v28 = v16;
    uint64_t v29 = v12;
    uint64_t v30 = v9;
    uint64_t v31 = v26;
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "ExecuteMusicOnRemoteFlow#handleDialogResult Handling dialog Result...", v26, 2u);
    uint64_t v32 = v31;
    uint64_t v9 = v30;
    uint64_t v12 = v29;
    uint64_t v16 = v28;
    uint64_t v4 = v27;
    a1 = v62;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v20, v12);
  sub_FF10(a1, (uint64_t)v11, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v11, v65) == 1)
  {
    uint64_t v34 = *v11;
    v67(v16, v66, v12);
    swift_errorRetain(v34);
    uint64_t v35 = swift_errorRetain(v34);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      uint64_t v77 = v39;
      NSString v67 = (void (*)(char *, char *, uint64_t))v33;
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_getErrorValue(v34, v76, v75);
      uint64_t v73 = Error.localizedDescription.getter(v75[1], v75[2]);
      uint64_t v74 = v40;
      uint64_t v66 = v16;
      uint64_t v41 = String.init<A>(_:)( &v73,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v43 = v42;
      uint64_t v73 = sub_6978(v41, v42, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
      swift_bridgeObjectRelease(v43);
      swift_errorRelease(v34);
      swift_errorRelease(v34);
      _os_log_impl( &dword_0,  v36,  v37,  "ExecuteMusicOnRemoteFlow#handleDialogResult Could not properly create dialog %s, silently failing...",  v38,  0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);

      uint64_t v44 = ((uint64_t (*)(char *, uint64_t))v67)(v66, v12);
    }

    else
    {
      swift_errorRelease(v34);
      swift_errorRelease(v34);

      uint64_t v44 = ((uint64_t (*)(char *, uint64_t))v33)(v16, v12);
    }

    uint64_t v61 = v70;
    static ExecuteResponse.complete()(v44);
    v69(v61);
    swift_errorRelease(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v61, v72);
  }

  else
  {
    uint64_t v45 = *(int *)(v63 + 48);
    uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(*(void *)(v46 - 8) + 32LL))(v9, v11, v46);
    *(void *)&v9[v45] = *(uint64_t *)((char *)v11 + v45);
    LOBYTE(v45) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v47);
    uint64_t v48 = type metadata accessor for ViewFactory(0LL);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    uint64_t v49 = ViewFactory.init(ttsEnabled:)(v45 & 1);
    uint64_t v50 = (void *)dispatch thunk of ViewFactory.makeCompletionView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v9,  _swiftEmptyArrayStorage,  0LL,  1LL);
    uint64_t v51 = v4[11];
    uint64_t v52 = v4[12];
    sub_6EA8(v4 + 8, v51);
    AceServiceInvokerAsync.submitAndForget(_:)(v50, v51, v52);
    uint64_t v53 = v64;
    uint64_t v54 = ((uint64_t (*)(char *, char *, uint64_t))v67)(v64, v66, v12);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl( &dword_0,  v55,  v56,  "ExecuteMusicOnRemoteFlow#handleDialogResult Dialog successfully generated, responding and exiting...",  v57,  2u);
      swift_slowDealloc(v57, -1LL, -1LL);
    }

    uint64_t v58 = ((uint64_t (*)(char *, uint64_t))v33)(v53, v12);
    unint64_t v59 = v70;
    static ExecuteResponse.complete()(v58);
    v69(v59);

    swift_release(v49);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v59, v72);
    return sub_1F6CC((uint64_t)v9, &qword_289340);
  }

uint64_t ExecuteMusicOnRemoteFlow.deinit()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload + 16);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload + 24);
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload
                                      + 8));
  sub_925E8(v1, v2);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_catService));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_playMediaCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_appNameResolver));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_viewFactory));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionNotInRangeErrorCodes));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionWifiMismatchErrorCodes));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionConnectionTimedOut));
  return v0;
}

uint64_t ExecuteMusicOnRemoteFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void (*sub_91080(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = SiriEnvironmentLocating<>.siriEnvironment.modify();
  return sub_910E0;
}

void sub_910E0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32LL))(*a1);
  free(v1);
}

uint64_t sub_9110C(uint64_t a1)
{
  return ExecuteMusicOnRemoteFlow.on(input:)(a1) & 1;
}

uint64_t sub_91130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ExecuteMusicOnRemoteFlow(0LL);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v7, a4);
}

uint64_t sub_9118C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_285BE4);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_11C64;
  return ExecuteMusicOnRemoteFlow.execute()(a1);
}

void sub_911E0(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 48);
  char v5 = *(_BYTE *)(v3 + 56);
  sub_88B64(v4, v5);
  sub_888C4((uint64_t)v4, v5);
  uint64_t v7 = v6;
  char v9 = v8;
  sub_88B98(v4, v5);
  *(void *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v9;
}

uint64_t sub_91250(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError(result);
  }
  return result;
}

void *sub_91278(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_6C5C(&qword_284D68);
  char v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
  size_t v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_912DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  unint64_t v6 = a1 >> 16;
  uint64_t v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v13 = String.UTF16View.index(_:offsetBy:)(15LL, v6, a2);
    uint64_t v14 = v13 + (v7 << 16);
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v16 = v14 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v16 = v15;
    }
    return v16 | 4;
  }

  else
  {
    uint64_t v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v6);
    uint64_t v9 = v8 + (v7 << 16);
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v11 = v9 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v11 = v10;
    }
    return v11 | 8;
  }

void *sub_91354(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v4 = a2 - (void)__src;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (!__dst)
  {
    if (v4 <= 0) {
      return __src;
    }
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawBufferPointer.copyMemory source has too many elements",  69LL,  2LL,  "Swift/UnsafeRawBufferPointer.swift",  34LL,  2,  487LL,  0);
    __break(1u);
    return __src;
  }

  if (__src) {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t type metadata accessor for ExecuteMusicOnRemoteFlow(uint64_t a1)
{
  uint64_t result = qword_285CF8;
  if (!qword_285CF8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ExecuteMusicOnRemoteFlow);
  }
  return result;
}

uint64_t sub_91424@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unsigned __int8 *sub_9144C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v4 = String.init<A>(_:)( &v14,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000LL) == 0)
  {
    if ((v5 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v14 = v6;
    uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }

  uint64_t v6 = sub_917AC(v4, v5);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease(v7);
  unint64_t v7 = v11;
  if ((v11 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }

unsigned __int8 *sub_91530(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            uint64_t v9 = 0LL;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0LL;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              uint64_t v13 = v9 * a3;
              uint64_t v9 = v13 - (v11 + v12);
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_65;
    }

    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }

      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }

      if (result)
      {
        uint64_t v25 = 0LL;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0LL;
              }
              char v27 = -87;
            }

            else
            {
              char v27 = -55;
            }
          }

          else
          {
            char v27 = -48;
          }

          uint64_t v28 = v25 * a3;
          uint64_t v25 = v28 + (v26 + v27);
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }

  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }

  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }

  if (!result) {
    return 0LL;
  }
  uint64_t v9 = 0LL;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0LL;
        }
        char v20 = -87;
      }

      else
      {
        char v20 = -55;
      }
    }

    else
    {
      char v20 = -48;
    }

    uint64_t v21 = v9 * a3;
    uint64_t v9 = v21 + (v19 + v20);
    ++v18;
    --v14;
  }

  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_917AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1;
  }
  uint64_t v3 = 7LL;
  if (((a2 >> 60) & ((a1 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v3 = 11LL;
  }
  unint64_t v4 = String.subscript.getter(15LL, v3 | (v2 << 16), a1, a2);
  unint64_t v6 = v5;
  uint64_t v9 = sub_91828(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_91828(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a3;
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    unint64_t v12 = sub_9196C(a1, a2, a3, a4);
    if (v12)
    {
      uint64_t v9 = v12;
      unint64_t v8 = (unint64_t)sub_91278(v12, 0LL);
      unint64_t v5 = sub_91A58((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      uint64_t v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }

    else
    {
      unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    }

    uint64_t v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(void *)(v8 + 16));
    swift_release(v8);
    return v14;
  }

  else
  {
    unint64_t v8 = a1 >> 16;
    uint64_t v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000LL) == 0)
    {
      if ((a3 & 0x1000000000000000LL) != 0)
      {
        uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }

unint64_t sub_9196C( unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000LL) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4LL << v8;
  if ((result & 0xC) == 4LL << v8)
  {
    uint64_t result = sub_912DC(result, a3, a4);
    unint64_t v7 = result;
  }

  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_912DC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000LL) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }

  else if ((a4 & 0x1000000000000000LL) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }

  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }

  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }

  __break(1u);
  return result;
}

unint64_t sub_91A58( unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0LL;
    goto LABEL_33;
  }

  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0LL;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }

  uint64_t v11 = 0LL;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000LL) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4LL << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_912DC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000LL) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }

    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000LL) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }

      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000LL) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter(a6, a7);
        }
        char v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000LL) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }

    uint64_t result = sub_912DC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000LL) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000LL) + 65540;
      goto LABEL_29;
    }

uint64_t sub_91C68(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v29[-v7];
  id v9 = [a1 dictionary];
  if (!v9)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v15 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, v15, v2);
    unint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v19 = 0;
      _os_log_impl( &dword_0,  v17,  v18,  "ExecuteMusicOnRemoteFlow#serializeCommandAsPList failed to serialize command to dictionary",  v19,  2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
    return 0LL;
  }

  unint64_t v10 = v9;
  uint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
  id v30 = 0LL;
  id v12 = [v11 dataWithPropertyList:v10 format:200 options:0 error:&v30];
  id v13 = v30;
  if (!v12)
  {
    char v20 = v13;
    uint64_t v21 = _convertNSErrorToError(_:)();

    swift_willThrow(v22);
    swift_errorRelease(v21);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v24 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v8, v23, v2);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "ExecuteMusicOnRemoteFlow#serializeCommandAsPList failed to serialize command to pList",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    return 0LL;
  }

  uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);

  return v14;
}

id sub_91F70(void *a1, uint64_t a2, unint64_t a3)
{
  id v49 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v44 - v10;
  if (a3)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v12 = sub_6960(v5, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v12, v5);
    id v13 = v49;
    swift_bridgeObjectRetain_n(a3, 2LL);
    id v14 = v13;
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    int v16 = static os_log_type_t.info.getter(v15);
    if (os_log_type_enabled(v15, (os_log_type_t)v16))
    {
      LODWORD(v49) = v16;
      uint64_t v45 = v15;
      uint64_t v17 = swift_slowAlloc(32LL, -1LL);
      uint64_t v48 = swift_slowAlloc(96LL, -1LL);
      uint64_t v51 = v48;
      *(_DWORD *)uint64_t v17 = 136315650;
      swift_bridgeObjectRetain(a3);
      uint64_t v46 = a2;
      uint64_t v50 = sub_6978(a2, a3, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease_n(a3, 3LL);
      *(_WORD *)(v17 + sub_6C3C(v0 + 12) = 2080;
      id v18 = [v14 refId];
      if (v18)
      {
        char v19 = v18;
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
        unint64_t v22 = v21;
      }

      else
      {
        unint64_t v22 = 0xE500000000000000LL;
        uint64_t v20 = 0x3E4C494E3CLL;
      }

      uint64_t v47 = v6;
      uint64_t v50 = sub_6978(v20, v22, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);

      swift_bridgeObjectRelease(v22);
      *(_WORD *)(v17 + 22) = 2080;
      id v29 = [v14 aceId];
      if (v29)
      {
        id v30 = v29;
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        unint64_t v33 = v32;

        uint64_t v34 = v45;
        a2 = v46;
      }

      else
      {
        unint64_t v33 = 0xE500000000000000LL;
        uint64_t v34 = v45;
        a2 = v46;
        uint64_t v31 = 0x3E4C494E3CLL;
      }

      uint64_t v50 = sub_6978(v31, v33, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);

      swift_bridgeObjectRelease(v33);
      _os_log_impl( &dword_0,  v34,  (os_log_type_t)v49,  "ExecuteMusicOnRemoteFlow#wrapCommandForExecution wrapping command for remote execution with assistantID: '%s', r efID: '%s', aceID: '%s'",  (uint8_t *)v17,  0x20u);
      uint64_t v35 = v48;
      swift_arrayDestroy(v48, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v17, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v5);
    }

    else
    {

      swift_bridgeObjectRelease_n(a3, 2LL);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }

    id v36 = [objc_allocWithZone(SAExecuteOnRemoteRequest) init];
    uint64_t v37 = sub_91C68(v14);
    unint64_t v39 = v38;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_925A4(v37, v39);
    [v36 setSerializedCommand:isa];

    id v41 = [objc_allocWithZone(SARemoteDevice) init];
    uint64_t v42 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v42)
    {
      NSString v43 = String._bridgeToObjectiveC()();
      [v41 setAssistantId:v43];
    }

    [v41 setSiriEnabled:1];
    [v36 setRemoteDevice:v41];
    [v36 setShouldFallbackOnAWDL:0];

    return v36;
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v5, (uint64_t)qword_2969C8);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v23, v5);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.info.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "ExecuteMusicOnRemoteFlow#wrapCommandForExecution wrapping command for remote execution skipped because of null assistantID",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return v49;
  }

uint64_t sub_924CC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_285C1C);
  __int128 v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_11C64;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return swift_task_switch(sub_8E65C, 0LL, 0LL);
}

uint64_t sub_92534()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_92558()
{
  return sub_181F84(*(void **)(v0 + 16));
}

uint64_t sub_92560(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain(result);
  }

  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_925A4(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release(result);
  }

  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_925E8(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_925F8()
{
  return sub_10430( &qword_285C90,  type metadata accessor for ExecuteMusicOnRemoteFlow,  (uint64_t)&protocol conformance descriptor for ExecuteMusicOnRemoteFlow);
}

uint64_t sub_92624()
{
  return sub_10430( &qword_285C08,  type metadata accessor for ExecuteMusicOnRemoteFlow,  (uint64_t)&protocol conformance descriptor for ExecuteMusicOnRemoteFlow);
}

uint64_t sub_92650()
{
  return type metadata accessor for ExecuteMusicOnRemoteFlow(0LL);
}

void sub_92658(uint64_t a1)
{
  v4[0] = &unk_215ED0;
  v4[1] = &unk_215ED0;
  v4[2] = &unk_215EE8;
  v4[3] = &unk_215F00;
  sub_92714(319LL);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(v2 - 8) + 64LL;
    v4[5] = &unk_215F00;
    v4[6] = &unk_215F18;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[9] = &unk_215F00;
    v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[11] = &unk_215F00;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256LL, 15LL, v4, a1 + 80);
  }

void sub_92714(uint64_t a1)
{
  if (!qword_285D08)
  {
    uint64_t v2 = type metadata accessor for Input(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_285D08);
    }
  }

uint64_t initializeBufferWithCopyOfBuffer for ExecuteOnRemoteFlowResult(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  sub_927AC(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_927AC(id result, char a2)
{
  if (a2 == 2 || a2 == 1) {
    return (id)swift_errorRetain(result);
  }
  if (!a2) {
    return result;
  }
  return result;
}

void destroy for ExecuteOnRemoteFlowResult(uint64_t a1)
{
}

void sub_927E0(id a1, char a2)
{
  if (a2 == 2 || a2 == 1)
  {
    swift_errorRelease(a1);
  }

  else if (!a2)
  {
  }

uint64_t *assignWithCopy for ExecuteOnRemoteFlowResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_92BF4( a1,  a2,  a3,  (void (*)(void, void))sub_927AC,  (void (*)(uint64_t, uint64_t))sub_927E0);
}

uint64_t assignWithTake for ExecuteOnRemoteFlowResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_927E0(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecuteOnRemoteFlowResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemoteFlowResult( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFD) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_928E0(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_928F8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }

  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemoteFlowResult()
{
  return &type metadata for ExecuteOnRemoteFlowResult;
}

uint64_t destroy for ExecuteOnRemoteFlowPayload(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease(a1[1]);
  if (a1[2]) {
    return swift_release(a1[3]);
  }
  return result;
}

void *initializeWithCopy for ExecuteOnRemoteFlowPayload(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  uint64_t v5 = a2[2];
  swift_bridgeObjectRetain(v4);
  if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain(v7);
  }

  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }

  return a1;
}

void *assignWithCopy for ExecuteOnRemoteFlowPayload(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  if (!a1[2])
  {
    if (v6)
    {
      uint64_t v9 = a2[3];
      a1[2] = v6;
      a1[3] = v9;
      swift_retain(v9);
      return a1;
    }

__n128 initializeWithTake for ExecuteOnRemoteFlowPayload(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for ExecuteOnRemoteFlowPayload(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  if (!a1[2])
  {
    if (v6)
    {
      uint64_t v9 = a2[3];
      a1[2] = v6;
      a1[3] = v9;
      return a1;
    }

uint64_t getEnumTagSinglePayload for ExecuteOnRemoteFlowPayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemoteFlowPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemoteFlowPayload()
{
  return &type metadata for ExecuteOnRemoteFlowPayload;
}

uint64_t initializeBufferWithCopyOfBuffer for ExecuteMusicOnRemoteFlow.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  sub_88B64(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for ExecuteMusicOnRemoteFlow.State(uint64_t a1)
{
}

uint64_t *assignWithCopy for ExecuteMusicOnRemoteFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_92BF4( a1,  a2,  a3,  (void (*)(void, void))sub_88B64,  (void (*)(uint64_t, uint64_t))sub_88B98);
}

uint64_t *sub_92BF4( uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  unsigned __int8 v8 = *((_BYTE *)a2 + 8);
  a4(*a2, v8);
  uint64_t v9 = *a1;
  *a1 = v7;
  uint64_t v10 = *((unsigned __int8 *)a1 + 8);
  *((_BYTE *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

uint64_t assignWithTake for ExecuteMusicOnRemoteFlow.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_88B98(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecuteMusicOnRemoteFlow.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecuteMusicOnRemoteFlow.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_92D10(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_92D28(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    LOBYTE(a2) = 4;
  }

  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ExecuteMusicOnRemoteFlow.State()
{
  return &type metadata for ExecuteMusicOnRemoteFlow.State;
}

uint64_t sub_92D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_8FB18(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_92D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_8FA90(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_92D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_8FA04(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_92D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_8F97C(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_92D70(uint64_t a1)
{
  return sub_9062C( a1,  *(void (***)(unint64_t, uint64_t, __int128 *, uint64_t (*)(uint64_t), uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_92D7C()
{
  uint64_t v1 = sub_6C5C(&qword_285E98);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_92DF4(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_285E98) - 8) + 80LL);
  return sub_907FC(a1, *(void *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_92E38()
{
  uint64_t v1 = sub_6C5C(&qword_285E98);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_92E9C(uint64_t a1)
{
  return sub_908E0(a1);
}

uint64_t getEnumTagSinglePayload for ExecuteOnRemoteError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }

uint64_t storeEnumTagSinglePayload for ExecuteOnRemoteError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_92FB8 + 4 * byte_215D82[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_92FEC + 4 * byte_215D7D[v4]))();
}

uint64_t sub_92FEC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_92FF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x92FFCLL);
  }
  return result;
}

uint64_t sub_93008(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x93010LL);
  }
  *(_BYTE *)__n128 result = a2 + 3;
  return result;
}

uint64_t sub_93014(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9301C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemoteError()
{
  return &type metadata for ExecuteOnRemoteError;
}

unint64_t sub_9303C()
{
  unint64_t result = qword_285EB0;
  if (!qword_285EB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_216018, &type metadata for ExecuteOnRemoteError);
    atomic_store(result, (unint64_t *)&qword_285EB0);
  }

  return result;
}

uint64_t sub_93088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9309C(a1, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr, a2);
}

uint64_t sub_9309C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a2;
  unint64_t v38 = a3;
  uint64_t v39 = a1;
  uint64_t v5 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_285F70);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  id v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    id v36 = v11;
    uint64_t v21 = a4;
    unint64_t v22 = v8;
    uint64_t v23 = v6;
    uint64_t v24 = v5;
    uint64_t v25 = v20;
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl( &dword_0,  v18,  v19,  "CommonNLContextProvider: makeContextForUnsupportedIntent clearing conversation state",  v20,  2u);
    os_log_type_t v26 = v25;
    uint64_t v5 = v24;
    uint64_t v6 = v23;
    int v8 = v22;
    a4 = v21;
    uint64_t v11 = v36;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  NLContextUpdate.init()(v27);
  uint64_t v28 = sub_6C5C(&qword_287980);
  uint64_t v29 = swift_allocObject(v28, 40LL, 7LL);
  *(_OWORD *)(v29 + 16) = xmmword_214980;
  uint64_t v30 = sub_1641C(0LL, v37, v38);
  uint64_t v31 = static ConversationStateAttachmentUtils.makeAttachmentToClearSlotResolutionState<A>(intent:)(v39, v30);
  *(void *)(v29 + 32) = v31;
  uint64_t v40 = v29;
  specialized Array._endMutation()(v31);
  NLContextUpdate.conversationStateAttachments.setter(v40);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for PommesContext.Source.pluginDefined(_:),  v5);
  PommesContext.init(source:domain:listenAfterSpeaking:)(v8, 0x616964656DLL, 0xE500000000000000LL, 0LL);
  uint64_t v32 = type metadata accessor for PommesContext(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v11, 0LL, 1LL, v32);
  NLContextUpdate.pommesContext.setter(v11);
  uint64_t v33 = type metadata accessor for NLContextUpdate(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(a4, 0LL, 1LL, v33);
}

uint64_t sub_93370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v3 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_285F70);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v34 = v9;
    uint64_t v19 = a2;
    uint64_t v20 = v6;
    uint64_t v21 = v4;
    uint64_t v22 = v3;
    uint64_t v23 = v18;
    *(_WORD *)id v18 = 0;
    _os_log_impl( &dword_0,  v16,  v17,  "CommonNLContextProvider: makeContextForUnsupportedIntent clearing conversation state",  v18,  2u);
    uint64_t v24 = v23;
    uint64_t v3 = v22;
    uint64_t v4 = v21;
    uint64_t v6 = v20;
    a2 = v19;
    uint64_t v9 = v34;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  NLContextUpdate.init()(v25);
  uint64_t v26 = sub_6C5C(&qword_287980);
  uint64_t v27 = swift_allocObject(v26, 40LL, 7LL);
  *(_OWORD *)(v27 + 16) = xmmword_214980;
  uint64_t v28 = type metadata accessor for DetermineIntent();
  uint64_t v29 = static ConversationStateAttachmentUtils.makeAttachmentToClearSlotResolutionState<A>(intent:)(v35, v28);
  *(void *)(v27 + 32) = v29;
  uint64_t v36 = v27;
  specialized Array._endMutation()(v29);
  NLContextUpdate.conversationStateAttachments.setter(v36);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))( v6,  enum case for PommesContext.Source.pluginDefined(_:),  v3);
  PommesContext.init(source:domain:listenAfterSpeaking:)(v6, 0x616964656DLL, 0xE500000000000000LL, 0LL);
  uint64_t v30 = type metadata accessor for PommesContext(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v9, 0LL, 1LL, v30);
  NLContextUpdate.pommesContext.setter(v9);
  uint64_t v31 = type metadata accessor for NLContextUpdate(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(a2, 0LL, 1LL, v31);
}

uint64_t sub_9363C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9309C(a1, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr, a2);
}

void *Determine.UnsupportedValueStrategy.deinit()
{
  return v0;
}

uint64_t protocol witness for UnsupportedValueFlowStrategy.makeUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:) in conformance AddMedia.UnsupportedValueStrategy( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_93770(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_26D410, (uint64_t)sub_952CC);
}

unint64_t sub_936B8(uint64_t a1)
{
  unint64_t result = sub_936DC();
  *(void *)(a1 + sub_6C3C(v0 + 8) = result;
  return result;
}

unint64_t sub_936DC()
{
  unint64_t result = qword_285EB8;
  if (!qword_285EB8)
  {
    uint64_t v1 = type metadata accessor for AddMedia.UnsupportedValueStrategy();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AddMedia.UnsupportedValueStrategy, v1);
    atomic_store(result, (unint64_t *)&qword_285EB8);
  }

  return result;
}

uint64_t type metadata accessor for AddMedia.UnsupportedValueStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin8AddMedia24UnsupportedValueStrategy);
}

uint64_t sub_93740( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_93770(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_26D3E8, (uint64_t)sub_95270);
}

uint64_t sub_93770( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v42 = a2;
  uint64_t v44 = a8;
  uint64_t v45 = a6;
  uint64_t v43 = a5;
  uint64_t v39 = a9;
  uint64_t v40 = a10;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  os_log_type_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v38 = a1;
    uint64_t v23 = a3;
    uint64_t v24 = a4;
    uint64_t v25 = a7;
    uint64_t v26 = v22;
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput", v22, 2u);
    uint64_t v27 = v26;
    a7 = v25;
    a4 = v24;
    a3 = v23;
    a1 = v38;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v28 = v41;
  uint64_t v29 = *(void *)(v41 + 16);
  uint64_t v30 = (void *)swift_allocObject(v39, 80LL, 7LL);
  v30[2] = v28;
  v30[3] = a1;
  uint64_t v31 = v42;
  v30[4] = v42;
  v30[5] = a7;
  uint64_t v32 = v44;
  uint64_t v33 = v45;
  v30[6] = v44;
  v30[7] = a3;
  v30[8] = a4;
  v30[9] = v33;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, id, id, uint64_t, void, uint64_t, void *))(*(void *)v29 + 200LL);
  swift_retain(v29);
  swift_retain(v28);
  swift_retain(a1);
  id v35 = v31;
  swift_retain(v32);
  swift_bridgeObjectRetain(a4);
  id v36 = v33;
  v34(a1, a3, a4, v36, v35, v43, 0LL, v40, v30);
  swift_release(v30);
  return swift_release(v29);
}

uint64_t sub_939A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for AddMedia.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_93A28( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for AddMedia.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_93AAC( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v125 = a8;
  uint64_t v123 = a7;
  uint64_t v140 = a5;
  uint64_t v141 = a6;
  uint64_t v143 = a4;
  uint64_t v139 = a3;
  unint64_t v135 = a2;
  uint64_t v124 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v122 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v121 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v11);
  uint64_t v134 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v13);
  uint64_t v138 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v15);
  os_log_type_t v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v136 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v132 = *(void **)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v131 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = (void *)type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v130 = *(v133 - 1);
  __chkstk_darwin(v133);
  uint64_t v129 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_289340);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v128 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v115 - v26;
  uint64_t v28 = type metadata accessor for Logger(0LL);
  uint64_t v142 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v115 - v32;
  uint64_t v34 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v34);
  id v36 = (uint64_t *)((char *)&v115 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v36);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v34);
  uint64_t v137 = v17;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v38 = *v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v28, (uint64_t)qword_2969C8);
    uint64_t v40 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v33, v39, v28);
    swift_errorRetain(v38);
    uint64_t v41 = swift_errorRetain(v38);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(8LL, -1LL);
      uint64_t v134 = v20;
      uint64_t v46 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 138412290;
      swift_errorRetain(v38);
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError(v38);
      uint64_t v144 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145);
      *uint64_t v46 = v47;
      uint64_t v40 = v142;
      swift_errorRelease(v38);
      swift_errorRelease(v38);
      _os_log_impl( &dword_0,  v42,  v43,  "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput dialog provider failed with error: %@",  v44,  0xCu);
      uint64_t v48 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v46, 1LL, v48);
      id v49 = v46;
      uint64_t v20 = v134;
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v38);
      swift_errorRelease(v38);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v28);
    uint64_t v93 = v130;
    id v94 = v129;
    uint64_t v95 = v133;
    (*(void (**)(char *, void, void *))(v130 + 104))( v129,  enum case for AdditionalMetricsDescription.ModuleName.cuvs(_:),  v133);
    uint64_t v96 = v132;
    uint64_t v97 = v131;
    ((void (*)(char *, void, uint64_t))v132[13])( v131,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v20);
    swift_getErrorValue(v38, v147, v146);
    uint64_t v98 = Error.localizedDescription.getter(v146[1], v146[2]);
    uint64_t v100 = v99;
    uint64_t v142 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v94,  v97,  v98,  v99,  0LL,  1LL);
    uint64_t v102 = v101;
    swift_bridgeObjectRelease(v100);
    ((void (*)(char *, uint64_t))v96[1])(v97, v20);
    (*(void (**)(char *, void *))(v93 + 8))(v94, v95);
    uint64_t v104 = v135[6];
    uint64_t v103 = v135[7];
    unint64_t v135 = sub_6EA8(v135 + 3, v104);
    uint64_t v105 = enum case for ActivityType.failed(_:);
    uint64_t v106 = type metadata accessor for ActivityType(0LL);
    uint64_t v107 = *(void *)(v106 - 8);
    uint64_t v108 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v136, v105, v106);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v108, 0LL, 1LL, v106);
    uint64_t v109 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v110 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56LL))(v137, 1LL, 1LL, v109);
    uint64_t v111 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v112 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v113 = *(void *)(v112 - 8);
    uint64_t v114 = (uint64_t)v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 104))(v138, v111, v112);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v114, 0LL, 1LL, v112);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v139,  v143,  v108,  v110,  v114,  v142,  v102,  0LL,  1,  v104,  v103);
    swift_bridgeObjectRelease(v102);
    sub_1F6CC(v114, &qword_2845A0);
    sub_1F6CC(v110, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v108, &qword_2845A8);
    uint64_t v144 = v38;
    v145[32] = 1;
    swift_errorRetain(v38);
    v140(&v144);
    swift_errorRelease(v38);
    return sub_1F6CC((uint64_t)&v144, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v116 = a9;
    uint64_t v50 = *(int *)(v23 + 48);
    uint64_t v51 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v120 = *(void *)(v51 - 8);
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 32);
    uint64_t v118 = v51;
    uint64_t v117 = v52;
    ((void (*)(char *, uint64_t *))v52)(v27, v36);
    uint64_t v53 = *(void **)((char *)v36 + v50);
    *(void *)&v27[v50] = v53;
    uint64_t v54 = qword_283888;
    id v119 = v53;
    if (v54 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v126 = v23;
    uint64_t v127 = v27;
    uint64_t v55 = sub_6960(v28, (uint64_t)qword_2969C8);
    uint64_t v56 = v142;
    uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 16))(v31, v55, v28);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl( &dword_0,  v58,  v59,  "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput acquired dialog.",  v60,  2u);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v28);
    sub_9309C(v143, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr, v134);
    uint64_t v61 = v130;
    uint64_t v62 = v129;
    uint64_t v63 = v133;
    (*(void (**)(char *, void, void *))(v130 + 104))( v129,  enum case for AdditionalMetricsDescription.ModuleName.cuvs(_:),  v133);
    uint64_t v64 = v132;
    uint64_t v65 = v131;
    uint64_t v66 = v20;
    ((void (*)(char *, void, uint64_t))v132[13])( v131,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v20);
    uint64_t v67 = v122;
    uint64_t v68 = v121;
    uint64_t v69 = v124;
    (*(void (**)(char *, void, uint64_t))(v122 + 104))( v121,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v124);
    uint64_t v142 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v62,  v65,  v123,  v125,  v68,  v116,  0LL,  1LL);
    uint64_t v125 = v70;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    ((void (*)(char *, uint64_t))v64[1])(v65, v66);
    (*(void (**)(char *, void *))(v61 + 8))(v62, v63);
    uint64_t v71 = v135;
    uint64_t v72 = v135[6];
    uint64_t v131 = (char *)v135[7];
    uint64_t v132 = sub_6EA8(v135 + 3, v72);
    uint64_t v73 = enum case for ActivityType.resolveSlotUnsupported(_:);
    uint64_t v74 = type metadata accessor for ActivityType(0LL);
    uint64_t v75 = *(void *)(v74 - 8);
    uint64_t v76 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v136, v73, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0LL, 1LL, v74);
    uint64_t v77 = *(int *)(v126 + 48);
    uint64_t v133 = *(void **)(v120 + 16);
    uint64_t v78 = v120;
    uint64_t v79 = (uint64_t)v128;
    uint64_t v80 = v118;
    ((void (*)(char *, char *, uint64_t))v133)(v128, v127, v118);
    *(void *)(v79 + v7sub_6C3C(v0 + 7) = v119;
    uint64_t v81 = (uint64_t)v137;
    v117(v137, v79, v80);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v81, 0LL, 1LL, v80);
    uint64_t v82 = enum case for SiriKitReliabilityCodes.slotResolutionFailure(_:);
    uint64_t v83 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = (uint64_t)v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v138, v82, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v86 = v125;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v139,  v143,  v76,  v81,  v85,  v142,  v125,  0LL,  1,  v72,  v131);
    swift_bridgeObjectRelease(v86);
    sub_1F6CC(v85, &qword_2845A0);
    sub_1F6CC(v81, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v76, &qword_2845A8);
    sub_6EA8(v71 + 8, v71[11]);
    uint64_t v87 = *(int *)(v126 + 48);
    uint64_t v88 = (uint64_t)v127;
    ((void (*)(uint64_t, char *, uint64_t))v133)(v79, v127, v80);
    unint64_t v89 = v119;
    *(void *)(v79 + v8sub_6C3C(v0 + 7) = v119;
    uint64_t v90 = v89;
    uint64_t v91 = v134;
    sub_175200(v79, v89, v134, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v140, v141);

    sub_1F6CC(v91, (uint64_t *)&unk_286C50);
    sub_1F6CC(v88, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 8))(v79, v80);
  }

uint64_t sub_9468C( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v126 = a8;
  uint64_t v124 = a7;
  uint64_t v141 = a5;
  uint64_t v142 = a6;
  uint64_t v144 = a4;
  uint64_t v140 = a3;
  uint64_t v136 = a2;
  uint64_t v125 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v122 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v11);
  uint64_t v135 = (uint64_t)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v13);
  uint64_t v139 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v15);
  os_log_type_t v17 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v137 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v133 = *(void **)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v132 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = (void *)type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v131 = *(v134 - 1);
  __chkstk_darwin(v134);
  uint64_t v130 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_289340);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v129 = (char *)&v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v116 - v26;
  uint64_t v28 = type metadata accessor for Logger(0LL);
  uint64_t v143 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v116 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v116 - v32;
  uint64_t v34 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v34);
  id v36 = (uint64_t *)((char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v36);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v34);
  uint64_t v138 = v17;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v38 = *v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v28, (uint64_t)qword_2969C8);
    uint64_t v40 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v33, v39, v28);
    swift_errorRetain(v38);
    uint64_t v41 = swift_errorRetain(v38);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(8LL, -1LL);
      uint64_t v135 = v20;
      uint64_t v46 = (void *)v45;
      *(_DWORD *)uint64_t v44 = 138412290;
      swift_errorRetain(v38);
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError(v38);
      uint64_t v145 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
      *uint64_t v46 = v47;
      uint64_t v40 = v143;
      swift_errorRelease(v38);
      swift_errorRelease(v38);
      _os_log_impl( &dword_0,  v42,  v43,  "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput dialog provider failed with error: %@",  v44,  0xCu);
      uint64_t v48 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v46, 1LL, v48);
      id v49 = v46;
      uint64_t v20 = v135;
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v38);
      swift_errorRelease(v38);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v28);
    uint64_t v93 = v131;
    id v94 = v130;
    uint64_t v95 = v134;
    (*(void (**)(char *, void, void *))(v131 + 104))( v130,  enum case for AdditionalMetricsDescription.ModuleName.cuvs(_:),  v134);
    uint64_t v96 = v133;
    uint64_t v97 = v132;
    ((void (*)(char *, void, uint64_t))v133[13])( v132,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v20);
    swift_getErrorValue(v38, v148, v147);
    uint64_t v98 = Error.localizedDescription.getter(v147[1], v147[2]);
    uint64_t v100 = v99;
    uint64_t v143 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v94,  v97,  v98,  v99,  0LL,  1LL);
    uint64_t v102 = v101;
    __n128 v103 = swift_bridgeObjectRelease(v100);
    ((void (*)(char *, uint64_t, __n128))v96[1])(v97, v20, v103);
    (*(void (**)(char *, void *))(v93 + 8))(v94, v95);
    uint64_t v105 = v136[6];
    uint64_t v104 = v136[7];
    uint64_t v136 = sub_6EA8(v136 + 3, v105);
    uint64_t v106 = enum case for ActivityType.failed(_:);
    uint64_t v107 = type metadata accessor for ActivityType(0LL);
    uint64_t v108 = *(void *)(v107 - 8);
    uint64_t v109 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 104))(v137, v106, v107);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v109, 0LL, 1LL, v107);
    uint64_t v110 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v111 = (uint64_t)v138;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56LL))(v138, 1LL, 1LL, v110);
    uint64_t v112 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v113 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v114 = *(void *)(v113 - 8);
    uint64_t v115 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 104))(v139, v112, v113);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56))(v115, 0LL, 1LL, v113);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v140,  v144,  v109,  v111,  v115,  v143,  v102,  0LL,  1,  v105,  v104);
    swift_bridgeObjectRelease(v102);
    sub_1F6CC(v115, &qword_2845A0);
    sub_1F6CC(v111, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v109, &qword_2845A8);
    uint64_t v145 = v38;
    v146[32] = 1;
    swift_errorRetain(v38);
    v141(&v145);
    swift_errorRelease(v38);
    return sub_1F6CC((uint64_t)&v145, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v117 = a9;
    uint64_t v50 = *(int *)(v23 + 48);
    uint64_t v51 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v121 = *(void *)(v51 - 8);
    uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 32);
    uint64_t v119 = v51;
    uint64_t v118 = v52;
    ((void (*)(char *, uint64_t *))v52)(v27, v36);
    uint64_t v53 = *(void **)((char *)v36 + v50);
    *(void *)&v27[v50] = v53;
    uint64_t v54 = qword_283888;
    id v120 = v53;
    if (v54 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v127 = v23;
    uint64_t v128 = v27;
    uint64_t v55 = sub_6960(v28, (uint64_t)qword_2969C8);
    uint64_t v56 = v143;
    uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v143 + 16))(v31, v55, v28);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl( &dword_0,  v58,  v59,  "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput acquired dialog.",  v60,  2u);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v28);
    sub_9309C(v144, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr, v135);
    uint64_t v61 = v131;
    uint64_t v62 = v130;
    uint64_t v63 = v134;
    (*(void (**)(char *, void, void *))(v131 + 104))( v130,  enum case for AdditionalMetricsDescription.ModuleName.cuvs(_:),  v134);
    uint64_t v64 = v133;
    uint64_t v65 = v132;
    uint64_t v66 = v20;
    ((void (*)(char *, void, uint64_t))v133[13])( v132,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v20);
    uint64_t v67 = v123;
    uint64_t v68 = v122;
    uint64_t v69 = v125;
    (*(void (**)(char *, void, uint64_t))(v123 + 104))( v122,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v125);
    uint64_t v143 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v62,  v65,  v124,  v126,  v68,  v117,  0LL,  1LL);
    uint64_t v126 = v70;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    ((void (*)(char *, uint64_t))v64[1])(v65, v66);
    (*(void (**)(char *, void *))(v61 + 8))(v62, v63);
    uint64_t v71 = v136;
    uint64_t v72 = v136[6];
    uint64_t v132 = (char *)v136[7];
    uint64_t v133 = sub_6EA8(v136 + 3, v72);
    uint64_t v73 = enum case for ActivityType.resolveSlotUnsupported(_:);
    uint64_t v74 = type metadata accessor for ActivityType(0LL);
    uint64_t v75 = *(void *)(v74 - 8);
    uint64_t v76 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v137, v73, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0LL, 1LL, v74);
    uint64_t v77 = *(int *)(v127 + 48);
    uint64_t v134 = *(void **)(v121 + 16);
    uint64_t v78 = v121;
    uint64_t v79 = (uint64_t)v129;
    uint64_t v80 = v119;
    ((void (*)(char *, char *, uint64_t))v134)(v129, v128, v119);
    *(void *)(v79 + v7sub_6C3C(v0 + 7) = v120;
    uint64_t v81 = (uint64_t)v138;
    v118(v138, v79, v80);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v81, 0LL, 1LL, v80);
    uint64_t v82 = enum case for SiriKitReliabilityCodes.slotResolutionFailure(_:);
    uint64_t v83 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v139, v82, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v86 = v126;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v140,  v144,  v76,  v81,  v85,  v143,  v126,  0LL,  1,  v72,  v132);
    swift_bridgeObjectRelease(v86);
    sub_1F6CC(v85, &qword_2845A0);
    sub_1F6CC(v81, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v76, &qword_2845A8);
    sub_6EA8(v71 + 8, v71[11]);
    uint64_t v87 = *(int *)(v127 + 48);
    uint64_t v88 = (uint64_t)v128;
    ((void (*)(uint64_t, char *, uint64_t))v134)(v79, v128, v80);
    unint64_t v89 = v120;
    *(void *)(v79 + v8sub_6C3C(v0 + 7) = v120;
    uint64_t v90 = v89;
    uint64_t v91 = v135;
    sub_175200(v79, v89, v135, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v141, v142);

    sub_1F6CC(v91, (uint64_t *)&unk_286C50);
    sub_1F6CC(v88, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8))(v79, v80);
  }

uint64_t sub_95270(uint64_t a1)
{
  return sub_952D8( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_9468C);
}

uint64_t sub_95280()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));

  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_952CC(uint64_t a1)
{
  return sub_952D8( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_93AAC);
}

uint64_t sub_952D8( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
}

uint64_t sub_9530C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v81 = a4;
  uint64_t v82 = (uint8_t *)a5;
  uint64_t v73 = a3;
  uint64_t v80 = a1;
  uint64_t v75 = a6;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v78 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (void (*)(char *, void, uint64_t, uint64_t))type metadata accessor for NLContextUpdate(0LL);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v70 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v74 = (char *)&v66 - v14;
  __chkstk_darwin(v13);
  uint64_t v76 = (char *)&v66 - v15;
  uint64_t v16 = type metadata accessor for UUID(0LL);
  uint64_t v72 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v71 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = 0LL;
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v79 = v7;
  if (!v19)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    uint64_t v42 = a2;
LABEL_25:
    os_log_type_t v43 = v71;
    uint64_t v44 = UUID.init()(v17);
    UUID.uuidString.getter(v44);
    uint64_t v46 = v45;
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v43, v16);
    __chkstk_darwin(v47);
    uint64_t v48 = swift_bridgeObjectRetain(v42);
    id v49 = sub_9D064(v48, (void (*)(uint64_t, char *))sub_9A6A0);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v42);
    uint64_t v23 = (uint64_t)v76;
    sub_98160((uint64_t)v21, (uint64_t)v49);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v21);
    if (qword_283888 != -1) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }

  uint64_t v67 = v16;
  uint64_t v68 = v10;
  uint64_t v69 = v9;
  uint64_t v20 = *(void *)(type metadata accessor for INMediaDestination(0LL) - 8);
  uint64_t v9 = (void (*)(char *, void, uint64_t, uint64_t))(a2
                                                             + ((*(unsigned __int8 *)(v20 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)));
  uint64_t v10 = *(void *)(v20 + 72);
  swift_bridgeObjectRetain(a2);
  uint64_t v21 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v22 = a2;
    sub_9841C(v9, &v86, a2, v80, v81, (unint64_t)v82, &v85);
    uint64_t v23 = v85;
    uint64_t v24 = *(void *)(v85 + 16);
    int64_t v25 = v21[2];
    uint64_t v7 = v25 + v24;
    if (__OFADD__(v25, v24)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    if (isUniquelyReferenced_nonNull_native && v7 <= v21[3] >> 1)
    {
      if (*(void *)(v23 + 16)) {
        goto LABEL_14;
      }
    }

    else
    {
      if (v25 <= v7) {
        int64_t v27 = v25 + v24;
      }
      else {
        int64_t v27 = v25;
      }
      uint64_t v21 = (void *)sub_1F9D0(isUniquelyReferenced_nonNull_native, v27, 1, (unint64_t)v21);
      if (*(void *)(v23 + 16))
      {
LABEL_14:
        uint64_t v28 = v21[2];
        uint64_t v7 = (v21[3] >> 1) - v28;
        uint64_t v29 = type metadata accessor for DisplayHint(0LL);
        if (v7 < v24) {
          goto LABEL_32;
        }
        uint64_t v30 = *(void *)(v29 - 8);
        unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        uint64_t v32 = *(void *)(v30 + 72);
        uint64_t v33 = (char *)v21 + v31 + v32 * v28;
        unint64_t v34 = v23 + v31;
        uint64_t v35 = v32 * v24;
        id v36 = &v33[v35];
        unint64_t v37 = v34 + v35;
        if (v34 < (unint64_t)v36 && (unint64_t)v33 < v37)
        {
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
          __break(1u);
          return result;
        }

        swift_arrayInitWithCopy(v33);
        if (v24)
        {
          uint64_t v39 = v21[2];
          BOOL v40 = __OFADD__(v39, v24);
          uint64_t v41 = v39 + v24;
          if (v40) {
            goto LABEL_33;
          }
          v21[2] = v41;
        }

        goto LABEL_4;
      }
    }

    if (v24) {
      goto LABEL_31;
    }
LABEL_4:
    swift_bridgeObjectRelease(v23);
    uint64_t v9 = (void (*)(char *, void, uint64_t, uint64_t))((char *)v9 + v10);
    --v19;
    a2 = v22;
    if (!v19)
    {
      uint64_t v17 = swift_bridgeObjectRelease(v22);
      uint64_t v10 = v68;
      uint64_t v9 = v69;
      uint64_t v7 = v79;
      uint64_t v42 = v22;
      uint64_t v16 = v67;
      goto LABEL_25;
    }
  }

  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  swift_once(&qword_283888, sub_BFC5C);
LABEL_26:
  uint64_t v50 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v52 = v77;
  uint64_t v51 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v50, v7);
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t, void (*)(char *, void, uint64_t, uint64_t)))(v10 + 16);
  uint64_t v54 = v74;
  uint64_t v55 = v53(v74, v23, v9);
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v59 = swift_slowAlloc(32LL, -1LL);
    uint64_t v85 = v59;
    *(_DWORD *)uint64_t v58 = 136315138;
    uint64_t v82 = v58 + 4;
    uint64_t v60 = v70;
    v53(v70, (uint64_t)v54, v9);
    uint64_t v61 = String.init<A>(describing:)(v60, v9);
    unint64_t v63 = v62;
    uint64_t v83 = sub_6978(v61, v62, &v85);
    uint64_t v23 = (uint64_t)v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
    swift_bridgeObjectRelease(v63);
    (*(void (**)(char *, void (*)(char *, void, uint64_t, uint64_t)))(v10 + 8))(v54, v9);
    _os_log_impl( &dword_0,  v56,  v57,  "CommonNLContextProvider#makeDisambiguationContextForMediaDestination for update: %s",  v58,  0xCu);
    swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1LL, -1LL);
    swift_slowDealloc(v58, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
  }

  else
  {
    (*(void (**)(char *, void (*)(char *, void, uint64_t, uint64_t)))(v10 + 8))(v54, v9);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v79);
  }

  uint64_t v64 = v75;
  (*(void (**)(uint64_t, uint64_t, void (*)(char *, void, uint64_t, uint64_t)))(v10 + 32))( v75,  v23,  v9);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(v10 + 56))(v64, 0LL, 1LL, v9);
}

uint64_t sub_958E4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v90 = a4;
  uint64_t v91 = (uint8_t *)a5;
  uint64_t v79 = a3;
  uint64_t v89 = a1;
  uint64_t v83 = a6;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v86 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v10 = *(char **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v75 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v75 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v75 - v16;
  uint64_t v18 = type metadata accessor for UUID(0LL);
  uint64_t v77 = *(void *)(v18 - 8);
  uint64_t v78 = v18;
  __chkstk_darwin(v18);
  uint64_t v76 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  unint64_t v20 = static INMediaItem.unique(_:)(a2);
  uint64_t v21 = v20;
  uint64_t v94 = 0LL;
  if (v20 >> 62) {
    goto LABEL_41;
  }
  uint64_t v22 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v20);
LABEL_3:
  uint64_t v80 = v15;
  uint64_t v81 = v10;
  uint64_t v84 = v17;
  uint64_t v87 = v7;
  uint64_t v82 = v9;
  uint64_t v7 = 0LL;
  if (v22)
  {
    unint64_t v88 = v21 & 0xC000000000000001LL;
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v24 = 4LL;
    while (1)
    {
      uint64_t v17 = (char *)(v24 - 4);
      if (v88) {
        int64_t v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v21);
      }
      else {
        int64_t v25 = (char *)*(id *)(v21 + 8 * v24);
      }
      uint64_t v10 = v25;
      uint64_t v9 = v24 - 3;
      if (__OFADD__(v17, 1LL))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        if (v21 < 0) {
          uint64_t v70 = v21;
        }
        else {
          uint64_t v70 = v21 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v21);
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v70);
        goto LABEL_3;
      }

      uint64_t v93 = v25;
      sub_96854((void **)&v93, &v94, v21, v89, v90, (uint64_t)v91, &v92);

      uint64_t v17 = (char *)v92;
      uint64_t v10 = *(char **)(v92 + 16);
      int64_t v26 = v23[2];
      uint64_t v15 = &v10[v26];
      if (__OFADD__(v26, v10)) {
        goto LABEL_37;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
      if (isUniquelyReferenced_nonNull_native && (uint64_t)v15 <= v23[3] >> 1)
      {
        if (*((void *)v17 + 2)) {
          goto LABEL_20;
        }
      }

      else
      {
        else {
          int64_t v28 = v26;
        }
        uint64_t v23 = (void *)sub_1F9D0(isUniquelyReferenced_nonNull_native, v28, 1, (unint64_t)v23);
        if (*((void *)v17 + 2))
        {
LABEL_20:
          uint64_t v29 = v23[2];
          uint64_t v15 = (char *)((v23[3] >> 1) - v29);
          uint64_t v30 = type metadata accessor for DisplayHint(0LL);
          uint64_t v31 = *(void *)(v30 - 8);
          unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
          uint64_t v33 = *(void *)(v31 + 72);
          unint64_t v34 = (char *)v23 + v32 + v33 * v29;
          uint64_t v35 = &v17[v32];
          uint64_t v36 = v33 * (void)v10;
          unint64_t v37 = &v34[v36];
          uint64_t v38 = &v35[v36];
          if (v35 < v37 && v34 < v38)
          {
            LOBYTE(v72) = 2;
            uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v72,  1092LL,  0);
            __break(1u);
            return result;
          }

          swift_arrayInitWithCopy(v34);
          if (v10)
          {
            uint64_t v40 = v23[2];
            BOOL v41 = __OFADD__(v40, v10);
            uint64_t v42 = &v10[v40];
            if (v41) {
              goto LABEL_40;
            }
            v23[2] = v42;
          }

          goto LABEL_6;
        }
      }

      if (v10) {
        goto LABEL_38;
      }
LABEL_6:
      swift_bridgeObjectRelease(v17);
      ++v24;
      if (v9 == v22) {
        goto LABEL_30;
      }
    }
  }

  uint64_t v23 = _swiftEmptyArrayStorage;
LABEL_30:
  uint64_t v43 = swift_bridgeObjectRelease(v21);
  uint64_t v44 = v76;
  uint64_t v45 = UUID.init()(v43);
  uint64_t v46 = UUID.uuidString.getter(v45);
  uint64_t v48 = v47;
  uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v44, v78);
  __chkstk_darwin(v49);
  uint64_t v72 = v46;
  uint64_t v73 = v48;
  uint64_t v74 = v79;
  uint64_t v50 = sub_9D59C(v21, (void (*)(uint64_t, id))sub_9E544, (uint64_t)(&v75 - 6));
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v21);
  uint64_t v51 = v84;
  sub_98160((uint64_t)v23, (uint64_t)v50);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v23);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v52 = v87;
  uint64_t v53 = sub_6960(v87, (uint64_t)qword_2969C8);
  uint64_t v55 = v85;
  uint64_t v54 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v53, v52);
  uint64_t v56 = v80;
  os_log_type_t v57 = v81;
  uint64_t v58 = (uint64_t (*)(char *, char *, uint64_t))*((void *)v81 + 2);
  uint64_t v59 = v82;
  uint64_t v60 = v58(v80, v51, v82);
  uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
  os_log_type_t v62 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v61, v62))
  {
    unint64_t v63 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v64 = (char *)swift_slowAlloc(32LL, -1LL);
    uint64_t v93 = v64;
    *(_DWORD *)unint64_t v63 = 136315138;
    uint64_t v91 = v63 + 4;
    uint64_t v65 = v75;
    v58(v75, v56, v59);
    uint64_t v66 = String.init<A>(describing:)(v65, v59);
    unint64_t v68 = v67;
    uint64_t v92 = sub_6978(v66, v67, (uint64_t *)&v93);
    uint64_t v51 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_bridgeObjectRelease(v68);
    (*((void (**)(char *, uint64_t))v57 + 1))(v56, v59);
    _os_log_impl( &dword_0,  v61,  v62,  "CommonNLContextProvider#makeDisambiguationContextForMediaItems for update: %s",  v63,  0xCu);
    swift_arrayDestroy(v64, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v64, -1LL, -1LL);
    swift_slowDealloc(v63, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  }

  else
  {
    (*((void (**)(char *, uint64_t))v57 + 1))(v56, v59);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v87);
  }

  uint64_t v69 = v83;
  (*((void (**)(uint64_t, char *, uint64_t))v57 + 4))(v83, v51, v59);
  return (*((uint64_t (**)(uint64_t, void, uint64_t, uint64_t))v57 + 7))(v69, 0LL, 1LL, v59);
}

uint64_t sub_95F14()
{
  uint64_t v75 = type metadata accessor for UUID(0LL);
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v70 = (char *)&v61 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v1 = sub_6C5C(&qword_286110);
  __chkstk_darwin(v1);
  uint64_t v66 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for Siri_Nlu_External_UUID(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  uint64_t v68 = v4;
  __chkstk_darwin(v3);
  uint64_t v74 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for Siri_Nlu_External_SystemDialogAct(0LL);
  uint64_t v71 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Siri_Nlu_External_SystemOffered(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  uint64_t v64 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v65 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  os_log_type_t v62 = (char *)&v61 - v12;
  uint64_t v13 = type metadata accessor for Siri_Nlu_External_UserAccepted(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v61 - v21;
  sub_96388();
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  uint64_t v23 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  uint64_t v24 = MachineUtteranceBuilder.init()();
  uint64_t v25 = App.appIdentifier.getter(v24);
  if (v26) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = 0LL;
  }
  if (v26) {
    unint64_t v28 = v26;
  }
  else {
    unint64_t v28 = 0xE000000000000000LL;
  }
  uint64_t v29 = dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)( 0x656D614E707061LL,  0xE700000000000000LL,  v27,  v28);
  swift_bridgeObjectRelease(v28);
  uint64_t v30 = swift_release(v24);
  uint64_t v31 = dispatch thunk of MachineUtteranceBuilder.build()(v30);
  uint64_t v33 = v32;
  swift_release(v29);
  uint64_t v34 = v33;
  uint64_t v36 = v62;
  uint64_t v35 = v63;
  uint64_t v37 = NLContextUpdate.nlInput.setter(v31, v34);
  uint64_t v38 = Siri_Nlu_External_UserDialogAct.init()(v37);
  Siri_Nlu_External_UserAccepted.init()(v38);
  uint64_t v39 = v15;
  uint64_t v40 = (uint64_t)v66;
  uint64_t v41 = Siri_Nlu_External_UserDialogAct.accepted.setter(v39);
  Siri_Nlu_External_SystemOffered.init()(v41);
  uint64_t v69 = v17;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v72 = v16;
  v42(v20, v22, v16);
  uint64_t v43 = v20;
  uint64_t v44 = v64;
  uint64_t v45 = Siri_Nlu_External_SystemOffered.offeredAct.setter(v43);
  Siri_Nlu_External_SystemDialogAct.init()(v45);
  uint64_t v46 = v65;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v65, v36, v35);
  uint64_t v47 = v67;
  uint64_t v48 = Siri_Nlu_External_SystemDialogAct.offered.setter(v46);
  uint64_t v49 = v70;
  UUID.init()(v48);
  static ConversionUtils.convertUuidToProto(uuid:)(v49);
  uint64_t v50 = v49;
  uint64_t v51 = v68;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v75);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v40, 1LL, v47) == 1)
  {
    uint64_t v52 = v74;
    Siri_Nlu_External_UUID.init()();
    sub_1F6CC(v40, &qword_286110);
  }

  else
  {
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
    uint64_t v52 = v74;
    v53(v74, v40, v47);
  }

  Siri_Nlu_External_SystemDialogAct.id.setter(v52);
  uint64_t v54 = sub_6C5C(&qword_286118);
  uint64_t v55 = v71;
  uint64_t v56 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v57 = (v56 + 32) & ~v56;
  uint64_t v58 = swift_allocObject(v54, v57 + *(void *)(v71 + 72), v56 | 7);
  *(_OWORD *)(v58 + 16) = xmmword_214510;
  uint64_t v59 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v58 + v57, v7, v76);
  NLContextUpdate.nluSystemDialogActs.setter(v58);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v7, v59);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v22, v72);
}

uint64_t sub_96388()
{
  uint64_t v0 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v48 = *(void *)(v0 - 8);
  uint64_t v49 = v0;
  __chkstk_darwin(v0);
  uint64_t v47 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = sub_6C5C(&qword_285F70);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  NLContextUpdate.init()(v3);
  unint64_t v6 = sub_A89B0(0);
  NLContextUpdate.weightedPromptTargetDomain.setter(v6);
  uint64_t v46 = sub_6C5C(&qword_284018);
  uint64_t v7 = swift_allocObject(v46, 96LL, 7LL);
  *(_OWORD *)(v7 + 16) = xmmword_214FF0;
  Swift::String v8 = String.uppercased()();
  Swift::String v54 = v8;
  uint64_t v52 = 32LL;
  unint64_t v53 = 0xE100000000000000LL;
  uint64_t v50 = 95LL;
  unint64_t v51 = 0xE100000000000000LL;
  unint64_t v9 = sub_6D68();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v52,  &v50,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v9,  v9,  v9);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease(v8._object);
  v54._countAndFlagsBits = sub_A89B0(1u);
  v54._object = v12;
  v13._countAndFlagsBits = 0x2E65756C61562ELL;
  v13._object = (void *)0xE700000000000000LL;
  String.append(_:)(v13);
  Swift::String v14 = String.uppercased()();
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(object);
  uint64_t v16 = v54._object;
  *(void *)(v7 + 32) = v54._countAndFlagsBits;
  *(void *)(v7 + 40) = v16;
  Swift::String v17 = String.uppercased()();
  Swift::String v54 = v17;
  uint64_t v52 = 32LL;
  unint64_t v53 = 0xE100000000000000LL;
  uint64_t v50 = 95LL;
  unint64_t v51 = 0xE100000000000000LL;
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v52,  &v50,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v9,  v9,  v9);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease(v17._object);
  v54._countAndFlagsBits = sub_A89B0(1u);
  v54._object = v20;
  v21._countAndFlagsBits = 0x2E65756C61562ELL;
  v21._object = (void *)0xE700000000000000LL;
  String.append(_:)(v21);
  Swift::String v22 = String.uppercased()();
  uint64_t v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v23);
  uint64_t v24 = v54._object;
  *(void *)(v7 + 4sub_6C3C(v0 + 8) = v54._countAndFlagsBits;
  *(void *)(v7 + 56) = v24;
  Swift::String v25 = String.uppercased()();
  Swift::String v54 = v25;
  uint64_t v52 = 32LL;
  unint64_t v53 = 0xE100000000000000LL;
  uint64_t v50 = 95LL;
  unint64_t v51 = 0xE100000000000000LL;
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v52,  &v50,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v9,  v9,  v9);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease(v25._object);
  v54._countAndFlagsBits = sub_A89B0(1u);
  v54._object = v28;
  v29._countAndFlagsBits = 0x2E65756C61562ELL;
  v29._object = (void *)0xE700000000000000LL;
  String.append(_:)(v29);
  Swift::String v30 = String.uppercased()();
  uint64_t v31 = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v31);
  uint64_t v32 = v54._object;
  *(void *)(v7 + 64) = v54._countAndFlagsBits;
  *(void *)(v7 + 72) = v32;
  Swift::String v33 = String.uppercased()();
  Swift::String v54 = v33;
  uint64_t v52 = 32LL;
  unint64_t v53 = 0xE100000000000000LL;
  uint64_t v50 = 95LL;
  unint64_t v51 = 0xE100000000000000LL;
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v52,  &v50,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v9,  v9,  v9);
  uint64_t v35 = v34;
  swift_bridgeObjectRelease(v33._object);
  v54._countAndFlagsBits = sub_A89B0(1u);
  v54._object = v36;
  v37._countAndFlagsBits = 0x2E65756C61562ELL;
  v37._object = (void *)0xE700000000000000LL;
  String.append(_:)(v37);
  Swift::String v38 = String.uppercased()();
  uint64_t v39 = v38._object;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v39);
  uint64_t v40 = v54._object;
  *(void *)(v7 + 80) = v54._countAndFlagsBits;
  *(void *)(v7 + 8sub_6C3C(v0 + 8) = v40;
  NLContextUpdate.weightedPromptResponseOptions.setter(v7);
  uint64_t v41 = swift_allocObject(v46, 48LL, 7LL);
  *(_OWORD *)(v41 + 16) = xmmword_214510;
  *(void *)(v41 + 32) = sub_A89B0(1u);
  *(void *)(v41 + 40) = v42;
  NLContextUpdate.weightedPromptResponseTargets.setter(v41);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  uint64_t v43 = v47;
  (*(void (**)(char *, void, uint64_t))(v48 + 104))( v47,  enum case for PommesContext.Source.pluginDefined(_:),  v49);
  PommesContext.init(source:domain:listenAfterSpeaking:)(v43, 0x616964656DLL, 0xE500000000000000LL, 1LL);
  uint64_t v44 = type metadata accessor for PommesContext(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))(v5, 0LL, 1LL, v44);
  return NLContextUpdate.pommesContext.setter(v5);
}

uint64_t sub_96854@<X0>( void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v117 = a6;
  uint64_t v116 = a5;
  uint64_t v118 = a4;
  uint64_t v123 = a2;
  id v120 = a7;
  uint64_t v112 = type metadata accessor for Logger(0LL);
  uint64_t v111 = *(void (***)(void *, uint64_t))(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v119 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2860B0);
  __chkstk_darwin(v10);
  uint64_t v125 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = type metadata accessor for DisplayHint(0LL);
  uint64_t v122 = *(void *)(v126 - 8);
  uint64_t v12 = __chkstk_darwin(v126);
  uint64_t v110 = (void (**)(void *, uint64_t))((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v115 = (char *)&v109 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v113 = (char *)&v109 - v17;
  __chkstk_darwin(v16);
  uint64_t v121 = (char *)&v109 - v18;
  uint64_t v19 = type metadata accessor for SemanticValue(0LL);
  uint64_t v127 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v109 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v114 = (char *)&v109 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v109 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v124 = (char *)&v109 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (void (**)(void *, uint64_t))((char *)&v109 - v30);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v109 - v33;
  uint64_t v35 = *a1;
  uint64_t v133 = _swiftEmptyArrayStorage;
  SemanticValue.init()(v32);
  SemanticValue.label.setter(0x6449616964656DLL, 0xE700000000000000LL);
  id v36 = [v35 identifier];
  if (v36)
  {
    Swift::String v37 = v36;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    unint64_t v40 = v39;
  }

  else
  {
    uint64_t v38 = 0LL;
    unint64_t v40 = 0xE000000000000000LL;
  }

  SemanticValue.string.setter(v38, v40);
  unint64_t v41 = sub_A89B0(4u);
  SemanticValue.nodeClass.setter(v41);
  uint64_t v42 = *v123;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v108 = a3;
    }
    else {
      uint64_t v108 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter(v108);
    swift_bridgeObjectRelease(a3);
  }

  else
  {
    uint64_t v43 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v44 = sub_973E8(v42, v43, (uint64_t)v34, v116);
  sub_97970((uint64_t)v44);
  id v45 = [v35 title];
  if (!v45) {
    goto LABEL_11;
  }
  uint64_t v46 = v45;
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  uint64_t v49 = v48;

  SemanticValue.init()(v50);
  SemanticValue.label.setter(0x616C50616964656DLL, 0xEF6D657449726579LL);
  SemanticValue.string.setter(v47, v49);
  unint64_t v51 = sub_A89B0(2u);
  SemanticValue.nodeClass.setter(v51);
  uint64_t v52 = v127;
  unint64_t v53 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
  Swift::String v54 = v125;
  v53(v125, v34, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v54, 0LL, 1LL, v19);
  uint64_t v55 = v124;
  v53(v124, (char *)v31, v19);
  DisplayHint.init(idValue:displayValue:)(v54, v55);
  unint64_t v56 = (unint64_t)v133;
  if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0) {
    goto LABEL_43;
  }
  while (1)
  {
    unint64_t v58 = *(void *)(v56 + 16);
    unint64_t v57 = *(void *)(v56 + 24);
    if (v58 >= v57 >> 1) {
      unint64_t v56 = sub_1F9D0(v57 > 1, v58 + 1, 1, v56);
    }
    *(void *)(v56 + 16) = v58 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v122 + 32))( v56 + ((*(unsigned __int8 *)(v122 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))
    + *(void *)(v122 + 72) * v58,
      v121,
      v126);
    uint64_t v133 = (void *)v56;
    (*(void (**)(char *, uint64_t))(v127 + 8))((char *)v31, v19);
LABEL_11:
    id v59 = [v35 artist];
    uint64_t v35 = v119;
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      uint64_t v63 = v62;

      SemanticValue.init()(v64);
      SemanticValue.label.setter(0x747241636973756DLL, 0xEB00000000747369LL);
      SemanticValue.string.setter(v61, v63);
      unint64_t v65 = sub_A89B0(3u);
      SemanticValue.nodeClass.setter(v65);
      uint64_t v66 = v127;
      uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
      uint64_t v68 = v125;
      v67(v125, v34, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v68, 0LL, 1LL, v19);
      uint64_t v69 = v124;
      v67(v124, v26, v19);
      uint64_t v70 = v113;
      DisplayHint.init(idValue:displayValue:)(v68, v69);
      unint64_t v71 = (unint64_t)v133;
      if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0) {
        unint64_t v71 = sub_1F9D0(0, *(void *)(v71 + 16) + 1LL, 1, v71);
      }
      unint64_t v73 = *(void *)(v71 + 16);
      unint64_t v72 = *(void *)(v71 + 24);
      if (v73 >= v72 >> 1) {
        unint64_t v71 = sub_1F9D0(v72 > 1, v73 + 1, 1, v71);
      }
      *(void *)(v71 + 16) = v73 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v122 + 32))( v71 + ((*(unsigned __int8 *)(v122 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))
      + *(void *)(v122 + 72) * v73,
        v70,
        v126);
      uint64_t v133 = (void *)v71;
      (*(void (**)(char *, uint64_t))(v127 + 8))(v26, v19);
    }

    uint64_t v74 = static BundleIdentifiers.localBundleIdentifier(for:)(v118);
    if (v75)
    {
      uint64_t v76 = v74;
      uint64_t v77 = v75;
      type metadata accessor for App(0LL);
      swift_bridgeObjectRetain(v77);
      unint64_t v78 = App.__allocating_init(appIdentifier:)(v76, v77);
      uint64_t v79 = type metadata accessor for AppInfoBuilder();
      uint64_t inited = swift_initStackObject(v79, v131);
      if (qword_2838F0 != -1) {
        swift_once(&qword_2838F0, sub_14EB48);
      }
      sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v128);
      sub_9B2A8(v78, inited, &v128, (uint64_t)_swiftEmptyArrayStorage, &v132);
      uint64_t v81 = sub_9D390((uint64_t)&v132, (uint64_t)&v128);
      if (*((void *)&v128 + 1))
      {
        uint64_t v82 = v129;
        uint64_t v83 = v130;
        uint64_t v84 = v114;
        SemanticValue.init()(v81);
        SemanticValue.label.setter(0x656D614E707061LL, 0xE700000000000000LL);
        swift_bridgeObjectRetain(v83);
        SemanticValue.string.setter(v82, v83);
        unint64_t v85 = sub_A89B0(6u);
        SemanticValue.nodeClass.setter(v85);
        uint64_t v86 = v127;
        uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
        unint64_t v88 = v125;
        v87(v125, v34, v19);
        uint64_t v121 = *(char **)(v86 + 56);
        ((void (*)(char *, void, uint64_t, uint64_t))v121)(v88, 0LL, 1LL, v19);
        uint64_t v89 = v124;
        v87(v124, v84, v19);
        DisplayHint.init(idValue:displayValue:)(v88, v89);
        unint64_t v90 = (unint64_t)v133;
        if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0) {
          unint64_t v90 = sub_1F9D0(0, *(void *)(v90 + 16) + 1LL, 1, v90);
        }
        unint64_t v92 = *(void *)(v90 + 16);
        unint64_t v91 = *(void *)(v90 + 24);
        if (v92 >= v91 >> 1) {
          unint64_t v90 = sub_1F9D0(v91 > 1, v92 + 1, 1, v90);
        }
        *(void *)(v90 + 16) = v92 + 1;
        uint64_t v119 = (char *)((*(unsigned __int8 *)(v122 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
        uint64_t v26 = *(char **)(v122 + 72);
        uint64_t v122 = *(void *)(v122 + 32);
        ((void (*)(char *, char *, uint64_t))v122)(&v119[v90 + (void)v26 * v92], v115, v126);
        uint64_t v133 = (void *)v90;
        uint64_t v93 = *(uint64_t (**)(char *, uint64_t))(v127 + 8);
        uint64_t v94 = v93(v114, v19);
        unint64_t v56 = (unint64_t)v109;
        SemanticValue.init()(v94);
        SemanticValue.label.setter(0x746163696C707061LL, 0xED000064496E6F69LL);
        SemanticValue.string.setter(v76, v77);
        unint64_t v95 = sub_A89B0(5u);
        SemanticValue.nodeClass.setter(v95);
        uint64_t v96 = v125;
        v87(v125, v34, v19);
        ((void (*)(char *, void, uint64_t, uint64_t))v121)(v96, 0LL, 1LL, v19);
        uint64_t v97 = v124;
        v87(v124, (char *)v56, v19);
        uint64_t v31 = v110;
        DisplayHint.init(idValue:displayValue:)(v96, v97);
        unint64_t v98 = (unint64_t)v133;
        if ((swift_isUniquelyReferenced_nonNull_native(v133) & 1) == 0) {
          unint64_t v98 = sub_1F9D0(0, *(void *)(v98 + 16) + 1LL, 1, v98);
        }
        unint64_t v100 = *(void *)(v98 + 16);
        unint64_t v99 = *(void *)(v98 + 24);
        uint64_t v35 = (void *)(v100 + 1);
        if (v100 >= v99 >> 1) {
          unint64_t v98 = sub_1F9D0(v99 > 1, v100 + 1, 1, v98);
        }
        *(void *)(v98 + 16) = v35;
        ((void (*)(char *, void (**)(void *, uint64_t), uint64_t))v122)( &v119[v98 + v100 * (void)v26],  v31,  v126);
        sub_9D3D8((uint64_t)&v132);
        uint64_t v133 = (void *)v98;
        v93((char *)v56, v19);
        goto LABEL_36;
      }

      swift_bridgeObjectRelease(v77);
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v101 = v112;
    uint64_t v102 = sub_6960(v112, (uint64_t)qword_2969C8);
    uint64_t v31 = v111;
    uint64_t v103 = ((uint64_t (*)(void *, uint64_t, uint64_t))v111[2])(v35, v102, v101);
    uint64_t v104 = (os_log_s *)Logger.logObject.getter(v103);
    os_log_type_t v105 = static os_log_type_t.error.getter();
    unint64_t v56 = v105;
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v106 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v106 = 0;
      _os_log_impl( &dword_0,  v104,  (os_log_type_t)v56,  "CommonNLContextProvider#makeDisambiguationContextForMediaItems unexpected missing bundle identifier from launchId",  v106,  2u);
      swift_slowDealloc(v106, -1LL, -1LL);
    }

    v31[1](v35, v101);
    uint64_t v93 = *(uint64_t (**)(char *, uint64_t))(v127 + 8);
LABEL_36:
    uint64_t result = v93(v34, v19);
    *id v120 = v133;
    if (!__OFADD__(*v123, 1LL)) {
      break;
    }
    __break(1u);
LABEL_43:
    unint64_t v56 = sub_1F9D0(0, *(void *)(v56 + 16) + 1LL, 1, v56);
  }

  ++*v123;
  return result;
}

void *sub_973E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v8 = type metadata accessor for DisplayHint(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (unint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v35 = (char *)&v32 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v32 - v18;
  if (qword_283868 != -1) {
    swift_once(&qword_283868, sub_A8B20);
  }
  unint64_t v20 = qword_2968A0;
  if (*(void *)(qword_2968A0 + 16) <= a1)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }

  if (a1 < 0) {
    goto LABEL_29;
  }
  uint64_t v33 = (char *)v8;
  uint64_t v34 = (char *)v12;
  uint64_t v21 = qword_2968A0 + 16 * a1;
  uint64_t v22 = *(void *)(v21 + 32);
  uint64_t v23 = *(void *)(v21 + 40);
  swift_bridgeObjectRetain(v23);
  sub_9A208(v36, v22, v23);
  swift_bridgeObjectRelease(v23);
  uint64_t v5 = (void *)sub_1F9D0(0, 1LL, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v12 = v5[2];
  unint64_t v20 = v5[3];
  int64_t v4 = v12 + 1;
  if (v12 >= v20 >> 1) {
    goto LABEL_30;
  }
  while (1)
  {
    v5[2] = v4;
    uint64_t v24 = v19;
    uint64_t v19 = v33;
    (*(void (**)(unint64_t, char *, char *))(v9 + 32))( (unint64_t)v5 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v12,
      v24,
      v33);
    unint64_t v12 = (unint64_t)v34;
    uint64_t v8 = (uint64_t)v19;
LABEL_8:
    unint64_t v20 = a2 - 3;
    if (!__OFSUB__(a2, 3LL)) {
      break;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v5 = (void *)sub_1F9D0(v20 > 1, v4, 1, (unint64_t)v5);
  }

  if (v20 == a1)
  {
    sub_9A208(v36, 0x4C6F546472696874LL, 0xEB00000000747361LL);
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0) {
      uint64_t v5 = (void *)sub_1F9D0(0, v5[2] + 1LL, 1, (unint64_t)v5);
    }
    unint64_t v26 = v5[2];
    unint64_t v25 = v5[3];
    if (v26 >= v25 >> 1) {
      uint64_t v5 = (void *)sub_1F9D0(v25 > 1, v26 + 1, 1, (unint64_t)v5);
    }
    v5[2] = v26 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))( (unint64_t)v5 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v26,
      v17,
      v8);
  }

  if (a2 - 2 == a1)
  {
    sub_9A208(v36, 0x6F54646E6F636573LL, 0xEC0000007473614CLL);
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0) {
      uint64_t v5 = (void *)sub_1F9D0(0, v5[2] + 1LL, 1, (unint64_t)v5);
    }
    unint64_t v28 = v5[2];
    unint64_t v27 = v5[3];
    if (v28 >= v27 >> 1) {
      uint64_t v5 = (void *)sub_1F9D0(v27 > 1, v28 + 1, 1, (unint64_t)v5);
    }
    v5[2] = v28 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))( (unint64_t)v5 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v28,
      v35,
      v8);
  }

  if (a2 - 1 == a1)
  {
    sub_9A208(v36, 1953718636LL, 0xE400000000000000LL);
    if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0) {
      uint64_t v5 = (void *)sub_1F9D0(0, v5[2] + 1LL, 1, (unint64_t)v5);
    }
    unint64_t v30 = v5[2];
    unint64_t v29 = v5[3];
    if (v30 >= v29 >> 1) {
      uint64_t v5 = (void *)sub_1F9D0(v29 > 1, v30 + 1, 1, (unint64_t)v5);
    }
    v5[2] = v30 + 1;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))( (unint64_t)v5 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v30,
      v12,
      v8);
  }

  return v5;
}

uint64_t sub_97814(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = (void *)*v1;
  int64_t v4 = *(void *)(*v1 + 16LL);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }

  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1FE98(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  unint64_t v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease(a1);
    *uint64_t v1 = v3;
    return result;
  }

LABEL_23:
  __break(1u);
LABEL_24:
  char v17 = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v17,  1092LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
LABEL_24:
  unint64_t v26 = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v26,  1092LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
LABEL_24:
  uint64_t v16 = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v16,  1092LL,  0);
  __break(1u);
  return result;
}

    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8LL));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }

  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }

    uint64_t v9 = (v15 - 1) & v15;
    BOOL v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    char v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    uint64_t result = Hasher._finalize()();
    unint64_t v20 = -1LL << *((_BYTE *)v8 + 32);
    uint64_t v21 = result & ~v20;
    uint64_t v22 = v21 >> 6;
    if (((-1LL << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      uint64_t v23 = __clz(__rbit64((-1LL << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        unint64_t v26 = v22 == v25;
        if (v22 == v25) {
          uint64_t v22 = 0LL;
        }
        v24 |= v26;
        unint64_t v27 = *(void *)(v11 + 8 * v22);
      }

      while (v27 == -1);
      uint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }

    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    unint64_t v28 = (void *)(v8[6] + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1LL))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (!v5) {
      goto LABEL_36;
    }
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  int64_t v15 = a1[v16];
  if (v15)
  {
    unint64_t v10 = v16;
    goto LABEL_23;
  }

  while (1)
  {
    unint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    int64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    unint64_t v58 = sub_6960(v17, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v28, v58, v17);
    id v59 = swift_bridgeObjectRetain(a6);
    uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
    uint64_t v61 = static os_log_type_t.default.getter();
    uint64_t v62 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v63 = swift_slowAlloc(22LL, -1LL);
      uint64_t v121 = swift_slowAlloc(64LL, -1LL);
      *(void *)&v130[0] = v121;
      *(_DWORD *)uint64_t v63 = 136315394;
      LODWORD(v120) = v62;
      swift_bridgeObjectRetain(a6);
      *(void *)&v129[0] = sub_6978(v46, a6, (uint64_t *)v130);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
      uint64_t v64 = swift_bridgeObjectRelease_n(a6, 3LL);
      *(_WORD *)(v63 + sub_6C3C(v0 + 12) = 2080;
      unint64_t v65 = static BundleIdentifiers.music.getter(v64);
      uint64_t v67 = v66;
      *(void *)&v129[0] = sub_6978(v65, v66, (uint64_t *)v130);
      uint64_t v46 = v126;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
      swift_bridgeObjectRelease(v67);
      _os_log_impl( &dword_0,  v60,  (os_log_type_t)v120,  "UpdateMediaIntent#amend bundleId is AirPlay and representedBundleId is Apple Music: %s, replacing with music: %s",  (uint8_t *)v63,  0x16u);
      uint64_t v68 = v121;
      swift_arrayDestroy(v121, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1LL, -1LL);
      swift_slowDealloc(v63, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a6, 2LL);
    }

    uint64_t v69 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v28, v17);
    uint64_t v70 = static BundleIdentifiers.music.getter(v69);
    unint64_t v71 = *(void *)(v30 + 24);
    *(void *)(v30 + 16) = v70;
    *(void *)(v30 + 24) = v72;
    unint64_t v73 = v71;
LABEL_29:
    swift_bridgeObjectRelease(v73);
    goto LABEL_30;
  }

  swift_release(v30);
LABEL_5:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v32 = sub_6960(v17, (uint64_t)qword_2969C8);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v32, v17);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  uint64_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "UpdateMediaIntent#amend failed to get bundleId for now playing app", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  return v127(v37);
}

          __break(1u);
          return;
        }
      }

      else
      {
        uint64_t v12 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
        swift_bridgeObjectRetain(a3);
        if (v12) {
          goto LABEL_5;
        }
      }

      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(a3);
    }
  }

uint64_t sub_97970(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }

  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

  if (v4 <= v5) {
    int64_t v24 = v4 + v2;
  }
  else {
    int64_t v24 = v4;
  }
  unint64_t v3 = sub_1F9D0(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = type metadata accessor for DisplayHint(0LL);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 72);
  unint64_t v15 = v3 + v13 + v14 * v9;
  unint64_t v16 = a1 + v13;
  uint64_t v17 = v14 * v8;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  uint64_t v21 = *(void *)(v3 + 16);
  BOOL v22 = __OFADD__(v21, v8);
  uint64_t v23 = v21 + v8;
  if (!v22)
  {
    *(void *)(v3 + 16) = v23;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease(a1);
    *uint64_t v1 = v3;
    return result;
  }

uint64_t sub_97AE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = (void *)*v1;
  int64_t v4 = *(void *)(*v1 + 16LL);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1FC6C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

uint64_t sub_97C34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v9 = a4 >> 1;
  uint64_t v10 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v6 = a3;
  uint64_t v7 = a2;
  uint64_t v4 = a1;
  uint64_t v8 = *v5;
  uint64_t v11 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
  uint64_t v12 = v11 + v10;
  if (!__OFADD__(v11, v10)) {
    goto LABEL_4;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t v14 = 1LL;
LABEL_19:
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0) {
      uint64_t v27 = v8;
    }
    else {
      uint64_t v27 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v8);
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v8);
  }

  else
  {
    uint64_t v18 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v18 <= v12) {
    uint64_t v18 = v12;
  }
  swift_bridgeObjectRetain(v8);
  uint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1LL, v8);
  swift_bridgeObjectRelease(*v5);
  *int64_t v5 = v8;
  uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8LL;
  if (v9 == v6)
  {
    while (v10 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      if (v8 < 0) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v8);
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v8);
      uint64_t v12 = v17 + v10;
      if (__OFADD__(v17, v10)) {
        goto LABEL_17;
      }
LABEL_4:
      uint64_t v8 = *v5;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
      *int64_t v5 = v8;
      uint64_t v14 = 0LL;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000LL) != 0) {
        goto LABEL_19;
      }
      uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8LL;
      if (v9 != v6) {
        goto LABEL_24;
      }
    }

    goto LABEL_31;
  }

uint64_t sub_97EC0(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v4 < 0) {
    uint64_t v17 = *v1;
  }
  else {
    uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v1);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *uint64_t v1 = v4;
  uint64_t v5 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000LL) == 0 && (v4 & 0x4000000000000000LL) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v5 = 1LL;
  }

  uint64_t v9 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL));
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1LL, v4);
    swift_bridgeObjectRelease(*v1);
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
LABEL_15:
    uint64_t result = sub_9B0A0(v8 + 8LL * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0) {
      uint64_t v18 = v4;
    }
    else {
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }

  if (v11 < 1) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8LL));
  BOOL v13 = __OFADD__(v12, v11);
  uint64_t v14 = v12 + v11;
  if (!v13)
  {
    *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8LL)) = v14;
LABEL_19:
    uint64_t v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }

  __break(1u);
  return result;
}

uint64_t sub_98078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain(a4);
  GroupIdentifier.init(id:seq:)(a3, a4, a1);
  uint64_t v12 = type metadata accessor for GroupIdentifier(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 0LL, 1LL, v12);
  INMediaItem.toRREntity(groupIdentifier:targetApp:)(v11, a5);
  return sub_1F6CC((uint64_t)v11, &qword_2860A8);
}

uint64_t sub_98160(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_A89B0(0);
  NLContextUpdate.weightedPromptTargetDomain.setter(v2);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  uint64_t v3 = sub_6C5C(&qword_284018);
  uint64_t v4 = swift_allocObject(v3, 48LL, 7LL);
  *(_OWORD *)(v4 + 16) = xmmword_214510;
  Swift::String v5 = String.uppercased()();
  Swift::String v35 = v5;
  uint64_t v33 = 32LL;
  unint64_t v34 = 0xE100000000000000LL;
  uint64_t v31 = 95LL;
  unint64_t v32 = 0xE100000000000000LL;
  unint64_t v6 = sub_6D68();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v33,  &v31,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v6,  v6,  v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease(v5._object);
  v35._countAndFlagsBits = sub_A89B0(1u);
  v35._object = v9;
  v10._countAndFlagsBits = 0x2E65756C61562ELL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  Swift::String v11 = String.uppercased()();
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(object);
  BOOL v13 = v35._object;
  *(void *)(v4 + 32) = v35._countAndFlagsBits;
  *(void *)(v4 + 40) = v13;
  NLContextUpdate.weightedPromptAbortValues.setter(v4);
  uint64_t v14 = swift_allocObject(v3, 64LL, 7LL);
  *(_OWORD *)(v14 + 16) = xmmword_2160E0;
  *(void *)(v14 + 32) = sub_A89B0(7u);
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 4sub_6C3C(v0 + 8) = sub_A89B0(1u);
  *(void *)(v14 + 56) = v16;
  NLContextUpdate.weightedPromptResponseTargets.setter(v14);
  uint64_t v17 = swift_allocObject(v3, 48LL, 7LL);
  *(_OWORD *)(v17 + 16) = xmmword_214510;
  Swift::String v18 = String.uppercased()();
  Swift::String v35 = v18;
  uint64_t v33 = 32LL;
  unint64_t v34 = 0xE100000000000000LL;
  uint64_t v31 = 95LL;
  unint64_t v32 = 0xE100000000000000LL;
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v33,  &v31,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v6,  v6,  v6);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease(v18._object);
  v35._countAndFlagsBits = sub_A89B0(1u);
  v35._object = v21;
  v22._countAndFlagsBits = 0x2E65756C61562ELL;
  v22._object = (void *)0xE700000000000000LL;
  String.append(_:)(v22);
  Swift::String v23 = String.uppercased()();
  uint64_t v24 = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v24);
  uint64_t v25 = v35._object;
  *(void *)(v17 + 32) = v35._countAndFlagsBits;
  *(void *)(v17 + 40) = v25;
  NLContextUpdate.weightedPromptResponseOptions.setter(v17);
  uint64_t v26 = swift_bridgeObjectRetain(a1);
  NLContextUpdate.displayHints.setter(v26);
  uint64_t v27 = swift_bridgeObjectRetain(a2);
  return NLContextUpdate.rrEntities.setter(v27);
}

uint64_t sub_9841C@<X0>( void (*a1)(char *, void, uint64_t, uint64_t)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, void *a7@<X8>)
{
  unint64_t v88 = a6;
  uint64_t v90 = a4;
  uint64_t v89 = a1;
  unint64_t v91 = a7;
  uint64_t v84 = type metadata accessor for Logger(0LL);
  uint64_t v83 = *(void (***)(char *, uint64_t))(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2860B0);
  __chkstk_darwin(v11);
  unint64_t v95 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = type metadata accessor for DisplayHint(0LL);
  uint64_t v93 = *(void *)(v96 - 8);
  uint64_t v13 = __chkstk_darwin(v96);
  uint64_t v81 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v86 = (char *)&v80 - v16;
  __chkstk_darwin(v15);
  Swift::String v18 = (char *)&v80 - v17;
  uint64_t v19 = type metadata accessor for SemanticValue(0LL);
  uint64_t v20 = *(char **)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v87 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v85 = (char *)&v80 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v94 = (void (**)(char *, uint64_t))((char *)&v80 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v29 = (void (**)(char *, uint64_t))((char *)&v80 - v28);
  uint64_t v30 = __chkstk_darwin(v27);
  unint64_t v32 = (char *)&v80 - v31;
  uint64_t v102 = _swiftEmptyArrayStorage;
  SemanticValue.init()(v30);
  SemanticValue.label.setter(0x6449616964656DLL, 0xE700000000000000LL);
  SemanticValue.string.setter(0LL, 0xE000000000000000LL);
  unint64_t v33 = sub_A89B0(4u);
  SemanticValue.nodeClass.setter(v33);
  unint64_t v92 = a2;
  unint64_t v34 = sub_973E8(*a2, *(void *)(a3 + 16), (uint64_t)v32, a5);
  uint64_t v35 = sub_97970((uint64_t)v34);
  uint64_t v36 = INMediaDestination.playlistName.getter(v35);
  if (!v37) {
    goto LABEL_6;
  }
  uint64_t v38 = v36;
  uint64_t v39 = v37;
  SemanticValue.init()(v36);
  SemanticValue.label.setter(0x7473696C79616C70LL, 0xED0000656C746954LL);
  SemanticValue.string.setter(v38, v39);
  unint64_t v40 = sub_A89B0(8u);
  SemanticValue.nodeClass.setter(v40);
  unint64_t v41 = (void (*)(char *, char *, uint64_t))*((void *)v20 + 2);
  uint64_t v42 = v95;
  v41(v95, v32, v19);
  (*((void (**)(char *, void, uint64_t, uint64_t))v20 + 7))(v42, 0LL, 1LL, v19);
  uint64_t v43 = v94;
  v41((char *)v94, (char *)v29, v19);
  DisplayHint.init(idValue:displayValue:)(v42, v43);
  unint64_t v44 = (unint64_t)v102;
  if ((swift_isUniquelyReferenced_nonNull_native(v102) & 1) == 0) {
    goto LABEL_28;
  }
  while (1)
  {
    unint64_t v46 = *(void *)(v44 + 16);
    unint64_t v45 = *(void *)(v44 + 24);
    if (v46 >= v45 >> 1) {
      unint64_t v44 = sub_1F9D0(v45 > 1, v46 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v46 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v93 + 32))( v44 + ((*(unsigned __int8 *)(v93 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))
    + *(void *)(v93 + 72) * v46,
      v18,
      v96);
    uint64_t v102 = (void *)v44;
    (*((void (**)(char *, uint64_t))v20 + 1))((char *)v29, v19);
LABEL_6:
    uint64_t v47 = static BundleIdentifiers.localBundleIdentifier(for:)(v90);
    if (v48)
    {
      uint64_t v49 = v47;
      Swift::String v18 = v48;
      type metadata accessor for App(0LL);
      swift_bridgeObjectRetain(v18);
      unint64_t v50 = App.__allocating_init(appIdentifier:)(v49, v18);
      uint64_t v51 = type metadata accessor for AppInfoBuilder();
      uint64_t inited = swift_initStackObject(v51, v100);
      if (qword_2838F0 != -1) {
        swift_once(&qword_2838F0, sub_14EB48);
      }
      sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v97);
      sub_9B2A8(v50, inited, &v97, (uint64_t)_swiftEmptyArrayStorage, v101);
      uint64_t v53 = sub_9D390((uint64_t)v101, (uint64_t)&v97);
      if (*((void *)&v97 + 1))
      {
        uint64_t v90 = v49;
        uint64_t v54 = v98;
        uint64_t v55 = v99;
        unint64_t v56 = v85;
        SemanticValue.init()(v53);
        SemanticValue.label.setter(0x656D614E707061LL, 0xE700000000000000LL);
        swift_bridgeObjectRetain(v55);
        SemanticValue.string.setter(v54, v55);
        unint64_t v57 = sub_A89B0(6u);
        SemanticValue.nodeClass.setter(v57);
        unint64_t v58 = (void (*)(char *, char *, uint64_t))*((void *)v20 + 2);
        id v59 = v95;
        v58(v95, v32, v19);
        uint64_t v89 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v20 + 7);
        v89(v59, 0LL, 1LL, v19);
        uint64_t v60 = v94;
        v58((char *)v94, v56, v19);
        DisplayHint.init(idValue:displayValue:)(v59, v60);
        unint64_t v61 = (unint64_t)v102;
        uint64_t v62 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native(v102) & 1) == 0) {
          unint64_t v61 = sub_1F9D0(0, *(void *)(v61 + 16) + 1LL, 1, v61);
        }
        unint64_t v64 = *(void *)(v61 + 16);
        unint64_t v63 = *(void *)(v61 + 24);
        if (v64 >= v63 >> 1) {
          unint64_t v61 = sub_1F9D0(v63 > 1, v64 + 1, 1, v61);
        }
        *(void *)(v61 + 16) = v64 + 1;
        unint64_t v88 = (*(unsigned __int8 *)(v93 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
        uint64_t v84 = *(void *)(v93 + 72);
        uint64_t v93 = *(void *)(v93 + 32);
        ((void (*)(unint64_t, char *, uint64_t))v93)(v61 + v88 + v84 * v64, v86, v96);
        uint64_t v102 = (void *)v61;
        unint64_t v65 = (uint64_t (*)(char *, uint64_t))*((void *)v62 + 1);
        uint64_t v66 = v65(v85, v19);
        uint64_t v67 = v87;
        SemanticValue.init()(v66);
        SemanticValue.label.setter(0x746163696C707061LL, 0xED000064496E6F69LL);
        SemanticValue.string.setter(v90, v18);
        unint64_t v68 = sub_A89B0(5u);
        SemanticValue.nodeClass.setter(v68);
        uint64_t v69 = v95;
        v58(v95, v32, v19);
        v89(v69, 0LL, 1LL, v19);
        unint64_t v29 = v94;
        v58((char *)v94, v67, v19);
        uint64_t v20 = v81;
        DisplayHint.init(idValue:displayValue:)(v69, v29);
        unint64_t v70 = (unint64_t)v102;
        if ((swift_isUniquelyReferenced_nonNull_native(v102) & 1) == 0) {
          unint64_t v70 = sub_1F9D0(0, *(void *)(v70 + 16) + 1LL, 1, v70);
        }
        unint64_t v72 = *(void *)(v70 + 16);
        unint64_t v71 = *(void *)(v70 + 24);
        unint64_t v44 = v72 + 1;
        if (v72 >= v71 >> 1) {
          unint64_t v70 = sub_1F9D0(v71 > 1, v72 + 1, 1, v70);
        }
        *(void *)(v70 + 16) = v44;
        ((void (*)(unint64_t, char *, uint64_t))v93)(v70 + v88 + v72 * v84, v20, v96);
        sub_9D3D8((uint64_t)v101);
        uint64_t v102 = (void *)v70;
        v65(v87, v19);
        goto LABEL_25;
      }

      swift_bridgeObjectRelease(v18);
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v73 = v84;
    uint64_t v74 = sub_6960(v84, (uint64_t)qword_2969C8);
    unint64_t v29 = v83;
    Swift::String v18 = v82;
    uint64_t v75 = ((uint64_t (*)(char *, uint64_t, uint64_t))v83[2])(v82, v74, v73);
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.error.getter();
    unint64_t v44 = v77;
    if (os_log_type_enabled(v76, v77))
    {
      unint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v78 = 0;
      _os_log_impl( &dword_0,  v76,  (os_log_type_t)v44,  "CommonNLContextProvider#makeDisambiguationContextForMediaDestination unexpected missing bundle identifier from launchId",  v78,  2u);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    v29[1](v18, v73);
    unint64_t v65 = (uint64_t (*)(char *, uint64_t))*((void *)v20 + 1);
LABEL_25:
    uint64_t result = v65(v32, v19);
    *unint64_t v91 = v102;
    if (!__OFADD__(*v92, 1LL)) {
      break;
    }
    __break(1u);
LABEL_28:
    unint64_t v44 = sub_1F9D0(0, *(void *)(v44 + 16) + 1LL, 1, v44);
  }

  ++*v92;
  return result;
}

uint64_t sub_98D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain(a4);
  GroupIdentifier.init(id:seq:)(a3, a4, a1);
  uint64_t v12 = type metadata accessor for GroupIdentifier(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 0LL, 1LL, v12);
  INMediaDestination.toRREntity(groupIdentifier:targetApp:)(v11, a5);
  return sub_1F6CC((uint64_t)v11, &qword_2860A8);
}

uint64_t sub_98E08@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = sub_A89B0(0);
  NLContextUpdate.weightedPromptTargetDomain.setter(v2);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  uint64_t v3 = sub_6C5C(&qword_284018);
  uint64_t v4 = swift_allocObject(v3, 48LL, 7LL);
  *(_OWORD *)(v4 + 16) = xmmword_214510;
  Swift::String v5 = String.uppercased()();
  Swift::String v18 = v5;
  v17[0] = 32LL;
  v17[1] = 0xE100000000000000LL;
  v16[0] = 95LL;
  v16[1] = 0xE100000000000000LL;
  unint64_t v6 = sub_6D68();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v17,  v16,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v6,  v6,  v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease(v5._object);
  v18._countAndFlagsBits = sub_A89B0(1u);
  v18._object = v9;
  v10._countAndFlagsBits = 0x2E65756C61562ELL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  Swift::String v11 = String.uppercased()();
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(object);
  uint64_t v13 = v18._object;
  *(void *)(v4 + 32) = v18._countAndFlagsBits;
  *(void *)(v4 + 40) = v13;
  NLContextUpdate.weightedPromptAbortValues.setter(v4);
  NLContextUpdate.objectDisambiguation.setter(1LL);
  uint64_t v14 = type metadata accessor for NLContextUpdate(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(a1, 0LL, 1LL, v14);
}

uint64_t sub_98F88@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = sub_A89B0(0);
  NLContextUpdate.weightedPromptTargetDomain.setter(v2);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  uint64_t v3 = sub_6C5C(&qword_284018);
  uint64_t v4 = swift_allocObject(v3, 48LL, 7LL);
  *(_OWORD *)(v4 + 16) = xmmword_214510;
  Swift::String v5 = String.uppercased()();
  Swift::String v18 = v5;
  v17[0] = 32LL;
  v17[1] = 0xE100000000000000LL;
  v16[0] = 95LL;
  v16[1] = 0xE100000000000000LL;
  unint64_t v6 = sub_6D68();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v17,  v16,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v6,  v6,  v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease(v5._object);
  v18._countAndFlagsBits = sub_A89B0(1u);
  v18._object = v9;
  v10._countAndFlagsBits = 0x2E65756C61562ELL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  Swift::String v11 = String.uppercased()();
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(object);
  uint64_t v13 = v18._object;
  *(void *)(v4 + 32) = v18._countAndFlagsBits;
  *(void *)(v4 + 40) = v13;
  NLContextUpdate.weightedPromptAbortValues.setter(v4);
  uint64_t v14 = type metadata accessor for NLContextUpdate(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(a1, 0LL, 1LL, v14);
}

uint64_t sub_99100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v77 = a3;
  uint64_t v76 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v4 = *(void *)(v76 - 8);
  uint64_t v5 = __chkstk_darwin(v76);
  uint64_t v67 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v74 = (char *)&v67 - v8;
  __chkstk_darwin(v7);
  uint64_t v80 = (char *)&v67 - v9;
  uint64_t v70 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v78 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  Swift::String v18 = (char *)&v67 - v17;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v79 = v4;
  uint64_t v19 = sub_6960(v13, (uint64_t)qword_2969C8);
  unint64_t v71 = *(uint64_t (**)(char *))(v14 + 16);
  unint64_t v72 = (uint8_t *)v19;
  uint64_t v20 = v13;
  uint64_t v21 = v71(v18);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "CommonNLContextProvider#makeAppNeedsDisambiguation", v24, 2u);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  uint64_t v25 = v20;
  uint64_t v75 = *(void (**)(char *, uint64_t))(v14 + 8);
  v75(v18, v20);
  uint64_t v26 = type metadata accessor for MachineUtteranceBuilder(0LL);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  uint64_t v27 = MachineUtteranceBuilder.init()();
  uint64_t v69 = dispatch thunk of MachineUtteranceBuilder.build()(v27);
  uint64_t v68 = v28;
  swift_release(v27);
  uint64_t v29 = type metadata accessor for AppInfoBuilder();
  uint64_t inited = swift_initStackObject(v29, v83);
  v84[3] = v29;
  v84[4] = (uint64_t)&off_26D468;
  v84[0] = inited;
  uint64_t v31 = v73;
  unint64_t v32 = sub_9DAD4(a1);
  uint64_t v33 = sub_6C3C(v84);
  uint64_t v34 = UUID.init()(v33);
  UUID.uuidString.getter(v34);
  uint64_t v36 = v35;
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v70);
  __chkstk_darwin(v37);
  uint64_t v66 = v36;
  swift_bridgeObjectRetain(a1);
  uint64_t v39 = sub_9D864(v38, (void (*)(void, void))sub_9E41C, (uint64_t)(&v67 - 4));
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(a1);
  uint64_t v40 = sub_6C5C(&qword_284018);
  uint64_t v41 = swift_allocObject(v40, 64LL, 7LL);
  *(_OWORD *)(v41 + 16) = xmmword_2160E0;
  *(void *)(v41 + 32) = sub_A89B0(5u);
  *(void *)(v41 + 40) = v42;
  *(void *)(v41 + 4sub_6C3C(v0 + 8) = sub_A89B0(1u);
  *(void *)(v41 + 56) = v43;
  uint64_t v65 = v31;
  unint64_t v44 = v80;
  uint64_t v45 = v68;
  sub_99778(v41, v69, v68, (uint64_t)v32, 1LL, 1LL, (uint64_t)v39);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v32);
  __n128 v46 = swift_bridgeObjectRelease(v39);
  uint64_t v47 = v78;
  uint64_t v73 = v25;
  ((void (*)(char *, uint8_t *, uint64_t, __n128))v71)(v78, v72, v25, v46);
  uint64_t v48 = v79;
  uint64_t v49 = *(uint64_t (**)(char *, char *, uint64_t))(v79 + 16);
  unint64_t v50 = v74;
  uint64_t v51 = v76;
  uint64_t v52 = v49(v74, v44, v76);
  uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
  os_log_type_t v54 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v56 = swift_slowAlloc(32LL, -1LL);
    v84[0] = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    uint64_t v48 = v79;
    unint64_t v72 = v55 + 4;
    unint64_t v57 = v67;
    v49(v67, v50, v51);
    uint64_t v58 = String.init<A>(describing:)(v57, v51);
    unint64_t v60 = v59;
    uint64_t v81 = sub_6978(v58, v59, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
    __n128 v61 = swift_bridgeObjectRelease(v60);
    (*(void (**)(char *, uint64_t, __n128))(v48 + 8))(v50, v51, v61);
    _os_log_impl(&dword_0, v53, v54, "CommonNLContextProvider#makeAppNeedsDisambiguation for update: %s", v55, 0xCu);
    swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v55, -1LL, -1LL);

    uint64_t v62 = v78;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v51);

    uint64_t v62 = v47;
  }

  v75(v62, v73);
  uint64_t v63 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v77, v80, v51);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v63, 0LL, 1LL, v51);
}

uint64_t sub_99694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain(a3);
  GroupIdentifier.init(id:seq:)(a2, a3, a1);
  uint64_t v11 = type metadata accessor for GroupIdentifier(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 0LL, 1LL, v11);
  sub_C1074((uint64_t)v10, a4);
  return sub_1F6CC((uint64_t)v10, &qword_2860A8);
}

uint64_t sub_99778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v52 = a7;
  int v45 = a5;
  uint64_t v47 = a2;
  uint64_t v48 = a4;
  uint64_t v46 = a3;
  uint64_t v44 = a1;
  uint64_t v9 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  uint64_t v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_285F70);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  NLContextUpdate.init()(v12);
  NLContextUpdate.objectDisambiguation.setter(a6);
  NLContextUpdate.weightedPromptStrict.setter(a5);
  unint64_t v15 = sub_A89B0(0);
  NLContextUpdate.disambiguationPromptTargetDomain.setter(v15);
  uint64_t v16 = sub_6C5C(&qword_284018);
  uint64_t v17 = swift_allocObject(v16, 64LL, 7LL);
  *(_OWORD *)(v17 + 16) = xmmword_2160E0;
  Swift::String v18 = String.uppercased()();
  Swift::String v57 = v18;
  uint64_t v55 = 32LL;
  unint64_t v56 = 0xE100000000000000LL;
  uint64_t v53 = 95LL;
  unint64_t v54 = 0xE100000000000000LL;
  unint64_t v19 = sub_6D68();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v55,  &v53,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v19,  v19,  v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease(v18._object);
  v57._countAndFlagsBits = sub_A89B0(1u);
  v57._object = v22;
  v23._countAndFlagsBits = 0x2E65756C61562ELL;
  v23._object = (void *)0xE700000000000000LL;
  String.append(_:)(v23);
  Swift::String v24 = String.uppercased()();
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(object);
  uint64_t v26 = v57._object;
  *(void *)(v17 + 32) = v57._countAndFlagsBits;
  *(void *)(v17 + 40) = v26;
  Swift::String v27 = String.uppercased()();
  Swift::String v57 = v27;
  uint64_t v55 = 32LL;
  unint64_t v56 = 0xE100000000000000LL;
  uint64_t v53 = 95LL;
  unint64_t v54 = 0xE100000000000000LL;
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v55,  &v53,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v19,  v19,  v19);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease(v27._object);
  v57._countAndFlagsBits = sub_A89B0(1u);
  v57._object = v30;
  v31._countAndFlagsBits = 0x2E65756C61562ELL;
  v31._object = (void *)0xE700000000000000LL;
  String.append(_:)(v31);
  Swift::String v32 = String.uppercased()();
  uint64_t v33 = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v29);
  __n128 v34 = swift_bridgeObjectRelease(v33);
  uint64_t v35 = v57._object;
  *(void *)(v17 + 4sub_6C3C(v0 + 8) = v57._countAndFlagsBits;
  *(void *)(v17 + 56) = v35;
  NLContextUpdate.disambiguationPromptAbortValues.setter(v17, v34);
  __n128 v36 = swift_bridgeObjectRetain(v44);
  NLContextUpdate.disambiguationPromptResponseTargets.setter(v36);
  uint64_t v37 = v46;
  swift_bridgeObjectRetain(v46);
  NLContextUpdate.nlInput.setter(v47, v37);
  swift_bridgeObjectRetain(v48);
  NLContextUpdate.displayHints.setter(v38);
  swift_bridgeObjectRetain(v52);
  NLContextUpdate.rrEntities.setter(v39);
  uint64_t v40 = v49;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))( v49,  enum case for PommesContext.Source.pluginDefined(_:),  v51);
  PommesContext.init(source:domain:listenAfterSpeaking:)(v40, 0x616964656DLL, 0xE500000000000000LL, v45 & 1);
  uint64_t v41 = type metadata accessor for PommesContext(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v14, 0LL, 1LL, v41);
  return NLContextUpdate.pommesContext.setter(v14);
}

uint64_t sub_99AEC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v76 = a3;
  uint64_t v77 = a2;
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v4);
  unint64_t v78 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v79 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v71 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v71 - v13;
  uint64_t v15 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v74 = *(void *)(v15 - 8);
  uint64_t v75 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  Swift::String v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v71 - v20;
  uint64_t v22 = App.appIdentifier.getter(v19);
  if (!v23)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v55 = sub_6960(v6, (uint64_t)qword_2969C8);
    uint64_t v56 = v79;
    uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 16))(v9, v55, v6);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v60 = 0;
      _os_log_impl( &dword_0,  v58,  v59,  "CommonNLContextProvider#makeAppNeedsConfirmation failed to build context update for app confirmation due to nil appIdentifier",  v60,  2u);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v6);
    goto LABEL_25;
  }

  uint64_t v24 = v22;
  unint64_t v25 = v23;
  uint64_t v26 = static SAAppInfoFactory.createAppInfo(app:)(a1);
  if (!v26)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v61 = sub_6960(v6, (uint64_t)qword_2969C8);
    uint64_t v62 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v12, v61, v6);
    swift_bridgeObjectRetain(v25);
    unint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v67 = swift_slowAlloc(32LL, -1LL);
      v83[0] = v67;
      *(_DWORD *)uint64_t v66 = 136446210;
      swift_bridgeObjectRetain(v25);
      uint64_t v81 = sub_6978(v24, v25, v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82);
      swift_bridgeObjectRelease_n(v25, 3LL);
      _os_log_impl( &dword_0,  v64,  v65,  "CommonNLContextProvider#makeAppNeedsConfirmation failed to build appInfo for app: %{public}s",  v66,  0xCu);
      swift_arrayDestroy(v67, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1LL, -1LL);
      swift_slowDealloc(v66, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v12, v6);
    }

    else
    {

      swift_bridgeObjectRelease_n(v25, 2LL);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v12, v6);
    }

uint64_t sub_9A208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_6C5C(&qword_2860B0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SemanticValue(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v20 - v15;
  SemanticValue.init()(v14);
  SemanticValue.label.setter(0xD000000000000014LL, 0x800000000021EB80LL);
  swift_bridgeObjectRetain(a3);
  SemanticValue.string.setter(a2, a3);
  unint64_t v17 = sub_A89B0(7u);
  SemanticValue.nodeClass.setter(v17);
  Swift::String v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18(v8, a1, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0LL, 1LL, v9);
  v18(v13, (uint64_t)v16, v9);
  DisplayHint.init(idValue:displayValue:)(v8, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

uint64_t type metadata accessor for AppInfoBuilder()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin14AppInfoBuilder);
}

uint64_t sub_9A3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16LL);
}

uint64_t type metadata accessor for AudioNLContextUpdateProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AudioNLContextUpdateProvider);
}

void *sub_9A3B4(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = Locale.identifier.getter(a1);
  uint64_t v5 = v4;
  v31[2] = v3;
  v31[3] = v4;
  v31[0] = 45LL;
  v31[1] = 0xE100000000000000LL;
  v30[0] = 95LL;
  v30[1] = 0xE100000000000000LL;
  unint64_t v6 = sub_6D68();
  uint64_t v7 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v31,  v30,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v6,  v6,  v6);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease(v5);
  id v10 = [v1 displayAppName];
  if (v10) {
    goto LABEL_17;
  }
  id v11 = [v1 displayAppNameMap];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v11,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

    if (*(void *)(v13 + 16))
    {
      swift_bridgeObjectRetain(v9);
      unint64_t v14 = sub_9A744(v7, v9);
      if ((v15 & 1) != 0)
      {
LABEL_12:
        uint64_t v20 = *(void *)(v13 + 56) + 16 * v14;
        uint64_t v21 = *(void **)v20;
        swift_bridgeObjectRetain(*(void *)(v20 + 8));
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease_n(v9, 2LL);
        return v21;
      }

      swift_bridgeObjectRelease(v13);
      uint64_t v16 = v9;
    }

    else
    {
      uint64_t v16 = v13;
    }

    swift_bridgeObjectRelease(v16);
  }

  id v10 = [v2 appName];
  if (v10) {
    goto LABEL_17;
  }
  id v17 = [v2 appNameMap];
  if (v17)
  {
    Swift::String v18 = v17;
    uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v17,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

    if (*(void *)(v13 + 16))
    {
      swift_bridgeObjectRetain(v9);
      unint64_t v14 = sub_9A744(v7, v9);
      if ((v19 & 1) != 0) {
        goto LABEL_12;
      }
      swift_bridgeObjectRelease(v13);
      uint64_t v22 = v9;
    }

    else
    {
      uint64_t v22 = v13;
    }

    swift_bridgeObjectRelease(v22);
  }

  id v10 = [v2 spotlightName];
  if (v10)
  {
LABEL_17:
    unint64_t v23 = v10;
    uint64_t v21 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    swift_bridgeObjectRelease(v9);

    return v21;
  }

  id v25 = [v2 spotlightNameMap];
  uint64_t v21 = v25;
  if (v25)
  {
    uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v25,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

    if (*(void *)(v26 + 16) && (unint64_t v27 = sub_9A744(v7, v9), (v28 & 1) != 0))
    {
      uint64_t v29 = *(void *)(v26 + 56) + 16 * v27;
      uint64_t v21 = *(void **)v29;
      swift_bridgeObjectRetain(*(void *)(v29 + 8));
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v9);
    }

    else
    {
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v9);
      return 0LL;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v9);
  }

  return v21;
}

uint64_t sub_9A6A0(uint64_t a1, uint64_t a2)
{
  return sub_98D20(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_9A6AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for DeviceCategory(0LL);
  uint64_t v6 = sub_10430( &qword_286100,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceCategory,  (uint64_t)&protocol conformance descriptor for DeviceCategory);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_9AD90( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceCategory,  &qword_286108,  (uint64_t)&protocol conformance descriptor for DeviceCategory);
}

unint64_t sub_9A744(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_9AB50(a1, a2, v5);
}

unint64_t sub_9A7A8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_9AC30(a1, v4);
}

unint64_t sub_9A7D8(Swift::UInt a1)
{
  Swift::Int v3 = Hasher._finalize()();
  return sub_9ACF4(a1, v3);
}

unint64_t sub_9A830(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v6 = sub_10430( &qword_2860C8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_9AD90( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  &qword_284DF8,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
}

unint64_t sub_9A8C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v6 = sub_10430( &qword_2860D0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Sort,  (uint64_t)&protocol conformance descriptor for CommonAudio.Sort);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_9AD90( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Sort,  &qword_2860D8,  (uint64_t)&protocol conformance descriptor for CommonAudio.Sort);
}

unint64_t sub_9A960(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v6 = sub_10430( &qword_2860E0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Decade,  (uint64_t)&protocol conformance descriptor for CommonAudio.Decade);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_9AD90( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Decade,  &qword_2860E8,  (uint64_t)&protocol conformance descriptor for CommonAudio.Decade);
}

unint64_t sub_9A9F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v7, a1, a2);
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Swift::Int v5 = Hasher._finalize()();
  return sub_9AEC0(a1, a2, v5);
}

unint64_t sub_9AA88(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_9AF88(a1, v4);
}

unint64_t sub_9AAB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for DateTime.DateTimeRange.DefinedDateTimeRange(0LL);
  uint64_t v6 = sub_10430( &qword_2860F0,  (uint64_t (*)(uint64_t))&type metadata accessor for DateTime.DateTimeRange.DefinedDateTimeRange,  (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange.DefinedDateTimeRange);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_9AD90( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for DateTime.DateTimeRange.DefinedDateTimeRange,  &qword_2860F8,  (uint64_t)&protocol conformance descriptor for DateTime.DateTimeRange.DefinedDateTimeRange);
}

unint64_t sub_9AB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15) & 1) == 0);
    }
  }

  return v6;
}

unint64_t sub_9AC30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0)
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_32D9C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_32DD8((uint64_t)v9);
      if ((v7 & 1) != 0) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0);
  }

  return v4;
}

unint64_t sub_9ACF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }

  return result;
}

unint64_t sub_9AD90( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v6 = v5;
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  uint64_t v8 = a3(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = -1LL << *(_BYTE *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  if (((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v13) & 1) != 0)
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v9 + 72);
    BOOL v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(void *)(v6 + 48) + v15 * v13, v8);
      uint64_t v17 = sub_10430(v22, v21, v23);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v20, v8, v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v18 & 1) != 0) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }

    while (((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v13) & 1) != 0);
  }

  return v13;
}

unint64_t sub_9AEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12) & 1) != 0) {
            return v6;
          }
        }
      }

      else if (!a2)
      {
        return v6;
      }

      unint64_t v6 = (v6 + 1) & v9;
    }

    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
  }

  return v6;
}

unint64_t sub_9AF88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0)
  {
    sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    id v7 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0) {
          break;
        }
      }
    }
  }

  return i;
}

uint64_t sub_9B0A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return a3;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
    if (!v7) {
      return a3;
    }
  }

  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8LL;
  if (v6)
  {
    if (a3 < 0) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_9E4F8();
        swift_bridgeObjectRetain(a3);
        for (unint64_t i = 0LL; i != v7; ++i)
        {
          sub_6C5C(&qword_286128);
          BOOL v13 = sub_1AAA8C(v18, i, a3);
          id v15 = *v14;
          ((void (*)(void (**)(id *), void))v13)(v18, 0LL);
          *(void *)(a1 + 8 * i) = v15;
        }

        swift_bridgeObjectRelease(a3);
        return a3;
      }

      goto LABEL_24;
    }

uint64_t sub_9B2A8@<X0>( unint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v270 = a4;
  uint64_t v265 = a2;
  uint64_t v266 = a5;
  uint64_t v259 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v257 = *(void *)(v259 - 8);
  __chkstk_darwin(v259);
  uint64_t v256 = (uint8_t **)((char *)&v236 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v258 = type metadata accessor for DispatchTime(0LL);
  uint64_t v255 = *(void *)(v258 - 8);
  uint64_t v8 = __chkstk_darwin(v258);
  uint64_t v253 = (char *)&v236 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v254 = (char *)&v236 - v10;
  uint64_t v252 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v251 = *(void *)(v252 - 8);
  uint64_t v11 = __chkstk_darwin(v252);
  uint64_t v249 = (char *)&v236 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v248 = v12;
  __chkstk_darwin(v11);
  uint64_t v250 = (char *)&v236 - v13;
  uint64_t v260 = type metadata accessor for InstalledApp(0LL);
  uint64_t v264 = *(void *)(v260 - 8);
  uint64_t v14 = __chkstk_darwin(v260);
  uint64_t v16 = (char *)&v236 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v245 = (unint64_t)&v236 - v18;
  __chkstk_darwin(v17);
  uint64_t v246 = (char *)&v236 - v19;
  uint64_t v268 = type metadata accessor for Logger(0LL);
  dispatch_semaphore_t v269 = *(dispatch_semaphore_t *)(v268 - 8);
  uint64_t v20 = __chkstk_darwin(v268);
  uint64_t v22 = (char *)&v236 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v261 = (char *)&v236 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v262 = (uint64_t)&v236 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v247 = (char *)&v236 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v263 = (char *)&v236 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v244 = (char *)&v236 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v35 = (char *)&v236 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v236 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v236 - v39;
  uint64_t v41 = type metadata accessor for Locale(0LL);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v236 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v46 = a3[3];
  v281[2] = a3[2];
  void v281[3] = v46;
  v281[4] = a3[4];
  __int128 v47 = a3[1];
  v281[0] = *a3;
  v281[1] = v47;
  unint64_t v271 = a1;
  uint64_t v48 = App.appIdentifier.getter(v43);
  uint64_t v50 = (void *)&unk_283000;
  if (!v49) {
    goto LABEL_6;
  }
  a1 = v49;
  uint64_t v267 = v48;
  unint64_t v51 = v271;
  uint64_t v52 = static SAAppInfoFactory.createAppInfo(app:)(v271);
  if (!v52)
  {
    swift_bridgeObjectRelease(a1);
    uint64_t v50 = &unk_283000;
LABEL_6:
    swift_bridgeObjectRelease(v270);
    if (v50[273] != -1LL) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v61 = v268;
    uint64_t v62 = sub_6960(v268, (uint64_t)qword_2969C8);
    uint64_t v63 = (void (**)(char *, uint64_t))v269;
    (*((void (**)(char *, uint64_t, uint64_t))v269 + 2))(v22, v62, v61);
    unint64_t v64 = v271;
    uint64_t v65 = swift_retain_n(v271, 2LL);
    id v66 = v22;
    uint64_t v67 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      uint64_t v275 = v70;
      *(_DWORD *)uint64_t v69 = 136446210;
      a1 = (unint64_t)(v69 + 12);
      *(void *)&v277[0] = App.appIdentifier.getter(v70);
      *((void *)&v277[0] + 1) = v71;
      uint64_t v72 = sub_6C5C(&qword_284600);
      uint64_t v73 = String.init<A>(describing:)(v277, v72);
      id v66 = (id)v74;
      *(void *)&v277[0] = sub_6978(v73, v74, &v275);
      unint64_t v64 = v271;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v277, (char *)v277 + 8);
      swift_release_n(v64, 2LL);
      swift_bridgeObjectRelease(v66);
      _os_log_impl(&dword_0, v67, v68, "DisplayApp#init could not build display app for bundle: %{public}s", v69, 0xCu);
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      swift_slowDealloc(v69, -1LL, -1LL);

      swift_release(v64);
      (*((void (**)(char *, uint64_t))v269 + 1))(v22, v61);
    }

    else
    {

      swift_release_n(v64, 3LL);
      v63[1](v22, v61);
    }

    int v75 = 0;
    goto LABEL_12;
  }

  unint64_t v53 = (void *)v52;
  swift_retain(v51);
  swift_bridgeObjectRetain(v270);
  uint64_t v242 = (uint64_t)v53;
  id v54 = v53;
  uint64_t v55 = swift_bridgeObjectRetain(a1);
  static SiriAudioEnvironment.siriLocale.getter(v55);
  id v243 = v54;
  uint64_t v56 = (uint64_t)sub_9A3B4((uint64_t)v45);
  unint64_t v58 = v57;
  os_log_type_t v59 = *(void (**)(char *, uint64_t))(v42 + 8);
  v59(v45, v41);
  if (!v58)
  {
    uint64_t v241 = v59;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v87 = v268;
    uint64_t v88 = sub_6960(v268, (uint64_t)qword_2969C8);
    uint64_t v89 = (void (*)(char *, uint64_t, uint64_t))*((void *)v269 + 2);
    uint64_t v239 = v88;
    uint64_t v240 = v89;
    ((void (*)(char *))v89)(v40);
    uint64_t v90 = swift_bridgeObjectRetain_n(a1, 2LL);
    unint64_t v91 = (os_log_s *)Logger.logObject.getter(v90);
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v238 = (uint8_t *)swift_slowAlloc(32LL, -1LL);
      *(void *)&v277[0] = v238;
      os_log_t v237 = v91;
      *(_DWORD *)uint64_t v93 = 136315138;
      uint64_t v236 = v93 + 4;
      swift_bridgeObjectRetain(a1);
      uint64_t v275 = sub_6978(v267, a1, (uint64_t *)v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
      swift_bridgeObjectRelease_n(a1, 3LL);
      os_log_t v94 = v237;
      _os_log_impl( &dword_0,  v237,  v92,  "DisplayApp#init couldn't find localized name for app info: %s, trying app name...",  v93,  0xCu);
      unint64_t v95 = v238;
      swift_arrayDestroy(v238, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1LL, -1LL);
      swift_slowDealloc(v93, -1LL, -1LL);

      uint64_t v96 = (uint8_t *)*((void *)v269 + 1);
      __int128 v97 = v40;
      uint64_t v98 = v268;
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
      uint64_t v96 = (uint8_t *)*((void *)v269 + 1);
      __int128 v97 = v40;
      uint64_t v98 = v87;
    }

    uint64_t v238 = v96;
    ((void (*)(char *, uint64_t))v96)(v97, v98);
    uint64_t v60 = v270;
    uint64_t v99 = type metadata accessor for AppInformationResolver(0LL);
    swift_allocObject(v99, *(unsigned int *)(v99 + 48), *(unsigned __int16 *)(v99 + 52));
    uint64_t v100 = swift_retain(v271);
    uint64_t v101 = AppInformationResolver.init(app:)(v100);
    static SiriAudioEnvironment.siriLocale.getter(v101);
    uint64_t v56 = dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)(v45);
    unint64_t v58 = v102;
    swift_release(v101);
    v241(v45, v41);
    if (v58) {
      goto LABEL_21;
    }
    swift_bridgeObjectRelease(v60);
    uint64_t v133 = v268;
    v240(v38, v239, v268);
    uint64_t v134 = swift_bridgeObjectRetain(a1);
    uint64_t v135 = (os_log_s *)Logger.logObject.getter(v134);
    os_log_type_t v136 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v135, v136))
    {
      uint64_t v137 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v138 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v277[0] = v138;
      *(_DWORD *)uint64_t v137 = 136315138;
      swift_bridgeObjectRetain(a1);
      uint64_t v275 = sub_6978(v267, a1, (uint64_t *)v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
      swift_bridgeObjectRelease_n(a1, 3LL);
      _os_log_impl(&dword_0, v135, v136, "DisplayApp#init couldn't find localized name for app: %s", v137, 0xCu);
      int v75 = 1;
      swift_arrayDestroy(v138, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v138, -1LL, -1LL);
      swift_slowDealloc(v137, -1LL, -1LL);
      id v66 = v243;

      unint64_t v64 = v271;
      swift_release(v271);
      ((void (*)(char *, uint64_t))v238)(v38, v133);
    }

    else
    {

      id v66 = v243;
      unint64_t v64 = v271;
      swift_release(v271);
      swift_bridgeObjectRelease_n(a1, 2LL);
      ((void (*)(char *, uint64_t))v238)(v38, v133);
      int v75 = 1;
    }

void *sub_9D064(uint64_t a1, void (*a2)(uint64_t, char *))
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_6C5C(&qword_2860A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = type metadata accessor for RREntity(0LL);
  uint64_t v6 = *(void *)(v34 - 8);
  uint64_t v7 = __chkstk_darwin(v34);
  uint64_t v43 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v32 - v9;
  uint64_t v42 = sub_6C5C(&qword_2845F8);
  uint64_t v10 = __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v32 - v12);
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  uint64_t v40 = v14;
  uint64_t v32 = a1;
  if (v14)
  {
    uint64_t v38 = v5;
    uint64_t v45 = v6;
    uint64_t v15 = 0LL;
    uint64_t v39 = type metadata accessor for INMediaDestination(0LL);
    uint64_t v16 = *(void *)(v39 - 8);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v36 = *(void *)(v16 + 72);
    uint64_t v37 = v16;
    unint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v19 = v34;
    do
    {
      uint64_t v20 = v42;
      uint64_t v21 = &v41[*(int *)(v42 + 48)];
      uint64_t v22 = v39;
      v35(v21, v17, v39);
      uint64_t v23 = (char *)v13 + *(int *)(v20 + 48);
      *uint64_t v13 = v15;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v23, v21, v22);
      uint64_t v24 = (uint64_t)v38;
      v44(v15, v23);
      sub_1F6CC((uint64_t)v13, &qword_2845F8);
      uint64_t v25 = v45;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v24, 1LL, v19) == 1)
      {
        sub_1F6CC(v24, &qword_2860A0);
      }

      else
      {
        uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
        uint64_t v27 = v33;
        v26(v33, v24, v19);
        v26(v43, (uint64_t)v27, v19);
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0) {
          uint64_t v18 = (void *)sub_1FE70(0, v18[2] + 1LL, 1, (unint64_t)v18);
        }
        unint64_t v29 = v18[2];
        unint64_t v28 = v18[3];
        if (v29 >= v28 >> 1) {
          uint64_t v18 = (void *)sub_1FE70(v28 > 1, v29 + 1, 1, (unint64_t)v18);
        }
        v18[2] = v29 + 1;
        unint64_t v30 = (unint64_t)v18
        uint64_t v19 = v34;
        v26((char *)v30, (uint64_t)v43, v34);
      }

      ++v15;
      v17 += v36;
    }

    while (v40 != v15);
  }

  else
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(v32);
  return v18;
}

uint64_t sub_9D390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2860B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_9D3D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_9D41C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_release(a7);

    swift_bridgeObjectRelease(a9);
    return swift_bridgeObjectRelease(a6);
  }

  return result;
}

uint64_t sub_9D488()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_9D4AC()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

Swift::Int sub_9D4E8(uint64_t a1, unint64_t a2)
{
  return sub_149204( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_9D4F8(void *a1)
{
  return sub_26440(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_9D500()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_9D578()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void *sub_9D59C(uint64_t a1, void (*a2)(uint64_t, id), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v6 = sub_6C5C(&qword_2860A0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (void *)type metadata accessor for RREntity(0LL);
  uint64_t v10 = *(v9 - 1);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v32 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v28 = (char *)v27 - v13;
  uint64_t v29 = a1;
  uint64_t v14 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a1);
  for (; v14; uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v25))
  {
    uint64_t v36 = v9;
    v27[1] = v4;
    uint64_t v4 = v29;
    unint64_t v31 = v29 & 0xC000000000000001LL;
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v15 = 4LL;
    uint64_t v35 = v10;
    uint64_t v30 = v14;
    a1 = (uint64_t)v36;
    while (1)
    {
      uint64_t v10 = v15 - 4;
      id v17 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v4) : *(id *)(v4 + 8 * v15);
      uint64_t v18 = v17;
      uint64_t v19 = v15 - 3;
      if (__OFADD__(v10, 1LL)) {
        break;
      }
      v34(v15 - 4, v17);

      uint64_t v20 = v35;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1LL, a1) == 1)
      {
        sub_1F6CC((uint64_t)v8, &qword_2860A0);
        uint64_t v16 = v30;
      }

      else
      {
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        uint64_t v22 = v28;
        v21(v28, v8, a1);
        v21(v32, v22, a1);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0) {
          uint64_t v9 = (void *)sub_1FE70(0, v9[2] + 1LL, 1, (unint64_t)v9);
        }
        unint64_t v24 = v9[2];
        unint64_t v23 = v9[3];
        if (v24 >= v23 >> 1) {
          uint64_t v9 = (void *)sub_1FE70(v23 > 1, v24 + 1, 1, (unint64_t)v9);
        }
        uint64_t v16 = v30;
        v9[2] = v24 + 1;
        v21( (char *)v9 + ((*(unsigned __int8 *)(v35 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
        + *(void *)(v35 + 72) * v24,
          v32,
          (uint64_t)v36);
        uint64_t v4 = v29;
      }

      ++v15;
      if (v19 == v16)
      {
        swift_bridgeObjectRelease(v4);
        return v9;
      }
    }

    __break(1u);
LABEL_18:
    if (a1 < 0) {
      uint64_t v25 = a1;
    }
    else {
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
  }

  swift_bridgeObjectRelease(v29);
  return _swiftEmptyArrayStorage;
}

char *sub_9D864(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v6 = sub_6C5C(&qword_2860A0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for RREntity(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v30 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v28 = (char *)&v25 - v13;
  uint64_t v29 = *(void *)(a1 + 16);
  if (!v29) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v25 = v3;
  swift_bridgeObjectRetain(a1);
  uint64_t v14 = 0LL;
  uint64_t v15 = (char *)_swiftEmptyArrayStorage;
  uint64_t v16 = 32LL;
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  do
  {
    __int128 v17 = *(_OWORD *)(a1 + v16 + 48);
    v31[2] = *(_OWORD *)(a1 + v16 + 32);
    v31[3] = v17;
    uint64_t v32 = *(void *)(a1 + v16 + 64);
    __int128 v18 = *(_OWORD *)(a1 + v16 + 16);
    v31[0] = *(_OWORD *)(a1 + v16);
    v31[1] = v18;
    sub_9E424(v31);
    a2(v14, v31);
    sub_9E490(v31);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
    {
      sub_1F6CC((uint64_t)v8, &qword_2860A0);
    }

    else
    {
      uint64_t v19 = v10;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      uint64_t v21 = v28;
      v20(v28, v8, v9);
      v20(v30, v21, v9);
      if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0) {
        uint64_t v15 = (char *)sub_1FE70(0, *((void *)v15 + 2) + 1LL, 1, (unint64_t)v15);
      }
      unint64_t v23 = *((void *)v15 + 2);
      unint64_t v22 = *((void *)v15 + 3);
      if (v23 >= v22 >> 1) {
        uint64_t v15 = (char *)sub_1FE70(v22 > 1, v23 + 1, 1, (unint64_t)v15);
      }
      *((void *)v15 + 2) = v23 + 1;
      v20( &v15[((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
           + *(void *)(v19 + 72) * v23],
        v30,
        v9);
      uint64_t v10 = v19;
      a2 = v26;
      a1 = v27;
    }

    ++v14;
    v16 += 72LL;
  }

  while (v29 != v14);
  swift_bridgeObjectRelease(a1);
  return v15;
}

void *sub_9DAD4(uint64_t a1)
{
  uint64_t v106 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v106 - 8);
  uint64_t v3 = __chkstk_darwin(v106);
  uint64_t v93 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v91 - v5;
  uint64_t v7 = sub_6C5C(&qword_2860B0);
  __chkstk_darwin(v7);
  uint64_t v111 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DisplayHint(0LL);
  uint64_t v101 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v105 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v121 = (char *)&v91 - v12;
  uint64_t v13 = type metadata accessor for SemanticValue(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v110 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v91 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v91 - v20;
  uint64_t v124 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v112 = v9;
  uint64_t v98 = v2;
  if (v22)
  {
    __int128 v97 = v6;
    __n128 v23 = swift_bridgeObjectRetain(a1);
    uint64_t v92 = a1;
    unint64_t v24 = (uint64_t *)(a1 + 48);
    v23.n128_u64[0] = 136315138LL;
    __n128 v95 = v23;
    os_log_t v94 = (char *)&type metadata for Any + 8;
    uint64_t v25 = v13;
    uint64_t v100 = v13;
    uint64_t v120 = v14;
    uint64_t v99 = v19;
    uint64_t v109 = v21;
    do
    {
      uint64_t v117 = v22;
      uint64_t v30 = *(v24 - 2);
      uint64_t v29 = *(v24 - 1);
      uint64_t v31 = v24[1];
      uint64_t v118 = *v24;
      unint64_t v32 = v24[3];
      uint64_t v108 = v24[2];
      uint64_t v33 = v24[4];
      uint64_t v34 = (void *)v24[5];
      uint64_t v35 = v24[6];
      unint64_t v115 = v32;
      swift_bridgeObjectRetain(v32);
      uint64_t v116 = v33;
      swift_retain(v33);
      id v36 = v34;
      uint64_t v37 = v120;
      id v38 = v36;
      uint64_t v114 = v35;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain_n(v29, 2LL);
      __n128 v39 = swift_bridgeObjectRetain(v31);
      uint64_t v119 = v29;
      SemanticValue.init(string:label:)(v30, v29, 0x746163696C707061LL, 0xED000064496E6F69LL, v39);
      __n128 v40 = swift_bridgeObjectRetain(v31);
      uint64_t v41 = v118;
      uint64_t v118 = v31;
      SemanticValue.init(string:label:)(v41, v31, 0x656D614E707061LL, 0xE700000000000000LL, v40);
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      uint64_t v43 = v111;
      v42(v111, v21, v25);
      uint64_t v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56);
      v44(v43, 0LL, 1LL, v25);
      uint64_t v45 = v110;
      v42(v110, v19, v25);
      DisplayHint.init(idValue:displayValue:)(v43, v45);
      unint64_t v46 = (unint64_t)v124;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v124);
      id v113 = v38;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v46 = sub_1F9D0(0, *(void *)(v46 + 16) + 1LL, 1, v46);
      }
      unint64_t v49 = *(void *)(v46 + 16);
      unint64_t v48 = *(void *)(v46 + 24);
      uint64_t v50 = v117;
      unint64_t v51 = v115;
      uint64_t v52 = v112;
      if (v49 >= v48 >> 1) {
        unint64_t v46 = sub_1F9D0(v48 > 1, v49 + 1, 1, v46);
      }
      *(void *)(v46 + 16) = v49 + 1;
      unint64_t v53 = (*(unsigned __int8 *)(v101 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      uint64_t v107 = *(void *)(v101 + 72);
      id v54 = *(void (**)(unint64_t, char *, uint64_t))(v101 + 32);
      v54(v46 + v53 + v107 * v49, v121, v52);
      uint64_t v124 = (void *)v46;
      if (v51)
      {
        unint64_t v102 = v53;
        uint64_t v104 = v44;
        uint64_t v55 = qword_283888;
        swift_bridgeObjectRetain(v51);
        if (v55 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v103 = v42;
        uint64_t v56 = v106;
        uint64_t v57 = sub_6960(v106, (uint64_t)qword_2969C8);
        uint64_t v58 = v98;
        os_log_type_t v59 = v97;
        (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v57, v56);
        uint64_t v60 = swift_bridgeObjectRetain_n(v51, 2LL);
        uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
        os_log_type_t v62 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = swift_slowAlloc(12LL, -1LL);
          uint64_t v64 = swift_slowAlloc(32LL, -1LL);
          uint64_t v96 = v54;
          uint64_t v65 = v64;
          uint64_t v123 = v64;
          *(_DWORD *)uint64_t v63 = v95.n128_u32[0];
          swift_bridgeObjectRetain(v51);
          uint64_t v66 = v108;
          *(void *)(v63 + 4) = sub_6978(v108, v51, &v123);
          swift_bridgeObjectRelease_n(v51, 3LL);
          _os_log_impl( &dword_0,  v61,  v62,  "AudioNLContextUpdatedProvider#makeDisplayHints adding alternate displayHint: %s",  (uint8_t *)v63,  0xCu);
          swift_arrayDestroy(v65, 1LL, v94);
          uint64_t v67 = v65;
          id v54 = v96;
          swift_slowDealloc(v67, -1LL, -1LL);
          swift_slowDealloc(v63, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v106);
        }

        else
        {

          swift_bridgeObjectRelease_n(v51, 2LL);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v106);
          uint64_t v66 = v108;
        }

        os_log_type_t v68 = v111;
        uint64_t v27 = v100;
        v103(v111, v109, v100);
        v104(v68, 0LL, 1LL, v27);
        uint64_t v69 = v110;
        SemanticValue.init(string:label:)(v66, v51, 0x656D614E707061LL, 0xE700000000000000LL, v70);
        DisplayHint.init(idValue:displayValue:)(v68, v69);
        unint64_t v71 = (unint64_t)v124;
        char v72 = swift_isUniquelyReferenced_nonNull_native(v124);
        uint64_t v73 = v112;
        if ((v72 & 1) == 0) {
          unint64_t v71 = sub_1F9D0(0, *(void *)(v71 + 16) + 1LL, 1, v71);
        }
        uint64_t v74 = v107;
        unint64_t v76 = *(void *)(v71 + 16);
        unint64_t v75 = *(void *)(v71 + 24);
        if (v76 >= v75 >> 1) {
          unint64_t v71 = sub_1F9D0(v75 > 1, v76 + 1, 1, v71);
        }
        *(void *)(v71 + 16) = v76 + 1;
        v54(v71 + v102 + v76 * v74, v105, v73);
        swift_bridgeObjectRelease(v114);

        swift_release(v116);
        swift_bridgeObjectRelease(v51);
        swift_bridgeObjectRelease(v118);
        __n128 v26 = swift_bridgeObjectRelease(v119);
        uint64_t v124 = (void *)v71;
      }

      else
      {
        swift_bridgeObjectRelease(v114);

        swift_release(v116);
        swift_bridgeObjectRelease(0LL);
        swift_bridgeObjectRelease(v118);
        __n128 v26 = swift_bridgeObjectRelease(v119);
        uint64_t v27 = v100;
      }

      unint64_t v28 = *(void (**)(char *, uint64_t, __n128))(v120 + 8);
      uint64_t v19 = v99;
      v28(v99, v27, v26);
      uint64_t v25 = v27;
      uint64_t v21 = v109;
      ((void (*)(char *, uint64_t))v28)(v109, v25);
      v24 += 9;
      uint64_t v22 = v50 - 1;
    }

    while (v22);
    swift_bridgeObjectRelease(v92);
    uint64_t v2 = v98;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v77 = v106;
  uint64_t v78 = sub_6960(v106, (uint64_t)qword_2969C8);
  uint64_t v79 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v93, v78, v77);
  unint64_t v80 = v124;
  uint64_t v81 = swift_bridgeObjectRetain_n(v124, 2LL);
  unint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
  os_log_type_t v83 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v85 = swift_slowAlloc(32LL, -1LL);
    uint64_t v123 = v85;
    *(_DWORD *)uint64_t v84 = 136315138;
    swift_bridgeObjectRetain(v80);
    uint64_t v87 = Array.description.getter(v86, v112);
    unint64_t v89 = v88;
    swift_bridgeObjectRelease(v80);
    uint64_t v122 = sub_6978(v87, v89, &v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);
    swift_bridgeObjectRelease_n(v80, 2LL);
    swift_bridgeObjectRelease(v89);
    _os_log_impl( &dword_0,  v82,  v83,  "CommonNLContextProvider#makeDisplayHints built display hints for app disambiguation: %s",  v84,  0xCu);
    swift_arrayDestroy(v85, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1LL, -1LL);
    swift_slowDealloc(v84, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v98 + 8))(v79, v106);
  }

  else
  {

    swift_bridgeObjectRelease_n(v80, 2LL);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v79, v106);
  }

  swift_beginAccess(&v124, &v123, 0LL, 0LL);
  return v124;
}

uint64_t sub_9E41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_99694(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void *sub_9E424(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[6];
  uint64_t v5 = (void *)a1[7];
  uint64_t v6 = a1[8];
  swift_bridgeObjectRetain(a1[5]);
  swift_retain(v4);
  id v7 = v5;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

void *sub_9E490(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = (void *)a1[7];
  swift_bridgeObjectRelease(a1[8]);

  swift_release(v5);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

unint64_t sub_9E4F8()
{
  unint64_t result = qword_286130;
  if (!qword_286130)
  {
    uint64_t v1 = sub_45D50(&qword_286128);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_286130);
  }

  return result;
}

uint64_t sub_9E544(uint64_t a1, uint64_t a2)
{
  return sub_98078(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_9E554@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = &protocol witness table for FeatureFlagProvider;
  uint64_t v2 = sub_10974(&v13);
  static FeatureFlagProvider.shared.getter(v2);
  uint64_t v11 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v12 = &protocol witness table for MediaRemoteAPIProvider;
  *(void *)&__int128 v10 = static MediaRemoteAPIProvider.shared.getter();
  uint64_t v8 = type metadata accessor for EncryptionProvider(0LL);
  uint64_t v9 = &protocol witness table for EncryptionProvider;
  uint64_t v3 = sub_10974(&v7);
  EncryptionProvider.init()(v3);
  uint64_t v4 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v5 = swift_allocObject(v4, 136LL, 7LL);
  sub_FF54(&v13, v5 + 16);
  sub_FF54(&v10, v5 + 56);
  uint64_t result = sub_FF54(&v7, v5 + 96);
  a1[3] = v4;
  a1[4] = (uint64_t)&off_273E28;
  *a1 = v5;
  return result;
}

uint64_t type metadata accessor for Determine.ChildFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin9Determine16ChildFlowFactory);
}

uint64_t sub_9E658(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v25[-1] - v15;
  uint64_t v30 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v31 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v29 = a3;
  uint64_t v27 = type metadata accessor for SiriAudioOutputProvider();
  unint64_t v28 = &off_272868;
  *(void *)&__int128 v26 = a4;
  uint64_t v17 = type metadata accessor for DetermineCatDialogService();
  uint64_t v18 = (void *)swift_allocObject(v17, 56LL, 7LL);
  v18[6] = 0xEF746E65746E4965LL;
  v18[2] = 0xD000000000000011LL;
  v18[3] = 0x800000000021D860LL;
  v18[4] = a1;
  v18[5] = 0x6E696D7265746544LL;
  sub_157C4((uint64_t)a2, (uint64_t)v25);
  uint64_t v19 = swift_retain(a1);
  static StringsFileResolver.shared.getter(v19);
  uint64_t v20 = type metadata accessor for DetermineDialogProvider(0LL);
  uint64_t v21 = (void *)swift_allocObject(v20, 128LL, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  uint64_t v22 = sub_9E830((uint64_t)v18, a1, v25, (uint64_t)v14, v21);
  swift_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  sub_6C3C(a2);
  *(void *)(a5 + 16) = v22;
  sub_FF54(&v29, a5 + 24);
  sub_FF54(&v26, a5 + 64);
  return a5;
}

void *sub_9E830(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for StringsFileResolver(0LL);
  v17[3] = v10;
  v17[4] = &protocol witness table for StringsFileResolver;
  uint64_t v11 = sub_10974(v17);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v11, a4, v10);
  a5[15] = a1;
  sub_157C4((uint64_t)v17, (uint64_t)v16);
  uint64_t v12 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v13 = swift_retain(a1);
  uint64_t v14 = static SiriKitTaskLoggingProvider.shared.getter(v13);
  a5[11] = v12;
  a5[12] = &protocol witness table for SiriKitTaskLoggingProvider;
  a5[8] = v14;
  a5[13] = 0xD000000000000011LL;
  a5[14] = 0x800000000021D860LL;
  a5[2] = a2;
  sub_FF54(v16, (uint64_t)(a5 + 3));
  sub_6C3C(v17);
  sub_6C3C(a3);
  return a5;
}

void *sub_9E920( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v40 = a8;
  uint64_t v39 = a7;
  uint64_t v38 = a5;
  uint64_t v41 = (void *)a3;
  uint64_t v13 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v37 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v37 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))((char *)&v37 - v21, a2, v13);
  uint64_t v56 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v57 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v55 = a4;
  uint64_t v23 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v53 = v23;
  id v54 = &protocol witness table for FeatureFlagProvider;
  unint64_t v24 = sub_10974(&v52);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32LL))(v24, a6, v23);
  uint64_t v50 = type metadata accessor for SiriAudioOutputProvider();
  unint64_t v51 = &off_272868;
  *(void *)&__int128 v49 = v38;
  uint64_t v47 = type metadata accessor for DetermineSnippetProvider();
  unint64_t v48 = &off_2701D8;
  *(void *)&__int128 v46 = v39;
  uint64_t v25 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v45 = &off_273E28;
  uint64_t v44 = v25;
  *(void *)&__int128 v43 = v40;
  uint64_t v26 = type metadata accessor for DetermineCatDialogService();
  uint64_t v27 = (void *)swift_allocObject(v26, 56LL, 7LL);
  v27[6] = 0xEF746E65746E4965LL;
  void v27[2] = 0xD000000000000011LL;
  v27[3] = 0x800000000021D860LL;
  v27[4] = a1;
  v27[5] = 0x6E696D7265746544LL;
  a9[2] = v27;
  unint64_t v28 = v41;
  sub_157C4((uint64_t)v41, (uint64_t)v42);
  swift_retain_n(a1, 2LL);
  uint64_t v29 = swift_retain(v27);
  static StringsFileResolver.shared.getter(v29);
  uint64_t v30 = type metadata accessor for DetermineDialogProvider(0LL);
  uint64_t v31 = (void *)swift_allocObject(v30, 128LL, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v13);
  unint64_t v32 = sub_9E830((uint64_t)v27, a1, v42, (uint64_t)v17, v31);
  swift_release(v27);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
  v33(v20, v13);
  a9[9] = v32;
  uint64_t v34 = type metadata accessor for DetermineViewProvider(0LL);
  uint64_t v35 = swift_allocObject(v34, 64LL, 7LL);
  swift_retain(v32);
  sub_1B8F7C((uint64_t *)(v35 + 24));
  *(void *)(v35 + 16) = v32;
  sub_6C3C(v28);
  v33(v22, v13);
  a9[8] = v35;
  sub_FF54(&v55, (uint64_t)(a9 + 3));
  sub_FF54(&v49, (uint64_t)(a9 + 10));
  sub_FF54(&v52, (uint64_t)(a9 + 15));
  sub_FF54(&v46, (uint64_t)(a9 + 20));
  sub_FF54(&v43, (uint64_t)(a9 + 25));
  return a9;
}

void *sub_9EC4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v54 = a6;
  uint64_t v55 = a4;
  uint64_t v56 = a1;
  uint64_t v57 = a3;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  __chkstk_darwin(v12);
  unint64_t v51 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v15 + 32))((char *)&v48 - v19, a2);
  uint64_t v23 = type metadata accessor for SiriAudioOutputProvider();
  v64[3] = v23;
  v64[4] = &off_272868;
  v64[0] = a5;
  uint64_t v62 = type metadata accessor for DetermineSnippetProvider();
  uint64_t v63 = &off_2701D8;
  v61[0] = a7;
  uint64_t v59 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v60 = &off_273E28;
  v58[0] = a8;
  uint64_t v24 = type metadata accessor for Determine.HandleIntentStrategy();
  uint64_t v50 = (void *)swift_allocObject(v24, 240LL, 7LL);
  uint64_t v25 = sub_1094C((uint64_t)v64, v23);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = sub_1094C((uint64_t)v61, v62);
  __chkstk_darwin(v29);
  uint64_t v31 = (uint64_t *)((char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  uint64_t v33 = sub_1094C((uint64_t)v58, v59);
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t *)((char *)&v48 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  uint64_t v37 = *v27;
  uint64_t v49 = *v31;
  uint64_t v48 = *v35;
  uint64_t v38 = (uint64_t)v18;
  uint64_t v39 = v20;
  uint64_t v40 = v22;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v22);
  uint64_t v41 = v52;
  uint64_t v42 = v53;
  uint64_t v43 = (uint64_t)v51;
  uint64_t v44 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v54, v53);
  uint64_t v45 = v55;
  swift_retain(v55);
  __int128 v46 = sub_9E920(v56, v38, v57, v45, v37, v43, v49, v48, v50);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v42);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v40);
  sub_6C3C(v58);
  sub_6C3C(v61);
  sub_6C3C(v64);
  return v46;
}

uint64_t sub_9EF84()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v108 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v109 = (uint64_t *)((char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v93 - v3;
  uint64_t v5 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v106 = v5;
  uint64_t v107 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v93 - v10;
  uint64_t v111 = sub_6C5C(&qword_2861D0);
  uint64_t v105 = *(void *)(v111 - 8);
  uint64_t v12 = __chkstk_darwin(v111);
  uint64_t v104 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v110 = (char *)&v93 - v14;
  uint64_t v15 = type metadata accessor for DetermineIntent();
  uint64_t v100 = v15;
  uint64_t v99 = type metadata accessor for DetermineIntentResponse();
  RCHChildFlowProducers.init()(v15);
  __int128 v97 = (char *)sub_64FAC();
  static StringsFileResolver.shared.getter(v97);
  static AceService.current.getter(v113);
  uint64_t v101 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v94 = static SiriKitTaskLoggingProvider.shared.getter(v101);
  uint64_t v118 = v0;
  uint64_t v119 = &protocol witness table for FeatureFlagProvider;
  uint64_t v16 = sub_10974(&v117);
  static FeatureFlagProvider.shared.getter(v16);
  uint64_t v102 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v17 = swift_allocObject(v102, 56LL, 7LL);
  uint64_t v18 = sub_FF54(&v117, v17 + 16);
  static FeatureFlagProvider.shared.getter(v18);
  uint64_t v19 = type metadata accessor for AppIntentInvoker(0LL);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  uint64_t v20 = AppIntentInvoker.init()();
  uint64_t v118 = v19;
  uint64_t v119 = &protocol witness table for AppIntentInvoker;
  *(void *)&__int128 v117 = v20;
  uint64_t v21 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v22 = static MediaRemoteAPIProvider.shared.getter(v21);
  uint64_t v115 = v21;
  uint64_t v116 = (_UNKNOWN **)&protocol witness table for MediaRemoteAPIProvider;
  *(void *)&__int128 v114 = v22;
  uint64_t v23 = type metadata accessor for DetermineSnippetProvider();
  uint64_t v24 = swift_allocObject(v23, 96LL, 7LL);
  sub_FF54(&v117, v24 + 16);
  sub_FF54(&v114, v24 + 56);
  sub_9E554((uint64_t *)&v117);
  uint64_t v25 = sub_1094C((uint64_t)&v117, v118);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v28 + 16))(v27);
  __n128 v95 = *(void (**)(uint64_t, uint64_t))v27;
  uint64_t v98 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v98(v9, v11, v106);
  uint64_t v29 = v109;
  uint64_t v96 = *(void (**)(void *, char *, uint64_t))(v108 + 16);
  v96(v109, v4, v0);
  swift_retain(v17);
  uint64_t v30 = v24;
  swift_retain(v24);
  uint64_t v31 = v94;
  swift_retain(v94);
  uint64_t v32 = (uint64_t)v97;
  uint64_t v103 = v9;
  uint64_t v33 = (uint64_t)v29;
  uint64_t v34 = v11;
  uint64_t v35 = v30;
  uint64_t v36 = sub_9EC4C((uint64_t)v97, (uint64_t)v9, (uint64_t)v113, v31, v17, v33, v30, (uint64_t)v95);
  swift_release(v32);
  swift_release(v31);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
  __int128 v97 = v4;
  uint64_t v108 = v0;
  uint64_t v38 = v106;
  __n128 v95 = v37;
  v37((uint64_t)v4, v0);
  swift_release(v31);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v107 + 8);
  uint64_t v94 = (uint64_t)v34;
  v39(v34, v38);
  sub_6C3C(&v117);
  swift_release(v17);
  swift_release(v35);
  *(void *)&v113[0] = v36;
  uint64_t v40 = type metadata accessor for Determine.HandleIntentStrategy();
  uint64_t v41 = sub_10430( &qword_2861D8,  (uint64_t (*)(uint64_t))type metadata accessor for Determine.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for Determine.HandleIntentStrategy);
  uint64_t v42 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v113, v40, v41);
  uint64_t v44 = v43;
  swift_release(v36);
  uint64_t v45 = v111;
  RCHChildFlowProducers.handleIntentFlowCompletion.setter(v42, v44, v111);
  uint64_t v46 = type metadata accessor for App(0LL);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v107 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)( 0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
  uint64_t v47 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)(v107, v100, v99);
  RCHChildFlowProducers.appResolutionFlowCompletion.setter(v47, v48, v45);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v49 = CATDefaultMode;
  uint64_t v50 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v51 = static MorphunProvider.shared.getter(v50);
  uint64_t v52 = static AceService.current.getter(&v117);
  uint64_t v53 = (uint64_t)v97;
  static FeatureFlagProvider.shared.getter(v52);
  uint64_t v54 = type metadata accessor for CatService();
  uint64_t v55 = swift_allocObject(v54, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v113);
  uint64_t v57 = v108;
  uint64_t v56 = (uint64_t)v109;
  v96(v109, (char *)v53, v108);
  swift_retain(v51);
  uint64_t v58 = sub_10FF64(v113, v49, v51, &v117, v56, v55);
  swift_release(v51);
  v95(v53, v57);
  swift_release(v51);
  uint64_t v59 = type metadata accessor for DetermineCatDialogService();
  uint64_t v60 = (void *)swift_allocObject(v59, 56LL, 7LL);
  v60[6] = 0xEF746E65746E4965LL;
  v60[2] = 0xD000000000000011LL;
  v60[3] = 0x800000000021D860LL;
  v60[4] = v58;
  v60[5] = 0x6E696D7265746544LL;
  swift_retain_n(v58, 2LL);
  uint64_t v61 = static AceService.current.getter(v113);
  uint64_t v62 = v94;
  static StringsFileResolver.shared.getter(v61);
  uint64_t v63 = type metadata accessor for DetermineDialogProvider(0LL);
  uint64_t inited = (void *)swift_initStackObject(v63, &v112);
  uint64_t v65 = (uint64_t)v103;
  v98(v103, (char *)v62, v38);
  uint64_t v109 = sub_9E830((uint64_t)v60, v58, v113, v65, inited);
  swift_release(v60);
  v39((char *)v62, v38);
  uint64_t v66 = sub_64FAC();
  uint64_t v67 = static AceService.current.getter(&v117);
  uint64_t v68 = static SiriKitTaskLoggingProvider.shared.getter(v67);
  uint64_t v115 = v57;
  uint64_t v116 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v69 = sub_10974(&v114);
  static FeatureFlagProvider.shared.getter(v69);
  uint64_t v70 = v102;
  uint64_t v71 = swift_allocObject(v102, 56LL, 7LL);
  sub_FF54(&v114, v71 + 16);
  uint64_t v115 = v70;
  uint64_t v116 = &off_272868;
  *(void *)&__int128 v114 = v71;
  uint64_t v72 = type metadata accessor for Determine.UnsupportedValueStrategy();
  uint64_t v73 = swift_allocObject(v72, 104LL, 7LL);
  uint64_t v74 = sub_1094C((uint64_t)&v114, v70);
  __chkstk_darwin(v74);
  unint64_t v76 = (uint64_t *)((char *)&v93 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v77 + 16))(v76);
  uint64_t v78 = *v76;
  swift_retain(v71);
  uint64_t v79 = sub_9E658(v66, &v117, v68, v78, v73);
  sub_6C3C(&v114);
  swift_release(v71);
  *(void *)&__int128 v117 = v79;
  uint64_t v80 = sub_10430( (unint64_t *)&qword_2861E0,  (uint64_t (*)(uint64_t))type metadata accessor for Determine.UnsupportedValueStrategy,  (uint64_t)&protocol conformance descriptor for Determine.UnsupportedValueStrategy);
  uint64_t v81 = static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)(&v117, v72, v80);
  uint64_t v83 = v82;
  swift_release(v79);
  uint64_t v84 = v81;
  uint64_t v85 = v83;
  uint64_t v87 = v110;
  uint64_t v86 = v111;
  RCHChildFlowProducers.unsupportedValueFlowCompletion.setter(v84, v85, v111);
  unint64_t v89 = v104;
  uint64_t v88 = v105;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v104, v87, v86);
  uint64_t v90 = sub_6C5C(&qword_2861E8);
  swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
  uint64_t v91 = RCHChildFlowFactory.init(producers:)(v89);
  swift_release(v58);
  swift_release(v107);
  swift_release(v109);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v86);
  return v91;
}

uint64_t storeEnumTagSinglePayload for MediaPlayerConfirmation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_9F7F8 + 4 * byte_216195[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_9F82C + 4 * asc_216190[v4]))();
}

uint64_t sub_9F82C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9F834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x9F83CLL);
  }
  return result;
}

uint64_t sub_9F848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x9F850LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_9F854(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9F85C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerConfirmation()
{
  return &type metadata for MediaPlayerConfirmation;
}

unint64_t sub_9F87C()
{
  unint64_t result = qword_2861F0;
  if (!qword_2861F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_2162C0, &type metadata for MediaPlayerConfirmation);
    atomic_store(result, (unint64_t *)&qword_2861F0);
  }

  return result;
}

void sub_9F8C0(char *a1)
{
}

void sub_9F8CC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v2, 0LL);
  __asm { BR              X9 }

Swift::Int sub_9F910()
{
  return Hasher._finalize()();
}

void sub_9F974()
{
  __asm { BR              X10 }

uint64_t sub_9F9A8(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xE200000000000000LL);
}

void sub_9F9F8(uint64_t a1)
{
  uint64_t v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }

Swift::Int sub_9FA38()
{
  return Hasher._finalize()();
}

unint64_t sub_9FA9C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_9FC88(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_9FAC8()
{
  return ((uint64_t (*)(void))((char *)sub_9FAF0 + 4 * byte_2161A6[*v0]))();
}

void sub_9FAF0(void *a1@<X8>)
{
  *a1 = 28526LL;
  a1[1] = 0xE200000000000000LL;
}

void sub_9FB00(void *a1@<X8>)
{
  *a1 = 0x6C65636E6163LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_9FB18(void *a1@<X8>)
{
  *a1 = 0x666E692065726F6DLL;
  a1[1] = 0xE90000000000006FLL;
}

void sub_9FB38(void *a1@<X8>)
{
  *a1 = &off_26A7D0;
}

uint64_t sub_9FB48(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_9FCD0();
  unint64_t v5 = sub_9FD14();
  unint64_t v6 = sub_9FD58();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_9FBAC()
{
  unint64_t result = qword_2861F8;
  if (!qword_2861F8)
  {
    uint64_t v1 = sub_45D50(&qword_286200);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_2861F8);
  }

  return result;
}

unint64_t sub_9FBFC()
{
  unint64_t result = qword_286208;
  if (!qword_286208)
  {
    unint64_t result = swift_getWitnessTable(&unk_2161E8, &type metadata for MediaPlayerConfirmation);
    atomic_store(result, (unint64_t *)&qword_286208);
  }

  return result;
}

unint64_t sub_9FC44()
{
  unint64_t result = qword_286210;
  if (!qword_286210)
  {
    unint64_t result = swift_getWitnessTable(&unk_216300, &type metadata for MediaPlayerConfirmation);
    atomic_store(result, (unint64_t *)&qword_286210);
  }

  return result;
}

unint64_t sub_9FC88(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26A750, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

unint64_t sub_9FCD0()
{
  unint64_t result = qword_286218;
  if (!qword_286218)
  {
    unint64_t result = swift_getWitnessTable(&unk_216250, &type metadata for MediaPlayerConfirmation);
    atomic_store(result, (unint64_t *)&qword_286218);
  }

  return result;
}

unint64_t sub_9FD14()
{
  unint64_t result = qword_286220;
  if (!qword_286220)
  {
    unint64_t result = swift_getWitnessTable(&unk_216218, &type metadata for MediaPlayerConfirmation);
    atomic_store(result, (unint64_t *)&qword_286220);
  }

  return result;
}

unint64_t sub_9FD58()
{
  unint64_t result = qword_286228;
  if (!qword_286228)
  {
    unint64_t result = swift_getWitnessTable(&unk_216288, &type metadata for MediaPlayerConfirmation);
    atomic_store(result, (unint64_t *)&qword_286228);
  }

  return result;
}

uint64_t type metadata accessor for UpdateMediaAffinityViewProvider(uint64_t a1)
{
  uint64_t result = qword_286258;
  if (!qword_286258) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpdateMediaAffinityViewProvider);
  }
  return result;
}

uint64_t sub_9FDD8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for EncryptionProvider(0LL);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v52 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v20);
  uint64_t v51 = (uint64_t)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, v51, &qword_285BD0);
  uint64_t v57 = a2;
  id v50 = a2;
  uint64_t v22 = v19;
  static FeatureFlagProvider.shared.getter(v50);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v49 = static MediaRemoteAPIProvider.shared.getter(v23);
  uint64_t v24 = static AceService.current.getter(v60);
  if (qword_2838F0 != -1) {
    uint64_t v24 = (void *)swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v25 = static DeviceProvider.shared.getter(v24);
  EncryptionProvider.init()(v25);
  type metadata accessor for SharedContextProvider(0LL);
  uint64_t v48 = static SharedContextProvider.shared.getter();
  uint64_t v26 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v46 = static SiriKitTaskLoggingProvider.shared.getter(v26);
  uint64_t v27 = type metadata accessor for ConfirmInterruptionFlow(0LL);
  uint64_t v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  uint64_t v44 = v13;
  uint64_t v29 = v28;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v31 = (uint64_t)v17;
  uint64_t v47 = v22;
  v30(v17, v22, v14);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v59);
  uint64_t v45 = v14;
  uint64_t v32 = v53;
  uint64_t v33 = (uint64_t)v52;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v13, v9);
  uint64_t v43 = v9;
  uint64_t v34 = v8;
  uint64_t v36 = (uint64_t)v54;
  uint64_t v35 = v55;
  uint64_t v37 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v34, v56);
  uint64_t v38 = v49;
  swift_retain(v49);
  uint64_t v39 = sub_A588C(v51, v57, v31, v38, (uint64_t)v60, v59, v33, v36, v48, v46, v29);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v44, v43);
  swift_release(v38);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v45);
  *(void *)&v59[0] = v39;
  uint64_t v40 = sub_10430(&qword_286610, type metadata accessor for ConfirmInterruptionFlow, (uint64_t)&unk_217758);
  uint64_t v41 = Flow.eraseToAnyFlow()(v27, v40);
  swift_release(v39);
  return v41;
}

uint64_t sub_A01CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v24[-v8 - 8];
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "SiriForAirPlayFlow#on Handling input", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = type metadata accessor for Input(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v9, a1, v19);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0LL, 1LL, v19);
  sub_88CFC((uint64_t)v9, (uint64_t)v7);
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_input;
  swift_beginAccess(v21, v24, 33LL, 0LL);
  sub_1B3B0((uint64_t)v7, v21);
  swift_endAccess(v24);
  return 1LL;
}

uint64_t sub_A03E8(void *a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  os_log_type_t v173 = a3;
  uint64_t v164 = *v4;
  os_log_type_t v165 = a2;
  uint64_t v7 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v167 = *(void *)(v7 - 8);
  uint64_t v168 = v7;
  __chkstk_darwin(v7);
  uint64_t v166 = (uint64_t)v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v171 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v172 = (char *)v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_286620);
  __chkstk_darwin(v11);
  uint64_t v163 = (char *)v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  unint64_t v14 = *(void *)(v13 - 8);
  uint64_t v175 = v13;
  unint64_t v176 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v156 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)v156 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)v156 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)v156 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v31 = __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v156 - v34;
  if (a1)
  {
    uint64_t v36 = v33;
    uint64_t v162 = v32;
    uint64_t v169 = v9;
    uint64_t v170 = a4;
    v186[0] = a1;
    uint64_t v37 = sub_1641C(0LL, (unint64_t *)&qword_286618, &OBJC_CLASS___INIntent_ptr);
    id v38 = a1;
    uint64_t v39 = sub_6C5C(&qword_286628);
    if (swift_dynamicCast(&v177, v186, v37, v39, 6LL))
    {
      sub_1F6CC((uint64_t)&v177, &qword_286630);
      v185[0] = v38;
      id v40 = v38;
      uint64_t v41 = sub_6C5C((uint64_t *)&unk_286C70);
      if (swift_dynamicCast(&v177, v185, v37, v41, 6LL))
      {
        sub_FF54(&v177, (uint64_t)v186);
        *(void *)&v184[0] = v40;
        id v42 = v40;
        uint64_t v43 = sub_6C5C(&qword_286638);
        int v44 = swift_dynamicCast(&v177, v184, v37, v43, 6LL);
        uint64_t v45 = v170;
        if (!v44)
        {
          unint64_t v89 = a1;
          uint64_t v179 = 0LL;
          __int128 v177 = 0u;
          __int128 v178 = 0u;
          sub_1F6CC((uint64_t)&v177, &qword_286640);
          if (qword_283888 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v90 = v175;
          uint64_t v91 = sub_6960(v175, (uint64_t)qword_2969C8);
          uint64_t v92 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v176 + 16))(v26, v91, v90);
          uint64_t v93 = (os_log_s *)Logger.logObject.getter(v92);
          os_log_type_t v94 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v93, v94))
          {
            __n128 v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)__n128 v95 = 0;
            _os_log_impl( &dword_0,  v93,  v94,  "SiriForAirPlayFlow#execute intent is not PrivateMediaIntentDataProviding",  v95,  2u);
            swift_slowDealloc(v95, -1LL, -1LL);
          }

          (*(void (**)(char *, uint64_t))(v176 + 8))(v26, v90);
          id v96 = v42;
          __int128 v97 = v172;
          sub_A38E8(v89);

          v173(v97);
          (*(void (**)(char *, uint64_t))(v171 + 8))(v97, v169);
          return sub_6C3C(v186);
        }

        sub_FF54(&v177, (uint64_t)v185);
        sub_6EA8(v186, v186[3]);
        CommonIntentSignals.addHandledBySiriForAirPlay()();
        uint64_t v46 = *(void *)(v174 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedApp);
        if (v46)
        {
          uint64_t v47 = swift_retain(*(void *)(v174 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedApp));
          uint64_t v48 = App.appIdentifier.getter(v47);
          if (v49)
          {
            unint64_t v50 = v49;
            uint64_t v166 = v48;
            uint64_t v160 = v46;
            id v161 = v42;
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v157 = a1;
            uint64_t v51 = v175;
            uint64_t v52 = sub_6960(v175, (uint64_t)qword_2969C8);
            unint64_t v53 = v176;
            uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 16);
            uint64_t v158 = v52;
            uint64_t v159 = v54;
            ((void (*)(char *))v54)(v35);
            uint64_t v55 = swift_bridgeObjectRetain_n(v50, 2LL);
            uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
            os_log_type_t v57 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v56, v57))
            {
              uint64_t v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v59 = swift_slowAlloc(32LL, -1LL);
              *(void *)&__int128 v177 = v59;
              *(_DWORD *)uint64_t v58 = 136315138;
              v156[1] = v58 + 4;
              swift_bridgeObjectRetain(v50);
              uint64_t v60 = v166;
              *(void *)&v184[0] = sub_6978(v166, v50, (uint64_t *)&v177);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v184, (char *)v184 + 8);
              swift_bridgeObjectRelease_n(v50, 3LL);
              _os_log_impl(&dword_0, v56, v57, "SiriForAirPlayFlow#execute targetBundleIdentifier is %s", v58, 0xCu);
              swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v59, -1LL, -1LL);
              swift_slowDealloc(v58, -1LL, -1LL);

              uint64_t v61 = *(uint64_t (**)(char *, uint64_t))(v176 + 8);
              uint64_t v62 = v61(v35, v175);
            }

            else
            {

              swift_bridgeObjectRelease_n(v50, 2LL);
              uint64_t v61 = *(uint64_t (**)(char *, uint64_t))(v53 + 8);
              uint64_t v62 = v61(v35, v51);
              uint64_t v60 = v166;
            }

            uint64_t v108 = (void *)static BundleIdentifiers.internalBundleIdentifiers.getter(v62);
            char v109 = sub_881D0(v60, v50, v108);
            uint64_t v110 = swift_bridgeObjectRelease(v108);
            uint64_t v111 = v161;
            if ((v109 & 1) != 0)
            {
              swift_bridgeObjectRelease(v50);
LABEL_47:
              uint64_t v118 = v175;
              uint64_t v119 = v159((uint64_t)v36, v158, v175);
              uint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
              os_log_type_t v121 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v120, v121))
              {
                uint64_t v122 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)uint64_t v122 = 0;
                _os_log_impl( &dword_0,  v120,  v121,  "SiriForAirPlayFlow#execute we got first party bundle identifier, executing locally",  v122,  2u);
                swift_slowDealloc(v122, -1LL, -1LL);
              }

              v61(v36, v118);
              id v123 = v111;
              uint64_t v124 = v172;
              sub_A38E8(v157);

              v173(v124);
              swift_release(v160);
              (*(void (**)(char *, uint64_t))(v171 + 8))(v124, v169);
              goto LABEL_50;
            }

            uint64_t v112 = static BundleIdentifiers.soundscapes.getter(v110);
            unint64_t v114 = v113;
            uint64_t v115 = v170;
            if (v60 == v112 && v50 == v113)
            {
              swift_bridgeObjectRelease(v50);
              unint64_t v116 = v114;
LABEL_46:
              swift_bridgeObjectRelease(v116);
              goto LABEL_47;
            }

            char v117 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v50);
            swift_bridgeObjectRelease(v114);
            if ((v117 & 1) != 0)
            {
              unint64_t v116 = v50;
              goto LABEL_46;
            }

            sub_157C4((uint64_t)v185, (uint64_t)v184);
            sub_157C4((uint64_t)v186, (uint64_t)v183);
            sub_157C4((uint64_t)v184, (uint64_t)v182);
            sub_157C4((uint64_t)v183, (uint64_t)v181);
            uint64_t v125 = (void *)swift_allocObject(&unk_26D730, 160LL, 7LL);
            uint64_t v126 = v173;
            uint64_t v127 = v174;
            v125[2] = v174;
            v125[3] = v111;
            v125[4] = v60;
            v125[5] = v50;
            v125[6] = v126;
            v125[7] = v115;
            sub_FF54(v184, (uint64_t)(v125 + 8));
            uint64_t v128 = v165;
            v125[13] = v165;
            sub_FF54(v183, (uint64_t)(v125 + 14));
            v125[19] = v164;
            uint64_t v129 = v127;
            uint64_t v130 = *(void **)(v127
                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_mediaServiceConfiguration);
            if (v130)
            {
              id v131 = v128;
              id v132 = v111;
              swift_bridgeObjectRetain_n(v50, 2LL);
              swift_retain_n(v129, 2LL);
              swift_retain_n(v115, 2LL);
              id v133 = v131;
              id v134 = v132;
              id v135 = v130;
            }

            else
            {
              id v136 = v128;
              id v137 = v111;
              unint64_t v176 = v50;
              swift_bridgeObjectRetain_n(v50, 2LL);
              swift_retain_n(v129, 2LL);
              swift_retain_n(v115, 2LL);
              uint64_t v138 = v115;
              id v133 = v136;
              id v139 = v137;
              uint64_t v140 = (void *)static DispatchQueues.mediaServiceConfigurationQueue.getter();
              id v135 = [objc_allocWithZone(MediaServiceConfiguration) initWithQueue:v140];

              if (!v135)
              {
                uint64_t v147 = v133;
                uint64_t v148 = v175;
                uint64_t v149 = v159((uint64_t)v162, v158, v175);
                uint64_t v150 = (os_log_s *)Logger.logObject.getter(v149);
                os_log_type_t v151 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v150, v151))
                {
                  uint64_t v152 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                  *(_WORD *)uint64_t v152 = 0;
                  _os_log_impl( &dword_0,  v150,  v151,  "SiriForAirPlayFlow#execute could not get MediaServiceConfiguration",  v152,  2u);
                  uint64_t v138 = v170;
                  swift_slowDealloc(v152, -1LL, -1LL);
                }

                v61(v162, v148);
                uint64_t v153 = (uint64_t)v163;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v167 + 56))(v163, 1LL, 1LL, v168);
                uint64_t v154 = v174;
                unint64_t v155 = v176;
                sub_A1438(0, v153, v174, v139, v166, v176, v173, v138, (uint64_t)v182, v165, (uint64_t)v181, v164);
                sub_1F6CC(v153, &qword_286620);
                swift_release(v138);
                swift_bridgeObjectRelease(v155);

                swift_release(v154);
                swift_release(v125);
                swift_release(v160);
                sub_6C3C(v182);

                sub_6C3C(v181);
                unint64_t v146 = v155;
                goto LABEL_57;
              }

              uint64_t v130 = 0LL;
              uint64_t v129 = v174;
              unint64_t v50 = v176;
            }

            uint64_t v141 = (void *)swift_allocObject(&unk_26D758, 56LL, 7LL);
            v141[2] = sub_A702C;
            v141[3] = v125;
            v141[4] = v166;
            v141[5] = v50;
            v141[6] = v129;
            uint64_t v179 = sub_A70A0;
            uint64_t v180 = v141;
            *(void *)&__int128 v177 = _NSConcreteStackBlock;
            *((void *)&v177 + 1) = 1107296256LL;
            *(void *)&__int128 v178 = sub_A3844;
            *((void *)&v178 + 1) = &unk_26D770;
            uint64_t v142 = _Block_copy(&v177);
            unint64_t v143 = v50;
            uint64_t v144 = v180;
            swift_bridgeObjectRetain(v143);
            swift_retain(v129);
            id v145 = v130;
            swift_retain(v125);
            swift_release(v144);
            [v135 getSupportedThirdPartyMediaServices:v142];
            _Block_release(v142);
            swift_release(v170);
            swift_bridgeObjectRelease(v143);

            swift_release(v129);
            swift_release(v125);
            swift_release(v160);

            sub_6C3C(v182);
            sub_6C3C(v181);

            unint64_t v146 = v143;
LABEL_57:
            swift_bridgeObjectRelease(v146);
LABEL_50:
            sub_6C3C(v185);
            return sub_6C3C(v186);
          }

          swift_release(v46);
        }

        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v98 = v175;
        uint64_t v99 = sub_6960(v175, (uint64_t)qword_2969C8);
        uint64_t v100 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v176 + 16))(v29, v99, v98);
        uint64_t v101 = (os_log_s *)Logger.logObject.getter(v100);
        os_log_type_t v102 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v103 = 0;
          _os_log_impl( &dword_0,  v101,  v102,  "SiriForAirPlayFlow#execute App resolution failed, returning an error.",  v103,  2u);
          swift_slowDealloc(v103, -1LL, -1LL);
        }

        (*(void (**)(char *, uint64_t))(v176 + 8))(v29, v175);
        uint64_t v105 = v166;
        uint64_t v104 = v167;
        uint64_t v106 = v168;
        (*(void (**)(uint64_t, void, uint64_t))(v167 + 104))( v166,  enum case for AdditionalMetricsDescription.StatusReason.appResolutionFailed(_:),  v168);
        id v107 = v42;
        sub_A3BA4(0, a1, 0LL, v105, (uint64_t)v173, v45);

        (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v105, v106);
        goto LABEL_50;
      }

      uint64_t v179 = 0LL;
      __int128 v177 = 0u;
      __int128 v178 = 0u;
      sub_1F6CC((uint64_t)&v177, &qword_2858C8);
      unint64_t v82 = v176;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v83 = v175;
      uint64_t v84 = sub_6960(v175, (uint64_t)qword_2969C8);
      uint64_t v85 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 16))(v23, v84, v83);
      uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
      os_log_type_t v87 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v88 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v88 = 0;
        _os_log_impl(&dword_0, v86, v87, "SiriForAirPlayFlow#execute intent is not CommonIntentSignals", v88, 2u);
        swift_slowDealloc(v88, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v82 + 8))(v23, v83);
      id v79 = v40;
      uint64_t v80 = v172;
      sub_A38E8(a1);

      uint64_t v81 = v80;
    }

    else
    {
      uint64_t v71 = a1;
      uint64_t v179 = 0LL;
      __int128 v177 = 0u;
      __int128 v178 = 0u;
      sub_1F6CC((uint64_t)&v177, &qword_286630);
      unint64_t v72 = v176;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v73 = v175;
      uint64_t v74 = sub_6960(v175, (uint64_t)qword_2969C8);
      uint64_t v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 16))(v20, v74, v73);
      unint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v78 = 0;
        _os_log_impl(&dword_0, v76, v77, "SiriForAirPlayFlow#execute intent is not MediaIntentCommons", v78, 2u);
        swift_slowDealloc(v78, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v73);
      id v79 = v38;
      uint64_t v80 = v172;
      sub_A38E8(v71);

      uint64_t v81 = v80;
    }

    v173(v81);

    return (*(uint64_t (**)(char *, uint64_t))(v171 + 8))(v80, v169);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v63 = v175;
  uint64_t v64 = sub_6960(v175, (uint64_t)qword_2969C8);
  uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v176 + 16))(v17, v64, v63);
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_0, v66, v67, "SiriForAirPlayFlow#execute intent is nil", v68, 2u);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v176 + 8))(v17, v63);
  uint64_t v69 = v172;
  sub_A38E8(0LL);
  v173(v69);
  return (*(uint64_t (**)(char *, uint64_t))(v171 + 8))(v69, v9);
}

uint64_t sub_A1438( char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, void (*a7)(char *), uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  unint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v52 = a5;
  uint64_t v17 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v49 = v17;
  __chkstk_darwin(v17);
  uint64_t v47 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v50 = *(void *)(v19 - 8);
  uint64_t v51 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_286620);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a1 & 1) != 0)
  {
    uint64_t v29 = v53;
    uint64_t v46 = a4;
    sub_FF10(a2, (uint64_t)v24, &qword_286620);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1LL, v25) == 1)
    {
      sub_1F6CC((uint64_t)v24, &qword_286620);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v30 = v51;
      uint64_t v31 = sub_6960(v51, (uint64_t)qword_2969C8);
      uint64_t v32 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v21, v31, v30);
      uint64_t v33 = swift_bridgeObjectRetain_n(a6, 2LL);
      uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v37 = swift_slowAlloc(32LL, -1LL);
        *(void *)&v56[0] = v37;
        *(_DWORD *)uint64_t v36 = 136315138;
        swift_bridgeObjectRetain(a6);
        *(void *)&v55[0] = sub_6978(v52, a6, (uint64_t *)v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v55, (char *)v55 + 8);
        swift_bridgeObjectRelease_n(a6, 3LL);
        _os_log_impl( &dword_0,  v34,  v35,  "SiriForAirPlayFlow#execute This request is for an app supporting Bolt, routing to local execution. BundleIdentifier: %s",  v36,  0xCu);
        swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1LL, -1LL);
        swift_slowDealloc(v36, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v51);
      }

      else
      {

        swift_bridgeObjectRelease_n(a6, 2LL);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v30);
      }

      uint64_t v45 = v47;
      sub_A38E8(v46);
      v29(v45);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v45, v49);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
      type metadata accessor for App(0LL);
      swift_bridgeObjectRetain(a6);
      uint64_t v44 = App.__allocating_init(appIdentifier:)(v52, a6);
      sub_A3BA4(0, v46, v44, (uint64_t)v28, (uint64_t)v29, v54);
      swift_release(v44);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    }
  }

  else
  {
    uint64_t v38 = *(void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_companionDeviceProvider + 24);
    uint64_t v51 = *(void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_companionDeviceProvider + 32);
    sub_6EA8( (void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_companionDeviceProvider),  v38);
    sub_157C4(a11, (uint64_t)v56);
    sub_157C4(a9, (uint64_t)v55);
    uint64_t v39 = (void *)swift_allocObject(&unk_26D7D0, 160LL, 7LL);
    v39[2] = a3;
    v39[3] = a4;
    v39[4] = v52;
    v39[5] = a6;
    uint64_t v40 = v54;
    v39[6] = v53;
    v39[7] = v40;
    v39[8] = a10;
    sub_FF54(v56, (uint64_t)(v39 + 9));
    sub_FF54(v55, (uint64_t)(v39 + 14));
    v39[19] = a12;
    id v41 = a10;
    swift_retain(a3);
    id v42 = a4;
    swift_bridgeObjectRetain(a6);
    swift_retain(v40);
    dispatch thunk of CompanionDeviceProviding.recognizedUserCompanion(intent:completion:)(a9, sub_A766C, v39, v38, v51);
    return swift_release(v39);
  }

uint64_t sub_A18E0( void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  uint64_t v165 = a8;
  uint64_t v183 = a2;
  uint64_t v184 = a7;
  unint64_t v181 = (uint64_t (**)(char *, void *, uint64_t))a5;
  uint64_t v182 = a6;
  uint64_t v179 = a3;
  uint64_t v180 = a4;
  __int128 v178 = a1;
  uint64_t v164 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v162 = (uint64_t)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v168 = type metadata accessor for Locale(0LL);
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v172 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  unint64_t v176 = *(char **)(v12 - 8);
  uint64_t v177 = v12;
  __chkstk_darwin(v12);
  uint64_t v175 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for CompanionDeviceError(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v156 - v19;
  uint64_t v174 = type metadata accessor for Logger(0LL);
  os_log_type_t v173 = *(void (**)(char *, uint64_t))(v174 - 8);
  uint64_t v21 = __chkstk_darwin(v174);
  uint64_t v171 = (char *)&v156 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v166 = (char *)&v156 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v160 = (char *)&v156 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v159 = (char *)&v156 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  id v161 = (char *)&v156 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v169 = (char *)&v156 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v158 = (char *)&v156 - v34;
  __chkstk_darwin(v33);
  uint64_t v170 = (char *)&v156 - v35;
  uint64_t v36 = sub_6C5C(&qword_286658);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v156 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = type metadata accessor for CompanionDeviceInfo(0LL);
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v42 = (char *)&v156 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10((uint64_t)v178, (uint64_t)v38, &qword_286658);
  if (swift_getEnumCaseMultiPayload(v38, v36) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v38, v39);
    uint64_t v157 = v39;
    uint64_t v53 = v40;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v54 = v174;
    uint64_t v55 = (void *)sub_6960(v174, (uint64_t)qword_2969C8);
    uint64_t v56 = v173;
    os_log_type_t v57 = (uint64_t (*)(void))*((void *)v173 + 2);
    uint64_t v58 = v170;
    __int128 v178 = v55;
    uint64_t v156 = (uint64_t (*)(char *, void *, uint64_t))v57;
    uint64_t v59 = v57(v170);
    uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v63 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v186 = v63;
      *(_DWORD *)uint64_t v62 = 136315138;
      uint64_t v64 = swift_beginAccess(v42, v185, 0LL, 0LL);
      uint64_t v65 = CompanionDeviceInfo.description.getter(v64);
      unint64_t v67 = v66;
      uint64_t v190 = sub_6978(v65, v66, (uint64_t *)&v186);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);
      swift_bridgeObjectRelease(v67);
      _os_log_impl(&dword_0, v60, v61, "SiriForAirPlayFlow#execute companion device info: %s", v62, 0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      uint64_t v53 = v40;
      uint64_t v54 = v174;
      swift_slowDealloc(v62, -1LL, -1LL);

      uint64_t v68 = (void (*)(char *, uint64_t))*((void *)v173 + 1);
    }

    else
    {

      uint64_t v68 = (void (*)(char *, uint64_t))*((void *)v56 + 1);
    }

    v68(v58, v54);
    uint64_t v75 = v179;
    unint64_t v76 = v172;
    swift_beginAccess(v42, &v190, 0LL, 0LL);
    Swift::Bool v77 = CompanionDeviceInfo.supportsSiriForAirPlay()();
    uint64_t v78 = v156;
    id v79 = v178;
    if (!v77)
    {
      uint64_t v87 = v156(v171, v178, v54);
      uint64_t v88 = (os_log_s *)Logger.logObject.getter(v87);
      os_log_type_t v89 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v90 = 0;
        _os_log_impl( &dword_0,  v88,  v89,  "SiriForAirPlayFlow#execute companion is on an older OS version, nform user to update",  v90,  2u);
        swift_slowDealloc(v90, -1LL, -1LL);
      }

      v68(v171, v54);
      type metadata accessor for App(0LL);
      uint64_t v91 = (uint64_t)v181;
      swift_bridgeObjectRetain(v181);
      uint64_t v92 = App.__allocating_init(appIdentifier:)(v180, v91);
      os_log_type_t v94 = (void (**)(uint64_t, uint64_t))v176;
      uint64_t v93 = v177;
      uint64_t v95 = (uint64_t)v175;
      (*((void (**)(char *, void, uint64_t))v176 + 13))( v175,  enum case for AdditionalMetricsDescription.StatusReason.softwareUpdateRequired(_:),  v177);
      unsigned __int8 v96 = 3;
      goto LABEL_42;
    }

    uint64_t v80 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    if (swift_dynamicCastObjCClass(v75, v80))
    {
      id v81 = v75;
      if (INPlayMediaIntent.isCompanionAppInstalledWithPlay()())
      {

        unint64_t v82 = v169;
        uint64_t v83 = v78(v169, v79, v54);
        uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
        os_log_type_t v85 = static os_log_type_t.debug.getter();
        if (!os_log_type_enabled(v84, v85))
        {
          id v79 = v178;
          goto LABEL_36;
        }

        uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v86 = 0;
        _os_log_impl(&dword_0, v84, v85, "SiriForAirPlayFlow#execute app is installed and supports play", v86, 2u);
        id v79 = v178;
        goto LABEL_33;
      }

      Swift::Bool v97 = INPlayMediaIntent.isCompanionAppInstalled()();

      if (v97)
      {
        unint64_t v176 = v42;
        uint64_t v177 = v53;
        uint64_t v98 = v158;
        uint64_t v99 = v78(v158, v79, v54);
        uint64_t v100 = (os_log_s *)Logger.logObject.getter(v99);
        os_log_type_t v101 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v100, v101))
        {
          os_log_type_t v102 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)os_log_type_t v102 = 0;
          _os_log_impl( &dword_0,  v100,  v101,  "SiriForAirPlayFlow#execute app is installed but doesn't support play, informing the user that app hasn't added support",  v102,  2u);
          swift_slowDealloc(v102, -1LL, -1LL);
        }

        v68(v98, v54);
        uint64_t v103 = v183;
        uint64_t v104 = *(void *)(v183
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_commonMediaIntentCatDialogService);
        swift_retain(v104);
        unint64_t v105 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        type metadata accessor for App(0LL);
        uint64_t v106 = (uint64_t)v181;
        swift_bridgeObjectRetain(v181);
        uint64_t v107 = App.__allocating_init(appIdentifier:)(v180, v106);
        uint64_t v108 = (void *)swift_allocObject(&unk_26D7F8, 40LL, 7LL);
        unint64_t v181 = &v156;
        char v109 = v182;
        v108[2] = v103;
        v108[3] = v109;
        uint64_t v110 = v184;
        v108[4] = v184;
        uint64_t v111 = *(void *)(v104 + 24);
        uint64_t v112 = *(void *)(v104 + 16);
        uint64_t v188 = 0LL;
        __int128 v186 = 0u;
        __int128 v187 = 0u;
        __chkstk_darwin(v108);
        *(&v156 - 10) = (uint64_t (*)(char *, void *, uint64_t))v112;
        *(&v156 - 9) = (uint64_t (*)(char *, void *, uint64_t))v111;
        *(&v156 - sub_6C3C(v0 + 8) = (uint64_t (*)(char *, void *, uint64_t))0xD000000000000024LL;
        *(&v156 - sub_6C3C(v0 + 7) = (uint64_t (*)(char *, void *, uint64_t))0x800000000021D640LL;
        swift_retain(v107);
        swift_retain(v103);
        swift_retain(v110);
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_A76D8,  (uint64_t)v108,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v112,  v111,  0xD000000000000024LL,  0x800000000021D640LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v156 - 12));
        sub_1F6CC((uint64_t)&v186, &qword_283FE8);
        swift_release(v104);
        swift_bridgeObjectRelease(v105);
        swift_release_n(v107, 2LL);
        swift_release(v108);
        goto LABEL_47;
      }
    }

    if (v165)
    {
      unint64_t v82 = v161;
      uint64_t v113 = v78(v161, v79, v54);
      uint64_t v84 = (os_log_s *)Logger.logObject.getter(v113);
      os_log_type_t v114 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v84, v114))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v86 = 0;
        _os_log_impl( &dword_0,  v84,  v114,  "SiriForAirPlayFlow#execute we don't have information about app or intents, but will try anyway and rely on com panion to handle error cases (not installed, intents not supported)",  v86,  2u);
        uint64_t v115 = &v189;
LABEL_32:
        uint64_t v169 = (char *)*(v115 - 32);
        unint64_t v76 = v172;
LABEL_33:
        swift_slowDealloc(v86, -1LL, -1LL);
        unint64_t v82 = v169;
LABEL_36:

        v68(v82, v54);
        uint64_t v118 = swift_beginAccess(v42, &v186, 32LL, 0LL);
        uint64_t v119 = (void *)CompanionDeviceInfo.assistantID.getter(v118);
        if (v120)
        {
          os_log_type_t v121 = v120;
          unint64_t v176 = v42;
          uint64_t v177 = v53;
          __int128 v178 = a10;
          uint64_t v179 = v119;
          swift_endAccess(&v186);
          uint64_t v122 = v166;
          v78(v166, v79, v54);
          uint64_t v123 = swift_bridgeObjectRetain_n(v121, 2LL);
          uint64_t v124 = v54;
          uint64_t v125 = (os_log_s *)Logger.logObject.getter(v123);
          os_log_type_t v126 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v125, v126))
          {
            uint64_t v127 = swift_slowAlloc(22LL, -1LL);
            uint64_t v175 = (char *)swift_slowAlloc(64LL, -1LL);
            *(void *)&__int128 v186 = v175;
            *(_DWORD *)uint64_t v127 = 136315394;
            swift_bridgeObjectRetain(v121);
            uint64_t v189 = sub_6978((uint64_t)v179, (unint64_t)v121, (uint64_t *)&v186);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, &v190);
            uint64_t v128 = swift_bridgeObjectRelease_n(v121, 3LL);
            *(_WORD *)(v127 + sub_6C3C(v0 + 12) = 2080;
            uint64_t v129 = static SiriAudioEnvironment.siriLocale.getter(v128);
            uint64_t v130 = Locale.identifier.getter(v129);
            os_log_type_t v173 = v68;
            id v131 = v76;
            unint64_t v133 = v132;
            (*(void (**)(char *, uint64_t))(v167 + 8))(v131, v168);
            uint64_t v189 = sub_6978(v130, v133, (uint64_t *)&v186);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, &v190);
            swift_bridgeObjectRelease(v133);
            _os_log_impl( &dword_0,  v125,  v126,  "SiriForAirPlayFlow#execute This is Siri for AirPlay request, executing on remote. assistantID: %s, locale: %s",  (uint8_t *)v127,  0x16u);
            id v134 = v175;
            swift_arrayDestroy(v175, 2LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v134, -1LL, -1LL);
            uint64_t v135 = v127;
            uint64_t v136 = (uint64_t)v179;
            swift_slowDealloc(v135, -1LL, -1LL);

            v173(v166, v174);
            uint64_t v137 = v164;
            uint64_t v138 = v163;
          }

          else
          {

            swift_bridgeObjectRelease_n(v121, 2LL);
            v68(v122, v124);
            uint64_t v137 = v164;
            uint64_t v138 = v163;
            id v131 = v76;
            uint64_t v136 = (uint64_t)v179;
          }

          sub_6EA8(a9, a9[3]);
          v148._countAndFlagsBits = v136;
          v148._object = v121;
          CommonIntentSignals.addSFACompanionAssistantID(assistantId:)(v148);
          uint64_t v149 = sub_6EA8(a9, a9[3]);
          uint64_t v150 = static SiriAudioEnvironment.siriLocale.getter(v149);
          uint64_t v151 = Locale.identifier.getter(v150);
          uint64_t v153 = v152;
          (*(void (**)(char *, uint64_t))(v167 + 8))(v131, v168);
          v154._countAndFlagsBits = v151;
          v154._object = v153;
          CommonIntentSignals.addSiriLocaleOverride(locale:)(v154);
          swift_bridgeObjectRelease(v153);
          if (sub_A29EC(v180, (uint64_t)v181, v178))
          {
            sub_6EA8(a9, a9[3]);
            CommonIntentSignals.addExpertSFAUser()();
          }

          uint64_t v155 = v162;
          sub_A5168((uint64_t)v179, (uint64_t)v121, 0LL, 0LL, v162);
          v182(v155);
          swift_bridgeObjectRelease(v121);
          (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v155, v137);
LABEL_47:
          uint64_t v147 = v176;
          unint64_t v146 = *(uint64_t (**)(char *, uint64_t))(v177 + 8);
          return v146(v147, v157);
        }

        swift_endAccess(&v186);
        id v139 = v160;
        uint64_t v140 = v78(v160, v79, v54);
        uint64_t v141 = (os_log_s *)Logger.logObject.getter(v140);
        os_log_type_t v142 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v141, v142))
        {
          unint64_t v143 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v143 = 0;
          _os_log_impl(&dword_0, v141, v142, "SiriForAirPlayFlow#execute Unable to get companion assistantID", v143, 2u);
          uint64_t v144 = v143;
          id v139 = v160;
          swift_slowDealloc(v144, -1LL, -1LL);
        }

        v68(v139, v54);
        type metadata accessor for App(0LL);
        uint64_t v145 = (uint64_t)v181;
        swift_bridgeObjectRetain(v181);
        uint64_t v92 = App.__allocating_init(appIdentifier:)(v180, v145);
        os_log_type_t v94 = (void (**)(uint64_t, uint64_t))v176;
        uint64_t v93 = v177;
        uint64_t v95 = (uint64_t)v175;
        (*((void (**)(char *, void, uint64_t))v176 + 13))( v175,  enum case for AdditionalMetricsDescription.StatusReason.userInfoLookupFailure(_:),  v177);
        unsigned __int8 v96 = 0;
LABEL_42:
        sub_A3BA4(v96, v75, v92, v95, (uint64_t)v182, v184);
        swift_release(v92);
        v94[1](v95, v93);
        unint64_t v146 = *(uint64_t (**)(char *, uint64_t))(v53 + 8);
        uint64_t v147 = v42;
        return v146(v147, v157);
      }
    }

    else
    {
      unint64_t v82 = v159;
      uint64_t v116 = v78(v159, v79, v54);
      uint64_t v84 = (os_log_s *)Logger.logObject.getter(v116);
      os_log_type_t v117 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v84, v117))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v86 = 0;
        _os_log_impl( &dword_0,  v84,  v117,  "SiriForAirPlayFlow#execute app is most probably not installed, we'll try to execute on remote anyway just to be sure",  v86,  2u);
        uint64_t v115 = (uint64_t *)&v187 + 1;
        goto LABEL_32;
      }
    }

    unint64_t v76 = v172;
    goto LABEL_36;
  }

  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v38, v14);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  int v43 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v18, v14);
  if (v43 == enum case for CompanionDeviceError.unknownUser(_:))
  {
    uint64_t v44 = *(void *)(v183 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_voiceProfileProvider + 24);
    uint64_t v45 = *(void *)(v183 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_voiceProfileProvider + 32);
    sub_6EA8((void *)(v183 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_voiceProfileProvider), v44);
    uint64_t v46 = dispatch thunk of VoiceProfileProviding.getVoiceProfileCount()(v44, v45);
    type metadata accessor for App(0LL);
    uint64_t v47 = (uint64_t)v181;
    swift_bridgeObjectRetain(v181);
    uint64_t v48 = App.__allocating_init(appIdentifier:)(v180, v47);
    uint64_t v50 = (void (**)(uint64_t, uint64_t))v176;
    uint64_t v49 = v177;
    uint64_t v51 = (uint64_t)v175;
    (*((void (**)(char *, void, uint64_t))v176 + 13))( v175,  enum case for AdditionalMetricsDescription.StatusReason.unknownUser(_:),  v177);
    if (v46) {
      unsigned __int8 v52 = 2;
    }
    else {
      unsigned __int8 v52 = 1;
    }
    sub_A3BA4(v52, v179, v48, v51, (uint64_t)v182, v184);
    swift_release(v48);
    v50[1](v51, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }

  if (v43 == enum case for CompanionDeviceError.userInfoLookupFailure(_:))
  {
    type metadata accessor for App(0LL);
    uint64_t v69 = (uint64_t)v181;
    swift_bridgeObjectRetain(v181);
    uint64_t v70 = App.__allocating_init(appIdentifier:)(v180, v69);
    unint64_t v72 = (void (**)(uint64_t, uint64_t))v176;
    uint64_t v71 = v177;
    uint64_t v73 = (uint64_t)v175;
    (*((void (**)(char *, void, uint64_t))v176 + 13))( v175,  enum case for AdditionalMetricsDescription.StatusReason.userInfoLookupFailure(_:),  v177);
    sub_A3BA4(0, v179, v70, v73, (uint64_t)v182, v184);
    swift_release(v70);
    v72[1](v73, v71);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }

  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v14, v14);
  __break(1u);
  return result;
}

BOOL sub_A29EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v6 = type metadata accessor for ResolvedAppHistoryProvider.AppStatisticsBucket(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AcceptedSpeakerIdConfidence(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = a3[3];
  uint64_t v15 = a3[4];
  sub_6EA8(a3, v14);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for AcceptedSpeakerIdConfidence.executeOnCompanionConfidence(_:),  v10);
  uint64_t v16 = dispatch thunk of PrivateMediaIntentDataProviding.getSharedUserID(speakerConfidence:)(v13, v14, v15);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!v18) {
    return 0LL;
  }
  uint64_t v19 = (void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedAppHistoryProvider);
  uint64_t v20 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedAppHistoryProvider + 24);
  uint64_t v21 = v19[4];
  sub_6EA8(v19, v20);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for ResolvedAppHistoryProvider.AppStatisticsBucket.inferredApp(_:),  v6);
  uint64_t v22 = dispatch thunk of ResolvedAppHistoryProviding.history(for:sharedUserId:bucket:)( v24,  v25,  v16,  v18,  v9,  v20,  v21);
  swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v22 > 9;
}

uint64_t sub_A2B88( uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a4;
  uint64_t v12 = sub_6C5C(&qword_286620);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v57 - v20;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v22 = a1;
    }
    else {
      uint64_t v22 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    if (__CocoaSet.count.getter(v22) >= 1) {
      goto LABEL_6;
    }
LABEL_12:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = sub_6960(v15, (uint64_t)qword_2969C8);
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v38, v15);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = a3;
      int v43 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v43 = 0;
      _os_log_impl( &dword_0,  v40,  v41,  "SiriForAirPlayFlow#execute Failed to retrieve list of Bolt services, returning error",  v43,  2u);
      uint64_t v44 = v43;
      a3 = v42;
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    uint64_t v45 = enum case for AdditionalMetricsDescription.StatusReason.boltAppLookupFailure(_:);
    uint64_t v46 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
    uint64_t v47 = *(void *)(v46 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v14, v45, v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v14, 0LL, 1LL, v46);
    a3(0LL, v14);
    return sub_1F6CC((uint64_t)v14, &qword_286620);
  }

uint64_t sub_A3114(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v95 = a2;
  uint64_t v96 = a3;
  uint64_t v8 = sub_6C5C(&qword_286620);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v92 = *(void *)(v11 - 8);
  uint64_t v93 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v91 = (char *)&v81 - v15;
  uint64_t v16 = type metadata accessor for InstalledApp(0LL);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v81 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  char v23 = (char *)&v81 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  __chkstk_darwin(v27);
  uint64_t v90 = (char *)&v81 - v31;
  uint64_t v98 = *(void *)(a1 + 16);
  if (!v98)
  {
LABEL_33:
    if (qword_283888 != -1) {
      goto LABEL_44;
    }
    goto LABEL_34;
  }

  uint64_t v84 = v30;
  os_log_type_t v85 = v28;
  uint64_t v86 = v14;
  uint64_t v87 = v10;
  uint64_t v88 = a5;
  uint64_t v89 = a1;
  uint64_t v32 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  uint64_t v97 = *(void *)(v29 + 72);
  uint64_t v99 = v29;
  uint64_t v10 = *(char **)(v29 + 16);
  swift_bridgeObjectRetain(a1);
  uint64_t v33 = 0LL;
  uint64_t v94 = v32;
  while (1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v10)(v26, v32 + v97 * v33, v16);
    Swift::Bool v35 = InstalledApp.isBoltApp()();
    uint64_t v36 = ((uint64_t (*)(char *, char *, uint64_t))v10)(v23, v26, v16);
    if (!v35)
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v99 + 8);
      v34(v23, v16);
      goto LABEL_4;
    }

    uint64_t v37 = InstalledApp.bundleIdentifier.getter(v36);
    uint64_t v39 = v38;
    if (v37 != v95 || v38 != v96) {
      break;
    }
    swift_bridgeObjectRelease(v96);
    ((void (*)(char *, char *, uint64_t))v10)(v20, v23, v16);
    char v40 = 1;
LABEL_18:
    uint64_t v34 = *(void (**)(char *, uint64_t))(v99 + 8);
    v34(v20, v16);
    v34(v23, v16);
    if ((v40 & 1) != 0)
    {
      uint64_t v83 = a4;
      swift_bridgeObjectRelease(v89);
      uint64_t v64 = *(void (**)(uint64_t, char *, uint64_t))(v99 + 32);
      uint64_t v65 = v84;
      v64((uint64_t)v84, v26, v16);
      unint64_t v66 = v90;
      v64((uint64_t)v90, v65, v16);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v67 = v93;
      uint64_t v68 = sub_6960(v93, (uint64_t)qword_2969C8);
      uint64_t v69 = v92;
      uint64_t v70 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v86, v68, v67);
      uint64_t v71 = v85;
      uint64_t v72 = ((uint64_t (*)(char *, char *, uint64_t))v10)(v85, v66, v16);
      uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
      os_log_type_t v74 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v76 = swift_slowAlloc(32LL, -1LL);
        v101[0] = v76;
        *(_DWORD *)uint64_t v75 = 136315138;
        Swift::String v77 = InstalledApp.slimDescription()();
        uint64_t v100 = sub_6978(v77._countAndFlagsBits, (unint64_t)v77._object, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
        swift_bridgeObjectRelease(v77._object);
        v34(v71, v16);
        _os_log_impl( &dword_0,  v73,  v74,  "SiriForAirPlayFlow#execute Bolt determined it can handle the intent and returned Bolt bundleID, routing to loc al execution. MediaServiceConfiguration resolved to %s",  v75,  0xCu);
        swift_arrayDestroy(v76, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v78 = v83;
        swift_slowDealloc(v76, -1LL, -1LL);
        swift_slowDealloc(v75, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v92 + 8))(v86, v93);
        uint64_t v79 = (uint64_t)v87;
      }

      else
      {
        v34(v71, v16);

        (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v67);
        uint64_t v79 = (uint64_t)v87;
        uint64_t v78 = v83;
      }

      uint64_t v80 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56LL))(v79, 1LL, 1LL, v80);
      v78(1LL, v79);
      sub_1F6CC(v79, &qword_286620);
      return ((uint64_t (*)(char *, uint64_t))v34)(v90, v16);
    }

    uint64_t v32 = v94;
LABEL_4:
    ++v33;
    v34(v26, v16);
    if (v33 == v98)
    {
      swift_bridgeObjectRelease(v89);
      uint64_t v10 = v87;
      goto LABEL_33;
    }
  }

  char v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38);
  swift_bridgeObjectRelease(v39);
  uint64_t v42 = ((uint64_t (*)(char *, char *, uint64_t))v10)(v20, v23, v16);
  if ((v41 & 1) != 0)
  {
    char v40 = 1;
    goto LABEL_18;
  }

  uint64_t v43 = InstalledApp.counterpartBundleIdentifiers.getter(v42);
  uint64_t v44 = v43;
  uint64_t v45 = *(char **)(v43 + 16);
  if (!v45) {
    goto LABEL_17;
  }
  uint64_t v46 = *(void *)(v43 + 32);
  uint64_t v47 = *(void *)(v44 + 40);
  if (v46 == v95 && v47 == v96 || (_stringCompareWithSmolCheck(_:_:expecting:)(v46, v47) & 1) != 0)
  {
    swift_bridgeObjectRelease(v44);
    char v40 = 1;
    goto LABEL_18;
  }

  if (v45 == (_BYTE *)&dword_0 + 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(v44);
    char v40 = 0;
    goto LABEL_18;
  }

  unint64_t v82 = v20;
  uint64_t v83 = a4;
  uint64_t v48 = (uint64_t *)(v44 + 56);
  a4 = (void (*)(uint64_t, uint64_t))(&dword_0 + 1);
  while (1)
  {
    uint64_t v49 = v45;
    uint64_t v50 = (char *)a4 + 1;
    if (__OFADD__(a4, 1LL)) {
      break;
    }
    uint64_t v51 = *(v48 - 1);
    uint64_t v52 = *v48;
    BOOL v53 = v51 == v95 && v52 == v96;
    if (v53 || (_stringCompareWithSmolCheck(_:_:expecting:)(v51, v52) & 1) != 0)
    {
      swift_bridgeObjectRelease(v44);
      char v40 = 1;
      goto LABEL_31;
    }

    v48 += 2;
    a4 = (void (*)(uint64_t, uint64_t))((char *)a4 + 1);
    BOOL v53 = v50 == v49;
    uint64_t v45 = v49;
    if (v53)
    {
      swift_bridgeObjectRelease(v44);
      char v40 = 0;
LABEL_31:
      uint64_t v20 = v82;
      a4 = v83;
      goto LABEL_18;
    }
  }

  __break(1u);
LABEL_44:
  swift_once(&qword_283888, sub_BFC5C);
LABEL_34:
  uint64_t v54 = v93;
  uint64_t v55 = sub_6960(v93, (uint64_t)qword_2969C8);
  uint64_t v57 = v91;
  uint64_t v56 = v92;
  uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v55, v54);
  uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
  os_log_type_t v60 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl( &dword_0,  v59,  v60,  "SiriForAirPlayFlow#execute Service not found in home, Siri for AirPlay request, executing on remote (THIS IS NOT AN ERROR)",  v61,  2u);
    swift_slowDealloc(v61, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v54);
  uint64_t v62 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v10, 1LL, 1LL, v62);
  a4(0LL, (uint64_t)v10);
  return sub_1F6CC((uint64_t)v10, &qword_286620);
}

void sub_A3844(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void (**)(uint64_t, id))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = sub_1641C(0LL, &qword_286648, &OBJC_CLASS___MSServiceAppInfo_ptr);
  unint64_t v8 = sub_A70B0();
  uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, v7, v8);
  swift_retain(v5);
  id v10 = a3;
  v6(v9, v10);
  swift_release(v5);
  swift_bridgeObjectRelease(v9);
}

uint64_t sub_A38E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "SiriForAirPlayFlow#getLocalExecuteResponse", v15, 2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!a1
    || (v27[0] = a1,
        uint64_t v16 = sub_1641C(0LL, (unint64_t *)&qword_286618, &OBJC_CLASS___INIntent_ptr),
        id v17 = a1,
        uint64_t v18 = sub_6C5C((uint64_t *)&unk_286C70),
        (swift_dynamicCast(&v24, v27, v16, v18, 6LL) & 1) == 0))
  {
    uint64_t v26 = 0LL;
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    goto LABEL_10;
  }

  if (!*((void *)&v25 + 1))
  {
LABEL_10:
    sub_1F6CC((uint64_t)&v24, &qword_2858C8);
    goto LABEL_11;
  }

  sub_FF54(&v24, (uint64_t)v27);
  sub_6EA8(v27, v27[3]);
  CommonIntentSignals.removeHandledBySiriForAirPlaySignal()();
  sub_6C3C(v27);
LABEL_11:
  uint64_t v20 = *(uint64_t (**)(char *, void *))(v2
                                                 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nextLocalFlow);
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nextLocalFlow + 8);
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_input;
  swift_beginAccess(v21, v27, 0LL, 0LL);
  sub_FF10(v21, (uint64_t)v6, &qword_285BD0);
  swift_retain(v19);
  uint64_t v22 = v20(v6, a1);
  swift_release(v19);
  sub_1F6CC((uint64_t)v6, &qword_285BD0);
  static ExecuteResponse.complete(next:)(v22);
  return swift_release(v22);
}

uint64_t sub_A3BA4(unsigned __int8 a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  if (!a2) {
    goto LABEL_10;
  }
  uint64_t v14 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  if (!swift_dynamicCastObjCClass(a2, v14))
  {
    uint64_t v16 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    if (swift_dynamicCastObjCClass(a2, v16))
    {
      if (a1 - 1 < 2)
      {
        uint64_t v15 = sub_A6FA8;
LABEL_22:
        uint64_t v18 = &OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_addMediaCatDialogService;
        goto LABEL_13;
      }

      if (a1 == 4)
      {
        uint64_t v15 = sub_A6F88;
        goto LABEL_22;
      }

      if (a3)
      {
        uint64_t v19 = a3;
      }

      else
      {
        type metadata accessor for App(0LL);
        uint64_t v19 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
      }

      swift_retain(a3);
      uint64_t v20 = v19;
      uint64_t v21 = a2;
      uint64_t v22 = 19777LL;
      uint64_t v23 = 0xE200000000000000LL;
LABEL_18:
      sub_A409C(v20, v21, v22, v23, a5, a6);
      return swift_release(v19);
    }

    uint64_t v17 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    if (swift_dynamicCastObjCClass(a2, v17))
    {
      if (a1 - 1 >= 2)
      {
        if (a1 != 4)
        {
          if (a3)
          {
            uint64_t v19 = a3;
          }

          else
          {
            type metadata accessor for App(0LL);
            uint64_t v19 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
          }

          swift_retain(a3);
          uint64_t v20 = v19;
          uint64_t v21 = a2;
          uint64_t v22 = 4279637LL;
          uint64_t v23 = 0xE300000000000000LL;
          goto LABEL_18;
        }

        uint64_t v15 = sub_A6F88;
      }

      else
      {
        uint64_t v15 = sub_A6FA8;
      }

      uint64_t v18 = &OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_updateMediaAffinityCatDialogService;
      goto LABEL_13;
    }

uint64_t sub_A3E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = a6[4];
  uint64_t v7 = a6[6];
  uint64_t v10 = a6[5];
  uint64_t v11 = v7;
  unint64_t v12 = 0xD000000000000024LL;
  unint64_t v13 = 0x800000000021EE20LL;
  uint64_t v14 = v6;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v10,  v7,  0xD000000000000024LL,  0x800000000021EE20LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v9);
}

uint64_t sub_A3E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = a6[4];
  uint64_t v7 = a6[6];
  uint64_t v10 = a6[5];
  uint64_t v11 = v7;
  unint64_t v12 = 0xD00000000000001BLL;
  unint64_t v13 = 0x800000000021EE90LL;
  uint64_t v14 = v6;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v10,  v7,  0xD00000000000001BLL,  0x800000000021EE90LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v9);
}

uint64_t sub_A3F1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t (*)(), uint64_t))
{
  uint64_t v7 = a6[4];
  uint64_t v8 = a6[6];
  uint64_t v11 = a6[5];
  uint64_t v12 = v8;
  unint64_t v13 = 0xD00000000000001DLL;
  unint64_t v14 = 0x800000000021EE70LL;
  uint64_t v15 = v7;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v11,  v8,  0xD00000000000001DLL,  0x800000000021EE70LL,  a7,  (uint64_t)v10);
}

uint64_t sub_A3F9C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t (*)(), uint64_t))
{
  uint64_t v7 = a6[4];
  uint64_t v8 = a6[6];
  uint64_t v11 = a6[5];
  uint64_t v12 = v8;
  unint64_t v13 = 0xD000000000000019LL;
  unint64_t v14 = 0x800000000021EE50LL;
  uint64_t v15 = v7;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v11,  v8,  0xD000000000000019LL,  0x800000000021EE50LL,  a7,  (uint64_t)v10);
}

uint64_t sub_A401C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t (*)(), uint64_t))
{
  uint64_t v7 = a6[4];
  uint64_t v8 = a6[6];
  uint64_t v11 = a6[5];
  uint64_t v12 = v8;
  unint64_t v13 = 0xD000000000000024LL;
  unint64_t v14 = 0x800000000021EEB0LL;
  uint64_t v15 = v7;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v11,  v8,  0xD000000000000024LL,  0x800000000021EEB0LL,  a7,  (uint64_t)v10);
}

uint64_t sub_A409C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v14, v37);
  *(_OWORD *)(inited + 16) = xmmword_214510;
  uint64_t v16 = type metadata accessor for ErrorFilingProvider(0LL);
  *(void *)(inited + 32) = static ErrorFilingProvider.errorInfoForParamsKey.getter(v16);
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a3;
  *(void *)(inited + 56) = a4;
  swift_bridgeObjectRetain(a4);
  unint64_t v18 = sub_74D54(inited);
  uint64_t v19 = *(void **)(v7 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_commonMediaIntentCatDialogService);
  uint64_t v20 = (void *)swift_allocObject(&unk_26D708, 72LL, 7LL);
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = v7;
  v20[5] = a1;
  v20[6] = a2;
  v20[7] = a5;
  v20[8] = a6;
  uint64_t v22 = v19[3];
  uint64_t v21 = v19[4];
  uint64_t v23 = v19[2];
  uint64_t v36 = 0LL;
  memset(v35, 0, sizeof(v35));
  uint64_t v27 = v23;
  uint64_t v28 = v22;
  strcpy((char *)v29, "GenericError");
  HIBYTE(v29[6]) = 0;
  v29[7] = -5120;
  uint64_t v30 = v21;
  unint64_t v31 = v18;
  uint64_t v32 = a1;
  uint64_t v33 = v35;
  uint64_t v34 = 0LL;
  id v24 = a2;
  swift_retain(a6);
  swift_bridgeObjectRetain(a4);
  swift_retain(v7);
  swift_retain(a1);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_A6F54,  (uint64_t)v20,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v23,  v22,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v26);
  sub_1F6CC((uint64_t)v35, &qword_283FE8);
  swift_bridgeObjectRelease(v18);
  return swift_release(v20);
}

uint64_t sub_A426C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v44 = a7;
  uint64_t v45 = a8;
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v43 = a1;
  uint64_t v9 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  __int128 v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.ModuleName.sfapf(_:),  v22);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v18);
  uint64_t v39 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v25,  v21,  a2,  v39,  0LL,  1LL);
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v29 = *(void *)(v40 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v28 = *(void *)(v40 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_siriKitTaskLoggingProvider + 32);
  uint64_t v38 = sub_6EA8( (void *)(v40 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_siriKitTaskLoggingProvider),  v29);
  uint64_t v30 = enum case for ActivityType.failed(_:);
  uint64_t v31 = type metadata accessor for ActivityType(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 104))(v17, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v17, 0LL, 1LL, v31);
  uint64_t v33 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v14, 1LL, 1LL, v33);
  uint64_t v34 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v35 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v11, v34, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v11, 0LL, 1LL, v35);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v41,  v42,  v17,  v14,  v11,  v39,  v27,  0LL,  1,  v29,  v28);
  swift_bridgeObjectRelease(v27);
  sub_1F6CC((uint64_t)v11, &qword_2845A0);
  sub_1F6CC((uint64_t)v14, (uint64_t *)&unk_286BD0);
  sub_1F6CC((uint64_t)v17, &qword_2845A8);
  return sub_A4B84(v43, v44, v45);
}

uint64_t sub_A45A4( void (*a1)(unint64_t, uint64_t, _OWORD *, uint64_t (*)(), uint64_t), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a7;
  uint64_t v38 = a6;
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  uint64_t v10 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  if (!a3
    || (uint64_t v43 = a3,
        uint64_t v13 = sub_1641C(0LL, (unint64_t *)&qword_286618, &OBJC_CLASS___INIntent_ptr),
        id v14 = a3,
        uint64_t v15 = sub_6C5C(&qword_285BC8),
        (swift_dynamicCast(v44, &v43, v13, v15, 6LL) & 1) == 0))
  {
    uint64_t v45 = 0LL;
    memset(v44, 0, sizeof(v44));
  }

  uint64_t v37 = a3;
  unint64_t v36 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  if (a4)
  {
    uint64_t v16 = a4;
    uint64_t v35 = a4;
  }

  else
  {
    type metadata accessor for App(0LL);
    uint64_t v16 = 0LL;
    uint64_t v35 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))( (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a5,  v10);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  unint64_t v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v24 = swift_allocObject(&unk_26D6E0, v23 + 16, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v24 + v18, v20, v10);
  uint64_t v25 = v38;
  uint64_t v26 = v39;
  *(void *)(v24 + v19) = v39;
  *(void *)(v24 + v21) = v16;
  uint64_t v27 = v37;
  *(void *)(v24 + v22) = v37;
  uint64_t v28 = (void *)(v24 + v23);
  uint64_t v29 = v40;
  *uint64_t v28 = v25;
  v28[1] = v29;
  id v30 = v27;
  swift_retain_n(v16, 2LL);
  swift_retain(v26);
  swift_retain(v29);
  uint64_t v32 = v35;
  unint64_t v31 = v36;
  v42(v36, v35, v44, sub_A6F0C, v24);
  swift_release(v24);
  swift_bridgeObjectRelease(v31);
  swift_release(v32);
  return sub_1F6CC((uint64_t)v44, &qword_283FE8);
}

uint64_t sub_A47D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  BOOL v53 = a6;
  uint64_t v54 = a7;
  uint64_t v56 = a5;
  uint64_t v57 = a2;
  uint64_t v51 = a4;
  uint64_t v52 = a1;
  uint64_t v8 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))( v24,  enum case for AdditionalMetricsDescription.ModuleName.sfapf(_:),  v21);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))( v20,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v17);
  uint64_t v50 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v24, v20, v57, 0LL, 1LL);
  uint64_t v55 = v25;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v57 = a3;
  sub_157C4(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_siriKitTaskLoggingProvider, (uint64_t)v58);
  uint64_t v27 = v59;
  uint64_t v26 = v60;
  sub_6EA8(v58, v59);
  uint64_t v28 = enum case for ActivityType.failed(_:);
  uint64_t v29 = type metadata accessor for ActivityType(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v16, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v16, 0LL, 1LL, v29);
  uint64_t v31 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v13, 1LL, 1LL, v31);
  uint64_t v32 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v33 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = v32;
  uint64_t v36 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v10, v35, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v10, 0LL, 1LL, v33);
  if (v36)
  {
    uint64_t v37 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v38 = swift_dynamicCastObjCClass(v36, v37);
    if (v38)
    {
      uint64_t v39 = INPlayMediaIntent.firstMediaItemType()(v38);
      char v40 = 0;
    }

    else
    {
      uint64_t v39 = 0LL;
      char v40 = 1;
    }

    uint64_t v42 = v53;
    uint64_t v41 = v54;
    uint64_t v43 = v51;
    uint64_t v44 = v52;
    uint64_t v45 = v50;
  }

  else
  {
    uint64_t v39 = 0LL;
    uint64_t v42 = v53;
    uint64_t v41 = v54;
    uint64_t v43 = v51;
    uint64_t v44 = v52;
    uint64_t v45 = v50;
    char v40 = 1;
  }

  uint64_t v48 = v26;
  uint64_t v46 = v55;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v43,  v36,  v16,  v13,  v10,  v45,  v55,  v39,  v40,  v27,  v48);
  swift_bridgeObjectRelease(v46);
  sub_1F6CC((uint64_t)v10, &qword_2845A0);
  sub_1F6CC((uint64_t)v13, (uint64_t *)&unk_286BD0);
  sub_1F6CC((uint64_t)v16, &qword_2845A8);
  sub_6C3C(v58);
  return sub_A4B84(v44, v42, v41);
}

uint64_t sub_A4B84(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v74 = v6;
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v8);
  uint64_t v69 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v66);
  uint64_t v11 = (uint64_t *)((char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v65 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v64 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v64 - v19;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v67 = v21;
  uint64_t v68 = v22;
  uint64_t v23 = ((uint64_t (*)(char *))v22)(v20);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v64 = v8;
    uint64_t v27 = a1;
    uint64_t v28 = v18;
    uint64_t v29 = v12;
    uint64_t v30 = v4;
    uint64_t v31 = v26;
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "SiriForAirPlayFlow#handleDialogResult Handling dialog Result...", v26, 2u);
    uint64_t v32 = v31;
    uint64_t v4 = v30;
    uint64_t v12 = v29;
    uint64_t v18 = v28;
    a1 = v27;
    uint64_t v8 = v64;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v20, v12);
  sub_FF10(a1, (uint64_t)v11, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v11, v66) == 1)
  {
    uint64_t v34 = *v11;
    uint64_t v35 = v65;
    v68(v65, v67, v12);
    swift_errorRetain(v34);
    uint64_t v36 = swift_errorRetain(v34);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      uint64_t v79 = v40;
      uint64_t v69 = (char *)v33;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_getErrorValue(v34, v78, v77);
      uint64_t v75 = Error.localizedDescription.getter(v77[1], v77[2]);
      uint64_t v76 = v41;
      uint64_t v42 = String.init<A>(_:)( &v75,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v44 = v43;
      uint64_t v75 = sub_6978(v42, v43, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76);
      swift_bridgeObjectRelease(v44);
      swift_errorRelease(v34);
      swift_errorRelease(v34);
      _os_log_impl( &dword_0,  v37,  v38,  "SiriForAirPlayFlow#handleDialogResult Could not properly create dialog %s, silently failing...",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);

      uint64_t v45 = ((uint64_t (*)(char *, uint64_t))v69)(v65, v12);
    }

    else
    {
      swift_errorRelease(v34);
      swift_errorRelease(v34);

      uint64_t v45 = ((uint64_t (*)(char *, uint64_t))v33)(v35, v12);
    }

    uint64_t v63 = v72;
    static ExecuteResponse.complete()(v45);
    v71(v63);
    swift_errorRelease(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v63, v74);
  }

  else
  {
    uint64_t v46 = *(int *)(v8 + 48);
    uint64_t v47 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v48 = v69;
    uint64_t v49 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(*(void *)(v47 - 8) + 32LL))(v69, v11, v47);
    *(void *)&v48[v46] = *(uint64_t *)((char *)v11 + v46);
    LOBYTE(v46) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v49);
    uint64_t v50 = type metadata accessor for ViewFactory(0LL);
    swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
    uint64_t v51 = ViewFactory.init(ttsEnabled:)(v46 & 1);
    uint64_t v52 = (void *)dispatch thunk of ViewFactory.makeCompletionView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v48,  _swiftEmptyArrayStorage,  0LL,  1LL);
    BOOL v53 = (void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_aceService);
    uint64_t v54 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_aceService + 24);
    uint64_t v55 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_aceService + 32);
    sub_6EA8(v53, v54);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v52, v54, v55);
    uint64_t v56 = ((uint64_t (*)(char *, uint64_t, uint64_t))v68)(v18, v67, v12);
    uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl( &dword_0,  v57,  v58,  "SiriForAirPlayFlow#handleDialogResult Dialog successfully generated, responding and exiting...",  v59,  2u);
      swift_slowDealloc(v59, -1LL, -1LL);
    }

    uint64_t v60 = ((uint64_t (*)(char *, uint64_t))v33)(v18, v12);
    uint64_t v61 = v72;
    static ExecuteResponse.complete()(v60);
    v71(v61);

    swift_release(v51);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v74);
    return sub_1F6CC((uint64_t)v69, &qword_289340);
  }

uint64_t sub_A5168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v84 = a3;
  uint64_t v85 = a4;
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  uint64_t v89 = a5;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v87 = *(void *)(v7 - 8);
  uint64_t v88 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v81 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v80 = (char *)&v76 - v10;
  uint64_t v11 = type metadata accessor for Parse(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (id *)((char *)&v76 - v16);
  uint64_t v18 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Input(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = v6;
  uint64_t v25 = v6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_input;
  swift_beginAccess(v25, v92, 0LL, 0LL);
  uint64_t v26 = v25;
  uint64_t v27 = v21;
  sub_FF10(v26, (uint64_t)v20, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21) == 1)
  {
    sub_1F6CC((uint64_t)v20, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v28 = v88;
    uint64_t v29 = sub_6960(v88, (uint64_t)qword_2969C8);
    uint64_t v30 = v87;
    uint64_t v31 = v81;
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v29, v28);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "SiriForAirPlayFlow#getRemoteExecuteResponse input or intent is nil", v35, 2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v28);
    return static ExecuteResponse.complete()(v36);
  }

  else
  {
    uint64_t v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    Input.parse.getter(v38);
    uint64_t v39 = v24;
    if ((*(unsigned int (**)(id *, uint64_t))(v12 + 88))(v17, v11) == enum case for Parse.pommesResponse(_:))
    {
      (*(void (**)(id *, uint64_t))(v12 + 96))(v17, v11);

      uint64_t v41 = Input.parse.getter(v40);
      uint64_t v42 = (void *)Parse.getPommesResponse()(v41);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      uint64_t v43 = v86;
      if (v42)
      {
        uint64_t v44 = sub_10470();
        if (v44)
        {
          uint64_t v45 = (char *)v44;
          uint64_t v46 = *(void **)(v43 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_intent);
          if (v46)
          {
            id v79 = v46;
            uint64_t v47 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC08internalF03forSaySSGSo8INIntentC_tFZ_0(v79);
            uint64_t v48 = sub_CA170((uint64_t)v47);
            uint64_t v49 = swift_bridgeObjectRelease(v47);
            uint64_t v81 = v45;
            uint64_t v50 = dispatch thunk of AudioExperience.internalSignals.getter(v49);
            uint64_t v51 = sub_C9024(v50, v48);
            swift_bridgeObjectRelease(v50);
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v52 = v88;
            uint64_t v53 = sub_6960(v88, (uint64_t)qword_2969C8);
            uint64_t v54 = v87;
            uint64_t v55 = v80;
            (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v80, v53, v52);
            uint64_t v56 = swift_retain_n(v51, 2LL);
            uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
            os_log_type_t v58 = static os_log_type_t.debug.getter();
            int v78 = v58;
            if (os_log_type_enabled(v57, v58))
            {
              uint64_t v59 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v60 = swift_slowAlloc(32LL, -1LL);
              Swift::String v77 = v42;
              uint64_t v61 = v60;
              uint64_t v91 = v60;
              *(_DWORD *)uint64_t v59 = 136315138;
              uint64_t v76 = v59 + 4;
              uint64_t v62 = swift_retain(v51);
              uint64_t v63 = v27;
              uint64_t v64 = Set.description.getter(v62, &type metadata for String, &protocol witness table for String);
              unint64_t v66 = v65;
              swift_release(v51);
              uint64_t v67 = v64;
              uint64_t v27 = v63;
              uint64_t v90 = sub_6978(v67, v66, &v91);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
              swift_release_n(v51, 2LL);
              swift_bridgeObjectRelease(v66);
              _os_log_impl( &dword_0,  v57,  (os_log_type_t)v78,  "SiriForAirPlayFlow#getRemoteExecuteResponse adding internal signals to PommesResponse: %s",  v59,  0xCu);
              swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
              uint64_t v68 = v61;
              uint64_t v42 = v77;
              swift_slowDealloc(v68, -1LL, -1LL);
              uint64_t v69 = v59;
              uint64_t v43 = v86;
              swift_slowDealloc(v69, -1LL, -1LL);

              (*(void (**)(char *, uint64_t))(v87 + 8))(v80, v88);
            }

            else
            {

              swift_release_n(v51, 2LL);
              (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v52);
            }

            uint64_t v74 = sub_161C4((uint64_t)v51);
            swift_release(v51);
            uint64_t v75 = v81;
            dispatch thunk of AudioExperience.internalSignalsFromSiriAudio.setter(v74);
          }

          else
          {
          }
        }

        else
        {
        }
      }
    }

    else
    {
      (*(void (**)(id *, uint64_t))(v12 + 8))(v17, v11);
      uint64_t v43 = v86;
    }

    uint64_t v71 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43
                                                                                        + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_remoteFlow);
    uint64_t v70 = *(void *)(v43 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_remoteFlow + 8);
    uint64_t v72 = v43 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_outputPublisher;
    swift_retain(v70);
    uint64_t v73 = v71(v39, v72, v82, v83, v84, v85);
    swift_release(v70);
    static ExecuteResponse.complete(next:)(v73);
    swift_release(v73);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v39, v27);
  }

uint64_t sub_A57A8()
{
  return type metadata accessor for SiriForAirPlayFlow(0LL);
}

void sub_A57B0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    v4[2] = &unk_2163C0;
    v4[3] = (char *)&value witness table for () + 64;
    v4[4] = &unk_2163C0;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = &unk_2163C0;
    v4[8] = &unk_2163C0;
    void v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = &unk_2163C0;
    v4[11] = "\b";
    v4[12] = (char *)&value witness table for () + 64;
    v4[13] = "\b";
    v4[14] = &unk_2163C0;
    void v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[16] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[17] = &unk_2163C0;
    v4[18] = &unk_2163C0;
    v4[19] = &unk_2163C0;
    v4[20] = &unk_2163C0;
    swift_updateClassMetadata2(a1, 256LL, 21LL, v4, a1 + 80);
  }

uint64_t sub_A5868(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_A588C( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v50 = a8;
  uint64_t v54 = (void *)a5;
  uint64_t v56 = a1;
  uint64_t v52 = a10;
  uint64_t v51 = a9;
  uint64_t v16 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v55 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v50 - v21;
  v69[3] = v20;
  v69[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v23 = sub_10974(v69);
  (*(void (**)(void *, uint64_t, uint64_t))(v17 + 32))(v23, a3, v16);
  v68[3] = type metadata accessor for MediaRemoteAPIProvider(0LL);
  v68[4] = &protocol witness table for MediaRemoteAPIProvider;
  v68[0] = a4;
  v67[3] = &type metadata for StringsBackedAppNameResolver;
  v67[4] = sub_15780();
  uint64_t v24 = (_OWORD *)swift_allocObject(&unk_26D6B8, 96LL, 7LL);
  v67[0] = v24;
  uint64_t v53 = v24 + 1;
  __int128 v25 = a6[3];
  v24[3] = a6[2];
  v24[4] = v25;
  v24[5] = a6[4];
  __int128 v26 = a6[1];
  v24[1] = *a6;
  v24[2] = v26;
  uint64_t v27 = type metadata accessor for DeviceProvider(0LL);
  v66[3] = v27;
  v66[4] = &protocol witness table for DeviceProvider;
  uint64_t v28 = sub_10974(v66);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32LL))(v28, a7, v27);
  uint64_t v29 = type metadata accessor for EncryptionProvider(0LL);
  v65[3] = v29;
  v65[4] = &protocol witness table for EncryptionProvider;
  uint64_t v30 = sub_10974(v65);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32LL))(v30, v50, v29);
  v64[3] = type metadata accessor for SharedContextProvider(0LL);
  v64[4] = &protocol witness table for SharedContextProvider;
  v64[0] = v51;
  uint64_t v62 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v63 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v61 = v52;
  uint64_t v31 = a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_input;
  uint64_t v32 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v31, 1LL, 1LL, v32);
  uint64_t v33 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_intent;
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_intent) = 0LL;
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_originalPlayMediaRCHFlowWrapper) = 0LL;
  uint64_t v34 = a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_state;
  *(void *)uint64_t v34 = 0LL;
  *(_BYTE *)(v34 + sub_6C3C(v0 + 8) = 1;
  swift_beginAccess(v31, &v57, 33LL, 0LL);
  sub_11C1C(v56, v31);
  swift_endAccess(&v57);
  uint64_t v35 = *(void **)(a11 + v33);
  *(void *)(a11 + v3sub_6C3C(v0 + 3) = a2;
  id v36 = a2;

  sub_157C4((uint64_t)v69, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_featureFlagProvider);
  sub_157C4( (uint64_t)v68,  a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_mediaRemoteAPIProvider);
  sub_157C4((uint64_t)v66, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_deviceProvider);
  uint64_t v37 = v54;
  sub_157C4((uint64_t)v54, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker);
  sub_157C4((uint64_t)v37, (uint64_t)v60);
  LODWORD(v35) = CATDefaultMode;
  uint64_t v38 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v39 = static MorphunProvider.shared.getter(v38);
  static FeatureFlagProvider.shared.getter(v39);
  uint64_t v40 = type metadata accessor for CatService();
  uint64_t v41 = swift_allocObject(v40, 300LL, 7LL);
  uint64_t v42 = (uint64_t)v55;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v55, v22, v16);
  sub_156E8((uint64_t)v53, (uint64_t)&v57);
  swift_retain(v39);
  uint64_t v43 = sub_10FF64(&v57, (int)v35, v39, v60, v42, v41);
  swift_release(v39);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  swift_release(v39);
  uint64_t v44 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v45 = (void *)swift_allocObject(v44, 56LL, 7LL);
  v45[6] = 0xEF746E65746E4961LL;
  v45[2] = 0xD000000000000011LL;
  v45[3] = 0x800000000021D860LL;
  v45[4] = v43;
  v45[5] = 0x6964654D79616C50LL;
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_playMediaCatDialogService) = v45;
  uint64_t v46 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_viewFactory) = ViewFactory.init(ttsEnabled:)(1LL);
  sub_157C4((uint64_t)v67, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver);
  sub_157C4((uint64_t)v65, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider);
  sub_157C4( (uint64_t)v64,  a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_sharedContextProvider);
  sub_157C4((uint64_t)v69, (uint64_t)&v57);
  sub_157C4((uint64_t)v37, (uint64_t)v60);
  uint64_t v47 = type metadata accessor for SEDeviceProvider(0LL);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  uint64_t v48 = SEDeviceProvider.init(featureFlagProvider:aceServiceInvoker:)(&v57, v60);
  uint64_t v58 = v47;
  uint64_t v59 = &protocol witness table for SEDeviceProvider;
  *(void *)&__int128 v57 = v48;
  sub_6C3C(v64);
  sub_6C3C(v65);
  sub_6C3C(v66);
  sub_6C3C(v67);
  sub_6C3C(v37);
  sub_6C3C(v68);
  sub_6C3C(v69);
  sub_1F6CC(v56, &qword_285BD0);
  sub_FF54(&v57, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_seDeviceProvider);
  sub_FF54(&v61, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider);
  return a11;
}

uint64_t sub_A5DB4( uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, void *a6, void *a7, void *a8, _OWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v71 = a8;
  uint64_t v75 = a7;
  uint64_t v68 = a6;
  uint64_t v70 = a5;
  uint64_t v72 = a4;
  uint64_t v69 = a3;
  uint64_t v73 = a2;
  uint64_t v13 = a10;
  uint64_t v67 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v14 = __chkstk_darwin(v67);
  uint64_t v64 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v14);
  unint64_t v65 = &v62[-v16];
  uint64_t v17 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v17);
  uint64_t v19 = &v62[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  v79[3] = &type metadata for StringsBackedAppNameResolver;
  v79[4] = sub_15780();
  uint64_t v20 = (_OWORD *)swift_allocObject(&unk_26D6B8, 96LL, 7LL);
  v79[0] = v20;
  __int128 v21 = a9[3];
  v20[3] = a9[2];
  v20[4] = v21;
  v20[5] = a9[4];
  __int128 v22 = a9[1];
  v20[1] = *a9;
  v20[2] = v22;
  v78[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v78[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v78[0] = a11;
  *(void *)(a12 + 16) = 0xD000000000000025LL;
  *(void *)(a12 + 24) = 0x800000000021D160LL;
  *(void *)(a12 + 32) = 0x7461447475706E69LL;
  *(void *)(a12 + 40) = 0xE900000000000061LL;
  *(void *)(a12 + 4sub_6C3C(v0 + 8) = 0LL;
  *(_BYTE *)(a12 + 56) = 4;
  uint64_t v23 = a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_inputToExecute;
  uint64_t v24 = type metadata accessor for Input(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __int128 v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v26(v23, 1LL, 1LL, v24);
  uint64_t v27 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionNotInRangeErrorCodes;
  uint64_t v28 = sub_6C5C(&qword_283A98);
  uint64_t v29 = swift_allocObject(v28, 88LL, 7LL);
  *(_OWORD *)(v29 + 16) = xmmword_2144D0;
  *(_OWORD *)(v29 + 32) = xmmword_2144E0;
  *(_OWORD *)(v29 + 4sub_6C3C(v0 + 8) = xmmword_2144F0;
  *(_OWORD *)(v29 + 64) = xmmword_214500;
  *(void *)(v29 + 80) = 1017LL;
  *(void *)(a12 + v2sub_6C3C(v0 + 7) = v29;
  uint64_t v30 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionWifiMismatchErrorCodes;
  uint64_t v31 = swift_allocObject(v28, 40LL, 7LL);
  __int128 v74 = xmmword_214510;
  *(_OWORD *)(v31 + 16) = xmmword_214510;
  *(void *)(v31 + 32) = 1019LL;
  *(void *)(a12 + v30) = v31;
  uint64_t v32 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_companionConnectionTimedOut;
  uint64_t v33 = v28;
  uint64_t v34 = a1;
  uint64_t v35 = v68;
  uint64_t v36 = swift_allocObject(v33, 40LL, 7LL);
  *(_OWORD *)(v36 + 16) = v74;
  *(void *)(v36 + 32) = 1007LL;
  *(void *)(a12 + v32) = v36;
  uint64_t v37 = v70;
  *(void *)&__int128 v74 = v25;
  uint64_t v38 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v39 = v69;
  v38(v19, v34, v24);
  v26((uint64_t)v19, 0LL, 1LL, v24);
  uint64_t v40 = v71;
  swift_beginAccess(v23, v77, 33LL, 0LL);
  uint64_t v41 = (uint64_t)v19;
  uint64_t v42 = (uint64_t)v72;
  sub_1B3B0(v41, v23);
  swift_endAccess(v77);
  uint64_t v43 = (void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_executeOnRemotePayload);
  *uint64_t v43 = v73;
  v43[1] = v39;
  v43[2] = v42;
  v43[3] = v37;
  sub_157C4((uint64_t)v35, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_outputPublisher);
  sub_157C4((uint64_t)v40, a12 + 64);
  sub_157C4((uint64_t)v79, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_appNameResolver);
  if (a10)
  {
    swift_bridgeObjectRetain(v39);
    sub_A65C4(v42, v37);
  }

  else
  {
    sub_157C4((uint64_t)v79, (uint64_t)v77);
    sub_157C4((uint64_t)v75, (uint64_t)v76);
    uint64_t v73 = v34;
    int v63 = CATDefaultMode;
    type metadata accessor for MorphunProvider(0LL);
    swift_bridgeObjectRetain(v39);
    uint64_t v44 = sub_A65C4(v42, v37);
    uint64_t v45 = static MorphunProvider.shared.getter(v44);
    uint64_t v46 = v65;
    static FeatureFlagProvider.shared.getter(v45);
    uint64_t v47 = type metadata accessor for CatService();
    uint64_t v70 = swift_allocObject(v47, 300LL, 7LL);
    uint64_t v48 = sub_1094C((uint64_t)v77, v77[3]);
    uint64_t v72 = v62;
    __chkstk_darwin(v48);
    uint64_t v50 = v40;
    uint64_t v51 = &v62[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
    (*(void (**)(_BYTE *))(v52 + 16))(v51);
    uint64_t v53 = v66;
    uint64_t v54 = (uint64_t)v64;
    uint64_t v55 = v67;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v66 + 16))(v64, v46, v67);
    swift_retain(v45);
    uint64_t v56 = v51;
    uint64_t v40 = v50;
    uint64_t v34 = v73;
    uint64_t v13 = sub_10FF64(v56, v63, v45, v76, v54, v70);
    swift_release(v45);
    (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v46, v55);
    swift_release(v45);
    sub_6C3C(v77);
  }

  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_catService) = v13;
  uint64_t v57 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v58 = (void *)swift_allocObject(v57, 56LL, 7LL);
  v58[5] = 0x6964654D79616C50LL;
  v58[6] = 0xEF746E65746E4961LL;
  v58[2] = 0xD000000000000011LL;
  void v58[3] = 0x800000000021D860LL;
  v58[4] = v13;
  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_playMediaCatDialogService) = v58;
  sub_157C4( (uint64_t)v78,  a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_siriKitTaskLoggingProvider);
  uint64_t v59 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
  swift_retain(v13);
  uint64_t v60 = ViewFactory.init(ttsEnabled:)(1LL);
  sub_6C3C(v78);
  sub_6C3C(v79);
  sub_6C3C(v40);
  sub_6C3C(v75);
  sub_6C3C(v35);
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v34, v24);
  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin24ExecuteMusicOnRemoteFlow_viewFactory) = v60;
  return a12;
}

uint64_t sub_A63F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for Input(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, a1);
  sub_157C4(a2, (uint64_t)v27);
  swift_bridgeObjectRetain(a4);
  sub_A65C4((uint64_t)a5, a6);
  static AceService.current.getter(v26);
  static AceService.currentAsync.getter(v25);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v16 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v17 = static SiriKitTaskLoggingProvider.shared.getter(v16);
  uint64_t v18 = type metadata accessor for ExecuteMusicOnRemoteFlow(0LL);
  uint64_t v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v24);
  uint64_t v20 = sub_A5DB4((uint64_t)v14, a3, a4, a5, a6, v27, v26, v25, v24, 0LL, v17, v19);
  swift_bridgeObjectRelease(a4);
  sub_925E8((uint64_t)a5, a6);
  *(void *)&v24[0] = v20;
  uint64_t v21 = sub_10430( &qword_285C90,  type metadata accessor for ExecuteMusicOnRemoteFlow,  (uint64_t)&protocol conformance descriptor for ExecuteMusicOnRemoteFlow);
  uint64_t v22 = Flow.eraseToAnyFlow()(v18, v21);
  swift_release(v20);
  return v22;
}

uint64_t sub_A65C4(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_A65D4()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_A6600(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v107 = a3;
  uint64_t v101 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v95 = *(void *)(v96 - 8);
  uint64_t v6 = __chkstk_darwin(v96);
  uint64_t v93 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = v7;
  __chkstk_darwin(v6);
  uint64_t v94 = (char *)&v90 - v8;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  unint64_t v104 = *(void *)(v9 - 8);
  unint64_t v105 = (uint64_t *)v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v97 = (char *)&v90 - v12;
  uint64_t v13 = type metadata accessor for Parse(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Input(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v98 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v90 - v24;
  uint64_t v26 = swift_allocObject(&unk_26D848, 32LL, 7LL);
  os_log_type_t v102 = a2;
  uint64_t v103 = a1;
  *(void *)(v26 + 16) = a2;
  uint64_t v27 = v107;
  uint64_t v106 = v26;
  *(void *)(v26 + 24) = v107;
  uint64_t v28 = a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_input;
  swift_beginAccess(v28, v113, 0LL, 0LL);
  sub_FF10(v28, (uint64_t)v19, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1LL, v20) == 1)
  {
    swift_retain(v27);
    sub_1F6CC((uint64_t)v19, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v29 = (uint64_t)v105;
    uint64_t v30 = sub_6960((uint64_t)v105, (uint64_t)qword_2969C8);
    unint64_t v31 = v104;
    uint64_t v32 = v97;
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 16))(v97, v30, v29);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, v35, "SiriForAirPlayFlow#execute input is nil", v36, 2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v29);
    uint64_t v38 = v99;
    static ExecuteResponse.complete()(v37);
    ((void (*)(char *))v102)(v38);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v38, v101);
    uint64_t v39 = v106;
    return swift_release(v39);
  }

  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v19, v20);
  uint64_t v40 = swift_retain(v27);
  Input.parse.getter(v40);
  double v41 = sub_B7C84(v16, (uint64_t)&v108);
  uint64_t v42 = *(void (**)(char *, uint64_t, double))(v14 + 8);
  v42(v16, v13, v41);
  uint64_t v43 = v25;
  if (!*((void *)&v109 + 1))
  {
    uint64_t v75 = sub_1F6CC((uint64_t)&v108, &qword_2848C0);
    uint64_t v45 = v98;
LABEL_16:
    uint64_t v76 = Input.parse.getter(v75);
    Swift::String v77 = (void *)Parse.getPommesResponse()(v76);
    ((void (*)(char *, uint64_t))v42)(v16, v13);
    uint64_t v78 = v103;
    id v79 = *(void **)(v103 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_intent);
    uint64_t v80 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 16))(v45, v43, v20);
    if (v79)
    {
      uint64_t v81 = *(void (**)(char *, uint64_t))(v21 + 8);
      id v82 = v79;
      uint64_t v83 = v45;
      id v84 = v82;
      v81(v83, v20);
    }

    else
    {
      Input.parse.getter(v80);
      uint64_t v85 = (void *)(v78 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nowPlayingProvider);
      sub_157C4(v78 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_featureFlags, (uint64_t)&v111);
      id v86 = Parse.getSiriKitIntent(nowPlayingProvider:featureFlags:)(v85, (uint64_t)&v111);
      uint64_t v87 = v45;
      id v84 = v86;
      sub_6C3C(&v111);
      ((void (*)(char *, uint64_t))v42)(v16, v13);
      uint64_t v81 = *(void (**)(char *, uint64_t))(v21 + 8);
      v81(v87, v20);
      id v79 = v84;
    }

    uint64_t v88 = v106;
    sub_A03E8(v79, v77, (void (*)(char *))sub_33CB0, v106);

    v81(v43, v20);
    uint64_t v39 = v88;
    return swift_release(v39);
  }

  sub_49B60(&v108, &v111);
  sub_6EA8(&v111, v112);
  Swift::Bool v44 = AudioIntent.isAirPlayMusicWithoutAppName()();
  uint64_t v45 = v98;
  if (!v44)
  {
    uint64_t v75 = sub_6C3C(&v111);
    goto LABEL_16;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v101 = v21;
  os_log_type_t v102 = v25;
  uint64_t v107 = v20;
  uint64_t v46 = (uint64_t)v105;
  uint64_t v47 = sub_6960((uint64_t)v105, (uint64_t)qword_2969C8);
  unint64_t v48 = v104;
  uint64_t v49 = v91;
  uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 16))(v91, v47, v46);
  uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
  os_log_type_t v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl( &dword_0,  v51,  v52,  "This is a play + AirPlay request without an app name. Return error dialog",  v53,  2u);
    swift_slowDealloc(v53, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v46);
  uint64_t v54 = v95;
  uint64_t v55 = v94;
  uint64_t v56 = v96;
  (*(void (**)(char *, void, uint64_t))(v95 + 104))( v94,  enum case for AdditionalMetricsDescription.StatusReason.notSupported(_:),  v96);
  uint64_t v57 = *(void *)(v103 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_playMediaCatDialogService);
  uint64_t v110 = 0LL;
  __int128 v108 = 0u;
  __int128 v109 = 0u;
  swift_retain(v57);
  unint64_t v104 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for App(0LL);
  uint64_t v100 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
  uint64_t v58 = v93;
  uint64_t v59 = v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v93, v55, v56);
  uint64_t v60 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v61 = (v60 + 16) & ~v60;
  unint64_t v62 = (v92 + v61 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v63 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v66 = swift_allocObject(&unk_26D870, v65 + 16, v60 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v66 + v61, v58, v59);
  unint64_t v105 = &v90;
  uint64_t v67 = v103;
  *(void *)(v66 + v62) = v103;
  *(void *)(v66 + v6sub_6C3C(v0 + 3) = 0LL;
  *(void *)(v66 + v64) = 0LL;
  uint64_t v68 = (uint64_t (**)(uint64_t))(v66 + v65);
  uint64_t v69 = v106;
  *uint64_t v68 = sub_33CB0;
  v68[1] = (uint64_t (*)(uint64_t))v69;
  uint64_t v70 = *(void *)(v57 + 40);
  uint64_t v71 = *(void *)(v57 + 48);
  uint64_t v72 = __chkstk_darwin(v67);
  *(&v90 - 10) = v70;
  *(&v90 - 9) = v71;
  *(&v90 - sub_6C3C(v0 + 8) = 0xD000000000000024LL;
  *(&v90 - sub_6C3C(v0 + 7) = 0x800000000021EEB0LL;
  unint64_t v73 = v104;
  uint64_t v74 = v100;
  swift_retain(v72);
  swift_retain(v69);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_A6F0C,  v66,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v70,  v71,  0xD000000000000024LL,  0x800000000021EEB0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v90 - 12));
  swift_release(v66);
  swift_bridgeObjectRelease(v73);
  swift_release(v74);
  sub_1F6CC((uint64_t)&v108, &qword_283FE8);
  swift_release(v57);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v107);
  sub_6C3C(&v111);
  uint64_t v39 = v69;
  return swift_release(v39);
}

uint64_t sub_A6F10()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_A6F54(uint64_t a1)
{
  return sub_A426C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void (**)(char *))(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_A6F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_A401C(a1, a2, a3, a4, a5, v5, (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_A6F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_A3F1C(a1, a2, a3, a4, a5, v5, (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_A6FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_A3F9C(a1, a2, a3, a4, a5, v5, (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_A6FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_A3E94(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_A6FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_A3E0C(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_A6FD8()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 56));
  sub_6C3C((void *)(v0 + 64));

  sub_6C3C((void *)(v0 + 112));
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_A702C(char a1, uint64_t a2)
{
  return sub_A1438( a1,  a2,  *(void *)(v2 + 16),  *(void **)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void (**)(char *))(v2 + 48),  *(void *)(v2 + 56),  v2 + 64,  *(void **)(v2 + 104),  v2 + 112,  *(void *)(v2 + 152));
}

uint64_t sub_A706C()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_A70A0(uint64_t a1, uint64_t a2)
{
  return sub_A2B88( a1,  a2,  *(void (**)(void, void))(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48));
}

unint64_t sub_A70B0()
{
  unint64_t result = qword_286650;
  if (!qword_286650)
  {
    uint64_t v1 = sub_1641C(255LL, &qword_286648, &OBJC_CLASS___MSServiceAppInfo_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_286650);
  }

  return result;
}

void sub_A7108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v7 = __CocoaSet.makeIterator()(v6);
    uint64_t v8 = sub_1641C(0LL, &qword_286648, &OBJC_CLASS___MSServiceAppInfo_ptr);
    unint64_t v9 = sub_A70B0();
    uint64_t v10 = Set.Iterator.init(_cocoa:)(v50, v7, v8, v9);
    uint64_t v5 = v50[0];
    uint64_t v46 = v50[1];
    uint64_t v11 = v50[2];
    int64_t v12 = v50[3];
    unint64_t v13 = v50[4];
  }

  else
  {
    uint64_t v14 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v46 = a1 + 56;
    uint64_t v15 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1LL << v16);
    }
    else {
      uint64_t v17 = -1LL;
    }
    unint64_t v13 = v17 & *(void *)(a1 + 56);
    uint64_t v10 = (void *)swift_bridgeObjectRetain(a1);
    uint64_t v11 = v15;
    int64_t v12 = 0LL;
  }

  uint64_t v43 = v11;
  int64_t v45 = (unint64_t)(v11 + 64) >> 6;
  uint64_t v44 = v5;
  while (1)
  {
LABEL_11:
    if (v5 < 0)
    {
      uint64_t v20 = __CocoaSet.Iterator.next()(v10);
      if (!v20) {
        goto LABEL_60;
      }
      uint64_t v21 = v20;
      uint64_t v47 = v20;
      uint64_t v22 = sub_1641C(0LL, &qword_286648, &OBJC_CLASS___MSServiceAppInfo_ptr);
      swift_unknownObjectRetain(v21, v23);
      swift_dynamicCast(v49, &v47, (char *)&type metadata for Swift.AnyObject + 8, v22, 7LL);
      id v24 = (id)v49[0];
      swift_unknownObjectRelease(v21);
      int64_t v19 = v12;
      uint64_t v51 = v13;
      if (!v24) {
        goto LABEL_60;
      }
    }

    else
    {
      if (v13)
      {
        uint64_t v51 = (v13 - 1) & v13;
        unint64_t v18 = __clz(__rbit64(v13)) | (v12 << 6);
        int64_t v19 = v12;
      }

      else
      {
        int64_t v19 = v12 + 1;
        if (__OFADD__(v12, 1LL))
        {
          __break(1u);
          return;
        }

        if (v19 >= v45)
        {
LABEL_60:
          sub_A7610(v5);
          return;
        }

        unint64_t v25 = *(void *)(v46 + 8 * v19);
        if (!v25)
        {
          int64_t v26 = v12 + 2;
          if (v12 + 2 >= v45) {
            goto LABEL_60;
          }
          unint64_t v25 = *(void *)(v46 + 8 * v26);
          if (v25) {
            goto LABEL_26;
          }
          int64_t v26 = v12 + 3;
          if (v12 + 3 >= v45) {
            goto LABEL_60;
          }
          unint64_t v25 = *(void *)(v46 + 8 * v26);
          if (v25) {
            goto LABEL_26;
          }
          int64_t v26 = v12 + 4;
          if (v12 + 4 >= v45) {
            goto LABEL_60;
          }
          unint64_t v25 = *(void *)(v46 + 8 * v26);
          if (v25)
          {
LABEL_26:
            int64_t v19 = v26;
          }

          else
          {
            int64_t v19 = v12 + 5;
            if (v12 + 5 >= v45) {
              goto LABEL_60;
            }
            unint64_t v25 = *(void *)(v46 + 8 * v19);
            if (!v25)
            {
              int64_t v41 = v12 + 6;
              do
              {
                if (v45 == v41) {
                  goto LABEL_60;
                }
                unint64_t v25 = *(void *)(v46 + 8 * v41++);
              }

              while (!v25);
              int64_t v19 = v41 - 1;
            }
          }
        }

        uint64_t v51 = (v25 - 1) & v25;
        unint64_t v18 = __clz(__rbit64(v25)) + (v19 << 6);
      }

      id v24 = *(id *)(*(void *)(v5 + 48) + 8 * v18);
      if (!v24) {
        goto LABEL_60;
      }
    }

    id v27 = objc_msgSend(v24, "serviceBundleID", v43);
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v31 = v30;

      if (v29 == a2 && v31 == a3)
      {

        swift_bridgeObjectRelease(a3);
LABEL_59:
        uint64_t v42 = v5;
        goto LABEL_56;
      }

      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31);
      swift_bridgeObjectRelease(v31);
      if ((v32 & 1) != 0)
      {

        goto LABEL_59;
      }
    }

    id v33 = [v24 alternateBundleIDS];
    if (!v33)
    {

      goto LABEL_46;
    }

    uint64_t v34 = v33;
    uint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, (char *)&type metadata for Any + 8);

    uint64_t v36 = *(void *)(v35 + 16);
    if (v36) {
      break;
    }

    uint64_t v10 = (void *)swift_bridgeObjectRelease(v35);
LABEL_46:
    int64_t v12 = v19;
    unint64_t v13 = v51;
  }

  uint64_t v37 = v35 + 32;
  swift_bridgeObjectRetain(v35);
  while (1)
  {
    sub_6C00(v37, (uint64_t)v49);
    uint64_t v38 = v48;
    if (v47 == a2 && v48 == a3) {
      break;
    }
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48);
    swift_bridgeObjectRelease(v38);
    if ((v40 & 1) != 0)
    {

      swift_bridgeObjectRelease_n(v35, 2LL);
      goto LABEL_55;
    }

uint64_t sub_A75D8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_A7604(uint64_t a1)
{
  return sub_A3114( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void (**)(uint64_t, uint64_t))(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_A7610(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_A7618()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 56));

  sub_6C3C((void *)(v0 + 72));
  sub_6C3C((void *)(v0 + 112));
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_A766C(void *a1)
{
  return sub_A18E0( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void (**)(void))(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64),  (void *)(v1 + 72),  (void *)(v1 + 112));
}

uint64_t sub_A76AC()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_A76D8(uint64_t a1)
{
  return sub_A4B84(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_A7700()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_A7778()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_A77A0()
{
  uint64_t v1 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  swift_release(*(void *)(v0 + v7));

  swift_release(*(void *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

uint64_t sub_A7858(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_A47D4( a1,  v1 + v4,  *(void *)(v1 + v5),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void (**)(char *))(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)
                     + 8));
}

uint64_t type metadata accessor for PlayMediaDefaultSnippetModelProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin36PlayMediaDefaultSnippetModelProvider);
}

uint64_t sub_A78F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  return sub_A7938( a5,  a6,  "PlayMediaSnippetModelProviding#intentPreHandledSnippet won't return snippets for unsupported platform %{public}s");
}

uint64_t sub_A7914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  return sub_A7938( a5,  a6,  "PlayMediaSnippetModelProviding#intentHandledSnippet won't return snippets for unsupported platform %{public}s");
}

uint64_t sub_A7938(void (*a1)(void), uint64_t a2, const char *a3)
{
  uint64_t v6 = sub_6C5C(&qword_2866F8);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.info.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v31 = v6;
    uint64_t v17 = swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = a2;
    unint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    id v33 = a1;
    uint64_t v20 = v19;
    uint64_t v35 = v19;
    uint64_t v29 = a3;
    uint64_t v30 = v10;
    *(_DWORD *)unint64_t v18 = 136446210;
    uint64_t v21 = static Insights.responseFramework.getter(v19);
    unint64_t v23 = v22;
    uint64_t v34 = sub_6978(v21, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    unint64_t v24 = v23;
    uint64_t v6 = v31;
    swift_bridgeObjectRelease(v24);
    _os_log_impl(&dword_0, v15, v16, v29, v18, 0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v25 = v20;
    a1 = v33;
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v9);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  uint64_t v26 = type metadata accessor for SnippetModelResponse(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v8, 1LL, 1LL, v26);
  swift_storeEnumTagMultiPayload(v8, v6, 0LL);
  a1(v8);
  return sub_A7BF0((uint64_t)v8);
}

uint64_t type metadata accessor for SnippetModelResponse(uint64_t a1)
{
  uint64_t result = qword_286758;
  if (!qword_286758) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SnippetModelResponse);
  }
  return result;
}

uint64_t sub_A7BF0(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_2866F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t *sub_A7C30(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1LL, v7))
    {
      uint64_t v10 = sub_6C5C(&qword_284170);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1LL, v7))
    {
      uint64_t v15 = sub_6C5C(&qword_284170);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0LL, 1LL, v7);
    }

    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    unint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *unint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v1sub_6C3C(v0 + 7) = v21;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
  }

  return a1;
}

uint64_t sub_A7DAC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  if (!v6(v7, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease(*(void *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(void *)(a1 + a2[7]));
}

char *sub_A7E58(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_6C5C(&qword_284170);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_6C5C(&qword_284170);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = *(void *)&a2[v15];
  *(void *)&a1[v15] = v19;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  return a1;
}

char *sub_A7FA8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_6C5C(&qword_284170);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }

  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_6C5C(&qword_284170);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  uint64_t v22 = *((void *)v19 + 1);
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  uint64_t v23 = a3[7];
  uint64_t v24 = *(void *)&a1[v23];
  uint64_t v25 = *(void *)&a2[v23];
  *(void *)&a1[v23] = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v24);
  return a1;
}

char *sub_A81A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_6C5C(&qword_284170);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_6C5C(&qword_284170);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  return a1;
}

char *sub_A82E4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_6C5C(&qword_284170);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }

  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_6C5C(&qword_284170);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  uint64_t v23 = *((void *)v19 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = *(void *)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_bridgeObjectRelease(v25);
  return a1;
}

uint64_t sub_A84CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A84D8);
}

uint64_t sub_A84D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_6C5C(&qword_284170);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_A8568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A8574);
}

uint64_t sub_A8574(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_6C5C(&qword_284170);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 24) + sub_6C3C(v0 + 8) = a2;
  return result;
}

void sub_A85F4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    v4[2] = &unk_2164C8;
    v4[3] = &unk_2164E0;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
  }

void sub_A8670(uint64_t a1)
{
  if (!qword_286768)
  {
    uint64_t v2 = type metadata accessor for SiriAudioSnippets(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_286768);
    }
  }

uint64_t String.errorDescription.getter(uint64_t a1, uint64_t a2)
{
  return a1;
}

uint64_t sub_A86F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain(a2);
  return v3;
}

void sub_A8748(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  unint64_t v4 = v1[1];
  uint64_t v5 = *v1 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000LL) != 0) {
    uint64_t v5 = HIBYTE(v4) & 0xF;
  }
  if (v5)
  {
    v6._uint64_t countAndFlagsBits = 32LL;
    v6._object = (void *)0xE100000000000000LL;
    String.append(_:)(v6);
  }

  v7._uint64_t countAndFlagsBits = countAndFlagsBits;
  v7._object = object;
  String.append(_:)(v7);
}

uint64_t sub_A879C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t type metadata accessor for UpdateMediaAffinityCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin35UpdateMediaAffinityCatDialogService);
}

uint64_t sub_A87F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_A8830 + 4 * asc_216604[a1]))( 0x616C50616964656DLL,  0xEB00000000726579LL);
}

unint64_t sub_A8830()
{
  return 0xD000000000000017LL;
}

unint64_t sub_A896C()
{
  return 0xD000000000000012LL;
}

  ;
}

  ;
}

unint64_t sub_A89B0(unsigned __int8 a1)
{
  unint64_t v20 = 0xD000000000000012LL;
  unint64_t v21 = 0x800000000021EFC0LL;
  uint64_t v2 = sub_A87F4(a1);
  unint64_t v4 = v3;
  swift_bridgeObjectRetain(v3);
  sub_A8B34(1LL, v2, v4);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease(v4);
  Swift::String v7 = Substring.uppercased()();
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRetain(v4);
  unint64_t v8 = sub_1AD18C(1uLL, v2, v4);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  swift_bridgeObjectRelease(v4);
  Swift::String v19 = v7;
  v18[0] = v8;
  v18[1] = v10;
  v18[2] = v12;
  v18[3] = v14;
  unint64_t v15 = sub_A8BBC();
  swift_bridgeObjectRetain(v7._object);
  String.append<A>(contentsOf:)(v18, &type metadata for Substring, v15);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7._object);
  swift_bridgeObjectRelease(v14);
  object = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(object);
  return v20;
}

void sub_A8B20()
{
  qword_2968A0 = (uint64_t)&off_269E90;
}

uint64_t sub_A8B34(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v5 = a2;
    }
    uint64_t v6 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v6 = 11LL;
    }
    uint64_t v7 = v6 | (v5 << 16);
    uint64_t v8 = String.index(_:offsetBy:limitedBy:)(15LL, result, v7, a2, a3);
    if ((v9 & 1) != 0) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = v8;
    }
    return String.subscript.getter(15LL, v10, a2, a3);
  }

  return result;
}

unint64_t sub_A8BBC()
{
  unint64_t result = qword_286978;
  if (!qword_286978)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_286978);
  }

  return result;
}

uint64_t sub_A8C00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  char v9 = &v24[-v8 - 8];
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  int v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "AmbiguousShuffleFlow#on Handling input", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = type metadata accessor for Input(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v9, a1, v19);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0LL, 1LL, v19);
  sub_45F6C((uint64_t)v9, (uint64_t)v7, &qword_285BD0);
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_input;
  swift_beginAccess(v21, v24, 33LL, 0LL);
  sub_1B3B0((uint64_t)v7, v21);
  swift_endAccess(v24);
  return 1LL;
}

uint64_t sub_A8E24(void (*a1)(void *), uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v47 = (uint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  char v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Input(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = v2;
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_input, v52, 0LL, 0LL);
  sub_FF10(v21, (uint64_t)v12, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13) == 1)
  {
    uint64_t v22 = v50;
    sub_1F6CC((uint64_t)v12, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = v46;
    uint64_t v24 = sub_6960(v46, (uint64_t)qword_2969C8);
    uint64_t v26 = v44;
    uint64_t v25 = v45;
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v24, v23);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "AmbiguousShuffleFlow#execute Input is nil", v30, 2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v23);
    uint64_t v32 = v47;
    static ExecuteResponse.complete()(v31);
    v22(v32);
    return (*(uint64_t (**)(void *, uint64_t))(v48 + 8))(v32, v49);
  }

  else
  {
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v34(v19, v12, v13);
    uint64_t v35 = *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_controlsFlowProvider + 32);
    uint64_t v48 = *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_controlsFlowProvider + 24);
    uint64_t v49 = v35;
    uint64_t v47 = sub_6EA8( (void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_controlsFlowProvider),  v48);
    Input.parse.getter(v47);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    uint64_t v36 = *(unsigned __int8 *)(v14 + 80);
    uint64_t v37 = (v36 + 40) & ~v36;
    uint64_t v38 = (char *)swift_allocObject(&unk_26DA00, v37 + v15, v36 | 7);
    uint64_t v39 = (void (*)(void))v50;
    uint64_t v40 = v51;
    *((void *)v38 + 2) = v20;
    *((void *)v38 + sub_6C3C(v0 + 3) = v39;
    *((void *)v38 + 4) = v40;
    v34(&v38[v37], v17, v13);
    swift_retain(v20);
    swift_retain(v40);
    dispatch thunk of ControlsFlowProviding.makeAmbiguousShuffleMusicFlow(for:with:)(v9, sub_ABBCC, v38, v48, v49);
    swift_release(v38);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }

uint64_t sub_A91EC(uint64_t a1, char a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint8_t *a6)
{
  uint64_t v66 = a6;
  uint64_t v11 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v68 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v67 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v62 - v18;
  if ((a2 & 1) != 0)
  {
    uint64_t v72 = 0LL;
    unint64_t v73 = 0xE000000000000000LL;
    swift_errorRetain(a1);
    _StringGuts.grow(_:)(66LL);
    v34._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v34._object = (void *)0x800000000021F1B0LL;
    String.append(_:)(v34);
    swift_getErrorValue(a1, v70, v69);
    v35._uint64_t countAndFlagsBits = Error.localizedDescription.getter(v69[1], v69[2]);
    object = v35._object;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(object);
    v37._uint64_t countAndFlagsBits = 46LL;
    v37._object = (void *)0xE100000000000000LL;
    String.append(_:)(v37);
    unint64_t v38 = v73;
    sub_A97F4(0, v72, v73, a4, a5);
    swift_bridgeObjectRelease(v38);
    return sub_ABC68(a1, 1);
  }

  else
  {
    uint64_t v65 = v11;
    if (a1)
    {
      uint64_t v20 = qword_283888;
      swift_retain_n(a1, 2LL);
      if (v20 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v21 = sub_6960(v13, (uint64_t)qword_2969C8);
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
      uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v64 = a5;
        uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v26 = swift_slowAlloc(32LL, -1LL);
        unint64_t v63 = a4;
        uint64_t v27 = v26;
        uint64_t v72 = v26;
        *(_DWORD *)uint64_t v25 = 136446210;
        uint64_t v66 = v25 + 4;
        uint64_t v28 = static Insights.frameKit.getter();
        unint64_t v30 = v29;
        uint64_t v71 = sub_6978(v28, v29, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
        swift_bridgeObjectRelease(v30);
        _os_log_impl( &dword_0,  v23,  v24,  "AmbiguousShuffleFlow#execute %{public}s executing shuffle flow from controls",  v25,  0xCu);
        swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v31 = v27;
        a4 = v63;
        swift_slowDealloc(v31, -1LL, -1LL);
        swift_slowDealloc(v25, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      uint64_t v32 = v67;
      static ExecuteResponse.complete(next:)(a1);
      ((void (*)(char *))a4)(v32);
      sub_ABC68(a1, 0);
      sub_ABC68(a1, 0);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v32, v65);
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v39 = sub_6960(v13, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v39, v13);
      uint64_t v40 = swift_retain_n(a3, 2LL);
      uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
      os_log_type_t v42 = static os_log_type_t.default.getter();
      uint64_t v43 = &unk_286000;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v45 = swift_slowAlloc(32LL, -1LL);
        unint64_t v63 = a4;
        uint64_t v46 = v45;
        uint64_t v64 = a5;
        *(_DWORD *)uint64_t v44 = 136315138;
        uint64_t v72 = v45;
        unint64_t v62 = v44 + 4;
        uint64_t v47 = AnyFlow.description.getter(v45);
        unint64_t v49 = v48;
        uint64_t v71 = sub_6978(v47, v48, &v72);
        a5 = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72);
        swift_release_n(a3, 2LL);
        unint64_t v50 = v49;
        uint64_t v43 = (void *)&unk_286000;
        swift_bridgeObjectRelease(v50);
        _os_log_impl( &dword_0,  v41,  v42,  "AmbiguousShuffleFlow#execute No flow returned from controls, pushing fallback flow: %s",  v44,  0xCu);
        swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v51 = v46;
        a4 = v63;
        swift_slowDealloc(v51, -1LL, -1LL);
        swift_slowDealloc(v44, -1LL, -1LL);
      }

      else
      {

        swift_release_n(a3, 2LL);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      uint64_t v52 = v65;
      uint64_t v53 = *(void *)(a3 + v43[307]);
      if ((dispatch thunk of AnyFlow.on(input:)(v66) & 1) != 0)
      {
        uint64_t v54 = v67;
        static ExecuteResponse.complete(next:)(v53);
        ((void (*)(char *))a4)(v54);
        return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v54, v52);
      }

      else
      {
        uint64_t v72 = 0LL;
        unint64_t v73 = 0xE000000000000000LL;
        _StringGuts.grow(_:)(85LL);
        v55._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
        v55._object = (void *)0x800000000021F150LL;
        String.append(_:)(v55);
        uint64_t v56 = type metadata accessor for Input(0LL);
        unint64_t v57 = sub_ABC20();
        v58._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v56, v57);
        uint64_t v59 = v58._object;
        String.append(_:)(v58);
        swift_bridgeObjectRelease(v59);
        v60._object = (void *)0x800000000021F190LL;
        v60._uint64_t countAndFlagsBits = 0xD000000000000018LL;
        String.append(_:)(v60);
        unint64_t v61 = v73;
        sub_A97F4(1, v72, v73, a4, a5);
        return swift_bridgeObjectRelease(v61);
      }
    }
  }

uint64_t sub_A97F4(int a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v32 = a2;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = swift_bridgeObjectRetain_n(a3, 2LL);
  os_log_type_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v29 = a4;
    uint64_t v19 = swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = a5;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    uint64_t v31 = v6;
    uint64_t v22 = v21;
    uint64_t v34 = v21;
    int v28 = a1;
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_bridgeObjectRetain(a3);
    uint64_t v33 = sub_6978(v32, a3, &v34);
    a4 = v29;
    LOBYTE(a1) = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl(&dword_0, v17, v18, "%s", v20, 0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    uint64_t v23 = v20;
    a5 = v30;
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((a1 & 1) != 0) {
    uint64_t v24 = 0x6B6361426C6C6166LL;
  }
  else {
    uint64_t v24 = 0xD000000000000023LL;
  }
  if ((a1 & 1) != 0) {
    uint64_t v25 = (void *)0xEF66664F776F6C46LL;
  }
  else {
    uint64_t v25 = (void *)0x800000000021F120LL;
  }
  sub_A9A7C(v24, v25, a4, a5);
  return swift_bridgeObjectRelease(v25);
}

uint64_t sub_A9A7C(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    Swift::String v37 = a3;
    uint64_t v15 = swift_slowAlloc(12LL, -1LL);
    uint64_t v36 = v8;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v41[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v40 = sub_6978(a1, (unint64_t)a2, (uint64_t *)v41);
    a3 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl(&dword_0, v13, v14, "AmbiguousShuffleFlow#genericErrorDialog... %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v7);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  uint64_t v18 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v18, v43);
  *(_OWORD *)(inited + 16) = xmmword_2160E0;
  uint64_t v20 = type metadata accessor for ErrorFilingProvider(0LL);
  *(void *)(inited + 32) = static ErrorFilingProvider.errorInfoForParamsKey.getter(v20);
  *(void *)(inited + 40) = v21;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a1;
  *(void *)(inited + 56) = a2;
  uint64_t v22 = swift_bridgeObjectRetain(a2);
  *(void *)(inited + 80) = static ErrorFilingProvider.errorInfoForTitleKey.getter(v22);
  *(void *)(inited + 8sub_6C3C(v0 + 8) = v23;
  *(void *)&v41[0] = 0LL;
  *((void *)&v41[0] + 1) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(62LL);
  v24._object = (void *)0x800000000021F0E0LL;
  v24._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  String.append(_:)(v24);
  v25._uint64_t countAndFlagsBits = a1;
  v25._object = a2;
  String.append(_:)(v25);
  __int128 v26 = v41[0];
  *(void *)(inited + 120) = &type metadata for String;
  *(_OWORD *)(inited + 96) = v26;
  unint64_t v27 = sub_74D54(inited);
  uint64_t v28 = v38;
  uint64_t v29 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_playMediaCatDialogService);
  uint64_t v30 = (void *)swift_allocObject(&unk_26D9D8, 56LL, 7LL);
  Swift::String v37 = &v35;
  void v30[2] = v28;
  v30[3] = a1;
  v30[4] = a2;
  v30[5] = a3;
  uint64_t v31 = v39;
  v30[6] = v39;
  uint64_t v32 = *(void *)(v29 + 16);
  uint64_t v33 = *(void *)(v29 + 24);
  uint64_t v42 = 0LL;
  memset(v41, 0, sizeof(v41));
  __chkstk_darwin(v30);
  *(&v35 - 10) = v32;
  *(&v35 - 9) = v33;
  strcpy((char *)&v35 - 64, "GenericError");
  *((_BYTE *)&v35 - 51) = 0;
  *((_WORD *)&v35 - 25) = -5120;
  swift_bridgeObjectRetain(a2);
  swift_retain(v28);
  swift_retain(v31);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_ABB24,  (uint64_t)v30,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v32,  v33,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3D0BC,  (uint64_t)(&v35 - 12));
  sub_1F6CC((uint64_t)v41, &qword_283FE8);
  swift_bridgeObjectRelease(v27);
  return swift_release(v30);
}

uint64_t sub_A9EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a3;
  uint64_t v40 = a2;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_0, v15, v16, "AmbiguousShuffleFlow#handleDialogResult Handling dialog Result...", v17, 2u);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = v38;
  uint64_t v19 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_appNameResolver + 24);
  uint64_t v37 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_appNameResolver + 32);
  uint64_t v36 = sub_6EA8((void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_appNameResolver), v19);
  uint64_t v35 = static BundleIdentifiers.sentinelBundleIdentifier.getter(v36);
  uint64_t v21 = v20;
  uint64_t v44 = 0LL;
  memset(v43, 0, sizeof(v43));
  sub_FF10(a1, (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t *)&unk_286BB0);
  uint64_t v22 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  Swift::String v24 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = v18;
  unint64_t v26 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v29 = swift_allocObject(&unk_26D9B0, v28 + 16, v22 | 7);
  sub_45F6C((uint64_t)v24, v29 + v23, (uint64_t *)&unk_286BB0);
  *(void *)(v29 + v26) = v25;
  uint64_t v30 = (void *)(v29 + v27);
  uint64_t v32 = v41;
  uint64_t v31 = v42;
  *uint64_t v30 = v39;
  v30[1] = v32;
  uint64_t v33 = (void *)(v29 + v28);
  *uint64_t v33 = v40;
  v33[1] = v31;
  swift_retain(v25);
  swift_retain(v32);
  swift_bridgeObjectRetain(v31);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v35, v21, v43, sub_ABA6C, v29, v19, v37);
  swift_bridgeObjectRelease(v21);
  swift_release(v29);
  return sub_1F6CC((uint64_t)v43, &qword_2860C0);
}

uint64_t sub_AA154( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v92 = a8;
  uint64_t v91 = a7;
  uint64_t v109 = a6;
  uint64_t v110 = a5;
  uint64_t v105 = a3;
  uint64_t v106 = a4;
  uint64_t v107 = a1;
  uint64_t v9 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v9);
  uint64_t v101 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v13);
  uint64_t v99 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v98 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v103 = *(void *)(v17 - 8);
  uint64_t v104 = v17;
  __chkstk_darwin(v17);
  os_log_type_t v102 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v19 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v21 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_289340);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v89 - v26;
  uint64_t v28 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  type metadata accessor for App(0LL);
  swift_bridgeObjectRetain(a2);
  uint64_t v31 = App.__allocating_init(appIdentifier:)(v107, a2);
  sub_FF10(v105, (uint64_t)v30, (uint64_t *)&unk_286BB0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30, v28);
  uint64_t v107 = v31;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v90 = v21;
    uint64_t v105 = v19;
    uint64_t v33 = *v30;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v34 = v104;
    uint64_t v35 = sub_6960(v104, (uint64_t)qword_2969C8);
    uint64_t v37 = v102;
    uint64_t v36 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v35, v34);
    swift_errorRetain(v33);
    uint64_t v38 = swift_errorRetain(v33);
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v42 = swift_slowAlloc(32LL, -1LL);
      uint64_t v113 = v42;
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_getErrorValue(v33, v112, v111);
      uint64_t v116 = Error.localizedDescription.getter(v111[1], v111[2]);
      uint64_t v117 = v43;
      uint64_t v44 = String.init<A>(_:)( &v116,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v46 = v45;
      uint64_t v116 = sub_6978(v44, v45, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
      swift_bridgeObjectRelease(v46);
      swift_errorRelease(v33);
      swift_errorRelease(v33);
      _os_log_impl( &dword_0,  v39,  v40,  "AmbiguousShuffleFlow#handleDialogResult Could not properly create dialog %s, silently failing...",  v41,  0xCu);
      swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
    }

    else
    {
      swift_errorRelease(v33);
      swift_errorRelease(v33);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v34);
    }

    uint64_t v116 = v91;
    uint64_t v117 = v92;
    swift_bridgeObjectRetain(v92);
    v55._uint64_t countAndFlagsBits = 95LL;
    v55._object = (void *)0xE100000000000000LL;
    String.append(_:)(v55);
    uint64_t v57 = v116;
    uint64_t v56 = v117;
    uint64_t v89 = v33;
    swift_getErrorValue(v33, v115, v114);
    uint64_t v116 = Error.localizedDescription.getter(v114[1], v114[2]);
    uint64_t v117 = v58;
    uint64_t v59 = String.init<A>(_:)( &v116,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    unint64_t v61 = v60;
    uint64_t v116 = v57;
    uint64_t v117 = v56;
    swift_bridgeObjectRetain(v56);
    v62._uint64_t countAndFlagsBits = v59;
    v62._object = v61;
    String.append(_:)(v62);
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v61);
    uint64_t v63 = v116;
    uint64_t v64 = v117;
    uint64_t v65 = v94;
    uint64_t v66 = v93;
    uint64_t v67 = v95;
    (*(void (**)(char *, void, uint64_t))(v94 + 104))( v93,  enum case for AdditionalMetricsDescription.ModuleName.asf(_:),  v95);
    uint64_t v68 = v97;
    uint64_t v69 = v96;
    uint64_t v70 = v98;
    (*(void (**)(char *, void, uint64_t))(v97 + 104))( v96,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v98);
    uint64_t v104 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v66,  v69,  v63,  v64,  0LL,  1LL);
    uint64_t v72 = v71;
    swift_bridgeObjectRelease(v64);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
    uint64_t v73 = *(void *)(v106
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v74 = *(void *)(v106
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider
                    + 32);
    sub_6EA8( (void *)(v106 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider),  v73);
    uint64_t v75 = enum case for ActivityType.failed(_:);
    uint64_t v76 = type metadata accessor for ActivityType(0LL);
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 104))(v99, v75, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0LL, 1LL, v76);
    uint64_t v79 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v80 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))(v100, 1LL, 1LL, v79);
    uint64_t v81 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v82 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 104))(v101, v81, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0LL, 1LL, v82);
    uint64_t v85 = v107;
    uint64_t v86 = swift_retain(v107);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v86,  0LL,  v78,  v80,  v84,  v104,  v72,  0LL,  1,  v73,  v74);
    swift_release(v85);
    swift_bridgeObjectRelease(v72);
    sub_1F6CC(v84, &qword_2845A0);
    sub_1F6CC(v80, (uint64_t *)&unk_286BD0);
    uint64_t v87 = sub_1F6CC(v78, &qword_2845A8);
    uint64_t v88 = v90;
    static ExecuteResponse.complete()(v87);
    v110(v88);
    swift_release(v85);
    swift_errorRelease(v89);
    return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v88, v108);
  }

  else
  {
    uint64_t v47 = *(int *)(v22 + 48);
    uint64_t v48 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v49 = *(void *)(v48 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v49 + 32))(v27, v30, v48);
    unint64_t v50 = *(void **)((char *)v30 + v47);
    *(void *)&v27[v47] = v50;
    uint64_t v51 = *(int *)(v22 + 48);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v25, v27, v48);
    *(void *)&v25[v51] = v50;
    id v52 = v50;
    sub_AAA18((uint64_t)v25, v52);

    uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v25, v48);
    static ExecuteResponse.complete()(v53);
    v110(v21);
    swift_release(v107);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v108);
    return sub_1F6CC((uint64_t)v27, &qword_289340);
  }

uint64_t sub_AAA18(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289340);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v32 = *(void *)(v14 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v30(v13, a1, v14);
  *(void *)&v13[*(int *)(v8 + 48)] = a2;
  uint64_t v15 = qword_283888;
  id v31 = a2;
  if (v15 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v17 = v5;
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl( &dword_0,  v19,  v20,  "AmbiguousShuffleFlow#publishOutput Dialog successfully generated, responding and exiting...",  v21,  2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
  uint64_t v22 = v33;
  uint64_t v23 = sub_6EA8( (void *)(v33 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_outputProvider),  *(void *)(v33 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_outputProvider + 24));
  uint64_t v24 = *(int *)(v8 + 48);
  v30(v11, (uint64_t)v13, v14);
  uint64_t v25 = v31;
  *(void *)&v11[v24] = v31;
  uint64_t v26 = swift_allocObject(&unk_26D988, 24LL, 7LL);
  swift_weakInit(v26 + 16, v22);
  unint64_t v27 = (void *)*v23;
  id v28 = v25;
  sub_17967C((uint64_t)v11, v28, v27, v26);

  sub_1F6CC((uint64_t)v13, &qword_289340);
  swift_release(v26);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v14);
}

uint64_t sub_AACAC(uint64_t a1, uint64_t a2)
{
  uint64_t v101 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v4 = *(v101 - 1);
  __chkstk_darwin(v101);
  os_log_type_t v102 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v9);
  uint64_t v100 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v11);
  uint64_t v99 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v104 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v98 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = (void *)(a2 + 16);
  sub_FF10(a1, (uint64_t)&v118, (uint64_t *)&unk_286C60);
  if ((v119 & 1) == 0)
  {
    sub_FF54(&v118, (uint64_t)&v112);
    (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for AdditionalMetricsDescription.ModuleName.asf(_:),  v18);
    (*(void (**)(char *, void, uint64_t))(v15 + 104))( v17,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v14);
    uint64_t v42 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v21,  v17,  0x45636972656E6547LL,  0xEC000000726F7272LL,  0LL,  1LL);
    uint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    swift_beginAccess(v22, v109, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v22);
    if (Strong)
    {
      uint64_t v46 = Strong;
      sub_157C4( Strong + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider,  (uint64_t)v106);
      swift_release(v46);
      uint64_t v47 = v107;
      os_log_type_t v102 = v108;
      uint64_t v101 = sub_6EA8(v106, v107);
      uint64_t v48 = v98;
      (*(void (**)(char *, void, uint64_t))(v103 + 104))( v98,  enum case for TypeOfIntent.acousticID(_:),  v104);
      uint64_t v49 = enum case for ActivityType.failed(_:);
      uint64_t v50 = (uint64_t)v8;
      uint64_t v51 = type metadata accessor for ActivityType(0LL);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 104);
      uint64_t v97 = v22;
      uint64_t v54 = v99;
      v53(v99, v49, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v54, 0LL, 1LL, v51);
      uint64_t v55 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v56 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v100, 1LL, 1LL, v55);
      uint64_t v57 = enum case for SiriKitReliabilityCodes.genericError(_:);
      uint64_t v58 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v59 = *(void *)(v58 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 104))(v50, v57, v58);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v50, 0LL, 1LL, v58);
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v48,  v54,  v56,  v50,  v42,  v44,  v47,  v102);
      swift_bridgeObjectRelease(v44);
      sub_1F6CC(v50, &qword_2845A0);
      sub_1F6CC(v56, (uint64_t *)&unk_286BD0);
      uint64_t v60 = (uint64_t)v54;
      uint64_t v22 = v97;
      sub_1F6CC(v60, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v48, v104);
      sub_6C3C(v106);
    }

    else
    {
      swift_bridgeObjectRelease(v44);
    }

    swift_beginAccess(v22, v105, 0LL, 0LL);
    uint64_t v85 = swift_weakLoadStrong(v22);
    if (v85)
    {
      uint64_t v86 = v85;
      sub_157C4(v85 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_publisher, (uint64_t)v106);
      swift_release(v86);
      uint64_t v87 = v107;
      uint64_t v88 = v108;
      sub_6EA8(v106, v107);
      dispatch thunk of OutputPublisher.publish(output:_:)(&v112, WHAError.rawValue.getter, 0LL, v87, v88);
      sub_6C3C(&v112);
      return sub_6C3C(v106);
    }

    return sub_6C3C(&v112);
  }

  uint64_t v23 = v4;
  uint64_t v24 = (char *)v118;
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v97 = v22;
  uint64_t v25 = v101;
  uint64_t v26 = sub_6960((uint64_t)v101, (uint64_t)qword_2969E0);
  uint64_t v96 = v23;
  (*(void (**)(char *, uint64_t, void *))(v23 + 16))(v102, v26, v25);
  swift_errorRetain(v24);
  uint64_t v27 = swift_errorRetain(v24);
  id v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.error.getter();
  int v94 = v29;
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v95 = v8;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc(22LL, -1LL);
    uint64_t v92 = swift_slowAlloc(64LL, -1LL);
    v106[0] = v92;
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v90 = v31 + 4;
    swift_getErrorValue(v24, v111, v110);
    os_log_t v91 = v28;
    uint64_t v112 = Error.localizedDescription.getter(v110[1], v110[2]);
    uint64_t v113 = v32;
    uint64_t v33 = String.init<A>(_:)( &v112,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    unint64_t v35 = v34;
    uint64_t v112 = sub_6978(v33, v34, v106);
    uint64_t v93 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
    swift_bridgeObjectRelease(v35);
    swift_errorRelease(v24);
    uint64_t v36 = swift_errorRelease(v24);
    *(_WORD *)(v31 + sub_6C3C(v0 + 12) = 2082;
    uint64_t v37 = static Insights.responseFramework.getter(v36);
    unint64_t v39 = v38;
    uint64_t v112 = sub_6978(v37, v38, v106);
    uint64_t v14 = v93;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
    swift_bridgeObjectRelease(v39);
    os_log_t v40 = v91;
    _os_log_impl( &dword_0,  v91,  (os_log_type_t)v94,  "AmbiguousShuffleFlow#handleDialogResult failed to create output %s  %{public}s",  (uint8_t *)v31,  0x16u);
    uint64_t v41 = v92;
    swift_arrayDestroy(v92, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);

    (*(void (**)(char *, void *))(v96 + 8))(v102, v101);
  }

  else
  {
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    (*(void (**)(char *, void *))(v96 + 8))(v102, v25);
  }

  (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for AdditionalMetricsDescription.ModuleName.asf(_:),  v18);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))( v17,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v14);
  swift_getErrorValue(v24, v117, v116);
  uint64_t v61 = Error.localizedDescription.getter(v116[1], v116[2]);
  uint64_t v63 = v62;
  uint64_t v64 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v21,  v17,  v61,  v62,  0LL,  1LL);
  uint64_t v65 = v24;
  uint64_t v67 = v66;
  swift_bridgeObjectRelease(v63);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v68 = v97;
  swift_beginAccess(v97, v106, 0LL, 0LL);
  uint64_t v69 = swift_weakLoadStrong(v68);
  if (v69)
  {
    uint64_t v70 = v69;
    sub_157C4( v69 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider,  (uint64_t)&v112);
    swift_release(v70);
    uint64_t v71 = v114;
    uint64_t v101 = v115;
    uint64_t v72 = sub_6EA8(&v112, v114);
    os_log_type_t v102 = v65;
    uint64_t v97 = v72;
    uint64_t v73 = v98;
    (*(void (**)(char *, void, uint64_t))(v103 + 104))(v98, enum case for TypeOfIntent.acousticID(_:), v104);
    uint64_t v74 = enum case for ActivityType.failed(_:);
    uint64_t v75 = v64;
    uint64_t v76 = type metadata accessor for ActivityType(0LL);
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 104))(v99, v74, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0LL, 1LL, v76);
    uint64_t v79 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v80 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))(v100, 1LL, 1LL, v79);
    uint64_t v81 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v82 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 104))(v95, v81, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0LL, 1LL, v82);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v73,  v78,  v80,  v84,  v75,  v67,  v71,  v101);
    swift_bridgeObjectRelease(v67);
    swift_errorRelease(v102);
    sub_1F6CC(v84, &qword_2845A0);
    sub_1F6CC(v80, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v78, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v73, v104);
    return sub_6C3C(&v112);
  }

  swift_bridgeObjectRelease(v67);
  return swift_errorRelease(v65);
}

uint64_t sub_AB760()
{
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_playMediaCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_AB818()
{
  return type metadata accessor for AmbiguousShuffleFlow(0LL);
}

uint64_t type metadata accessor for AmbiguousShuffleFlow(uint64_t a1)
{
  uint64_t result = qword_2869F0;
  if (!qword_2869F0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AmbiguousShuffleFlow);
  }
  return result;
}

void sub_AB85C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "(";
    v4[2] = "(";
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[4] = "(";
    v4[5] = "(";
    v4[6] = "(";
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = "(";
    swift_updateClassMetadata2(a1, 256LL, 9LL, v4, a1 + 80);
  }

uint64_t sub_AB8EC(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_AB910(void (*a1)(void *), uint64_t a2)
{
  return sub_A8E24(a1, a2);
}

uint64_t sub_AB930(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AmbiguousShuffleFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_AB958()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_AB97C()
{
  uint64_t v1 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (void *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v0 + v4, v7);
  }

  unint64_t v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + v8));
  swift_release(*(void *)(v0 + v9 + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v3 | 7);
}

uint64_t sub_ABA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_6C5C((uint64_t *)&unk_286BB0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_AA154( a1,  a2,  v2 + v6,  *(void *)(v2 + v7),  *(void (**)(char *))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_ABAF0()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_ABB24(uint64_t a1)
{
  return sub_A9EA4(a1, v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_ABB50()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_ABBCC(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Input(0LL) - 8) + 80LL);
  return sub_A91EC( a1,  v4,  *(void *)(v2 + 16),  *(uint64_t **)(v2 + 24),  *(void *)(v2 + 32),  (uint8_t *)(v2 + ((v5 + 40) & ~v5)));
}

unint64_t sub_ABC20()
{
  unint64_t result = qword_284640;
  if (!qword_284640)
  {
    uint64_t v1 = type metadata accessor for Input(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Input, v1);
    atomic_store(result, (unint64_t *)&qword_284640);
  }

  return result;
}

uint64_t sub_ABC68(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  else {
    return swift_release(a1);
  }
}

uint64_t sub_ABC74(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = "(";
  v2[5] = "(";
  v2[6] = "(";
  void v2[7] = "(";
  return swift_initClassMetadata2(a1, 0LL, 8LL, v2, a1 + 96);
}

uint64_t sub_ABCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL);
  v7(a3, 1LL, 1LL, v6);
  unint64_t v9 = (int *)type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, a1, a2, v8);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a3 + v9[9], 1LL, 1LL, v6);
  uint64_t v11 = (void *)(a3 + v9[10]);
  void *v11 = 0LL;
  v11[1] = 0LL;
  uint64_t v12 = (void *)(a3 + v9[11]);
  *uint64_t v12 = 0LL;
  v12[1] = 0LL;
  *(void *)(a3 + v9[12]) = 0LL;
  return result;
}

uint64_t sub_ABD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v4);
  uint64_t v90 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v99 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v6 = *(void *)(v99 - 8);
  uint64_t v7 = __chkstk_darwin(v99);
  uint64_t v85 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v86 = (char *)&v81 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v89 = (char *)&v81 - v12;
  __chkstk_darwin(v11);
  uint64_t v93 = (char *)&v81 - v13;
  uint64_t v14 = type metadata accessor for Parse(0LL);
  uint64_t v96 = *(void *)(v14 - 8);
  uint64_t v97 = v14;
  __chkstk_darwin(v14);
  uint64_t v95 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Input(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v87 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v88 = (char *)&v81 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v81 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v20, (uint64_t)qword_2969C8);
  os_log_type_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v91 = v28;
  uint64_t v92 = v29;
  ((void (*)(char *))v29)(v27);
  BOOL v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v98 = a1;
  uint64_t v31 = v30(v19, a1, v16);
  uint64_t v94 = v21;
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc(12LL, -1LL);
    uint64_t v83 = v20;
    uint64_t v82 = v6;
    unint64_t v35 = (uint8_t *)v34;
    uint64_t v36 = swift_slowAlloc(32LL, -1LL);
    uint64_t v84 = a2;
    uint64_t v37 = v36;
    v103[0] = v36;
    *(_DWORD *)unint64_t v35 = 136315138;
    uint64_t v81 = v35 + 4;
    uint64_t v38 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter(v16, v38);
    unint64_t v41 = v40;
    *(void *)&__int128 v101 = sub_6978(v39, v40, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, (char *)&v101 + 8);
    swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    _os_log_impl(&dword_0, v32, v33, "TCCAcceptanceFlowStrategy#actionForInput input:%s", v35, 0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v42 = v35;
    uint64_t v6 = v82;
    uint64_t v20 = v83;
    swift_slowDealloc(v42, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }

  uint64_t v43 = *(uint64_t (**)(char *, uint64_t))(v94 + 8);
  uint64_t v44 = v43(v27, v20);
  uint64_t v45 = (uint64_t)v95;
  Input.parse.getter(v44);
  double v46 = sub_B6EF8(v45, &v101);
  (*(void (**)(uint64_t, uint64_t, double))(v96 + 8))(v45, v97, v46);
  uint64_t v47 = v99;
  if (v102)
  {
    sub_FF54(&v101, (uint64_t)v103);
    uint64_t v48 = v104;
    uint64_t v49 = v105;
    sub_6EA8(v103, v104);
    uint64_t v50 = v48;
    uint64_t v51 = (uint64_t)v90;
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v50, v49);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v51, 1LL, v47) == 1)
    {
      uint64_t v52 = sub_1F6CC(v51, &qword_284630);
LABEL_9:
      static ActionForInput.handle()(v52);
      return sub_6C3C(v103);
    }

    uint64_t v60 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v93, v51, v47);
    uint64_t v61 = v6;
    uint64_t v62 = *(void (**)(char *, void, uint64_t))(v6 + 104);
    v62(v89, enum case for CommonAudio.Confirmation.cancel(_:), v47);
    uint64_t v63 = sub_10430( qword_286CD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
    dispatch thunk of RawRepresentable.rawValue.getter(&v101, v47, v63);
    dispatch thunk of RawRepresentable.rawValue.getter(&v100, v47, v63);
    uint64_t v64 = *((void *)&v101 + 1);
    uint64_t v65 = *((void *)&v100 + 1);
    if (v101 == v100)
    {
      char v66 = 1;
      uint64_t v65 = *((void *)&v101 + 1);
    }

    else
    {
      char v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, *((void *)&v101 + 1));
    }

    swift_bridgeObjectRelease(v64);
    swift_bridgeObjectRelease(v65);
    uint64_t v67 = v61;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v61 + 8);
    v68(v89, v47);
    uint64_t v69 = v86;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v86, v93, v47);
    if ((v66 & 1) == 0)
    {
      v62(v85, enum case for CommonAudio.Confirmation.no(_:), v47);
      dispatch thunk of RawRepresentable.rawValue.getter(&v101, v47, v63);
      dispatch thunk of RawRepresentable.rawValue.getter(&v100, v47, v63);
      uint64_t v70 = *((void *)&v101 + 1);
      uint64_t v71 = *((void *)&v100 + 1);
      if (v101 != v100)
      {
        uint64_t v79 = v69;
        char v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, *((void *)&v101 + 1));
        swift_bridgeObjectRelease(v70);
        swift_bridgeObjectRelease(v71);
        v68(v85, v47);
        v68(v79, v47);
        if ((v80 & 1) == 0)
        {
          uint64_t v52 = ((uint64_t (*)(char *, uint64_t))v68)(v93, v47);
          goto LABEL_9;
        }

uint64_t sub_AC5B8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v132 = a3;
  unint64_t v133 = a2;
  uint64_t v131 = sub_6C5C((uint64_t *)&unk_286CB0);
  uint64_t v5 = __chkstk_darwin(v131);
  uint64_t v7 = (uint64_t *)&v112[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v5);
  uint64_t v129 = &v112[-v8];
  uint64_t v125 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v130 = *(void *)(v125 - 8);
  uint64_t v9 = __chkstk_darwin(v125);
  uint64_t v123 = &v112[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v9);
  __int128 v118 = &v112[-v11];
  uint64_t v128 = type metadata accessor for SiriKitConfirmationState(0LL);
  uint64_t v134 = *(void *)(v128 - 8);
  uint64_t v12 = __chkstk_darwin(v128);
  uint64_t v122 = &v112[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v127 = &v112[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v117 = &v112[-v17];
  __chkstk_darwin(v16);
  char v119 = &v112[-v18];
  uint64_t v19 = sub_6C5C(&qword_284630);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v124 = &v112[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v20);
  uint64_t v23 = &v112[-v22];
  uint64_t v121 = sub_6C5C((uint64_t *)&unk_286CC0);
  uint64_t v24 = __chkstk_darwin(v121);
  os_log_type_t v126 = &v112[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v24);
  uint64_t v120 = &v112[-v26];
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v135 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  BOOL v30 = &v112[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v28);
  uint64_t v32 = &v112[-v31];
  uint64_t v33 = type metadata accessor for Parse(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = &v112[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  Input.parse.getter(v35);
  double v38 = sub_B6EF8((uint64_t)v37, &v138);
  (*(void (**)(_BYTE *, uint64_t, double))(v34 + 8))(v37, v33, v38);
  if (v139)
  {
    sub_FF54(&v138, (uint64_t)v141);
    uint64_t v39 = v3[22];
    uint64_t v40 = v4[23];
    sub_6EA8(v4 + 19, v4[22]);
    sub_1F4C78(v39, v40);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v41 = sub_6960(v27, (uint64_t)qword_2969C8);
    uint64_t v42 = v135;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v135 + 16))(v32, v41, v27);
    uint64_t v43 = sub_157C4((uint64_t)v141, (uint64_t)&v138);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    int v45 = static os_log_type_t.default.getter();
    BOOL v46 = os_log_type_enabled(v44, (os_log_type_t)v45);
    uint64_t v47 = v134;
    uint64_t v48 = v125;
    if (!v46)
    {
      sub_6C3C(&v138);

      (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v32, v27);
      uint64_t v55 = v128;
      uint64_t v56 = (uint64_t)v124;
      goto LABEL_27;
    }

    int v116 = v45;
    uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v115 = swift_slowAlloc(32LL, -1LL);
    uint64_t v137 = v115;
    *(_DWORD *)uint64_t v49 = 136315138;
    uint64_t v50 = v139;
    uint64_t v51 = v140;
    sub_6EA8(&v138, v139);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v50, v51);
    uint64_t v52 = v130;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v130 + 48))(v23, 1LL, v48) == 1)
    {
      sub_1F6CC((uint64_t)v23, &qword_284630);
      uint64_t v53 = type metadata accessor for ConfirmationResponse(0LL);
      uint64_t v54 = v120;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v120, 1LL, 1LL, v53);
      uint64_t v55 = v128;
      uint64_t v56 = (uint64_t)v124;
      uint64_t v57 = v121;
LABEL_26:
      uint64_t v86 = String.init<A>(describing:)(v54, v57);
      unint64_t v88 = v87;
      uint64_t v136 = sub_6978(v86, v87, &v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v136, &v137);
      swift_bridgeObjectRelease(v88);
      sub_6C3C(&v138);
      _os_log_impl( &dword_0,  v44,  (os_log_type_t)v116,  "TCCAcceptanceFlowStrategy#parseTCCConfirmationResponse %s",  v49,  0xCu);
      uint64_t v89 = v115;
      swift_arrayDestroy(v115, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v89, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v135 + 8))(v32, v27);
      uint64_t v47 = v134;
LABEL_27:
      uint64_t v90 = v142;
      uint64_t v91 = v143;
      sub_6EA8(v141, v142);
      dispatch thunk of ConfirmableIntent.confirmationState.getter(v90, v91);
      uint64_t v92 = v130;
      int v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v56, 1LL, v48);
      uint64_t v94 = v127;
      uint64_t v95 = v126;
      if (v93 == 1)
      {
        sub_1F6CC(v56, &qword_284630);
        uint64_t v96 = type metadata accessor for ConfirmationResponse(0LL);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56LL))(v95, 1LL, 1LL, v96);
LABEL_44:
        uint64_t v109 = (uint64_t)v129;
        SimpleConfirmationResponseProvider.init(_:)(v95);
        swift_storeEnumTagMultiPayload(v109, v131, 0LL);
        v133(v109);
        sub_1F6CC(v109, (uint64_t *)&unk_286CB0);
        return sub_6C3C(v141);
      }

      uint64_t v97 = v123;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v92 + 16))(v123, v56, v48);
      int v98 = (*(uint64_t (**)(_BYTE *, uint64_t))(v92 + 88))(v97, v48);
      if (v98 == enum case for CommonAudio.Confirmation.yes(_:))
      {
        uint64_t v99 = enum case for SiriKitConfirmationState.confirmed(_:);
      }

      else
      {
        int v100 = v98;
        if (v98 == enum case for CommonAudio.Confirmation.no(_:))
        {
          __int128 v101 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
        }

        else
        {
          if (v98 != enum case for CommonAudio.Confirmation.cancel(_:))
          {
            int v110 = enum case for CommonAudio.Confirmation.moreInfo(_:);
            (*(void (**)(_BYTE *, void, uint64_t))(v47 + 104))( v94,  enum case for SiriKitConfirmationState.unset(_:),  v55);
            BOOL v111 = v100 == v110;
            uint64_t v92 = v130;
            if (!v111) {
              (*(void (**)(_BYTE *, uint64_t))(v130 + 8))(v123, v48);
            }
LABEL_37:
            (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v56, v48);
            uint64_t v102 = v122;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v122, v94, v55);
            int v103 = (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 88))(v102, v55);
            if (v103 == enum case for SiriKitConfirmationState.confirmed(_:))
            {
              uint64_t v104 = (unsigned int *)&enum case for ConfirmationResponse.confirmed(_:);
            }

            else
            {
              if (v103 != enum case for SiriKitConfirmationState.rejected(_:))
              {
                uint64_t v108 = type metadata accessor for ConfirmationResponse(0LL);
                (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56LL))( v95,  1LL,  1LL,  v108);
                (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v102, v55);
                goto LABEL_43;
              }

              uint64_t v104 = (unsigned int *)&enum case for ConfirmationResponse.rejected(_:);
            }

            uint64_t v105 = *v104;
            uint64_t v106 = type metadata accessor for ConfirmationResponse(0LL);
            uint64_t v107 = *(void *)(v106 - 8);
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v107 + 104))(v95, v105, v106);
            (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v107 + 56))(v95, 0LL, 1LL, v106);
LABEL_43:
            (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v94, v55);
            goto LABEL_44;
          }

          __int128 v101 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
        }

        uint64_t v99 = *v101;
      }

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v47 + 104))(v94, v99, v55);
      goto LABEL_37;
    }

    uint64_t v69 = v118;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v52 + 16))(v118, v23, v48);
    int v70 = (*(uint64_t (**)(_BYTE *, uint64_t))(v52 + 88))(v69, v48);
    uint64_t v55 = v128;
    uint64_t v114 = v49;
    if (v70 == enum case for CommonAudio.Confirmation.yes(_:))
    {
      uint64_t v71 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
    }

    else
    {
      int v72 = v70;
      if (v70 == enum case for CommonAudio.Confirmation.no(_:))
      {
        uint64_t v71 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
      }

      else
      {
        if (v70 != enum case for CommonAudio.Confirmation.cancel(_:))
        {
          int v113 = enum case for CommonAudio.Confirmation.moreInfo(_:);
          uint64_t v73 = v119;
          (*(void (**)(_BYTE *, void, uint64_t))(v47 + 104))( v119,  enum case for SiriKitConfirmationState.unset(_:),  v128);
          if (v72 != v113) {
            (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v118, v48);
          }
          goto LABEL_20;
        }

        uint64_t v71 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
      }
    }

    uint64_t v73 = v119;
    (*(void (**)(_BYTE *, void, uint64_t))(v47 + 104))(v119, *v71, v128);
LABEL_20:
    (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v23, v48);
    uint64_t v74 = v117;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v117, v73, v55);
    int v75 = (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 88))(v74, v55);
    if (v75 == enum case for SiriKitConfirmationState.confirmed(_:))
    {
      uint64_t v76 = enum case for ConfirmationResponse.confirmed(_:);
      uint64_t v77 = type metadata accessor for ConfirmationResponse(0LL);
      uint64_t v78 = *(void *)(v77 - 8);
      uint64_t v79 = v120;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v78 + 104))(v120, v76, v77);
      char v80 = *(void (**)(_BYTE *, void, uint64_t, uint64_t))(v78 + 56);
      uint64_t v54 = v79;
      uint64_t v73 = v119;
      v80(v79, 0LL, 1LL, v77);
      uint64_t v56 = (uint64_t)v124;
    }

    else
    {
      uint64_t v56 = (uint64_t)v124;
      if (v75 == enum case for SiriKitConfirmationState.rejected(_:))
      {
        uint64_t v81 = enum case for ConfirmationResponse.rejected(_:);
        uint64_t v82 = type metadata accessor for ConfirmationResponse(0LL);
        uint64_t v83 = *(void *)(v82 - 8);
        uint64_t v54 = v120;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v83 + 104))(v120, v81, v82);
        uint64_t v84 = *(void (**)(_BYTE *, void, uint64_t, uint64_t))(v83 + 56);
        uint64_t v73 = v119;
        v84(v54, 0LL, 1LL, v82);
      }

      else
      {
        uint64_t v85 = type metadata accessor for ConfirmationResponse(0LL);
        uint64_t v54 = v120;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56LL))(v120, 1LL, 1LL, v85);
        (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v74, v55);
      }
    }

    uint64_t v57 = v121;
    (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v73, v55);
    uint64_t v49 = v114;
    goto LABEL_26;
  }

  sub_1F6CC((uint64_t)&v138, &qword_284638);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v58 = sub_6960(v27, (uint64_t)qword_2969C8);
  uint64_t v59 = v135;
  uint64_t v60 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v135 + 16))(v30, v58, v27);
  uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
  os_log_type_t v62 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v63 = 0;
    _os_log_impl( &dword_0,  v61,  v62,  "TCCAcceptanceFlowStrategy#parseTCCConfirmationResponse received invalid NL intent",  v63,  2u);
    swift_slowDealloc(v63, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v59 + 8))(v30, v27);
  uint64_t v64 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v65 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v66 = swift_allocError(v64, v65, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v64 - 8) + 104LL))( v67,  enum case for PlaybackCode.ceGE23(_:),  v64);
  *uint64_t v7 = v66;
  swift_storeEnumTagMultiPayload(v7, v131, 1LL);
  v133((uint64_t)v7);
  return sub_1F6CC((uint64_t)v7, (uint64_t *)&unk_286CB0);
}

void (*sub_AD254(uint64_t a1, uint64_t a2, uint64_t a3))(_BYTE *, void)
{
  uint64_t v4 = v3;
  uint64_t v8 = App.appIdentifier.getter(a1);
  uint64_t v10 = v9;
  uint64_t v11 = static BundleIdentifiers.classical.getter(v8);
  uint64_t v13 = v12;
  if (!v10)
  {
    swift_bridgeObjectRelease(v12);
    goto LABEL_9;
  }

  if (v8 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v13);
    goto LABEL_7;
  }

  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) == 0)
  {
LABEL_9:
    uint64_t v23 = (void *)swift_allocObject(&unk_26DD00, 40LL, 7LL);
    v23[2] = a2;
    void v23[3] = a3;
    v23[4] = v4;
    swift_retain(a3);
    swift_retain(v4);
    sub_1F1800(a1, (uint64_t)sub_B2E30, (uint64_t)v23);
    return (void (*)(_BYTE *, void))swift_release(v23);
  }

uint64_t sub_AD400(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v5 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289340);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v42 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v19, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    uint64_t v20 = *v19;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v21 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v22 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v16, v21, v14);
    swift_errorRetain(v20);
    uint64_t v23 = swift_errorRetain(v20);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v27 = swift_slowAlloc(32LL, -1LL);
      v48[0] = v27;
      uint64_t v41 = v14;
      *(_DWORD *)uint64_t v26 = 136446210;
      swift_getErrorValue(v20, v47, v46);
      uint64_t v28 = Error.localizedDescription.getter(v46[1], v46[2]);
      unint64_t v30 = v29;
      uint64_t v45 = sub_6978(v28, v29, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(v20);
      swift_errorRelease(v20);
      _os_log_impl( &dword_0,  v24,  v25,  "TCCAcceptanceFlowStrategy#makeRejectedResponse error generating dialog: %{public}s",  v26,  0xCu);
      swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1LL, -1LL);
      swift_slowDealloc(v26, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v41);
    }

    else
    {
      swift_errorRelease(v20);
      swift_errorRelease(v20);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v14);
    }

    uint64_t v39 = v44;
    v48[0] = v20;
    char v49 = 1;
    swift_errorRetain(v20);
    v39(v48);
    swift_errorRelease(v20);
    return sub_1F6CC((uint64_t)v48, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v31 = *(int *)(v8 + 48);
    uint64_t v32 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v33 = *(void *)(v32 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v33 + 32))(v13, v19, v32);
    uint64_t v34 = *(void **)((char *)v19 + v31);
    *(void *)&v13[v31] = v34;
    sub_6EA8((void *)(v41 + 112), *(void *)(v41 + 136));
    uint64_t v35 = *(int *)(v8 + 48);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v11, v13, v32);
    *(void *)&v11[v35] = v34;
    uint64_t v36 = type metadata accessor for NLContextUpdate(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56LL))(v7, 1LL, 1LL, v36);
    id v37 = v34;
    sub_175200((uint64_t)v11, v37, (uint64_t)v7, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v44, v43);

    sub_1F6CC((uint64_t)v7, (uint64_t *)&unk_286C50);
    sub_1F6CC((uint64_t)v13, &qword_289340);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v11, v32);
  }

uint64_t sub_AD860(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v28 = v5;
    uint64_t v19 = a4;
    uint64_t v20 = a2;
    uint64_t v21 = a3;
    uint64_t v22 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "TCCAcceptanceFlowStrategy#makeHandoffResponseForAuthenticationResponse", v18, 2u);
    uint64_t v23 = v22;
    a3 = v21;
    a2 = v20;
    a4 = v19;
    uint64_t v5 = v28;
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = (void *)swift_allocObject(&unk_26DCD8, 56LL, 7LL);
  v24[2] = a3;
  v24[3] = a4;
  v24[4] = a2;
  _OWORD v24[5] = a1;
  v24[6] = v5;
  swift_retain(a4);
  id v25 = a2;
  swift_retain(a1);
  swift_retain(v5);
  sub_B08F4(a1, (uint64_t)sub_B2DF4, (uint64_t)v24);
  return swift_release(v24);
}

uint64_t sub_ADA34( uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t countAndFlagsBits = a5;
  uint64_t v144 = a3;
  uint64_t v145 = a2;
  uint64_t v127 = a6;
  uint64_t v8 = *a6;
  uint64_t v143 = sub_6C5C(&qword_286CA8);
  __chkstk_darwin(v143);
  uint64_t v140 = (uint64_t *)((char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v132 = type metadata accessor for HandoffResponse(0LL);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v136 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v130 = type metadata accessor for Locale(0LL);
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v128 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = type metadata accessor for AceOutput(0LL);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v142 = type metadata accessor for Logger(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  uint64_t v16 = __chkstk_darwin(v142);
  uint64_t v18 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v133 = (char *)&v123 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v123 - v22;
  __chkstk_darwin(v21);
  id v25 = (char *)&v123 - v24;
  uint64_t v26 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for TemplatingResult(0LL);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = a1;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_FF10(v32, (uint64_t)v28, (uint64_t *)&unk_286BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v28, 1LL, v34) == 1)
  {
    sub_1F6CC((uint64_t)v28, (uint64_t *)&unk_286BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v37 = v142;
    uint64_t v38 = sub_6960(v142, (uint64_t)qword_2969C8);
    uint64_t v39 = v141;
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 16))(v25, v38, v37);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.error.getter();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = v140;
    if (v43)
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl( &dword_0,  v41,  v42,  "TCCAcceptanceFlowStrategy#makeHandoffResponseForAuthenticationResponse unable to generate templating result",  v45,  2u);
      swift_slowDealloc(v45, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v37);
    uint64_t v46 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v47 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v48 = swift_allocError(v46, v47, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104LL))( v49,  enum case for PlaybackCode.ceGE24(_:),  v46);
    uint64_t *v44 = v48;
    swift_storeEnumTagMultiPayload(v44, v143, 1LL);
    v145(v44);
    return sub_1F6CC((uint64_t)v44, &qword_286CA8);
  }

  uint64_t v126 = v36;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  uint64_t v134 = v31;
  uint64_t v125 = v34;
  v51(v31, v28, v34);
  v147[0] = (uint64_t)a4;
  uint64_t v52 = *(void *)(v8 + 80);
  id v53 = a4;
  uint64_t v54 = sub_6C5C((uint64_t *)&unk_286C70);
  if ((swift_dynamicCast(&v149, v147, v52, v54, 6LL) & 1) != 0)
  {
    uint64_t v123 = v8;
    sub_FF54(&v149, (uint64_t)v148);
    sub_6EA8(v148, v148[3]);
    Swift::String_optional v55 = CommonIntentSignals.getSFACompanionAssistantID()();
    uint64_t v56 = v140;
    object = v55.value._object;
    if (v55.value._object)
    {
      char v57 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v55.value._countAndFlagsBits);
      uint64_t v58 = type metadata accessor for NLContextUpdate(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56LL))(v14, 1LL, 1LL, v58);
      __int128 v149 = 0u;
      memset(v150, 0, 24);
      uint64_t v59 = v137;
      static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v134,  v57 & 1,  _swiftEmptyArrayStorage,  0LL,  1LL,  v14,  _swiftEmptyArrayStorage,  &v149);
      sub_1F6CC((uint64_t)&v149, &qword_2845C8);
      uint64_t v60 = sub_1F6CC((uint64_t)v14, (uint64_t *)&unk_286C50);
      uint64_t v61 = App.appIdentifier.getter(v60);
      uint64_t v63 = v62;
      *(void *)&__int128 v149 = v61;
      *((void *)&v149 + 1) = v62;
      *(void *)uint64_t v150 = v53;
      memset(&v150[8], 0, 32);
      char v151 = 0;
      id v64 = v53;
      id v65 = sub_1CB14C();

      swift_bridgeObjectRelease(v63);
      uint64_t v66 = v145;
      if (v65)
      {
        uint64_t countAndFlagsBits = v55.value._countAndFlagsBits;
        uint64_t v67 = v127[6];
        uint64_t v68 = v127[7];
        sub_6EA8(v127 + 3, v67);
        uint64_t v70 = type metadata accessor for TCCAcceptanceFlowStrategy(0LL, v52, *(void *)(v123 + 88), v69);
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v70);
        id v72 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
        uint64_t v73 = v128;
        static SiriAudioEnvironment.siriLocale.getter(v72);
        uint64_t v74 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0xD000000000000015LL,  0x800000000021F280LL,  0x736C6562614CLL,  0xE600000000000000LL,  v72,  v73,  0xD000000000000015LL,  0x800000000021F2A0LL,  v67,  v68);
        uint64_t v76 = v75;

        (*(void (**)(char *, uint64_t))(v129 + 8))(v73, v130);
        uint64_t v77 = v139;
        void v147[3] = v139;
        v147[4] = (uint64_t)&protocol witness table for AceOutput;
        uint64_t v78 = sub_10974(v147);
        (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v78, v59, v77);
        id v79 = v65;
        HandoffResponse.init(output:companionNotificationText:runSiriKitExecutorCommand:)(v147, v74, v76, v79);
        uint64_t v80 = v142;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v81 = sub_6960(v80, (uint64_t)qword_2969C8);
        uint64_t v82 = v141;
        uint64_t v83 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v133, v81, v80);
        uint64_t v84 = object;
        uint64_t v85 = swift_bridgeObjectRetain_n(object, 2LL);
        uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
        os_log_type_t v87 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v130 = (uint64_t)v79;
          unint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v89 = swift_slowAlloc(32LL, -1LL);
          v147[0] = v89;
          *(_DWORD *)unint64_t v88 = 136315138;
          swift_bridgeObjectRetain(object);
          uint64_t v90 = countAndFlagsBits;
          uint64_t v146 = sub_6978(countAndFlagsBits, (unint64_t)object, v147);
          id v79 = (id)v130;
          uint64_t v84 = object;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, v147);
          swift_bridgeObjectRelease_n(v84, 3LL);
          _os_log_impl( &dword_0,  v86,  v87,  "TCCAcceptanceFlowStrategy#makeHandoffResponseForAuthenticationResponse Sending handoff notification to assistant id: %s",  v88,  0xCu);
          swift_arrayDestroy(v89, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v89, -1LL, -1LL);
          swift_slowDealloc(v88, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v82 + 8))(v133, v80);
          uint64_t v91 = v125;
        }

        else
        {

          swift_bridgeObjectRelease_n(v84, 2LL);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v80);
          uint64_t v91 = v125;
          uint64_t v90 = countAndFlagsBits;
        }

        char v119 = v84;
        uint64_t v120 = v136;
        HandoffResponse.targetDeviceAssistantIdOverride.setter(v90, v119);
        uint64_t v121 = v131;
        uint64_t v122 = v132;
        (*(void (**)(uint64_t *, char *, uint64_t))(v131 + 16))(v56, v120, v132);
        swift_storeEnumTagMultiPayload(v56, v143, 0LL);
        v145(v56);

        sub_1F6CC((uint64_t)v56, &qword_286CA8);
        (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v122);
        (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v134, v91);
      }

      else
      {
        swift_bridgeObjectRelease(object);
        uint64_t v106 = v142;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v107 = sub_6960(v106, (uint64_t)qword_2969C8);
        uint64_t v108 = v141;
        uint64_t v109 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 16))(v23, v107, v106);
        int v110 = (os_log_s *)Logger.logObject.getter(v109);
        os_log_type_t v111 = static os_log_type_t.error.getter();
        BOOL v112 = os_log_type_enabled(v110, v111);
        uint64_t v113 = v125;
        if (v112)
        {
          uint64_t v114 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v114 = 0;
          _os_log_impl( &dword_0,  v110,  v111,  "TCCAcceptanceFlowStrategy#makeHandoffResponseForAuthenticationResponse Unable to create RSKE command",  v114,  2u);
          swift_slowDealloc(v114, -1LL, -1LL);
        }

        (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v106);
        uint64_t v115 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v116 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v117 = swift_allocError(v115, v116, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v115 - 8) + 104LL))( v118,  enum case for PlaybackCode.ceGE26(_:),  v115);
        *uint64_t v56 = v117;
        swift_storeEnumTagMultiPayload(v56, v143, 1LL);
        v66(v56);
        sub_1F6CC((uint64_t)v56, &qword_286CA8);
        (*(void (**)(char *, uint64_t))(v138 + 8))(v59, v139);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v134, v113);
      }

      return sub_6C3C(v148);
    }

    sub_6C3C(v148);
  }

  else
  {
    __int128 v149 = 0u;
    memset(v150, 0, 24);
    sub_1F6CC((uint64_t)&v149, &qword_2858C8);
    uint64_t v56 = v140;
  }

  uint64_t v92 = v145;
  uint64_t v93 = v125;
  uint64_t v94 = v134;
  uint64_t v95 = v142;
  uint64_t v96 = v141;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v97 = sub_6960(v95, (uint64_t)qword_2969C8);
  uint64_t v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 16))(v18, v97, v95);
  uint64_t v99 = (os_log_s *)Logger.logObject.getter(v98);
  os_log_type_t v100 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v99, v100))
  {
    __int128 v101 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)__int128 v101 = 0;
    _os_log_impl( &dword_0,  v99,  v100,  "TCCAcceptanceFlowStrategy#makeHandoffResponseForAuthenticationResponse Could not get companion assistant id for ha ndoff notification",  v101,  2u);
    swift_slowDealloc(v101, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v96 + 8))(v18, v95);
  uint64_t v102 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v103 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v104 = swift_allocError(v102, v103, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v102 - 8) + 104LL))( v105,  enum case for PlaybackCode.ceGE25(_:),  v102);
  *uint64_t v56 = v104;
  swift_storeEnumTagMultiPayload(v56, v143, 1LL);
  v92(v56);
  sub_1F6CC((uint64_t)v56, &qword_286CA8);
  return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v94, v93);
}

void sub_AE80C(uint64_t a1, void *a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v60 = a4;
  uint64_t v61 = a3;
  uint64_t v59 = a1;
  uint64_t v62 = *v4;
  uint64_t v64 = type metadata accessor for Locale(0LL);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v58 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v58 - v12;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v16 = v15(v13, v14, v8);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "TCCAcceptanceFlowStrategy#makePromptForTCCAcceptance", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v13, v8);
  v66[0] = a2;
  uint64_t v21 = *(void *)(v62 + 80);
  id v22 = a2;
  uint64_t v23 = sub_6C5C((uint64_t *)&unk_286C70);
  if ((swift_dynamicCast(v68, v66, v21, v23, 6LL) & 1) != 0)
  {
    sub_FF54((__int128 *)v68, (uint64_t)&v70);
    sub_6EA8(&v70, *((uint64_t *)&v71 + 1));
    if (CommonIntentSignals.handledBySiriForAirPlay()())
    {
      uint64_t v24 = (uint64_t)v58;
      uint64_t v25 = v15(v58, v14, v8);
      uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl( &dword_0,  v26,  v27,  "TCCAcceptanceFlowStrategy#makePromptForTCCAcceptance Adding TCC acceptance required for SiriForAirPlay request",  v28,  2u);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      v20((char *)v24, v8);
      sub_6EA8(&v70, *((uint64_t *)&v71 + 1));
      CommonIntentSignals.addSiriForAirPlayTCCAcceptanceRequired()();
    }

    sub_6C3C(&v70);
  }

  else
  {
    memset(v68, 0, 40);
    sub_1F6CC((uint64_t)v68, &qword_2858C8);
  }

  uint64_t v29 = v65;
  uint64_t v30 = v65[6];
  uint64_t v31 = v65[7];
  sub_6EA8(v65 + 3, v30);
  uint64_t v32 = type metadata accessor for PlayMediaAlternativesViewProvider();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32);
  uint64_t v34 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  id v35 = [v34 bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v35);
  uint64_t v58 = (char *)dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0xD000000000000012LL,  0x800000000021F240LL,  0x736C6562614CLL,  0xE600000000000000LL,  v35,  v7,  0LL,  0xE000000000000000LL,  v30,  v31);
  uint64_t v62 = v36;

  uint64_t v37 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v38 = v64;
  v37(v7, v64);
  uint64_t v39 = v29[6];
  uint64_t v40 = v29[7];
  sub_6EA8(v29 + 3, v39);
  id v41 = [v34 bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v41);
  uint64_t v42 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0xD000000000000017LL,  0x800000000021F260LL,  0x736C6562614CLL,  0xE600000000000000LL,  v41,  v7,  0LL,  0xE000000000000000LL,  v39,  v40);
  uint64_t v44 = v43;

  v37(v7, v38);
  uint64_t v73 = 0LL;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  __int128 v70 = 0u;
  char v74 = 2;
  id v45 = sub_1CBA90();
  if (!v45) {
    goto LABEL_17;
  }
  uint64_t v46 = v45;
  *(void *)uint64_t v68 = 1LL;
  memset(&v68[8], 0, 48);
  char v69 = 2;
  id v47 = sub_1CBA90();
  if (!v47)
  {

LABEL_17:
    swift_bridgeObjectRelease(v62);
    swift_bridgeObjectRelease(v44);
    unint64_t v57 = sub_B26E4();
    v66[0] = swift_allocError(&type metadata for ConfirmationPromptCreationError, v57, 0LL, 0LL);
    char v67 = 1;
    v61(v66);
    sub_1F6CC((uint64_t)v66, (uint64_t *)&unk_286C60);
    return;
  }

  uint64_t v48 = v47;
  uint64_t v49 = v65;
  swift_beginAccess(v65 + 9, v66, 0LL, 0LL);
  uint64_t v50 = v49[12];
  uint64_t v51 = v49[13];
  uint64_t v52 = sub_6EA8(v49 + 9, v50);
  uint64_t v53 = *(void *)(v50 - 8);
  __chkstk_darwin(v52);
  Swift::String_optional v55 = (char *)&v58 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v53 + 16))(v55);
  LOBYTE(v51) = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v50, v51);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v50);
  uint64_t v56 = v62;
  if ((v51 & 1) != 0)
  {
    sub_B2728(v59, (uint64_t)v58, v62, v42, v44, v61, v60);
    swift_bridgeObjectRelease(v56);

    swift_bridgeObjectRelease(v44);
  }

  else
  {
    sub_AEEE0(v59, (uint64_t)v58, v62, v46, v42, v44, v48, (uint64_t)v61, v60);

    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v56);
  }

uint64_t sub_AEEE0( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v74 = a8;
  uint64_t v63 = a5;
  uint64_t v72 = a1;
  uint64_t v73 = a9;
  uint64_t v66 = *v9;
  uint64_t v15 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v70 = *(void *)(v69 + 64);
  uint64_t v71 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v68 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  char v67 = (char *)&v62 - v18;
  uint64_t v19 = sub_6C5C(&qword_287980);
  uint64_t v20 = swift_allocObject(v19, 40LL, 7LL);
  __int128 v75 = xmmword_214980;
  *(_OWORD *)(v20 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v20 + 32) = a4;
  uint64_t v76 = v20;
  specialized Array._endMutation()(v20);
  uint64_t v21 = v76;
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeCONFIRMValue);
  uint64_t v24 = v23;
  id v25 = a4;
  id v65 = (id)static CasinoFactory.makeConfirmationOptionFromCommands(commands:label:confirmationType:isActive:iconType:)( v21,  a2,  a3,  v22,  v24,  0LL,  0LL,  0LL);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v24);
  uint64_t v26 = swift_allocObject(v19, 40LL, 7LL);
  *(_OWORD *)(v26 + swift_weakDestroy(v0 + 16) = v75;
  *(void *)(v26 + 32) = a7;
  uint64_t v76 = v26;
  specialized Array._endMutation()(v26);
  uint64_t v27 = v76;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIConfirmationOptionConfirmationOptionTypeDENYValue);
  uint64_t v30 = v29;
  id v31 = a7;
  uint64_t v64 = static CasinoFactory.makeConfirmationOptionFromCommands(commands:label:confirmationType:isActive:iconType:)( v27,  v63,  a6,  v28,  v30,  0LL,  0LL,  0LL);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v30);
  id v32 = [objc_allocWithZone(SAUIConfirmationView) init];
  NSString v33 = String._bridgeToObjectiveC()();
  [v32 setConfirmText:v33];

  uint64_t v34 = swift_allocObject(v19, 40LL, 7LL);
  *(_OWORD *)(v34 + swift_weakDestroy(v0 + 16) = v75;
  *(void *)(v34 + 32) = v25;
  uint64_t v76 = v34;
  specialized Array._endMutation()(v34);
  uint64_t v35 = v76;
  id v36 = v25;
  sub_6C5C(&qword_286C40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v35);
  [v32 setConfirmCommands:isa];

  NSString v38 = String._bridgeToObjectiveC()();
  [v32 setDenyText:v38];

  uint64_t v39 = swift_allocObject(v19, 40LL, 7LL);
  *(_OWORD *)(v39 + swift_weakDestroy(v0 + 16) = v75;
  *(void *)(v39 + 32) = v31;
  uint64_t v76 = v39;
  specialized Array._endMutation()(v39);
  uint64_t v40 = v76;
  id v41 = v31;
  Class v42 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v40);
  [v32 setDenyCommands:v42];

  uint64_t v43 = swift_allocObject(v19, 48LL, 7LL);
  *(_OWORD *)(v43 + swift_weakDestroy(v0 + 16) = xmmword_2166D0;
  uint64_t v44 = (void *)v64;
  id v45 = v65;
  *(void *)(v43 + 32) = v65;
  *(void *)(v43 + 40) = v44;
  uint64_t v76 = v43;
  specialized Array._endMutation()(v43);
  uint64_t v46 = v76;
  sub_B25D4();
  *(void *)&__int128 v75 = v45;
  id v65 = v44;
  Class v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  [v32 setAllConfirmationOptions:v47];

  uint64_t v48 = v67;
  uint64_t v49 = *(void *)(v66 + 80);
  uint64_t v50 = *(void *)(v66 + 88);
  uint64_t v51 = v72;
  sub_95F14();
  uint64_t v53 = v68;
  uint64_t v52 = v69;
  uint64_t v54 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v48, v71);
  uint64_t v55 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v56 = (v55 + 56) & ~v55;
  unint64_t v57 = (char *)swift_allocObject(&unk_26DC60, v56 + v70, v55 | 7);
  *((void *)v57 + 2) = v49;
  *((void *)v57 + sub_6C3C(v0 + 3) = v50;
  uint64_t v58 = v73;
  *((void *)v57 + 4) = v74;
  *((void *)v57 + 5) = v58;
  *((void *)v57 + 6) = v32;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v57[v56], v53, v54);
  swift_retain(v58);
  id v59 = v32;
  sub_B0D7C(v51, (uint64_t)sub_B268C, (uint64_t)v57, v60);

  swift_release(v57);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v48, v54);
}

uint64_t sub_AF364( uint64_t a1, void (*a2)(__int128 *), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v79 = a4;
  uint64_t v80 = a5;
  uint64_t v86 = a3;
  os_log_type_t v87 = a2;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v10);
  uint64_t v81 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for AceOutput(0LL);
  uint64_t v83 = *(void *)(v12 - 8);
  uint64_t v84 = v12;
  __chkstk_darwin(v12);
  uint64_t v82 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v88 = *(void *)(v14 - 8);
  uint64_t v89 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v85 = (char *)&v77 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v77 - v27;
  uint64_t v30 = (int *)type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, a6, a7, v29);
  sub_FF10(a1 + v30[9], (uint64_t)v21, (uint64_t *)&unk_286BA0);
  uint64_t v31 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48LL))(v21, 1LL, v31) == 1)
  {
    sub_1F6CC((uint64_t)v21, (uint64_t *)&unk_286BA0);
LABEL_10:
    uint64_t v33 = v88;
    uint64_t v34 = v89;
LABEL_11:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v55 = sub_6960(v34, (uint64_t)qword_2969C8);
    uint64_t v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v17, v55, v34);
    unint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      id v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v59 = 0;
      _os_log_impl( &dword_0,  v57,  v58,  "TCCAcceptanceFlowStrategy#createConfirmationViewOutput error generating dialog",  v59,  2u);
      swift_slowDealloc(v59, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
    uint64_t v60 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v61 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v62 = swift_allocError(v60, v61, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v60 - 8) + 104LL))( v63,  enum case for PlaybackCode.ceGE91(_:),  v60);
    *(void *)&__int128 v91 = v62;
    char v94 = 1;
    v87(&v91);
    return sub_1F6CC((uint64_t)&v91, (uint64_t *)&unk_286C60);
  }

  id v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v32(v26, v21, v22);
  v32(v28, v26, v22);
  if (!*(void *)(a1 + v30[10] + 8))
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    goto LABEL_10;
  }

  uint64_t v33 = v88;
  uint64_t v34 = v89;
  if (!*(void *)(a1 + v30[11] + 8))
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
    goto LABEL_11;
  }

  NSString v35 = String._bridgeToObjectiveC()();
  id v36 = v79;
  [v79 setTitle:v35];

  NSString v37 = String._bridgeToObjectiveC()();
  [v36 setSubtitle:v37];

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v38 = sub_6960(v34, (uint64_t)qword_2969C8);
  uint64_t v39 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v85, v38, v34);
  id v40 = v36;
  id v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v79 = (id)swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v91 = v79;
    *(_DWORD *)uint64_t v43 = 136315138;
    uint64_t v78 = v43;
    id v44 = objc_msgSend(v40, "debugDescription", v43 + 4);
    id v45 = v28;
    uint64_t v46 = v22;
    uint64_t v47 = v23;
    id v48 = v44;
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    unint64_t v51 = v50;

    uint64_t v23 = v47;
    uint64_t v22 = v46;
    uint64_t v28 = v45;
    uint64_t v90 = sub_6978(v49, v51, (uint64_t *)&v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);

    swift_bridgeObjectRelease(v51);
    uint64_t v52 = v78;
    _os_log_impl( &dword_0,  v41,  v42,  "TCCAcceptanceFlowStrategy#createConfirmationViewOutput Created view: %s",  v78,  0xCu);
    id v53 = v79;
    swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1LL, -1LL);
    swift_slowDealloc(v52, -1LL, -1LL);

    uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v85, v89);
  }

  else
  {

    uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v39, v34);
  }

  char v65 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v54);
  uint64_t v66 = sub_6C5C(&qword_287980);
  uint64_t v67 = swift_allocObject(v66, 40LL, 7LL);
  *(_OWORD *)(v67 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v67 + 32) = v40;
  *(void *)&__int128 v91 = v67;
  specialized Array._endMutation()(v67);
  uint64_t v68 = v91;
  uint64_t v69 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v81, v80, v69);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0LL, 1LL, v69);
  uint64_t v93 = 0LL;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  id v72 = v40;
  uint64_t v73 = v82;
  static AceOutputHelper.makeConfirmationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v28,  v65 & 1,  v68,  1LL,  1LL,  v71,  _swiftEmptyArrayStorage,  &v91);
  swift_bridgeObjectRelease(v68);
  sub_1F6CC((uint64_t)&v91, &qword_2845C8);
  sub_1F6CC(v71, (uint64_t *)&unk_286C50);
  uint64_t v74 = v84;
  *((void *)&v92 + 1) = v84;
  uint64_t v93 = &protocol witness table for AceOutput;
  __int128 v75 = sub_10974(&v91);
  uint64_t v76 = v83;
  (*(void (**)(void *, char *, uint64_t))(v83 + 16))(v75, v73, v74);
  char v94 = 0;
  v87(&v91);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v74);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
  return sub_1F6CC((uint64_t)&v91, (uint64_t *)&unk_286C60);
}

uint64_t sub_AFABC( uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void (*a4)(char *, id, uint64_t), void (*a5)(void, void), void (*a6)(char *, char *, uint64_t), char *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v124 = a8;
  uint64_t v132 = a7;
  uint64_t v127 = a6;
  uint64_t v126 = a5;
  uint64_t v125 = a4;
  uint64_t v136 = a2;
  uint64_t v137 = a3;
  uint64_t v133 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v131 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v129 = v13;
  uint64_t v130 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v123 = type metadata accessor for ResponseMode(0LL);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v121 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SiriAudioConfirmationSnippetModel(0LL);
  uint64_t v141 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v140 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v118 - v19;
  uint64_t v128 = v21;
  __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v118 - v22;
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v138 = v24;
  uint64_t v139 = v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v134 = (char *)&v118 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v118 - v29;
  __chkstk_darwin(v28);
  id v32 = (char *)&v118 - v31;
  uint64_t v33 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v33);
  NSString v35 = (char *)&v118 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, a11, a12, v36);
  uint64_t v38 = *(int *)(v37 + 36);
  uint64_t v135 = a1;
  sub_FF10(a1 + v38, (uint64_t)v35, (uint64_t *)&unk_286BA0);
  uint64_t v39 = sub_6C5C(&qword_289340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48LL))(v35, 1LL, v39) == 1)
  {
    sub_1F6CC((uint64_t)v35, (uint64_t *)&unk_286BA0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v40 = v138;
    uint64_t v41 = sub_6960(v138, (uint64_t)qword_2969C8);
    uint64_t v42 = v139;
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v139 + 16))(v32, v41, v40);
    id v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl( &dword_0,  v44,  v45,  "TCCAcceptanceFlowStrategy#createConfirmationViewOutputWithRF error generating dialog",  v46,  2u);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v40);
    uint64_t v47 = *(int *)(v37 + 48);
    uint64_t v48 = *(void *)(v135 + v47);
    if (v48)
    {
      uint64_t v49 = *(void *)(v135 + v47);
    }

    else
    {
      uint64_t v115 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v116 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v49 = swift_allocError(v115, v116, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v115 - 8) + 104LL))( v117,  enum case for PlaybackCode.ceGE92(_:),  v115);
      uint64_t v48 = 0LL;
    }

    v143[0] = v49;
    char v144 = 1;
    swift_errorRetain(v48);
    v136(v143);
    return sub_1F6CC((uint64_t)v143, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v135 = v15;
    uint64_t v120 = *(void **)&v35[*(int *)(v39 + 48)];
    uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8LL))(v35, v50);
    unint64_t v51 = v126;
    swift_bridgeObjectRetain(v126);
    uint64_t v52 = v132;
    swift_bridgeObjectRetain(v132);
    id v53 = a9;
    id v54 = v124;
    SiriAudioConfirmationSnippetModel.init(confirmText:denyText:confirmCommand:denyCommand:isDestructive:)( v125,  v51,  v127,  v52,  v54,  v53,  0LL);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v55 = v138;
    uint64_t v56 = (void *)sub_6960(v138, (uint64_t)qword_2969C8);
    uint64_t v57 = v139;
    os_log_type_t v58 = *(void (**)(char *, id, uint64_t))(v139 + 16);
    id v124 = v56;
    uint64_t v125 = v58;
    ((void (*)(char *))v58)(v30);
    uint64_t v59 = v141;
    uint64_t v60 = v30;
    uint64_t v61 = *(uint64_t (**)(char *, char *, uint64_t))(v141 + 16);
    uint64_t v132 = v23;
    uint64_t v62 = v135;
    uint64_t v63 = v61(v20, v23, v135);
    char v119 = v60;
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.default.getter();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v127 = (void (*)(char *, char *, uint64_t))v61;
    if (v66)
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      v143[0] = v68;
      *(_DWORD *)uint64_t v67 = 136315138;
      uint64_t v69 = v140;
      v61(v140, v20, v135);
      uint64_t v70 = String.init<A>(describing:)(v69, v135);
      unint64_t v72 = v71;
      uint64_t v142 = sub_6978(v70, v71, v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, v143);
      unint64_t v73 = v72;
      uint64_t v62 = v135;
      swift_bridgeObjectRelease(v73);
      uint64_t v126 = *(void (**)(void, void))(v141 + 8);
      v126(v20, v62);
      _os_log_impl( &dword_0,  v64,  v65,  "TCCAcceptanceFlowStrategy#createConfirmationViewOutputWithRF Created RF 2.0 Snippet: %s",  v67,  0xCu);
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);

      uint64_t v74 = *(uint64_t (**)(char *, uint64_t))(v139 + 8);
    }

    else
    {
      uint64_t v126 = *(void (**)(void, void))(v59 + 8);
      v126(v20, v62);

      uint64_t v74 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
    }

    uint64_t v75 = v74(v119, v55);
    uint64_t v76 = v55;
    uint64_t v77 = a10;
    uint64_t v78 = static SiriEnvironmentWrapper.retrieve()(v75);
    id v79 = v134;
    if (!v78)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v78 = static SiriEnvironment.default.getter();
    }

    uint64_t v80 = v78;
    v125(v79, v124, v76);
    uint64_t v81 = swift_retain_n(v80, 2LL);
    uint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
    os_log_type_t v83 = static os_log_type_t.info.getter(v82);
    BOOL v84 = os_log_type_enabled(v82, v83);
    uint64_t v139 = v80;
    if (v84)
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v86 = swift_slowAlloc(32LL, -1LL);
      uint64_t v125 = (void (*)(char *, id, uint64_t))v74;
      uint64_t v87 = v86;
      v143[0] = v86;
      *(_DWORD *)uint64_t v85 = 136315138;
      id v124 = v85 + 4;
      uint64_t v88 = SiriEnvironment.currentRequest.getter(v86);
      uint64_t v89 = v121;
      CurrentRequest.responseMode.getter(v88);
      uint64_t v90 = swift_release(v88);
      uint64_t v91 = ResponseMode.description.getter(v90);
      unint64_t v93 = v92;
      char v94 = v89;
      uint64_t v77 = a10;
      (*(void (**)(char *, uint64_t))(v122 + 8))(v94, v123);
      uint64_t v142 = sub_6978(v91, v93, v143);
      uint64_t v62 = v135;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, v143);
      swift_release_n(v80, 2LL);
      swift_bridgeObjectRelease(v93);
      _os_log_impl( &dword_0,  v82,  v83,  "TCCAcceptanceFlowStrategy#createConfirmationViewOutputWithRF with responseMode = %s",  v85,  0xCu);
      swift_arrayDestroy(v87, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v87, -1LL, -1LL);
      swift_slowDealloc(v85, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v125)(v134, v138);
    }

    else
    {

      swift_release_n(v80, 2LL);
      v74(v79, v76);
    }

    uint64_t v95 = v127;
    uint64_t v96 = v130;
    uint64_t v97 = v131;
    uint64_t v98 = v77;
    uint64_t v99 = v133;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v98, v133);
    v95(v140, v132, v62);
    uint64_t v100 = *(unsigned __int8 *)(v97 + 80);
    uint64_t v101 = (v100 + 16) & ~v100;
    unint64_t v102 = (v129 + v101 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v103 = (v102 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v104 = v141;
    uint64_t v105 = *(unsigned __int8 *)(v141 + 80);
    uint64_t v106 = (v105 + v103 + 8) & ~v105;
    uint64_t v107 = v62;
    uint64_t v108 = swift_allocObject(&unk_26DCB0, v106 + v128, v100 | v105 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v108 + v101, v96, v99);
    uint64_t v110 = v139;
    uint64_t v109 = v140;
    *(void *)(v108 + v102) = v139;
    os_log_type_t v111 = v120;
    *(void *)(v108 + v10sub_6C3C(v0 + 3) = v120;
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v108 + v106, v109, v107);
    swift_retain(v110);
    id v112 = v111;
    uint64_t v113 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v136, v137, &unk_286C90, v108, v113);
    swift_release(v110);

    swift_release(v108);
    return ((uint64_t (*)(char *, uint64_t))v126)(v132, v107);
  }

uint64_t sub_B0470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  void v5[9] = a3;
  v5[7] = a1;
  uint64_t v6 = type metadata accessor for DialogPhase(0LL);
  v5[12] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for OutputGenerationManifest(0LL);
  v5[13] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[14] = v8;
  v5[15] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_B04F8, 0LL, 0LL);
}

uint64_t sub_B04F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void **)(v1 + 80);
  __int128 v16 = *(_OWORD *)(v1 + 64);
  static DialogPhase.confirmation.getter(a1);
  uint64_t v5 = swift_task_alloc(48LL);
  *(_OWORD *)(v5 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v5 + 32) = v4;
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_B2DAC, v5);
  swift_task_dealloc(v5);
  uint64_t v6 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  *(void *)(v1 + 12sub_6C3C(v0 + 8) = ResponseFactory.init()();
  uint64_t v7 = type metadata accessor for SiriAudioSnippets(0LL);
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 4sub_6C3C(v0 + 8) = sub_10430( (unint64_t *)&qword_286CA0,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v8 = sub_10974((void *)(v1 + 16));
  uint64_t v9 = type metadata accessor for SiriAudioConfirmationSnippetModel(0LL);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL))(v8, v3, v9);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v7 - 8) + 104LL))( v8,  enum case for SiriAudioSnippets.confirmation(_:),  v7);
  uint64_t v10 = sub_6C5C(&qword_287980);
  uint64_t v11 = swift_allocObject(v10, 40LL, 7LL);
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v11 + 32) = v4;
  uint64_t v17 = v11;
  specialized Array._endMutation()(v11);
  *(void *)(v1 + 136) = v17;
  id v13 = v4;
  uint64_t v14 = (void *)swift_task_alloc(v12);
  *(void *)(v1 + 144) = v14;
  *uint64_t v14 = v1;
  v14[1] = sub_B06BC;
  return ((uint64_t (*)(void, uint64_t, uint64_t, void))v16)( *(void *)(v1 + 56),  v1 + 16,  v17,  *(void *)(v1 + 120));
}

uint64_t sub_B06BC()
{
  uint64_t v1 = (void *)(*(void *)v0 + 16LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 136LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 128LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 144LL));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_6C3C(v1);
  return swift_task_switch(sub_B0738, 0LL, 0LL);
}

uint64_t sub_B0738()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 112) + 8LL))(v1, *(void *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B0788(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0LL, 1LL, v12);
  uint64_t v14 = OutputGenerationManifest.nlContextUpdate.setter(v11);
  uint64_t v15 = SiriEnvironment.currentRequest.getter(v14);
  CurrentRequest.responseMode.getter(v15);
  swift_release(v15);
  OutputGenerationManifest.responseMode.setter(v8);
  id v16 = [a4 catId];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v19 = v18;

  OutputGenerationManifest.responseViewId.setter(v17, v19);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  return OutputGenerationManifest.canUseServerTTS.setter(1LL);
}

uint64_t sub_B08F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject(&unk_26DC38, 32LL, 7LL);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain(a3);
  sub_1F1BAC(a1, (uint64_t)sub_B25CC, v6);
  return swift_release(v6);
}

uint64_t sub_B0968(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v44 = a3;
  os_log_type_t v45 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v43 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v18, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    uint64_t v19 = *v18;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v20 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v21 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v6, v20, v4);
    swift_errorRetain(v19);
    uint64_t v22 = swift_errorRetain(v19);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v26 = swift_slowAlloc(32LL, -1LL);
      uint64_t v46 = v19;
      uint64_t v47 = v26;
      *(_DWORD *)uint64_t v25 = 136446210;
      uint64_t v42 = v25 + 4;
      swift_errorRetain(v19);
      uint64_t v27 = sub_6C5C(&qword_284010);
      uint64_t v28 = String.init<A>(describing:)(&v46, v27);
      unint64_t v30 = v29;
      uint64_t v46 = sub_6978(v28, v29, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(v19);
      swift_errorRelease(v19);
      _os_log_impl( &dword_0,  v23,  v24,  "TCCAcceptanceFlowStrategy#continueOnCompanionDialog error generating dialog: %{public}s",  v25,  0xCu);
      swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
    }

    else
    {
      swift_errorRelease(v19);
      swift_errorRelease(v19);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
    }

    uint64_t v39 = v45;
    uint64_t v40 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL))(v9, 1LL, 1LL, v40);
    v39(v9);
    swift_errorRelease(v19);
    uint64_t v37 = (uint64_t *)&unk_286BD0;
    uint64_t v38 = (uint64_t)v9;
  }

  else
  {
    uint64_t v31 = *(int *)(v10 + 48);
    uint64_t v32 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(void (**)(char *, uint64_t *, uint64_t))(v33 + 32);
    v34(v15, v18, v32);
    uint64_t v35 = *(uint64_t *)((char *)v18 + v31);
    *(void *)&v15[v31] = v35;
    uint64_t v36 = *(int *)(v10 + 48);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v13, v15, v32);
    *(void *)&v13[v36] = v35;
    v34(v9, (uint64_t *)v13, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v9, 0LL, 1LL, v32);
    v45(v9);
    sub_1F6CC((uint64_t)v9, (uint64_t *)&unk_286BD0);
    uint64_t v37 = &qword_289340;
    uint64_t v38 = (uint64_t)v15;
  }

  return sub_1F6CC(v38, v37);
}

uint64_t sub_B0D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(*(void *)v4 + 80LL);
  uint64_t v10 = *(void *)(*(void *)v4 + 88LL);
  uint64_t v11 = type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, v9, v10, a4);
  uint64_t v12 = swift_allocBox(v11);
  sub_ABCE4(v9, v10, v13);
  uint64_t v14 = *(void *)(v5 + 64);
  uint64_t v15 = sub_6C5C(&qword_286B90);
  uint64_t v16 = swift_allocObject(v15, 64LL, 7LL);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  uint64_t v17 = (void *)swift_allocObject(&unk_26DB20, 40LL, 7LL);
  void v17[2] = v5;
  v17[3] = a1;
  v17[4] = v12;
  *(void *)(v16 + 32) = sub_B249C;
  *(void *)(v16 + 40) = v17;
  uint64_t v18 = (void *)swift_allocObject(&unk_26DB48, 40LL, 7LL);
  v18[2] = v5;
  v18[3] = a1;
  void v18[4] = v12;
  *(void *)(v16 + 4sub_6C3C(v0 + 8) = sub_B24E0;
  *(void *)(v16 + 56) = v18;
  uint64_t v19 = (void *)swift_allocObject(&unk_26DB70, 56LL, 7LL);
  v19[2] = v9;
  v19[3] = v10;
  v19[4] = a2;
  v19[5] = a3;
  v19[6] = v12;
  swift_retain_n(v12, 3LL);
  swift_retain_n(v5, 2LL);
  swift_retain_n(a1, 2LL);
  swift_retain(a3);
  static Tasks.parallelize(queue:tasks:completion:)(v14, v16, sub_B24F0, v19);
  swift_release(v12);
  swift_bridgeObjectRelease(v16);
  return swift_release(v19);
}

uint64_t sub_B0EEC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = swift_allocObject(&unk_26DBE8, 32LL, 7LL);
  *(void *)(v9 + swift_weakDestroy(v0 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = (void *)swift_allocObject(&unk_26DC10, 56LL, 7LL);
  v10[2] = *(void *)(v6 + 80);
  v10[3] = *(void *)(v6 + 88);
  v10[4] = sub_64F88;
  v10[5] = v9;
  v10[6] = a4;
  swift_retain(v8);
  swift_retain(a4);
  sub_1F18EC(a3, (uint64_t)sub_B25AC, (uint64_t)v10);
  return swift_release(v10);
}

uint64_t sub_B0FAC( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v111 = a3;
  id v112 = a2;
  uint64_t v108 = (char *)a1;
  uint64_t v110 = type metadata accessor for Logger(0LL);
  uint64_t v113 = *(void *)(v110 - 8);
  uint64_t v9 = __chkstk_darwin(v110);
  uint64_t v106 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v105 = (char *)&v99 - v11;
  uint64_t v102 = type metadata accessor for TemplatingText(0LL);
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v100 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_286B98);
  __chkstk_darwin(v13);
  uint64_t v104 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v103 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v99 - v22;
  uint64_t v24 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v28 = type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, a5, a6, v27);
  uint64_t v107 = a4;
  uint64_t v29 = swift_projectBox(a4);
  sub_FF10((uint64_t)v108, (uint64_t)v26, (uint64_t *)&unk_286BB0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26, v24);
  uint64_t v114 = v28;
  uint64_t v109 = v29;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v31 = *v26;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = v110;
    uint64_t v33 = sub_6960(v110, (uint64_t)qword_2969C8);
    uint64_t v34 = v113;
    uint64_t v35 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v106, v33, v32);
    swift_errorRetain(v31);
    uint64_t v36 = swift_errorRetain(v31);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      v119[0] = v40;
      *(_DWORD *)uint64_t v39 = 136446210;
      uint64_t v117 = v31;
      swift_errorRetain(v31);
      uint64_t v41 = sub_6C5C(&qword_284010);
      uint64_t v42 = String.init<A>(describing:)(&v117, v41);
      unint64_t v44 = v43;
      uint64_t v117 = sub_6978(v42, v43, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118);
      swift_bridgeObjectRelease(v44);
      swift_errorRelease(v31);
      swift_errorRelease(v31);
      _os_log_impl( &dword_0,  v37,  v38,  "TCCAcceptanceFlowStrategy#confirmDialogContent error generating dialog: %{public}s",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v113 + 8))(v106, v32);
    }

    else
    {
      swift_errorRelease(v31);
      swift_errorRelease(v31);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v32);
    }

    uint64_t v66 = v114;
    uint64_t v67 = v109;
    swift_beginAccess(v109, v119, 1LL, 0LL);
    uint64_t v68 = *(int *)(v66 + 48);
    uint64_t v69 = *(void *)(v67 + v68);
    *(void *)(v67 + v6sub_6C3C(v0 + 8) = v31;
    uint64_t v70 = swift_errorRelease(v69);
  }

  else
  {
    uint64_t v45 = *(int *)(v18 + 48);
    uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v47 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v46 - 8) + 32LL);
    uint64_t v48 = (uint64_t)v17;
    uint64_t v106 = *(char **)(v46 - 8);
    uint64_t v49 = v106;
    v47(v23, v26, v46);
    uint64_t v50 = *(void **)((char *)v26 + v45);
    *(void *)&v23[v45] = v50;
    uint64_t v51 = *(int *)(v18 + 48);
    uint64_t v52 = (void (*)(uint64_t, char *, uint64_t))*((void *)v49 + 2);
    v52(v48, v23, v46);
    *(void *)(v48 + v51) = v50;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v48, 0LL, 1LL, v18);
    swift_beginAccess(v29, v119, 1LL, 0LL);
    uint64_t v53 = v29 + *(int *)(v114 + 36);
    id v54 = v50;
    sub_B2510(v48, v53);
    uint64_t v55 = *(int *)(v18 + 48);
    uint64_t v108 = v23;
    v52((uint64_t)v21, v23, v46);

    *(void *)&v21[v55] = v54;
    uint64_t v57 = TemplatingResult.sections.getter(v56);
    (*((void (**)(char *, uint64_t))v106 + 1))(v21, v46);
    uint64_t v58 = *(void *)(v57 + 16);
    uint64_t v59 = type metadata accessor for TemplatingSection(0LL);
    uint64_t v60 = *(void *)(v59 - 8);
    if (v58)
    {
      uint64_t v61 = (uint64_t)v104;
      (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))( v104,  v57 + ((*(unsigned __int8 *)(v60 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80)),  v59);
      uint64_t v62 = 0LL;
      uint64_t v63 = v110;
      uint64_t v64 = v113;
      os_log_type_t v65 = v105;
    }

    else
    {
      uint64_t v63 = v110;
      uint64_t v64 = v113;
      os_log_type_t v65 = v105;
      uint64_t v61 = (uint64_t)v104;
      uint64_t v62 = 1LL;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, v62, 1LL, v59);
    swift_bridgeObjectRelease(v57);
    int v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v61, 1LL, v59);
    uint64_t v72 = v114;
    if (v71 == 1)
    {
      sub_1F6CC(v61, &qword_286B98);
      uint64_t v73 = 0LL;
      unint64_t v74 = 0xE000000000000000LL;
    }

    else
    {
      uint64_t v75 = v100;
      TemplatingSection.content.getter();
      uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v61, v59);
      uint64_t v73 = TemplatingText.text.getter(v76);
      unint64_t v74 = v77;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v75, v102);
    }

    uint64_t v78 = v109;
    swift_beginAccess(v109, &v117, 1LL, 0LL);
    id v79 = (uint64_t *)(v78 + *(int *)(v72 + 44));
    uint64_t v80 = v79[1];
    *id v79 = v73;
    v79[1] = v74;
    swift_bridgeObjectRelease(v80);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v81 = sub_6960(v63, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v65, v81, v63);
    uint64_t v82 = v107;
    uint64_t v83 = swift_retain_n(v107, 2LL);
    BOOL v84 = (os_log_s *)Logger.logObject.getter(v83);
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v87 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v86 = 138412290;
      swift_beginAccess(v78, v116, 0LL, 0LL);
      uint64_t v88 = (uint64_t *)(v78 + *(int *)(v72 + 44));
      uint64_t v89 = v88[1];
      if (v89)
      {
        uint64_t v90 = *v88;
        unint64_t v91 = sub_6C9C();
        uint64_t v92 = swift_allocError(&type metadata for String, v91, 0LL, 0LL);
        void *v93 = v90;
        v93[1] = v89;
        swift_bridgeObjectRetain(v89);
        uint64_t v94 = v92;
        uint64_t v64 = v113;
        uint64_t v89 = _swift_stdlib_bridgeErrorToNSError(v94);
        uint64_t v115 = v89;
      }

      else
      {
        uint64_t v115 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, v116);
      uint64_t v96 = v107;
      uint64_t v95 = (uint64_t)v108;
      *uint64_t v87 = v89;
      swift_release_n(v96, 2LL);
      _os_log_impl( &dword_0,  v84,  v85,  "TCCAcceptanceFlowStrategy#confirmDialogContent text for confirmation subtitle: %@",  v86,  0xCu);
      uint64_t v97 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v87, 1LL, v97);
      swift_slowDealloc(v87, -1LL, -1LL);
      swift_slowDealloc(v86, -1LL, -1LL);
    }

    else
    {
      swift_release_n(v82, 2LL);
      uint64_t v95 = (uint64_t)v108;
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v63);
    uint64_t v70 = sub_1F6CC(v95, &qword_289340);
  }

  return v112(v70);
}

uint64_t sub_B184C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = swift_allocObject(&unk_26DB98, 32LL, 7LL);
  *(void *)(v9 + swift_weakDestroy(v0 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = (void *)swift_allocObject(&unk_26DBC0, 56LL, 7LL);
  v10[2] = *(void *)(v6 + 80);
  v10[3] = *(void *)(v6 + 88);
  v10[4] = sub_1646C;
  v10[5] = v9;
  v10[6] = a4;
  swift_retain(v8);
  swift_retain(a4);
  sub_1F1AB8(a3, (uint64_t)sub_B2504, (uint64_t)v10);
  return swift_release(v10);
}

uint64_t sub_B190C( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v104 = a3;
  uint64_t v105 = a2;
  uint64_t v102 = (char *)a1;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v106 = *(void *)(v9 - 8);
  uint64_t v107 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v101 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v100 = (char *)&v94 - v12;
  uint64_t v96 = type metadata accessor for TemplatingText(0LL);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_286B98);
  __chkstk_darwin(v14);
  uint64_t v98 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BA0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_289340);
  uint64_t v97 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v94 - v23;
  uint64_t v25 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v103 = type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, a5, a6, v28);
  uint64_t v99 = a4;
  uint64_t v29 = swift_projectBox(a4);
  sub_FF10((uint64_t)v102, (uint64_t)v27, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v27, v25) == 1)
  {
    uint64_t v102 = (char *)v29;
    uint64_t v30 = *v27;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v31 = v107;
    uint64_t v32 = sub_6960(v107, (uint64_t)qword_2969C8);
    uint64_t v33 = v106;
    uint64_t v34 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v101, v32, v31);
    swift_errorRetain(v30);
    uint64_t v35 = swift_errorRetain(v30);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      os_log_type_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      v112[0] = v39;
      *(_DWORD *)os_log_type_t v38 = 136446210;
      uint64_t v110 = v30;
      swift_errorRetain(v30);
      uint64_t v40 = sub_6C5C(&qword_284010);
      uint64_t v41 = String.init<A>(describing:)(&v110, v40);
      unint64_t v43 = v42;
      uint64_t v110 = sub_6978(v41, v42, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
      swift_bridgeObjectRelease(v43);
      swift_errorRelease(v30);
      swift_errorRelease(v30);
      _os_log_impl( &dword_0,  v36,  v37,  "TCCAcceptanceFlowStrategy#confirmDialogContent error generating dialog: %{public}s",  v38,  0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v106 + 8))(v101, v31);
    }

    else
    {
      swift_errorRelease(v30);
      swift_errorRelease(v30);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v31);
    }

    uint64_t v65 = (uint64_t)v102;
    uint64_t v64 = v103;
    swift_beginAccess(v102, v112, 1LL, 0LL);
    uint64_t v66 = *(int *)(v64 + 48);
    uint64_t v67 = *(void *)(v65 + v66);
    *(void *)(v65 + v66) = v30;
    uint64_t v68 = swift_errorRelease(v67);
  }

  else
  {
    uint64_t v44 = *(int *)(v19 + 48);
    uint64_t v45 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v46 = *(void *)(v45 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v46 + 32))(v24, v27, v45);
    uint64_t v47 = *(void **)((char *)v27 + v44);
    *(void *)&v24[v44] = v47;
    uint64_t v48 = *(int *)(v19 + 48);
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v49(v18, v24, v45);
    *(void *)&v18[v48] = v47;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v18, 0LL, 1LL, v19);
    swift_beginAccess(v29, v112, 1LL, 0LL);
    id v50 = v47;
    uint64_t v51 = v29;
    sub_B2510((uint64_t)v18, v29);
    uint64_t v52 = *(int *)(v19 + 48);
    uint64_t v102 = v24;
    v49(v22, v24, v45);

    *(void *)&v22[v52] = v50;
    uint64_t v54 = TemplatingResult.sections.getter(v53);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v45);
    uint64_t v55 = *(void *)(v54 + 16);
    uint64_t v56 = type metadata accessor for TemplatingSection(0LL);
    uint64_t v57 = *(void *)(v56 - 8);
    if (v55)
    {
      uint64_t v58 = (uint64_t)v98;
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))( v98,  v54 + ((*(unsigned __int8 *)(v57 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)),  v56);
      uint64_t v59 = 0LL;
      uint64_t v61 = v106;
      uint64_t v60 = v107;
      uint64_t v62 = v100;
      uint64_t v63 = v103;
    }

    else
    {
      uint64_t v61 = v106;
      uint64_t v60 = v107;
      uint64_t v62 = v100;
      uint64_t v63 = v103;
      uint64_t v58 = (uint64_t)v98;
      uint64_t v59 = 1LL;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v58, v59, 1LL, v56);
    swift_bridgeObjectRelease(v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v58, 1LL, v56) == 1)
    {
      sub_1F6CC(v58, &qword_286B98);
      uint64_t v69 = 0LL;
      unint64_t v70 = 0xE000000000000000LL;
    }

    else
    {
      int v71 = v94;
      TemplatingSection.content.getter();
      uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v58, v56);
      uint64_t v69 = TemplatingText.text.getter(v72);
      unint64_t v70 = v73;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v71, v96);
    }

    uint64_t v74 = v51;
    swift_beginAccess(v51, &v110, 1LL, 0LL);
    uint64_t v75 = (uint64_t *)(v51 + *(int *)(v63 + 40));
    uint64_t v76 = v75[1];
    *uint64_t v75 = v69;
    v75[1] = v70;
    swift_bridgeObjectRelease(v76);
    uint64_t v77 = v99;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v78 = sub_6960(v60, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v62, v78, v60);
    uint64_t v79 = swift_retain_n(v77, 2LL);
    uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
    os_log_type_t v81 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v83 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v82 = 138412290;
      swift_beginAccess(v74, v109, 0LL, 0LL);
      BOOL v84 = (uint64_t *)(v74 + *(int *)(v63 + 40));
      uint64_t v85 = v84[1];
      if (v85)
      {
        uint64_t v86 = *v84;
        unint64_t v87 = sub_6C9C();
        uint64_t v88 = swift_allocError(&type metadata for String, v87, 0LL, 0LL);
        *uint64_t v89 = v86;
        v89[1] = v85;
        swift_bridgeObjectRetain(v85);
        uint64_t v90 = v88;
        uint64_t v61 = v106;
        uint64_t v85 = _swift_stdlib_bridgeErrorToNSError(v90);
        uint64_t v108 = v85;
      }

      else
      {
        uint64_t v108 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
      uint64_t v91 = (uint64_t)v102;
      *uint64_t v83 = v85;
      swift_release_n(v77, 2LL);
      _os_log_impl( &dword_0,  v80,  v81,  "TCCAcceptanceFlowStrategy#confirmDialogContent text for confirmation title: %@",  v82,  0xCu);
      uint64_t v92 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v83, 1LL, v92);
      swift_slowDealloc(v83, -1LL, -1LL);
      swift_slowDealloc(v82, -1LL, -1LL);
    }

    else
    {
      swift_release_n(v77, 2LL);
      uint64_t v91 = (uint64_t)v102;
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v107);
    uint64_t v68 = sub_1F6CC(v91, &qword_289340);
  }

  return v105(v68);
}

uint64_t sub_B2178(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse(0LL, a4, a5, a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v14[-v9 - 8];
  uint64_t v11 = swift_projectBox(a3);
  swift_beginAccess(v11, v14, 0LL, 0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  a1(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_B2238()
{
  sub_6C3C((void *)(v0 + 72));
  sub_6C3C((void *)(v0 + 112));
  sub_6C3C((void *)(v0 + 152));
  sub_6C3C((void *)(v0 + 192));
  return v0;
}

uint64_t sub_B2284()
{
  return swift_deallocClassInstance(v0, 232LL, 7LL);
}

uint64_t type metadata accessor for TCCAcceptanceFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TCCAcceptanceFlowStrategy);
}

uint64_t sub_B22B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_ABD90(a1, a2);
}

uint64_t sub_B22C4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  return sub_AC5B8(a1, a2, a3);
}

uint64_t sub_B22E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_B2488(a1, a3, a4);
}

void sub_B230C(uint64_t a1, void *a2, void (*a3)(void *), uint64_t a4)
{
}

uint64_t sub_B232C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_B235C( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&RequestTCCAcceptanceFlowStrategy.makeRepromptOnEmptyParse(app:intent:_:));
}

uint64_t sub_B2338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_B235C( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&RequestTCCAcceptanceFlowStrategy.makeRepromptOnLowConfidence(app:intent:_:));
}

uint64_t sub_B2344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_B235C( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&RequestTCCAcceptanceFlowStrategy.makePromptForDeviceUnlock(app:intent:_:));
}

uint64_t sub_B2350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_B235C( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&RequestTCCAcceptanceFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:_:));
}

uint64_t sub_B235C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = type metadata accessor for TCCAcceptanceFlowStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), a4);
  return a7(a1, a2, a3, a4, v12, a6);
}

uint64_t sub_B23CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_AD860(a1, a2, a3, a4);
}

uint64_t sub_B23EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for TCCAcceptanceFlowStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), a4);
  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_B245C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2167A0, a1);
}

uint64_t sub_B246C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2167D0, a1);
}

void *sub_B247C()
{
  return &protocol witness table for SimpleConfirmationResponseProvider;
}

uint64_t type metadata accessor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for TCCAcceptanceFlowStrategy.ConfirmationDialogResponse);
}

uint64_t sub_B249C(uint64_t *a1)
{
  return sub_B0EEC(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_B24AC()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_B24E0(uint64_t *a1)
{
  return sub_B184C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_B24F0()
{
  return sub_B2178( *(void (**)(char *))(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 16),  *(void *)(v0 + 24));
}

uint64_t sub_B2504(uint64_t a1)
{
  return sub_B25B8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_B190C);
}

uint64_t sub_B2510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_B2558()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_B2580()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_B25AC(uint64_t a1)
{
  return sub_B25B8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_B0FAC);
}

uint64_t sub_B25B8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_B25CC(uint64_t a1)
{
  return sub_B0968(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_B25D4()
{
  unint64_t result = qword_286C48;
  if (!qword_286C48)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAUIConfirmationOption);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_286C48);
  }

  return result;
}

uint64_t sub_B2610()
{
  uint64_t v1 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 40));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_B268C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for NLContextUpdate(0LL) - 8) + 80LL);
  return sub_AF364( a1,  *(void (**)(__int128 *))(v1 + 32),  *(void *)(v1 + 40),  *(void **)(v1 + 48),  v1 + ((v5 + 56) & ~v5),  v3,  v4);
}

unint64_t sub_B26E4()
{
  unint64_t result = qword_286C80;
  if (!qword_286C80)
  {
    unint64_t result = swift_getWitnessTable(&unk_217C38, &type metadata for ConfirmationPromptCreationError);
    atomic_store(result, &qword_286C80);
  }

  return result;
}

uint64_t sub_B2728( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v54 = a5;
  uint64_t v52 = a4;
  uint64_t v53 = a3;
  uint64_t v51 = a2;
  uint64_t v56 = a1;
  uint64_t v49 = *v7;
  uint64_t v57 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v55 = *(void *)(v57 - 8);
  uint64_t v10 = *(void *)(v55 + 64);
  uint64_t v11 = __chkstk_darwin(v57);
  id v50 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = a7;
    uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_0, v20, v21, "TCCAcceptanceFlowStrategy#createConfirmationViewOutputWithRF...", v23, 2u);
    uint64_t v24 = v23;
    a7 = v22;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v68 = 0LL;
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  __int128 v65 = 0u;
  char v69 = 2;
  id v25 = sub_1CBA90();
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v60 = 1LL;
    __int128 v61 = 0u;
    __int128 v62 = 0u;
    __int128 v63 = 0u;
    char v64 = 2;
    id v27 = sub_1CBA90();
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = a7;
      uint64_t v30 = *(void *)(v49 + 80);
      uint64_t v31 = *(void *)(v49 + 88);
      uint64_t v32 = v13;
      uint64_t v48 = v13;
      sub_95F14();
      uint64_t v33 = v55;
      uint64_t v34 = v50;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v50, v32, v57);
      uint64_t v35 = *(unsigned __int8 *)(v33 + 80);
      uint64_t v36 = (v35 + 96) & ~v35;
      os_log_type_t v37 = (void *)swift_allocObject(&unk_26DC88, v36 + v10, v35 | 7);
      v37[2] = v30;
      v37[3] = v31;
      v37[4] = a6;
      v37[5] = v29;
      uint64_t v38 = v53;
      v37[6] = v51;
      v37[7] = v38;
      uint64_t v39 = v54;
      v37[8] = v52;
      v37[9] = v39;
      v37[10] = v26;
      v37[11] = v28;
      uint64_t v40 = (char *)v37 + v36;
      uint64_t v41 = v57;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v40, v34, v57);
      swift_retain(v29);
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v39);
      id v42 = v26;
      id v43 = v28;
      sub_B0D7C(v56, (uint64_t)sub_B2B90, (uint64_t)v37, v44);

      swift_release(v37);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v48, v41);
    }
  }

  unint64_t v46 = sub_B26E4();
  v58[0] = swift_allocError(&type metadata for ConfirmationPromptCreationError, v46, 0LL, 0LL);
  char v59 = 1;
  a6(v58);
  return sub_1F6CC((uint64_t)v58, (uint64_t *)&unk_286C60);
}

uint64_t sub_B2AFC()
{
  uint64_t v1 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  swift_bridgeObjectRelease(*(void *)(v0 + 72));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_B2B90(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for NLContextUpdate(0LL) - 8) + 80LL);
  return sub_AFABC( a1,  *(void (**)(uint64_t *))(v1 + 32),  *(void *)(v1 + 40),  *(void (**)(char *, id, uint64_t))(v1 + 48),  *(void (**)(void, void))(v1 + 56),  *(void (**)(char *, char *, uint64_t))(v1 + 64),  *(char **)(v1 + 72),  *(void **)(v1 + 80),  *(void **)(v1 + 88),  v1 + ((v5 + 96) & ~v5),  v3,  v4);
}

uint64_t sub_B2BFC()
{
  uint64_t v1 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = type metadata accessor for SiriAudioConfirmationSnippetModel(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 + v6 + 8) & ~v9;
  uint64_t v13 = v10 + *(void *)(v8 + 64);
  uint64_t v11 = v3 | v9 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v5));

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);
  return swift_deallocObject(v0, v13, v11);
}

uint64_t sub_B2CE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NLContextUpdate(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SiriAudioConfirmationSnippetModel(0LL) - 8) + 80LL);
  uint64_t v9 = v8 + v7 + 8;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = v1 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc(dword_286C8C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_11C64;
  return sub_B0470(a1, v11, v10, v12, v13);
}

uint64_t sub_B2DAC(uint64_t a1)
{
  return sub_B0788(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_B2DB8()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_B2DF4(uint64_t a1)
{
  return sub_ADA34( a1,  *(void (**)(uint64_t *))(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void **)(v1 + 48));
}

uint64_t sub_B2E04()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_B2E30(uint64_t a1)
{
  return sub_AD400(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_B2E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40LL);
}

void sub_B2E44(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    v4[2] = &unk_2168B0;
    v4[3] = &unk_2168B0;
    void v4[4] = &unk_2168C8;
    swift_initStructMetadata(a1, 0LL, 5LL, v4, a1 + 32);
  }

uint64_t *sub_B2EC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = sub_6C5C(&qword_289340);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1LL, v7))
    {
      uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BA0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      uint64_t v12 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16LL))(a1, a2, v12);
      uint64_t v13 = *(int *)(v7 + 48);
      uint64_t v14 = *(void **)((char *)a2 + v13);
      *(uint64_t *)((char *)a1 + v1sub_6C3C(v0 + 3) = (uint64_t)v14;
      uint64_t v15 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      id v16 = v14;
      v15(a1, 0LL, 1LL, v7);
    }

    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v9((uint64_t *)((char *)a2 + v17), 1LL, v7))
    {
      uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BA0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      uint64_t v21 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16LL))(v18, v19, v21);
      uint64_t v22 = *(int *)(v7 + 48);
      uint64_t v23 = *(void **)&v19[v22];
      *(void *)&v18[v22] = v23;
      uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
      id v25 = v23;
      v24(v18, 0LL, 1LL, v7);
    }

    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    uint64_t v28 = (uint64_t *)((char *)a1 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (uint64_t *)((char *)a1 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = a3[12];
    uint64_t v35 = *(uint64_t *)((char *)a2 + v34);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v33);
    swift_errorRetain(v35);
    *(uint64_t *)((char *)a1 + v34) = v35;
  }

  return a1;
}

uint64_t sub_B3098(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_6C5C(&qword_289340);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL);
  if (!v5(a1, 1LL, v4))
  {
    uint64_t v6 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
  }

  uint64_t v7 = a1 + a2[9];
  if (!v5(v7, 1LL, v4))
  {
    uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  }

  swift_bridgeObjectRelease(*(void *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(void *)(a1 + a2[11] + 8));
  return swift_errorRelease(*(void *)(a1 + a2[12]));
}

char *sub_B3188(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    uint64_t v10 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(a1, a2, v10);
    uint64_t v11 = *(int *)(v6 + 48);
    uint64_t v12 = *(void **)&a2[v11];
    *(void *)&a1[v11] = v12;
    uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    id v14 = v12;
    v13(a1, 0LL, 1LL, v6);
  }

  uint64_t v15 = a3[9];
  id v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v8(&a2[v15], 1LL, v6))
  {
    uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    uint64_t v19 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v16, v17, v19);
    uint64_t v20 = *(int *)(v6 + 48);
    uint64_t v21 = *(void **)&v17[v20];
    *(void *)&v16[v20] = v21;
    uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    id v23 = v21;
    v22(v16, 0LL, 1LL, v6);
  }

  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = &a1[v25];
  uint64_t v30 = &a2[v25];
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  uint64_t v32 = a3[12];
  uint64_t v33 = *(void *)&a2[v32];
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v31);
  swift_errorRetain(v33);
  *(void *)&a1[v32] = v33;
  return a1;
}

char *sub_B3330(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(a1, a2, v11);
      uint64_t v12 = *(int *)(v6 + 48);
      uint64_t v13 = *(void **)&a2[v12];
      *(void *)&a1[v12] = v13;
      id v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
      id v15 = v13;
      v14(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    sub_1F6CC((uint64_t)a1, &qword_289340);
LABEL_6:
    uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  uint64_t v42 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24LL))(a1, a2, v42);
  uint64_t v43 = *(int *)(v6 + 48);
  uint64_t v44 = *(void **)&a2[v43];
  uint64_t v45 = *(void **)&a1[v43];
  *(void *)&a1[v43] = v44;
  id v46 = v44;

LABEL_7:
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  int v20 = v8(&a1[v17], 1LL, v6);
  int v21 = v8(v19, 1LL, v6);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v47 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24LL))(v18, v19, v47);
      uint64_t v48 = *(int *)(v6 + 48);
      uint64_t v49 = *(void **)&v19[v48];
      id v50 = *(void **)&v18[v48];
      *(void *)&v18[v48] = v49;
      id v51 = v49;

      goto LABEL_13;
    }

    sub_1F6CC((uint64_t)v18, &qword_289340);
    goto LABEL_12;
  }

  if (v21)
  {
LABEL_12:
    uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64LL));
    goto LABEL_13;
  }

  uint64_t v22 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v18, v19, v22);
  uint64_t v23 = *(int *)(v6 + 48);
  uint64_t v24 = *(void **)&v19[v23];
  *(void *)&v18[v23] = v24;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  id v26 = v24;
  v25(v18, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v28 = a3[10];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  uint64_t v32 = *((void *)v29 + 1);
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  uint64_t v33 = a3[11];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  uint64_t v37 = *((void *)v34 + 1);
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  uint64_t v38 = a3[12];
  uint64_t v39 = *(void *)&a1[v38];
  uint64_t v40 = *(void *)&a2[v38];
  swift_errorRetain(v40);
  *(void *)&a1[v38] = v40;
  swift_errorRelease(v39);
  return a1;
}

char *sub_B35E4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    uint64_t v10 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(a1, a2, v10);
    *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v11 = a3[9];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v8(&a2[v11], 1LL, v6))
  {
    uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32LL))(v12, v13, v15);
    *(void *)&v12[*(int *)(v6 + 48)] = *(void *)&v13[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0LL, 1LL, v6);
  }

  uint64_t v16 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  return a1;
}

char *sub_B3760(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(a1, a2, v11);
      *(void *)&a1[*(int *)(v6 + 48)] = *(void *)&a2[*(int *)(v6 + 48)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    sub_1F6CC((uint64_t)a1, &qword_289340);
LABEL_6:
    uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64LL));
    goto LABEL_7;
  }

  uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40LL))(a1, a2, v35);
  uint64_t v36 = *(int *)(v6 + 48);
  uint64_t v37 = *(void **)&a1[v36];
  *(void *)&a1[v36] = *(void *)&a2[v36];

LABEL_7:
  uint64_t v13 = a3[9];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  int v16 = v8(&a1[v13], 1LL, v6);
  int v17 = v8(v15, 1LL, v6);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v38 = type metadata accessor for TemplatingResult(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40LL))(v14, v15, v38);
      uint64_t v39 = *(int *)(v6 + 48);
      uint64_t v40 = *(void **)&v14[v39];
      *(void *)&v14[v39] = *(void *)&v15[v39];

      goto LABEL_13;
    }

    sub_1F6CC((uint64_t)v14, &qword_289340);
    goto LABEL_12;
  }

  if (v17)
  {
LABEL_12:
    uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BA0);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64LL));
    goto LABEL_13;
  }

  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v14, v15, v18);
  *(void *)&v14[*(int *)(v6 + 48)] = *(void *)&v15[*(int *)(v6 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0LL, 1LL, v6);
LABEL_13:
  uint64_t v20 = a3[10];
  int v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  uint64_t v25 = *((void *)v21 + 1);
  *(void *)int v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease(v25);
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  uint64_t v31 = *((void *)v27 + 1);
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease(v31);
  uint64_t v32 = a3[12];
  uint64_t v33 = *(void *)&a1[v32];
  *(void *)&a1[v32] = *(void *)&a2[v32];
  swift_errorRelease(v33);
  return a1;
}

uint64_t sub_B39D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_B39E4);
}

uint64_t sub_B39E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286BA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 40) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_B3A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_B3A80);
}

uint64_t sub_B3A80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_6C5C((uint64_t *)&unk_286BA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 40) + sub_6C3C(v0 + 8) = a2;
  return result;
}

void sub_B3B00(uint64_t a1)
{
  if (!qword_286D60)
  {
    uint64_t v2 = sub_45D50(&qword_289340);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_286D60);
    }
  }

void sub_B3B64(unint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v18 = [a4 code];
  uint64_t v74 = a5;
  if ((id)_INAddMediaIntentResponseCodeFailureAlreadyInLibrary != v18)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v28 = a2;
    uint64_t v29 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v29, v14);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = a6;
      uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v31, v32, "AddMediaDialogProvider#makeFailureHandlingIntentDialog", v34, 2u);
      uint64_t v35 = v34;
      a6 = v33;
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v36 = *(void *)(v7 + 120);
    unint64_t v37 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v79 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    uint64_t v80 = (char *)&_s11descr2734E9VMn.NumFields + 3;
    *(void *)&__int128 v78 = a3;
    uint64_t v38 = *(void *)(v36 + 16);
    uint64_t v39 = *(void *)(v36 + 24);
    __chkstk_darwin(v79);
    *(&v73 - 10) = v38;
    *(&v73 - 9) = v39;
    *(&v73 - sub_6C3C(v0 + 8) = 0xD000000000000015LL;
    *(&v73 - sub_6C3C(v0 + 7) = 0x800000000021F440LL;
    uint64_t v67 = v40;
    uint64_t v68 = v37;
    uint64_t v69 = v28;
    unint64_t v70 = &v78;
    int v71 = 0LL;
    id v41 = a3;
    int v71 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    uint64_t v72 = &v73 - 12;
    uint64_t v69 = 0xD000000000000015LL;
    unint64_t v70 = (__int128 *)0x800000000021F440LL;
    uint64_t v67 = v38;
    uint64_t v68 = v39;
    uint64_t v42 = v74;
    uint64_t v43 = a6;
    goto LABEL_27;
  }

  id v19 = [a3 mediaItems];
  if (!v19) {
    goto LABEL_22;
  }
  uint64_t v20 = v19;
  uint64_t v21 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if (!((unint64_t)v22 >> 62))
  {
LABEL_21:
    swift_bridgeObjectRelease(v22);
    goto LABEL_22;
  }

  if (v22 < 0) {
    uint64_t v44 = v22;
  }
  else {
    uint64_t v44 = v22 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v22);
  uint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v44);
  swift_bridgeObjectRelease(v22);
  if (!v45) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v22 & 0xC000000000000001LL) != 0)
  {
    id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v22);
    goto LABEL_8;
  }

  if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v23 = *(id *)(v22 + 32);
LABEL_8:
    uint64_t v24 = v23;
    swift_bridgeObjectRelease(v22);
    uint64_t v25 = (char *)[v24 type];

    if (v25 == (_BYTE *)&dword_0 + 2)
    {
      unint64_t v26 = 0xE500000000000000LL;
      uint64_t v27 = 0x6D75626C61LL;
      goto LABEL_23;
    }

    if (v25 == (_BYTE *)&dword_4 + 2)
    {
      unint64_t v26 = 0xE700000000000000LL;
      uint64_t v27 = 0x74736163646F70LL;
LABEL_23:
      swift_bridgeObjectRetain(a1);
      sub_191F1C();
      uint64_t v77 = &type metadata for String;
      *(void *)&__int128 v76 = v46;
      *((void *)&v76 + 1) = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
      unint64_t v75 = a1;
      sub_1E1E1C(&v76, 0x656C746974LL, 0xE500000000000000LL, isUniquelyReferenced_nonNull_native, &v78);
      unint64_t v49 = v75;
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1F6CC((uint64_t)&v78, &qword_284028);
      uint64_t v77 = &type metadata for String;
      *(void *)&__int128 v76 = v27;
      *((void *)&v76 + 1) = v26;
      char v50 = swift_isUniquelyReferenced_nonNull_native(v49);
      unint64_t v75 = v49;
      sub_1E1E1C(&v76, 0x707954616964656DLL, 0xE900000000000065LL, v50, &v78);
      unint64_t v51 = v75;
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1F6CC((uint64_t)&v78, &qword_284028);
      id v52 = [a3 mediaDestination];
      uint64_t v73 = a6;
      if (v52)
      {
        uint64_t v53 = v52;
        uint64_t v54 = a2;
        uint64_t v55 = (char *)[v52 mediaDestinationType];

        BOOL v56 = v55 == (_BYTE *)&dword_0 + 2;
      }

      else
      {
        uint64_t v54 = a2;
        BOOL v56 = 0;
      }

      uint64_t v77 = &type metadata for Bool;
      LOBYTE(v76) = v56;
      char v57 = swift_isUniquelyReferenced_nonNull_native(v51);
      unint64_t v75 = v51;
      sub_1E1E1C(&v76, 0xD000000000000015LL, 0x800000000021F320LL, v57, &v78);
      unint64_t v58 = v75;
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1F6CC((uint64_t)&v78, &qword_284028);
      id v59 = sub_191F28();
      uint64_t v77 = &type metadata for String;
      *(void *)&__int128 v76 = v59;
      *((void *)&v76 + 1) = v60;
      char v61 = swift_isUniquelyReferenced_nonNull_native(v58);
      unint64_t v75 = v58;
      sub_1E1E1C(&v76, 0x7473696C79616C70LL, 0xED0000656C746954LL, v61, &v78);
      unint64_t v37 = v75;
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1F6CC((uint64_t)&v78, &qword_284028);
      uint64_t v62 = *(void *)(v7 + 120);
      uint64_t v79 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v80 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v78 = a3;
      uint64_t v63 = *(void *)(v62 + 40);
      uint64_t v64 = *(void *)(v62 + 48);
      __chkstk_darwin(v79);
      *(&v73 - 10) = v63;
      *(&v73 - 9) = v64;
      *(&v73 - sub_6C3C(v0 + 8) = 0xD000000000000015LL;
      *(&v73 - sub_6C3C(v0 + 7) = 0x800000000021D820LL;
      uint64_t v67 = v65;
      uint64_t v68 = v37;
      uint64_t v69 = v54;
      unint64_t v70 = &v78;
      int v71 = 0LL;
      id v66 = a3;
      int v71 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
      uint64_t v72 = &v73 - 12;
      uint64_t v69 = 0xD000000000000015LL;
      unint64_t v70 = (__int128 *)0x800000000021D820LL;
      uint64_t v67 = v63;
      uint64_t v68 = v64;
      uint64_t v43 = v73;
      uint64_t v42 = v74;
LABEL_27:
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v42,  v43,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v67,  v68,  v69,  (uint64_t)v70,  v71,  (uint64_t)v72);
      swift_bridgeObjectRelease(v37);
      sub_1F6CC((uint64_t)&v78, &qword_283FE8);
      return;
    }

uint64_t sub_B41C4( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v23 = a8;
  unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  if (a2 == 0x657449616964656DLL && a3 == 0xEA0000000000736DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
  {
    swift_bridgeObjectRelease(v15);
    return sub_B5204(a1, a5, a4, v23, a9);
  }

  else if (a2 == 0xD000000000000010LL && a3 == 0x800000000021C9F0LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000000021C9F0LL) & 1) != 0)
  }
  {
    swift_bridgeObjectRelease(v15);
    return sub_B614C(a1, a5, a4, v23, a9);
  }

  else
  {
    uint64_t v17 = *(void *)(v9 + 120);
    uint64_t v25 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    unint64_t v26 = (char *)&_s11descr2734E9VMn.NumFields + 3;
    v24[0] = a5;
    uint64_t v18 = *(void *)(v17 + 40);
    uint64_t v19 = *(void *)(v17 + 48);
    __chkstk_darwin(v25);
    v22[2] = v18;
    v22[3] = v19;
    v22[4] = 0xD000000000000019LL;
    v22[5] = 0x800000000021D4F0LL;
    v22[6] = v20;
    v22[7] = v15;
    v22[8] = a1;
    v22[9] = v24;
    v22[10] = 0LL;
    id v21 = a5;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v23,  a9,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD000000000000019LL,  0x800000000021D4F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
    swift_bridgeObjectRelease(v15);
    return sub_1F6CC((uint64_t)v24, &qword_283FE8);
  }

uint64_t sub_B4430(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = *(void **)(v5 + 120);
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  v27[3] = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  void v27[4] = (char *)&_s11descr2734E9VMn.NumFields + 3;
  v27[0] = a2;
  uint64_t v12 = v10[4];
  uint64_t v13 = v10[5];
  uint64_t v14 = v10[6];
  uint64_t v18 = v13;
  uint64_t v19 = v14;
  unint64_t v20 = 0xD000000000000018LL;
  unint64_t v21 = 0x800000000021D800LL;
  uint64_t v22 = v12;
  unint64_t v23 = v11;
  uint64_t v24 = a1;
  uint64_t v25 = v27;
  uint64_t v26 = 0LL;
  id v15 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v13,  v14,  0xD000000000000018LL,  0x800000000021D800LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v17);
  swift_bridgeObjectRelease(v11);
  return sub_1F6CC((uint64_t)v27, &qword_283FE8);
}

uint64_t sub_B4554(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v13, v33);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 32) = 0x6574656D61726170LL;
  *(void *)(inited + 40) = 0xE900000000000072LL;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v15 = sub_74D54(inited);
  uint64_t v16 = *(void **)(v6 + 120);
  v32[3] = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  v32[4] = (char *)&_s11descr2734E9VMn.NumFields + 3;
  uint64_t v17 = v16[4];
  uint64_t v18 = v16[5];
  uint64_t v19 = v16[6];
  uint64_t v23 = v18;
  uint64_t v24 = v19;
  unint64_t v25 = 0xD00000000000001ALL;
  unint64_t v26 = 0x800000000021D7C0LL;
  uint64_t v27 = v17;
  unint64_t v28 = v15;
  uint64_t v29 = a1;
  uint64_t v30 = v32;
  uint64_t v31 = 0LL;
  v32[0] = a4;
  id v20 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a5,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD00000000000001ALL,  0x800000000021D7C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v15);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

uint64_t sub_B46D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v41 = a2;
  uint64_t v13 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v13, &v49);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
  *(void *)(inited + 32) = 0xD000000000000010LL;
  *(void *)(inited + 40) = 0x800000000021C9F0LL;
  uint64_t v15 = sub_1920AC();
  id v16 = (id)INMediaDestinationTypeGetName(v15);
  uint64_t v42 = v7;
  uint64_t v43 = a5;
  uint64_t v45 = a6;
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v20 = v19;

    unint64_t v21 = (uint64_t *)(inited + 48);
    *(void *)(inited + 72) = &type metadata for String;
    if (v20)
    {
      *unint64_t v21 = v18;
      goto LABEL_6;
    }
  }

  else
  {
    unint64_t v21 = (uint64_t *)(inited + 48);
    *(void *)(inited + 72) = &type metadata for String;
  }

  *unint64_t v21 = 0LL;
  unint64_t v20 = 0xE000000000000000LL;
LABEL_6:
  *(void *)(inited + 56) = v20;
  *(void *)(inited + 80) = 0xD000000000000015LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x800000000021F320LL;
  id v22 = [a4 mediaDestination];
  uint64_t v44 = a1;
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = (char *)[v22 mediaDestinationType];

    BOOL v25 = v24 == (_BYTE *)&dword_0 + 2;
  }

  else
  {
    BOOL v25 = 0;
  }

  *(_BYTE *)(inited + 96) = v25;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000014LL;
  *(void *)(inited + 136) = 0x800000000021F340LL;
  id v26 = [a4 mediaDestination];
  if (v26)
  {
    uint64_t v27 = v26;
    unint64_t v28 = (char *)[v26 mediaDestinationType];

    BOOL v29 = v28 == (_BYTE *)&dword_0 + 1;
  }

  else
  {
    BOOL v29 = 0;
  }

  uint64_t v30 = v42;
  uint64_t v31 = v43;
  uint64_t v32 = v41;
  *(_BYTE *)(inited + 144) = v29;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0x6574656D61726170LL;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for String;
  *(void *)(inited + 184) = 0xE900000000000072LL;
  *(void *)(inited + 192) = v32;
  *(void *)(inited + 200) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v33 = sub_74D54(inited);
  uint64_t v34 = *(void *)(v30 + 120);
  uint64_t v47 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  uint64_t v48 = (char *)&_s11descr2734E9VMn.NumFields + 3;
  v46[0] = a4;
  uint64_t v35 = *(void *)(v34 + 40);
  uint64_t v36 = *(void *)(v34 + 48);
  __chkstk_darwin(v47);
  v40[2] = v35;
  v40[3] = v36;
  v40[4] = 0xD000000000000012LL;
  v40[5] = 0x800000000021D7E0LL;
  v40[6] = v37;
  v40[7] = v33;
  v40[8] = v44;
  v40[9] = v46;
  v40[10] = 0LL;
  id v38 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v31,  v45,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v35,  v36,  0xD000000000000012LL,  0x800000000021D7E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v40);
  swift_bridgeObjectRelease(v33);
  return sub_1F6CC((uint64_t)v46, &qword_283FE8);
}

void sub_B49F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v84 = a7;
  uint64_t v13 = sub_6C5C(&qword_2845D8);
  uint64_t v14 = __chkstk_darwin(v13);
  id v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v19, v91);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 32) = 7368801LL;
  *(void *)(inited + 40) = 0xE300000000000000LL;
  *(void *)(inited + 72) = type metadata accessor for App(0LL);
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a1;
  swift_retain(a1);
  unint64_t v21 = sub_74D54(inited);
  unint64_t v92 = v21;
  if ((a2 != 0xD000000000000010LL || a3 != 0x800000000021C9F0LL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000000021C9F0LL) & 1) == 0)
  {
    swift_bridgeObjectRelease(v21);
    sub_1090A4(a1, a2, a3, a4, (uint64_t)a5, a6, v84);
    return;
  }

  uint64_t v82 = a6;
  uint64_t v83 = a1;
  id v22 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)(&v86, v22);
  swift_unknownObjectRelease(v22);
  uint64_t v23 = type metadata accessor for INMediaDestination(0LL);
  int v24 = swift_dynamicCast(v18, &v86, (char *)&type metadata for Any + 8, v23, 6LL);
  uint64_t v25 = *(void *)(v23 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v18, v24 ^ 1u, 1LL, v23);
  sub_191F1C();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_192224();
  uint64_t v31 = v30;
  if (v27 == v32 && v29 == v30)
  {
    swift_bridgeObjectRelease(v29);
LABEL_8:
    os_log_type_t v81 = 0LL;
    uint64_t v34 = 0LL;
    goto LABEL_11;
  }

  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29);
  swift_bridgeObjectRelease(v31);
  if ((v33 & 1) != 0) {
    goto LABEL_8;
  }
  sub_192224();
  os_log_type_t v81 = (char *)v35;
  uint64_t v34 = v36;
LABEL_11:
  id v37 = [a5 mediaItems];
  if (!v37) {
    goto LABEL_26;
  }
  id v38 = v37;
  uint64_t v39 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

  if ((unint64_t)v40 >> 62)
  {
    if (v40 < 0) {
      uint64_t v46 = v40;
    }
    else {
      uint64_t v46 = v40 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v40);
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v40);
    if (v47) {
      goto LABEL_14;
    }
LABEL_25:
    swift_bridgeObjectRelease(v40);
    goto LABEL_26;
  }

uint64_t sub_B5204(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v12 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v12);
  id v13 = [a3 unsupportedReason];
  switch((unint64_t)v13)
  {
    case 1uLL:
      uint64_t v14 = *(void *)(v6 + 120);
      unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v125 = &v122;
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v16 = a5;
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v18 = *(void *)(v14 + 24);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v17;
      uint64_t v114 = v18;
      uint64_t v19 = 0xD000000000000022LL;
      uint64_t v20 = 0x800000000021D760LL;
      unint64_t v115 = 0xD000000000000022LL;
      unint64_t v116 = 0x800000000021D760LL;
      uint64_t v117 = v21;
      unint64_t v118 = v15;
      char v119 = (void *)a1;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v22 = a2;
      goto LABEL_20;
    case 2uLL:
      uint64_t v34 = *(void *)(v6 + 120);
      unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v125 = &v122;
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v16 = a5;
      uint64_t v17 = *(void *)(v34 + 16);
      uint64_t v18 = *(void *)(v34 + 24);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v17;
      uint64_t v114 = v18;
      uint64_t v19 = 0xD000000000000029LL;
      uint64_t v20 = 0x800000000021D700LL;
      unint64_t v115 = 0xD000000000000029LL;
      unint64_t v116 = 0x800000000021D700LL;
      uint64_t v117 = v35;
      unint64_t v118 = v15;
      char v119 = (void *)a1;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v36 = a2;
      goto LABEL_20;
    case 3uLL:
      uint64_t v125 = (uint64_t *)a1;
      id v37 = [a2 mediaItems];
      if (!v37) {
        goto LABEL_41;
      }
      id v38 = v37;
      uint64_t v39 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);

      if ((unint64_t)v40 >> 62)
      {
        if (v40 < 0) {
          uint64_t v90 = v40;
        }
        else {
          uint64_t v90 = v40 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v40);
        uint64_t v91 = _CocoaArrayWrapper.endIndex.getter(v90);
        swift_bridgeObjectRelease(v40);
        if (v91) {
          goto LABEL_10;
        }
LABEL_40:
        swift_bridgeObjectRelease(v40);
LABEL_41:
        id v43 = 0LL;
        goto LABEL_42;
      }

LABEL_51:
      uint64_t v101 = sub_6C5C(&qword_2844D0);
      uint64_t inited = swift_initStackObject(v101, &v126);
      *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(inited + 32) = 0x707954616964656DLL;
      *(void *)(inited + 40) = 0xE900000000000065LL;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 4sub_6C3C(v0 + 8) = v94;
      *(void *)(inited + 56) = v96;
      unint64_t v103 = sub_74D54(inited);
      uint64_t v104 = *(void *)(v6 + 120);
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v105 = *(void *)(v104 + 40);
      uint64_t v106 = *(void *)(v104 + 48);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v105;
      uint64_t v114 = v106;
      unint64_t v115 = 0xD000000000000029LL;
      unint64_t v116 = 0x800000000021D6D0LL;
      uint64_t v117 = v107;
      unint64_t v118 = v103;
      char v119 = v125;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v108 = a2;
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  v123,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v105,  v106,  0xD000000000000029LL,  0x800000000021D6D0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v112);
      swift_bridgeObjectRelease(v103);
      return sub_1F6CC((uint64_t)&v128, &qword_283FE8);
    case 4uLL:
      uint64_t v125 = (uint64_t *)a1;
      uint64_t v44 = *(void *)(v6 + 120);
      unint64_t v27 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      id v124 = &v122;
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v45 = *(void *)(v44 + 16);
      uint64_t v46 = *(void *)(v44 + 24);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v45;
      uint64_t v114 = v46;
      unint64_t v115 = 0xD00000000000002CLL;
      unint64_t v116 = 0x800000000021D790LL;
      uint64_t v117 = v47;
      unint64_t v118 = v27;
      char v119 = v125;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v48 = a2;
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v45,  v46,  0xD00000000000002CLL,  0x800000000021D790LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v112);
      goto LABEL_15;
    case 5uLL:
      unint64_t v49 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      id v50 = a2;
      sub_45FD4(v49, a1, (uint64_t)&v128, a4, a5);
      swift_bridgeObjectRelease(v49);
      return sub_1F6CC((uint64_t)&v128, &qword_283FE8);
    case 6uLL:
      uint64_t v51 = *(void *)(v6 + 120);
      unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v125 = &v122;
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v16 = a5;
      uint64_t v17 = *(void *)(v51 + 40);
      uint64_t v18 = *(void *)(v51 + 48);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v17;
      uint64_t v114 = v18;
      uint64_t v19 = 0xD000000000000026LL;
      uint64_t v20 = 0x800000000021D730LL;
      unint64_t v115 = 0xD000000000000026LL;
      unint64_t v116 = 0x800000000021D730LL;
      uint64_t v117 = v52;
      unint64_t v118 = v15;
      char v119 = (void *)a1;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v53 = a2;
      goto LABEL_20;
    case 7uLL:
      uint64_t v54 = *(void *)(v6 + 120);
      unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v125 = &v122;
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v16 = a5;
      uint64_t v17 = *(void *)(v54 + 16);
      uint64_t v18 = *(void *)(v54 + 24);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v17;
      uint64_t v114 = v18;
      uint64_t v19 = 0xD000000000000027LL;
      uint64_t v20 = 0x800000000021D6A0LL;
      unint64_t v115 = 0xD000000000000027LL;
      unint64_t v116 = 0x800000000021D6A0LL;
      uint64_t v117 = v55;
      unint64_t v118 = v15;
      char v119 = (void *)a1;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v56 = a2;
      goto LABEL_20;
    case 8uLL:
      uint64_t v57 = *(void *)(v6 + 120);
      unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v125 = &v122;
      *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
      uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
      *(void *)&__int128 v128 = a2;
      uint64_t v16 = a5;
      uint64_t v17 = *(void *)(v57 + 16);
      uint64_t v18 = *(void *)(v57 + 24);
      __chkstk_darwin(*((void *)&v129 + 1));
      uint64_t v113 = v17;
      uint64_t v114 = v18;
      uint64_t v19 = 0xD000000000000026LL;
      uint64_t v20 = 0x800000000021D670LL;
      unint64_t v115 = 0xD000000000000026LL;
      unint64_t v116 = 0x800000000021D670LL;
      uint64_t v117 = v58;
      unint64_t v118 = v15;
      char v119 = (void *)a1;
      uint64_t v120 = &v128;
      uint64_t v121 = 0LL;
      id v59 = a2;
      goto LABEL_20;
    default:
      if ((id)_INAddMediaMediaItemUnsupportedReasonAlreadyInLibrary == v13)
      {
        uint64_t v23 = sub_6C5C(&qword_2844D0);
        uint64_t v125 = (uint64_t *)a1;
        uint64_t v24 = swift_initStackObject(v23, &v127);
        *(_OWORD *)(v24 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
        *(void *)(v24 + 32) = 0x656C746974LL;
        *(void *)(v24 + 40) = 0xE500000000000000LL;
        sub_191F1C();
        *(void *)(v24 + 4sub_6C3C(v0 + 8) = v25;
        *(void *)(v24 + 56) = v26;
        *(void *)(v24 + 72) = &type metadata for String;
        *(void *)(v24 + 80) = 0x736163646F507369LL;
        *(void *)(v24 + 8sub_6C3C(v0 + 8) = 0xE900000000000074LL;
        *(void *)(v24 + 120) = &type metadata for Bool;
        *(_BYTE *)(v24 + 96) = 0;
        unint64_t v27 = sub_74D54(v24);
        uint64_t v28 = *(void *)(v6 + 120);
        id v124 = &v122;
        *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
        uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
        *(void *)&__int128 v128 = a2;
        uint64_t v29 = a5;
        uint64_t v30 = *(void *)(v28 + 40);
        uint64_t v31 = *(void *)(v28 + 48);
        __chkstk_darwin(*((void *)&v129 + 1));
        uint64_t v113 = v30;
        uint64_t v114 = v31;
        unint64_t v115 = 0xD000000000000025LL;
        unint64_t v116 = 0x800000000021F410LL;
        uint64_t v117 = v32;
        unint64_t v118 = v27;
        char v119 = v125;
        uint64_t v120 = &v128;
        uint64_t v121 = 0LL;
        id v33 = a2;
        uint64_t v110 = 0xD000000000000025LL;
        uint64_t v111 = 0x800000000021F410LL;
        uint64_t v109 = v31;
        goto LABEL_5;
      }

      if ((id)_INAddMediaMediaItemUnsupportedReasonCloudSyncOff == v13)
      {
        uint64_t v61 = *(void *)(v6 + 120);
        unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v125 = &v122;
        *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
        uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
        *(void *)&__int128 v128 = a2;
        uint64_t v16 = a5;
        uint64_t v17 = *(void *)(v61 + 40);
        uint64_t v18 = *(void *)(v61 + 48);
        __chkstk_darwin(*((void *)&v129 + 1));
        uint64_t v113 = v17;
        uint64_t v114 = v18;
        uint64_t v19 = 0xD000000000000021LL;
        uint64_t v20 = 0x800000000021F3E0LL;
        unint64_t v115 = 0xD000000000000021LL;
        unint64_t v116 = 0x800000000021F3E0LL;
        uint64_t v117 = v62;
        unint64_t v118 = v15;
        char v119 = (void *)a1;
        uint64_t v120 = &v128;
        uint64_t v121 = 0LL;
        id v63 = a2;
LABEL_20:
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  v16,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v17,  v18,  v19,  v20,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v112);
        swift_bridgeObjectRelease(v15);
        return sub_1F6CC((uint64_t)&v128, &qword_283FE8);
      }

      if ((id)_INAddMediaMediaItemUnsupportedReasonAppDoesntSupportIntent == v13)
      {
        uint64_t v64 = *(void *)(v6 + 120);
        unint64_t v15 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v125 = &v122;
        *((void *)&v129 + 1) = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
        uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
        *(void *)&__int128 v128 = a2;
        uint64_t v16 = a5;
        uint64_t v17 = *(void *)(v64 + 16);
        uint64_t v18 = *(void *)(v64 + 24);
        __chkstk_darwin(*((void *)&v129 + 1));
        uint64_t v113 = v17;
        uint64_t v114 = v18;
        uint64_t v19 = 0xD00000000000002BLL;
        uint64_t v20 = 0x800000000021D5B0LL;
        unint64_t v115 = 0xD00000000000002BLL;
        unint64_t v116 = 0x800000000021D5B0LL;
        uint64_t v117 = v65;
        unint64_t v118 = v15;
        char v119 = (void *)a1;
        uint64_t v120 = &v128;
        uint64_t v121 = 0LL;
        id v66 = a2;
        goto LABEL_20;
      }

      if ((id)_INAddMediaMediaItemUnsupportedReasonAppNotAvailable == v13)
      {
        unint64_t v67 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v130 = 0LL;
        __int128 v128 = 0u;
        __int128 v129 = 0u;
        uint64_t v68 = __chkstk_darwin(v67);
        uint64_t v113 = v69;
        uint64_t v114 = v70;
        uint64_t v71 = 0xD000000000000024LL;
        uint64_t v72 = 0x800000000021D640LL;
        unint64_t v115 = 0xD000000000000024LL;
        unint64_t v116 = 0x800000000021D640LL;
        uint64_t v117 = v73;
        unint64_t v118 = v68;
        char v119 = (void *)a1;
        uint64_t v120 = &v128;
        uint64_t v121 = 0LL;
      }

      else
      {
        if ((id)_INAddMediaMediaItemUnsupportedReasonAppNotConfigured != v13)
        {
          uint64_t v76 = *(void *)(v6 + 120);
          if ((id)_INAddMediaMediaItemUnsupportedReasonAppAccountFailure != v13)
          {
            uint64_t v81 = sub_6C5C(&qword_2844D0);
            uint64_t v82 = swift_initStackObject(v81, v131);
            *(_OWORD *)(v82 + swift_weakDestroy(v0 + 16) = xmmword_214510;
            *(void *)(v82 + 32) = 0x736163646F507369LL;
            *(void *)(v82 + 40) = 0xE900000000000074LL;
            uint64_t v125 = (uint64_t *)a1;
            uint64_t v83 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
            unint64_t v84 = sub_B679C();
            BOOL v85 = MediaIntentCommons.getMediaType()(v83, v84) == 6;
            *(void *)(v82 + 72) = &type metadata for Bool;
            *(_BYTE *)(v82 + 4sub_6C3C(v0 + 8) = v85;
            unint64_t v27 = sub_74D54(v82);
            id v124 = &v122;
            *((void *)&v129 + 1) = v83;
            uint64_t v130 = (char *)&_s11descr2734E9VMn.NumFields + 3;
            *(void *)&__int128 v128 = a2;
            uint64_t v86 = *(void *)(v76 + 24);
            uint64_t v29 = a5;
            uint64_t v30 = *(void *)(v76 + 16);
            uint64_t v87 = __chkstk_darwin(v27);
            uint64_t v113 = v30;
            uint64_t v114 = v86;
            unint64_t v115 = 0xD00000000000001CLL;
            unint64_t v116 = 0x800000000021D590LL;
            uint64_t v117 = v88;
            unint64_t v118 = v87;
            char v119 = v125;
            uint64_t v120 = &v128;
            uint64_t v121 = 0LL;
            id v89 = a2;
            uint64_t v110 = 0xD00000000000001CLL;
            uint64_t v111 = 0x800000000021D590LL;
            uint64_t v109 = v86;
LABEL_5:
            sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  v29,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ e nableTelemetry=YES ",  125LL,  2,  v30,  v109,  v110,  v111,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v112);
LABEL_15:
            swift_bridgeObjectRelease(v27);
            return sub_1F6CC((uint64_t)&v128, &qword_283FE8);
          }

          unint64_t v67 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v130 = 0LL;
          __int128 v128 = 0u;
          __int128 v129 = 0u;
          uint64_t v77 = __chkstk_darwin(v67);
          uint64_t v113 = v78;
          uint64_t v114 = v79;
          unint64_t v115 = 0xD000000000000026LL;
          unint64_t v116 = 0x800000000021D5E0LL;
          uint64_t v117 = v80;
          unint64_t v118 = v77;
          char v119 = (void *)a1;
          uint64_t v120 = &v128;
          uint64_t v121 = 0LL;
          sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ ena bleTelemetry=YES ",  125LL,  2,  v78,  v79,  0xD000000000000026LL,  0x800000000021D5E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v112);
LABEL_32:
          sub_1F6CC((uint64_t)&v128, &qword_283FE8);
          return swift_bridgeObjectRelease(v67);
        }

        unint64_t v67 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v130 = 0LL;
        __int128 v128 = 0u;
        __int128 v129 = 0u;
        uint64_t v74 = __chkstk_darwin(v67);
        uint64_t v113 = v69;
        uint64_t v114 = v70;
        uint64_t v71 = 0xD000000000000025LL;
        uint64_t v72 = 0x800000000021D610LL;
        unint64_t v115 = 0xD000000000000025LL;
        unint64_t v116 = 0x800000000021D610LL;
        uint64_t v117 = v75;
        unint64_t v118 = v74;
        char v119 = (void *)a1;
        uint64_t v120 = &v128;
        uint64_t v121 = 0LL;
      }

      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v69,  v70,  v71,  v72,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v112);
      goto LABEL_32;
  }

    swift_bridgeObjectRelease("er");
    uint64_t v82 = (char *)v75;
    goto LABEL_52;
  }

  uint64_t v64 = [v60 launchId];
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v198 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    unint64_t v67 = v66;
  }

  else
  {
    uint64_t v198 = 0LL;
    unint64_t v67 = 0LL;
  }

  uint64_t v83 = v196;
  v205(v196, v204, v213);
  unint64_t v84 = swift_bridgeObjectRetain_n(v67, 2LL);
  BOOL v85 = (os_log_s *)Logger.logObject.getter(v84);
  uint64_t v86 = static os_log_type_t.default.getter(v85);
  uint64_t v87 = os_log_type_enabled(v85, v86);
  uint64_t v197 = v58;
  if (v87)
  {
    uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v89 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v88 = 138412290;
    if (v67)
    {
      uint64_t v90 = sub_6C9C();
      uint64_t v91 = swift_allocError(&type metadata for String, v90, 0LL, 0LL);
      *id v92 = v198;
      v92[1] = v67;
      swift_bridgeObjectRetain(v67);
      unint64_t v93 = v91;
      uint64_t v83 = v196;
      uint64_t v94 = _swift_stdlib_bridgeErrorToNSError(v93);
      *(void *)&uint64_t v215 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v215, (char *)&v215 + 8);
    }

    else
    {
      *(void *)&uint64_t v215 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v215, (char *)&v215 + 8);
      uint64_t v94 = 0LL;
    }

    *id v89 = v94;
    swift_bridgeObjectRelease_n(v67, 2LL);
    _os_log_impl( &dword_0,  v85,  v86,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse Intent is SiriForAirPlay with launchID: %@",  v88,  0xCu);
    unint64_t v95 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v89, 1LL, v95);
    swift_slowDealloc(v89, -1LL, -1LL);
    swift_slowDealloc(v88, -1LL, -1LL);

    id v63 = v212;
  }

  else
  {

    swift_bridgeObjectRelease_n(v67, 2LL);
  }

  ((void (*)(char *, unint64_t))v208)(v83, v213);
  unint64_t v96 = v211;
  char v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 32))(v211, v63);
  os_log_type_t v213 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for App(0LL);
  id v98 = App.__allocating_init(appIdentifier:)(v198, v67);
  int v214 = v60;
  char v99 = v60;
  unint64_t v100 = sub_6C5C(&qword_285BC8);
  uint64_t v101 = swift_dynamicCast(&v215, &v214, v59, v100, 6LL);
  uint64_t v102 = v202;
  if ((v101 & 1) == 0)
  {
    uint64_t v217 = 0LL;
    uint64_t v215 = 0u;
    uint64_t v216 = 0u;
  }

  unint64_t v103 = v200;
  v201(v200, v209, v202);
  uint64_t v104 = v210;
  uint64_t v105 = *(unsigned __int8 *)(v210 + 80);
  uint64_t v106 = (v105 + 48) & ~v105;
  uint64_t v107 = (v199 + v106 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  id v108 = (char *)swift_allocObject(&unk_270AF8, v107 + 16, v105 | 7);
  uint64_t v109 = v212;
  *((void *)v108 + 2) = v96;
  *((void *)v108 + sub_6C3C(v0 + 3) = v109;
  uint64_t v110 = v197;
  *((void *)v108 + 4) = v197;
  *((void *)v108 + 5) = v99;
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(&v108[v106], v103, v102);
  uint64_t v111 = &v108[v107];
  id v112 = v207;
  *(void *)uint64_t v111 = v206;
  *((void *)v111 + 1) = v112;
  uint64_t v113 = *(void (**)(unint64_t, uint64_t, __int128 *, uint64_t (*)(uint64_t), char *))(*(void *)v97 + 504LL);
  uint64_t v114 = v99;
  swift_retain(v110);
  swift_retain(v112);
  unint64_t v115 = v213;
  v113(v213, v98, &v215, sub_140C94, v108);
  swift_release(v108);
  swift_release(v97);
  swift_bridgeObjectRelease(v115);
  swift_release(v98);
  swift_release(v110);
  sub_1F6CC((uint64_t)&v215, &qword_283FE8);
  return sub_6C3C(v218);
}

    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0) {
      unint64_t v12 = sub_1FD78(0LL, *((void *)v12 + 2) + 1LL, 1, v12);
    }
    uint64_t v73 = *((void *)v12 + 2);
    uint64_t v72 = *((void *)v12 + 3);
    id v13 = v73 + 1;
    if (v73 >= v72 >> 1) {
      unint64_t v12 = sub_1FD78((char *)(v72 > 1), v73 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v13;
    uint64_t v74 = v12 + 32;
    uint64_t v75 = &v12[16 * v73 + 32];
    *(void *)uint64_t v75 = v143;
    *((void *)v75 + 1) = v10;
    if (v73)
    {
      while (1)
      {
        uint64_t v76 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v81 = &v74[16 * v13];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          uint64_t v87 = __OFSUB__(v83, v82);
          unint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_119;
          }
          uint64_t v86 = *((void *)v81 - 6);
          BOOL v85 = *((void *)v81 - 5);
          uint64_t v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          uint64_t v80 = v87;
          if (v87) {
            goto LABEL_120;
          }
          uint64_t v88 = v13 - 2;
          id v89 = &v74[16 * v13 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          uint64_t v87 = __OFSUB__(v90, v91);
          id v92 = v90 - v91;
          if (v87) {
            goto LABEL_122;
          }
          uint64_t v87 = __OFADD__(v79, v92);
          unint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_125;
          }
          if (v93 >= v84)
          {
            uint64_t v111 = &v74[16 * v76];
            uint64_t v113 = *(void *)v111;
            id v112 = *((void *)v111 + 1);
            uint64_t v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_129;
            }
            uint64_t v104 = v79 < v114;
            goto LABEL_88;
          }
        }

        else
        {
          if (v13 != 3)
          {
            uint64_t v105 = *((void *)v12 + 4);
            uint64_t v106 = *((void *)v12 + 5);
            uint64_t v87 = __OFSUB__(v106, v105);
            id v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_82;
          }

          uint64_t v78 = *((void *)v12 + 4);
          uint64_t v77 = *((void *)v12 + 5);
          uint64_t v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          uint64_t v80 = v87;
        }

        if ((v80 & 1) != 0) {
          goto LABEL_121;
        }
        uint64_t v88 = v13 - 2;
        uint64_t v94 = &v74[16 * v13 - 32];
        unint64_t v96 = *(void *)v94;
        unint64_t v95 = *((void *)v94 + 1);
        char v97 = __OFSUB__(v95, v96);
        id v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_124;
        }
        unint64_t v100 = &v74[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        uint64_t v87 = __OFSUB__(v101, v102);
        unint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_127;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_128;
        }
        if (v98 + v103 >= v79)
        {
          uint64_t v104 = v79 < v103;
LABEL_88:
          if (v104) {
            uint64_t v76 = v88;
          }
          goto LABEL_90;
        }

uint64_t sub_B614C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v12 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v12);
  id v13 = (char *)[a3 unsupportedReason];
  if (v13 == (_BYTE *)&dword_0 + 2)
  {
    uint64_t v28 = sub_6C5C(&qword_2844D0);
    uint64_t inited = swift_initStackObject(v28, &v71);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
    strcpy((char *)(inited + 32), "playlistName");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    id v30 = sub_191F28();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 4sub_6C3C(v0 + 8) = v30;
    *(void *)(inited + 56) = v31;
    unint64_t v18 = sub_74D54(inited);
    uint64_t v32 = *(void *)(v6 + 120);
    unint64_t v67 = &v66;
    uint64_t v73 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    uint64_t v74 = (char *)&_s11descr2734E9VMn.NumFields + 3;
    v72[0] = a2;
    uint64_t v20 = *(void *)(v32 + 40);
    uint64_t v21 = *(void *)(v32 + 48);
    __chkstk_darwin(v73);
    uint64_t v57 = v20;
    uint64_t v58 = v21;
    uint64_t v22 = a5;
    uint64_t v23 = 0xD00000000000002ELL;
    uint64_t v33 = a1;
    uint64_t v25 = 0x800000000021F380LL;
    unint64_t v59 = 0xD00000000000002ELL;
    unint64_t v60 = 0x800000000021F380LL;
    uint64_t v61 = v34;
    unint64_t v62 = v18;
    uint64_t v63 = v33;
    uint64_t v64 = v72;
    uint64_t v65 = 0LL;
    id v35 = a2;
    goto LABEL_5;
  }

  if (v13 == (_BYTE *)&dword_0 + 1)
  {
    uint64_t v14 = sub_6C5C(&qword_2844D0);
    uint64_t v15 = swift_initStackObject(v14, &v70);
    *(_OWORD *)(v15 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    strcpy((char *)(v15 + 32), "playlistName");
    *(_BYTE *)(v15 + 45) = 0;
    *(_WORD *)(v15 + 46) = -5120;
    id v16 = sub_191F28();
    *(void *)(v15 + 72) = &type metadata for String;
    *(void *)(v15 + 4sub_6C3C(v0 + 8) = v16;
    *(void *)(v15 + 56) = v17;
    unint64_t v18 = sub_74D54(v15);
    uint64_t v19 = *(void *)(v6 + 120);
    unint64_t v67 = &v66;
    uint64_t v73 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    uint64_t v74 = (char *)&_s11descr2734E9VMn.NumFields + 3;
    v72[0] = a2;
    uint64_t v20 = *(void *)(v19 + 40);
    uint64_t v21 = *(void *)(v19 + 48);
    __chkstk_darwin(v73);
    uint64_t v57 = v20;
    uint64_t v58 = v21;
    uint64_t v22 = a5;
    uint64_t v23 = 0xD00000000000002FLL;
    uint64_t v24 = a1;
    uint64_t v25 = 0x800000000021F3B0LL;
    unint64_t v59 = 0xD00000000000002FLL;
    unint64_t v60 = 0x800000000021F3B0LL;
    uint64_t v61 = v26;
    unint64_t v62 = v18;
    uint64_t v63 = v24;
    uint64_t v64 = v72;
    uint64_t v65 = 0LL;
    id v27 = a2;
LABEL_5:
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  v22,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v20,  v21,  v23,  v25,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v56);
    swift_bridgeObjectRelease(v18);
    return sub_1F6CC((uint64_t)v72, &qword_283FE8);
  }

  uint64_t v36 = sub_6C5C(&qword_2844D0);
  uint64_t v37 = swift_initStackObject(v36, &v75);
  *(_OWORD *)(v37 + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  *(void *)(v37 + 32) = 0xD000000000000015LL;
  *(void *)(v37 + 40) = 0x800000000021F320LL;
  id v38 = [a2 mediaDestination];
  uint64_t v68 = a1;
  uint64_t v69 = a5;
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = (char *)[v38 mediaDestinationType];

    BOOL v41 = v40 == (_BYTE *)&dword_0 + 2;
  }

  else
  {
    BOOL v41 = 0;
  }

  *(_BYTE *)(v37 + 4sub_6C3C(v0 + 8) = v41;
  *(void *)(v37 + 72) = &type metadata for Bool;
  *(void *)(v37 + 80) = 0xD000000000000014LL;
  *(void *)(v37 + 8sub_6C3C(v0 + 8) = 0x800000000021F340LL;
  id v42 = [a2 mediaDestination];
  if (v42)
  {
    id v43 = v42;
    uint64_t v44 = (char *)[v42 mediaDestinationType];

    BOOL v45 = v44 == (_BYTE *)&dword_0 + 1;
  }

  else
  {
    BOOL v45 = 0;
  }

  *(_BYTE *)(v37 + 96) = v45;
  *(void *)(v37 + 120) = &type metadata for Bool;
  *(void *)(v37 + 12sub_6C3C(v0 + 8) = 0x646E756F72477369LL;
  *(void *)(v37 + 136) = 0xEB00000000676E69LL;
  v72[0] = a2;
  uint64_t v46 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  sub_B679C();
  Swift::Bool v47 = MediaIntentCommons.isGrounding()();
  *(void *)(v37 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v37 + 144) = v47;
  unint64_t v48 = sub_74D54(v37);
  uint64_t v49 = *(void *)(v6 + 120);
  uint64_t v73 = v46;
  uint64_t v74 = (char *)&_s11descr2734E9VMn.NumFields + 3;
  v72[0] = a2;
  uint64_t v50 = *(void *)(v49 + 40);
  uint64_t v51 = *(void *)(v49 + 48);
  uint64_t v52 = __chkstk_darwin(v48);
  uint64_t v57 = v50;
  uint64_t v58 = v51;
  unint64_t v59 = 0xD00000000000001BLL;
  unint64_t v60 = 0x800000000021F360LL;
  uint64_t v61 = v53;
  unint64_t v62 = v52;
  uint64_t v63 = v68;
  uint64_t v64 = v72;
  uint64_t v65 = 0LL;
  id v54 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  v69,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v50,  v51,  0xD00000000000001BLL,  0x800000000021F360LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v56);
  swift_bridgeObjectRelease(v48);
  return sub_1F6CC((uint64_t)v72, &qword_283FE8);
}

uint64_t sub_B6688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void **)(v5 + 120);
  uint64_t v7 = v6[4];
  uint64_t v8 = v6[5];
  uint64_t v9 = v6[6];
  uint64_t v12 = v8;
  uint64_t v13 = v9;
  unint64_t v14 = 0xD00000000000001DLL;
  unint64_t v15 = 0x800000000021EE70LL;
  uint64_t v16 = v7;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v20 = 0LL;
  return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enab leTelemetry=YES ",  125LL,  2,  v8,  v9,  0xD00000000000001DLL,  0x800000000021EE70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v11);
}

uint64_t type metadata accessor for AddMediaDialogProvider(uint64_t a1)
{
  uint64_t result = qword_286D98;
  if (!qword_286D98) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddMediaDialogProvider);
  }
  return result;
}

uint64_t sub_B6750(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 256LL, 2LL, v2, a1 + 520);
}

unint64_t sub_B679C()
{
  unint64_t result = qword_286FF0;
  if (!qword_286FF0)
  {
    uint64_t v1 = sub_1641C(255LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for INAddMediaIntent, v1);
    atomic_store(result, (unint64_t *)&qword_286FF0);
  }

  return result;
}

void sub_B67F4(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v10 = [a2 mediaItems];
  uint64_t v39 = a4;
  uint64_t v40 = a3;
  if (!v10) {
    goto LABEL_16;
  }
  unint64_t v11 = v10;
  uint64_t v12 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
LABEL_15:
    swift_bridgeObjectRelease(v13);
    goto LABEL_16;
  }

  if (v13 < 0) {
    uint64_t v19 = v13;
  }
  else {
    uint64_t v19 = v13 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v13);
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v13);
  if (!v20) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001LL) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v13);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    id v14 = *(id *)(v13 + 32);
  }

  unint64_t v15 = v14;
  swift_bridgeObjectRelease(v13);
  uint64_t v16 = (char *)objc_msgSend(v15, "type", v39, v40);

  if (v16 == (_BYTE *)&dword_0 + 2)
  {
    unint64_t v17 = 0xE500000000000000LL;
    uint64_t v18 = 0x6D75626C61LL;
    goto LABEL_17;
  }

  if (v16 != (_BYTE *)&dword_4 + 2)
  {
LABEL_16:
    uint64_t v18 = 0LL;
    unint64_t v17 = 0xE000000000000000LL;
    goto LABEL_17;
  }

  unint64_t v17 = 0xE700000000000000LL;
  uint64_t v18 = 0x74736163646F70LL;
LABEL_17:
  uint64_t v21 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v21, &v44);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
  *(void *)(inited + 32) = 0x656C746974LL;
  *(void *)(inited + 40) = 0xE500000000000000LL;
  sub_191F1C();
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v23;
  *(void *)(inited + 56) = v24;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x707954616964656DLL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE900000000000065LL;
  *(void *)(inited + 96) = v18;
  *(void *)(inited + 104) = v17;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000015LL;
  *(void *)(inited + 136) = 0x800000000021F320LL;
  id v25 = [a2 mediaDestination];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = a1;
    uint64_t v28 = (char *)[v25 mediaDestinationType];

    BOOL v29 = v28 == (_BYTE *)&dword_0 + 2;
  }

  else
  {
    uint64_t v27 = a1;
    BOOL v29 = 0;
  }

  *(_BYTE *)(inited + 144) = v29;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  strcpy((char *)(inited + 176), "playlistTitle");
  *(_WORD *)(inited + 190) = -4864;
  id v30 = sub_191F28();
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for String;
  *(void *)(inited + 192) = v30;
  *(void *)(inited + 200) = v31;
  unint64_t v32 = sub_74D54(inited);
  uint64_t v33 = *(void *)(v5 + 120);
  uint64_t v42 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  id v43 = (char *)&_s11descr2734E9VMn.NumFields + 3;
  v41[0] = a2;
  uint64_t v34 = *(void *)(v33 + 40);
  uint64_t v35 = *(void *)(v33 + 48);
  __chkstk_darwin(v42);
  v38[2] = v34;
  v38[3] = v35;
  v38[4] = 0xD000000000000015LL;
  v38[5] = 0x800000000021D820LL;
  v38[6] = v36;
  v38[7] = v32;
  v38[8] = v27;
  v38[9] = v41;
  v38[10] = 0LL;
  id v37 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v40,  v39,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v34,  v35,  0xD000000000000015LL,  0x800000000021D820LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v38);
  swift_bridgeObjectRelease(v32);
  sub_1F6CC((uint64_t)v41, &qword_283FE8);
}

void INUpdateMediaAffinityIntent.firstMediaItemType()()
{
  id v1 = [v0 mediaItems];
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  unint64_t v3 = sub_687D0();
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v4);
    if (v8) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease(v4);
    return;
  }

Swift::Bool __swiftcall INUpdateMediaAffinityIntent.getAppInferred()()
{
  return 0;
}

BOOL sub_B6C84(uint64_t a1)
{
  return MediaIntentCommons.isGrounding()();
}

BOOL sub_B6CB8(uint64_t a1)
{
  return MediaIntentCommons.isUserRecognized()();
}

BOOL sub_B6CEC(uint64_t a1, void *a2, uint64_t a3)
{
  v5.value._uint64_t countAndFlagsBits = a1;
  v5.value._object = a2;
  return MediaIntentCommons.isAppAttributionRequired(bundleIdentifier:)(v5);
}

uint64_t sub_B6D38(uint64_t a1)
{
  return MediaIntentCommons.getFallbackUsername()().value._countAndFlagsBits;
}

BOOL sub_B6D6C(uint64_t a1)
{
  return MediaIntentCommons.useDialogMemoryForAppAttribution()();
}

uint64_t sub_B6DA0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for INSearchForMediaIntent, a1);
  return MediaIntentCommons.wholeHouseAudioMetadata()(a1, WitnessTable);
}

uint64_t sub_B6DD4(uint64_t a1)
{
  return MediaIntentCommons.proxiedAppName()().value._countAndFlagsBits;
}

uint64_t sub_B6E08()
{
  return PrivateMediaIntentDataProviding.getSharedUserID()().value._countAndFlagsBits;
}

uint64_t sub_B6E14()
{
  return CommonIntentSignals.getLocaleOverride()().value._countAndFlagsBits;
}

uint64_t sub_B6E20(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.isAppAttributionRequired.getter( a1,  &protocol witness table for INSearchForMediaIntent);
}

uint64_t sub_B6E2C(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.useDialogMemoryForAttribution.getter( a1,  &protocol witness table for INSearchForMediaIntent);
}

uint64_t sub_B6E38(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.fallbackUsername.getter(a1, &protocol witness table for INSearchForMediaIntent);
}

uint64_t sub_B6E44()
{
  return INSearchForMediaIntent.privateMediaIntentData.getter();
}

uint64_t sub_B6E64(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.isUserConfidenceEnoughToBeRecognized.getter( a1,  &protocol witness table for INSearchForMediaIntent);
}

id sub_B6E70()
{
  return [*v0 mediaSearch];
}

void sub_B6EA0()
{
}

uint64_t sub_B6ED0(Swift::String a1)
{
  return PrivateMediaIntentDataProviding.localizedAppName(for:)(a1).value._countAndFlagsBits;
}

BOOL sub_B6EDC()
{
  return CommonIntentSignals.isExpertSFAUser()();
}

BOOL sub_B6EE8()
{
  return CommonIntentSignals.handledBySiriForAirPlay()();
}

double sub_B6EF8@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v150 = a2;
  uint64_t v146 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v3 = *(void *)(v146 - 8);
  uint64_t v4 = __chkstk_darwin(v146);
  uint64_t v131 = (char *)v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v128 - v7;
  __chkstk_darwin(v6);
  uint64_t v147 = (char *)v128 - v9;
  uint64_t v10 = sub_6C5C(&qword_2845D0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v139 = (char *)v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v132 = (char *)v128 - v13;
  uint64_t v136 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = type metadata accessor for USOParse(0LL);
  uint64_t v15 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v137 = (char *)v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v17);
  uint64_t v149 = (uint64_t)v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for Parse(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v152 = (void **)((char *)v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v153 = (char *)v128 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v128 - v25;
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v133 = (char *)v128 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v140 = (char *)v128 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v130 = (char *)v128 - v34;
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)v128 - v35;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v141 = v8;
  uint64_t v145 = v3;
  uint64_t v37 = sub_6960(v27, (uint64_t)qword_2969C8);
  id v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v143 = v37;
  char v144 = v38;
  ((void (*)(char *))v38)(v36);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v154 = a1;
  uint64_t v40 = v39(v26, a1, v19);
  BOOL v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v151 = v28;
  if (v43)
  {
    uint64_t v44 = swift_slowAlloc(12LL, -1LL);
    Swift::String v148 = (void (*)(char *, char *, uint64_t))v39;
    BOOL v45 = (uint8_t *)v44;
    uint64_t v46 = swift_slowAlloc(32LL, -1LL);
    uint64_t v129 = v15;
    uint64_t v47 = v46;
    uint64_t v159 = v46;
    uint64_t v142 = v27;
    *(_DWORD *)BOOL v45 = 136315138;
    v128[1] = v45 + 4;
    unint64_t v48 = v153;
    v148(v153, v26, v19);
    uint64_t v49 = String.init<A>(describing:)(v48, v19);
    unint64_t v51 = v50;
    uint64_t v157 = sub_6978(v49, v50, &v159);
    uint64_t v27 = v142;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, v158);
    swift_bridgeObjectRelease(v51);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v20 + 8);
    v52(v26, v19);
    _os_log_impl(&dword_0, v41, v42, "CommonAudioIntent#from parse: %s", v45, 0xCu);
    swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v53 = v47;
    uint64_t v15 = v129;
    swift_slowDealloc(v53, -1LL, -1LL);
    id v54 = v45;
    uint64_t v39 = (uint64_t (*)(char *, uint64_t, uint64_t))v148;
    swift_slowDealloc(v54, -1LL, -1LL);
  }

  else
  {
    uint64_t v52 = *(void (**)(char *, uint64_t))(v20 + 8);
    v52(v26, v19);
  }

  uint64_t v55 = *(void (**)(char *, uint64_t))(v151 + 8);
  v55(v36, v27);
  id v56 = v152;
  v39((char *)v152, v154, v19);
  int v57 = (*(uint64_t (**)(void **, uint64_t))(v20 + 88))(v56, v19);
  uint64_t v58 = v19;
  if (v57 == enum case for Parse.NLv3IntentOnly(_:))
  {
    v52((char *)v56, v19);
LABEL_10:
    uint64_t v61 = v153;
    v39(v153, v154, v19);
    uint64_t v62 = v149;
    sub_206FC0(v61, v149);
    uint64_t v63 = type metadata accessor for AudioNLv3Intent(0LL);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48LL))(v62, 1LL, v63) == 1)
    {
      sub_B8940(v62);
LABEL_12:
      double result = 0.0;
      uint64_t v65 = v150;
      *(_OWORD *)uint64_t v150 = 0u;
      *((_OWORD *)v65 + 1) = 0u;
      v65[4] = 0LL;
      return result;
    }

    uint64_t v66 = v150;
    v150[3] = v63;
    v66[4] = sub_10430(&qword_287018, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C150);
    unint64_t v67 = sub_10974(v66);
    sub_B8980(v62, (uint64_t)v67);
    return result;
  }

  if (v57 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v20 + 96))(v56, v19);
    uint64_t v59 = sub_6C5C(&qword_284618);
    swift_release(*(void **)((char *)v56 + *(int *)(v59 + 48)));
    uint64_t v60 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(void **, uint64_t))(*(void *)(v60 - 8) + 8LL))(v56, v60);
    goto LABEL_10;
  }

  if (v57 != enum case for Parse.directInvocation(_:))
  {
    if (v57 == enum case for Parse.pommesResponse(_:))
    {
      uint64_t v74 = v27;
      (*(void (**)(void **, uint64_t))(v20 + 96))(v56, v58);
      uint64_t v75 = *v56;
      uint64_t v76 = sub_10470();
      if (v76)
      {
        uint64_t v77 = (void *)v76;
        uint64_t v78 = type metadata accessor for AudioUsoIntent(0LL);
        uint64_t v79 = v139;
        Experience.userDialogAct.getter(v78);
        uint64_t v80 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56LL))(v79, 0LL, 1LL, v80);
        uint64_t v81 = AudioUsoIntent.__allocating_init(userDialogAct:)(v79);
        if (v81)
        {
          uint64_t v82 = v81;
          uint64_t v83 = v150;
          v150[3] = v78;
          v83[4] = (uint64_t)&protocol witness table for AudioUsoIntent;

          *uint64_t v83 = v82;
          return result;
        }
      }

      else
      {
        uint64_t v117 = v130;
        uint64_t v118 = v144(v130, v143, v27);
        char v119 = (os_log_s *)Logger.logObject.getter(v118);
        os_log_type_t v120 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v119, v120))
        {
          uint64_t v121 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v121 = 0;
          _os_log_impl( &dword_0,  v119,  v120,  "CommonAudioIntent#from pommesResponse contains no AudioExperience",  v121,  2u);
          swift_slowDealloc(v121, -1LL, -1LL);
        }

        v55(v117, v74);
      }
    }

    else
    {
      if (v57 != enum case for Parse.uso(_:))
      {
        uint64_t v110 = v133;
        uint64_t v111 = v27;
        uint64_t v112 = v144(v133, v143, v27);
        uint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
        os_log_type_t v114 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v113, v114))
        {
          unint64_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v115 = 0;
          _os_log_impl(&dword_0, v113, v114, "CommonAudioIntent#from unsupported parse type", v115, 2u);
          swift_slowDealloc(v115, -1LL, -1LL);
        }

        v55(v110, v111);
        unint64_t v116 = v150;
        v150[4] = 0LL;
        *unint64_t v116 = 0u;
        v116[1] = 0u;
        v52((char *)v56, v58);
        return result;
      }

      (*(void (**)(void **, uint64_t))(v20 + 96))(v56, v19);
      unint64_t v84 = v137;
      uint64_t v85 = v138;
      uint64_t v86 = (*(uint64_t (**)(char *, void **, uint64_t))(v15 + 32))(v137, v56, v138);
      uint64_t v87 = v134;
      uint64_t v88 = USOParse.userParse.getter(v86);
      uint64_t v89 = Siri_Nlu_External_UserParse.userDialogActs.getter(v88);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v87, v136);
      uint64_t v90 = *(void *)(v89 + 16);
      uint64_t v91 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
      uint64_t v92 = *(void *)(v91 - 8);
      if (v90)
      {
        unint64_t v93 = v132;
        (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))( v132,  v89 + ((*(unsigned __int8 *)(v92 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80)),  v91);
        uint64_t v94 = 0LL;
      }

      else
      {
        uint64_t v94 = 1LL;
        unint64_t v93 = v132;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v93, v94, 1LL, v91);
      swift_bridgeObjectRelease(v89);
      uint64_t v124 = type metadata accessor for AudioUsoIntent(0LL);
      uint64_t v125 = AudioUsoIntent.__allocating_init(userDialogAct:)(v93);
      if (v125)
      {
        uint64_t v126 = v150;
        v150[3] = v124;
        v126[4] = (uint64_t)&protocol witness table for AudioUsoIntent;
        uint64_t *v126 = v125;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v84, v85);
        return result;
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v84, v85);
    }

double sub_B7C84@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v152 = a2;
  uint64_t v3 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_2845D0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v145 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v137 = (char *)&v132 - v10;
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v140 = *(void *)(v11 - 8);
  uint64_t v141 = v11;
  __chkstk_darwin(v11);
  uint64_t v139 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = type metadata accessor for USOParse(0LL);
  uint64_t v13 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v15);
  uint64_t v151 = (uint64_t)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Parse(0LL);
  uint64_t v158 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v154 = (void **)((char *)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v155 = (char *)&v132 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v132 - v22;
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v157 = *(void *)(v24 - 8);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v138 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v150 = (char *)&v132 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v135 = (char *)&v132 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v136 = (char *)&v132 - v32;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v132 - v33;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v143 = v13;
  uint64_t v147 = v4;
  uint64_t v35 = sub_6960(v24, (uint64_t)qword_2969C8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v157 + 16);
  uint64_t v148 = v35;
  uint64_t v149 = v36;
  ((void (*)(char *))v36)(v34);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  uint64_t v153 = a1;
  uint64_t v156 = v37;
  uint64_t v38 = ((uint64_t (*)(char *, char *, uint64_t))v37)(v23, a1, v17);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v134 = v6;
    uint64_t v41 = swift_slowAlloc(12LL, -1LL);
    uint64_t v146 = v3;
    os_log_type_t v42 = (uint8_t *)v41;
    uint64_t v43 = swift_slowAlloc(32LL, -1LL);
    v163[0] = v43;
    uint64_t v133 = v24;
    *(_DWORD *)os_log_type_t v42 = 136315138;
    uint64_t v132 = v42 + 4;
    uint64_t v44 = v155;
    v156(v155, v23, v17);
    uint64_t v45 = String.init<A>(describing:)(v44, v17);
    unint64_t v47 = v46;
    uint64_t v161 = sub_6978(v45, v46, v163);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162);
    unint64_t v48 = v134;
    swift_bridgeObjectRelease(v47);
    uint64_t v49 = v158;
    unint64_t v50 = v23;
    unint64_t v51 = *(void (**)(char *, uint64_t))(v158 + 8);
    v51(v50, v17);
    _os_log_impl(&dword_0, v39, v40, "CommonAudioIntent#from parse: %s", v42, 0xCu);
    swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    uint64_t v52 = v42;
    uint64_t v3 = v146;
    swift_slowDealloc(v52, -1LL, -1LL);

    uint64_t v53 = v133;
    uint64_t v157 = *(void *)(v157 + 8);
    ((void (*)(char *, uint64_t))v157)(v34, v133);
    uint64_t v54 = v49;
    uint64_t v6 = v48;
  }

  else
  {
    uint64_t v54 = v158;
    uint64_t v55 = v23;
    unint64_t v51 = *(void (**)(char *, uint64_t))(v158 + 8);
    v51(v55, v17);

    uint64_t v157 = *(void *)(v157 + 8);
    ((void (*)(char *, uint64_t))v157)(v34, v24);
    uint64_t v53 = v24;
  }

  int v57 = v153;
  id v56 = v154;
  uint64_t v58 = (void (*)(char *, uint64_t, uint64_t))v156;
  v156((char *)v154, v153, v17);
  int v59 = (*(uint64_t (**)(void **, uint64_t))(v54 + 88))(v56, v17);
  if (v59 == enum case for Parse.NLv3IntentOnly(_:))
  {
    v51((char *)v56, v17);
    goto LABEL_10;
  }

  if (v59 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v54 + 96))(v56, v17);
    uint64_t v60 = sub_6C5C(&qword_284618);
    swift_release(*(void **)((char *)v56 + *(int *)(v60 + 48)));
    uint64_t v61 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(void **, uint64_t))(*(void *)(v61 - 8) + 8LL))(v56, v61);
LABEL_10:
    uint64_t v62 = v155;
    v58(v155, (uint64_t)v57, v17);
    uint64_t v63 = v151;
    sub_206FC0(v62, v151);
    uint64_t v64 = type metadata accessor for AudioNLv3Intent(0LL);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48LL))(v63, 1LL, v64) == 1)
    {
      sub_B8940(v63);
      double result = 0.0;
      uint64_t v66 = v152;
      *(_OWORD *)uint64_t v152 = 0u;
      *(_OWORD *)(v66 + swift_weakDestroy(v0 + 16) = 0u;
      *(_OWORD *)(v66 + 32) = 0u;
    }

    else
    {
      unint64_t v67 = (void *)v152;
      *(void *)(v152 + 24) = v64;
      v67[4] = sub_10430(&qword_287000, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C220);
      void v67[5] = sub_10430(&qword_287008, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C1A0);
      uint64_t v68 = sub_10974(v67);
      sub_B8980(v63, (uint64_t)v68);
    }

    return result;
  }

  if (v59 == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(void **, uint64_t))(v54 + 96))(v56, v17);
    uint64_t v69 = v147;
    (*(void (**)(char *, void **, uint64_t))(v147 + 32))(v6, v56, v3);
    sub_1CF340((uint64_t)v6, (uint64_t)v159);
    sub_8747C((uint64_t)v159, (uint64_t)v160);
    uint64_t v70 = v150;
    if (v160[56] != 255)
    {
      sub_45D94((uint64_t)v160, (uint64_t)&v161);
      sub_45D94((uint64_t)&v161, (uint64_t)v163);
      if (v164 == 4)
      {
        uint64_t v146 = v3;
        uint64_t v71 = (void *)v163[0];
        uint64_t v72 = v163[2];
        uint64_t v73 = v163[4];
        swift_bridgeObjectRelease(v163[6]);
        swift_bridgeObjectRelease(v73);
        swift_bridgeObjectRelease(v72);
        if (v71)
        {
          uint64_t v74 = v6;
          uint64_t v75 = type metadata accessor for AudioUsoIntent(0LL);
          id v76 = v71;
          uint64_t v77 = v145;
          Experience.userDialogAct.getter();
          uint64_t v78 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56LL))(v77, 0LL, 1LL, v78);
          uint64_t v79 = AudioUsoIntent.__allocating_init(userDialogAct:)(v77);
          if (v79)
          {
            uint64_t v80 = v79;
            uint64_t v81 = (uint64_t *)v152;
            *(void *)(v152 + 24) = v75;
            v81[4] = (uint64_t)&protocol witness table for AudioUsoIntent;
            v81[5] = sub_10430( &qword_286FF8,  (uint64_t (*)(uint64_t))&type metadata accessor for AudioUsoIntent,  (uint64_t)&protocol conformance descriptor for AudioUsoIntent);

            *uint64_t v81 = v80;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v74, v146);
            return result;
          }

          (*(void (**)(char *, uint64_t))(v69 + 8))(v74, v146);
        }

        else
        {
          os_log_type_t v120 = v135;
          uint64_t v121 = v149(v135, v148, v53);
          uint64_t v122 = (os_log_s *)Logger.logObject.getter(v121);
          os_log_type_t v123 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v122, v123))
          {
            uint64_t v124 = v6;
            uint64_t v125 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v125 = 0;
            _os_log_impl( &dword_0,  v122,  v123,  "CommonAudioIntent#from PlayMediaShim directinvocation is missing audioExperience",  v125,  2u);
            uint64_t v126 = v125;
            uint64_t v6 = v124;
            swift_slowDealloc(v126, -1LL, -1LL);
          }

          ((void (*)(char *, uint64_t))v157)(v120, v53);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v6, v146);
        }

        goto LABEL_44;
      }

      sub_B89C4( (uint64_t)v159,  (void (*)(void, void, void, void, void, void, void, void))sub_45E08);
    }

    uint64_t v103 = v149(v70, v148, v53);
    uint64_t v104 = (os_log_s *)Logger.logObject.getter(v103);
    os_log_type_t v105 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v104, v105))
    {
      unint64_t v106 = v6;
      unint64_t v107 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v107 = 0;
      _os_log_impl(&dword_0, v104, v105, "CommonAudioIntent#from unsupported directinvocation type", v107, 2u);
      id v108 = v107;
      uint64_t v6 = v106;
      uint64_t v70 = v150;
      swift_slowDealloc(v108, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v157)(v70, v53);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v6, v3);
LABEL_44:
    double result = 0.0;
    uint64_t v131 = (_OWORD *)v152;
    *(_OWORD *)(v152 + swift_weakDestroy(v0 + 16) = 0u;
    v131[2] = 0u;
    *uint64_t v131 = 0u;
    return result;
  }

  if (v59 == enum case for Parse.pommesResponse(_:))
  {
    (*(void (**)(void **, uint64_t))(v54 + 96))(v56, v17);
    uint64_t v82 = *v56;
    uint64_t v83 = sub_10470();
    if (v83)
    {
      unint64_t v84 = (void *)v83;
      uint64_t v85 = type metadata accessor for AudioUsoIntent(0LL);
      uint64_t v86 = v145;
      Experience.userDialogAct.getter();
      uint64_t v87 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56LL))(v86, 0LL, 1LL, v87);
      uint64_t v88 = AudioUsoIntent.__allocating_init(userDialogAct:)(v86);
      if (v88)
      {
        uint64_t v89 = v88;
        uint64_t v90 = (uint64_t *)v152;
        *(void *)(v152 + 24) = v85;
        v90[4] = (uint64_t)&protocol witness table for AudioUsoIntent;
        v90[5] = sub_10430( &qword_286FF8,  (uint64_t (*)(uint64_t))&type metadata accessor for AudioUsoIntent,  (uint64_t)&protocol conformance descriptor for AudioUsoIntent);

        uint64_t *v90 = v89;
        return result;
      }
    }

    else
    {
      unint64_t v115 = v136;
      uint64_t v116 = v149(v136, v148, v53);
      uint64_t v117 = (os_log_s *)Logger.logObject.getter(v116);
      os_log_type_t v118 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v117, v118))
      {
        char v119 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)char v119 = 0;
        _os_log_impl( &dword_0,  v117,  v118,  "CommonAudioIntent#from pommesResponse contains no AudioExperience",  v119,  2u);
        swift_slowDealloc(v119, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v157)(v115, v53);
    }

    goto LABEL_44;
  }

  if (v59 == enum case for Parse.uso(_:))
  {
    (*(void (**)(void **, uint64_t))(v54 + 96))(v56, v17);
    uint64_t v92 = v142;
    uint64_t v91 = v143;
    uint64_t v93 = v144;
    uint64_t v94 = (*(uint64_t (**)(char *, void **, uint64_t))(v143 + 32))(v142, v56, v144);
    unint64_t v95 = v139;
    uint64_t v96 = USOParse.userParse.getter(v94);
    uint64_t v97 = Siri_Nlu_External_UserParse.userDialogActs.getter(v96);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v95, v141);
    uint64_t v98 = *(void *)(v97 + 16);
    uint64_t v99 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
    uint64_t v100 = *(void *)(v99 - 8);
    if (v98)
    {
      os_log_type_t v101 = v137;
      (*(void (**)(char *, unint64_t, uint64_t))(v100 + 16))( v137,  v97 + ((*(unsigned __int8 *)(v100 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80)),  v99);
      uint64_t v102 = 0LL;
    }

    else
    {
      uint64_t v102 = 1LL;
      os_log_type_t v101 = v137;
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v101, v102, 1LL, v99);
    swift_bridgeObjectRelease(v97);
    uint64_t v127 = type metadata accessor for AudioUsoIntent(0LL);
    uint64_t v128 = AudioUsoIntent.__allocating_init(userDialogAct:)(v101);
    if (v128)
    {
      uint64_t v129 = v128;
      uint64_t v130 = (uint64_t *)v152;
      *(void *)(v152 + 24) = v127;
      v130[4] = (uint64_t)&protocol witness table for AudioUsoIntent;
      v130[5] = sub_10430( &qword_286FF8,  (uint64_t (*)(uint64_t))&type metadata accessor for AudioUsoIntent,  (uint64_t)&protocol conformance descriptor for AudioUsoIntent);
      *uint64_t v130 = v129;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
      return result;
    }

    (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
    goto LABEL_44;
  }

  uint64_t v109 = v138;
  uint64_t v110 = v149(v138, v148, v53);
  uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
  os_log_type_t v112 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v113 = 0;
    _os_log_impl(&dword_0, v111, v112, "CommonAudioIntent#from unsupported parse type", v113, 2u);
    swift_slowDealloc(v113, -1LL, -1LL);
  }

  ((void (*)(char *, uint64_t))v157)(v109, v53);
  os_log_type_t v114 = (_OWORD *)v152;
  *(_OWORD *)(v152 + swift_weakDestroy(v0 + 16) = 0u;
  v114[2] = 0u;
  _OWORD *v114 = 0u;
  v51((char *)v154, v17);
  return result;
}

uint64_t sub_B8940(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_B8980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioNLv3Intent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_B89C4( uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

char *sub_B8A00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_284DB8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *((void *)v2 + 2) = _swiftEmptyArrayStorage;
  *((void *)v2 + sub_6C3C(v0 + 3) = _swiftEmptyArrayStorage;
  *((void *)v2 + 4) = 0LL;
  *((void *)v2 + 5) = 0LL;
  *((void *)v2 + 6) = _swiftEmptyArrayStorage;
  uint64_t v7 = (uint64_t)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_reference];
  uint64_t v8 = type metadata accessor for CommonAudio.Reference(0LL);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
  v58(v7, 1LL, 1LL, v8);
  uint64_t v9 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType];
  uint64_t v10 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  v11(v9, 1LL, 1LL, v10);
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_activities] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookAuthors] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookTitles] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appMusicArtistNames] = _swiftEmptyArrayStorage;
  uint64_t v12 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appName];
  *(void *)uint64_t v12 = 0LL;
  *((void *)v12 + 1) = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appPlaylistTitles] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appShowTitles] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePlaylistTitles] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePodcastTitles] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_apps] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_attributes] = &_swiftEmptySetSingleton;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_dateTime] = 0LL;
  uint64_t v13 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_confirmationState];
  uint64_t v14 = type metadata accessor for CommonAudio.Confirmation(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  uint64_t v15 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_decade];
  uint64_t v16 = type metadata accessor for CommonAudio.Decade(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_entities] = _swiftEmptyArrayStorage;
  uint64_t v17 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_frequency];
  *(void *)uint64_t v17 = 0LL;
  v17[8] = 1;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_genres] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_modifiers] = &_swiftEmptySetSingleton;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_moods] = _swiftEmptyArrayStorage;
  uint64_t v18 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_noun];
  uint64_t v19 = type metadata accessor for CommonAudio.Noun(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_playlistTitles] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_podcastTitles] = _swiftEmptyArrayStorage;
  uint64_t v20 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_newsPodcastTopicId];
  *(void *)uint64_t v20 = 0LL;
  *((void *)v20 + 1) = 0LL;
  uint64_t v21 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_newsPodcastIdentifier];
  *(void *)uint64_t v21 = 0LL;
  *((void *)v21 + 1) = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioStationNames] = _swiftEmptyArrayStorage;
  uint64_t v22 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioType];
  uint64_t v23 = type metadata accessor for CommonAudio.RadioType(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_resolvedReference] = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_showTitles] = _swiftEmptyArrayStorage;
  uint64_t v24 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_sort];
  uint64_t v25 = type metadata accessor for CommonAudio.Sort(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v24, 1LL, 1LL, v25);
  v11(&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_targetMediaType], 1LL, 1LL, v10);
  uint64_t v26 = &v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb];
  uint64_t v27 = type metadata accessor for CommonAudio.Verb(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v26, 1LL, 1LL, v27);
  *(void *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_audioSettingNames] = _swiftEmptyArrayStorage;
  v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appInferred] = 0;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))( v6,  enum case for CommonAudio.Reference.definite(_:),  v8);
  v58((uint64_t)v6, 0LL, 1LL, v8);
  swift_beginAccess(v7, v59, 33LL, 0LL);
  sub_B98D0((uint64_t)v6, v7);
  uint64_t v28 = swift_endAccess(v59);
  uint64_t v29 = NowPlayingInfo.trackArtist.getter(v28);
  if (v30)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v30;
    uint64_t v33 = sub_6C5C(&qword_284018);
    uint64_t v34 = swift_allocObject(v33, 48LL, 7LL);
    *(_OWORD *)(v34 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v34 + 32) = v31;
    *(void *)(v34 + 40) = v32;
    uint64_t v35 = *((void *)v2 + 3);
    *((void *)v2 + sub_6C3C(v0 + 3) = v34;
    uint64_t v29 = swift_bridgeObjectRelease(v35);
  }

  uint64_t v36 = NowPlayingInfo.album.getter(v29);
  if (v37)
  {
    uint64_t v38 = v36;
    uint64_t v39 = v37;
    uint64_t v40 = sub_6C5C(&qword_284018);
    uint64_t v41 = swift_allocObject(v40, 48LL, 7LL);
    *(_OWORD *)(v41 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v41 + 32) = v38;
    *(void *)(v41 + 40) = v39;
    uint64_t v42 = *((void *)v2 + 2);
    *((void *)v2 + 2) = v41;
    uint64_t v36 = swift_bridgeObjectRelease(v42);
  }

  uint64_t v43 = NowPlayingInfo.title.getter(v36);
  if (v44)
  {
    uint64_t v45 = v43;
    uint64_t v46 = v44;
    uint64_t v47 = sub_6C5C(&qword_284018);
    uint64_t v48 = swift_allocObject(v47, 48LL, 7LL);
    *(_OWORD *)(v48 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v48 + 32) = v45;
    *(void *)(v48 + 40) = v46;
    uint64_t v49 = *((void *)v2 + 6);
    *((void *)v2 + 6) = v48;
    uint64_t v43 = swift_bridgeObjectRelease(v49);
  }

  uint64_t v50 = NowPlayingInfo.contentId.getter(v43);
  uint64_t v52 = v51;
  uint64_t v53 = type metadata accessor for NowPlayingInfo(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8LL))(a1, v53);
  uint64_t v54 = *((void *)v2 + 5);
  *((void *)v2 + 4) = v50;
  *((void *)v2 + 5) = v52;
  swift_bridgeObjectRelease(v54);
  return v2;
}

void *sub_B8F00()
{
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_activities));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookAuthors));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appMusicArtistNames));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appName
                                      + 8));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appPlaylistTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appShowTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePlaylistTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePodcastTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_apps));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_attributes));
  swift_release(*(void *)((char *)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_dateTime));
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_confirmationState, &qword_284630);
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_decade, &qword_284E18);
  swift_bridgeObjectRelease(*(void *)((char *)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_entities));
  swift_bridgeObjectRelease(*(void *)((char *)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_genres));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_modifiers));
  swift_bridgeObjectRelease(*(void *)((char *)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_moods));
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_noun, &qword_284D88);
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_playlistTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_podcastTitles));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_newsPodcastTopicId
                                      + 8));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_newsPodcastIdentifier
                                      + 8));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioStationNames));
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioType, &qword_284D98);
  swift_release(*(void *)((char *)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_resolvedReference));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_showTitles));
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_sort, &qword_284DC0);
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_targetMediaType, &qword_284DC8);
  sub_1F6CC((uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb, &qword_284DB0);
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_audioSettingNames));
  return v0;
}

uint64_t sub_B91A0()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_B91C4()
{
  return type metadata accessor for NowPlayingIntent(0LL);
}

uint64_t type metadata accessor for NowPlayingIntent(uint64_t a1)
{
  uint64_t result = qword_287048;
  if (!qword_287048) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingIntent);
  }
  return result;
}

void sub_B9208(uint64_t a1)
{
  v19[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v19[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v19[2] = &unk_216AC8;
  v19[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_67DE8(319LL, &qword_287058, (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Reference);
  if (v3 <= 0x3F)
  {
    v19[4] = *(void *)(v2 - 8) + 64LL;
    sub_67DE8(319LL, &qword_287060, (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType);
    if (v5 <= 0x3F)
    {
      uint64_t v6 = *(void *)(v4 - 8) + 64LL;
      v19[5] = v6;
      v19[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[10] = &unk_216AC8;
      v19[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v19[17] = &unk_216AE0;
      sub_67DE8( 319LL,  (unint64_t *)&qword_287068,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation);
      if (v8 <= 0x3F)
      {
        v19[18] = *(void *)(v7 - 8) + 64LL;
        sub_67DE8(319LL, &qword_287070, (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Decade);
        if (v10 <= 0x3F)
        {
          v19[19] = *(void *)(v9 - 8) + 64LL;
          v19[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v19[21] = &unk_216AF8;
          v19[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v19[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v19[24] = (char *)&value witness table for Builtin.BridgeObject + 64;
          sub_67DE8(319LL, &qword_287078, (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Noun);
          if (v12 <= 0x3F)
          {
            v19[25] = *(void *)(v11 - 8) + 64LL;
            v19[26] = (char *)&value witness table for Builtin.BridgeObject + 64;
            v19[27] = (char *)&value witness table for Builtin.BridgeObject + 64;
            v19[28] = &unk_216AC8;
            v19[29] = &unk_216AC8;
            v19[30] = (char *)&value witness table for Builtin.BridgeObject + 64;
            sub_67DE8( 319LL,  &qword_287080,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.RadioType);
            if (v14 <= 0x3F)
            {
              v19[31] = *(void *)(v13 - 8) + 64LL;
              v19[32] = &unk_216AE0;
              v19[33] = (char *)&value witness table for Builtin.BridgeObject + 64;
              sub_67DE8( 319LL,  &qword_287088,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Sort);
              if (v16 <= 0x3F)
              {
                v19[34] = *(void *)(v15 - 8) + 64LL;
                v19[35] = v6;
                sub_67DE8( 319LL,  (unint64_t *)&unk_287090,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb);
                if (v18 <= 0x3F)
                {
                  v19[36] = *(void *)(v17 - 8) + 64LL;
                  v19[37] = (char *)&value witness table for Builtin.BridgeObject + 64;
                  v19[38] = &unk_216B10;
                  swift_updateClassMetadata2(a1, 256LL, 39LL, v19, a1 + 80);
                }
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_B9440()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_activities));
}

uint64_t sub_B9454()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookAuthors));
}

uint64_t sub_B9468()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookTitles));
}

uint64_t sub_B947C()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appMusicArtistNames));
}

uint64_t sub_B9490(uint64_t a1, uint64_t a2)
{
  return sub_B96B4(a1, a2, &OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appName);
}

uint64_t sub_B949C()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appPlaylistTitles));
}

uint64_t sub_B94B0()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appShowTitles));
}

uint64_t sub_B94C4()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePlaylistTitles));
}

uint64_t sub_B94D8()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePodcastTitles));
}

uint64_t sub_B94EC()
{
  return swift_bridgeObjectRetain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_apps));
}

uint64_t sub_B9500()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 24LL));
}

uint64_t sub_B950C()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_attributes));
}

uint64_t sub_B9520()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_dateTime));
}

uint64_t sub_B9534@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10(*v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_decade, a1, &qword_284E18);
}

uint64_t sub_B9564()
{
  return swift_bridgeObjectRetain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_entities));
}

uint64_t sub_B9578()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_frequency);
}

uint64_t sub_B9594()
{
  return swift_bridgeObjectRetain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_genres));
}

uint64_t sub_B95A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32LL);
  swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 40LL));
  return v1;
}

uint64_t sub_B95D8@<X0>(uint64_t a1@<X8>)
{
  return sub_B9744(&OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType, &qword_284DC8, a1);
}

uint64_t sub_B95EC@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10(*v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_targetMediaType, a1, &qword_284DC8);
}

uint64_t sub_B961C()
{
  return swift_bridgeObjectRetain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_modifiers));
}

uint64_t sub_B9630()
{
  return swift_bridgeObjectRetain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_moods));
}

uint64_t sub_B9644@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10(*v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_noun, a1, &qword_284D88);
}

uint64_t sub_B9674()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_playlistTitles));
}

uint64_t sub_B9688()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_podcastTitles));
}

uint64_t sub_B969C(uint64_t a1, uint64_t a2)
{
  return sub_B96B4(a1, a2, &OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_newsPodcastTopicId);
}

uint64_t sub_B96A8(uint64_t a1, uint64_t a2)
{
  return sub_B96B4(a1, a2, &OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_newsPodcastIdentifier);
}

uint64_t sub_B96B4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t *)(*v3 + *a3);
  uint64_t v5 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  return v5;
}

uint64_t sub_B96EC()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioStationNames));
}

uint64_t sub_B9700@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10(*v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioType, a1, &qword_284D98);
}

uint64_t sub_B9730@<X0>(uint64_t a1@<X8>)
{
  return sub_B9744(&OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_reference, &qword_284DB8, a1);
}

uint64_t sub_B9744@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = *v3 + *a1;
  swift_beginAccess(v6, v8, 0LL, 0LL);
  return sub_FF10(v6, a3, a2);
}

uint64_t sub_B97A4()
{
  return swift_retain(*(void *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_resolvedReference));
}

uint64_t sub_B97B8()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_showTitles));
}

uint64_t sub_B97CC@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10(*v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_sort, a1, &qword_284DC0);
}

uint64_t sub_B97FC@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10(*v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb, a1, &qword_284DB0);
}

uint64_t sub_B982C()
{
  return swift_bridgeObjectRetain(*(void *)(*v0
                                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_audioSettingNames));
}

uint64_t sub_B9840()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appInferred);
}

uint64_t sub_B9854@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10( *v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_confirmationState,  a1,  &qword_284630);
}

unint64_t sub_B9888()
{
  unint64_t result = qword_2875E8;
  if (!qword_2875E8)
  {
    uint64_t v1 = type metadata accessor for NowPlayingIntent(255LL);
    unint64_t result = swift_getWitnessTable(&unk_216B28, v1);
    atomic_store(result, (unint64_t *)&qword_2875E8);
  }

  return result;
}

uint64_t sub_B98D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t static CommonMedia.makeSiriKitIntentHandler(app:intent:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v27;
  uint64_t v11 = v28;
  sub_6EA8(v26, v27);
  uint64_t v12 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v10, v11);
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  uint64_t v16 = AirPlayRouteProvider.init(refId:)(v12, v14);
  sub_6C3C(v26);
  uint64_t v27 = v15;
  uint64_t v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v16;
  v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v17 = sub_10974(v25);
  static DeviceProvider.shared.getter(v17);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  uint64_t v18 = sub_B9A94();
  uint64_t v20 = v19;
  static CommonMedia.makeSiriKitIntentHandler(_:_:_:_:_:_:)( a1,  a2,  v26,  (uint64_t)v25,  (os_log_s *)v22,  v18,  v19,  a3,  a5,  a4);
  swift_bridgeObjectRelease(v20);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

uint64_t sub_B9A94()
{
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  sub_6EA8(v4, v5);
  uint64_t v2 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v0, v1);
  sub_6C3C(v4);
  return v2;
}

uint64_t static CommonMedia.makeSiriKitIntentHandler(_:_:_:_:_:_:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, os_log_s *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  os_log_t v248 = a5;
  uint64_t v258 = (uint8_t *)a4;
  uint64_t v249 = a3;
  uint64_t v263 = a1;
  uint64_t v251 = type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v252 = *(uint8_t **)(v251 - 8);
  uint64_t v15 = __chkstk_darwin(v251);
  uint64_t v247 = &v235[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v15);
  uint64_t v250 = &v235[-v17];
  uint64_t v262 = type metadata accessor for Logger(0LL);
  uint64_t v261 = *(uint64_t (***)(_BYTE *, uint64_t, uint64_t))(v262 - 8);
  uint64_t v18 = __chkstk_darwin(v262);
  uint64_t v256 = &v235[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v255 = &v235[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v260 = &v235[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v245 = &v235[-v25];
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = &v235[-v27];
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v246 = &v235[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = &v235[-v32];
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = &v235[-v35];
  __chkstk_darwin(v34);
  uint64_t v38 = &v235[-v37];
  *(void *)&__int128 v265 = a2;
  uint64_t v253 = a10;
  uint64_t v257 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  id v40 = a2;
  uint64_t v41 = sub_6C5C((uint64_t *)&unk_286C70);
  uint64_t v259 = AssociatedTypeWitness;
  if ((swift_dynamicCast(&v266, &v265, AssociatedTypeWitness, v41, 6LL) & 1) != 0)
  {
    sub_FF54(&v266, (uint64_t)&v269);
    sub_6EA8(&v269, v271);
    if (CommonIntentSignals.userAcceptedSiriForAirPlayTCCPrompt()())
    {
      uint64_t v42 = v40;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v43 = v262;
      uint64_t v44 = sub_6960(v262, (uint64_t)qword_2969C8);
      uint64_t v45 = v261;
      uint64_t v46 = v261[2](v38, v44, v43);
      uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
      os_log_type_t v48 = static os_log_type_t.default.getter();
      BOOL v49 = os_log_type_enabled(v47, v48);
      uint64_t v50 = v263;
      if (v49)
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v51 = 0;
        _os_log_impl( &dword_0,  v47,  v48,  "CommonMedia#makeSiriKitIntentHandler User just accepted TCC initiated from the HomePod for an SFA request. Usi ng the dialog producing intent handler",  v51,  2u);
        swift_slowDealloc(v51, -1LL, -1LL);
      }

      ((void (*)(_BYTE *, uint64_t))v45[1])(v38, v43);
      id v52 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
      swift_retain(v50);
      id v53 = [v52 init];
      id v54 = v42;
      SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v50, v53, v54, v259);
      uint64_t v55 = type metadata accessor for SiriKitIntentHandler(0LL);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(a9, 0LL, 1LL, v55);
      return sub_6C3C(&v269);
    }

    sub_6C3C(&v269);
  }

  else
  {
    uint64_t v268 = 0LL;
    __int128 v266 = 0u;
    __int128 v267 = 0u;
    sub_1F6CC((uint64_t)&v266, &qword_2858C8);
  }

  BOOL v57 = sub_BB3E4(v263);
  sub_157C4((uint64_t)v258, (uint64_t)&v269);
  uint64_t v254 = a9;
  if (v57)
  {
    uint64_t v58 = v271;
    uint64_t v59 = v272;
    sub_6EA8(&v269, v271);
    LOBYTE(v5sub_6C3C(v0 + 8) = dispatch thunk of DeviceProviding.isPhone.getter(v58, v59);
    sub_157C4((uint64_t)&v269, (uint64_t)&v266);
    if ((v58 & 1) != 0)
    {
      sub_6C3C(&v266);
      sub_6C3C(&v269);
    }

    else
    {
      uint64_t v60 = *((void *)&v267 + 1);
      uint64_t v61 = v268;
      sub_6EA8(&v266, *((uint64_t *)&v267 + 1));
      LOBYTE(v60) = dispatch thunk of DeviceProviding.isIPad.getter(v60, v61);
      sub_6C3C(&v266);
      sub_6C3C(&v269);
      if ((v60 & 1) == 0) {
        goto LABEL_27;
      }
    }

    uint64_t v62 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v63 = swift_dynamicCastObjCClass(v40, v62);
    if (v63)
    {
      uint64_t v64 = (void *)v63;
      uint64_t v65 = type metadata accessor for AirPlayRouteSetupContext(0LL);
      id v66 = v40;
      uint64_t v244 = v65;
      uint64_t v67 = static AirPlayRouteSetupContext.shared(refId:)(a6, a7);
      if (v67)
      {
        uint64_t v68 = v67;
        id v242 = v64;
        id v243 = v40;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v69 = v262;
        uint64_t v70 = sub_6960(v262, (uint64_t)qword_2969C8);
        uint64_t v71 = v261;
        uint64_t v72 = (void (*)(void))v261[2];
        uint64_t v240 = v70;
        uint64_t v241 = (void (*)(_BYTE *, uint64_t, uint64_t))v72;
        v72(v36);
        id v73 = v66;
        swift_retain_n(v68, 2LL);
        id v74 = v73;
        uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
        os_log_type_t v76 = static os_log_type_t.debug.getter();
        int v77 = v76;
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v78 = swift_slowAlloc(22LL, -1LL);
          uint64_t v238 = swift_slowAlloc(64LL, -1LL);
          *(void *)&__int128 v266 = v238;
          *(_DWORD *)uint64_t v78 = 136315394;
          os_log_t v237 = v75;
          *(void *)&__int128 v265 = v68;
          uint64_t v79 = sub_10430( &qword_2858C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
          uint64_t v80 = v68;
          int v236 = v77;
          uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter(v244, v79);
          unint64_t v83 = v82;
          *(void *)&__int128 v265 = sub_6978(v81, v82, (uint64_t *)&v266);
          id v239 = v74;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);
          swift_release_n(v68, 2LL);
          swift_bridgeObjectRelease(v83);
          *(_WORD *)(v78 + sub_6C3C(v0 + 12) = 2080;
          id v84 = objc_msgSend(v242, "debugDescription", v78 + 14);
          uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
          unint64_t v87 = v86;

          *(void *)&__int128 v265 = sub_6978(v85, v87, (uint64_t *)&v266);
          id v74 = v239;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);

          unint64_t v88 = v87;
          uint64_t v68 = v80;
          swift_bridgeObjectRelease(v88);
          os_log_t v89 = v237;
          _os_log_impl( &dword_0,  v237,  (os_log_type_t)v236,  "CommonMedia#makeSiriKitIntentHandler Handling AirPlay Route setup for 3p app on iOS. Context: %s Intent: %s",  (uint8_t *)v78,  0x16u);
          uint64_t v90 = v238;
          swift_arrayDestroy(v238, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v90, -1LL, -1LL);
          swift_slowDealloc(v78, -1LL, -1LL);

          uint64_t v91 = v261[1];
        }

        else
        {

          swift_release_n(v68, 2LL);
          uint64_t v91 = v71[1];
        }

        uint64_t v92 = ((uint64_t (*)(_BYTE *, uint64_t))v91)(v36, v69);
        uint64_t v93 = v250;
        dispatch thunk of AirPlayRouteSetupContext.state.getter(v92);
        uint64_t v94 = v251;
        int v95 = (*((uint64_t (**)(_BYTE *, uint64_t))v252 + 11))(v93, v251);
        id v40 = v243;
        if (v95 != enum case for AirPlayRouteSetupState.none(_:))
        {
          if (v95 == enum case for AirPlayRouteSetupState.startedDeviceSearch(_:))
          {
            sub_157C4((uint64_t)v249, (uint64_t)&v266);
            unint64_t v176 = v74;
            uint64_t v177 = v68;
            uint64_t v178 = *((void *)&v267 + 1);
            uint64_t v179 = v268;
            sub_6EA8(&v266, *((uint64_t *)&v267 + 1));
            dispatch thunk of AirPlayRouteProviding.waitForDeviceDiscovery()(v178, v179);
            uint64_t v180 = *((void *)&v267 + 1);
            uint64_t v181 = v268;
            sub_6EA8(&v266, *((uint64_t *)&v267 + 1));
            dispatch thunk of AirPlayRouteProviding.setOutputDevices(_:)(v248, v180, v181);
          }

          else
          {
            if (v95 == enum case for AirPlayRouteSetupState.startedDeviceSearchWithRouteSetup(_:))
            {
              sub_157C4((uint64_t)v249, (uint64_t)&v266);
              unint64_t v176 = v74;
              uint64_t v177 = v68;
              uint64_t v182 = *((void *)&v267 + 1);
              uint64_t v183 = v268;
              sub_6EA8(&v266, *((uint64_t *)&v267 + 1));
              dispatch thunk of AirPlayRouteProviding.waitForDeviceDiscovery()(v182, v183);
              uint64_t v184 = *((void *)&v267 + 1);
            }

            else
            {
              if (v95 != enum case for AirPlayRouteSetupState.startedRouteSetup(_:))
              {
                if (v95 == enum case for AirPlayRouteSetupState.complete(_:))
                {
                  uint64_t v258 = (uint8_t *)v68;
                  __int128 v186 = v246;
                  v241(v246, v240, v69);
                  id v187 = v74;
                  uint64_t v188 = (os_log_s *)Logger.logObject.getter(v187);
                  os_log_type_t v189 = static os_log_type_t.info.getter(v188);
                  if (os_log_type_enabled(v188, v189))
                  {
                    uint64_t v190 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                    uint64_t v191 = swift_slowAlloc(32LL, -1LL);
                    *(void *)&__int128 v266 = v191;
                    *(_DWORD *)uint64_t v190 = 136315138;
                    uint64_t v252 = v190 + 4;
                    id v192 = [v187 debugDescription];
                    uint64_t v193 = static String._unconditionallyBridgeFromObjectiveC(_:)(v192);
                    unint64_t v195 = v194;

                    *(void *)&__int128 v265 = sub_6978(v193, v195, (uint64_t *)&v266);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);

                    swift_bridgeObjectRelease(v195);
                    _os_log_impl( &dword_0,  v188,  v189,  "CommonMedia#makeSiriKitIntentHandler AirPlay route setup is complete, no need to wait before execu ting Handle, intent: %s",  v190,  0xCu);
                    swift_arrayDestroy(v191, 1LL, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v191, -1LL, -1LL);
                    uint64_t v196 = v190;
                    id v40 = v243;
                    swift_slowDealloc(v196, -1LL, -1LL);
                    swift_release(v258);

                    ((void (*)(_BYTE *, uint64_t))v91)(v246, v262);
                  }

                  else
                  {

                    swift_release(v258);
                    ((void (*)(_BYTE *, uint64_t))v91)(v186, v69);
                  }
                }

                else
                {
                  if (v95 == enum case for AirPlayRouteSetupState.error(_:))
                  {
                    id v239 = v74;
                    v241(v28, v240, v69);
                    uint64_t v197 = swift_retain_n(v68, 2LL);
                    uint64_t v198 = (os_log_s *)Logger.logObject.getter(v197);
                    os_log_type_t v199 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v198, v199))
                    {
                      uint64_t v200 = v68;
                      uint64_t v201 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                      uint64_t v202 = swift_slowAlloc(32LL, -1LL);
                      *(void *)&__int128 v266 = v202;
                      *(_DWORD *)uint64_t v201 = 136315138;
                      *(void *)&__int128 v265 = v200;
                      uint64_t v203 = sub_10430( &qword_2858C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
                      uint64_t v204 = dispatch thunk of CustomStringConvertible.description.getter(v244, v203);
                      unint64_t v206 = v205;
                      *(void *)&__int128 v265 = sub_6978(v204, v205, (uint64_t *)&v266);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);
                      swift_release_n(v200, 2LL);
                      swift_bridgeObjectRelease(v206);
                      _os_log_impl( &dword_0,  v198,  v199,  "CommonMedia#makeSiriKitIntentHandler Something went wrong setting up AirPlay routes %s. Nothing to do here, will create error dialog in makePreHandleIntentOutput or makeIntentHandledResponse",  v201,  0xCu);
                      swift_arrayDestroy(v202, 1LL, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v202, -1LL, -1LL);
                      swift_slowDealloc(v201, -1LL, -1LL);

                      ((void (*)(_BYTE *, uint64_t))v91)(v28, v262);
                    }

                    else
                    {

                      swift_release_n(v68, 2LL);
                      ((void (*)(_BYTE *, uint64_t))v91)(v28, v69);
                      uint64_t v200 = v68;
                    }

                    uint64_t v229 = v254;
                    id v230 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
                    uint64_t v231 = v263;
                    swift_retain(v263);
                    id v232 = [v230 init];
                    id v233 = v239;
                    SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v231, v232, v233, v259);

                    swift_release(v200);
                    uint64_t v234 = type metadata accessor for SiriKitIntentHandler(0LL);
                    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v234 - 8) + 56LL))( v229,  0LL,  1LL,  v234);
                  }

                  uint64_t v207 = v245;
                  v241(v245, v240, v69);
                  id v208 = v74;
                  swift_retain_n(v68, 2LL);
                  id v209 = v208;
                  uint64_t v210 = (os_log_s *)Logger.logObject.getter(v209);
                  os_log_type_t v211 = static os_log_type_t.info.getter(v210);
                  int v212 = v211;
                  if (os_log_type_enabled(v210, v211))
                  {
                    uint64_t v213 = swift_slowAlloc(22LL, -1LL);
                    LODWORD(v25sub_6C3C(v0 + 8) = v212;
                    uint64_t v214 = v68;
                    uint64_t v215 = v213;
                    uint64_t v216 = (void *)swift_slowAlloc(64LL, -1LL);
                    uint64_t v249 = v216;
                    *(void *)&__int128 v266 = v216;
                    *(_DWORD *)uint64_t v215 = 136315394;
                    uint64_t v217 = v247;
                    os_log_t v248 = v210;
                    dispatch thunk of AirPlayRouteSetupContext.state.getter(v216);
                    uint64_t v218 = String.init<A>(describing:)(v217, v251);
                    unint64_t v220 = v219;
                    *(void *)&__int128 v265 = sub_6978(v218, v219, (uint64_t *)&v266);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);
                    swift_release_n(v214, 2LL);
                    swift_bridgeObjectRelease(v220);
                    *(_WORD *)(v215 + sub_6C3C(v0 + 12) = 2080;
                    id v221 = [v209 debugDescription];
                    uint64_t v222 = static String._unconditionallyBridgeFromObjectiveC(_:)(v221);
                    unint64_t v224 = v223;

                    uint64_t v94 = v251;
                    *(void *)&__int128 v265 = sub_6978(v222, v224, (uint64_t *)&v266);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);

                    swift_bridgeObjectRelease(v224);
                    os_log_t v225 = v248;
                    _os_log_impl( &dword_0,  v248,  (os_log_type_t)v258,  "CommonMedia#makeSiriKitIntentHandler Unexpected state of AirPlay route setup: %s, intent: %s",  (uint8_t *)v215,  0x16u);
                    uint64_t v226 = v249;
                    swift_arrayDestroy(v249, 2LL, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v226, -1LL, -1LL);
                    swift_slowDealloc(v215, -1LL, -1LL);
                    swift_release(v214);

                    uint64_t v227 = v245;
                    uint64_t v228 = v262;
                  }

                  else
                  {

                    swift_release_n(v68, 3LL);
                    uint64_t v227 = v207;
                    uint64_t v228 = v69;
                  }

                  ((void (*)(_BYTE *, uint64_t))v91)(v227, v228);
                  (*((void (**)(_BYTE *, uint64_t))v252 + 1))(v250, v94);
                }

                goto LABEL_27;
              }

              sub_157C4((uint64_t)v249, (uint64_t)&v266);
              uint64_t v184 = *((void *)&v267 + 1);
              unint64_t v176 = v74;
              uint64_t v177 = v68;
            }

            uint64_t v185 = v268;
            sub_6EA8(&v266, v184);
            dispatch thunk of AirPlayRouteProviding.waitForSetOutputDevices()(v184, v185);
          }

          (*(void (**)(uint64_t, void *, uint64_t))(v253 + 32))(v263, v176, v257);

          swift_release(v177);
          return sub_6C3C(&v266);
        }

        uint64_t v96 = v74;
        uint64_t v97 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v241)(v33, v240, v69);
        uint64_t v98 = (os_log_s *)Logger.logObject.getter(v97);
        os_log_type_t v99 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v98, v99))
        {
          uint64_t v100 = v68;
          os_log_type_t v101 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)os_log_type_t v101 = 0;
          _os_log_impl( &dword_0,  v98,  v99,  "CommonMedia#makeSiriKitIntentHandler Suppressing common WHA routes",  v101,  2u);
          uint64_t v102 = v101;
          uint64_t v68 = v100;
          swift_slowDealloc(v102, -1LL, -1LL);
        }

        ((void (*)(_BYTE *, uint64_t))v91)(v33, v69);
        id v103 = v242;
        INPlayMediaIntent.setShouldSuppressCommonWholeHouseAudioRoutes()();
        uint64_t v104 = v247;
        (*((void (**)(_BYTE *, void, uint64_t))v252 + 13))( v247,  enum case for AirPlayRouteSetupState.suppressedCommonRouteSetup(_:),  v94);
        dispatch thunk of AirPlayRouteSetupContext.state.setter(v104);
        os_log_type_t v105 = v249;
        uint64_t v106 = v68;
        uint64_t v107 = v249[3];
        uint64_t v108 = v249[4];
        sub_6EA8(v249, v107);
        sub_157C4((uint64_t)v105, (uint64_t)&v266);
        sub_157C4((uint64_t)v258, (uint64_t)&v265);
        sub_157C4((uint64_t)v248, (uint64_t)&v264);
        uint64_t v109 = swift_allocObject(&unk_26E0D0, 136LL, 7LL);
        sub_FF54(&v266, v109 + 16);
        sub_FF54(&v265, v109 + 56);
        sub_FF54(&v264, v109 + 96);
        dispatch thunk of AirPlayRouteProviding.getRouteIdsFrom(intent:completion:)(v103, sub_7F658, v109, v107, v108);
        swift_release(v109);

        swift_release(v106);
      }

      else
      {
      }
    }
  }

  else
  {
    sub_6C3C(&v269);
  }

BOOL sub_BB3E4(uint64_t a1)
{
  uint64_t v1 = App.appIdentifier.getter(a1);
  uint64_t v3 = v2;
  uint64_t v4 = static BundleIdentifiers.music.getter();
  uint64_t v6 = v5;
  if (v3)
  {
    if (v1 == v4 && v3 == v5) {
      goto LABEL_16;
    }
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3);
    swift_bridgeObjectRelease(v3);
    uint64_t v8 = swift_bridgeObjectRelease(v6);
    if ((v7 & 1) != 0) {
      return 0LL;
    }
  }

  else
  {
    uint64_t v8 = swift_bridgeObjectRelease(v5);
  }

  uint64_t v9 = App.appIdentifier.getter(v8);
  uint64_t v3 = v10;
  uint64_t v11 = static BundleIdentifiers.podcasts.getter();
  uint64_t v6 = v12;
  if (v3)
  {
    if (v9 == v11 && v3 == v12) {
      goto LABEL_16;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v3);
    swift_bridgeObjectRelease(v3);
    uint64_t v14 = swift_bridgeObjectRelease(v6);
    if ((v13 & 1) != 0) {
      return 0LL;
    }
  }

  else
  {
    uint64_t v14 = swift_bridgeObjectRelease(v12);
  }

  uint64_t v15 = App.appIdentifier.getter(v14);
  uint64_t v3 = v16;
  uint64_t v17 = static BundleIdentifiers.soundscapes.getter();
  uint64_t v6 = v18;
  if (v3)
  {
    if (v15 == v17 && v3 == v18)
    {
LABEL_16:
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v6);
      return 0LL;
    }

    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v3);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v6);
    return (v20 & 1) == 0;
  }

  else
  {
    swift_bridgeObjectRelease(v18);
    return 1LL;
  }

uint64_t sub_BB554(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - v13;
  if (a1)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v15 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v15, v8);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "CommonMedia#makeSiriKitIntentHandler Searching for output devices...", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v20 = a2[3];
    uint64_t v21 = a2[4];
    sub_6EA8(a2, v20);
    return dispatch thunk of AirPlayRouteProviding.startAirplayDiscovery(for:deviceProvider:mediaRemoteAPIProvider:)( a1,  a3,  a4,  v20,  v21);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v23, v8);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "CommonMedia#makeSiriKitIntentHandler Routes not found in the intent", v27, 2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }

uint64_t sub_BB8E8(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  uint64_t v6 = unk_2876D4;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_2876D0 + dword_2876D0);
  id v7 = a1;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc(v6);
  v3[5] = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_BB974;
  return v11((uint64_t)v7);
}

uint64_t sub_BB974(void *a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 32);
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v4 = *(void **)(*v1 + 24);
  uint64_t v7 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 40));

  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  return (*(uint64_t (**)(void))(v7 + 8))();
}

id sub_BBA58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DialogProducingIntentHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_BBA94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc(a3[1]);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_3B08C;
  return v6();
}

uint64_t sub_BBAE8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc(a4[1]);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_3B08C;
  return v7();
}

uint64_t sub_BBB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1LL, v6) == 1)
  {
    sub_1F6CC(a1, &qword_287688);
    uint64_t v8 = 7168LL;
    uint64_t v9 = *(void *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      uint64_t v10 = *(void *)(a3 + 24);
      uint64_t ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9, v12);
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      uint64_t v15 = v14;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }

  else
  {
    unsigned __int8 v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v8 = v16 | 0x1C00LL;
    uint64_t v9 = *(void *)(a3 + 16);
    if (v9) {
      goto LABEL_3;
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v15 = 0LL;
LABEL_6:
  uint64_t v17 = swift_allocObject(&unk_26E170, 32LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0LL;
    v20[1] = 0LL;
    os_log_type_t v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }

  else
  {
    os_log_type_t v18 = 0LL;
  }

  return swift_task_create(v8, v18, (char *)&type metadata for () + 8, &unk_2876C8, v17);
}

uint64_t sub_BBC88(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc(a2[1]);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_BBCEC;
  return v6(a1);
}

uint64_t sub_BBCEC()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_BBD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CustomStringConvertible.description.getter(a2, a3);
}

uint64_t type metadata accessor for DialogProducingIntentHandler()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin28DialogProducingIntentHandler);
}

uint64_t sub_BBD80()
{
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t sub_BBDB4()
{
  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_BBDE8()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc(dword_287694);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_11C64;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_287690 + dword_287690))(v2, v3, v4);
}

uint64_t sub_BBE58()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc(dword_2876A4);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_3B08C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2876A0 + dword_2876A0))(v2, v3, v4);
}

uint64_t sub_BBED4()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_BBF00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_2876B4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_3B08C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2876B0 + dword_2876B0))( a1,  v4,  v5,  v6);
}

uint64_t sub_BBF84()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_BBFA8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_2876C4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_11C64;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2876C0 + dword_2876C0))(a1, v4);
}

uint64_t sub_BC018(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = type metadata accessor for AirPlayRouteSetupState(0LL);
  v1[11] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[12] = v3;
  v1[13] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_2876D8);
  v1[14] = v4;
  v1[15] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v5 = (*(void *)(*(void *)(sub_6C5C((uint64_t *)&unk_2876E0) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[16] = swift_task_alloc(v5);
  v1[17] = swift_task_alloc(v5);
  v1[18] = swift_task_alloc(v5);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v1[19] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v1[20] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[21] = swift_task_alloc(v8);
  v1[22] = swift_task_alloc(v8);
  return swift_task_switch(sub_BC118, 0LL, 0LL);
}

uint64_t sub_BC118()
{
  *(void *)(v0 + 56) = *(void *)(v0 + 80);
  sub_BC728();
  if (CommonIntentSignals.userAcceptedSiriForAirPlayTCCPrompt()())
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v1 = *(void *)(v0 + 176);
    uint64_t v2 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v4 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl( &dword_0,  v6,  v7,  "DialogProducingIntentHandler#handle User just accepted TCC initiated from the HomePod for an SFA request. Using the dialog producing intent handler",  v8,  2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v11 = *(void *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    id v12 = [objc_allocWithZone(INPlayMediaIntentResponse) initWithCode:4 userActivity:0];
    goto LABEL_23;
  }

  type metadata accessor for AirPlayRouteSetupContext(0LL);
  static ExecutorProvider.shared.getter((void *)(v0 + 16));
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 48);
  sub_6EA8((void *)(v0 + 16), v13);
  uint64_t v15 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v13, v14);
  uint64_t v17 = v16;
  sub_6C3C((void *)(v0 + 16));
  uint64_t v18 = static AirPlayRouteSetupContext.shared(refId:)(v15, v17);
  uint64_t v19 = swift_bridgeObjectRelease(v17);
  uint64_t v74 = v18;
  if (!v18) {
    goto LABEL_16;
  }
  uint64_t v21 = *(void *)(v0 + 136);
  uint64_t v20 = *(void *)(v0 + 144);
  uint64_t v22 = *(void *)(v0 + 112);
  uint64_t v23 = *(void *)(v0 + 120);
  uint64_t v24 = *(void *)(v0 + 88);
  uint64_t v25 = *(void *)(v0 + 96);
  dispatch thunk of AirPlayRouteSetupContext.state.getter(v19);
  os_log_type_t v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
  v26(v20, 0LL, 1LL, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))( v21,  enum case for AirPlayRouteSetupState.error(_:),  v24);
  v26(v21, 0LL, 1LL, v24);
  uint64_t v27 = v23 + *(int *)(v22 + 48);
  sub_BC764(v20, v23);
  sub_BC764(v21, v27);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v28(v23, 1LL, v24) != 1)
  {
    uint64_t v32 = *(void *)(v0 + 88);
    sub_BC764(*(void *)(v0 + 120), *(void *)(v0 + 128));
    int v33 = v28(v27, 1LL, v32);
    uint64_t v35 = *(void *)(v0 + 136);
    uint64_t v34 = *(void *)(v0 + 144);
    uint64_t v36 = *(void *)(v0 + 128);
    if (v33 != 1)
    {
      uint64_t v72 = *(void *)(v0 + 120);
      uint64_t v39 = *(void *)(v0 + 96);
      uint64_t v40 = *(void *)(v0 + 104);
      uint64_t v41 = *(void *)(v0 + 88);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v40, v27, v41);
      uint64_t v42 = sub_10430( (unint64_t *)&unk_2876F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupState,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupState);
      char v43 = dispatch thunk of static Equatable.== infix(_:_:)(v36, v40, v41, v42);
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v44(v40, v41);
      sub_1F6CC(v35, (uint64_t *)&unk_2876E0);
      sub_1F6CC(v34, (uint64_t *)&unk_2876E0);
      v44(v36, v41);
      uint64_t v31 = sub_1F6CC(v72, (uint64_t *)&unk_2876E0);
      if ((v43 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }

    uint64_t v38 = *(void *)(v0 + 88);
    uint64_t v37 = *(void *)(v0 + 96);
    sub_1F6CC(*(void *)(v0 + 136), (uint64_t *)&unk_2876E0);
    sub_1F6CC(v34, (uint64_t *)&unk_2876E0);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
LABEL_13:
    sub_1F6CC(*(void *)(v0 + 120), &qword_2876D8);
    goto LABEL_16;
  }

  uint64_t v29 = *(void *)(v0 + 144);
  uint64_t v30 = *(void *)(v0 + 88);
  sub_1F6CC(*(void *)(v0 + 136), (uint64_t *)&unk_2876E0);
  sub_1F6CC(v29, (uint64_t *)&unk_2876E0);
  uint64_t v31 = sub_1F6CC(*(void *)(v0 + 120), (uint64_t *)&unk_2876E0);
LABEL_15:
  if ((dispatch thunk of AirPlayRouteSetupContext.errorReported.getter(v31) & 1) != 0)
  {
    uint64_t v45 = 4LL;
    goto LABEL_17;
  }

unint64_t sub_BC728()
{
  unint64_t result = qword_285320;
  if (!qword_285320)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_285320);
  }

  return result;
}

uint64_t sub_BC764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_2876E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t _s11descr26E191V27NeedsDisambiguationStrategyCMa(uint64_t a1)
{
  uint64_t result = qword_287728;
  if (!qword_287728) {
    return swift_getSingletonMetadata(a1, &_s11descr26E191V27NeedsDisambiguationStrategyCMn);
  }
  return result;
}

uint64_t sub_BC7E8(uint64_t a1)
{
  return sub_BC830(a1, 0xD000000000000020LL, 0x800000000021F940LL, &qword_287850);
}

uint64_t sub_BC80C(uint64_t a1)
{
  return sub_BC830(a1, 0xD000000000000019LL, 0x800000000021F920LL, &qword_287858);
}

uint64_t sub_BC830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin();
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = static DispatchQoS.userInteractive.getter(v13);
  static OS_dispatch_queue.Attributes.concurrent.getter(v16);
  uint64_t v17 = static DispatchQueues.queue(_:qos:attributes:)(a2, a3, v15, v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  *a4 = v17;
  return result;
}

void sub_BC934()
{
  qword_287860 = 204LL;
}

uint64_t sub_BC944(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v26 = a1;
  uint64_t v4 = type metadata accessor for DomainCode(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_287930);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for Completions.TimeoutMillis(0LL);
  uint64_t v15 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((sub_BDD8C() & 1) != 0)
  {
    if (qword_283870 != -1) {
      swift_once(&qword_283870, sub_BC7E8);
    }
    uint64_t v25 = qword_287850;
    if (qword_283878 != -1) {
      swift_once(&qword_283878, sub_BC80C);
    }
    uint64_t v24 = qword_287858;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))( v17,  enum case for Completions.TimeoutMillis.shazamKitRecognizer(_:),  v29);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for PlaybackCode.acousticIDTimeout(_:),  v8);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DomainCode.shazamKit(_:), v4);
    PlaybackCodeAndDescription.init(playbackCode:domainCode:errorDescription:)( v11,  v7,  0xD000000000000013LL,  0x800000000021F900LL);
    swift_storeEnumTagMultiPayload(v14, v12, 1LL);
    uint64_t v18 = (void *)swift_allocObject(&unk_26E1E8, 40LL, 7LL);
    uint64_t v20 = v26;
    uint64_t v19 = v27;
    v18[2] = v27;
    v18[3] = v20;
    uint64_t v21 = v28;
    void v18[4] = v28;
    id v22 = v19;
    swift_retain(v21);
    static Completions.timeout<A>(name:timeoutQueue:workQueue:completion:timeoutMillis:fileABC:defaultValue:_:)( 0xD000000000000020LL,  0x800000000021F8D0LL,  v25,  v24,  v30,  v31,  v17,  0LL,  v14,  sub_BFB7C,  v18,  v12);
    swift_release(v18);
    sub_1F6CC((uint64_t)v14, &qword_287930);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v29);
  }

  else
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for PlaybackCode.acousticIDGenericError(_:),  v8);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DomainCode.shazamKit(_:), v4);
    PlaybackCodeAndDescription.init(playbackCode:domainCode:errorDescription:)( v11,  v7,  0xD000000000000016LL,  0x800000000021F8B0LL);
    swift_storeEnumTagMultiPayload(v14, v12, 1LL);
    v30(v14);
    return sub_1F6CC((uint64_t)v14, &qword_287930);
  }

uint64_t sub_BCCAC(uint64_t a1, uint64_t a2, char *a3, void (*a4)(id), uint64_t a5)
{
  v42[1] = a5;
  char v43 = a4;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v42 - v15;
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v17 = sub_6960(v10, (uint64_t)qword_2969E0);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v19 = v18(v16, v17, v10);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "ShazamKitRecognizer#performMatch Entering dispatchGroup", v22, 2u);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v16, v10);
  dispatch_group_enter(*(dispatch_group_t *)&a3[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup]);
  uint64_t v24 = *(void **)&a3[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession];
  [v24 setDelegate:a3];
  uint64_t v25 = v18(v14, v17, v10);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "ShazamKitRecognizer#performMatch triggering matchAmbientAudioSnippet", v28, 2u);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  v23(v14, v10);
  id v29 = [v24 matchAmbientAudioSnippet];
  v43(v29);
  sub_1641C(0LL, (unint64_t *)&qword_287938, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v31 = (void *)swift_allocObject(&unk_26E210, 40LL, 7LL);
  uint64_t v32 = v44;
  uint64_t v33 = v45;
  v31[2] = a3;
  v31[3] = v32;
  _OWORD v31[4] = v33;
  aBlock[4] = sub_BFBB8;
  uint64_t v54 = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_6E7C;
  aBlock[3] = &unk_26E228;
  uint64_t v34 = _Block_copy(aBlock);
  uint64_t v35 = a3;
  uint64_t v36 = swift_retain(v33);
  uint64_t v37 = v46;
  static DispatchQoS.unspecified.getter(v36);
  os_log_type_t v52 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v38 = sub_6C5C(&qword_285480);
  sub_21358();
  uint64_t v39 = v49;
  uint64_t v40 = v51;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v52, v38);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v37, v39, v30, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
  return swift_release(v54);
}

uint64_t sub_BD0C0(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = sub_6C5C(&qword_287930);
  __chkstk_darwin(v4);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  [*(id *)(a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession) setDelegate:0];
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969E0);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "ShazamKitRecognizer#performMatch completed", v15, 2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v16 = a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result;
  swift_beginAccess(a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result, v19, 0LL, 0LL);
  sub_BFBC4(v16, (uint64_t)v6);
  a2(v6);
  return sub_1F6CC((uint64_t)v6, &qword_287930);
}

uint64_t sub_BD2A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    uint64_t v7 = (void *)_convertErrorToNSError(_:)(a1);
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v8 = sub_6960(v2, (uint64_t)qword_2969E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v2);
    id v9 = v7;
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc(12LL, -1LL);
      uint64_t v20 = v3;
      uint64_t v13 = (uint8_t *)v12;
      uint64_t v19 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v13 = 138412290;
      id v21 = v9;
      id v14 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      uint64_t v15 = v19;
      *uint64_t v19 = v9;

      _os_log_impl( &dword_0,  v10,  v11,  "ShazamKitRecognizer#sessionDidFindMatch Failed to add song to SHMediaLibrary: %@",  v13,  0xCu);
      uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v15, 1LL, v16);
      swift_slowDealloc(v15, -1LL, -1LL);
      uint64_t v17 = v13;
      uint64_t v3 = v20;
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    else
    {

      uint64_t v10 = (os_log_s *)v9;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }

  return result;
}

void sub_BD4B0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4(a2);
  swift_release(v3);
}

void sub_BD5DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v30 - v9;
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v11 = sub_6960(v4, (uint64_t)qword_2969E0);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v36(v10, v11, v4);
  id v12 = a1;
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = v32;
    uint64_t v35 = v2;
    *(_DWORD *)uint64_t v16 = 136315138;
    v30[1] = v16 + 4;
    uint64_t v31 = v16;
    uint64_t v17 = v11;
    id v18 = [v12 description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v34 = v8;
    unint64_t v21 = v20;

    uint64_t v11 = v17;
    uint64_t v37 = sub_6978(v19, v21, &v38);
    uint64_t v2 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);

    unint64_t v22 = v21;
    uint64_t v8 = v34;
    swift_bridgeObjectRelease(v22);
    uint64_t v23 = v31;
    _os_log_impl(&dword_0, v13, v14, "ShazamKitRecognizer#finishedManagedSession: %s", v31, 0xCu);
    uint64_t v24 = v32;
    swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    uint64_t v25 = *(void (**)(char *, uint64_t))(v33 + 8);
  }

  else
  {

    uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  }

  v25(v10, v4);
  [*(id *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession) setDelegate:0];
  uint64_t v26 = ((uint64_t (*)(char *, uint64_t, uint64_t))v36)(v8, v11, v4);
  os_log_type_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v29 = 0;
    _os_log_impl(&dword_0, v27, v28, "ShazamKitRecognizer#handleCompletion Triggering dispatchGroup leave", v29, 2u);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  v25(v8, v4);
  dispatch_group_leave(*(dispatch_group_t *)(v2
                                           + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup));
}

void sub_BD95C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969E0);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "ShazamKitRecognizer#handleCompletion Triggering dispatchGroup leave", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  dispatch_group_leave(*(dispatch_group_t *)(v1
                                           + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup));
}

id sub_BDAD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShazamKitRecognizer(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_BDB64()
{
  return type metadata accessor for ShazamKitRecognizer(0LL);
}

uint64_t type metadata accessor for ShazamKitRecognizer(uint64_t a1)
{
  uint64_t result = qword_287908;
  if (!qword_287908) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShazamKitRecognizer);
  }
  return result;
}

void sub_BDBA8(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_BDC2C(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(v2 - 8) + 64LL;
    void v4[3] = "(";
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
  }

void sub_BDC2C(uint64_t a1)
{
  if (!qword_287918)
  {
    uint64_t v2 = sub_45D50(&qword_287920);
    uint64_t v3 = type metadata accessor for PlaybackCodeAndDescription(255LL);
    uint64_t v4 = sub_10430( &qword_287928,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCodeAndDescription,  (uint64_t)&protocol conformance descriptor for PlaybackCodeAndDescription);
    unint64_t v5 = type metadata accessor for Result(a1, v2, v3, v4);
    if (!v6) {
      atomic_store(v5, (unint64_t *)&qword_287918);
    }
  }

uint64_t sub_BDCC0(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  return sub_BC944(a1, a2, a3, a4);
}

uint64_t sub_BDCE0(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_BFA24( a1,  a2,  "ShazamKitRecognizer#shouldUseAsyncNotification On tvOS we want to use the async notification mechanism, returning true",  1);
}

id sub_BDD00()
{
  return [*(id *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession) stopMatchingAmbientAudioSnippet];
}

void sub_BDD1C()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession);
  [v1 stopMatchingAmbientAudioSnippet];
  [v1 setDelegate:0];
  sub_BD95C();
}

uint64_t sub_BDD6C(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_BFA24(a1, a2, "ShazamKitRecognizer#enableLiveActivity false for non-iOS", 0);
}

id sub_BDD8C()
{
  uint64_t v0 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v68 - v9;
  id v11 = [(id)objc_opt_self(AVAudioSession) sharedInstance];
  id v76 = 0LL;
  id v12 = [v11 setActive:0 withOptions:1 error:&v76];

  id v13 = v76;
  if ((_DWORD)v12)
  {
    uint64_t v14 = qword_283890;
    id v15 = v76;
    if (v14 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v16 = sub_6960(v4, (uint64_t)qword_2969E0);
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
    id v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = v1;
      unint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl( &dword_0,  v18,  v19,  "ShazamKitRecognizer#deactivateAudioSession AVAudioSession logic change success",  v21,  2u);
      unint64_t v22 = v21;
      uint64_t v1 = v20;
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    uint64_t v24 = static os_signpost_type_t.event.getter(v23);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v25 = qword_296AA0;
    uint64_t v26 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v27 = swift_allocObject(v26, 72LL, 7LL);
    *(_OWORD *)(v27 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v27 + 56) = &type metadata for Int;
    *(void *)(v27 + 64) = &protocol witness table for Int;
    *(void *)(v27 + 3sub_6C3C(v0 + 2) = 0LL;
    static OSSignpostID.exclusive.getter(v27);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v24,  &dword_0,  v25,  "shazamKitAVAudioSessionDeactivate",  33LL,  2LL,  v3,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }

  else
  {
    unsigned int v73 = 0;
    id v28 = v76;
    uint64_t v29 = _convertNSErrorToError(_:)(v13);

    swift_willThrow(v30);
    uint64_t v72 = v29;
    uint64_t v31 = (void *)_convertErrorToNSError(_:)(v29);
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v32 = sub_6960(v4, (uint64_t)qword_2969E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v32, v4);
    id v33 = v31;
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    int v36 = v35;
    BOOL v37 = os_log_type_enabled(v34, v35);
    uint64_t v38 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
    uint64_t v74 = v3;
    uint64_t v75 = v0;
    if (v37)
    {
      int v71 = v36;
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      uint64_t v78 = v70;
      *(_DWORD *)uint64_t v39 = 136315138;
      v68[1] = v39 + 4;
      uint64_t v69 = v39;
      id v40 = [v33 localizedDescription];
      id v41 = v33;
      uint64_t v42 = v1;
      id v43 = v40;
      uint64_t v44 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      uint64_t v46 = v45;

      uint64_t v1 = v42;
      id v33 = v41;
      uint64_t v38 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
      id v76 = v44;
      uint64_t v77 = v46;
      uint64_t v47 = String.init<A>(_:)( &v76,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v49 = v48;
      id v76 = (id)sub_6978(v47, v48, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77);

      swift_bridgeObjectRelease(v49);
      uint64_t v50 = v69;
      _os_log_impl( &dword_0,  v34,  (os_log_type_t)v71,  "ShazamKitRecognizer#deactivateAudioSession AVAudioSession logic change failed: %s",  v69,  0xCu);
      uint64_t v51 = v70;
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v50, -1LL, -1LL);
    }

    else
    {
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    id v76 = [v33 code];
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v54 = v53;
    id v55 = [v33 *(SEL *)&v38[499]];
    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    uint64_t v58 = v57;

    uint64_t v60 = static os_signpost_type_t.event.getter(v59);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v61 = qword_296AA0;
    uint64_t v62 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v63 = swift_allocObject(v62, 112LL, 7LL);
    *(_OWORD *)(v63 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
    *(void *)(v63 + 56) = &type metadata for String;
    unint64_t v64 = sub_6DAC();
    *(void *)(v63 + 3sub_6C3C(v0 + 2) = v52;
    *(void *)(v63 + 40) = v54;
    *(void *)(v63 + 96) = &type metadata for String;
    *(void *)(v63 + 104) = v64;
    *(void *)(v63 + 64) = v64;
    *(void *)(v63 + 7sub_6C3C(v0 + 2) = v56;
    *(void *)(v63 + 80) = v58;
    swift_bridgeObjectRetain(v54);
    uint64_t v65 = swift_bridgeObjectRetain(v58);
    uint64_t v66 = v74;
    static OSSignpostID.exclusive.getter(v65);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v60,  &dword_0,  v61,  "shazamKitAVAudioSessionDeactivate",  33LL,  2LL,  v66,  "status=%@ localizedDescription=%@ enableTelemetry=YES",  53LL,  2,  v63);
    swift_bridgeObjectRelease(v63);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v66, v75);
    swift_errorRelease(v72);
    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v58);

    return (id)v73;
  }

  return v12;
}

void sub_BE430(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DomainCode(0LL);
  uint64_t v90 = *(char **)(v4 - 8);
  uint64_t v91 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = (uint8_t *)type metadata accessor for PlaybackCode(0LL);
  unint64_t v88 = (uint8_t *)*((void *)v7 - 1);
  os_log_t v89 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  id v11 = *(char **)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v92 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v86 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  os_log_type_t v19 = (char *)&v86 - v18;
  __chkstk_darwin(v17);
  uint64_t v93 = (char *)&v86 - v20;
  uint64_t v94 = sub_6C5C(&qword_287930);
  __chkstk_darwin(v94);
  unint64_t v22 = (uint64_t *)((char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v23 = [a1 mediaItems];
  uint64_t v24 = sub_1641C(0LL, &qword_287978, &OBJC_CLASS___SHMatchedMediaItem_ptr);
  uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0) {
      uint64_t v65 = v25;
    }
    else {
      uint64_t v65 = v25 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v25);
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(v25);
    if (v66)
    {
LABEL_3:
      unint64_t v87 = v19;
      if ((v25 & 0xC000000000000001LL) != 0)
      {
        os_log_type_t v19 = v11;
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v25);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          goto LABEL_26;
        }

        os_log_type_t v19 = v11;
        id v26 = *(id *)(v25 + 32);
      }

      uint64_t v27 = v26;
      swift_bridgeObjectRelease(v25);
      id v28 = [(id)objc_opt_self(SHMediaLibrary) defaultLibrary];
      uint64_t v29 = sub_6C5C(&qword_287980);
      uint64_t v30 = swift_allocObject(v29, 40LL, 7LL);
      *(_OWORD *)(v30 + swift_weakDestroy(v0 + 16) = xmmword_214980;
      *(void *)(v30 + 3sub_6C3C(v0 + 2) = v27;
      aBlock[0] = v30;
      specialized Array._endMutation()(v30);
      uint64_t v31 = aBlock[0];
      sub_1641C(0LL, &qword_287988, &OBJC_CLASS___SHMediaItem_ptr);
      id v32 = v27;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v31);
      aBlock[4] = (uint64_t)sub_BD2A8;
      void aBlock[5] = 0LL;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = (uint64_t)sub_BD4B0;
      aBlock[3] = (uint64_t)&unk_26E250;
      uint64_t v34 = _Block_copy(aBlock);
      [v28 addMediaItems:isa completionHandler:v34];
      _Block_release(v34);

      uint64_t v35 = type metadata accessor for ShazamKitMatch(0LL);
      swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
      uint64_t v9 = (char *)v32;
      uint64_t v6 = ShazamKitMatch.init(matchedSong:)(v32);
      *unint64_t v22 = v6;
      swift_storeEnumTagMultiPayload(v22, v94, 0LL);
      uint64_t v36 = (uint64_t)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result];
      swift_beginAccess(&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result], aBlock, 33LL, 0LL);
      swift_retain(v6);
      sub_BFC0C((uint64_t)v22, v36);
      swift_endAccess(aBlock);
      if (qword_283890 == -1)
      {
LABEL_7:
        uint64_t v37 = sub_6960(v10, (uint64_t)qword_2969E0);
        uint64_t v38 = v19;
        uint64_t v39 = (void (*)(char *))*((void *)v19 + 2);
        id v40 = v93;
        uint64_t v94 = v37;
        v39(v93);
        id v41 = v9;
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v92 = v2;
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v91 = swift_slowAlloc(32LL, -1LL);
          aBlock[0] = v91;
          os_log_t v89 = v44;
          *(_DWORD *)uint64_t v44 = 136315138;
          unint64_t v88 = v44 + 4;
          id v45 = [v41 description];
          uint64_t v46 = v39;
          uint64_t v47 = v41;
          unint64_t v48 = v6;
          uint64_t v49 = v10;
          id v50 = v45;
          uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
          uint64_t v90 = v38;
          unint64_t v53 = v52;

          uint64_t v10 = v49;
          uint64_t v6 = v48;
          id v41 = v47;
          uint64_t v39 = v46;
          uint64_t v54 = v51;
          uint64_t v2 = v92;
          uint64_t v95 = sub_6978(v54, v53, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, aBlock);

          swift_bridgeObjectRelease(v53);
          id v55 = v89;
          _os_log_impl( &dword_0,  v42,  v43,  "ShazamKitRecognizer#sessionDidFindMatch Got the following result: %s",  v89,  0xCu);
          uint64_t v56 = v91;
          swift_arrayDestroy(v91, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v56, -1LL, -1LL);
          swift_slowDealloc(v55, -1LL, -1LL);

          uint64_t v57 = (void (*)(char *, uint64_t))*((void *)v90 + 1);
          v57(v93, v10);
        }

        else
        {

          uint64_t v57 = (void (*)(char *, uint64_t))*((void *)v38 + 1);
          v57(v40, v10);
        }

        uint64_t v58 = v87;
        [*(id *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession] setDelegate:0];
        uint64_t v59 = ((uint64_t (*)(char *, uint64_t, uint64_t))v39)(v58, v94, v10);
        uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v61 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = v2;
          uint64_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v63 = 0;
          _os_log_impl( &dword_0,  v60,  v61,  "ShazamKitRecognizer#handleCompletion Triggering dispatchGroup leave",  v63,  2u);
          unint64_t v64 = v63;
          uint64_t v2 = v62;
          swift_slowDealloc(v64, -1LL, -1LL);
        }

        v57(v58, v10);
        dispatch_group_leave(*(dispatch_group_t *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup]);

        swift_release(v6);
        return;
      }

void sub_BED3C(uint64_t a1)
{
  uint64_t v125 = type metadata accessor for DomainCode(0LL);
  uint64_t v2 = *(void (**)(void))(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v4 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v123 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  unint64_t v124 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_287930);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v106 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v106 - v23;
  if (a1)
  {
    os_log_type_t v117 = v2;
    os_log_type_t v114 = v22;
    uint64_t v113 = v21;
    os_log_type_t v118 = v20;
    swift_errorRetain(a1);
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v25 = sub_6960(v9, (uint64_t)qword_2969E0);
    id v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v119 = v25;
    uint64_t v120 = v26;
    ((void (*)(char *))v26)(v24);
    swift_errorRetain(a1);
    uint64_t v27 = swift_errorRetain(a1);
    id v28 = (os_log_s *)Logger.logObject.getter(v27);
    uint64_t v29 = v9;
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v28, v30);
    uint64_t v116 = v4;
    if (v31)
    {
      uint64_t v32 = swift_slowAlloc(12LL, -1LL);
      uint64_t v122 = v6;
      id v33 = (uint8_t *)v32;
      uint64_t v34 = swift_slowAlloc(32LL, -1LL);
      id v115 = v8;
      uint64_t v35 = v34;
      *(void *)&__int128 v132 = v34;
      *(_DWORD *)id v33 = 136315138;
      os_log_type_t v112 = v33 + 4;
      swift_getErrorValue(a1, v128, v127);
      uint64_t v36 = Error.localizedDescription.getter(v127[1], v127[2]);
      unint64_t v38 = v37;
      uint64_t v131 = sub_6978(v36, v37, (uint64_t *)&v132);
      uint64_t v4 = v116;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);
      swift_bridgeObjectRelease(v38);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl( &dword_0,  v28,  v30,  "ShazamKitRecognizer#sessionDidNotFindMatchForSignatureError Found no match for signature with error: %s",  v33,  0xCu);
      swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v39 = v35;
      uint64_t v8 = v115;
      swift_slowDealloc(v39, -1LL, -1LL);
      id v40 = v33;
      uint64_t v6 = v122;
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    id v55 = *(void (**)(char *, uint64_t))(v10 + 8);
    v55(v24, v29);
    uint64_t v56 = v29;
    uint64_t v57 = v124;
    uint64_t v121 = *(void *)(v121 + 104);
    ((void (*)(char *, void, uint64_t))v121)( v124,  enum case for PlaybackCode.acousticIDGenericError(_:),  v123);
    uint64_t v58 = (void (*)(void))*((void *)v117 + 13);
    LODWORD(v1sub_6C3C(v0 + 12) = enum case for DomainCode.shazamKit(_:);
    os_log_type_t v117 = v58;
    v58(v4);
    PlaybackCodeAndDescription.init(playbackCode:domainCode:errorDescription:)( v57,  v4,  0xD000000000000013LL,  0x800000000021FA40LL);
    swift_storeEnumTagMultiPayload(v8, v6, 1LL);
    uint64_t v59 = v126 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result;
    swift_beginAccess(v126 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result, &v132, 33LL, 0LL);
    sub_BFC0C((uint64_t)v8, v59);
    swift_endAccess(&v132);
    uint64_t v60 = (void *)_convertErrorToNSError(_:)(a1);
    id v61 = [v60 userInfo];

    uint64_t v62 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v61,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    uint64_t v65 = v64;
    uint64_t v66 = v118;
    if (*(void *)(v62 + 16) && (unint64_t v67 = sub_9A744(v63, v64), (v68 & 1) != 0))
    {
      sub_6C00(*(void *)(v62 + 56) + 32 * v67, (uint64_t)&v132);
    }

    else
    {
      __int128 v132 = 0u;
      __int128 v133 = 0u;
    }

    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v62);
    if (*((void *)&v133 + 1))
    {
      uint64_t v69 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
      if ((swift_dynamicCast(&v131, &v132, (char *)&type metadata for Any + 8, v69, 6LL) & 1) != 0)
      {
        uint64_t v111 = v55;
        os_log_type_t v70 = (void *)v131;
        int v71 = v114;
        v120((uint64_t)v114, v119, v56);
        id v72 = v70;
        uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
        os_log_type_t v74 = static os_log_type_t.debug.getter();
        BOOL v75 = os_log_type_enabled(v73, v74);
        id v115 = v8;
        uint64_t v122 = v6;
        uint64_t v109 = v59;
        if (v75)
        {
          id v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v107 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v132 = v107;
          id v110 = v72;
          *(_DWORD *)id v76 = 136315138;
          uint64_t v106 = v76 + 4;
          id v77 = v110;
          uint64_t v78 = v56;
          id v79 = [v77 description];
          uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
          uint64_t v108 = a1;
          unint64_t v82 = v81;

          uint64_t v56 = v78;
          uint64_t v66 = v118;
          uint64_t v131 = sub_6978(v80, v82, (uint64_t *)&v132);
          id v72 = v110;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);

          unint64_t v83 = v82;
          a1 = v108;
          swift_bridgeObjectRelease(v83);
          _os_log_impl( &dword_0,  v73,  v74,  "ShazamKitRecognizer#sessionDidNotFindMatchForSignatureError This is the underlying error: %s",  v76,  0xCu);
          uint64_t v84 = v107;
          swift_arrayDestroy(v107, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v84, -1LL, -1LL);
          swift_slowDealloc(v76, -1LL, -1LL);
        }

        else
        {
        }

        id v55 = v111;
        v111(v71, v56);
        id v85 = [v72 code];
        if (qword_283880 != -1) {
          swift_once(&qword_283880, sub_BC934);
        }
        if (v85 == (id)qword_287860)
        {
          uint64_t v86 = v113;
          v120((uint64_t)v113, v119, v56);
          swift_errorRetain(a1);
          uint64_t v87 = swift_errorRetain(a1);
          unint64_t v88 = (os_log_s *)Logger.logObject.getter(v87);
          uint64_t v89 = a1;
          os_log_type_t v90 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v88, v90))
          {
            uint64_t v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v92 = swift_slowAlloc(32LL, -1LL);
            *(void *)&__int128 v132 = v92;
            id v110 = v72;
            *(_DWORD *)uint64_t v91 = 136315138;
            swift_getErrorValue(v89, v130, v129);
            uint64_t v93 = Error.localizedDescription.getter(v129[1], v129[2]);
            unint64_t v95 = v94;
            uint64_t v131 = sub_6978(v93, v94, (uint64_t *)&v132);
            id v72 = v110;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, &v132);
            swift_bridgeObjectRelease(v95);
            swift_errorRelease(v89);
            swift_errorRelease(v89);
            _os_log_impl( &dword_0,  v88,  v90,  "ShazamKitRecognizer#sessionDidNotFindMatchForSignatureError This is privacy acknowledgement error: %s",  v91,  0xCu);
            swift_arrayDestroy(v92, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v92, -1LL, -1LL);
            uint64_t v96 = v91;
            id v55 = v111;
            swift_slowDealloc(v96, -1LL, -1LL);
          }

          else
          {
            swift_errorRelease(v89);
            swift_errorRelease(v89);
          }

          v55(v86, v56);
          a1 = v89;
          uint64_t v97 = (uint64_t)v115;
          uint64_t v98 = v122;
          os_log_type_t v99 = v116;
          uint64_t v100 = v124;
          ((void (*)(char *, void, uint64_t))v121)( v124,  enum case for PlaybackCode.acousticIDPrivDiscAckNeeded(_:),  v123);
          ((void (*)(char *, void, uint64_t))v117)(v99, v112, v125);
          PlaybackCodeAndDescription.init(playbackCode:domainCode:errorDescription:)( v100,  v99,  0xD000000000000031LL,  0x800000000021FA60LL);
          swift_storeEnumTagMultiPayload(v97, v98, 1LL);
          uint64_t v101 = v109;
          swift_beginAccess(v109, &v132, 33LL, 0LL);
          sub_BFC0C(v97, v101);
          swift_endAccess(&v132);

          uint64_t v66 = v118;
        }

        else
        {
        }
      }
    }

    else
    {
      sub_1F6CC((uint64_t)&v132, &qword_284028);
    }

    [*(id *)(v126 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession) setDelegate:0];
    uint64_t v102 = ((uint64_t (*)(char *, uint64_t, uint64_t))v120)(v66, v119, v56);
    id v103 = (os_log_s *)Logger.logObject.getter(v102);
    os_log_type_t v104 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v103, v104))
    {
      os_log_type_t v105 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v105 = 0;
      _os_log_impl( &dword_0,  v103,  v104,  "ShazamKitRecognizer#handleCompletion Triggering dispatchGroup leave",  v105,  2u);
      swift_slowDealloc(v105, -1LL, -1LL);
    }

    v55(v66, v56);
    dispatch_group_leave(*(dispatch_group_t *)(v126
                                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup));
    swift_errorRelease(a1);
  }

  else
  {
    uint64_t v122 = v6;
    id v41 = v8;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v42 = sub_6960(v9, (uint64_t)qword_2969E0);
    os_log_type_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v44 = v43(v16, v42, v9);
    id v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl( &dword_0,  v45,  v46,  "ShazamKitRecognizer#sessionDidNotFindMatchForSignatureError Found no match for signature",  v47,  2u);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    unint64_t v48 = *(void (**)(char *, uint64_t))(v10 + 8);
    v48(v16, v9);
    *id v41 = 0LL;
    swift_storeEnumTagMultiPayload(v41, v122, 0LL);
    uint64_t v49 = v126;
    uint64_t v50 = v126 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result;
    swift_beginAccess(v126 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result, &v132, 33LL, 0LL);
    sub_BFC0C((uint64_t)v41, v50);
    swift_endAccess(&v132);
    [*(id *)(v49 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession) setDelegate:0];
    uint64_t v51 = v43(v13, v42, v9);
    unint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl(&dword_0, v52, v53, "ShazamKitRecognizer#handleCompletion Triggering dispatchGroup leave", v54, 2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v48(v13, v9);
    dispatch_group_leave(*(dispatch_group_t *)(v126
                                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup));
  }

uint64_t sub_BFA24(uint64_t (*a1)(void), uint64_t a2, const char *a3, char a4)
{
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969E0);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, a3, v15, 2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a1(a4 & 1);
}

uint64_t sub_BFB7C(uint64_t a1, uint64_t a2)
{
  return sub_BCCAC(a1, a2, *(char **)(v2 + 16), *(void (**)(id))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_BFB8C()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_BFBB8()
{
  return sub_BD0C0(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t sub_BFBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_287930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_BFC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_287930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_BFC5C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_8248C(v0, qword_2969C8);
  sub_6960(v0, (uint64_t)qword_2969C8);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  return Logger.init(_:)((id)qword_296AA0);
}

uint64_t sub_BFCDC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_8248C(v0, qword_2969E0);
  sub_6960(v0, (uint64_t)qword_2969E0);
  return Logger.init(subsystem:category:)( 0xD000000000000014LL,  0x800000000021FAC0LL,  0x63697473756F6341LL,  0xEA00000000004449LL);
}

uint64_t type metadata accessor for DetermineViewProvider(uint64_t a1)
{
  uint64_t result = qword_287A18;
  if (!qword_287A18) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DetermineViewProvider);
  }
  return result;
}

uint64_t sub_BFD90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v59 = a2;
  uint64_t v60 = a4;
  uint64_t v58 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v51 - v16;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v56 = *(void (**)(char *))(v12 + 16);
  uint64_t v57 = v18;
  v56(v17);
  id v19 = a1;
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v53 = a6;
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v55 = a5;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v54 = a7;
    uint64_t v25 = v24;
    uint64_t v62 = v24;
    unint64_t v52 = v15;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v51 = v23 + 4;
    uint64_t ObjectType = swift_getObjectType(v19);
    uint64_t v26 = sub_6C5C(&qword_287AD8);
    uint64_t v27 = String.init<A>(describing:)(&ObjectType, v26);
    unint64_t v29 = v28;
    uint64_t ObjectType = sub_6978(v27, v28, &v62);
    uint64_t v15 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v62);

    unint64_t v30 = v29;
    a6 = v53;
    swift_bridgeObjectRelease(v30);
    _os_log_impl(&dword_0, v20, v21, "DetermineViewProvider#makeViewsForHandleIntent called for Intent: %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v31 = v25;
    a7 = v54;
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v23;
    a5 = v55;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
  }

  id v33 = *(void (**)(char *, uint64_t))(v12 + 8);
  v33(v17, v11);
  uint64_t v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v15, v57, v11);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    unint64_t v37 = v15;
    unint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v38 = 0;
    _os_log_impl(&dword_0, v35, v36, "DetermineViewProvider#makeViewsForHandleIntent no view for non-iOS", v38, 2u);
    uint64_t v39 = v38;
    uint64_t v15 = v37;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  v33(v15, v11);
  uint64_t v40 = v59;
  id v41 = (void *)swift_allocObject(&unk_26E290, 64LL, 7LL);
  uint64_t v42 = v58;
  _OWORD v41[2] = v40;
  void v41[3] = v42;
  uint64_t v43 = v60;
  v41[4] = v60;
  v41[5] = a6;
  v41[6] = a7;
  v41[7] = _swiftEmptyArrayStorage;
  swift_retain(v40);
  swift_retain(v43);
  id v44 = a6;
  id v45 = a7;
  id v46 = [v44 targetDeviceIds];
  if (v46
    && (uint64_t v47 = v46,
        uint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, &type metadata for String),
        v47,
        uint64_t v49 = *(void *)(v48 + 16),
        swift_bridgeObjectRelease(v48),
        v49))
  {
    sub_4EB44(a5, v44, (uint64_t)sub_C01A0, (uint64_t)v41);
  }

  else
  {
    sub_4B40C(a5, v44, (uint64_t)sub_C01A0, (uint64_t)v41);
  }

  return swift_release(v41);
}

uint64_t sub_C015C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_C01A0(void (*a1)(uint64_t, uint64_t *, uint64_t))
{
  return sub_113278( a1,  *(void **)(v1 + 16),  *(void (**)(__int128 *))(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
}

void *sub_C01B0(uint64_t a1, void *a2)
{
  uint64_t v57 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v4 = __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = v18;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v20 = (void *)swift_allocObject(updated, 56LL, 7LL);
  v20[2] = 0xD000000000000011LL;
  v20[3] = 0x800000000021D860LL;
  v20[5] = 0xD000000000000019LL;
  v20[6] = 0x800000000021E0C0LL;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  void v20[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)&v65);
  uint64_t v21 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v18, 1LL, 1LL, v21);
  unint64_t v56 = sub_7F548(&_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v22 = swift_retain(v20);
  uint64_t v55 = v15;
  uint64_t v23 = static FeatureFlagProvider.shared.getter(v22);
  static StringsFileResolver.shared.getter(v23);
  uint64_t v24 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v25 = swift_allocObject(v24, 168LL, 7LL);
  uint64_t v26 = v10;
  uint64_t v27 = v15;
  uint64_t v28 = v9;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v60(v13, v27, v9);
  uint64_t v29 = v59;
  unint64_t v30 = v6;
  uint64_t v31 = v6;
  uint64_t v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v31, v8, v57);
  id v33 = v58;
  uint64_t v58 = v13;
  uint64_t v34 = sub_EE3F0(v20, v63, v56, &v65, v33, v13, v30, v25);
  swift_release(v20);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  os_log_type_t v36 = v55;
  v35(v8, v32);
  uint64_t v59 = *(void *)(v26 + 8);
  ((void (*)(char *, uint64_t))v59)(v36, v28);
  uint64_t v66 = v32;
  unint64_t v67 = &protocol witness table for StringsFileResolver;
  sub_10974(&v65);
  uint64_t v37 = swift_retain(v34);
  static StringsFileResolver.shared.getter(v37);
  uint64_t v38 = sub_6C5C(&qword_287C30);
  uint64_t v39 = swift_allocObject(v38, 64LL, 7LL);
  sub_FF54(&v65, v39 + 16);
  *(void *)(v39 + 56) = v34;
  uint64_t v66 = v28;
  unint64_t v67 = &protocol witness table for FeatureFlagProvider;
  sub_10974(&v65);
  uint64_t v40 = swift_retain(v34);
  static FeatureFlagProvider.shared.getter(v40);
  uint64_t v41 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v42 = swift_allocObject(v41, 56LL, 7LL);
  sub_FF54(&v65, v42 + 16);
  uint64_t v57 = v28;
  uint64_t v66 = v28;
  unint64_t v67 = &protocol witness table for FeatureFlagProvider;
  uint64_t v43 = sub_10974(&v65);
  static FeatureFlagProvider.shared.getter(v43);
  uint64_t v44 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v45 = static SiriKitTaskLoggingProvider.shared.getter(v44);
  v64[3] = v44;
  v64[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v64[0] = v45;
  uint64_t v46 = type metadata accessor for AppleMediaServicesProvider(0LL);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v47 = AppleMediaServicesProvider.init(featureFlagProvider:siriKitTaskLoggingProvider:)(&v65, v64);
  uint64_t v48 = static FeatureFlagProvider.shared.getter(v47);
  uint64_t v49 = static SiriKitTaskLoggingProvider.shared.getter(v48);
  if (qword_2838C0 != -1) {
    swift_once(&qword_2838C0, sub_F5CB0);
  }
  uint64_t v50 = qword_296A80;
  swift_retain(qword_296A80);
  static AceService.current.getter(&v65);
  uint64_t v52 = v57;
  uint64_t v51 = (uint64_t)v58;
  v60(v58, v36, v57);
  swift_retain(v47);
  os_log_type_t v53 = sub_C06D8(v34, v47, v51, v49, v50, &v65, v42, v39, v61);
  ((void (*)(char *, uint64_t))v59)(v36, v52);
  swift_release(v20);
  swift_release(v34);
  swift_release(v63);
  swift_release(v47);
  sub_6C3C(v62);
  return v53;
}

uint64_t sub_C064C()
{
  uint64_t v0 = sub_148510();
  return swift_deallocClassInstance(v0, 216LL, 7LL);
}

uint64_t _s11descr26E2C1V25NeedsConfirmationStrategyCMa(uint64_t a1)
{
  uint64_t result = qword_287B08;
  if (!qword_287B08) {
    return swift_getSingletonMetadata(a1, &_s11descr26E2C1V25NeedsConfirmationStrategyCMn);
  }
  return result;
}

uint64_t sub_C06A4(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 248);
}

void *sub_C06D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v27 = a1;
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = type metadata accessor for AppleMediaServicesProvider(0LL);
  uint64_t v40 = &protocol witness table for AppleMediaServicesProvider;
  *(void *)&__int128 v38 = a2;
  uint64_t v20 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v36 = v20;
  uint64_t v37 = &protocol witness table for FeatureFlagProvider;
  uint64_t v21 = sub_10974(&v35);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v21, a3, v20);
  uint64_t v33 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v34 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v32 = a4;
  uint64_t v22 = static DispatchQoS.userInteractive.getter(v33);
  static OS_dispatch_queue.Attributes.concurrent.getter(v22);
  uint64_t v23 = static DispatchQueues.queue(_:qos:attributes:)(0xD00000000000001FLL, 0x800000000021FB70LL, v19, v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  a9[26] = v23;
  a9[2] = v27;
  sub_FF54(&v38, (uint64_t)(a9 + 3));
  sub_FF54(&v35, (uint64_t)(a9 + 8));
  sub_FF54(&v32, (uint64_t)(a9 + 13));
  uint64_t v24 = v29;
  a9[18] = v28;
  sub_FF54(v24, (uint64_t)(a9 + 20));
  a9[25] = v30;
  a9[19] = v31;
  return a9;
}

uint64_t sub_C08B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_C08EC + 4 * asc_216E00[a1]))( 0x6E696D7265746564LL,  0xE900000000000065LL);
}

unint64_t sub_C08EC()
{
  return 0xD000000000000012LL;
}

uint64_t sub_C0908()
{
  return 2036427888LL;
}

uint64_t sub_C0918()
{
  return 6579297LL;
}

uint64_t sub_C0928()
{
  return 0x656C62616E65LL;
}

uint64_t sub_C093C()
{
  return 0x656C6261736964LL;
}

uint64_t sub_C0954()
{
  return 0x6269726373627573LL;
}

uint64_t sub_C0968()
{
  return 1701538156LL;
}

uint64_t sub_C0978()
{
  return 0x656C6666756873LL;
}

uint64_t sub_C0990()
{
  return 0x796669646F6DLL;
}

uint64_t sub_C09A4()
{
  return 0x656B696C736964LL;
}

void sub_C09BC(char a1)
{
  __asm { BR              X10 }

uint64_t sub_C09E8()
{
  uint64_t v1 = enum case for CommonAudio.Verb.determine(_:);
  uint64_t v2 = ((uint64_t (*)(void))type metadata accessor for CommonAudio.Verb)(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 104LL))(v0, v1, v2);
}

uint64_t getEnumTagSinglePayload for MediaPlayerVerb(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }

uint64_t storeEnumTagSinglePayload for MediaPlayerVerb(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF5) {
    return ((uint64_t (*)(void))((char *)&loc_C0B70 + 4 * byte_216E1B[v4]))();
  }
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_C0BA4 + 4 * byte_216E16[v4]))();
}

uint64_t sub_C0BA4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_C0BAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xC0BB4LL);
  }
  return result;
}

uint64_t sub_C0BC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xC0BC8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 10;
  return result;
}

uint64_t sub_C0BCC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_C0BD4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerVerb()
{
  return &type metadata for MediaPlayerVerb;
}

unint64_t sub_C0BF4()
{
  unint64_t result = qword_287C38;
  if (!qword_287C38)
  {
    unint64_t result = swift_getWitnessTable(&unk_216F20, &type metadata for MediaPlayerVerb);
    atomic_store(result, (unint64_t *)&qword_287C38);
  }

  return result;
}

uint64_t sub_C0C38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_C08B4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_C08B4(v2) && v5 == v6)
  {
    char v9 = 1;
    uint64_t v8 = v5;
  }

  else
  {
    uint64_t v8 = v6;
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v8);
  return v9 & 1;
}

Swift::Int sub_C0CC0()
{
  unsigned __int8 v1 = *v0;
  Hasher.init(_seed:)(v6, 0LL);
  uint64_t v2 = sub_C08B4(v1);
  uint64_t v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_C0D20(uint64_t a1)
{
  uint64_t v3 = sub_C08B4(*v1);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_C0D60(uint64_t a1)
{
  unsigned __int8 v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  uint64_t v3 = sub_C08B4(v2);
  uint64_t v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_C0DBC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_C0F60(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_C0DE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_C08B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_C0E10(void *a1@<X8>)
{
  *a1 = &off_26AA00;
}

uint64_t sub_C0E20(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_C0FA8();
  unint64_t v5 = sub_C0FEC();
  unint64_t v6 = sub_C1030();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_C0E84()
{
  unint64_t result = qword_287C40;
  if (!qword_287C40)
  {
    uint64_t v1 = sub_45D50(&qword_287C48);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_287C40);
  }

  return result;
}

unint64_t sub_C0ED4()
{
  unint64_t result = qword_287C50;
  if (!qword_287C50)
  {
    unint64_t result = swift_getWitnessTable(&unk_216E48, &type metadata for MediaPlayerVerb);
    atomic_store(result, (unint64_t *)&qword_287C50);
  }

  return result;
}

unint64_t sub_C0F1C()
{
  unint64_t result = qword_287C58;
  if (!qword_287C58)
  {
    unint64_t result = swift_getWitnessTable(&unk_216F60, &type metadata for MediaPlayerVerb);
    atomic_store(result, (unint64_t *)&qword_287C58);
  }

  return result;
}

unint64_t sub_C0F60(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26A8D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xB) {
    return 11LL;
  }
  else {
    return v3;
  }
}

unint64_t sub_C0FA8()
{
  unint64_t result = qword_287C60;
  if (!qword_287C60)
  {
    unint64_t result = swift_getWitnessTable(&unk_216EB0, &type metadata for MediaPlayerVerb);
    atomic_store(result, (unint64_t *)&qword_287C60);
  }

  return result;
}

unint64_t sub_C0FEC()
{
  unint64_t result = qword_287C68;
  if (!qword_287C68)
  {
    unint64_t result = swift_getWitnessTable(&unk_216E78, &type metadata for MediaPlayerVerb);
    atomic_store(result, (unint64_t *)&qword_287C68);
  }

  return result;
}

unint64_t sub_C1030()
{
  unint64_t result = qword_287C70;
  if (!qword_287C70)
  {
    unint64_t result = swift_getWitnessTable(&unk_216EE8, &type metadata for MediaPlayerVerb);
    atomic_store(result, (unint64_t *)&qword_287C70);
  }

  return result;
}

uint64_t sub_C1074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v77 = a2;
  uint64_t v3 = sub_6C5C(&qword_2860A8);
  __chkstk_darwin(v3);
  uint64_t v71 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  __chkstk_darwin(v5);
  char v68 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  __chkstk_darwin(v7);
  uint64_t v73 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_287C78);
  __chkstk_darwin(v9);
  unint64_t v67 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AudioUsoIntent.UsoNamespace(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v15 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for UsoEntityBuilder_common_App(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = UsoEntityBuilder_common_App.init()();
  dispatch thunk of UsoEntityBuilder_common_App.setName(value:)(v2[2], v2[3]);
  uint64_t v21 = *v2;
  uint64_t v20 = v2[1];
  (*(void (**)(char *, void, uint64_t))(v12 + 104))( v14,  enum case for AudioUsoIntent.UsoNamespace.appBundleId(_:),  v11);
  uint64_t v22 = swift_bridgeObjectRetain_n(v20, 2LL);
  uint64_t v23 = AudioUsoIntent.UsoNamespace.rawValue.getter(v22);
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v26 = v25;
  uint64_t v27 = v19;
  UsoIdentifier.init(value:appBundleId:namespace:)(v21, v20, v21, v20, v23, v26);
  dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)(v17);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v76);
  uint64_t v28 = static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)(v19);
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = type metadata accessor for UsoBuilderOptions(0LL);
    uint64_t v31 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v67, 1LL, 1LL, v30);
    uint64_t v32 = static UsoGraphBuilder.buildRootedEntityGraph(entityBuilder:options:)(v19, v31);
    sub_C15CC(v31);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v33 = v75;
    uint64_t v34 = sub_6960(v75, (uint64_t)qword_2969C8);
    uint64_t v36 = v73;
    uint64_t v35 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v34, v33);
    uint64_t v37 = swift_retain_n(v32, 2LL);
    __int128 v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      uint64_t v78 = v32;
      uint64_t v79 = v41;
      *(_DWORD *)uint64_t v40 = 136315138;
      uint64_t v76 = (uint64_t)(v40 + 4);
      uint64_t v42 = v32;
      uint64_t v43 = v29;
      uint64_t v44 = v27;
      uint64_t v45 = type metadata accessor for Graph(0LL);
      unint64_t v46 = sub_C1654();
      uint64_t v47 = v45;
      uint64_t v27 = v44;
      uint64_t v29 = v43;
      uint64_t v32 = v42;
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter(v47, v46);
      unint64_t v50 = v49;
      uint64_t v78 = sub_6978(v48, v49, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
      swift_release_n(v42, 2LL);
      swift_bridgeObjectRelease(v50);
      _os_log_impl( &dword_0,  v38,  v39,  "DisplayApp#toRREntity UsoBuilderConversionUtils.convertEntityBuilderToEntity creating UsoEntity: %s",  v40,  0xCu);
      swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v73, v75);
    }

    else
    {

      swift_release_n(v32, 2LL);
      uint64_t v51 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v33);
    }

    uint64_t v54 = v77;
    uint64_t v55 = v68;
    uint64_t v56 = UUID.init()(v51);
    uint64_t v57 = UUID.uuidString.getter(v56);
    uint64_t v59 = v58;
    uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v55, v70);
    uint64_t v61 = static BundleIdentifiers.sentinelBundleIdentifier.getter(v60);
    uint64_t v63 = v62;
    uint64_t v64 = v71;
    sub_C160C(v72, v71);
    RREntity.init(id:appBundleId:usoEntity:dataType:data:group:)( v57,  v59,  v61,  v63,  v29,  0LL,  0LL,  0LL,  0xF000000000000000LL,  v64);
    swift_release(v27);
    swift_release(v32);
    uint64_t v65 = type metadata accessor for RREntity(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56LL))( v54,  0LL,  1LL,  v65);
  }

  else
  {
    uint64_t v52 = type metadata accessor for RREntity(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v77, 1LL, 1LL, v52);
    return swift_release(v19);
  }

uint64_t sub_C15CC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_287C78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_C160C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2860A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_C1654()
{
  unint64_t result = qword_287C80;
  if (!qword_287C80)
  {
    uint64_t v1 = type metadata accessor for Graph(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Graph, v1);
    atomic_store(result, (unint64_t *)&qword_287C80);
  }

  return result;
}

uint64_t sub_C169C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a1);
    uint64_t v5 = 0LL;
    do
    {
      uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
      swift_bridgeObjectRetain_n(v6, 2LL);
      uint64_t v7 = swift_bridgeObjectRetain(v2);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
      uint64_t v11 = v2;
      sub_C1798(v6, (uint64_t)sub_C19F8, 0LL, isUniquelyReferenced_nonNull_native, &v11);
      uint64_t v9 = v11;
      swift_bridgeObjectRelease(0x8000000000000000LL);
      ++v5;
      swift_bridgeObjectRelease(v2);
      swift_bridgeObjectRelease(v6);
      uint64_t v2 = v9;
    }

    while (v3 != v5);
    swift_bridgeObjectRelease(a1);
    return v9;
  }

  else
  {
    swift_bridgeObjectRetain(a2);
  }

  return v2;
}

uint64_t sub_C1798(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v8 = -1LL << *(_BYTE *)(a1 + 32);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = -v8;
  uint64_t v38 = a1;
  uint64_t v39 = a1 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1LL << v11);
  }
  else {
    uint64_t v12 = -1LL;
  }
  uint64_t v40 = v9;
  uint64_t v41 = 0LL;
  uint64_t v42 = v12 & v10;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_C1A38(&v36);
  uint64_t v13 = *((void *)&v36 + 1);
  if (!*((void *)&v36 + 1))
  {
LABEL_19:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_A7610(v38);
    return swift_release(v44);
  }

  while (1)
  {
    uint64_t v16 = v36;
    sub_21964(&v37, v35);
    uint64_t v17 = *a5;
    unint64_t v19 = sub_9A744(v16, v13);
    uint64_t v20 = *(void *)(v17 + 16);
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (*(void *)(v17 + 24) >= v22)
    {
      if ((a4 & 1) != 0)
      {
        if ((v18 & 1) != 0) {
          goto LABEL_6;
        }
      }

      else
      {
        sub_1CC258();
        if ((v23 & 1) != 0) {
          goto LABEL_6;
        }
      }
    }

    else
    {
      sub_1CCAB0(v22, a4 & 1);
      unint64_t v24 = sub_9A744(v16, v13);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_22;
      }
      unint64_t v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_6:
        uint64_t v14 = 32 * v19;
        sub_6C00(*(void *)(*a5 + 56) + v14, (uint64_t)v33);
        sub_6C00((uint64_t)v33, (uint64_t)v34);
        sub_6C3C(v33);
        sub_6C3C(v35);
        swift_bridgeObjectRelease(v13);
        uint64_t v15 = (void *)(*(void *)(*a5 + 56) + v14);
        sub_6C3C(v15);
        sub_21964(v34, v15);
        goto LABEL_7;
      }
    }

    uint64_t v26 = (void *)*a5;
    *(void *)(*a5 + 8 * (v19 >> 6) + 64) |= 1LL << v19;
    uint64_t v27 = (uint64_t *)(v26[6] + 16 * v19);
    *uint64_t v27 = v16;
    v27[1] = v13;
    sub_21964(v35, (_OWORD *)(v26[7] + 32 * v19));
    uint64_t v28 = v26[2];
    BOOL v29 = __OFADD__(v28, 1LL);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_21;
    }
    v26[2] = v30;
LABEL_7:
    sub_C1A38(&v36);
    uint64_t v13 = *((void *)&v36 + 1);
    a4 = 1;
    if (!*((void *)&v36 + 1)) {
      goto LABEL_19;
    }
  }

  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_C19F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_6C00((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain(v3);
}

uint64_t sub_C1A38@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_6C00(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&__int128 v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain(v12);
    goto LABEL_23;
  }

  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1LL))
  {
    __break(1u);
    return result;
  }

  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }

    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }

      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }

        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }

  uint64_t v9 = 0LL;
  memset(v24, 0, sizeof(v24));
  __int128 v23 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  unint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_C1C0C((uint64_t)&v23, (uint64_t)v22);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_C1C54((uint64_t)v21);
  }

  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }

  return result;
}

uint64_t sub_C1C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_287C88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_C1C54(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_287C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void SearchForMedia.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( void *a1, void *a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v6 = v5;
  id v43 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  int64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  uint64_t v17 = swift_retain_n(a1, 2LL);
  int64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    int v39 = v20;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v40 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = (uint64_t)a1;
    uint64_t v45 = v40;
    uint64_t v42 = v6;
    *(_DWORD *)uint64_t v22 = 136315138;
    v37[1] = v22 + 4;
    uint64_t v38 = v22;
    uint64_t v23 = type metadata accessor for App(0LL);
    uint64_t v41 = v12;
    unint64_t v24 = a2;
    char v25 = a4;
    uint64_t v26 = a5;
    uint64_t v27 = v23;
    uint64_t v28 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v29 = v27;
    a5 = v26;
    a4 = v25;
    a2 = v24;
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter(v29, v28);
    unint64_t v32 = v31;
    uint64_t v44 = sub_6978(v30, v31, &v45);
    uint64_t v6 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v32);
    uint64_t v33 = v38;
    _os_log_impl( &dword_0,  v18,  (os_log_type_t)v39,  "HandleIntentStrategy#makeIntentHandledResponse for app: %s",  v38,  0xCu);
    uint64_t v34 = v40;
    swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v11);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }

  swift_retain(a1);
  swift_retain(v6);
  id v35 = a2;
  swift_retain(a5);
  id v36 = v43;
  sub_F33AC(v35, v6, a1, v35, a4, a5, v36);
  swift_release(v6);
  swift_release(a1);

  swift_release(a5);
}

uint64_t sub_C1F84( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7)
{
  uint64_t v326 = a7;
  v328 = a5;
  uint64_t v329 = a6;
  v334 = a4;
  v331 = a2;
  uint64_t v332 = a3;
  uint64_t v330 = a1;
  uint64_t v7 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v7);
  id v301 = (char *)&v294 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v321 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v320 = *(v321 - 1);
  __chkstk_darwin(v321);
  v319 = (char *)&v294 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v317 = type metadata accessor for Logger(0LL);
  uint64_t v318 = *(void *)(v317 - 8);
  uint64_t v10 = __chkstk_darwin(v317);
  uint64_t v303 = (char *)&v294 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v304 = (char *)&v294 - v13;
  __chkstk_darwin(v12);
  v323 = (char *)&v294 - v14;
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v294 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v333 = sub_6C5C(&qword_289340);
  uint64_t v18 = __chkstk_darwin(v333);
  v305 = (char *)&v294 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  id v306 = (char *)&v294 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v311 = (char *)&v294 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v312 = (char *)&v294 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (uint64_t *)((char *)&v294 - v26);
  uint64_t v28 = sub_6C5C(&qword_2845A0);
  uint64_t v29 = __chkstk_darwin(v28);
  v307 = (char *)&v294 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v310 = (char *)&v294 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v314 = (char *)&v294 - v34;
  __chkstk_darwin(v33);
  v327 = (char *)&v294 - v35;
  uint64_t v36 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v37 = __chkstk_darwin(v36);
  v316 = (char *)&v294 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = __chkstk_darwin(v37);
  v309 = (char *)&v294 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v313 = (void (*)(uint64_t *, uint64_t *))((char *)&v294 - v42);
  __chkstk_darwin(v41);
  v325 = (char *)&v294 - v43;
  uint64_t v44 = sub_6C5C(&qword_2845A8);
  uint64_t v45 = __chkstk_darwin(v44);
  v315 = (char *)&v294 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v308 = (char *)&v294 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v322 = (char *)&v294 - v50;
  __chkstk_darwin(v49);
  v324 = (uint64_t *)((char *)&v294 - v51);
  uint64_t v52 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)&v294 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v57 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v59 = (char *)&v294 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v60);
  uint64_t v62 = (uint64_t *)((char *)&v294 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(v330, (uint64_t)v62);
  if (swift_getEnumCaseMultiPayload(v62, v60) == 1)
  {
    uint64_t v63 = *v62;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))( v59,  enum case for AdditionalMetricsDescription.ModuleName.sfmhis(_:),  v56);
    (*(void (**)(char *, void, uint64_t))(v53 + 104))( v55,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v52);
    swift_getErrorValue(v63, v336, v335);
    uint64_t v64 = Error.localizedDescription.getter(v335[1], v335[2]);
    uint64_t v66 = v65;
    uint64_t v330 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v59,  v55,  v64,  v65,  2LL,  0LL);
    uint64_t v333 = v67;
    swift_bridgeObjectRelease(v66);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v56);
    uint64_t v69 = (void (*)(uint64_t *, uint64_t *))v331[11];
    uint64_t v68 = v331[12];
    v331 = sub_6EA8(v331 + 8, (uint64_t)v69);
    uint64_t v70 = enum case for ActivityType.failed(_:);
    uint64_t v71 = type metadata accessor for ActivityType(0LL);
    uint64_t v72 = *(void *)(v71 - 8);
    uint64_t v73 = (uint64_t)v324;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v72 + 104))(v324, v70, v71);
    uint64_t v74 = 1LL;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v73, 0LL, 1LL, v71);
    uint64_t v75 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v76 = (void (*)(void, void, void))v325;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v325, 1LL, 1LL, v75);
    uint64_t v77 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v78 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = (uint64_t)v327;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v327, v77, v78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0LL, 1LL, v78);
    unint64_t v81 = v334;
    id v82 = [v334 mediaItems];
    if (v82)
    {
      unint64_t v83 = v82;
      uint64_t v84 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v83, v84);

      if ((unint64_t)v85 >> 62)
      {
        if (v85 < 0) {
          uint64_t v247 = v85;
        }
        else {
          uint64_t v247 = v85 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v85);
        uint64_t v86 = (char *)_CocoaArrayWrapper.endIndex.getter(v247);
        swift_bridgeObjectRelease(v85);
        if (v86) {
          goto LABEL_5;
        }
      }

      else
      {
        uint64_t v86 = *(char **)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFF8LL));
        if (v86)
        {
LABEL_5:
          if ((v85 & 0xC000000000000001LL) != 0)
          {
            id v87 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v85);
            goto LABEL_8;
          }

          if (*(void *)((char *)&dword_10 + (v85 & 0xFFFFFFFFFFFFF8LL)))
          {
            id v87 = *(id *)(v85 + 32);
LABEL_8:
            unint64_t v88 = v87;
            swift_bridgeObjectRelease(v85);
            id v89 = [v88 type];

LABEL_77:
            os_log_t v248 = v81;
            uint64_t v249 = v333;
            dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v332,  v248,  v73,  v76,  v80,  v330,  v333,  v89,  0,  v69,  v68);
            swift_bridgeObjectRelease(v249);
            sub_1F6CC(v80, &qword_2845A0);
            sub_1F6CC((uint64_t)v76, (uint64_t *)&unk_286BD0);
            sub_1F6CC(v73, &qword_2845A8);
            uint64_t v338 = v63;
            char v339 = 1;
            swift_errorRetain(v63);
            v328(&v338);
            swift_errorRelease(v63);
            uint64_t v250 = (uint64_t *)&unk_286C60;
            uint64_t v251 = &v338;
            return sub_1F6CC((uint64_t)v251, v250);
          }

          __break(1u);
          goto LABEL_81;
        }
      }

      swift_bridgeObjectRelease(v85);
    }

    id v89 = 0LL;
    goto LABEL_77;
  }

  uint64_t v302 = v55;
  uint64_t v297 = v53;
  uint64_t v300 = v59;
  uint64_t v298 = v57;
  uint64_t v299 = v52;
  uint64_t v76 = (void (*)(void, void, void))v56;
  uint64_t v90 = *(int *)(v333 + 48);
  uint64_t v91 = type metadata accessor for TemplatingResult(0LL);
  v325 = *(char **)(v91 - 8);
  uint64_t v69 = (void (*)(uint64_t *, uint64_t *))*((void *)v325 + 4);
  uint64_t v330 = v91;
  v69(v27, v62);
  uint64_t v92 = *(void **)((char *)v62 + v90);
  v324 = v27;
  *(uint64_t *)((char *)v27 + v90) = (uint64_t)v92;
  v327 = v92;
  uint64_t v296 = v17;
  sub_1F4F10((uint64_t)v334, (uint64_t)v17);
  uint64_t v93 = v331;
  uint64_t v94 = v331[16];
  uint64_t v95 = v331[17];
  sub_6EA8(v331 + 13, v94);
  uint64_t v96 = dispatch thunk of FeatureFlagProviding.isAppIntentsEnabled.getter(v94, v95);
  uint64_t v97 = v93;
  if ((v96 & 1) == 0)
  {
    uint64_t v134 = App.appIdentifier.getter(v96);
    if (v135)
    {
      unint64_t v136 = v135;
    }

    else
    {
      uint64_t v134 = 0LL;
      unint64_t v136 = 0xE000000000000000LL;
    }

    uint64_t v340 = (uint64_t)_swiftEmptyArrayStorage;
    char v137 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v134, v136);
    swift_bridgeObjectRelease(v136);
    id v138 = v334;
    uint64_t v125 = (uint64_t)v76;
    if ((v137 & 1) == 0) {
      goto LABEL_64;
    }
    id v139 = [v334 mediaItems];
    if (!v139)
    {

      uint64_t v86 = v300;
      goto LABEL_40;
    }

    uint64_t v140 = v139;
    uint64_t v141 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v80 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v140, v141);

    if ((unint64_t)v80 >> 62)
    {
      if (v80 < 0) {
        uint64_t v281 = v80;
      }
      else {
        uint64_t v281 = v80 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v80);
      uint64_t v142 = _CocoaArrayWrapper.endIndex.getter(v281);
      swift_bridgeObjectRelease(v80);
    }

    else
    {
      uint64_t v142 = *(void *)((char *)&dword_10 + (v80 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v86 = v300;
    uint64_t v74 = (uint64_t)v303;
    if (!v142)
    {

      swift_bridgeObjectRelease(v80);
      goto LABEL_40;
    }

    if ((v80 & 0xC000000000000001LL) != 0) {
      goto LABEL_116;
    }
    if (*(void *)((char *)&dword_10 + (v80 & 0xFFFFFFFFFFFFF8LL)))
    {
      id v143 = *(id *)(v80 + 32);
      goto LABEL_32;
    }

    __break(1u);
LABEL_118:
    id v198 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v74);
LABEL_54:
    os_log_type_t v199 = v198;
    swift_bridgeObjectRelease(v74);
    id v200 = [v199 type];

    goto LABEL_113;
  }

  uint64_t v295 = (void (*)(char *, char *, uint64_t))v69;
  uint64_t v98 = v76;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  os_log_type_t v99 = v97;
  uint64_t v100 = v317;
  uint64_t v101 = sub_6960(v317, (uint64_t)qword_2969C8);
  uint64_t v102 = v318;
  uint64_t v103 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v318 + 16))(v323, v101, v100);
  os_log_type_t v104 = (os_log_s *)Logger.logObject.getter(v103);
  os_log_type_t v105 = static os_log_type_t.debug.getter();
  BOOL v106 = os_log_type_enabled(v104, v105);
  uint64_t v107 = v299;
  uint64_t v108 = v298;
  uint64_t v109 = v300;
  if (v106)
  {
    id v110 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v110 = 0;
    _os_log_impl( &dword_0,  v104,  v105,  "HandleIntentStrategy#makeIntentHandledResponse AppIntents enabled, skipping punchout response",  v110,  2u);
    swift_slowDealloc(v110, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v102 + 8))(v323, v100);
  (*(void (**)(char *, void, void))(v108 + 104))( v109,  enum case for AdditionalMetricsDescription.ModuleName.sfmhis(_:),  v98);
  uint64_t v111 = v297;
  os_log_type_t v112 = v302;
  (*(void (**)(char *, void, uint64_t))(v297 + 104))( v302,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v107);
  uint64_t v113 = v320;
  os_log_type_t v114 = v319;
  id v115 = v321;
  (*(void (**)(char *, void, void *))(v320 + 104))( v319,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v321);
  v323 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v109,  v112,  v114,  0LL,  1LL);
  uint64_t v326 = v116;
  (*(void (**)(char *, void *))(v113 + 8))(v114, v115);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v107);
  (*(void (**)(char *, void (*)(void, void, void)))(v108 + 8))(v109, v98);
  unint64_t v81 = v99;
  uint64_t v73 = v99[11];
  uint64_t v68 = v99[12];
  v321 = sub_6EA8(v99 + 8, v73);
  uint64_t v117 = enum case for ActivityType.completed(_:);
  uint64_t v118 = type metadata accessor for ActivityType(0LL);
  uint64_t v119 = *(void *)(v118 - 8);
  uint64_t v120 = v322;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 104))(v322, v117, v118);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v120, 0LL, 1LL, v118);
  uint64_t v121 = *(int *)(v333 + 48);
  uint64_t v122 = v325;
  uint64_t v76 = (void (*)(void, void, void))*((void *)v325 + 2);
  uint64_t v123 = v312;
  uint64_t v124 = v330;
  v76(v312, v324, v330);
  *(void *)&v123[v121] = v327;
  uint64_t v69 = v313;
  v295((char *)v313, v123, v124);
  (*((void (**)(void (*)(uint64_t *, uint64_t *), void, uint64_t, uint64_t))v122 + 7))( v69,  0LL,  1LL,  v124);
  uint64_t v125 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v126 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v127 = *(void *)(v126 - 8);
  uint64_t v80 = (uint64_t)v314;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 104))(v314, v125, v126);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v80, 0LL, 1LL, v126);
  uint64_t v86 = (char *)v334;
  id v128 = [v334 mediaItems];
  if (!v128) {
    goto LABEL_86;
  }
  uint64_t v129 = v128;
  uint64_t v130 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v129, v130);

  if (!((unint64_t)v74 >> 62))
  {
    if (!*(void *)((char *)&dword_10 + (v74 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_85:
      swift_bridgeObjectRelease(v74);
LABEL_86:
      id v133 = 0LL;
      goto LABEL_87;
    }

    goto LABEL_17;
  }

uint64_t SearchForMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v12);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "SearchForMedia+HandleIntentStrategy#makeFailureHandlingIntentResponse", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v20 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v20, v39);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  unint64_t v37 = 0LL;
  unint64_t v38 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(42LL);
  swift_bridgeObjectRelease(v38);
  unint64_t v37 = 0xD000000000000028LL;
  unint64_t v38 = 0x800000000021FB90LL;
  id v36 = [a3 code];
  v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(object);
  unint64_t v24 = v37;
  unint64_t v25 = v38;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v24;
  *(void *)(inited + 56) = v25;
  unint64_t v26 = sub_74D54(inited);
  uint64_t v27 = (void *)swift_allocObject(&unk_26E438, 64LL, 7LL);
  void v27[2] = v6;
  v27[3] = a1;
  uint64_t v28 = v34;
  uint64_t v29 = v35;
  void v27[4] = a2;
  void v27[5] = v28;
  void v27[6] = v29;
  v27[7] = a3;
  swift_retain(v6);
  swift_retain(a1);
  id v30 = a2;
  swift_retain(v29);
  id v31 = a3;
  sub_C4E70(v26, a1, (uint64_t)sub_C50A4, (uint64_t)v27, (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
  swift_bridgeObjectRelease(v26);
  return swift_release(v27);
}

void sub_C3FE4( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6, void *a7)
{
  id v125 = a7;
  uint64_t v130 = a5;
  uint64_t v131 = a6;
  unint64_t v136 = a2;
  id v137 = a4;
  uint64_t v129 = a3;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v123 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v135 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v135);
  uint64_t v122 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v127 = (char *)&v117 - v13;
  __chkstk_darwin(v12);
  uint64_t v134 = (char *)&v117 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  uint64_t v16 = __chkstk_darwin(v15);
  id v128 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v126 = (char *)&v117 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v20 = __chkstk_darwin(v19);
  __int128 v132 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v124 = (void (*)(char *, uint64_t *, uint64_t))((char *)&v117 - v22);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  uint64_t v24 = __chkstk_darwin(v23);
  id v133 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v117 - v26;
  uint64_t v28 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v31 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v36);
  unint64_t v38 = (uint64_t *)((char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v38);
  if (swift_getEnumCaseMultiPayload(v38, v36) == 1)
  {
    uint64_t v39 = *v38;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))( v35,  enum case for AdditionalMetricsDescription.ModuleName.sfmhis(_:),  v32);
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v28);
    swift_getErrorValue(v39, v141, v140);
    uint64_t v40 = Error.localizedDescription.getter(v140[1], v140[2]);
    uint64_t v42 = v41;
    uint64_t v134 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v35,  v31,  v40,  v41,  1LL,  0LL);
    uint64_t v135 = v43;
    swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    uint64_t v45 = v136[11];
    uint64_t v44 = v136[12];
    unint64_t v136 = sub_6EA8(v136 + 8, v45);
    uint64_t v46 = enum case for ActivityType.failed(_:);
    uint64_t v47 = type metadata accessor for ActivityType(0LL);
    uint64_t v48 = *(void *)(v47 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v27, v46, v47);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v27, 0LL, 1LL, v47);
    uint64_t v49 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v50 = (uint64_t)v124;
    (*(void (**)(void))(*(void *)(v49 - 8) + 56LL))();
    uint64_t v51 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v52 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = (uint64_t)v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v126, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0LL, 1LL, v52);
    id v55 = v137;
    id v56 = [v137 mediaItems];
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, v58);

      if ((unint64_t)v59 >> 62)
      {
        if (v59 < 0) {
          uint64_t v102 = v59;
        }
        else {
          uint64_t v102 = v59 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v59);
        uint64_t v103 = _CocoaArrayWrapper.endIndex.getter(v102);
        swift_bridgeObjectRelease(v59);
        if (v103) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v59 & 0xC000000000000001LL) != 0)
        {
          id v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v59);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v60 = *(id *)(v59 + 32);
LABEL_8:
          uint64_t v61 = v60;
          swift_bridgeObjectRelease(v59);
          id v62 = [v61 type];

LABEL_22:
          uint64_t v104 = v135;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v129,  v55,  v27,  v50,  v54,  v134,  v135,  v62,  0,  v45,  v44);
          swift_bridgeObjectRelease(v104);
          sub_1F6CC(v54, &qword_2845A0);
          sub_1F6CC(v50, (uint64_t *)&unk_286BD0);
          sub_1F6CC((uint64_t)v27, &qword_2845A8);
          v138[0] = v39;
          char v139 = 1;
          swift_errorRetain(v39);
          v130(v138);
          swift_errorRelease(v39);
          sub_1F6CC((uint64_t)v138, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_34;
      }

      swift_bridgeObjectRelease(v59);
    }

    id v62 = 0LL;
    goto LABEL_22;
  }

  uint64_t v63 = *(int *)(v135 + 48);
  uint64_t v64 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v126 = *(char **)(v64 - 8);
  uint64_t v65 = v28;
  uint64_t v124 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v126 + 4);
  uint64_t v66 = v134;
  v124(v134, v38, v64);
  uint64_t v67 = *(void **)((char *)v38 + v63);
  *(void *)&v66[v63] = v67;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))( v35,  enum case for AdditionalMetricsDescription.ModuleName.sfmhis(_:),  v32);
  uint64_t v68 = v65;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v65);
  id v69 = v67;
  v138[0] = [v125 code];
  uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v72 = v71;
  uint64_t v120 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v35,  v31,  v70,  v71,  2LL,  0LL);
  uint64_t v121 = v73;
  swift_bridgeObjectRelease(v72);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v68);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  uint64_t v74 = v136;
  uint64_t v75 = v136[11];
  uint64_t v118 = v136[12];
  uint64_t v119 = sub_6EA8(v136 + 8, v75);
  uint64_t v76 = enum case for ActivityType.failed(_:);
  uint64_t v77 = type metadata accessor for ActivityType(0LL);
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = v133;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 104))(v133, v76, v77);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v79, 0LL, 1LL, v77);
  uint64_t v80 = v134;
  uint64_t v81 = v135;
  uint64_t v82 = *(int *)(v135 + 48);
  unint64_t v83 = v126;
  uint64_t v84 = v127;
  uint64_t v117 = (void (*)(char *, char *, uint64_t))*((void *)v126 + 2);
  v117(v127, v134, v64);
  id v125 = v69;
  *(void *)&v84[v82] = v69;
  uint64_t v85 = v132;
  v124(v132, (uint64_t *)v84, v64);
  uint64_t v86 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v83 + 7);
  uint64_t v127 = (char *)v64;
  v86(v85, 0LL, 1LL, v64);
  uint64_t v87 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v88 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v128, v87, v88);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0LL, 1LL, v88);
  id v91 = v137;
  id v92 = [v137 mediaItems];
  uint64_t v93 = v74;
  uint64_t v94 = (uint64_t)v80;
  uint64_t v95 = v81;
  if (!v92) {
    goto LABEL_28;
  }
  uint64_t v96 = v92;
  uint64_t v97 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v98 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v96, v97);

  if ((unint64_t)v98 >> 62)
  {
    if (v98 < 0) {
      uint64_t v105 = v98;
    }
    else {
      uint64_t v105 = v98 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v98);
    uint64_t v106 = _CocoaArrayWrapper.endIndex.getter(v105);
    swift_bridgeObjectRelease(v98);
    if (v106) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }

  if (!*(void *)((char *)&dword_10 + (v98 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_27:
    swift_bridgeObjectRelease(v98);
LABEL_28:
    id v101 = 0LL;
    goto LABEL_29;
  }

void *SearchForMedia.HandleIntentStrategy.deinit()
{
  return v0;
}

uint64_t SearchForMedia.HandleIntentStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 200LL, 7LL);
}

uint64_t sub_C4B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_C4BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_C4C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

void sub_C4C84(void *a1, void *a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
}

uint64_t sub_C4CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_C4D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_C4D74(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return SearchForMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_C4D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_C4DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_C4E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_C4E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_C4E70(a1, a2, a3, a4, (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_C4E70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t (*)(), uint64_t))
{
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = v5[2];
  uint64_t v16 = v5[13];
  uint64_t v17 = v5[14];
  uint64_t v35 = 0LL;
  memset(v34, 0, sizeof(v34));
  uint64_t v25 = v16;
  uint64_t v26 = v17;
  unint64_t v27 = 0xD000000000000015LL;
  unint64_t v28 = 0x800000000021F440LL;
  uint64_t v29 = v15;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = v34;
  uint64_t v33 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v16,  v17,  0xD000000000000015LL,  0x800000000021F440LL,  a5,  (uint64_t)v24);
  sub_1F6CC((uint64_t)v34, &qword_283FE8);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, v18, v11);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "CommonDialogProvider#makeFailureHandlingIntentDialog", v22, 2u);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_C5060()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

void sub_C50A4(uint64_t a1)
{
}

uint64_t sub_C50B4(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_287C98,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for SearchForMedia.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for SearchForMedia.HandleIntentStrategy);
}

uint64_t type metadata accessor for SearchForMedia.HandleIntentStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin14SearchForMedia20HandleIntentStrategy);
}

uint64_t sub_C5100()
{
  uint64_t v0 = sub_6C5C(&qword_287E20);
  uint64_t v1 = type metadata accessor for PlaceHint(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = swift_allocObject(v0, v5 + 4 * v3, v4 | 7);
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
  uint64_t v7 = v6 + v5;
  uint64_t v8 = *(void (**)(uint64_t, void, uint64_t))(v2 + 104);
  v8(v7, enum case for PlaceHint.this(_:), v1);
  v8(v7 + v3, enum case for PlaceHint.here(_:), v1);
  v8(v7 + 2 * v3, enum case for PlaceHint.room(_:), v1);
  uint64_t result = ((uint64_t (*)(uint64_t, void, uint64_t))v8)(v7 + 3 * v3, enum case for PlaceHint.house(_:), v1);
  static INHomeAutomationEntityProvider.locationPlaceHints = v6;
  return result;
}

uint64_t *INHomeAutomationEntityProvider.locationPlaceHints.unsafeMutableAddressor()
{
  if (qword_283898 != -1) {
    swift_once(&qword_283898, sub_C5100);
  }
  return &static INHomeAutomationEntityProvider.locationPlaceHints;
}

uint64_t static INHomeAutomationEntityProvider.locationPlaceHints.getter()
{
  if (qword_283898 != -1) {
    swift_once(&qword_283898, sub_C5100);
  }
  return swift_bridgeObjectRetain(static INHomeAutomationEntityProvider.locationPlaceHints);
}

void *INHomeAutomationEntityProvider.haRoomNames()()
{
  return sub_C5718((SEL *)&selRef_roomNames);
}

Swift::String_optional __swiftcall INHomeAutomationEntityProvider.haHomeName()()
{
  uint64_t v0 = sub_C62C0((SEL *)&selRef_homeName);
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

void *INHomeAutomationEntityProvider.haZoneNames()()
{
  return sub_C5718((SEL *)&selRef_zoneNames);
}

void *INHomeAutomationEntityProvider.haAccessoryNames()()
{
  return sub_C5718((SEL *)&selRef_accessoryNames);
}

void *INHomeAutomationEntityProvider.haServiceNames()()
{
  uint64_t v1 = type metadata accessor for PlaceHint(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  uint64_t v50 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v9 = sub_6960(v5, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  id v10 = v0;
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  int v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    LODWORD(v4sub_6C3C(v0 + 7) = v12;
    os_log_t v48 = v11;
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = (void *)swift_slowAlloc(32LL, -1LL);
    uint64_t v52 = v46;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v14 = [v10 serviceNames];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for String);
    }

    else
    {
      uint64_t v16 = 0LL;
    }

    uint64_t v45 = v13 + 4;
    uint64_t v51 = v16;
    uint64_t v17 = sub_6C5C(&qword_287D98);
    uint64_t v18 = Optional.debugDescription.getter(v17);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease(v16);
    uint64_t v51 = sub_6978(v18, v20, (uint64_t *)&v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);

    swift_bridgeObjectRelease(v20);
    os_log_t v21 = v48;
    _os_log_impl( &dword_0,  v48,  (os_log_type_t)v47,  "INHomeAutomationEntityProvider#haServiceNames serviceNames: %s",  v13,  0xCu);
    uint64_t v22 = v46;
    swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  id v23 = [v10 serviceNames];
  if (!v23) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v24 = v23;
  uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String);

  uint64_t v26 = (os_log_s *)sub_CA170(v25);
  swift_bridgeObjectRelease(v25);
  if (qword_283898 != -1) {
    swift_once(&qword_283898, sub_C5100);
  }
  uint64_t v27 = static INHomeAutomationEntityProvider.locationPlaceHints;
  int64_t v28 = *(void *)(static INHomeAutomationEntityProvider.locationPlaceHints + 16);
  uint64_t v29 = _swiftEmptyArrayStorage;
  if (v28)
  {
    os_log_t v48 = v26;
    uint64_t v52 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(static INHomeAutomationEntityProvider.locationPlaceHints);
    sub_C70BC(0, v28, 0);
    unint64_t v30 = (*(unsigned __int8 *)(v50 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v47 = v27;
    unint64_t v31 = v27 + v30;
    uint64_t v32 = *(void *)(v50 + 72);
    uint64_t v33 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v50 + 16);
    do
    {
      uint64_t v34 = v49;
      uint64_t v35 = v33(v4, v31, v49);
      uint64_t v36 = PlaceHint.rawValue.getter(v35);
      uint64_t v38 = v37;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v4, v34);
      uint64_t v29 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
      {
        sub_C70BC(0, v29[2] + 1LL, 1);
        uint64_t v29 = v52;
      }

      unint64_t v40 = v29[2];
      unint64_t v39 = v29[3];
      if (v40 >= v39 >> 1)
      {
        sub_C70BC(v39 > 1, v40 + 1, 1);
        uint64_t v29 = v52;
      }

      v29[2] = v40 + 1;
      uint64_t v41 = &v29[2 * v40];
      v41[4] = v36;
      v41[5] = v38;
      v31 += v32;
      --v28;
    }

    while (v28);
    swift_bridgeObjectRelease(v47);
    uint64_t v26 = v48;
  }

  uint64_t v42 = sub_C9024((uint64_t)v29, (uint64_t)v26);
  swift_bridgeObjectRelease(v29);
  uint64_t v43 = sub_161C4((uint64_t)v42);
  swift_release(v42);
  return v43;
}

void *INHomeAutomationEntityProvider.haServiceGroups()()
{
  return sub_C5718((SEL *)&selRef_serviceGroups);
}

void *sub_C5718(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String);

  return (void *)v4;
}

void *INHomeAutomationEntityProvider.haFromEntities()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6C5C(&qword_287DA0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for FromEntity(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  unint64_t v31 = (char *)&v27 - v10;
  id v11 = [v1 intentFromEntities];
  if (!v11) {
    return _swiftEmptyArrayStorage;
  }
  int v12 = v11;
  unint64_t v13 = sub_CA204();
  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if (!((unint64_t)v14 >> 62))
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8LL));
    Swift::String_optional result = (void *)swift_bridgeObjectRetain(v14);
    if (v15) {
      goto LABEL_4;
    }
LABEL_22:
    uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease_n(v14, 2LL);
    return v18;
  }

  if (v14 < 0) {
    uint64_t v26 = v14;
  }
  else {
    uint64_t v26 = v14 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v14);
  Swift::String_optional result = (void *)_CocoaArrayWrapper.endIndex.getter(v26);
  uint64_t v15 = (uint64_t)result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_4:
  if (v15 >= 1)
  {
    uint64_t v17 = 0LL;
    unint64_t v32 = v14 & 0xC000000000000001LL;
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v29 = v15;
    unint64_t v30 = v9;
    uint64_t v28 = v14;
    do
    {
      if (v32) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
      }
      else {
        id v19 = *(id *)(v14 + 8 * v17 + 32);
      }
      unint64_t v20 = v19;
      id v33 = v19;
      sub_C5A68(&v33, (uint64_t)v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) == 1)
      {
        sub_1F6CC((uint64_t)v4, &qword_287DA0);
      }

      else
      {
        os_log_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        uint64_t v22 = v31;
        v21(v31, v4, v5);
        v21(v9, v22, v5);
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0) {
          uint64_t v18 = (void *)sub_1FFB8( 0,  v18[2] + 1LL,  1,  (unint64_t)v18,  &qword_287E18,  (uint64_t (*)(void))&type metadata accessor for FromEntity);
        }
        unint64_t v24 = v18[2];
        unint64_t v23 = v18[3];
        if (v24 >= v23 >> 1) {
          uint64_t v18 = (void *)sub_1FFB8( v23 > 1,  v24 + 1,  1,  (unint64_t)v18,  &qword_287E18,  (uint64_t (*)(void))&type metadata accessor for FromEntity);
        }
        v18[2] = v24 + 1;
        unint64_t v25 = (unint64_t)v18
        uint64_t v9 = v30;
        v21((char *)v25, v30, v5);
        uint64_t v14 = v28;
        uint64_t v15 = v29;
      }

      ++v17;
    }

    while (v15 != v17);
    goto LABEL_23;
  }

  __break(1u);
  return result;
}

uint64_t sub_C5A68@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v50 - v8;
  uint64_t v10 = type metadata accessor for FromEntity.FromEntityType(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v50 - v15;
  id v17 = *a1;
  id v18 = [*a1 value];
  if (v18)
  {
    id v19 = v18;
    unint64_t v20 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    id v54 = v21;

    uint64_t v22 = (char *)[v17 type];
    if ((unint64_t)(v22 - 1) >= 3)
    {
      uint64_t v53 = v20;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v37 = v57;
      uint64_t v38 = sub_6960(v57, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v7, v38, v37);
      id v39 = v17;
      unint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
      os_log_type_t v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v43 = v39;
        id v51 = v39;
        uint64_t v44 = v42;
        uint64_t v52 = v2;
        *(_DWORD *)uint64_t v42 = 134217984;
        v50[1] = v42 + 4;
        id v60 = [v43 type];
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);

        _os_log_impl( &dword_0,  v40,  v41,  "INHomeAutomationEntityProvider#haFromEntities Unknown from entity type found: %ld",  v44,  0xCu);
        swift_slowDealloc(v44, -1LL, -1LL);
      }

      else
      {

        unint64_t v40 = (os_log_s *)v39;
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v57);
      unint64_t v23 = (unsigned int *)&enum case for FromEntity.FromEntityType.homeAutomationService(_:);
      unint64_t v20 = v53;
    }

    else
    {
      unint64_t v23 = (unsigned int *)*(&off_26E4E0 + (void)(v22 - 1));
    }

    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v16, *v23, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    uint64_t v48 = v55;
    FromEntity.init(entityType:value:)(v14, v20, v54);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v49 = type metadata accessor for FromEntity(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))( v48,  0LL,  1LL,  v49);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = v57;
    uint64_t v25 = sub_6960(v57, (uint64_t)qword_2969C8);
    uint64_t v26 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v9, v25, v24);
    id v27 = v17;
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v54 = (id)swift_slowAlloc(32LL, -1LL);
      id v60 = v54;
      *(_DWORD *)unint64_t v30 = 136315138;
      uint64_t v52 = v30 + 4;
      uint64_t v53 = v30;
      id v31 = [v27 description];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      unint64_t v34 = v33;

      uint64_t v58 = sub_6978(v32, v34, (uint64_t *)&v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);

      swift_bridgeObjectRelease(v34);
      uint64_t v35 = v53;
      _os_log_impl( &dword_0,  v28,  v29,  "INHomeAutomationEntityProvider#haFromEntities Unable to get from entity value for entity: %s",  v53,  0xCu);
      id v36 = v54;
      swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v24);
    }

    uint64_t v45 = v55;
    uint64_t v46 = type metadata accessor for FromEntity(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))( v45,  1LL,  1LL,  v46);
  }

uint64_t INHomeAutomationEntityProvider.haDeviceQuantifier()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285140);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = [v2 intentDeviceQuantifier];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    unint64_t v15 = v14;

    swift_bridgeObjectRetain(v15);
    DeviceQuantifier.init(rawValue:)(v13, v15);
    uint64_t v16 = type metadata accessor for DeviceQuantifier(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1LL, v16) == 1)
    {
      sub_1F6CC((uint64_t)v10, &qword_285140);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v18 = sub_6960(v4, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
      uint64_t v19 = swift_bridgeObjectRetain(v15);
      unint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc(12LL, -1LL);
        os_log_t v29 = v20;
        unint64_t v23 = (uint8_t *)v22;
        uint64_t v30 = swift_slowAlloc(32LL, -1LL);
        uint64_t v33 = v30;
        uint64_t v31 = a1;
        *(_DWORD *)unint64_t v23 = 136315138;
        uint64_t v28 = v23 + 4;
        swift_bridgeObjectRetain(v15);
        uint64_t v32 = sub_6978(v13, v15, &v33);
        a1 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
        swift_bridgeObjectRelease_n(v15, 3LL);
        os_log_t v24 = v29;
        _os_log_impl( &dword_0,  v29,  v21,  "INHomeAutomationEntityProvider#haDeviceQuantifier Unable to get device quantifier for value: %s",  v23,  0xCu);
        uint64_t v25 = v30;
        swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1LL, -1LL);
        swift_slowDealloc(v23, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v15, 2LL);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, 1LL, 1LL, v16);
    }

    else
    {
      swift_bridgeObjectRelease(v15);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v10, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0LL, 1LL, v16);
    }
  }

  else
  {
    uint64_t v26 = type metadata accessor for DeviceQuantifier(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))( a1,  1LL,  1LL,  v26);
  }

Swift::String_optional __swiftcall INHomeAutomationEntityProvider.haDestinationDeviceId()()
{
  uint64_t v0 = sub_C62C0((SEL *)&selRef_destinationDeviceId);
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t sub_C62C0(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t INHomeAutomationEntityProvider.haDeviceType()@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = [v2 intentDeviceType];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    unint64_t v12 = v11;

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v13 = sub_6960(v4, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
    uint64_t v14 = swift_bridgeObjectRetain_n(v12, 2LL);
    unint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v24 = a1;
      uint64_t v17 = swift_slowAlloc(12LL, -1LL);
      uint64_t v25 = v10;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      uint64_t v27 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain(v12);
      uint64_t v26 = sub_6978(v25, v12, &v27);
      a1 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      swift_bridgeObjectRelease_n(v12, 3LL);
      _os_log_impl( &dword_0,  v15,  v16,  "INHomeAutomationEntityProvider#haDeviceType Getting device type for value: %s",  v18,  0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      unint64_t v20 = v18;
      uint64_t v10 = v25;
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v12, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    DeviceType.init(rawValue:)(v10, v12);
    uint64_t v23 = type metadata accessor for DeviceType(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))( a1,  0LL,  1LL,  v23);
  }

  else
  {
    uint64_t v21 = type metadata accessor for DeviceType(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))( a1,  1LL,  1LL,  v21);
  }

uint64_t INHomeAutomationEntityProvider.haPlaceHint()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_285130);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for PlaceHint(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v14 = [v1 intentPlaceHint];
  if (v14)
  {
    unint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v18 = v17;

    return PlaceHint.init(rawValue:)(v16, v18);
  }

  id v20 = [v1 serviceNames];
  if (!v20) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, 1LL, 1LL, v10);
  }
  uint64_t v21 = v20;
  uint64_t v59 = v9;
  uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for String);

  uint64_t v23 = sub_CA170(v22);
  swift_bridgeObjectRelease(v22);
  if (qword_283898 != -1) {
    swift_once(&qword_283898, sub_C5100);
  }
  int64_t v24 = *(void *)(static INHomeAutomationEntityProvider.locationPlaceHints + 16);
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v60 = v10;
  uint64_t v61 = v11;
  if (v24)
  {
    uint64_t v54 = v23;
    uint64_t v55 = a1;
    uint64_t v56 = v6;
    uint64_t v57 = v4;
    uint64_t v58 = v3;
    uint64_t v63 = _swiftEmptyArrayStorage;
    uint64_t v26 = static INHomeAutomationEntityProvider.locationPlaceHints;
    swift_bridgeObjectRetain(static INHomeAutomationEntityProvider.locationPlaceHints);
    sub_C70BC(0, v24, 0);
    unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v28 = v11;
    uint64_t v53 = v26;
    unint64_t v29 = v26 + v27;
    uint64_t v30 = *(void *)(v28 + 72);
    uint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v28 + 16);
    do
    {
      uint64_t v32 = v31(v13, v29, v10);
      uint64_t v33 = PlaceHint.rawValue.getter(v32);
      uint64_t v35 = v34;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v10);
      uint64_t v25 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
      {
        sub_C70BC(0, v25[2] + 1LL, 1);
        uint64_t v25 = v63;
      }

      unint64_t v37 = v25[2];
      unint64_t v36 = v25[3];
      if (v37 >= v36 >> 1)
      {
        sub_C70BC(v36 > 1, v37 + 1, 1);
        uint64_t v25 = v63;
      }

      v25[2] = v37 + 1;
      uint64_t v38 = &v25[2 * v37];
      v38[4] = v33;
      v38[5] = v35;
      v29 += v30;
      --v24;
      uint64_t v10 = v60;
    }

    while (v24);
    swift_bridgeObjectRelease(v53);
    a1 = v55;
    uint64_t v6 = v56;
    uint64_t v4 = v57;
    uint64_t v3 = v58;
    uint64_t v23 = v54;
  }

  Swift::Int v39 = sub_C97EC((uint64_t)v25, v23);
  swift_bridgeObjectRelease(v25);
  uint64_t v40 = sub_72544(v39);
  unint64_t v42 = v41;
  swift_release(v39);
  uint64_t v43 = (uint64_t)v59;
  if (v42)
  {
    swift_bridgeObjectRetain(v42);
    PlaceHint.init(rawValue:)(v40, v42);
    uint64_t v44 = v61;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v43, 1LL, v10) != 1)
    {
      swift_bridgeObjectRelease(v42);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(a1, v43, v10);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(a1, 0LL, 1LL, v10);
    }

    sub_1F6CC(v43, &qword_285130);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v45 = sub_6960(v3, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v45, v3);
    uint64_t v46 = swift_bridgeObjectRetain(v42);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = v6;
      uint64_t v57 = v4;
      uint64_t v50 = (uint8_t *)v49;
      id v51 = (void *)swift_slowAlloc(32LL, -1LL);
      uint64_t v63 = v51;
      uint64_t v58 = v3;
      *(_DWORD *)uint64_t v50 = 136315138;
      uint64_t v10 = v60;
      swift_bridgeObjectRetain(v42);
      uint64_t v62 = sub_6978(v40, v42, (uint64_t *)&v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      swift_bridgeObjectRelease_n(v42, 3LL);
      _os_log_impl( &dword_0,  v47,  v48,  "INHomeAutomationEntityProvider#haPlaceHint Unable to get place hint for value: %s",  v50,  0xCu);
      swift_arrayDestroy(v51, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v50, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    }

    else
    {

      swift_bridgeObjectRelease_n(v42, 2LL);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(a1, 1LL, 1LL, v10);
}

uint64_t INHomeAutomationEntityProvider.haReference()@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285128);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = [v2 intentReference];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    unint64_t v15 = v14;

    swift_bridgeObjectRetain(v15);
    Reference.init(rawValue:)(v13, v15);
    uint64_t v16 = type metadata accessor for Reference(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1LL, v16) == 1)
    {
      sub_1F6CC((uint64_t)v10, &qword_285128);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v18 = sub_6960(v4, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
      uint64_t v19 = swift_bridgeObjectRetain(v15);
      id v20 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc(12LL, -1LL);
        os_log_t v29 = v20;
        uint64_t v23 = (uint8_t *)v22;
        uint64_t v30 = swift_slowAlloc(32LL, -1LL);
        uint64_t v33 = v30;
        uint64_t v31 = a1;
        *(_DWORD *)uint64_t v23 = 136315138;
        uint64_t v28 = v23 + 4;
        swift_bridgeObjectRetain(v15);
        uint64_t v32 = sub_6978(v13, v15, &v33);
        a1 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
        swift_bridgeObjectRelease_n(v15, 3LL);
        os_log_t v24 = v29;
        _os_log_impl( &dword_0,  v29,  v21,  "INHomeAutomationEntityProvider#haReference Unable to get reference for value: %s",  v23,  0xCu);
        uint64_t v25 = v30;
        swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1LL, -1LL);
        swift_slowDealloc(v23, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v15, 2LL);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1, 1LL, 1LL, v16);
    }

    else
    {
      swift_bridgeObjectRelease(v15);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v10, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0LL, 1LL, v16);
    }
  }

  else
  {
    uint64_t v26 = type metadata accessor for Reference(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))( a1,  1LL,  1LL,  v26);
  }

void *sub_C6E84(uint64_t a1, uint64_t a2)
{
  return sub_C6EE0(a1, a2, (SEL *)&selRef_roomNames);
}

uint64_t sub_C6E90(uint64_t a1, uint64_t a2)
{
  return sub_C6F84(a1, a2, (SEL *)&selRef_homeName);
}

void *sub_C6E9C(uint64_t a1, uint64_t a2)
{
  return sub_C6EE0(a1, a2, (SEL *)&selRef_zoneNames);
}

void *sub_C6EA8(uint64_t a1, uint64_t a2)
{
  return sub_C6EE0(a1, a2, (SEL *)&selRef_accessoryNames);
}

void *sub_C6EB4()
{
  return INHomeAutomationEntityProvider.haServiceNames()();
}

void *sub_C6ED4(uint64_t a1, uint64_t a2)
{
  return sub_C6EE0(a1, a2, (SEL *)&selRef_serviceGroups);
}

void *sub_C6EE0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String);

  return (void *)v6;
}

void *sub_C6F38()
{
  return INHomeAutomationEntityProvider.haFromEntities()();
}

uint64_t sub_C6F58@<X0>(uint64_t a1@<X8>)
{
  return INHomeAutomationEntityProvider.haDeviceQuantifier()(a1);
}

uint64_t sub_C6F78(uint64_t a1, uint64_t a2)
{
  return sub_C6F84(a1, a2, (SEL *)&selRef_destinationDeviceId);
}

uint64_t sub_C6F84(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0LL;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t sub_C6FE4@<X0>(uint64_t a1@<X8>)
{
  return INHomeAutomationEntityProvider.haDeviceType()(a1);
}

uint64_t sub_C7004@<X0>(uint64_t a1@<X8>)
{
  return INHomeAutomationEntityProvider.haPlaceHint()(a1);
}

uint64_t sub_C7024@<X0>(uint64_t a1@<X8>)
{
  return INHomeAutomationEntityProvider.haReference()(a1);
}

uint64_t sub_C7044(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1FFB8( a1,  a2,  a3,  a4,  &qword_287DE8,  (uint64_t (*)(void))&type metadata accessor for SiriAudioDisambiguationItemModel);
}

uint64_t sub_C7058(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_C7104(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_C7074(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_C76D8( a1,  a2,  a3,  (void *)*v3,  &qword_287DC8,  (uint64_t (*)(void))&type metadata accessor for INMediaDestination);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_C70A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_C727C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_C70BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_C73E8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_C70D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_C76D8( a1,  a2,  a3,  (void *)*v3,  &qword_287E10,  (uint64_t (*)(void))&type metadata accessor for InstalledApp);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_C7104(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_30;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_6C5C(&qword_287E00);
    id v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_6C3C(v0 + 2) = v8;
    *((void *)v11 + sub_6C3C(v0 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }

  else
  {
    id v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + sub_6C3C(v0 + 2) = 0LL;
    goto LABEL_28;
  }

  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }

uint64_t sub_C727C(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_32;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_6C5C(&qword_287DC0);
    id v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + sub_6C3C(v0 + 2) = v8;
    *((void *)v11 + sub_6C3C(v0 + 3) = 2 * (v13 >> 5);
  }

  else
  {
    id v11 = (char *)_swiftEmptyArrayStorage;
  }

  unint64_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8]) {
      memmove(v14, v15, 32 * v8);
    }
    *((void *)a4 + sub_6C3C(v0 + 2) = 0LL;
    goto LABEL_30;
  }

  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }

uint64_t sub_C73E8(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_32;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_6C5C(&qword_284018);
    id v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + sub_6C3C(v0 + 2) = v8;
    *((void *)v11 + sub_6C3C(v0 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    id v11 = (char *)&_swiftEmptyArrayStorage;
  }

  unint64_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + sub_6C3C(v0 + 2) = 0LL;
    goto LABEL_30;
  }

  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }

uint64_t sub_C7550(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_30;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_6C5C(&qword_287DF0);
    id v11 = (char *)swift_allocObject(v10, 72 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_6C3C(v0 + 2) = v8;
    *((void *)v11 + sub_6C3C(v0 + 3) = 2 * ((uint64_t)(v12 - 32) / 72);
  }

  else
  {
    id v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[72 * v8]) {
      memmove(v13, v14, 72 * v8);
    }
    *((void *)a4 + sub_6C3C(v0 + 2) = 0LL;
    goto LABEL_28;
  }

  if (v14 >= &v13[72 * v8] || v13 >= &v14[72 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }

uint64_t sub_C76D8( char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }

      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v10 = a2;
  }

  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v13 = sub_6C5C(a5);
  uint64_t v14 = *(void *)(a6(0LL) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  size_t v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  if (v19 - v17 == 0x8000000000000000LL && v15 == -1) {
    goto LABEL_34;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  uint64_t v21 = a6(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  os_log_t v24 = (char *)v18 + v23;
  uint64_t v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(void *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }

    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }

    a4[2] = 0LL;
    goto LABEL_32;
  }

  uint64_t v26 = *(void *)(v22 + 72) * v11;
  unint64_t v27 = &v24[v26];
  unint64_t v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }

uint64_t sub_C78B8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v2;
  uint64_t v11 = *(void *)(*v2 + 40LL);
  uint64_t v12 = sub_CA240(&qword_287DD0, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
  swift_bridgeObjectRetain(v10);
  uint64_t v34 = a2;
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v12);
  uint64_t v14 = -1LL << *(_BYTE *)(v10 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v10;
  uint64_t v17 = v10 + 56;
  if (((*(void *)(v10 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) != 0)
  {
    uint64_t v30 = v3;
    uint64_t v31 = a1;
    uint64_t v32 = ~v14;
    uint64_t v18 = v7;
    uint64_t v19 = *(void *)(v7 + 72);
    uint64_t v33 = v18;
    id v20 = *(void (**)(void, void, void))(v18 + 16);
    while (1)
    {
      uint64_t v21 = v16;
      uint64_t v22 = v20;
      v20(v9, *(void *)(v16 + 48) + v19 * v15, v6);
      uint64_t v23 = sub_CA240(&qword_287DD8, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v34, v6, v23);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v33 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v32;
      uint64_t v16 = v21;
      id v20 = v22;
      if (((*(void *)(v17 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v7 = v33;
        goto LABEL_7;
      }
    }

    swift_bridgeObjectRelease(v21);
    v25(v34, v6);
    v22(v31, *(void *)(*v30 + 48LL) + v19 * v15, v6);
    return 0LL;
  }

  else
  {
    swift_bridgeObjectRelease(v10);
    id v20 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    unint64_t v27 = v34;
    v20(v9, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000LL;
    sub_C82F8((uint64_t)v9, v15, isUniquelyReferenced_nonNull_native);
    uint64_t v28 = *v3;
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v27, v6);
    return 1LL;
  }

uint64_t sub_C7B0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v24, *(void *)(*v3 + 40LL));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    uint64_t v13 = v12[1];
    BOOL v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      unint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48LL) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0LL;
    }

    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v19 = (void *)(v11 + 16 * v10);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20) & 1) != 0) {
        goto LABEL_7;
      }
    }
  }

  swift_bridgeObjectRelease(v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  swift_bridgeObjectRetain(a3);
  sub_C84EC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = *v3;
  *uint64_t v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1LL;
}

uint64_t sub_C7CB8(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_287DE0);
  uint64_t v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1LL);
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_39;
  }
  uint64_t v10 = 1LL << *(_BYTE *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  Swift::Int v39 = (void *)(v7 + 56);
  if (v10 < 64) {
    uint64_t v12 = ~(-1LL << v10);
  }
  else {
    uint64_t v12 = -1LL;
  }
  unint64_t v13 = v12 & v11;
  unint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v8 + 56;
  uint64_t result = swift_retain(v7);
  int64_t v16 = 0LL;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }

    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1LL))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }

    if (v20 >= v38) {
      goto LABEL_35;
    }
    unint64_t v21 = v39[v20];
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v38) {
        goto LABEL_35;
      }
      unint64_t v21 = v39[v16];
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v38) {
          goto LABEL_35;
        }
        unint64_t v21 = v39[v16];
        if (!v21) {
          break;
        }
      }
    }

LABEL_35:
  swift_release(v7);
  id v2 = v37;
  uint64_t v36 = 1LL << *(_BYTE *)(v7 + 32);
  if (v36 > 63) {
    bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *Swift::Int v39 = -1LL << v36;
  }
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = 0LL;
LABEL_39:
  uint64_t result = swift_release(v7);
  *id v2 = v9;
  return result;
}

    uint64_t v53 = v112;
    goto LABEL_36;
  }

  uint64_t v36 = v8[13];
  unint64_t v37 = v8[14];
  *(void *)&v115[0] = v112;
  int64_t v38 = *(void *)(v109 + 80);
  Swift::Int v39 = v112;
  uint64_t v40 = sub_6C5C(&qword_285BC8);
  unint64_t v41 = swift_dynamicCast(&v116, v115, v38, v40, 6LL);
  if ((v41 & 1) == 0)
  {
    uint64_t v118 = 0LL;
    uint64_t v116 = 0u;
    uint64_t v117 = 0u;
  }

  __chkstk_darwin(v41);
  *(&v104 - 10) = v36;
  *(&v104 - 9) = v37;
  *(&v104 - sub_6C3C(v0 + 8) = 0xD000000000000020LL;
  *(&v104 - sub_6C3C(v0 + 7) = 0x8000000000220B70LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v110,  v111,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v36,  v37,  0xD000000000000020LL,  0x8000000000220B70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v104 - 12));
  swift_bridgeObjectRelease(v25);
  sub_1F6CC((uint64_t)&v116, &qword_283FE8);
  return result;
}

Swift::Int sub_C801C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_6C5C(&qword_287E08);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    char v32 = v2;
    unint64_t v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    Swift::Int result = swift_retain(v3);
    int64_t v13 = 0LL;
    while (1)
    {
      if (v9)
      {
        unint64_t v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }

      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }

        if (v18 >= v10) {
          goto LABEL_36;
        }
        unint64_t v19 = v33[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v10) {
            goto LABEL_36;
          }
          unint64_t v19 = v33[v13];
          if (!v19)
          {
            int64_t v13 = v18 + 2;
            if (v18 + 2 >= v10) {
              goto LABEL_36;
            }
            unint64_t v19 = v33[v13];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v10)
              {
LABEL_36:
                swift_release(v3);
                id v2 = v32;
                uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *unint64_t v33 = -1LL << v31;
                }
                *(void *)(v3 + swift_weakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v13 = v20 + 1;
                  if (__OFADD__(v20, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v13 >= v10) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v33[v13];
                  ++v20;
                  if (v19) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v13 = v20;
            }
          }
        }

uint64_t sub_C82F8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  uint64_t v6 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_C7CB8(v12);
  }

  else
  {
    if (v11 > v10)
    {
      sub_C8684();
      goto LABEL_12;
    }

    sub_C8A58(v12);
  }

  uint64_t v13 = *v3;
  uint64_t v14 = *(void *)(*v3 + 40);
  uint64_t v15 = sub_CA240(&qword_287DD0, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
  uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  uint64_t v17 = -1LL << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v18 = ~v17;
    uint64_t v19 = *(void *)(v7 + 72);
    int64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(void *)(v13 + 48) + v19 * a2, v6);
      uint64_t v21 = sub_CA240(&qword_287DD8, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v18;
    }

    while (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
  }

uint64_t sub_C84EC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_C801C(v11);
  }

  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_C88A8();
      goto LABEL_22;
    }

    sub_C8D78(v11);
  }

  uint64_t v12 = *v4;
  Hasher.init(_seed:)(v28, *(void *)(*v4 + 40));
  String.hash(into:)(v28, v8, a2);
  uint64_t result = Hasher._finalize()();
  uint64_t v13 = -1LL << *(_BYTE *)(v12 + 32);
  a3 = result & ~v13;
  uint64_t v14 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v15 = *(void *)(v12 + 48);
    uint64_t v16 = (void *)(v15 + 16 * a3);
    uint64_t v17 = v16[1];
    BOOL v18 = *v16 == v8 && v17 == a2;
    if (v18 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }

    else
    {
      uint64_t v19 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(void *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v20 = (void *)(v15 + 16 * a3);
        uint64_t v21 = v20[1];
        if (*v20 != v8 || v21 != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21);
          if ((result & 1) == 0) {
            continue;
          }
        }

        goto LABEL_21;
      }
    }
  }

void *sub_C8684()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_6C5C(&qword_287DE0);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)(*v0);
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release(v6);
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }

  uint64_t v25 = v1;
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1LL << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  int64_t v13 = 0LL;
  *(void *)(v8 + swift_weakDestroy(v0 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1LL << *(_BYTE *)(v6 + 32);
  uint64_t v15 = -1LL;
  if (v14 < 64) {
    uint64_t v15 = ~(-1LL << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }

    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v21 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }

void *sub_C88A8()
{
  uint64_t v1 = v0;
  sub_6C5C(&qword_287E08);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }

uint64_t sub_C8A58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_287DE0);
  uint64_t v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0LL);
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = swift_release(v8);
LABEL_37:
    *uint64_t v2 = v10;
    return result;
  }

  uint64_t v11 = 1LL << *(_BYTE *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 56);
  uint64_t v35 = v2;
  uint64_t v36 = v8 + 56;
  if (v11 < 64) {
    uint64_t v13 = ~(-1LL << v11);
  }
  else {
    uint64_t v13 = -1LL;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 56;
  uint64_t result = swift_retain(v8);
  int64_t v17 = 0LL;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }

    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v21 >= v37) {
      goto LABEL_35;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_35;
      }
      unint64_t v22 = *(void *)(v36 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v37) {
          goto LABEL_35;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }

Swift::Int sub_C8D78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_6C5C(&qword_287E08);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    Swift::Int result = swift_release(v3);
LABEL_38:
    *uint64_t v2 = v6;
    return result;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  unint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  Swift::Int result = swift_retain(v3);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }

    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v18 >= v32) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v13);
      if (!v19)
      {
        int64_t v13 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v13);
        if (!v19) {
          break;
        }
      }
    }

unint64_t *sub_C9024(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release(a2);
    return (unint64_t *)&_swiftEmptySetSingleton;
  }

  uint64_t v32 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a2 + 56;
    v30[0] = a1 + 32;
    swift_bridgeObjectRetain(a1);
    uint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v30[0] + 16 * v6);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      ++v6;
      Hasher.init(_seed:)(v31, *(void *)(v2 + 40));
      swift_bridgeObjectRetain(v8);
      String.hash(into:)(v31, v9, v8);
      Swift::Int v10 = Hasher._finalize()();
      uint64_t v11 = -1LL << *(_BYTE *)(v2 + 32);
      unint64_t v12 = v10 & ~v11;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) != 0)
      {
        uint64_t v13 = *(void *)(v2 + 48);
        unint64_t v14 = (void *)(v13 + 16 * v12);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == v9 && v15 == v8;
        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15) & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease(v8);
          uint64_t v33 = v6;
LABEL_19:
          char v22 = *(_BYTE *)(v2 + 32);
          unsigned int v23 = v22 & 0x3F;
          unint64_t v24 = (1LL << v22) + 63;
          uint64_t v25 = v24 >> 6;
          size_t v26 = 8 * (v24 >> 6);
          if (v23 < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v24 >> 6), 8LL),
                (_DWORD)isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0LL), (const void *)(v2 + 56), v26);
            char v27 = sub_C9330((void *)((char *)v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v25, v2, v12, &v32);
            swift_release(v2);
            swift_bridgeObjectRelease(v32);
          }

          else
          {
            unint64_t v28 = (void *)swift_slowAlloc(v26, -1LL);
            memcpy(v28, (const void *)(v2 + 56), v26);
            char v27 = sub_C9330((unint64_t *)v28, v25, v2, v12, &v32);
            swift_release(v2);
            swift_bridgeObjectRelease(v32);
            swift_slowDealloc(v28, -1LL, -1LL);
          }

          return v27;
        }

        uint64_t v17 = ~v11;
        while (1)
        {
          unint64_t v12 = (v12 + 1) & v17;
          if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) == 0) {
            break;
          }
          int64_t v18 = (void *)(v13 + 16 * v12);
          uint64_t v19 = v18[1];
          BOOL v20 = *v18 == v9 && v19 == v8;
          if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19) & 1) != 0)
          {
            uint64_t v33 = v6;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease(v8);
            goto LABEL_19;
          }
        }
      }

      swift_bridgeObjectRelease(v8);
      if (v6 == v4)
      {
        swift_bridgeObjectRelease(a1);
        return (unint64_t *)v2;
      }
    }
  }

  return (unint64_t *)v2;
}

unint64_t *sub_C9330( unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) &= (-1LL << a4) - 1;
  uint64_t v32 = result;
  uint64_t v33 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16LL);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain(a3);
    return (unint64_t *)sub_C9558(v32, a2, v33, a3);
  }

  uint64_t v35 = a3 + 56;
  while ((v7 & 0x8000000000000000LL) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    Hasher.init(_seed:)(v34, *(void *)(a3 + 40));
    swift_bridgeObjectRetain(v12);
    String.hash(into:)(v34, v13, v12);
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1LL << *(_BYTE *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1LL << v16;
    if (((1LL << v16) & *(void *)(v35 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    BOOL v20 = (void *)(v19 + 16 * v16);
    uint64_t v21 = v20[1];
    BOOL v22 = *v20 == v13 && v21 == v12;
    if (!v22 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21) & 1) == 0)
    {
      uint64_t v25 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v27 + 1)
      {
        unint64_t v27 = i & v25;
        unint64_t v28 = (void *)(v19 + 16 * v27);
        uint64_t v29 = v28[1];
        BOOL v30 = *v28 == v13 && v29 == v12;
        if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29) & 1) != 0)
        {
          Swift::Int result = (unint64_t *)swift_bridgeObjectRelease(v12);
          unint64_t v17 = v27 >> 6;
          uint64_t v18 = 1LL << v27;
          goto LABEL_15;
        }
      }

Swift::Int sub_C9558(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release(v4);
    return (Swift::Int)v8;
  }

  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_6C5C(&qword_287E08);
  Swift::Int result = static _SetStorage.allocate(capacity:)(v5);
  uint64_t v8 = (void *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0LL;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0LL;
  Swift::Int v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }

    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1LL)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }

Swift::Int sub_C97EC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(_BYTE *)(a2 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (1LL << v4) + 63;
  uint64_t v7 = v6 >> 6;
  size_t v8 = 8 * (v6 >> 6);
  if (v5 <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v6 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0LL), v8);
    Swift::Int v9 = sub_C996C((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v7, v3, a2);
    swift_release(a2);
  }

  else
  {
    uint64_t v10 = (void *)swift_slowAlloc(v8, -1LL);
    bzero(v10, v8);
    Swift::Int v9 = sub_C996C((unint64_t *)v10, v7, v3, a2);
    swift_release(a2);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  return v9;
}

Swift::Int sub_C996C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v34 = *(void *)(a3 + 16);
  if (!v34)
  {
    uint64_t v28 = 0LL;
    goto LABEL_27;
  }

  uint64_t v36 = a4 + 56;
  uint64_t v33 = a3 + 32;
  swift_bridgeObjectRetain(a3);
  uint64_t v31 = 0LL;
  for (uint64_t i = 0LL; i != v34; ++i)
  {
    uint64_t v7 = (uint64_t *)(v33 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    Hasher.init(_seed:)(v35, *(void *)(a4 + 40));
    swift_bridgeObjectRetain(v8);
    String.hash(into:)(v35, v9, v8);
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1LL << *(_BYTE *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1LL << v12;
    if (((1LL << v12) & *(void *)(v36 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v12);
    uint64_t v17 = v16[1];
    BOOL v18 = *v16 == v9 && v17 == v8;
    if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17) & 1) == 0)
    {
      uint64_t v22 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v24 + 1)
      {
        unint64_t v24 = j & v22;
        unint64_t v25 = (void *)(v15 + 16 * v24);
        uint64_t v26 = v25[1];
        BOOL v27 = *v25 == v9 && v26 == v8;
        if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v25, v26) & 1) != 0)
        {
          Swift::Int result = swift_bridgeObjectRelease(v8);
          unint64_t v13 = v24 >> 6;
          uint64_t v14 = 1LL << v24;
          goto LABEL_12;
        }
      }

uint64_t sub_C9B7C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0LL;
    uint64_t v10 = 0LL;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }

  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v11 = a2;
  int64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }

    v11 += 2;
    Swift::Int result = swift_bridgeObjectRetain(v21);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }

  v12 += 2LL;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }

  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0LL;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0LL;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }

    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }

uint64_t sub_C9D78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v5 = a4 + 24 * a1 + 32;
  unint64_t v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_C9E6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_C9F5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = sub_CA240(&qword_287DD0, (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
  uint64_t result = Set.init(minimumCapacity:)(v9, v2, v10);
  uint64_t v16 = result;
  if (v9)
  {
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v13 = *(void *)(v3 + 72);
    int64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_C78B8((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }

    while (v9);
    return v16;
  }

  return result;
}

uint64_t sub_CA07C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v5 = a4 + 72 * a1 + 32;
  unint64_t v6 = a3 + 72 * v4;
  if (v5 >= v6 || v5 + 72 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_CA170(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_C7B0C(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }

    while (v2);
    return v8;
  }

  return result;
}

unint64_t sub_CA204()
{
  unint64_t result = qword_287DA8;
  if (!qword_287DA8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INHomeAutomationFromEntity);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_287DA8);
  }

  return result;
}

uint64_t sub_CA240(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for CommonAudio.Attribute(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_CA280(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v5 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v9 = *(void *)(a5(0LL) - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  uint64_t v13 = v11 * v5;
  unint64_t v14 = a3 + v13;
  unint64_t v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_CA398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for AppResolutionConfirmation.confirmed(_:);
  uint64_t v3 = type metadata accessor for AppResolutionConfirmation(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0LL, 1LL, v3);
}

uint64_t PlayMediaAppResolver.resolveBundleIdentifier(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_6C5C(&qword_287EE8);
  __chkstk_darwin(v8);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v21 = a1;
  uint64_t v11 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  CommonIntentSignals.getPreResolvedApp()(v11, &protocol witness table for INPlayMediaIntent);
  uint64_t v12 = sub_6C5C(&qword_285EA0);
  int v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48LL))(v10, 1LL, v12);
  uint64_t v14 = 0x6552657250707061LL;
  if (v13 == 1)
  {
    uint64_t v14 = 0xD000000000000010LL;
    uint64_t v15 = 0x800000000021FD00LL;
  }

  else
  {
    uint64_t v15 = 0xEE006465766C6F73LL;
  }

  uint64_t v18 = a1;
  uint64_t v19 = v4;
  unint64_t v20 = v10;
  sub_CE748( (uint64_t)"playMediaAppResolutionServiceResolveBundleEverything",  52LL,  2u,  a2,  a3,  "name=%{signpost.telemetry:string1,public}@ enableTelemetry=YES ",  63LL,  2,  v14,  v15,  (void (*)(uint64_t (*)(), uint64_t))sub_CB5F8,  (uint64_t)v17);
  swift_bridgeObjectRelease(v15);
  return sub_1F6CC((uint64_t)v10, &qword_287EE8);
}

void sub_CA590( void (*a1)(uint64_t), uint64_t a2, void *a3, void *a4, void (*a5)(char *, uint64_t))
{
  uint64_t v193 = a5;
  id v195 = a1;
  uint64_t v196 = a2;
  uint64_t v185 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v185);
  uint64_t v188 = (uint64_t *)((char *)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = sub_6C5C(&qword_287EE8);
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v172 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = sub_6C5C(&qword_285EA0);
  uint64_t v192 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v182 = (uint64_t *)((char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v172 - v15);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v183 = (uint64_t)&v172 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v184 = (uint64_t)&v172 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v180 = (uint64_t *)((char *)&v172 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v191 = (uint64_t)&v172 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v181 = (uint64_t *)((char *)&v172 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v179 = (uint64_t *)((char *)&v172 - v28);
  __chkstk_darwin(v27);
  unint64_t v194 = (uint64_t *)((char *)&v172 - v29);
  uint64_t v30 = type metadata accessor for Logger(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v176 = (char *)&v172 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v172 - v35;
  __chkstk_darwin(v34);
  int64_t v38 = (char *)&v172 - v37;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = sub_6960(v30, (uint64_t)qword_2969C8);
  uint64_t v40 = *(void (**)(char *, void, uint64_t))(v31 + 16);
  __int128 v186 = (void (*)(char *, char *, uint64_t))v39;
  uint64_t v187 = v40;
  ((void (*)(char *))v40)(v38);
  id v41 = a3;
  swift_retain_n(a4, 2LL);
  id v42 = v41;
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  LODWORD(v17sub_6C3C(v0 + 7) = static os_log_type_t.default.getter();
  BOOL v44 = os_log_type_enabled(v43, (os_log_type_t)v177);
  uint64_t v197 = v30;
  uint64_t v198 = v11;
  uint64_t v178 = v16;
  uint64_t v189 = v36;
  uint64_t v190 = a4;
  if (!v44)
  {

    swift_release_n(a4, 2LL);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v31 + 8);
    v52(v38, v30);
    uint64_t v54 = v192;
    uint64_t v53 = (uint64_t)v193;
    goto LABEL_29;
  }

  os_log_t v174 = v43;
  uint64_t v175 = v31;
  uint64_t v45 = swift_slowAlloc(48LL, -1LL);
  uint64_t v46 = swift_slowAlloc(128LL, -1LL);
  uint64_t v200 = v46;
  *(_DWORD *)uint64_t v45 = 136447234;
  id v47 = [v42 launchId];
  if (v47)
  {
    os_log_type_t v48 = v47;
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    id v51 = v50;
  }

  else
  {
    uint64_t v49 = 0LL;
    id v51 = 0LL;
  }

  uint64_t v203 = (void *)v49;
  id v204 = v51;
  uint64_t v55 = sub_6C5C(&qword_284600);
  uint64_t v56 = String.init<A>(describing:)(&v203, v55);
  unint64_t v58 = v57;
  uint64_t v203 = (void *)sub_6978(v56, v57, &v200);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);

  swift_bridgeObjectRelease(v58);
  *(_WORD *)(v45 + sub_6C3C(v0 + 12) = 1026;
  LOBYTE(v5sub_6C3C(v0 + 8) = INPlayMediaIntent.appInferred.getter(v59);

  LODWORD(v20sub_6C3C(v0 + 3) = v58 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, (char *)&v203 + 4);

  *(_WORD *)(v45 + 1sub_6C3C(v0 + 8) = 2082;
  id v60 = [v42 mediaSearch];
  uint64_t v61 = v60;
  if (v60)
  {
    uint64_t v62 = [v60 mediaType];
  }

  else
  {
    uint64_t v62 = 0LL;
  }

  uint64_t v203 = v62;
  LOBYTE(v204) = v61 == 0LL;
  uint64_t v63 = sub_6C5C(&qword_287FC0);
  uint64_t v64 = String.init<A>(describing:)(&v203, v63);
  unint64_t v66 = v65;
  uint64_t v203 = (void *)sub_6978(v64, v65, &v200);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);

  *(void *)&double v67 = swift_bridgeObjectRelease(v66).n128_u64[0];
  *(_WORD *)(v45 + 2sub_6C3C(v0 + 8) = 2082;
  id v68 = objc_msgSend(v42, "privatePlayMediaIntentData", v67);
  id v69 = v68;
  uint64_t v173 = v46;
  uint64_t v172 = v10;
  if (v68)
  {
    id v70 = [v68 audioSearchResults];

    if (v70)
    {
      uint64_t v71 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

      if ((unint64_t)v72 >> 62)
      {
        if (v72 < 0) {
          uint64_t v77 = v72;
        }
        else {
          uint64_t v77 = v72 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v72);
        id v70 = (id)_CocoaArrayWrapper.endIndex.getter(v77);
        swift_bridgeObjectRelease(v72);
        if (v70) {
          goto LABEL_15;
        }
      }

      else
      {
        id v70 = *(id *)((char *)&dword_10 + (v72 & 0xFFFFFFFFFFFFF8LL));
        if (v70)
        {
LABEL_15:
          if ((v72 & 0xC000000000000001LL) != 0)
          {
            id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v72);
          }

          else
          {
            if (!*(void *)((char *)&dword_10 + (v72 & 0xFFFFFFFFFFFFF8LL)))
            {
              __break(1u);
              return;
            }

            id v73 = *(id *)(v72 + 32);
          }

          uint64_t v74 = v73;
          id v75 = objc_msgSend(v73, "identifier", swift_bridgeObjectRelease(v72).n128_f64[0]);

          if (v75)
          {
            id v69 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
            id v70 = v76;
          }

          else
          {
            id v69 = 0LL;
            id v70 = 0LL;
          }

          goto LABEL_28;
        }
      }

      swift_bridgeObjectRelease(v72);
    }

    id v69 = 0LL;
  }

  else
  {
    id v70 = 0LL;
  }

LABEL_28:
  uint64_t v203 = v69;
  id v204 = v70;
  uint64_t v78 = String.init<A>(describing:)(&v203, v55);
  unint64_t v80 = v79;
  uint64_t v203 = (void *)sub_6978(v78, v79, &v200);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);

  swift_bridgeObjectRelease(v80);
  *(_WORD *)(v45 + 3sub_6C3C(v0 + 8) = 2082;
  uint64_t v81 = v190;
  uint64_t v82 = (uint64_t)v190 + *(void *)(class metadata base offset for CommonAppResolver + *v190 + 32);
  swift_beginAccess(v82, v199, 0LL, 0LL);
  sub_157C4(v82, (uint64_t)&v203);
  uint64_t v83 = v205;
  uint64_t v84 = v206;
  sub_6EA8(&v203, v205);
  uint64_t v201 = dispatch thunk of FeatureFlagProviding.forceResolveBundleId.getter(v83, v84);
  uint64_t v202 = v85;
  uint64_t v86 = String.init<A>(describing:)(&v201, v55);
  unint64_t v88 = v87;
  sub_6C3C(&v203);
  uint64_t v203 = (void *)sub_6978(v86, v88, &v200);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v203, &v204);
  swift_release_n(v81, 2LL);
  swift_bridgeObjectRelease(v88);
  os_log_t v89 = v174;
  _os_log_impl( &dword_0,  v174,  (os_log_type_t)v177,  "PlayMediaAppResolver#resolveBundleIdentifier... launchId:%{public}s, appInferred?:%{BOOL,public}d, mediaSearch-type: %{public}s, firstResult-identifier:%{public}s, forceResolveBundleId:%{public}s",  (uint8_t *)v45,  0x30u);
  uint64_t v90 = v173;
  swift_arrayDestroy(v173, 4LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v90, -1LL, -1LL);
  swift_slowDealloc(v45, -1LL, -1LL);

  uint64_t v52 = *(void (**)(char *, uint64_t))(v175 + 8);
  uint64_t v30 = v197;
  v52(v38, v197);
  uint64_t v11 = v198;
  uint64_t v36 = v189;
  uint64_t v54 = v192;
  uint64_t v53 = (uint64_t)v193;
  uint64_t v10 = v172;
LABEL_29:
  sub_FF10(v53, (uint64_t)v10, &qword_287EE8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48))(v10, 1LL, v11) == 1)
  {
    sub_1F6CC((uint64_t)v10, &qword_287EE8);
    id v91 = v190;
    uint64_t v92 = (uint64_t)v190 + *(void *)(class metadata base offset for CommonAppResolver + *v190 + 32);
    swift_beginAccess(v92, &v201, 0LL, 0LL);
    sub_157C4(v92, (uint64_t)&v203);
    uint64_t v93 = v205;
    uint64_t v94 = v206;
    sub_6EA8(&v203, v205);
    uint64_t v95 = (uint64_t *)dispatch thunk of FeatureFlagProviding.forceResolveBundleId.getter(v93, v94);
    if (v96)
    {
      unint64_t v97 = v96;
      unint64_t v194 = v95;
      sub_6C3C(&v203);
      uint64_t v98 = v176;
      v187(v176, v186, v30);
      uint64_t v99 = swift_bridgeObjectRetain_n(v97, 2LL);
      uint64_t v100 = (os_log_s *)Logger.logObject.getter(v99);
      os_log_type_t v101 = static os_log_type_t.default.getter();
      BOOL v102 = os_log_type_enabled(v100, v101);
      uint64_t v103 = v195;
      if (v102)
      {
        uint64_t v193 = v52;
        uint64_t v104 = v195;
        uint64_t v105 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v106 = swift_slowAlloc(32LL, -1LL);
        uint64_t v203 = (void *)v106;
        *(_DWORD *)uint64_t v105 = 136446210;
        swift_bridgeObjectRetain(v97);
        uint64_t v200 = sub_6978((uint64_t)v194, v97, (uint64_t *)&v203);
        uint64_t v103 = v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, &v201);
        swift_bridgeObjectRelease_n(v97, 3LL);
        _os_log_impl( &dword_0,  v100,  v101,  "PlayMediaAppResolver#resolveBundleIdentifier forceResolveBundleId user default present, resolving bundleIdenti fier: %{public}s",  v105,  0xCu);
        swift_arrayDestroy(v106, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v106, -1LL, -1LL);
        swift_slowDealloc(v105, -1LL, -1LL);

        v193(v176, v197);
      }

      else
      {

        swift_bridgeObjectRelease_n(v97, 2LL);
        v52(v98, v30);
      }

      id v162 = objc_msgSend(v42, "launchId", v172);
      if (v162)
      {
        id v163 = v162;
        uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
        id v166 = v165;

        v167._uint64_t countAndFlagsBits = v164;
        v167._object = v166;
        INPlayMediaIntent.addInternalSignal(internalSignal:)(v167);
        swift_bridgeObjectRelease(v166);
      }

      uint64_t v168 = (uint64_t)v188;
      uint64_t v169 = (char *)v188 + *(int *)(v11 + 48);
      uint64_t *v188 = (uint64_t)v194;
      *(void *)(v168 + sub_6C3C(v0 + 8) = v97;
      uint64_t v170 = enum case for ResolutionResultType.AppSpecifiedByUser(_:);
      uint64_t v171 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v171 - 8) + 104LL))(v169, v170, v171);
      swift_storeEnumTagMultiPayload(v168, v185, 0LL);
      v103(v168);
      sub_D47DC(v168);
    }

    else
    {
      sub_6C3C(&v203);
      unint64_t v159 = (void *)swift_allocObject(&unk_26E8B0, 48LL, 7LL);
      uint64_t v160 = v196;
      v159[2] = v195;
      v159[3] = v160;
      v159[4] = v91;
      v159[5] = v42;
      id v161 = v42;
      swift_retain(v91);
      swift_retain(v160);
      sub_CFCC0(v161, (void (*)(uint64_t))sub_D47D0, (uint64_t)v159);
      swift_release(v159);
    }
  }

  else
  {
    uint64_t v193 = v52;
    uint64_t v107 = *(int *)(v11 + 48);
    uint64_t v108 = v194;
    uint64_t v109 = (uint64_t *)((char *)v194 + v107);
    uint64_t v110 = (char *)v10 + v107;
    uint64_t v111 = v11;
    uint64_t v113 = *v10;
    uint64_t v112 = v10[1];
    *unint64_t v194 = v113;
    v108[1] = v112;
    uint64_t v114 = type metadata accessor for ResolutionResultType(0LL);
    uint64_t v115 = *(void *)(v114 - 8);
    uint64_t v177 = *(void (**)(void *, char *, uint64_t))(v115 + 32);
    v177(v109, v110, v114);
    v187(v36, v186, v30);
    uint64_t v116 = (uint64_t)v179;
    uint64_t v117 = (char *)v179 + *(int *)(v111 + 48);
    uint64_t *v179 = v113;
    *(void *)(v116 + sub_6C3C(v0 + 8) = v112;
    uint64_t v192 = v115;
    uint64_t v118 = *(void (**)(char *, void *, uint64_t))(v115 + 16);
    v118(v117, v109, v114);
    uint64_t v119 = v181;
    sub_FF10(v116, (uint64_t)v181, &qword_285EA0);
    sub_D4818(v116, v191);
    uint64_t v120 = *(int *)(v111 + 48);
    uint64_t v121 = (void (*)(char *, char *, uint64_t))v118;
    uint64_t v122 = v183;
    uint64_t v123 = (uint64_t)v180;
    uint64_t v124 = (char *)v180 + v120;
    *uint64_t v180 = v113;
    *(void *)(v123 + sub_6C3C(v0 + 8) = v112;
    uint64_t v190 = v109;
    v121(v124, (char *)v109, v114);
    uint64_t v125 = v184;
    sub_FF10(v123, v184, &qword_285EA0);
    sub_D4818(v123, v122);
    uint64_t v126 = swift_bridgeObjectRetain_n(v112, 3LL);
    uint64_t v127 = (void (*)(char *, void, uint64_t))Logger.logObject.getter(v126);
    os_log_type_t v128 = static os_log_type_t.default.getter();
    int v129 = v128;
    uint64_t v187 = v127;
    if (os_log_type_enabled((os_log_t)v127, v128))
    {
      uint64_t v130 = swift_slowAlloc(22LL, -1LL);
      LODWORD(v179) = v129;
      uint64_t v131 = v130;
      uint64_t v180 = (uint64_t *)swift_slowAlloc(64LL, -1LL);
      uint64_t v203 = v180;
      *(_DWORD *)uint64_t v131 = 136446466;
      unint64_t v176 = (char *)(v131 + 4);
      uint64_t v132 = *(int *)(v198 + 48);
      id v133 = v178;
      uint64_t v134 = (char *)v178 + v132;
      __int128 v186 = v121;
      uint64_t v136 = *v119;
      unint64_t v135 = v119[1];
      *uint64_t v178 = *v119;
      v133[1] = v135;
      v186((char *)v133 + v132, (char *)v119 + v132, v114);
      id v137 = *(void (**)(char *, uint64_t))(v192 + 8);
      swift_bridgeObjectRetain(v135);
      v137(v134, v114);
      uint64_t v201 = sub_6978(v136, v135, (uint64_t *)&v203);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202);
      swift_bridgeObjectRelease(v135);
      sub_1F6CC(v191, &qword_285EA0);
      sub_1F6CC((uint64_t)v119, &qword_285EA0);
      *(_WORD *)(v131 + sub_6C3C(v0 + 12) = 2082;
      uint64_t v138 = *(int *)(v198 + 48);
      char v139 = (char *)v133 + v138;
      uint64_t v140 = v184;
      v186((char *)v133 + v138, (char *)(v184 + v138), v114);
      uint64_t v141 = String.init<A>(describing:)(v139, v114);
      unint64_t v143 = v142;
      uint64_t v201 = sub_6978(v141, v142, (uint64_t *)&v203);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202);
      unint64_t v144 = v143;
      uint64_t v121 = v186;
      swift_bridgeObjectRelease(v144);
      sub_1F6CC(v183, &qword_285EA0);
      sub_1F6CC(v140, &qword_285EA0);
      id v145 = v187;
      _os_log_impl( &dword_0,  (os_log_t)v187,  (os_log_type_t)v179,  "PlayMediaAppResolver#resolveBundleIdentifier app resolution ran previously, re-using those results and returning bundleIdentifier: %{public}s, resolutionResult: %{public}s",  (uint8_t *)v131,  0x16u);
      id v146 = v180;
      swift_arrayDestroy(v180, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v146, -1LL, -1LL);
      swift_slowDealloc(v131, -1LL, -1LL);

      v193(v189, v197);
      uint64_t v147 = v185;
    }

    else
    {
      sub_1F6CC(v191, &qword_285EA0);
      sub_1F6CC((uint64_t)v119, &qword_285EA0);
      sub_1F6CC(v122, &qword_285EA0);
      sub_1F6CC(v125, &qword_285EA0);

      v193(v189, v197);
      uint64_t v147 = v185;
      id v133 = v178;
    }

    uint64_t v148 = v198;
    uint64_t v149 = *(int *)(v198 + 48);
    uint64_t v150 = v188;
    uint64_t v151 = (char *)v188 + v149;
    os_log_type_t v152 = (char *)v133 + v149;
    uint64_t *v133 = v113;
    v133[1] = v112;
    BOOL v153 = (char *)v133 + v149;
    uint64_t v154 = v148;
    uint64_t v155 = v190;
    v121(v153, (char *)v190, v114);
    uint64_t *v150 = v113;
    v150[1] = v112;
    uint64_t v156 = *(int *)(v154 + 48);
    uint64_t v157 = v182;
    uint64_t v158 = (char *)v182 + v156;
    *uint64_t v182 = v113;
    v157[1] = v112;
    v121((char *)v157 + v156, (char *)v155, v114);
    v177(v151, v158, v114);
    swift_storeEnumTagMultiPayload(v150, v147, 0LL);
    v195((uint64_t)v150);
    sub_D47DC((uint64_t)v150);
    sub_1F6CC((uint64_t)v194, &qword_285EA0);
    (*(void (**)(char *, uint64_t))(v192 + 8))(v152, v114);
  }

  swift_bridgeObjectRelease("er");
  swift_bridgeObjectRelease(v92);
  uint64_t v25 = v91;
LABEL_35:
  swift_arrayDestroy(&qword_26A590, 1LL, &type metadata for String);
  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26A5A0) & 1) != 0) {
    goto LABEL_36;
  }
  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26A5D0) & 1) != 0)
  {
    uint64_t v50 = v98;
    id v51 = v20(v98, v19, v4);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    uint64_t v53 = static os_log_type_t.info.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      uint64_t v55 = "PlayMediaUnsupportedValueSnippetProvider#unsupportedValueOutputView returning nil for acousticID follow up not found";
LABEL_49:
      _os_log_impl(&dword_0, v52, v53, v55, v54, 2u);
      swift_slowDealloc(v54, -1LL, -1LL);
      goto LABEL_50;
    }

    goto LABEL_50;
  }

  uint64_t v56 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26A600);
  if ((v56 & 1) == 0)
  {
    uint64_t v50 = v95;
    uint64_t v64 = v20(v95, v19, v4);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v64);
    uint64_t v53 = static os_log_type_t.info.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      uint64_t v55 = "PlayMediaUnsupportedValueSnippetProvider#unsupportedValueOutputView returning nil for subscriber";
      goto LABEL_49;
    }

    uint64_t v16 = (v22 - 1) & v22;
    uint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = *(void *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v20, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))( *(void *)(v8 + 48) + v20,  v5,  v2);
  }

  while (1)
  {
    uint64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_29;
    }
    uint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_28;
    }
  }

  swift_bridgeObjectRelease(v39);
  *(_BYTE *)(v30 + 19sub_6C3C(v0 + 2) = 0;
  *(void *)(v30 + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
  strcpy((char *)(v30 + 224), "isStorySleep");
  *(_BYTE *)(v30 + 23sub_6C3C(v0 + 7) = 0;
  *(_WORD *)(v30 + 23sub_6C3C(v0 + 8) = -5120;
  if (!v17)
  {
    uint64_t v43 = String.lowercased()()._object;
    goto LABEL_36;
  }

  uint64_t v99 = v224;
  dispatch thunk of AudioUsoIntent.verb.getter(v83);
  v216(v84, v215, v27);
  v217((char *)v84, 0LL, 1LL, v27);
  uint64_t v100 = v78 + *(int *)(v29 + 48);
  sub_FF10(v99, v78, &qword_284DB0);
  sub_FF10(v84, v100, &qword_284DB0);
  if (v85(v78, 1LL, v27) == 1)
  {
    sub_1F6CC(v84, &qword_284DB0);
    sub_1F6CC(v224, &qword_284DB0);
    if (v85(v100, 1LL, v27) == 1)
    {
      sub_1F6CC(v78, &qword_284DB0);
      uint64_t v92 = v234;
      goto LABEL_37;
    }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  if ((v22 & 0xC000000000000001LL) != 0)
  {
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v22);
LABEL_31:
    uint64_t v18 = v41;
    sub_925A4(v40, v39);
    uint64_t result = swift_bridgeObjectRelease(v22);
    if (!*(void *)(a1 + 16)) {
      goto LABEL_32;
    }
    goto LABEL_14;
  }

  if (*(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v41 = *(id *)(v22 + 32);
    goto LABEL_31;
  }

  __break(1u);
  return result;
}

          id v51 = swift_bridgeObjectRelease(v48).n128_u64[0];
          goto LABEL_29;
        }

void sub_CB5F8(void (*a1)(uint64_t), uint64_t a2)
{
}

uint64_t sub_CB604(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v43 = a4;
  BOOL v44 = a5;
  uint64_t v45 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v42 = *(void *)(v45 - 8);
  uint64_t v8 = *(void *)(v42 + 64);
  uint64_t v9 = __chkstk_darwin(v45);
  uint64_t v10 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  id v41 = (char *)&v40 - v11;
  uint64_t v12 = sub_6C5C(&qword_287F78);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for BundleResolutionResult(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v14, &qword_287F78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15) == 1)
  {
    uint64_t v19 = a2;
    uint64_t v40 = a3;
    sub_1F6CC((uint64_t)v14, &qword_287F78);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    id v20 = (id)qword_296AA0;
    uint64_t v21 = v41;
    OSSignpostID.init(log:)(v20);
    uint64_t v22 = v42;
    uint64_t v23 = v45;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v10, v21, v45);
    uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
    uint64_t v25 = (v24 + 33) & ~v24;
    unint64_t v26 = (v8 + v25 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v27 = swift_allocObject(&unk_26E8D8, v26 + 16, v24 | 7);
    *(void *)(v27 + swift_weakDestroy(v0 + 16) = "playMediaAppResolutionServiceResolveBundle";
    *(void *)(v27 + 24) = 42LL;
    *(_BYTE *)(v27 + 3sub_6C3C(v0 + 2) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v27 + v25, v10, v23);
    uint64_t v28 = (void *)(v27 + v26);
    uint64_t v29 = v40;
    *uint64_t v28 = v19;
    v28[1] = v29;
    uint64_t v30 = swift_retain(v29);
    uint64_t v31 = static os_signpost_type_t.begin.getter(v30);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v31,  &dword_0,  qword_296AA0,  "playMediaAppResolutionServiceResolveBundle",  42LL,  2LL,  v21,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
    uint64_t v32 = swift_allocObject(&unk_26E900, 32LL, 7LL);
    *(void *)(v32 + swift_weakDestroy(v0 + 16) = sub_33CC4;
    *(void *)(v32 + 24) = v27;
    uint64_t v33 = v43;
    uint64_t v34 = *(void *)(v43 + qword_287EF0 + 24);
    uint64_t v35 = *(void *)(v43 + qword_287EF0 + 32);
    sub_6EA8((void *)(v43 + qword_287EF0), v34);
    uint64_t v36 = (void *)swift_allocObject(&unk_26E928, 48LL, 7LL);
    uint64_t v37 = v44;
    v36[2] = v33;
    v36[3] = v37;
    v36[4] = sub_33CB0;
    v36[5] = v32;
    swift_retain(v27);
    swift_retain(v33);
    id v38 = v37;
    swift_retain(v32);
    dispatch thunk of PlayMediaIntentAppSelecting.select(for:caller:completion:)(v38, 1LL, sub_D4898, v36, v34, v35);
    swift_release(v27);
    swift_release(v32);
    swift_release(v36);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v21, v45);
  }

  else
  {
    sub_D48A4((uint64_t)v14, (uint64_t)v18);
    a2(v18);
    return sub_D47DC((uint64_t)v18);
  }

void sub_CB97C(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v165 = a5;
  id v162 = a4;
  id v161 = a3;
  uint64_t v7 = type metadata accessor for AcceptedSpeakerIdConfidence(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v153 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v153);
  uint64_t v154 = (uint64_t *)((char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v163 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v12 = *(void *)(v163 - 8);
  uint64_t v13 = __chkstk_darwin(v163);
  uint64_t v158 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v159 = (uint64_t *)((char *)&v147 - v16);
  unint64_t v160 = v17;
  __chkstk_darwin(v15);
  uint64_t v156 = (uint64_t *)((char *)&v147 - v18);
  uint64_t v166 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v166 - 8);
  uint64_t v20 = __chkstk_darwin(v166);
  uint64_t v22 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20);
  os_log_type_t v152 = (char *)&v147 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v155 = (char *)&v147 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v147 - v28;
  uint64_t v30 = PlayMediaAppSelectionResult.bundleIdentifier.getter(v27);
  uint64_t v164 = v30;
  if (v31)
  {
    unint64_t v32 = v31;
    uint64_t v157 = a1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v33 = v166;
    uint64_t v34 = sub_6960(v166, (uint64_t)qword_2969C8);
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v150 = v34;
    uint64_t v151 = v35;
    ((void (*)(char *))v35)(v29);
    uint64_t v36 = swift_bridgeObjectRetain_n(v32, 2LL);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc(22LL, -1LL);
      uint64_t v149 = v19;
      uint64_t v40 = v39;
      uint64_t v148 = swift_slowAlloc(64LL, -1LL);
      uint64_t v175 = v148;
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v41 = static Insights.appSelection.getter();
      uint64_t v42 = a2;
      uint64_t v43 = v12;
      unint64_t v45 = v44;
      uint64_t v171 = sub_6978(v41, v44, &v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);
      unint64_t v46 = v45;
      uint64_t v12 = v43;
      a2 = v42;
      swift_bridgeObjectRelease(v46);
      *(_WORD *)(v40 + sub_6C3C(v0 + 12) = 2082;
      swift_bridgeObjectRetain(v32);
      uint64_t v47 = v164;
      uint64_t v171 = sub_6978(v164, v32, &v175);
      uint64_t v48 = v165;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);
      swift_bridgeObjectRelease_n(v32, 3LL);
      _os_log_impl( &dword_0,  v37,  v38,  "PlayMediaAppResolver#resolveBundleIdentifier %{public}s app selection resolved bundle: %{public}s",  (uint8_t *)v40,  0x16u);
      uint64_t v49 = v148;
      swift_arrayDestroy(v148, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      uint64_t v50 = *(void (**)(char *, uint64_t))(v149 + 8);
      v50(v29, v166);
    }

    else
    {

      swift_bridgeObjectRelease_n(v32, 2LL);
      uint64_t v50 = *(void (**)(char *, uint64_t))(v19 + 8);
      v50(v29, v33);
      uint64_t v47 = v164;
      uint64_t v48 = v165;
    }

    if ((static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v47, v32) & 1) != 0)
    {
      uint64_t v158 = (char *)v50;
      uint64_t v62 = *(void (**)(void *, uint64_t, uint64_t))(v12 + 16);
      uint64_t v63 = v156;
      uint64_t v64 = v163;
      v62(v156, v157, v163);
      v62(v159, (uint64_t)v63, v64);
      uint64_t v65 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v66 = (v65 + 56) & ~v65;
      double v67 = (char *)swift_allocObject(&unk_26E9C8, v66 + v160, v65 | 7);
      *((void *)v67 + sub_6C3C(v0 + 2) = a2;
      *((void *)v67 + sub_6C3C(v0 + 3) = v47;
      uint64_t v68 = (uint64_t)v162;
      *((void *)v67 + 4) = v32;
      *((void *)v67 + 5) = v68;
      *((void *)v67 + 6) = v48;
      (*(void (**)(char *, void *, uint64_t))(v12 + 32))(&v67[v66], v63, v64);
      uint64_t v156 = a2;
      swift_retain_n(a2, 2LL);
      swift_retain_n(v48, 2LL);
      unint64_t v160 = v32;
      swift_bridgeObjectRetain(v32);
      id v69 = v161;
      id v70 = [v161 privatePlayMediaIntentData];
      uint64_t v71 = v70;
      if (v70)
      {
        id v72 = [v70 audioSearchResults];

        if (v72)
        {
          uint64_t v73 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
          uint64_t v71 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);
        }

        else
        {
          uint64_t v71 = 0LL;
        }
      }

      uint64_t v122 = (uint64_t)v159;
      uint64_t v123 = v158;
      if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v69,  (uint64_t)&off_26AA30) & 1) != 0 && sub_CEF5C())
      {
        uint64_t v164 = v12;
        uint64_t v125 = v166;
        uint64_t v126 = v151(v155, v150, v166);
        uint64_t v127 = (os_log_s *)Logger.logObject.getter(v126);
        os_log_type_t v128 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v127, v128))
        {
          int v129 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)int v129 = 0;
          _os_log_impl( &dword_0,  v127,  v128,  "PlayMediaAppResolver#determineFirstPartyBundleIdentifier we have signal from search results to consider usin g Classical for playback",  v129,  2u);
          swift_slowDealloc(v129, -1LL, -1LL);
        }

        ((void (*)(char *, uint64_t))v123)(v155, v125);
        uint64_t v130 = v156;
        uint64_t v131 = *(void *)((char *)v156 + qword_287F10 + 24);
        uint64_t v132 = *(void *)((char *)v156 + qword_287F10 + 32);
        sub_6EA8((void *)((char *)v156 + qword_287F10), v131);
        id v133 = (void *)swift_allocObject(&unk_26E9F0, 56LL, 7LL);
        v133[2] = v130;
        v133[3] = sub_D4BE0;
        id v134 = v161;
        v133[4] = v67;
        v133[5] = v134;
        v133[6] = v71;
        swift_retain(v130);
        swift_retain(v67);
        id v135 = v134;
        dispatch thunk of NowPlayingProviding.state(completion:)(sub_D4C74, v133, v131, v132);
        swift_release(v130);
        swift_release(v67);
        swift_release(v133);
        uint64_t v12 = v164;
        uint64_t v136 = v160;
      }

      else
      {
        v176.value._rawValue = v71;
        v176.is_nil = 0;
        Swift::String v137 = INIntent.firstPartyResultsBundleIdentifier(internalSearchResults:canUseClassical:)(v176, v124);
        swift_bridgeObjectRelease(v71);
        uint64_t v138 = v156;
        uint64_t v136 = v160;
        sub_CD440(v137._countAndFlagsBits, (uint64_t)v137._object, v156, v164, v160, v68, v48, v122);
        swift_release(v138);
        swift_release(v67);
        swift_bridgeObjectRelease(v137._object);
      }

      swift_release(v48);
      __n128 v139 = swift_bridgeObjectRelease(v136);
      (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v122, v163, v139);
    }

    else
    {
      uint64_t v74 = v12;
      id v75 = (void *)((char *)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 24));
      uint64_t v76 = v75[3];
      uint64_t v77 = v75[4];
      sub_6EA8(v75, v76);
      if ((dispatch thunk of DeviceProviding.isHomePod.getter(v76, v77) & 1) != 0)
      {
        uint64_t v78 = (uint64_t)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 32);
        swift_beginAccess(v78, v170, 0LL, 0LL);
        sub_157C4(v78, (uint64_t)&v175);
        unint64_t v79 = (char *)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 40);
        uint64_t v173 = type metadata accessor for NowPlayingProvider(0LL);
        os_log_t v174 = &protocol witness table for NowPlayingProvider;
        sub_10974(&v171);
        uint64_t v80 = swift_bridgeObjectRetain(v32);
        static NowPlayingProvider.shared.getter(v80);
        uint64_t v81 = v158;
        uint64_t v82 = v163;
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v158, v157, v163);
        uint64_t v83 = *(unsigned __int8 *)(v74 + 80);
        uint64_t v84 = (v83 + 48) & ~v83;
        uint64_t v85 = (char *)swift_allocObject(&unk_26E9A0, v84 + v160, v83 | 7);
        uint64_t v86 = v165;
        *((void *)v85 + sub_6C3C(v0 + 2) = v162;
        *((void *)v85 + sub_6C3C(v0 + 3) = v86;
        uint64_t v87 = v164;
        *((void *)v85 + 4) = v164;
        *((void *)v85 + 5) = v32;
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v85[v84], v81, v82);
        swift_retain(v86);
        INIntent.lookupUserPreference(using:deviceProvider:featureFlagProvider:userPreferenceProvider:nowPlaying:completion:)( v87,  v32,  v75,  &v175,  v79,  &v171,  sub_D4B08,  v85);
        swift_bridgeObjectRelease(v32);
        swift_release(v85);
        sub_6C3C(&v175);
        sub_1F6CC((uint64_t)&v171, &qword_285EA8);
      }

      else
      {
        unint64_t v97 = v152;
        uint64_t v98 = v166;
        uint64_t v99 = v151(v152, v150, v166);
        uint64_t v100 = (os_log_s *)Logger.logObject.getter(v99);
        os_log_type_t v101 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v100, v101))
        {
          BOOL v102 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)BOOL v102 = 0;
          _os_log_impl( &dword_0,  v100,  v101,  "PlayMediaAppResolver#resolveBundleIdentifier tvOS but not HomePod, returning .Default",  v102,  2u);
          swift_slowDealloc(v102, -1LL, -1LL);
        }

        v50(v97, v98);
        uint64_t v103 = sub_6C5C(&qword_285EA0);
        uint64_t v104 = (uint64_t)v154;
        uint64_t v105 = (char *)v154 + *(int *)(v103 + 48);
        *uint64_t v154 = v164;
        *(void *)(v104 + sub_6C3C(v0 + 8) = v32;
        uint64_t v106 = enum case for ResolutionResultType.Default(_:);
        uint64_t v107 = type metadata accessor for ResolutionResultType(0LL);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v107 - 8) + 104LL))(v105, v106, v107);
        swift_storeEnumTagMultiPayload(v104, v153, 0LL);
        v162(v104);
        sub_D47DC(v104);
      }
    }
  }

  else if ((PlayMediaAppSelectionResult.attempted.getter(v30) & 1) != 0)
  {
    uint64_t v156 = a2;
    uint64_t v164 = v12;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v51 = v166;
    uint64_t v52 = sub_6960(v166, (uint64_t)qword_2969C8);
    uint64_t v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v52, v51);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.default.getter();
    BOOL v56 = os_log_type_enabled(v54, v55);
    uint64_t v157 = a1;
    if (v56)
    {
      uint64_t v149 = v19;
      unint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      unint64_t v159 = (void *)swift_slowAlloc(32LL, -1LL);
      uint64_t v175 = (uint64_t)v159;
      *(_DWORD *)unint64_t v57 = 136446210;
      uint64_t v155 = (char *)(v57 + 4);
      uint64_t v58 = static Insights.appSelection.getter();
      unint64_t v60 = v59;
      uint64_t v171 = sub_6978(v58, v59, &v175);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v171, v172);
      swift_bridgeObjectRelease(v60);
      _os_log_impl( &dword_0,  v54,  v55,  "PlayMediaAppResolver#resolveBundleIdentifier %{public}s app selection attempted but no bundle returned... disambiguating",  v57,  0xCu);
      uint64_t v61 = v159;
      swift_arrayDestroy(v159, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1LL, -1LL);
      swift_slowDealloc(v57, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v149 + 8))(v22, v51);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v51);
    }

    uint64_t v108 = v156;
    uint64_t v109 = (void *)((char *)v108 + *(void *)(class metadata base offset for CommonAppResolver + *v108 + 48));
    uint64_t v166 = v109[3];
    uint64_t v155 = (char *)v109[4];
    unint64_t v159 = sub_6EA8(v109, v166);
    uint64_t v110 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v175 = (uint64_t)v161;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for AcceptedSpeakerIdConfidence.executeOnCompanionConfidence(_:),  v7);
    uint64_t v111 = PrivateMediaIntentDataProviding.getSharedUserID(speakerConfidence:)( v10,  v110,  &protocol witness table for INPlayMediaIntent);
    uint64_t v113 = v112;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v114 = v164;
    uint64_t v115 = v158;
    uint64_t v116 = v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v164 + 16))(v158, v157, v163);
    uint64_t v117 = *(unsigned __int8 *)(v114 + 80);
    uint64_t v118 = (v117 + 40) & ~v117;
    uint64_t v119 = (char *)swift_allocObject(&unk_26E978, v118 + v160, v117 | 7);
    uint64_t v120 = v162;
    *((void *)v119 + sub_6C3C(v0 + 2) = v108;
    *((void *)v119 + sub_6C3C(v0 + 3) = v120;
    uint64_t v121 = v165;
    *((void *)v119 + 4) = v165;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(&v119[v118], v115, v116);
    swift_retain(v108);
    swift_retain(v121);
    dispatch thunk of InstalledAppProviding.installedApps(for:sharedUserId:useCache:alwaysIncludeCompanionApps:completion:)( v110,  v111,  v113,  1LL,  1LL,  sub_D4A48,  v119,  v166,  v155);
    swift_release(v119);
    swift_bridgeObjectRelease(v113);
  }

  else
  {
    uint64_t v88 = a1;
    os_log_t v89 = a2;
    sub_157C4((uint64_t)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 40), (uint64_t)&v175);
    sub_157C4((uint64_t)v89 + *(void *)(class metadata base offset for CommonAppResolver + *v89 + 24), (uint64_t)&v171);
    uint64_t v90 = (uint64_t)v89 + *(void *)(class metadata base offset for CommonAppResolver + *v89 + 32);
    swift_beginAccess(v90, v169, 0LL, 0LL);
    sub_157C4(v90, (uint64_t)v170);
    id v91 = [v161 privatePlayMediaIntentData];
    uint64_t v92 = v91;
    uint64_t v93 = v162;
    if (v91)
    {
      id v94 = [v91 audioSearchResults];

      uint64_t v95 = v165;
      if (v94)
      {
        uint64_t v96 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
        uint64_t v92 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v94, v96);
      }

      else
      {
        uint64_t v92 = 0LL;
      }
    }

    else
    {
      uint64_t v95 = v165;
    }

    uint64_t v168 = 0LL;
    memset(v167, 0, sizeof(v167));
    uint64_t v140 = v158;
    uint64_t v141 = v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v158, v88, v163);
    uint64_t v142 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v143 = (v142 + 16) & ~v142;
    unint64_t v144 = (v160 + v143 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v145 = swift_allocObject(&unk_26E950, v144 + 16, v142 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v145 + v143, v140, v141);
    id v146 = (void (**)(uint64_t))(v145 + v144);
    uint64_t *v146 = v93;
    v146[1] = (void (*)(uint64_t))v95;
    swift_retain(v95);
    INIntent.targetBundleIdentifier(userPreferenceProvider:deviceProvider:featureFlagProvider:internalSearchResults:alwaysInferAppFromSearchResults:nowPlaying:completion:)( &v175,  &v171,  v170,  v92,  1LL,  v167,  sub_D4960,  v145);
    swift_release(v145);
    swift_bridgeObjectRelease(v92);
    sub_1F6CC((uint64_t)v167, &qword_285EA8);
    sub_6C3C(v170);
    sub_6C3C(&v171);
    sub_6C3C(&v175);
  }

uint64_t sub_CC9A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v75 = a5;
  uint64_t v76 = a4;
  uint64_t v77 = a3;
  uint64_t v69 = a2;
  uint64_t v73 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v73);
  uint64_t v74 = (uint64_t *)((char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for DisambiguateItemsReason(0LL);
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  __chkstk_darwin(v7);
  id v70 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v67 = type metadata accessor for AppSelectionReport(0LL);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for InstalledApp(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v78 = v20;
  uint64_t v79 = v18;
  if (v21)
  {
    uint64_t v65 = v17;
    v83[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_C70BC(0, v21, 0);
    uint64_t v23 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v24 = *(void *)(v13 + 72);
    uint64_t v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v81 = v24;
    uint64_t v25 = v13;
    do
    {
      uint64_t v26 = v80(v15, v23, v12);
      uint64_t v27 = InstalledApp.bundleIdentifier.getter(v26);
      uint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      uint64_t v22 = (void *)v83[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v83[0]) & 1) == 0)
      {
        sub_C70BC(0, v22[2] + 1LL, 1);
        uint64_t v22 = (void *)v83[0];
      }

      unint64_t v31 = v22[2];
      unint64_t v30 = v22[3];
      if (v31 >= v30 >> 1)
      {
        sub_C70BC(v30 > 1, v31 + 1, 1);
        uint64_t v22 = (void *)v83[0];
      }

      v22[2] = v31 + 1;
      unint64_t v32 = &v22[2 * v31];
      v32[4] = v27;
      void v32[5] = v29;
      v23 += v81;
      --v21;
      uint64_t v13 = v25;
    }

    while (v21);
    uint64_t v20 = v78;
    uint64_t v16 = v79;
    uint64_t v17 = v65;
  }

  v83[0] = (uint64_t)v22;
  sub_D2A4C();
  uint64_t v33 = v83[0];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v16, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v34, v16);
  uint64_t v35 = swift_retain_n(v33, 2LL);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    os_log_type_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v39 = swift_slowAlloc(32LL, -1LL);
    v83[0] = v39;
    *(_DWORD *)os_log_type_t v38 = 136315138;
    uint64_t v40 = swift_retain(v33);
    uint64_t v41 = Array.description.getter(v40, &type metadata for String);
    unint64_t v43 = v42;
    swift_release(v33);
    uint64_t v82 = sub_6978(v41, v43, v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83);
    swift_release_n(v33, 2LL);
    swift_bridgeObjectRelease(v43);
    _os_log_impl( &dword_0,  v36,  v37,  "PlayMediaAppResolutionService#resolveBundleIdentifier disambiguating apps: %s",  v38,  0xCu);
    swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    swift_slowDealloc(v38, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v78, v79);
  }

  else
  {

    swift_release_n(v33, 2LL);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }

  uint64_t v44 = (uint64_t)v68;
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v45 = static AppSelectionContext.shared.getter();
  unint64_t v46 = (unsigned int *)&enum case for DisambiguateItemsReason.predictionUncertainty(_:);
  if (v45)
  {
    uint64_t v47 = v45;
    dispatch thunk of AppSelectionContext.report.getter(v45);
    swift_release(v47);
    uint64_t v48 = v66;
    uint64_t v49 = v67;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v44, 1LL, v67))
    {
      sub_1F6CC(v44, &qword_285470);
    }

    else
    {
      uint64_t v50 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v64, v44, v49);
      uint64_t v51 = sub_1F6CC(v44, &qword_285470);
      uint64_t v52 = v49;
      char v53 = AppSelectionReport.newUser.getter(v51);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v52);
      if ((v53 & 1) != 0) {
        unint64_t v46 = (unsigned int *)&enum case for DisambiguateItemsReason.newUser(_:);
      }
    }
  }

  sub_157C4(v69 + qword_287EF0, (uint64_t)v83);
  uint64_t v54 = v84;
  uint64_t v55 = v85;
  sub_6EA8(v83, v84);
  unint64_t v57 = v70;
  uint64_t v56 = v71;
  uint64_t v58 = *v46;
  uint64_t v59 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v70, v58, v72);
  dispatch thunk of PlayMediaIntentAppSelecting.recordDisambiguationReasonLogs(reason:count:)( v57,  *(void *)(v33 + 16),  v54,  v55);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  sub_6C3C(v83);
  uint64_t v60 = sub_6C5C(&qword_287F80);
  uint64_t v61 = (uint64_t)v74;
  *uint64_t v74 = v33;
  PlayMediaAppSelectionResult.resolutionResultType.getter(v60);
  swift_storeEnumTagMultiPayload(v61, v73, 1LL);
  v77(v61);
  return sub_D47DC(v61);
}

uint64_t sub_CCFB0( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v45 = a3;
  uint64_t v43 = a1;
  uint64_t v44 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v44);
  uint64_t v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v47 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v12 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v15, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v47);
  uint64_t v20 = swift_bridgeObjectRetain_n(a2, 2LL);
  int64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter();
  int v42 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc(28LL, -1LL);
    unint64_t v46 = a2;
    uint64_t v24 = v23;
    uint64_t v39 = swift_slowAlloc(64LL, -1LL);
    uint64_t v49 = v39;
    *(_DWORD *)uint64_t v24 = 136446722;
    os_log_t v38 = v21;
    uint64_t v25 = static Insights.appSelection.getter();
    uint64_t v41 = a5;
    unint64_t v27 = v26;
    uint64_t v48 = sub_6978(v25, v26, &v49);
    uint64_t v40 = a6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v24 + sub_6C3C(v0 + 12) = 2082;
    swift_bridgeObjectRetain(v46);
    uint64_t v37 = v16;
    uint64_t v28 = v43;
    uint64_t v48 = sub_6978(v43, v46, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    uint64_t v29 = swift_bridgeObjectRelease_n(v46, 3LL);
    *(_WORD *)(v24 + 2sub_6C3C(v0 + 2) = 1026;
    LODWORD(v2sub_6C3C(v0 + 7) = PlayMediaAppSelectionResult.attempted.getter(v29) & 1;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v47);
    LODWORD(v4sub_6C3C(v0 + 8) = v27;
    a5 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, (char *)&v48 + 4);
    os_log_t v30 = v38;
    _os_log_impl( &dword_0,  v38,  (os_log_type_t)v42,  "PlayMediaAppResolver#resolveBundleIdentifier %{public}s using inferred bundle: %{public}s, attempted app selection ?: %{BOOL,public}d",  (uint8_t *)v24,  0x1Cu);
    uint64_t v31 = v39;
    swift_arrayDestroy(v39, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v24;
    a2 = v46;
    swift_slowDealloc(v32, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v15);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v47);

    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v28 = v43;
  }

  uint64_t v33 = (char *)v11 + *(int *)(sub_6C5C(&qword_285EA0) + 48);
  uint64_t *v11 = v28;
  v11[1] = a2;
  uint64_t v34 = type metadata accessor for ResolutionResultType(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16LL))(v33, v45, v34);
  swift_storeEnumTagMultiPayload(v11, v44, 0LL);
  swift_bridgeObjectRetain(a2);
  a5(v11);
  return sub_D47DC((uint64_t)v11);
}

uint64_t sub_CD374( uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_6C5C(&qword_285EA0);
  void *v11 = a5;
  v11[1] = a6;
  uint64_t v12 = swift_bridgeObjectRetain(a6);
  PlayMediaAppSelectionResult.resolutionResultType.getter(v12);
  swift_storeEnumTagMultiPayload(v11, v9, 0LL);
  a3(v11);
  return sub_D47DC((uint64_t)v11);
}

uint64_t sub_CD440( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v83 = a5;
  uint64_t v84 = a7;
  uint64_t v82 = a6;
  uint64_t v80 = a4;
  uint64_t v81 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v77 = v12;
  uint64_t v78 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v70 - v18;
  uint64_t v20 = swift_allocObject(&unk_26EA40, 32LL, 7LL);
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = a1;
  uint64_t v75 = v20 + 16;
  *(void *)(v20 + 24) = a2;
  uint64_t v21 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v22 = static BundleIdentifiers.classical.getter(v21);
  uint64_t v24 = v23;
  if (v22 == a1 && v23 == a2)
  {
    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v24);
    int v26 = 0;
    if ((v25 & 1) == 0) {
      goto LABEL_14;
    }
  }

  uint64_t v27 = (uint64_t)a3 + *(void *)(class metadata base offset for CommonAppResolver + *a3 + 32);
  swift_beginAccess(v27, v85, 0LL, 0LL);
  sub_157C4(v27, (uint64_t)&v86);
  uint64_t v28 = v88;
  uint64_t v29 = v89;
  sub_6EA8(&v86, v88);
  uint64_t v30 = dispatch thunk of FeatureFlagProviding.classicalAppBundleOverride.getter(v28, v29);
  if (v31)
  {
    uint64_t v32 = v30;
    unint64_t v33 = v31;
    uint64_t v76 = a8;
    sub_6C3C(&v86);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v34 = sub_6960(v13, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v34, v13);
    uint64_t v35 = swift_bridgeObjectRetain_n(v33, 2LL);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v73 = v14;
      uint64_t v38 = swift_slowAlloc(12LL, -1LL);
      uint64_t v74 = a3;
      uint64_t v72 = v17;
      uint64_t v39 = (uint8_t *)v38;
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      uint64_t v86 = v40;
      uint64_t v71 = v19;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_bridgeObjectRetain(v33);
      uint64_t v91 = sub_6978(v32, v33, &v86);
      uint64_t v14 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92);
      swift_bridgeObjectRelease_n(v33, 3LL);
      _os_log_impl( &dword_0,  v36,  v37,  "PlayMediaAppResolver#resolveBundleIdentifier using overriden Classical Bundle ID (%s)",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      uint64_t v41 = v39;
      uint64_t v17 = v72;
      a3 = v74;
      swift_slowDealloc(v41, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v71, v13);
    }

    else
    {

      swift_bridgeObjectRelease_n(v33, 2LL);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    }

    a8 = v76;
    uint64_t v42 = *(void *)(v20 + 24);
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = v32;
    *(void *)(v20 + 24) = v33;
    swift_bridgeObjectRelease(v42);
  }

  else
  {
    sub_6C3C(&v86);
  }

  int v26 = 1;
LABEL_14:
  LODWORD(v76) = v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v43 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v43, v13);
  uint64_t v44 = swift_retain_n(v20, 2LL);
  uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc(22LL, -1LL);
    uint64_t v48 = swift_slowAlloc(64LL, -1LL);
    uint64_t v74 = a3;
    uint64_t v72 = v17;
    uint64_t v49 = a8;
    uint64_t v50 = v48;
    uint64_t v91 = v48;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v51 = static Insights.appSelection.getter();
    uint64_t v73 = v14;
    unint64_t v53 = v52;
    uint64_t v86 = sub_6978(v51, v52, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
    swift_bridgeObjectRelease(v53);
    *(_WORD *)(v47 + sub_6C3C(v0 + 12) = 2082;
    swift_beginAccess(v75, &v86, 0LL, 0LL);
    uint64_t v54 = *(void *)(v20 + 16);
    unint64_t v55 = *(void *)(v20 + 24);
    swift_bridgeObjectRetain(v55);
    uint64_t v90 = sub_6978(v54, v55, &v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
    swift_release_n(v20, 2LL);
    swift_bridgeObjectRelease(v55);
    _os_log_impl( &dword_0,  v45,  v46,  "PlayMediaAppResolver#resolveBundleIdentifier %{public}s overriding with internal bundle: %{public}s",  (uint8_t *)v47,  0x16u);
    swift_arrayDestroy(v50, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v56 = v50;
    a8 = v49;
    uint64_t v57 = v84;
    a3 = v74;
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v47, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v13);
  }

  else
  {

    swift_release_n(v20, 2LL);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v57 = v84;
  }

  uint64_t v58 = (void *)((char *)a3 + *(void *)(class metadata base offset for CommonAppResolver + *a3 + 48));
  uint64_t v59 = v58[3];
  uint64_t v75 = v58[4];
  uint64_t v74 = sub_6EA8(v58, v59);
  uint64_t v73 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v60 = v78;
  uint64_t v61 = v79;
  uint64_t v62 = a8;
  uint64_t v63 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v62, v81);
  uint64_t v64 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v65 = (v64 + 72) & ~v64;
  uint64_t v66 = swift_allocObject(&unk_26EA68, v65 + v77, v64 | 7);
  *(void *)(v66 + swift_weakDestroy(v0 + 16) = v20;
  *(_BYTE *)(v66 + 24) = v76;
  uint64_t v67 = v83;
  *(void *)(v66 + 3sub_6C3C(v0 + 2) = v80;
  *(void *)(v66 + 40) = v67;
  uint64_t v68 = v82;
  *(void *)(v66 + 4sub_6C3C(v0 + 8) = a3;
  *(void *)(v66 + 56) = v68;
  *(void *)(v66 + 64) = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v66 + v65, v60, v63);
  swift_retain(v20);
  swift_bridgeObjectRetain(v67);
  swift_retain(a3);
  swift_retain(v57);
  InstalledAppProviding.installedApps(for:sharedUserId:useCache:completion:)( v73,  0LL,  0LL,  1LL,  sub_D4D98,  v66,  v59,  v75);
  swift_release(v20);
  return swift_release(v66);
}

uint64_t sub_CDB58( void *a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(void *), uint64_t a8)
{
  uint64_t v149 = a8;
  uint64_t v150 = a7;
  uint64_t v143 = a6;
  unint64_t v147 = a5;
  uint64_t v141 = a4;
  uint64_t v146 = type metadata accessor for DisambiguateItemsReason(0LL);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  unint64_t v144 = &v137[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v148 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v148);
  uint64_t v153 = &v137[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v152 = &v137[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v142 = &v137[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v154 = &v137[-v20];
  __chkstk_darwin(v19);
  __n128 v139 = &v137[-v21];
  uint64_t v22 = type metadata accessor for InstalledApp(0LL);
  uint64_t v23 = *(void (***)(_BYTE *, uint64_t, __n128))(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v159 = &v137[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v24);
  uint64_t v27 = &v137[-v26];
  uint64_t v156 = a2 + 16;
  uint64_t v28 = a1[2];
  uint64_t v157 = v13;
  uint64_t v155 = a2;
  unint64_t v160 = v23;
  uint64_t v151 = v14;
  if (v28)
  {
    int v138 = a3;
    uint64_t v29 = (char *)a1 + ((*((unsigned __int8 *)v23 + 80) + 32LL) & ~(unint64_t)*((unsigned __int8 *)v23 + 80));
    uint64_t v30 = a1;
    uint64_t v31 = (uint64_t)v23[9];
    uint64_t v32 = (uint64_t (*)(_BYTE *, char *, uint64_t))v23[2];
    uint64_t v158 = v30;
    swift_bridgeObjectRetain(v30);
    unint64_t v33 = _swiftEmptyArrayStorage;
    uint64_t v140 = v28;
    uint64_t v34 = v28;
    do
    {
      uint64_t v35 = v32(v27, v29, v22);
      uint64_t v36 = InstalledApp.bundleIdentifier.getter(v35);
      uint64_t v38 = v37;
      ((void (*)(_BYTE *, uint64_t))v23[1])(v27, v22);
      if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0) {
        unint64_t v33 = sub_1FC6C(0LL, v33[2] + 1LL, 1, v33);
      }
      unint64_t v40 = v33[2];
      unint64_t v39 = v33[3];
      uint64_t v41 = v33;
      if (v40 >= v39 >> 1) {
        uint64_t v41 = sub_1FC6C((void *)(v39 > 1), v40 + 1, 1, v33);
      }
      _OWORD v41[2] = v40 + 1;
      unint64_t v33 = v41;
      uint64_t v42 = &v41[2 * v40];
      v42[4] = v36;
      void v42[5] = v38;
      v29 += v31;
      --v34;
      uint64_t v23 = v160;
    }

    while (v34);
    a1 = v158;
    swift_bridgeObjectRelease(v158);
    uint64_t v13 = v157;
    a2 = v155;
    uint64_t v28 = v140;
    LOBYTE(asub_6C3C(v0 + 3) = v138;
  }

  else
  {
    unint64_t v33 = _swiftEmptyArrayStorage;
  }

  swift_beginAccess(v156, v168, 0LL, 0LL);
  uint64_t v43 = *(void *)(a2 + 16);
  uint64_t v44 = *(void *)(a2 + 24);
  uint64_t v158 = v33;
  uint64_t v45 = sub_881D0(v43, v44, v33);
  unsigned __int8 v169 = v45 & 1;
  if ((a3 & 1) != 0 && (v45 & 1) == 0)
  {
    uint64_t v46 = static BundleIdentifiers.music.getter(v45);
    uint64_t v48 = v47;
    char v49 = sub_881D0(v46, v47, v158);
    swift_bridgeObjectRelease(v48);
    if ((v49 & 1) != 0)
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v50 = sub_6960(v13, (uint64_t)qword_2969C8);
      uint64_t v51 = v151;
      unint64_t v52 = v139;
      uint64_t v53 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v151 + 16))(v139, v50, v13);
      uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
      os_log_type_t v55 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = v28;
        uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v57 = 0;
        _os_log_impl( &dword_0,  v54,  v55,  "PlayMediaAppResolver#resolveBundleIdentifier Classical was selected, but is not installed. Falling back to Music app",  v57,  2u);
        uint64_t v58 = v57;
        uint64_t v28 = v56;
        swift_slowDealloc(v58, -1LL, -1LL);
      }

      uint64_t v59 = (*(uint64_t (**)(_BYTE *, uint64_t))(v51 + 8))(v52, v13);
      uint64_t v60 = static BundleIdentifiers.music.getter(v59);
      uint64_t v62 = v61;
      swift_beginAccess(v156, v161, 1LL, 0LL);
      uint64_t v63 = *(void *)(a2 + 24);
      *(void *)(a2 + swift_weakDestroy(v0 + 16) = v60;
      *(void *)(a2 + 24) = v62;
      swift_bridgeObjectRelease(v63);
      unsigned __int8 v169 = 1;
      uint64_t v23 = v160;
    }
  }

  if (v28)
  {
    uint64_t v64 = (char *)a1 + ((*((unsigned __int8 *)v23 + 80) + 32LL) & ~(unint64_t)*((unsigned __int8 *)v23 + 80));
    uint64_t v65 = (uint64_t)v23[9];
    uint64_t v66 = v28;
    uint64_t v67 = (uint64_t (*)(_BYTE *, char *, uint64_t))v23[2];
    uint64_t v68 = a1;
    swift_bridgeObjectRetain(a1);
    uint64_t v69 = v66 - 1;
    uint64_t v70 = v159;
    do
    {
      uint64_t v71 = v67(v70, v64, v22);
      uint64_t v72 = InstalledApp.bundleIdentifier.getter(v71);
      uint64_t v74 = v73;
      int v75 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v72, v73);
      __n128 v76 = swift_bridgeObjectRelease(v74);
      v160[1](v70, v22, v76);
      BOOL v78 = v69-- != 0;
      if ((v75 & 1) == 0) {
        break;
      }
      v64 += v65;
    }

    while (v78);
    swift_bridgeObjectRelease(v68);
    uint64_t v13 = v157;
  }

  else
  {
    int v75 = 1;
  }

  uint64_t v79 = v154;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v80 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v81 = v151;
  uint64_t v82 = *(void (***)(_BYTE *, uint64_t, __n128))(v151 + 16);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v82)(v79, v80, v13);
  uint64_t v83 = v158;
  uint64_t v84 = swift_bridgeObjectRetain_n(v158, 2LL);
  uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
  os_log_type_t v86 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = swift_slowAlloc(24LL, -1LL);
    uint64_t v88 = swift_slowAlloc(32LL, -1LL);
    uint64_t v167 = v88;
    *(_DWORD *)uint64_t v87 = 67109634;
    LODWORD(v165) = v75 & 1;
    unint64_t v160 = v82;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 4);
    *(_WORD *)(v87 + sub_6C3C(v0 + 8) = 1024;
    swift_beginAccess(&v169, v162, 0LL, 0LL);
    LODWORD(v165) = v169;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 4);
    *(_WORD *)(v87 + 14) = 2080;
    uint64_t v89 = swift_bridgeObjectRetain(v83);
    uint64_t v90 = Array.description.getter(v89, &type metadata for String);
    uint64_t v91 = v81;
    unint64_t v93 = v92;
    swift_bridgeObjectRelease(v158);
    uint64_t v94 = v90;
    uint64_t v83 = v158;
    uint64_t v165 = sub_6978(v94, v93, &v167);
    uint64_t v82 = v160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166);
    swift_bridgeObjectRelease_n(v83, 2LL);
    swift_bridgeObjectRelease(v93);
    _os_log_impl( &dword_0,  v85,  v86,  "PlayMediaAppResolver#resolveBundleIdentifier no3pBundle?:%{BOOL}d containsSelected1pBundle?:%{BOOL}d. Bundles: %s",  (uint8_t *)v87,  0x18u);
    swift_arrayDestroy(v88, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v95 = v88;
    uint64_t v13 = v157;
    swift_slowDealloc(v95, -1LL, -1LL);
    swift_slowDealloc(v87, -1LL, -1LL);

    uint64_t v96 = *(void (**)(_BYTE *, uint64_t))(v91 + 8);
    v96(v154, v13);
  }

  else
  {

    swift_bridgeObjectRelease_n(v83, 2LL);
    uint64_t v96 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
    v96(v79, v13);
  }

  unint64_t v97 = v153;
  unint64_t v98 = v147;
  swift_beginAccess(&v169, &v167, 0LL, 0LL);
  uint64_t v99 = v152;
  if (((v169 | v75) & 1) != 0)
  {
    __n128 v100 = swift_bridgeObjectRelease(v83);
    os_log_type_t v101 = v142;
    uint64_t v102 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, __n128))v82)(v142, v80, v13, v100);
    uint64_t v103 = (os_log_s *)Logger.logObject.getter(v102);
    os_log_type_t v104 = static os_log_type_t.debug.getter();
    BOOL v105 = os_log_type_enabled(v103, v104);
    uint64_t v106 = v155;
    if (v105)
    {
      uint64_t v107 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v107 = 0;
      _os_log_impl( &dword_0,  v103,  v104,  "PlayMediaAppResolver#resolveBundleIdentifier validated firstPartyResultsBundleIdentifier available",  v107,  2u);
      swift_slowDealloc(v107, -1LL, -1LL);
    }

    v96(v101, v13);
    sub_6C5C(&qword_285EA0);
    swift_beginAccess(v156, &v165, 0LL, 0LL);
    uint64_t v108 = *(void *)(v106 + 24);
    void *v97 = *(void *)(v106 + 16);
    v97[1] = v108;
    uint64_t v109 = swift_bridgeObjectRetain(v108);
    PlayMediaAppSelectionResult.resolutionResultType.getter(v109);
    uint64_t v110 = 0LL;
  }

  else
  {
    ((void (*)(_BYTE *, uint64_t, uint64_t))v82)(v152, v80, v13);
    uint64_t v111 = v155;
    swift_retain_n(v155, 2LL);
    uint64_t v112 = swift_bridgeObjectRetain_n(v98, 2LL);
    uint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
    os_log_type_t v114 = static os_log_type_t.error.getter();
    int v115 = v114;
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v116 = swift_slowAlloc(32LL, -1LL);
      LODWORD(v160) = v115;
      uint64_t v117 = v116;
      uint64_t v118 = swift_slowAlloc(96LL, -1LL);
      uint64_t v164 = v118;
      *(_DWORD *)uint64_t v117 = 136446722;
      uint64_t v119 = static Insights.appSelection.getter();
      unint64_t v121 = v120;
      uint64_t v165 = sub_6978(v119, v120, &v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166);
      swift_bridgeObjectRelease(v121);
      *(_WORD *)(v117 + sub_6C3C(v0 + 12) = 2082;
      swift_beginAccess(v156, &v165, 0LL, 0LL);
      uint64_t v122 = *(void *)(v111 + 16);
      unint64_t v123 = *(void *)(v111 + 24);
      swift_bridgeObjectRetain(v123);
      uint64_t v163 = sub_6978(v122, v123, &v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164);
      swift_release_n(v111, 2LL);
      swift_bridgeObjectRelease(v123);
      *(_WORD *)(v117 + 2sub_6C3C(v0 + 2) = 2082;
      swift_bridgeObjectRetain(v98);
      uint64_t v163 = sub_6978(v141, v98, &v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164);
      swift_bridgeObjectRelease_n(v98, 3LL);
      _os_log_impl( &dword_0,  v113,  (os_log_type_t)v160,  "PlayMediaAppResolver#resolveBundleIdentifier %{public}s inferred 1p bundle: %{public}s based on selection of: %{ public}s and intent contents, but it is not available on device... disambiguating.",  (uint8_t *)v117,  0x20u);
      swift_arrayDestroy(v118, 3LL, (char *)&type metadata for Any + 8);
      uint64_t v124 = v118;
      unint64_t v97 = v153;
      swift_slowDealloc(v124, -1LL, -1LL);
      swift_slowDealloc(v117, -1LL, -1LL);

      uint64_t v125 = v152;
      uint64_t v126 = v157;
    }

    else
    {

      swift_bridgeObjectRelease_n(v98, 2LL);
      swift_release_n(v111, 2LL);
      uint64_t v125 = v99;
      uint64_t v126 = v13;
    }

    v96(v125, v126);
    uint64_t v127 = *(void *)(v143 + qword_287EF0 + 24);
    uint64_t v128 = *(void *)(v143 + qword_287EF0 + 32);
    sub_6EA8((void *)(v143 + qword_287EF0), v127);
    uint64_t v129 = v145;
    uint64_t v130 = v144;
    uint64_t v131 = v146;
    (*(void (**)(_BYTE *, void, uint64_t))(v145 + 104))( v144,  enum case for DisambiguateItemsReason.unavailableInferred1pBundle(_:),  v146);
    uint64_t v132 = v158;
    dispatch thunk of PlayMediaIntentAppSelecting.recordDisambiguationReasonLogs(reason:count:)( v130,  v158[2],  v127,  v128);
    (*(void (**)(_BYTE *, uint64_t))(v129 + 8))(v130, v131);
    id v133 = (char *)v97 + *(int *)(sub_6C5C(&qword_287F80) + 48);
    void *v97 = v132;
    uint64_t v134 = enum case for ResolutionResultType.AppNotFoundDisambiguation(_:);
    uint64_t v135 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v135 - 8) + 104LL))(v133, v134, v135);
    uint64_t v110 = 1LL;
  }

  swift_storeEnumTagMultiPayload(v97, v148, v110);
  v150(v97);
  return sub_D47DC((uint64_t)v97);
}

uint64_t sub_CE748( uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t (*)(), uint64_t), uint64_t a12)
{
  int v40 = a8;
  uint64_t v41 = a7;
  unsigned int v42 = a3;
  uint64_t v45 = a12;
  uint64_t v43 = a6;
  uint64_t v44 = a11;
  uint64_t v39 = a10;
  uint64_t v37 = a4;
  uint64_t v38 = a9;
  uint64_t v15 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - v20;
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  uint64_t v22 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v23 = (v22 + 33) & ~v22;
  unint64_t v24 = (v17 + v23 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v25 = swift_allocObject(&unk_26E860, v24 + 16, v22 | 7);
  *(void *)(v25 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  uint64_t v36 = a2;
  uint64_t v26 = v42;
  *(_BYTE *)(v25 + 3sub_6C3C(v0 + 2) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v25 + v23, v19, v15);
  uint64_t v27 = (void *)(v25 + v24);
  *uint64_t v27 = v37;
  v27[1] = a5;
  uint64_t v28 = swift_retain(a5);
  uint64_t v29 = static os_signpost_type_t.begin.getter(v28);
  uint64_t v30 = qword_296AA0;
  uint64_t v31 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v32 = swift_allocObject(v31, 72LL, 7LL);
  *(_OWORD *)(v32 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = sub_6DAC();
  uint64_t v33 = v39;
  *(void *)(v32 + 3sub_6C3C(v0 + 2) = v38;
  *(void *)(v32 + 40) = v33;
  swift_bridgeObjectRetain(v33);
  os_signpost(_:dso:log:name:signpostID:_:_:)(v29, &dword_0, v30, a1, v36, v26, v21, v43, v41, v40, v32);
  swift_bridgeObjectRelease(v32);
  uint64_t v34 = swift_allocObject(&unk_26E888, 32LL, 7LL);
  *(void *)(v34 + swift_weakDestroy(v0 + 16) = sub_D4564;
  *(void *)(v34 + 24) = v25;
  swift_retain(v25);
  v44(sub_D477C, v34);
  swift_release(v25);
  swift_release(v34);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

uint64_t sub_CE9D0( uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t (*)(), uint64_t), uint64_t a12)
{
  int v40 = a8;
  uint64_t v41 = a7;
  unsigned int v42 = a3;
  uint64_t v45 = a12;
  uint64_t v43 = a6;
  uint64_t v44 = a11;
  uint64_t v39 = a10;
  uint64_t v37 = a4;
  uint64_t v38 = a9;
  uint64_t v15 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - v20;
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  uint64_t v22 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v23 = (v22 + 33) & ~v22;
  unint64_t v24 = (v17 + v23 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v25 = swift_allocObject(&unk_26E748, v24 + 16, v22 | 7);
  *(void *)(v25 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  uint64_t v36 = a2;
  uint64_t v26 = v42;
  *(_BYTE *)(v25 + 3sub_6C3C(v0 + 2) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v25 + v23, v19, v15);
  uint64_t v27 = (void *)(v25 + v24);
  *uint64_t v27 = v37;
  v27[1] = a5;
  uint64_t v28 = swift_retain(a5);
  uint64_t v29 = static os_signpost_type_t.begin.getter(v28);
  uint64_t v30 = qword_296AA0;
  uint64_t v31 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v32 = swift_allocObject(v31, 72LL, 7LL);
  *(_OWORD *)(v32 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = sub_6DAC();
  uint64_t v33 = v39;
  *(void *)(v32 + 3sub_6C3C(v0 + 2) = v38;
  *(void *)(v32 + 40) = v33;
  swift_bridgeObjectRetain(v33);
  os_signpost(_:dso:log:name:signpostID:_:_:)(v29, &dword_0, v30, a1, v36, v26, v21, v43, v41, v40, v32);
  swift_bridgeObjectRelease(v32);
  uint64_t v34 = swift_allocObject(&unk_26E770, 32LL, 7LL);
  *(void *)(v34 + swift_weakDestroy(v0 + 16) = sub_D4564;
  *(void *)(v34 + 24) = v25;
  swift_retain(v25);
  v44(sub_D4DF8, v34);
  swift_release(v25);
  swift_release(v34);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

double sub_CEC58( int a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void *a5, Swift::OpaquePointer_optional internalSearchResults)
{
  rawValue = internalSearchResults.value._rawValue;
  if (a1 == 4 || a1 == 1)
  {
    uint64_t v10 = *(void *)(a2 + qword_287F10 + 24);
    uint64_t v11 = *(void *)(a2 + qword_287F10 + 32);
    sub_6EA8((void *)(a2 + qword_287F10), v10);
    uint64_t v12 = (void *)swift_allocObject(&unk_26EA18, 48LL, 7LL);
    v12[2] = a3;
    v12[3] = a4;
    v12[4] = a5;
    v12[5] = rawValue;
    swift_bridgeObjectRetain(rawValue);
    swift_retain(a4);
    id v13 = a5;
    dispatch thunk of NowPlayingProviding.app(completion:)(sub_D4CB8, v12, v10, v11);
    swift_release(v12);
  }

  else
  {
    v16.value._rawValue = internalSearchResults.value._rawValue;
    v16.is_nil = 1;
    Swift::String v15 = INIntent.firstPartyResultsBundleIdentifier(internalSearchResults:canUseClassical:)(v16, (Swift::Bool)a3);
    a3(v15._countAndFlagsBits);
    *(void *)&double result = swift_bridgeObjectRelease(v15._object).n128_u64[0];
  }

  return result;
}

double sub_CED4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a4 && !a7)
  {
    uint64_t v28 = static BundleIdentifiers.music.getter(v17);
    uint64_t v30 = v29;
    if (v28 == a3 && v29 == a4)
    {
      swift_bridgeObjectRelease(v29);
      char v32 = 0;
    }

    else
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4);
      swift_bridgeObjectRelease(v30);
      char v32 = v33 ^ 1;
    }

    v37.is_nil = v32 & 1;
    v37.value._rawValue = a11;
    Swift::String v34 = INIntent.firstPartyResultsBundleIdentifier(internalSearchResults:canUseClassical:)(v37, v31);
    a8(v34._countAndFlagsBits);
    *(void *)&double result = swift_bridgeObjectRelease(v34._object).n128_u64[0];
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v20 = sub_6960(v15, (uint64_t)qword_2969C8);
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v20, v15);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v24 = 0;
      _os_log_impl( &dword_0,  v22,  v23,  "PlayMediaAppResolver#determineFirstPartyBundleIdentifier encountered error getting now playing bundle. Falling b ack to allow use of Classical",  v24,  2u);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    v36.value._rawValue = a11;
    v36.is_nil = 1;
    Swift::String v26 = INIntent.firstPartyResultsBundleIdentifier(internalSearchResults:canUseClassical:)(v36, v25);
    a8(v26._countAndFlagsBits);
    *(void *)&double result = swift_bridgeObjectRelease(v26._object).n128_u64[0];
  }

  return result;
}

BOOL sub_CEF5C()
{
  uint64_t v1 = type metadata accessor for TCCStatus(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v32 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  char v33 = v0;
  uint64_t v11 = sub_6EA8((void *)((char *)v0 + qword_287F18), *(void *)((char *)v0 + qword_287F18 + 24));
  uint64_t v12 = static BundleIdentifiers.classical.getter(v11);
  uint64_t v14 = v13;
  dispatch thunk of TCCProviding.getSiriTCCStatusForBundle(bundleId:)(v12);
  __n128 v15 = swift_bridgeObjectRelease(v14);
  uint64_t v16 = enum case for TCCStatus.notYetPresented(_:);
  uint64_t v17 = *(void (**)(char *, void, uint64_t, __n128))(v2 + 104);
  v17(v8, enum case for TCCStatus.notYetPresented(_:), v1, v15);
  char v18 = static TCCStatus.== infix(_:_:)(v10, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19(v8, v1);
  if ((v18 & 1) != 0)
  {
    uint64_t v20 = (uint64_t)v33 + *(void *)(class metadata base offset for CommonAppResolver + *v33 + 32);
    swift_beginAccess(v20, v35, 33LL, 0LL);
    char v32 = v5;
    uint64_t v21 = v16;
    uint64_t v22 = *(void *)(v20 + 24);
    uint64_t v23 = *(void *)(v20 + 32);
    sub_1094C(v20, v22);
    uint64_t v24 = v22;
    uint64_t v16 = v21;
    uint64_t v5 = v32;
    dispatch thunk of FeatureFlagProviding.classicalTCCRejectedCounter.setter(0LL, v24, v23);
    swift_endAccess(v35);
  }

  ((void (*)(char *, void, uint64_t))v17)(v8, enum case for TCCStatus.accepted(_:), v1);
  char v25 = static TCCStatus.== infix(_:_:)(v10, v8);
  v19(v8, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v10, v1);
  if ((v25 & 1) != 0)
  {
    v19(v5, v1);
LABEL_6:
    v19(v10, v1);
    return 1LL;
  }

  ((void (*)(char *, uint64_t, uint64_t))v17)(v8, v16, v1);
  char v26 = static TCCStatus.== infix(_:_:)(v5, v8);
  v19(v8, v1);
  v19(v5, v1);
  if ((v26 & 1) != 0) {
    goto LABEL_6;
  }
  uint64_t v28 = (uint64_t)v33 + *(void *)(class metadata base offset for CommonAppResolver + *v33 + 32);
  swift_beginAccess(v28, v34, 0LL, 0LL);
  sub_157C4(v28, (uint64_t)v35);
  uint64_t v29 = v36;
  uint64_t v30 = v37;
  sub_6EA8(v35, v36);
  uint64_t v31 = dispatch thunk of FeatureFlagProviding.classicalTCCRejectedCounter.getter(v29, v30);
  v19(v10, v1);
  sub_6C3C(v35);
  return v31 < 2;
}

uint64_t sub_CF22C()
{
  uint64_t v0 = sub_6C5C(&qword_287F90);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t result = CircularBuffer.init(size:)(3LL);
  qword_296A00 = result;
  return result;
}

uint64_t sub_CF270()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_CF294(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_CF2B8(uint64_t (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v91 = a4;
  uint64_t v90 = a3;
  uint64_t v106 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v96 = *(void *)(v5 - 8);
  uint64_t v97 = v5;
  __chkstk_darwin(v5);
  uint64_t v95 = (char *)v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  __chkstk_darwin(v7);
  unint64_t v92 = (char *)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_287FA8);
  __chkstk_darwin(v9);
  unint64_t v98 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AppSelectionSignals.RawSignalResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v89 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = v14;
  __chkstk_darwin(v13);
  __n128 v100 = (char *)v82 - v15;
  uint64_t v16 = sub_6C5C(&qword_287FB0);
  __chkstk_darwin(v16);
  uint64_t v102 = (char *)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for UUID(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v103 = v18;
  uint64_t v104 = v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v87 = (char *)v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = v21;
  __chkstk_darwin(v20);
  BOOL v105 = (char *)v82 - v22;
  uint64_t v23 = type metadata accessor for PlayMediaAppSelectionRecordSignalsResult(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  char v26 = (char *)v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v27, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, v31, v27);
  char v32 = *(uint64_t (**)(char *, void, uint64_t))(v24 + 16);
  uint64_t v99 = a1;
  uint64_t v33 = v32(v26, a1, v23);
  Swift::String v34 = (os_log_s *)Logger.logObject.getter(v33);
  uint64_t v35 = v28;
  os_log_type_t v36 = static os_log_type_t.info.getter(v34);
  if (os_log_type_enabled(v34, v36))
  {
    uint64_t v84 = v35;
    uint64_t v37 = swift_slowAlloc(12LL, -1LL);
    uint64_t v101 = v12;
    uint64_t v38 = (uint8_t *)v37;
    uint64_t v83 = swift_slowAlloc(32LL, -1LL);
    aBlock[0] = v83;
    uint64_t v85 = v11;
    *(_DWORD *)uint64_t v38 = 136315138;
    v82[1] = v38 + 4;
    uint64_t v39 = sub_10430( &qword_287FB8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlayMediaAppSelectionRecordSignalsResult,  (uint64_t)&protocol conformance descriptor for PlayMediaAppSelectionRecordSignalsResult);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v23, v39);
    unint64_t v42 = v41;
    uint64_t v107 = (void *)sub_6978(v40, v41, aBlock);
    uint64_t v11 = v85;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, aBlock);
    swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    _os_log_impl(&dword_0, v34, v36, "PlayMediaAppResolver#postResolve app selection signals recorded: %s", v38, 0xCu);
    uint64_t v43 = v83;
    swift_arrayDestroy(v83, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    uint64_t v44 = v38;
    uint64_t v12 = v101;
    swift_slowDealloc(v44, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v30, v27);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v27);
  }

  uint64_t v45 = *(void *)(v106 + qword_287F08 + 24);
  uint64_t v46 = *(void *)(v106 + qword_287F08 + 32);
  sub_6EA8((void *)(v106 + qword_287F08), v45);
  uint64_t result = dispatch thunk of ExecutorProviding.currentRequestId.getter(v45, v46);
  char v49 = v105;
  if (v48)
  {
    uint64_t v50 = v48;
    uint64_t v51 = (uint64_t)v102;
    UUID.init(uuidString:)(result);
    swift_bridgeObjectRelease(v50);
    uint64_t v53 = v103;
    uint64_t v52 = v104;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v51, 1LL, v103) == 1)
    {
      uint64_t v54 = &qword_287FB0;
      return sub_1F6CC(v51, v54);
    }

    os_log_type_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 32);
    uint64_t v56 = v55(v49, v51, v53);
    uint64_t v57 = v98;
    PlayMediaAppSelectionRecordSignalsResult.rawSignals.getter(v56);
    uint64_t v51 = (uint64_t)v57;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v57, 1LL, v11) == 1)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v53);
      uint64_t v54 = &qword_287FA8;
      return sub_1F6CC(v51, v54);
    }

    uint64_t v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v58 = v12;
    uint64_t v59 = v100;
    uint64_t v60 = v99(v100, v51, v11);
    uint64_t v61 = static DispatchQueues.analytics.getter(v60);
    uint64_t v101 = v12;
    uint64_t v102 = (char *)v61;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v63 = v89;
    v62(v89, v59, v11);
    uint64_t v64 = v87;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v87, v49, v53);
    uint64_t v65 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v66 = v11;
    uint64_t v67 = (v65 + 24) & ~v65;
    unint64_t v68 = (v88 + v67 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v69 = *(unsigned __int8 *)(v52 + 80);
    uint64_t v70 = (v69 + v68 + 16) & ~v69;
    uint64_t v71 = swift_allocObject(&unk_26E810, v70 + v86, v65 | v69 | 7);
    uint64_t v72 = v106;
    *(void *)(v71 + swift_weakDestroy(v0 + 16) = v106;
    v99((char *)(v71 + v67), (uint64_t)v63, v66);
    uint64_t v73 = (void *)(v71 + v68);
    uint64_t v74 = v91;
    *uint64_t v73 = v90;
    v73[1] = v74;
    v55((char *)(v71 + v70), (uint64_t)v64, v53);
    aBlock[4] = (uint64_t)sub_D46A0;
    uint64_t v109 = v71;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_6E7C;
    aBlock[3] = (uint64_t)&unk_26E828;
    int v75 = _Block_copy(aBlock);
    swift_retain(v72);
    uint64_t v76 = swift_bridgeObjectRetain(v74);
    uint64_t v77 = v92;
    static DispatchQoS.unspecified.getter(v76);
    uint64_t v107 = _swiftEmptyArrayStorage;
    sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v78 = sub_6C5C(&qword_285480);
    sub_21358();
    uint64_t v79 = v95;
    uint64_t v80 = v97;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v107, v78);
    uint64_t v81 = v102;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v77, v79, v75);
    _Block_release(v75);

    (*(void (**)(char *, uint64_t))(v96 + 8))(v79, v80);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v77, v94);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v66);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v53);
    return swift_release(v109);
  }

  return result;
}

uint64_t sub_CFA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v32 = a3;
  uint64_t v7 = sub_6C5C(&qword_287FB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AppSelectionSignals.RawSignalResult(0LL);
  uint64_t v31 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v30 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = a1;
    uint64_t v24 = a2;
    uint64_t v25 = v21;
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "PlayMediaAppResolver#postResolve: Sending A/B evaluation SELF message", v21, 2u);
    char v26 = v25;
    a2 = v24;
    a1 = v23;
    uint64_t v10 = v22;
    uint64_t v9 = v30;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v27 = *(void *)(a1 + qword_287F20);
  uint64_t v28 = *(void *)(a1 + qword_287F20 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v12, a2, v10);
  void v35[3] = v27;
  v35[4] = v28;
  sub_10974(v35);
  dispatch thunk of SelfEmitting.init(rawSignalResult:)(v12, v27, v28);
  dispatch thunk of SelfEmitting.emitAndLinkEvaluationRecord(groundTruthBundleId:requestId:)(v32, v33, v34, v27, v28);
  sub_1F6CC((uint64_t)v9, &qword_287FB0);
  return sub_6C3C(v35);
}

uint64_t sub_CFCC0(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v51 = *v3;
  uint64_t v52 = a1;
  uint64_t v5 = sub_6C5C(&qword_287F78);
  __chkstk_darwin(v5);
  uint64_t v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AcceptedSpeakerIdConfidence(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  char v49 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - v15;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  uint64_t v19 = ((uint64_t (*)(char *))v18)(v16);
  os_log_type_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "PlayMediaAppResolver#forcedResolution...", v22, 2u);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v16, v11);
  uint64_t v24 = (uint64_t)v4 + *(void *)(class metadata base offset for CommonAppResolver + *v4 + 32);
  swift_beginAccess(v24, v55, 0LL, 0LL);
  sub_157C4(v24, (uint64_t)v56);
  uint64_t v25 = v57;
  uint64_t v26 = v58;
  sub_6EA8(v56, v57);
  char v27 = dispatch thunk of FeatureFlagProviding.appTrainingDisambiguateAlways.getter(v25, v26);
  sub_6C3C(v56);
  uint64_t v28 = v52;
  v56[0] = v52;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for AcceptedSpeakerIdConfidence.executeOnCompanionConfidence(_:),  v7);
  uint64_t v29 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  PrivateMediaIntentDataProviding.getSharedUserID(speakerConfidence:)( v10,  v29,  &protocol witness table for INPlayMediaIntent);
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  __n128 v32 = swift_bridgeObjectRelease(v31);
  if (v31)
  {
    uint64_t v33 = v28;
    uint64_t v34 = *(void *)((char *)v4 + qword_287EF0 + 24);
    uint64_t v35 = *(void *)((char *)v4 + qword_287EF0 + 32);
    sub_6EA8((void *)((char *)v4 + qword_287EF0), v34);
    uint64_t v36 = swift_allocObject(&unk_26E630, 64LL, 7LL);
    *(void *)(v36 + swift_weakDestroy(v0 + 16) = v4;
    *(void *)(v36 + 24) = v33;
    *(_BYTE *)(v36 + 3sub_6C3C(v0 + 2) = v27 & 1;
    uint64_t v37 = v54;
    *(void *)(v36 + 40) = v53;
    *(void *)(v36 + 4sub_6C3C(v0 + 8) = v37;
    *(void *)(v36 + 56) = v51;
    swift_retain(v4);
    id v38 = v33;
    swift_retain(v37);
    dispatch thunk of PlayMediaIntentAppSelecting.forcedDisambiguationRates(completion:)(sub_D4288, v36, v34, v35);
    return swift_release(v36);
  }

  else
  {
    uint64_t v40 = v49;
    uint64_t v41 = v48(v49, v47, v11, v32);
    unint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    uint64_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, (os_log_type_t)v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl( &dword_0,  v42,  (os_log_type_t)v43,  "Unknown user requested to play on tvOS, skipping forced disambiguation",  v44,  2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    v23(v40, v11);
    uint64_t v45 = type metadata accessor for BundleResolutionResult(0LL);
    uint64_t v46 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v50, 1LL, 1LL, v45);
    v53(v46);
    return sub_1F6CC(v46, &qword_287F78);
  }

uint64_t sub_D00E4( uint64_t a1, void *a2, void *a3, int a4, void (*a5)(uint64_t), void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v171 = a7;
  uint64_t v178 = a6;
  uint64_t v177 = a5;
  int v188 = a4;
  id v193 = a3;
  uint64_t v190 = a2;
  uint64_t v8 = sub_6C5C(&qword_287F78);
  __chkstk_darwin(v8);
  uint64_t v165 = (char *)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v170 = type metadata accessor for AcceptedSpeakerIdConfidence(0LL);
  uint64_t v168 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v167 = (char *)&v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v182 = type metadata accessor for SelfSamplingCalculator(0LL);
  uint64_t v173 = *(uint64_t (**)(char *, uint64_t))(v182 - 8);
  __chkstk_darwin(v182);
  uint64_t v172 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v186 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  id v162 = (uint8_t *)&v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v192 = (char *)&v160 - v16;
  uint64_t v169 = v17;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v160 - v18;
  uint64_t v20 = type metadata accessor for DisambiguationConfiguration(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  os_log_t v174 = (char *)&v160 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v187 = (char *)&v160 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v160 - v27;
  uint64_t v164 = v29;
  __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v160 - v30;
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v185 = (char *)&v160 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = __chkstk_darwin(v34);
  id v161 = (char *)&v160 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v160 - v38;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v40 = sub_6960(v32, (uint64_t)qword_2969C8);
  uint64_t v184 = v33;
  uint64_t v41 = *(void (**)(char *))(v33 + 16);
  uint64_t v179 = v40;
  uint64_t v194 = v32;
  unint64_t v180 = (unint64_t)v41;
  v41(v39);
  unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v42(v31, a1, v20);
  v42(v28, a1, v20);
  uint64_t v163 = v42;
  uint64_t v43 = ((uint64_t (*)(char *, uint64_t, uint64_t))v42)(v187, a1, v20);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  int v46 = v45;
  BOOL v47 = os_log_type_enabled(v44, v45);
  uint64_t v191 = v12;
  uint64_t v189 = v19;
  uint64_t v176 = a1;
  uint64_t v175 = v20;
  uint64_t v166 = v21;
  if (v47)
  {
    uint64_t v48 = v21;
    uint64_t v49 = v20;
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v50 = 134218496;
    LODWORD(v18sub_6C3C(v0 + 3) = v46;
    double v198 = ((double (*)(void))DisambiguationConfiguration.rate.getter)();
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, &v199);
    uint64_t v51 = *(uint64_t (**)(char *, uint64_t))(v48 + 8);
    uint64_t v52 = v51(v31, v49);
    *(_WORD *)(v50 + sub_6C3C(v0 + 12) = 2048;
    double v198 = DisambiguationConfiguration.firstPartyOnlyAdditionalRate.getter(v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, &v199);
    uint64_t v53 = v51(v28, v49);
    *(_WORD *)(v50 + 2sub_6C3C(v0 + 2) = 2048;
    uint64_t v54 = v187;
    *(double *)&uint64_t v55 = COERCE_DOUBLE(DisambiguationConfiguration.rateLimitSeconds.getter(v53));
    v51(v54, v49);
    uint64_t v12 = v191;
    double v198 = *(double *)&v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, &v199);
    _os_log_impl( &dword_0,  v44,  (os_log_type_t)v183,  "PlayMediaAppResolver#forcedResolution rates - disambiguationRate:%f, disambiguationAdditionalRateFirstParty:%f, ra teLimitSeconds:%ld",  (uint8_t *)v50,  0x20u);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  else
  {
    uint64_t v56 = *(void (**)(void *, uint64_t))(v21 + 8);
    v56(v187, v20);
    v56(v31, v20);
    v56(v28, v20);
  }

  uint64_t v181 = *(void (**)(char *, uint64_t))(v184 + 8);
  v181(v39, v194);
  uint64_t v57 = (uint64_t)v190 + *(void *)(class metadata base offset for CommonAppResolver + *v190 + 32);
  swift_beginAccess(v57, v197, 0LL, 0LL);
  sub_157C4(v57, (uint64_t)&v198);
  uint64_t v58 = v200;
  uint64_t v59 = v201;
  sub_6EA8(&v198, v200);
  LODWORD(v184) = dispatch thunk of FeatureFlagProviding.isAppTrainingDisambiguationEnabled.getter(v58, v59);
  uint64_t v60 = sub_6C3C(&v198);
  id v61 = v193;
  LODWORD(v18sub_6C3C(v0 + 7) = INPlayMediaIntent.appInferred.getter(v60);
  uint64_t v62 = static BundleIdentifiers.localBundleIdentifier(for:)(v61);
  uint64_t v64 = v63;
  uint64_t v65 = static BundleIdentifiers.sentinelBundleIdentifier.getter(v62);
  uint64_t v67 = v66;
  if (v64)
  {
    if (v65 == v62 && v64 == v66)
    {
      swift_bridgeObjectRelease(v66);
      uint64_t v68 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v64);
      LODWORD(v18sub_6C3C(v0 + 3) = 1;
    }

    else
    {
      LODWORD(v18sub_6C3C(v0 + 3) = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v66);
      swift_bridgeObjectRelease(v67);
      swift_bridgeObjectRelease(v64);
    }
  }

  else
  {
    uint64_t v68 = ((uint64_t (*)(uint64_t))swift_bridgeObjectRelease)(v66);
    LODWORD(v18sub_6C3C(v0 + 3) = 0;
  }

  uint64_t v69 = sub_D2BD4(v68, 0.0, 1.0);
  double v71 = v70;
  uint64_t v72 = sub_D2BD4(v69, 0.0, 1.0);
  uint64_t v74 = v73;
  BOOL v75 = v71 <= DisambiguationConfiguration.rate.getter(v72);
  Date.init()(v76);
  sub_157C4(v57, (uint64_t)&v198);
  uint64_t v77 = v200;
  uint64_t v78 = v201;
  sub_6EA8(&v198, v200);
  uint64_t v79 = v192;
  dispatch thunk of FeatureFlagProviding.appTrainingDisambiguationLastUsed.getter(v77, v78);
  sub_6C3C(&v198);
  double v80 = Date.timeIntervalSince(_:)(v79);
  uint64_t v81 = *(uint64_t (**)(char *, uint64_t))(v186 + 8);
  uint64_t v82 = v81(v79, v12);
  BOOL v83 = v80 > (double)DisambiguationConfiguration.rateLimitSeconds.getter(v82);
  uint64_t v84 = v172;
  SelfSamplingCalculator.init()();
  BOOL v85 = SelfSamplingCalculator.isPermitted()();
  (*((void (**)(char *, uint64_t))v173 + 1))(v84, v182);
  uint64_t v86 = swift_allocObject(&unk_26E658, 17LL, 7LL);
  *(_BYTE *)(v86 + swift_weakDestroy(v0 + 16) = 0;
  uint64_t v87 = (BOOL *)(v86 + 16);
  if (qword_283980 != -1) {
    swift_once(&qword_283980, sub_1E17C4);
  }
  uint64_t v88 = &unk_296000;
  BOOL v89 = *(_BYTE *)(qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_requestCancelled) == 1;
  uint64_t v182 = v86;
  if (v89
    && (*(_BYTE *)(qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_appSelectionUsed) & v187 & 1) != 0)
  {
    uint64_t v90 = *(void **)(qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_mediaSearch);
    if (v90)
    {
      id v91 = v90;
      id v92 = [v193 mediaSearch];
      if (!v92)
      {

        goto LABEL_25;
      }

      uint64_t v93 = v92;
      sub_1641C(0LL, &qword_284DD8, &OBJC_CLASS___INMediaSearch_ptr);
      id v94 = v91;
      char v95 = static NSObject.== infix(_:_:)(v94, v93);

      if ((v95 & 1) == 0)
      {

        goto LABEL_25;
      }

      uint64_t v173 = (uint64_t (*)(char *, uint64_t))v94;
      uint64_t v97 = v192;
      Date.init()(v96);
      uint64_t v98 = qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_time;
      swift_beginAccess( qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_time,  v195,  0LL,  0LL);
      uint64_t v99 = v162;
      (*(void (**)(uint8_t *, uint64_t, uint64_t))(v186 + 16))(v162, v98, v12);
      double v100 = Date.timeIntervalSince(_:)(v99);
      v81((char *)v99, v12);
      uint64_t v101 = v81(v97, v12);
      if (v100 >= static Time.secondsIn2Mins.getter(v101))
      {
      }

      else
      {
        *uint64_t v87 = (*(_BYTE *)(qword_296BB0
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_previousDisambiguationCancelled) & 1) == 0;
        uint64_t v102 = v161;
        uint64_t v103 = v194;
        uint64_t v104 = ((uint64_t (*)(char *, uint64_t, uint64_t))v180)(v161, v179, v194);
        BOOL v105 = (os_log_s *)Logger.logObject.getter(v104);
        os_log_type_t v106 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v105, v106))
        {
          uint64_t v107 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v108 = swift_slowAlloc(32LL, -1LL);
          uint64_t v172 = (char *)v108;
          id v162 = v107;
          *(_DWORD *)uint64_t v107 = 136315138;
          double v196 = *(double *)&v108;
          unint64_t v160 = v107 + 4;
          uint64_t v109 = *(void *)(qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_refId + 8);
          double v198 = *(double *)(qword_296BB0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_refId);
          uint64_t v199 = v109;
          swift_bridgeObjectRetain(v109);
          uint64_t v110 = sub_6C5C(&qword_284600);
          uint64_t v111 = String.init<A>(describing:)(&v198, v110);
          uint64_t v112 = v105;
          unint64_t v114 = v113;
          double v198 = COERCE_DOUBLE(sub_6978(v111, v113, (uint64_t *)&v196));
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, &v199);
          swift_bridgeObjectRelease(v114);
          os_log_type_t v115 = v106;
          uint64_t v116 = v162;
          _os_log_impl( &dword_0,  v112,  v115,  "PlayMediaAppResolver#forcedResolution found this request as repeated, inferred, recent followup to the prior intent: %s resulting in a cancelled result after app selection used",  v162,  0xCu);
          uint64_t v117 = v172;
          swift_arrayDestroy(v172, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v117, -1LL, -1LL);
          swift_slowDealloc(v116, -1LL, -1LL);

          v181(v161, v103);
LABEL_25:
          uint64_t v86 = v182;
          uint64_t v88 = (void *)&unk_296000;
          goto LABEL_29;
        }

        v181(v102, v103);
      }

      uint64_t v86 = v182;
      uint64_t v88 = &unk_296000;
    }
  }

LABEL_29:
  uint64_t v173 = v81;
  char v118 = v75 | v188;
  char v119 = v83 | v188;
  int v120 = v85 | v188;
  char v121 = *v87;
  if (*v87)
  {
    uint64_t v122 = v194;
    unint64_t v123 = v185;
  }

  else
  {
    uint64_t v122 = v194;
    unint64_t v123 = v185;
    if (((v184 ^ 1) & 1) == 0
      && ((v187 ^ 1) & 1) == 0
      && ((v183 ^ 1) & 1) == 0)
    {
      char v121 = v118 & v119 & v120;
    }
  }

  *(_BYTE *)(v88[374] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PriorResultContext_previousDisambiguationCancelled) = *v87;
  ((void (*)(char *, uint64_t, uint64_t))v180)(v123, v179, v122);
  uint64_t v124 = swift_retain(v86);
  uint64_t v125 = v86;
  uint64_t v126 = (os_log_s *)Logger.logObject.getter(v124);
  os_log_type_t v127 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v126, v127))
  {
    uint64_t v128 = (_DWORD *)swift_slowAlloc(86LL, -1LL);
    LODWORD(v180) = v120;
    uint64_t v129 = v128;
    *uint64_t v128 = 67111936;
    LODWORD(v19sub_6C3C(v0 + 8) = v121 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, (char *)&v198 + 4);
    *((_WORD *)v129 + 4) = 1024;
    swift_beginAccess(v87, &v198, 0LL, 0LL);
    LODWORD(v196) = *(unsigned __int8 *)(v125 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    swift_release(v125);
    *((_WORD *)v129 + sub_6C3C(v0 + 7) = 1024;
    LODWORD(v196) = v184 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + 10) = 1024;
    LODWORD(v196) = v187 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + 1sub_6C3C(v0 + 3) = 1024;
    LODWORD(v196) = v183 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + swift_weakDestroy(v0 + 16) = 1024;
    LODWORD(v196) = v118 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + 19) = 2048;
    double v196 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, v197);
    *((_WORD *)v129 + 24) = 1024;
    LODWORD(v196) = v119 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + 2sub_6C3C(v0 + 7) = 1024;
    LODWORD(v196) = v188 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + 30) = 1024;
    LODWORD(v196) = v180 & 1;
    unint64_t v123 = v185;
    uint64_t v122 = v194;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, (char *)&v196 + 4);
    *((_WORD *)v129 + 3sub_6C3C(v0 + 3) = 2048;
    double v196 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, v197);
    *((_WORD *)v129 + 3sub_6C3C(v0 + 8) = 2048;
    double v196 = *(double *)&v74;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, v197);
    _os_log_impl( &dword_0,  v126,  v127,  "PlayMediaAppResolver#forcedResolution forced disambiguation test?: %{BOOL}d ---- repeatedCancelled?: %{BOOL}d disa mbiguationEnabled?:%{BOOL}d, appInferred?:%{BOOL}d, bundleIdentifierIsSentinel?:%{BOOL}d, rateTest?:%{BOOL}d, disa mbiguationElapsed?:%f, interactionFrequencyTest?:%{BOOL}d disambiguateAlways?:%{BOOL}d, recordStoringPermitted?:%{ BOOL}d,rateRoll:%f, rateRoll1p:%f",  (uint8_t *)v129,  0x56u);
    swift_slowDealloc(v129, -1LL, -1LL);
  }

  else
  {

    swift_release(v125);
  }

  uint64_t v130 = v191;
  uint64_t v131 = v189;
  v181(v123, v122);
  if ((v121 & 1) != 0)
  {
    uint64_t v132 = (void *)((char *)v190 + *(void *)(class metadata base offset for CommonAppResolver + *v190 + 48));
    id v133 = (char *)v132[4];
    uint64_t v194 = v132[3];
    uint64_t v185 = v133;
    uint64_t v187 = (char *)sub_6EA8(v132, v194);
    uint64_t v134 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v184 = v134;
    double v196 = *(double *)&v193;
    uint64_t v135 = v168;
    uint64_t v136 = v167;
    uint64_t v137 = v170;
    (*(void (**)(char *, void, uint64_t))(v168 + 104))( v167,  enum case for AcceptedSpeakerIdConfidence.executeOnCompanionConfidence(_:),  v170);
    uint64_t v183 = PrivateMediaIntentDataProviding.getSharedUserID(speakerConfidence:)( v136,  v134,  &protocol witness table for INPlayMediaIntent);
    uint64_t v181 = v138;
    (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v137);
    v163(v174, v176, v175);
    uint64_t v139 = v186;
    (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v192, v131, v130);
    uint64_t v140 = v166;
    uint64_t v141 = *(unsigned __int8 *)(v166 + 80);
    uint64_t v142 = (v141 + 32) & ~v141;
    uint64_t v143 = v142 + v164;
    unint64_t v144 = (((v142 + v164) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v180 = (v144 + 23) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v145 = *(unsigned __int8 *)(v139 + 80);
    uint64_t v146 = (v145 + v180 + 8) & ~v145;
    unint64_t v147 = (v169 + v146 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v148 = swift_allocObject(&unk_26E680, v147 + 8, v141 | v145 | 7);
    id v149 = v193;
    *(void *)(v148 + swift_weakDestroy(v0 + 16) = v193;
    *(void *)(v148 + 24) = v74;
    (*(void (**)(uint64_t, char *, uint64_t))(v140 + 32))(v148 + v142, v174, v175);
    *(_BYTE *)(v148 + v14sub_6C3C(v0 + 3) = v188 & 1;
    uint64_t v150 = v182;
    *(void *)((v143 & 0xFFFFFFFFFFFFFFF8LL) + v148 + sub_6C3C(v0 + 8) = v182;
    uint64_t v151 = (void (**)(uint64_t))(v148 + v144);
    os_log_type_t v152 = v178;
    *uint64_t v151 = v177;
    v151[1] = v152;
    uint64_t v153 = v190;
    uint64_t v130 = v191;
    *(void *)(v148 + v180) = v190;
    (*(void (**)(uint64_t, char *, uint64_t))(v139 + 32))(v148 + v146, v192, v130);
    *(void *)(v148 + v14sub_6C3C(v0 + 7) = v171;
    swift_retain(v150);
    id v154 = v149;
    swift_retain(v152);
    swift_retain(v153);
    uint64_t v155 = v181;
    dispatch thunk of InstalledAppProviding.installedApps(for:sharedUserId:useCache:alwaysIncludeCompanionApps:completion:)( v184,  v183,  v181,  1LL,  1LL,  sub_D43C0,  v148,  v194,  v185);
    uint64_t v131 = v189;
    swift_release(v148);
    __n128 v156 = swift_bridgeObjectRelease(v155);
  }

  else
  {
    uint64_t v157 = type metadata accessor for BundleResolutionResult(0LL);
    uint64_t v158 = (uint64_t)v165;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56LL))(v165, 1LL, 1LL, v157);
    v177(v158);
    sub_1F6CC(v158, &qword_287F78);
    uint64_t v150 = v182;
  }

  ((void (*)(char *, uint64_t, __n128))v173)(v131, v130, v156);
  return swift_release(v150);
}

  __break(1u);
  return result;
}

    uint64_t v32 = String.lowercased()();
    uint64_t v33 = String.lowercased()();
    uint64_t v31 = v33._object;
    if (v32._object)
    {
      if (v32._countAndFlagsBits == v33._countAndFlagsBits && v32._object == v33._object)
      {
        swift_bridgeObjectRelease_n(v32._object, 2LL);
        uint64_t v34 = 1;
      }

      else
      {
        uint64_t v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v32._countAndFlagsBits, v32._object);
        swift_bridgeObjectRelease(v32._object);
        swift_bridgeObjectRelease(v33._object);
      }

      *(_BYTE *)(inited + 120) = v34 & 1;
      strcpy((char *)(inited + 128), "isWordOfTheDay");
      *(_BYTE *)(inited + 14sub_6C3C(v0 + 3) = -18;
      goto LABEL_37;
    }

uint64_t sub_D129C( uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, void *a8, double a9, char *a10)
{
  unint64_t v144 = a8;
  uint64_t v146 = a7;
  unint64_t v147 = a6;
  LODWORD(v14sub_6C3C(v0 + 3) = a4;
  uint64_t v149 = a3;
  id v142 = a2;
  uint64_t v13 = sub_6C5C(&qword_287F78);
  __chkstk_darwin(v13);
  uint64_t v145 = (uint64_t *)((char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v141 = type metadata accessor for DisambiguateItemsReason(0LL);
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = type metadata accessor for Date(0LL);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  int v138 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v135 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  id v133 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v132 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v130 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v129 = type metadata accessor for DisambiguationConfiguration(0LL);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v126 = v19;
  os_log_type_t v127 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v151 = *(_BYTE **)(v20 - 8);
  uint64_t v152 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v148 = (char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v150 = (char *)&v125 - v23;
  uint64_t v24 = type metadata accessor for InstalledApp(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v28 = *(void *)(a1 + 16);
  uint64_t v29 = _swiftEmptyArrayStorage;
  if (v28)
  {
    uint64_t v125 = a5;
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_C70BC(0, v28, 0);
    uint64_t v30 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v31 = *(void (**)(char *, uint64_t (*)(void, void, void), uint64_t))(v25 + 72);
    uint64_t v153 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 16);
    id v154 = v31;
    uint64_t v32 = v25;
    do
    {
      uint64_t v33 = v153(v27, v30, v24);
      uint64_t v34 = InstalledApp.bundleIdentifier.getter(v33);
      uint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
      uint64_t v29 = (void *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native(aBlock[0]) & 1) == 0)
      {
        sub_C70BC(0, v29[2] + 1LL, 1);
        uint64_t v29 = (void *)aBlock[0];
      }

      unint64_t v38 = v29[2];
      unint64_t v37 = v29[3];
      if (v38 >= v37 >> 1)
      {
        sub_C70BC(v37 > 1, v38 + 1, 1);
        uint64_t v29 = (void *)aBlock[0];
      }

      v29[2] = v38 + 1;
      uint64_t v39 = &v29[2 * v38];
      v39[4] = v34;
      v39[5] = v36;
      v30 += (uint64_t)v154;
      --v28;
      uint64_t v25 = v32;
    }

    while (v28);
    a5 = v125;
  }

  aBlock[0] = (uint64_t)v29;
  sub_D2A4C();
  uint64_t v40 = aBlock[0];
  uint64_t v41 = *(void *)(aBlock[0] + 16);
  if (v41)
  {
    uint64_t v42 = a5;
    swift_retain(aBlock[0]);
    uint64_t v43 = (void *)(v40 + 40);
    uint64_t v44 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v46 = *(v43 - 1);
      uint64_t v45 = *v43;
      swift_bridgeObjectRetain(*v43);
      if ((static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v46, v45) & 1) != 0)
      {
        swift_bridgeObjectRelease(v45);
      }

      else
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v44);
        aBlock[0] = (uint64_t)v44;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_C70BC(0, v44[2] + 1LL, 1);
          uint64_t v44 = (void *)aBlock[0];
        }

        unint64_t v49 = v44[2];
        unint64_t v48 = v44[3];
        if (v49 >= v48 >> 1)
        {
          sub_C70BC(v48 > 1, v49 + 1, 1);
          uint64_t v44 = (void *)aBlock[0];
        }

        _OWORD v44[2] = v49 + 1;
        uint64_t v50 = &v44[2 * v49];
        v50[4] = v46;
        v50[5] = v45;
      }

      v43 += 2;
      --v41;
    }

    while (v41);
    swift_release(v40);
    a5 = v42;
  }

  else
  {
    uint64_t v44 = _swiftEmptyArrayStorage;
  }

  uint64_t v51 = (_BYTE *)(a5 + 16);
  uint64_t v52 = v44[2];
  swift_release(v44);
  id v53 = [v142 mediaSearch];
  uint64_t v54 = v152;
  if (v53)
  {
    uint64_t v55 = v53;
    uint64_t v56 = (char *)[v53 mediaType];

    BOOL v57 = v56 == (_BYTE *)&dword_8 + 2;
  }

  else
  {
    BOOL v57 = 0;
  }

  unsigned int v58 = (DisambiguationConfiguration.firstPartyOnlyAdditionalRate.getter() >= a9) | v143;
  swift_beginAccess(a5 + 16, v162, 0LL, 0LL);
  char v59 = *v51;
  LODWORD(v14sub_6C3C(v0 + 2) = v57;
  if ((v59 & 1) != 0)
  {
    int v60 = 1;
  }

  else
  {
    if (v52) {
      int v61 = 1;
    }
    else {
      int v61 = v57;
    }
    int v60 = v61 | v58;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v62 = sub_6960(v54, (uint64_t)qword_2969C8);
  uint64_t v63 = (void (*)(void))*((void *)v151 + 2);
  uint64_t v153 = (uint64_t (*)(char *, uint64_t, uint64_t))v62;
  id v154 = (void (*)(char *, uint64_t (*)(void, void, void), uint64_t))v63;
  v63(v150);
  uint64_t v64 = swift_retain(a5);
  uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
  os_log_type_t v66 = static os_log_type_t.default.getter();
  BOOL v67 = os_log_type_enabled(v65, v66);
  uint64_t v125 = v52;
  if (v67)
  {
    uint64_t v68 = v40;
    uint64_t v69 = (_BYTE *)(a5 + 16);
    BOOL v70 = v52 != 0;
    uint64_t v71 = a5;
    uint64_t v72 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v72 = 67110144;
    LODWORD(aBlock[0]) = v60 & 1;
    LODWORD(v14sub_6C3C(v0 + 3) = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    *(_WORD *)(v72 + sub_6C3C(v0 + 8) = 1024;
    LODWORD(aBlock[0]) = v70;
    uint64_t v51 = v69;
    uint64_t v40 = v68;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    *(_WORD *)(v72 + 14) = 1024;
    LODWORD(aBlock[0]) = (_DWORD)v142;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    *(_WORD *)(v72 + 20) = 1024;
    LODWORD(aBlock[0]) = v58 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    *(_WORD *)(v72 + 26) = 1024;
    uint64_t v54 = v152;
    swift_beginAccess(v51, v155, 0LL, 0LL);
    LODWORD(aBlock[0]) = *(unsigned __int8 *)(v71 + 16);
    LOBYTE(v60) = (_BYTE)v143;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    swift_release(v71);
    _os_log_impl( &dword_0,  v65,  v66,  "PlayMediaAppResolver#forcedResolution firstPartyDisambiguate?:%{BOOL}d --- default apps test. contains3p?:%{BOOL}d audiobook?:%{BOOL}d firstPartyRateTest?:%{BOOL}d repeatedCancelled?:%{BOOL}d",  (uint8_t *)v72,  0x20u);
    swift_slowDealloc(v72, -1LL, -1LL);
  }

  else
  {

    swift_release(a5);
  }

  uint64_t v73 = v148;
  uint64_t v74 = (uint64_t (*)(char *, uint64_t))*((void *)v151 + 1);
  uint64_t v75 = v74(v150, v54);
  if ((v60 & 1) != 0)
  {
    uint64_t v143 = (void (*)(char *, uint64_t))v74;
    uint64_t v151 = v51;
    uint64_t v150 = a10;
    BOOL v76 = v125 != 0;
    uint64_t v77 = (void *)static DispatchQueues.analytics.getter(v75);
    uint64_t v78 = v128;
    uint64_t v79 = v127;
    uint64_t v80 = v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v128 + 16))(v127, v149, v129);
    uint64_t v81 = *(unsigned __int8 *)(v78 + 80);
    uint64_t v82 = (v81 + 32) & ~v81;
    uint64_t v83 = swift_allocObject(&unk_26E6A8, v82 + v126, v81 | 7);
    *(_BYTE *)(v83 + swift_weakDestroy(v0 + 16) = v76;
    uint64_t v84 = v144;
    *(void *)(v83 + 24) = v144;
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v83 + v82, v79, v80);
    unint64_t v160 = sub_D4508;
    uint64_t v161 = v83;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_6E7C;
    unint64_t v159 = &unk_26E6C0;
    BOOL v85 = _Block_copy(aBlock);
    uint64_t v86 = v84;
    uint64_t v87 = v152;
    uint64_t v88 = swift_retain(v86);
    BOOL v89 = v130;
    static DispatchQoS.unspecified.getter(v88);
    __n128 v156 = _swiftEmptyArrayStorage;
    sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v90 = sub_6C5C(&qword_285480);
    sub_21358();
    id v91 = v133;
    uint64_t v92 = v135;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v156, v90);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v89, v91, v85);
    _Block_release(v85);

    (*(void (**)(char *, uint64_t))(v134 + 8))(v91, v92);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v89, v132);
    swift_release(v161);
    v154(v73, (uint64_t (*)(void, void, void))v153, v87);
    uint64_t v93 = swift_retain_n(v40, 2LL);
    id v94 = (os_log_s *)Logger.logObject.getter(v93);
    os_log_type_t v95 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = v87;
      uint64_t v97 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v98 = swift_slowAlloc(32LL, -1LL);
      aBlock[0] = v98;
      *(_DWORD *)uint64_t v97 = 136315138;
      uint64_t v99 = swift_retain(v40);
      uint64_t v100 = Array.description.getter(v99, &type metadata for String);
      unint64_t v102 = v101;
      swift_release(v40);
      __n128 v156 = (void *)sub_6978(v100, v102, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v156, v157);
      swift_release_n(v40, 2LL);
      swift_bridgeObjectRelease(v102);
      _os_log_impl(&dword_0, v94, v95, "PlayMediaAppResolver#forcedResolution disambiguating apps: %s", v97, 0xCu);
      swift_arrayDestroy(v98, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1LL, -1LL);
      swift_slowDealloc(v97, -1LL, -1LL);

      uint64_t v103 = v148;
      uint64_t v104 = v96;
    }

    else
    {

      swift_release_n(v40, 2LL);
      uint64_t v103 = v73;
      uint64_t v104 = v87;
    }

    v143(v103, v104);
    byte_287EE0 = 1;
    uint64_t v107 = v138;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v138, v150, v137);
    uint64_t v108 = v144;
    uint64_t v109 = (uint64_t)v144 + *(void *)(class metadata base offset for CommonAppResolver + *v144 + 32);
    swift_beginAccess(v109, aBlock, 33LL, 0LL);
    uint64_t v110 = *(void *)(v109 + 24);
    uint64_t v111 = *(void *)(v109 + 32);
    sub_1094C(v109, v110);
    dispatch thunk of FeatureFlagProviding.appTrainingDisambiguationLastUsed.setter(v107, v110, v111);
    swift_endAccess(aBlock);
    sub_157C4((uint64_t)v108 + qword_287EF0, (uint64_t)aBlock);
    uint64_t v112 = v159;
    unint64_t v113 = v160;
    sub_6EA8(aBlock, (uint64_t)v159);
    unint64_t v114 = v151;
    swift_beginAccess(v151, &v156, 0LL, 0LL);
    uint64_t v115 = v140;
    if (*v114) {
      uint64_t v116 = (unsigned int *)&enum case for DisambiguateItemsReason.repeatCancelled(_:);
    }
    else {
      uint64_t v116 = (unsigned int *)&enum case for DisambiguateItemsReason.forced(_:);
    }
    uint64_t v117 = v139;
    uint64_t v118 = v141;
    (*(void (**)(char *, void, uint64_t))(v140 + 104))(v139, *v116, v141);
    dispatch thunk of PlayMediaIntentAppSelecting.recordDisambiguationReasonLogs(reason:count:)( v117,  *(void *)(v40 + 16),  v112,  v113);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v118);
    sub_6C3C(aBlock);
    uint64_t v119 = sub_6C5C(&qword_287F80);
    uint64_t v106 = (uint64_t)v145;
    int v120 = (char *)v145 + *(int *)(v119 + 48);
    *uint64_t v145 = v40;
    uint64_t v121 = enum case for ResolutionResultType.ForcedDisambiguation(_:);
    uint64_t v122 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 104LL))(v120, v121, v122);
    uint64_t v123 = type metadata accessor for BundleResolutionResult(0LL);
    swift_storeEnumTagMultiPayload(v106, v123, 1LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56LL))(v106, 0LL, 1LL, v123);
  }

  else
  {
    swift_release(v40);
    uint64_t v105 = type metadata accessor for BundleResolutionResult(0LL);
    uint64_t v106 = (uint64_t)v145;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56LL))(v145, 1LL, 1LL, v105);
  }

  v147(v106);
  return sub_1F6CC(v106, &qword_287F78);
}

void sub_D1FBC(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v53 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for CoreAnalyticsResponses.FabricatedPlayCodes(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = (unsigned int *)&enum case for CoreAnalyticsResponses.FabricatedPlayCodes.forcedDisambiguationWith3p(_:);
  if ((a1 & 1) == 0) {
    uint64_t v10 = (unsigned int *)&enum case for CoreAnalyticsResponses.FabricatedPlayCodes.forcedDisambiguation1pOnly(_:);
  }
  uint64_t v11 = (*(uint64_t (**)(char *, void, uint64_t))(v7 + 104))(v9, *v10, v6);
  uint64_t v51 = CoreAnalyticsResponses.FabricatedPlayCodes.rawValue.getter(v11);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = sub_6C5C(&qword_285478);
  uint64_t inited = swift_initStackObject(v12, &v60);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_215760;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6449707061LL;
  *(void *)(inited + 40) = 0xE500000000000000LL;
  uint64_t v50 = sub_1641C(0LL, &qword_287F88, &OBJC_CLASS___NSString_ptr);
  *(void *)(inited + 4sub_6C3C(v0 + 8) = NSString.init(stringLiteral:)("", 0LL, 2LL);
  *(void *)(inited + 56) = 1701080931LL;
  *(void *)(inited + 64) = 0xE400000000000000LL;
  *(NSNumber *)(inited + 7sub_6C3C(v0 + 2) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0x70616C45656D6974LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xEB00000000646573LL;
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  *(NSNumber *)(inited + 96) = NSNumber.init(integerLiteral:)(0LL);
  *(void *)(inited + 104) = 0x65636E6174736E69LL;
  *(void *)(inited + 1sub_6C3C(v0 + 12) = 0xE800000000000000LL;
  uint64_t v14 = (uint64_t)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 32);
  swift_beginAccess(v14, v59, 0LL, 0LL);
  sub_157C4(v14, (uint64_t)v54);
  uint64_t v16 = v55;
  uint64_t v15 = v56;
  sub_6EA8(v54, (uint64_t)v55);
  dispatch thunk of FeatureFlagProviding.appSelectionUsageCounter.getter(v16, v15);
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  sub_6C3C(v54);
  *(void *)(inited + 120) = isa;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x756F43736D657469LL;
  *(void *)(inited + 136) = 0xEA0000000000746ELL;
  *(NSNumber *)(inited + 144) = NSNumber.init(integerLiteral:)(0LL);
  *(void *)(inited + 15sub_6C3C(v0 + 2) = 0x7265666E49707061LL;
  *(void *)(inited + 160) = 0xEB00000000646572LL;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = [objc_allocWithZone(NSNumber) initWithBool:1];
  *(void *)(inited + 176) = 0x706D657474417361LL;
  *(void *)(inited + 184) = 0xEB00000000646574LL;
  *(void *)(inited + 19sub_6C3C(v0 + 2) = [objc_allocWithZone(NSNumber) initWithBool:0];
  *(void *)(inited + 200) = 0x7265735577656ELL;
  *(void *)(inited + 20sub_6C3C(v0 + 8) = 0xE700000000000000LL;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = [objc_allocWithZone(NSNumber) initWithBool:0];
  *(void *)(inited + 224) = 0x646573557361LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE600000000000000LL;
  *(void *)(inited + 240) = [objc_allocWithZone(NSNumber) initWithBool:0];
  strcpy((char *)(inited + 248), "asExperimentId");
  *(_BYTE *)(inited + 26sub_6C3C(v0 + 3) = -18;
  DisambiguationConfiguration.trialExperimentId.getter();
  if (v18) {
    unint64_t v19 = v18;
  }
  else {
    unint64_t v19 = 0xE000000000000000LL;
  }
  NSString v20 = String._bridgeToObjectiveC()();
  uint64_t v21 = swift_bridgeObjectRelease(v19);
  *(void *)(inited + 264) = v20;
  strcpy((char *)(inited + 272), "asTreatmentId");
  *(_WORD *)(inited + 286) = -4864;
  DisambiguationConfiguration.trialTreatmentId.getter(v21);
  if (v22) {
    unint64_t v23 = v22;
  }
  else {
    unint64_t v23 = 0xE000000000000000LL;
  }
  NSString v24 = String._bridgeToObjectiveC()();
  uint64_t v25 = swift_bridgeObjectRelease(v23);
  *(void *)(inited + 28sub_6C3C(v0 + 8) = v24;
  *(void *)(inited + 296) = 0x756F6C6C6F527361LL;
  *(void *)(inited + 304) = 0xEB00000000644974LL;
  DisambiguationConfiguration.trialRolloutId.getter(v25);
  if (v26) {
    unint64_t v27 = v26;
  }
  else {
    unint64_t v27 = 0xE000000000000000LL;
  }
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  *(void *)(inited + 3sub_6C3C(v0 + 12) = v28;
  *(void *)(inited + 320) = 0x6469666E6F437361LL;
  *(void *)(inited + 32sub_6C3C(v0 + 8) = 0xEF73624165636E65LL;
  *(NSNumber *)(inited + 336) = NSNumber.init(floatLiteral:)(-1.0);
  *(void *)(inited + 344) = 0xD000000000000010LL;
  *(void *)(inited + 35sub_6C3C(v0 + 2) = 0x800000000021E380LL;
  *(NSNumber *)(inited + 360) = NSNumber.init(floatLiteral:)(-1.0);
  *(void *)(inited + 36sub_6C3C(v0 + 8) = 0x64497070417361LL;
  *(void *)(inited + 376) = 0xE700000000000000LL;
  *(void *)(inited + 384) = NSString.init(stringLiteral:)("", 0LL, 2LL);
  strcpy((char *)(inited + 392), "successCount");
  *(_BYTE *)(inited + 405) = 0;
  *(_WORD *)(inited + 406) = -5120;
  *(NSNumber *)(inited + 40sub_6C3C(v0 + 8) = NSNumber.init(integerLiteral:)(0LL);
  *(void *)(inited + 4swift_weakDestroy(v0 + 16) = 0xD000000000000010LL;
  *(void *)(inited + 424) = 0x800000000021E3A0LL;
  *(NSNumber *)(inited + 43sub_6C3C(v0 + 2) = NSNumber.init(integerLiteral:)(0LL);
  *(void *)(inited + 440) = 0x6F43646573557361LL;
  *(void *)(inited + 44sub_6C3C(v0 + 8) = 0xEB00000000746E75LL;
  *(NSNumber *)(inited + 456) = NSNumber.init(integerLiteral:)(0LL);
  strcpy((char *)(inited + 464), "responseCode");
  *(_BYTE *)(inited + 47sub_6C3C(v0 + 7) = 0;
  *(_WORD *)(inited + 47sub_6C3C(v0 + 8) = -5120;
  uint64_t v58 = v51;
  dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  uint64_t v30 = v29;
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  *(void *)(inited + 480) = v31;
  unint64_t v32 = sub_75420(inited);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v33 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v35 = v52;
  uint64_t v34 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v33, v4);
  uint64_t v36 = swift_bridgeObjectRetain_n(v32, 2LL);
  unint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc(12LL, -1LL);
    uint64_t v51 = v4;
    uint64_t v40 = (uint8_t *)v39;
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    v54[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v42 = sub_1641C(0LL, &qword_285488, &OBJC_CLASS___NSObject_ptr);
    uint64_t v43 = swift_bridgeObjectRetain(v32);
    uint64_t v44 = Dictionary.description.getter(v43, &type metadata for String, v42, &protocol witness table for String);
    unint64_t v46 = v45;
    swift_bridgeObjectRelease(v32);
    uint64_t v58 = sub_6978(v44, v46, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, v59);
    swift_bridgeObjectRelease_n(v32, 2LL);
    swift_bridgeObjectRelease(v46);
    _os_log_impl( &dword_0,  v37,  v38,  "PlayMediaAppResolver#forcedResolution recording result analytics data due to disambiguation result: %s",  v40,  0xCu);
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v51);
  }

  else
  {

    swift_bridgeObjectRelease_n(v32, 2LL);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v4);
  }

  NSString v47 = String._bridgeToObjectiveC()();
  uint64_t v48 = swift_allocObject(&unk_26E6F8, 24LL, 7LL);
  *(void *)(v48 + swift_weakDestroy(v0 + 16) = v32;
  uint64_t v56 = CommonFlowStrategy.makeParameterMetadata(intent:);
  uint64_t v57 = v48;
  v54[0] = (uint64_t)_NSConcreteStackBlock;
  v54[1] = 1107296256LL;
  v54[2] = (uint64_t)sub_2DABC;
  uint64_t v55 = &unk_26E710;
  unint64_t v49 = _Block_copy(v54);
  swift_release(v57);
  AnalyticsSendEventLazy(v47, v49);
  _Block_release(v49);
}

uint64_t sub_D27F8()
{
  return sub_6C3C((void *)(v0 + qword_287F18));
}

void *PlayMediaAppResolver.deinit()
{
  uint64_t v0 = (void *)InstrumentedAppResolutionService.deinit();
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 8)
                                      + 8));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 16)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 24)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 32)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 40)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 48)));
  sub_6C3C((void *)((char *)v0 + qword_287EF0));
  sub_6C3C((void *)((char *)v0 + qword_287EF8));
  sub_6C3C((void *)((char *)v0 + qword_287F00));
  sub_6C3C((void *)((char *)v0 + qword_287F08));
  sub_6C3C((void *)((char *)v0 + qword_287F10));
  sub_6C3C((void *)((char *)v0 + qword_287F18));
  return v0;
}

uint64_t PlayMediaAppResolver.__deallocating_deinit()
{
  uint64_t v0 = PlayMediaAppResolver.deinit();
  return swift_deallocClassInstance(v0, 488LL, 7LL);
}

uint64_t sub_D29A0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v12 = static os_signpost_type_t.end.getter();
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)(v12, &dword_0, qword_296AA0, a2, a3, a4, a5);
  return a6(a1);
}

void sub_D2A4C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0LL;
    while (1)
    {
      unint64_t v21 = 0LL;
      swift_stdlib_random(&v21, 8LL);
      uint64_t v6 = (v21 * (unsigned __int128)v2) >> 64;
      if (v2 > v21 * v2)
      {
        unint64_t v7 = -(uint64_t)v2 % v2;
        if (v7 > v21 * v2)
        {
          do
          {
            unint64_t v21 = 0LL;
            swift_stdlib_random(&v21, 8LL);
          }

          while (v7 > v21 * v2);
          uint64_t v6 = (v21 * (unsigned __int128)v2) >> 64;
        }
      }

      unint64_t v8 = v4 + v6;
      if (__OFADD__(v4, v6)) {
        break;
      }
      if (v4 != v8)
      {
        unint64_t v9 = *(void *)(v1 + 16);
        if (v4 >= v9) {
          goto LABEL_19;
        }
        if (v8 >= v9) {
          goto LABEL_20;
        }
        uint64_t v10 = (uint64_t *)(v1 + 32 + 16 * v4);
        uint64_t v12 = *v10;
        uint64_t v11 = v10[1];
        uint64_t v13 = (uint64_t *)(v1 + 32 + 16 * v8);
        uint64_t v15 = *v13;
        uint64_t v14 = v13[1];
        swift_bridgeObjectRetain(v11);
        swift_bridgeObjectRetain(v14);
        if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0) {
          uint64_t v1 = sub_140378(v1);
        }
        if (v4 >= *(void *)(v1 + 16)) {
          goto LABEL_21;
        }
        uint64_t v16 = (void *)(v1 + 32 + 16 * v4);
        uint64_t v17 = v16[1];
        *uint64_t v16 = v15;
        v16[1] = v14;
        swift_bridgeObjectRelease(v17);
        if (v8 >= *(void *)(v1 + 16)) {
          goto LABEL_22;
        }
        unint64_t v18 = (void *)(v1 + 32 + 16 * v8);
        uint64_t v19 = v18[1];
        *unint64_t v18 = v12;
        v18[1] = v11;
        swift_bridgeObjectRelease(v19);
        *NSString v20 = v1;
      }

      --v2;
      if (v4++ == v3) {
        return;
      }
    }

    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }

uint64_t sub_D2BD4(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }

  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000LL) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }

  uint64_t v6 = result;
  uint64_t v7 = 0LL;
  uint64_t result = swift_stdlib_random(&v7, 8LL);
  return result;
}

uint64_t sub_D2C7C( char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(char *))
{
  char v13 = *a1;
  uint64_t v11 = static os_signpost_type_t.end.getter();
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)(v11, &dword_0, qword_296AA0, a2, a3, a4, a5);
  return a6(&v13);
}

uint64_t sub_D2D38(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_D2C7C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(char *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_D2D94(char *a1)
{
  unint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = *a1;
  return v2(&v4);
}

uint64_t sub_D2DC8(void *a1, void *a2, uint64_t a3, uint64_t a4, const char *a5, char *a6)
{
  uint64_t v171 = a4;
  uint64_t v178 = a3;
  id v181 = a1;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void (**)(void, void))(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v167 = (char *)&v161 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v168 = (char *)&v161 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v170 = (char *)&v161 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v172 = (char *)&v161 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v173 = (char *)&v161 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v176 = (char *)&v161 - v22;
  __chkstk_darwin(v21);
  NSString v24 = (char *)&v161 - v23;
  static ExecutorProvider.shared.getter(&v185);
  uint64_t v26 = v187;
  uint64_t v25 = v188;
  sub_6EA8(&v185, v187);
  LOBYTE(v26) = dispatch thunk of ExecutorProviding.willSiriSpeak.getter(v26, v25);
  sub_6C3C(&v185);
  if (qword_283888 != -1) {
LABEL_68:
  }
    swift_once(&qword_283888, sub_BFC5C);
  uint64_t v177 = a6;
  uint64_t v27 = sub_6960(v9, (uint64_t)qword_2969C8);
  NSString v28 = (uint64_t *)*((void *)v10 + 2);
  uint64_t v182 = v27;
  uint64_t v29 = ((uint64_t (*)(char *))v28)(v24);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.info.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    a6 = (char *)v9;
    unint64_t v32 = a5;
    uint64_t v33 = v28;
    uint64_t v34 = a2;
    uint64_t v35 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v35 = 67109120;
    LODWORD(v185) = v26 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v185, (char *)&v185 + 4);
    _os_log_impl(&dword_0, v30, v31, "PlayMediaAppResolver#postResolve will Siri speak?:%{BOOL}d", v35, 8u);
    uint64_t v36 = v35;
    a2 = v34;
    NSString v28 = v33;
    a5 = v32;
    uint64_t v9 = (uint64_t)a6;
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  uint64_t v10 = (void (*)(void, void))*((void *)v10 + 1);
  v10(v24, v9);
  INPlayMediaIntent.configureStartPlaybackOnSetQueue(willSiriSpeak:)(v26 & 1);
  uint64_t v169 = a2;
  os_log_type_t v38 = (void *)App.appIdentifier.getter(v37);
  if (!v39) {
    goto LABEL_75;
  }
  unint64_t v40 = v39;
  uint64_t v185 = v38;
  unint64_t v186 = v39;
  uint64_t v41 = static BundleIdentifiers.classical.getter(v38);
  uint64_t v43 = v42;
  uint64_t v183 = v41;
  uint64_t v184 = v42;
  unint64_t v44 = sub_6CE0();
  unint64_t v45 = sub_6D24();
  char v46 = BidirectionalCollection<>.starts<A>(with:)( &v183,  &type metadata for String,  &type metadata for String,  v44,  v45);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v43);
  if ((v46 & 1) == 0
    || (id v47 = [v181 privatePlayMediaIntentData]) == 0
    || (uint64_t v48 = v47,
        NSString v24 = (char *)[v47 audioSearchResults],
        v48,
        !v24))
  {
LABEL_75:
    uint64_t v96 = *(void *)(v178 + qword_287F08 + 24);
    uint64_t v97 = *(void *)(v178 + qword_287F08 + 32);
    sub_6EA8((void *)(v178 + qword_287F08), v96);
    uint64_t v98 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v96, v97);
    if (!v99)
    {
      unint64_t v114 = v173;
      uint64_t v115 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v173, v182, v9);
      uint64_t v116 = (os_log_s *)Logger.logObject.getter(v115);
      os_log_type_t v117 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v118 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v118 = 0;
        _os_log_impl( &dword_0,  v116,  v117,  "PlayMediaAppResolver#postResolve No requestID found for the current request. Skipping log collection for intent",  v118,  2u);
        swift_slowDealloc(v118, -1LL, -1LL);
      }

      v10(v114, v9);
      LOBYTE(v185) = 1;
      return ((uint64_t (*)(void **))a5)(&v185);
    }

    uint64_t v100 = v98;
    unint64_t v101 = v99;
    unint64_t v102 = v176;
    ((void (*)(char *, uint64_t, uint64_t))v28)(v176, v182, v9);
    uint64_t v103 = swift_bridgeObjectRetain_n(v101, 2LL);
    uint64_t v104 = (os_log_s *)Logger.logObject.getter(v103);
    os_log_type_t v105 = static os_log_type_t.info.getter(v104);
    BOOL v106 = os_log_type_enabled(v104, v105);
    uint64_t v179 = v9;
    if (v106)
    {
      uint64_t v163 = v28;
      os_log_t v174 = v10;
      uint64_t v164 = a5;
      uint64_t v107 = swift_slowAlloc(22LL, -1LL);
      uint64_t v108 = (void *)swift_slowAlloc(64LL, -1LL);
      uint64_t v185 = v108;
      *(_DWORD *)uint64_t v107 = 136315394;
      swift_bridgeObjectRetain(v101);
      uint64_t v183 = sub_6978(v100, v101, (uint64_t *)&v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184);
      swift_bridgeObjectRelease_n(v101, 3LL);
      *(_WORD *)(v107 + sub_6C3C(v0 + 12) = 2080;
      if (qword_2838A0 != -1) {
        swift_once(&qword_2838A0, sub_CF22C);
      }
      uint64_t v183 = qword_296A00;
      swift_retain(qword_296A00);
      uint64_t v109 = sub_6C5C(&qword_287F90);
      uint64_t v110 = String.init<A>(describing:)(&v183, v109);
      unint64_t v112 = v111;
      uint64_t v183 = sub_6978(v110, v111, (uint64_t *)&v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184);
      swift_bridgeObjectRelease(v112);
      _os_log_impl( &dword_0,  v104,  v105,  "PlayMediaAppResolver#postResolve Storing intent for request: %s, stored: %s",  (uint8_t *)v107,  0x16u);
      swift_arrayDestroy(v108, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v108, -1LL, -1LL);
      swift_slowDealloc(v107, -1LL, -1LL);

      unint64_t v113 = v174;
      v174(v176, v179);
      a5 = v164;
      NSString v28 = v163;
    }

    else
    {

      swift_bridgeObjectRelease_n(v101, 2LL);
      unint64_t v113 = v10;
      v10(v102, v9);
    }

    if (qword_2838A0 != -1) {
      swift_once(&qword_2838A0, sub_CF22C);
    }
    uint64_t v185 = (void *)v100;
    unint64_t v186 = v101;
    char v119 = dispatch thunk of CircularBuffer.contains(_:)(&v185);
    uint64_t v120 = v179;
    uint64_t v121 = v113;
    if ((v119 & 1) != 0)
    {
      swift_bridgeObjectRelease(v101);
      uint64_t v122 = v172;
      uint64_t v123 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v172, v182, v120);
      uint64_t v124 = (os_log_s *)Logger.logObject.getter(v123);
      os_log_type_t v125 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v124, v125))
      {
        uint64_t v126 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v126 = 0;
        _os_log_impl( &dword_0,  v124,  v125,  "PlayMediaAppResolver#postResolve SELF logs already collected for this request. Avoiding double logging",  v126,  2u);
        swift_slowDealloc(v126, -1LL, -1LL);
      }

      goto LABEL_95;
    }

    uint64_t v185 = (void *)v100;
    unint64_t v186 = v101;
    dispatch thunk of CircularBuffer.add(_:)(&v185);
    uint64_t v127 = swift_bridgeObjectRelease(v101);
    uint64_t v128 = ResolutionResultType.explicitlySelectedByUser.getter(v127);
    if ((v128 & 1) != 0)
    {
      uint64_t v129 = App.appIdentifier.getter(v128);
      if (v130)
      {
        uint64_t v131 = v130;
        unint64_t v180 = v129;
        LODWORD(v176) = byte_287EE0;
        byte_287EE0 = 0;
        uint64_t v132 = v168;
        uint64_t v133 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v168, v182, v120);
        uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
        os_log_type_t v135 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v136 = swift_slowAlloc(18LL, -1LL);
          uint64_t v137 = (void *)swift_slowAlloc(32LL, -1LL);
          int v138 = a5;
          uint64_t v139 = v137;
          uint64_t v185 = v137;
          *(_DWORD *)uint64_t v136 = 136446466;
          uint64_t v140 = v132;
          uint64_t v141 = v138;
          uint64_t v142 = static Insights.appSelection.getter();
          unint64_t v144 = v143;
          uint64_t v183 = sub_6978(v142, v143, (uint64_t *)&v185);
          os_log_t v174 = v121;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184);
          swift_bridgeObjectRelease(v144);
          *(_WORD *)(v136 + sub_6C3C(v0 + 12) = 1024;
          uint64_t v145 = v176;
          LODWORD(v18sub_6C3C(v0 + 3) = (_DWORD)v176;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, (char *)&v183 + 4);
          _os_log_impl( &dword_0,  v134,  v135,  "PlayMediaAppResolver#postResolve %{public}s recording app selection signals. force?:%{BOOL}d",  (uint8_t *)v136,  0x12u);
          swift_arrayDestroy(v139, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v146 = v139;
          a5 = v141;
          swift_slowDealloc(v146, -1LL, -1LL);
          swift_slowDealloc(v136, -1LL, -1LL);

          v174(v140, v179);
        }

        else
        {

          v121(v132, v120);
          uint64_t v145 = v176;
        }

        uint64_t v156 = v178;
        uint64_t v157 = *(void *)(v178 + qword_287EF0 + 24);
        uint64_t v158 = *(void *)(v178 + qword_287EF0 + 32);
        sub_6EA8((void *)(v178 + qword_287EF0), v157);
        unint64_t v159 = (void *)swift_allocObject(&unk_26E7E8, 40LL, 7LL);
        unint64_t v160 = v180;
        v159[2] = v156;
        v159[3] = v160;
        v159[4] = v131;
        swift_retain(v156);
        swift_bridgeObjectRetain(v131);
        dispatch thunk of PlayMediaIntentAppSelecting.recordSignals(for:bundleIdentifier:force:completion:)( v181,  v160,  v131,  v145,  sub_D45C0,  v159,  v157,  v158);
        swift_release(v159);
        swift_bridgeObjectRelease(v131);
        LOBYTE(v185) = 1;
        return ((uint64_t (*)(void **))a5)(&v185);
      }
    }

    else
    {
      uint64_t v122 = v170;
      uint64_t v147 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v170, v182, v120);
      uint64_t v124 = (os_log_s *)Logger.logObject.getter(v147);
      os_log_type_t v148 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v124, v148))
      {
LABEL_95:

        v121(v122, v120);
        goto LABEL_96;
      }

      os_log_t v174 = v121;
      uint64_t v149 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v150 = (void *)swift_slowAlloc(32LL, -1LL);
      uint64_t v185 = v150;
      *(_DWORD *)uint64_t v149 = 136446210;
      uint64_t v151 = static Insights.appSelection.getter();
      uint64_t v152 = a5;
      unint64_t v154 = v153;
      uint64_t v183 = sub_6978(v151, v153, (uint64_t *)&v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v183, &v184);
      unint64_t v155 = v154;
      a5 = v152;
      swift_bridgeObjectRelease(v155);
      _os_log_impl( &dword_0,  v124,  v148,  "PlayMediaAppResolver#postResolve %{public}s skipping app selection signals record as the app was not explicitly chosen by the user",  v149,  0xCu);
      swift_arrayDestroy(v150, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v150, -1LL, -1LL);
      swift_slowDealloc(v149, -1LL, -1LL);

      v174(v170, v120);
    }

LABEL_96:
    LOBYTE(v185) = 1;
    return ((uint64_t (*)(void))a5)(&v185);
  }

  unint64_t v49 = a5;
  uint64_t v161 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v161);

  if ((unint64_t)v26 >> 62)
  {
LABEL_70:
    if (v26 < 0) {
      NSString v24 = (char *)v26;
    }
    else {
      NSString v24 = (char *)(v26 & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(v26);
    a5 = (const char *)_CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v26);
    if (a5) {
      goto LABEL_10;
    }
    goto LABEL_74;
  }

  a5 = *(const char **)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL));
  if (!a5)
  {
LABEL_74:
    swift_bridgeObjectRelease(v26);
    a5 = v49;
    goto LABEL_75;
  }

      uint64_t v224 = (void *)v419;
      if ((sub_3042C() & 1) != 0)
      {
        os_log_t v225 = v219;
        swift_bridgeObjectRelease(v219);
        swift_bridgeObjectRelease(v77);
        swift_bridgeObjectRelease(v421);
        uint64_t v226 = v392;
        uint64_t v227 = v400;
        uint64_t v228 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v392, v412, v400);
        uint64_t v229 = (os_log_s *)Logger.logObject.getter(v228);
        uint64_t v230 = static os_log_type_t.info.getter(v229);
        if (os_log_type_enabled(v229, v230))
        {
          uint64_t v231 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v231 = 0;
          _os_log_impl( &dword_0,  v229,  v230,  "PlayMediaDialogProvider going to makeNewsPodcast for news request",  v231,  2u);
          swift_slowDealloc(v231, -1LL, -1LL);
        }

        v379(v226, v227);
        id v232 = (uint64_t)v414;
        sub_15FFAC(v418, (void *)v419, (uint64_t)sub_16F1B0, (uint64_t)v414);
LABEL_113:

        swift_bridgeObjectRelease(v415);
        swift_release(v416);
        swift_release(v407);
        swift_release(v232);
        uint64_t v251 = v225;
LABEL_114:
        swift_bridgeObjectRelease(v251);
        goto LABEL_40;
      }

      if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v224,  (uint64_t)&off_26AE50) & 1) != 0 && v420 == 6)
      {
        os_log_t v225 = v219;
        swift_bridgeObjectRelease(v219);
        swift_bridgeObjectRelease(v77);
        swift_bridgeObjectRelease(v421);
        uint64_t v233 = v390;
        uint64_t v234 = v400;
        uint64_t v235 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v390, v412, v400);
        uint64_t v236 = (os_log_s *)Logger.logObject.getter(v235);
        os_log_t v237 = static os_log_type_t.info.getter(v236);
        if (os_log_type_enabled(v236, v237))
        {
          uint64_t v238 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v238 = 0;
          _os_log_impl( &dword_0,  v236,  v237,  "PlayMediaDialogProvider going to makeNewsPodcast for news request",  v238,  2u);
          swift_slowDealloc(v238, -1LL, -1LL);
        }

        v379(v233, v234);
        id v232 = (uint64_t)v414;
        sub_16016C(v418, (void *)v419, (uint64_t)sub_16F1B0, (uint64_t)v414);
        goto LABEL_113;
      }

      if ((sub_88294(v420, (uint64_t)&off_26AE80) & 1) != 0)
      {
        os_log_t v225 = v219;
        swift_bridgeObjectRelease(v219);
        swift_bridgeObjectRelease(v77);
        swift_bridgeObjectRelease(v421);
        unint64_t v245 = v389;
        id v246 = v400;
        uint64_t v247 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v389, v412, v400);
        os_log_t v248 = (os_log_s *)Logger.logObject.getter(v247);
        uint64_t v249 = static os_log_type_t.info.getter(v248);
        if (os_log_type_enabled(v248, v249))
        {
          uint64_t v250 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v250 = 0;
          _os_log_impl(&dword_0, v248, v249, "PlayMediaDialogProvider going to makePodcast", v250, 2u);
          swift_slowDealloc(v250, -1LL, -1LL);
        }

        v379(v245, v246);
        id v232 = (uint64_t)v414;
        sub_160734(v418, (void *)v419, (uint64_t)sub_16F1B0, (uint64_t)v414);
        goto LABEL_113;
      }

      v410 = v219;
      v399 = v65;
      id v91 = (uint64_t)(id)v419;
      sub_15DCC8((uint64_t)&off_26AEC0, (void *)v91);
      uint64_t v253 = v252;

      uint64_t v85 = &type metadata for String;
      swift_arrayDestroy(&unk_26AEE0, 1LL, &type metadata for String);
      if ((v253 & 1) != 0)
      {
        uint64_t v254 = [(id)v91 mediaSearch];
        if (!v254
          || (uint64_t v255 = v254,
              uint64_t v256 = (char *)[v254 sortOrder],
              v255,
              v256 != (_BYTE *)&dword_0 + 1))
        {
          swift_bridgeObjectRelease(v77);
          swift_bridgeObjectRelease(v421);
          swift_bridgeObjectRelease(v410);
          uint64_t v266 = v388;
          uint64_t v267 = v400;
          uint64_t v268 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v388, v412, v400);
          uint64_t v269 = (os_log_s *)Logger.logObject.getter(v268);
          uint64_t v270 = static os_log_type_t.info.getter(v269);
          if (os_log_type_enabled(v269, v270))
          {
            uint64_t v271 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v271 = 0;
            _os_log_impl( &dword_0,  v269,  v270,  "PlayMediaDialogProvider going to makePlaySomething for play some music request",  v271,  2u);
            swift_slowDealloc(v271, -1LL, -1LL);
          }

          v379(v266, v267);
          uint64_t v272 = (uint64_t)v414;
          sub_15FBCC(v418, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);
          goto LABEL_125;
        }
      }

      sub_180AC8();
      if ((v257 & 1) != 0)
      {
        swift_bridgeObjectRelease(v410);
        swift_bridgeObjectRelease(v77);
        swift_bridgeObjectRelease(v421);
        uint64_t v258 = v387;
        uint64_t v259 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v387, v412, v400);
        uint64_t v260 = (os_log_s *)Logger.logObject.getter(v259);
        uint64_t v261 = static os_log_type_t.info.getter(v260);
        uint64_t v262 = os_log_type_enabled(v260, v261);
        uint64_t v65 = v399;
        id v263 = v413;
        if (v262)
        {
          uint64_t v264 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v264 = 0;
          _os_log_impl( &dword_0,  v260,  v261,  "PlayMediaDialogProvider going to makePlaySomethingNew for play some new music request",  v264,  2u);
          swift_slowDealloc(v264, -1LL, -1LL);
        }

        v379(v258, v400);
        uint64_t v265 = (uint64_t)v414;
        sub_160B80(v418, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);

        swift_bridgeObjectRelease(v415);
        swift_release(v416);
        swift_release(v407);
        swift_release(v265);
        uint64_t v251 = v410;
        goto LABEL_114;
      }

      if (INPlayMediaIntent.isCreateRadioFromCurrentlyPlaying()() || v220)
      {
        swift_bridgeObjectRelease(v410);
        uint64_t v274 = v386;
        uint64_t v275 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v386, v412, v400);
        uint64_t v276 = (os_log_s *)Logger.logObject.getter(v275);
        uint64_t v277 = static os_log_type_t.info.getter(v276);
        if (os_log_type_enabled(v276, v277))
        {
          uint64_t v278 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v278 = 0;
          _os_log_impl(&dword_0, v276, v277, "PlayMediaDialogProvider going to makeCreateRadio", v278, 2u);
          swift_slowDealloc(v278, -1LL, -1LL);
        }

        v379(v274, v400);
        uint64_t v279 = (uint64_t)v414;
        sub_161008(v418, (uint64_t)v90, v77, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);

        swift_bridgeObjectRelease(v415);
        swift_release(v416);
        swift_release(v407);
        swift_release(v279);
        swift_bridgeObjectRelease(v410);
        swift_bridgeObjectRelease(v421);
        uint64_t v273 = v77;
        goto LABEL_130;
      }

      v419 = v217;
      swift_bridgeObjectRelease(v421);
      uint64_t v280 = [(id)v91 mediaSearch];
      uint64_t v67 = (SEL *)&selRef_serviceGroups;
      if (v280)
      {
        uint64_t v281 = v280;
        uint64_t v282 = (int *)[v280 sortOrder];

        if (v282 == &dword_8)
        {
          uint64_t v283 = [(id)v91 mediaSearch];
          if (v283)
          {
            uint64_t v284 = v283;
            uint64_t v285 = [v283 mediaName];

            if (v285)
            {

              uint64_t v286 = [(id)v91 mediaSearch];
              if (!v286
                || (uint64_t v287 = v286,
                    uint64_t v288 = (char *)[v286 reference],
                    v287,
                    v288 != (_BYTE *)&dword_0 + 1))
              {
                swift_bridgeObjectRelease(v410);
                swift_bridgeObjectRelease(v77);
                uint64_t v330 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v381, v412, v400);
                v331 = (os_log_s *)Logger.logObject.getter(v330);
                uint64_t v332 = static os_log_type_t.info.getter(v331);
                if (os_log_type_enabled(v331, v332))
                {
                  uint64_t v333 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                  *(_WORD *)uint64_t v333 = 0;
                  _os_log_impl( &dword_0,  v331,  v332,  "PlayMediaDialogProvider going to makePlayMusicLikeArtist",  v333,  2u);
                  swift_slowDealloc(v333, -1LL, -1LL);
                }

                v379(v381, v400);
                uint64_t v272 = (uint64_t)v414;
                sub_162DE8(v418, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);
                goto LABEL_125;
              }
            }
          }
        }
      }

      LOBYTE(v71) = sub_88294(v420, (uint64_t)&off_26AEF0);
      uint64_t v289 = [(id)v91 mediaSearch];
      if (v289)
      {
        uint64_t v290 = v289;
        v291 = (char *)[v289 sortOrder];

        if (v291 == (_BYTE *)&dword_0 + 3)
        {
          goto LABEL_146;
        }
      }

  if ((sub_3042C() & 1) != 0)
  {
    uint64_t v203 = v194;
    swift_bridgeObjectRelease(v194);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v389);
    id v204 = v370;
    uint64_t v205 = v382;
    uint64_t v206 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v370, v391, v382);
    uint64_t v207 = (os_log_s *)Logger.logObject.getter(v206);
    uint64_t v208 = static os_log_type_t.info.getter(v207);
    if (os_log_type_enabled(v207, v208))
    {
      uint64_t v209 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v209 = 0;
      _os_log_impl(&dword_0, v207, v208, "PlayMediaDialogProvider going to makeNewsPodcast for news request", v209, 2u);
      swift_slowDealloc(v209, -1LL, -1LL);
    }

    v388(v204, v205);
    id v210 = (uint64_t)v373;
    sub_15FFAC(v392, v64, (uint64_t)sub_16B694, (uint64_t)v373);
    swift_release(v210);
    return swift_bridgeObjectRelease(v203);
  }

  v390 = (unint64_t)v64;
  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v64,  (uint64_t)&off_26B0B0) & 1) != 0 && v387 == (uint64_t (*)(uint64_t))((char *)&dword_4 + 2))
  {
    uint64_t v211 = v194;
    swift_bridgeObjectRelease(v194);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v389);
    uint64_t v212 = v368;
    NSString v213 = v382;
    id v214 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v368, v391, v382);
    unint64_t v215 = (os_log_s *)Logger.logObject.getter(v214);
    unint64_t v216 = static os_log_type_t.info.getter(v215);
    if (os_log_type_enabled(v215, v216))
    {
      uint64_t v217 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v217 = 0;
      _os_log_impl(&dword_0, v215, v216, "PlayMediaDialogProvider going to makeNewsPodcast for news request", v217, 2u);
      swift_slowDealloc(v217, -1LL, -1LL);
    }

    v388(v212, v213);
    uint64_t v218 = (uint64_t)v373;
    sub_16016C(v392, (void *)v390, (uint64_t)sub_16B694, (uint64_t)v373);
LABEL_113:
    swift_release(v218);
    return swift_bridgeObjectRelease(v211);
  }

  if ((sub_88294((uint64_t)v387, (uint64_t)&off_26B0E0) & 1) != 0)
  {
    uint64_t v211 = v194;
    swift_bridgeObjectRelease(v194);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v389);
    os_log_t v225 = v367;
    uint64_t v226 = v382;
    uint64_t v227 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v367, v391, v382);
    uint64_t v228 = (os_log_s *)Logger.logObject.getter(v227);
    uint64_t v229 = static os_log_type_t.info.getter(v228);
    if (os_log_type_enabled(v228, v229))
    {
      uint64_t v230 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v230 = 0;
      _os_log_impl(&dword_0, v228, v229, "PlayMediaDialogProvider going to makePodcast", v230, 2u);
      swift_slowDealloc(v230, -1LL, -1LL);
    }

    v388(v225, v226);
    uint64_t v218 = (uint64_t)v373;
    sub_160734(v392, (void *)v390, (uint64_t)sub_16B694, (uint64_t)v373);
    goto LABEL_113;
  }

  uint64_t v231 = v194;
  v385 = v183;
  id v232 = (id)v390;
  sub_15DCC8((uint64_t)&off_26B120, v232);
  uint64_t v234 = v233;

  swift_arrayDestroy(&unk_26B140, 1LL, &type metadata for String);
  if ((v234 & 1) != 0)
  {
    uint64_t v235 = [v232 mediaSearch];
    if (!v235
      || (uint64_t v236 = v235, v237 = (char *)[v235 sortOrder], v236, v237 != (_BYTE *)&dword_0 + 1))
    {
      swift_bridgeObjectRelease(v67);
      swift_bridgeObjectRelease(v389);
      swift_bridgeObjectRelease(v231);
      id v246 = v366;
      uint64_t v247 = v382;
      os_log_t v248 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v366, v391, v382);
      uint64_t v249 = (os_log_s *)Logger.logObject.getter(v248);
      uint64_t v250 = static os_log_type_t.info.getter(v249);
      if (os_log_type_enabled(v249, v250))
      {
        uint64_t v251 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v251 = 0;
        _os_log_impl( &dword_0,  v249,  v250,  "PlayMediaDialogProvider going to makePlaySomething for play some music request",  v251,  2u);
        swift_slowDealloc(v251, -1LL, -1LL);
      }

      v388(v246, v247);
      unint64_t v245 = (uint64_t)v373;
      sub_15FBCC(v392, v232, (uint64_t)sub_16B694, (uint64_t)v373);
      goto LABEL_124;
    }
  }

  sub_180AC8();
  if ((v238 & 1) != 0)
  {
    swift_bridgeObjectRelease(v231);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v389);
    uint64_t v239 = v365;
    uint64_t v240 = v382;
    id v241 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v365, v391, v382);
    id v242 = (os_log_s *)Logger.logObject.getter(v241);
    uint64_t v243 = static os_log_type_t.info.getter(v242);
    if (os_log_type_enabled(v242, v243))
    {
      id v244 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v244 = 0;
      _os_log_impl( &dword_0,  v242,  v243,  "PlayMediaDialogProvider going to makePlaySomethingNew for play some new music request",  v244,  2u);
      swift_slowDealloc(v244, -1LL, -1LL);
    }

    v388(v239, v240);
    unint64_t v245 = (uint64_t)v373;
    sub_160B80(v392, v232, (uint64_t)sub_16B694, (uint64_t)v373);
LABEL_124:
    swift_release(v245);
    return swift_bridgeObjectRelease(v231);
  }

  if (!INPlayMediaIntent.isCreateRadioFromCurrentlyPlaying()() && !v195)
  {
    uint64_t v19 = (Class)v67;
    v383 = v192;
    v390 = v231;
    swift_bridgeObjectRelease(v389);
    id v81 = (uint64_t)&OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
    uint64_t v67 = (uint64_t)v232;
    uint64_t v259 = [v232 mediaSearch];
    os_log_type_t v66 = &selRef_serviceGroups;
    if (v259)
    {
      uint64_t v260 = v259;
      uint64_t v261 = (int *)[v259 sortOrder];

      if (v261 == &dword_8)
      {
        uint64_t v262 = [(id)v67 mediaSearch];
        if (v262)
        {
          id v263 = v262;
          uint64_t v264 = [v262 mediaName];

          if (v264)
          {

            uint64_t v265 = [(id)v67 mediaSearch];
            if (!v265
              || (uint64_t v266 = v265,
                  uint64_t v267 = (char *)[v265 reference],
                  v266,
                  v267 != (_BYTE *)&dword_0 + 1))
            {
              swift_bridgeObjectRelease(v390);
              swift_bridgeObjectRelease(v19);
              v309 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v359, v391, v382);
              uint64_t v310 = (os_log_s *)Logger.logObject.getter(v309);
              v311 = static os_log_type_t.info.getter(v310);
              if (os_log_type_enabled(v310, v311))
              {
                v312 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)v312 = 0;
                _os_log_impl(&dword_0, v310, v311, "PlayMediaDialogProvider going to makePlayMusicLikeArtist", v312, 2u);
                swift_slowDealloc(v312, -1LL, -1LL);
              }

              v388(v359, v382);
              uint64_t v279 = (uint64_t)v373;
              sub_162DE8(v392, (void *)v67, (uint64_t)sub_16B694, (uint64_t)v373);
              goto LABEL_200;
            }
          }
        }
      }
    }

    LOBYTE(v59) = sub_88294((uint64_t)v387, (uint64_t)&off_26B150);
    uint64_t v268 = [(id)v67 mediaSearch];
    if (v268)
    {
      uint64_t v269 = v268;
      uint64_t v270 = (char *)[v268 sortOrder];

      if (v270 == (_BYTE *)&dword_0 + 3)
      {
        uint64_t v271 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
        goto LABEL_143;
      }
    }

uint64_t sub_D3EF0(const char *a1, char *a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a2;
  unint64_t v39 = a1;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v36 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v37 = v17;
  uint64_t v38 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a6);
  swift_retain_n(a2, 2LL);
  id v32 = a4;
  swift_retain(a5);
  uint64_t v22 = swift_retain(a3);
  uint64_t v23 = (void *)static AppNameResolver.queue.getter(v22);
  uint64_t v24 = swift_allocObject(&unk_26E798, 32LL, 7LL);
  *(void *)(v24 + swift_weakDestroy(v0 + 16) = a5;
  *(void *)(v24 + 24) = a3;
  aBlock[4] = sub_213A4;
  uint64_t v42 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_6E7C;
  uint64_t aBlock[3] = &unk_26E7B0;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain(a5);
  uint64_t v26 = swift_retain(a3);
  static DispatchQoS.unspecified.getter(v26);
  unint64_t v40 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v27 = sub_6C5C(&qword_285480);
  sub_21358();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v16, v13, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
  swift_release(v42);
  uint64_t v29 = v32;
  NSString v28 = v33;
  sub_D2DC8(v32, a5, a3, (uint64_t)v20, v39, v33);
  swift_release(a3);
  swift_release(a5);

  swift_release_n(v28, 2LL);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v20, v37);
}

uint64_t type metadata accessor for PlayMediaAppResolver(uint64_t a1)
{
  uint64_t result = qword_287F28;
  if (!qword_287F28) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayMediaAppResolver);
  }
  return result;
}

uint64_t sub_D41F0(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  void v2[2] = "(";
  v2[3] = &unk_2172C0;
  v2[4] = "(";
  v2[5] = "(";
  v2[6] = "(";
  return swift_initClassMetadata2(a1, 0LL, 7LL, v2, a1 + class metadata base offset for PlayMediaAppResolver);
}

uint64_t sub_D424C()
{
  return type metadata accessor for PlayMediaAppResolver(0LL);
}

uint64_t sub_D4254()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_D4288(uint64_t a1)
{
  return sub_D00E4( a1,  *(void **)(v1 + 16),  *(void **)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  *(void (**)(uint64_t))(v1 + 40),  *(void (**)(uint64_t))(v1 + 48),  *(void *)(v1 + 56));
}

uint64_t sub_D429C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_D42AC()
{
  uint64_t v1 = type metadata accessor for DisambiguationConfiguration(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v14 = v5 + v0;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v10 + v7 + 8) & ~v10;
  uint64_t v15 = v3 | v10 | 7;
  unint64_t v12 = ((*(void *)(v9 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v14 + 8));
  swift_release(*(void *)(v0 + v6 + 8));
  swift_release(*(void *)(v0 + v7));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v8);
  return swift_deallocObject(v0, v12, v15);
}

uint64_t sub_D43C0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DisambiguationConfiguration(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = ((v5 & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(void *)(type metadata accessor for Date(0LL) - 8);
  return sub_D129C( a1,  *(void **)(v1 + 16),  v1 + v4,  *(unsigned __int8 *)(v1 + v5),  *(void *)((v5 & 0xFFFFFFFFFFFFFFF8LL) + v1 + 8),  *(void (**)(uint64_t))(v1 + v6),  *(void *)(v1 + v6 + 8),  *(void **)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(double *)(v1 + 24),  (char *)(v1 + ((*(unsigned __int8 *)(v7 + 80) + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))));
}

uint64_t sub_D4494()
{
  uint64_t v1 = type metadata accessor for DisambiguationConfiguration(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_D4508()
{
}

uint64_t sub_D453C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_D4568()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_D4594()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_D45C0(uint64_t (*a1)(char *, uint64_t, uint64_t))
{
  return sub_CF2B8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_D45CC()
{
  uint64_t v1 = type metadata accessor for AppSelectionSignals.RawSignalResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_D46A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppSelectionSignals.RawSignalResult(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  return sub_CFA58( *(void *)(v0 + 16),  v0 + v2,  *(void *)(v0 + v3),  *(void *)(v0 + v3 + 8),  v0 + ((v3 + v4 + 16) & ~v4));
}

uint64_t sub_D471C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_D29A0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_D477C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_D479C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_D47D0(uint64_t a1)
{
  return sub_CB604( a1,  *(void (**)(void))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40));
}

uint64_t sub_D47DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BundleResolutionResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_D4818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_285EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_D4864()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_D4898(uint64_t a1)
{
}

uint64_t sub_D48A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleResolutionResult(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_D48E8()
{
  uint64_t v1 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_D4960(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for PlayMediaAppSelectionResult(0LL) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_CCFB0(a1, a2, a3, v3 + v8, *(void (**)(void))v9, *(void *)(v9 + 8));
}

uint64_t sub_D49CC()
{
  uint64_t v1 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D4A48(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PlayMediaAppSelectionResult(0LL) - 8) + 80LL);
  return sub_CC9A4( a1,  *(void *)(v1 + 16),  *(void (**)(uint64_t))(v1 + 24),  *(void *)(v1 + 32),  v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_D4A8C()
{
  uint64_t v1 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D4B08(uint64_t a1, uint64_t a2)
{
  return sub_CD374( a1,  a2,  *(void (**)(void *))(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40));
}

uint64_t sub_D4B5C()
{
  uint64_t v1 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*((void *)v0 + 2));
  swift_bridgeObjectRelease(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 6));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D4BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PlayMediaAppSelectionResult(0LL) - 8) + 80LL);
  return sub_CD440( a1,  a2,  *(void **)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  v2 + ((v5 + 56) & ~v5));
}

uint64_t sub_D4C38()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

double sub_D4C74(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, Swift::OpaquePointer_optional a6)
{
  a6.value._rawValue = *(void **)(v6 + 48);
  return sub_CEC58( a1,  *(void *)(v6 + 16),  *(void (**)(uint64_t))(v6 + 24),  *(void *)(v6 + 32),  *(void **)(v6 + 40),  a6);
}

uint64_t sub_D4C84()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

double sub_D4CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_CED4C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(void (**)(uint64_t))(v7 + 16),  *(void *)(v7 + 24),  *(void *)(v7 + 32),  *(void **)(v7 + 40));
}

uint64_t sub_D4CE8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_D4D0C()
{
  uint64_t v1 = type metadata accessor for PlayMediaAppSelectionResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*((void *)v0 + 2));
  swift_bridgeObjectRelease(*((void *)v0 + 5));
  swift_release(*((void *)v0 + 6));
  swift_release(*((void *)v0 + 8));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D4D98(void *a1)
{
  return sub_CDB58( a1,  *(void *)(v1 + 16),  *(unsigned __int8 *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void (**)(void *))(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_D4E24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v97 = a1;
  uint64_t v99 = a3;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v98 = (char *)&v91 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v95 = (char *)&v91 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v96 = (char *)&v91 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v94 = (char *)&v91 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v91 - v17;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v21 = v20(v18, v19, v4);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.info.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v22, v23, "PlayMediaUnsupportedValueSnippetProvider#unsupportedValueOutputView...", v24, 2u);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v18, v4);
  swift_bridgeObjectRetain("er");
  id v26 = [a2 mediaItems];
  if (!v26) {
    goto LABEL_18;
  }
  uint64_t v27 = v26;
  unint64_t v28 = sub_687D0();
  uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0) {
      uint64_t v43 = v29;
    }
    else {
      uint64_t v43 = v29 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v29);
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v29);
    if (!v44) {
      goto LABEL_33;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_33:
    swift_bridgeObjectRelease("er");
    uint64_t v36 = (char *)v29;
    goto LABEL_34;
  }

  if ((v29 & 0xC000000000000001LL) != 0)
  {
    id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v29);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      goto LABEL_65;
    }

    id v30 = *(id *)(v29 + 32);
  }

  uint64_t v31 = v30;
  swift_bridgeObjectRelease(v29);
  id v32 = [v31 privateMediaItemValueData];

  if (!v32 || (id v33 = [v32 internalSignals], v32, !v33))
  {
LABEL_18:
    uint64_t v36 = "er";
LABEL_34:
    swift_bridgeObjectRelease(v36);
    goto LABEL_35;
  }

  uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for String);

  uint64_t v93 = *(void *)(v29 + 16);
  if (!v93) {
    goto LABEL_33;
  }
  id v91 = v25;
  uint64_t v92 = v29;
  uint64_t v34 = *(void *)(v29 + 32);
  uint64_t v35 = *(char **)(v29 + 40);
  if (v34 == 0xD000000000000019LL && v35 == "er" || (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v35) & 1) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease("er");
    swift_bridgeObjectRelease(v92);
    swift_arrayDestroy(&qword_26A590, 1LL, &type metadata for String);
    uint64_t v25 = v91;
LABEL_36:
    uint64_t v45 = v20(v8, v19, v4);
    char v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.info.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl( &dword_0,  v46,  v47,  "PlayMediaUnsupportedValueSnippetProvider#unsupportedValueOutputView returning nil for podcast promotion",  v48,  2u);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    unint64_t v49 = v8;
    goto LABEL_51;
  }

  if (v93 != 1)
  {
    uint64_t v37 = (char **)(v92 + 56);
    uint64_t v38 = 1LL;
    while (1)
    {
      uint64_t v39 = v38 + 1;
      if (__OFADD__(v38, 1LL)) {
        break;
      }
      uint64_t v40 = (uint64_t)*(v37 - 1);
      uint64_t v41 = *v37;
      BOOL v42 = v40 == 0xD000000000000019LL && v41 == "er";
      if (v42 || (_stringCompareWithSmolCheck(_:_:expecting:)(v40, v41) & 1) != 0) {
        goto LABEL_17;
      }
      v37 += 2;
      ++v38;
      if (v39 == v93) {
        goto LABEL_28;
      }
    }

LABEL_65:
    __break(1u);
  }

uint64_t sub_D572C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v60 = a1;
  uint64_t v59 = type metadata accessor for SiriAudioActionButtonSnippetStyle(0LL);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v58 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SiriAudioActionButtonSnippetRole(0LL);
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Locale(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = (void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 40);
  uint64_t v18 = *(void *)(v2 + 48);
  sub_6EA8(v16, v17);
  uint64_t v19 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v19);
  id v21 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v21);
  uint64_t v22 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0x5050415F4E45504FLL,  0xE800000000000000LL,  0x656D614E707041LL,  0xE700000000000000LL,  v21,  v15,  0x4025206E65704FLL,  0xE700000000000000LL,  v17,  v18);
  uint64_t v24 = v23;

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v25 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v26 = swift_allocObject(v25, 72LL, 7LL);
  *(_OWORD *)(v26 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  uint64_t v27 = sub_D5DB4();
  uint64_t v29 = v28;
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_6DAC();
  *(void *)(v26 + 3sub_6C3C(v0 + 2) = v27;
  *(void *)(v26 + 40) = v29;
  uint64_t v30 = String.init(format:_:)(v22, v24, v26);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease(v24);
  id v33 = [objc_allocWithZone(SAUIAppPunchOut) init];
  static BundleIdentifiers.music.getter(v33);
  uint64_t v35 = v34;
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  [v33 setBundleId:v36];

  NSString v37 = String._bridgeToObjectiveC()();
  [v33 setAppDisplayName:v37];

  [v33 setAppAvailableInStorefront:1];
  id v38 = v33;
  uint64_t v39 = UUID.init()(v38);
  UUID.uuidString.getter(v39);
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  [v38 setAceId:v42];

  URL.init(string:)(*(void *)(v2 + 56));
  uint64_t v43 = type metadata accessor for URL(0LL);
  uint64_t v44 = *(void *)(v43 - 8);
  char v46 = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v8, 1LL, v43) != 1)
  {
    URL._bridgeToObjectiveC()(v45);
    char v46 = v47;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v43);
  }

  [v38 setPunchOutUri:v46];

  uint64_t v48 = v56;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))( v56,  enum case for SiriAudioActionButtonSnippetRole.standard(_:),  v55);
  unint64_t v49 = v58;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))( v58,  enum case for SiriAudioActionButtonSnippetStyle.button(_:),  v59);
  return SiriAudioActionButtonSnippetModel.init(buttonLabel:buttonCommand:buttonRole:buttonStyle:)( v30,  v32,  v38,  v48,  v49);
}

uint64_t sub_D5B88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SiriAudioActionButtonSnippetStyle(0LL);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SiriAudioActionButtonSnippetRole(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_D5EF4();
  uint64_t v24 = v13;
  uint64_t v25 = v12;
  id v14 = [objc_allocWithZone(SAUIAppPunchOut) init];
  URL.init(string:)(0xD000000000000020LL);
  uint64_t v15 = type metadata accessor for URL(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1LL, v15) != 1)
  {
    URL._bridgeToObjectiveC()(v17);
    uint64_t v18 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }

  [v14 setPunchOutUri:v18];

  (*(void (**)(char *, void, uint64_t))(v6 + 104))( v8,  enum case for SiriAudioActionButtonSnippetRole.standard(_:),  v5);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))( v4,  enum case for SiriAudioActionButtonSnippetStyle.button(_:),  v27);
  SiriAudioActionButtonSnippetModel.init(buttonLabel:buttonCommand:buttonRole:buttonStyle:)(v25, v24, v14, v8, v4);
  uint64_t v20 = enum case for SiriAudioSnippets.actionButton(_:);
  uint64_t v21 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(a1, v20, v21);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a1, 0LL, 1LL, v21);
}

uint64_t sub_D5DB4()
{
  uint64_t v1 = type metadata accessor for Locale(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_6EA8(v0 + 2, v5);
  uint64_t v7 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  id v9 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v9);
  uint64_t v10 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0xD000000000000013LL,  0x800000000021FF10LL,  0x656D614E707041LL,  0xE700000000000000LL,  v9,  v4,  0x754D20656C707041LL,  0xEB00000000636973LL,  v5,  v6);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t sub_D5EF4()
{
  uint64_t v1 = type metadata accessor for Locale(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_6EA8(v0 + 2, v5);
  uint64_t v7 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  id v9 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v9);
  uint64_t v10 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0xD000000000000025LL,  0x800000000021FEE0LL,  0x736C6562614CLL,  0xE600000000000000LL,  v9,  v4,  0x655220656C707041LL,  0xEF73656372756F73LL,  v5,  v6);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t sub_D6034()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t type metadata accessor for PlayMediaUnsupportedValueSnippetProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin40PlayMediaUnsupportedValueSnippetProvider);
}

uint64_t type metadata accessor for AcousticIdCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin26AcousticIdCatDialogService);
}

uint64_t sub_D60A0(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 0LL, 0LL, v2, a1 + 96);
}

uint64_t type metadata accessor for ContinueInAppDialogStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContinueInAppDialogStrategy);
}

uint64_t sub_D60E0(uint64_t a1)
{
  return swift_getWitnessTable(&unk_217438, a1);
}

uint64_t sub_D60F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ContinueInAppDialogStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), a4);
  return ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:completion:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_D6160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:)[1]);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = v13;
  uint64_t v15 = type metadata accessor for ContinueInAppDialogStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), v14);
  *uint64_t v13 = v6;
  v13[1] = sub_11C64;
  return ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:)(a1, a2, a3, a4, v15, a6);
}

void *sub_D6200(uint64_t a1, void *a2)
{
  uint64_t v57 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v4 = __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = v18;
  uint64_t v19 = type metadata accessor for SearchForMediaCatDialogService();
  uint64_t v20 = (void *)swift_allocObject(v19, 56LL, 7LL);
  v20[2] = 0xD000000000000011LL;
  v20[3] = 0x800000000021D860LL;
  v20[5] = 0xD000000000000014LL;
  v20[6] = 0x800000000021FFF0LL;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  void v20[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)&v65);
  uint64_t v21 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v18, 1LL, 1LL, v21);
  unint64_t v56 = sub_7F548(_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v22 = swift_retain(v20);
  uint64_t v55 = v15;
  uint64_t v23 = static FeatureFlagProvider.shared.getter(v22);
  static StringsFileResolver.shared.getter(v23);
  uint64_t v24 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v25 = swift_allocObject(v24, 168LL, 7LL);
  uint64_t v26 = v10;
  uint64_t v27 = v15;
  uint64_t v28 = v9;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v60(v13, v27, v9);
  uint64_t v29 = v59;
  uint64_t v30 = v6;
  uint64_t v31 = v6;
  uint64_t v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v31, v8, v57);
  id v33 = v58;
  uint64_t v58 = v13;
  uint64_t v34 = sub_EE3F0(v20, v63, v56, &v65, v33, v13, v30, v25);
  swift_release(v20);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  NSString v36 = v55;
  v35(v8, v32);
  uint64_t v59 = *(void *)(v26 + 8);
  ((void (*)(char *, uint64_t))v59)(v36, v28);
  uint64_t v66 = v32;
  char v67 = &protocol witness table for StringsFileResolver;
  sub_10974(&v65);
  uint64_t v37 = swift_retain(v34);
  static StringsFileResolver.shared.getter(v37);
  uint64_t v38 = sub_6C5C(&qword_288418);
  uint64_t v39 = swift_allocObject(v38, 64LL, 7LL);
  sub_FF54(&v65, v39 + 16);
  *(void *)(v39 + 56) = v34;
  uint64_t v66 = v28;
  char v67 = &protocol witness table for FeatureFlagProvider;
  sub_10974(&v65);
  uint64_t v40 = swift_retain(v34);
  static FeatureFlagProvider.shared.getter(v40);
  uint64_t v41 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v42 = swift_allocObject(v41, 56LL, 7LL);
  sub_FF54(&v65, v42 + 16);
  uint64_t v57 = v28;
  uint64_t v66 = v28;
  char v67 = &protocol witness table for FeatureFlagProvider;
  uint64_t v43 = sub_10974(&v65);
  static FeatureFlagProvider.shared.getter(v43);
  uint64_t v44 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v45 = static SiriKitTaskLoggingProvider.shared.getter(v44);
  v64[3] = v44;
  v64[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v64[0] = v45;
  uint64_t v46 = type metadata accessor for AppleMediaServicesProvider(0LL);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v47 = AppleMediaServicesProvider.init(featureFlagProvider:siriKitTaskLoggingProvider:)(&v65, v64);
  uint64_t v48 = static FeatureFlagProvider.shared.getter(v47);
  uint64_t v49 = static SiriKitTaskLoggingProvider.shared.getter(v48);
  if (qword_2838C0 != -1) {
    swift_once(&qword_2838C0, sub_F5CB0);
  }
  uint64_t v50 = qword_296A80;
  swift_retain(qword_296A80);
  static AceService.current.getter(&v65);
  uint64_t v52 = v57;
  uint64_t v51 = (uint64_t)v58;
  v60(v58, v36, v57);
  swift_retain(v47);
  uint64_t v53 = sub_C06D8(v34, v47, v51, v49, v50, &v65, v42, v39, v61);
  ((void (*)(char *, uint64_t))v59)(v36, v52);
  swift_release(v20);
  swift_release(v34);
  swift_release(v63);
  swift_release(v47);
  sub_6C3C(v62);
  return v53;
}

uint64_t _s25NeedsConfirmationStrategyCMa(uint64_t a1)
{
  uint64_t result = qword_2882F0;
  if (!qword_2882F0) {
    return swift_getSingletonMetadata(a1, &_s25NeedsConfirmationStrategyCMn);
  }
  return result;
}

uint64_t sub_D66D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v116 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v120 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v109 = &v97[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v121 = sub_6C5C(&qword_284DA8);
  uint64_t v2 = __chkstk_darwin(v121);
  BOOL v106 = &v97[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v111 = &v97[-v5];
  __chkstk_darwin(v4);
  uint64_t v115 = &v97[-v6];
  uint64_t v7 = sub_6C5C(&qword_284DB0);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v102 = &v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v104 = &v97[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v105 = &v97[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v103 = &v97[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v117 = &v97[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v110 = &v97[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v108 = &v97[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = &v97[-v23];
  __chkstk_darwin(v22);
  unint64_t v114 = &v97[-v25];
  uint64_t v26 = type metadata accessor for Parse(0LL);
  uint64_t v27 = *(void (**)(void, void, void, void))(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = &v97[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v30 = type metadata accessor for Logger(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  char v119 = &v97[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v32);
  uint64_t v35 = &v97[-v34];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v36 = sub_6960(v30, (uint64_t)qword_2969C8);
  uint64_t v37 = *(uint64_t (**)(void))(v31 + 16);
  uint64_t v112 = v36;
  unint64_t v113 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v37;
  uint64_t v38 = v37(v35);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v107 = v27;
    uint64_t v42 = v24;
    uint64_t v43 = v30;
    uint64_t v44 = v41;
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_0, v39, v40, "AddMediaFlowStrategy#actionForInput", v41, 2u);
    uint64_t v45 = v44;
    uint64_t v30 = v43;
    uint64_t v24 = v42;
    uint64_t v27 = v107;
    swift_slowDealloc(v45, -1LL, -1LL);
  }

  uint64_t v46 = *(uint64_t (**)(_BYTE *, uint64_t))(v31 + 8);
  uint64_t v47 = v46(v35, v30);
  Input.parse.getter(v47);
  double v48 = sub_B7C84(v29, (uint64_t)&v125);
  (*((void (**)(char *, uint64_t, double))v27 + 1))(v29, v26, v48);
  if (v126)
  {
    uint64_t v100 = v46;
    uint64_t v101 = v30;
    sub_49B60(&v125, &v128);
    uint64_t v49 = v129;
    uint64_t v50 = v130;
    sub_6EA8(&v128, v129);
    uint64_t v51 = (uint64_t)v114;
    dispatch thunk of AudioIntent.verb.getter(v49, v50);
    uint64_t v52 = v120;
    uint64_t v53 = *(void (**)(_BYTE *, void, uint64_t))(v120 + 104);
    uint64_t v54 = v116;
    v53(v24, enum case for CommonAudio.Verb.subscribe(_:), v116);
    uint64_t v107 = *(void (**)(void, void, void, void))(v52 + 56);
    v107(v24, 0LL, 1LL, v54);
    uint64_t v55 = v115;
    uint64_t v56 = (uint64_t)&v115[*(int *)(v121 + 48)];
    sub_D8208(v51, (uint64_t)v115);
    sub_D8208((uint64_t)v24, v56);
    uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    if (v57((uint64_t)v55, 1LL, v54) == 1)
    {
      sub_1F6CC((uint64_t)v24, &qword_284DB0);
      sub_1F6CC(v51, &qword_284DB0);
      int v58 = v57(v56, 1LL, v54);
      uint64_t v59 = v117;
      if (v58 == 1)
      {
        sub_1F6CC((uint64_t)v55, &qword_284DB0);
        sub_874C4((uint64_t)&v128, (uint64_t)&v125);
LABEL_23:
        sub_6C3C(&v125);
        sub_874C4((uint64_t)&v128, (uint64_t)v122);
        goto LABEL_24;
      }
    }

    else
    {
      uint64_t v60 = v108;
      sub_D8208((uint64_t)v55, (uint64_t)v108);
      if (v57(v56, 1LL, v54) != 1)
      {
        uint64_t v73 = v120;
        uint64_t v74 = v109;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v120 + 32))(v109, v56, v54);
        uint64_t v75 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        uint64_t v99 = v53;
        int v98 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v74, v54, v75);
        uint64_t v76 = v51;
        uint64_t v77 = *(void (**)(_BYTE *, uint64_t))(v73 + 8);
        v77(v74, v54);
        sub_1F6CC((uint64_t)v24, &qword_284DB0);
        sub_1F6CC(v76, &qword_284DB0);
        uint64_t v53 = v99;
        v77(v60, v54);
        sub_1F6CC((uint64_t)v55, &qword_284DB0);
        sub_874C4((uint64_t)&v128, (uint64_t)&v125);
        uint64_t v59 = v117;
        if ((v98 & 1) != 0) {
          goto LABEL_23;
        }
LABEL_13:
        uint64_t v61 = v126;
        uint64_t v62 = v127;
        sub_6EA8(&v125, v126);
        uint64_t v63 = (uint64_t)v110;
        dispatch thunk of AudioIntent.verb.getter(v61, v62);
        v53(v59, enum case for CommonAudio.Verb.update(_:), v54);
        v107(v59, 0LL, 1LL, v54);
        uint64_t v64 = v111;
        uint64_t v65 = (uint64_t)&v111[*(int *)(v121 + 48)];
        sub_D8208(v63, (uint64_t)v111);
        sub_D8208((uint64_t)v59, v65);
        if (v57((uint64_t)v64, 1LL, v54) == 1)
        {
          sub_1F6CC((uint64_t)v59, &qword_284DB0);
          sub_1F6CC(v63, &qword_284DB0);
          if (v57(v65, 1LL, v54) == 1)
          {
            sub_1F6CC((uint64_t)v64, &qword_284DB0);
            goto LABEL_23;
          }
        }

        else
        {
          uint64_t v66 = v103;
          sub_D8208((uint64_t)v64, (uint64_t)v103);
          if (v57(v65, 1LL, v54) != 1)
          {
            uint64_t v81 = v120;
            uint64_t v82 = v109;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v120 + 32))(v109, v65, v54);
            uint64_t v83 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
            char v84 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v82, v54, v83);
            uint64_t v85 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
            v85(v82, v54);
            sub_1F6CC((uint64_t)v117, &qword_284DB0);
            sub_1F6CC(v63, &qword_284DB0);
            v85(v66, v54);
            sub_1F6CC((uint64_t)v64, &qword_284DB0);
            sub_6C3C(&v125);
            sub_874C4((uint64_t)&v128, (uint64_t)v122);
            if ((v84 & 1) != 0) {
              goto LABEL_24;
            }
LABEL_19:
            uint64_t v67 = v123;
            uint64_t v68 = v124;
            sub_6EA8(v122, v123);
            uint64_t v69 = (uint64_t)v105;
            dispatch thunk of AudioIntent.verb.getter(v67, v68);
            uint64_t v70 = (uint64_t)v104;
            v53(v104, enum case for CommonAudio.Verb.follow(_:), v54);
            v107(v70, 0LL, 1LL, v54);
            os_log_type_t v71 = v106;
            uint64_t v72 = (uint64_t)&v106[*(int *)(v121 + 48)];
            sub_D8208(v69, (uint64_t)v106);
            sub_D8208(v70, v72);
            if (v57((uint64_t)v71, 1LL, v54) == 1)
            {
              sub_1F6CC(v70, &qword_284DB0);
              sub_1F6CC(v69, &qword_284DB0);
              if (v57(v72, 1LL, v54) == 1)
              {
                sub_1F6CC((uint64_t)v71, &qword_284DB0);
LABEL_24:
                uint64_t v78 = sub_6C3C(v122);
LABEL_25:
                static ActionForInput.handle()(v78);
                return sub_6C3C(&v128);
              }
            }

            else
            {
              uint64_t v80 = v102;
              sub_D8208((uint64_t)v71, (uint64_t)v102);
              if (v57(v72, 1LL, v54) != 1)
              {
                uint64_t v86 = v120;
                uint64_t v87 = v69;
                uint64_t v88 = v109;
                (*(void (**)(_BYTE *, uint64_t, uint64_t))(v120 + 32))(v109, v72, v54);
                uint64_t v89 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
                char v90 = dispatch thunk of static Equatable.== infix(_:_:)(v80, v88, v54, v89);
                id v91 = *(void (**)(_BYTE *, uint64_t))(v86 + 8);
                v91(v88, v54);
                sub_1F6CC(v70, &qword_284DB0);
                sub_1F6CC(v87, &qword_284DB0);
                v91(v80, v54);
                sub_1F6CC((uint64_t)v71, &qword_284DB0);
                uint64_t v78 = sub_6C3C(v122);
                uint64_t v30 = v101;
                if ((v90 & 1) != 0) {
                  goto LABEL_25;
                }
                goto LABEL_32;
              }

              sub_1F6CC(v70, &qword_284DB0);
              sub_1F6CC(v69, &qword_284DB0);
              (*(void (**)(_BYTE *, uint64_t))(v120 + 8))(v80, v54);
            }

            sub_1F6CC((uint64_t)v71, &qword_284DA8);
            sub_6C3C(v122);
            uint64_t v30 = v101;
LABEL_32:
            sub_6C3C(&v128);
            uint64_t v46 = v100;
            goto LABEL_33;
          }

          sub_1F6CC((uint64_t)v117, &qword_284DB0);
          sub_1F6CC(v63, &qword_284DB0);
          (*(void (**)(_BYTE *, uint64_t))(v120 + 8))(v66, v54);
        }

        sub_1F6CC((uint64_t)v64, &qword_284DA8);
        sub_6C3C(&v125);
        sub_874C4((uint64_t)&v128, (uint64_t)v122);
        goto LABEL_19;
      }

      sub_1F6CC((uint64_t)v24, &qword_284DB0);
      sub_1F6CC(v51, &qword_284DB0);
      (*(void (**)(_BYTE *, uint64_t))(v120 + 8))(v60, v54);
      uint64_t v59 = v117;
    }

    sub_1F6CC((uint64_t)v55, &qword_284DA8);
    sub_874C4((uint64_t)&v128, (uint64_t)&v125);
    goto LABEL_13;
  }

  sub_1F6CC((uint64_t)&v125, &qword_2848C0);
LABEL_33:
  uint64_t v92 = v113(v119, v112, v30);
  uint64_t v93 = (os_log_s *)Logger.logObject.getter(v92);
  os_log_type_t v94 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v93, v94))
  {
    os_log_type_t v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v95 = 0;
    _os_log_impl(&dword_0, v93, v94, "AddMediaFlowStrategy#actionForInput received unsupported pommesResponse", v95, 2u);
    swift_slowDealloc(v95, -1LL, -1LL);
  }

  uint64_t v96 = v46(v119, v30);
  return static ActionForInput.ignore()(v96);
}

void AddMediaFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)( uint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v109 = a4;
  uint64_t v110 = a3;
  uint64_t v6 = type metadata accessor for Parse(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (void **)&v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = __chkstk_darwin(v8);
  os_log_type_t v105 = &v97[-v12];
  __chkstk_darwin(v11);
  uint64_t v14 = &v97[-v13];
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  BOOL v106 = &v97[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = &v97[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v102 = &v97[-v23];
  __chkstk_darwin(v22);
  uint64_t v25 = &v97[-v24];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v27 = *(void (**)(void))(v16 + 16);
  uint64_t v107 = v26;
  uint64_t v108 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v27;
  v27(v25);
  uint64_t v28 = *(void (**)(void **, uint64_t, uint64_t))(v7 + 16);
  uint64_t v112 = a1;
  unint64_t v113 = v28;
  v28((void **)v14, a1, v6);
  id v29 = a2;
  uint64_t v114 = v7;
  id v30 = v29;
  uint64_t v31 = Logger.logObject.getter(v29);
  uint64_t v111 = v16;
  uint64_t v32 = (os_log_s *)v31;
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    uint64_t v103 = v21;
    uint64_t v36 = v35;
    uint64_t v99 = swift_slowAlloc(96LL, -1LL);
    uint64_t v116 = v99;
    *(_DWORD *)uint64_t v36 = 136446722;
    int v98 = v34;
    uint64_t v37 = static Insights.frameKit.getter();
    uint64_t v101 = v10;
    unint64_t v39 = v38;
    uint64_t v115 = sub_6978(v37, v38, &v116);
    uint64_t v100 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);
    __n128 v40 = swift_bridgeObjectRelease(v39);
    *(_WORD *)(v36 + sub_6C3C(v0 + 12) = 2080;
    uint64_t v41 = v105;
    ((void (*)(_BYTE *, void **, uint64_t, __n128))v113)(v105, (void **)v14, v6, v40);
    uint64_t v42 = String.init<A>(describing:)(v41, v6);
    unint64_t v44 = v43;
    uint64_t v115 = sub_6978(v42, v43, &v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);
    __n128 v45 = swift_bridgeObjectRelease(v44);
    uint64_t v46 = *(void (**)(_BYTE *, uint64_t, __n128))(v114 + 8);
    v46((void **)v14, v6, v45);
    *(_WORD *)(v36 + 2sub_6C3C(v0 + 2) = 2080;
    uint64_t v115 = (uint64_t)a2;
    id v47 = v30;
    uint64_t v48 = sub_6C5C(&qword_288420);
    uint64_t v49 = String.init<A>(describing:)(&v115, v48);
    unint64_t v51 = v50;
    uint64_t v115 = sub_6978(v49, v50, &v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);

    uint64_t v10 = v101;
    swift_bridgeObjectRelease(v51);
    _os_log_impl( &dword_0,  v32,  (os_log_type_t)v98,  "AddMediaFlowStrategy#makeIntentFromParse %{public}s for parse:%s and previousIntent:%s",  (uint8_t *)v36,  0x20u);
    uint64_t v52 = v99;
    swift_arrayDestroy(v99, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v52, -1LL, -1LL);
    uint64_t v53 = v36;
    uint64_t v21 = v103;
    swift_slowDealloc(v53, -1LL, -1LL);

    uint64_t v54 = *(void (**)(_BYTE *, uint64_t))(v111 + 8);
    uint64_t v55 = v100;
    v54(v25, v100);
  }

  else
  {
    uint64_t v46 = *(void (**)(_BYTE *, uint64_t, __n128))(v114 + 8);
    ((void (*)(void **, uint64_t))v46)((void **)v14, v6);

    uint64_t v54 = *(void (**)(_BYTE *, uint64_t))(v111 + 8);
    v54(v25, v15);
    uint64_t v55 = v15;
  }

  v113(v10, v112, v6);
  uint64_t v56 = v114;
  int v57 = (*(uint64_t (**)(void **, uint64_t))(v114 + 88))(v10, v6);
  if (v57 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v56 + 96))(v10, v6);
    uint64_t v58 = sub_6C5C(&qword_284618);
    uint64_t v59 = *(uint64_t *)((char *)v10 + *(int *)(v58 + 48));
    uint64_t v60 = (void *)Parse.ServerConversion.siriKitIntent.getter(v58);
    uint64_t v61 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    uint64_t v62 = swift_dynamicCastObjCClass(v60, v61);
    uint64_t v63 = v10;
    if (v62)
    {
      uint64_t v64 = (void *)v62;
      uint64_t v65 = Parse.ServerConversion.parameterMetadata.getter();
      uint64_t v66 = *(void *)(v104 + 16);
      *(void *)(v104 + swift_weakDestroy(v0 + 16) = v65;
      swift_bridgeObjectRelease(v66);
      id v67 = v60;
      v110(v64, 0LL);
      swift_release(v59);
    }

    else
    {

      uint64_t v87 = v102;
      uint64_t v88 = v108(v102, v107, v55);
      uint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
      os_log_type_t v90 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v89, v90))
      {
        id v91 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v91 = 0;
        _os_log_impl( &dword_0,  v89,  v90,  "AddMediaFlowStrategy#makeIntentFromParse received unsupported NLv3IntentPlusServerConversion parse, ignoring",  v91,  2u);
        swift_slowDealloc(v91, -1LL, -1LL);
      }

      v54(v87, v55);
      uint64_t v92 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v93 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      os_log_type_t v94 = (void *)swift_allocError(v92, v93, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v92 - 8) + 104LL))( v95,  enum case for PlaybackCode.ceGE8(_:),  v92);
      v110(v94, 1LL);
      swift_errorRelease(v94);
      swift_release(v59);
    }

    uint64_t v96 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(void **, uint64_t))(*(void *)(v96 - 8) + 8LL))(v63, v96);
  }

  else if (v57 == enum case for Parse.pommesResponse(_:))
  {
    (*(void (**)(void **, uint64_t))(v56 + 96))(v10, v6);
    uint64_t v68 = *v10;
    v108(v21, v107, v55);
    id v69 = v68;
    uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
    os_log_type_t v71 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc(12LL, -1LL);
      uint64_t v103 = v21;
      uint64_t v73 = (uint8_t *)v72;
      uint64_t v114 = swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v73 = 138477827;
      uint64_t v116 = (uint64_t)v69;
      uint64_t v74 = v55;
      id v75 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
      uint64_t v76 = v114;
      *(void *)uint64_t v114 = v69;

      uint64_t v55 = v74;
      _os_log_impl( &dword_0,  v70,  v71,  "AddMediaFlowStrategy#makeIntentFrom received pommesResponse: %{private}@",  v73,  0xCu);
      uint64_t v77 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v76, 1LL, v77);
      swift_slowDealloc(v76, -1LL, -1LL);
      uint64_t v78 = v73;
      uint64_t v21 = v103;
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    else
    {

      uint64_t v70 = (os_log_s *)v69;
    }

    v54(v21, v55);
    sub_D7C14(v69, v110, v109);
  }

  else
  {
    uint64_t v79 = v108(v106, v107, v55);
    uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
    os_log_type_t v81 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v82 = 0;
      _os_log_impl(&dword_0, v80, v81, "AddMediaFlowStrategy#makeIntentFromParse received unsupported parse", v82, 2u);
      swift_slowDealloc(v82, -1LL, -1LL);
    }

    v54(v106, v55);
    uint64_t v83 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v84 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v85 = (void *)swift_allocError(v83, v84, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v83 - 8) + 104LL))( v86,  enum case for PlaybackCode.ceGE9(_:),  v83);
    v110(v85, 1LL);
    swift_errorRelease(v85);
    ((void (*)(void **, uint64_t))v46)(v10, v6);
  }

uint64_t PlayMediaFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 136LL, 7LL);
}

void sub_D7C14(void *a1, void (*a2)(id, void), uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v55 - v11;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = v14(v12, v13, v4);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "AddMediaFlowStrategy#makeIntentFrom", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v12, v4);
  uint64_t v20 = sub_10470();
  if (v20)
  {
    uint64_t v21 = (uint8_t *)v20;
    id v22 = [objc_allocWithZone(INAddMediaIntent) init];
    uint64_t v23 = (void *)dispatch thunk of PommesResponse.clientResults.getter();
    id v24 = sub_59CEC(v21, v23);

    swift_bridgeObjectRelease(v23);
    uint64_t v25 = v58;
    v14(v58, v13, v4);
    id v26 = v24;
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v62 = v56;
      *(_DWORD *)id v29 = 136315138;
      uint64_t v55 = v29 + 4;
      id v30 = v26;
      id v31 = [v30 description];
      int v57 = v19;
      id v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      unint64_t v35 = v34;

      uint64_t v61 = sub_6978(v33, v35, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

      swift_bridgeObjectRelease(v35);
      _os_log_impl( &dword_0,  v27,  v28,  "AddMediaFlowStrategy#makeIntentFromParse converted pommesResponse to intent: %s",  v29,  0xCu);
      uint64_t v36 = v56;
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);

      v57(v58, v4);
    }

    else
    {

      v19(v25, v4);
    }

    uint64_t v48 = v60;
    id v49 = v26;
    v48(v26, 0LL);
  }

  else
  {
    v14(v8, v13, v4);
    id v37 = a1;
    unint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      __n128 v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      uint64_t v58 = (char *)v41;
      uint64_t v62 = v41;
      *(_DWORD *)__n128 v40 = 136315138;
      uint64_t v56 = (uint64_t)(v40 + 4);
      uint64_t v42 = dispatch thunk of PommesResponse.experiences.getter(v41);
      uint64_t v43 = type metadata accessor for Experience(0LL);
      uint64_t v44 = Array.description.getter(v42, v43);
      int v57 = v19;
      unint64_t v46 = v45;
      swift_bridgeObjectRelease(v42);
      uint64_t v61 = sub_6978(v44, v46, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

      swift_bridgeObjectRelease(v46);
      _os_log_impl( &dword_0,  v38,  v39,  "AddMediaFlowStrategy#makeIntentFromParse pommesResponse doesn't contain audioExperience %s",  v40,  0xCu);
      id v47 = v58;
      swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      v57(v8, v4);
    }

    else
    {

      v19(v8, v4);
    }

    unint64_t v50 = (void (*)(uint64_t, uint64_t))v60;
    uint64_t v51 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v52 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v53 = swift_allocError(v51, v52, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104LL))( v54,  enum case for PlaybackCode.ceGE7(_:),  v51);
    v50(v53, 1LL);
    swift_errorRelease(v53);
  }

uint64_t type metadata accessor for AddMediaFlowStrategy(uint64_t a1)
{
  uint64_t result = qword_288450;
  if (!qword_288450) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AddMediaFlowStrategy);
  }
  return result;
}

uint64_t sub_D81D4(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 288);
}

uint64_t sub_D8208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_D8250(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_285BD0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v123 = (uint64_t)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v118 - v5;
  uint64_t v7 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v7);
  uint64_t v128 = (uint64_t)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v126 = *(void *)(v9 - 8);
  uint64_t v127 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = type metadata accessor for Parse(0LL);
  uint64_t v12 = *(void *)(v133 - 8);
  uint64_t v13 = __chkstk_darwin(v133);
  uint64_t v129 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v132 = (char *)&v118 - v15;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v122 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v120 = (char *)&v118 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  id v24 = (char *)&v118 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  __int128 v125 = (char *)&v118 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v121 = (char *)&v118 - v28;
  __chkstk_darwin(v27);
  id v30 = (char *)&v118 - v29;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v16, (uint64_t)qword_2969C8);
  id v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v130 = v31;
  uint64_t v131 = v32;
  uint64_t v33 = ((uint64_t (*)(char *))v32)(v30);
  unint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    char v119 = v24;
    id v37 = v11;
    uint64_t v38 = v12;
    os_log_type_t v39 = v6;
    uint64_t v40 = a1;
    uint64_t v41 = v16;
    uint64_t v42 = v36;
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "ShuffleOnDeviceFlow#on Validating input", v36, 2u);
    uint64_t v43 = v42;
    uint64_t v16 = v41;
    a1 = v40;
    uint64_t v6 = v39;
    uint64_t v12 = v38;
    uint64_t v11 = v37;
    id v24 = v119;
    swift_slowDealloc(v43, -1LL, -1LL);
  }

  uint64_t v44 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v45 = v44(v30, v16);
  unint64_t v46 = v132;
  Input.parse.getter(v45);
  uint64_t v47 = v133;
  uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v46, v133);
  if ((_DWORD)v48 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if ((_DWORD)v48 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      uint64_t v60 = v16;
      (*(void (**)(char *, uint64_t))(v12 + 96))(v46, v47);
      uint64_t v61 = sub_6C5C(&qword_284618);
      uint64_t v62 = *(void *)&v46[*(int *)(v61 + 48)];
      uint64_t v63 = (void *)Parse.ServerConversion.siriKitIntent.getter(v61);
      uint64_t v64 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      uint64_t v65 = swift_dynamicCastObjCClass(v63, v64);

      if (v65)
      {
        uint64_t v67 = a1;
        uint64_t v68 = (void *)Parse.ServerConversion.siriKitIntent.getter(v66);
        uint64_t v69 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
        if (swift_dynamicCastObjCClass(v68, v69))
        {
          char v70 = INPlayMediaIntent.isAmbiguousShuffle.getter();

          if ((v70 & 1) != 0)
          {
            a1 = v67;
            swift_release(v62);
            uint64_t v71 = type metadata accessor for NLIntent(0LL);
            (*(void (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8LL))(v46, v71);
LABEL_41:
            uint64_t v105 = type metadata accessor for Input(0LL);
            uint64_t v106 = *(void *)(v105 - 8);
            (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v6, a1, v105);
            uint64_t v107 = *(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56);
            uint64_t v103 = 1LL;
            v107(v6, 0LL, 1LL, v105);
            uint64_t v108 = v123;
            sub_45F6C((uint64_t)v6, v123, &qword_285BD0);
            uint64_t v109 = v124 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_input;
            swift_beginAccess( v124 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_input,  v135,  33LL,  0LL);
            sub_DD950(v108, v109, &qword_285BD0);
            swift_endAccess(v135);
            return v103;
          }
        }

        else
        {
        }
      }

      uint64_t v97 = v60;
      uint64_t v98 = v131(v24, v130, v60);
      uint64_t v99 = (os_log_s *)Logger.logObject.getter(v98);
      os_log_type_t v100 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v101 = 0;
        _os_log_impl(&dword_0, v99, v100, "ShuffleOnDeviceFlow#on input is not ambiguous shuffle, rejecting", v101, 2u);
        unint64_t v102 = v101;
        uint64_t v97 = v60;
        swift_slowDealloc(v102, -1LL, -1LL);
      }

      swift_release(v62);
      v44(v24, v97);
      uint64_t v96 = type metadata accessor for NLIntent(0LL);
      uint64_t v59 = *(void (**)(char *, uint64_t))(*(void *)(v96 - 8) + 8LL);
      uint64_t v95 = v46;
      goto LABEL_34;
    }

    if ((_DWORD)v48 != enum case for Parse.uso(_:))
    {
      uint64_t v80 = v12;
      uint64_t v88 = v122;
      uint64_t v89 = v131(v122, v130, v16);
      os_log_type_t v90 = (os_log_s *)Logger.logObject.getter(v89);
      os_log_type_t v91 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = v16;
        uint64_t v93 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v93 = 0;
        _os_log_impl(&dword_0, v90, v91, "ShuffleOnDeviceFlow#on unexpected parse type, rejecting", v93, 2u);
        os_log_type_t v94 = v93;
        uint64_t v16 = v92;
        swift_slowDealloc(v94, -1LL, -1LL);
      }

      v44(v88, v16);
      goto LABEL_28;
    }

    uint64_t v72 = v129;
    uint64_t v73 = a1;
    uint64_t v74 = Input.parse.getter(v48);
    uint64_t v75 = Parse.firstUsoTask()(v74);
    uint64_t v76 = *(void (**)(char *, uint64_t))(v12 + 8);
    v76(v72, v47);
    if (v75)
    {
      static UsoTask_CodegenConverter.convert(task:)(v135, v75);
      if (v135[3])
      {
        uint64_t v77 = type metadata accessor for UsoTask_shuffle_common_MediaItem(0LL);
        if ((swift_dynamicCast(&v134, v135, (char *)&type metadata for Any + 8, v77, 6LL) & 1) != 0)
        {
          uint64_t v78 = v134;
          swift_release(v75);
          swift_release(v78);
LABEL_40:
          v76(v46, v47);
          a1 = v73;
          goto LABEL_41;
        }
      }

      else
      {
        sub_1F6CC((uint64_t)v135, &qword_284028);
      }

      if ((sub_4A218() & 1) != 0)
      {
        swift_release(v75);
        goto LABEL_40;
      }

      char v104 = sub_49CA0();
      swift_release(v75);
      if ((v104 & 1) != 0) {
        goto LABEL_40;
      }
    }

    uint64_t v111 = v120;
    uint64_t v112 = v131(v120, v130, v16);
    unint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
    os_log_type_t v114 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v115 = v16;
      uint64_t v116 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v116 = 0;
      _os_log_impl( &dword_0,  v113,  v114,  "ShuffleOnDeviceFlow#on input is not shuffle media item or Play on shuffle, rejecting",  v116,  2u);
      uint64_t v117 = v116;
      uint64_t v16 = v115;
      uint64_t v47 = v133;
      swift_slowDealloc(v117, -1LL, -1LL);
    }

    v44(v111, v16);
    v76(v46, v47);
    return 0LL;
  }

  id v49 = v129;
  Input.parse.getter(v48);
  uint64_t v50 = v128;
  sub_206FC0(v49, v128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v50, 1LL, v127) == 1)
  {
    uint64_t v51 = v12;
    sub_1F6CC(v50, &qword_284CA0);
    uint64_t v52 = v125;
    uint64_t v53 = v131(v125, v130, v16);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = v16;
      int v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v57 = 0;
      _os_log_impl( &dword_0,  v54,  v55,  "ShuffleOnDeviceFlow#on Fatal: Cannot get AudioNLv3Intent from NLv3IntentOnly parse",  v57,  2u);
      uint64_t v58 = v57;
      uint64_t v16 = v56;
      swift_slowDealloc(v58, -1LL, -1LL);
    }

    v44(v52, v16);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v51 + 8);
    goto LABEL_29;
  }

  sub_B8980(v50, (uint64_t)v11);
  if (sub_207D38())
  {
    sub_DD994((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v46, v47);
    goto LABEL_41;
  }

  uint64_t v79 = (uint64_t)v11;
  uint64_t v80 = v12;
  os_log_type_t v81 = v121;
  uint64_t v82 = v131(v121, v130, v16);
  uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
  os_log_type_t v84 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = v16;
    uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl(&dword_0, v83, v84, "ShuffleOnDeviceFlow#on input is not ambiguous shuffle, rejecting", v86, 2u);
    uint64_t v87 = v86;
    uint64_t v16 = v85;
    swift_slowDealloc(v87, -1LL, -1LL);
  }

  v44(v81, v16);
  sub_DD994(v79);
LABEL_28:
  uint64_t v59 = *(void (**)(char *, uint64_t))(v80 + 8);
LABEL_29:
  uint64_t v95 = v46;
  uint64_t v96 = v47;
LABEL_34:
  v59(v95, v96);
  return 0LL;
}

uint64_t sub_D8C0C(uint64_t (**a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v158 = a2;
  uint64_t v5 = type metadata accessor for ExecuteResponse(0LL);
  unint64_t v153 = *(uint64_t (***)(char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v152 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v150 = type metadata accessor for Parse(0LL);
  uint64_t v149 = *(void (**)(char *, uint64_t))(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v151 = (char *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v8);
  uint64_t v157 = (char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Input(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v147 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v146 = v13;
  __chkstk_darwin(v12);
  uint64_t v159 = (uint64_t)&v142 - v14;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_type_t v148 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v145 = (char *)&v142 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v142 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  unint64_t v144 = (char *)&v142 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v142 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = (void *)sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v29 = *(uint64_t (**)(void))(v16 + 16);
  unint64_t v155 = v28;
  uint64_t v160 = v15;
  uint64_t v156 = (uint64_t (*)(char *, void *, uint64_t))v29;
  uint64_t v30 = v29(v27);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v154 = v3;
    uint64_t v34 = v5;
    uint64_t v35 = v11;
    uint64_t v36 = v33;
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "ShuffleOnDeviceFlow#execute", v33, 2u);
    id v37 = v36;
    uint64_t v11 = v35;
    uint64_t v5 = v34;
    uint64_t v3 = v154;
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  uint64_t v38 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v39 = v160;
  v38(v27, v160);
  uint64_t v40 = v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_input;
  swift_beginAccess(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_input, v168, 0LL, 0LL);
  uint64_t v41 = v40;
  uint64_t v42 = v157;
  sub_FF10(v41, (uint64_t)v157, &qword_285BD0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v42, 1LL, v10) == 1)
  {
    sub_1F6CC((uint64_t)v42, &qword_285BD0);
    uint64_t v43 = v148;
    uint64_t v44 = v156(v148, v155, v39);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl(&dword_0, v45, v46, "ShuffleOnDeviceFlow#execute Input is nil", v47, 2u);
      uint64_t v48 = v47;
      uint64_t v39 = v160;
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    uint64_t v49 = ((uint64_t (*)(char *, uint64_t))v38)(v43, v39);
    uint64_t v50 = v152;
    static ExecuteResponse.complete()(v49);
    ((void (*)(char *))a1)(v50);
    return v153[1](v50, v5);
  }

  uint64_t v52 = v5;
  uint64_t v53 = *(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32);
  uint64_t v54 = v53(v159, v42, v10);
  os_log_type_t v55 = v151;
  Input.parse.getter(v54);
  double v56 = sub_B7C84(v55, (uint64_t)&v162);
  int v57 = (void (*)(char *, uint64_t, double))*((void *)v149 + 1);
  v57(v55, v150, v56);
  if (v163)
  {
    os_log_type_t v148 = (char *)v57;
    uint64_t v152 = (char *)v53;
    uint64_t v154 = v3;
    unint64_t v153 = a1;
    uint64_t v143 = v10;
    sub_49B60(&v162, &v165);
    sub_BC728();
    uint64_t v157 = (char *)static INPlayMediaIntent.shuffleLocalLibrary()();
    uint64_t v58 = v166;
    uint64_t v59 = v167;
    sub_6EA8(&v165, v166);
    uint64_t v60 = dispatch thunk of AudioIntent.apps.getter(v58, v59);
    uint64_t v61 = v60;
    uint64_t v62 = v160;
    if ((unint64_t)v60 >> 62)
    {
      if (v60 >= 0) {
        v60 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v60);
    }

    else
    {
      uint64_t result = *(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v63 = v154;
    if (result)
    {
      if ((v61 & 0xC000000000000001LL) != 0)
      {
        uint64_t v64 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v61);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          return result;
        }

        uint64_t v64 = *(void *)(v61 + 32);
        swift_retain(v64);
      }

      swift_bridgeObjectRelease(v61);
      uint64_t v149 = (void (*)(char *, uint64_t))UsoEntity_common_App.bundleIdentifier.getter(v65);
      unint64_t v67 = v66;
      swift_release(v64);
      if (v67)
      {
        uint64_t v68 = v144;
        v156(v144, v155, v62);
        uint64_t v69 = swift_bridgeObjectRetain_n(v67, 2LL);
        char v70 = (os_log_s *)Logger.logObject.getter(v69);
        os_log_type_t v71 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v73 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v162 = v73;
          uint64_t v145 = v23;
          *(_DWORD *)uint64_t v72 = 136315138;
          swift_bridgeObjectRetain(v67);
          uint64_t v161 = sub_6978((uint64_t)v149, v67, (uint64_t *)&v162);
          uint64_t v23 = v145;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, &v162);
          swift_bridgeObjectRelease_n(v67, 3LL);
          _os_log_impl(&dword_0, v70, v71, "ShuffleOnDeviceFlow#execute Adding bundleId: %s to intent", v72, 0xCu);
          swift_arrayDestroy(v73, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v62 = v160;
          swift_slowDealloc(v73, -1LL, -1LL);
          swift_slowDealloc(v72, -1LL, -1LL);
        }

        else
        {

          swift_bridgeObjectRelease_n(v67, 2LL);
        }

        v38(v68, v62);
        id v96 = sub_1941C(v149, v67, 0LL, 0LL);
        uint64_t v97 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
        if (swift_dynamicCastObjCClass(v157, v97))
        {
          id v98 = [v157 backingStore];
          uint64_t v99 = &OBJC_CLASS____INPBPlayMediaIntent;
        }

        else
        {
          uint64_t v100 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
          if (swift_dynamicCastObjCClass(v157, v100))
          {
            id v98 = [v157 backingStore];
            uint64_t v99 = &OBJC_CLASS____INPBAddMediaIntent;
          }

          else
          {
            uint64_t v101 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
            if (swift_dynamicCastObjCClass(v157, v101))
            {
              id v98 = [v157 backingStore];
              uint64_t v99 = &OBJC_CLASS____INPBUpdateMediaAffinityIntent;
            }

            else
            {
              uint64_t v102 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
              if (!swift_dynamicCastObjCClass(v157, v102))
              {
                char v104 = v96;
LABEL_36:

                uint64_t v106 = (void *)static BundleIdentifiers.internalBundleIdentifiers.getter(v105);
                char v107 = sub_881D0((uint64_t)v149, v67, v106);
                swift_bridgeObjectRelease(v67);
                __n128 v108 = swift_bridgeObjectRelease(v106);
                if ((v107 & 1) != 0)
                {
                  uint64_t v109 = ((uint64_t (*)(char *, void *, uint64_t, __n128))v156)(v23, v155, v62, v108);
                  uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
                  os_log_type_t v111 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v110, v111))
                  {
                    uint64_t v112 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                    *(_WORD *)uint64_t v112 = 0;
                    _os_log_impl( &dword_0,  v110,  v111,  "ShuffleOnDeviceFlow#execute resolving routes for 1p app",  v112,  2u);
                    swift_slowDealloc(v112, -1LL, -1LL);
                  }

                  uint64_t v113 = ((uint64_t (*)(char *, uint64_t))v38)(v23, v62);
                  uint64_t v114 = v159;
                  Input.parse.getter(v113);
                  uint64_t v115 = v154;
                  uint64_t v116 = (void *)(v154
                                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_deviceResolutionProvider);
                  uint64_t v117 = (void *)(v154
                                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_encryptionProvider);
                  uint64_t v118 = (void *)(v154
                                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_sharedContextProvider);
                  char v119 = v147;
                  uint64_t v120 = v143;
                  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v147, v114, v143);
                  uint64_t v121 = *(unsigned __int8 *)(v11 + 80);
                  uint64_t v160 = v11;
                  uint64_t v122 = (v121 + 48) & ~v121;
                  uint64_t v123 = (void *)swift_allocObject(&unk_26ECD0, v122 + v146, v121 | 7);
                  uint64_t v124 = v157;
                  v123[2] = v115;
                  void v123[3] = v124;
                  uint64_t v125 = v158;
                  v123[4] = v153;
                  v123[5] = v125;
                  ((void (*)(char *, char *, uint64_t))v152)((char *)v123 + v122, v119, v120);
                  uint64_t v126 = v116[3];
                  uint64_t v156 = (uint64_t (*)(char *, void *, uint64_t))v116[4];
                  unint64_t v155 = sub_6EA8(v116, v126);
                  uint64_t v127 = v117[3];
                  unint64_t v153 = (uint64_t (**)(char *, uint64_t))v117[4];
                  uint64_t v128 = sub_6EA8(v117, v127);
                  uint64_t v129 = v118[3];
                  uint64_t v130 = v118[4];
                  uint64_t v131 = sub_6EA8(v118, v129);
                  swift_retain(v115);
                  id v132 = v124;
                  swift_retain(v158);
                  uint64_t v141 = v126;
                  uint64_t v133 = (uint64_t)v151;
                  sub_18EDB8( (uint64_t)v151,  (uint64_t)v155,  (uint64_t)v128,  (uint64_t)v131,  (void (*)(void))sub_DD728,  (uint64_t)v123,  v132,  v127,  v141,  v129,  (uint64_t)v153,  (uint64_t)v156,  v130);
                  swift_release(v123);
                  ((void (*)(uint64_t, uint64_t))v148)(v133, v150);

                  (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v159, v143);
                }

                else
                {
                  uint64_t v134 = v166;
                  uint64_t v135 = v167;
                  uint64_t v136 = sub_6EA8(&v165, v166);
                  uint64_t v163 = v134;
                  uint64_t v164 = v135;
                  uint64_t v137 = sub_10974(&v162);
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v134 - 8) + 16LL))(v137, v136, v134);
                  uint64_t v138 = (uint64_t)v137;
                  uint64_t v139 = v157;
                  uint64_t v140 = v159;
                  sub_DC864(v138, v157, v159, (uint64_t)v153, v158, v154, v134, v135);

                  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v140, v143);
                  sub_6C3C(&v162);
                }

                return sub_6C3C(&v165);
              }

              id v98 = [v157 backingStore];
              uint64_t v99 = &OBJC_CLASS____INPBSearchForMediaIntent;
            }
          }
        }

        uint64_t v103 = objc_opt_self(v99);
        char v104 = (void *)swift_dynamicCastObjCClass(v98, v103);
        if (!v104) {

        }
        [v104 setIntentMetadata:v96];
        goto LABEL_36;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v61);
    }

    uint64_t v83 = *(void *)(v63 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider + 24);
    uint64_t v156 = *(uint64_t (**)(char *, void *, uint64_t))(v63
                                                               + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider
                                                               + 32);
    unint64_t v155 = sub_6EA8( (void *)(v63 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider),  v83);
    os_log_type_t v84 = v147;
    uint64_t v85 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v147, v159, v143);
    sub_874C4((uint64_t)&v165, (uint64_t)&v162);
    uint64_t v86 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v87 = v63;
    uint64_t v160 = v11;
    uint64_t v88 = (v86 + 32) & ~v86;
    os_log_type_t v90 = v157;
    uint64_t v89 = v158;
    unint64_t v91 = (v146 + v88 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v92 = (v91 + 23) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v93 = swift_allocObject(&unk_26ECA8, v92 + 48, v86 | 7);
    *(void *)(v93 + swift_weakDestroy(v0 + 16) = v87;
    *(void *)(v93 + 24) = v90;
    ((void (*)(uint64_t, char *, uint64_t))v152)(v93 + v88, v84, v85);
    os_log_type_t v94 = (uint64_t (***)(char *, uint64_t))(v93 + v91);
    *os_log_type_t v94 = v153;
    v94[1] = (uint64_t (**)(char *, uint64_t))v89;
    sub_49B60(&v162, (_OWORD *)(v93 + v92));
    swift_retain(v87);
    id v95 = v90;
    swift_retain(v89);
    dispatch thunk of NowPlayingProviding.app(completion:)(sub_DC7A0, v93, v83, v156);

    swift_release(v93);
    (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v159, v85);
    return sub_6C3C(&v165);
  }

  sub_1F6CC((uint64_t)&v162, &qword_2848C0);
  uint64_t v74 = v145;
  uint64_t v75 = v160;
  uint64_t v76 = v156(v145, v155, v160);
  uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
  os_log_type_t v78 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v79 = 0;
    _os_log_impl(&dword_0, v77, v78, "ShuffleOnDeviceFlow#execute Failed to create audio intent from parse", v79, 2u);
    uint64_t v80 = v79;
    uint64_t v75 = v160;
    swift_slowDealloc(v80, -1LL, -1LL);
  }

  uint64_t v81 = ((uint64_t (*)(char *, uint64_t))v38)(v74, v75);
  uint64_t v82 = v152;
  static ExecuteResponse.complete()(v81);
  ((void (*)(char *))a1)(v82);
  v153[1](v82, v52);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v159, v10);
}

uint64_t sub_D99FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v88 = a11;
  uint64_t v89 = a9;
  uint64_t v90 = a12;
  uint64_t v85 = (void *)type metadata accessor for Input(0LL);
  uint64_t v16 = *(v85 - 1);
  __chkstk_darwin(v85);
  uint64_t v84 = v17;
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for Parse(0LL);
  uint64_t v86 = *(void *)(v19 - 8);
  uint64_t v87 = v19;
  __chkstk_darwin(v19);
  uint64_t v91 = (uint64_t)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v83 - v27;
  if (!a4)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v55 = sub_6960(v21, (uint64_t)qword_2969C8);
    uint64_t v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v55, v21);
    int v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl(&dword_0, v57, v58, "ShuffleOnDeviceFlow#execute resolving routes", v59, 2u);
      swift_slowDealloc(v59, -1LL, -1LL);
    }

    uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v28, v21);
    Input.parse.getter(v60);
    uint64_t v61 = (void *)(a8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_deviceResolutionProvider);
    uint64_t v62 = (void *)(a8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_encryptionProvider);
    uint64_t v63 = (void *)(a8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_sharedContextProvider);
    uint64_t v64 = v16;
    uint64_t v65 = *(void (**)(char *, uint64_t, void *))(v16 + 16);
    unint64_t v66 = v85;
    v65(v18, a10, v85);
    uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
    uint64_t v68 = (v67 + 48) & ~v67;
    uint64_t v43 = (char *)swift_allocObject(&unk_26ED70, v68 + v84, v67 | 7);
    *((void *)v43 + sub_6C3C(v0 + 2) = a8;
    uint64_t v84 = a8;
    uint64_t v69 = v88;
    char v70 = v89;
    *((void *)v43 + sub_6C3C(v0 + 3) = v89;
    *((void *)v43 + 4) = v69;
    uint64_t v71 = v90;
    *((void *)v43 + 5) = v90;
    (*(void (**)(char *, char *, void *))(v64 + 32))(&v43[v68], v18, v66);
    uint64_t v47 = v61[3];
    uint64_t v88 = v61[4];
    uint64_t v85 = sub_6EA8(v61, v47);
    uint64_t v49 = v62[3];
    uint64_t v72 = v62[4];
    uint64_t v50 = sub_6EA8(v62, v49);
    uint64_t v52 = v63[3];
    uint64_t v73 = v63[4];
    uint64_t v53 = sub_6EA8(v63, v52);
    swift_retain(v84);
    id v54 = v70;
    swift_retain(v71);
    uint64_t v82 = v73;
    uint64_t v80 = v72;
    uint64_t v81 = v88;
    goto LABEL_13;
  }

  uint64_t v29 = (void *)static BundleIdentifiers.internalBundleIdentifiers.getter(v26);
  char v30 = sub_881D0(a3, a4, v29);
  swift_bridgeObjectRelease(v29);
  if ((v30 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v31 = sub_6960(v21, (uint64_t)qword_2969C8);
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v31, v21);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "ShuffleOnDeviceFlow#execute resolving routes for 1p app", v35, 2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    Input.parse.getter(v36);
    id v37 = (void *)(a8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_deviceResolutionProvider);
    uint64_t v38 = (void *)(a8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_encryptionProvider);
    uint64_t v39 = (void *)(a8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_sharedContextProvider);
    uint64_t v40 = v85;
    (*(void (**)(char *, uint64_t, void *))(v16 + 16))(v18, a10, v85);
    uint64_t v41 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v42 = (v41 + 48) & ~v41;
    uint64_t v43 = (char *)swift_allocObject(&unk_26ED98, v42 + v84, v41 | 7);
    *((void *)v43 + sub_6C3C(v0 + 2) = a8;
    uint64_t v84 = a8;
    uint64_t v44 = v88;
    uint64_t v45 = v89;
    *((void *)v43 + sub_6C3C(v0 + 3) = v89;
    *((void *)v43 + 4) = v44;
    uint64_t v46 = v90;
    *((void *)v43 + 5) = v90;
    (*(void (**)(char *, char *, void *))(v16 + 32))(&v43[v42], v18, v40);
    uint64_t v47 = v37[3];
    uint64_t v88 = v37[4];
    uint64_t v85 = sub_6EA8(v37, v47);
    uint64_t v49 = v38[3];
    uint64_t v48 = v38[4];
    uint64_t v50 = sub_6EA8(v38, v49);
    uint64_t v52 = v39[3];
    uint64_t v51 = v39[4];
    uint64_t v53 = sub_6EA8(v39, v52);
    swift_retain(v84);
    id v54 = v45;
    swift_retain(v46);
    uint64_t v82 = v51;
    uint64_t v80 = v48;
    uint64_t v81 = v88;
LABEL_13:
    uint64_t v74 = v91;
    sub_18EDB8( v91,  (uint64_t)v85,  (uint64_t)v50,  (uint64_t)v53,  (void (*)(void))sub_DD728,  (uint64_t)v43,  v54,  v49,  v47,  v52,  v80,  v81,  v82);
    swift_release(v43);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v74, v87);
  }

  uint64_t v76 = a13[3];
  uint64_t v77 = a13[4];
  os_log_type_t v78 = sub_6EA8(a13, v76);
  v92[3] = v76;
  v92[4] = v77;
  uint64_t v79 = sub_10974(v92);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16LL))(v79, v78, v76);
  sub_DC864((uint64_t)v79, v89, a10, v88, v90, a8, v76, v77);
  return sub_6C3C(v92);
}

uint64_t sub_D9FB8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v122 = a7;
  uint64_t v115 = a6;
  os_log_type_t v111 = a2;
  uint64_t v112 = a5;
  uint64_t v119 = a4;
  uint64_t v124 = a3;
  uint64_t v8 = type metadata accessor for Input(0LL);
  uint64_t v113 = *(void *)(v8 - 8);
  uint64_t v114 = v8;
  __chkstk_darwin(v8);
  uint64_t v117 = v9;
  uint64_t v118 = (char **)((char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = type metadata accessor for Parse(0LL);
  uint64_t v120 = *(void *)(v10 - 8);
  uint64_t v121 = v10;
  __chkstk_darwin(v10);
  uint64_t v125 = (uint64_t)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_284DC8);
  __chkstk_darwin(v12);
  uint64_t v110 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_284DB8);
  __chkstk_darwin(v14);
  uint64_t v109 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v123 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v116 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v106 - v19;
  uint64_t v21 = sub_6C5C(&qword_284E30);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for NowPlayingInfo(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  char v30 = (char *)&v106 - v29;
  sub_FF10(a1, (uint64_t)v23, &qword_284E30);
  if (swift_getEnumCaseMultiPayload(v23, v21) == 1)
  {
    sub_1F6CC((uint64_t)v23, &qword_284E30);
    uint64_t v31 = v114;
    uint64_t v32 = v115;
    uint64_t v33 = v112;
    uint64_t v34 = v113;
    uint64_t v35 = v123;
    uint64_t v36 = v116;
    uint64_t v37 = v16;
    goto LABEL_23;
  }

  uint64_t v108 = v25;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v107 = v24;
  v38(v30, v23, v24);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v37 = v16;
  uint64_t v39 = sub_6960(v16, (uint64_t)qword_2969C8);
  uint64_t v40 = v123;
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 16))(v20, v39, v16);
  uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl( &dword_0,  v42,  v43,  "ShuffleOnDeviceFlow#execute Adding now playing info to intent for 3p app",  v44,  2u);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v16);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  uint64_t v106 = v30;
  uint64_t v46 = v107;
  v45(v28, v30, v107);
  uint64_t v47 = type metadata accessor for NowPlayingIntent(0LL);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  uint64_t v48 = sub_B8A00((uint64_t)v28);
  uint64_t v49 = v111;
  uint64_t v50 = v111[3];
  uint64_t v51 = v111[4];
  sub_6EA8(v111, v50);
  uint64_t v52 = (uint64_t)v109;
  dispatch thunk of AudioIntent.reference.getter(v50, v51);
  uint64_t v53 = (uint64_t)&v48[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_reference];
  swift_beginAccess(&v48[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_reference], v126, 33LL, 0LL);
  sub_DD950(v52, v53, &qword_284DB8);
  swift_endAccess(v126);
  uint64_t v54 = v49[3];
  uint64_t v55 = v49[4];
  sub_6EA8(v49, v54);
  uint64_t v56 = (uint64_t)v110;
  dispatch thunk of AudioIntent.mediaType.getter(v54, v55);
  uint64_t v57 = (uint64_t)&v48[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType];
  swift_beginAccess(&v48[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType], v126, 33LL, 0LL);
  sub_DD950(v56, v57, &qword_284DC8);
  swift_endAccess(v126);
  uint64_t v58 = swift_retain(v48);
  uint64_t v59 = (void *)sub_5FDD4(v58, 0LL, 0LL);
  swift_release(v48);
  uint64_t v60 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v61 = v124;
  if (swift_dynamicCastObjCClass(v124, v60))
  {
    id v62 = [v61 backingStore];
    uint64_t v63 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
    uint64_t v64 = swift_dynamicCastObjCClass(v62, v63);
    uint64_t v36 = v116;
    if (v64)
    {
      uint64_t v65 = (void *)v64;
      id v66 = (id)INIntentSlotValueTransformToMediaSearch(v59);
      [v65 setMediaSearch:v66];
      swift_release(v48);

      (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v46);
      uint64_t v31 = v114;
      uint64_t v32 = v115;
      uint64_t v33 = v112;
      uint64_t v34 = v113;
      uint64_t v35 = v123;
      goto LABEL_23;
    }

    swift_release(v48);

    uint64_t v35 = v123;
    goto LABEL_21;
  }

  uint64_t v67 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  uint64_t v68 = swift_dynamicCastObjCClass(v61, v67);
  uint64_t v36 = v116;
  if (v68)
  {
    id v62 = [v61 backingStore];
    uint64_t v69 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
    uint64_t v70 = swift_dynamicCastObjCClass(v62, v69);
    uint64_t v35 = v123;
    if (v70) {
      goto LABEL_19;
    }
    goto LABEL_20;
  }

  uint64_t v71 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
  uint64_t v72 = swift_dynamicCastObjCClass(v61, v71);
  uint64_t v35 = v123;
  if (v72)
  {
    id v62 = [v61 backingStore];
    uint64_t v73 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
    uint64_t v70 = swift_dynamicCastObjCClass(v62, v73);
    if (v70) {
      goto LABEL_19;
    }
    goto LABEL_20;
  }

  uint64_t v74 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
  if (!swift_dynamicCastObjCClass(v61, v74))
  {
    swift_release(v48);
    id v62 = v59;
    goto LABEL_21;
  }

  id v62 = [v61 backingStore];
  uint64_t v75 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
  uint64_t v70 = swift_dynamicCastObjCClass(v62, v75);
  if (!v70)
  {
LABEL_20:
    swift_release(v48);

LABEL_21:
    goto LABEL_22;
  }

uint64_t sub_DA918(__int16 a1, uint64_t a2, void *a3, void (*a4)(_BYTE *), uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a2;
  uint64_t v38 = a4;
  uint64_t v10 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v33[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  if ((a1 & 0x100) != 0)
  {
    uint64_t v35 = a3;
    uint64_t v36 = a5;
    int v20 = a1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v21 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v22 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc(12LL, -1LL);
      int v34 = a1;
      uint64_t v26 = (uint8_t *)v25;
      uint64_t v27 = swift_slowAlloc(32LL, -1LL);
      uint64_t v40 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      LOBYTE(v39) = v34;
      unint64_t v28 = sub_DD72C();
      uint64_t v29 = Error.localizedDescription.getter(&type metadata for RouteResolutionError, v28);
      unint64_t v31 = v30;
      uint64_t v39 = sub_6978(v29, v30, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_bridgeObjectRelease(v31);
      _os_log_impl(&dword_0, v23, v24, "ShuffleOnDeviceFlow#execute Route resolution failed with error: %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1LL, -1LL);
      uint64_t v32 = v26;
      int v20 = v34;
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
    if (v20 == 1)
    {
      return sub_DAE60(v35, (uint64_t)v38, v36);
    }

    else if (v20 == 3)
    {
      return sub_DB054(v35, (uint64_t)v38, v36);
    }

    else
    {
      return sub_DABD4(v35, (uint64_t)v38, v36);
    }
  }

  else
  {
    uint64_t v18 = sub_1AF68(a6, a3);
    static ExecuteResponse.complete(next:)(v18);
    v38(v13);
    swift_release(v18);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }

uint64_t sub_DABD4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "ShuffleOnDeviceFlow#noSpeakerFoundErrorResponse Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_playMediaCatDialogService);
  v25[3] = sub_BC728();
  v25[4] = &off_272BD0;
  v25[0] = a1;
  uint64_t v18 = (void *)swift_allocObject(&unk_26EC80, 48LL, 7LL);
  v18[2] = v4;
  v18[3] = a1;
  void v18[4] = a2;
  v18[5] = a3;
  uint64_t v19 = *(void *)(v17 + 40);
  uint64_t v20 = *(void *)(v17 + 48);
  id v21 = a1;
  swift_retain(v4);
  swift_retain(a3);
  unint64_t v22 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  __chkstk_darwin(v22);
  *(&v24 - 10) = v19;
  *(&v24 - 9) = v20;
  strcpy((char *)&v24 - 64, "NoSpeakerFound");
  *((_BYTE *)&v24 - 49) = -18;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_DC6A0,  (uint64_t)v18,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v19,  v20,  0x656B616570536F4ELL,  0xEE00646E756F4672LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v24 - 12));
  swift_release(v18);
  swift_bridgeObjectRelease(v22);
  return sub_1F6CC((uint64_t)v25, &qword_283FE8);
}

uint64_t sub_DAE60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "ShuffleOnDeviceFlow#unsupportedOnPlatformErrorResponse Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  unint64_t v17 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  _OWORD v22[3] = sub_BC728();
  v22[4] = &off_272BD0;
  v22[0] = a1;
  uint64_t v18 = (void *)swift_allocObject(&unk_26EC58, 48LL, 7LL);
  v18[2] = v4;
  v18[3] = a1;
  void v18[4] = a2;
  v18[5] = a3;
  id v19 = a1;
  swift_retain(v4);
  swift_retain(a3);
  sub_462CC(v17, (uint64_t)v22, (uint64_t)sub_DC64C, (uint64_t)v18);
  swift_release(v18);
  swift_bridgeObjectRelease(v17);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_DB054(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "ShuffleOnDeviceFlow#noSpecificSpeakerErrorResponse Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_playMediaCatDialogService);
  v25[3] = sub_BC728();
  v25[4] = &off_272BD0;
  v25[0] = a1;
  uint64_t v18 = (void *)swift_allocObject(&unk_26EC30, 48LL, 7LL);
  v18[2] = v4;
  v18[3] = a1;
  void v18[4] = a2;
  v18[5] = a3;
  uint64_t v19 = *(void *)(v17 + 40);
  uint64_t v20 = *(void *)(v17 + 48);
  id v21 = a1;
  swift_retain(v4);
  swift_retain(a3);
  unint64_t v22 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  __chkstk_darwin(v22);
  *(&v24 - 10) = v19;
  *(&v24 - 9) = v20;
  *(&v24 - sub_6C3C(v0 + 8) = 0xD000000000000011LL;
  *(&v24 - sub_6C3C(v0 + 7) = 0x80000000002200F0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_DC62C,  (uint64_t)v18,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v19,  v20,  0xD000000000000011LL,  0x80000000002200F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v24 - 12));
  swift_release(v18);
  swift_bridgeObjectRelease(v22);
  return sub_1F6CC((uint64_t)v25, &qword_283FE8);
}

uint64_t sub_DB2D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v47 = a2;
  uint64_t v48 = a6;
  uint64_t v45 = a5;
  uint64_t v46 = a4;
  uint64_t v43 = a1;
  uint64_t v44 = a3;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "ShuffleOnDeviceFlow#handleDialogResult Handling dialog Result...", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v20 = *(void *)(v7 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_appNameResolver + 24);
  uint64_t v42 = *(void *)(v7 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_appNameResolver + 32);
  uint64_t v41 = sub_6EA8((void *)(v7 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_appNameResolver), v20);
  uint64_t v40 = static BundleIdentifiers.sentinelBundleIdentifier.getter(v41);
  uint64_t v22 = v21;
  uint64_t v50 = 0LL;
  memset(v49, 0, sizeof(v49));
  sub_FF10(v43, (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t *)&unk_286BB0);
  uint64_t v23 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  uint64_t v25 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = v7;
  unint64_t v27 = (v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v31 = swift_allocObject(&unk_26EC08, v30 + 16, v23 | 7);
  sub_45F6C((uint64_t)v25, v31 + v24, (uint64_t *)&unk_286BB0);
  uint64_t v32 = (void *)(v31 + v27);
  uint64_t v33 = v46;
  int v34 = v47;
  void *v32 = v44;
  v32[1] = v33;
  *(void *)(v31 + v2sub_6C3C(v0 + 8) = v26;
  *(void *)(v31 + v29) = v34;
  uint64_t v35 = (void *)(v31 + v30);
  uint64_t v36 = v48;
  *uint64_t v35 = v45;
  v35[1] = v36;
  swift_bridgeObjectRetain(v33);
  swift_retain(v26);
  id v37 = v34;
  swift_retain(v36);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v40, v22, v49, sub_DC588, v31, v20, v42);
  swift_bridgeObjectRelease(v22);
  swift_release(v31);
  return sub_1F6CC((uint64_t)v49, &qword_2860C0);
}

uint64_t sub_DB594( uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *), uint64_t a9)
{
  os_log_type_t v148 = a8;
  uint64_t v144 = a7;
  uint64_t v141 = a6;
  uint64_t v135 = a5;
  uint64_t v133 = a4;
  id v132 = a3;
  uint64_t v139 = a1;
  uint64_t v146 = a9;
  uint64_t v10 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v149 = *(void *)(v10 - 8);
  uint64_t v150 = v10;
  __chkstk_darwin(v10);
  uint64_t v147 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v145 = type metadata accessor for Logger(0LL);
  uint64_t v151 = *(void *)(v145 - 8);
  uint64_t v12 = __chkstk_darwin(v145);
  uint64_t v131 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v130 = (char *)&v128 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v15);
  uint64_t v143 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v17);
  uint64_t v142 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v19);
  uint64_t v140 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v136 = *(v138 - 1);
  __chkstk_darwin(v138);
  uint64_t v22 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v134 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v24 = (char *)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_6C5C(&qword_289340);
  uint64_t v26 = __chkstk_darwin(v25);
  unint64_t v28 = (char *)&v128 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  unint64_t v30 = (char *)&v128 - v29;
  uint64_t v31 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)((char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  type metadata accessor for App(0LL);
  swift_bridgeObjectRetain(a2);
  uint64_t v139 = App.__allocating_init(appIdentifier:)(v139, a2);
  sub_FF10((uint64_t)v132, (uint64_t)v33, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v33, v31) == 1)
  {
    uint64_t v34 = *v33;
    uint64_t v157 = v133;
    uint64_t v158 = v135;
    swift_bridgeObjectRetain(v135);
    v35._uint64_t countAndFlagsBits = 95LL;
    v35._object = (void *)0xE100000000000000LL;
    String.append(_:)(v35);
    uint64_t v37 = v157;
    uint64_t v36 = v158;
    uint64_t v135 = v34;
    swift_getErrorValue(v34, v156, v155);
    uint64_t v157 = Error.localizedDescription.getter(v155[1], v155[2]);
    uint64_t v158 = v38;
    uint64_t v39 = String.init<A>(_:)( &v157,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    uint64_t v41 = v40;
    uint64_t v157 = v37;
    uint64_t v158 = v36;
    swift_bridgeObjectRetain(v36);
    v42._uint64_t countAndFlagsBits = v39;
    v42._object = v41;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(v36);
    __n128 v43 = swift_bridgeObjectRelease(v41);
    uint64_t v44 = v157;
    uint64_t v45 = v158;
    uint64_t v46 = v134;
    uint64_t v47 = v137;
    (*(void (**)(char *, void, uint64_t, __n128))(v134 + 104))( v24,  enum case for AdditionalMetricsDescription.ModuleName.sllf(_:),  v137,  v43);
    uint64_t v48 = v136;
    uint64_t v49 = v138;
    (*(void (**)(char *, void, void *))(v136 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v138);
    uint64_t v133 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v24,  v22,  v44,  v45,  0LL,  1LL);
    uint64_t v51 = v50;
    __n128 v52 = swift_bridgeObjectRelease(v45);
    (*(void (**)(char *, void *, __n128))(v48 + 8))(v22, v49, v52);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v47);
    uint64_t v53 = *(void *)(v141
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v54 = *(void *)(v141
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider
                    + 32);
    sub_6EA8( (void *)(v141 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider),  v53);
    uint64_t v55 = enum case for ActivityType.failed(_:);
    uint64_t v56 = type metadata accessor for ActivityType(0LL);
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v140, v55, v56);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0LL, 1LL, v56);
    uint64_t v59 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v60 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56LL))(v142, 1LL, 1LL, v59);
    uint64_t v61 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v62 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v64 = (uint64_t)v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 104))(v143, v61, v62);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v64, 0LL, 1LL, v62);
    uint64_t v65 = v139;
    uint64_t v66 = swift_retain(v139);
    uint64_t v67 = v144;
    uint64_t v68 = INPlayMediaIntent.firstMediaItemType()(v66);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v65,  v67,  v58,  v60,  v64,  v133,  v51,  v68,  0,  v53,  v54);
    swift_release(v65);
    swift_bridgeObjectRelease(v51);
    sub_1F6CC(v64, &qword_2845A0);
    sub_1F6CC(v60, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v58, &qword_2845A8);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v69 = v145;
    uint64_t v70 = sub_6960(v145, (uint64_t)qword_2969C8);
    uint64_t v71 = v151;
    uint64_t v72 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v131, v70, v69);
    uint64_t v73 = v135;
    swift_errorRetain(v135);
    uint64_t v74 = swift_errorRetain(v73);
    uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
    os_log_type_t v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      id v77 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v78 = swift_slowAlloc(32LL, -1LL);
      uint64_t v154 = v78;
      *(_DWORD *)id v77 = 136315138;
      swift_getErrorValue(v73, v153, v152);
      uint64_t v157 = Error.localizedDescription.getter(v152[1], v152[2]);
      uint64_t v158 = v79;
      uint64_t v80 = String.init<A>(_:)( &v157,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v82 = v81;
      uint64_t v157 = sub_6978(v80, v81, &v154);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, &v158);
      swift_bridgeObjectRelease(v82);
      swift_errorRelease(v73);
      swift_errorRelease(v73);
      _os_log_impl( &dword_0,  v75,  v76,  "ShuffleOnDeviceFlow#handleDialogResult Could not properly create dialog %s, silently failing...",  v77,  0xCu);
      swift_arrayDestroy(v78, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1LL, -1LL);
      swift_slowDealloc(v77, -1LL, -1LL);

      uint64_t v83 = (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v131, v69);
    }

    else
    {
      swift_errorRelease(v73);
      swift_errorRelease(v73);

      uint64_t v83 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v72, v69);
    }

    uint64_t v127 = v147;
    static ExecuteResponse.complete()(v83);
    v148(v127);
    swift_errorRelease(v73);
    swift_release(v65);
    return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v127, v150);
  }

  else
  {
    uint64_t v84 = *(int *)(v25 + 48);
    uint64_t v85 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v131 = *(char **)(v85 - 8);
    id v132 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v131 + 4);
    v132(v30, v33, v85);
    uint64_t v86 = *(void **)((char *)v33 + v84);
    *(void *)&v30[v84] = v86;
    uint64_t v87 = v134;
    uint64_t v88 = v137;
    (*(void (**)(char *, void, uint64_t))(v134 + 104))( v24,  enum case for AdditionalMetricsDescription.ModuleName.sllf(_:),  v137);
    uint64_t v129 = v30;
    uint64_t v89 = v136;
    uint64_t v90 = v138;
    (*(void (**)(char *, void, void *))(v136 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v138);
    id v128 = v86;
    uint64_t v135 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v24,  v22,  v133,  v135,  0LL,  1LL);
    uint64_t v133 = v91;
    (*(void (**)(char *, void *))(v89 + 8))(v22, v90);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v24, v88);
    uint64_t v92 = v141;
    uint64_t v136 = *(void *)(v141
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v137 = *(void *)(v141
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider
                     + 32);
    uint64_t v138 = sub_6EA8( (void *)(v141 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider),  v136);
    uint64_t v93 = enum case for ActivityType.completed(_:);
    uint64_t v94 = type metadata accessor for ActivityType(0LL);
    uint64_t v95 = *(void *)(v94 - 8);
    uint64_t v96 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 104))(v140, v93, v94);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v96, 0LL, 1LL, v94);
    uint64_t v97 = *(int *)(v25 + 48);
    id v98 = v131;
    uint64_t v99 = (uint64_t)v129;
    (*((void (**)(char *, char *, uint64_t))v131 + 2))(v28, v129, v85);
    uint64_t v100 = v139;
    swift_retain(v139);
    id v101 = v128;

    *(void *)&v28[v97] = v101;
    uint64_t v102 = (uint64_t)v142;
    v132(v142, (uint64_t *)v28, v85);
    (*((void (**)(uint64_t, void, uint64_t, uint64_t))v98 + 7))(v102, 0LL, 1LL, v85);
    uint64_t v103 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v104 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v105 = *(void *)(v104 - 8);
    uint64_t v106 = (uint64_t)v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 104))(v143, v103, v104);
    uint64_t v107 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v106, 0LL, 1LL, v104);
    uint64_t v108 = v144;
    uint64_t v109 = INPlayMediaIntent.firstMediaItemType()(v107);
    uint64_t v110 = v133;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v100,  v108,  v96,  v102,  v106,  v135,  v133,  v109,  0,  v136,  v137);
    swift_release(v100);
    swift_bridgeObjectRelease(v110);
    sub_1F6CC(v106, &qword_2845A0);
    sub_1F6CC(v102, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v96, &qword_2845A8);
    os_log_type_t v111 = (void *)dispatch thunk of ViewFactory.makeCompletionView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v99,  _swiftEmptyArrayStorage,  0LL,  1LL);
    uint64_t v112 = *(void *)(v92 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_aceServiceInvoker + 24);
    uint64_t v113 = *(void *)(v92 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_aceServiceInvoker + 32);
    sub_6EA8((void *)(v92 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_aceServiceInvoker), v112);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v111, v112, v113);
    uint64_t v114 = v100;
    uint64_t v115 = v99;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v116 = v145;
    uint64_t v117 = sub_6960(v145, (uint64_t)qword_2969C8);
    uint64_t v118 = v151;
    uint64_t v119 = v130;
    uint64_t v120 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v151 + 16))(v130, v117, v116);
    uint64_t v121 = (os_log_s *)Logger.logObject.getter(v120);
    os_log_type_t v122 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v121, v122))
    {
      uint64_t v123 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v123 = 0;
      _os_log_impl( &dword_0,  v121,  v122,  "ShuffleOnDeviceFlow#handleDialogResult Dialog successfully generated, responding and exiting...",  v123,  2u);
      swift_slowDealloc(v123, -1LL, -1LL);
    }

    uint64_t v124 = (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v119, v116);
    uint64_t v125 = v147;
    static ExecuteResponse.complete()(v124);
    v148(v125);
    swift_release(v114);

    (*(void (**)(char *, uint64_t))(v149 + 8))(v125, v150);
    return sub_1F6CC(v115, &qword_289340);
  }

uint64_t sub_DC254()
{
  return v0;
}

uint64_t sub_DC320()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_DC344()
{
  return type metadata accessor for ShuffleOnDeviceFlow(0LL);
}

uint64_t type metadata accessor for ShuffleOnDeviceFlow(uint64_t a1)
{
  uint64_t result = qword_2885C8;
  if (!qword_2885C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShuffleOnDeviceFlow);
  }
  return result;
}

void sub_DC388(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "(";
    v4[2] = "(";
    void v4[3] = "(";
    void v4[4] = "(";
    void v4[5] = "(";
    v4[6] = "(";
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[9] = "(";
    v4[10] = "(";
    swift_updateClassMetadata2(a1, 256LL, 11LL, v4, a1 + 80);
  }

uint64_t sub_DC41C(uint64_t a1)
{
  return sub_D8250(a1) & 1;
}

uint64_t sub_DC440(uint64_t (**a1)(char *, uint64_t), uint64_t a2)
{
  return sub_D8C0C(a1, a2);
}

uint64_t sub_DC460(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ShuffleOnDeviceFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_DC488()
{
  uint64_t v1 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (void *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v0 + v4, v7);
  }

  unint64_t v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease(*(void *)(v0 + v8 + 8));
  swift_release(*(void *)(v0 + v9));

  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v3 | 7);
}

uint64_t sub_DC588(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_6C5C((uint64_t *)&unk_286BB0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_DB594( a1,  a2,  (void (*)(char *, uint64_t *, uint64_t))(v2 + v6),  *(void *)(v2 + v7),  *(void *)(v2 + v7 + 8),  *(void *)(v2 + v8),  *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void (**)(char *))(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_DC62C(uint64_t a1)
{
  return sub_DC6C4(a1, 0xD000000000000011LL, 0x8000000000220110LL);
}

uint64_t sub_DC64C(uint64_t a1)
{
  return sub_DC6C4(a1, 0xD000000000000015LL, 0x8000000000220130LL);
}

uint64_t sub_DC66C()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_DC6A0(uint64_t a1)
{
  return sub_DC6C4(a1, 0x656B616570536F6ELL, 0xEE00646E756F4672LL);
}

uint64_t sub_DC6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB2D8(a1, *(void **)(v3 + 24), a2, a3, *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_DC6F4()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  sub_6C3C((void *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 48, v5);
}

uint64_t sub_DC7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = *(void *)(type metadata accessor for Input(0LL) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_D99FC( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(void *)(v7 + 16),  *(void **)(v7 + 24),  v7 + v16,  *(void *)(v7 + v17),  *(void *)(v7 + v17 + 8),  (void *)(v7 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_DC864( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v158 = a6;
  uint64_t v159 = a5;
  uint64_t v157 = a4;
  uint64_t v153 = a3;
  id v167 = a2;
  uint64_t v151 = type metadata accessor for Parse(0LL);
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v166 = (uint64_t)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = type metadata accessor for Input(0LL);
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v152 = v12;
  uint64_t v154 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v142 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v146 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v135 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = sub_6C5C(&qword_284DA0);
  __chkstk_darwin(v138);
  uint64_t v141 = (uint64_t)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v163 = type metadata accessor for CommonAudio.Reference(0LL);
  __int128 v165 = *(void **)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v137 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v161 = sub_6C5C(&qword_288710);
  __chkstk_darwin(v161);
  uint64_t v162 = (uint64_t)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_284DC8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v136 = (uint64_t)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v139 = (char *)&v131 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v140 = (char *)&v131 - v23;
  __chkstk_darwin(v22);
  uint64_t v144 = (char *)&v131 - v24;
  uint64_t v143 = sub_6C5C(&qword_284DB8);
  uint64_t v25 = __chkstk_darwin(v143);
  uint64_t v145 = (uint64_t)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v164 = (uint64_t)&v131 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v131 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v131 - v32;
  uint64_t v34 = type metadata accessor for Logger(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v149 = (char *)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v131 - v38;
  v175[3] = a7;
  v175[4] = a8;
  uint64_t v168 = a8;
  uint64_t v40 = sub_10974(v175);
  uint64_t v41 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16LL);
  uint64_t v160 = v40;
  uint64_t v42 = a7;
  v41(v40, a1, a7);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v43 = sub_6960(v34, (uint64_t)qword_2969C8);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v147 = v43;
  os_log_type_t v148 = v44;
  ((void (*)(char *))v44)(v39);
  sub_157C4((uint64_t)v175, (uint64_t)&v173);
  uint64_t v45 = sub_157C4((uint64_t)v175, (uint64_t)&v171);
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc(22LL, -1LL);
    uint64_t v131 = v17;
    uint64_t v49 = v48;
    uint64_t v132 = swift_slowAlloc(64LL, -1LL);
    uint64_t v170 = v132;
    *(_DWORD *)uint64_t v49 = 136315394;
    uint64_t v134 = v31;
    uint64_t v50 = v168;
    uint64_t v133 = v35;
    sub_6EA8(&v173, v174);
    dispatch thunk of AudioIntent.reference.getter(v42, v50);
    uint64_t v51 = String.init<A>(describing:)(v33, v143);
    unint64_t v53 = v52;
    uint64_t v169 = sub_6978(v51, v52, &v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    swift_bridgeObjectRelease(v53);
    sub_6C3C(&v173);
    *(_WORD *)(v49 + sub_6C3C(v0 + 12) = 2080;
    sub_6EA8(&v171, v172);
    uint64_t v143 = v34;
    uint64_t v54 = v144;
    uint64_t v55 = v50;
    uint64_t v31 = v134;
    dispatch thunk of AudioIntent.mediaType.getter(v42, v55);
    uint64_t v56 = String.init<A>(describing:)(v54, v131);
    unint64_t v58 = v57;
    uint64_t v169 = sub_6978(v56, v57, &v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, &v170);
    swift_bridgeObjectRelease(v58);
    sub_6C3C(&v171);
    _os_log_impl(&dword_0, v46, v47, "ShuffleOnDeviceFlow#execute reference: %s mediaType: %s", (uint8_t *)v49, 0x16u);
    uint64_t v59 = v132;
    swift_arrayDestroy(v132, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);

    uint64_t v60 = *(void (**)(char *, uint64_t))(v133 + 8);
    uint64_t v61 = v143;
    v60(v39, v143);
  }

  else
  {
    sub_6C3C(&v173);
    sub_6C3C(&v171);

    uint64_t v60 = *(void (**)(char *, uint64_t))(v35 + 8);
    v60(v39, v34);
    uint64_t v61 = v34;
  }

  dispatch thunk of AudioIntent.reference.getter(v42, v168);
  uint64_t v62 = v165;
  uint64_t v63 = v164;
  uint64_t v64 = v163;
  ((void (*)(uint64_t, void, uint64_t))v165[13])( v164,  enum case for CommonAudio.Reference.definite(_:),  v163);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v62[7])(v63, 0LL, 1LL, v64);
  uint64_t v65 = v162;
  uint64_t v66 = v162 + *(int *)(v161 + 48);
  sub_FF10((uint64_t)v31, v162, &qword_284DB8);
  sub_FF10(v63, v66, &qword_284DB8);
  uint64_t v67 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v62[6];
  if (v67(v65, 1LL, v64) == 1)
  {
    sub_1F6CC(v63, &qword_284DB8);
    sub_1F6CC((uint64_t)v31, &qword_284DB8);
    if (v67(v66, 1LL, v64) == 1)
    {
      sub_1F6CC(v65, &qword_284DB8);
      sub_157C4((uint64_t)v175, (uint64_t)&v173);
      goto LABEL_13;
    }

    goto LABEL_11;
  }

  uint64_t v68 = v145;
  sub_FF10(v65, v145, &qword_284DB8);
  if (v67(v66, 1LL, v64) == 1)
  {
    sub_1F6CC(v63, &qword_284DB8);
    sub_1F6CC((uint64_t)v31, &qword_284DB8);
    ((void (*)(uint64_t, uint64_t))v165[1])(v68, v64);
LABEL_11:
    sub_1F6CC(v65, &qword_288710);
    sub_157C4((uint64_t)v175, (uint64_t)&v173);
LABEL_19:
    sub_6C3C(&v173);
    goto LABEL_20;
  }

  uint64_t v69 = v165;
  uint64_t v70 = v60;
  uint64_t v71 = v61;
  uint64_t v72 = v137;
  ((void (*)(char *, uint64_t, uint64_t))v165[4])(v137, v66, v64);
  uint64_t v73 = sub_10430( &qword_288718,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Reference,  (uint64_t)&protocol conformance descriptor for CommonAudio.Reference);
  LODWORD(v161) = dispatch thunk of static Equatable.== infix(_:_:)(v68, v72, v64, v73);
  uint64_t v74 = (void (*)(char *, uint64_t))v69[1];
  uint64_t v75 = v72;
  uint64_t v61 = v71;
  uint64_t v60 = v70;
  v74(v75, v64);
  sub_1F6CC(v164, &qword_284DB8);
  sub_1F6CC((uint64_t)v31, &qword_284DB8);
  v74((char *)v68, v64);
  sub_1F6CC(v65, &qword_284DB8);
  sub_157C4((uint64_t)v175, (uint64_t)&v173);
  if ((v161 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  sub_6EA8(&v173, v174);
  uint64_t v76 = v42;
  uint64_t v77 = (uint64_t)v140;
  dispatch thunk of AudioIntent.mediaType.getter(v76, v168);
  uint64_t v78 = v146;
  uint64_t v79 = (uint64_t)v139;
  uint64_t v80 = v142;
  (*(void (**)(char *, void, uint64_t))(v146 + 104))( v139,  enum case for CommonAudio.MediaType.album(_:),  v142);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v79, 0LL, 1LL, v80);
  uint64_t v81 = v141;
  uint64_t v82 = v141 + *(int *)(v138 + 48);
  sub_FF10(v77, v141, &qword_284DC8);
  sub_FF10(v79, v82, &qword_284DC8);
  uint64_t v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  if (v83(v81, 1LL, v80) == 1)
  {
    sub_1F6CC(v79, &qword_284DC8);
    sub_1F6CC(v77, &qword_284DC8);
    if (v83(v82, 1LL, v80) == 1)
    {
      sub_1F6CC(v81, &qword_284DC8);
      sub_6C3C(&v173);
LABEL_25:
      uint64_t v117 = v158;
      uint64_t v118 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider + 24);
      uint64_t v119 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider + 32);
      uint64_t v168 = (uint64_t)sub_6EA8( (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider),  v118);
      sub_157C4((uint64_t)v175, (uint64_t)&v171);
      uint64_t v120 = v155;
      uint64_t v121 = v154;
      uint64_t v122 = v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v154, v153, v156);
      uint64_t v123 = *(unsigned __int8 *)(v120 + 80);
      uint64_t v124 = (v123 + 72) & ~v123;
      unint64_t v125 = (v152 + v124 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v126 = swift_allocObject(&unk_26ED20, v125 + 16, v123 | 7);
      sub_FF54(&v171, v126 + 16);
      id v127 = v167;
      *(void *)(v126 + 56) = v167;
      *(void *)(v126 + 64) = v117;
      (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v126 + v124, v121, v122);
      id v128 = (void *)(v126 + v125);
      uint64_t v129 = v159;
      *id v128 = v157;
      v128[1] = v129;
      id v130 = v127;
      swift_retain(v117);
      swift_retain(v129);
      dispatch thunk of NowPlayingProviding.item(completion:)(sub_DD818, v126, v118, v119);
      swift_release(v126);
      return sub_6C3C(v175);
    }

    goto LABEL_18;
  }

  uint64_t v84 = v136;
  sub_FF10(v81, v136, &qword_284DC8);
  if (v83(v82, 1LL, v80) == 1)
  {
    sub_1F6CC(v79, &qword_284DC8);
    sub_1F6CC(v77, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v84, v80);
LABEL_18:
    sub_1F6CC(v81, &qword_284DA0);
    goto LABEL_19;
  }

  uint64_t v113 = v146;
  uint64_t v114 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v146 + 32))(v135, v82, v80);
  uint64_t v115 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  LODWORD(v16sub_6C3C(v0 + 8) = dispatch thunk of static Equatable.== infix(_:_:)(v84, v114, v80, v115);
  uint64_t v116 = *(void (**)(char *, uint64_t))(v113 + 8);
  v116(v114, v80);
  sub_1F6CC(v79, &qword_284DC8);
  sub_1F6CC(v77, &qword_284DC8);
  v116((char *)v84, v80);
  sub_1F6CC(v81, &qword_284DC8);
  sub_6C3C(&v173);
  if ((v168 & 1) != 0) {
    goto LABEL_25;
  }
LABEL_20:
  uint64_t v85 = v149;
  uint64_t v86 = v148(v149, v147, v61);
  uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
  os_log_type_t v88 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v89 = 0;
    _os_log_impl(&dword_0, v87, v88, "ShuffleOnDeviceFlow#execute resolving routes for 3p app", v89, 2u);
    swift_slowDealloc(v89, -1LL, -1LL);
  }

  uint64_t v90 = ((uint64_t (*)(char *, uint64_t))v60)(v85, v61);
  uint64_t v91 = v153;
  Input.parse.getter(v90);
  uint64_t v92 = v158;
  uint64_t v93 = (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_deviceResolutionProvider);
  uint64_t v94 = (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_encryptionProvider);
  uint64_t v95 = (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_sharedContextProvider);
  uint64_t v96 = v155;
  uint64_t v97 = v154;
  uint64_t v98 = v156;
  (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v154, v91, v156);
  uint64_t v99 = *(unsigned __int8 *)(v96 + 80);
  uint64_t v100 = (v99 + 48) & ~v99;
  id v101 = (char *)swift_allocObject(&unk_26ECF8, v100 + v152, v99 | 7);
  id v102 = v167;
  *((void *)v101 + sub_6C3C(v0 + 2) = v92;
  *((void *)v101 + sub_6C3C(v0 + 3) = v102;
  uint64_t v103 = v159;
  *((void *)v101 + 4) = v157;
  *((void *)v101 + 5) = v103;
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(&v101[v100], v97, v98);
  uint64_t v104 = v93[3];
  uint64_t v168 = v93[4];
  __int128 v165 = sub_6EA8(v93, v104);
  uint64_t v105 = v94[3];
  uint64_t v164 = v94[4];
  uint64_t v106 = sub_6EA8(v94, v105);
  uint64_t v107 = v95[3];
  uint64_t v108 = v95[4];
  uint64_t v109 = sub_6EA8(v95, v107);
  id v110 = v167;
  swift_retain(v92);
  swift_retain(v103);
  uint64_t v111 = v166;
  sub_18EDB8( v166,  (uint64_t)v165,  (uint64_t)v106,  (uint64_t)v109,  (void (*)(void))sub_DD728,  (uint64_t)v101,  v110,  v105,  v104,  v107,  v164,  v168,  v108);
  swift_release(v101);
  (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v111, v151);
  return sub_6C3C(v175);
}

unint64_t sub_DD72C()
{
  unint64_t result = qword_288708;
  if (!qword_288708)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for RouteResolutionError,  &type metadata for RouteResolutionError);
    atomic_store(result, (unint64_t *)&qword_288708);
  }

  return result;
}

uint64_t sub_DD774()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_6C3C((void *)(v0 + 16));

  swift_release(*(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_DD818(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Input(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_D9FB8(a1, (void *)(v1 + 16), *(void **)(v1 + 56), *(void *)(v1 + 64), v1 + v4, *v5, v5[1]);
}

uint64_t sub_DD880()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));

  swift_release(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_DD904(__int16 a1)
{
  __int16 v2 = a1 & 0x1FF;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Input(0LL) - 8) + 80LL);
  return sub_DA918( v2,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void (**)(_BYTE *))(v1 + 32),  *(void *)(v1 + 40),  v1 + ((v3 + 48) & ~v3));
}

uint64_t sub_DD950(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_6C5C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_DD994(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioNLv3Intent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t static AppSelectionContext.saveRecord(app:intent:intentResponseCode:requestCancelled:pseSignalsStitcher:)( uint64_t a1, void *a2, uint64_t a3, char a4, int a5, uint64_t a6)
{
  return sub_DF2AC(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t sub_DD9D8( uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(char *, char *, uint64_t), uint64_t a7, uint64_t a8, uint64_t (*a9)(char *, char *, uint64_t), unsigned __int8 a10)
{
  uint64_t v163 = a8;
  uint64_t v179 = a6;
  uint64_t v169 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  id v167 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v166 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AppSelectionSignals.RawSignalResult(0LL);
  uint64_t v181 = *(void *)(v18 - 8);
  uint64_t v182 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v161 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v160 = v20;
  __chkstk_darwin(v19);
  uint64_t v177 = (char *)&v154 - v21;
  uint64_t v22 = sub_6C5C(&qword_285728);
  __chkstk_darwin(v22);
  uint64_t v157 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AppSelectionReport(0LL);
  uint64_t v174 = *(void *)(v24 - 8);
  uint64_t v175 = v24;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v154 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C(&qword_287FA8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v176 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v28);
  uint64_t v159 = (char *)&v154 - v30;
  uint64_t v31 = sub_6C5C(&qword_285470);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v173 = (char *)&v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  uint64_t v158 = (char *)&v154 - v34;
  uint64_t v35 = type metadata accessor for Logger(0LL);
  uint64_t v184 = *(void *)(v35 - 8);
  uint64_t v185 = v35;
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v170 = (char *)&v154 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v156 = (char *)&v154 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  unint64_t v180 = (char *)&v154 - v41;
  __chkstk_darwin(v40);
  uint64_t v172 = (char *)&v154 - v42;
  uint64_t v43 = type metadata accessor for AcceptedSpeakerIdConfidence(0LL);
  uint64_t v44 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v154 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v162 = a7;
  uint64_t v155 = swift_projectBox(a7);
  if (qword_283980 != -1) {
    swift_once(&qword_283980, sub_1E17C4);
  }
  int v47 = a2 & 1;
  uint64_t v48 = a1;
  __int128 v171 = (void *)a3;
  uint64_t v178 = a4;
  sub_1E1850(a1, v47, a3, a4);
  uint64_t v183 = a5;
  if (a5)
  {
    id aBlock = a5;
    (*(void (**)(char *, void, uint64_t))(v44 + 104))( v46,  enum case for AcceptedSpeakerIdConfidence.executeOnCompanionConfidence(_:),  v43);
    uint64_t v49 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    id v50 = a5;
    uint64_t v51 = PrivateMediaIntentDataProviding.getSharedUserID(speakerConfidence:)( v46,  v49,  &protocol witness table for INPlayMediaIntent);
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  }

  else
  {
    uint64_t v51 = 0LL;
    uint64_t v53 = 0LL;
  }

  uint64_t v54 = v185;
  type metadata accessor for ResolvedAppHistoryProvider(0LL);
  uint64_t v55 = static ResolvedAppHistoryProvider.shared.getter();
  uint64_t v56 = v55;
  if (v179)
  {
    uint64_t v57 = App.appIdentifier.getter(v55);
    uint64_t v59 = v58;
    if (v183)
    {
LABEL_8:
      Swift::Bool v60 = INPlayMediaIntent.getAppInferred()();
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v57 = 0LL;
    uint64_t v59 = 0LL;
    if (v183) {
      goto LABEL_8;
    }
  }

  Swift::Bool v60 = 1;
LABEL_11:
  dispatch thunk of ResolvedAppHistoryProvider.incrementHistory(for:sharedUserId:appInferred:completion:)( v57,  v59,  v51,  v53,  v60,  WHAError.rawValue.getter,  0LL);
  swift_release(v56);
  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v53);
  if (v48)
  {
    uint64_t v61 = v48;
    uint64_t v62 = qword_283888;
    swift_retain(v48);
    if (v62 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v154 = v26;
    uint64_t v63 = sub_6960(v54, (uint64_t)qword_2969C8);
    uint64_t v64 = *(uint64_t (**)(char *, char *, uint64_t))(v184 + 16);
    uint64_t v172 = (char *)v63;
    uint64_t v179 = v64;
    ((void (*)(char *))v64)(v180);
    uint64_t v65 = swift_retain(v48);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v67 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = swift_slowAlloc(14LL, -1LL);
      *(_DWORD *)uint64_t v68 = 67109376;
      uint64_t v69 = (uint64_t)v158;
      dispatch thunk of AppSelectionContext.report.getter(v68);
      uint64_t v70 = v174;
      uint64_t v71 = v175;
      BOOL v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v69, 1LL, v175) != 1;
      sub_1F6CC(v69, &qword_285470);
      LODWORD(aBlock) = v72;
      uint64_t v73 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4);
      *(_WORD *)(v68 + sub_6C3C(v0 + 8) = 1024;
      uint64_t v74 = (uint64_t)v159;
      dispatch thunk of AppSelectionContext.rawSignalResult.getter(v73);
      BOOL v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 48))(v74, 1LL, v182) != 1;
      sub_1F6CC(v74, &qword_287FA8);
      LODWORD(aBlock) = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4);
      swift_release(v61);
      _os_log_impl( &dword_0,  v66,  v67,  "AppSelectionContext#saveRecord context present, with report?:%{BOOL}d and rawSignalResult?:%{BOOL}d",  (uint8_t *)v68,  0xEu);
      swift_slowDealloc(v68, -1LL, -1LL);

      uint64_t v76 = (uint64_t)v176;
    }

    else
    {

      swift_release(v48);
      uint64_t v71 = v175;
      uint64_t v76 = (uint64_t)v176;
      uint64_t v70 = v174;
    }

    uint64_t v95 = (uint64_t)v173;
    uint64_t v96 = v185;
    uint64_t v97 = *(uint64_t (**)(char *, uint64_t))(v184 + 8);
    uint64_t v98 = v97(v180, v185);
    dispatch thunk of AppSelectionContext.report.getter(v98);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v95, 1LL, v71))
    {
      uint64_t v99 = sub_1F6CC(v95, &qword_285470);
    }

    else
    {
      uint64_t v100 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v154, v95, v71);
      uint64_t v101 = sub_1F6CC(v95, &qword_285470);
      char v102 = AppSelectionReport.appSelectionUsed.getter(v101);
      uint64_t v99 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v100, v71);
      if ((v102 & 1) != 0)
      {
        uint64_t v103 = v156;
        uint64_t v104 = v179(v156, v172, v96);
        uint64_t v105 = (os_log_s *)Logger.logObject.getter(v104);
        os_log_type_t v106 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v105, v106))
        {
          uint64_t v107 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v107 = 0;
          _os_log_impl(&dword_0, v105, v106, "AppSelectionContext#saveRecord setting appSelectionLastUsed", v107, 2u);
          swift_slowDealloc(v107, -1LL, -1LL);
        }

        uint64_t v108 = v97(v103, v96);
        uint64_t v109 = v157;
        Date.init()(v108);
        uint64_t v110 = type metadata accessor for Date(0LL);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56LL))(v109, 0LL, 1LL, v110);
        swift_beginAccess(v155, &aBlock, 33LL, 0LL);
        FeatureFlagProvider.appSelectionLastUsed.setter(v109);
        uint64_t v99 = swift_endAccess(&aBlock);
      }
    }

    dispatch thunk of AppSelectionContext.rawSignalResult.getter(v99);
    uint64_t v112 = v181;
    uint64_t v111 = v182;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48))(v76, 1LL, v182) == 1)
    {
      sub_1F6CC(v76, &qword_287FA8);
      uint64_t v113 = v170;
      v179(v170, v172, v96);
      uint64_t v114 = v178;
      uint64_t v115 = swift_bridgeObjectRetain_n(v178, 2LL);
      uint64_t v116 = (os_log_s *)Logger.logObject.getter(v115);
      os_log_type_t v117 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v116, v117))
      {
        uint64_t v118 = swift_slowAlloc(22LL, -1LL);
        uint64_t v119 = (void *)swift_slowAlloc(64LL, -1LL);
        uint64_t v189 = v119;
        *(_DWORD *)uint64_t v118 = 136446466;
        uint64_t v120 = static Insights.frameKit.getter();
        unint64_t v122 = v121;
        id aBlock = (id)sub_6978(v120, v121, (uint64_t *)&v189);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v187);
        swift_bridgeObjectRelease(v122);
        *(_WORD *)(v118 + sub_6C3C(v0 + 12) = 2082;
        id aBlock = v171;
        v187[0] = v114;
        swift_bridgeObjectRetain(v114);
        uint64_t v123 = sub_6C5C(&qword_284600);
        uint64_t v124 = String.init<A>(describing:)(&aBlock, v123);
        unint64_t v126 = v125;
        id aBlock = (id)sub_6978(v124, v125, (uint64_t *)&v189);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v187);
        swift_bridgeObjectRelease_n(v114, 2LL);
        swift_bridgeObjectRelease(v126);
        _os_log_impl( &dword_0,  v116,  v117,  "AppSelectionContext#saveRecord %{public}s no rawSignalResult present for refId: %{public}s",  (uint8_t *)v118,  0x16u);
        swift_arrayDestroy(v119, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v119, -1LL, -1LL);
        swift_slowDealloc(v118, -1LL, -1LL);
        swift_release(v61);

        id v127 = v170;
        uint64_t v128 = v185;
      }

      else
      {

        swift_bridgeObjectRelease_n(v114, 2LL);
        swift_release(v61);
        id v127 = v113;
        uint64_t v128 = v96;
      }

      return v97(v127, v128);
    }

    else
    {
      LODWORD(v180) = a10;
      uint64_t v179 = a9;
      uint64_t v129 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 32);
      id v130 = v177;
      uint64_t v131 = v129(v177, v76, v111);
      uint64_t v178 = dispatch thunk of AppSelectionContext.intent.getter(v131);
      uint64_t v185 = static DispatchQueues.analytics.getter(v178);
      uint64_t v132 = v161;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v161, v130, v111);
      uint64_t v133 = *(unsigned __int8 *)(v112 + 80);
      uint64_t v134 = (v133 + 24) & ~v133;
      unint64_t v135 = (v160 + v134 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v184 = v61;
      unint64_t v136 = (v135 + 31) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v137 = (v136 + 15) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v138 = swift_allocObject(&unk_26EE28, v137 + 8, v133 | 7);
      uint64_t v139 = v163;
      *(void *)(v138 + swift_weakDestroy(v0 + 16) = v163;
      v129((char *)(v138 + v134), (uint64_t)v132, v111);
      uint64_t v141 = (void *)v178;
      uint64_t v140 = v179;
      *(void *)(v138 + v135) = v178;
      unint64_t v142 = v138 + ((v135 + 15) & 0xFFFFFFFFFFFFFFF8LL);
      *(void *)unint64_t v142 = v140;
      *(_BYTE *)(v142 + sub_6C3C(v0 + 8) = v180 & 1;
      uint64_t v143 = v183;
      *(void *)(v138 + v136) = v183;
      uint64_t v144 = v162;
      *(void *)(v138 + v13sub_6C3C(v0 + 7) = v162;
      v187[3] = sub_DF744;
      uint64_t v188 = v138;
      id aBlock = _NSConcreteStackBlock;
      v187[0] = 1107296256LL;
      v187[1] = sub_6E7C;
      v187[2] = &unk_26EE40;
      uint64_t v145 = _Block_copy(&aBlock);
      id v146 = v141;
      swift_retain(v144);
      id v147 = v143;
      uint64_t v148 = swift_retain(v139);
      uint64_t v149 = v164;
      static DispatchQoS.unspecified.getter(v148);
      uint64_t v189 = _swiftEmptyArrayStorage;
      sub_21A04();
      uint64_t v150 = sub_6C5C(&qword_285480);
      sub_21358();
      uint64_t v151 = v167;
      uint64_t v152 = v169;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v189, v150);
      uint64_t v153 = (void *)v185;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v149, v151, v145);
      _Block_release(v145);
      swift_release(v184);

      (*(void (**)(char *, uint64_t))(v168 + 8))(v151, v152);
      (*(void (**)(char *, uint64_t))(v165 + 8))(v149, v166);
      (*(void (**)(char *, uint64_t))(v181 + 8))(v177, v182);
      return swift_release(v188);
    }
  }

  else
  {
    uint64_t v77 = v178;
    uint64_t v78 = v171;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v79 = sub_6960(v54, (uint64_t)qword_2969C8);
    uint64_t v80 = v184;
    uint64_t v81 = v172;
    (*(void (**)(char *, uint64_t, uint64_t))(v184 + 16))(v172, v79, v54);
    uint64_t v82 = swift_bridgeObjectRetain_n(v77, 2LL);
    uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v84 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = swift_slowAlloc(22LL, -1LL);
      uint64_t v86 = (void *)swift_slowAlloc(64LL, -1LL);
      uint64_t v189 = v86;
      *(_DWORD *)uint64_t v85 = 136446466;
      uint64_t v87 = static Insights.frameKit.getter();
      unint64_t v89 = v88;
      id aBlock = (id)sub_6978(v87, v88, (uint64_t *)&v189);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v187);
      swift_bridgeObjectRelease(v89);
      *(_WORD *)(v85 + sub_6C3C(v0 + 12) = 2082;
      id aBlock = v78;
      v187[0] = v77;
      swift_bridgeObjectRetain(v77);
      uint64_t v90 = sub_6C5C(&qword_284600);
      uint64_t v91 = String.init<A>(describing:)(&aBlock, v90);
      unint64_t v93 = v92;
      id aBlock = (id)sub_6978(v91, v92, (uint64_t *)&v189);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v187);
      swift_bridgeObjectRelease_n(v77, 2LL);
      swift_bridgeObjectRelease(v93);
      _os_log_impl( &dword_0,  v83,  v84,  "AppSelectionContext#saveRecord %{public}s no context present for refId: %{public}s",  (uint8_t *)v85,  0x16u);
      swift_arrayDestroy(v86, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1LL, -1LL);
      swift_slowDealloc(v85, -1LL, -1LL);

      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v172, v54);
    }

    else
    {

      swift_bridgeObjectRelease_n(v77, 2LL);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v81, v54);
    }
  }

uint64_t sub_DE890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject(&unk_26EE78, 48LL, 7LL);
  *(void *)(v13 + swift_weakDestroy(v0 + 16) = a4;
  *(_BYTE *)(v13 + 24) = a5 & 1;
  *(void *)(v13 + 3sub_6C3C(v0 + 2) = a6;
  *(void *)(v13 + 40) = a7;
  id v14 = a6;
  swift_retain(a7);
  dispatch thunk of PSESignalsStitcher.stitch(initialResult:intent:completionHandler:)(a2, a3, sub_DF7E0, v13);
  return swift_release(v13);
}

uint64_t sub_DE930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for AppSelectionSignals.RawSignalResult(0LL);
  uint64_t v103 = *(void *)(v8 - 8);
  uint64_t v104 = v8;
  __chkstk_darwin(v8);
  char v102 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_287FB0);
  __chkstk_darwin(v10);
  os_log_type_t v106 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v108 = v12;
  uint64_t v109 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v107 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v111 = (char *)&v95 - v16;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v114 = *(void **)(v17 - 8);
  uint64_t v115 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v110 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v99 = (char *)&v95 - v21;
  __chkstk_darwin(v20);
  uint64_t v113 = (char *)&v95 - v22;
  uint64_t v98 = sub_6C5C(&qword_288720);
  uint64_t v23 = __chkstk_darwin(v98);
  uint64_t v112 = (uint64_t)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v95 - v25;
  uint64_t v27 = type metadata accessor for Date(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v31 = swift_projectBox(a5);
  Date.init()(v31);
  uint64_t v105 = a1;
  uint64_t v32 = (void *)AppSelectionSignals.RawSignalResult.recordableResult(start:test:)(v30, 0LL);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (a4)
  {
    INPlayMediaIntent.disambiguationReasonResponseResultType.getter(v33);
  }

  else
  {
    uint64_t v34 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v26, 1LL, 1LL, v34);
  }

  uint64_t v35 = v26;
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  uint64_t v119 = (void *)sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v118[0] = (uint64_t)isa;
  uint64_t v37 = (void (*)(uint64_t *, void))dispatch thunk of RecordableResult.info.modify(&v116);
  sub_1CBC04((uint64_t)v118, 0xD000000000000013LL, 0x8000000000220150LL);
  v37(&v116, 0LL);
  uint64_t v38 = swift_beginAccess(v31, &v116, 32LL, 0LL);
  uint64_t v39 = FeatureFlagProvider.appSelectionUsageCounter.getter(v38);
  uint64_t v119 = &type metadata for Int;
  v118[0] = v39;
  swift_endAccess(&v116);
  uint64_t v40 = (void (*)(uint64_t *, void))dispatch thunk of RecordableResult.info.modify(&v116);
  sub_1CBC04((uint64_t)v118, 0xD000000000000010LL, 0x8000000000220170LL);
  v40(&v116, 0LL);
  uint64_t v41 = v113;
  uint64_t v42 = v114;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v43 = sub_6960(v115, (uint64_t)qword_2969C8);
  uint64_t v44 = (uint64_t (*)(char *, uint64_t, uint64_t))v42[2];
  uint64_t v100 = v43;
  uint64_t v101 = v44;
  ((void (*)(char *))v44)(v41);
  uint64_t v45 = v112;
  sub_DF7F0((uint64_t)v26, v112);
  id v46 = v32;
  int v47 = (os_log_s *)Logger.logObject.getter(v46);
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    uint64_t v97 = swift_slowAlloc(96LL, -1LL);
    v118[0] = v97;
    *(_DWORD *)uint64_t v49 = 136446722;
    uint64_t v50 = static Insights.frameKit.getter();
    unint64_t v52 = v51;
    uint64_t v116 = sub_6978(v50, v51, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
    uint64_t v53 = swift_bridgeObjectRelease(v52);
    *(_WORD *)(v49 + sub_6C3C(v0 + 12) = 2080;
    uint64_t v54 = dispatch thunk of RecordableResult.info.getter(v53);
    uint64_t v96 = (char *)&type metadata for Any + 8;
    uint64_t v55 = Dictionary.description.getter( v54,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    unint64_t v57 = v56;
    swift_bridgeObjectRelease(v54);
    uint64_t v58 = v55;
    uint64_t v59 = v115;
    uint64_t v116 = sub_6978(v58, v57, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);

    swift_bridgeObjectRelease(v57);
    *(_WORD *)(v49 + 2sub_6C3C(v0 + 2) = 2080;
    uint64_t v60 = v112;
    uint64_t v61 = Optional.debugDescription.getter(v98);
    unint64_t v63 = v62;
    uint64_t v116 = sub_6978(v61, v62, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
    swift_bridgeObjectRelease(v63);
    sub_1F6CC(v60, &qword_288720);
    _os_log_impl( &dword_0,  v47,  v48,  "AppSelectionContext#saveRecord %{public}s info: %s, resolution result type: %s, recording to SELF...",  (uint8_t *)v49,  0x20u);
    uint64_t v64 = v97;
    swift_arrayDestroy(v97, 3LL, v96);
    swift_slowDealloc(v64, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);

    uint64_t v65 = (void (*)(char *, uint64_t))v114[1];
    v65(v113, v59);
  }

  else
  {

    sub_1F6CC(v45, &qword_288720);
    uint64_t v65 = (void (*)(char *, uint64_t))v42[1];
    v65(v41, v115);
  }

  uint64_t v67 = v108;
  uint64_t v66 = v109;
  uint64_t v69 = v110;
  uint64_t v68 = v111;
  uint64_t v70 = v107;
  type metadata accessor for SelfEmitter(0LL);
  uint64_t v71 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v105, v104);
  uint64_t v72 = SelfEmitter.__allocating_init(rawSignalResult:)(v71);
  uint64_t v73 = (uint64_t)v106;
  dispatch thunk of SelfEmitter.emitTrainingRecord(resolutionResultType:)(v35);
  swift_release(v72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v73, 1LL, v67) == 1)
  {
    sub_1F6CC(v73, &qword_287FB0);
    uint64_t v74 = v99;
    uint64_t v75 = v101(v99, v100, v115);
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl( &dword_0,  v76,  v77,  "AppSelectionContext#saveRecord unexpected failed to save record to SELF, uuid nil",  v78,  2u);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    v65(v74, v115);
    goto LABEL_16;
  }

  uint64_t v114 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v68, v73, v67);
  v101(v69, v100, v115);
  uint64_t v79 = (*(uint64_t (**)(char *, char *, uint64_t))(v66 + 16))(v70, v68, v67);
  uint64_t v80 = (void *)Logger.logObject.getter(v79);
  os_log_type_t v81 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v80, v81))
  {

    unint64_t v93 = *(void (**)(char *, uint64_t))(v66 + 8);
    v93(v70, v67);

    v65(v69, v115);
    v93(v68, v67);
LABEL_16:
    uint64_t v92 = (uint64_t)v35;
    return sub_1F6CC(v92, &qword_288720);
  }

  uint64_t v82 = swift_slowAlloc(22LL, -1LL);
  uint64_t v83 = swift_slowAlloc(64LL, -1LL);
  v118[0] = v83;
  *(_DWORD *)uint64_t v82 = 136446466;
  uint64_t v84 = static Insights.appSelection.getter();
  unint64_t v86 = v85;
  uint64_t v116 = sub_6978(v84, v85, v118);
  uint64_t v113 = v35;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
  uint64_t v87 = swift_bridgeObjectRelease(v86);
  *(_WORD *)(v82 + sub_6C3C(v0 + 12) = 2080;
  uint64_t v88 = UUID.description.getter(v87);
  unint64_t v90 = v89;
  uint64_t v116 = sub_6978(v88, v89, v118);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
  swift_bridgeObjectRelease(v90);
  uint64_t v91 = *(void (**)(char *, uint64_t))(v109 + 8);
  v91(v70, v67);
  _os_log_impl( &dword_0,  (os_log_t)v80,  v81,  "AppSelectionContext#saveRecord %{public}s saved record with UUID: %s",  (uint8_t *)v82,  0x16u);
  swift_arrayDestroy(v83, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v83, -1LL, -1LL);
  swift_slowDealloc(v82, -1LL, -1LL);

  v65(v110, v115);
  v91(v111, v67);
  uint64_t v92 = (uint64_t)v113;
  return sub_1F6CC(v92, &qword_288720);
}

uint64_t sub_DF2AC(uint64_t a1, void *a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  int v42 = a5;
  int v44 = a4;
  uint64_t v43 = a3;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v14 = swift_allocBox(v13);
  uint64_t v16 = v15;
  static FeatureFlagProvider.shared.getter(v14);
  if (a1)
  {
    uint64_t v41 = a2;
    uint64_t v17 = swift_retain(a1);
    uint64_t v18 = App.appIdentifier.getter(v17);
    if (v19)
    {
      unint64_t v20 = v19;
      uint64_t v40 = v18;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v21 = sub_6960(v9, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v21, v9);
      uint64_t v22 = swift_bridgeObjectRetain_n(v20, 2LL);
      uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        v46[0] = swift_slowAlloc(32LL, -1LL);
        void v37[2] = v16;
        uint64_t v25 = v46[0];
        uint64_t v38 = a6;
        uint64_t v26 = v39;
        *(_DWORD *)uint64_t v39 = 136315138;
        v37[1] = v26 + 4;
        swift_bridgeObjectRetain(v20);
        uint64_t v45 = sub_6978(v40, v20, v46);
        a6 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
        swift_bridgeObjectRelease_n(v20, 3LL);
        os_log_type_t v27 = v24;
        uint64_t v28 = v39;
        _os_log_impl(&dword_0, v23, v27, "AppSelectionContext#saveRecord setting lastBundleIdentifier=%s", v39, 0xCu);
        swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1LL, -1LL);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v20, 2LL);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      FeatureFlagProvider.lastBundleIdentifier.setter(v40, v20);
    }

    swift_release(a1);
    a2 = v41;
  }

  static ExecutorProvider.shared.getter(v46);
  uint64_t v29 = v47;
  uint64_t v30 = v48;
  sub_6EA8(v46, v47);
  uint64_t v31 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v29, v30);
  uint64_t v33 = v32;
  sub_6C3C(v46);
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v34 = swift_allocObject(&unk_26EE00, 81LL, 7LL);
  *(_BYTE *)(v34 + swift_weakDestroy(v0 + 16) = v42 & 1;
  *(void *)(v34 + 24) = v31;
  *(void *)(v34 + 3sub_6C3C(v0 + 2) = v33;
  *(void *)(v34 + 40) = a2;
  *(void *)(v34 + 4sub_6C3C(v0 + 8) = a1;
  *(void *)(v34 + 56) = v14;
  *(void *)(v34 + 64) = a6;
  *(void *)(v34 + 7sub_6C3C(v0 + 2) = v43;
  *(_BYTE *)(v34 + 80) = v44 & 1;
  id v35 = a2;
  swift_retain(v14);
  swift_retain(a6);
  swift_retain(a1);
  swift_bridgeObjectRetain(v33);
  static AppSelectionContext.shared(refId:completion:)(v31, v33, sub_DF650, v34);
  swift_release(v14);
  swift_bridgeObjectRelease(v33);
  return swift_release(v34);
}

uint64_t sub_DF60C()
{
  swift_release(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 81LL, 7LL);
}

uint64_t sub_DF650(uint64_t a1)
{
  return sub_DD9D8( a1,  *(_BYTE *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(uint64_t (**)(char *, char *, uint64_t))(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64),  *(uint64_t (**)(char *, char *, uint64_t))(v1 + 72),  *(_BYTE *)(v1 + 80));
}

uint64_t sub_DF68C()
{
  uint64_t v1 = type metadata accessor for AppSelectionSignals.RawSignalResult(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(void *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_DF744()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppSelectionSignals.RawSignalResult(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_DE890( *(void *)(v0 + 16),  v0 + v2,  *(void *)(v0 + v3),  *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(_BYTE *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void **)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((((v3 + 31) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_DF7B4()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_DF7E0(uint64_t a1)
{
  return sub_DE930(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_DF7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_288720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t Determine.UnsupportedValueStrategy.makeUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v16 = *(void *)(v8 + 16);
  uint64_t v17 = (void *)swift_allocObject(&unk_26EEA0, 56LL, 7LL);
  void v17[2] = v9;
  v17[3] = a1;
  v17[4] = a2;
  void v17[5] = a7;
  v17[6] = a8;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, void, uint64_t (*)(), void *))(*(void *)v16 + 200LL);
  swift_retain(v9);
  swift_retain(a1);
  id v19 = a2;
  swift_retain(a8);
  v18(a1, a3, a4, a6, v19, a5, 0LL, sub_E049C, v17);
  return swift_release(v17);
}

uint64_t sub_DF914( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v133 = a5;
  uint64_t v134 = a6;
  uint64_t v131 = a3;
  uint64_t v132 = a4;
  unint64_t v136 = a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  unint64_t v122 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v118 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v115 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v121 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v110 - v13;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v15);
  id v130 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v17);
  uint64_t v129 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v126 = *(v128 - 1);
  __chkstk_darwin(v128);
  unint64_t v125 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v127 = (void *)type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v124 = *(v127 - 1);
  __chkstk_darwin(v127);
  uint64_t v123 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v135 = *(void *)(v24 - 8);
  uint64_t v25 = __chkstk_darwin(v24);
  os_log_type_t v27 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v110 - v28;
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v32);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    unint64_t v122 = v21;
    uint64_t v33 = *v32;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v34 = sub_6960(v24, (uint64_t)qword_2969C8);
    uint64_t v35 = v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v29, v34, v24);
    swift_errorRetain(v33);
    uint64_t v36 = swift_errorRetain(v33);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v39 = 138412290;
      swift_errorRetain(v33);
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError(v33);
      uint64_t v137 = v41;
      uint64_t v35 = v135;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
      *uint64_t v40 = v41;
      swift_errorRelease(v33);
      swift_errorRelease(v33);
      _os_log_impl( &dword_0,  v37,  v38,  "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput dialog provider failed with error: %@",  v39,  0xCu);
      uint64_t v42 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v40, 1LL, v42);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v33);
      swift_errorRelease(v33);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v24);
    uint64_t v85 = v124;
    unint64_t v86 = v123;
    uint64_t v87 = v127;
    (*(void (**)(char *, void, void *))(v124 + 104))( v123,  enum case for AdditionalMetricsDescription.ModuleName.duvs(_:),  v127);
    uint64_t v88 = v126;
    unint64_t v89 = v125;
    unint64_t v90 = v128;
    (*(void (**)(char *, void, void *))(v126 + 104))( v125,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v128);
    swift_getErrorValue(v33, v140, v139);
    uint64_t v91 = Error.localizedDescription.getter(v139[1], v139[2]);
    uint64_t v93 = v92;
    uint64_t v135 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v86,  v89,  v91,  v92,  0LL,  1LL);
    uint64_t v95 = v94;
    __n128 v96 = swift_bridgeObjectRelease(v93);
    (*(void (**)(char *, void *, __n128))(v88 + 8))(v89, v90, v96);
    (*(void (**)(char *, void *))(v85 + 8))(v86, v87);
    uint64_t v98 = v136[6];
    uint64_t v97 = v136[7];
    unint64_t v136 = sub_6EA8(v136 + 3, v98);
    uint64_t v99 = enum case for ActivityType.failed(_:);
    uint64_t v100 = type metadata accessor for ActivityType(0LL);
    uint64_t v101 = *(void *)(v100 - 8);
    uint64_t v102 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 104))(v122, v99, v100);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v102, 0LL, 1LL, v100);
    uint64_t v103 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v104 = (uint64_t)v129;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56LL))(v129, 1LL, 1LL, v103);
    uint64_t v105 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v106 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v107 = *(void *)(v106 - 8);
    uint64_t v108 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v130, v105, v106);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v108, 0LL, 1LL, v106);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v131,  v132,  v102,  v104,  v108,  v135,  v95,  0LL,  1,  v98,  v97);
    swift_bridgeObjectRelease(v95);
    sub_1F6CC(v108, &qword_2845A0);
    sub_1F6CC(v104, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v102, &qword_2845A8);
    uint64_t v137 = v33;
    v138[32] = 1;
    swift_errorRetain(v33);
    v133(&v137);
    swift_errorRelease(v33);
    return sub_1F6CC((uint64_t)&v137, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v43 = *(int *)(v10 + 48);
    uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v116 = *(void *)(v44 - 8);
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 32);
    uint64_t v114 = v44;
    uint64_t v112 = v45;
    ((void (*)(char *, uint64_t *))v45)(v14, v32);
    id v46 = *(void **)((char *)v32 + v43);
    *(void *)&v14[v43] = v46;
    uint64_t v47 = qword_283888;
    id v113 = v46;
    if (v47 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v119 = v10;
    uint64_t v120 = v14;
    uint64_t v48 = sub_6960(v24, (uint64_t)qword_2969C8);
    uint64_t v49 = v135;
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v135 + 16))(v27, v48, v24);
    unint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl( &dword_0,  v51,  v52,  "CommonUnsupportedValueStrategy#makeUnsupportedValueOutput acquired dialog.",  v53,  2u);
      swift_slowDealloc(v53, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v27, v24);
    uint64_t v54 = v124;
    uint64_t v55 = v123;
    unint64_t v56 = v127;
    (*(void (**)(char *, void, void *))(v124 + 104))( v123,  enum case for AdditionalMetricsDescription.ModuleName.duvs(_:),  v127);
    uint64_t v57 = v126;
    uint64_t v58 = v125;
    uint64_t v59 = v128;
    (*(void (**)(char *, void, void *))(v126 + 104))( v125,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v128);
    uint64_t v60 = v117;
    uint64_t v61 = v115;
    uint64_t v62 = v118;
    (*(void (**)(char *, void, uint64_t))(v117 + 104))( v115,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v118);
    uint64_t v135 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v55,  v58,  v61,  0LL,  1LL);
    uint64_t v111 = v63;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
    (*(void (**)(char *, void *))(v57 + 8))(v58, v59);
    (*(void (**)(char *, void *))(v54 + 8))(v55, v56);
    uint64_t v64 = v136[6];
    uint64_t v126 = v136[7];
    id v127 = sub_6EA8(v136 + 3, v64);
    uint64_t v65 = enum case for ActivityType.resolveSlotUnsupported(_:);
    uint64_t v66 = type metadata accessor for ActivityType(0LL);
    uint64_t v67 = *(void *)(v66 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 104))(v21, v65, v66);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v21, 0LL, 1LL, v66);
    uint64_t v68 = *(int *)(v119 + 48);
    uint64_t v128 = *(void **)(v116 + 16);
    uint64_t v69 = v116;
    uint64_t v70 = (uint64_t)v121;
    uint64_t v71 = v114;
    ((void (*)(char *, char *, uint64_t))v128)(v121, v120, v114);
    uint64_t v72 = v113;
    *(void *)(v70 + v6sub_6C3C(v0 + 8) = v113;
    uint64_t v73 = (uint64_t)v21;
    uint64_t v74 = (uint64_t)v129;
    v112(v129, v70, v71);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v74, 0LL, 1LL, v71);
    uint64_t v75 = enum case for SiriKitReliabilityCodes.slotResolutionFailure(_:);
    uint64_t v76 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 104))(v130, v75, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0LL, 1LL, v76);
    uint64_t v109 = v64;
    uint64_t v79 = v132;
    uint64_t v80 = v111;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v131,  v132,  v73,  v74,  v78,  v135,  v111,  0LL,  1,  v109,  v126);
    swift_bridgeObjectRelease(v80);
    sub_1F6CC(v78, &qword_2845A0);
    sub_1F6CC(v74, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v73, &qword_2845A8);
    uint64_t v81 = (uint64_t)v122;
    sub_93370(v79, (uint64_t)v122);
    sub_6EA8(v136 + 8, v136[11]);
    uint64_t v82 = *(int *)(v119 + 48);
    uint64_t v83 = (uint64_t)v120;
    ((void (*)(uint64_t, char *, uint64_t))v128)(v70, v120, v71);
    *(void *)(v70 + v8sub_6C3C(v0 + 2) = v72;
    sub_175200(v70, v72, v81, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v133, v134);

    sub_1F6CC(v81, (uint64_t *)&unk_286C50);
    sub_1F6CC(v83, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v70, v71);
  }

unint64_t sub_E04A0(uint64_t a1)
{
  unint64_t result = sub_E04C4();
  *(void *)(a1 + sub_6C3C(v0 + 8) = result;
  return result;
}

unint64_t sub_E04C4()
{
  unint64_t result = qword_2861E0;
  if (!qword_2861E0)
  {
    uint64_t v1 = type metadata accessor for Determine.UnsupportedValueStrategy();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Determine.UnsupportedValueStrategy, v1);
    atomic_store(result, (unint64_t *)&qword_2861E0);
  }

  return result;
}

uint64_t type metadata accessor for Determine.UnsupportedValueStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin9Determine24UnsupportedValueStrategy);
}

uint64_t sub_E0528( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *v8;
  uint64_t v16 = *(void *)(*v8 + 16);
  uint64_t v17 = (void *)swift_allocObject(&unk_26EEF0, 56LL, 7LL);
  void v17[2] = v15;
  v17[3] = a1;
  v17[4] = a2;
  void v17[5] = a7;
  v17[6] = a8;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, void, uint64_t (*)(), void *))(*(void *)v16 + 200LL);
  swift_retain(v15);
  swift_retain(a1);
  id v19 = a2;
  swift_retain(a8);
  v18(a1, a3, a4, a6, v19, a5, 0LL, sub_E049C, v17);
  return swift_release(v17);
}

uint64_t sub_E0604( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for Determine.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_E0688( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for Determine.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_E0710()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_E074C(uint64_t a1)
{
  return sub_DF914( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void (**)(uint64_t *))(v1 + 40),  *(void *)(v1 + 48));
}

void sub_E075C(uint64_t a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v122 = a4;
  uint64_t v123 = a3;
  id v116 = a2;
  uint64_t v121 = sub_6C5C(&qword_2858F8);
  __chkstk_darwin(v121);
  uint64_t v120 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v117 = (char *)&v105 - v11;
  uint64_t v12 = type metadata accessor for SiriAudioActionButtonSnippetStyle(0LL);
  uint64_t v111 = *(void *)(v12 - 8);
  uint64_t v112 = v12;
  __chkstk_darwin(v12);
  id v113 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SiriAudioActionButtonSnippetRole(0LL);
  uint64_t v109 = *(void *)(v14 - 8);
  uint64_t v110 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = type metadata accessor for SiriAudioActionButtonSnippetModel(0LL);
  uint64_t v115 = *(void *)(v119 - 8);
  uint64_t v17 = __chkstk_darwin(v119);
  uint64_t v107 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v114 = (char *)&v105 - v20;
  __chkstk_darwin(v19);
  uint64_t v118 = (char *)&v105 - v21;
  uint64_t v22 = sub_6C5C(&qword_289340);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  os_log_type_t v27 = (char *)&v105 - v26;
  uint64_t v28 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v30);
  if (swift_getEnumCaseMultiPayload(v30, v28) == 1)
  {
    uint64_t v31 = *v30;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = sub_6960(v6, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v32, v6);
    swift_errorRetain(v31);
    uint64_t v33 = swift_errorRetain(v31);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    uint64_t v35 = v6;
    uint64_t v36 = v7;
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v37))
    {
      uint64_t v38 = swift_slowAlloc(22LL, -1LL);
      uint64_t v39 = swift_slowAlloc(64LL, -1LL);
      v127[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315394;
      swift_getErrorValue(v31, v126, v125);
      uint64_t v119 = v35;
      uint64_t v40 = Error.localizedDescription.getter(v125[1], v125[2]);
      unint64_t v42 = v41;
      uint64_t v124 = sub_6978(v40, v41, v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      swift_bridgeObjectRelease(v42);
      swift_errorRelease(v31);
      uint64_t v43 = swift_errorRelease(v31);
      *(_WORD *)(v38 + sub_6C3C(v0 + 12) = 2082;
      uint64_t v44 = static Insights.responseFramework.getter(v43);
      unint64_t v46 = v45;
      uint64_t v124 = sub_6978(v44, v45, v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      swift_bridgeObjectRelease(v46);
      _os_log_impl( &dword_0,  v34,  v37,  "AddMediaSnippetProvider#handleIntentSnippet error rendering punchout button on tvOS: %s %{public}s",  (uint8_t *)v38,  0x16u);
      swift_arrayDestroy(v39, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v119);
    }

    else
    {
      swift_errorRelease(v31);
      swift_errorRelease(v31);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v35);
    }

    uint64_t v57 = v123;
    uint64_t v58 = v120;
    uint64_t v59 = v121;
    uint64_t v60 = type metadata accessor for SiriAudioSnippets(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56LL))(v58, 1LL, 1LL, v60);
    swift_storeEnumTagMultiPayload(v58, v59, 0LL);
    v57(v58);
    swift_errorRelease(v31);
    uint64_t v61 = &qword_2858F8;
    uint64_t v62 = (uint64_t)v58;
LABEL_28:
    sub_1F6CC(v62, v61);
    return;
  }

  uint64_t v106 = v7;
  uint64_t v47 = *(int *)(v22 + 48);
  uint64_t v48 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v49 = *(void *)(v48 - 8);
  (*(void (**)(char *, uint64_t *, uint64_t))(v49 + 32))(v27, v30, v48);
  uint64_t v50 = *(void **)((char *)v30 + v47);
  uint64_t v108 = v27;
  *(void *)&v27[v47] = v50;
  id v51 = objc_allocWithZone(&OBJC_CLASS___SAAppsLaunchApp);
  id v52 = v50;
  id v53 = [v51 init];
  App.appIdentifier.getter(v53);
  if (v54)
  {
    uint64_t v55 = v54;
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
  }

  else
  {
    NSString v56 = 0LL;
  }

  [v53 setLaunchId:v56];

  uint64_t v63 = *(int *)(v22 + 48);
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v25, v108, v48);
  *(void *)&v25[v63] = v52;
  id v64 = [v52 dialog];

  unint64_t v65 = sub_39E4C();
  uint64_t v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

  if (!((unint64_t)v66 >> 62))
  {
    uint64_t v67 = v118;
LABEL_21:
    swift_bridgeObjectRelease(v66);
    uint64_t v71 = 0LL;
    unint64_t v73 = 0xE000000000000000LL;
    goto LABEL_22;
  }

  if (v66 < 0) {
    uint64_t v74 = v66;
  }
  else {
    uint64_t v74 = v66 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v66);
  uint64_t v75 = _CocoaArrayWrapper.endIndex.getter(v74);
  swift_bridgeObjectRelease(v66);
  uint64_t v67 = v118;
  if (!v75) {
    goto LABEL_21;
  }
LABEL_13:
  if ((v66 & 0xC000000000000001LL) != 0)
  {
    id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v66);
    goto LABEL_16;
  }

  if (*(void *)((char *)&dword_10 + (v66 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v68 = *(id *)(v66 + 32);
LABEL_16:
    uint64_t v69 = v68;
    swift_bridgeObjectRelease(v66);
    id v70 = [v69 fullPrint];

    uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    unint64_t v73 = v72;

LABEL_22:
    (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v48);
    (*(void (**)(char *, void, uint64_t))(v109 + 104))( v16,  enum case for SiriAudioActionButtonSnippetRole.standard(_:),  v110);
    uint64_t v76 = v113;
    (*(void (**)(char *, void, uint64_t))(v111 + 104))( v113,  enum case for SiriAudioActionButtonSnippetStyle.button(_:),  v112);
    id v116 = v53;
    SiriAudioActionButtonSnippetModel.init(buttonLabel:buttonCommand:buttonRole:buttonStyle:)(v71, v73, v116, v16, v76);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v77 = sub_6960(v6, (uint64_t)qword_2969C8);
    uint64_t v78 = v106;
    uint64_t v79 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v117, v77, v6);
    uint64_t v81 = v114;
    uint64_t v80 = v115;
    uint64_t v82 = *(uint64_t (**)(char *, char *, uint64_t))(v115 + 16);
    uint64_t v83 = v119;
    uint64_t v84 = v82(v114, v67, v119);
    uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc(22LL, -1LL);
      id v113 = (char *)swift_slowAlloc(64LL, -1LL);
      v127[0] = (uint64_t)v113;
      *(_DWORD *)uint64_t v87 = 136315394;
      uint64_t v88 = v107;
      v82(v107, v81, v83);
      uint64_t v89 = String.init<A>(describing:)(v88, v83);
      unint64_t v91 = v90;
      uint64_t v124 = sub_6978(v89, v90, v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      swift_bridgeObjectRelease(v91);
      uint64_t v92 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
      uint64_t v93 = v92(v81, v119);
      *(_WORD *)(v87 + sub_6C3C(v0 + 12) = 2082;
      uint64_t v94 = static Insights.responseFramework.getter(v93);
      unint64_t v96 = v95;
      uint64_t v124 = sub_6978(v94, v95, v127);
      uint64_t v67 = v118;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125);
      unint64_t v97 = v96;
      uint64_t v83 = v119;
      swift_bridgeObjectRelease(v97);
      _os_log_impl( &dword_0,  v85,  v86,  "AddMediaSnippetProvider#handleIntentSnippet punchout button: %s %{public}s",  (uint8_t *)v87,  0x16u);
      uint64_t v98 = v113;
      swift_arrayDestroy(v113, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1LL, -1LL);
      swift_slowDealloc(v87, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v106 + 8))(v117, v6);
    }

    else
    {
      uint64_t v92 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
      v92(v81, v83);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v6);
    }

    uint64_t v99 = (void (*)(uint64_t))v123;
    uint64_t v100 = (uint64_t)v120;
    uint64_t v101 = v121;
    v82(v120, v67, v83);
    uint64_t v102 = enum case for SiriAudioSnippets.actionButton(_:);
    uint64_t v103 = type metadata accessor for SiriAudioSnippets(0LL);
    uint64_t v104 = *(void *)(v103 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 104))(v100, v102, v103);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v100, 0LL, 1LL, v103);
    swift_storeEnumTagMultiPayload(v100, v101, 0LL);
    v99(v100);

    sub_1F6CC(v100, &qword_2858F8);
    v92(v67, v83);
    uint64_t v61 = &qword_289340;
    uint64_t v62 = (uint64_t)v108;
    goto LABEL_28;
  }

  __break(1u);
}

uint64_t InternalSignalsManager.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for AddMediaSnippetProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin23AddMediaSnippetProvider);
}

uint64_t sub_E1188(void *a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_6C5C(&qword_2858F8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v48 - v17;
  if ((static SiriAudioEnvironment.isHomePod.getter(v16) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v19 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v19, v11);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.info.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v48 = v8;
      uint64_t v23 = swift_slowAlloc(12LL, -1LL);
      uint64_t v50 = a2;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      uint64_t v49 = v12;
      uint64_t v26 = v25;
      uint64_t v53 = v25;
      uint64_t v51 = a3;
      *(_DWORD *)uint64_t v24 = 136446210;
      uint64_t v27 = static Insights.responseFramework.getter(v25);
      unint64_t v29 = v28;
      uint64_t v52 = sub_6978(v27, v28, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
      unint64_t v30 = v29;
      uint64_t v8 = v48;
      swift_bridgeObjectRelease(v30);
      _os_log_impl( &dword_0,  v21,  v22,  "AddMediaSnippetProvider#handleIntentSnippet won't return snippets for HomePod %{public}s",  v24,  0xCu);
      swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      uint64_t v31 = v24;
      a2 = v50;
      swift_slowDealloc(v31, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v11);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }

    uint64_t v45 = type metadata accessor for SiriAudioSnippets(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v10, 1LL, 1LL, v45);
    swift_storeEnumTagMultiPayload(v10, v8, 0LL);
    a2(v10);
    return sub_1F6CC((uint64_t)v10, &qword_2858F8);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, v32, v11);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.info.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v49 = v12;
      uint64_t v36 = swift_slowAlloc(12LL, -1LL);
      uint64_t v51 = a3;
      os_log_type_t v37 = (uint8_t *)v36;
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      uint64_t v48 = v4;
      uint64_t v39 = v38;
      uint64_t v53 = v38;
      *(_DWORD *)os_log_type_t v37 = 136446210;
      uint64_t v50 = a2;
      uint64_t v40 = static Insights.responseFramework.getter(v38);
      unint64_t v42 = v41;
      uint64_t v52 = sub_6978(v40, v41, &v53);
      a2 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
      swift_bridgeObjectRelease(v42);
      _os_log_impl( &dword_0,  v34,  v35,  "AddMediaSnippetProvider#handleIntentSnippet showing punchout button on tvOS %{public}s",  v37,  0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v43 = v39;
      uint64_t v4 = v48;
      swift_slowDealloc(v43, -1LL, -1LL);
      uint64_t v44 = v37;
      a3 = v51;
      swift_slowDealloc(v44, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v11);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    }

    uint64_t v47 = *(uint64_t **)(v4 + 16);
    swift_retain(a1);
    swift_retain(a3);
    sub_1F3EC8((uint64_t)a1, v47, a1, a2, a3);
    swift_release(a1);
    return swift_release(a3);
  }

uint64_t sub_E15E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v37 - v8;
  uint64_t v9 = type metadata accessor for Input(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v18 = v43(v12, a1, v9);
  uint64_t v42 = v14;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  uint64_t v20 = v10;
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v21))
  {
    uint64_t v38 = v20;
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v39 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v40 = v7;
    uint64_t v25 = v24;
    v46[0] = v24;
    uint64_t v41 = v2;
    *(_DWORD *)uint64_t v23 = 136315138;
    os_log_type_t v37 = v23 + 4;
    uint64_t v26 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v9, v26);
    unint64_t v29 = v28;
    uint64_t v45 = sub_6978(v27, v28, v46);
    uint64_t v2 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
    __n128 v30 = swift_bridgeObjectRelease(v29);
    uint64_t v20 = v38;
    (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v12, v9, v30);
    _os_log_impl(&dword_0, v19, v21, "ConfirmInterruptionFlow#on Setting input: %s...", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v31 = v25;
    uint64_t v7 = v40;
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v23;
    a1 = v39;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v9);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v13);
  uint64_t v33 = v20;
  uint64_t v34 = (uint64_t)v44;
  v43(v44, a1, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0LL, 1LL, v9);
  sub_88CFC(v34, (uint64_t)v7);
  uint64_t v35 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_input;
  swift_beginAccess(v35, v46, 33LL, 0LL);
  sub_1B3B0((uint64_t)v7, v35);
  swift_endAccess(v46);
  return 1LL;
}

uint64_t sub_E1950(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v44 = a4;
  uint64_t v41 = a3;
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for App(0LL);
  swift_bridgeObjectRetain(a2);
  uint64_t v21 = App.__allocating_init(appIdentifier:)(a1, a2);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))( v20,  enum case for AdditionalMetricsDescription.ModuleName.cif (_:),  v17);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))( v16,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v13);
  uint64_t v40 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v20,  v16,  0x7463657078656E55LL,  0xEF65746174536465LL,  0LL,  1LL);
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v25 = *(void *)((char *)v41
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                  + 24);
  uint64_t v24 = *(void *)((char *)v41
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                  + 32);
  uint64_t v41 = sub_6EA8( (void *)((char *)v41 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider),  v25);
  uint64_t v26 = enum case for ActivityType.failed(_:);
  uint64_t v27 = type metadata accessor for ActivityType(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v12, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v12, 0LL, 1LL, v27);
  uint64_t v29 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v30 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v42, 1LL, 1LL, v29);
  uint64_t v31 = enum case for SiriKitReliabilityCodes.promptFailure(_:);
  uint64_t v32 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v43, v31, v32);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0LL, 1LL, v32);
  uint64_t v35 = swift_retain(v21);
  uint64_t v36 = v44;
  uint64_t v37 = INPlayMediaIntent.firstMediaItemType()(v35);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v21,  v36,  v12,  v30,  v34,  v40,  v23,  v37,  0,  v25,  v24);
  swift_release_n(v21, 2LL);
  swift_bridgeObjectRelease(v23);
  sub_1F6CC(v34, &qword_2845A0);
  sub_1F6CC(v30, (uint64_t *)&unk_286BD0);
  return sub_1F6CC((uint64_t)v12, &qword_2845A8);
}

uint64_t sub_E1CE0(uint64_t a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v143 = a3;
  uint64_t v144 = a4;
  uint64_t v134 = a2;
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v138 = *(uint64_t (***)(void, void))(v7 - 8);
  uint64_t v139 = v7;
  __chkstk_darwin(v7);
  uint64_t v137 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v141 = *(void *)(v9 - 8);
  uint64_t v142 = v9;
  __chkstk_darwin(v9);
  uint64_t v140 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_287FB0);
  __chkstk_darwin(v11);
  uint64_t v133 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  uint64_t v135 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v132 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v136 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v131 = (char *)&v128 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  id v130 = (char *)&v128 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v129 = (char *)&v128 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v128 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v128 - v28;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v30 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v31 = *(uint64_t (**)(char *))(v16 + 16);
  uint64_t v145 = v30;
  uint64_t v32 = v31(v29);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v128 = v15;
    uint64_t v36 = v31;
    uint64_t v37 = v13;
    uint64_t v38 = v5;
    uint64_t v39 = a1;
    uint64_t v40 = v35;
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_0, v33, v34, "ConfirmInterruptionFlow#startLogic Reached logic...", v35, 2u);
    uint64_t v41 = v40;
    a1 = v39;
    uint64_t v5 = v38;
    uint64_t v13 = v37;
    uint64_t v31 = v36;
    uint64_t v15 = v128;
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  uint64_t v42 = *(void (**)(char *, uint64_t))(v16 + 8);
  v42(v29, v15);
  uint64_t v43 = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v27, v145, v15);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = a1;
    uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl( &dword_0,  v44,  v45,  "ConfirmInterruptionFlow#startLogic Stored original intent wrapper here in case of confirmation logic down the line...",  v47,  2u);
    uint64_t v48 = v47;
    a1 = v46;
    swift_slowDealloc(v48, -1LL, -1LL);
  }

  v42(v27, v15);
  uint64_t v49 = *(void *)(v5
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_originalPlayMediaRCHFlowWrapper);
  *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_originalPlayMediaRCHFlowWrapper) = a1;
  swift_retain(a1);
  swift_release(v49);
  uint64_t v50 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_featureFlagProvider + 24);
  uint64_t v51 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_featureFlagProvider + 32);
  sub_6EA8((void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_featureFlagProvider), v50);
  uint64_t v52 = dispatch thunk of FeatureFlagProviding.isSELogicEnabled.getter(v50, v51);
  if ((v52 & 1) == 0)
  {
    uint64_t v74 = static os_signpost_type_t.event.getter(v52);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v75 = qword_296AA0;
    uint64_t v76 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v77 = swift_allocObject(v76, 72LL, 7LL);
    *(_OWORD *)(v77 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v77 + 56) = &type metadata for Int;
    *(void *)(v77 + 64) = &protocol witness table for Int;
    *(void *)(v77 + 3sub_6C3C(v0 + 2) = 3LL;
    uint64_t v78 = v140;
    static OSSignpostID.exclusive.getter(v77);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v74,  &dword_0,  v75,  "seConfirmInterruption",  21LL,  2LL,  v78,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v77);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v78, v142);
    uint64_t v69 = v136;
    uint64_t v79 = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v136, v145, v15);
    uint64_t v71 = (os_log_s *)Logger.logObject.getter(v79);
    os_log_type_t v80 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v71, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl( &dword_0,  v71,  v80,  "ConfirmInterruptionFlow#startLogic SE disabled, executing PlayMediaRCHFlowWrapper...",  v81,  2u);
      swift_slowDealloc(v81, -1LL, -1LL);
    }

    goto LABEL_19;
  }

  uint64_t v53 = (uint64_t (*)(char *, uint64_t, uint64_t))v31;
  uint64_t v54 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_seDeviceProvider + 24);
  uint64_t v55 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_seDeviceProvider + 32);
  sub_6EA8((void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_seDeviceProvider), v54);
  uint64_t v56 = dispatch thunk of SEDeviceProviding.getEndpointIdentifier()(v54, v55);
  uint64_t v58 = v144;
  if (v57)
  {
    uint64_t v59 = v56;
    uint64_t v60 = v57;
    uint64_t v61 = (uint64_t)v133;
    UUID.init(uuidString:)();
    uint64_t v62 = v135;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v61, 1LL, v13) == 1)
    {
      swift_bridgeObjectRelease(v60);
      uint64_t v63 = sub_1F6CC(v61, &qword_287FB0);
      uint64_t v64 = static os_signpost_type_t.event.getter(v63);
      if (qword_2838D0 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      uint64_t v65 = qword_296AA0;
      uint64_t v66 = sub_6C5C((uint64_t *)&unk_289320);
      uint64_t v67 = swift_allocObject(v66, 72LL, 7LL);
      *(_OWORD *)(v67 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(v67 + 56) = &type metadata for Int;
      *(void *)(v67 + 64) = &protocol witness table for Int;
      *(void *)(v67 + 3sub_6C3C(v0 + 2) = -4LL;
      id v68 = v140;
      static OSSignpostID.exclusive.getter(v67);
      os_signpost(_:dso:log:name:signpostID:_:_:)( v64,  &dword_0,  v65,  "seConfirmInterruption",  21LL,  2LL,  v68,  "status=%d enableTelemetry=YES",  29);
      swift_bridgeObjectRelease(v67);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v68, v142);
      uint64_t v69 = v130;
      uint64_t v70 = v53(v130, v145, v15);
      uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
      os_log_type_t v72 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v71, v72))
      {
        unint64_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v73 = 0;
        _os_log_impl( &dword_0,  v71,  v72,  "ConfirmInterruptionFlow#startLogic Failed to create UUID from endpoint ID, executing PlayMediaRCHFlowWrapper...",  v73,  2u);
        swift_slowDealloc(v73, -1LL, -1LL);
      }

uint64_t sub_E2A74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a5;
  uint64_t v44 = a7;
  uint64_t v41 = a6;
  uint64_t v42 = a2;
  uint64_t v45 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc(12LL, -1LL);
    uint64_t v40 = a4;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = v38;
    uint64_t v39 = v12;
    *(_DWORD *)uint64_t v20 = 136315138;
    v37[1] = v20 + 4;
    uint64_t v21 = swift_bridgeObjectRetain(a1);
    uint64_t v22 = a8;
    uint64_t v23 = Array.description.getter(v21, &type metadata for String);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease(a1);
    uint64_t v26 = v23;
    a8 = v22;
    uint64_t v46 = sub_6978(v26, v25, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease(v25);
    _os_log_impl( &dword_0,  v17,  v18,  "ConfirmInterruptionFlow#checkInterruptionLogic Found the following decrypted WHA routes: %s...",  v20,  0xCu);
    uint64_t v27 = v38;
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    uint64_t v28 = v20;
    a4 = v40;
    swift_slowDealloc(v28, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v11);
  }

  else
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  uint64_t v29 = v42;
  uint64_t v30 = *(void *)(v42 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_mediaRemoteAPIProvider + 24);
  uint64_t v31 = *(void *)(v42 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_mediaRemoteAPIProvider + 32);
  sub_6EA8( (void *)(v42 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_mediaRemoteAPIProvider),  v30);
  uint64_t v32 = (void *)swift_allocObject(&unk_26F1D8, 56LL, 7LL);
  os_log_type_t v34 = v43;
  uint64_t v33 = v44;
  v32[2] = v29;
  v32[3] = v34;
  v32[4] = v41;
  void v32[5] = v33;
  v32[6] = a8;
  swift_retain(v29);
  id v35 = v34;
  swift_retain(v33);
  swift_retain(a8);
  dispatch thunk of MediaRemoteAPIProviding.devicesPlayingElsewhereBeingInterrupted(for:originatingOutputDeviceUID:completion:)( a1,  v45,  a4,  sub_E845C,  v32,  v30,  v31);
  return swift_release(v32);
}

uint64_t sub_E2D58(char a1, uint64_t a2, void *a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  os_log_type_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  uint64_t v35 = v13;
  os_log_type_t v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v34 = a5;
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = a6;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = a2;
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v37 = v23;
    if ((a1 & 1) != 0) {
      uint64_t v24 = 1702195828LL;
    }
    else {
      uint64_t v24 = 0x65736C6166LL;
    }
    if ((a1 & 1) != 0) {
      unint64_t v25 = 0xE400000000000000LL;
    }
    else {
      unint64_t v25 = 0xE500000000000000LL;
    }
    uint64_t v31 = a3;
    uint64_t v36 = sub_6978(v24, v25, &v37);
    a3 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    unint64_t v26 = v25;
    a5 = v34;
    swift_bridgeObjectRelease(v26);
    _os_log_impl( &dword_0,  v18,  v20,  "ConfirmInterruptionFlow#checkInterruptionLogic MR API returned following result indicating whether or not playback being interrupted elsewhere: %s...",  v22,  0xCu);
    uint64_t v27 = v30;
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    uint64_t v28 = v22;
    a6 = v32;
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v12);
  if ((a1 & 1) != 0) {
    return sub_E396C(a3, 0, (uint64_t)a4, a5);
  }
  else {
    return sub_E846C(a6, a4, a5);
  }
}

uint64_t sub_E2FC4(uint64_t a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v49 = a1;
  uint64_t v50 = a4;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  os_log_type_t v20 = (char *)&v46 - v19;
  id v21 = [(id)objc_opt_self(AFPreferences) isHostingRemoraEndpoints];
  if ((_DWORD)v21)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v22 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v22, v14);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl( &dword_0,  v24,  v25,  "ConfirmInterruptionFlow#checkInterruptionLogicForHomePod Grabbing HomePod route identifier to check for interruption...",  v26,  2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    uint64_t v27 = (void *)swift_allocObject(&unk_26F138, 56LL, 7LL);
    uint64_t v28 = v49;
    uint64_t v29 = v50;
    void v27[2] = v48;
    v27[3] = v29;
    void v27[4] = v28;
    void v27[5] = v5;
    void v27[6] = a2;
    uint64_t v30 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_sharedContextProvider + 24);
    uint64_t v31 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_sharedContextProvider + 32);
    sub_6EA8( (void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_sharedContextProvider),  v30);
    uint64_t v32 = swift_allocObject(&unk_26F160, 32LL, 7LL);
    *(void *)(v32 + swift_weakDestroy(v0 + 16) = sub_E83C4;
    *(void *)(v32 + 24) = v27;
    swift_retain(v29);
    swift_retain(v28);
    swift_retain(v5);
    id v33 = a2;
    swift_retain(v27);
    dispatch thunk of SharedContextProviding.fetchPrimaryDeviceContext(completion:)(sub_E8408, v32, v30, v31);
    swift_release(v27);
    return swift_release(v32);
  }

  else
  {
    uint64_t v35 = static os_signpost_type_t.event.getter(v21);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v36 = qword_296AA0;
    uint64_t v37 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v38 = swift_allocObject(v37, 72LL, 7LL);
    *(_OWORD *)(v38 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v38 + 56) = &type metadata for Int;
    *(void *)(v38 + 64) = &protocol witness table for Int;
    *(void *)(v38 + 3sub_6C3C(v0 + 2) = 8LL;
    static OSSignpostID.exclusive.getter(v38);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v35,  &dword_0,  v36,  "seConfirmInterruption",  21LL,  2LL,  v13,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v39, v14);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl( &dword_0,  v41,  v42,  "ConfirmInterruptionFlow#checkInterruptionLogicForHomePod This HomePod is not hosting remora endpoints, executing PlayMediaRCHFlowWrapper...",  v43,  2u);
      swift_slowDealloc(v43, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t v51 = v49;
    uint64_t v44 = type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
    uint64_t v45 = sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
    static ExecuteResponse.complete<A>(next:)(&v51, v44, v45);
    v48(v9);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v9, v47);
  }

uint64_t sub_E3490( uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, char *a6, void *a7)
{
  uint64_t v61 = a7;
  uint64_t v62 = a1;
  uint64_t v63 = a6;
  uint64_t v64 = a3;
  uint64_t v10 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v11 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v23 = (void *)swift_allocObject(&unk_26F188, 72LL, 7LL);
    uint64_t v24 = v62;
    uint64_t v25 = (uint64_t)v63;
    v23[2] = v63;
    void v23[3] = v24;
    unint64_t v26 = v61;
    v23[4] = a2;
    v23[5] = v26;
    uint64_t v27 = (uint64_t)v64;
    v23[6] = v64;
    v23[7] = a4;
    v23[8] = a5;
    swift_retain_n(v25, 2LL);
    id v28 = v26;
    swift_retain_n(a4, 2LL);
    swift_retain_n(a5, 2LL);
    swift_bridgeObjectRetain_n(a2, 2LL);
    id v29 = v28;
    id v30 = [v29 hashedRouteUIDs];
    uint64_t v31 = a5;
    if (v30)
    {
      uint64_t v32 = v30;
      uint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for String);

      uint64_t v34 = *(void *)(v25 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider + 24);
      uint64_t v64 = *(void (**)(char *))(v25
                                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider
                                          + 32);
      sub_6EA8( (void *)(v25 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider),  v34);
      uint64_t v35 = a5;
      uint64_t v36 = swift_allocObject(&unk_26F1B0, 32LL, 7LL);
      *(void *)(v36 + swift_weakDestroy(v0 + 16) = sub_E8414;
      *(void *)(v36 + 24) = v23;
      swift_retain(v23);
      dispatch thunk of EncryptionProviding.decodeRouteIds(_:completion:)(v33, sub_E8418, v36, v34, v64);
      uint64_t v31 = v35;
      swift_release(v25);
      swift_release(v23);
      swift_bridgeObjectRelease(v33);
      uint64_t v37 = (void *)v36;
    }

    else
    {
      sub_E2A74((uint64_t)_swiftEmptyArrayStorage, v25, v24, a2, v29, v27, a4, a5);
      swift_release(v25);
      uint64_t v37 = v23;
    }

    swift_release(v37);
    swift_release(v31);
    swift_release(a4);

    return swift_bridgeObjectRelease(a2);
  }

  else
  {
    uint64_t v58 = v20;
    uint64_t v59 = v19;
    uint64_t v62 = v15;
    uint64_t v63 = v17;
    uint64_t v60 = v13;
    uint64_t v61 = v11;
    uint64_t v38 = static os_signpost_type_t.event.getter(v19);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v39 = qword_296AA0;
    uint64_t v40 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v41 = swift_allocObject(v40, 72LL, 7LL);
    *(_OWORD *)(v41 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v41 + 56) = &type metadata for Int;
    *(void *)(v41 + 64) = &protocol witness table for Int;
    *(void *)(v41 + 3sub_6C3C(v0 + 2) = -5LL;
    static OSSignpostID.exclusive.getter(v41);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v38,  &dword_0,  v39,  "seConfirmInterruption",  21LL,  2LL,  v22,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v59);
    os_log_type_t v42 = v63;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v43 = v14;
    uint64_t v44 = sub_6960(v14, (uint64_t)qword_2969C8);
    uint64_t v45 = v62;
    uint64_t v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v42, v44, v43);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    BOOL v49 = os_log_type_enabled(v47, v48);
    uint64_t v50 = v10;
    uint64_t v52 = v60;
    uint64_t v51 = (uint64_t (**)(char *, uint64_t))v61;
    if (v49)
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl( &dword_0,  v47,  v48,  "ConfirmInterruptionFlow#checkInterruptionLogicForHomePod Got back no identifier for HomePod, executing PlayMedia RCHFlowWrapper...",  v53,  2u);
      uint64_t v54 = v53;
      uint64_t v45 = v62;
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v63, v43);
    uint64_t v65 = a5;
    uint64_t v55 = type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
    uint64_t v56 = sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
    static ExecuteResponse.complete<A>(next:)(&v65, v55, v56);
    v64(v52);
    return v51[1](v52, v50);
  }

uint64_t sub_E396C(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v38 = a1;
  uint64_t v39 = a4;
  uint64_t v37 = a3;
  int v36 = a2;
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "ConfirmInterruptionFlow#promptLogic Reached logic...", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v19 = (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v20 = static os_signpost_type_t.event.getter(v19);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v21 = qword_296AA0;
  uint64_t v22 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
  *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(v23 + 56) = &type metadata for Int;
  *(void *)(v23 + 64) = &protocol witness table for Int;
  *(void *)(v23 + 3sub_6C3C(v0 + 2) = 7LL;
  static OSSignpostID.exclusive.getter(v23);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v20,  &dword_0,  v21,  "seConfirmInterruption",  21LL,  2LL,  v9,  "status=%d enableTelemetry=YES",  29);
  swift_bridgeObjectRelease(v23);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v24 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v25 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 24);
  uint64_t v26 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 32);
  sub_6EA8((void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver), v25);
  uint64_t v27 = static BundleIdentifiers.sentinelBundleIdentifier.getter();
  uint64_t v29 = v28;
  uint64_t v41 = 0LL;
  memset(v40, 0, sizeof(v40));
  uint64_t v30 = swift_allocObject(&unk_26F0E8, 64LL, 7LL);
  *(void *)(v30 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(v30 + 24) = v24;
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  *(void *)(v30 + 3sub_6C3C(v0 + 2) = v38;
  *(_BYTE *)(v30 + 40) = v36 & 1;
  *(void *)(v30 + 4sub_6C3C(v0 + 8) = v37;
  *(void *)(v30 + 56) = v31;
  swift_retain(v5);
  id v33 = v32;
  swift_retain(v31);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v27, v29, v40, sub_E830C, v30, v25, v26);
  swift_bridgeObjectRelease(v29);
  swift_release(v30);
  return sub_1F6CC((uint64_t)v40, &qword_2860C0);
}

uint64_t sub_E3CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = App.__allocating_init(appIdentifier:)(a1, a2);
  os_log_type_t v17 = *(void **)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_playMediaCatDialogService);
  v33[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  void v33[4] = &off_272BD0;
  v33[0] = a5;
  uint64_t v18 = swift_allocObject(&unk_26F110, 64LL, 7LL);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v18 + 24) = v16;
  *(void *)(v18 + 3sub_6C3C(v0 + 2) = a5;
  *(_BYTE *)(v18 + 40) = a6;
  *(void *)(v18 + 4sub_6C3C(v0 + 8) = a7;
  *(void *)(v18 + 56) = a8;
  uint64_t v19 = v17[4];
  uint64_t v20 = v17[6];
  uint64_t v24 = v17[5];
  uint64_t v25 = v20;
  unint64_t v26 = 0xD00000000000001CLL;
  unint64_t v27 = 0x80000000002203B0LL;
  uint64_t v28 = v19;
  uint64_t v29 = a4;
  uint64_t v30 = v16;
  uint64_t v31 = v33;
  uint64_t v32 = 0LL;
  id v21 = a5;
  swift_retain(a3);
  swift_retain(v16);
  swift_retain(a8);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_E8374,  v18,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v24,  v20,  0xD00000000000001CLL,  0x80000000002203B0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v23);
  swift_release(v18);
  swift_release(v16);
  return sub_1F6CC((uint64_t)v33, &qword_283FE8);
}

uint64_t sub_E3E58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(char *), uint64_t a7)
{
  double v198 = a6;
  uint64_t v199 = a7;
  int v172 = a5;
  *(void *)&__int128 v200 = a4;
  uint64_t v191 = a3;
  uint64_t v201 = a2;
  uint64_t v183 = a1;
  uint64_t v182 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  unint64_t v180 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v195 = *(void *)(v8 - 8);
  unint64_t v196 = v8;
  __chkstk_darwin(v8);
  uint64_t v194 = (uint64_t)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v179 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v177 = (char *)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v11);
  uint64_t v190 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v13);
  uint64_t v189 = (char *)&v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v174 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v164 - v18;
  uint64_t v171 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v169 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v188 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v186 = *(v188 - 1);
  __chkstk_darwin(v188);
  uint64_t v185 = (char *)&v164 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v187 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v22 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v184 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_289340);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v173 = (char *)&v164 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v202 = (char *)&v164 - v27;
  uint64_t v28 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v164 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v31 = type metadata accessor for Logger(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v175 = (char *)&v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v176 = (char *)&v164 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v164 - v37;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = sub_6960(v31, (uint64_t)qword_2969C8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v192 = v39;
  uint64_t v203 = v31;
  id v193 = v40;
  uint64_t v41 = ((uint64_t (*)(char *))v40)(v38);
  os_log_type_t v42 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_0, v42, v43, "ConfirmInterruptionFlow#promptLogic Got back dialog result...", v44, 2u);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  uint64_t v45 = *(void (**)(char *, uint64_t))(v32 + 8);
  v45(v38, v203);
  sub_FF10(v183, (uint64_t)v30, (uint64_t *)&unk_286BB0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30, v28);
  uint64_t v197 = v45;
  if (EnumCaseMultiPayload == 1)
  {
    v205[0] = *v30;
    uint64_t v47 = sub_6C5C(&qword_284010);
    uint64_t v48 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(v204, v205, v47, v48, 0LL))
    {
      BOOL v49 = (char *)v204[0];
      id v50 = [v204[0] code];
      uint64_t v51 = static os_signpost_type_t.event.getter(v50);
      if (qword_2838D0 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      uint64_t v52 = qword_296AA0;
      uint64_t v53 = sub_6C5C((uint64_t *)&unk_289320);
      uint64_t v54 = swift_allocObject(v53, 72LL, 7LL);
      *(_OWORD *)(v54 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(v54 + 56) = &type metadata for Int;
      *(void *)(v54 + 64) = &protocol witness table for Int;
      *(void *)(v54 + 3sub_6C3C(v0 + 2) = v50;
      uint64_t v55 = v194;
      static OSSignpostID.exclusive.getter(v54);
      os_signpost(_:dso:log:name:signpostID:_:_:)( v51,  &dword_0,  v52,  "seConfirmInterruption",  21LL,  2LL,  v55,  "status=%d enableTelemetry=YES",  29);
      swift_bridgeObjectRelease(v54);
      (*(void (**)(uint64_t, unint64_t))(v195 + 8))(v55, v196);
      uint64_t v202 = v49;
      id v56 = [v49 localizedDescription];
      uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      uint64_t v59 = v58;

      v206._uint64_t countAndFlagsBits = v57;
      v206._object = v59;
      uint64_t v60 = String.init<A>(_:)( &v206,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v62 = v61;
      unint64_t v196 = v61;
      uint64_t v63 = v184;
      uint64_t v64 = v187;
      (*(void (**)(char *, void, uint64_t))(v22 + 104))( v184,  enum case for AdditionalMetricsDescription.ModuleName.cif (_:),  v187);
      uint64_t v65 = v186;
      uint64_t v66 = v185;
      uint64_t v67 = v188;
      (*(void (**)(char *, void, void *))(v186 + 104))( v185,  enum case for AdditionalMetricsDescription.SourceFunction.promptLogic(_:),  v188);
      uint64_t v194 = v60;
      uint64_t v195 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v63,  v66,  v60,  v62,  0LL,  1LL);
      uint64_t v69 = v68;
      (*(void (**)(char *, void *))(v65 + 8))(v66, v67);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v63, v64);
      uint64_t v70 = *(void *)(v201
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                      + 24);
      uint64_t v71 = *(void *)(v201
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                      + 32);
      sub_6EA8( (void *)(v201 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider),  v70);
      uint64_t v72 = enum case for ActivityType.failed(_:);
      uint64_t v73 = type metadata accessor for ActivityType(0LL);
      uint64_t v74 = *(void *)(v73 - 8);
      uint64_t v75 = v174;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 104))(v174, v72, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v75, 0LL, 1LL, v73);
      uint64_t v76 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v77 = (uint64_t)v189;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56LL))(v189, 1LL, 1LL, v76);
      uint64_t v78 = enum case for SiriKitReliabilityCodes.renderingError(_:);
      uint64_t v79 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v80 = *(void *)(v79 - 8);
      uint64_t v81 = (uint64_t)v190;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v190, v78, v79);
      uint64_t v82 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v81, 0LL, 1LL, v79);
      uint64_t v83 = v200;
      uint64_t v84 = INPlayMediaIntent.firstMediaItemType()(v82);
      LOBYTE(v16sub_6C3C(v0 + 3) = 0;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v191,  v83,  v75,  v77,  v81,  v195,  v69,  v84,  v163,  v70,  v71);
      swift_bridgeObjectRelease(v69);
      sub_1F6CC(v81, &qword_2845A0);
      sub_1F6CC(v77, (uint64_t *)&unk_286BD0);
      uint64_t v85 = (uint64_t)v75;
      unint64_t v86 = v196;
      sub_1F6CC(v85, &qword_2845A8);
      uint64_t v87 = v175;
      uint64_t v88 = v203;
      v193(v175, v192, v203);
      uint64_t v89 = swift_bridgeObjectRetain(v86);
      unint64_t v90 = (os_log_s *)Logger.logObject.getter(v89);
      os_log_type_t v91 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v93 = swift_slowAlloc(32LL, -1LL);
        v206._uint64_t countAndFlagsBits = v93;
        *(_DWORD *)uint64_t v92 = 136315138;
        swift_bridgeObjectRetain(v86);
        uint64_t v209 = sub_6978(v194, v86, &v206._countAndFlagsBits);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, v210);
        swift_bridgeObjectRelease_n(v86, 3LL);
        _os_log_impl( &dword_0,  v90,  v91,  "ConfirmInterruptionFlow#promptLogic Error creating dialog %s, issuing error dialog...",  v92,  0xCu);
        swift_arrayDestroy(v93, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v93, -1LL, -1LL);
        swift_slowDealloc(v92, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v86, 2LL);
      }

      v197(v87, v88);
      sub_E71CC((void *)v200, 0xD000000000000019LL, 0x80000000002203D0LL, (uint64_t)v198, v199);

      return swift_errorRelease(v205[0]);
    }

    else
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v28, v28);
      __break(1u);
    }
  }

  else
  {
    uint64_t v168 = v24;
    uint64_t v94 = *(int *)(v24 + 48);
    uint64_t v167 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v166 = *(void *)(v167 - 8);
    uint64_t v174 = *(char **)(v166 + 32);
    unint64_t v95 = v202;
    ((void (*)(char *, void *, uint64_t))v174)(v202, v30, v167);
    unint64_t v96 = *(void **)((char *)v30 + v94);
    *(void *)&v95[v94] = v96;
    uint64_t v165 = v19;
    uint64_t v97 = v22;
    uint64_t v98 = v184;
    uint64_t v99 = v187;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))( v184,  enum case for AdditionalMetricsDescription.ModuleName.cif (_:),  v187);
    uint64_t v100 = v186;
    uint64_t v101 = v185;
    uint64_t v102 = v188;
    (*(void (**)(char *, void, void *))(v186 + 104))( v185,  enum case for AdditionalMetricsDescription.SourceFunction.promptLogic(_:),  v188);
    uint64_t v103 = v170;
    uint64_t v104 = v169;
    uint64_t v105 = v171;
    (*(void (**)(char *, void, uint64_t))(v170 + 104))( v169,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v171);
    id v106 = v96;
    uint64_t v183 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v98,  v101,  v104,  0LL,  1LL);
    uint64_t v175 = v107;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
    (*(void (**)(char *, void *))(v100 + 8))(v101, v102);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
    uint64_t v108 = v201;
    sub_157C4( v201 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider,  (uint64_t)&v206);
    uint64_t v109 = v207;
    uint64_t v110 = v208;
    uint64_t v188 = sub_6EA8(&v206, v207);
    uint64_t v111 = type metadata accessor for ActivityType(0LL);
    uint64_t v112 = *(void *)(v111 - 8);
    uint64_t v113 = (unsigned int *)&enum case for ActivityType.promptForData(_:);
    if ((v172 & 1) == 0) {
      uint64_t v113 = (unsigned int *)&enum case for ActivityType.completed(_:);
    }
    uint64_t v114 = (uint64_t)v165;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v165, *v113, v111);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v114, 0LL, 1LL, v111);
    uint64_t v115 = *(int *)(v168 + 48);
    uint64_t v116 = v166;
    uint64_t v117 = v173;
    uint64_t v118 = v167;
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v173, v202, v167);

    *(void *)&v117[v115] = v106;
    uint64_t v119 = (uint64_t)v189;
    ((void (*)(char *, char *, uint64_t))v174)(v189, v117, v118);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v116 + 56))(v119, 0LL, 1LL, v118);
    uint64_t v120 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v121 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v122 = *(void *)(v121 - 8);
    uint64_t v123 = (uint64_t)v190;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v190, v120, v121);
    uint64_t v124 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v122 + 56))(v123, 0LL, 1LL, v121);
    uint64_t v125 = v200;
    uint64_t v126 = INPlayMediaIntent.firstMediaItemType()(v124);
    id v127 = v175;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v191,  v125,  v114,  v119,  v123,  v183,  v175,  v126,  0,  v109,  v110);
    swift_bridgeObjectRelease(v127);
    sub_1F6CC(v123, &qword_2845A0);
    sub_1F6CC(v119, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v114, &qword_2845A8);
    sub_6C3C(&v206);
    uint64_t v128 = v177;
    sub_96388();
    unint64_t v129 = sub_A89B0(0);
    NLContextUpdate.weightedPromptTargetDomain.setter(v129);
    NLContextUpdate.weightedPromptStrict.setter(1LL);
    uint64_t v130 = sub_6C5C(&qword_284018);
    uint64_t v131 = swift_allocObject(v130, 48LL, 7LL);
    __int128 v200 = xmmword_214510;
    *(_OWORD *)(v131 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    Swift::String v132 = String.uppercased()();
    Swift::String v206 = v132;
    v205[0] = 32LL;
    v205[1] = 0xE100000000000000LL;
    v204[0] = &stru_20 + 63;
    v204[1] = (id)0xE100000000000000LL;
    unint64_t v133 = sub_6D68();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v205,  v204,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v133,  v133,  v133);
    uint64_t v135 = v134;
    swift_bridgeObjectRelease(v132._object);
    v206._uint64_t countAndFlagsBits = sub_A89B0(1u);
    v206._object = v136;
    v137._uint64_t countAndFlagsBits = 0x2E65756C61562ELL;
    v137._object = (void *)0xE700000000000000LL;
    String.append(_:)(v137);
    Swift::String v138 = String.uppercased()();
    object = v138._object;
    String.append(_:)(v138);
    swift_bridgeObjectRelease(v135);
    swift_bridgeObjectRelease(object);
    uint64_t v140 = v206._object;
    *(void *)(v131 + 3sub_6C3C(v0 + 2) = v206._countAndFlagsBits;
    *(void *)(v131 + 40) = v140;
    NLContextUpdate.weightedPromptAbortValues.setter(v131);
    NLContextUpdate.objectDisambiguation.setter(1LL);
    uint64_t v141 = (void *)dispatch thunk of ViewFactory.makeConfirmationView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v202,  _swiftEmptyArrayStorage,  1LL,  1LL);
    uint64_t v142 = *(void *)(v108 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 24);
    uint64_t v143 = *(void *)(v108 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 32);
    sub_6EA8( (void *)(v108 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker),  v142);
    uint64_t v144 = sub_6C5C(&qword_287980);
    uint64_t v145 = swift_allocObject(v144, 48LL, 7LL);
    *(_OWORD *)(v145 + swift_weakDestroy(v0 + 16) = xmmword_2166D0;
    uint64_t v146 = NLContextUpdate.toAceContextUpdate()();
    *(void *)(v145 + 3sub_6C3C(v0 + 2) = v146;
    *(void *)(v145 + 40) = v141;
    v206._uint64_t countAndFlagsBits = v145;
    specialized Array._endMutation()(v146);
    uint64_t countAndFlagsBits = v206._countAndFlagsBits;
    id v148 = v141;
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(countAndFlagsBits, v142, v143);
    uint64_t v149 = swift_bridgeObjectRelease(countAndFlagsBits);
    uint64_t v150 = static os_signpost_type_t.event.getter(v149);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v151 = qword_296AA0;
    uint64_t v152 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v153 = swift_allocObject(v152, 72LL, 7LL);
    *(_OWORD *)(v153 + swift_weakDestroy(v0 + 16) = v200;
    *(void *)(v153 + 56) = &type metadata for Int;
    *(void *)(v153 + 64) = &protocol witness table for Int;
    *(void *)(v153 + 3sub_6C3C(v0 + 2) = 1LL;
    uint64_t v154 = v194;
    static OSSignpostID.exclusive.getter(v153);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v150,  &dword_0,  v151,  "seConfirmInterruption",  21LL,  2LL,  v154,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v153);
    (*(void (**)(uint64_t, unint64_t))(v195 + 8))(v154, v196);
    uint64_t v155 = v176;
    uint64_t v156 = v203;
    uint64_t v157 = ((uint64_t (*)(char *, uint64_t, uint64_t))v193)(v176, v192, v203);
    uint64_t v158 = (os_log_s *)Logger.logObject.getter(v157);
    os_log_type_t v159 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v158, v159))
    {
      uint64_t v160 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v160 = 0;
      _os_log_impl( &dword_0,  v158,  v159,  "ConfirmInterruptionFlow#promptLogic Dialog successfully generated, responding and exiting...",  v160,  2u);
      swift_slowDealloc(v160, -1LL, -1LL);
    }

    v197(v155, v156);
    uint64_t v161 = v180;
    static ExecuteResponse.ongoing(requireInput:)(1LL);
    v198(v161);

    (*(void (**)(char *, uint64_t))(v181 + 8))(v161, v182);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v128, v179);
    return sub_1F6CC((uint64_t)v202, &qword_289340);
  }

  return result;
}

uint64_t sub_E4FF8(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v31 = a3;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_0, v15, v16, "ConfirmInterruptionFlow#rejectInterruptionLogic Reached logic...", v17, 2u);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v18, v34);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD000000000000010LL;
  *(void *)(inited + 40) = 0x8000000000220330LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = a2 & 1;
  unint64_t v20 = sub_74D54(inited);
  uint64_t v21 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 24);
  uint64_t v22 = *(void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 32);
  sub_6EA8((void *)(v5 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver), v21);
  uint64_t v23 = static BundleIdentifiers.sentinelBundleIdentifier.getter();
  uint64_t v25 = v24;
  uint64_t v33 = 0LL;
  memset(v32, 0, sizeof(v32));
  uint64_t v26 = (void *)swift_allocObject(&unk_26F098, 56LL, 7LL);
  v26[2] = v5;
  void v26[3] = v20;
  uint64_t v27 = v31;
  v26[4] = a1;
  void v26[5] = v27;
  v26[6] = a4;
  swift_retain(v5);
  id v28 = a1;
  swift_retain(a4);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v23, v25, v32, sub_E8294, v26, v21, v22);
  swift_bridgeObjectRelease(v25);
  swift_release(v26);
  return sub_1F6CC((uint64_t)v32, &qword_2860C0);
}

uint64_t sub_E525C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = App.__allocating_init(appIdentifier:)(a1, a2);
  uint64_t v15 = *(void **)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_playMediaCatDialogService);
  v32[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v32[4] = &off_272BD0;
  v32[0] = a5;
  os_log_type_t v16 = (void *)swift_allocObject(&unk_26F0C0, 56LL, 7LL);
  __int128 v16[2] = a3;
  v16[3] = v14;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  uint64_t v17 = v15[4];
  uint64_t v18 = v15[5];
  uint64_t v19 = v15[6];
  uint64_t v23 = v18;
  uint64_t v24 = v19;
  unint64_t v25 = 0xD00000000000001BLL;
  unint64_t v26 = 0x8000000000220350LL;
  uint64_t v27 = v17;
  uint64_t v28 = a4;
  uint64_t v29 = v14;
  uint64_t v30 = v32;
  uint64_t v31 = 0LL;
  id v20 = a5;
  swift_retain(a3);
  swift_retain(v14);
  swift_retain(a7);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_E82F4,  (uint64_t)v16,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD00000000000001BLL,  0x8000000000220350LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_release(v16);
  swift_release(v14);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

uint64_t sub_E53F8( void (*a1)(void, void, void), uint64_t a2, uint64_t a3, void *a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v153 = a5;
  uint64_t v154 = a6;
  uint64_t v155 = a4;
  uint64_t v149 = a3;
  uint64_t v158 = a2;
  uint64_t v145 = a1;
  uint64_t v142 = (void *)type metadata accessor for ExecuteResponse(0LL);
  uint64_t v141 = *(v142 - 1);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v156 = *(void *)(v7 - 8);
  uint64_t v157 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v143 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v139 = (char *)&v129 - v10;
  uint64_t v11 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v151 = *(void *)(v11 - 8);
  uint64_t v152 = v11;
  __chkstk_darwin(v11);
  uint64_t v150 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v13);
  id v148 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v15);
  id v147 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v17);
  uint64_t v146 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v136 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v135 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v20 = *(v144 - 1);
  __chkstk_darwin(v144);
  uint64_t v22 = (char *)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C(&qword_289340);
  uint64_t v28 = __chkstk_darwin(v27);
  Swift::String v137 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v129 - v30;
  uint64_t v32 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v145, (uint64_t)v34, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v34, v32) == 1)
  {
    uint64_t v163 = *v34;
    uint64_t v35 = sub_6C5C(&qword_284010);
    uint64_t v36 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(&v162, &v163, v35, v36, 0LL))
    {
      uint64_t v142 = v162;
      id v37 = [v162 localizedDescription];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      uint64_t v40 = v39;

      (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.cif (_:),  v23);
      uint64_t v41 = v144;
      (*(void (**)(char *, void, void *))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.rejIntLogic(_:),  v144);
      uint64_t v140 = (char *)v38;
      uint64_t v145 = v40;
      uint64_t v141 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v26,  v22,  v38,  v40,  0LL,  1LL);
      uint64_t v43 = v42;
      (*(void (**)(char *, void *))(v20 + 8))(v22, v41);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      uint64_t v44 = *(void *)(v158
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                      + 24);
      uint64_t v45 = *(void *)(v158
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                      + 32);
      sub_6EA8( (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider),  v44);
      uint64_t v46 = enum case for ActivityType.canceled(_:);
      uint64_t v47 = type metadata accessor for ActivityType(0LL);
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = (uint64_t)v146;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v146, v46, v47);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0LL, 1LL, v47);
      uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v51 = v147;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56LL))(v147, 1LL, 1LL, v50);
      uint64_t v52 = enum case for SiriKitReliabilityCodes.genericError(_:);
      uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = (uint64_t)v148;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v148, v52, v53);
      uint64_t v56 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
      uint64_t v57 = v155;
      uint64_t v58 = INPlayMediaIntent.firstMediaItemType()(v56);
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v149,  v57,  v49,  v51,  v55,  v141,  v43,  v58,  0,  v44,  v45);
      swift_bridgeObjectRelease(v43);
      sub_1F6CC(v55, &qword_2845A0);
      uint64_t v59 = (uint64_t)v51;
      uint64_t v60 = v142;
      sub_1F6CC(v59, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v49, &qword_2845A8);
      id v61 = [v60 code];
      uint64_t v62 = static os_signpost_type_t.event.getter(v61);
      if (qword_2838D0 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      uint64_t v63 = qword_296AA0;
      uint64_t v64 = sub_6C5C((uint64_t *)&unk_289320);
      uint64_t v65 = swift_allocObject(v64, 72LL, 7LL);
      *(_OWORD *)(v65 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(v65 + 56) = &type metadata for Int;
      *(void *)(v65 + 64) = &protocol witness table for Int;
      *(void *)(v65 + 3sub_6C3C(v0 + 2) = v61;
      uint64_t v66 = v150;
      static OSSignpostID.exclusive.getter(v65);
      os_signpost(_:dso:log:name:signpostID:_:_:)( v62,  &dword_0,  v63,  "seConfirmInterruption",  21LL,  2LL,  v66,  "status=%d enableTelemetry=YES",  29);
      swift_bridgeObjectRelease(v65);
      (*(void (**)(char *, uint64_t))(v151 + 8))(v66, v152);
      uint64_t v67 = v143;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v68 = v157;
      uint64_t v69 = sub_6960(v157, (uint64_t)qword_2969C8);
      uint64_t v70 = v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v67, v69, v68);
      uint64_t v71 = v145;
      uint64_t v72 = swift_bridgeObjectRetain(v145);
      uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
      os_log_type_t v74 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v76 = swift_slowAlloc(32LL, -1LL);
        uint64_t v160 = v71;
        uint64_t v161 = v76;
        *(_DWORD *)uint64_t v75 = 136315138;
        uint64_t v159 = (uint64_t)v140;
        swift_bridgeObjectRetain(v71);
        uint64_t v77 = String.init<A>(_:)( &v159,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        uint64_t v78 = v71;
        unint64_t v80 = v79;
        uint64_t v159 = sub_6978(v77, v79, &v161);
        uint64_t v57 = v155;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v159, &v160);
        swift_bridgeObjectRelease_n(v78, 2LL);
        swift_bridgeObjectRelease(v80);
        _os_log_impl( &dword_0,  v73,  v74,  "ConfirmInterruptionFlow#rejectInterruptionLogic Error creating dialog %s, issuing error dialog...",  v75,  0xCu);
        swift_arrayDestroy(v76, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v76, -1LL, -1LL);
        swift_slowDealloc(v75, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v156 + 8))(v143, v157);
      }

      else
      {

        swift_bridgeObjectRelease_n(v71, 2LL);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v68);
      }

      sub_E71CC(v57, 0xD000000000000019LL, 0x8000000000220390LL, (uint64_t)v153, v154);

      return swift_errorRelease(v163);
    }

    else
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v32, v32);
      __break(1u);
    }
  }

  else
  {
    uint64_t v134 = v27;
    uint64_t v81 = *(int *)(v27 + 48);
    uint64_t v82 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v132 = *(void *)(v82 - 8);
    uint64_t v145 = *(void (**)(void, void, void))(v132 + 32);
    unint64_t v129 = v31;
    v145(v31, v34, v82);
    uint64_t v131 = v81;
    *(void *)&v31[v81] = *(uint64_t *)((char *)v34 + v81);
    uint64_t v130 = dispatch thunk of ViewFactory.makeCancellationView(cancelTemplate:snippets:canUseServerTTS:)( v31,  _swiftEmptyArrayStorage,  0LL);
    (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.cif (_:),  v23);
    uint64_t v83 = v20;
    uint64_t v84 = v144;
    (*(void (**)(char *, void, void *))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.rejIntLogic(_:),  v144);
    uint64_t v85 = v136;
    unint64_t v86 = v135;
    uint64_t v87 = v138;
    (*(void (**)(char *, void, uint64_t))(v136 + 104))( v135,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v138);
    uint64_t v143 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v26,  v22,  v86,  0LL,  1LL);
    uint64_t v133 = v88;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
    (*(void (**)(char *, void *))(v83 + 8))(v22, v84);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    uint64_t v89 = *(void *)(v158
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v138 = *(void *)(v158
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                     + 32);
    uint64_t v144 = sub_6EA8( (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider),  v89);
    uint64_t v90 = enum case for ActivityType.canceled(_:);
    uint64_t v91 = type metadata accessor for ActivityType(0LL);
    uint64_t v92 = *(void *)(v91 - 8);
    uint64_t v93 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 104))(v146, v90, v91);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v93, 0LL, 1LL, v91);
    uint64_t v94 = *(int *)(v134 + 48);
    uint64_t v95 = v132;
    unint64_t v96 = v137;
    uint64_t v97 = (uint64_t)v129;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v137, v129, v82);
    uint64_t v98 = v97;
    *(void *)&v96[v94] = *(void *)(v97 + v131);
    uint64_t v99 = (uint64_t)v147;
    uint64_t v100 = (void *)v130;
    v145(v147, v96, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v99, 0LL, 1LL, v82);
    uint64_t v101 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v102 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v103 = *(void *)(v102 - 8);
    uint64_t v104 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 104))(v148, v101, v102);
    uint64_t v105 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v104, 0LL, 1LL, v102);
    id v106 = v155;
    uint64_t v107 = INPlayMediaIntent.firstMediaItemType()(v105);
    uint64_t v128 = v89;
    uint64_t v108 = v133;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v149,  v106,  v93,  v99,  v104,  v143,  v133,  v107,  0,  v128,  v138);
    swift_bridgeObjectRelease(v108);
    sub_1F6CC(v104, &qword_2845A0);
    sub_1F6CC(v99, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v93, &qword_2845A8);
    uint64_t v109 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 24);
    uint64_t v110 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 32);
    sub_6EA8( (void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker),  v109);
    uint64_t v111 = dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v100, v109, v110);
    uint64_t v112 = static os_signpost_type_t.event.getter(v111);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v113 = qword_296AA0;
    uint64_t v114 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v115 = swift_allocObject(v114, 72LL, 7LL);
    *(_OWORD *)(v115 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v115 + 56) = &type metadata for Int;
    *(void *)(v115 + 64) = &protocol witness table for Int;
    *(void *)(v115 + 3sub_6C3C(v0 + 2) = 1LL;
    uint64_t v116 = v150;
    static OSSignpostID.exclusive.getter(v115);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v112,  &dword_0,  v113,  "seConfirmInterruption",  21LL,  2LL,  v116,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v115);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v116, v152);
    uint64_t v118 = v156;
    uint64_t v117 = v157;
    uint64_t v119 = v139;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v120 = sub_6960(v117, (uint64_t)qword_2969C8);
    uint64_t v121 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v118 + 16))(v119, v120, v117);
    uint64_t v122 = (os_log_s *)Logger.logObject.getter(v121);
    os_log_type_t v123 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v124 = 0;
      _os_log_impl( &dword_0,  v122,  v123,  "ConfirmInterruptionFlow#rejectInterruptionLogic Dialog successfully generated, responding and exiting...",  v124,  2u);
      swift_slowDealloc(v124, -1LL, -1LL);
    }

    uint64_t v125 = (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v119, v117);
    uint64_t v126 = v140;
    static ExecuteResponse.complete()(v125);
    v153(v126);

    (*(void (**)(char *, void *))(v141 + 8))(v126, v142);
    return sub_1F6CC(v98, &qword_289340);
  }

  return result;
}

uint64_t sub_E624C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "ConfirmInterruptionFlow#disabledPlaybackLogic Reached logic...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 24);
  uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 32);
  sub_6EA8((void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver), v17);
  uint64_t v19 = static BundleIdentifiers.sentinelBundleIdentifier.getter();
  uint64_t v21 = v20;
  uint64_t v26 = 0LL;
  memset(v25, 0, sizeof(v25));
  uint64_t v22 = (void *)swift_allocObject(&unk_26F048, 48LL, 7LL);
  v22[2] = v4;
  _OWORD v22[3] = a1;
  v22[4] = a2;
  void v22[5] = a3;
  swift_retain(v4);
  id v23 = a1;
  swift_retain(a3);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v19, v21, v25, sub_E8264, v22, v17, v18);
  swift_bridgeObjectRelease(v21);
  swift_release(v22);
  return sub_1F6CC((uint64_t)v25, &qword_2860C0);
}

uint64_t sub_E6448(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = App.__allocating_init(appIdentifier:)(a1, a2);
  uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_playMediaCatDialogService);
  v31[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  _OWORD v31[4] = &off_272BD0;
  v31[0] = a4;
  uint64_t v14 = (void *)swift_allocObject(&unk_26F070, 56LL, 7LL);
  void v14[2] = a3;
  v14[3] = v12;
  v14[4] = a4;
  v14[5] = a5;
  v14[6] = a6;
  uint64_t v15 = v13[4];
  uint64_t v16 = v13[5];
  uint64_t v17 = v13[6];
  swift_retain_n(v12, 2LL);
  id v18 = a4;
  swift_retain(a3);
  swift_retain(a6);
  unint64_t v19 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  unint64_t v24 = 0xD000000000000026LL;
  unint64_t v25 = 0x8000000000220300LL;
  uint64_t v26 = v15;
  unint64_t v27 = v19;
  uint64_t v28 = v12;
  uint64_t v29 = v31;
  uint64_t v30 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_E827C,  (uint64_t)v14,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v16,  v17,  0xD000000000000026LL,  0x8000000000220300LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v21);
  swift_release(v14);
  swift_release_n(v12, 2LL);
  swift_bridgeObjectRelease(v19);
  return sub_1F6CC((uint64_t)v31, &qword_283FE8);
}

uint64_t sub_E6600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v143 = a6;
  uint64_t v144 = a5;
  uint64_t v138 = a3;
  uint64_t v139 = a4;
  uint64_t v147 = a2;
  uint64_t v132 = (void *)a1;
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v145 = *(void *)(v6 - 8);
  uint64_t v146 = v6;
  __chkstk_darwin(v6);
  uint64_t v142 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v140 = *(void *)(v8 - 8);
  uint64_t v141 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v130 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  unint64_t v129 = (char *)&v118 - v11;
  uint64_t v12 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v12);
  Swift::String v137 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v14);
  uint64_t v136 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v16);
  uint64_t v135 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v126 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v133 = *(v134 - 1);
  __chkstk_darwin(v134);
  uint64_t v20 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v131 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v21 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v23 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_289340);
  uint64_t v25 = __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v118 - v28;
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v132, (uint64_t)v32, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v132 = (void *)*v32;
    swift_getErrorValue(v132, v151, v150);
    v149[0] = Error.localizedDescription.getter(v150[1], v150[2]);
    v149[1] = v33;
    uint64_t v34 = String.init<A>(_:)( v149,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    uint64_t v36 = v35;
    uint64_t v37 = v21;
    uint64_t v38 = *(void (**)(char *, void, uint64_t))(v21 + 104);
    uint64_t v39 = v131;
    v38(v23, enum case for AdditionalMetricsDescription.ModuleName.cif (_:), v131);
    uint64_t v40 = v133;
    uint64_t v41 = v134;
    (*(void (**)(char *, void, void *))(v133 + 104))( v20,  enum case for AdditionalMetricsDescription.SourceFunction.dsblPlyLogic(_:),  v134);
    uint64_t v127 = v34;
    unint64_t v129 = v36;
    uint64_t v128 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v23,  v20,  v34,  v36,  0LL,  1LL);
    uint64_t v43 = v42;
    (*(void (**)(char *, void *))(v40 + 8))(v20, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v39);
    uint64_t v44 = *(void *)(v147
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v45 = *(void *)(v147
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                    + 32);
    sub_6EA8( (void *)(v147 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider),  v44);
    uint64_t v46 = enum case for ActivityType.canceled(_:);
    uint64_t v47 = type metadata accessor for ActivityType(0LL);
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v135, v46, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0LL, 1LL, v47);
    uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v51 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56LL))(v136, 1LL, 1LL, v50);
    uint64_t v52 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v137, v52, v53);
    uint64_t v56 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
    uint64_t v57 = v139;
    uint64_t v58 = INPlayMediaIntent.firstMediaItemType()(v56);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v138,  v57,  v49,  v51,  v55,  v128,  v43,  v58,  0,  v44,  v45);
    swift_bridgeObjectRelease(v43);
    sub_1F6CC(v55, &qword_2845A0);
    sub_1F6CC(v51, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v49, &qword_2845A8);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v59 = v141;
    uint64_t v60 = sub_6960(v141, (uint64_t)qword_2969C8);
    uint64_t v61 = v140;
    uint64_t v62 = v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v130, v60, v59);
    unint64_t v63 = (unint64_t)v129;
    uint64_t v64 = swift_bridgeObjectRetain(v129);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      v149[0] = v68;
      *(_DWORD *)uint64_t v67 = 136315138;
      swift_bridgeObjectRetain(v63);
      uint64_t v148 = sub_6978(v127, v63, v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, v149);
      swift_bridgeObjectRelease_n(v63, 3LL);
      _os_log_impl( &dword_0,  v65,  v66,  "ConfirmInterruptionFlow#disabledPlaybackLogic Could not properly create dialog %s, silently failing...",  v67,  0xCu);
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v63, 2LL);
    }

    uint64_t v116 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v62, v59);
    uint64_t v117 = v142;
    static ExecuteResponse.complete()(v116);
    v144(v117);
    swift_errorRelease(v132);
    return (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v117, v146);
  }

  else
  {
    uint64_t v69 = *(int *)(v24 + 48);
    uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v123 = *(void *)(v70 - 8);
    uint64_t v130 = *(char **)(v123 + 32);
    uint64_t v121 = v29;
    ((void (*)(char *, uint64_t *, uint64_t))v130)(v29, v32, v70);
    uint64_t v122 = v69;
    *(void *)&v29[v69] = *(uint64_t *)((char *)v32 + v69);
    uint64_t v132 = (void *)dispatch thunk of ViewFactory.makeCancellationView(cancelTemplate:snippets:canUseServerTTS:)( v29,  _swiftEmptyArrayStorage,  0LL);
    uint64_t v120 = v27;
    uint64_t v71 = v21;
    uint64_t v72 = v131;
    (*(void (**)(char *, void, uint64_t))(v21 + 104))( v23,  enum case for AdditionalMetricsDescription.ModuleName.cif (_:),  v131);
    uint64_t v73 = v133;
    os_log_type_t v74 = v134;
    (*(void (**)(char *, void, void *))(v133 + 104))( v20,  enum case for AdditionalMetricsDescription.SourceFunction.dsblPlyLogic(_:),  v134);
    uint64_t v119 = v24;
    uint64_t v75 = v127;
    uint64_t v76 = v126;
    uint64_t v77 = v128;
    (*(void (**)(char *, void, uint64_t))(v127 + 104))( v126,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v128);
    uint64_t v125 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v23,  v20,  v76,  0LL,  1LL);
    uint64_t v124 = v78;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
    (*(void (**)(char *, void *))(v73 + 8))(v20, v74);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v72);
    uint64_t v79 = v147;
    uint64_t v80 = *(void *)(v147
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v81 = *(void *)(v147
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider
                    + 32);
    uint64_t v134 = sub_6EA8( (void *)(v147 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider),  v80);
    uint64_t v82 = enum case for ActivityType.canceled(_:);
    uint64_t v83 = type metadata accessor for ActivityType(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v135, v82, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v86 = *(int *)(v119 + 48);
    uint64_t v87 = v123;
    uint64_t v88 = v120;
    uint64_t v89 = (uint64_t)v121;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v121, v70);
    uint64_t v90 = v89;
    *(void *)&v88[v86] = *(void *)(v89 + v122);
    uint64_t v91 = v136;
    ((void (*)(char *, char *, uint64_t))v130)(v136, v88, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v91, 0LL, 1LL, v70);
    uint64_t v92 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v93 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v94 = *(void *)(v93 - 8);
    uint64_t v95 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 104))(v137, v92, v93);
    uint64_t v96 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v95, 0LL, 1LL, v93);
    uint64_t v97 = v139;
    uint64_t v98 = INPlayMediaIntent.firstMediaItemType()(v96);
    uint64_t v99 = v124;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v138,  v97,  v85,  v91,  v95,  v125,  v124,  v98,  0,  v80,  v81);
    swift_bridgeObjectRelease(v99);
    sub_1F6CC(v95, &qword_2845A0);
    uint64_t v100 = (uint64_t)v91;
    uint64_t v101 = v132;
    sub_1F6CC(v100, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v85, &qword_2845A8);
    uint64_t v102 = (void *)(v79 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker);
    uint64_t v103 = *(void *)(v79 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 24);
    uint64_t v104 = v102[4];
    sub_6EA8(v102, v103);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v101, v103, v104);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v105 = v141;
    uint64_t v106 = sub_6960(v141, (uint64_t)qword_2969C8);
    uint64_t v107 = v140;
    uint64_t v108 = v129;
    uint64_t v109 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 16))(v129, v106, v105);
    uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
    os_log_type_t v111 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v112 = 0;
      _os_log_impl( &dword_0,  v110,  v111,  "ConfirmInterruptionFlow#disabledPlaybackLogic Dialog successfully generated, responding and exiting...",  v112,  2u);
      swift_slowDealloc(v112, -1LL, -1LL);
    }

    uint64_t v113 = (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v108, v105);
    uint64_t v114 = v142;
    static ExecuteResponse.complete()(v113);
    v144(v114);

    (*(void (**)(char *, uint64_t))(v145 + 8))(v114, v146);
    return sub_1F6CC(v90, &qword_289340);
  }

uint64_t sub_E71CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v28 = a2;
  uint64_t v29 = a4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "ConfirmInterruptionFlow#errorLogic Reached logic...", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = *(void *)(v6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 24);
  uint64_t v20 = *(void *)(v6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver + 32);
  sub_6EA8((void *)(v6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver), v19);
  uint64_t v21 = static BundleIdentifiers.sentinelBundleIdentifier.getter();
  uint64_t v23 = v22;
  uint64_t v31 = 0LL;
  memset(v30, 0, sizeof(v30));
  uint64_t v24 = (void *)swift_allocObject(&unk_26EFF8, 64LL, 7LL);
  uint64_t v25 = v28;
  _OWORD v24[2] = v6;
  void v24[3] = v25;
  v24[4] = a3;
  _OWORD v24[5] = a1;
  v24[6] = v29;
  v24[7] = a5;
  swift_retain(v6);
  swift_bridgeObjectRetain(a3);
  id v26 = a1;
  swift_retain(a5);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v21, v23, v30, sub_E81E8, v24, v19, v20);
  swift_bridgeObjectRelease(v23);
  swift_release(v24);
  return sub_1F6CC((uint64_t)v30, &qword_2860C0);
}

uint64_t sub_E73E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = App.__allocating_init(appIdentifier:)(a1, a2);
  uint64_t v17 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v17, v25);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  _StringGuts.grow(_:)(31LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v24[1] = 0x80000000002202E0LL;
  v19._uint64_t countAndFlagsBits = a4;
  v19._object = a5;
  String.append(_:)(v19);
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = 0xD00000000000001DLL;
  *(void *)(inited + 56) = 0x80000000002202E0LL;
  unint64_t v20 = sub_74D54(inited);
  void v24[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v24[4] = &off_272BD0;
  v24[0] = a6;
  uint64_t v21 = (void *)swift_allocObject(&unk_26F020, 40LL, 7LL);
  v21[2] = a3;
  _OWORD v21[3] = a7;
  v21[4] = a8;
  id v22 = a6;
  swift_retain(a3);
  swift_retain(a8);
  sub_1D00D8(v20, v16, (uint64_t)v24, (uint64_t)sub_E8224, (uint64_t)v21);
  swift_release(v21);
  swift_release(v16);
  swift_bridgeObjectRelease(v20);
  return sub_1F6CC((uint64_t)v24, &qword_283FE8);
}

uint64_t sub_E75C4(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v51 = a3;
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v17);
  Swift::String v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v19, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    uint64_t v20 = *v19;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v21 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v22 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v21, v8);
    swift_errorRetain(v20);
    uint64_t v23 = swift_errorRetain(v20);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v27 = swift_slowAlloc(32LL, -1LL);
      uint64_t v59 = v27;
      *(_DWORD *)id v26 = 136315138;
      swift_getErrorValue(v20, v58, v57);
      uint64_t v55 = Error.localizedDescription.getter(v57[1], v57[2]);
      uint64_t v56 = v28;
      uint64_t v29 = String.init<A>(_:)( &v55,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v31 = v30;
      uint64_t v55 = sub_6978(v29, v30, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease(v31);
      swift_errorRelease(v20);
      swift_errorRelease(v20);
      _os_log_impl( &dword_0,  v24,  v25,  "ConfirmInterruptionFlow#errorLogic Could not properly create dialog %s, silently failing...",  v26,  0xCu);
      swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1LL, -1LL);
      swift_slowDealloc(v26, -1LL, -1LL);

      uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v11, v8);
    }

    else
    {
      swift_errorRelease(v20);
      swift_errorRelease(v20);

      uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v8);
    }

    uint64_t v47 = v49;
    static ExecuteResponse.complete()(v32);
    v51(v47);
    swift_errorRelease(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v47, v53);
  }

  else
  {
    uint64_t v33 = *(int *)(v14 + 48);
    uint64_t v34 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v34 - 8) + 32LL))(v16, v19, v34);
    *(void *)&v16[v33] = *(uint64_t *)((char *)v19 + v33);
    uint64_t v35 = (void *)dispatch thunk of ViewFactory.makeCancellationView(cancelTemplate:snippets:canUseServerTTS:)( v16,  _swiftEmptyArrayStorage,  0LL);
    uint64_t v36 = *(void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 24);
    uint64_t v37 = *(void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker + 32);
    sub_6EA8((void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker), v36);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v35, v36, v37);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v39 = v54;
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16))(v13, v38, v8);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl( &dword_0,  v41,  v42,  "ConfirmInterruptionFlow#errorLogic Dialog successfully generated, responding and exiting...",  v43,  2u);
      swift_slowDealloc(v43, -1LL, -1LL);
    }

    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v8);
    uint64_t v45 = v49;
    static ExecuteResponse.complete()(v44);
    v51(v45);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v53);
    return sub_1F6CC((uint64_t)v16, &qword_289340);
  }

uint64_t sub_E7AD4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v4 = swift_bridgeObjectRetain(a1);
  sub_E7B48(v4, &v8);
  swift_bridgeObjectRelease(a1);
  uint64_t v5 = v8;
  uint64_t v6 = swift_bridgeObjectRetain(v8);
  a2(v6);
  return swift_bridgeObjectRelease_n(v5, 2LL);
}

uint64_t sub_E7B48(uint64_t a1, void **a2)
{
  uint64_t v4 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v5 = -1LL;
  if (v4 < 64) {
    uint64_t v5 = ~(-1LL << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain(a1);
  int64_t v8 = 0LL;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *a2;
    swift_bridgeObjectRetain_n(v15, 2LL);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    *a2 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v17 = sub_1FC6C(0LL, v17[2] + 1LL, 1, v17);
      *a2 = v17;
    }

    unint64_t v20 = v17[2];
    unint64_t v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      uint64_t v17 = sub_1FC6C((void *)(v19 > 1), v20 + 1, 1, v17);
      *a2 = v17;
    }

    void v17[2] = v20 + 1;
    uint64_t v21 = &v17[2 * v20];
    v21[4] = v16;
    v21[5] = v15;
    uint64_t result = swift_bridgeObjectRelease(v15);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1LL))
    {
      __break(1u);
      goto LABEL_29;
    }

    if (v11 >= v23) {
      return swift_release(a1);
    }
    unint64_t v12 = *(void *)(v22 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v23) {
        return swift_release(a1);
      }
      unint64_t v12 = *(void *)(v22 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v23) {
          return swift_release(a1);
        }
        unint64_t v12 = *(void *)(v22 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v23) {
            return swift_release(a1);
          }
          unint64_t v12 = *(void *)(v22 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }

void sub_E7D74(void *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  if (a1)
  {
    id v11 = a1;
    id v12 = [v11 mediaRouteIdentifier];
    if (v12)
    {
      int64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      uint64_t v16 = v15;

      a2(v14, v16);
      swift_bridgeObjectRelease(v16);
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v22 = sub_6960(v4, (uint64_t)qword_2969C8);
      uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v22, v4);
      uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v24, v25))
      {
        id v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v26 = 0;
        _os_log_impl( &dword_0,  v24,  v25,  "ConfirmInterruptionFlow#grabIdentifierIfProxyGroupPlayerHomePod Device has nil mediaRouteIdentifier, returning nil...",  v26,  2u);
        swift_slowDealloc(v26, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      a2(0LL, 0LL);
    }
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v17 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v17, v4);
    unint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl( &dword_0,  v19,  v20,  "ConfirmInterruptionFlow#grabIdentifierIfProxyGroupPlayerHomePod Received no primary device context, returning nil...",  v21,  2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    a2(0LL, 0LL);
  }

uint64_t sub_E803C()
{
  return type metadata accessor for ConfirmInterruptionFlow(0LL);
}

void sub_E8044(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    v4[2] = "\b";
    void v4[3] = &unk_217720;
    void v4[4] = &unk_217738;
    void v4[5] = &unk_217738;
    v4[6] = &unk_217738;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = &unk_217738;
    void v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = &unk_217738;
    void v4[11] = &unk_217738;
    v4[12] = &unk_217738;
    v4[13] = &unk_217738;
    v4[14] = &unk_217738;
    swift_updateClassMetadata2(a1, 256LL, 15LL, v4, a1 + 80);
  }

uint64_t getEnumTagSinglePayload for ConfirmInterruptionFlow.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for ConfirmInterruptionFlow.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0LL;
    *(_BYTE *)(result + sub_6C3C(v0 + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_E813C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_E8158(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(_BYTE *)(result + sub_6C3C(v0 + 8) = 1;
  }

  else
  {
    *(_BYTE *)(result + sub_6C3C(v0 + 8) = 0;
  }

  return result;
}

ValueMetadata *type metadata accessor for ConfirmInterruptionFlow.State()
{
  return &type metadata for ConfirmInterruptionFlow.State;
}

uint64_t sub_E8188(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_E81AC()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_E81E8(uint64_t a1, uint64_t a2)
{
  return sub_E73E0( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void **)(v2 + 32),  *(void **)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_E81F8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_E8224(uint64_t a1)
{
  return sub_E75C4(a1, *(void *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_E8230()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_E8264(uint64_t a1, uint64_t a2)
{
  return sub_E6448(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_E8270()
{
  return sub_E82AC((void (*)(void))&_swift_release);
}

uint64_t sub_E827C(uint64_t a1)
{
  return sub_33EB8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_E6600);
}

uint64_t sub_E8288()
{
  return sub_E82AC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_E8294(uint64_t a1, uint64_t a2)
{
  return sub_E83D0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_E525C);
}

uint64_t sub_E82A0()
{
  return sub_E82AC((void (*)(void))&_swift_release);
}

uint64_t sub_E82AC(void (*a1)(void))
{
  swift_release(*(void *)(v1 + 48));
  return swift_deallocObject(v1, 56LL, 7LL);
}

uint64_t sub_E82F4(uint64_t a1)
{
  return sub_33EB8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_E53F8);
}

uint64_t sub_E8300()
{
  return sub_E832C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_E830C(uint64_t a1, uint64_t a2)
{
  return sub_E3CB4( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void **)(v2 + 32),  *(_BYTE *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_E8320()
{
  return sub_E832C((void (*)(void))&_swift_release);
}

uint64_t sub_E832C(void (*a1)(void))
{
  swift_release(*(void *)(v1 + 56));
  return swift_deallocObject(v1, 64LL, 7LL);
}

uint64_t sub_E8374(uint64_t a1)
{
  return sub_E3E58( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(unsigned __int8 *)(v1 + 40),  *(void (**)(char *))(v1 + 48),  *(void *)(v1 + 56));
}

uint64_t sub_E8388()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_E83C4(uint64_t a1, uint64_t a2)
{
  return sub_E83D0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_E3490);
}

uint64_t sub_E83D0( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_E83E4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_E8408(void *a1)
{
}

uint64_t sub_E8418(uint64_t a1)
{
  return sub_E7AD4(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_E8420()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_E845C(char a1)
{
  return sub_E2D58( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void (**)(char *))(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t sub_E846C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v30 = a3;
  unint64_t v31 = a2;
  uint64_t v27 = a1;
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = static os_signpost_type_t.event.getter(v12);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v16 = qword_296AA0;
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v18 = swift_allocObject(v17, 72LL, 7LL);
  *(_OWORD *)(v18 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(v18 + 56) = &type metadata for Int;
  *(void *)(v18 + 64) = &protocol witness table for Int;
  *(void *)(v18 + 3sub_6C3C(v0 + 2) = 5LL;
  static OSSignpostID.exclusive.getter(v18);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v15,  &dword_0,  v16,  "seConfirmInterruption",  21LL,  2LL,  v14,  "status=%d enableTelemetry=YES",  29);
  swift_bridgeObjectRelease(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl( &dword_0,  v21,  v22,  "ConfirmInterruptionFlow#logNoInterruptionAndContinueToPlayback No interruption of other devices happening, executi ng PlayMediaRCHFlowWrapper...",  v23,  2u);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v32 = v27;
  uint64_t v24 = type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
  uint64_t v25 = sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
  static ExecuteResponse.complete<A>(next:)(&v32, v24, v25);
  v31(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v5, v29);
}

uint64_t sub_E8770()
{
  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_E87B4(uint64_t a1)
{
  return sub_E2A74( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_E87C8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_E87F4(uint64_t a1, uint64_t a2)
{
  return sub_E1950(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_E8808()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = swift_retain_n(v0, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = 0xD000000000000013LL;
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v11 = 136315138;
    unint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state);
    if (v12)
    {
      if (v12 == 1)
      {
        unint64_t v14 = 0xE700000000000000LL;
        uint64_t v10 = 0x74706D6F72702ELL;
        goto LABEL_13;
      }

      if (v12 != 2)
      {
        uint64_t v25 = 0x65766C6F7365722ELL;
        unint64_t v26 = 0xEA00000000002864LL;
        sub_ED670(v12);
        uint64_t v15 = swift_retain(v12);
        v24[0] = App.appIdentifier.getter(v15);
        v24[1] = v16;
        uint64_t v17 = sub_6C5C(&qword_284600);
        v18._uint64_t countAndFlagsBits = String.init<A>(describing:)(v24, v17);
        object = v18._object;
        String.append(_:)(v18);
        swift_bridgeObjectRelease(object);
        v20._uint64_t countAndFlagsBits = 41LL;
        v20._object = (void *)0xE100000000000000LL;
        String.append(_:)(v20);
        sub_ED680(v12);
        sub_ED680(v12);
        uint64_t v10 = v25;
        unint64_t v14 = v26;
        goto LABEL_13;
      }

      uint64_t v10 = 0xD000000000000014LL;
      uint64_t v13 = ".appResolutionFailed";
    }

    else
    {
      uint64_t v13 = ".awaitingResolution";
    }

    unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000LL;
LABEL_13:
    uint64_t v25 = sub_6978(v10, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v14);
    _os_log_impl(&dword_0, v8, v9, "AppResolutionFlow transitioned to state %s", v11, 0xCu);
    uint64_t v21 = v23;
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  swift_release_n(v0, 2LL);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_E8AE4(unint64_t a1)
{
  uint64_t result = 0xD000000000000013LL;
  if (a1)
  {
    if (a1 == 1)
    {
      return 0x74706D6F72702ELL;
    }

    else if (a1 == 2)
    {
      return 0xD000000000000014LL;
    }

    else
    {
      uint64_t v10 = 0x65766C6F7365722ELL;
      unint64_t v11 = 0xEA00000000002864LL;
      unint64_t v3 = sub_ED670(a1);
      v9[0] = App.appIdentifier.getter(v3);
      v9[1] = v4;
      uint64_t v5 = sub_6C5C(&qword_284600);
      v6._uint64_t countAndFlagsBits = String.init<A>(describing:)(v9, v5);
      object = v6._object;
      String.append(_:)(v6);
      swift_bridgeObjectRelease(object);
      v8._uint64_t countAndFlagsBits = 41LL;
      v8._object = (void *)0xE100000000000000LL;
      String.append(_:)(v8);
      sub_ED680(a1);
      return v10;
    }
  }

  return result;
}

uint64_t sub_E8BE0()
{
  return sub_E8AE4(*v0);
}

double sub_E8BEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_E8C40(a1, a2, a3, a4);
}

double sub_E8C40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v276 = a3;
  uint64_t v253 = a1;
  os_log_t v248 = (void *)type metadata accessor for Logger(0LL);
  unint64_t v6 = *(v248 - 1);
  __chkstk_darwin(v248);
  Swift::String v8 = (char *)&v238 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v246 = type metadata accessor for TCCProvider(0LL);
  uint64_t v245 = *(void *)(v246 - 8);
  uint64_t v9 = __chkstk_darwin(v246);
  id v244 = (char *)&v238 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v266 = (char *)&v238 - v11;
  uint64_t v252 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v12 = *(void *)(v252 - 8);
  uint64_t v13 = __chkstk_darwin(v252);
  uint64_t v15 = (char *)&v238 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v238 - v16;
  uint64_t v271 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v265 = *(void (***)(char *, char *, uint64_t))(v271 - 8);
  uint64_t v18 = __chkstk_darwin(v271);
  uint64_t v243 = (char *)&v238 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v264 = (char *)&v238 - v20;
  unint64_t v263 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v262 = *(void *)(v263 - 8);
  uint64_t v21 = __chkstk_darwin(v263);
  id v242 = (char *)&v238 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v261 = (char *)&v238 - v23;
  uint64_t v270 = type metadata accessor for UserPreferenceProvider(0LL);
  uint64_t v260 = *(void *)(v270 - 8);
  uint64_t v24 = __chkstk_darwin(v270);
  uint64_t v256 = (uint64_t)&v238 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v259 = (char *)&v238 - v26;
  uint64_t v269 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v258 = *(void *)(v269 - 8);
  uint64_t v27 = __chkstk_darwin(v269);
  uint64_t v255 = (uint64_t)&v238 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27);
  uint64_t v257 = (char *)&v238 - v29;
  uint64_t v250 = (void *)type metadata accessor for StringsFileResolver(0LL);
  uint64_t v30 = (char *)*(v250 - 1);
  uint64_t v31 = __chkstk_darwin(v250);
  uint64_t v249 = (uint64_t)&v238 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  uint64_t v34 = (void (**)(char *, char *, uint64_t))((char *)&v238 - v33);
  uint64_t v272 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v268 = *(void *)(v272 - 8);
  uint64_t v35 = __chkstk_darwin(v272);
  uint64_t v267 = (char *)&v238 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v238 - v37;
  uint64_t v39 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v39);
  uint64_t v275 = (void (*)(char *, uint64_t))((char *)&v238 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v41 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v42 = swift_dynamicCastObjCClass(a2, v41);
  uint64_t v254 = (uint64_t *)a4;
  uint64_t v274 = v17;
  uint64_t v251 = v15;
  uint64_t v273 = v12;
  if (v42)
  {
    uint64_t v43 = type metadata accessor for PlayMediaCatDialogService();
    uint64_t v44 = (void *)swift_allocObject(v43, 56LL, 7LL);
    v44[6] = 0xEF746E65746E4961LL;
    _OWORD v44[2] = 0xD000000000000011LL;
    v44[3] = 0x800000000021D860LL;
    v44[5] = 0x6964654D79616C50LL;
    uint64_t v45 = v276;
    v44[4] = v276;
    uint64_t v46 = type metadata accessor for DucTemplatingLocalContext(0LL);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))( v275,  1LL,  1LL,  v46);
    unint64_t v241 = sub_7F548(&_swiftEmptyArrayStorage);
    swift_retain_n(v45, 2LL);
    os_log_t v248 = v44;
    swift_retain(v44);
    uint64_t v47 = static AceService.current.getter(&v277);
    uint64_t v48 = static FeatureFlagProvider.shared.getter(v47);
    static StringsFileResolver.shared.getter(v48);
    uint64_t v49 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
    uint64_t v240 = static SiriKitTaskLoggingProvider.shared.getter(v49);
    uint64_t v50 = v38;
    if (qword_2839A0 != -1) {
      swift_once(&qword_2839A0, sub_1EF810);
    }
    uint64_t v51 = qword_296C50;
    swift_retain(qword_296C50);
    static ExecutorProvider.shared.getter(&v289);
    uint64_t v52 = type metadata accessor for DialogHistoryProvider();
    uint64_t v287 = v52;
    uint64_t v288 = &off_275B30;
    uint64_t v286 = v51;
    uint64_t v53 = type metadata accessor for PlayMediaDialogProvider(0LL);
    uint64_t v238 = (void *)swift_allocObject(v53, 288LL, 7LL);
    uint64_t v54 = sub_1094C((uint64_t)&v286, v52);
    uint64_t v239 = &v238;
    __chkstk_darwin(v54);
    uint64_t v56 = (uint64_t *)((char *)&v238 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    (*(void (**)(uint64_t *))(v57 + 16))(v56);
    uint64_t v58 = *v56;
    uint64_t v59 = (uint64_t)v267;
    uint64_t v60 = v272;
    uint64_t v247 = *(void (**)(char *, char *, uint64_t))(v268 + 16);
    v247(v267, v38, v272);
    uint64_t v61 = (void (*)(uint64_t, void, void *))*((void *)v30 + 2);
    uint64_t v62 = v249;
    unint64_t v63 = v30;
    uint64_t v64 = v250;
    v61(v249, v34, v250);
    swift_retain(v51);
    uint64_t v65 = v240;
    swift_retain(v240);
    uint64_t v237 = v58;
    uint64_t v66 = (uint64_t)v248;
    uint64_t v276 = sub_EE5CC((uint64_t)v248, (uint64_t)v276, v241, &v277, (uint64_t)v275, v59, v62, v65, v237, &v289, v238);
    swift_release(v66);
    uint64_t v67 = (void (*)(void (**)(char *, char *, uint64_t), void *))*((void *)v63 + 1);
    uint64_t v68 = (uint64_t)v50;
    v67(v34, v64);
    uint64_t v275 = *(void (**)(char *, uint64_t))(v268 + 8);
    v275(v50, v60);
    swift_release(v65);
    sub_6C3C(&v286);
    swift_release(v51);
    type metadata accessor for PlayMediaAppSelector(0LL);
    uint64_t v268 = static PlayMediaAppSelector.shared.getter();
    uint64_t v69 = v59;
    if (qword_2838F0 != -1) {
      swift_once(&qword_2838F0, sub_14EB48);
    }
    uint64_t v70 = v257;
    uint64_t v71 = static DeviceProvider.shared.getter();
    uint64_t v72 = static FeatureFlagProvider.shared.getter(v71);
    uint64_t v73 = v259;
    uint64_t v74 = static UserPreferenceProvider.shared.getter(v72);
    uint64_t v75 = v261;
    uint64_t v76 = SubscriptionProvider.init()(v74);
    uint64_t v77 = v264;
    static InstalledAppProvider.shared.getter(v76);
    type metadata accessor for MediaPlaybackLite(0LL);
    unint64_t v241 = static MediaPlaybackLite.shared.getter();
    uint64_t v249 = type metadata accessor for SelfEmitter(0LL);
    uint64_t v78 = static ExecutorProvider.shared.getter(&v289);
    uint64_t v79 = v274;
    uint64_t v80 = static NowPlayingProvider.shared.getter(v78);
    uint64_t v81 = v266;
    static TCCProvider.shared.getter(v80);
    uint64_t v82 = type metadata accessor for PlayMediaAppResolver(0LL);
    uint64_t v239 = (void *)swift_allocObject(v82, *(unsigned int *)(v82 + 48), *(unsigned __int16 *)(v82 + 52));
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v277);
    (*(void (**)(uint64_t, char *, uint64_t))(v258 + 16))(v255, v70, v269);
    v247((char *)v69, v50, v60);
    (*(void (**)(uint64_t, char *, uint64_t))(v260 + 16))(v256, v73, v270);
    uint64_t v83 = (uint64_t)v242;
    (*(void (**)(char *, char *, unint64_t))(v262 + 16))(v242, v75, v263);
    uint64_t v84 = (uint64_t)v243;
    uint64_t v85 = v69;
    v265[2](v243, v77, v271);
    uint64_t v240 = v68;
    uint64_t v250 = *(void **)(v273 + 16);
    uint64_t v86 = (uint64_t)v251;
    uint64_t v87 = v252;
    ((void (*)(char *, char *, uint64_t))v250)(v251, v79, v252);
    uint64_t v88 = v245;
    uint64_t v89 = (uint64_t)v244;
    uint64_t v90 = v246;
    (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v244, v81, v246);
    uint64_t v91 = v268;
    swift_retain(v268);
    uint64_t v92 = v241;
    swift_retain(v241);
    uint64_t v256 = sub_ED6D4( v91,  &v277,  v255,  v85,  v256,  v83,  v84,  v92,  v249,  (uint64_t)&protocol witness table for SelfEmitter,  &v289,  v86,  v89,  v239);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v266, v90);
    uint64_t v273 = *(void *)(v273 + 8);
    uint64_t v93 = v274;
    ((void (*)(char *, uint64_t))v273)(v274, v87);
    swift_release(v92);
    ((void (*)(char *, uint64_t))v265[1])(v264, v271);
    (*(void (**)(char *, unint64_t))(v262 + 8))(v261, v263);
    (*(void (**)(char *, uint64_t))(v260 + 8))(v259, v270);
    uint64_t v94 = v240;
    uint64_t v95 = v272;
    uint64_t v96 = (void (*)(uint64_t, uint64_t))v275;
    v275((char *)v240, v272);
    (*(void (**)(char *, uint64_t))(v258 + 8))(v257, v269);
    swift_release(v91);
    uint64_t v97 = swift_retain(v276);
    uint64_t v98 = static NowPlayingProvider.shared.getter(v97);
    static FeatureFlagProvider.shared.getter(v98);
    static AceService.current.getter(&v289);
    uint64_t v99 = sub_6C5C(&qword_288D58);
    uint64_t v100 = swift_allocObject(v99, 217LL, 7LL);
    uint64_t v101 = v86;
    ((void (*)(uint64_t, char *, uint64_t))v250)(v86, v93, v87);
    uint64_t v102 = v85;
    uint64_t v103 = v85;
    uint64_t v104 = v95;
    v247((char *)v103, (char *)v94, v95);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v277);
    uint64_t v105 = v276;
    uint64_t v106 = sub_EE2B8(v256, (uint64_t)v276, v101, v102, &v277, &v289, (uint64_t)sub_ED690, 0LL, 1, v100);
    v96(v94, v104);
    ((void (*)(char *, uint64_t))v273)(v93, v87);
    *(void *)&__int128 v277 = v106;
    unint64_t v107 = sub_EE590();
    uint64_t v108 = sub_21318(&qword_288D60, &qword_288D58, (uint64_t)&unk_21AA24);
    uint64_t v109 = static AppFlowFactory.makeOnDeviceAppResolutionFlow<A, B>(strategy:input:)(&v277, v253, v99, v107, v108);
    uint64_t v110 = sub_6C5C(&qword_288D20);
    os_log_type_t v111 = v254;
    v254[3] = v110;
    v111[4] = sub_21318( &qword_288D28,  &qword_288D20,  (uint64_t)&protocol conformance descriptor for AnyAppResolutionFlow<A>);
    swift_release(v106);
    swift_release(v105);
    swift_release(v248);
    uint64_t *v111 = v109;
    return result;
  }

  uint64_t v264 = v8;
  unint64_t v263 = v6;
  uint64_t v113 = (uint64_t)v248;
  uint64_t v265 = v34;
  uint64_t v266 = v30;
  uint64_t v114 = v276;
  uint64_t v115 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  if (swift_dynamicCastObjCClass(a2, v115))
  {
    uint64_t v116 = type metadata accessor for AddMediaCatDialogService();
    uint64_t v117 = (void *)swift_allocObject(v116, 56LL, 7LL);
    *((_BYTE *)v117 + 55) = -18;
    v117[2] = 0xD000000000000011LL;
    v117[3] = 0x800000000021D860LL;
    v117[4] = v114;
    strcpy((char *)v117 + 40, "AddMediaIntent");
    uint64_t v118 = type metadata accessor for DucTemplatingLocalContext(0LL);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8)
                                                                                            + 56LL))( v275,  1LL,  1LL,  v118);
    unint64_t v263 = sub_7F548(&_swiftEmptyArrayStorage);
    swift_retain_n(v114, 2LL);
    swift_retain(v117);
    uint64_t v119 = static AceService.current.getter(&v277);
    uint64_t v120 = v38;
    uint64_t v121 = static FeatureFlagProvider.shared.getter(v119);
    uint64_t v122 = v265;
    static StringsFileResolver.shared.getter(v121);
    uint64_t v123 = type metadata accessor for AddMediaDialogProvider(0LL);
    uint64_t v124 = (void *)swift_allocObject(v123, 168LL, 7LL);
    uint64_t v125 = v268;
    uint64_t v126 = (uint64_t)v267;
    uint64_t v127 = v272;
    uint64_t v264 = *(char **)(v268 + 16);
    ((void (*)(char *, char *, uint64_t))v264)(v267, v120, v272);
    uint64_t v128 = v266;
    uint64_t v129 = v249;
    uint64_t v130 = v250;
    (*((void (**)(uint64_t, void, void *))v266 + 2))(v249, v122, v250);
    uint64_t v131 = v129;
    uint64_t v132 = v127;
    uint64_t v133 = sub_EE3F4((uint64_t)v117, (uint64_t)v276, v263, &v277, (uint64_t)v275, v126, v131, v124);
    uint64_t v276 = v117;
    swift_release(v117);
    uint64_t v134 = v122;
    uint64_t v135 = v120;
    (*((void (**)(void (**)(char *, char *, uint64_t), void *))v128 + 1))(v134, v130);
    uint64_t v275 = *(void (**)(char *, uint64_t))(v125 + 8);
    v275(v120, v127);
    if (qword_2838F0 != -1) {
      swift_once(&qword_2838F0, sub_14EB48);
    }
    uint64_t v278 = &type metadata for StringsBackedAppNameResolver;
    unint64_t v279 = sub_15780();
    *(void *)&__int128 v277 = swift_allocObject(&unk_26F348, 96LL, 7LL);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v277 + 16);
    uint64_t v290 = v269;
    v291 = &protocol witness table for DeviceProvider;
    sub_10974(&v289);
    static DeviceProvider.shared.getter();
    uint64_t v287 = v127;
    uint64_t v288 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
    uint64_t v136 = sub_10974(&v286);
    static FeatureFlagProvider.shared.getter(v136);
    uint64_t v284 = v270;
    uint64_t v285 = &protocol witness table for UserPreferenceProvider;
    sub_10974(&v283);
    ((void (*)(void))static UserPreferenceProvider.shared.getter)();
    uint64_t v281 = v271;
    uint64_t v282 = &protocol witness table for InstalledAppProvider;
    Swift::String v137 = sub_10974(&v280);
    static InstalledAppProvider.shared.getter(v137);
    uint64_t v138 = sub_6C5C(&qword_288D40);
    uint64_t v139 = (void *)swift_allocObject(v138, *(unsigned int *)(v138 + 48), *(unsigned __int16 *)(v138 + 52));
    uint64_t v140 = class metadata base offset for CommonAppResolver;
    uint64_t v141 = (char *)v139 + *(void *)(class metadata base offset for CommonAppResolver + *v139 + 8);
    strcpy(v141, "resolutionType");
    v141[15] = -18;
    sub_157C4((uint64_t)&v277, (uint64_t)v139 + *(void *)(v140 + *v139 + 16));
    sub_157C4( (uint64_t)&v289,  (uint64_t)v139 + *(void *)(class metadata base offset for CommonAppResolver + *v139 + 24));
    sub_157C4( (uint64_t)&v286,  (uint64_t)v139 + *(void *)(class metadata base offset for CommonAppResolver + *v139 + 32));
    sub_157C4( (uint64_t)&v283,  (uint64_t)v139 + *(void *)(class metadata base offset for CommonAppResolver + *v139 + 40));
    uint64_t v142 = sub_157C4( (uint64_t)&v280,  (uint64_t)v139 + *(void *)(class metadata base offset for CommonAppResolver + *v139 + 48));
    uint64_t v271 = InstrumentedAppResolutionService.init()(v142);
    sub_6C3C(&v280);
    sub_6C3C(&v283);
    sub_6C3C(&v286);
    sub_6C3C(&v289);
    sub_6C3C(&v277);
    uint64_t v143 = swift_retain(v133);
    uint64_t v144 = v274;
    uint64_t v145 = static NowPlayingProvider.shared.getter(v143);
    static FeatureFlagProvider.shared.getter(v145);
    static AceService.current.getter(&v289);
    uint64_t v146 = sub_6C5C(&qword_288D48);
    uint64_t v147 = swift_allocObject(v146, 217LL, 7LL);
    uint64_t v148 = v273;
    uint64_t v149 = (uint64_t)v251;
    uint64_t v150 = v252;
    (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v251, v144, v252);
    uint64_t v151 = (uint64_t)v267;
    ((void (*)(char *, char *, uint64_t))v264)(v267, v135, v132);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v277);
    uint64_t v152 = sub_EE2B8(v271, (uint64_t)v133, v149, v151, &v277, &v289, (uint64_t)sub_ED690, 0LL, 1, v147);
    v275(v135, v132);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v144, v150);
    *(void *)&__int128 v277 = v152;
    unint64_t v153 = sub_EE590();
    uint64_t v154 = (unint64_t *)&unk_288D50;
    uint64_t v155 = &qword_288D48;
LABEL_19:
    uint64_t v226 = sub_21318(v154, v155, (uint64_t)&unk_21AA24);
    uint64_t v227 = static AppFlowFactory.makeOnDeviceAppResolutionFlow<A, B>(strategy:input:)(&v277, v253, v146, v153, v226);
    uint64_t v228 = sub_6C5C(&qword_288D20);
    uint64_t v229 = v254;
    v254[3] = v228;
    v229[4] = sub_21318( &qword_288D28,  &qword_288D20,  (uint64_t)&protocol conformance descriptor for AnyAppResolutionFlow<A>);
    swift_release(v152);
    swift_release(v133);
    swift_release(v276);
    *uint64_t v229 = v227;
    return result;
  }

  uint64_t v156 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
  if (swift_dynamicCastObjCClass(a2, v156))
  {
    uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
    uint64_t v158 = (void *)swift_allocObject(updated, 56LL, 7LL);
    v158[2] = 0xD000000000000011LL;
    v158[3] = 0x800000000021D860LL;
    v158[5] = 0xD000000000000019LL;
    v158[6] = 0x800000000021E0C0LL;
    v158[4] = v114;
    uint64_t v159 = type metadata accessor for DucTemplatingLocalContext(0LL);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8)
                                                                                            + 56LL))( v275,  1LL,  1LL,  v159);
    unint64_t v263 = sub_7F548(&_swiftEmptyArrayStorage);
    swift_retain_n(v114, 2LL);
    swift_retain(v158);
    uint64_t v160 = static AceService.current.getter(&v277);
    uint64_t v161 = v38;
    uint64_t v162 = static FeatureFlagProvider.shared.getter(v160);
    uint64_t v163 = v265;
    static StringsFileResolver.shared.getter(v162);
    uint64_t v164 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
    uint64_t v165 = (void *)swift_allocObject(v164, 168LL, 7LL);
    uint64_t v166 = v268;
    uint64_t v167 = (uint64_t)v267;
    uint64_t v168 = v272;
    uint64_t v264 = *(char **)(v268 + 16);
    ((void (*)(char *, char *, uint64_t))v264)(v267, v161, v272);
    uint64_t v169 = v266;
    uint64_t v170 = v249;
    uint64_t v171 = v250;
    (*((void (**)(uint64_t, void, void *))v266 + 2))(v249, v163, v250);
    uint64_t v172 = v170;
    uint64_t v173 = v168;
    uint64_t v133 = sub_EE3F4((uint64_t)v158, (uint64_t)v276, v263, &v277, (uint64_t)v275, v167, v172, v165);
    uint64_t v276 = v158;
    swift_release(v158);
    uint64_t v174 = v163;
    uint64_t v175 = v161;
    (*((void (**)(void (**)(char *, char *, uint64_t), void *))v169 + 1))(v174, v171);
    uint64_t v275 = *(void (**)(char *, uint64_t))(v166 + 8);
    v275(v161, v168);
    if (qword_2838F0 != -1) {
      swift_once(&qword_2838F0, sub_14EB48);
    }
    uint64_t v278 = &type metadata for StringsBackedAppNameResolver;
    unint64_t v279 = sub_15780();
    *(void *)&__int128 v277 = swift_allocObject(&unk_26F348, 96LL, 7LL);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v277 + 16);
    uint64_t v290 = v269;
    v291 = &protocol witness table for DeviceProvider;
    sub_10974(&v289);
    static DeviceProvider.shared.getter();
    uint64_t v287 = v168;
    uint64_t v288 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
    uint64_t v176 = sub_10974(&v286);
    static FeatureFlagProvider.shared.getter(v176);
    uint64_t v284 = v270;
    uint64_t v285 = &protocol witness table for UserPreferenceProvider;
    sub_10974(&v283);
    ((void (*)(void))static UserPreferenceProvider.shared.getter)();
    uint64_t v281 = v271;
    uint64_t v282 = &protocol witness table for InstalledAppProvider;
    uint64_t v177 = sub_10974(&v280);
    static InstalledAppProvider.shared.getter(v177);
    uint64_t v178 = sub_6C5C(&qword_284F18);
    uint64_t v179 = (void *)swift_allocObject(v178, *(unsigned int *)(v178 + 48), *(unsigned __int16 *)(v178 + 52));
    uint64_t v180 = class metadata base offset for CommonAppResolver;
    uint64_t v181 = (char *)v179 + *(void *)(class metadata base offset for CommonAppResolver + *v179 + 8);
    strcpy(v181, "resolutionType");
    v181[15] = -18;
    sub_157C4((uint64_t)&v277, (uint64_t)v179 + *(void *)(v180 + *v179 + 16));
    sub_157C4( (uint64_t)&v289,  (uint64_t)v179 + *(void *)(class metadata base offset for CommonAppResolver + *v179 + 24));
    sub_157C4( (uint64_t)&v286,  (uint64_t)v179 + *(void *)(class metadata base offset for CommonAppResolver + *v179 + 32));
    sub_157C4( (uint64_t)&v283,  (uint64_t)v179 + *(void *)(class metadata base offset for CommonAppResolver + *v179 + 40));
    uint64_t v182 = sub_157C4( (uint64_t)&v280,  (uint64_t)v179 + *(void *)(class metadata base offset for CommonAppResolver + *v179 + 48));
    uint64_t v271 = InstrumentedAppResolutionService.init()(v182);
    sub_6C3C(&v280);
    sub_6C3C(&v283);
    sub_6C3C(&v286);
    sub_6C3C(&v289);
    sub_6C3C(&v277);
    uint64_t v183 = swift_retain(v133);
    uint64_t v184 = v274;
    uint64_t v185 = static NowPlayingProvider.shared.getter(v183);
    static FeatureFlagProvider.shared.getter(v185);
    static AceService.current.getter(&v289);
    uint64_t v146 = sub_6C5C(&qword_288D30);
    uint64_t v186 = swift_allocObject(v146, 217LL, 7LL);
    uint64_t v187 = v273;
    uint64_t v188 = (uint64_t)v251;
    uint64_t v189 = v252;
    (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v251, v184, v252);
    uint64_t v190 = (uint64_t)v267;
    ((void (*)(char *, char *, uint64_t))v264)(v267, v175, v173);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v277);
    uint64_t v152 = sub_EE2B8(v271, (uint64_t)v133, v188, v190, &v277, &v289, (uint64_t)sub_ED690, 0LL, 1, v186);
    v275(v175, v173);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v184, v189);
    *(void *)&__int128 v277 = v152;
    unint64_t v153 = sub_EE590();
    uint64_t v154 = (unint64_t *)&unk_288D38;
    uint64_t v155 = &qword_288D30;
    goto LABEL_19;
  }

  uint64_t v191 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
  if (swift_dynamicCastObjCClass(a2, v191))
  {
    uint64_t v192 = type metadata accessor for SearchForMediaCatDialogService();
    id v193 = (void *)swift_allocObject(v192, 56LL, 7LL);
    v193[2] = 0xD000000000000011LL;
    v193[3] = 0x800000000021D860LL;
    v193[5] = 0xD000000000000014LL;
    v193[6] = 0x800000000021FFF0LL;
    v193[4] = v114;
    uint64_t v194 = type metadata accessor for DucTemplatingLocalContext(0LL);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v194 - 8)
                                                                                            + 56LL))( v275,  1LL,  1LL,  v194);
    unint64_t v263 = sub_7F548(&_swiftEmptyArrayStorage);
    swift_retain_n(v114, 2LL);
    swift_retain(v193);
    uint64_t v195 = static AceService.current.getter(&v277);
    unint64_t v196 = v38;
    uint64_t v197 = static FeatureFlagProvider.shared.getter(v195);
    double v198 = v265;
    static StringsFileResolver.shared.getter(v197);
    uint64_t v199 = type metadata accessor for SearchForMediaDialogProvider(0LL);
    __int128 v200 = (void *)swift_allocObject(v199, 168LL, 7LL);
    uint64_t v201 = v268;
    uint64_t v202 = (uint64_t)v267;
    uint64_t v203 = v272;
    uint64_t v264 = *(char **)(v268 + 16);
    ((void (*)(char *, char *, uint64_t))v264)(v267, v196, v272);
    id v204 = v266;
    uint64_t v205 = v249;
    Swift::String v206 = v250;
    (*((void (**)(uint64_t, void, void *))v266 + 2))(v249, v198, v250);
    uint64_t v207 = v205;
    uint64_t v208 = v203;
    uint64_t v133 = sub_EE3F4((uint64_t)v193, (uint64_t)v276, v263, &v277, (uint64_t)v275, v202, v207, v200);
    uint64_t v276 = v193;
    swift_release(v193);
    uint64_t v209 = v198;
    id v210 = v196;
    (*((void (**)(void (**)(char *, char *, uint64_t), void *))v204 + 1))(v209, v206);
    uint64_t v275 = *(void (**)(char *, uint64_t))(v201 + 8);
    v275(v196, v203);
    if (qword_2838F0 != -1) {
      swift_once(&qword_2838F0, sub_14EB48);
    }
    uint64_t v278 = &type metadata for StringsBackedAppNameResolver;
    unint64_t v279 = sub_15780();
    *(void *)&__int128 v277 = swift_allocObject(&unk_26F348, 96LL, 7LL);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v277 + 16);
    uint64_t v290 = v269;
    v291 = &protocol witness table for DeviceProvider;
    sub_10974(&v289);
    static DeviceProvider.shared.getter();
    uint64_t v287 = v203;
    uint64_t v288 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
    uint64_t v211 = sub_10974(&v286);
    static FeatureFlagProvider.shared.getter(v211);
    uint64_t v284 = v270;
    uint64_t v285 = &protocol witness table for UserPreferenceProvider;
    sub_10974(&v283);
    ((void (*)(void))static UserPreferenceProvider.shared.getter)();
    uint64_t v281 = v271;
    uint64_t v282 = &protocol witness table for InstalledAppProvider;
    uint64_t v212 = sub_10974(&v280);
    static InstalledAppProvider.shared.getter(v212);
    uint64_t v213 = sub_6C5C(&qword_288D08);
    id v214 = (void *)swift_allocObject(v213, *(unsigned int *)(v213 + 48), *(unsigned __int16 *)(v213 + 52));
    uint64_t v215 = class metadata base offset for CommonAppResolver;
    unint64_t v216 = (char *)v214 + *(void *)(class metadata base offset for CommonAppResolver + *v214 + 8);
    strcpy(v216, "resolutionType");
    v216[15] = -18;
    sub_157C4((uint64_t)&v277, (uint64_t)v214 + *(void *)(v215 + *v214 + 16));
    sub_157C4( (uint64_t)&v289,  (uint64_t)v214 + *(void *)(class metadata base offset for CommonAppResolver + *v214 + 24));
    sub_157C4( (uint64_t)&v286,  (uint64_t)v214 + *(void *)(class metadata base offset for CommonAppResolver + *v214 + 32));
    sub_157C4( (uint64_t)&v283,  (uint64_t)v214 + *(void *)(class metadata base offset for CommonAppResolver + *v214 + 40));
    uint64_t v217 = sub_157C4( (uint64_t)&v280,  (uint64_t)v214 + *(void *)(class metadata base offset for CommonAppResolver + *v214 + 48));
    uint64_t v271 = InstrumentedAppResolutionService.init()(v217);
    sub_6C3C(&v280);
    sub_6C3C(&v283);
    sub_6C3C(&v286);
    sub_6C3C(&v289);
    sub_6C3C(&v277);
    uint64_t v218 = swift_retain(v133);
    unint64_t v219 = v274;
    uint64_t v220 = static NowPlayingProvider.shared.getter(v218);
    static FeatureFlagProvider.shared.getter(v220);
    static AceService.current.getter(&v289);
    uint64_t v146 = sub_6C5C(&qword_288D10);
    uint64_t v221 = swift_allocObject(v146, 217LL, 7LL);
    uint64_t v222 = v273;
    uint64_t v223 = (uint64_t)v251;
    uint64_t v224 = v252;
    (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v251, v219, v252);
    uint64_t v225 = (uint64_t)v267;
    ((void (*)(char *, char *, uint64_t))v264)(v267, v210, v208);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v277);
    uint64_t v152 = sub_EE2B8(v271, (uint64_t)v133, v223, v225, &v277, &v289, (uint64_t)sub_ED690, 0LL, 1, v221);
    v275(v210, v208);
    (*(void (**)(char *, uint64_t))(v222 + 8))(v219, v224);
    *(void *)&__int128 v277 = v152;
    unint64_t v153 = sub_EE590();
    uint64_t v154 = (unint64_t *)&unk_288D18;
    uint64_t v155 = &qword_288D10;
    goto LABEL_19;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v230 = sub_6960(v113, (uint64_t)qword_2969C8);
  unint64_t v231 = v263;
  id v232 = v264;
  uint64_t v233 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v263 + 16))(v264, v230, v113);
  uint64_t v234 = (os_log_s *)Logger.logObject.getter(v233);
  os_log_type_t v235 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v234, v235))
  {
    uint64_t v236 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v236 = 0;
    _os_log_impl( &dword_0,  v234,  v235,  "AudioAppResolutionFlow#makeAppResolutinoFlow no app resolution flow returned",  v236,  2u);
    swift_slowDealloc(v236, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v231 + 8))(v232, v113);
  *(void *)(a4 + 3sub_6C3C(v0 + 2) = 0LL;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + swift_weakDestroy(v0 + 16) = 0u;
  return result;
}

uint64_t sub_EA9C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v24[-v8 - 8];
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "AppResolutionFlow#on Handling input", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = type metadata accessor for Input(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v9, a1, v19);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0LL, 1LL, v19);
  sub_88CFC((uint64_t)v9, (uint64_t)v7);
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_input;
  swift_beginAccess(v21, v24, 33LL, 0LL);
  sub_1B3B0((uint64_t)v7, v21);
  swift_endAccess(v24);
  return 1LL;
}

uint64_t sub_EABE4(void (*a1)(char *), uint64_t a2)
{
  uint64_t v183 = a1;
  uint64_t v184 = a2;
  uint64_t v3 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v181 = *(void (***)(void, void, void))(v3 - 8);
  uint64_t v182 = v3;
  __chkstk_darwin(v3);
  uint64_t v180 = (char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v176 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v174 = (char *)&v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v165 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v163 = (char *)&v159 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v170 = type metadata accessor for Date(0LL);
  uint64_t v169 = *(void *)(v170 - 8);
  uint64_t v7 = __chkstk_darwin(v170);
  uint64_t v167 = (char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v166 = v8;
  __chkstk_darwin(v7);
  uint64_t v168 = (char *)&v159 - v9;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v185 = v10;
  uint64_t v186 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v179 = (char *)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v171 = (char *)&v159 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v178 = (char *)&v159 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v173 = (char *)&v159 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v160 = (char *)&v159 - v21;
  __chkstk_darwin(v20);
  uint64_t v162 = (char *)&v159 - v22;
  uint64_t v177 = type metadata accessor for Parse(0LL);
  uint64_t v23 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v25 = (char *)&v159 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_6C5C(&qword_285BD0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v172 = (char *)&v159 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v159 - v29;
  uint64_t v31 = type metadata accessor for Input(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v159 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v159 - v36;
  uint64_t v38 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_input, v192, 0LL, 0LL);
  sub_FF10(v38, (uint64_t)v30, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1LL, v31) == 1)
  {
    sub_1F6CC((uint64_t)v30, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = v185;
    uint64_t v40 = sub_6960(v185, (uint64_t)qword_2969C8);
    uint64_t v41 = v186;
    uint64_t v42 = v179;
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v186 + 16))(v179, v40, v39);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_0, v44, v45, "AudioAppResolutionFlow#execute input is nil", v46, 2u);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
    type metadata accessor for App(0LL);
    uint64_t v47 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v49 = v180;
    uint64_t v48 = v181;
    uint64_t v50 = v182;
    ((void (**)(char *, void, uint64_t))v181)[13]( v180,  enum case for AdditionalMetricsDescription.StatusReason.appResolutionFailed(_:),  v182);
    sub_EC474(v47, 0LL, v49, 0x7475706E496C694ELL, 0xE800000000000000LL, (uint64_t)v183, v184);
    swift_release(v47);
    return ((uint64_t (*)(char *, uint64_t))v48[1])(v49, v50);
  }

  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v37, v30, v31);
  uint64_t v52 = v2;
  uint64_t v53 = *(void **)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_intent);
  uint64_t v54 = *(char **)(v32 + 16);
  uint64_t v161 = v37;
  uint64_t v179 = v54;
  uint64_t v55 = ((uint64_t (*)(char *, char *, uint64_t))v54)(v35, v37, v31);
  uint64_t v56 = v31;
  uint64_t v159 = v32;
  if (v53)
  {
    uint64_t v57 = *(void (**)(char *, uint64_t))(v32 + 8);
    id v58 = v53;
    v57(v35, v31);
  }

  else
  {
    Input.parse.getter(v55);
    id v58 = Parse.getSiriKitIntent(nowPlayingProvider:featureFlags:)( (void *)(v52 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nowPlayingProvider),  v52 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_featureFlags);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v177);
    uint64_t v57 = *(void (**)(char *, uint64_t))(v32 + 8);
    v57(v35, v31);
    if (!v58)
    {
      uint64_t v121 = v185;
      uint64_t v122 = v186;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v123 = sub_6960(v121, (uint64_t)qword_2969C8);
      uint64_t v124 = v171;
      uint64_t v125 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 16))(v171, v123, v121);
      uint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
      os_log_type_t v127 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v126, v127))
      {
        uint64_t v128 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v128 = 0;
        _os_log_impl(&dword_0, v126, v127, "AudioAppResolutionFlow#execute intent is nil", v128, 2u);
        swift_slowDealloc(v128, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v121);
      type metadata accessor for App(0LL);
      uint64_t v129 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
      uint64_t v131 = v180;
      uint64_t v130 = v181;
      uint64_t v132 = v182;
      ((void (**)(char *, void, uint64_t))v181)[13]( v180,  enum case for AdditionalMetricsDescription.StatusReason.appResolutionFailed(_:),  v182);
      sub_EC474(v129, 0LL, v131, 0x6E65746E496C694ELL, 0xE900000000000074LL, (uint64_t)v183, v184);
      swift_release(v129);
      ((void (*)(char *, uint64_t))v130[1])(v131, v132);
      uint64_t v76 = v161;
      uint64_t v77 = v56;
      return ((uint64_t (*)(char *, uint64_t))v57)(v76, v77);
    }
  }

  uint64_t v59 = v185;
  uint64_t v60 = v186;
  unint64_t v61 = *(void *)(v52 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state);
  if (v61 - 1 < 2)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v62 = sub_6960(v59, (uint64_t)qword_2969C8);
    uint64_t v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 16))(v178, v62, v59);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.error.getter();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v67 = v161;
    if (v66)
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl(&dword_0, v64, v65, "AudioAppResolutionFlow#execute App Resolution resulted in an error", v68, 2u);
      swift_slowDealloc(v68, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v178, v59);
    type metadata accessor for App(0LL);
    uint64_t v69 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v71 = v180;
    uint64_t v70 = v181;
    uint64_t v72 = v182;
    ((void (**)(char *, void, uint64_t))v181)[13]( v180,  enum case for AdditionalMetricsDescription.StatusReason.appResolutionFailed(_:),  v182);
    id v73 = v58;
    uint64_t v74 = (uint64_t)v58;
    id v75 = v73;
    sub_EC474(v69, v74, v71, 0x727245465241LL, 0xE600000000000000LL, (uint64_t)v183, v184);
    swift_release(v69);

    ((void (*)(char *, uint64_t))v70[1])(v71, v72);
    uint64_t v76 = v67;
    uint64_t v77 = v31;
    return ((uint64_t (*)(char *, uint64_t))v57)(v76, v77);
  }

  if (v61)
  {
    uint64_t v182 = v52;
    uint64_t v105 = qword_283888;
    swift_retain(v61);
    if (v105 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v181 = (void (**)(void, void, void))v58;
    uint64_t v106 = sub_6960(v59, (uint64_t)qword_2969C8);
    unint64_t v107 = v173;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v173, v106, v59);
    sub_ED670(v61);
    uint64_t v108 = swift_retain(v61);
    uint64_t v109 = v60;
    uint64_t v110 = (os_log_s *)Logger.logObject.getter(v108);
    os_log_type_t v111 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v189 = swift_slowAlloc(32LL, -1LL);
      uint64_t v113 = v189;
      *(_DWORD *)uint64_t v112 = 136315138;
      uint64_t v180 = (char *)(v112 + 4);
      *(void *)&__int128 v187 = v61;
      uint64_t v114 = v57;
      uint64_t v115 = type metadata accessor for App(0LL);
      uint64_t v116 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v117 = v115;
      uint64_t v57 = v114;
      uint64_t v118 = dispatch thunk of CustomStringConvertible.description.getter(v117, v116);
      unint64_t v120 = v119;
      *(void *)&__int128 v187 = sub_6978(v118, v119, &v189);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v187, (char *)&v187 + 8);
      swift_bridgeObjectRelease(v120);
      sub_ED680(v61);
      sub_ED680(v61);
      _os_log_impl( &dword_0,  v110,  v111,  "AudioAppResolutionFlow#execute App Resolution successful with resolved app: %s",  v112,  0xCu);
      swift_arrayDestroy(v113, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1LL, -1LL);
      swift_slowDealloc(v112, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v186 + 8))(v173, v185);
    }

    else
    {
      sub_ED680(v61);
      sub_ED680(v61);

      (*(void (**)(char *, uint64_t))(v109 + 8))(v107, v59);
    }

    uint64_t v133 = v182;
    uint64_t v135 = *(uint64_t (**)(uint64_t, void (**)(void, void, void), unint64_t, uint64_t))(v182 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nextAppAcceptingFlow);
    uint64_t v134 = *(void *)(v182 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nextAppAcceptingFlow + 8);
    uint64_t v136 = (uint64_t)v172;
    Swift::String v137 = v161;
    uint64_t v138 = v31;
    ((void (*)(char *, char *, uint64_t))v179)(v172, v161, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v159 + 56))(v136, 0LL, 1LL, v31);
    uint64_t v139 = v133 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_outputPublisher;
    uint64_t v140 = v181;
    uint64_t v141 = v181;
    sub_ED670(v61);
    swift_retain(v134);
    uint64_t v142 = v135(v136, v140, v61, v139);
    sub_ED680(v61);
    swift_release(v134);

    sub_1F6CC(v136, &qword_285BD0);
    uint64_t v143 = v174;
    static ExecuteResponse.complete(next:)(v142);
    swift_release(v142);
    v183(v143);
    sub_ED680(v61);

    (*(void (**)(char *, uint64_t))(v175 + 8))(v143, v176);
    uint64_t v76 = v137;
    uint64_t v77 = v138;
    return ((uint64_t (*)(void, void))v57)(v76, v77);
  }

  uint64_t v179 = (char *)v57;
  *(void *)(v52 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state) = 1LL;
  sub_ED680(0LL);
  sub_E8808();
  uint64_t v78 = v161;
  (*(void (**)(__int128 *__return_ptr, char *, id, void))(v52
                                                                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_appResolutionFlowProducer))( &v187,  v161,  v58,  *(void *)(v52 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_catService));
  if (v188)
  {
    uint64_t v181 = (void (**)(void, void, void))v58;
    sub_FF54(&v187, (uint64_t)&v189);
    uint64_t v180 = (char *)v31;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v79 = sub_6960(v59, (uint64_t)qword_2969C8);
    uint64_t v80 = v162;
    uint64_t v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v186 + 16))(v162, v79, v59);
    uint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
    os_log_type_t v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl(&dword_0, v82, v83, "AudioAppResolutionFlow#execute Resolving bundle identifier", v84, 2u);
      swift_slowDealloc(v84, -1LL, -1LL);
    }

    uint64_t v182 = v52;

    uint64_t v85 = (*(uint64_t (**)(char *, uint64_t))(v186 + 8))(v80, v185);
    uint64_t v86 = v168;
    uint64_t v87 = Date.init()(v85);
    uint64_t v88 = static os_signpost_type_t.begin.getter(v87);
    uint64_t v89 = v88;
    if (qword_2838D0 != -1) {
      uint64_t v88 = swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v90 = qword_296AA0;
    uint64_t v91 = v163;
    static OSSignpostID.exclusive.getter(v88);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v89,  &dword_0,  v90,  "siriAirPlayAppResolver",  22LL,  2LL,  v91,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v91, v165);
    uint64_t v92 = v190;
    uint64_t v93 = v191;
    uint64_t v94 = sub_6EA8(&v189, v190);
    uint64_t v95 = v169;
    uint64_t v96 = v167;
    uint64_t v97 = v170;
    (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v167, v86, v170);
    uint64_t v98 = *(unsigned __int8 *)(v95 + 80);
    uint64_t v99 = (v98 + 16) & ~v98;
    unint64_t v100 = (v166 + v99 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v101 = swift_allocObject(&unk_26F398, v100 + 8, v98 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v101 + v99, v96, v97);
    uint64_t v102 = v182;
    *(void *)(v101 + v100) = v182;
    uint64_t v103 = *(void *)(v93 + 8);
    swift_retain(v102);
    uint64_t v104 = v174;
    static ExecuteResponse.ongoing<A>(next:childCompletion:)(v94, sub_EEEE8, v101, v92, v103);
    swift_release(v101);
    v183(v104);

    (*(void (**)(char *, uint64_t))(v175 + 8))(v104, v176);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v86, v97);
    ((void (*)(char *, char *))v179)(v161, v180);
    return sub_6C3C(&v189);
  }

  else
  {
    sub_1F6CC((uint64_t)&v187, &qword_288D70);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v144 = sub_6960(v59, (uint64_t)qword_2969C8);
    uint64_t v145 = v160;
    uint64_t v146 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 16))(v160, v144, v59);
    uint64_t v147 = (os_log_s *)Logger.logObject.getter(v146);
    os_log_type_t v148 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v147, v148))
    {
      id v149 = v58;
      uint64_t v150 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v150 = 0;
      _os_log_impl( &dword_0,  v147,  v148,  "AudioAppResolutionFlow#execute Unable to make app resolution flow. Returning error",  v150,  2u);
      uint64_t v151 = v150;
      id v58 = v149;
      swift_slowDealloc(v151, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v145, v59);
    type metadata accessor for App(0LL);
    uint64_t v152 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v154 = v180;
    unint64_t v153 = v181;
    uint64_t v155 = v182;
    ((void (**)(char *, void, uint64_t))v181)[13]( v180,  enum case for AdditionalMetricsDescription.StatusReason.appResolutionFailed(_:),  v182);
    id v156 = v58;
    uint64_t v157 = (uint64_t)v58;
    id v158 = v156;
    sub_EC474(v152, v157, v154, 0x4652416F4ELL, 0xE500000000000000LL, (uint64_t)v183, v184);
    swift_release(v152);

    ((void (*)(char *, uint64_t))v153[1])(v154, v155);
    return ((uint64_t (*)(char *, uint64_t))v179)(v78, v31);
  }

uint64_t sub_EBCD4(uint64_t a1, uint64_t (*a2)(char *, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v86 = a3;
  uint64_t v84 = a2;
  uint64_t v88 = a1;
  uint64_t v89 = type metadata accessor for AppResolutionFlowResult(0LL);
  uint64_t v87 = *(void *)(v89 - 8);
  uint64_t v3 = __chkstk_darwin(v89);
  uint64_t v85 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v80 = (char *)&v78 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v82 = (char *)&v78 - v8;
  __chkstk_darwin(v7);
  uint64_t v79 = (char *)&v78 - v9;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v83 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v78 - v14;
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = static os_signpost_type_t.end.getter(v21, v24);
  uint64_t v26 = v25;
  if (qword_2838D0 != -1) {
    uint64_t v25 = swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v27 = qword_296AA0;
  static OSSignpostID.exclusive.getter(v25);
  os_signpost(_:dso:log:name:signpostID:)(v26, &dword_0, v27, "siriAirPlayAppResolver", 22LL, 2LL, v23);
  uint64_t v28 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  Date.init()(v28);
  double v29 = Date.timeIntervalSince(_:)(v84);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v29 >= 0.15)
  {
    uint64_t v31 = v87;
    uint64_t v32 = v89;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v54 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v55 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v83, v54, v10);
    uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 16);
    uint64_t v57 = v80;
    uint64_t v58 = v56(v80, v88, v32);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc(32LL, -1LL);
      uint64_t v62 = swift_slowAlloc(64LL, -1LL);
      uint64_t v78 = v11;
      uint64_t v63 = v62;
      uint64_t v91 = (char *)v62;
      *(_DWORD *)uint64_t v61 = 136446722;
      uint64_t v64 = static Insights.appSelection.getter();
      unint64_t v66 = v65;
      uint64_t v90 = sub_6978(v64, v65, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      swift_bridgeObjectRelease(v66);
      *(_WORD *)(v61 + sub_6C3C(v0 + 12) = 2050;
      uint64_t v90 = *(void *)&v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      *(_WORD *)(v61 + 2sub_6C3C(v0 + 2) = 2080;
      uint64_t v67 = v82;
      v56(v82, (uint64_t)v57, v89);
      uint64_t v68 = String.init<A>(describing:)(v67, v89);
      unint64_t v70 = v69;
      uint64_t v90 = sub_6978(v68, v69, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      unint64_t v71 = v70;
      uint64_t v31 = v87;
      __n128 v72 = swift_bridgeObjectRelease(v71);
      uint64_t v51 = *(void (**)(char *, uint64_t, __n128))(v31 + 8);
      v51(v57, v89, v72);
      _os_log_impl( &dword_0,  v59,  v60,  "AudioAppResolutionFlow#execute %{public}s App selection completed in %{public}f seconds with result: %s. (loggin g at error for timing visibility)",  (uint8_t *)v61,  0x20u);
      swift_arrayDestroy(v63, 2LL, (char *)&type metadata for Any + 8);
      uint64_t v73 = v63;
      uint64_t v32 = v89;
      swift_slowDealloc(v73, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v83, v10);
    }

    else
    {
      uint64_t v51 = *(void (**)(char *, uint64_t, __n128))(v31 + 8);
      ((void (*)(char *, uint64_t))v51)(v57, v32);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v55, v10);
    }

    uint64_t v30 = (uint64_t *)v85;
    v56(v85, v88, v32);
  }

  else
  {
    uint64_t v30 = (uint64_t *)v85;
    uint64_t v31 = v87;
    uint64_t v32 = v89;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v33 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v34 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v81, v33, v10);
    uint64_t v35 = v79;
    uint64_t v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 16);
    uint64_t v36 = v84(v79, v88, v32);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      uint64_t v78 = v11;
      uint64_t v40 = v39;
      uint64_t v80 = (char *)swift_slowAlloc(64LL, -1LL);
      uint64_t v91 = v80;
      *(_DWORD *)uint64_t v40 = 136446722;
      uint64_t v41 = static Insights.appSelection.getter();
      unint64_t v43 = v42;
      uint64_t v90 = sub_6978(v41, v42, (uint64_t *)&v91);
      os_log_type_t v83 = (char *)v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      swift_bridgeObjectRelease(v43);
      *(_WORD *)(v40 + sub_6C3C(v0 + 12) = 2050;
      uint64_t v90 = *(void *)&v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      *(_WORD *)(v40 + 2sub_6C3C(v0 + 2) = 2080;
      uint64_t v44 = v82;
      os_log_type_t v45 = v84;
      v84(v82, (uint64_t)v35, v89);
      uint64_t v46 = String.init<A>(describing:)(v44, v89);
      unint64_t v48 = v47;
      uint64_t v90 = sub_6978(v46, v47, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      unint64_t v49 = v48;
      uint64_t v31 = v87;
      __n128 v50 = swift_bridgeObjectRelease(v49);
      uint64_t v51 = *(void (**)(char *, uint64_t, __n128))(v31 + 8);
      v51(v35, v89, v50);
      _os_log_impl( &dword_0,  v37,  v38,  "AudioAppResolutionFlow#execute %{public}s App selection completed in %{public}f seconds with result: %s",  (uint8_t *)v40,  0x20u);
      uint64_t v52 = v80;
      swift_arrayDestroy(v80, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      uint64_t v53 = v40;
      uint64_t v32 = v89;
      swift_slowDealloc(v53, -1LL, -1LL);

      (*(void (**)(char *, char *))(v78 + 8))(v34, v83);
      v45((char *)v30, v88, v32);
    }

    else
    {
      uint64_t v51 = *(void (**)(char *, uint64_t, __n128))(v31 + 8);
      ((void (*)(char *, uint64_t))v51)(v35, v32);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v34, v10);
      v84((char *)v30, v88, v32);
    }
  }

  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v31 + 88))(v30, v32) == enum case for AppResolutionFlowResult.resolved(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v31 + 96))(v30, v32);
    uint64_t v74 = *v30;
    unint64_t v75 = *(void *)(v86 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state);
    *(void *)(v86 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state) = *v30;
    swift_retain_n(v74, 2LL);
    sub_ED680(v75);
    sub_E8808();
    return swift_release_n(v74, 2LL);
  }

  else
  {
    unint64_t v77 = *(void *)(v86 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state);
    *(void *)(v86 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state) = 2LL;
    sub_ED680(v77);
    sub_E8808();
    return ((uint64_t (*)(uint64_t *, uint64_t))v51)(v30, v32);
  }

double sub_EC474(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v58 = a7;
  uint64_t v56 = a6;
  uint64_t v62 = a4;
  uint64_t v55 = a3;
  uint64_t v57 = a2;
  uint64_t v59 = a1;
  os_log_type_t v60 = (uint64_t *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v8 = *(v60 - 1);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v60);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "AudioAppResolutionFlow#generateGenericErrorDialog generic dialog", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v19, v65);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  uint64_t v21 = type metadata accessor for ErrorFilingProvider(0LL);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = static ErrorFilingProvider.errorInfoForParamsKey.getter(v21);
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v62;
  *(void *)(inited + 56) = a5;
  swift_bridgeObjectRetain(a5);
  unint64_t v54 = sub_74D54(inited);
  uint64_t v23 = *(void *)(v61
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_commonMediaIntentCatDialogService);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t *))(v8 + 16);
  uint64_t v25 = v55;
  uint64_t v55 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v24(v55, v25, v60);
  uint64_t v26 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v27 = (v26 + 16) & ~v26;
  unint64_t v28 = (v9 + v27 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v33 = swift_allocObject(&unk_26F370, v32 + 16, v26 | 7);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, char *, uint64_t *))(v8 + 32))(v33 + v27, v55, v60);
  os_log_type_t v60 = &v53;
  uint64_t v35 = (void *)(v33 + v28);
  uint64_t v36 = v61;
  *uint64_t v35 = v62;
  v35[1] = a5;
  uint64_t v37 = a5;
  *(void *)(v33 + v29) = v36;
  uint64_t v38 = v59;
  *(void *)(v33 + v30) = v59;
  uint64_t v39 = v58;
  *(void *)(v33 + v31) = v57;
  uint64_t v40 = (void *)(v33 + v32);
  *uint64_t v40 = v56;
  v40[1] = v39;
  uint64_t v41 = *(void *)(v23 + 24);
  uint64_t v42 = *(void *)(v23 + 16);
  uint64_t v64 = 0LL;
  memset(v63, 0, sizeof(v63));
  __chkstk_darwin(v34);
  *(&v53 - 10) = v42;
  *(&v53 - 9) = v41;
  strcpy((char *)&v53 - 64, "GenericError");
  *((_BYTE *)&v53 - 51) = 0;
  *((_WORD *)&v53 - 25) = -5120;
  uint64_t v48 = v43;
  unint64_t v44 = v54;
  unint64_t v49 = v54;
  uint64_t v50 = v38;
  uint64_t v51 = v63;
  uint64_t v52 = 0LL;
  id v46 = v45;
  swift_retain(v39);
  swift_bridgeObjectRetain(v37);
  swift_retain(v36);
  swift_retain(v38);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_EEDDC,  v33,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v42,  v41,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3D0BC,  (uint64_t)(&v53 - 12));
  sub_1F6CC((uint64_t)v63, &qword_283FE8);
  swift_release(v33);
  *(void *)&double result = swift_bridgeObjectRelease(v44).n128_u64[0];
  return result;
}

uint64_t sub_EC860( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *), uint64_t a9)
{
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  v42._object = a4;
  uint64_t v43 = a5;
  v42._uint64_t countAndFlagsBits = a3;
  uint64_t v47 = a1;
  uint64_t v48 = a9;
  unint64_t v49 = a8;
  uint64_t v10 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v13);
  unint64_t v44 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v15);
  os_log_type_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.ModuleName.aarf(_:),  v22);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v18);
  uint64_t v26 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v25, v21, a2, 0LL, 1LL);
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v50 = (void *)v26;
  uint64_t v51 = v28;
  swift_bridgeObjectRetain(v28);
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v28);
  uint64_t v29 = v51;
  v42._object = v50;
  uint64_t v30 = *(void *)(v43
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_siriKitTaskLoggingProvider
                  + 24);
  uint64_t v31 = *(void *)(v43
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_siriKitTaskLoggingProvider
                  + 32);
  v42._uint64_t countAndFlagsBits = (uint64_t)sub_6EA8( (void *)(v43 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_siriKitTaskLoggingProvider),  v30);
  uint64_t v32 = enum case for ActivityType.failed(_:);
  uint64_t v33 = type metadata accessor for ActivityType(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v17, v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v17, 0LL, 1LL, v33);
  uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v36 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v44, 1LL, 1LL, v35);
  uint64_t v37 = enum case for SiriKitReliabilityCodes.appResolutionFailure(_:);
  uint64_t v38 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 104))(v12, v37, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v12, 0LL, 1LL, v38);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v45,  v46,  v17,  v36,  v12,  v42._object,  v29,  0LL,  1,  v30,  v31);
  swift_bridgeObjectRelease(v29);
  sub_1F6CC((uint64_t)v12, &qword_2845A0);
  sub_1F6CC(v36, (uint64_t *)&unk_286BD0);
  sub_1F6CC((uint64_t)v17, &qword_2845A8);
  return sub_ECBD0(v47, v49, v48);
}

uint64_t sub_ECBD0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v70 = a3;
  unint64_t v71 = a2;
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v74 = v6;
  __chkstk_darwin(v6);
  __n128 v72 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v8);
  unint64_t v69 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v66);
  uint64_t v11 = (uint64_t *)((char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v65 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v64 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v64 - v19;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v67 = v21;
  uint64_t v68 = v22;
  uint64_t v23 = ((uint64_t (*)(char *))v22)(v20);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v64 = v8;
    uint64_t v27 = a1;
    uint64_t v28 = v18;
    uint64_t v29 = v12;
    uint64_t v30 = v4;
    uint64_t v31 = v26;
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "AudioAppResolutionFlow#handleDialogResult Handling dialog result...", v26, 2u);
    uint64_t v32 = v31;
    uint64_t v4 = v30;
    uint64_t v12 = v29;
    uint64_t v18 = v28;
    a1 = v27;
    uint64_t v8 = v64;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v20, v12);
  sub_FF10(a1, (uint64_t)v11, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v11, v66) == 1)
  {
    uint64_t v34 = *v11;
    uint64_t v35 = v65;
    v68(v65, v67, v12);
    swift_errorRetain(v34);
    uint64_t v36 = swift_errorRetain(v34);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      uint64_t v79 = v40;
      unint64_t v69 = (char *)v33;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_getErrorValue(v34, v78, v77);
      uint64_t v75 = Error.localizedDescription.getter(v77[1], v77[2]);
      uint64_t v76 = v41;
      uint64_t v42 = String.init<A>(_:)( &v75,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v44 = v43;
      uint64_t v75 = sub_6978(v42, v43, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76);
      swift_bridgeObjectRelease(v44);
      swift_errorRelease(v34);
      swift_errorRelease(v34);
      _os_log_impl( &dword_0,  v37,  v38,  "AudioAppResolutionFlow#handleDialogResult Could not properly create dialog %s, silently failing...",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);

      uint64_t v45 = ((uint64_t (*)(char *, uint64_t))v69)(v65, v12);
    }

    else
    {
      swift_errorRelease(v34);
      swift_errorRelease(v34);

      uint64_t v45 = ((uint64_t (*)(char *, uint64_t))v33)(v35, v12);
    }

    uint64_t v63 = v72;
    static ExecuteResponse.complete()(v45);
    v71(v63);
    swift_errorRelease(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v63, v74);
  }

  else
  {
    uint64_t v46 = *(int *)(v8 + 48);
    uint64_t v47 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v48 = v69;
    uint64_t v49 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(*(void *)(v47 - 8) + 32LL))(v69, v11, v47);
    *(void *)&v48[v46] = *(uint64_t *)((char *)v11 + v46);
    LOBYTE(v46) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v49);
    uint64_t v50 = type metadata accessor for ViewFactory(0LL);
    swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
    uint64_t v51 = ViewFactory.init(ttsEnabled:)(v46 & 1);
    uint64_t v52 = (void *)dispatch thunk of ViewFactory.makeCompletionView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v48,  _swiftEmptyArrayStorage,  0LL,  1LL);
    uint64_t v53 = (void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_aceService);
    uint64_t v54 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_aceService + 24);
    uint64_t v55 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_aceService + 32);
    sub_6EA8(v53, v54);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v52, v54, v55);
    uint64_t v56 = ((uint64_t (*)(char *, uint64_t, uint64_t))v68)(v18, v67, v12);
    uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl( &dword_0,  v57,  v58,  "AudioAppResolutionFlow#handleDialogResult Dialog successfully generated, responding and exiting...",  v59,  2u);
      swift_slowDealloc(v59, -1LL, -1LL);
    }

    uint64_t v60 = ((uint64_t (*)(char *, uint64_t))v33)(v18, v12);
    uint64_t v61 = v72;
    static ExecuteResponse.complete()(v60);
    v71(v61);

    swift_release(v51);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v74);
    return sub_1F6CC((uint64_t)v69, &qword_289340);
  }

uint64_t sub_ED1B4()
{
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_appNameResolver));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_aceService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_outputPublisher));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_catService));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_commonMediaIntentCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_siriKitTaskLoggingProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_featureFlags));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nowPlayingProvider));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_nextAppAcceptingFlow
                          + 8));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_appResolutionFlowProducer
                          + 8));
  sub_ED680(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AudioAppResolutionFlow_state));
  return v0;
}

uint64_t sub_ED2A8()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_ED2CC()
{
  return type metadata accessor for AudioAppResolutionFlow(0LL);
}

uint64_t type metadata accessor for AudioAppResolutionFlow(uint64_t a1)
{
  uint64_t result = qword_288B90;
  if (!qword_288B90) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudioAppResolutionFlow);
  }
  return result;
}

void sub_ED310(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    v4[2] = &unk_217800;
    void v4[3] = &unk_217800;
    void v4[4] = &unk_217800;
    void v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = &unk_217800;
    v4[8] = &unk_217800;
    void v4[9] = &unk_217800;
    v4[10] = (char *)&value witness table for () + 64;
    void v4[11] = (char *)&value witness table for () + 64;
    v4[12] = &unk_217818;
    swift_updateClassMetadata2(a1, 256LL, 13LL, v4, a1 + 80);
  }

uint64_t *initializeBufferWithCopyOfBuffer for AudioAppResolutionFlow.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = v3;
  return a1;
}

unint64_t destroy for AudioAppResolutionFlow.State(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_release(result);
  }
  return result;
}

unint64_t *assignWithCopy for AudioAppResolutionFlow.State( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_retain(v4);
    }
  }

  else if (v4 < 0xFFFFFFFF)
  {
    swift_release(v3);
    *a1 = *a2;
  }

  else
  {
    *a1 = v4;
    swift_retain(v4);
    swift_release(v3);
  }

  return a1;
}

void *initializeWithTake for AudioAppResolutionFlow.State(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for AudioAppResolutionFlow.State( unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release(v3);
LABEL_6:
    *a1 = v4;
    return a1;
  }

  *a1 = v4;
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioAppResolutionFlow.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for AudioAppResolutionFlow.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0LL;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + sub_6C3C(v0 + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + sub_6C3C(v0 + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }

  return result;
}

uint64_t sub_ED5BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return (v1 + 1);
}

void *sub_ED5D4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }

  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }

  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AudioAppResolutionFlow.State()
{
  return &type metadata for AudioAppResolutionFlow.State;
}

uint64_t sub_ED604(uint64_t a1)
{
  return 1LL;
}

uint64_t sub_ED628(void (*a1)(char *), uint64_t a2)
{
  return sub_EABE4(a1, a2);
}

uint64_t sub_ED648(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AudioAppResolutionFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_ED670(unint64_t result)
{
  if (result >= 3) {
    return swift_retain(result);
  }
  return result;
}

unint64_t sub_ED680(unint64_t result)
{
  if (result >= 3) {
    return swift_release(result);
  }
  return result;
}

uint64_t sub_ED694()
{
  char v0 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter();
  uint64_t v1 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  return ViewFactory.init(ttsEnabled:)(v0 & 1);
}

uint64_t sub_ED6D4( uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  v59[3] = type metadata accessor for PlayMediaAppSelector(0LL);
  v59[4] = &protocol witness table for PlayMediaAppSelector;
  v59[0] = a1;
  void v58[3] = &type metadata for StringsBackedAppNameResolver;
  v58[4] = sub_15780();
  uint64_t v23 = (_OWORD *)swift_allocObject(&unk_26F348, 96LL, 7LL);
  v58[0] = v23;
  __int128 v24 = a2[3];
  void v23[3] = a2[2];
  v23[4] = v24;
  v23[5] = a2[4];
  __int128 v25 = a2[1];
  v23[1] = *a2;
  v23[2] = v25;
  uint64_t v26 = type metadata accessor for DeviceProvider(0LL);
  void v57[3] = v26;
  v57[4] = &protocol witness table for DeviceProvider;
  uint64_t v27 = sub_10974(v57);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32LL))(v27, a3, v26);
  uint64_t v28 = type metadata accessor for FeatureFlagProvider(0LL);
  void v56[3] = v28;
  v56[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v29 = sub_10974(v56);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32LL))(v29, a4, v28);
  uint64_t v30 = type metadata accessor for UserPreferenceProvider(0LL);
  v55[3] = v30;
  v55[4] = &protocol witness table for UserPreferenceProvider;
  uint64_t v31 = sub_10974(v55);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32LL))(v31, a5, v30);
  uint64_t v32 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v54[3] = v32;
  v54[4] = &protocol witness table for SubscriptionProvider;
  uint64_t v33 = sub_10974(v54);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32LL))(v33, a6, v32);
  uint64_t v34 = type metadata accessor for InstalledAppProvider(0LL);
  v53[3] = v34;
  v53[4] = &protocol witness table for InstalledAppProvider;
  uint64_t v35 = sub_10974(v53);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32LL))(v35, a7, v34);
  v52[3] = type metadata accessor for MediaPlaybackLite(0LL);
  v52[4] = &protocol witness table for MediaPlaybackLite;
  v52[0] = a8;
  uint64_t v36 = type metadata accessor for NowPlayingProvider(0LL);
  v51[3] = v36;
  v51[4] = &protocol witness table for NowPlayingProvider;
  uint64_t v37 = sub_10974(v51);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32LL))(v37, a12, v36);
  uint64_t v38 = type metadata accessor for TCCProvider(0LL);
  v50[3] = v38;
  v50[4] = &protocol witness table for TCCProvider;
  uint64_t v39 = sub_10974(v50);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32LL))(v39, a13, v38);
  sub_157C4((uint64_t)v59, (uint64_t)a14 + qword_287EF0);
  sub_157C4((uint64_t)v54, (uint64_t)a14 + qword_287EF8);
  sub_157C4((uint64_t)v52, (uint64_t)a14 + qword_287F00);
  uint64_t v40 = (void *)((char *)a14 + qword_287F20);
  *uint64_t v40 = a9;
  v40[1] = a10;
  sub_157C4((uint64_t)a11, (uint64_t)a14 + qword_287F08);
  sub_157C4((uint64_t)v51, (uint64_t)a14 + qword_287F10);
  sub_157C4((uint64_t)v50, (uint64_t)a14 + qword_287F18);
  sub_157C4((uint64_t)v58, (uint64_t)v49);
  sub_157C4((uint64_t)v57, (uint64_t)v48);
  sub_157C4((uint64_t)v56, (uint64_t)v47);
  sub_157C4((uint64_t)v55, (uint64_t)v46);
  sub_157C4((uint64_t)v53, (uint64_t)v45);
  uint64_t v41 = (char *)a14 + *(void *)(class metadata base offset for CommonAppResolver + *a14 + 8);
  strcpy(v41, "resolutionType");
  v41[15] = -18;
  sub_157C4((uint64_t)v49, (uint64_t)a14 + *(void *)(class metadata base offset for CommonAppResolver + *a14 + 16));
  sub_157C4((uint64_t)v48, (uint64_t)a14 + *(void *)(class metadata base offset for CommonAppResolver + *a14 + 24));
  sub_157C4((uint64_t)v47, (uint64_t)a14 + *(void *)(class metadata base offset for CommonAppResolver + *a14 + 32));
  sub_157C4((uint64_t)v46, (uint64_t)a14 + *(void *)(class metadata base offset for CommonAppResolver + *a14 + 40));
  uint64_t v42 = sub_157C4( (uint64_t)v45,  (uint64_t)a14 + *(void *)(class metadata base offset for CommonAppResolver + *a14 + 48));
  uint64_t v43 = InstrumentedAppResolutionService.init()(v42);
  sub_6C3C(v45);
  sub_6C3C(v46);
  sub_6C3C(v47);
  sub_6C3C(v48);
  sub_6C3C(v49);
  sub_6C3C(v50);
  sub_6C3C(v51);
  sub_6C3C(a11);
  sub_6C3C(v52);
  sub_6C3C(v53);
  sub_6C3C(v54);
  sub_6C3C(v55);
  sub_6C3C(v56);
  sub_6C3C(v57);
  sub_6C3C(v58);
  sub_6C3C(v59);
  return v43;
}

uint64_t sub_EDB78( uint64_t a1, void *a2, uint64_t a3, void *a4, _OWORD *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v87 = a7;
  uint64_t v99 = a4;
  uint64_t v96 = a3;
  id v93 = a2;
  uint64_t v97 = a12;
  uint64_t v92 = a11;
  uint64_t v98 = a10;
  uint64_t v90 = a9;
  uint64_t v94 = a19;
  uint64_t v89 = a18;
  uint64_t v88 = a17;
  uint64_t v86 = a16;
  uint64_t v91 = a13;
  uint64_t v24 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v82 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  os_log_type_t v83 = (char *)&v81 - v28;
  uint64_t v119[3] = &type metadata for StringsBackedAppNameResolver;
  v119[4] = sub_15780();
  uint64_t v29 = (_OWORD *)swift_allocObject(&unk_26F348, 96LL, 7LL);
  v119[0] = v29;
  __int128 v30 = a5[3];
  v29[3] = a5[2];
  v29[4] = v30;
  v29[5] = a5[4];
  __int128 v31 = a5[1];
  v29[1] = *a5;
  v29[2] = v31;
  uint64_t v118[3] = v24;
  v118[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v32 = sub_10974(v118);
  uint64_t v84 = v25;
  uint64_t v85 = v24;
  (*(void (**)(void *, uint64_t, uint64_t))(v25 + 32))(v32, a8, v24);
  uint64_t v33 = type metadata accessor for NowPlayingProvider(0LL);
  v117[3] = v33;
  v117[4] = &protocol witness table for NowPlayingProvider;
  uint64_t v34 = sub_10974(v117);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32LL))(v34, a14, v33);
  uint64_t v115 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v116 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v114 = a15;
  uint64_t v112 = type metadata accessor for CompanionDeviceProvider(0LL);
  uint64_t v113 = &protocol witness table for CompanionDeviceProvider;
  uint64_t v35 = v87;
  *(void *)&__int128 v111 = v86;
  uint64_t v36 = v96;
  uint64_t v37 = type metadata accessor for VoiceProfileProvider(0LL);
  uint64_t v109 = v37;
  uint64_t v110 = &protocol witness table for VoiceProfileProvider;
  uint64_t v38 = sub_10974(&v108);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32LL))(v38, v88, v37);
  uint64_t v106 = type metadata accessor for ResolvedAppHistoryProvider(0LL);
  unint64_t v107 = &protocol witness table for ResolvedAppHistoryProvider;
  *(void *)&__int128 v105 = v89;
  uint64_t v39 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v103 = v39;
  uint64_t v104 = &protocol witness table for InstalledAppProvider;
  uint64_t v40 = sub_10974(&v102);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32LL))(v40, v94, v39);
  uint64_t v41 = a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_input;
  uint64_t v42 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v41, 1LL, 1LL, v42);
  uint64_t v43 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_intent;
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_intent) = 0LL;
  uint64_t v44 = OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_mediaServiceConfiguration;
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_mediaServiceConfiguration) = 0LL;
  swift_beginAccess(v41, v101, 33LL, 0LL);
  uint64_t v94 = a1;
  uint64_t v45 = a1;
  uint64_t v46 = v98;
  sub_11C1C(v45, v41);
  swift_endAccess(v101);
  uint64_t v47 = *(void **)(a20 + v43);
  id v48 = v93;
  *(void *)(a20 + v4sub_6C3C(v0 + 3) = v93;
  uint64_t v49 = v97;
  id v93 = v48;

  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedApp) = v36;
  sub_157C4((uint64_t)v99, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_outputPublisher);
  sub_157C4((uint64_t)v118, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_featureFlags);
  sub_157C4((uint64_t)v119, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_appNameResolver);
  uint64_t v95 = a6;
  sub_157C4((uint64_t)a6, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_aceService);
  uint64_t v50 = (void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nextLocalFlow);
  uint64_t v51 = v91;
  void *v50 = v90;
  v50[1] = v46;
  uint64_t v52 = (void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_remoteFlow);
  *uint64_t v52 = v92;
  v52[1] = v49;
  uint64_t v53 = *(void **)(a20 + v44);
  *(void *)(a20 + v44) = v51;
  swift_retain(v46);
  swift_retain(v49);
  swift_retain(v36);
  uint64_t v54 = v51;

  uint64_t v55 = v35;
  if (v35)
  {
    uint64_t v56 = v35;
  }

  else
  {
    sub_157C4((uint64_t)v119, (uint64_t)v101);
    sub_157C4((uint64_t)v95, (uint64_t)v100);
    LODWORD(v9sub_6C3C(v0 + 2) = CATDefaultMode;
    uint64_t v57 = type metadata accessor for MorphunProvider(0LL);
    uint64_t v58 = static MorphunProvider.shared.getter(v57);
    uint64_t v59 = v83;
    static FeatureFlagProvider.shared.getter(v58);
    uint64_t v60 = type metadata accessor for CatService();
    uint64_t v90 = swift_allocObject(v60, 300LL, 7LL);
    uint64_t v61 = sub_1094C((uint64_t)v101, v101[3]);
    uint64_t v91 = &v81;
    __chkstk_darwin(v61);
    uint64_t v63 = (_OWORD *)((char *)&v81 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    (*(void (**)(_OWORD *))(v64 + 16))(v63);
    uint64_t v65 = v84;
    uint64_t v66 = (uint64_t)v82;
    uint64_t v67 = v54;
    uint64_t v68 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v82, v59, v85);
    swift_retain(v58);
    uint64_t v56 = sub_10FF64(v63, v92, v58, v100, v66, v90);
    swift_release(v58);
    uint64_t v69 = v68;
    uint64_t v54 = v67;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v59, v69);
    swift_release(v58);
    sub_6C3C(v101);
  }

  uint64_t v70 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v71 = swift_allocObject(v70, 56LL, 7LL);
  strcpy((char *)(v71 + 40), "AddMediaIntent");
  *(_BYTE *)(v71 + 55) = -18;
  *(void *)(v71 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v71 + 24) = 0x800000000021D860LL;
  *(void *)(v71 + 3sub_6C3C(v0 + 2) = v56;
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_addMediaCatDialogService) = v71;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v73 = (void *)swift_allocObject(updated, 56LL, 7LL);
  v73[5] = 0xD000000000000019LL;
  v73[6] = 0x800000000021E0C0LL;
  v73[2] = 0xD000000000000011LL;
  v73[3] = 0x800000000021D860LL;
  v73[4] = v56;
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_updateMediaAffinityCatDialogService) = v73;
  uint64_t v74 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v75 = (void *)swift_allocObject(v74, 56LL, 7LL);
  v75[5] = 0x6964654D79616C50LL;
  v75[6] = 0xEF746E65746E4961LL;
  v75[2] = 0xD000000000000011LL;
  void v75[3] = 0x800000000021D860LL;
  v75[4] = v56;
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_playMediaCatDialogService) = v75;
  uint64_t v76 = type metadata accessor for CommonMediaIntentCatDialogService();
  unint64_t v77 = (void *)swift_allocObject(v76, 40LL, 7LL);
  v77[2] = 0xD000000000000011LL;
  void v77[3] = 0x800000000021D860LL;
  v77[4] = v56;
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_commonMediaIntentCatDialogService) = v77;
  sub_157C4((uint64_t)v117, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nowPlayingProvider);
  uint64_t v78 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
  swift_retain_n(v56, 4LL);
  swift_retain(v55);
  uint64_t v79 = ViewFactory.init(ttsEnabled:)(1LL);
  swift_release(v56);

  swift_release(v96);
  swift_release(v55);
  swift_release(v98);
  swift_release(v97);

  sub_6C3C(v117);
  sub_6C3C(v118);
  sub_6C3C(v95);
  sub_6C3C(v119);
  sub_6C3C(v99);
  sub_1F6CC(v94, &qword_285BD0);
  *(void *)(a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_viewFactory) = v79;
  sub_FF54(&v114, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_siriKitTaskLoggingProvider);
  sub_FF54(&v111, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_companionDeviceProvider);
  sub_FF54(&v108, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_voiceProfileProvider);
  sub_FF54(&v105, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedAppHistoryProvider);
  sub_FF54(&v102, a20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_installedAppProvider);
  return a20;
}

uint64_t sub_EE2B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, __int128 *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v16 = type metadata accessor for NowPlayingProvider(0LL);
  *(void *)(a10 + 184) = v16;
  *(void *)(a10 + 19sub_6C3C(v0 + 2) = &protocol witness table for NowPlayingProvider;
  uint64_t v17 = sub_10974((void *)(a10 + 160));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32LL))(v17, a3, v16);
  uint64_t v18 = type metadata accessor for FeatureFlagProvider(0LL);
  *(void *)(a10 + 40) = v18;
  *(void *)(a10 + 4sub_6C3C(v0 + 8) = &protocol witness table for FeatureFlagProvider;
  uint64_t v19 = sub_10974((void *)(a10 + 16));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a4, v18);
  *(void *)(a10 + 80) = &type metadata for StringsBackedAppNameResolver;
  *(void *)(a10 + 8sub_6C3C(v0 + 8) = sub_15780();
  uint64_t v20 = (_OWORD *)swift_allocObject(&unk_26F348, 96LL, 7LL);
  *(void *)(a10 + 56) = v20;
  __int128 v21 = a5[3];
  v20[3] = a5[2];
  void v20[4] = v21;
  v20[5] = a5[4];
  __int128 v22 = a5[1];
  v20[1] = *a5;
  v20[2] = v22;
  *(void *)(a10 + 200) = 0LL;
  *(void *)(a10 + 20sub_6C3C(v0 + 8) = a1;
  *(void *)(a10 + 96) = a2;
  *(void *)(a10 + 104) = a7;
  *(void *)(a10 + 1sub_6C3C(v0 + 12) = a8;
  sub_FF54(a6, a10 + 120);
  *(_BYTE *)(a10 + 2swift_weakDestroy(v0 + 16) = a9;
  return a10;
}

void *sub_EE3F4( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = type metadata accessor for FeatureFlagProvider(0LL);
  void v26[3] = v16;
  v26[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v17 = sub_10974(v26);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32LL))(v17, a6, v16);
  uint64_t v18 = type metadata accessor for StringsFileResolver(0LL);
  v25[3] = v18;
  v25[4] = &protocol witness table for StringsFileResolver;
  uint64_t v19 = sub_10974(v25);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a7, v18);
  swift_bridgeObjectRelease(a3);
  a8[15] = a1;
  sub_157C4((uint64_t)v26, (uint64_t)(a8 + 16));
  sub_157C4((uint64_t)v25, (uint64_t)v24);
  uint64_t v20 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v21 = swift_retain(a1);
  uint64_t v22 = static SiriKitTaskLoggingProvider.shared.getter(v21);
  a8[11] = v20;
  a8[12] = &protocol witness table for SiriKitTaskLoggingProvider;
  a8[8] = v22;
  a8[13] = 0xD000000000000011LL;
  a8[14] = 0x800000000021D860LL;
  a8[2] = a2;
  sub_FF54(v24, (uint64_t)(a8 + 3));
  sub_6C3C(v25);
  sub_6C3C(v26);
  sub_1F6CC(a5, &qword_284ED0);
  sub_6C3C(a4);
  return a8;
}

uint64_t sub_EE564()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

unint64_t sub_EE590()
{
  unint64_t result = qword_286618;
  if (!qword_286618)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_286618);
  }

  return result;
}

void *sub_EE5CC( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v17 = type metadata accessor for FeatureFlagProvider(0LL);
  v31[3] = v17;
  _OWORD v31[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v18 = sub_10974(v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32LL))(v18, a6, v17);
  uint64_t v19 = type metadata accessor for StringsFileResolver(0LL);
  v30[3] = v19;
  v30[4] = &protocol witness table for StringsFileResolver;
  uint64_t v20 = sub_10974(v30);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32LL))(v20, a7, v19);
  uint64_t v21 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v29[3] = v21;
  v29[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v29[0] = a8;
  v28[3] = type metadata accessor for DialogHistoryProvider();
  v28[4] = &off_275B30;
  swift_bridgeObjectRelease(a3);
  v28[0] = a9;
  a11[15] = a1;
  sub_157C4((uint64_t)v31, (uint64_t)(a11 + 16));
  sub_157C4((uint64_t)v29, (uint64_t)(a11 + 31));
  sub_157C4((uint64_t)v28, (uint64_t)(a11 + 21));
  sub_157C4((uint64_t)a10, (uint64_t)(a11 + 26));
  sub_157C4((uint64_t)v30, (uint64_t)v27);
  uint64_t v22 = swift_retain(a1);
  uint64_t v23 = static SiriKitTaskLoggingProvider.shared.getter(v22);
  a11[11] = v21;
  a11[12] = &protocol witness table for SiriKitTaskLoggingProvider;
  a11[8] = v23;
  a11[13] = 0xD000000000000011LL;
  a11[14] = 0x800000000021D860LL;
  a11[2] = a2;
  sub_FF54(v27, (uint64_t)(a11 + 3));
  sub_6C3C(a10);
  sub_6C3C(v28);
  sub_6C3C(v29);
  sub_6C3C(v30);
  sub_6C3C(v31);
  sub_1F6CC(a5, &qword_284ED0);
  sub_6C3C(a4);
  return a11;
}

uint64_t sub_EE79C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v67 = a4;
  uint64_t v65 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v7 = __chkstk_darwin(v65);
  uint64_t v63 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = type metadata accessor for VoiceProfileProvider(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v70 = (char *)&v51 - v15;
  uint64_t v16 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v71 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v61 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v69 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v68 = *(void *)(v69 - 8);
  uint64_t v21 = __chkstk_darwin(v69);
  uint64_t v60 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v25);
  uint64_t v59 = (uint64_t)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, v59, &qword_285BD0);
  sub_157C4(v67, (uint64_t)&v76);
  uint64_t v27 = qword_2838F0;
  uint64_t v66 = a2;
  id v28 = a2;
  uint64_t v67 = a3;
  swift_retain(a3);
  if (v27 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v29 = static AceService.current.getter(&v75);
  __int128 v30 = v24;
  uint64_t v57 = v24;
  uint64_t v31 = static FeatureFlagProvider.shared.getter(v29);
  static NowPlayingProvider.shared.getter(v31);
  uint64_t v32 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v33 = static SiriKitTaskLoggingProvider.shared.getter(v32);
  uint64_t v34 = type metadata accessor for MultiUserConnectionProvider(0LL);
  uint64_t v35 = static MultiUserConnectionProvider.shared.getter();
  uint64_t v73 = v34;
  uint64_t v74 = &protocol witness table for MultiUserConnectionProvider;
  *(void *)&__int128 v72 = v35;
  uint64_t v36 = type metadata accessor for CompanionDeviceProvider(0LL);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  uint64_t v37 = CompanionDeviceProvider.init(multiUserConnectionProvider:)(&v72);
  uint64_t v56 = v20;
  uint64_t v55 = v37;
  uint64_t v38 = v70;
  static VoiceProfileProvider.shared.getter();
  type metadata accessor for ResolvedAppHistoryProvider(0LL);
  uint64_t v39 = static ResolvedAppHistoryProvider.shared.getter();
  static InstalledAppProvider.shared.getter(v39);
  uint64_t v58 = type metadata accessor for SiriForAirPlayFlow(0LL);
  uint64_t v51 = swift_allocObject(v58, *(unsigned int *)(v58 + 48), *(unsigned __int16 *)(v58 + 52));
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v72);
  uint64_t v40 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v60, v30, v69);
  uint64_t v41 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v61, v20, v16);
  uint64_t v42 = (uint64_t)v62;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v62, v38, v11);
  uint64_t v52 = v12;
  uint64_t v54 = v16;
  uint64_t v53 = v11;
  uint64_t v43 = v64;
  uint64_t v44 = (uint64_t)v63;
  uint64_t v45 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v63, v10, v65);
  swift_retain(v33);
  uint64_t v46 = v55;
  swift_retain(v55);
  swift_retain(v39);
  uint64_t v47 = sub_EDB78( v59,  v66,  v67,  &v76,  &v72,  &v75,  0LL,  v40,  (uint64_t)sub_9FDD8,  0LL,  (uint64_t)sub_A01C8,  0LL,  0LL,  v41,  v33,  v46,  v42,  v39,  v44,  v51);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v45);
  swift_release(v39);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v70, v53);
  swift_release(v33);
  swift_release(v46);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v56, v54);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v57, v69);
  *(void *)&__int128 v72 = v47;
  uint64_t v48 = sub_10430(&qword_288D68, type metadata accessor for SiriForAirPlayFlow, (uint64_t)&unk_2163D8);
  uint64_t v49 = Flow.eraseToAnyFlow()(v58, v48);
  swift_release(v47);
  return v49;
}

uint64_t sub_EED10()
{
  uint64_t v1 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  swift_release(*(void *)(v0 + v7));
  swift_release(*(void *)(v0 + v8));

  swift_release(*(void *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v5);
}

uint64_t sub_EEDDC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_EC860( a1,  v1 + v4,  *(void *)(v1 + v5),  *(void **)(v1 + v5 + 8),  *(void *)(v1 + v6),  *(void *)(v1 + v7),  *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void (**)(char *))(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_EEE74()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_EEEE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_EBCD4( a1,  (uint64_t (*)(char *, uint64_t, uint64_t))(v1 + v4),  *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_EEF3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v47 - v7;
  uint64_t v9 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v47 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (uint64_t *)((char *)&v47 - v17);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19((char *)&v47 - v17, v2, v9);
  int v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v18, v9);
  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.UNRECOGNIZED(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v18, v9);
    uint64_t v21 = *v18;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v22 = sub_6960(v3, (uint64_t)qword_2969C8);
    uint64_t v23 = v51;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 16))(v8, v22, v3);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v27 = 134217984;
      uint64_t v54 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
      _os_log_impl( &dword_0,  v25,  v26,  "AudioItemType#toCommonAudioMediaType unrecognized AudioItemType: %ld",  v27,  0xCu);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v3);
    goto LABEL_8;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.unknown(_:))
  {
LABEL_8:
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.unknown(_:);
LABEL_9:
    uint64_t v29 = *v28;
    uint64_t v30 = type metadata accessor for CommonAudio.MediaType(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104LL))(v52, v29, v30);
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.song(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.song(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.album(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.album(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.artist(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.artist(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.genre(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.genre(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.playlist(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.playlist(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastShow(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.podcast(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastEpisode(_:))
  {
LABEL_23:
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.episode(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastPlaylist(_:)) {
    goto LABEL_8;
  }
  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.musicStation(_:))
  {
LABEL_26:
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.station(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.audioBook(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.audioBook(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.movie(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.movie(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.tvShow(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.tvShow(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.tvShowEpisode(_:)) {
    goto LABEL_23;
  }
  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.musicVideo(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.musicVideo(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastStation(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.podcastStation(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.radioStation(_:)) {
    goto LABEL_39;
  }
  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.station(_:)) {
    goto LABEL_26;
  }
  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.music(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.music(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.algorithmicRadioStation(_:))
  {
LABEL_39:
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.radioStation(_:);
    goto LABEL_9;
  }

  if (v20 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.news(_:))
  {
    id v28 = (unsigned int *)&enum case for CommonAudio.MediaType.news(_:);
    goto LABEL_9;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v32 = sub_6960(v3, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v6, v32, v3);
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v16, v2, v9);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.error.getter();
  uint64_t v50 = v34;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    uint64_t v54 = v49;
    uint64_t v48 = v36;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v47 = v36 + 4;
    v19(v13, (uint64_t)v16, v9);
    uint64_t v37 = String.init<A>(describing:)(v13, v9);
    unint64_t v39 = v38;
    uint64_t v53 = sub_6978(v37, v38, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
    __n128 v40 = swift_bridgeObjectRelease(v39);
    uint64_t v41 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v41(v16, v9, v40);
    uint64_t v42 = v50;
    uint64_t v43 = v48;
    _os_log_impl( &dword_0,  v50,  v35,  "AudioItemType#toCommonAudioMediaType unrecognized AudioItemType type: %s",  v48,  0xCu);
    uint64_t v44 = v49;
    swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    swift_slowDealloc(v43, -1LL, -1LL);
  }

  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    ((void (*)(char *, uint64_t))v41)(v16, v9);
  }

  (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v3);
  uint64_t v45 = enum case for CommonAudio.MediaType.unknown(_:);
  uint64_t v46 = type metadata accessor for CommonAudio.MediaType(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104LL))(v52, v45, v46);
  return ((uint64_t (*)(uint64_t *, uint64_t))v41)(v18, v9);
}

uint64_t UpdateMediaAffinityFlowStrategy.actionForInput(input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v184 = a1;
  uint64_t v182 = a2;
  uint64_t v2 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v2);
  uint64_t v174 = (char *)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v175 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v172 = *(void *)(v175 - 8);
  uint64_t v4 = __chkstk_darwin(v175);
  uint64_t v163 = (char *)&v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v162 = (char *)&v159 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v167 = (char *)&v159 - v9;
  __chkstk_darwin(v8);
  uint64_t v170 = (char *)&v159 - v10;
  uint64_t v177 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v178 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v164 = (char *)&v159 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v176 = sub_6C5C(&qword_284DA8);
  uint64_t v12 = __chkstk_darwin(v176);
  uint64_t v166 = (uint64_t)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v179 = (uint64_t)&v159 - v14;
  uint64_t v15 = sub_6C5C(&qword_284DB0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v161 = (uint64_t)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v169 = (char *)&v159 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v173 = (uint64_t)&v159 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v165 = (uint64_t)&v159 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  os_log_type_t v26 = (char *)&v159 - v25;
  __chkstk_darwin(v24);
  id v28 = (char *)&v159 - v27;
  uint64_t v29 = type metadata accessor for Parse(0LL);
  uint64_t v186 = *(void *)(v29 - 8);
  uint64_t v187 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v183 = (char *)&v159 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v159 - v32;
  uint64_t v34 = type metadata accessor for Logger(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v168 = (char *)&v159 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v160 = (char *)&v159 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v159 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v171 = (char *)&v159 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v159 - v46;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v159 - v48;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v50 = sub_6960(v34, (uint64_t)qword_2969C8);
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v180 = v50;
  uint64_t v181 = v51;
  uint64_t v185 = v34;
  uint64_t v52 = ((uint64_t (*)(char *))v51)(v49);
  uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
  os_log_type_t v54 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v55 = 0;
    _os_log_impl(&dword_0, v53, v54, "UpdateMediaAffinityFlowStrategy#actionForInput called", v55, 2u);
    swift_slowDealloc(v55, -1LL, -1LL);
  }

  uint64_t v56 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
  uint64_t v57 = v185;
  uint64_t v58 = v56(v49, v185);
  Input.parse.getter(v58);
  int v59 = (*(uint64_t (**)(char *, uint64_t))(v186 + 88))(v33, v187);
  if (v59 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v59 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      (*(void (**)(char *, uint64_t))(v186 + 96))(v33, v187);
      uint64_t v60 = sub_6C5C(&qword_284618);
      uint64_t v61 = *(void *)&v33[*(int *)(v60 + 48)];
      uint64_t v62 = (void *)Parse.ServerConversion.siriKitIntent.getter(v60);
      uint64_t v63 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      if (swift_dynamicCastObjCClass(v62, v63))
      {
        swift_release(v61);

        uint64_t v64 = type metadata accessor for NLIntent(0LL);
        uint64_t v65 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8LL))(v33, v64);
        uint64_t v66 = v175;
        uint64_t v67 = v172;
        uint64_t v68 = (uint64_t)v174;
        goto LABEL_30;
      }

      uint64_t v125 = v181(v47, v180, v57);
      uint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
      os_log_type_t v127 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v126, v127))
      {
        uint64_t v128 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v128 = 0;
        _os_log_impl( &dword_0,  v126,  v127,  "UpdateMediaAffinityFlowStrategy#actionForInput received unexpected NLv3IntentPlusServerConversion parse, ignoring",  v128,  2u);
        swift_slowDealloc(v128, -1LL, -1LL);
      }

      uint64_t v129 = v56(v47, v57);
      static ActionForInput.ignore()(v129);
      swift_release(v61);
      uint64_t v97 = type metadata accessor for NLIntent(0LL);
      uint64_t v98 = *(void *)(v97 - 8);
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v33, v97);
    }

    if (v59 != enum case for Parse.uso(_:))
    {
      uint64_t v92 = v181(v42, v180, v57);
      id v93 = (os_log_s *)Logger.logObject.getter(v92);
      os_log_type_t v94 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v95 = 0;
        _os_log_impl( &dword_0,  v93,  v94,  "UpdateMediaAffinityFlowStrategy#actionForInput received non NLv3IntentPlusServerConversion or NLv3IntentOnly parse",  v95,  2u);
        swift_slowDealloc(v95, -1LL, -1LL);
      }

      uint64_t v96 = v56(v42, v57);
      static ActionForInput.ignore()(v96);
      uint64_t v98 = v186;
      uint64_t v97 = v187;
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v33, v97);
    }
  }

  uint64_t v69 = v187;
  uint64_t v70 = *(uint64_t (**)(char *, uint64_t))(v186 + 8);
  uint64_t v71 = v70(v33, v187);
  __int128 v72 = v183;
  Input.parse.getter(v71);
  double v73 = sub_B7C84(v72, (uint64_t)&v188);
  ((void (*)(char *, uint64_t, double))v70)(v72, v69, v73);
  if (v189)
  {
    sub_49B60(&v188, &v191);
    uint64_t v74 = v192;
    uint64_t v75 = v193;
    sub_6EA8(&v191, v192);
    dispatch thunk of AudioIntent.verb.getter(v74, v75);
    uint64_t v76 = v178;
    unint64_t v77 = *(void (**)(char *, void, uint64_t))(v178 + 104);
    uint64_t v78 = v177;
    v77(v26, enum case for CommonAudio.Verb.like(_:), v177);
    uint64_t v79 = *(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56);
    v79(v26, 0LL, 1LL, v78);
    uint64_t v80 = v179;
    uint64_t v81 = v179 + *(int *)(v176 + 48);
    sub_D8208((uint64_t)v28, v179);
    sub_D8208((uint64_t)v26, v81);
    uint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
    if (v82(v80, 1LL, v78) == 1)
    {
      sub_1F6CC((uint64_t)v26, &qword_284DB0);
      sub_1F6CC((uint64_t)v28, &qword_284DB0);
      int v83 = v82(v81, 1LL, v78);
      uint64_t v84 = v173;
      if (v83 == 1)
      {
        sub_1F6CC(v179, &qword_284DB0);
        sub_874C4((uint64_t)&v191, (uint64_t)&v188);
LABEL_28:
        sub_6C3C(&v188);
        uint64_t v57 = v185;
        uint64_t v66 = v175;
        uint64_t v68 = (uint64_t)v174;
LABEL_29:
        uint64_t v65 = sub_6C3C(&v191);
        uint64_t v67 = v172;
LABEL_30:
        uint64_t v109 = v183;
        Input.parse.getter(v65);
        double v110 = sub_B7C84(v109, (uint64_t)&v191);
        (*(void (**)(char *, uint64_t, double))(v186 + 8))(v109, v187, v110);
        uint64_t v111 = v192;
        if (v192)
        {
          uint64_t v112 = v193;
          sub_6EA8(&v191, v192);
          dispatch thunk of ConfirmableIntent.confirmationState.getter(v111, *(void *)(v112 + 8));
          sub_6C3C(&v191);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1LL, v66) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v170, v68, v66);
            uint64_t v113 = *(void (**)(char *, void, uint64_t))(v67 + 104);
            v113(v167, enum case for CommonAudio.Confirmation.cancel(_:), v66);
            uint64_t v114 = sub_6DF0( qword_286CD0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
            dispatch thunk of RawRepresentable.rawValue.getter(&v191, v66, v114);
            dispatch thunk of RawRepresentable.rawValue.getter(&v188, v66, v114);
            uint64_t v115 = *((void *)&v191 + 1);
            uint64_t v116 = *((void *)&v188 + 1);
            if (v191 == v188)
            {
              char v117 = 1;
              uint64_t v116 = *((void *)&v191 + 1);
            }

            else
            {
              char v117 = _stringCompareWithSmolCheck(_:_:expecting:)(v191, *((void *)&v191 + 1));
            }

            swift_bridgeObjectRelease(v115);
            __n128 v130 = swift_bridgeObjectRelease(v116);
            uint64_t v131 = *(void (**)(char *, uint64_t, __n128))(v67 + 8);
            v131(v167, v66, v130);
            uint64_t v132 = v162;
            (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v162, v170, v66);
            if ((v117 & 1) != 0) {
              goto LABEL_47;
            }
            v113(v163, enum case for CommonAudio.Confirmation.no(_:), v66);
            dispatch thunk of RawRepresentable.rawValue.getter(&v191, v66, v114);
            dispatch thunk of RawRepresentable.rawValue.getter(&v188, v66, v114);
            uint64_t v133 = *((void *)&v191 + 1);
            uint64_t v134 = *((void *)&v188 + 1);
            if (v191 == v188)
            {
              swift_bridgeObjectRelease_n(*((void *)&v191 + 1), 2LL);
              ((void (*)(char *, uint64_t))v131)(v163, v66);
LABEL_47:
              ((void (*)(char *, uint64_t))v131)(v132, v66);
LABEL_48:
              uint64_t v135 = v160;
              uint64_t v136 = v181(v160, v180, v57);
              Swift::String v137 = (os_log_s *)Logger.logObject.getter(v136);
              os_log_type_t v138 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v137, v138))
              {
                uint64_t v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)uint64_t v139 = 0;
                _os_log_impl( &dword_0,  v137,  v138,  "UpdateMediaAffinityFlowStrategy#actionForInput found cancellation node - treating state as cancelled",  v139,  2u);
                swift_slowDealloc(v139, -1LL, -1LL);
              }

              uint64_t v140 = v56(v135, v57);
              static ActionForInput.cancel()(v140);
              return ((uint64_t (*)(char *, uint64_t))v131)(v170, v66);
            }

            id v156 = v132;
            char v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v191, *((void *)&v191 + 1));
            swift_bridgeObjectRelease(v133);
            __n128 v158 = swift_bridgeObjectRelease(v134);
            v131(v163, v66, v158);
            ((void (*)(char *, uint64_t))v131)(v156, v66);
            if ((v157 & 1) != 0) {
              goto LABEL_48;
            }
            ((void (*)(char *, uint64_t))v131)(v170, v66);
            goto LABEL_36;
          }
        }

        else
        {
          sub_1F6CC((uint64_t)&v191, &qword_2848C0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v68, 1LL, 1LL, v66);
        }

        sub_1F6CC(v68, &qword_284630);
LABEL_36:
        uint64_t v118 = v168;
        uint64_t v119 = v181(v168, v180, v57);
        unint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
        os_log_type_t v121 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v120, v121))
        {
          uint64_t v122 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v122 = 0;
          _os_log_impl(&dword_0, v120, v121, "UpdateMediaAffinityFlowStrategy#actionForInput handling", v122, 2u);
          swift_slowDealloc(v122, -1LL, -1LL);
        }

        uint64_t v123 = v56(v118, v57);
        return static ActionForInput.handle()(v123);
      }
    }

    else
    {
      uint64_t v85 = v165;
      sub_D8208(v80, v165);
      if (v82(v81, 1LL, v78) != 1)
      {
        uint64_t v101 = v85;
        uint64_t v102 = v178;
        uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v178 + 32);
        uint64_t v159 = v56;
        uint64_t v104 = v164;
        v103(v164, v81, v78);
        uint64_t v105 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        char v106 = dispatch thunk of static Equatable.== infix(_:_:)(v101, v104, v78, v105);
        unint64_t v107 = *(void (**)(char *, uint64_t))(v102 + 8);
        __int128 v108 = v104;
        uint64_t v56 = v159;
        v107(v108, v177);
        sub_1F6CC((uint64_t)v26, &qword_284DB0);
        sub_1F6CC((uint64_t)v28, &qword_284DB0);
        v107((char *)v101, v177);
        uint64_t v78 = v177;
        sub_1F6CC(v179, &qword_284DB0);
        sub_874C4((uint64_t)&v191, (uint64_t)&v188);
        uint64_t v84 = v173;
        if ((v106 & 1) != 0) {
          goto LABEL_28;
        }
LABEL_18:
        uint64_t v86 = v189;
        uint64_t v87 = v190;
        sub_6EA8(&v188, v189);
        dispatch thunk of AudioIntent.verb.getter(v86, v87);
        uint64_t v88 = (uint64_t)v169;
        v77(v169, enum case for CommonAudio.Verb.unlike(_:), v78);
        v79((char *)v88, 0LL, 1LL, v78);
        uint64_t v89 = v166;
        uint64_t v90 = v166 + *(int *)(v176 + 48);
        sub_D8208(v84, v166);
        sub_D8208(v88, v90);
        if (v82(v89, 1LL, v78) == 1)
        {
          sub_1F6CC(v88, &qword_284DB0);
          sub_1F6CC(v84, &qword_284DB0);
          int v91 = v82(v90, 1LL, v78);
          uint64_t v57 = v185;
          if (v91 == 1)
          {
            sub_1F6CC(v89, &qword_284DB0);
            goto LABEL_28;
          }
        }

        else
        {
          uint64_t v99 = v161;
          sub_D8208(v89, v161);
          int v100 = v82(v90, 1LL, v78);
          uint64_t v57 = v185;
          uint64_t v66 = v175;
          uint64_t v68 = (uint64_t)v174;
          if (v100 != 1)
          {
            uint64_t v141 = v99;
            uint64_t v142 = v178;
            uint64_t v143 = *(void (**)(char *, uint64_t, uint64_t))(v178 + 32);
            uint64_t v159 = v56;
            uint64_t v144 = v164;
            v143(v164, v90, v78);
            uint64_t v145 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
            char v146 = dispatch thunk of static Equatable.== infix(_:_:)(v141, v144, v78, v145);
            uint64_t v147 = v78;
            os_log_type_t v148 = *(void (**)(char *, uint64_t))(v142 + 8);
            id v149 = v144;
            uint64_t v56 = v159;
            v148(v149, v147);
            sub_1F6CC((uint64_t)v169, &qword_284DB0);
            sub_1F6CC(v173, &qword_284DB0);
            v148((char *)v141, v147);
            sub_1F6CC(v89, &qword_284DB0);
            sub_6C3C(&v188);
            if ((v146 & 1) != 0) {
              goto LABEL_29;
            }
            goto LABEL_52;
          }

          sub_1F6CC((uint64_t)v169, &qword_284DB0);
          sub_1F6CC(v84, &qword_284DB0);
          (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v99, v78);
        }

        sub_1F6CC(v89, &qword_284DA8);
        sub_6C3C(&v188);
LABEL_52:
        sub_6C3C(&v191);
        goto LABEL_53;
      }

      sub_1F6CC((uint64_t)v26, &qword_284DB0);
      sub_1F6CC((uint64_t)v28, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v85, v78);
      uint64_t v84 = v173;
    }

    sub_1F6CC(v179, &qword_284DA8);
    sub_874C4((uint64_t)&v191, (uint64_t)&v188);
    goto LABEL_18;
  }

  sub_1F6CC((uint64_t)&v188, &qword_2848C0);
LABEL_53:
  uint64_t v150 = v171;
  uint64_t v151 = v181(v171, v180, v57);
  uint64_t v152 = (os_log_s *)Logger.logObject.getter(v151);
  os_log_type_t v153 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v152, v153))
  {
    uint64_t v154 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v154 = 0;
    _os_log_impl( &dword_0,  v152,  v153,  "UpdateMediaAffinityFlowStrategy#actionForInput received unsupported parse",  v154,  2u);
    swift_slowDealloc(v154, -1LL, -1LL);
  }

  uint64_t v155 = v56(v150, v57);
  return static ActionForInput.ignore()(v155);
}

uint64_t UpdateMediaAffinityFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)( char *a1, void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v181 = a3;
  uint64_t v182 = a4;
  id v187 = a2;
  uint64_t v184 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v180 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v164 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v178 = sub_6C5C(&qword_284DA8);
  uint64_t v6 = __chkstk_darwin(v178);
  uint64_t v8 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v174 = (uint64_t)&v158 - v9;
  uint64_t v10 = sub_6C5C(&qword_284DB0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v162 = (uint64_t)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v170 = (char *)&v158 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v168 = (char *)&v158 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v165 = (uint64_t)&v158 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v158 - v20;
  __chkstk_darwin(v19);
  uint64_t v173 = (char *)&v158 - v22;
  uint64_t v23 = type metadata accessor for Parse(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v183 = (char *)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v158 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v158 - v30;
  uint64_t v32 = type metadata accessor for Logger(0LL);
  __int128 v188 = *(void (**)(char *, uint64_t))(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v163 = (char *)&v158 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v158 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v161 = (char *)&v158 - v39;
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v158 - v40;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v171 = v37;
  uint64_t v169 = v8;
  uint64_t v42 = sub_6960(v32, (uint64_t)qword_2969C8);
  uint64_t v43 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v188 + 2);
  uint64_t v176 = v42;
  uint64_t v177 = v43;
  ((void (*)(char *))v43)(v41);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t, __n128))(v24 + 16);
  uint64_t v185 = a1;
  uint64_t v186 = v44;
  ((void (*)(char *, char *, uint64_t))v44)(v31, a1, v23);
  id v45 = v187;
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  int v175 = v47;
  BOOL v48 = os_log_type_enabled(v46, v47);
  uint64_t v49 = v24;
  id v166 = v45;
  uint64_t v172 = v21;
  if (v48)
  {
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    uint64_t v160 = swift_slowAlloc(96LL, -1LL);
    *(void *)&__int128 v192 = v160;
    *(_DWORD *)uint64_t v50 = 136446722;
    uint64_t v179 = v32;
    uint64_t v51 = static Insights.frameKit.getter();
    uint64_t v52 = v45;
    unint64_t v54 = v53;
    *(void *)&__int128 v189 = sub_6978(v51, v53, (uint64_t *)&v192);
    os_log_t v159 = v46;
    uint64_t v158 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, (char *)&v189 + 8);
    __n128 v55 = swift_bridgeObjectRelease(v54);
    *(_WORD *)(v50 + sub_6C3C(v0 + 12) = 2080;
    v186(v29, v31, v23, v55);
    uint64_t v56 = String.init<A>(describing:)(v29, v23);
    unint64_t v58 = v57;
    *(void *)&__int128 v189 = sub_6978(v56, v57, (uint64_t *)&v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, (char *)&v189 + 8);
    __n128 v59 = swift_bridgeObjectRelease(v58);
    uint64_t v60 = *(void (**)(char *, uint64_t, __n128))(v49 + 8);
    v60(v31, v23, v59);
    *(_WORD *)(v50 + 2sub_6C3C(v0 + 2) = 2080;
    *(void *)&__int128 v189 = v187;
    id v61 = v52;
    uint64_t v62 = sub_6C5C(&qword_288D78);
    uint64_t v63 = String.init<A>(describing:)(&v189, v62);
    unint64_t v65 = v64;
    *(void *)&__int128 v189 = sub_6978(v63, v64, (uint64_t *)&v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v189, (char *)&v189 + 8);

    unint64_t v66 = v65;
    uint64_t v32 = v179;
    swift_bridgeObjectRelease(v66);
    os_log_t v67 = v159;
    _os_log_impl( &dword_0,  v159,  (os_log_type_t)v175,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse %{public}s for parse:%s and previousIntent:%s",  (uint8_t *)v50,  0x20u);
    uint64_t v68 = v160;
    swift_arrayDestroy(v160, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1LL, -1LL);
    swift_slowDealloc(v50, -1LL, -1LL);

    uint64_t v69 = (void (*)(char *, uint64_t))*((void *)v188 + 1);
    v69(v41, v32);
    uint64_t v70 = v158;
  }

  else
  {
    uint64_t v60 = *(void (**)(char *, uint64_t, __n128))(v24 + 8);
    ((void (*)(char *, uint64_t))v60)(v31, v23);

    uint64_t v69 = (void (*)(char *, uint64_t))*((void *)v188 + 1);
    v69(v41, v32);
    uint64_t v70 = v24;
  }

  uint64_t v71 = v183;
  __int128 v72 = v185;
  ((void (*)(char *, char *, uint64_t))v186)(v183, v185, v23);
  int v73 = (*(uint64_t (**)(char *, uint64_t))(v70 + 88))(v71, v23);
  uint64_t v74 = v184;
  if (v73 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_11;
  }
  if (v73 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v70 + 96))(v71, v23);
    uint64_t v75 = sub_6C5C(&qword_284618);
    uint64_t v76 = *(void *)&v71[*(int *)(v75 + 48)];
    unint64_t v77 = (void *)Parse.ServerConversion.siriKitIntent.getter(v75);
    uint64_t v78 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    uint64_t v79 = swift_dynamicCastObjCClass(v77, v78);
    if (v79)
    {
      v181(v79, 0LL);
      swift_release(v76);
    }

    else
    {

      uint64_t v131 = v161;
      uint64_t v132 = v177(v161, v176, v32);
      uint64_t v133 = (os_log_s *)Logger.logObject.getter(v132);
      os_log_type_t v134 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v133, v134))
      {
        uint64_t v135 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v135 = 0;
        _os_log_impl( &dword_0,  v133,  v134,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse received unsupported NLv3IntentPlusServerConversion parse, ignoring",  v135,  2u);
        swift_slowDealloc(v135, -1LL, -1LL);
      }

      v69(v131, v32);
      uint64_t v136 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v137 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v138 = swift_allocError(v136, v137, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v136 - 8) + 104LL))( v139,  enum case for PlaybackCode.ceGE88(_:),  v136);
      v181(v138, 1LL);
      swift_errorRelease(v138);
      swift_release(v76);
    }

    uint64_t v140 = type metadata accessor for NLIntent(0LL);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v140 - 8) + 8LL))(v71, v140);
  }

  __int128 v72 = v185;
  if (v73 == enum case for Parse.uso(_:))
  {
LABEL_11:
    ((void (*)(char *, uint64_t))v60)(v71, v23);
    sub_B7C84(v72, (uint64_t)&v189);
    if (!v190)
    {
      sub_1F6CC((uint64_t)&v189, &qword_2848C0);
LABEL_39:
      id v149 = v171;
      uint64_t v150 = v177(v171, v176, v32);
      uint64_t v151 = (os_log_s *)Logger.logObject.getter(v150);
      os_log_type_t v152 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v151, v152))
      {
        os_log_type_t v153 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v153 = 0;
        _os_log_impl( &dword_0,  v151,  v152,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse received unsupported NLv3IntentOnly parse",  v153,  2u);
        swift_slowDealloc(v153, -1LL, -1LL);
      }

      v69(v149, v32);
      uint64_t v154 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v155 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v156 = swift_allocError(v154, v155, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v154 - 8) + 104LL))( v157,  enum case for PlaybackCode.ceGE89(_:),  v154);
      v181(v156, 1LL);
      return swift_errorRelease(v156);
    }

    uint64_t v179 = v32;
    sub_49B60(&v189, &v192);
    uint64_t v80 = v193;
    uint64_t v81 = v194;
    sub_6EA8(&v192, v193);
    uint64_t v82 = (uint64_t)v173;
    dispatch thunk of AudioIntent.verb.getter(v80, v81);
    uint64_t v83 = v180;
    uint64_t v84 = *(void (**)(char *, void, uint64_t))(v180 + 104);
    uint64_t v85 = (uint64_t)v172;
    v84(v172, enum case for CommonAudio.Verb.like(_:), v74);
    uint64_t v86 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56);
    v86(v85, 0LL, 1LL, v74);
    uint64_t v87 = v174;
    uint64_t v88 = v174 + *(int *)(v178 + 48);
    sub_D8208(v82, v174);
    sub_D8208(v85, v88);
    uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
    if (v89(v87, 1LL, v74) == 1)
    {
      sub_1F6CC(v85, &qword_284DB0);
      sub_1F6CC(v82, &qword_284DB0);
      if (v89(v88, 1LL, v74) == 1)
      {
        sub_1F6CC(v87, &qword_284DB0);
        sub_874C4((uint64_t)&v192, (uint64_t)&v189);
LABEL_29:
        sub_6C3C(&v189);
LABEL_30:
        uint64_t v118 = v166;
        id v119 = v166;
        if (!v187) {
          id v119 = [objc_allocWithZone(INUpdateMediaAffinityIntent) init];
        }
        uint64_t v120 = v193;
        uint64_t v121 = v194;
        uint64_t v122 = sub_6EA8(&v192, v193);
        uint64_t v190 = v120;
        uint64_t v191 = v121;
        uint64_t v123 = sub_10974(&v189);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v120 - 8) + 16LL))(v123, v122, v120);
        uint64_t v124 = (void *)(v167 + 16);
        uint64_t v125 = v167 + 56;
        uint64_t v126 = (void *)swift_allocObject(&unk_26F410, 40LL, 7LL);
        os_log_type_t v127 = v181;
        uint64_t v128 = v182;
        v126[2] = v119;
        void v126[3] = v127;
        v126[4] = v128;
        id v129 = v118;
        id v130 = v119;
        swift_retain(v128);
        sub_F7A80((uint64_t)v123, v124, v125, (uint64_t)sub_F1D80, (uint64_t)v126, v130, v120, v121);
        swift_release(v126);

        sub_6C3C(&v189);
        return sub_6C3C(&v192);
      }
    }

    else
    {
      uint64_t v90 = v165;
      sub_D8208(v87, v165);
      if (v89(v88, 1LL, v74) != 1)
      {
        uint64_t v112 = v180;
        uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v180 + 32);
        __int128 v188 = v69;
        uint64_t v114 = v164;
        v113(v164, v88, v74);
        uint64_t v115 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        LODWORD(v186) = dispatch thunk of static Equatable.== infix(_:_:)(v90, v114, v74, v115);
        uint64_t v116 = *(void (**)(char *, uint64_t))(v112 + 8);
        char v117 = v114;
        uint64_t v69 = v188;
        v116(v117, v74);
        sub_1F6CC(v85, &qword_284DB0);
        sub_1F6CC(v82, &qword_284DB0);
        v116((char *)v90, v74);
        sub_1F6CC(v174, &qword_284DB0);
        sub_874C4((uint64_t)&v192, (uint64_t)&v189);
LABEL_19:
        uint64_t v91 = v190;
        uint64_t v92 = v191;
        sub_6EA8(&v189, v190);
        uint64_t v93 = v92;
        uint64_t v94 = (uint64_t)v168;
        dispatch thunk of AudioIntent.verb.getter(v91, v93);
        uint64_t v95 = (uint64_t)v170;
        v84(v170, enum case for CommonAudio.Verb.unlike(_:), v74);
        v86(v95, 0LL, 1LL, v74);
        uint64_t v96 = v95;
        uint64_t v97 = (uint64_t)v169;
        uint64_t v98 = (uint64_t)&v169[*(int *)(v178 + 48)];
        sub_D8208(v94, (uint64_t)v169);
        sub_D8208(v96, v98);
        if (v89(v97, 1LL, v74) == 1)
        {
          sub_1F6CC(v96, &qword_284DB0);
          sub_1F6CC(v94, &qword_284DB0);
          unsigned int v99 = v89(v98, 1LL, v74);
          uint64_t v32 = v179;
          if (v99 == 1)
          {
            sub_1F6CC(v97, &qword_284DB0);
            goto LABEL_29;
          }
        }

        else
        {
          uint64_t v110 = v162;
          sub_D8208(v97, v162);
          unsigned int v111 = v89(v98, 1LL, v74);
          uint64_t v32 = v179;
          if (v111 != 1)
          {
            uint64_t v141 = v69;
            uint64_t v142 = v94;
            uint64_t v143 = v180;
            uint64_t v144 = v164;
            (*(void (**)(char *, uint64_t, uint64_t))(v180 + 32))(v164, v98, v74);
            uint64_t v145 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
            char v146 = dispatch thunk of static Equatable.== infix(_:_:)(v110, v144, v74, v145);
            uint64_t v147 = *(void (**)(char *, uint64_t))(v143 + 8);
            v147(v144, v74);
            sub_1F6CC((uint64_t)v170, &qword_284DB0);
            uint64_t v148 = v142;
            uint64_t v69 = v141;
            sub_1F6CC(v148, &qword_284DB0);
            v147((char *)v110, v74);
            sub_1F6CC(v97, &qword_284DB0);
            sub_6C3C(&v189);
            if ((v146 & 1) != 0) {
              goto LABEL_30;
            }
            goto LABEL_38;
          }

          sub_1F6CC((uint64_t)v170, &qword_284DB0);
          sub_1F6CC(v94, &qword_284DB0);
          (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v110, v74);
        }

        sub_1F6CC(v97, &qword_284DA8);
        sub_6C3C(&v189);
LABEL_38:
        sub_6C3C(&v192);
        goto LABEL_39;
      }

      sub_1F6CC(v85, &qword_284DB0);
      sub_1F6CC(v82, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v90, v74);
    }

    sub_1F6CC(v87, &qword_284DA8);
    sub_874C4((uint64_t)&v192, (uint64_t)&v189);
    goto LABEL_19;
  }

  int v100 = v163;
  uint64_t v101 = v177(v163, v176, v32);
  uint64_t v102 = (os_log_s *)Logger.logObject.getter(v101);
  os_log_type_t v103 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v104 = 0;
    _os_log_impl( &dword_0,  v102,  v103,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse received non NLv3IntentPlusServerConversion or NLv3IntentOnly parse",  v104,  2u);
    swift_slowDealloc(v104, -1LL, -1LL);
  }

  v69(v100, v32);
  uint64_t v105 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v106 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v107 = swift_allocError(v105, v106, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v105 - 8) + 104LL))( v108,  enum case for PlaybackCode.ceGE90(_:),  v105);
  v181(v107, 1LL);
  swift_errorRelease(v107);
  return ((uint64_t (*)(char *, uint64_t))v60)(v71, v23);
}

uint64_t sub_F1798(void *a1, uint64_t (*a2)(void, void))
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  id v9 = a1;
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v24 = a2;
    uint64_t v12 = swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = v5;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v21 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v13 = 138412290;
    id v25 = v9;
    id v14 = v9;
    uint64_t v23 = v4;
    id v15 = v14;
    a2 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    uint64_t v16 = v21;
    *uint64_t v21 = v9;

    uint64_t v4 = v23;
    _os_log_impl( &dword_0,  v10,  v11,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse returning intent: %@",  v13,  0xCu);
    uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v16, 1LL, v17);
    swift_slowDealloc(v16, -1LL, -1LL);
    uint64_t v18 = v13;
    uint64_t v5 = v22;
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2(v9, 0LL);
}

uint64_t DetermineFlowStrategy.deinit()
{
  return v0;
}

uint64_t DetermineFlowStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 96LL, 7LL);
}

uint64_t sub_F1A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return UpdateMediaAffinityFlowStrategy.actionForInput(input:)(a1, a2);
}

uint64_t sub_F1A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, updated, a6);
}

uint64_t sub_F1A78(char *a1, void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  return UpdateMediaAffinityFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4);
}

uint64_t sub_F1A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, updated, a3);
}

uint64_t sub_F1AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, updated, a6);
}

uint64_t sub_F1B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, updated, a6);
}

uint64_t sub_F1B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, updated, a6);
}

uint64_t sub_F1BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  updated,  a7);
}

uint64_t sub_F1C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, updated, a3);
}

uint64_t sub_F1C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, updated, a4);
}

uint64_t sub_F1CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, updated, a6);
}

uint64_t sub_F1D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, updated, a7);
}

uint64_t sub_F1D80()
{
  return sub_F1798(*(void **)(v0 + 16), *(uint64_t (**)(void, void))(v0 + 24));
}

uint64_t sub_F1D8C(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_288D80,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinityFlowStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinityFlowStrategy);
}

uint64_t type metadata accessor for UpdateMediaAffinityFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin31UpdateMediaAffinityFlowStrategy);
}

uint64_t sub_F1DD8(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_288D88,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinityFlowStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinityFlowStrategy);
}

uint64_t sub_F1E04(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_288D90,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinityFlowStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinityFlowStrategy);
}

uint64_t sub_F1E30(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_288D98,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinityFlowStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinityFlowStrategy);
}

uint64_t sub_F1E5C(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v186 = a3;
  id v209 = a2;
  uint64_t v196 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v197 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v184 = (char *)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v195 = sub_6C5C(&qword_284DA8);
  uint64_t v9 = __chkstk_darwin(v195);
  uint64_t v189 = (uint64_t)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v191 = (uint64_t)&v177 - v11;
  uint64_t v12 = sub_6C5C(&qword_284DB0);
  uint64_t v13 = __chkstk_darwin(v12);
  id v204 = (char *)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  id v187 = (char *)&v177 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v188 = (uint64_t)&v177 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v185 = (uint64_t)&v177 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v192 = (uint64_t)&v177 - v22;
  __chkstk_darwin(v21);
  uint64_t v206 = (uint64_t)&v177 - v23;
  uint64_t v24 = type metadata accessor for Parse(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v205 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v26);
  double v198 = (char *)&v177 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v177 - v30;
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  __int128 v200 = (char *)&v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v182 = (char *)&v177 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v183 = (char *)&v177 - v39;
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v177 - v40;
  uint64_t v42 = swift_allocObject(&unk_26F438, 32LL, 7LL);
  *(void *)(v42 + swift_weakDestroy(v0 + 16) = a4;
  *(void *)(v42 + 24) = a5;
  uint64_t v202 = v42;
  uint64_t v43 = qword_283888;
  uint64_t v199 = a4;
  swift_retain(a4);
  dispatch_group_t v201 = a5;
  if (v43 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v44 = sub_6960(v32, (uint64_t)qword_2969C8);
  id v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v193 = v44;
  uint64_t v194 = v45;
  ((void (*)(char *))v45)(v41);
  uint64_t v208 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v208(v31, a1, v24);
  id v46 = v209;
  os_log_type_t v47 = (os_log_s *)Logger.logObject.getter(v46);
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  uint64_t v207 = v32;
  os_log_type_t v49 = v48;
  uint64_t v203 = v47;
  BOOL v50 = os_log_type_enabled(v47, v48);
  uint64_t v51 = v25;
  if (v50)
  {
    uint64_t v52 = swift_slowAlloc(32LL, -1LL);
    uint64_t v181 = a1;
    uint64_t v190 = v25;
    uint64_t v53 = v52;
    uint64_t v180 = swift_slowAlloc(96LL, -1LL);
    *(void *)&__int128 v213 = v180;
    *(_DWORD *)uint64_t v53 = 136446722;
    uint64_t v54 = static Insights.frameKit.getter();
    unint64_t v56 = v55;
    *(void *)&__int128 v210 = sub_6978(v54, v55, (uint64_t *)&v213);
    uint64_t v179 = v33;
    uint64_t v57 = v24;
    id v58 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v210, (char *)&v210 + 8);
    swift_bridgeObjectRelease(v56);
    *(_WORD *)(v53 + sub_6C3C(v0 + 12) = 2080;
    __n128 v59 = v198;
    v208(v198, v31, v57);
    uint64_t v60 = String.init<A>(describing:)(v59, v57);
    unint64_t v62 = v61;
    *(void *)&__int128 v210 = sub_6978(v60, v61, (uint64_t *)&v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v210, (char *)&v210 + 8);
    swift_bridgeObjectRelease(v62);
    double v198 = *(char **)(v190 + 8);
    ((void (*)(char *, uint64_t))v198)(v31, v57);
    *(_WORD *)(v53 + 2sub_6C3C(v0 + 2) = 2080;
    *(void *)&__int128 v210 = v209;
    id v63 = v46;
    uint64_t v64 = sub_6C5C(&qword_288D78);
    uint64_t v65 = String.init<A>(describing:)(&v210, v64);
    unint64_t v67 = v66;
    *(void *)&__int128 v210 = sub_6978(v65, v66, (uint64_t *)&v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v210, (char *)&v210 + 8);

    unint64_t v68 = v67;
    uint64_t v69 = v206;
    swift_bridgeObjectRelease(v68);
    uint64_t v70 = v203;
    _os_log_impl( &dword_0,  v203,  v49,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse %{public}s for parse:%s and previousIntent:%s",  (uint8_t *)v53,  0x20u);
    uint64_t v71 = v180;
    swift_arrayDestroy(v180, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1LL, -1LL);
    uint64_t v72 = v53;
    uint64_t v51 = v190;
    a1 = v181;
    swift_slowDealloc(v72, -1LL, -1LL);

    int v73 = *(void (**)(char *, uint64_t))(v179 + 8);
    uint64_t v74 = v207;
    v73(v41, v207);
    uint64_t v75 = (uint64_t)v204;
    uint64_t v76 = v58;
  }

  else
  {
    double v198 = *(char **)(v25 + 8);
    ((void (*)(char *, uint64_t))v198)(v31, v24);

    int v73 = *(void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v74 = v207;
    v73(v41, v207);
    uint64_t v75 = (uint64_t)v204;
    uint64_t v76 = v46;
    uint64_t v69 = v206;
    uint64_t v57 = v24;
  }

  unint64_t v77 = v205;
  v208(v205, a1, v57);
  int v78 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v77, v57);
  if (v78 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v78 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      uint64_t v79 = v51;
      uint64_t v80 = v73;
      (*(void (**)(char *, uint64_t))(v79 + 96))(v77, v57);
      uint64_t v81 = sub_6C5C(&qword_284618);
      uint64_t v82 = *(void *)&v77[*(int *)(v81 + 48)];
      uint64_t v83 = (void *)Parse.ServerConversion.siriKitIntent.getter(v81);
      uint64_t v84 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v85 = swift_dynamicCastObjCClass(v83, v84);
      if (v85)
      {
        uint64_t v86 = v85;
        uint64_t v87 = v199;
        swift_beginAccess(v199 + 16, &v213, 1LL, 0LL);
        uint64_t v88 = *(void **)(v87 + 16);
        *(void *)(v87 + swift_weakDestroy(v0 + 16) = v86;
        unsigned __int8 v89 = *(_BYTE *)(v87 + 24);
        *(_BYTE *)(v87 + 24) = 0;
        sub_87F60(v88, v89);
        uint64_t v90 = v201;
      }

      else
      {

        uint64_t v142 = v182;
        uint64_t v143 = v194(v182, v193, v74);
        uint64_t v144 = (os_log_s *)Logger.logObject.getter(v143);
        os_log_type_t v145 = static os_log_type_t.debug.getter();
        BOOL v146 = os_log_type_enabled(v144, v145);
        dispatch_group_t v147 = v201;
        if (v146)
        {
          uint64_t v148 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v148 = 0;
          _os_log_impl( &dword_0,  v144,  v145,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse received unsupported NLv3IntentPlusServerConversion parse, ignoring",  v148,  2u);
          id v149 = v148;
          unint64_t v77 = v205;
          swift_slowDealloc(v149, -1LL, -1LL);
        }

        v80(v142, v74);
        uint64_t v150 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v151 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v152 = swift_allocError(v150, v151, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v150 - 8) + 104LL))( v153,  enum case for PlaybackCode.ceGE88(_:),  v150);
        uint64_t v154 = v199;
        swift_beginAccess(v199 + 16, &v213, 1LL, 0LL);
        uint64_t v155 = *(void **)(v154 + 16);
        *(void *)(v154 + swift_weakDestroy(v0 + 16) = v152;
        unsigned __int8 v156 = *(_BYTE *)(v154 + 24);
        *(_BYTE *)(v154 + 24) = 1;
        sub_87F60(v155, v156);
        uint64_t v90 = v147;
      }

      dispatch_group_leave(v90);
      swift_release(v82);
      uint64_t v157 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v157 - 8) + 8LL))(v77, v157);
LABEL_42:
      uint64_t v141 = v202;
      return swift_release(v141);
    }

    if (v78 != enum case for Parse.uso(_:))
    {
      unsigned int v111 = v73;
      uint64_t v112 = v183;
      uint64_t v113 = v194(v183, v193, v74);
      uint64_t v114 = (os_log_s *)Logger.logObject.getter(v113);
      os_log_type_t v115 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v114, v115))
      {
        uint64_t v116 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v116 = 0;
        _os_log_impl( &dword_0,  v114,  v115,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse received non NLv3IntentPlusServerConversion or NLv3IntentOnly parse",  v116,  2u);
        char v117 = v116;
        unint64_t v77 = v205;
        swift_slowDealloc(v117, -1LL, -1LL);
      }

      v111(v112, v74);
      uint64_t v118 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v119 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v120 = swift_allocError(v118, v119, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v118 - 8) + 104LL))( v121,  enum case for PlaybackCode.ceGE90(_:),  v118);
      uint64_t v122 = v199;
      swift_beginAccess(v199 + 16, &v213, 1LL, 0LL);
      uint64_t v123 = *(void **)(v122 + 16);
      *(void *)(v122 + swift_weakDestroy(v0 + 16) = v120;
      unsigned __int8 v124 = *(_BYTE *)(v122 + 24);
      *(_BYTE *)(v122 + 24) = 1;
      sub_87F60(v123, v124);
      dispatch_group_leave(v201);
      ((void (*)(char *, uint64_t))v198)(v77, v57);
      goto LABEL_42;
    }
  }

  ((void (*)(char *, uint64_t))v198)(v77, v57);
  sub_B7C84(a1, (uint64_t)&v210);
  if (!v211)
  {
    sub_1F6CC((uint64_t)&v210, &qword_2848C0);
    uint64_t v101 = v201;
LABEL_39:
    uint64_t v163 = v194(v200, v193, v74);
    uint64_t v164 = (os_log_s *)Logger.logObject.getter(v163);
    os_log_type_t v165 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v164, v165))
    {
      id v166 = v73;
      uint64_t v167 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v167 = 0;
      _os_log_impl( &dword_0,  v164,  v165,  "UpdateMediaAffinityFlowStrategy#makeIntentFromParse received unsupported NLv3IntentOnly parse",  v167,  2u);
      uint64_t v168 = v167;
      int v73 = v166;
      swift_slowDealloc(v168, -1LL, -1LL);
    }

    v73(v200, v74);
    uint64_t v169 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v170 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v171 = swift_allocError(v169, v170, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v169 - 8) + 104LL))( v172,  enum case for PlaybackCode.ceGE89(_:),  v169);
    uint64_t v173 = v199;
    swift_beginAccess(v199 + 16, &v213, 1LL, 0LL);
    uint64_t v174 = *(void **)(v173 + 16);
    *(void *)(v173 + swift_weakDestroy(v0 + 16) = v171;
    unsigned __int8 v175 = *(_BYTE *)(v173 + 24);
    *(_BYTE *)(v173 + 24) = 1;
    sub_87F60(v174, v175);
    dispatch_group_leave(v101);
    goto LABEL_42;
  }

  uint64_t v208 = (void (*)(char *, char *, uint64_t))v73;
  sub_49B60(&v210, &v213);
  uint64_t v91 = v214;
  uint64_t v92 = v215;
  sub_6EA8(&v213, v214);
  dispatch thunk of AudioIntent.verb.getter(v91, v92);
  uint64_t v93 = v197;
  uint64_t v94 = *(void (**)(uint64_t, void, uint64_t))(v197 + 104);
  uint64_t v95 = v192;
  uint64_t v96 = v196;
  v94(v192, enum case for CommonAudio.Verb.like(_:), v196);
  uint64_t v97 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56);
  v97(v95, 0LL, 1LL, v96);
  uint64_t v98 = v191;
  uint64_t v99 = v191 + *(int *)(v195 + 48);
  sub_D8208(v69, v191);
  sub_D8208(v95, v99);
  int v100 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  if (v100(v98, 1LL, v96) != 1)
  {
    uint64_t v102 = v185;
    sub_D8208(v98, v185);
    if (v100(v99, 1LL, v96) != 1)
    {
      uint64_t v178 = v76;
      uint64_t v126 = v197;
      os_log_type_t v127 = v184;
      (*(void (**)(char *, uint64_t, uint64_t))(v197 + 32))(v184, v99, v96);
      uint64_t v128 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      LODWORD(v205) = dispatch thunk of static Equatable.== infix(_:_:)(v102, v127, v96, v128);
      id v129 = *(void (**)(char *, uint64_t))(v126 + 8);
      uint64_t v75 = (uint64_t)v204;
      v129(v127, v96);
      sub_1F6CC(v192, &qword_284DB0);
      sub_1F6CC(v206, &qword_284DB0);
      v129((char *)v102, v96);
      uint64_t v76 = v178;
      sub_1F6CC(v98, &qword_284DB0);
      sub_874C4((uint64_t)&v213, (uint64_t)&v210);
LABEL_19:
      uint64_t v178 = v76;
      uint64_t v103 = v211;
      uint64_t v104 = v212;
      sub_6EA8(&v210, v211);
      uint64_t v105 = v188;
      dispatch thunk of AudioIntent.verb.getter(v103, v104);
      uint64_t v106 = (uint64_t)v187;
      uint64_t v107 = v196;
      v94((uint64_t)v187, enum case for CommonAudio.Verb.unlike(_:), v196);
      v97(v106, 0LL, 1LL, v107);
      uint64_t v108 = v189;
      uint64_t v109 = v189 + *(int *)(v195 + 48);
      sub_D8208(v105, v189);
      sub_D8208(v106, v109);
      if (v100(v108, 1LL, v107) == 1)
      {
        sub_1F6CC(v106, &qword_284DB0);
        uint64_t v108 = v189;
        sub_1F6CC(v105, &qword_284DB0);
        int v110 = v100(v109, 1LL, v107);
        uint64_t v101 = v201;
        uint64_t v74 = v207;
        if (v110 == 1)
        {
          sub_1F6CC(v108, &qword_284DB0);
          uint64_t v76 = v178;
          goto LABEL_29;
        }
      }

      else
      {
        sub_D8208(v108, v75);
        int v125 = v100(v109, 1LL, v107);
        uint64_t v101 = v201;
        uint64_t v74 = v207;
        if (v125 != 1)
        {
          uint64_t v158 = v197;
          os_log_t v159 = v184;
          (*(void (**)(char *, uint64_t, uint64_t))(v197 + 32))(v184, v109, v107);
          uint64_t v160 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
          LODWORD(v206) = dispatch thunk of static Equatable.== infix(_:_:)(v75, v159, v107, v160);
          uint64_t v161 = v107;
          uint64_t v162 = *(void (**)(char *, uint64_t))(v158 + 8);
          v162(v159, v161);
          sub_1F6CC(v106, &qword_284DB0);
          sub_1F6CC(v188, &qword_284DB0);
          v162((char *)v75, v161);
          sub_1F6CC(v108, &qword_284DB0);
          sub_6C3C(&v210);
          uint64_t v76 = v178;
          if ((v206 & 1) != 0) {
            goto LABEL_30;
          }
          goto LABEL_38;
        }

        sub_1F6CC(v106, &qword_284DB0);
        sub_1F6CC(v188, &qword_284DB0);
        (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v75, v107);
      }

      sub_1F6CC(v108, &qword_284DA8);
      sub_6C3C(&v210);
LABEL_38:
      sub_6C3C(&v213);
      int v73 = (void (*)(char *, uint64_t))v208;
      goto LABEL_39;
    }

    sub_1F6CC(v192, &qword_284DB0);
    sub_1F6CC(v206, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v102, v96);
LABEL_18:
    sub_1F6CC(v98, &qword_284DA8);
    sub_874C4((uint64_t)&v213, (uint64_t)&v210);
    goto LABEL_19;
  }

  sub_1F6CC(v95, &qword_284DB0);
  uint64_t v98 = v191;
  sub_1F6CC(v69, &qword_284DB0);
  sub_1F6CC(v98, &qword_284DB0);
  sub_874C4((uint64_t)&v213, (uint64_t)&v210);
LABEL_29:
  sub_6C3C(&v210);
LABEL_30:
  id v130 = v76;
  if (!v209) {
    id v130 = [objc_allocWithZone(INUpdateMediaAffinityIntent) init];
  }
  uint64_t v131 = v214;
  uint64_t v132 = v215;
  uint64_t v133 = sub_6EA8(&v213, v214);
  uint64_t v211 = v131;
  uint64_t v212 = v132;
  os_log_type_t v134 = sub_10974(&v210);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v131 - 8) + 16LL))(v134, v133, v131);
  uint64_t v135 = (void *)(v186 + 16);
  uint64_t v136 = v186 + 56;
  uint64_t v137 = (void *)swift_allocObject(&unk_26F460, 40LL, 7LL);
  v137[2] = v130;
  v137[3] = sub_87F54;
  uint64_t v138 = v202;
  _BYTE v137[4] = v202;
  id v139 = v76;
  id v140 = v130;
  swift_retain(v138);
  sub_F7A80((uint64_t)v134, v135, v136, (uint64_t)sub_F3054, (uint64_t)v137, v140, v131, v132);
  swift_release(v137);

  sub_6C3C(&v210);
  sub_6C3C(&v213);
  uint64_t v141 = v138;
  return swift_release(v141);
}

uint64_t sub_F3024()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_F3058(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 96);
}

uint64_t type metadata accessor for CommonViewProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonViewProvider);
}

uint64_t sub_F30B0(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = swift_retain_n(a1, 2LL);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = v8;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v34 = a2;
    uint64_t v18 = v17;
    uint64_t v37 = a1;
    uint64_t v38 = v17;
    uint64_t v35 = a3;
    *(_DWORD *)uint64_t v16 = 136315138;
    v32[1] = v16 + 4;
    uint64_t v19 = type metadata accessor for App(0LL);
    unint64_t v20 = sub_F3364();
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v19, v20);
    unint64_t v23 = v22;
    uint64_t v37 = sub_6978(v21, v22, &v38);
    a3 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v23);
    _os_log_impl(&dword_0, v13, v14, "CommonViewProvider#makeViewsForNeedsDisambiguation for app: %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v7);
  }

  else
  {

    swift_release_n(a1, 2LL);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  uint64_t v25 = SiriKitDisambiguationList.disambiguationItems.getter(v24);
  uint64_t v26 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForAppleTV(disambiguationItems:)();
  swift_bridgeObjectRelease(v25);
  type metadata accessor for SiriKitAceViewBuilder(0LL);
  uint64_t v27 = SiriKitAceViewBuilder.__allocating_init()();
  uint64_t v28 = dispatch thunk of SiriKitAceViewBuilder.withDisambiguationList(disambiguationList:)(v26);
  uint64_t v29 = swift_release(v27);
  uint64_t v30 = dispatch thunk of SiriKitAceViewBuilder.build()(v29);
  swift_release(v28);
  a3(v30, 0LL);

  return swift_bridgeObjectRelease(v30);
}

unint64_t sub_F3364()
{
  unint64_t result = qword_283AB0;
  if (!qword_283AB0)
  {
    uint64_t v1 = type metadata accessor for App(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for App, v1);
    atomic_store(result, (unint64_t *)&qword_283AB0);
  }

  return result;
}

void sub_F33AC( void *a1, void *a2, void *a3, void *a4, void (*a5)(uint64_t *), uint64_t a6, void *a7)
{
  id v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  id v15 = a1;
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v33 = a7;
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v40 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    v32[1] = v18 + 4;
    uint64_t ObjectType = swift_getObjectType(v15);
    uint64_t v21 = sub_6C5C(&qword_288EE0);
    uint64_t v22 = String.init<A>(describing:)(&ObjectType, v21);
    unint64_t v24 = v23;
    uint64_t ObjectType = sub_6978(v22, v23, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v40);

    unint64_t v25 = v24;
    a7 = v33;
    swift_bridgeObjectRelease(v25);
    _os_log_impl(&dword_0, v16, v17, "CommonViewProvider called for Intent: %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v20;
    a6 = v34;
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v27 = v37;
  uint64_t v28 = (void *)v37[24];
  swift_retain(v37);
  uint64_t v29 = v38;
  swift_retain(v38);
  id v30 = v35;
  swift_retain(a6);
  id v31 = a7;
  sub_3CAE8(v29, v30, v28, v27, (uint64_t)v29, v30, v36, a6, v31);
  swift_release(v27);
  swift_release(v29);

  swift_release(a6);
}

uint64_t sub_F3660()
{
  uint64_t v8 = type metadata accessor for DeviceResolutionProvider(0LL);
  uint64_t v9 = &protocol witness table for DeviceResolutionProvider;
  uint64_t v0 = sub_10974(&v7);
  static DeviceResolutionProvider.current.getter(v0);
  uint64_t v5 = type metadata accessor for SharedContextProvider(0LL);
  uint64_t v6 = &protocol witness table for SharedContextProvider;
  *(void *)&__int128 v4 = static SharedContextProvider.shared.getter();
  uint64_t v1 = type metadata accessor for DetermineFlowStrategy();
  uint64_t v2 = swift_allocObject(v1, 96LL, 7LL);
  sub_FF54(&v7, v2 + 16);
  uint64_t result = sub_FF54(&v4, v2 + 56);
  qword_296A68 = v2;
  return result;
}

uint64_t sub_F36FC()
{
  uint64_t result = sub_9EF84();
  qword_296A70 = result;
  return result;
}

id sub_F3718()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DetermineIntentHandler()) init];
  static Determine.intentHandler = (uint64_t)result;
  return result;
}

uint64_t *Determine.intentHandler.unsafeMutableAddressor()
{
  if (qword_2838B8 != -1) {
    swift_once(&qword_2838B8, sub_F3718);
  }
  return &static Determine.intentHandler;
}

id static Determine.intentHandler.getter()
{
  if (qword_2838B8 != -1) {
    swift_once(&qword_2838B8, sub_F3718);
  }
  swift_beginAccess(&static Determine.intentHandler, v1, 0LL, 0LL);
  return (id)static Determine.intentHandler;
}

void static Determine.intentHandler.setter(uint64_t a1)
{
  if (qword_2838B8 != -1) {
    swift_once(&qword_2838B8, sub_F3718);
  }
  swift_beginAccess(&static Determine.intentHandler, v3, 1LL, 0LL);
  uint64_t v2 = (void *)static Determine.intentHandler;
  static Determine.intentHandler = a1;
}

uint64_t (*static Determine.intentHandler.modify(uint64_t a1))(void)
{
  if (qword_2838B8 != -1) {
    swift_once(&qword_2838B8, sub_F3718);
  }
  swift_beginAccess(&static Determine.intentHandler, a1, 33LL, 0LL);
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for Determine()
{
  return &type metadata for Determine;
}

uint64_t type metadata accessor for SearchForMedia.ChildFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin14SearchForMedia16ChildFlowFactory);
}

uint64_t sub_F3900(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v7 = *(void *)(v55 - 8);
  uint64_t v8 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = v21;
  void v61[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v61[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v61[0] = a3;
  uint64_t v22 = type metadata accessor for SearchForMediaCatDialogService();
  unint64_t v23 = (void *)swift_allocObject(v22, 56LL, 7LL);
  v23[2] = 0xD000000000000011LL;
  void v23[3] = 0x800000000021D860LL;
  v23[5] = 0xD000000000000014LL;
  v23[6] = 0x800000000021FFF0LL;
  v23[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)v60);
  uint64_t v24 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v21, 1LL, 1LL, v24);
  unint64_t v51 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v25 = a1;
  swift_retain_n(a1, 2LL);
  uint64_t v26 = swift_retain(v23);
  uint64_t v27 = v18;
  BOOL v50 = v18;
  uint64_t v28 = static FeatureFlagProvider.shared.getter(v26);
  uint64_t v29 = v11;
  static StringsFileResolver.shared.getter(v28);
  uint64_t v30 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v31 = swift_allocObject(v30, 168LL, 7LL);
  uint64_t v32 = v13;
  uint64_t v33 = v27;
  uint64_t v34 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v33, v12);
  uint64_t v35 = v7;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v37 = v53;
  uint64_t v38 = v29;
  uint64_t v39 = v29;
  uint64_t v40 = v55;
  v36(v53, v38, v55);
  uint64_t v41 = sub_EE3F0(v23, v25, v51, v60, v52, v16, v37, v31);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v50, v34);
  sub_157C4((uint64_t)v61, (uint64_t)v60);
  uint64_t v58 = v34;
  __n128 v59 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  sub_10974(&v57);
  uint64_t v42 = swift_retain(v41);
  static FeatureFlagProvider.shared.getter(v42);
  uint64_t v43 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v44 = swift_allocObject(v43, 56LL, 7LL);
  sub_FF54(&v57, v44 + 16);
  uint64_t v58 = v43;
  __n128 v59 = &off_272868;
  swift_release(v23);
  swift_release(v41);
  swift_release(v25);
  *(void *)&__int128 v57 = v44;
  sub_6C3C(v61);
  sub_6C3C(v54);
  uint64_t v45 = v56;
  uint64_t v46 = v56 + qword_28E118;
  uint64_t v47 = type metadata accessor for ConfirmationResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  *(void *)(v45 + swift_weakDestroy(v0 + 16) = v41;
  sub_FF54(v60, v45 + 24);
  sub_FF54(&v57, v45 + 64);
  return v45;
}

uint64_t sub_F3CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 56) = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  *(void *)(a6 + 64) = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)(a6 + 3sub_6C3C(v0 + 2) = a3;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  *(void *)(a6 + 96) = v12;
  *(void *)(a6 + 104) = &protocol witness table for FeatureFlagProvider;
  uint64_t v13 = sub_10974((void *)(a6 + 72));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v13, a4, v12);
  uint64_t v14 = type metadata accessor for StringsFileResolver(0LL);
  *(void *)(a6 + 144) = v14;
  *(void *)(a6 + 15sub_6C3C(v0 + 2) = &protocol witness table for StringsFileResolver;
  uint64_t v15 = sub_10974((void *)(a6 + 120));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v15, a5, v14);
  *(void *)(a6 + 1sub_6C3C(v0 + 12) = &off_26AB50;
  strcpy((char *)(a6 + 160), "MediaItemType");
  *(_WORD *)(a6 + 174) = -4864;
  *(void *)(a6 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(a6 + 24) = a2;
  return a6;
}

uint64_t sub_F3DC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v44 = a4;
  uint64_t v9 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = v23;
  uint64_t v54 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v55 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v53 = a2;
  uint64_t v51 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v52 = &off_272868;
  *(void *)&__int128 v50 = a3;
  uint64_t v24 = type metadata accessor for SearchForMediaCatDialogService();
  uint64_t v25 = (void *)swift_allocObject(v24, 56LL, 7LL);
  _OWORD v25[2] = 0xD000000000000011LL;
  v25[3] = 0x800000000021D860LL;
  void v25[5] = 0xD000000000000014LL;
  v25[6] = 0x800000000021FFF0LL;
  v25[4] = a1;
  sub_157C4((uint64_t)a4, (uint64_t)v49);
  uint64_t v26 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v23, 1LL, 1LL, v26);
  unint64_t v42 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v27 = a1;
  uint64_t v28 = swift_retain(a1);
  uint64_t v29 = v20;
  uint64_t v41 = v20;
  uint64_t v30 = static FeatureFlagProvider.shared.getter(v28);
  static StringsFileResolver.shared.getter(v30);
  uint64_t v31 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v32 = swift_allocObject(v31, 168LL, 7LL);
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v29, v14);
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v13, v47);
  uint64_t v38 = sub_EE3F0(v25, v27, v42, v49, v43, v18, v36, v32);
  swift_release(v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v34);
  sub_6C3C(v44);
  uint64_t v39 = v48;
  *(void *)(v48 + swift_weakDestroy(v0 + 16) = v38;
  sub_FF54(&v53, v39 + 24);
  sub_FF54(&v50, v39 + 64);
  return v39;
}

uint64_t sub_F40CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v44 = a2;
  uint64_t v9 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = v23;
  uint64_t v54 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v55 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v53 = a3;
  uint64_t v51 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v52 = &off_272868;
  *(void *)&__int128 v50 = a4;
  uint64_t v24 = type metadata accessor for SearchForMediaCatDialogService();
  uint64_t v25 = (void *)swift_allocObject(v24, 56LL, 7LL);
  _OWORD v25[2] = 0xD000000000000011LL;
  v25[3] = 0x800000000021D860LL;
  void v25[5] = 0xD000000000000014LL;
  v25[6] = 0x800000000021FFF0LL;
  v25[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)v49);
  uint64_t v26 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v23, 1LL, 1LL, v26);
  unint64_t v42 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v27 = a1;
  uint64_t v28 = swift_retain(a1);
  uint64_t v29 = v20;
  uint64_t v41 = v20;
  uint64_t v30 = static FeatureFlagProvider.shared.getter(v28);
  static StringsFileResolver.shared.getter(v30);
  uint64_t v31 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v32 = swift_allocObject(v31, 168LL, 7LL);
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v29, v14);
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v13, v47);
  uint64_t v38 = sub_EE3F0(v25, v27, v42, v49, v43, v18, v36, v32);
  swift_release(v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v34);
  sub_6C3C(v44);
  uint64_t v39 = v48;
  *(void *)(v48 + swift_weakDestroy(v0 + 16) = v38;
  sub_FF54(&v53, v39 + 24);
  sub_FF54(&v50, v39 + 64);
  return v39;
}

uint64_t sub_F43D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v6 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v11;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = v21;
  uint64_t v22 = type metadata accessor for SearchForMediaCatDialogService();
  unint64_t v23 = (void *)swift_allocObject(v22, 56LL, 7LL);
  v23[2] = 0xD000000000000011LL;
  void v23[3] = 0x800000000021D860LL;
  v23[5] = 0xD000000000000014LL;
  v23[6] = 0x800000000021FFF0LL;
  uint64_t v57 = a1;
  v23[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)v59);
  uint64_t v24 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v21, 1LL, 1LL, v24);
  unint64_t v47 = sub_7F548(_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v25 = swift_retain(v23);
  uint64_t v46 = v18;
  uint64_t v26 = static FeatureFlagProvider.shared.getter(v25);
  static StringsFileResolver.shared.getter(v26);
  uint64_t v27 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v28 = swift_allocObject(v27, 168LL, 7LL);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v48 = v16;
  uint64_t v29 = v13;
  v51(v16, v18, v13);
  uint64_t v30 = v52;
  uint64_t v31 = v53;
  __int128 v50 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v32 = v58;
  v50(v58, v10, v53);
  uint64_t v33 = sub_EE3F0(v23, v57, v47, v59, v49, v16, v32, v28);
  swift_release(v23);
  uint64_t v52 = *(void *)(v30 + 8);
  ((void (*)(char *, uint64_t))v52)(v10, v31);
  uint64_t v49 = *(char **)(v12 + 8);
  uint64_t v34 = v46;
  uint64_t v35 = v29;
  ((void (*)(char *, uint64_t))v49)(v46, v29);
  uint64_t v36 = type metadata accessor for SearchForMediaViewProvider(0LL);
  uint64_t v37 = swift_allocObject(v36, 64LL, 7LL);
  swift_retain(v33);
  sub_1B8F7C((uint64_t *)(v37 + 24));
  *(void *)(v37 + swift_weakDestroy(v0 + 16) = v33;
  swift_retain(v33);
  uint64_t v38 = swift_retain(v37);
  uint64_t v39 = static FeatureFlagProvider.shared.getter(v38);
  uint64_t v40 = v10;
  static StringsFileResolver.shared.getter(v39);
  uint64_t v41 = (uint64_t)v48;
  v51(v48, v34, v35);
  uint64_t v42 = (uint64_t)v58;
  v50(v58, v40, v31);
  uint64_t v43 = v55;
  uint64_t v44 = sub_F3CBC(v37, v33, v55, v41, v42, v56);
  swift_retain(v43);
  ((void (*)(char *, uint64_t))v52)(v40, v31);
  ((void (*)(char *, uint64_t))v49)(v34, v35);
  swift_release(v23);
  swift_release(v33);
  swift_release(v37);
  swift_release(v57);
  sub_6C3C(v54);
  return v44;
}

uint64_t sub_F477C( uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v56 = a7;
  unint64_t v58 = a6;
  uint64_t v57 = a5;
  __n128 v59 = a3;
  uint64_t v11 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v63 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v17 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = v19;
  uint64_t v20 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v61 = v20;
  uint64_t v60 = v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v62 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v54 - v25;
  __chkstk_darwin(v24);
  uint64_t v64 = (char *)&v54 - v27;
  (*(void (**)(void))(v28 + 32))();
  uint64_t v73 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v74 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v72 = a4;
  uint64_t v29 = v11;
  uint64_t v70 = v11;
  uint64_t v71 = &protocol witness table for FeatureFlagProvider;
  uint64_t v30 = sub_10974(&v69);
  uint64_t v31 = *(void (**)(void *, uint64_t, uint64_t))(v12 + 32);
  uint64_t v54 = v11;
  v31(v30, v57, v11);
  uint64_t v67 = type metadata accessor for SiriAudioOutputProvider();
  unint64_t v68 = &off_272868;
  *(void *)&__int128 v66 = v58;
  uint64_t v32 = type metadata accessor for SearchForMediaCatDialogService();
  uint64_t v33 = (void *)swift_allocObject(v32, 56LL, 7LL);
  v33[2] = 0xD000000000000011LL;
  v33[3] = 0x800000000021D860LL;
  v33[5] = 0xD000000000000014LL;
  void v33[6] = 0x800000000021FFF0LL;
  uint64_t v34 = a1;
  void v33[4] = a1;
  *(void *)(a7 + 56) = v33;
  sub_157C4((uint64_t)a3, (uint64_t)v65);
  uint64_t v35 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v19, 1LL, 1LL, v35);
  unint64_t v58 = sub_7F548(_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v36 = swift_retain(v33);
  uint64_t v37 = v16;
  uint64_t v38 = static FeatureFlagProvider.shared.getter(v36);
  uint64_t v39 = v26;
  static StringsFileResolver.shared.getter(v38);
  uint64_t v40 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v41 = swift_allocObject(v40, 168LL, 7LL);
  uint64_t v42 = v12;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v44 = v63;
  v43(v63, v16, v29);
  uint64_t v45 = v60;
  uint64_t v46 = v62;
  uint64_t v47 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v62, v39, v61);
  uint64_t v48 = sub_EE3F0(v33, v34, v58, v65, v55, v44, v46, v41);
  swift_release(v33);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
  v49(v39, v47);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v54);
  uint64_t v50 = v56;
  *(void *)(v56 + 19sub_6C3C(v0 + 2) = v48;
  uint64_t v51 = type metadata accessor for SearchForMediaViewProvider(0LL);
  uint64_t v52 = swift_allocObject(v51, 64LL, 7LL);
  swift_retain(v48);
  sub_1B8F7C((uint64_t *)(v52 + 24));
  *(void *)(v52 + swift_weakDestroy(v0 + 16) = v48;
  v49(v64, v47);
  *(void *)(v50 + 184) = v52;
  sub_FF54(v59, v50 + 16);
  sub_FF54(&v72, v50 + 64);
  sub_FF54(&v69, v50 + 104);
  sub_FF54(&v66, v50 + 144);
  return v50;
}

uint64_t sub_F4BAC()
{
  uint64_t v0 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v0);
  id v187 = (char *)&v164 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v175 = *(void *)(v2 - 8);
  uint64_t v3 = (ValueMetadata *)v2;
  uint64_t v172 = (ValueMetadata *)v2;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v185 = (char *)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v173 = (char *)&v164 - v6;
  uint64_t v184 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v174 = *(void (**)(void))(v184 - 8);
  uint64_t v7 = __chkstk_darwin(v184);
  uint64_t v183 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v182 = (char *)&v164 - v9;
  uint64_t v10 = sub_6C5C(&qword_288FA8);
  uint64_t v181 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v180 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v164 - v13;
  uint64_t v15 = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
  uint64_t v16 = sub_1641C(0LL, &qword_288FB0, &OBJC_CLASS___INSearchForMediaIntentResponse_ptr);
  uint64_t v190 = v14;
  uint64_t v178 = v16;
  RCHChildFlowProducers.init()(v15);
  uint64_t v17 = sub_64FAC();
  static AceService.current.getter(&v196);
  uint64_t v18 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v19 = static SiriKitTaskLoggingProvider.shared.getter(v18);
  uint64_t v20 = _s27NeedsDisambiguationStrategyCMa_1(0LL);
  uint64_t v21 = swift_allocObject(v20, 176LL, 7LL);
  uint64_t v22 = sub_F43D4(v17, &v196, v19, v21);
  swift_release(v19);
  *(void *)&__int128 v196 = v22;
  uint64_t v23 = sub_10430( &qword_288FB8,  _s27NeedsDisambiguationStrategyCMa_1,  (uint64_t)&protocol conformance descriptor for MediaItemDisambiguationStrategy<A>);
  uint64_t v24 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(&v196, v20, v23);
  uint64_t v26 = v25;
  swift_release(v22);
  RCHChildFlowProducers.needsDisambiguationFlowCompletion.setter(v24, v26, v10);
  uint64_t v27 = sub_64FAC();
  uint64_t v28 = static SiriKitTaskLoggingProvider.shared.getter(v27);
  uint64_t v197 = v3;
  double v198 = &protocol witness table for FeatureFlagProvider;
  uint64_t v29 = sub_10974(&v196);
  static FeatureFlagProvider.shared.getter(v29);
  uint64_t v30 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v31 = swift_allocObject(v30, 56LL, 7LL);
  sub_FF54(&v196, v31 + 16);
  static AceService.current.getter(&v196);
  __int128 v200 = (ValueMetadata *)v30;
  dispatch_group_t v201 = &off_272868;
  *(void *)&__int128 v199 = v31;
  uint64_t v32 = _s18NeedsValueStrategyCMa();
  uint64_t v33 = swift_allocObject(v32, 104LL, 7LL);
  uint64_t v34 = sub_1094C((uint64_t)&v199, v30);
  uint64_t v35 = *(void *)(*(void *)(v30 - 8) + 64LL);
  __chkstk_darwin(v34);
  unint64_t v188 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  uint64_t v36 = (uint64_t *)((char *)&v164 - v188);
  uint64_t v189 = *(void (**)(char *))(v37 + 16);
  v189((char *)&v164 - v188);
  uint64_t v38 = *v36;
  swift_retain(v31);
  uint64_t v39 = sub_F3DC4(v27, v28, v38, &v196, v33);
  sub_6C3C(&v199);
  swift_release(v31);
  *(void *)&__int128 v196 = v39;
  uint64_t v40 = sub_10430(&qword_288FC0, (uint64_t (*)(uint64_t))_s18NeedsValueStrategyCMa, (uint64_t)&unk_214F8C);
  uint64_t v41 = static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)(&v196, v32, v40);
  uint64_t v43 = v42;
  swift_release(v39);
  RCHChildFlowProducers.needsValueFlowCompletion.setter(v41, v43, v10);
  uint64_t v44 = sub_64FAC();
  static AceService.current.getter(&v196);
  uint64_t v45 = _s25NeedsConfirmationStrategyCMa(0LL);
  swift_allocObject(v45, 216LL, 7LL);
  uint64_t v46 = sub_D6200(v44, &v196);
  *(void *)&__int128 v196 = v46;
  uint64_t v47 = sub_10430(&qword_288FC8, _s25NeedsConfirmationStrategyCMa, (uint64_t)&unk_21B258);
  uint64_t v48 = static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(&v196, v45, v47);
  uint64_t v50 = v49;
  swift_release(v46);
  uint64_t v186 = v10;
  RCHChildFlowProducers.needsConfirmationFlowCompletion.setter(v48, v50, v10);
  uint64_t v51 = sub_64FAC();
  uint64_t v52 = static AceService.current.getter(&v196);
  uint64_t v53 = static SiriKitTaskLoggingProvider.shared.getter(v52);
  uint64_t v54 = _s21ConfirmIntentStrategyCMa_0(0LL);
  uint64_t v55 = swift_allocObject(v54, *(unsigned int *)(v54 + 48), *(unsigned __int16 *)(v54 + 52));
  uint64_t v56 = sub_F3900(v51, &v196, v53, v55);
  *(void *)&__int128 v196 = v56;
  uint64_t v57 = sub_10430(&qword_288FD0, _s21ConfirmIntentStrategyCMa_0, (uint64_t)&unk_21B870);
  uint64_t v58 = static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)( &v196,  sub_231E4,  0LL,  v54,  v57);
  uint64_t v60 = v59;
  swift_release(v56);
  RCHChildFlowProducers.confirmIntentFlowCompletion.setter(v58, v60, v10);
  uint64_t v169 = (void (*)(void, void))sub_64FAC();
  uint64_t v61 = v182;
  static StringsFileResolver.shared.getter(v169);
  unint64_t v62 = static AceService.current.getter(&v196);
  uint64_t v179 = v18;
  uint64_t v167 = static SiriKitTaskLoggingProvider.shared.getter(v62);
  id v63 = v173;
  static FeatureFlagProvider.shared.getter(v167);
  uint64_t v64 = v172;
  __int128 v200 = v172;
  dispatch_group_t v201 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v65 = sub_10974(&v199);
  static FeatureFlagProvider.shared.getter(v65);
  uint64_t v66 = swift_allocObject(v30, 56LL, 7LL);
  sub_FF54(&v199, v66 + 16);
  __int128 v200 = (ValueMetadata *)v30;
  dispatch_group_t v201 = &off_272868;
  *(void *)&__int128 v199 = v66;
  unint64_t v168 = type metadata accessor for SearchForMedia.HandleIntentStrategy();
  uint64_t v166 = swift_allocObject(v168, 200LL, 7LL);
  uint64_t v67 = sub_1094C((uint64_t)&v199, v30);
  uint64_t v176 = v35;
  __chkstk_darwin(v67);
  unint64_t v68 = (unint64_t *)((char *)&v164 - v188);
  uint64_t v177 = v30;
  v189((char *)&v164 - v188);
  unint64_t v165 = *v68;
  __int128 v69 = v174;
  uint64_t v70 = (uint64_t)v183;
  uint64_t v171 = (void (*)(char *, char *, uint64_t))*((void *)v174 + 2);
  v171(v183, v61, v184);
  uint64_t v71 = v175;
  uint64_t v72 = (uint64_t)v185;
  uint64_t v170 = *(void (**)(char *, char *, ValueMetadata *))(v175 + 16);
  v170(v185, v63, v64);
  swift_retain(v66);
  uint64_t v73 = v167;
  swift_retain(v167);
  uint64_t v74 = v169;
  uint64_t v75 = sub_F477C((uint64_t)v169, v70, &v196, v73, v72, v165, v166);
  swift_release(v74);
  uint64_t v76 = v63;
  unint64_t v77 = v64;
  uint64_t v169 = *(void (**)(void, void))(v71 + 8);
  v169(v63, v64);
  swift_release(v73);
  int v78 = (void (*)(void))*((void *)v69 + 1);
  uint64_t v79 = v182;
  uint64_t v174 = v78;
  v78();
  sub_6C3C(&v199);
  swift_release(v66);
  *(void *)&__int128 v196 = v75;
  uint64_t v80 = sub_10430( &qword_288FD8,  (uint64_t (*)(uint64_t))type metadata accessor for SearchForMedia.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for SearchForMedia.HandleIntentStrategy);
  uint64_t v81 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(&v196, v168, v80);
  uint64_t v83 = v82;
  swift_release(v75);
  RCHChildFlowProducers.handleIntentFlowCompletion.setter(v81, v83, v186);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v84 = CATDefaultMode;
  uint64_t v85 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v86 = static MorphunProvider.shared.getter(v85);
  uint64_t v87 = static AceService.current.getter(&v199);
  static FeatureFlagProvider.shared.getter(v87);
  uint64_t v88 = type metadata accessor for CatService();
  uint64_t v89 = swift_allocObject(v88, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v196);
  uint64_t v90 = (uint64_t)v185;
  uint64_t v91 = (void (*)(uint64_t, char *, ValueMetadata *))v170;
  v170(v185, v76, v64);
  swift_retain(v86);
  uint64_t v92 = sub_10FF64(&v196, v84, v86, &v199, v90, v89);
  swift_release(v86);
  uint64_t v93 = (void (*)(char *, ValueMetadata *))v169;
  v169(v76, v64);
  swift_release(v86);
  uint64_t v94 = type metadata accessor for SearchForMediaCatDialogService();
  uint64_t v95 = (void *)swift_allocObject(v94, 56LL, 7LL);
  v95[2] = 0xD000000000000011LL;
  v95[3] = 0x800000000021D860LL;
  v95[5] = 0xD000000000000014LL;
  v95[6] = 0x800000000021FFF0LL;
  v95[4] = v92;
  uint64_t v96 = v92;
  uint64_t v97 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56LL))(v187, 1LL, 1LL, v97);
  unint64_t v168 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v175 = v92;
  swift_retain_n(v92, 2LL);
  uint64_t v98 = static AceService.current.getter(&v196);
  uint64_t v99 = static FeatureFlagProvider.shared.getter(v98);
  static StringsFileResolver.shared.getter(v99);
  uint64_t v100 = type metadata accessor for SearchForMediaDialogProvider(0LL);
  uint64_t v101 = swift_allocObject(v100, 168LL, 7LL);
  v91(v90, v76, v77);
  uint64_t v102 = v93;
  uint64_t v103 = v183;
  uint64_t v104 = v184;
  v171(v183, v79, v184);
  uint64_t v105 = sub_EE3F0(v95, v96, v168, &v196, v187, v90, v103, v101);
  swift_release(v95);
  ((void (*)(char *, uint64_t))v174)(v79, v104);
  v102(v76, v77);
  uint64_t v106 = type metadata accessor for SearchForMediaViewProvider(0LL);
  uint64_t v107 = swift_allocObject(v106, 64LL, 7LL);
  swift_retain_n(v105, 2LL);
  sub_1B8F7C((uint64_t *)(v107 + 24));
  *(void *)(v107 + swift_weakDestroy(v0 + 16) = v105;
  uint64_t v197 = &type metadata for StringsBackedAppNameResolver;
  unint64_t v108 = sub_15780();
  double v198 = (void *)v108;
  *(void *)&__int128 v196 = swift_allocObject(&unk_26F640, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v196 + 16);
  __int128 v200 = (ValueMetadata *)type metadata accessor for DeviceProvider(0LL);
  dispatch_group_t v201 = (_UNKNOWN **)&protocol witness table for DeviceProvider;
  sub_10974(&v199);
  static DeviceProvider.shared.getter();
  uint64_t v194 = v77;
  uint64_t v109 = v77;
  uint64_t v195 = &protocol witness table for FeatureFlagProvider;
  int v110 = sub_10974(&v193);
  static FeatureFlagProvider.shared.getter(v110);
  v192[3] = type metadata accessor for UserPreferenceProvider(0LL);
  v192[4] = &protocol witness table for UserPreferenceProvider;
  unsigned int v111 = sub_10974(v192);
  static UserPreferenceProvider.shared.getter(v111);
  v191[3] = type metadata accessor for InstalledAppProvider(0LL);
  v191[4] = &protocol witness table for InstalledAppProvider;
  uint64_t v112 = sub_10974(v191);
  static InstalledAppProvider.shared.getter(v112);
  uint64_t v113 = sub_6C5C(&qword_288D08);
  uint64_t v114 = (void *)swift_allocObject(v113, *(unsigned int *)(v113 + 48), *(unsigned __int16 *)(v113 + 52));
  uint64_t v115 = class metadata base offset for CommonAppResolver;
  uint64_t v116 = (char *)v114 + *(void *)(class metadata base offset for CommonAppResolver + *v114 + 8);
  strcpy(v116, "resolutionType");
  v116[15] = -18;
  sub_157C4((uint64_t)&v196, (uint64_t)v114 + *(void *)(v115 + *v114 + 16));
  sub_157C4((uint64_t)&v199, (uint64_t)v114 + *(void *)(class metadata base offset for CommonAppResolver + *v114 + 24));
  sub_157C4((uint64_t)&v193, (uint64_t)v114 + *(void *)(class metadata base offset for CommonAppResolver + *v114 + 32));
  sub_157C4((uint64_t)v192, (uint64_t)v114 + *(void *)(class metadata base offset for CommonAppResolver + *v114 + 40));
  uint64_t v117 = sub_157C4( (uint64_t)v191,  (uint64_t)v114 + *(void *)(class metadata base offset for CommonAppResolver + *v114 + 48));
  uint64_t v118 = InstrumentedAppResolutionService.init()(v117);
  sub_6C3C(v191);
  sub_6C3C(v192);
  sub_6C3C(&v193);
  sub_6C3C(&v199);
  sub_6C3C(&v196);
  static AceService.current.getter(&v196);
  __int128 v200 = &type metadata for StringsBackedAppNameResolver;
  dispatch_group_t v201 = (_UNKNOWN **)v108;
  *(void *)&__int128 v199 = swift_allocObject(&unk_26F640, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v199 + 16);
  uint64_t v194 = v77;
  uint64_t v195 = &protocol witness table for FeatureFlagProvider;
  uint64_t v119 = sub_10974(&v193);
  static FeatureFlagProvider.shared.getter(v119);
  swift_setDeallocating(v107);
  swift_release(*(void *)(v107 + 16));
  sub_6C3C((void *)(v107 + 24));
  swift_deallocClassInstance(v107, 64LL, 7LL);
  uint64_t v120 = sub_6C5C(&qword_288FE0);
  uint64_t v121 = (void *)swift_allocObject(v120, 176LL, 7LL);
  v121[21] = 0LL;
  v121[2] = v118;
  v121[3] = v105;
  v121[4] = sub_ED690;
  v121[5] = 0LL;
  sub_FF54(&v196, (uint64_t)(v121 + 6));
  sub_FF54(&v199, (uint64_t)(v121 + 11));
  sub_FF54(&v193, (uint64_t)(v121 + 16));
  *(void *)&__int128 v196 = v121;
  uint64_t v122 = sub_21318(&qword_288FE8, &qword_288FE0, (uint64_t)&unk_21ACA4);
  uint64_t v123 = v178;
  uint64_t v124 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(strategy:)(&v196, v120, v178, v122);
  uint64_t v126 = v125;
  swift_release(v121);
  uint64_t v127 = v186;
  uint64_t v128 = v190;
  RCHChildFlowProducers.appResolutionFlowCompletion.setter(v124, v126, v186);
  id v187 = (char *)v105;
  uint64_t v129 = swift_retain(v105);
  uint64_t v130 = sub_1B8F70(v129);
  *(void *)&__int128 v196 = v130;
  uint64_t v131 = sub_6C5C(&qword_288FF0);
  uint64_t v132 = sub_21318(&qword_288FF8, &qword_288FF0, (uint64_t)&unk_216828);
  uint64_t v133 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(&v196, v131, v123, v132);
  uint64_t v135 = v134;
  swift_release(v130);
  RCHChildFlowProducers.requestTCCAcceptanceFlowCompletion.setter(v133, v135, v127);
  uint64_t v136 = sub_64FAC();
  uint64_t v137 = static AceService.current.getter(&v196);
  uint64_t v138 = static SiriKitTaskLoggingProvider.shared.getter(v137);
  __int128 v200 = v109;
  dispatch_group_t v201 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  id v139 = sub_10974(&v199);
  static FeatureFlagProvider.shared.getter(v139);
  uint64_t v140 = v177;
  uint64_t v141 = v128;
  uint64_t v142 = swift_allocObject(v177, 56LL, 7LL);
  sub_FF54(&v199, v142 + 16);
  __int128 v200 = (ValueMetadata *)v140;
  dispatch_group_t v201 = &off_272868;
  *(void *)&__int128 v199 = v142;
  uint64_t v143 = type metadata accessor for SearchForMedia.UnsupportedValueStrategy();
  uint64_t v144 = swift_allocObject(v143, 104LL, 7LL);
  uint64_t v145 = sub_1094C((uint64_t)&v199, v140);
  __chkstk_darwin(v145);
  BOOL v146 = (uint64_t *)((char *)&v164 - v188);
  v189((char *)&v164 - v188);
  uint64_t v147 = *v146;
  swift_retain(v142);
  uint64_t v148 = sub_F40CC(v136, &v196, v138, v147, v144);
  sub_6C3C(&v199);
  swift_release(v142);
  *(void *)&__int128 v196 = v148;
  uint64_t v149 = sub_10430( (unint64_t *)&qword_289000,  (uint64_t (*)(uint64_t))type metadata accessor for SearchForMedia.UnsupportedValueStrategy,  (uint64_t)&protocol conformance descriptor for SearchForMedia.UnsupportedValueStrategy);
  uint64_t v150 = static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)(&v196, v143, v149);
  uint64_t v152 = v151;
  swift_release(v148);
  RCHChildFlowProducers.unsupportedValueFlowCompletion.setter(v150, v152, v127);
  uint64_t v153 = sub_6C5C(&qword_289008);
  uint64_t v154 = swift_allocObject(v153, 16LL, 7LL);
  *(void *)&__int128 v196 = v154;
  uint64_t v155 = sub_21318(&qword_289010, &qword_289008, (uint64_t)&unk_217468);
  uint64_t v156 = static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithDialogProducer<A>(strategy:)(&v196, v153, v155);
  uint64_t v158 = v157;
  swift_release(v154);
  RCHChildFlowProducers.continueInAppFlowCompletion.setter(v156, v158, v127);
  uint64_t v159 = v181;
  uint64_t v160 = v180;
  (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v180, v141, v127);
  uint64_t v161 = sub_6C5C(&qword_289018);
  swift_allocObject(v161, *(unsigned int *)(v161 + 48), *(unsigned __int16 *)(v161 + 52));
  uint64_t v162 = RCHChildFlowFactory.init(producers:)(v160);
  swift_release(v175);
  swift_release(v187);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v141, v127);
  return v162;
}

uint64_t sub_F5C84()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_F5CB0()
{
  uint64_t v0 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static StringsFileResolver.shared.getter(v2);
  uint64_t v11 = v0;
  uint64_t v12 = &protocol witness table for StringsFileResolver;
  uint64_t v5 = sub_10974(&v10);
  (*(void (**)(void *, char *, uint64_t))(v1 + 16))(v5, v4, v0);
  uint64_t v6 = type metadata accessor for ConfirmationViewProvider();
  uint64_t v7 = swift_allocObject(v6, 56LL, 7LL);
  sub_FF54(&v10, v7 + 16);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_296A80 = v7;
  return result;
}

uint64_t sub_F5D74()
{
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

uint64_t type metadata accessor for ConfirmationViewProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin24ConfirmationViewProvider);
}

uint64_t getEnumTagSinglePayload for ConfirmationPromptCreationError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  else {
    int v2 = 2;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ConfirmationPromptCreationError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_F5E4C + 4 * asc_217B50[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_F5E6C + 4 * byte_217B55[v4]))();
  }
}

_BYTE *sub_F5E4C(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_F5E6C(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_F5E74(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_F5E7C(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_F5E84(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_F5E8C(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationPromptCreationError()
{
  return &type metadata for ConfirmationPromptCreationError;
}

unint64_t sub_F5EAC()
{
  unint64_t result = qword_2890E8;
  if (!qword_2890E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_217C10, &type metadata for ConfirmationPromptCreationError);
    atomic_store(result, (unint64_t *)&qword_2890E8);
  }

  return result;
}

Swift::Int sub_F5EF0()
{
  return Hasher._finalize()();
}

void sub_F5F30()
{
}

Swift::Int sub_F5F54(uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t sub_F5F90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  uint64_t v126 = a5;
  uint64_t v127 = a8;
  uint64_t v124 = a1;
  uint64_t v125 = a2;
  uint64_t v128 = a9;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v123 = (char *)&v120 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v120 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v120 - v27;
  uint64_t v29 = swift_allocObject(&unk_26F788, 32LL, 7LL);
  uint64_t v30 = v29;
  if (!a4)
  {
    swift_deallocUninitializedObject(v29, 32LL, 7LL);
    goto LABEL_5;
  }

  *(void *)(v29 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v29 + 24) = a4;
  uint64_t v31 = swift_bridgeObjectRetain(a4);
  if (!a7)
  {
    uint64_t v122 = a10;
    unsigned __int8 v39 = static SiriAudioEnvironment.isHomePod.getter(v31);
    uint64_t v41 = *(void *)(v30 + 16);
    uint64_t v40 = *(void *)(v30 + 24);
    uint64_t v42 = swift_bridgeObjectRetain(v40);
    uint64_t v43 = static BundleIdentifiers.tvAirPlayBundleIdentifier.getter(v42);
    uint64_t v45 = v44;
    if (v41 == v43 && v40 == v44)
    {
      swift_bridgeObjectRelease_n(v40, 2LL);
      uint64_t v46 = v126;
      if ((v39 & (a6 != 0)) == 0) {
        goto LABEL_30;
      }
    }

    else
    {
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v40);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v45);
      char v48 = v47 & v39;
      uint64_t v46 = v126;
      if ((v48 & 1) == 0 || !a6)
      {
LABEL_30:
        uint64_t v126 = a12;
        uint64_t v75 = *(void *)(v30 + 16);
        uint64_t v74 = *(void *)(v30 + 24);
        uint64_t v76 = swift_bridgeObjectRetain(v74);
        uint64_t v77 = static BundleIdentifiers.remotePlayerService.getter(v76);
        uint64_t v79 = v78;
        if (v75 == v77 && v74 == v78)
        {
          swift_bridgeObjectRelease_n(v74, 2LL);
          if (!a6) {
            goto LABEL_47;
          }
        }

        else
        {
          char v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v74);
          swift_bridgeObjectRelease(v74);
          swift_bridgeObjectRelease(v79);
          if ((v80 & 1) == 0 || !a6)
          {
LABEL_47:
            uint64_t v97 = *(void *)(v30 + 16);
            uint64_t v96 = *(void *)(v30 + 24);
            uint64_t v98 = swift_bridgeObjectRetain(v96);
            uint64_t v99 = static BundleIdentifiers.boltPlaybackAppBundleIdentifier.getter(v98);
            uint64_t v101 = v100;
            if (v97 == v99 && v96 == v100)
            {
              uint64_t v102 = swift_bridgeObjectRelease_n(v96, 2LL);
            }

            else
            {
              char v103 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v96);
              swift_bridgeObjectRelease(v96);
              uint64_t v102 = swift_bridgeObjectRelease(v101);
              if ((v103 & 1) == 0)
              {
LABEL_53:
                uint64_t v106 = a11[3];
                uint64_t v107 = a11[4];
                sub_6EA8(a11, v106);
                sub_157C4((uint64_t)v122, (uint64_t)v130);
                sub_157C4(v126, (uint64_t)v129);
                unint64_t v108 = (void *)swift_allocObject(&unk_26F7B0, 144LL, 7LL);
                uint64_t v109 = v128;
                v108[2] = v127;
                v108[3] = v109;
                sub_FF54(v130, (uint64_t)(v108 + 4));
                sub_FF54(v129, (uint64_t)(v108 + 9));
                v108[14] = a13;
                v108[15] = v30;
                uint64_t v110 = v125;
                v108[16] = v124;
                v108[17] = v110;
                swift_bridgeObjectRetain(v110);
                swift_retain(v30);
                swift_retain(v109);
                id v111 = a13;
                dispatch thunk of NowPlayingProviding.item(completion:)(sub_F8024, v108, v106, v107);
                swift_release(v30);
                return swift_release(v108);
              }
            }

            if ((static SiriAudioEnvironment.isHomePod.getter(v102) & 1) != 0)
            {
              uint64_t v104 = a11[3];
              uint64_t v105 = a11[4];
              sub_6EA8(a11, v104);
              swift_retain(v30);
              dispatch thunk of NowPlayingProviding.thirdPartyApp(completion:)(sub_F8058, v30, v104, v105);
              swift_release(v30);
            }

            goto LABEL_53;
          }
        }

        uint64_t v81 = swift_bridgeObjectRetain(a6);
        uint64_t v82 = static BundleIdentifiers.classical.getter(v81);
        uint64_t v84 = v83;
        if (v82 == v46 && v83 == a6)
        {
          swift_bridgeObjectRelease(v83);
        }

        else
        {
          char v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, a6);
          swift_bridgeObjectRelease(v84);
          if ((v85 & 1) == 0)
          {
LABEL_46:
            swift_bridgeObjectRelease(a6);
            goto LABEL_47;
          }
        }

        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v86 = sub_6960(v17, (uint64_t)qword_2969C8);
        uint64_t v87 = v123;
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v123, v86, v17);
        uint64_t v88 = swift_bridgeObjectRetain(a6);
        uint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
        os_log_type_t v90 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v121 = swift_slowAlloc(32LL, -1LL);
          *(void *)&v130[0] = v121;
          *(_DWORD *)uint64_t v91 = 136315138;
          uint64_t v120 = v91 + 4;
          swift_bridgeObjectRetain(a6);
          *(void *)&v129[0] = sub_6978(v46, a6, (uint64_t *)v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
          swift_bridgeObjectRelease_n(a6, 3LL);
          _os_log_impl( &dword_0,  v89,  v90,  "UpdateMediaIntent#amend bundleId is remote player service and representedBundleId is Classical: %s, setting bundle id to Classical",  v91,  0xCu);
          uint64_t v92 = v121;
          swift_arrayDestroy(v121, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v92, -1LL, -1LL);
          swift_slowDealloc(v91, -1LL, -1LL);

          uint64_t v93 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v123, v17);
        }

        else
        {

          swift_bridgeObjectRelease_n(a6, 2LL);
          uint64_t v93 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v87, v17);
        }

        uint64_t v94 = static BundleIdentifiers.classical.getter(v93);
        a6 = *(void *)(v30 + 24);
        *(void *)(v30 + swift_weakDestroy(v0 + 16) = v94;
        *(void *)(v30 + 24) = v95;
        goto LABEL_46;
      }
    }

    uint64_t v49 = swift_bridgeObjectRetain(a6);
    uint64_t v50 = static BundleIdentifiers.music.getter(v49);
    uint64_t v52 = v51;
    if (v50 == v46 && v51 == a6) {
      goto LABEL_18;
    }
    char v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, a6);
    uint64_t v54 = swift_bridgeObjectRelease(v52);
    if ((v53 & 1) != 0) {
      goto LABEL_23;
    }
    uint64_t v55 = static BundleIdentifiers.musicOnAppleTV.getter(v54);
    uint64_t v52 = v56;
    if (v55 == v46 && v56 == a6)
    {
LABEL_18:
      swift_bridgeObjectRelease(v52);
    }

    else
    {
      char v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v46, a6);
      swift_bridgeObjectRelease(v52);
      if ((v57 & 1) == 0)
      {
        uint64_t v112 = v122[3];
        uint64_t v113 = v122[4];
        sub_6EA8(v122, v112);
        if ((dispatch thunk of FeatureFlagProviding.isSiriForAirPlayEnabled.getter(v112, v113) & 1) != 0)
        {
          if (qword_283888 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v114 = sub_6960(v17, (uint64_t)qword_2969C8);
          (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v26, v114, v17);
          uint64_t v115 = swift_bridgeObjectRetain_n(a6, 2LL);
          uint64_t v116 = (os_log_s *)Logger.logObject.getter(v115);
          os_log_type_t v117 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v119 = swift_slowAlloc(32LL, -1LL);
            *(void *)&v130[0] = v119;
            *(_DWORD *)uint64_t v118 = 136315138;
            uint64_t v121 = (uint64_t)(v118 + 4);
            swift_bridgeObjectRetain(a6);
            *(void *)&v129[0] = sub_6978(v126, a6, (uint64_t *)v130);
            uint64_t v46 = v126;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
            swift_bridgeObjectRelease_n(a6, 3LL);
            _os_log_impl( &dword_0,  v116,  v117,  "UpdateMediaIntent#amend bundleId is AirPlay, replacing bundleId with representedBundleId %s and may attemp t to execute on the device of the requesting user",  v118,  0xCu);
            swift_arrayDestroy(v119, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v119, -1LL, -1LL);
            swift_slowDealloc(v118, -1LL, -1LL);
          }

          else
          {

            swift_bridgeObjectRelease_n(a6, 2LL);
          }

          (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
          unint64_t v73 = *(void *)(v30 + 24);
          *(void *)(v30 + swift_weakDestroy(v0 + 16) = v46;
          *(void *)(v30 + 24) = a6;
        }

        else
        {
          unint64_t v73 = a6;
        }

        goto LABEL_29;
      }
    }

uint64_t sub_F6A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a3 || !a2)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v14 = sub_6960(v8, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v14, v8);
    swift_errorRetain(a3);
    uint64_t v15 = swift_errorRetain(a3);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v18 = 136315138;
      v24[1] = v18 + 4;
      v25[0] = v19;
      uint64_t v26 = a3;
      swift_errorRetain(a3);
      uint64_t v20 = sub_6C5C(&qword_2890F0);
      uint64_t v21 = String.init<A>(describing:)(&v26, v20);
      unint64_t v23 = v22;
      uint64_t v26 = sub_6978(v21, v22, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl( &dword_0,  v16,  v17,  "UpdateMediaIntent#amend error retrieving nowPlayingProvider thirdPartyApp. Failed with error: %s",  v18,  0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  else
  {
    swift_beginAccess(a4 + 16, v25, 1LL, 0LL);
    uint64_t v12 = *(void *)(a4 + 24);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = a1;
    *(void *)(a4 + 24) = a2;
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRelease(v12);
  }

void sub_F6C78( uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void *a4, char *a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v143 = a6;
  uint64_t v144 = a8;
  uint64_t v148 = a3;
  uint64_t v149 = a7;
  uint64_t v145 = a5;
  BOOL v146 = a2;
  uint64_t v142 = a4;
  uint64_t v147 = a1;
  uint64_t v140 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v138 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v130 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = sub_6C5C(&qword_284DA0);
  uint64_t v10 = __chkstk_darwin(v139);
  uint64_t v133 = (uint64_t)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v141 = (uint64_t)&v126 - v12;
  uint64_t v13 = sub_6C5C(&qword_284DC8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v132 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v129 = (uint64_t)&v126 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v134 = (uint64_t)&v126 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v135 = (char *)&v126 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v131 = (uint64_t)&v126 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v136 = (uint64_t)&v126 - v25;
  __chkstk_darwin(v24);
  uint64_t v137 = (uint64_t)&v126 - v26;
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_6C5C(&qword_284E30);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = type metadata accessor for NowPlayingInfo(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v126 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v126 - v39;
  sub_FF10(v147, (uint64_t)v33, &qword_284E30);
  if (swift_getEnumCaseMultiPayload(v33, v31) != 1)
  {
    uint64_t v147 = v149 + 16;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v40, v33, v34);
    char v47 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    uint64_t v126 = v40;
    v47(v38, v40, v34);
    uint64_t v48 = type metadata accessor for NowPlayingIntent(0LL);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    uint64_t v49 = sub_B8A00((uint64_t)v38);
    uint64_t v50 = v142[3];
    uint64_t v51 = v142[4];
    sub_6EA8(v142, v50);
    char v52 = dispatch thunk of FeatureFlagProviding.isExpandedFavoritesEnabled.getter(v50, v51);
    uint64_t v128 = v34;
    uint64_t v127 = v35;
    if ((v52 & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v53 = *((void *)v145 + 3);
    uint64_t v54 = *((void *)v145 + 4);
    sub_6EA8(v145, v53);
    uint64_t v55 = v137;
    dispatch thunk of AudioIntent.mediaType.getter(v53, v54);
    uint64_t v56 = v138;
    char v57 = *(void (**)(uint64_t, void, uint64_t))(v138 + 104);
    uint64_t v58 = v136;
    uint64_t v59 = v140;
    v57(v136, enum case for CommonAudio.MediaType.artist(_:), v140);
    uint64_t v142 = *(void **)(v56 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v142)(v58, 0LL, 1LL, v59);
    uint64_t v60 = v141;
    uint64_t v61 = v141 + *(int *)(v139 + 48);
    sub_FF10(v55, v141, &qword_284DC8);
    uint64_t v62 = v60;
    sub_FF10(v58, v61, &qword_284DC8);
    uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    if (v63(v62, 1LL, v59) == 1)
    {
      sub_1F6CC(v58, &qword_284DC8);
      sub_1F6CC(v55, &qword_284DC8);
      int v64 = v63(v61, 1LL, v59);
      uint64_t v65 = (uint64_t)v135;
      if (v64 == 1)
      {
        sub_1F6CC(v141, &qword_284DC8);
        sub_157C4((uint64_t)v145, (uint64_t)v150);
LABEL_21:
        sub_6C3C(v150);
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v66 = v131;
      sub_FF10(v62, v131, &qword_284DC8);
      if (v63(v61, 1LL, v59) != 1)
      {
        uint64_t v74 = v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v130, v61, v59);
        uint64_t v75 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        char v76 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v74, v59, v75);
        uint64_t v77 = *(void (**)(char *, uint64_t))(v138 + 8);
        v77(v74, v59);
        sub_1F6CC(v136, &qword_284DC8);
        sub_1F6CC(v137, &qword_284DC8);
        v77((char *)v66, v59);
        uint64_t v56 = v138;
        sub_1F6CC(v62, &qword_284DC8);
        sub_157C4((uint64_t)v145, (uint64_t)v150);
        uint64_t v65 = (uint64_t)v135;
        if ((v76 & 1) != 0) {
          goto LABEL_21;
        }
LABEL_14:
        uint64_t v67 = v151;
        uint64_t v68 = v152;
        sub_6EA8(v150, v151);
        dispatch thunk of AudioIntent.mediaType.getter(v67, v68);
        uint64_t v69 = v134;
        uint64_t v70 = v140;
        v57(v134, enum case for CommonAudio.MediaType.album(_:), v140);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v142)(v69, 0LL, 1LL, v70);
        uint64_t v71 = v133;
        uint64_t v72 = v133 + *(int *)(v139 + 48);
        sub_FF10(v65, v133, &qword_284DC8);
        sub_FF10(v69, v72, &qword_284DC8);
        if (v63(v71, 1LL, v70) == 1)
        {
          sub_1F6CC(v69, &qword_284DC8);
          sub_1F6CC(v65, &qword_284DC8);
          if (v63(v72, 1LL, v70) == 1)
          {
            sub_1F6CC(v71, &qword_284DC8);
            goto LABEL_21;
          }
        }

        else
        {
          uint64_t v73 = v129;
          sub_FF10(v71, v129, &qword_284DC8);
          if (v63(v72, 1LL, v70) != 1)
          {
            uint64_t v93 = v130;
            (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v130, v72, v70);
            uint64_t v94 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
            char v95 = dispatch thunk of static Equatable.== infix(_:_:)(v73, v93, v70, v94);
            uint64_t v96 = v70;
            uint64_t v97 = *(void (**)(char *, uint64_t))(v56 + 8);
            v97(v93, v96);
            sub_1F6CC(v134, &qword_284DC8);
            sub_1F6CC(v65, &qword_284DC8);
            v97((char *)v73, v96);
            sub_1F6CC(v71, &qword_284DC8);
            sub_6C3C(v150);
            if ((v95 & 1) == 0)
            {
LABEL_23:
              uint64_t v82 = swift_retain(v49);
              uint64_t v83 = (void *)sub_5FDD4(v82, 0LL, 0LL);
              uint64_t v145 = v49;
              swift_release(v49);
              uint64_t v84 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
              char v85 = v143;
              if (swift_dynamicCastObjCClass(v143, v84))
              {
                id v86 = [v85 backingStore];
                uint64_t v87 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
                uint64_t v88 = swift_dynamicCastObjCClass(v86, v87);
                if (v88)
                {
LABEL_36:
                  uint64_t v100 = (void *)v88;
                  id v101 = (id)INIntentSlotValueTransformToMediaSearch(v83);
                  [v100 setMediaSearch:v101];

                  uint64_t v83 = v86;
                  id v86 = v101;
                }
              }

              else
              {
                uint64_t v89 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
                if (swift_dynamicCastObjCClass(v85, v89))
                {
                  id v86 = [v85 backingStore];
                  uint64_t v90 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
                  uint64_t v88 = swift_dynamicCastObjCClass(v86, v90);
                  if (v88) {
                    goto LABEL_36;
                  }
                }

                else
                {
                  uint64_t v91 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
                  if (swift_dynamicCastObjCClass(v85, v91))
                  {
                    id v86 = [v85 backingStore];
                    uint64_t v92 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
                    uint64_t v88 = swift_dynamicCastObjCClass(v86, v92);
                    if (v88) {
                      goto LABEL_36;
                    }
                  }

                  else
                  {
                    uint64_t v98 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
                    if (!swift_dynamicCastObjCClass(v85, v98)) {
                      goto LABEL_38;
                    }
                    id v86 = [v85 backingStore];
                    uint64_t v99 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
                    uint64_t v88 = swift_dynamicCastObjCClass(v86, v99);
                    if (v88) {
                      goto LABEL_36;
                    }
                  }
                }
              }

              uint64_t v83 = v86;
LABEL_38:

              swift_beginAccess(v147, v150, 0LL, 0LL);
              uint64_t v102 = *(void (**)(char *, uint64_t))(v149 + 16);
              unint64_t v103 = *(void *)(v149 + 24);
              swift_bridgeObjectRetain(v103);
              id v104 = sub_1941C(v102, v103, 0LL, 0LL);
              swift_bridgeObjectRelease(v103);
              uint64_t v105 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
              if (swift_dynamicCastObjCClass(v85, v105))
              {
                id v106 = [v85 backingStore];
                uint64_t v107 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
                unint64_t v108 = (void *)swift_dynamicCastObjCClass(v106, v107);
                uint64_t v109 = v126;
                if (!v108) {

                }
                [v108 setIntentMetadata:v104];
                uint64_t v110 = v146;
                goto LABEL_46;
              }

              uint64_t v111 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
              uint64_t v112 = swift_dynamicCastObjCClass(v85, v111);
              uint64_t v109 = v126;
              if (v112)
              {
                id v113 = [v85 backingStore];
                uint64_t v114 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
                unint64_t v108 = (void *)swift_dynamicCastObjCClass(v113, v114);
                uint64_t v110 = v146;
                if (!v108) {
LABEL_44:
                }
              }

              else
              {
                uint64_t v121 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
                uint64_t v122 = swift_dynamicCastObjCClass(v85, v121);
                uint64_t v110 = v146;
                if (v122)
                {
                  id v113 = [v85 backingStore];
                  uint64_t v123 = &OBJC_CLASS____INPBUpdateMediaAffinityIntent;
                }

                else
                {
                  uint64_t v124 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
                  if (!swift_dynamicCastObjCClass(v85, v124))
                  {
                    unint64_t v108 = v104;
                    goto LABEL_46;
                  }

                  id v113 = [v85 backingStore];
                  uint64_t v123 = &OBJC_CLASS____INPBSearchForMediaIntent;
                }

                uint64_t v125 = objc_opt_self(v123);
                unint64_t v108 = (void *)swift_dynamicCastObjCClass(v113, v125);
                if (!v108) {
                  goto LABEL_44;
                }
              }

              [v108 setIntentMetadata:v104];

LABEL_46:
              swift_beginAccess(v147, v154, 0LL, 0LL);
              uint64_t v115 = *(void *)(v149 + 16);
              uint64_t v116 = *(void **)(v149 + 24);
              uint64_t v153 = v85;
              sub_F8060();
              id v117 = v85;
              swift_bridgeObjectRetain(v116);
              v118.value._uint64_t countAndFlagsBits = v115;
              v118.value._object = v116;
              v119.value._uint64_t countAndFlagsBits = v144;
              v119.value._object = a9;
              PrivateMediaIntentDataProviding.setResolvedAppInfo(appIdentifier:appName:sharedUserID:)( v118,  v119,  (Swift::String_optional)0);
              uint64_t v120 = swift_bridgeObjectRelease(v116);
              v110(v120);
              swift_release(v145);
              (*(void (**)(char *, uint64_t))(v127 + 8))(v109, v128);

              return;
            }

uint64_t sub_F7A80( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v50 = a6;
  uint64_t v49 = a5;
  uint64_t v48 = a4;
  uint64_t v46 = a3;
  char v47 = a2;
  uint64_t v10 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v44 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_284DB0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v45 = (uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v54[3] = a7;
  v54[4] = a8;
  sub_10974(v54);
  (*(void (**)(void))(*(void *)(a7 - 8) + 16LL))();
  dispatch thunk of AudioIntent.verb.getter(a7, a8);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v21, enum case for CommonAudio.Verb.like(_:), v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
  uint64_t v24 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_FF10((uint64_t)v23, (uint64_t)v15, &qword_284DB0);
  sub_FF10((uint64_t)v21, v24, &qword_284DB0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v25((uint64_t)v15, 1LL, v10) == 1)
  {
    sub_1F6CC((uint64_t)v21, &qword_284DB0);
    sub_1F6CC((uint64_t)v23, &qword_284DB0);
    int v26 = v25(v24, 1LL, v10);
    uint64_t v27 = v50;
    if (v26 == 1)
    {
      sub_1F6CC((uint64_t)v15, &qword_284DB0);
LABEL_8:
      uint64_t v33 = 1LL;
      goto LABEL_10;
    }

    goto LABEL_6;
  }

  uint64_t v28 = v45;
  sub_FF10((uint64_t)v15, v45, &qword_284DB0);
  if (v25(v24, 1LL, v10) == 1)
  {
    sub_1F6CC((uint64_t)v21, &qword_284DB0);
    sub_1F6CC((uint64_t)v23, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v10);
    uint64_t v27 = v50;
LABEL_6:
    sub_1F6CC((uint64_t)v15, &qword_284DA8);
    goto LABEL_9;
  }

  uint64_t v29 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v44, v24, v10);
  uint64_t v30 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v31 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v29, v10, v30);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v29, v10);
  sub_1F6CC((uint64_t)v21, &qword_284DB0);
  sub_1F6CC((uint64_t)v23, &qword_284DB0);
  v32((char *)v28, v10);
  sub_1F6CC((uint64_t)v15, &qword_284DB0);
  uint64_t v27 = v50;
  if ((v31 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v33 = 2LL;
LABEL_10:
  id v34 = [v27 backingStore];
  uint64_t v35 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
  uint64_t v36 = (void *)swift_dynamicCastObjCClass(v34, v35);
  if (v36) {
    [v36 setAffinityType:INMediaAffinityTypeGetBackingType(v33)];
  }

  uint64_t v37 = v47;
  uint64_t v38 = v47[3];
  uint64_t v39 = v47[4];
  sub_6EA8(v47, v38);
  sub_157C4(v46, (uint64_t)v53);
  sub_157C4((uint64_t)v37, (uint64_t)v52);
  sub_157C4((uint64_t)v54, (uint64_t)v51);
  uint64_t v40 = (void *)swift_allocObject(&unk_26F760, 160LL, 7LL);
  uint64_t v41 = v49;
  _OWORD v40[2] = v48;
  v40[3] = v41;
  sub_FF54(v53, (uint64_t)(v40 + 4));
  sub_FF54(v52, (uint64_t)(v40 + 9));
  sub_FF54(v51, (uint64_t)(v40 + 14));
  v40[19] = v27;
  swift_retain(v41);
  id v42 = v27;
  dispatch thunk of NowPlayingProviding.app(completion:)(sub_F7F78, v40, v38, v39);
  swift_release(v40);
  return sub_6C3C(v54);
}

uint64_t sub_F7F34()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_F7F78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  return sub_F5F90( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(uint64_t (**)(uint64_t))(v7 + 16),  *(void *)(v7 + 24),  (void *)(v7 + 32),  (void *)(v7 + 72),  v7 + 112,  *(void **)(v7 + 152));
}

uint64_t sub_F7FB4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_F7FD8()
{
  swift_release(*(void *)(v0 + 120));
  swift_bridgeObjectRelease(*(void *)(v0 + 136));
  return swift_deallocObject(v0, 144LL, 7LL);
}

void sub_F8024(uint64_t a1)
{
}

uint64_t sub_F8058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_F6A18(a1, a2, a3, v3);
}

unint64_t sub_F8060()
{
  unint64_t result = qword_284CA8;
  if (!qword_284CA8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_284CA8);
  }

  return result;
}

uint64_t sub_F809C(char *a1, char *a2)
{
  return sub_142360(*a1, *a2);
}

Swift::Int sub_F80A8()
{
  int v1 = *v0;
  Hasher.init(_seed:)(v5, 0LL);
  if (v1) {
    uint64_t v2 = 6647407LL;
  }
  else {
    uint64_t v2 = 1936287860LL;
  }
  if (v1) {
    unint64_t v3 = 0xE300000000000000LL;
  }
  else {
    unint64_t v3 = 0xE400000000000000LL;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_F8118(uint64_t a1)
{
  if (*v1) {
    uint64_t v2 = 6647407LL;
  }
  else {
    uint64_t v2 = 1936287860LL;
  }
  if (*v1) {
    unint64_t v3 = 0xE300000000000000LL;
  }
  else {
    unint64_t v3 = 0xE400000000000000LL;
  }
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_F8164(uint64_t a1)
{
  int v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2) {
    uint64_t v3 = 6647407LL;
  }
  else {
    uint64_t v3 = 1936287860LL;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000LL;
  }
  else {
    unint64_t v4 = 0xE400000000000000LL;
  }
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_F81D0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v3._uint64_t countAndFlagsBits = *a1;
  unint64_t v4 = (void *)a1[1];
  v3._object = v4;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26AB80, v3);
  uint64_t result = swift_bridgeObjectRelease(v4);
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_F822C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1936287860LL;
  if (*v1) {
    uint64_t v2 = 6647407LL;
  }
  unint64_t v3 = 0xE400000000000000LL;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000LL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t getEnumTagSinglePayload for MediaPlayerReference(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

uint64_t storeEnumTagSinglePayload for MediaPlayerReference(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_F8338 + 4 * byte_217C85[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_F836C + 4 * byte_217C80[v4]))();
}

uint64_t sub_F836C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_F8374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0xF837CLL);
  }
  return result;
}

uint64_t sub_F8388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0xF8390LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_F8394(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_F839C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_F83A8(_BYTE *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerReference()
{
  return &type metadata for MediaPlayerReference;
}

unint64_t sub_F83C8()
{
  unint64_t result = qword_2890F8;
  if (!qword_2890F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_217DA0, &type metadata for MediaPlayerReference);
    atomic_store(result, (unint64_t *)&qword_2890F8);
  }

  return result;
}

void sub_F840C(void *a1@<X8>)
{
  *a1 = &off_26ABD0;
}

uint64_t sub_F841C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_F855C();
  unint64_t v5 = sub_F85A0();
  unint64_t v6 = sub_F85E4();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_F8480()
{
  unint64_t result = qword_289100;
  if (!qword_289100)
  {
    uint64_t v1 = sub_45D50(&qword_289108);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_289100);
  }

  return result;
}

unint64_t sub_F84D0()
{
  unint64_t result = qword_289110;
  if (!qword_289110)
  {
    unint64_t result = swift_getWitnessTable(&unk_217CC8, &type metadata for MediaPlayerReference);
    atomic_store(result, (unint64_t *)&qword_289110);
  }

  return result;
}

unint64_t sub_F8518()
{
  unint64_t result = qword_289118;
  if (!qword_289118)
  {
    unint64_t result = swift_getWitnessTable(&unk_217DE0, &type metadata for MediaPlayerReference);
    atomic_store(result, (unint64_t *)&qword_289118);
  }

  return result;
}

unint64_t sub_F855C()
{
  unint64_t result = qword_289120;
  if (!qword_289120)
  {
    unint64_t result = swift_getWitnessTable(&unk_217D30, &type metadata for MediaPlayerReference);
    atomic_store(result, (unint64_t *)&qword_289120);
  }

  return result;
}

unint64_t sub_F85A0()
{
  unint64_t result = qword_289128;
  if (!qword_289128)
  {
    unint64_t result = swift_getWitnessTable(&unk_217CF8, &type metadata for MediaPlayerReference);
    atomic_store(result, (unint64_t *)&qword_289128);
  }

  return result;
}

unint64_t sub_F85E4()
{
  unint64_t result = qword_289130;
  if (!qword_289130)
  {
    unint64_t result = swift_getWitnessTable(&unk_217D68, &type metadata for MediaPlayerReference);
    atomic_store(result, (unint64_t *)&qword_289130);
  }

  return result;
}

uint64_t sub_F8628(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

id DetermineIntentHandler.__allocating_init()()
{
  return [objc_allocWithZone(v0) init];
}

id DetermineIntentHandler.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static NowPlayingProvider.shared.getter(v4);
  uint64_t v7 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v8 = static SiriKitTaskLoggingProvider.shared.getter(v7);
  v17[3] = v2;
  v17[4] = &protocol witness table for NowPlayingProvider;
  uint64_t v9 = sub_10974(v17);
  (*(void (**)(void *, char *, uint64_t))(v3 + 16))(v9, v6, v2);
  v16[3] = v7;
  v16[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v16[0] = v8;
  uint64_t v10 = (objc_class *)type metadata accessor for DetermineIntentHandler();
  id v11 = objc_allocWithZone(v10);
  sub_157C4( (uint64_t)v17,  (uint64_t)v11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider);
  sub_157C4( (uint64_t)v16,  (uint64_t)v11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider);
  v15.receiver = v11;
  v15.super_class = v10;
  swift_retain(v8);
  id v12 = objc_msgSendSuper2(&v15, "init");
  sub_6C3C(v16);
  sub_6C3C(v17);
  swift_release(v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t ObjectType = swift_getObjectType(v1);
  swift_deallocPartialClassInstance(v1, ObjectType, 88LL, 7LL);
  return v12;
}

uint64_t type metadata accessor for DetermineIntentHandler()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler);
}

uint64_t DetermineIntentHandler.resolveNowPlayingIntentInfo(for:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a3;
  uint64_t v60 = a2;
  uint64_t v4 = type metadata accessor for QueuePosition(0LL);
  uint64_t v63 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v58 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v59 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  id v11 = (char *)&v54 - v10;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v14 = v13(v11, v12, v6);
  objc_super v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_0, v15, v16, "DetermineIntentHandler#resolveNowPlayingIntentInfo Reached logic", v17, 2u);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  char v57 = *(void (**)(char *, uint64_t))(v7 + 8);
  v57(v11, v6);
  uint64_t v18 = swift_allocBox(v4);
  uint64_t v20 = v19;
  uint64_t v21 = v63;
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t))(v63 + 104);
  v22(v19, enum case for QueuePosition.current(_:), v4);
  if ([a1 queueLocation] == (char *)&dword_0 + 2)
  {
    uint64_t v23 = (unsigned int *)&enum case for QueuePosition.next(_:);
  }

  else
  {
    uint64_t v23 = (unsigned int *)&enum case for QueuePosition.previous(_:);
  }

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v4);
  v22(v20, *v23, v4);
LABEL_10:
  id v24 = [a1 targetDeviceIds];
  if (!v24)
  {
LABEL_15:
    uint64_t v39 = v61;
    uint64_t v40 = *(void *)&v61[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider + 24];
    uint64_t v41 = *(void *)&v61[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider + 32];
    sub_6EA8(&v61[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider], v40);
    id v42 = (void *)swift_allocObject(&unk_26F920, 48LL, 7LL);
    uint64_t v43 = v60;
    void v42[2] = v39;
    v42[3] = v43;
    uint64_t v44 = v62;
    v42[4] = v62;
    void v42[5] = v18;
    id v45 = v39;
    swift_retain(v44);
    swift_retain(v18);
    dispatch thunk of NowPlayingProviding.app(completion:)(sub_FB85C, v42, v40, v41);
    goto LABEL_18;
  }

  uint64_t v25 = v24;
  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, &type metadata for String);

  if (!*(void *)(v26 + 16))
  {
    swift_bridgeObjectRelease(v26);
    goto LABEL_15;
  }

  uint64_t v56 = v18;
  uint64_t v27 = v59;
  v13(v59, v12, v6);
  uint64_t v28 = swift_bridgeObjectRetain_n(v26, 2LL);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    char v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v55 = swift_slowAlloc(32LL, -1LL);
    uint64_t v65 = v55;
    *(_DWORD *)char v31 = 136315138;
    uint64_t v54 = v31 + 4;
    swift_bridgeObjectRetain(v26);
    uint64_t v33 = Array.description.getter(v32, &type metadata for String);
    unint64_t v35 = v34;
    swift_bridgeObjectRelease(v26);
    uint64_t v36 = v33;
    uint64_t v21 = v63;
    uint64_t v64 = sub_6978(v36, v35, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65);
    swift_bridgeObjectRelease_n(v26, 2LL);
    swift_bridgeObjectRelease(v35);
    _os_log_impl( &dword_0,  v29,  v30,  "DetermineIntentHandler#resolveNowPlayingIntentInfo targetDeviceIds present: %s",  v31,  0xCu);
    uint64_t v37 = v55;
    swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);

    uint64_t v38 = v59;
  }

  else
  {

    swift_bridgeObjectRelease_n(v26, 2LL);
    uint64_t v38 = v27;
  }

  v57(v38, v6);
  id v42 = (void *)swift_allocObject(&unk_26F948, 24LL, 7LL);
  void v42[2] = _swiftEmptyArrayStorage;
  uint64_t v46 = v61;
  uint64_t v47 = *(void *)&v61[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider + 24];
  uint64_t v63 = *(void *)&v61[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider + 32];
  sub_6EA8(&v61[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider], v47);
  uint64_t v48 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v58, v20, v4);
  uint64_t v49 = v21;
  uint64_t v50 = (void *)swift_allocObject(&unk_26F970, 48LL, 7LL);
  void v50[2] = v46;
  v50[3] = v42;
  uint64_t v51 = v62;
  v50[4] = v60;
  void v50[5] = v51;
  id v52 = v46;
  swift_retain(v42);
  swift_retain(v51);
  dispatch thunk of NowPlayingProviding.items(outputDeviceUIDs:queuePosition:completion:)( v26,  v48,  sub_FB8E4,  v50,  v47,  v63);
  swift_bridgeObjectRelease(v26);
  swift_release(v50);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v4);
  uint64_t v18 = v56;
LABEL_18:
  swift_release(v18);
  return swift_release(v42);
}

double sub_F8D6C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__n128), uint64_t a5)
{
  uint64_t v162 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v160 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v193 = type metadata accessor for NowPlayingInfo(0LL);
  uint64_t v163 = *(void *)(v193 - 8);
  uint64_t v11 = __chkstk_darwin(v193);
  uint64_t v13 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v159 = (char *)&v143 - v15;
  __chkstk_darwin(v14);
  double v198 = (char *)&v143 - v16;
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v17);
  id v187 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v19);
  uint64_t v186 = (char *)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v21);
  uint64_t v185 = (char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v183 = *(void *)(v23 - 8);
  uint64_t v184 = v23;
  __chkstk_darwin(v23);
  uint64_t v182 = (char *)&v143 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v181 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v180 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v179 = (char *)&v143 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v178 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v176 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for Logger(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v158 = (char *)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v157 = (char *)&v143 - v31;
  uint64_t v195 = type metadata accessor for NowPlayingInfoError(0LL);
  uint64_t v190 = *(void *)(v195 - 8);
  uint64_t v32 = __chkstk_darwin(v195);
  uint64_t v189 = (char *)&v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  unint64_t v35 = (char *)&v143 - v34;
  uint64_t v175 = sub_6C5C(&qword_284E30);
  __chkstk_darwin(v175);
  uint64_t v38 = (char *)&v143 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = (void *)(a3 + 16);
  if (*(void *)(a1 + 16))
  {
    uint64_t v197 = *(void *)(a1 + 16);
    unint64_t v188 = v39;
    uint64_t v156 = v13;
    uint64_t v145 = a5;
    BOOL v146 = a4;
    uint64_t v173 = (void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider);
    uint64_t v40 = a1 + ((*(unsigned __int8 *)(v36 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    uint64_t v172 = *(void *)(v36 + 72);
    uint64_t v150 = &v200;
    unsigned int v171 = enum case for AdditionalMetricsDescription.ModuleName.dih(_:);
    unsigned int v170 = enum case for AdditionalMetricsDescription.SourceFunction.resNowPlayInf(_:);
    unsigned int v155 = enum case for AdditionalMetricsDescription.StatusReason.success(_:);
    unsigned int v169 = enum case for TypeOfIntent.determine(_:);
    unsigned int v154 = enum case for ActivityType.completed(_:);
    unsigned int v153 = enum case for SiriKitReliabilityCodes.success(_:);
    unsigned int v152 = enum case for ActivityType.failed(_:);
    unsigned int v151 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v144 = a1;
    __n128 v41 = swift_bridgeObjectRetain(a1);
    v41.n128_u64[0] = 136446210LL;
    __n128 v149 = v41;
    uint64_t v148 = (char *)&type metadata for Any + 8;
    v41.n128_u64[0] = 136315138LL;
    __n128 v147 = v41;
    uint64_t v42 = v193;
    uint64_t v191 = v28;
    uint64_t v192 = v27;
    uint64_t v43 = v195;
    id v45 = v189;
    uint64_t v44 = v190;
    uint64_t v194 = v35;
    uint64_t v174 = v38;
    do
    {
      sub_FBC74(v40, (uint64_t)v38);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38, v175);
      uint64_t v196 = v40;
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v35, v38, v43);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v78 = sub_6960(v27, (uint64_t)qword_2969C8);
        uint64_t v79 = v157;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v157, v78, v27);
        uint64_t v80 = (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 16))(v45, v35, v43);
        uint64_t v81 = (os_log_s *)Logger.logObject.getter(v80);
        os_log_type_t v82 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v81, v82))
        {
          uint64_t v83 = swift_slowAlloc(12LL, -1LL);
          uint64_t v84 = swift_slowAlloc(32LL, -1LL);
          uint64_t v200 = v84;
          *(_DWORD *)uint64_t v83 = v149.n128_u32[0];
          unint64_t v85 = sub_FBCBC();
          uint64_t v86 = Error.localizedDescription.getter(v195, v85);
          unint64_t v88 = v87;
          *(void *)(v83 + 4) = sub_6978(v86, v87, &v200);
          __n128 v89 = swift_bridgeObjectRelease(v88);
          unint64_t v168 = *(void (**)(char *, uint64_t, __n128))(v44 + 8);
          v168(v45, v195, v89);
          _os_log_impl( &dword_0,  v81,  v82,  "DetermineIntentHandler#resolveNowPlayingIntentInfo failure with error in WHA use case: %{public}s",  (uint8_t *)v83,  0xCu);
          swift_arrayDestroy(v84, 1LL, v148);
          swift_slowDealloc(v84, -1LL, -1LL);
          uint64_t v90 = v83;
          uint64_t v43 = v195;
          swift_slowDealloc(v90, -1LL, -1LL);
        }

        else
        {
          unint64_t v168 = *(void (**)(char *, uint64_t, __n128))(v44 + 8);
          ((void (*)(char *, uint64_t))v168)(v45, v43);
        }

        (*(void (**)(char *, uint64_t))(v28 + 8))(v79, v27);
        uint64_t v46 = v177;
        uint64_t v47 = v176;
        uint64_t v48 = v178;
        (*(void (**)(char *, void, uint64_t))(v177 + 104))(v176, v171, v178);
        uint64_t v49 = v180;
        uint64_t v50 = v179;
        uint64_t v51 = v181;
        (*(void (**)(char *, void, uint64_t))(v180 + 104))(v179, v170, v181);
        unint64_t v52 = sub_FBCBC();
        uint64_t v53 = Error.localizedDescription.getter(v43, v52);
        uint64_t v55 = v54;
        uint64_t v167 = (void (*)(char *, char *, uint64_t))static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v47,  v50,  v53,  v54,  0LL,  0LL);
        uint64_t v166 = v56;
        __n128 v57 = swift_bridgeObjectRelease(v55);
        (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v50, v51, v57);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
        uint64_t v58 = v173[3];
        uint64_t v165 = v173[4];
        sub_6EA8(v173, v58);
        uint64_t v59 = v182;
        uint64_t v60 = v183;
        uint64_t v61 = v184;
        (*(void (**)(char *, void, uint64_t))(v183 + 104))(v182, v169, v184);
        uint64_t v62 = type metadata accessor for ActivityType(0LL);
        uint64_t v63 = *(void *)(v62 - 8);
        uint64_t v64 = (uint64_t)v185;
        (*(void (**)(char *, void, uint64_t))(v63 + 104))(v185, v152, v62);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v64, 0LL, 1LL, v62);
        uint64_t v65 = type metadata accessor for TemplatingResult(0LL);
        uint64_t v66 = (uint64_t)v186;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56LL))(v186, 1LL, 1LL, v65);
        uint64_t v67 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v68 = *(void *)(v67 - 8);
        uint64_t v69 = (uint64_t)v187;
        (*(void (**)(char *, void, uint64_t))(v68 + 104))(v187, v151, v67);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v69, 0LL, 1LL, v67);
        uint64_t v70 = v166;
        dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v59,  v64,  v66,  v69,  v167,  v166,  v58,  v165);
        swift_bridgeObjectRelease(v70);
        sub_1F6CC(v69, &qword_2845A0);
        sub_1F6CC(v66, (uint64_t *)&unk_286BD0);
        sub_1F6CC(v64, &qword_2845A8);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
        type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult();
        id v71 = static DetermineNowPlayingIntentInfoResolutionResult.unsupported(forReason:)(1LL);
        uint64_t v72 = v188;
        uint64_t v73 = swift_beginAccess(v188, &v200, 33LL, 0LL);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
        unint64_t v75 = *(void *)((char *)&dword_10 + (*v72 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v74 = *(void *)((char *)&dword_18 + (*v72 & 0xFFFFFFFFFFFFFF8LL));
        if (v75 >= v74 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1LL);
        }
        uint64_t v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v71);
        specialized Array._endMutation()(v76);
        swift_endAccess(&v200);
        unint64_t v35 = v194;
        uint64_t v43 = v195;
        ((void (*)(char *, uint64_t))v168)(v194, v195);
        uint64_t v42 = v193;
      }

      else
      {
        uint64_t v91 = v163;
        (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v198, v38, v42);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v92 = sub_6960(v27, (uint64_t)qword_2969C8);
        uint64_t v93 = v158;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v158, v92, v27);
        uint64_t v94 = *(uint64_t (**)(char *, char *, uint64_t))(v91 + 16);
        char v95 = v159;
        uint64_t v96 = v94(v159, v198, v42);
        uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
        os_log_type_t v98 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v97, v98))
        {
          uint64_t v99 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v100 = swift_slowAlloc(32LL, -1LL);
          uint64_t v167 = (void (*)(char *, char *, uint64_t))v94;
          uint64_t v101 = v100;
          uint64_t v200 = v100;
          *(_DWORD *)uint64_t v99 = v147.n128_u32[0];
          uint64_t v102 = v95;
          uint64_t v103 = (uint64_t)v156;
          v167(v156, v102, v42);
          uint64_t v104 = String.init<A>(describing:)(v103, v42);
          unint64_t v106 = v105;
          uint64_t v199 = sub_6978(v104, v105, &v200);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v199, v150);
          unint64_t v107 = v106;
          uint64_t v42 = v193;
          __n128 v108 = swift_bridgeObjectRelease(v107);
          unint64_t v168 = *(void (**)(char *, uint64_t, __n128))(v163 + 8);
          v168(v102, v42, v108);
          _os_log_impl( &dword_0,  v97,  v98,  "DetermineIntentHandler#resolveNowPlayingIntentInfo got back nowPlayingInfo in WHA use case: %s",  v99,  0xCu);
          swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v109 = v101;
          uint64_t v94 = (uint64_t (*)(char *, char *, uint64_t))v167;
          swift_slowDealloc(v109, -1LL, -1LL);
          swift_slowDealloc(v99, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v191 + 8))(v93, v192);
        }

        else
        {
          unint64_t v168 = *(void (**)(char *, uint64_t, __n128))(v91 + 8);
          ((void (*)(char *, uint64_t))v168)(v95, v42);

          (*(void (**)(char *, uint64_t))(v28 + 8))(v93, v27);
          uint64_t v103 = (uint64_t)v156;
        }

        type metadata accessor for NowPlayingIntentInfo();
        v94((char *)v103, v198, v42);
        uint64_t v110 = (void (*)(char *, char *, uint64_t))sub_74970(v103);
        type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult();
        uint64_t v167 = v110;
        id v111 = static NowPlayingIntentInfoResolutionResult.success(with:)((uint64_t)v110);
        uint64_t v112 = v188;
        uint64_t v113 = swift_beginAccess(v188, &v200, 33LL, 0LL);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
        unint64_t v115 = *(void *)((char *)&dword_10 + (*v112 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v114 = *(void *)((char *)&dword_18 + (*v112 & 0xFFFFFFFFFFFFFF8LL));
        if (v115 >= v114 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1LL);
        }
        uint64_t v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v111);
        specialized Array._endMutation()(v116);
        swift_endAccess(&v200);
        uint64_t v117 = v177;
        Swift::String_optional v118 = v176;
        uint64_t v119 = v178;
        (*(void (**)(char *, void, uint64_t))(v177 + 104))(v176, v171, v178);
        uint64_t v120 = v180;
        uint64_t v121 = v179;
        uint64_t v122 = v181;
        (*(void (**)(char *, void, uint64_t))(v180 + 104))(v179, v170, v181);
        uint64_t v123 = v161;
        uint64_t v124 = v160;
        uint64_t v125 = v162;
        (*(void (**)(char *, void, uint64_t))(v161 + 104))(v160, v155, v162);
        uint64_t v166 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v118,  v121,  v124,  0LL,  1LL);
        uint64_t v165 = v126;
        (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v125);
        (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v122);
        (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v119);
        uint64_t v127 = v173[3];
        uint64_t v164 = v173[4];
        sub_6EA8(v173, v127);
        uint64_t v129 = v182;
        uint64_t v128 = v183;
        uint64_t v130 = v184;
        (*(void (**)(char *, void, uint64_t))(v183 + 104))(v182, v169, v184);
        uint64_t v131 = type metadata accessor for ActivityType(0LL);
        uint64_t v132 = *(void *)(v131 - 8);
        uint64_t v133 = (uint64_t)v185;
        (*(void (**)(char *, void, uint64_t))(v132 + 104))(v185, v154, v131);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v133, 0LL, 1LL, v131);
        uint64_t v134 = type metadata accessor for TemplatingResult(0LL);
        uint64_t v135 = (uint64_t)v186;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56LL))(v186, 1LL, 1LL, v134);
        uint64_t v136 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v137 = *(void *)(v136 - 8);
        uint64_t v138 = (uint64_t)v187;
        (*(void (**)(char *, void, uint64_t))(v137 + 104))(v187, v153, v136);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v137 + 56))(v138, 0LL, 1LL, v136);
        uint64_t v139 = v165;
        dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v129,  v133,  v135,  v138,  v166,  v165,  v127,  v164);

        swift_bridgeObjectRelease(v139);
        sub_1F6CC(v138, &qword_2845A0);
        sub_1F6CC(v135, (uint64_t *)&unk_286BD0);
        sub_1F6CC(v133, &qword_2845A8);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
        uint64_t v42 = v193;
        ((void (*)(char *, uint64_t))v168)(v198, v193);
        unint64_t v35 = v194;
        uint64_t v43 = v195;
      }

      id v45 = v189;
      uint64_t v44 = v190;
      uint64_t v38 = v174;
      uint64_t v40 = v196 + v172;
      --v197;
      uint64_t v28 = v191;
      uint64_t v27 = v192;
    }

    while (v197);
    swift_bridgeObjectRelease(v144);
    a4 = v146;
    uint64_t v39 = v188;
  }

  swift_beginAccess(v39, &v200, 0LL, 0LL);
  uint64_t v140 = *v39;
  __n128 v141 = swift_bridgeObjectRetain(*v39);
  a4(v141);
  *(void *)&double result = swift_bridgeObjectRelease(v140).n128_u64[0];
  return result;
}

void sub_F9CEC( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, void (*a9)(void), uint64_t a10, uint64_t a11)
{
  unint64_t v105 = a8;
  uint64_t v95 = a7;
  uint64_t v94 = a3;
  unint64_t v106 = a9;
  uint64_t v107 = a10;
  uint64_t v12 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v12);
  uint64_t v104 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v14);
  uint64_t v103 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v16);
  uint64_t v102 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v109 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v100 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v98 = *(void *)(v19 - 8);
  uint64_t v99 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = type metadata accessor for QueuePosition(0LL);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for Logger(0LL);
  uint64_t v108 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v91 - v33;
  uint64_t v35 = swift_projectBox(a11);
  if (a4 && !v95)
  {
    unint64_t v67 = a4;
    uint64_t v109 = v35;
    uint64_t v68 = qword_283888;
    unint64_t v69 = a4;
    swift_bridgeObjectRetain(a4);
    if (v68 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v70 = sub_6960(v29, (uint64_t)qword_2969C8);
    uint64_t v71 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v34, v70, v29);
    uint64_t v72 = swift_bridgeObjectRetain_n(a4, 2LL);
    uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
    os_log_type_t v74 = static os_log_type_t.debug.getter();
    BOOL v75 = os_log_type_enabled(v73, v74);
    uint64_t v76 = v107;
    if (v75)
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v78 = swift_slowAlloc(32LL, -1LL);
      v112[0] = v78;
      *(_DWORD *)uint64_t v77 = 136315138;
      swift_bridgeObjectRetain(v67);
      uint64_t v110 = sub_6978(v94, v67, v112);
      unint64_t v69 = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
      swift_bridgeObjectRelease_n(v67, 3LL);
      _os_log_impl( &dword_0,  v73,  v74,  "DetermineIntentHandler#resolveNowPlayingIntentInfo got back bundleId: %s",  v77,  0xCu);
      swift_arrayDestroy(v78, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v79 = v78;
      uint64_t v76 = v107;
      swift_slowDealloc(v79, -1LL, -1LL);
      swift_slowDealloc(v77, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v69, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v29);
    uint64_t v80 = v105;
    sub_157C4( (uint64_t)&v105[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_nowPlayingProvider],  (uint64_t)v112);
    uint64_t v81 = v113;
    uint64_t v82 = v114;
    sub_6EA8(v112, v113);
    uint64_t v83 = v109;
    swift_beginAccess(v109, &v110, 0LL, 0LL);
    uint64_t v84 = v92;
    unint64_t v85 = v91;
    uint64_t v86 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v83, v93);
    unint64_t v87 = (void *)swift_allocObject(&unk_26F9C0, 56LL, 7LL);
    unint64_t v88 = v106;
    v87[2] = v80;
    v87[3] = v88;
    uint64_t v89 = v94;
    v87[4] = v76;
    v87[5] = v89;
    v87[6] = v69;
    id v90 = v80;
    swift_retain(v76);
    dispatch thunk of NowPlayingProviding.item(outputDeviceUID:queuePosition:completion:)( 0LL,  0LL,  v85,  sub_FBD38,  v87,  v81,  v82);
    swift_release(v87);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v86);
    sub_6C3C(v112);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v36 = sub_6960(v29, (uint64_t)qword_2969C8);
    uint64_t v37 = v108;
    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 16))(v32, v36, v29);
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      __n128 v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)__n128 v41 = 0;
      _os_log_impl( &dword_0,  v39,  v40,  "DetermineIntent#resolveNowPlayingIntentInfo failed to get bundleId for now playing app",  v41,  2u);
      uint64_t v42 = v41;
      uint64_t v37 = v108;
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v29);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.ModuleName.dih(_:),  v24);
    uint64_t v43 = v96;
    uint64_t v44 = v97;
    (*(void (**)(char *, void, uint64_t))(v96 + 104))( v23,  enum case for AdditionalMetricsDescription.SourceFunction.resNowPlayInf(_:),  v97);
    uint64_t v46 = v98;
    uint64_t v45 = v99;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))( v21,  enum case for AdditionalMetricsDescription.StatusReason.unknown(_:),  v99);
    uint64_t v108 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v27,  v23,  v21,  1LL,  0LL);
    uint64_t v95 = v47;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v45);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    uint64_t v48 = &v105[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider];
    uint64_t v49 = *(void *)&v105[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider
                         + 24];
    unint64_t v105 = *(char **)&v105[OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider
                         + 32];
    sub_6EA8(v48, v49);
    uint64_t v50 = v100;
    uint64_t v51 = v101;
    (*(void (**)(char *, void, uint64_t))(v109 + 104))(v100, enum case for TypeOfIntent.determine(_:), v101);
    uint64_t v52 = enum case for ActivityType.failed(_:);
    uint64_t v53 = type metadata accessor for ActivityType(0LL);
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v102, v52, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
    uint64_t v56 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v57 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56LL))(v103, 1LL, 1LL, v56);
    uint64_t v58 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v59 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v104, v58, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v61, 0LL, 1LL, v59);
    uint64_t v62 = v95;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v50,  v55,  v57,  v61,  v108,  v95,  v49,  v105);
    swift_bridgeObjectRelease(v62);
    sub_1F6CC(v61, &qword_2845A0);
    sub_1F6CC(v57, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v55, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v50, v51);
    type metadata accessor for ErrorFilingProvider(0LL);
    static ErrorFilingProvider.setErrorFilingInfo(errorCode:errorTitle:)( 0x6F5464656C696166LL,  0xEE00707041746547LL,  0xD000000000000057LL,  0x8000000000220610LL);
    uint64_t v63 = sub_6C5C(&qword_287980);
    uint64_t v64 = swift_allocObject(v63, 40LL, 7LL);
    *(_OWORD *)(v64 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult();
    id v65 = static DetermineNowPlayingIntentInfoResolutionResult.unsupported(forReason:)(2LL);
    *(void *)(v64 + 3sub_6C3C(v0 + 2) = v65;
    v112[0] = v64;
    specialized Array._endMutation()(v65);
    uint64_t v66 = v112[0];
    v106(v112[0]);
    swift_bridgeObjectRelease(v66);
  }

uint64_t sub_FA5FC( void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v123 = a6;
  uint64_t v122 = a5;
  uint64_t v141 = a4;
  uint64_t v142 = a3;
  uint64_t v135 = a2;
  id v127 = a1;
  uint64_t v126 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v125 = *(char **)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NowPlayingInfo(0LL);
  uint64_t v8 = *(void (***)(char *, char *, uint64_t))(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v121 = (uint64_t (**)(char *, uint64_t, __n128))((char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v118 - v11;
  uint64_t v13 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v13);
  uint64_t v140 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v15);
  uint64_t v139 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v17);
  uint64_t v137 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v144 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v136 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v132 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v131 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v130 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v129 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = type metadata accessor for Logger(0LL);
  uint64_t v143 = *(void *)(v128 - 8);
  uint64_t v22 = __chkstk_darwin(v128);
  uint64_t v24 = (char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v118 - v25;
  uint64_t v27 = (void *)type metadata accessor for NowPlayingInfoError(0LL);
  uint64_t v28 = *(v27 - 1);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_6C5C(&qword_284E30);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v118 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FBC74((uint64_t)v127, (uint64_t)v33);
  if (swift_getEnumCaseMultiPayload(v33, v31) == 1)
  {
    (*(void (**)(char *, char *, void *))(v28 + 32))(v30, v33, v27);
    unint64_t v34 = sub_FBCBC();
    uint64_t v35 = Error.localizedDescription.getter(v27, v34);
    unint64_t v37 = v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v125 = v30;
    uint64_t v126 = v28;
    id v127 = v27;
    uint64_t v38 = v128;
    uint64_t v39 = sub_6960(v128, (uint64_t)qword_2969C8);
    uint64_t v40 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v26, v39, v38);
    uint64_t v41 = swift_bridgeObjectRetain_n(v37, 2LL);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      v146[0] = v45;
      *(_DWORD *)uint64_t v44 = 136446210;
      swift_bridgeObjectRetain(v37);
      uint64_t v145 = sub_6978(v35, v37, v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
      swift_bridgeObjectRelease_n(v37, 3LL);
      _os_log_impl( &dword_0,  v42,  v43,  "DetermineIntentHandler#resolveNowPlayingIntentInfo failure with error: %{public}s",  v44,  0xCu);
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v143 + 8))(v26, v38);
    }

    else
    {

      swift_bridgeObjectRelease_n(v37, 2LL);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v38);
    }

    uint64_t v58 = v129;
    uint64_t v57 = v130;
    uint64_t v59 = v133;
    (*(void (**)(char *, void, uint64_t))(v130 + 104))( v129,  enum case for AdditionalMetricsDescription.ModuleName.dih(_:),  v133);
    uint64_t v61 = v131;
    uint64_t v60 = v132;
    uint64_t v62 = v134;
    (*(void (**)(char *, void, uint64_t))(v132 + 104))( v131,  enum case for AdditionalMetricsDescription.SourceFunction.resNowPlayInf(_:),  v134);
    uint64_t v143 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v58,  v61,  v35,  v37,  2LL,  0LL);
    uint64_t v128 = v63;
    __n128 v64 = swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v61, v62, v64);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
    id v65 = (void *)(v135 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider);
    uint64_t v66 = *(void *)(v135
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v135 = *(void *)(v135
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8(v65, v66);
    unint64_t v67 = v136;
    uint64_t v68 = v138;
    (*(void (**)(char *, void, uint64_t))(v144 + 104))(v136, enum case for TypeOfIntent.determine(_:), v138);
    uint64_t v69 = enum case for ActivityType.failed(_:);
    uint64_t v70 = type metadata accessor for ActivityType(0LL);
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v137, v69, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v72, 0LL, 1LL, v70);
    uint64_t v73 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v74 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56LL))(v139, 1LL, 1LL, v73);
    uint64_t v75 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v76 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 104))(v140, v75, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v78, 0LL, 1LL, v76);
    uint64_t v79 = v128;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v67,  v72,  v74,  v78,  v143,  v128,  v66,  v135);
    swift_bridgeObjectRelease(v79);
    sub_1F6CC(v78, &qword_2845A0);
    sub_1F6CC(v74, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v72, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v67, v68);
    type metadata accessor for ErrorFilingProvider(0LL);
    static ErrorFilingProvider.setErrorFilingInfo(errorCode:errorTitle:)( 0xD000000000000019LL,  0x8000000000220670LL,  0xD000000000000062LL,  0x8000000000220690LL);
    uint64_t v80 = sub_6C5C(&qword_287980);
    uint64_t v81 = swift_allocObject(v80, 40LL, 7LL);
    *(_OWORD *)(v81 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult();
    id v82 = static DetermineNowPlayingIntentInfoResolutionResult.unsupported(forReason:)(3LL);
    *(void *)(v81 + 3sub_6C3C(v0 + 2) = v82;
    v146[0] = v81;
    specialized Array._endMutation()(v82);
    uint64_t v83 = v146[0];
    v142(v146[0]);
    __n128 v84 = swift_bridgeObjectRelease(v83);
    return (*(uint64_t (**)(char *, id, __n128))(v126 + 8))(v125, v127, v84);
  }

  else
  {
    v8[4](v12, v33, v7);
    type metadata accessor for NowPlayingIntentInfo();
    uint64_t v46 = v8[2];
    uint64_t v47 = (uint64_t)v121;
    uint64_t v120 = v7;
    ((void (*)(uint64_t (**)(char *, uint64_t, __n128), char *))v46)(v121, v12);
    id v127 = sub_74970(v47);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v119 = v12;
    uint64_t v121 = (uint64_t (**)(char *, uint64_t, __n128))v8;
    uint64_t v48 = v128;
    uint64_t v49 = sub_6960(v128, (uint64_t)qword_2969C8);
    uint64_t v50 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v24, v49, v48);
    unint64_t v51 = v123;
    uint64_t v52 = swift_bridgeObjectRetain_n(v123, 2LL);
    uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      v146[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      swift_bridgeObjectRetain(v51);
      uint64_t v145 = sub_6978(v122, v51, v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, v146);
      swift_bridgeObjectRelease_n(v51, 3LL);
      _os_log_impl( &dword_0,  v53,  v54,  "DetermineIntentHandler#resolveNowPlayingIntentInfo got back bundleId: %s",  v55,  0xCu);
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v55, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v143 + 8))(v24, v48);
    }

    else
    {

      swift_bridgeObjectRelease_n(v51, 2LL);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v48);
    }

    NSString v86 = String._bridgeToObjectiveC()();
    [v127 setAppBundleId:v86];

    unint64_t v88 = v129;
    uint64_t v87 = v130;
    uint64_t v89 = v133;
    (*(void (**)(char *, void, uint64_t))(v130 + 104))( v129,  enum case for AdditionalMetricsDescription.ModuleName.dih(_:),  v133);
    uint64_t v91 = v131;
    uint64_t v90 = v132;
    uint64_t v92 = v134;
    (*(void (**)(char *, void, uint64_t))(v132 + 104))( v131,  enum case for AdditionalMetricsDescription.SourceFunction.resNowPlayInf(_:),  v134);
    uint64_t v93 = v125;
    uint64_t v94 = v124;
    uint64_t v95 = v126;
    (*((void (**)(char *, void, uint64_t))v125 + 13))( v124,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v126);
    uint64_t v143 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v88,  v91,  v94,  3LL,  0LL);
    uint64_t v128 = v96;
    (*((void (**)(char *, uint64_t))v93 + 1))(v94, v95);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v89);
    uint64_t v97 = (void *)(v135 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider);
    uint64_t v98 = *(void *)(v135
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v135 = *(void *)(v135
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DetermineIntentHandler_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8(v97, v98);
    uint64_t v99 = v136;
    uint64_t v100 = v138;
    (*(void (**)(char *, void, uint64_t))(v144 + 104))(v136, enum case for TypeOfIntent.determine(_:), v138);
    uint64_t v101 = enum case for ActivityType.completed(_:);
    uint64_t v102 = type metadata accessor for ActivityType(0LL);
    uint64_t v103 = *(void *)(v102 - 8);
    uint64_t v104 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 104))(v137, v101, v102);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v104, 0LL, 1LL, v102);
    uint64_t v105 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v106 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56LL))(v139, 1LL, 1LL, v105);
    uint64_t v107 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v108 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v109 = *(void *)(v108 - 8);
    uint64_t v110 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v109 + 104))(v140, v107, v108);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56))(v110, 0LL, 1LL, v108);
    uint64_t v111 = v128;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v99,  v104,  v106,  v110,  v143,  v128,  v98,  v135);
    swift_bridgeObjectRelease(v111);
    sub_1F6CC(v110, &qword_2845A0);
    sub_1F6CC(v106, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v104, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v99, v100);
    uint64_t v112 = sub_6C5C(&qword_287980);
    uint64_t v113 = swift_allocObject(v112, 40LL, 7LL);
    *(_OWORD *)(v113 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    type metadata accessor for DetermineNowPlayingIntentInfoResolutionResult();
    id v114 = v127;
    id v115 = static NowPlayingIntentInfoResolutionResult.success(with:)((uint64_t)v127);
    *(void *)(v113 + 3sub_6C3C(v0 + 2) = v115;
    v146[0] = v113;
    specialized Array._endMutation()(v115);
    uint64_t v116 = v146[0];
    v142(v146[0]);

    __n128 v117 = swift_bridgeObjectRelease(v116);
    return v121[1](v119, v120, v117);
  }

void sub_FB388(uint64_t a1, uint64_t a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);
}

void DetermineIntentHandler.confirm(intent:completion:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v7 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "DetermineIntentHandler#confirm", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v12 = (char *)[objc_allocWithZone((Class)type metadata accessor for DetermineIntentResponse()) init];
  uint64_t v13 = &v12[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&v12[OBJC_IVAR___DetermineIntentResponse_code], v15, 1LL, 0LL);
  *(void *)uint64_t v13 = 1LL;
  [v12 setUserActivity:0];
  a2(v12);
}

void DetermineIntentHandler.handle(intent:completion:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v7 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "DetermineIntentHandler#handle Reached logic", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v12 = (char *)[objc_allocWithZone((Class)type metadata accessor for DetermineIntentResponse()) init];
  uint64_t v13 = &v12[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&v12[OBJC_IVAR___DetermineIntentResponse_code], v15, 1LL, 0LL);
  *(void *)uint64_t v13 = 4LL;
  [v12 setUserActivity:0];
  a2(v12);
}

void sub_FB74C(void *a1, int a2, void *a3, void *aBlock, void (*a5)(void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  id v9 = a3;
  id v10 = a1;
  a5(v8);
  _Block_release(v8);
  _Block_release(v8);
}

id DetermineIntentHandler.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DetermineIntentHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_FB828()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_FB85C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

uint64_t sub_FB88C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_FB8B0()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

double sub_FB8E4(uint64_t a1)
{
  return sub_F8D6C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void (**)(__n128))(v1 + 32),  *(void *)(v1 + 40));
}

void sub_FB8F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "DetermineIntentHandler#confirm", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = (char *)[objc_allocWithZone((Class)type metadata accessor for DetermineIntentResponse()) init];
  uint64_t v12 = &v11[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&v11[OBJC_IVAR___DetermineIntentResponse_code], v14, 1LL, 0LL);
  *(void *)uint64_t v12 = 1LL;
  [v11 setUserActivity:0];
  (*(void (**)(uint64_t, char *))(a1 + 16))(a1, v11);
}

void sub_FBA9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "DetermineIntentHandler#handle Reached logic", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = (char *)[objc_allocWithZone((Class)type metadata accessor for DetermineIntentResponse()) init];
  uint64_t v12 = &v11[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&v11[OBJC_IVAR___DetermineIntentResponse_code], v14, 1LL, 0LL);
  *(void *)uint64_t v12 = 4LL;
  [v11 setUserActivity:0];
  (*(void (**)(uint64_t, char *))(a1 + 16))(a1, v11);
}

uint64_t sub_FBC48()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_FBC6C(uint64_t a1)
{
}

uint64_t sub_FBC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_FBCBC()
{
  unint64_t result = qword_289170;
  if (!qword_289170)
  {
    uint64_t v1 = type metadata accessor for NowPlayingInfoError(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingInfoError, v1);
    atomic_store(result, (unint64_t *)&qword_289170);
  }

  return result;
}

uint64_t sub_FBD04()
{
  swift_release(*(void *)(v0 + 32));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_FBD38(void *a1)
{
  return sub_FA5FC( a1,  *(void *)(v1 + 16),  *(void (**)(uint64_t))(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48));
}

id Parse.getSiriKitIntent(nowPlayingProvider:featureFlags:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v406 = a1;
  uint64_t v407 = a2;
  v418 = (uint8_t *)type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v414 = *((void *)v418 - 1);
  __chkstk_darwin(v418);
  v391 = (char *)&v367 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v412 = sub_6C5C(&qword_284DA8);
  uint64_t v5 = __chkstk_darwin(v412);
  uint64_t v397 = (uint64_t)&v367 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v413 = (uint64_t)&v367 - v7;
  uint64_t v8 = sub_6C5C(&qword_284DB0);
  uint64_t v9 = __chkstk_darwin(v8);
  v396 = (char *)&v367 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v400 = (uint64_t)&v367 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v401 = (uint64_t)&v367 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v393 = (uint64_t)&v367 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v409 = (uint64_t)&v367 - v18;
  __chkstk_darwin(v17);
  uint64_t v410 = (uint64_t)&v367 - v19;
  uint64_t v20 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v20);
  uint64_t v417 = (uint64_t)&v367 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v420 = (void *)type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v416 = *(v420 - 1);
  uint64_t v22 = __chkstk_darwin(v420);
  uint64_t v395 = (uint64_t)&v367 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v411 = (uint64_t)&v367 - v25;
  __chkstk_darwin(v24);
  v424 = (os_log_s *)((char *)&v367 - v26);
  uint64_t v27 = type metadata accessor for NLIntent(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  v415 = (char *)&v367 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v367 - v31;
  uint64_t v392 = type metadata accessor for Parse.DirectInvocation(0LL);
  v399 = *(char **)(v392 - 8);
  __chkstk_darwin(v392);
  v398 = (char *)&v367 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_6C5C(&qword_2845D0);
  uint64_t v35 = __chkstk_darwin(v34);
  v386 = (char *)&v367 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v35);
  v380 = (char *)&v367 - v37;
  uint64_t v38 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v378 = *(void *)(v38 - 8);
  uint64_t v379 = v38;
  __chkstk_darwin(v38);
  v377 = (char *)&v367 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v388 = *(void *)(v40 - 8);
  uint64_t v389 = v40;
  __chkstk_darwin(v40);
  v375 = (char *)&v367 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = type metadata accessor for Logger(0LL);
  uint64_t v426 = *(void *)(v42 - 8);
  uint64_t v427 = v42;
  uint64_t v43 = __chkstk_darwin(v42);
  v405 = (char *)&v367 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = __chkstk_darwin(v43);
  v383 = (char *)&v367 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v390 = (char *)&v367 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v381 = (char *)&v367 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v404 = (char *)&v367 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v394 = (char *)&v367 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v57 = (char *)&v367 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  v370 = (char *)&v367 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v374 = (char *)&v367 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v373 = (char *)&v367 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v385 = (char *)&v367 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v371 = (char *)&v367 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v369 = (char *)&v367 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v368 = (char *)&v367 - v71;
  __chkstk_darwin(v70);
  v382 = (char *)&v367 - v72;
  uint64_t v387 = type metadata accessor for USOParse(0LL);
  uint64_t v376 = *(void *)(v387 - 8);
  uint64_t v73 = __chkstk_darwin(v387);
  uint64_t v75 = (char *)&v367 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v73);
  v384 = (char *)&v367 - v76;
  uint64_t v77 = type metadata accessor for Parse(0LL);
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = __chkstk_darwin(v77);
  v408 = (char *)&v367 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v83 = (char *)&v367 - v82;
  uint64_t v84 = __chkstk_darwin(v81);
  v372 = (char *)&v367 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  v419 = (char *)&v367 - v87;
  __chkstk_darwin(v86);
  uint64_t v89 = (void **)((char *)&v367 - v88);
  uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v425 = v3;
  uint64_t v91 = v3;
  uint64_t v93 = v92;
  v423 = v90;
  v90((char *)&v367 - v88, v91, v92);
  int v94 = (*(uint64_t (**)(void **, uint64_t))(v78 + 88))(v89, v93);
  uint64_t v421 = v78;
  uint64_t v422 = v93;
  if (v94 == enum case for Parse.NLv3IntentOnly(_:))
  {
    (*(void (**)(void **, uint64_t))(v78 + 96))(v89, v93);
    (*(void (**)(char *, void **, uint64_t))(v28 + 32))(v32, v89, v27);
    uint64_t v95 = v27;
    uint64_t v96 = v32;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v97 = v427;
    uint64_t v98 = sub_6960(v427, (uint64_t)qword_2969C8);
    uint64_t v99 = v426;
    uint64_t v100 = *(char **)(v426 + 16);
    uint64_t v392 = v98;
    v398 = v100;
    ((void (*)(char *))v100)(v57);
    uint64_t v101 = *(uint64_t (**)(char *, char *, uint64_t))(v28 + 16);
    uint64_t v102 = v415;
    v399 = v96;
    uint64_t v103 = v101(v415, v96, v95);
    uint64_t v104 = v28;
    uint64_t v105 = (os_log_s *)Logger.logObject.getter(v103);
    os_log_type_t v106 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v107 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v108 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v436 = v108;
      uint64_t v403 = v104;
      *(_DWORD *)uint64_t v107 = 136315138;
      v390 = (char *)(v107 + 4);
      uint64_t v109 = sub_10430( (unint64_t *)&unk_289180,  (uint64_t (*)(uint64_t))&type metadata accessor for NLIntent,  (uint64_t)&protocol conformance descriptor for NLIntent);
      uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter(v95, v109);
      unint64_t v112 = v111;
      *(void *)&__int128 v433 = sub_6978(v110, v111, (uint64_t *)&v436);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v433, (char *)&v433 + 8);
      swift_bridgeObjectRelease(v112);
      uint64_t v113 = *(uint8_t **)(v403 + 8);
      ((void (*)(char *, uint64_t))v113)(v102, v95);
      _os_log_impl(&dword_0, v105, v106, "Parse#getSiriKitIntent .NLv3IntentOnly %s", v107, 0xCu);
      swift_arrayDestroy(v108, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v114 = v108;
      uint64_t v97 = v427;
      swift_slowDealloc(v114, -1LL, -1LL);
      swift_slowDealloc(v107, -1LL, -1LL);

      id v115 = *(void (**)(char *, uint64_t))(v426 + 8);
    }

    else
    {
      uint64_t v113 = *(uint8_t **)(v104 + 8);
      ((void (*)(char *, uint64_t))v113)(v102, v95);

      id v115 = *(void (**)(char *, uint64_t))(v99 + 8);
    }

    v115(v57, v97);
    uint64_t v133 = v418;
    uint64_t v132 = v419;
    v423(v419, v425, v422);
    uint64_t v134 = v417;
    sub_206FC0(v132, v417);
    uint64_t v135 = v420;
    int v136 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v416 + 48))(v134, 1LL, v420);
    uint64_t v137 = (uint64_t)v424;
    if (v136 == 1)
    {
      sub_1F6CC(v134, &qword_284CA0);
      uint64_t v138 = v404;
      uint64_t v139 = ((uint64_t (*)(char *, uint64_t, uint64_t))v398)(v404, v392, v97);
      uint64_t v140 = (os_log_s *)Logger.logObject.getter(v139);
      os_log_type_t v141 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v140, v141))
      {
        uint64_t v142 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v142 = 0;
        _os_log_impl( &dword_0,  v140,  v141,  "Parse#getSiriKitIntent Fatal: Cannot get AudioNLv3Intent from NLv3IntentOnly parse",  v142,  2u);
        swift_slowDealloc(v142, -1LL, -1LL);
      }

      v115(v138, v97);
      ((void (*)(char *, uint64_t))v113)(v399, v95);
      return 0LL;
    }

    sub_B8980(v134, (uint64_t)v424);
    if (qword_2839D0 != -1) {
      swift_once(&qword_2839D0, sub_209354);
    }
    uint64_t v164 = qword_28E990;
    uint64_t v165 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
    IntentNodeTraversable.value<A>(forNode:)(&v436, v164, v135, v165);
    uint64_t v402 = v95;
    v415 = (char *)v115;
    uint64_t v417 = v165;
    if (v436 == 11)
    {
      uint64_t v166 = v414;
      uint64_t v167 = *(void (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v414 + 56);
      uint64_t v168 = v410;
      v167(v410, 1LL, 1LL, v133);
    }

    else
    {
      uint64_t v168 = v410;
      sub_C09BC(v436);
      uint64_t v166 = v414;
      uint64_t v167 = *(void (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v414 + 56);
      v167(v168, 0LL, 1LL, v133);
    }

    uint64_t v180 = v409;
    uint64_t v416 = *(void *)(v166 + 104);
    ((void (*)(uint64_t, void, uint8_t *))v416)(v409, enum case for CommonAudio.Verb.like(_:), v133);
    v167(v180, 0LL, 1LL, v133);
    uint64_t v181 = v413;
    uint64_t v182 = v166;
    uint64_t v183 = v413 + *(int *)(v412 + 48);
    sub_D8208(v168, v413);
    sub_D8208(v180, v183);
    uint64_t v184 = *(uint64_t (**)(uint64_t, uint64_t, uint8_t *))(v182 + 48);
    int v185 = v184(v181, 1LL, v133);
    v418 = v113;
    if (v185 == 1)
    {
      sub_1F6CC(v180, &qword_284DB0);
      uint64_t v137 = (uint64_t)v424;
      sub_1F6CC(v168, &qword_284DB0);
      if (v184(v183, 1LL, v133) == 1)
      {
        sub_1F6CC(v413, &qword_284DB0);
        uint64_t v186 = v137;
        uint64_t v187 = v411;
        sub_FE7FC(v186, v411);
        uint64_t v147 = v427;
LABEL_60:
        sub_DD994(v187);
        goto LABEL_61;
      }
    }

    else
    {
      uint64_t v188 = v393;
      sub_D8208(v181, v393);
      if (v184(v183, 1LL, v133) != 1)
      {
        uint64_t v227 = v414;
        uint64_t v228 = v391;
        (*(void (**)(char *, uint64_t, uint8_t *))(v414 + 32))(v391, v183, v133);
        uint64_t v229 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        char v230 = dispatch thunk of static Equatable.== infix(_:_:)(v188, v228, v133, v229);
        unint64_t v231 = *(void (**)(char *, uint8_t *))(v227 + 8);
        v231(v228, v133);
        sub_1F6CC(v409, &qword_284DB0);
        sub_1F6CC(v410, &qword_284DB0);
        v231((char *)v188, v133);
        uint64_t v147 = v427;
        sub_1F6CC(v181, &qword_284DB0);
        uint64_t v187 = v411;
        sub_FE7FC((uint64_t)v424, v411);
        if ((v230 & 1) != 0) {
          goto LABEL_60;
        }
LABEL_40:
        IntentNodeTraversable.value<A>(forNode:)(&v436, qword_28E990, v420, v417);
        uint64_t v189 = v401;
        if (v436 == 11)
        {
          uint64_t v190 = v401;
          uint64_t v191 = 1LL;
        }

        else
        {
          sub_C09BC(v436);
          uint64_t v190 = v189;
          uint64_t v191 = 0LL;
        }

        v167(v190, v191, 1LL, v133);
        uint64_t v93 = v422;
        uint64_t v200 = (uint64_t)v396;
        uint64_t v201 = v400;
        ((void (*)(uint64_t, void, uint8_t *))v416)(v400, enum case for CommonAudio.Verb.unlike(_:), v133);
        v167(v201, 0LL, 1LL, v133);
        uint64_t v202 = v201;
        uint64_t v203 = v397;
        uint64_t v204 = v397 + *(int *)(v412 + 48);
        sub_D8208(v189, v397);
        sub_D8208(v202, v204);
        if (v184(v203, 1LL, v133) == 1)
        {
          sub_1F6CC(v202, &qword_284DB0);
          sub_1F6CC(v189, &qword_284DB0);
          sub_DD994(v411);
          int v205 = v184(v204, 1LL, v133);
          uint64_t v150 = v408;
          uint64_t v206 = v418;
          if (v205 == 1)
          {
            sub_1F6CC(v203, &qword_284DB0);
LABEL_61:
            id v232 = v394;
            uint64_t v233 = ((uint64_t (*)(char *, uint64_t, uint64_t))v398)(v394, v392, v147);
            uint64_t v234 = (os_log_s *)Logger.logObject.getter(v233);
            os_log_type_t v235 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v234, v235))
            {
              uint64_t v236 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v237 = swift_slowAlloc(32LL, -1LL);
              *(void *)&__int128 v436 = v237;
              *(_DWORD *)uint64_t v236 = 136446210;
              uint64_t v238 = static Insights.appSelection.getter();
              unint64_t v240 = v239;
              *(void *)&__int128 v433 = sub_6978(v238, v239, (uint64_t *)&v436);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v433, (char *)&v433 + 8);
              swift_bridgeObjectRelease(v240);
              _os_log_impl( &dword_0,  v234,  v235,  "Parse#getSiriKitIntent %{public}s Returning UpdateMediaAffinity flow",  v236,  0xCu);
              swift_arrayDestroy(v237, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v237, -1LL, -1LL);
              swift_slowDealloc(v236, -1LL, -1LL);
            }

            ((void (*)(char *, uint64_t))v415)(v232, v147);
            id v242 = v406;
            uint64_t v241 = v407;
            uint64_t v243 = v402;
            id v244 = [objc_allocWithZone(INUpdateMediaAffinityIntent) init];
            uint64_t v245 = (uint64_t)v424;
            uint64_t v246 = v395;
            sub_FE7FC((uint64_t)v424, v395);
            uint64_t v247 = dispatch_group_create();
            dispatch_group_enter(v247);
            uint64_t v248 = swift_allocObject(&unk_26FA10, 32LL, 7LL);
            *(void *)(v248 + swift_weakDestroy(v0 + 16) = v244;
            *(void *)(v248 + 24) = v247;
            id v131 = v244;
            uint64_t v249 = v247;
            sub_FE848(v246, v242, v241, (uint64_t)sub_FE840, v248, v131);
            swift_release(v248);
            OS_dispatch_group.wait()();

            sub_DD994(v246);
            sub_DD994(v245);
            ((void (*)(char *, uint64_t))v418)(v399, v243);
            return v131;
          }
        }

        else
        {
          sub_D8208(v203, v200);
          int v207 = v184(v204, 1LL, v133);
          uint64_t v150 = v408;
          if (v207 != 1)
          {
            uint64_t v262 = v200;
            uint64_t v263 = v414;
            uint64_t v264 = v391;
            (*(void (**)(char *, uint64_t, uint8_t *))(v414 + 32))(v391, v204, v133);
            uint64_t v265 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
            char v266 = dispatch thunk of static Equatable.== infix(_:_:)(v262, v264, v133, v265);
            uint64_t v267 = *(void (**)(char *, uint8_t *))(v263 + 8);
            v267(v264, v133);
            sub_1F6CC(v400, &qword_284DB0);
            sub_1F6CC(v401, &qword_284DB0);
            sub_DD994(v411);
            v267((char *)v262, v133);
            uint64_t v93 = v422;
            sub_1F6CC(v203, &qword_284DB0);
            uint64_t v206 = v418;
            if ((v266 & 1) != 0) {
              goto LABEL_61;
            }
            goto LABEL_70;
          }

          sub_1F6CC(v400, &qword_284DB0);
          sub_1F6CC(v401, &qword_284DB0);
          sub_DD994(v411);
          (*(void (**)(uint64_t, uint8_t *))(v414 + 8))(v200, v133);
          uint64_t v206 = v418;
        }

        sub_1F6CC(v203, &qword_284DA8);
LABEL_70:
        sub_DD994((uint64_t)v424);
        ((void (*)(char *, uint64_t))v206)(v399, v402);
        uint64_t v261 = v405;
        unsigned int v151 = (uint64_t (*)(char *, char *, uint64_t))v423;
        uint64_t v148 = v426;
        goto LABEL_95;
      }

      sub_1F6CC(v409, &qword_284DB0);
      sub_1F6CC(v410, &qword_284DB0);
      (*(void (**)(uint64_t, uint8_t *))(v414 + 8))(v188, v133);
    }

    sub_1F6CC(v413, &qword_284DA8);
    sub_FE7FC(v137, v411);
    uint64_t v147 = v427;
    goto LABEL_40;
  }

  uint64_t v402 = v27;
  uint64_t v403 = v28;
  if (v94 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v143 = v89;
    if (v94 == enum case for Parse.directInvocation(_:))
    {
      (*(void (**)(void **, uint64_t))(v421 + 96))(v89, v93);
      uint64_t v145 = (uint64_t)v398;
      uint64_t v144 = v399;
      uint64_t v146 = v392;
      (*((void (**)(char *, void **, uint64_t))v399 + 4))(v398, v89, v392);
      sub_1CF340(v145, (uint64_t)v430);
      sub_8747C((uint64_t)v430, (uint64_t)&v431);
      uint64_t v148 = v426;
      uint64_t v147 = v427;
      __n128 v149 = v405;
      uint64_t v150 = v408;
      unsigned int v151 = (uint64_t (*)(char *, char *, uint64_t))v423;
      if (v432[48] != 255)
      {
        sub_45D94((uint64_t)&v431, (uint64_t)&v433);
        sub_45D94((uint64_t)&v433, (uint64_t)&v436);
        if (v441 == 4)
        {
          unsigned int v152 = (void *)v436;
          uint64_t v153 = v437;
          uint64_t v154 = v439;
          swift_bridgeObjectRelease(v440);
          swift_bridgeObjectRelease(v154);
          swift_bridgeObjectRelease(v153);
          if (!v152)
          {
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v336 = sub_6960(v147, (uint64_t)qword_2969C8);
            uint64_t v337 = v370;
            uint64_t v338 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v148 + 16))(v370, v336, v147);
            char v339 = (os_log_s *)Logger.logObject.getter(v338);
            os_log_type_t v340 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v339, v340))
            {
              v341 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)v341 = 0;
              _os_log_impl( &dword_0,  v339,  v340,  "Parse#getSiriKitIntent PlayMediaShim directinvocation is missing audioExperience",  v341,  2u);
              swift_slowDealloc(v341, -1LL, -1LL);
            }

            (*(void (**)(char *, uint64_t))(v148 + 8))(v337, v147);
            (*((void (**)(char *, uint64_t))v399 + 1))(v398, v146);
            return 0LL;
          }

          uint64_t v155 = qword_283888;
          id v156 = v152;
          if (v155 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v157 = sub_6960(v147, (uint64_t)qword_2969C8);
          uint64_t v158 = v374;
          uint64_t v159 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v148 + 16))(v374, v157, v147);
          uint64_t v160 = (os_log_s *)Logger.logObject.getter(v159);
          os_log_type_t v161 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v160, v161))
          {
            uint64_t v162 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v162 = 0;
            _os_log_impl(&dword_0, v160, v161, "Parse#getSiriKitIntent Constructing INPlayMediaIntent", v162, 2u);
            swift_slowDealloc(v162, -1LL, -1LL);
          }

          (*(void (**)(char *, uint64_t))(v148 + 8))(v158, v147);
          id v163 = [objc_allocWithZone(INPlayMediaIntent) init];
          id v131 = sub_170254(v156, (uint64_t)_swiftEmptyArrayStorage);

          (*((void (**)(char *, uint64_t))v399 + 1))(v398, v146);
          return v131;
        }

        sub_45DD0((uint64_t)v430);
      }

      (*((void (**)(uint64_t, uint64_t))v144 + 1))(v145, v146);
      uint64_t v261 = v149;
LABEL_95:
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v325 = sub_6960(v147, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v261, v325, v147);
      uint64_t v326 = v151(v150, v425, v93);
      v327 = (os_log_s *)Logger.logObject.getter(v326);
      os_log_type_t v328 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v327, v328))
      {
        uint64_t v329 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        v425 = (char *)swift_slowAlloc(32LL, -1LL);
        v429 = v425;
        *(_DWORD *)uint64_t v329 = 136315138;
        v424 = (os_log_s *)(v329 + 4);
        uint64_t v330 = v419;
        v151(v419, v150, v93);
        uint64_t v331 = String.init<A>(describing:)(v330, v93);
        unint64_t v333 = v332;
        uint64_t v428 = sub_6978(v331, v332, (uint64_t *)&v429);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v428, &v429);
        swift_bridgeObjectRelease(v333);
        (*(void (**)(char *, uint64_t))(v421 + 8))(v150, v93);
        _os_log_impl( &dword_0,  v327,  v328,  "Parse#getSiriKitIntent Could not generate intent from parse: %s",  v329,  0xCu);
        v334 = v425;
        swift_arrayDestroy(v425, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v334, -1LL, -1LL);
        swift_slowDealloc(v329, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v426 + 8))(v261, v427);
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v421 + 8))(v150, v93);

        (*(void (**)(char *, uint64_t))(v148 + 8))(v261, v147);
      }

      return 0LL;
    }

    if (v94 == enum case for Parse.pommesResponse(_:))
    {
      (*(void (**)(void **, uint64_t))(v421 + 96))(v89, v93);
      unsigned int v169 = *v89;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v170 = sub_6960(v427, (uint64_t)qword_2969C8);
      uint64_t v148 = v426;
      unsigned int v171 = *(os_log_s **)(v426 + 16);
      uint64_t v172 = v385;
      v420 = (void *)v170;
      v424 = v171;
      ((void (*)(char *))v171)(v385);
      id v173 = v169;
      uint64_t v174 = (os_log_s *)Logger.logObject.getter(v173);
      os_log_type_t v175 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v174, v175))
      {
        uint64_t v176 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        v418 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v176 = 138412290;
        *(void *)&__int128 v436 = v173;
        id v177 = v173;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v436, (char *)&v436 + 8);
        uint64_t v178 = v418;
        *(void *)v418 = v173;

        _os_log_impl( &dword_0,  v174,  v175,  "Parse#getSiriKitIntent found .pommesResponse in primary parse of input %@",  v176,  0xCu);
        uint64_t v179 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v178, 1LL, v179);
        uint64_t v148 = v426;
        swift_slowDealloc(v178, -1LL, -1LL);
        swift_slowDealloc(v176, -1LL, -1LL);
      }

      else
      {

        uint64_t v174 = (os_log_s *)v173;
      }

      uint64_t v268 = v389;
      uint64_t v269 = v386;

      uint64_t v270 = *(void (**)(char *, uint64_t))(v148 + 8);
      uint64_t v147 = v427;
      v270(v172, v427);
      uint64_t v271 = sub_10470();
      if (v271)
      {
        uint64_t v272 = (void *)v271;
        Experience.userDialogAct.getter(v271);

        uint64_t v273 = 0LL;
      }

      else
      {
        uint64_t v273 = 1LL;
      }

      unsigned int v151 = (uint64_t (*)(char *, char *, uint64_t))v423;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v388 + 56))(v269, v273, 1LL, v268);
      type metadata accessor for AudioUsoIntent(0LL);
      uint64_t v288 = AudioUsoIntent.__allocating_init(userDialogAct:)(v269);
      if (v288)
      {
        uint64_t v289 = v288;
        *(void *)&__int128 v436 = v288;
        if (!AudioIntent.isPlayRequest()())
        {

          swift_release(v289);
          uint64_t v93 = v422;
          uint64_t v150 = v408;
          uint64_t v261 = v405;
          goto LABEL_95;
        }

        uint64_t v290 = sub_10470();
        if (v290)
        {
          v291 = (void *)v290;
          id v292 = [objc_allocWithZone(INPlayMediaIntent) init];
          uint64_t v293 = dispatch thunk of PommesResponse.clientResults.getter();
          id v131 = sub_170254(v291, v293);
          swift_release(v289);

          swift_bridgeObjectRelease(v293);
          return v131;
        }

        swift_release(v289);
      }

      else
      {
        uint64_t v294 = v373;
        uint64_t v295 = ((uint64_t (*)(char *, void *, uint64_t))v424)(v373, v420, v147);
        uint64_t v296 = (os_log_s *)Logger.logObject.getter(v295);
        os_log_type_t v297 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v296, v297))
        {
          uint64_t v298 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v298 = 0;
          _os_log_impl(&dword_0, v296, v297, "Parse#getSiriKitIntent AudioUsoIntent failed to be constructed", v298, 2u);
          swift_slowDealloc(v298, -1LL, -1LL);
          uint64_t v299 = (os_log_s *)v173;
        }

        else
        {
          uint64_t v299 = v296;
          uint64_t v296 = (os_log_s *)v173;
        }

        v270(v294, v147);
      }
    }

    else
    {
      if (v94 != enum case for Parse.uso(_:))
      {
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v147 = v427;
        uint64_t v274 = sub_6960(v427, (uint64_t)qword_2969C8);
        uint64_t v275 = v383;
        (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v383, v274, v147);
        uint64_t v276 = v423;
        uint64_t v277 = ((uint64_t (*)(char *, char *, uint64_t))v423)(v83, v425, v93);
        uint64_t v278 = (os_log_s *)Logger.logObject.getter(v277);
        os_log_type_t v279 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v278, v279))
        {
          uint64_t v280 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          v424 = (os_log_s *)swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v436 = v424;
          *(_DWORD *)uint64_t v280 = 136315138;
          uint64_t v281 = v276;
          uint64_t v282 = v419;
          v281(v419, v83, v93);
          uint64_t v283 = String.init<A>(describing:)(v282, v93);
          unint64_t v285 = v284;
          *(void *)&__int128 v433 = sub_6978(v283, v284, (uint64_t *)&v436);
          uint64_t v147 = v427;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v433, (char *)&v433 + 8);
          swift_bridgeObjectRelease(v285);
          uint64_t v286 = *(void (**)(char *, uint64_t))(v421 + 8);
          v286(v83, v93);
          _os_log_impl(&dword_0, v278, v279, "Parse#getSiriKitIntent parse is not supported %s", v280, 0xCu);
          uint64_t v287 = v424;
          swift_arrayDestroy(v424, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v287, -1LL, -1LL);
          swift_slowDealloc(v280, -1LL, -1LL);

          uint64_t v148 = v426;
          (*(void (**)(char *, uint64_t))(v426 + 8))(v383, v147);
        }

        else
        {
          uint64_t v286 = *(void (**)(char *, uint64_t))(v421 + 8);
          v286(v83, v93);

          uint64_t v148 = v426;
          (*(void (**)(char *, uint64_t))(v426 + 8))(v275, v147);
        }

        uint64_t v150 = v408;
        v286((char *)v143, v93);
        uint64_t v261 = v405;
        unsigned int v151 = (uint64_t (*)(char *, char *, uint64_t))v423;
        goto LABEL_95;
      }

      (*(void (**)(void **, uint64_t))(v421 + 96))(v89, v93);
      uint64_t v208 = v376;
      id v209 = v384;
      uint64_t v210 = v387;
      (*(void (**)(char *, void **, uint64_t))(v376 + 32))(v384, v89, v387);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v211 = v427;
      uint64_t v212 = (uint8_t *)sub_6960(v427, (uint64_t)qword_2969C8);
      __int128 v213 = *(void (**)(void))(v426 + 16);
      uint64_t v214 = v382;
      v418 = v212;
      v420 = v213;
      v213(v382);
      uint64_t v215 = (*(uint64_t (**)(char *, char *, uint64_t))(v208 + 16))(v75, v209, v210);
      unint64_t v216 = (os_log_s *)Logger.logObject.getter(v215);
      os_log_type_t v217 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v216, v217))
      {
        uint64_t v218 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v219 = swift_slowAlloc(32LL, -1LL);
        *(void *)&__int128 v436 = v219;
        *(_DWORD *)uint64_t v218 = 136380675;
        v424 = (os_log_s *)(v218 + 4);
        uint64_t v220 = USOParse.debugDescription.getter();
        unint64_t v222 = v221;
        *(void *)&__int128 v433 = sub_6978(v220, v221, (uint64_t *)&v436);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v433, (char *)&v433 + 8);
        swift_bridgeObjectRelease(v222);
        v424 = *(os_log_s **)(v208 + 8);
        ((void (*)(char *, uint64_t))v424)(v75, v387);
        _os_log_impl( &dword_0,  v216,  v217,  "Parse#getSiriKitIntent found .uso in primary parse of input %{private}s",  v218,  0xCu);
        swift_arrayDestroy(v219, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v219, -1LL, -1LL);
        uint64_t v223 = v218;
        id v209 = v384;
        swift_slowDealloc(v223, -1LL, -1LL);

        uint64_t v224 = v426;
        uint64_t v225 = *(uint64_t (**)(char *, uint64_t))(v426 + 8);
        uint64_t v226 = v225(v382, v211);
      }

      else
      {
        v424 = *(os_log_s **)(v208 + 8);
        ((void (*)(char *, uint64_t))v424)(v75, v210);

        uint64_t v224 = v426;
        uint64_t v225 = *(uint64_t (**)(char *, uint64_t))(v426 + 8);
        uint64_t v226 = v225(v214, v211);
      }

      uint64_t v317 = v224;
      uint64_t v319 = v388;
      uint64_t v318 = v389;
      uint64_t v320 = v377;
      uint64_t v321 = USOParse.userParse.getter(v226);
      uint64_t v322 = Siri_Nlu_External_UserParse.userDialogActs.getter(v321);
      (*(void (**)(char *, uint64_t))(v378 + 8))(v320, v379);
      uint64_t v93 = v422;
      if (*(void *)(v322 + 16))
      {
        uint64_t v323 = (uint64_t)v380;
        (*(void (**)(char *, unint64_t, uint64_t))(v319 + 16))( v380,  v322 + ((*(unsigned __int8 *)(v319 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v319 + 80)),  v318);
        uint64_t v324 = 0LL;
      }

      else
      {
        uint64_t v324 = 1LL;
        uint64_t v323 = (uint64_t)v380;
      }

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v319 + 56))(v323, v324, 1LL, v318);
      swift_bridgeObjectRelease(v322);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v319 + 48))(v323, 1LL, v318) == 1)
      {
        sub_1F6CC(v323, &qword_2845D0);
        v342 = v371;
        uint64_t v343 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v420)(v371, v418, v427);
        v344 = (os_log_s *)Logger.logObject.getter(v343);
        os_log_type_t v345 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v344, v345))
        {
          v346 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v346 = 0;
          _os_log_impl( &dword_0,  v344,  v345,  "Parse#getSiriKitIntent firstUserDialogAct No user dialog act found in usoParse",  v346,  2u);
          swift_slowDealloc(v346, -1LL, -1LL);
        }

        v225(v342, v427);
      }

      else
      {
        uint64_t v347 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v319 + 32))(v375, v323, v318);
        uint64_t v348 = Siri_Nlu_External_UserDialogAct.getFirstTask()(v347);
        if (v348)
        {
          uint64_t v349 = v348;
          uint64_t v350 = type metadata accessor for AudioUsoIntent(0LL);
          swift_allocObject(v350, *(unsigned int *)(v350 + 48), *(unsigned __int16 *)(v350 + 52));
          uint64_t v351 = swift_retain(v349);
          uint64_t v352 = AudioUsoIntent.init(task:)(v351);
          if ((sub_2EAAC() & 1) == 0)
          {
            swift_release(v349);
            swift_release(v352);
            (*(void (**)(char *, uint64_t))(v319 + 8))(v375, v318);
            ((void (*)(char *, uint64_t))v424)(v384, v387);
            uint64_t v147 = v427;
            uint64_t v261 = v405;
            uint64_t v150 = v408;
            unsigned int v151 = (uint64_t (*)(char *, char *, uint64_t))v423;
            uint64_t v148 = v317;
            goto LABEL_95;
          }

          v353 = v368;
          uint64_t v354 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v420)(v368, v418, v427);
          v355 = (os_log_s *)Logger.logObject.getter(v354);
          os_log_type_t v356 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v355, v356))
          {
            v357 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)v357 = 0;
            _os_log_impl(&dword_0, v355, v356, "Parse#getSiriKitIntent uso affinity task", v357, 2u);
            swift_slowDealloc(v357, -1LL, -1LL);
          }

          v225(v353, v427);
          id v358 = [objc_allocWithZone(INUpdateMediaAffinityIntent) init];
          swift_retain_n(v352, 2LL);
          v359 = dispatch_group_create();
          dispatch_group_enter(v359);
          uint64_t v360 = swift_allocObject(&unk_26FA38, 32LL, 7LL);
          *(void *)(v360 + swift_weakDestroy(v0 + 16) = v358;
          *(void *)(v360 + 24) = v359;
          id v131 = v358;
          v361 = v359;
          sub_FED84(v352, v406, v407, (uint64_t)sub_FF290, v360, v131);
          swift_release(v360);
          OS_dispatch_group.wait()();

          swift_release(v349);
          swift_release_n(v352, 2LL);
          (*(void (**)(char *, uint64_t))(v319 + 8))(v375, v318);
          ((void (*)(char *, uint64_t))v424)(v384, v387);
          swift_release(v352);
          return v131;
        }

        v362 = v369;
        uint64_t v363 = ((uint64_t (*)(char *, uint8_t *, uint64_t))v420)(v369, v418, v427);
        v364 = (os_log_s *)Logger.logObject.getter(v363);
        os_log_type_t v365 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v364, v365))
        {
          v366 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v366 = 0;
          _os_log_impl(&dword_0, v364, v365, "Parse#getSiriKitIntent failed to get task from usoParse", v366, 2u);
          swift_slowDealloc(v366, -1LL, -1LL);
        }

        v225(v362, v427);
        (*(void (**)(char *, uint64_t))(v319 + 8))(v375, v318);
      }

      ((void (*)(char *, uint64_t))v424)(v209, v387);
    }

    return 0LL;
  }

  uint64_t v116 = v89;
  (*(void (**)(void **, uint64_t))(v421 + 96))(v89, v93);
  uint64_t v117 = *(uint64_t *)((char *)v89 + *(int *)(sub_6C5C(&qword_284618) + 48));
  sub_B7C84(v425, (uint64_t)&v433);
  if (!v434)
  {
    sub_1F6CC((uint64_t)&v433, &qword_2848C0);
    uint64_t v193 = v426;
    uint64_t v192 = v427;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v194 = sub_6960(v192, (uint64_t)qword_2969C8);
    uint64_t v195 = v390;
    uint64_t v196 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v193 + 16))(v390, v194, v192);
    uint64_t v197 = (os_log_s *)Logger.logObject.getter(v196);
    os_log_type_t v198 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v197, v198))
    {
      uint64_t v199 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v199 = 0;
      _os_log_impl( &dword_0,  v197,  v198,  "Parse#getSiriKitIntent Cannot get AudioIntent from NLv3IntentPlusServerConversion parse for INUpdateMediaAffinityIntent",  v199,  2u);
      swift_slowDealloc(v199, -1LL, -1LL);
    }

    swift_release(v117);
    (*(void (**)(char *, uint64_t))(v193 + 8))(v195, v192);
    (*(void (**)(void **, uint64_t))(v403 + 8))(v89, v402);
    return 0LL;
  }

  uint64_t v118 = sub_49B60(&v433, &v436);
  uint64_t v119 = (void *)Parse.ServerConversion.siriKitIntent.getter(v118);
  uint64_t v120 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
  uint64_t v121 = swift_dynamicCastObjCClass(v119, v120);
  uint64_t v123 = v426;
  uint64_t v122 = v427;
  if (v121)
  {
    uint64_t v124 = (void *)Parse.ServerConversion.siriKitIntent.getter(v121);
    uint64_t v125 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    uint64_t v126 = (void *)swift_dynamicCastObjCClassUnconditional(v124, v125, 0LL, 0LL, 0LL);
    uint64_t v127 = v438;
    uint64_t v128 = v439;
    uint64_t v129 = sub_6EA8(&v436, v438);
    uint64_t v434 = v127;
    uint64_t v435 = v128;
    uint64_t v130 = sub_10974(&v433);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16LL))(v130, v129, v127);
    id v131 = sub_FE6DC((uint64_t)v130, v406, v407, v126, (uint64_t)v425, v127, v128);

    swift_release(v117);
    sub_6C3C(&v433);
LABEL_66:
    sub_6C3C(&v436);
    (*(void (**)(void **, uint64_t))(v403 + 8))(v116, v402);
    return v131;
  }

  uint64_t v250 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  uint64_t v251 = swift_dynamicCastObjCClass(v119, v250);
  if (v251)
  {
    uint64_t v252 = Parse.ServerConversion.siriKitIntent.getter(v251);
    uint64_t v253 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    id v131 = (id)swift_dynamicCastObjCClassUnconditional(v252, v253, 0LL, 0LL, 0LL);
    uint64_t v254 = dispatch_group_create();
    dispatch_group_enter(v254);
    uint64_t v255 = v438;
    uint64_t v256 = v439;
    uint64_t v257 = sub_6EA8(&v436, v438);
    uint64_t v434 = v255;
    uint64_t v435 = v256;
    uint64_t v258 = sub_10974(&v433);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v255 - 8) + 16LL))(v258, v257, v255);
    uint64_t v259 = swift_allocObject(&unk_26F9E8, 24LL, 7LL);
    *(void *)(v259 + swift_weakDestroy(v0 + 16) = v254;
    uint64_t v260 = v254;
    sub_64CB8((uint64_t)v258, v406, v407, (uint64_t)sub_FE6D4, v259, v131, v255, v256);
    swift_release(v259);
    sub_6C3C(&v433);
    OS_dispatch_group.wait()();

    swift_release(v117);
    goto LABEL_66;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v300 = sub_6960(v122, (uint64_t)qword_2969C8);
  id v301 = v381;
  (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v381, v300, v122);
  uint64_t v302 = v372;
  uint64_t v303 = v422;
  uint64_t v304 = v423;
  uint64_t v305 = ((uint64_t (*)(char *, char *, uint64_t))v423)(v372, v425, v422);
  id v306 = (os_log_s *)Logger.logObject.getter(v305);
  os_log_type_t v307 = static os_log_type_t.debug.getter();
  v424 = v306;
  LODWORD(v420) = v307;
  if (os_log_type_enabled(v306, v307))
  {
    uint64_t v308 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v309 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v433 = v309;
    v418 = v308;
    *(_DWORD *)uint64_t v308 = 136315138;
    uint64_t v310 = v419;
    v304(v419, v302, v303);
    uint64_t v311 = String.init<A>(describing:)(v310, v303);
    unint64_t v313 = v312;
    uint64_t v431 = sub_6978(v311, v312, (uint64_t *)&v433);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v431, v432);
    swift_bridgeObjectRelease(v313);
    (*(void (**)(char *, uint64_t))(v421 + 8))(v302, v303);
    v314 = v424;
    v315 = v418;
    _os_log_impl( &dword_0,  v424,  (os_log_type_t)v420,  "Parse#getSiriKitIntent found .NLv3IntentPlusServerConversion %s",  v418,  0xCu);
    swift_arrayDestroy(v309, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v309, -1LL, -1LL);
    swift_slowDealloc(v315, -1LL, -1LL);

    uint64_t v316 = (*(uint64_t (**)(char *, uint64_t))(v426 + 8))(v381, v427);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v421 + 8))(v302, v303);

    uint64_t v316 = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v301, v122);
  }

  id v131 = (id)Parse.playMediaIntent.getter(v316);
  swift_release(v117);
  sub_6C3C(&v436);
  (*(void (**)(void **, uint64_t))(v403 + 8))(v89, v402);
  return v131;
}

void sub_FE4A8(void *a1, dispatch_group_s *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  id v9 = a1;
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v20 = a2;
    uint64_t v12 = swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = v5;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v13 = 138412290;
    id v21 = v9;
    id v14 = v9;
    a2 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    uint64_t v15 = v18;
    *uint64_t v18 = v9;

    _os_log_impl(&dword_0, v10, v11, "Parse#getSiriKitIntent returning intent: %@", v13, 0xCu);
    uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v15, 1LL, v16);
    swift_slowDealloc(v15, -1LL, -1LL);
    uint64_t v17 = v13;
    uint64_t v5 = v19;
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {

    uint64_t v10 = (os_log_s *)v9;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  dispatch_group_leave(a2);
}

uint64_t sub_FE6B0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_FE6D4()
{
}

id sub_FE6DC(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v12 + 16))(v14);
  uint64_t v15 = dispatch_group_create();
  dispatch_group_enter(v15);
  uint64_t v16 = swift_allocObject(&unk_26FAB0, 32LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = a4;
  *(void *)(v16 + 24) = v15;
  id v17 = a4;
  uint64_t v18 = v15;
  sub_F7A80((uint64_t)v14, a2, a3, (uint64_t)sub_FF290, v16, v17, a6, a7);
  swift_release(v16);
  OS_dispatch_group.wait()();

  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  id v20 = v17;
  v19(v14, a6);
  return v20;
}

uint64_t sub_FE7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioNLv3Intent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_FE840()
{
}

uint64_t sub_FE848(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v51 = a6;
  uint64_t v50 = a5;
  uint64_t v49 = a4;
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v7 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v46 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_284DB0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v45 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v45 - v20;
  uint64_t v22 = type metadata accessor for AudioNLv3Intent(0LL);
  v55[3] = v22;
  v55[4] = sub_10430(&qword_287000, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C220);
  uint64_t v23 = sub_10974(v55);
  sub_FE7FC(a1, (uint64_t)v23);
  if (qword_2839D0 != -1) {
    swift_once(&qword_2839D0, sub_209354);
  }
  uint64_t v24 = qword_28E990;
  uint64_t v25 = sub_10430(&qword_289178, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C3B8);
  IntentNodeTraversable.value<A>(forNode:)(v54, v24, v22, v25);
  if (LOBYTE(v54[0]) == 11)
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v26(v21, 1LL, 1LL, v7);
  }

  else
  {
    sub_C09BC(v54[0]);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v26(v21, 0LL, 1LL, v7);
  }

  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v19, enum case for CommonAudio.Verb.like(_:), v7);
  v26(v19, 0LL, 1LL, v7);
  uint64_t v27 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_D8208((uint64_t)v21, (uint64_t)v12);
  sub_D8208((uint64_t)v19, v27);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v28((uint64_t)v12, 1LL, v7) == 1)
  {
    sub_1F6CC((uint64_t)v19, &qword_284DB0);
    sub_1F6CC((uint64_t)v21, &qword_284DB0);
    if (v28(v27, 1LL, v7) == 1)
    {
      sub_1F6CC((uint64_t)v12, &qword_284DB0);
      uint64_t v29 = v51;
LABEL_13:
      uint64_t v30 = 1LL;
      goto LABEL_15;
    }

uint64_t sub_FED84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v48 = a6;
  uint64_t v47 = a5;
  uint64_t v46 = a4;
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  uint64_t v7 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_284DB0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v42 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v42 - v20;
  uint64_t v22 = type metadata accessor for AudioUsoIntent(0LL);
  v52[3] = v22;
  v52[4] = &protocol witness table for AudioUsoIntent;
  v52[0] = a1;
  swift_retain(a1);
  dispatch thunk of AudioIntent.verb.getter(v22, &protocol witness table for AudioUsoIntent);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v19, enum case for CommonAudio.Verb.like(_:), v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0LL, 1LL, v7);
  uint64_t v23 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_D8208((uint64_t)v21, (uint64_t)v12);
  sub_D8208((uint64_t)v19, v23);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v24((uint64_t)v12, 1LL, v7) == 1)
  {
    sub_1F6CC((uint64_t)v19, &qword_284DB0);
    sub_1F6CC((uint64_t)v21, &qword_284DB0);
    int v25 = v24(v23, 1LL, v7);
    uint64_t v26 = v48;
    if (v25 == 1)
    {
      sub_1F6CC((uint64_t)v12, &qword_284DB0);
LABEL_8:
      uint64_t v31 = 1LL;
      goto LABEL_10;
    }

    goto LABEL_6;
  }

  sub_D8208((uint64_t)v12, (uint64_t)v16);
  if (v24(v23, 1LL, v7) == 1)
  {
    sub_1F6CC((uint64_t)v19, &qword_284DB0);
    sub_1F6CC((uint64_t)v21, &qword_284DB0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    uint64_t v26 = v48;
LABEL_6:
    sub_1F6CC((uint64_t)v12, &qword_284DA8);
    goto LABEL_9;
  }

  uint64_t v27 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v43, v23, v7);
  uint64_t v28 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v29 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v27, v7, v28);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30(v27, v7);
  sub_1F6CC((uint64_t)v19, &qword_284DB0);
  sub_1F6CC((uint64_t)v21, &qword_284DB0);
  v30(v16, v7);
  sub_1F6CC((uint64_t)v12, &qword_284DB0);
  uint64_t v26 = v48;
  if ((v29 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v31 = 2LL;
LABEL_10:
  id v32 = [v26 backingStore];
  uint64_t v33 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
  uint64_t v34 = (void *)swift_dynamicCastObjCClass(v32, v33);
  if (v34) {
    [v34 setAffinityType:INMediaAffinityTypeGetBackingType(v31)];
  }

  id v35 = v45;
  uint64_t v36 = v45[3];
  uint64_t v37 = v45[4];
  sub_6EA8(v45, v36);
  sub_157C4(v44, (uint64_t)v51);
  sub_157C4((uint64_t)v35, (uint64_t)v50);
  sub_157C4((uint64_t)v52, (uint64_t)v49);
  uint64_t v38 = (void *)swift_allocObject(&unk_26FA60, 160LL, 7LL);
  uint64_t v39 = v47;
  v38[2] = v46;
  v38[3] = v39;
  sub_FF54(v51, (uint64_t)(v38 + 4));
  sub_FF54(v50, (uint64_t)(v38 + 9));
  sub_FF54(v49, (uint64_t)(v38 + 14));
  v38[19] = v26;
  swift_retain(v39);
  id v40 = v26;
  dispatch thunk of NowPlayingProviding.app(completion:)(sub_FF218, v38, v36, v37);
  swift_release(v38);
  return sub_6C3C(v52);
}

uint64_t sub_FF220()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_FF264()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_FF29C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v44 = a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = App.appIdentifier.getter(v12);
  if (v16)
  {
    uint64_t v17 = v15;
    uint64_t v18 = v16;
    sub_157C4(*(void *)(v4 + 16) + 16LL, (uint64_t)v47);
    uint64_t v19 = v48;
    uint64_t v20 = v49;
    sub_6EA8(v47, v48);
    uint64_t v46 = 0LL;
    memset(v45, 0, sizeof(v45));
    id v21 = (void *)swift_allocObject(&unk_26FBA0, 56LL, 7LL);
    v21[2] = v17;
    _OWORD v21[3] = v18;
    v21[4] = v44;
    v21[5] = a3;
    v21[6] = v4;
    swift_bridgeObjectRetain(v18);
    swift_retain(a3);
    swift_retain(v4);
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v17,  v18,  v45,  sub_102F20,  v21,  v19,  v20);
    swift_bridgeObjectRelease(v18);
    swift_release(v21);
    sub_1F6CC((uint64_t)v45, &qword_2860C0);
    return sub_6C3C(v47);
  }

  else
  {
    uint64_t v43 = v7;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v10, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v23, v10);
    uint64_t v24 = swift_retain_n(a1, 2LL);
    int v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v42 = a3;
      uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      v47[0] = v41;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v39 = v27 + 4;
      id v40 = v27;
      *(void *)&v45[0] = a1;
      uint64_t v28 = type metadata accessor for App(0LL);
      uint64_t v29 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter(v28, v29);
      unint64_t v32 = v31;
      *(void *)&v45[0] = sub_6978(v30, v31, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, (char *)v45 + 8);
      swift_release_n(a1, 2LL);
      swift_bridgeObjectRelease(v32);
      uint64_t v33 = v40;
      _os_log_impl( &dword_0,  v25,  v26,  "CommonDialogProvider#makeOpenAppDialog no bundle identifier in app: %s",  v40,  0xCu);
      uint64_t v34 = v41;
      swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    else
    {

      swift_release_n(a1, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    uint64_t v35 = v43;
    unint64_t v36 = sub_6C9C();
    uint64_t v37 = swift_allocError(&type metadata for String, v36, 0LL, 0LL);
    *uint64_t v38 = 0xD000000000000019LL;
    v38[1] = 0x8000000000220890LL;
    *uint64_t v9 = v37;
    swift_storeEnumTagMultiPayload(v9, v35, 1LL);
    v44(v9);
    return sub_1F6CC((uint64_t)v9, (uint64_t *)&unk_286BB0);
  }

uint64_t sub_FF674( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(void *, void), uint64_t a8)
{
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  uint64_t v55 = a6;
  uint64_t v56 = a5;
  uint64_t v54 = a4;
  uint64_t v57 = a3;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v19);
  id v21 = (uint64_t *)((char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v21, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v21, v19) == 1)
  {
    uint64_t v22 = v61;
    uint64_t v23 = *v21;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = v60;
    uint64_t v25 = sub_6960(v60, (uint64_t)qword_2969C8);
    uint64_t v27 = v58;
    uint64_t v26 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v25, v24);
    swift_errorRetain(v23);
    uint64_t v28 = swift_errorRetain(v23);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v32 = swift_slowAlloc(32LL, -1LL);
      uint64_t v66 = v32;
      *(_DWORD *)unint64_t v31 = 136446210;
      swift_getErrorValue(v23, v65, v64);
      uint64_t v33 = Error.localizedDescription.getter(v64[1], v64[2]);
      unint64_t v35 = v34;
      uint64_t v63 = sub_6978(v33, v34, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, v64);
      swift_bridgeObjectRelease(v35);
      swift_errorRelease(v23);
      swift_errorRelease(v23);
      _os_log_impl( &dword_0,  v29,  v30,  "PlayMediaViewProvider#makeViews error rendering play dialog on tvOS: %{public}s",  v31,  0xCu);
      swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
    }

    else
    {
      swift_errorRelease(v23);
      swift_errorRelease(v23);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v24);
    }

    v22(_swiftEmptyArrayStorage, 0LL);
    return swift_errorRelease(v23);
  }

  else
  {
    uint64_t v36 = *(int *)(v12 + 48);
    uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v38 + 32))(v18, v21, v37);
    uint64_t v39 = *(void **)((char *)v21 + v36);
    *(void *)&v18[v36] = v39;
    uint64_t v40 = *(int *)(v12 + 48);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v16, v18, v37);
    *(void *)&v16[v40] = v39;
    uint64_t v41 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v42 = (v41 + 40) & ~v41;
    unint64_t v43 = (v14 + v42 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v45 = (void *)swift_allocObject(&unk_26FBF0, v44 + 16, v41 | 7);
    uint64_t v46 = v56;
    _OWORD v45[2] = v54;
    v45[3] = v46;
    v45[4] = a2;
    sub_712A0((uint64_t)v16, (uint64_t)v45 + v42);
    uint64_t v47 = v55;
    *(void *)((char *)v45 + v4sub_6C3C(v0 + 3) = v55;
    uint64_t v48 = (void *)((char *)v45 + v44);
    uint64_t v49 = v62;
    *uint64_t v48 = v61;
    v48[1] = v49;
    id v50 = v39;
    swift_retain(a2);
    id v51 = v47;
    swift_retain(v49);
    swift_bridgeObjectRetain(v46);
    sub_FF29C(v57, (void (*)(uint64_t *))sub_102EE8, (uint64_t)v45);
    swift_release(v45);
    return sub_1F6CC((uint64_t)v18, &qword_289340);
  }

uint64_t sub_FFAA4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(void *, void), uint64_t a8)
{
  id v173 = a7;
  uint64_t v174 = a8;
  unsigned int v169 = a6;
  uint64_t v163 = a5;
  uint64_t v168 = a4;
  uint64_t v170 = a3;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v10);
  uint64_t v164 = (char *)&v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v175 = *(void *)(v12 - 8);
  uint64_t v176 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v158 = (char *)&v154 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v165 = (char *)&v154 - v19;
  __chkstk_darwin(v18);
  uint64_t v172 = (char *)&v154 - v20;
  uint64_t v167 = sub_6C5C(&qword_284628);
  uint64_t v21 = __chkstk_darwin(v167);
  uint64_t v159 = (char *)&v154 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v154 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v166 = (char *)&v154 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v154 - v28;
  uint64_t v30 = sub_6C5C(&qword_289340);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v162 = (char *)&v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __chkstk_darwin(v31);
  unsigned int v171 = (void (**)(char *, uint64_t))((char *)&v154 - v34);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v154 - v35;
  uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t *)((char *)&v154 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v39, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v39, v37) == 1)
  {
    uint64_t v40 = *v39;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v41 = v176;
    uint64_t v42 = sub_6960(v176, (uint64_t)qword_2969C8);
    uint64_t v43 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v15, v42, v41);
    swift_errorRetain(v40);
    uint64_t v44 = swift_errorRetain(v40);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      v177[0] = v48;
      *(_DWORD *)uint64_t v47 = 136446210;
      swift_getErrorValue(v40, v180, v179);
      uint64_t v49 = Error.localizedDescription.getter(v179[1], v179[2]);
      unint64_t v51 = v50;
      uint64_t v178 = sub_6978(v49, v50, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179);
      swift_bridgeObjectRelease(v51);
      swift_errorRelease(v40);
      swift_errorRelease(v40);
      _os_log_impl( &dword_0,  v45,  v46,  "PlayMediaViewProvider#makeViews  error rendering punchout button on tvOS: %{public}s",  v47,  0xCu);
      swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1LL, -1LL);
      swift_slowDealloc(v47, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v176);
    }

    else
    {
      swift_errorRelease(v40);
      swift_errorRelease(v40);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v41);
    }

    v173(_swiftEmptyArrayStorage, 0LL);
    return swift_errorRelease(v40);
  }

  uint64_t v156 = v30;
  uint64_t v52 = *(int *)(v30 + 48);
  uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v161 = *(void *)(v53 - 8);
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v161 + 32);
  uint64_t v160 = v53;
  uint64_t v154 = v54;
  ((void (*)(char *, uint64_t *))v54)(v36, v39);
  uint64_t v55 = *(void **)((char *)v39 + v52);
  uint64_t v157 = v36;
  *(void *)&v36[v52] = v55;
  uint64_t v155 = v55;
  uint64_t v56 = static BundleIdentifiers.music.getter(v155);
  uint64_t v58 = v57;
  uint64_t v59 = v170;
  if (v56 == a2 && v57 == v170)
  {
    swift_bridgeObjectRelease(v170);
    uint64_t v60 = v176;
LABEL_12:
    id v64 = [objc_allocWithZone(SAUIAppPunchOut) init];
    URL.init(string:)(0xD000000000000018LL);
    uint64_t v65 = type metadata accessor for URL(0LL);
    uint64_t v66 = *(void *)(v65 - 8);
    uint64_t v68 = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v29, 1LL, v65) != 1)
    {
      URL._bridgeToObjectiveC()(v67);
      uint64_t v68 = v69;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v29, v65);
    }

    [v64 setPunchOutUri:v68];

    uint64_t v70 = qword_283888;
    id v71 = v64;
    uint64_t v72 = v175;
    uint64_t v73 = v172;
    if (v70 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v74 = sub_6960(v60, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v73, v74, v60);
    id v75 = v71;
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.info.getter(v76);
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v79 = swift_slowAlloc(32LL, -1LL);
      v177[0] = v79;
      *(_DWORD *)uint64_t v78 = 136446210;
      id v80 = [v75 punchOutUri];
      if (v80)
      {
        uint64_t v81 = v80;
        uint64_t v82 = v166;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v80);

        uint64_t v83 = 0LL;
      }

      else
      {
        uint64_t v83 = 1LL;
        uint64_t v82 = v166;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v82, v83, 1LL, v65);
      uint64_t v88 = String.init<A>(describing:)(v82, v167);
      unint64_t v90 = v89;
      uint64_t v178 = sub_6978(v88, v89, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179);

      swift_bridgeObjectRelease(v90);
      _os_log_impl( &dword_0,  v76,  v77,  "PlayMediaViewProvider#makeViews showing punchout button on tvOS with punchOutUri: %{public}s",  v78,  0xCu);
      swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1LL, -1LL);
      swift_slowDealloc(v78, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v175 + 8))(v172, v176);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v60);
    }

    uint64_t v91 = (uint64_t)v157;
    goto LABEL_42;
  }

  char v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v57);
  swift_bridgeObjectRelease(v58);
  uint64_t v60 = v176;
  if ((v62 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v84 = static BundleIdentifiers.podcasts.getter(v63);
  uint64_t v86 = v85;
  if (v84 == a2 && v85 == v59)
  {
    swift_bridgeObjectRelease(v59);
    uint64_t v87 = v165;
    goto LABEL_27;
  }

  char v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v84, v85);
  swift_bridgeObjectRelease(v86);
  uint64_t v87 = v165;
  if ((v92 & 1) != 0)
  {
LABEL_27:
    id v93 = [objc_allocWithZone(SAUIAppPunchOut) init];
    URL.init(string:)(0xD000000000000015LL);
    uint64_t v94 = type metadata accessor for URL(0LL);
    uint64_t v95 = *(void (***)(char *, uint64_t))(v94 - 8);
    uint64_t v97 = 0LL;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v95[6])(v25, 1LL, v94) != 1)
    {
      URL._bridgeToObjectiveC()(v96);
      uint64_t v97 = v98;
      v95[1](v25, v94);
    }

    [v93 setPunchOutUri:v97];

    uint64_t v99 = qword_283888;
    id v100 = v93;
    if (v99 == -1) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }

  id v113 = [objc_allocWithZone(SAAppsLaunchApp) init];
  NSString v114 = String._bridgeToObjectiveC()();
  [v113 setLaunchId:v114];

  uint64_t v115 = qword_283888;
  id v75 = v113;
  uint64_t v91 = (uint64_t)v157;
  if (v115 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v116 = sub_6960(v60, (uint64_t)qword_2969C8);
  uint64_t v117 = v175;
  uint64_t v118 = v158;
  uint64_t v119 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v175 + 16))(v158, v116, v60);
  uint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
  os_log_type_t v121 = static os_log_type_t.info.getter(v120);
  if (os_log_type_enabled(v120, v121))
  {
    uint64_t v122 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v122 = 0;
    _os_log_impl(&dword_0, v120, v121, "PlayMediaViewProvider#makeViews showing launch app button on tvOS", v122, 2u);
    swift_slowDealloc(v122, -1LL, -1LL);
    uint64_t v123 = (os_log_s *)v75;
  }

  else
  {
    uint64_t v123 = v120;
    uint64_t v120 = (os_log_s *)v75;
  }

  (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v60);
  while (1)
  {
LABEL_42:
    type metadata accessor for SiriKitAceViewBuilder(0LL);
    uint64_t v127 = type metadata accessor for SiriEnvironmentBackedDeviceState(0LL);
    swift_allocObject(v127, *(unsigned int *)(v127 + 48), *(unsigned __int16 *)(v127 + 52));
    uint64_t v128 = SiriEnvironmentBackedDeviceState.init()();
    v177[3] = v127;
    v177[4] = sub_10430( (unint64_t *)&qword_289348,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriEnvironmentBackedDeviceState,  (uint64_t)&protocol conformance descriptor for SiriEnvironmentBackedDeviceState);
    v177[0] = v128;
    uint64_t v129 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(v177);
    sub_6C3C(v177);
    uint64_t v60 = v156;
    uint64_t v130 = *(int *)(v156 + 48);
    uint64_t v131 = v161;
    uint64_t v132 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v161 + 16);
    uint64_t v95 = v171;
    uint64_t v133 = v160;
    v132(v171, v91, v160);
    uint64_t v134 = v155;

    *(void (**)(char *, uint64_t))((char *)v95 + v130) = v134;
    int v136 = (void *)TemplatingResult.print.getter(v135);
    (*(void (**)(char *, uint64_t))(v131 + 8))((char *)v95, v133);
    if (v136[2])
    {
      uint64_t v87 = (char *)v136[4];
      unint64_t v137 = v136[5];
      swift_bridgeObjectRetain(v137);
    }

    else
    {
      uint64_t v87 = 0LL;
      unint64_t v137 = 0xE000000000000000LL;
    }

    swift_bridgeObjectRelease(v136);
    id v100 = v75;
    uint64_t v138 = dispatch thunk of SiriKitAceViewBuilder.addButton(label:command:)(v87, v137, v100);
    swift_bridgeObjectRelease(v137);

    uint64_t v139 = swift_release(v129);
    uint64_t v94 = dispatch thunk of SiriKitAceViewBuilder.build()(v139);
    swift_release(v138);
    if ((unint64_t)v94 >> 62)
    {
      if (v94 < 0) {
        uint64_t v152 = v94;
      }
      else {
        uint64_t v152 = v94 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v94);
      uint64_t v153 = _CocoaArrayWrapper.endIndex.getter(v152);
      swift_bridgeObjectRelease(v94);
      if (v153 != 1) {
        goto LABEL_53;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFF8LL)) != 1LL)
    {
      goto LABEL_53;
    }

    if ((v94 & 0xC000000000000001LL) != 0) {
      break;
    }
    if (*(void *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFF8LL)))
    {
      id v140 = *(id *)(v94 + 32);
      goto LABEL_50;
    }

    __break(1u);
LABEL_61:
    swift_once(&qword_283888, sub_BFC5C);
LABEL_30:
    uint64_t v101 = sub_6960(v60, (uint64_t)qword_2969C8);
    uint64_t v102 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v87, v101, v60);
    id v75 = v100;
    uint64_t v103 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v104 = static os_log_type_t.info.getter(v103);
    BOOL v105 = os_log_type_enabled(v103, v104);
    uint64_t v91 = (uint64_t)v157;
    if (v105)
    {
      os_log_type_t v106 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v107 = swift_slowAlloc(32LL, -1LL);
      v177[0] = v107;
      *(_DWORD *)os_log_type_t v106 = 136446210;
      id v108 = [v75 punchOutUri];
      if (v108)
      {
        uint64_t v109 = v108;
        uint64_t v110 = v159;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v108);

        unint64_t v111 = v110;
        uint64_t v112 = 0LL;
      }

      else
      {
        uint64_t v112 = 1LL;
        unint64_t v111 = v159;
      }

      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v95[7])(v111, v112, 1LL, v94);
      uint64_t v124 = String.init<A>(describing:)(v111, v167);
      unint64_t v126 = v125;
      uint64_t v178 = sub_6978(v124, v125, v177);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179);

      swift_bridgeObjectRelease(v126);
      _os_log_impl( &dword_0,  v103,  v104,  "PlayMediaViewProvider#makeViews showing punchout button on tvOS with punchOutUri: %{public}s",  v106,  0xCu);
      swift_arrayDestroy(v107, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v107, -1LL, -1LL);
      swift_slowDealloc(v106, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v175 + 8))(v165, v176);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v102 + 8))(v87, v60);
    }
  }

  id v140 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v94);
LABEL_50:
  os_log_type_t v141 = v140;
  uint64_t v142 = objc_opt_self(&OBJC_CLASS___SAUIDialogPunchout);
  uint64_t v143 = swift_dynamicCastObjCClass(v141, v142);
  if (v143)
  {
    uint64_t v144 = (void *)v143;
    uint64_t v145 = *(int *)(v60 + 48);
    uint64_t v146 = v162;
    uint64_t v147 = v163;
    uint64_t v148 = v160;
    v132((void (**)(char *, uint64_t))v162, v163, v160);
    *(void *)&v146[v145] = *(void *)(v147 + v145);
    uint64_t v149 = (uint64_t)v164;
    v154(v164, v146, v148);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v161 + 56))(v149, 0LL, 1LL, v148);
    sub_1033C8(v149, v144);

    sub_1F6CC(v149, (uint64_t *)&unk_286BD0);
  }

  else
  {
  }

LABEL_53:
  sub_6EA8((void *)(v168 + 24), *(void *)(v168 + 48));
  uint64_t v150 = swift_allocObject(&unk_26FBC8, 32LL, 7LL);
  *(void *)(v150 + swift_weakDestroy(v0 + 16) = v173;
  uint64_t v151 = v174;
  *(void *)(v150 + 24) = v174;
  swift_retain(v151);
  sub_1A8FB8(v94, v169, (uint64_t)sub_102F30, v150);

  swift_bridgeObjectRelease(v94);
  swift_release(v150);
  return sub_1F6CC(v91, &qword_289340);
}

void sub_1009BC(uint64_t a1, void *a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v58 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v63 = (char *)&v58 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  char v62 = (char *)&v58 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v58 - v14;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v18 = v17(v15, v16, v3);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "PlayMediaViewProvider#unsupportedValueOutputView...", v21, 2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v15, v3);
  swift_bridgeObjectRetain("er");
  id v23 = [a2 mediaItems];
  if (!v23) {
    goto LABEL_18;
  }
  uint64_t v24 = v23;
  uint64_t v25 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0) {
      uint64_t v40 = v26;
    }
    else {
      uint64_t v40 = v26 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v26);
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease(v26);
    if (!v41) {
      goto LABEL_33;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_33:
    swift_bridgeObjectRelease("er");
    uint64_t v33 = (char *)v26;
    goto LABEL_34;
  }

  if ((v26 & 0xC000000000000001LL) != 0)
  {
    id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v26);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      return;
    }

    id v27 = *(id *)(v26 + 32);
  }

  uint64_t v28 = v27;
  swift_bridgeObjectRelease(v26);
  id v29 = [v28 privateMediaItemValueData];

  if (!v29 || (id v30 = [v29 internalSignals], v29, !v30))
  {
LABEL_18:
    uint64_t v33 = "er";
LABEL_34:
    swift_bridgeObjectRelease(v33);
    goto LABEL_35;
  }

  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for String);

  uint64_t v61 = *(void *)(v26 + 16);
  if (!v61) {
    goto LABEL_33;
  }
  uint64_t v59 = v22;
  uint64_t v60 = v26;
  uint64_t v31 = *(void *)(v26 + 32);
  uint64_t v32 = *(char **)(v26 + 40);
  if (v31 == 0xD000000000000019LL && v32 == "er" || (_stringCompareWithSmolCheck(_:_:expecting:)(v31, v32) & 1) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease("er");
    swift_bridgeObjectRelease(v60);
    swift_arrayDestroy(&qword_26A650, 1LL, &type metadata for String);
    uint64_t v22 = v59;
    goto LABEL_36;
  }

  if (v61 != 1)
  {
    uint64_t v34 = (char **)(v60 + 56);
    uint64_t v35 = 1LL;
    do
    {
      uint64_t v36 = v35 + 1;
      if (__OFADD__(v35, 1LL)) {
        goto LABEL_53;
      }
      uint64_t v37 = (uint64_t)*(v34 - 1);
      uint64_t v38 = *v34;
      BOOL v39 = v37 == 0xD000000000000019LL && v38 == "er";
      if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(v37, v38) & 1) != 0) {
        goto LABEL_17;
      }
      v34 += 2;
      ++v35;
    }

    while (v36 != v61);
  }

  swift_bridgeObjectRelease("er");
  swift_bridgeObjectRelease(v60);
  uint64_t v22 = v59;
LABEL_35:
  swift_arrayDestroy(&qword_26A650, 1LL, &type metadata for String);
  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26A660) & 1) != 0)
  {
LABEL_36:
    uint64_t v42 = v17(v7, v16, v3);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.info.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      os_log_type_t v46 = "PlayMediaViewProvider#unsupportedValueOutputView returning nil for podcast promotion";
LABEL_48:
      _os_log_impl(&dword_0, v43, v44, v46, v45, 2u);
      swift_slowDealloc(v45, -1LL, -1LL);
      goto LABEL_49;
    }

    goto LABEL_49;
  }

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26A690) & 1) != 0)
  {
    uint64_t v7 = v65;
    uint64_t v47 = v17(v65, v16, v3);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v44 = static os_log_type_t.info.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      os_log_type_t v46 = "PlayMediaViewProvider#unsupportedValueOutputView returning nil for acousticID follow up not found";
      goto LABEL_48;
    }

LABEL_49:
    v22(v7, v3);
    return;
  }

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26A6C0) & 1) == 0)
  {
    uint64_t v7 = v63;
    uint64_t v57 = v17(v63, v16, v3);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v44 = static os_log_type_t.info.getter(v43);
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      os_log_type_t v46 = "PlayMediaViewProvider#unsupportedValueOutputView returning nil for subscriber";
      goto LABEL_48;
    }

    goto LABEL_49;
  }

  uint64_t v48 = v62;
  uint64_t v49 = v17(v62, v16, v3);
  unint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.info.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl( &dword_0,  v50,  v51,  "PlayMediaViewProvider#unsupportedValueOutputView returning an apple music button",  v52,  2u);
    swift_slowDealloc(v52, -1LL, -1LL);
  }

  v22(v48, v3);
  id v53 = sub_10129C(v64);
  if (v53)
  {
    id v54 = v53;
    uint64_t v55 = sub_6C5C(&qword_287980);
    uint64_t v56 = swift_allocObject(v55, 40LL, 7LL);
    *(_OWORD *)(v56 + swift_weakDestroy(v0 + 16) = xmmword_214980;
    *(void *)(v56 + 3sub_6C3C(v0 + 2) = v54;
    uint64_t v66 = v56;
    specialized Array._endMutation()(v56);
  }

uint64_t sub_101038()
{
  uint64_t v1 = type metadata accessor for Locale(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[33];
  sub_6EA8(v0 + 29, v5);
  uint64_t v7 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v7);
  id v9 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v9);
  uint64_t v10 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0xD000000000000013LL,  0x800000000021FF10LL,  0x656D614E707041LL,  0xE700000000000000LL,  v9,  v4,  0x754D20656C707041LL,  0xEB00000000636973LL,  v5,  v6);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

uint64_t sub_101178()
{
  return sub_6C3C((void *)(v0 + 232));
}

uint64_t sub_1011B4()
{
  sub_6C3C((void *)(v0 + 232));
  return swift_deallocClassInstance(v0, 272LL, 7LL);
}

uint64_t type metadata accessor for PlayMediaViewProvider(uint64_t a1)
{
  uint64_t result = qword_2891B8;
  if (!qword_2891B8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayMediaViewProvider);
  }
  return result;
}

uint64_t sub_10124C(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = "(";
  void v2[2] = "(";
  v2[3] = "(";
  v2[4] = &unk_217F20;
  v2[5] = "(";
  return swift_initClassMetadata2(a1, 256LL, 6LL, v2, a1 + 144);
}

id sub_10129C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v2);
  uint64_t v107 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v105 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  __chkstk_darwin(v4);
  os_log_type_t v104 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Locale(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  id v108 = (char *)&v103 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v103 - v17;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = (void *)sub_6960(v10, (uint64_t)qword_2969C8);
  os_log_type_t v20 = *(void (**)(char *, id, uint64_t))(v11 + 16);
  id v109 = v19;
  uint64_t v110 = v20;
  uint64_t v21 = ((uint64_t (*)(char *))v20)(v18);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.info.getter(v22);
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v111 = v10;
  if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v22, v23, "PlayMediaViewProvider#appleMusicButton... ", v25, 2u);
    uint64_t v26 = v25;
    uint64_t v10 = v111;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  id v27 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v28 = v27(v18, v10);
  uint64_t v29 = App.appIdentifier.getter(v28);
  uint64_t v31 = v30;
  uint64_t v32 = static BundleIdentifiers.music.getter(v29);
  uint64_t v34 = v33;
  if (v31)
  {
    if (v29 == v32 && v31 == v33)
    {
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v34);
LABEL_11:
      uint64_t v36 = v103[32];
      uint64_t v37 = v103[33];
      sub_6EA8(v103 + 29, v36);
      uint64_t v38 = type metadata accessor for PlayMediaViewProvider(0LL);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v38);
      id v40 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
      static SiriAudioEnvironment.siriLocale.getter(v40);
      uint64_t v41 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( 0x5050415F4E45504FLL,  0xE800000000000000LL,  0x656D614E707041LL,  0xE700000000000000LL,  v40,  v9,  0x4025206E65704FLL,  0xE700000000000000LL,  v36,  v37);
      uint64_t v43 = v42;

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v44 = sub_6C5C((uint64_t *)&unk_289320);
      uint64_t v45 = swift_allocObject(v44, 72LL, 7LL);
      *(_OWORD *)(v45 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      uint64_t v46 = sub_101038();
      uint64_t v48 = v47;
      *(void *)(v45 + 56) = &type metadata for String;
      *(void *)(v45 + 64) = sub_6DAC();
      *(void *)(v45 + 3sub_6C3C(v0 + 2) = v46;
      *(void *)(v45 + 40) = v48;
      String.init(format:_:)(v41, v43, v45);
      uint64_t v50 = v49;
      swift_bridgeObjectRelease(v43);
      id v51 = [objc_allocWithZone(SAUIAppPunchOut) init];
      static BundleIdentifiers.music.getter(v51);
      uint64_t v53 = v52;
      NSString v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v53);
      [v51 setBundleId:v54];

      NSString v55 = String._bridgeToObjectiveC()();
      [v51 setAppDisplayName:v55];

      [v51 setAppAvailableInStorefront:1];
      id v56 = v51;
      uint64_t v57 = v104;
      uint64_t v58 = UUID.init()(v56);
      UUID.uuidString.getter(v58);
      uint64_t v60 = v59;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v57, v106);
      NSString v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v60);
      [v56 setAceId:v61];

      char v62 = v107;
      URL.init(string:)(0xD000000000000022LL);
      uint64_t v63 = type metadata accessor for URL(0LL);
      uint64_t v64 = *(void *)(v63 - 8);
      uint64_t v66 = 0LL;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1LL, v63) != 1)
      {
        URL._bridgeToObjectiveC()(v65);
        uint64_t v66 = v67;
        (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v63);
      }

      [v56 setPunchOutUri:v66];

      id v68 = [objc_allocWithZone(SAUIButton) init];
      uint64_t v69 = sub_6C5C(&qword_287980);
      uint64_t v70 = swift_allocObject(v69, 40LL, 7LL);
      *(_OWORD *)(v70 + swift_weakDestroy(v0 + 16) = xmmword_214980;
      *(void *)(v70 + 3sub_6C3C(v0 + 2) = v56;
      uint64_t v113 = v70;
      specialized Array._endMutation()(v70);
      uint64_t v71 = v113;
      id v72 = v56;
      sub_6C5C(&qword_286C40);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v71);
      [v68 setCommands:isa];

      NSString v74 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v50);
      [v68 setText:v74];

      id v75 = v108;
      uint64_t v76 = v111;
      v110(v108, v109, v111);
      id v77 = v68;
      uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
      os_log_type_t v79 = static os_log_type_t.info.getter(v78);
      if (os_log_type_enabled(v78, v79))
      {
        id v109 = v72;
        id v80 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v81 = swift_slowAlloc(32LL, -1LL);
        uint64_t v113 = v81;
        *(_DWORD *)id v80 = 136315138;
        id v82 = [v77 description];
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
        uint64_t v110 = (void (*)(char *, id, uint64_t))v27;
        uint64_t v84 = v83;
        unint64_t v86 = v85;

        uint64_t v112 = sub_6978(v84, v86, &v113);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);

        swift_bridgeObjectRelease(v86);
        _os_log_impl(&dword_0, v78, v79, "PlayMediaViewProvider#appleMusicButton returning: %s", v80, 0xCu);
        swift_arrayDestroy(v81, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v81, -1LL, -1LL);
        swift_slowDealloc(v80, -1LL, -1LL);

        ((void (*)(char *, uint64_t))v110)(v108, v111);
      }

      else
      {

        v27(v75, v76);
      }

      return v77;
    }

    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v34);
    if ((v35 & 1) != 0) {
      goto LABEL_11;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v33);
  }

  uint64_t v87 = v111;
  v110(v14, v109, v111);
  uint64_t v88 = swift_retain(a1);
  unint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
  os_log_type_t v90 = static os_log_type_t.info.getter(v89);
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v110 = (void (*)(char *, id, uint64_t))v27;
    uint64_t v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    char v92 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v91 = 138412290;
    uint64_t v93 = App.appIdentifier.getter(v92);
    if (v94)
    {
      uint64_t v95 = v93;
      uint64_t v96 = v94;
      unint64_t v97 = sub_6C9C();
      uint64_t v98 = swift_allocError(&type metadata for String, v97, 0LL, 0LL);
      *uint64_t v99 = v95;
      v99[1] = v96;
      uint64_t v100 = _swift_stdlib_bridgeErrorToNSError(v98);
      uint64_t v113 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114);
    }

    else
    {
      uint64_t v113 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114);
      uint64_t v100 = 0LL;
    }

    id v27 = (uint64_t (*)(char *, uint64_t))v110;
    *char v92 = v100;
    swift_release(a1);
    _os_log_impl(&dword_0, v89, v90, "PlayMediaViewProvider#appleMusicButton returning nil since appID: %@ ", v91, 0xCu);
    uint64_t v101 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v92, 1LL, v101);
    swift_slowDealloc(v92, -1LL, -1LL);
    swift_slowDealloc(v91, -1LL, -1LL);
  }

  else
  {

    swift_release(a1);
  }

  v27(v14, v87);
  return 0LL;
}

uint64_t sub_101C04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(void **), uint64_t a8)
{
  NSString v61 = a6;
  uint64_t v62 = a5;
  uint64_t v59 = a4;
  uint64_t v60 = a2;
  uint64_t v64 = a3;
  uint64_t v68 = a1;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  __chkstk_darwin(v10);
  uint64_t v65 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v58 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v18);
  os_log_type_t v20 = (uint64_t *)((char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = swift_allocObject(&unk_26FB50, 32LL, 7LL);
  uint64_t v63 = a7;
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = a7;
  *(void *)(v21 + 24) = a8;
  uint64_t v22 = a8;
  sub_FF10(v68, (uint64_t)v20, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    uint64_t v23 = v21;
    uint64_t v24 = *v20;
    uint64_t v25 = qword_283888;
    swift_retain(v22);
    if (v25 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v26 = v67;
    uint64_t v27 = sub_6960(v67, (uint64_t)qword_2969C8);
    uint64_t v29 = v65;
    uint64_t v28 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v27, v26);
    swift_errorRetain(v24);
    uint64_t v30 = swift_errorRetain(v24);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v34 = (void *)swift_slowAlloc(32LL, -1LL);
      id v72 = v34;
      *(_DWORD *)uint64_t v33 = 136446210;
      swift_getErrorValue(v24, v71, v70);
      uint64_t v35 = Error.localizedDescription.getter(v70[1], v70[2]);
      unint64_t v37 = v36;
      uint64_t v69 = sub_6978(v35, v36, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70);
      swift_bridgeObjectRelease(v37);
      swift_errorRelease(v24);
      swift_errorRelease(v24);
      _os_log_impl( &dword_0,  v31,  v32,  "PlayMediaViewProvider#makeViews error rendering play dialog on tvOS: %{public}s",  v33,  0xCu);
      swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
    }

    else
    {
      swift_errorRelease(v24);
      swift_errorRelease(v24);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v26);
    }

    id v72 = _swiftEmptyArrayStorage;
    char v73 = 0;
    v63(&v72);
    swift_errorRelease(v24);
    uint64_t v55 = v23;
  }

  else
  {
    uint64_t v38 = *(int *)(v12 + 48);
    uint64_t v39 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v40 = *(void *)(v39 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v40 + 32))(v17, v20, v39);
    uint64_t v68 = v22;
    uint64_t v41 = *(void **)((char *)v20 + v38);
    *(void *)&v17[v38] = v41;
    uint64_t v42 = v17;
    uint64_t v57 = v17;
    uint64_t v43 = v60;
    uint64_t v44 = *(int *)(v12 + 48);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v15, v42, v39);
    *(void *)&v15[v44] = v41;
    uint64_t v45 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v46 = (v45 + 40) & ~v45;
    unint64_t v47 = (v13 + v46 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v49 = (void *)swift_allocObject(&unk_26FB78, v48 + 16, v45 | 7);
    uint64_t v50 = v62;
    __int128 v49[2] = v59;
    v49[3] = v50;
    void v49[4] = v43;
    sub_712A0((uint64_t)v15, (uint64_t)v49 + v46);
    id v51 = v61;
    *(void *)((char *)v49 + v4sub_6C3C(v0 + 7) = v61;
    uint64_t v52 = (uint64_t (**)(uint64_t, char))((char *)v49 + v48);
    *uint64_t v52 = sub_265A8;
    v52[1] = (uint64_t (*)(uint64_t, char))v21;
    swift_retain(v68);
    id v53 = v41;
    swift_retain(v43);
    id v54 = v51;
    swift_retain(v21);
    swift_bridgeObjectRetain(v50);
    sub_FF29C(v64, (void (*)(uint64_t *))sub_102EE8, (uint64_t)v49);
    swift_release(v49);
    sub_1F6CC((uint64_t)v57, &qword_289340);
    uint64_t v55 = v21;
  }

  return swift_release(v55);
}

uint64_t sub_10209C(void *a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v98 = a4;
  int v99 = a3;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v94 = (char *)&v93 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v96 = (char *)&v93 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v93 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v93 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v27 = swift_allocObject(&unk_26FB28, 32LL, 7LL);
  uint64_t v101 = a5;
  uint64_t v102 = v27;
  *(void *)(v27 + swift_weakDestroy(v0 + 16) = a5;
  *(void *)(v27 + 24) = a6;
  swift_retain_n(v27, 2LL);
  uint64_t v100 = a6;
  uint64_t v28 = swift_retain(a6);
  id v95 = a1;
  uint64_t v29 = INPlayMediaIntent.fallbackImplicitRecommendation.getter(v28);
  uint64_t v97 = a2;
  if ((v29 & 1) == 0
    || (uint64_t v29 = App.appIdentifier.getter(v29), !v30)
    || (uint64_t v31 = v30,
        char v32 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v29, v30),
        uint64_t v29 = swift_bridgeObjectRelease(v31),
        (v32 & 1) == 0))
  {
    uint64_t v59 = App.appIdentifier.getter(v29);
    if (!v60)
    {
      uint64_t v67 = v102;
      swift_release_n(v102, 2LL);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v68 = sub_6960(v10, (uint64_t)qword_2969C8);
      uint64_t v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v68, v10);
      uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
      os_log_type_t v71 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v70, v71))
      {
        id v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v72 = 0;
        _os_log_impl(&dword_0, v70, v71, "PlayMediaViewProvider#makeViews missing app bundle identifier", v72, 2u);
        swift_slowDealloc(v72, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      unint64_t v73 = sub_6C9C();
      uint64_t v74 = swift_allocError(&type metadata for String, v73, 0LL, 0LL);
      *id v75 = 0xD00000000000001DLL;
      v75[1] = 0x8000000000220870LL;
      uint64_t v103 = (void *)v74;
      char v104 = 1;
      v101(&v103);
      swift_errorRelease(v74);
      uint64_t v76 = v67;
      return swift_release(v76);
    }

    uint64_t v40 = v59;
    uint64_t v42 = v60;
    uint64_t v34 = v11;
    if ((static SiriAudioEnvironment.isHomePod.getter(v59) & 1) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t v61 = v102;
    swift_release_n(v102, 2LL);
    swift_bridgeObjectRelease(v42);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v62 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 16))(v24, v62, v10);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.info.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl(&dword_0, v64, v65, "PlayMediaViewProvider#makeViews won't return views on HomePod", v66, 2u);
      swift_slowDealloc(v66, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v10);
    goto LABEL_33;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v33 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v34 = v11;
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v26, v33, v10);
  unint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl( &dword_0,  v36,  v37,  "PlayMediaViewProvider#makeViews fallbackImplicitRecommendation scenario, override bundleIdentifier with fallback",  v38,  2u);
    swift_slowDealloc(v38, -1LL, -1LL);
  }

  uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v26, v10);
  uint64_t v40 = static BundleIdentifiers.music.getter(v39);
  uint64_t v42 = v41;
  if ((static SiriAudioEnvironment.isHomePod.getter(v40) & 1) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v99 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v43 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 16);
    uint64_t v45 = v44(v21, v43, v10);
    uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.info.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      unint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v48 = 0;
      _os_log_impl(&dword_0, v46, v47, "PlayMediaViewProvider#makeViews showing punchout button on tvOS", v48, 2u);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    uint64_t v49 = *(void (**)(char *, uint64_t))(v34 + 8);
    v49(v21, v10);
    uint64_t v50 = v98;
    uint64_t v51 = *(void *)(v98 + 16);
    uint64_t v52 = type metadata accessor for PlayMediaDialogProvider(0LL);
    uint64_t v53 = swift_dynamicCastClass(v51, v52);
    uint64_t v54 = v97;
    if (v53)
    {
      uint64_t v55 = v53;
      uint64_t v56 = v102;
      swift_retain(v102);
      swift_retain(v50);
      swift_retain(v54);
      swift_bridgeObjectRetain(v42);
      id v57 = v95;
      swift_retain(v51);
      sub_16335C( 1,  v54,  (unint64_t)v57,  v55,  v50,  v54,  v40,  v42,  v57,  (void (*)(void **))sub_33C74,  v56);
      swift_release(v51);
      swift_bridgeObjectRelease(v42);
      return swift_release_n(v56, 4LL);
    }

    uint64_t v83 = v44;
    uint64_t v61 = v102;
    swift_release_n(v102, 2LL);
    swift_bridgeObjectRelease(v42);
    uint64_t v84 = v94;
    uint64_t v85 = v83(v94, v43, v10);
    unint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
    os_log_type_t v87 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v88 = 0;
      _os_log_impl( &dword_0,  v86,  v87,  "PlayMediaViewProvider#makeViews dialogProvider not instance of PlayMediaDialogProvider",  v88,  2u);
      swift_slowDealloc(v88, -1LL, -1LL);
    }

    v49(v84, v10);
    uint64_t v89 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v90 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v91 = swift_allocError(v89, v90, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v89 - 8) + 104LL))( v92,  enum case for PlaybackCode.ceGE67(_:),  v89);
    uint64_t v103 = (void *)v91;
    char v104 = 1;
    v101(&v103);
    swift_errorRelease(v91);
    goto LABEL_34;
  }

  uint64_t v61 = v102;
  swift_release_n(v102, 2LL);
  swift_bridgeObjectRelease(v42);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v77 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v78 = v96;
  uint64_t v79 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 16))(v96, v77, v10);
  id v80 = (os_log_s *)Logger.logObject.getter(v79);
  os_log_type_t v81 = static os_log_type_t.info.getter(v80);
  if (os_log_type_enabled(v80, v81))
  {
    id v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v82 = 0;
    _os_log_impl(&dword_0, v80, v81, "PlayMediaViewProvider#makeViews not rendering tvOS views in handle", v82, 2u);
    swift_slowDealloc(v82, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v34 + 8))(v78, v10);
LABEL_33:
  uint64_t v103 = _swiftEmptyArrayStorage;
  char v104 = 0;
  v101(&v103);
LABEL_34:
  uint64_t v76 = v61;
  return swift_release(v76);
}

uint64_t sub_102920(int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v67 = a2;
  int v69 = a1;
  uint64_t v68 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v8 = *(void *)(v68 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v68);
  uint64_t v64 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  os_log_type_t v65 = (char *)&v54 - v11;
  uint64_t v62 = sub_6C5C(&qword_283FF8);
  __chkstk_darwin(v62);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  id v19 = a3;
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  int v61 = v21;
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v63 = v19;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc(38LL, -1LL);
    os_log_t v55 = v20;
    uint64_t v24 = v23;
    uint64_t v56 = swift_slowAlloc(96LL, -1LL);
    uint64_t v71 = v56;
    *(_DWORD *)uint64_t v24 = 136446978;
    uint64_t v57 = v15;
    uint64_t v25 = static Insights.viewProvider.getter();
    uint64_t v58 = a4;
    unint64_t v27 = v26;
    uint64_t ObjectType = sub_6978(v25, v26, &v71);
    uint64_t v59 = a5;
    uint64_t v60 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v71);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v24 + sub_6C3C(v0 + 12) = 1026;
    LODWORD(ObjectType) = v69 & 1;
    uint64_t v28 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, (char *)&ObjectType + 4);
    *(_WORD *)(v24 + 1sub_6C3C(v0 + 8) = 2082;
    static SiriAudioEnvironment.responseMode.getter(v28);
    uint64_t v29 = String.init<A>(describing:)(v13, v62);
    unint64_t v31 = v30;
    uint64_t ObjectType = sub_6978(v29, v30, &v71);
    a4 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v71);
    swift_bridgeObjectRelease(v31);
    *(_WORD *)(v24 + 2sub_6C3C(v0 + 8) = 2082;
    uint64_t ObjectType = swift_getObjectType(v19);
    uint64_t v32 = sub_6C5C((uint64_t *)&unk_289330);
    uint64_t v33 = String.init<A>(describing:)(&ObjectType, v32);
    unint64_t v35 = v34;
    uint64_t ObjectType = sub_6978(v33, v34, &v71);
    a5 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v71);

    unint64_t v36 = v35;
    uint64_t v9 = v60;
    swift_bridgeObjectRelease(v36);
    os_log_t v37 = v55;
    _os_log_impl( &dword_0,  v55,  (os_log_type_t)v61,  "PlayMediaViewProvider#makeViews %{public}s called in interstitial?:%{BOOL,public}d, response mode: %{public}s for Intent: %{public}s",  (uint8_t *)v24,  0x26u);
    uint64_t v38 = v56;
    swift_arrayDestroy(v56, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v14);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  uint64_t v39 = swift_allocObject(&unk_26FAD8, 32LL, 7LL);
  *(void *)(v39 + swift_weakDestroy(v0 + 16) = a4;
  *(void *)(v39 + 24) = a5;
  uint64_t v40 = qword_2838D0;
  swift_retain(a5);
  if (v40 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  id v41 = (id)qword_296AA0;
  uint64_t v42 = v65;
  OSSignpostID.init(log:)(v41);
  uint64_t v43 = v8;
  uint64_t v44 = v64;
  uint64_t v45 = v68;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v64, v42, v68);
  uint64_t v46 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v47 = (v46 + 33) & ~v46;
  unint64_t v48 = (v9 + v47 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v49 = swift_allocObject(&unk_26FB00, v48 + 16, v46 | 7);
  *(void *)(v49 + swift_weakDestroy(v0 + 16) = "playMediaAceViewProviderMakeViews";
  *(void *)(v49 + 24) = 33LL;
  *(_BYTE *)(v49 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v49 + v47, v44, v45);
  uint64_t v50 = (uint64_t (**)(uint64_t))(v49 + v48);
  os_log_s *v50 = sub_248FC;
  v50[1] = (uint64_t (*)(uint64_t))v39;
  uint64_t v51 = swift_retain(v39);
  uint64_t v52 = static os_signpost_type_t.begin.getter(v51);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v52,  &dword_0,  qword_296AA0,  "playMediaAceViewProviderMakeViews",  33LL,  2LL,  v42,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  swift_retain(v49);
  sub_10209C(v63, v67, v69 & 1, v66, (void (*)(void **))sub_33D20, v49);
  swift_release_n(v49, 2LL);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v45);
  return swift_release(v39);
}

uint64_t sub_102E48()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_102E6C()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_102EEC()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_102F20(uint64_t a1, uint64_t a2)
{
  return sub_1F2CD8(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_102F30(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, 0LL);
}

id sub_102F54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  uint64_t v55 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v52 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v48 - v6;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = [objc_allocWithZone(SAUIAssistantUtteranceView) init];
  uint64_t v16 = UUID.init()(v15);
  UUID.uuidString.getter(v16);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  NSString v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAceId:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  TemplatingResult.templateIdentifier.getter(v20);
  uint64_t v22 = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setDialogIdentifier:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  uint64_t v25 = TemplatingResult.print.getter(v24);
  uint64_t v26 = v25;
  if (*(void *)(v25 + 16))
  {
    uint64_t v27 = *(void *)(v25 + 40);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRelease(v26);
    NSString v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setText:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);
  }

  else
  {
    uint64_t v29 = v53;
    uint64_t v30 = v55;
    swift_bridgeObjectRelease(v25);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v31 = sub_6960(v7, (uint64_t)qword_2969C8);
    uint64_t v32 = v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v31, v7);
    uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16);
    uint64_t v34 = v54;
    uint64_t v35 = v33(v29, a1, v54);
    unint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v50 = v32;
      uint64_t v51 = v7;
      uint64_t v49 = v8;
      uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      uint64_t v57 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      unint64_t v48 = v38 + 4;
      uint64_t v40 = v52;
      v33(v52, (uint64_t)v29, v34);
      uint64_t v41 = String.init<A>(describing:)(v40, v34);
      unint64_t v43 = v42;
      uint64_t v56 = sub_6978(v41, v42, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
      __n128 v44 = swift_bridgeObjectRelease(v43);
      (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v29, v34, v44);
      _os_log_impl(&dword_0, v36, v37, "PlayMediaViewProvider#makeViews got an empty templatingResult: %s", v38, 0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v34);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v32, v7);
    }
  }

  [v15 setCanUseServerTTS:0];
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  id v45 = v15;
  Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  [v45 setListenAfterSpeaking:isa];

  [v45 setCanBeRefreshed:0];
  return v45;
}

uint64_t sub_1033C8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)v48 - v9;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v12, (uint64_t *)&unk_286BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13) == 1)
  {
    sub_1F6CC((uint64_t)v12, (uint64_t *)&unk_286BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v17 = sub_6960(v4, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v17, v4);
    id v18 = a2;
    NSString v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v22 = swift_slowAlloc(32LL, -1LL);
      uint64_t v56 = v22;
      uint64_t v53 = v4;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v54 = (char *)(v21 + 4);
      id v23 = v18;
      id v24 = [v23 description];
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      uint64_t v52 = v5;
      uint64_t v26 = v25;
      unint64_t v28 = v27;

      uint64_t v55 = sub_6978(v26, v28, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);

      swift_bridgeObjectRelease(v28);
      _os_log_impl( &dword_0,  v19,  v20,  "PlayMediaViewProvider#makeViews didn't get valid templatingResult to make utterance view: %s",  v21,  0xCu);
      swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);

      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v8, v53);
    }

    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    id v30 = sub_102F54((uint64_t)v16);
    [a2 setUtteranceView:v30];

    uint64_t v31 = v16;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v33 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v54, v32, v4);
    id v34 = a2;
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.info.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v53 = v4;
      os_log_type_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v50 = swift_slowAlloc(32LL, -1LL);
      uint64_t v56 = v50;
      uint64_t v52 = v5;
      *(_DWORD *)os_log_type_t v37 = 136315138;
      v48[1] = v37 + 4;
      uint64_t v49 = v37;
      id v38 = v34;
      id v39 = [v38 description];
      uint64_t v51 = v31;
      id v40 = v39;
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      unint64_t v43 = v42;

      uint64_t v55 = sub_6978(v41, v43, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);

      swift_bridgeObjectRelease(v43);
      __n128 v44 = v49;
      _os_log_impl(&dword_0, v35, v36, "PlayMediaViewProvider#makeViews punchout button: %s", v49, 0xCu);
      uint64_t v45 = v50;
      swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
      uint64_t v46 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
      uint64_t v47 = v51;
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v33, v4);
      uint64_t v46 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
      uint64_t v47 = v31;
    }

    return v46(v47, v13);
  }

uint64_t sub_103900(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_FFAA4( a1,  v1[2],  v1[3],  v1[4],  (uint64_t)v1 + v4,  *(void **)((char *)v1 + v5),  *(void (**)(void *, void))((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(uint64_t *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t type metadata accessor for AddMediaCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin24AddMediaCatDialogService);
}

uint64_t UpdateMediaAffinity.UnsupportedValueStrategy.makeUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_1053F0(a1, a2, a3, a4, a6, a7, a8);
}

void sub_1039A8(uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6)
{
  int v136 = a5;
  uint64_t v137 = a6;
  uint64_t v142 = a2;
  id v143 = a4;
  uint64_t v135 = a3;
  uint64_t v144 = a1;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v6);
  uint64_t v127 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v131 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v130 = *(v131 - 1);
  __chkstk_darwin(v131);
  uint64_t v129 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v126 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v133 = (char *)&v122 - v13;
  __chkstk_darwin(v12);
  os_log_type_t v141 = (char *)&v122 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v134 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v132 = (char *)&v122 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v138 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v128 = (char *)&v122 - v22;
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v139 = (char *)&v122 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v122 - v26;
  uint64_t v140 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v28 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  id v30 = (char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v34 = (char *)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v35);
  os_log_type_t v37 = (char **)((char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(v144, (uint64_t)v37);
  if (swift_getEnumCaseMultiPayload(v37, v35) == 1)
  {
    id v38 = *v37;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))( v34,  enum case for AdditionalMetricsDescription.ModuleName.umahis(_:),  v31);
    uint64_t v39 = v140;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v140);
    uint64_t v139 = v38;
    swift_getErrorValue(v38, v148, v147);
    uint64_t v40 = Error.localizedDescription.getter(v147[1], v147[2]);
    uint64_t v42 = v41;
    os_log_type_t v141 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v34,  v30,  v40,  v41,  0LL,  1LL);
    uint64_t v144 = v43;
    __n128 v44 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v30, v39, v44);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    uint64_t v45 = v142[6];
    uint64_t v46 = v142[7];
    uint64_t v142 = sub_6EA8(v142 + 3, v45);
    uint64_t v47 = enum case for ActivityType.failed(_:);
    uint64_t v48 = type metadata accessor for ActivityType(0LL);
    uint64_t v49 = *(void *)(v48 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v27, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v27, 0LL, 1LL, v48);
    uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v51 = (uint64_t)v128;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56LL))(v128, 1LL, 1LL, v50);
    uint64_t v52 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = (uint64_t)v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v132, v52, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
    id v56 = v143;
    id v57 = [v143 mediaItems];
    if (v57)
    {
      uint64_t v58 = v57;
      unint64_t v59 = sub_687D0();
      uint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, v59);

      if ((unint64_t)v60 >> 62)
      {
        if (v60 < 0) {
          uint64_t v103 = v60;
        }
        else {
          uint64_t v103 = v60 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v60);
        uint64_t v104 = _CocoaArrayWrapper.endIndex.getter(v103);
        swift_bridgeObjectRelease(v60);
        if (v104) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v60 & 0xC000000000000001LL) != 0)
        {
          id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v60);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v61 = *(id *)(v60 + 32);
LABEL_8:
          uint64_t v62 = v61;
          id v63 = objc_msgSend(v61, "type", swift_bridgeObjectRelease(v60).n128_f64[0]);

LABEL_22:
          uint64_t v105 = v144;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v135,  v56,  v27,  v51,  v55,  v141,  v144,  v63,  0,  v45,  v46);
          swift_bridgeObjectRelease(v105);
          sub_1F6CC(v55, &qword_2845A0);
          sub_1F6CC(v51, (uint64_t *)&unk_286BD0);
          sub_1F6CC((uint64_t)v27, &qword_2845A8);
          uint64_t v106 = v139;
          v145[0] = v139;
          char v146 = 1;
          swift_errorRetain(v139);
          v136(v145);
          swift_errorRelease(v106);
          sub_1F6CC((uint64_t)v145, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_34;
      }

      swift_bridgeObjectRelease(v60);
    }

    id v63 = 0LL;
    goto LABEL_22;
  }

  uint64_t v64 = *(int *)(v9 + 48);
  uint64_t v65 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v125 = v9;
  uint64_t v66 = v65;
  uint64_t v144 = *(void *)(v65 - 8);
  uint64_t v128 = *(char **)(v144 + 32);
  uint64_t v67 = v141;
  ((void (*)(char *, char **, uint64_t))v128)(v141, v37, v65);
  uint64_t v68 = *(char **)((char *)v37 + v64);
  *(void *)&v67[v64] = v68;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))( v34,  enum case for AdditionalMetricsDescription.ModuleName.umahis(_:),  v31);
  uint64_t v124 = v31;
  uint64_t v69 = v28;
  uint64_t v70 = v140;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v140);
  uint64_t v71 = v130;
  id v72 = v129;
  unint64_t v73 = v131;
  (*(void (**)(char *, void, void *))(v130 + 104))( v129,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v131);
  uint64_t v132 = v68;
  uint64_t v122 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v34, v30, v72, 0LL, 1LL);
  uint64_t v123 = v74;
  (*(void (**)(char *, void *))(v71 + 8))(v72, v73);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v70);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v124);
  id v75 = v142;
  uint64_t v76 = v142[6];
  uint64_t v130 = v142[7];
  uint64_t v131 = sub_6EA8(v142 + 3, v76);
  uint64_t v77 = enum case for ActivityType.completed(_:);
  uint64_t v78 = type metadata accessor for ActivityType(0LL);
  uint64_t v79 = *(void *)(v78 - 8);
  id v80 = v139;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v139, v77, v78);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v80, 0LL, 1LL, v78);
  uint64_t v81 = v125;
  uint64_t v82 = *(int *)(v125 + 48);
  uint64_t v83 = v144;
  uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  uint64_t v85 = v133;
  unint64_t v86 = v141;
  v84(v133, v141, v66);
  *(void *)&v85[v82] = v132;
  os_log_type_t v87 = v138;
  ((void (*)(char *, char *, uint64_t))v128)(v138, v85, v66);
  uint64_t v88 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
  uint64_t v140 = v66;
  v88(v87, 0LL, 1LL, v66);
  uint64_t v89 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v90 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v92 = v134;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v134, v89, v90);
  uint64_t v93 = (uint64_t)v92;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v92, 0LL, 1LL, v90);
  id v94 = v143;
  id v95 = [v143 mediaItems];
  uint64_t v96 = (uint64_t)v86;
  if (!v95) {
    goto LABEL_28;
  }
  uint64_t v97 = v95;
  unint64_t v98 = sub_687D0();
  uint64_t v99 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v97, v98);

  if ((unint64_t)v99 >> 62)
  {
    if (v99 < 0) {
      uint64_t v107 = v99;
    }
    else {
      uint64_t v107 = v99 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v99);
    uint64_t v108 = _CocoaArrayWrapper.endIndex.getter(v107);
    swift_bridgeObjectRelease(v99);
    if (v108) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }

  if (!*(void *)((char *)&dword_10 + (v99 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_27:
    swift_bridgeObjectRelease(v99);
LABEL_28:
    id v102 = 0LL;
    goto LABEL_29;
  }

uint64_t sub_1044B4( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v125 = a8;
  uint64_t v124 = a7;
  uint64_t v140 = a5;
  uint64_t v141 = a6;
  uint64_t v143 = a4;
  uint64_t v138 = a2;
  uint64_t v139 = a3;
  uint64_t v123 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v11 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v134 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_289340);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v127 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v115 - v17;
  uint64_t v19 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v19);
  uint64_t v137 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v21);
  int v136 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v131 = *(v133 - 1);
  __chkstk_darwin(v133);
  uint64_t v130 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v132 = (void *)type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v129 = *(v132 - 1);
  __chkstk_darwin(v132);
  uint64_t v128 = (char *)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for Logger(0LL);
  uint64_t v142 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v115 - v32;
  uint64_t v34 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v34);
  uint64_t v36 = (uint64_t *)((char *)&v115 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v36);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v36, v34);
  uint64_t v135 = v25;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v38 = *v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v28, (uint64_t)qword_2969C8);
    uint64_t v40 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v33, v39, v28);
    swift_errorRetain(v38);
    uint64_t v41 = swift_errorRetain(v38);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      __n128 v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)__n128 v44 = 138412290;
      swift_errorRetain(v38);
      uint64_t v46 = _swift_stdlib_bridgeErrorToNSError(v38);
      uint64_t v144 = v46;
      uint64_t v40 = v142;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v144, v145);
      *uint64_t v45 = v46;
      swift_errorRelease(v38);
      swift_errorRelease(v38);
      _os_log_impl( &dword_0,  v42,  v43,  "UnsupportedValueStrategy#makeUnsupportedValueOutput dialog provider failed with error: %@",  v44,  0xCu);
      uint64_t v47 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v45, 1LL, v47);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v38);
      swift_errorRelease(v38);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v28);
    uint64_t v91 = v129;
    uint64_t v92 = v128;
    uint64_t v93 = v132;
    (*(void (**)(char *, void, void *))(v129 + 104))( v128,  enum case for AdditionalMetricsDescription.ModuleName.cuvs(_:),  v132);
    uint64_t v94 = v131;
    uint64_t v95 = v130;
    uint64_t v96 = v133;
    (*(void (**)(uint64_t, void, void *))(v131 + 104))( v130,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v133);
    swift_getErrorValue(v38, v147, v146);
    uint64_t v97 = Error.localizedDescription.getter(v146[1], v146[2]);
    uint64_t v99 = v98;
    uint64_t v142 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v92,  v95,  v97,  v98,  0LL,  1LL);
    uint64_t v101 = v100;
    __n128 v102 = swift_bridgeObjectRelease(v99);
    (*(void (**)(uint64_t, void *, __n128))(v94 + 8))(v95, v96, v102);
    (*(void (**)(char *, void *))(v91 + 8))(v92, v93);
    uint64_t v104 = v138[6];
    uint64_t v103 = v138[7];
    uint64_t v138 = sub_6EA8(v138 + 3, v104);
    uint64_t v105 = enum case for ActivityType.failed(_:);
    uint64_t v106 = type metadata accessor for ActivityType(0LL);
    uint64_t v107 = *(void *)(v106 - 8);
    uint64_t v108 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v135, v105, v106);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v108, 0LL, 1LL, v106);
    uint64_t v109 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v110 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56LL))(v136, 1LL, 1LL, v109);
    uint64_t v111 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v112 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v113 = *(void *)(v112 - 8);
    uint64_t v114 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 104))(v137, v111, v112);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v114, 0LL, 1LL, v112);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v139,  v143,  v108,  v110,  v114,  v142,  v101,  0LL,  1,  v104,  v103);
    swift_bridgeObjectRelease(v101);
    sub_1F6CC(v114, &qword_2845A0);
    sub_1F6CC(v110, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v108, &qword_2845A8);
    uint64_t v144 = v38;
    v145[32] = 1;
    swift_errorRetain(v38);
    v140(&v144);
    swift_errorRelease(v38);
    return sub_1F6CC((uint64_t)&v144, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v116 = a9;
    uint64_t v48 = *(int *)(v14 + 48);
    uint64_t v49 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v120 = *(void *)(v49 - 8);
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 32);
    uint64_t v119 = v49;
    uint64_t v117 = v50;
    ((void (*)(char *, uint64_t *))v50)(v18, v36);
    uint64_t v51 = *(void **)((char *)v36 + v48);
    *(void *)&v18[v48] = v51;
    uint64_t v52 = qword_283888;
    id v118 = v51;
    if (v52 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v53 = v11;
    uint64_t v126 = v14;
    uint64_t v122 = v18;
    uint64_t v54 = sub_6960(v28, (uint64_t)qword_2969C8);
    uint64_t v55 = v142;
    uint64_t v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 16))(v31, v54, v28);
    id v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      unint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v59 = 0;
      _os_log_impl(&dword_0, v57, v58, "UnsupportedValueStrategy#makeUnsupportedValueOutput acquired dialog.", v59, 2u);
      swift_slowDealloc(v59, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v28);
    sub_9363C(v143, v134);
    uint64_t v60 = v129;
    id v61 = v128;
    uint64_t v62 = v132;
    (*(void (**)(char *, void, void *))(v129 + 104))( v128,  enum case for AdditionalMetricsDescription.ModuleName.cuvs(_:),  v132);
    uint64_t v63 = v131;
    uint64_t v64 = v130;
    uint64_t v65 = v133;
    (*(void (**)(uint64_t, void, void *))(v131 + 104))( v130,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v133);
    uint64_t v66 = v121;
    uint64_t v67 = v53;
    uint64_t v68 = v53;
    uint64_t v69 = v123;
    (*(void (**)(char *, void, uint64_t))(v121 + 104))( v68,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v123);
    uint64_t v142 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v61,  v64,  v124,  v125,  v67,  v116,  0LL,  1LL);
    uint64_t v125 = v70;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v69);
    (*(void (**)(uint64_t, void *))(v63 + 8))(v64, v65);
    (*(void (**)(char *, void *))(v60 + 8))(v61, v62);
    uint64_t v71 = v138;
    uint64_t v130 = v138[6];
    uint64_t v131 = v138[7];
    uint64_t v132 = sub_6EA8(v138 + 3, v130);
    uint64_t v72 = enum case for ActivityType.resolveSlotUnsupported(_:);
    uint64_t v73 = type metadata accessor for ActivityType(0LL);
    uint64_t v74 = *(void *)(v73 - 8);
    uint64_t v75 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 104))(v135, v72, v73);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v75, 0LL, 1LL, v73);
    uint64_t v76 = *(int *)(v126 + 48);
    uint64_t v133 = *(void **)(v120 + 16);
    uint64_t v77 = v120;
    uint64_t v78 = (uint64_t)v127;
    uint64_t v79 = v119;
    ((void (*)(char *, char *, uint64_t))v133)(v127, v122, v119);
    id v80 = v118;
    *(void *)(v78 + v76) = v118;
    uint64_t v81 = (uint64_t)v136;
    v117(v136, v78, v79);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v81, 0LL, 1LL, v79);
    uint64_t v82 = enum case for SiriKitReliabilityCodes.slotResolutionFailure(_:);
    uint64_t v83 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = (uint64_t)v137;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v137, v82, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v86 = v125;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v139,  v143,  v75,  v81,  v85,  v142,  v125,  0LL,  1,  v130,  v131);
    swift_bridgeObjectRelease(v86);
    sub_1F6CC(v85, &qword_2845A0);
    sub_1F6CC(v81, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v75, &qword_2845A8);
    sub_6EA8(v71 + 8, v71[11]);
    uint64_t v87 = *(int *)(v126 + 48);
    uint64_t v88 = (uint64_t)v122;
    ((void (*)(uint64_t, char *, uint64_t))v133)(v78, v122, v79);
    *(void *)(v78 + v8sub_6C3C(v0 + 7) = v80;
    uint64_t v89 = v134;
    sub_175200(v78, v80, v134, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v140, v141);

    sub_1F6CC(v89, (uint64_t *)&unk_286C50);
    sub_1F6CC(v88, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 8))(v78, v79);
  }

uint64_t sub_105088( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_1053F0(a1, a2, a3, a4, a6, a7, a8);
}

uint64_t sub_1050B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  updated,  a10);
}

uint64_t sub_105138( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.UnsupportedValueStrategy();
  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  updated,  a10);
}

uint64_t sub_1051BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    v24[1] = a1;
    uint64_t v16 = a3;
    uint64_t v17 = a4;
    uint64_t v18 = v15;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "CommonDialogProvider#somethingHasToBePlayingDialog", v15, 2u);
    uint64_t v19 = v18;
    a4 = v17;
    a3 = v16;
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v26 = 0LL;
  memset(v25, 0, sizeof(v25));
  __chkstk_darwin(v20);
  v24[-10] = v21;
  v24[-9] = v22;
  v24[-8] = 0xD000000000000017LL;
  v24[-7] = 0x80000000002209C0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v21,  v22,  0xD000000000000017LL,  0x80000000002209C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3D0BC,  (uint64_t)&v24[-12]);
  return sub_1F6CC((uint64_t)v25, &qword_283FE8);
}

uint64_t sub_1053F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v63 = a7;
  id v60 = a5;
  uint64_t v61 = a6;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v64 = a1;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  os_log_type_t v14 = (char *)&v57 - v13;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v17 = v16(v14, v15, v8);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "UnsupportedValueStrategy#makeUnsupportedValueOutput", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v22 = v21(v14, v8);
  static SiriEnvironmentWrapper.store()(v22);
  uint64_t v23 = a2;
  if (INUpdateMediaAffinityIntent.hasNoNowPlayingAppSignal()())
  {
    uint64_t v24 = v16(v12, v15, v8);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_0, v25, v26, "UnsupportedValueStrategy#makeUnsupportedValueOutput no NowPlaying app", v27, 2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    v21(v12, v8);
    uint64_t v28 = v62;
    unint64_t v29 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v30 = (void *)swift_allocObject(&unk_26FC88, 56LL, 7LL);
    uint64_t v32 = v63;
    uint64_t v31 = v64;
    _OWORD v30[2] = v28;
    v30[3] = v31;
    uint64_t v33 = v61;
    v30[4] = v23;
    void v30[5] = v33;
    v30[6] = v32;
    swift_retain(v28);
    swift_retain(v31);
    id v34 = v23;
    swift_retain(v32);
    sub_1051BC(v29, v31, (uint64_t)sub_1059AC, (uint64_t)v30);
    swift_bridgeObjectRelease(v29);
  }

  else
  {
    uint64_t v35 = v62;
    uint64_t v36 = sub_6C5C(&qword_2844D0);
    uint64_t inited = swift_initStackObject(v36, v68);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
    strcpy((char *)(inited + 32), "MetricsError");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    unint64_t v66 = 0LL;
    unint64_t v67 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(50LL);
    *(void *)&double v38 = swift_bridgeObjectRelease(v67).n128_u64[0];
    unint64_t v66 = 0xD00000000000002DLL;
    unint64_t v67 = 0x8000000000220990LL;
    id v39 = v60;
    id v65 = objc_msgSend(v60, "resolutionResultCode", v38);
    v40._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    object = v40._object;
    String.append(_:)(v40);
    swift_bridgeObjectRelease(object);
    v42._uint64_t countAndFlagsBits = 95LL;
    v42._object = (void *)0xE100000000000000LL;
    String.append(_:)(v42);
    id v65 = [v39 unsupportedReason];
    v43._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    __n128 v44 = v43._object;
    String.append(_:)(v43);
    swift_bridgeObjectRelease(v44);
    unint64_t v45 = v66;
    unint64_t v46 = v67;
    *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
    *(void *)(inited + 4sub_6C3C(v0 + 8) = v45;
    *(void *)(inited + 56) = v46;
    unint64_t v47 = sub_74D54(inited);
    id v48 = [objc_allocWithZone(INUpdateMediaAffinityIntentResponse) initWithCode:4 userActivity:0];
    uint64_t v30 = (void *)swift_allocObject(&unk_26FC60, 80LL, 7LL);
    uint64_t v50 = v63;
    uint64_t v49 = v64;
    _OWORD v30[2] = v35;
    v30[3] = v49;
    uint64_t v51 = v61;
    v30[4] = v23;
    void v30[5] = v51;
    uint64_t v52 = v58;
    uint64_t v53 = v59;
    v30[6] = v50;
    v30[7] = v52;
    v30[8] = v53;
    v30[9] = v39;
    swift_retain(v35);
    swift_retain(v49);
    id v54 = v23;
    swift_retain(v50);
    swift_bridgeObjectRetain(v53);
    id v55 = v39;
    sub_C4E64(v47, v49, (uint64_t)sub_105940, (uint64_t)v30);
    swift_bridgeObjectRelease(v47);
  }

  return swift_release(v30);
}

unint64_t sub_10586C(uint64_t a1)
{
  unint64_t result = sub_105890();
  *(void *)(a1 + sub_6C3C(v0 + 8) = result;
  return result;
}

unint64_t sub_105890()
{
  unint64_t result = qword_284F40;
  if (!qword_284F40)
  {
    uint64_t updated = type metadata accessor for UpdateMediaAffinity.UnsupportedValueStrategy();
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for UpdateMediaAffinity.UnsupportedValueStrategy,  updated);
    atomic_store(result, (unint64_t *)&qword_284F40);
  }

  return result;
}

uint64_t type metadata accessor for UpdateMediaAffinity.UnsupportedValueStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin19UpdateMediaAffinity24UnsupportedValueStrategy);
}

uint64_t sub_1058F4()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));

  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_105940(uint64_t a1)
{
  return sub_1044B4( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void (**)(uint64_t *))(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 72));
}

uint64_t sub_105970()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

void sub_1059AC(uint64_t a1)
{
}

uint64_t sub_1059BC()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin();
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static DispatchQoS.userInteractive.getter(v6);
  static OS_dispatch_queue.Attributes.concurrent.getter(v9);
  uint64_t v10 = static DispatchQueues.queue(_:qos:attributes:)(0xD000000000000026LL, 0x8000000000220A80LL, v8, v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  qword_289610 = v10;
  return result;
}

uint64_t sub_105AC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = swift_allocObject(&unk_26FE20, 32LL, 7LL);
  *(void *)(v9 + swift_weakDestroy(v0 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = (void *)swift_allocObject(&unk_26FE48, 40LL, 7LL);
  v10[2] = sub_D477C;
  v10[3] = v9;
  v10[4] = a4;
  uint64_t v11 = *(uint64_t **)(a2 + 16);
  swift_retain(v10);
  swift_retain(v7);
  swift_retain(a4);
  sub_1F4300(a3, v11, (void (*)(uint64_t, uint64_t))sub_108A58, (uint64_t)v10);
  return swift_release_n(v10, 2LL);
}

uint64_t sub_105B78(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a5 + 24);
  *(void *)(a5 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v10 = swift_bridgeObjectRelease(v9);
  return a3(v10);
}

uint64_t sub_105BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(void))a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = a2 + 16;
  swift_retain(v3);
  id v6 = sub_108060();
  swift_beginAccess(v5, v9, 1LL, 0LL);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a2 + swift_weakDestroy(v0 + 16) = v6;

  v4();
  return swift_release(v3);
}

uint64_t sub_105C78(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, char *a4)
{
  uint64_t v79 = a4;
  uint64_t v89 = a3;
  uint64_t v91 = a2;
  uint64_t v88 = sub_6C5C(&qword_2866F8);
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SnippetModelResponse(0LL);
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v87 = v6;
  __chkstk_darwin(v6);
  uint64_t v83 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SiriAudioActionButtonSnippetStyle(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SiriAudioActionButtonSnippetRole(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SiriAudioActionButtonSnippetModel(0LL);
  uint64_t v81 = *(void *)(v16 - 8);
  uint64_t v82 = v16;
  __chkstk_darwin(v16);
  id v80 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v84 = *(void *)(v18 - 8);
  uint64_t v85 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v78 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v77 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v77 - v24;
  swift_beginAccess(a1 + 16, v95, 0LL, 0LL);
  uint64_t v26 = *(void *)(a1 + 24);
  if (!v26)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v51 = v85;
    uint64_t v52 = sub_6960(v85, (uint64_t)qword_2969C8);
    uint64_t v53 = v84;
    uint64_t v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 16))(v25, v52, v51);
    id v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v58 = swift_slowAlloc(32LL, -1LL);
      v93[0] = v58;
      *(_DWORD *)uint64_t v57 = 136446210;
      uint64_t v59 = static Insights.responseFramework.getter(v58);
      unint64_t v61 = v60;
      uint64_t v94 = sub_6978(v59, v60, v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, v95);
      swift_bridgeObjectRelease(v61);
      _os_log_impl( &dword_0,  v55,  v56,  "PlayMediaTVOSSnippetModelProvider#intentPreHandledSnippet won't retun a snippet because buttonTitle is missing. %{public}s",  v57,  0xCu);
      swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1LL, -1LL);
      swift_slowDealloc(v57, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v51);
    goto LABEL_19;
  }

  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = v79;
  swift_beginAccess(v79 + 16, v93, 0LL, 0LL);
  unint64_t v29 = (void *)*((void *)v28 + 2);
  if (!v29)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v62 = v85;
    uint64_t v63 = sub_6960(v85, (uint64_t)qword_2969C8);
    uint64_t v64 = v84;
    uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 16))(v23, v63, v62);
    unint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v67 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v83 = v23;
      uint64_t v68 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      uint64_t v94 = v69;
      *(_DWORD *)uint64_t v68 = 136446210;
      uint64_t v70 = static Insights.responseFramework.getter(v69);
      unint64_t v72 = v71;
      uint64_t v92 = sub_6978(v70, v71, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
      swift_bridgeObjectRelease(v72);
      _os_log_impl( &dword_0,  v66,  v67,  "PlayMediaTVOSSnippetModelProvider#intentPreHandledSnippet won't retun a snippet because punchOutCommand is missing. %{public}s",  v68,  0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v68, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v83, v62);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v64 + 8))(v23, v62);
    }

void sub_1064AC(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v112 = a3;
  uint64_t v113 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v114 = *(void *)(v4 - 8);
  uint64_t v115 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v99 - v8;
  uint64_t v10 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v109 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v99 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v110 = (uint64_t)&v99 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v111 = (uint64_t)&v99 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v99 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v99 - v23;
  uint64_t v25 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v27, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v27, v25) == 1)
  {
    uint64_t v28 = *v27;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v29 = v115;
    uint64_t v30 = sub_6960(v115, (uint64_t)qword_2969C8);
    uint64_t v31 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v7, v30, v29);
    swift_errorRetain(v28);
    uint64_t v32 = swift_errorRetain(v28);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc(22LL, -1LL);
      uint64_t v36 = swift_slowAlloc(64LL, -1LL);
      v119[0] = v36;
      *(_DWORD *)uint64_t v35 = 136446466;
      uint64_t v37 = v31;
      swift_getErrorValue(v28, v118, v117);
      uint64_t v38 = Error.localizedDescription.getter(v117[1], v117[2]);
      unint64_t v40 = v39;
      uint64_t v116 = sub_6978(v38, v39, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
      swift_bridgeObjectRelease(v40);
      swift_errorRelease(v28);
      uint64_t v41 = swift_errorRelease(v28);
      *(_WORD *)(v35 + sub_6C3C(v0 + 12) = 2082;
      uint64_t v42 = static Insights.responseFramework.getter(v41);
      unint64_t v44 = v43;
      uint64_t v116 = sub_6978(v42, v43, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
      swift_bridgeObjectRelease(v44);
      _os_log_impl( &dword_0,  v33,  v34,  "PlayMediaTVOSSnippetModelProvider#punchOutButtonTitle error rendering punchout button on tvOS: %{public}s. %{public}s",  (uint8_t *)v35,  0x16u);
      swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v115);
    }

    else
    {
      swift_errorRelease(v28);
      swift_errorRelease(v28);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v29);
    }

    v113(0LL, 0LL);
    swift_errorRelease(v28);
    return;
  }

  uint64_t v103 = v15;
  uint64_t v108 = v9;
  uint64_t v45 = *(int *)(v10 + 48);
  unint64_t v46 = (int *)v10;
  uint64_t v47 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v48 = *(void *)(v47 - 8);
  (*(void (**)(char *, uint64_t *, uint64_t))(v48 + 32))(v24, v27, v47);
  unint64_t v49 = *(void **)((char *)v27 + v45);
  *(void *)&v24[v45] = v49;
  uint64_t v50 = qword_283888;
  id v51 = v49;
  if (v50 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v52 = v115;
  uint64_t v53 = sub_6960(v115, (uint64_t)qword_2969C8);
  uint64_t v54 = v114;
  id v55 = v108;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v108, v53, v52);
  uint64_t v56 = v46[12];
  uint64_t v105 = v24;
  uint64_t v106 = v48;
  uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v107(v22, v24, v47);
  *(void *)&v22[v56] = v51;
  uint64_t v57 = v111;
  sub_FF10((uint64_t)v22, v111, &qword_289340);
  uint64_t v58 = (uint64_t)v22;
  uint64_t v59 = v110;
  sub_712A0(v58, v110);
  uint64_t v104 = (int *)v51;
  unint64_t v60 = v46;
  unint64_t v61 = (void *)Logger.logObject.getter(v104);
  int v62 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled((os_log_t)v61, (os_log_type_t)v62))
  {
    uint64_t v79 = v57;
    uint64_t v75 = v60;
    sub_1F6CC(v59, &qword_289340);
    sub_1F6CC(v79, &qword_289340);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v52);
    uint64_t v72 = v106;
    unint64_t v66 = v107;
    goto LABEL_24;
  }

  int v101 = v62;
  os_log_t v102 = (os_log_t)v61;
  uint64_t v63 = swift_slowAlloc(22LL, -1LL);
  uint64_t v100 = swift_slowAlloc(64LL, -1LL);
  v119[0] = v100;
  *(_DWORD *)uint64_t v63 = 136315394;
  uint64_t v64 = v60[12];
  uint64_t v65 = v103;
  unint64_t v66 = v107;
  v107(v103, (char *)v57, v47);
  os_log_type_t v67 = *(void **)(v57 + v64);
  *(void *)&v65[v64] = v67;
  id v68 = [v67 dialog];
  unint64_t v69 = sub_39E4C();
  uint64_t v70 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v68, v69);

  if ((unint64_t)v70 >> 62)
  {
    if (v70 < 0) {
      uint64_t v80 = v70;
    }
    else {
      uint64_t v80 = v70 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v70);
    uint64_t v71 = _CocoaArrayWrapper.endIndex.getter(v80);
    swift_bridgeObjectRelease(v70);
    uint64_t v72 = v106;
    if (v71) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t v75 = v60;
    swift_bridgeObjectRelease(v70);
    unint64_t v78 = 0xE000000000000000LL;
    goto LABEL_23;
  }

  uint64_t v71 = *(void *)((char *)&dword_10 + (v70 & 0xFFFFFFFFFFFFF8LL));
  uint64_t v72 = v106;
  if (!v71) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v70 & 0xC000000000000001LL) != 0) {
    goto LABEL_38;
  }
  if (!*(void *)((char *)&dword_10 + (v70 & 0xFFFFFFFFFFFFF8LL)))
  {
    __break(1u);
    return;
  }

  for (id i = *(id *)(v70 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v70))
  {
    uint64_t v74 = i;
    uint64_t v75 = v60;
    id v76 = objc_msgSend(i, "fullPrint", swift_bridgeObjectRelease(v70).n128_f64[0]);

    uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
    unint64_t v78 = v77;

LABEL_23:
    (*(void (**)(char *, uint64_t))(v72 + 8))(v103, v47);
    uint64_t v116 = sub_6978(v71, v78, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
    swift_bridgeObjectRelease(v78);
    sub_1F6CC(v110, &qword_289340);
    uint64_t v81 = sub_1F6CC(v111, &qword_289340);
    *(_WORD *)(v63 + sub_6C3C(v0 + 12) = 2082;
    uint64_t v82 = static Insights.responseFramework.getter(v81);
    unint64_t v84 = v83;
    uint64_t v116 = sub_6978(v82, v83, v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
    swift_bridgeObjectRelease(v84);
    os_log_t v85 = v102;
    _os_log_impl( &dword_0,  v102,  (os_log_type_t)v101,  "PlayMediaTVOSSnippetModelProvider#punchOutButtonTitle title: %s. %{public}s",  (uint8_t *)v63,  0x16u);
    uint64_t v86 = v100;
    swift_arrayDestroy(v100, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1LL, -1LL);
    swift_slowDealloc(v63, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v114 + 8))(v108, v115);
LABEL_24:
    unint64_t v60 = v104;
    uint64_t v70 = (uint64_t)v105;
    uint64_t v87 = v75[12];
    uint64_t v88 = v109;
    v66(v109, v105, v47);
    *(void *)&v88[v87] = v60;
    id v89 = [v60 dialog];

    unint64_t v90 = sub_39E4C();
    uint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v89, v90);

    uint64_t v91 = *(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFF8LL));
    if (!v91) {
      goto LABEL_34;
    }
LABEL_26:
    if ((v63 & 0xC000000000000001LL) != 0)
    {
      uint64_t v92 = v47;
      id v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v63);
      goto LABEL_29;
    }

    if (*(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFF8LL)))
    {
      uint64_t v92 = v47;
      id v93 = *(id *)(v63 + 32);
LABEL_29:
      uint64_t v94 = v93;
      id v95 = objc_msgSend(v93, "fullPrint", swift_bridgeObjectRelease(v63).n128_f64[0]);

      uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
      uint64_t v97 = v96;

      uint64_t v47 = v92;
      goto LABEL_35;
    }

    __break(1u);
LABEL_38:
    ;
  }

  if (v63 < 0) {
    uint64_t v98 = v63;
  }
  else {
    uint64_t v98 = v63 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v63);
  uint64_t v91 = _CocoaArrayWrapper.endIndex.getter(v98);
  swift_bridgeObjectRelease(v63);
  if (v91) {
    goto LABEL_26;
  }
LABEL_34:
  swift_bridgeObjectRelease(v63);
  uint64_t v97 = 0LL;
LABEL_35:
  (*(void (**)(char *, uint64_t))(v72 + 8))(v88, v47);
  v113(v91, v97);
  swift_bridgeObjectRelease(v97);
  sub_1F6CC(v70, &qword_289340);
}

uint64_t sub_106DE4()
{
  return swift_deallocClassInstance(v0, 160LL, 7LL);
}

uint64_t type metadata accessor for PlayMediaTVOSSnippetModelProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin33PlayMediaTVOSSnippetModelProvider);
}

uint64_t sub_106E48( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), void (*a6)(uint64_t))
{
  return sub_1075F0(a1, a2, a5, a6);
}

void *sub_106E70()
{
  uint64_t v65 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v0 = __chkstk_darwin(v65);
  unint64_t v61 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v53 - v2;
  uint64_t v4 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v53 - v12;
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v14 = CATDefaultMode;
  uint64_t v15 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v16 = static MorphunProvider.shared.getter(v15);
  uint64_t v17 = static AceService.current.getter(&v72);
  static FeatureFlagProvider.shared.getter(v17);
  uint64_t v18 = type metadata accessor for CatService();
  uint64_t v19 = swift_allocObject(v18, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v69);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v58(v11, v13, v7);
  swift_retain(v16);
  uint64_t v20 = sub_10FF64(&v69, v14, v16, &v72, (uint64_t)v11, v19);
  swift_release(v16);
  int v62 = *(void (**)(char *, uint64_t))(v8 + 8);
  v62(v13, v7);
  swift_release(v16);
  uint64_t v21 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v22 = (void *)swift_allocObject(v21, 56LL, 7LL);
  unint64_t v60 = v11;
  uint64_t v23 = (uint64_t)v22;
  v22[6] = 0xEF746E65746E4961LL;
  v22[2] = 0xD000000000000011LL;
  _OWORD v22[3] = 0x800000000021D860LL;
  v22[4] = v20;
  void v22[5] = 0x6964654D79616C50LL;
  uint64_t v24 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v6, 1LL, 1LL, v24);
  unint64_t v59 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v63 = v20;
  swift_retain_n(v20, 2LL);
  uint64_t v25 = static AceService.current.getter(&v69);
  uint64_t v26 = static FeatureFlagProvider.shared.getter(v25);
  static StringsFileResolver.shared.getter(v26);
  uint64_t v27 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v57 = static SiriKitTaskLoggingProvider.shared.getter(v27);
  uint64_t v28 = v3;
  uint64_t v56 = v6;
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v29 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(&v72);
  uint64_t v30 = type metadata accessor for DialogHistoryProvider();
  uint64_t v67 = v30;
  id v68 = &off_275B30;
  *(void *)&__int128 v66 = v29;
  uint64_t v31 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v54 = (void *)swift_allocObject(v31, 288LL, 7LL);
  uint64_t v32 = sub_1094C((uint64_t)&v66, v30);
  id v55 = &v53;
  __chkstk_darwin(v32);
  os_log_type_t v34 = (uint64_t *)((char *)&v53 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  uint64_t v36 = *v34;
  uint64_t v37 = (uint64_t)v60;
  uint64_t v38 = v13;
  uint64_t v53 = v13;
  uint64_t v39 = v7;
  v58(v60, v38, v7);
  uint64_t v40 = v64;
  uint64_t v41 = (uint64_t)v61;
  uint64_t v42 = v65;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v28, v65);
  swift_retain(v29);
  uint64_t v43 = v57;
  swift_retain(v57);
  uint64_t v52 = v36;
  uint64_t v44 = v63;
  uint64_t v45 = sub_EE5CC(v23, v63, v59, &v69, (uint64_t)v56, v37, v41, v43, v52, &v72, v54);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v42);
  v62(v53, v39);
  swift_release(v43);
  sub_6C3C(&v66);
  swift_release(v29);
  uint64_t v46 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v47 = static MediaRemoteAPIProvider.shared.getter();
  uint64_t v70 = v46;
  uint64_t v71 = &protocol witness table for MediaRemoteAPIProvider;
  *(void *)&__int128 v69 = v47;
  uint64_t v73 = type metadata accessor for EncryptionProvider(0LL);
  uint64_t v74 = &protocol witness table for EncryptionProvider;
  uint64_t v48 = sub_10974(&v72);
  EncryptionProvider.init()(v48);
  uint64_t v67 = type metadata accessor for DeviceProvider(0LL);
  id v68 = (_UNKNOWN **)&protocol witness table for DeviceProvider;
  sub_10974(&v66);
  static DeviceProvider.shared.getter();
  uint64_t v49 = type metadata accessor for PlayMediaTVOSSnippetModelProvider();
  uint64_t v50 = (void *)swift_allocObject(v49, 160LL, 7LL);
  v50[13] = 0x6F6E2E636973756DLL;
  v50[14] = 0xEF7473696C2E6574LL;
  __int128 v50[2] = v45;
  sub_FF54(&v66, (uint64_t)(v50 + 15));
  sub_FF54(&v69, (uint64_t)(v50 + 3));
  sub_FF54(&v72, (uint64_t)(v50 + 8));
  swift_release(v44);
  return v50;
}

uint64_t sub_107434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject(&unk_26FD58, 32LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(v10 + 24) = 0LL;
  uint64_t v11 = swift_allocObject(&unk_26FD80, 24LL, 7LL);
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = 0LL;
  if (qword_2838C8 != -1) {
    swift_once(&qword_2838C8, sub_1059BC);
  }
  uint64_t v12 = qword_289610;
  uint64_t v13 = sub_6C5C(&qword_286B90);
  uint64_t v14 = swift_allocObject(v13, 64LL, 7LL);
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  uint64_t v15 = (void *)swift_allocObject(&unk_26FDA8, 40LL, 7LL);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = v10;
  *(void *)(v14 + 3sub_6C3C(v0 + 2) = sub_107D54;
  *(void *)(v14 + 40) = v15;
  uint64_t v16 = (void *)swift_allocObject(&unk_26FDD0, 48LL, 7LL);
  __int128 v16[2] = v11;
  v16[3] = a3;
  v16[4] = a4;
  void v16[5] = a5;
  *(void *)(v14 + 4sub_6C3C(v0 + 8) = sub_107D9C;
  *(void *)(v14 + 56) = v16;
  uint64_t v17 = (void *)swift_allocObject(&unk_26FDF8, 48LL, 7LL);
  void v17[2] = v10;
  v17[3] = a1;
  v17[4] = a2;
  void v17[5] = v11;
  swift_retain_n(a3, 2LL);
  swift_retain_n(a4, 2LL);
  swift_retain_n(v10, 2LL);
  swift_retain_n(v11, 2LL);
  id v18 = a5;
  swift_retain(a2);
  static Tasks.parallelize(queue:tasks:completion:)(v12, v14, sub_107DDC, v17);
  swift_release(v10);
  swift_release(v11);
  swift_bridgeObjectRelease(v14);
  return swift_release(v17);
}

uint64_t sub_1075F0(uint64_t a1, void *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  unint64_t v83 = a3;
  unint64_t v84 = a4;
  uint64_t v79 = a1;
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v74 = v9;
  uint64_t v75 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  unint64_t v77 = (char *)&v69 - v10;
  uint64_t v78 = sub_6C5C(&qword_2866F8);
  __chkstk_darwin(v78);
  uint64_t v80 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  id v18 = (char *)&v69 - v17;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  id v76 = v16;
  uint64_t v19 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v20 = *(void (**)(char *))(v13 + 16);
  uint64_t v72 = v19;
  v20(v18);
  id v21 = a2;
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v82 = v5;
  uint64_t v73 = v21;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    uint64_t v70 = v20;
    uint64_t v26 = v25;
    uint64_t v27 = swift_slowAlloc(64LL, -1LL);
    uint64_t v71 = v7;
    uint64_t v69 = v27;
    uint64_t v86 = v27;
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t ObjectType = swift_getObjectType(v21);
    uint64_t v28 = sub_6C5C((uint64_t *)&unk_289330);
    uint64_t v29 = String.init<A>(describing:)(&ObjectType, v28);
    uint64_t v30 = v12;
    unint64_t v32 = v31;
    uint64_t ObjectType = sub_6978(v29, v31, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v86);

    unint64_t v33 = v32;
    uint64_t v12 = v30;
    swift_bridgeObjectRelease(v33);
    *(_WORD *)(v26 + sub_6C3C(v0 + 12) = 2082;
    uint64_t v35 = static Insights.responseFramework.getter(v34);
    unint64_t v37 = v36;
    uint64_t ObjectType = sub_6978(v35, v36, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v86);
    unint64_t v38 = v37;
    uint64_t v5 = v82;
    swift_bridgeObjectRelease(v38);
    _os_log_impl( &dword_0,  v22,  v23,  "PlayMediaTVOSSnippetModelProvider#intentPreHandledSnippet for Intent: %{public}s, %{public}s",  (uint8_t *)v26,  0x16u);
    uint64_t v39 = v69;
    swift_arrayDestroy(v69, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v7 = v71;
    swift_slowDealloc(v39, -1LL, -1LL);
    uint64_t v40 = v26;
    uint64_t v20 = v70;
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v41 = *(void (**)(char *, uint64_t))(v13 + 8);
  v41(v18, v12);
  uint64_t v42 = v5[18];
  uint64_t v43 = v5[19];
  sub_6EA8(v5 + 15, v42);
  if ((dispatch thunk of DeviceProviding.isHomePod.getter(v42, v43) & 1) != 0)
  {
    uint64_t v44 = v76;
    uint64_t v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v76, v72, v12);
    uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v49 = swift_slowAlloc(32LL, -1LL);
      uint64_t v86 = v49;
      *(_DWORD *)uint64_t v48 = 136446210;
      uint64_t v50 = static Insights.responseFramework.getter(v49);
      unint64_t v52 = v51;
      uint64_t ObjectType = sub_6978(v50, v51, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v86);
      swift_bridgeObjectRelease(v52);
      _os_log_impl( &dword_0,  v46,  v47,  "PlayMediaTVOSSnippetModelProvider#intentPreHandledSnippet skipping snippet on HomePod. %{public}s",  v48,  0xCu);
      swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    v41(v44, v12);
    uint64_t v53 = type metadata accessor for SnippetModelResponse(0LL);
    uint64_t v54 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v80, 1LL, 1LL, v53);
    swift_storeEnumTagMultiPayload(v54, v78, 0LL);
    v83(v54);
    return sub_1F6CC(v54, &qword_2866F8);
  }

  else
  {
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    id v56 = (id)qword_296AA0;
    uint64_t v57 = v77;
    OSSignpostID.init(log:)(v56);
    uint64_t v58 = v81;
    unint64_t v59 = v75;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v75, v57, v7);
    uint64_t v60 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v61 = (v60 + 33) & ~v60;
    unint64_t v62 = (v74 + v61 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v63 = swift_allocObject(&unk_26FD08, v62 + 16, v60 | 7);
    *(void *)(v63 + swift_weakDestroy(v0 + 16) = "playMediaSnippetModelProviderMakeIntentPreHandledSnippet";
    *(void *)(v63 + 24) = 56LL;
    *(_BYTE *)(v63 + 3sub_6C3C(v0 + 2) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v63 + v61, v59, v7);
    uint64_t v64 = (void (**)(uint64_t))(v63 + v62);
    uint64_t v65 = v84;
    *uint64_t v64 = v83;
    v64[1] = v65;
    uint64_t v66 = swift_retain(v65);
    uint64_t v67 = static os_signpost_type_t.begin.getter(v66);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v67,  &dword_0,  qword_296AA0,  "playMediaSnippetModelProviderMakeIntentPreHandledSnippet",  56LL,  2LL,  v57,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
    uint64_t v68 = swift_allocObject(&unk_26FD30, 32LL, 7LL);
    *(void *)(v68 + swift_weakDestroy(v0 + 16) = sub_D471C;
    *(void *)(v68 + 24) = v63;
    swift_retain(v63);
    sub_107434((uint64_t)sub_D477C, v68, (uint64_t)v82, v79, v73);
    swift_release(v63);
    swift_release(v68);
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v57, v7);
  }

uint64_t sub_107C3C()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_107CB4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_107CD8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_107CFC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_107D20()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_107D54(uint64_t *a1)
{
  return sub_105AC0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_107D60()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_107D9C(uint64_t a1)
{
  return sub_105BEC(a1, *(void *)(v1 + 16));
}

uint64_t sub_107DA8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_107DDC()
{
  return sub_105C78( *(void *)(v0 + 16),  *(void (**)(uint64_t))(v0 + 24),  *(void *)(v0 + 32),  *(char **)(v0 + 40));
}

uint64_t sub_107DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnippetModelResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_107E2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnippetModelResponse(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_107E68()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = INPlayMediaIntent.fallbackImplicitRecommendation.getter(v2);
  if ((v5 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v6 = sub_6960(v0, (uint64_t)qword_2969C8);
    uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v11 = swift_slowAlloc(32LL, -1LL);
      uint64_t v19 = v11;
      *(_DWORD *)uint64_t v10 = 136446210;
      uint64_t v12 = static Insights.responseFramework.getter(v11);
      unint64_t v14 = v13;
      uint64_t v18 = sub_6978(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      swift_bridgeObjectRelease(v14);
      _os_log_impl( &dword_0,  v8,  v9,  "PlayMediaTVOSSnippetModelProvider#bundleIdentifier fallbackImplicitRecommendation scenario, override bundleIdent ifier with fallback: BundleIdentifiers.music. %{public}s",  v10,  0xCu);
      swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1LL, -1LL);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return static BundleIdentifiers.music.getter(v15);
  }

  else
  {
    uint64_t result = App.appIdentifier.getter(v5);
    if (!v17) {
      return 0LL;
    }
  }

  return result;
}

id sub_108060()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v112 = v0;
  uint64_t v113 = v1;
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v108 - v6;
  __chkstk_darwin(v5);
  os_log_type_t v9 = (char *)&v108 - v8;
  id v111 = (id)sub_6C5C(&qword_284628);
  uint64_t v10 = __chkstk_darwin(v111);
  uint64_t v12 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v108 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v108 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v108 - v19;
  uint64_t v21 = sub_107E68();
  unint64_t v23 = v22;
  uint64_t v24 = static BundleIdentifiers.music.getter(v21);
  uint64_t v26 = v25;
  if (v24 == v21 && v25 == v23)
  {
    swift_bridgeObjectRelease(v23);
LABEL_5:
    swift_bridgeObjectRelease(v23);
    id v29 = [objc_allocWithZone(SAUIAppPunchOut) init];
    URL.init(string:)(0xD000000000000018LL);
    uint64_t v30 = type metadata accessor for URL(0LL);
    uint64_t v31 = *(void *)(v30 - 8);
    unint64_t v33 = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v20, 1LL, v30) != 1)
    {
      URL._bridgeToObjectiveC()(v32);
      unint64_t v33 = v34;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v30);
    }

    [v29 setPunchOutUri:v33];

    uint64_t v35 = qword_283888;
    id v36 = v29;
    if (v35 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v37 = v112;
    uint64_t v38 = sub_6960(v112, (uint64_t)qword_2969C8);
    uint64_t v39 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v9, v38, v37);
    id v40 = v36;
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.info.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc(22LL, -1LL);
      uint64_t v110 = swift_slowAlloc(64LL, -1LL);
      uint64_t v115 = v110;
      *(_DWORD *)uint64_t v43 = 136446466;
      id v44 = [v40 punchOutUri];
      if (v44)
      {
        uint64_t v45 = v44;
        uint64_t v46 = v40;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v44);

        uint64_t v47 = 0LL;
      }

      else
      {
        uint64_t v46 = v40;
        uint64_t v47 = 1LL;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v18, v47, 1LL, v30);
      uint64_t v51 = String.init<A>(describing:)(v18, v111);
      unint64_t v53 = v52;
      uint64_t v114 = sub_6978(v51, v52, &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);

      swift_bridgeObjectRelease(v53);
      *(_WORD *)(v43 + sub_6C3C(v0 + 12) = 2082;
      uint64_t v55 = static Insights.responseFramework.getter(v54);
      unint64_t v57 = v56;
      uint64_t v114 = sub_6978(v55, v56, &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      unint64_t v58 = v57;
      id v40 = v46;
      swift_bridgeObjectRelease(v58);
      _os_log_impl( &dword_0,  v41,  v42,  "PlayMediaTVOSSnippetModelProvider#punchOutCommand showing punchout button on tvOS with punchOutUri: %{public}s. %{public}s",  (uint8_t *)v43,  0x16u);
      uint64_t v59 = v110;
      swift_arrayDestroy(v110, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v113 + 8))(v9, v112);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v37);
    }

    return v40;
  }

  uint64_t v110 = (uint64_t)v7;
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25);
  swift_bridgeObjectRelease(v26);
  if ((v27 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v48 = static BundleIdentifiers.podcasts.getter(v28);
  uint64_t v50 = v49;
  if (v48 == v21 && v49 == v23)
  {
    swift_bridgeObjectRelease(v23);
LABEL_19:
    swift_bridgeObjectRelease(v23);
    id v61 = [objc_allocWithZone(SAUIAppPunchOut) init];
    URL.init(string:)(0xD000000000000015LL);
    uint64_t v62 = type metadata accessor for URL(0LL);
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v65 = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v15, 1LL, v62) != 1)
    {
      URL._bridgeToObjectiveC()(v64);
      uint64_t v65 = v66;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v62);
    }

    [v61 setPunchOutUri:v65];

    uint64_t v67 = qword_283888;
    id v68 = v61;
    if (v67 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v69 = v112;
    uint64_t v70 = sub_6960(v112, (uint64_t)qword_2969C8);
    uint64_t v71 = v113;
    uint64_t v72 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v110, v70, v69);
    id v40 = v68;
    uint64_t v73 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v74 = static os_log_type_t.info.getter(v73);
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = swift_slowAlloc(22LL, -1LL);
      uint64_t v109 = swift_slowAlloc(64LL, -1LL);
      uint64_t v115 = v109;
      *(_DWORD *)uint64_t v75 = 136446466;
      id v76 = [v40 punchOutUri];
      if (v76)
      {
        unint64_t v77 = v76;
        uint64_t v78 = v40;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v76);

        uint64_t v79 = 0LL;
      }

      else
      {
        uint64_t v78 = v40;
        uint64_t v79 = 1LL;
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v12, v79, 1LL, v62);
      uint64_t v97 = String.init<A>(describing:)(v12, v111);
      unint64_t v99 = v98;
      uint64_t v114 = sub_6978(v97, v98, &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);

      swift_bridgeObjectRelease(v99);
      *(_WORD *)(v75 + sub_6C3C(v0 + 12) = 2082;
      uint64_t v101 = static Insights.responseFramework.getter(v100);
      unint64_t v103 = v102;
      uint64_t v114 = sub_6978(v101, v102, &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
      unint64_t v104 = v103;
      id v40 = v78;
      swift_bridgeObjectRelease(v104);
      _os_log_impl( &dword_0,  v73,  v74,  "PlayMediaTVOSSnippetModelProvider#punchOutCommand showing punchout button on tvOS with punchOutUri: %{public}s. %{public}s",  (uint8_t *)v75,  0x16u);
      uint64_t v105 = v109;
      swift_arrayDestroy(v109, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v105, -1LL, -1LL);
      swift_slowDealloc(v75, -1LL, -1LL);

      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v110, v69);
    }

    else
    {

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v72, v69);
    }

    return v40;
  }

  char v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49);
  swift_bridgeObjectRelease(v50);
  if ((v60 & 1) != 0) {
    goto LABEL_19;
  }
  id v80 = [objc_allocWithZone(SAAppsLaunchApp) init];
  NSString v81 = String._bridgeToObjectiveC()();
  [v80 setLaunchId:v81];

  uint64_t v82 = qword_283888;
  id v111 = v80;
  if (v82 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v83 = v112;
  uint64_t v84 = sub_6960(v112, (uint64_t)qword_2969C8);
  uint64_t v85 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v4, v84, v83);
  swift_bridgeObjectRetain(v23);
  uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
  os_log_type_t v88 = static os_log_type_t.info.getter(v87);
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = swift_slowAlloc(22LL, -1LL);
    uint64_t v90 = swift_slowAlloc(64LL, -1LL);
    uint64_t v115 = v90;
    *(_DWORD *)uint64_t v89 = 136315394;
    swift_bridgeObjectRetain(v23);
    uint64_t v114 = sub_6978(v21, v23, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
    uint64_t v91 = swift_bridgeObjectRelease_n(v23, 3LL);
    *(_WORD *)(v89 + sub_6C3C(v0 + 12) = 2082;
    uint64_t v92 = static Insights.responseFramework.getter(v91);
    unint64_t v94 = v93;
    uint64_t v114 = sub_6978(v92, v93, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115);
    swift_bridgeObjectRelease(v94);
    _os_log_impl( &dword_0,  v87,  v88,  "PlayMediaTVOSSnippetModelProvider#punchOutCommand showing launch app button on tvOS for %s. %{public}s",  (uint8_t *)v89,  0x16u);
    swift_arrayDestroy(v90, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1LL, -1LL);
    swift_slowDealloc(v89, -1LL, -1LL);
    id v95 = v111;

    uint64_t v96 = *(void (**)(char *, uint64_t))(v113 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(v23, 2LL);
    id v95 = v111;

    uint64_t v96 = *(void (**)(char *, uint64_t))(v85 + 8);
  }

  uint64_t v106 = v4;
  id v40 = v95;
  v96(v106, v83);
  return v40;
}

uint64_t sub_108A2C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_108A58(uint64_t a1, uint64_t a2)
{
  return sub_105B78(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void *sub_108A68(uint64_t a1, void *a2)
{
  uint64_t v71 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v4 = __chkstk_darwin(v71);
  uint64_t v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v64 - v7;
  uint64_t v77 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v9 = *(void *)(v77 - 8);
  uint64_t v10 = __chkstk_darwin(v77);
  id v76 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v64 - v12;
  uint64_t v14 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v18 = (void *)swift_allocObject(v17, 56LL, 7LL);
  v18[6] = 0xEF746E65746E4961LL;
  v18[2] = 0xD000000000000011LL;
  v18[3] = 0x800000000021D860LL;
  void v18[4] = a1;
  v18[5] = 0x6964654D79616C50LL;
  uint64_t v73 = a2;
  sub_157C4((uint64_t)a2, (uint64_t)&v81);
  uint64_t v19 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL);
  uint64_t v67 = v16;
  v20(v16, 1LL, 1LL, v19);
  unint64_t v66 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v78 = a1;
  swift_retain_n(a1, 2LL);
  os_log_type_t v74 = v18;
  uint64_t v21 = swift_retain(v18);
  uint64_t v75 = v13;
  unint64_t v22 = v8;
  uint64_t v23 = static FeatureFlagProvider.shared.getter(v21);
  static StringsFileResolver.shared.getter(v23);
  uint64_t v70 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v65 = static SiriKitTaskLoggingProvider.shared.getter(v70);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v24 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(v80);
  uint64_t v25 = type metadata accessor for DialogHistoryProvider();
  v79[3] = v25;
  v79[4] = &off_275B30;
  v79[0] = v24;
  uint64_t v26 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v27 = swift_allocObject(v26, 288LL, 7LL);
  uint64_t v28 = sub_1094C((uint64_t)v79, v25);
  v64[1] = v64;
  __chkstk_darwin(v28);
  uint64_t v30 = (void *)((char *)v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  uint64_t v32 = *v30;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v64[0] = v9;
  uint64_t v34 = (uint64_t)v76;
  uint64_t v35 = v77;
  id v68 = v33;
  v33(v76, v75, v77);
  uint64_t v36 = v69;
  uint64_t v37 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v6, v22, v71);
  swift_retain(v24);
  uint64_t v38 = v65;
  swift_retain(v65);
  uint64_t v63 = (void *)v27;
  uint64_t v39 = (uint64_t)v74;
  id v40 = sub_EE5CC((uint64_t)v74, v78, v66, &v81, (uint64_t)v67, v34, (uint64_t)v6, v38, v32, v80, v63);
  swift_release(v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v37);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v64[0] + 8LL);
  os_log_type_t v42 = v75;
  v41(v75, v35);
  swift_release(v38);
  sub_6C3C(v79);
  swift_release(v24);
  uint64_t v82 = v37;
  uint64_t v83 = &protocol witness table for StringsFileResolver;
  sub_10974(&v81);
  uint64_t v43 = swift_retain(v40);
  static StringsFileResolver.shared.getter(v43);
  uint64_t v44 = sub_6C5C(&qword_289840);
  uint64_t v45 = swift_allocObject(v44, 64LL, 7LL);
  sub_FF54(&v81, v45 + 16);
  *(void *)(v45 + 56) = v40;
  uint64_t v82 = v35;
  uint64_t v83 = &protocol witness table for FeatureFlagProvider;
  sub_10974(&v81);
  uint64_t v46 = swift_retain(v40);
  static FeatureFlagProvider.shared.getter(v46);
  uint64_t v47 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v48 = swift_allocObject(v47, 56LL, 7LL);
  sub_FF54(&v81, v48 + 16);
  uint64_t v82 = v35;
  uint64_t v83 = &protocol witness table for FeatureFlagProvider;
  uint64_t v49 = sub_10974(&v81);
  uint64_t v50 = static FeatureFlagProvider.shared.getter(v49);
  uint64_t v51 = v70;
  uint64_t v52 = static SiriKitTaskLoggingProvider.shared.getter(v50);
  v80[3] = v51;
  v80[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v80[0] = v52;
  uint64_t v53 = type metadata accessor for AppleMediaServicesProvider(0LL);
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  uint64_t v54 = AppleMediaServicesProvider.init(featureFlagProvider:siriKitTaskLoggingProvider:)(&v81, v80);
  uint64_t v55 = static FeatureFlagProvider.shared.getter(v54);
  uint64_t v56 = static SiriKitTaskLoggingProvider.shared.getter(v55);
  unint64_t v57 = v42;
  if (qword_2838C0 != -1) {
    swift_once(&qword_2838C0, sub_F5CB0);
  }
  uint64_t v58 = qword_296A80;
  swift_retain(qword_296A80);
  static AceService.current.getter(&v81);
  uint64_t v60 = (uint64_t)v76;
  uint64_t v59 = v77;
  v68(v76, v57, v77);
  swift_retain(v54);
  id v61 = sub_C06D8((uint64_t)v40, v54, v60, v56, v58, &v81, v48, v45, v72);
  v41(v57, v59);
  swift_release(v74);
  swift_release(v40);
  swift_release(v78);
  swift_release(v54);
  sub_6C3C(v73);
  return v61;
}

uint64_t _s25NeedsConfirmationStrategyCMa_0(uint64_t a1)
{
  uint64_t result = qword_289718;
  if (!qword_289718) {
    return swift_getSingletonMetadata(a1, &_s25NeedsConfirmationStrategyCMn_0);
  }
  return result;
}

uint64_t sub_1090A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v76 = a7;
  uint64_t v75 = a6;
  uint64_t v74 = a5;
  uint64_t v77 = a1;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "CommonDialogProvider#makePromptForConfirmationDialog", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v21 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v21, v83);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 7368801LL;
  *(void *)(inited + 40) = 0xE300000000000000LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = type metadata accessor for App(0LL);
  uint64_t v23 = v77;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v77;
  swift_retain(v23);
  unint64_t v24 = sub_74D54(inited);
  unint64_t v84 = v24;
  if ((a2 != 0x657449616964656DLL || a3 != 0xEA0000000000736DLL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) == 0)
  {
    uint64_t v33 = v8[2];
    uint64_t v34 = v8[13];
    uint64_t v35 = v8[14];
    __int128 v81 = (void *)sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    uint64_t v82 = (char *)&_s11descr2734E9VMn.NumFields + 3;
    *(void *)&__int128 v80 = v74;
    __chkstk_darwin(v81);
    *(&v72 - 10) = v34;
    *(&v72 - 9) = v35;
    *(&v72 - sub_6C3C(v0 + 8) = 0xD000000000000020LL;
    *(&v72 - sub_6C3C(v0 + 7) = 0x8000000000220B70LL;
    uint64_t v67 = v33;
    unint64_t v68 = v24;
    uint64_t v69 = v77;
    uint64_t v70 = &v80;
    uint64_t v71 = 0LL;
    id v37 = v36;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v75,  v76,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v34,  v35,  0xD000000000000020LL,  0x8000000000220B70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v72 - 12));
    swift_bridgeObjectRelease(v24);
    return sub_1F6CC((uint64_t)&v80, &qword_283FE8);
  }

  id v25 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)(&v80, v25);
  swift_unknownObjectRelease(v25);
  uint64_t v26 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  if (!swift_dynamicCast(v79, &v80, (char *)&type metadata for Any + 8, v26, 6LL))
  {
    uint64_t v30 = 0LL;
    uint64_t v32 = 0LL;
    uint64_t v27 = 0LL;
LABEL_32:
    sub_1CBFB0(0x436F54656C746974LL, 0xEE006D7269666E6FLL, v79);
    sub_1F6CC((uint64_t)v79, &qword_284028);
    goto LABEL_33;
  }

  uint64_t v27 = *(void **)&v79[0];
  id v28 = [*(id *)&v79[0] artist];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    uint64_t v32 = v31;
  }

  else
  {
    uint64_t v30 = 0LL;
    uint64_t v32 = 0LL;
  }

  id v39 = [v27 title];
  if (!v39)
  {
    if (!v32) {
      goto LABEL_32;
    }
    object = String.lowercased()()._object;
LABEL_23:
    uint64_t v44 = object;
    if (!object) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }

  id v40 = v39;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  uint64_t v42 = v41;

  Swift::String v43 = String.lowercased()();
  uint64_t v44 = v43._object;
  swift_bridgeObjectRelease(v42);
  if (!v32)
  {
    if (!v43._object)
    {
      uint64_t v32 = 0LL;
      goto LABEL_32;
    }

    goto LABEL_26;
  }

  Swift::String v45 = String.lowercased()();
  object = v45._object;
  if (!v43._object) {
    goto LABEL_23;
  }
  if (!v45._object)
  {
LABEL_26:
    swift_bridgeObjectRelease(v44);
    goto LABEL_27;
  }

  if (v43._countAndFlagsBits == v45._countAndFlagsBits && v43._object == v45._object)
  {
    swift_bridgeObjectRelease_n(v43._object, 2LL);
    goto LABEL_32;
  }

  char v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v43._countAndFlagsBits, v43._object);
  swift_bridgeObjectRelease(v43._object);
  swift_bridgeObjectRelease(v45._object);
  if ((v54 & 1) != 0) {
    goto LABEL_32;
  }
LABEL_27:
  id v47 = [v27 title];
  if (!v47) {
    goto LABEL_32;
  }
  uint64_t v48 = v47;
  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  uint64_t v51 = v50;

  if (!v51) {
    goto LABEL_32;
  }
  __int128 v81 = &type metadata for String;
  *(void *)&__int128 v80 = v49;
  *((void *)&v80 + 1) = v51;
  sub_21964(&v80, v79);
  unint64_t v52 = v84;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v84);
  unint64_t v78 = v52;
  sub_33808(v79, 0x436F54656C746974LL, 0xEE006D7269666E6FLL, isUniquelyReferenced_nonNull_native);
  unint64_t v84 = v78;
  swift_bridgeObjectRelease(0x8000000000000000LL);
LABEL_33:
  id v73 = v27;
  if (v32)
  {
    __int128 v81 = &type metadata for String;
    *(void *)&__int128 v80 = v30;
    *((void *)&v80 + 1) = v32;
    sub_21964(&v80, v79);
    swift_bridgeObjectRetain(v32);
    unint64_t v55 = v84;
    char v56 = swift_isUniquelyReferenced_nonNull_native(v84);
    unint64_t v78 = v55;
    sub_33808(v79, 0x6F54747369747261LL, 0xEF6D7269666E6F43LL, v56);
    unint64_t v57 = v78;
    swift_bridgeObjectRelease(0x8000000000000000LL);
  }

  else
  {
    sub_1CBFB0(0x6F54747369747261LL, 0xEF6D7269666E6F43LL, &v80);
    sub_1F6CC((uint64_t)&v80, &qword_284028);
    unint64_t v57 = v84;
  }

  __int128 v81 = &type metadata for Bool;
  LOBYTE(v80) = 0;
  sub_21964(&v80, v79);
  char v58 = swift_isUniquelyReferenced_nonNull_native(v57);
  unint64_t v78 = v57;
  sub_33808(v79, 0x5265726E65477369LL, 0xEC0000006F696461LL, v58);
  unint64_t v59 = v78;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  __int128 v81 = &type metadata for String;
  *(void *)&__int128 v80 = 4473921LL;
  *((void *)&v80 + 1) = 0xE300000000000000LL;
  sub_21964(&v80, v79);
  char v60 = swift_isUniquelyReferenced_nonNull_native(v59);
  unint64_t v78 = v59;
  sub_33808(v79, 0x7954746E65746E69LL, 0xEA00000000006570LL, v60);
  unint64_t v61 = v78;
  unint64_t v84 = v78;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v62 = v8[2];
  uint64_t v63 = v8[13];
  uint64_t v64 = v8[14];
  __int128 v81 = (void *)sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  uint64_t v82 = (char *)&_s11descr2734E9VMn.NumFields + 3;
  *(void *)&__int128 v80 = v74;
  __chkstk_darwin(v81);
  *(&v72 - 10) = v63;
  *(&v72 - 9) = v64;
  *(&v72 - sub_6C3C(v0 + 8) = 0xD000000000000011LL;
  *(&v72 - sub_6C3C(v0 + 7) = 0x8000000000220BA0LL;
  uint64_t v67 = v62;
  unint64_t v68 = v61;
  uint64_t v69 = v77;
  uint64_t v70 = &v80;
  uint64_t v71 = 0LL;
  id v66 = v65;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v75,  v76,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v63,  v64,  0xD000000000000011LL,  0x8000000000220BA0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v72 - 12));
  swift_bridgeObjectRelease(v61);

  sub_1F6CC((uint64_t)&v80, &qword_283FE8);
  return swift_bridgeObjectRelease(v32);
}

double sub_1098E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v78 = a7;
  uint64_t v77 = a6;
  id v79 = a5;
  uint64_t v80 = a1;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "CommonDialogProvider#makePromptForConfirmationDialog", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v21 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v21, v86);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 7368801LL;
  *(void *)(inited + 40) = 0xE300000000000000LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = type metadata accessor for App(0LL);
  uint64_t v23 = v80;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v80;
  swift_retain(v23);
  unint64_t v24 = sub_74D54(inited);
  unint64_t v87 = v24;
  if ((a2 != 0x657449616964656DLL || a3 != 0xEA0000000000736DLL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) == 0)
  {
    uint64_t v35 = v8[2];
    uint64_t v36 = v8[13];
    uint64_t v37 = v8[14];
    unint64_t v84 = (void *)sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
    uint64_t v85 = &off_275D10;
    *(void *)&__int128 v83 = v79;
    __chkstk_darwin(v84);
    *(&v75 - 10) = v36;
    *(&v75 - 9) = v37;
    *(&v75 - sub_6C3C(v0 + 8) = 0xD000000000000020LL;
    *(&v75 - sub_6C3C(v0 + 7) = 0x8000000000220B70LL;
    uint64_t v70 = v35;
    unint64_t v71 = v24;
    uint64_t v72 = v80;
    id v73 = &v83;
    uint64_t v74 = 0LL;
    id v39 = v38;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v77,  v78,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v36,  v37,  0xD000000000000020LL,  0x8000000000220B70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v75 - 12));
    swift_bridgeObjectRelease(v24);
    sub_1F6CC((uint64_t)&v83, &qword_283FE8);
    return result;
  }

  id v25 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)(&v83, v25);
  swift_unknownObjectRelease(v25);
  uint64_t v26 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  if (!swift_dynamicCast(v82, &v83, (char *)&type metadata for Any + 8, v26, 6LL))
  {
    uint64_t v33 = 0LL;
    uint64_t v34 = 0LL;
    uint64_t v30 = 0LL;
    uint64_t v32 = 0LL;
    uint64_t v27 = 0LL;
    goto LABEL_33;
  }

  uint64_t v27 = *(void **)&v82[0];
  id v28 = [*(id *)&v82[0] artist];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    uint64_t v32 = v31;
  }

  else
  {
    uint64_t v30 = 0LL;
    uint64_t v32 = 0LL;
  }

  id v41 = [v27 title];
  if (!v41)
  {
    if (!v32) {
      goto LABEL_31;
    }
    object = String.lowercased()()._object;
LABEL_23:
    uint64_t v33 = object;
    if (!object) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }

  uint64_t v42 = v41;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  uint64_t v44 = v43;

  Swift::String v45 = String.lowercased()();
  uint64_t v33 = v45._object;
  swift_bridgeObjectRelease(v44);
  if (!v32)
  {
    if (!v45._object)
    {
      uint64_t v34 = 0LL;
      uint64_t v32 = 0LL;
      goto LABEL_33;
    }

    goto LABEL_26;
  }

  Swift::String v46 = String.lowercased()();
  object = v46._object;
  if (!v45._object) {
    goto LABEL_23;
  }
  if (v46._object)
  {
    if (v45._countAndFlagsBits == v46._countAndFlagsBits && v45._object == v46._object)
    {
      swift_bridgeObjectRelease_n(v45._object, 2LL);
LABEL_31:
      uint64_t v33 = 0LL;
LABEL_32:
      uint64_t v34 = 0LL;
      goto LABEL_33;
    }

    char v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v45._countAndFlagsBits, v45._object);
    swift_bridgeObjectRelease(v45._object);
    unint64_t v48 = swift_bridgeObjectRelease(v46._object).n128_u64[0];
    if ((v52 & 1) != 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }

double sub_10A18C( uint64_t a1, uint64_t a2, uint64_t a3, id a4, void *a5, int a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v122 = a1;
  id v14 = [a4 unsupportedReason];
  uint64_t v15 = (char *)[a5 affinityType];
  uint64_t v117 = (char *)[a5 affinityType];
  id v16 = [a5 mediaItems];
  id v118 = v15;
  id v119 = a5;
  if (!v16)
  {
    uint64_t v20 = v9;
LABEL_14:
    id v23 = 0LL;
    goto LABEL_15;
  }

  uint64_t v17 = v16;
  uint64_t v18 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v24 = v19;
    }
    else {
      uint64_t v24 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v19);
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v19);
    if (v25) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }

  if (!*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_13:
    uint64_t v20 = v9;
    swift_bridgeObjectRelease(v19);
    goto LABEL_14;
  }

uint64_t sub_10B0D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = *(void **)(v5 + 120);
  v27[3] = sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  void v27[4] = &off_275D10;
  v27[0] = a2;
  uint64_t v12 = v11[4];
  uint64_t v13 = v11[5];
  uint64_t v14 = v11[6];
  uint64_t v18 = v13;
  uint64_t v19 = v14;
  unint64_t v20 = 0xD000000000000018LL;
  unint64_t v21 = 0x800000000021D800LL;
  uint64_t v22 = v12;
  unint64_t v23 = v10;
  uint64_t v24 = a1;
  uint64_t v25 = v27;
  uint64_t v26 = 0LL;
  id v15 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v13,  v14,  0xD000000000000018LL,  0x800000000021D800LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v17);
  swift_bridgeObjectRelease(v10);
  return sub_1F6CC((uint64_t)v27, &qword_283FE8);
}

uint64_t sub_10B1F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a6;
  uint64_t v22 = a5;
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, v27);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  strcpy((char *)(inited + 32), "isLikeAffinity");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = [a4 affinityType] == (char *)&dword_0 + 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000011LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000220BC0LL;
  *(_BYTE *)(inited + 96) = [a4 affinityType] == (char *)&dword_0 + 2;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000015LL;
  *(void *)(inited + 136) = 0x8000000000220BE0LL;
  if (a2 == 0x657449616964656DLL && a3 == 0xEA0000000000736DLL) {
    char v13 = 1;
  }
  else {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3);
  }
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = v13 & 1;
  unint64_t v14 = sub_74D54(inited);
  uint64_t v15 = *(void *)(v6 + 120);
  uint64_t v26 = &off_275D10;
  uint64_t v25 = sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  v24[0] = a4;
  uint64_t v16 = *(void *)(v15 + 40);
  uint64_t v17 = *(void *)(v15 + 48);
  __chkstk_darwin(v25);
  v21[2] = v16;
  _OWORD v21[3] = v17;
  v21[4] = 0xD00000000000001ALL;
  v21[5] = 0x800000000021D7C0LL;
  v21[6] = v18;
  v21[7] = v14;
  v21[8] = a1;
  v21[9] = v24;
  v21[10] = 0LL;
  id v19 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v22,  v23,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v16,  v17,  0xD00000000000001ALL,  0x800000000021D7C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v21);
  swift_bridgeObjectRelease(v14);
  return sub_1F6CC((uint64_t)v24, &qword_283FE8);
}

uint64_t sub_10B484(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v12, v33);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  strcpy((char *)(inited + 32), "isLikeAffinity");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = [a4 affinityType] == (char *)&dword_0 + 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000011LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000220BC0LL;
  *(_BYTE *)(inited + 96) = [a4 affinityType] == (char *)&dword_0 + 2;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x6574656D61726170LL;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(inited + 136) = 0xE900000000000072LL;
  *(void *)(inited + 144) = a2;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v14 = sub_74D54(inited);
  uint64_t v15 = *(void **)(v6 + 120);
  v32[3] = sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  v32[4] = &off_275D10;
  v32[0] = a4;
  uint64_t v16 = v15[4];
  uint64_t v17 = v15[5];
  uint64_t v18 = v15[6];
  uint64_t v23 = v17;
  uint64_t v24 = v18;
  unint64_t v25 = 0xD000000000000012LL;
  unint64_t v26 = 0x800000000021D7E0LL;
  uint64_t v27 = v16;
  unint64_t v28 = v14;
  uint64_t v29 = a1;
  unint64_t v30 = v32;
  uint64_t v31 = 0LL;
  id v19 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a5,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v17,  v18,  0xD000000000000012LL,  0x800000000021D7E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v14);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

void sub_10B684(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v14, v63);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 7368801LL;
  *(void *)(inited + 40) = 0xE300000000000000LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = type metadata accessor for App(0LL);
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a1;
  swift_retain(a1);
  unint64_t v16 = sub_74D54(inited);
  unint64_t v64 = v16;
  if ((a2 != 0x7974696E69666661LL || a3 != 0xEC00000065707954LL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7974696E69666661LL, 0xEC00000065707954LL) & 1) == 0)
  {
    swift_bridgeObjectRelease(v16);
    sub_1098E8(a1, a2, a3, a4, a5, a6, a7);
    return;
  }

  id v17 = [a4 itemToConfirm];
  _bridgeAnyObjectToAny(_:)(&v58, v17);
  swift_unknownObjectRelease(v17);
  type metadata accessor for INMediaAffinityType(0LL);
  int v19 = swift_dynamicCast(v62, &v58, (char *)&type metadata for Any + 8, v18, 6LL);
  uint64_t v20 = *(void *)&v62[0];
  sub_1F031C();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_1F0328();
  uint64_t v27 = v26;
  uint64_t v56 = a7;
  uint64_t v55 = a6;
  if (v24)
  {
    if (v26)
    {
      if (v22 == v25 && v24 == v26)
      {
        swift_bridgeObjectRelease(v26);
        goto LABEL_13;
      }

      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24);
      swift_bridgeObjectRelease(v27);
      if ((v28 & 1) != 0)
      {
LABEL_13:
        uint64_t v29 = 0LL;
        uint64_t v30 = 0LL;
        if (!v19) {
          goto LABEL_19;
        }
        goto LABEL_16;
      }
    }
  }

  else
  {
    if (!v26) {
      goto LABEL_13;
    }
    swift_bridgeObjectRelease(v26);
  }

  sub_1F0328();
  uint64_t v29 = v31;
  uint64_t v30 = v32;
  if (!v19)
  {
LABEL_19:
    unint64_t v54 = 0xE700000000000000LL;
    uint64_t v33 = 0x4E574F4E4B4E55LL;
    goto LABEL_20;
  }

uint64_t type metadata accessor for UpdateMediaAffinityDialogProvider(uint64_t a1)
{
  uint64_t result = qword_289870;
  if (!qword_289870) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UpdateMediaAffinityDialogProvider);
  }
  return result;
}

uint64_t sub_10BCE8(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 256LL, 2LL, v2, a1 + 520);
}

uint64_t sub_10BD34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v37 = a1;
  uint64_t v6 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v6, &v43);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2144D0;
  strcpy((char *)(inited + 32), "isLikeAffinity");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = [a2 affinityType] == (char *)&dword_0 + 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000011LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000220BC0LL;
  *(_BYTE *)(inited + 96) = [a2 affinityType] == (char *)&dword_0 + 2;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000012LL;
  *(void *)(inited + 136) = 0x8000000000220C20LL;
  id v8 = [a2 mediaSearch];
  if (v8)
  {
    uint64_t v9 = v8;
    unint64_t v10 = (char *)[v8 reference];

    BOOL v11 = v10 == (_BYTE *)&dword_0 + 1;
  }

  else
  {
    BOOL v11 = 0;
  }

  *(_BYTE *)(inited + 144) = v11;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0x657449616964656DLL;
  *(void *)(inited + 184) = 0xEF746E756F43736DLL;
  id v12 = [a2 mediaItems];
  if (v12)
  {
    uint64_t v14 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v14);

    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0) {
        uint64_t v35 = v15;
      }
      else {
        uint64_t v35 = v15 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v15);
      id v12 = (id)_CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v15);
    }

    else
    {
      id v12 = *(id *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8LL));
    }

    *(void *)&double v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }

  *(void *)(inited + 19sub_6C3C(v0 + 2) = v12;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for Int;
  *(void *)(inited + 224) = 0x7473697472417369LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE800000000000000LL;
  id v16 = objc_msgSend(a2, "mediaSearch", v13);
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = (char *)[v16 mediaType];

    BOOL v19 = v18 == (_BYTE *)&dword_0 + 3;
  }

  else
  {
    BOOL v19 = 0;
  }

  *(_BYTE *)(inited + 240) = v19;
  *(void *)(inited + 264) = &type metadata for Bool;
  *(void *)(inited + 27sub_6C3C(v0 + 2) = 0x6D75626C417369LL;
  *(void *)(inited + 280) = 0xE700000000000000LL;
  id v20 = [a2 mediaSearch];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = (char *)[v20 mediaType];

    BOOL v23 = v22 == (_BYTE *)&dword_0 + 2;
  }

  else
  {
    BOOL v23 = 0;
  }

  *(_BYTE *)(inited + 28sub_6C3C(v0 + 8) = v23;
  *(void *)(inited + 3sub_6C3C(v0 + 12) = &type metadata for Bool;
  *(void *)(inited + 320) = 0x676E6F537369LL;
  *(void *)(inited + 32sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  id v24 = [a2 mediaSearch];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = (char *)[v24 mediaType];

    BOOL v27 = v26 == (_BYTE *)&dword_0 + 1;
  }

  else
  {
    BOOL v27 = 0;
  }

  *(void *)(inited + 360) = &type metadata for Bool;
  *(_BYTE *)(inited + 336) = v27;
  unint64_t v28 = sub_74D54(inited);
  uint64_t v29 = *(void *)(v4 + 120);
  uint64_t v41 = sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  unint64_t v42 = &off_275D10;
  v40[0] = a2;
  uint64_t v30 = *(void *)(v29 + 40);
  uint64_t v31 = *(void *)(v29 + 48);
  __chkstk_darwin(v41);
  v36[2] = v30;
  v36[3] = v31;
  v36[4] = 0xD000000000000015LL;
  v36[5] = 0x800000000021D820LL;
  v36[6] = v32;
  v36[7] = v28;
  v36[8] = v37;
  v36[9] = v40;
  v36[10] = 0LL;
  id v33 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v38,  v39,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v30,  v31,  0xD000000000000015LL,  0x800000000021D820LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v36);
  swift_bridgeObjectRelease(v28);
  return sub_1F6CC((uint64_t)v40, &qword_283FE8);
}