uint64_t sub_6924(uint64_t a1, unint64_t a2)
{
  static SiriAudioState.warmupWithRequestId(requestID:)();
  return sub_14F704(a1, a2);
}

uint64_t sub_6960(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(void *)(a1 - 8) + 82LL) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_6978(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_6A48(v12, 0LL, 0LL, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_6C00((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }

  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_6C00((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }

    swift_bridgeObjectRetain(a2);
  }

  sub_6C3C(v12);
  return v7;
}

uint64_t sub_6A48(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
            uint64_t result = 0LL;
            *a1 = (uint64_t)__dst;
            return result;
          }

          goto LABEL_17;
        }
      }
    }

LABEL_13:
    uint64_t result = sub_16130(a5, a6);
    *a1 = v13;
    return result;
  }

  if ((a6 & 0x1000000000000000LL) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }

  uint64_t v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL,  2,  151LL,  0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory overlapping range",  58LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  v14,  1173LL,  0);
    __break(1u);
    return result;
  }

  v23 = v13;

  if (v23)
  {
    [v23 setAudioSearchResults:0];
    v24 = v23;
LABEL_26:
  }

    sub_1A92F8(0LL, 0LL, (uint64_t)v5, a1, a3, a4);
    swift_release(v5);
    v35 = v14;
    goto LABEL_14;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v20 = sub_6960(v10, (uint64_t)qword_2969C8);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
  v22 = (os_log_s *)Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v24 = 0;
    _os_log_impl( &dword_0,  v22,  v23,  "SiriAudioUIAssertionProvider#suppressSnippetIfneeded no intent passed in",  v24,  2u);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1A9E88(a1, 0LL, 0LL, a3, a4);
  return result;
}

    (*((void (**)(char *, id))v44 + 1))(v43, v45);
    v67 = v128;
    v68 = v130(v128, v129, v12);
    v69 = (os_log_s *)Logger.logObject.getter(v68);
    v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = v12;
      v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_0, v69, v70, "AmbiguousPlayFlow#on received unsupported parse", v72, 2u);
      v73 = v72;
      uint64_t v12 = v71;
      swift_slowDealloc(v73, -1LL, -1LL);
    }

    v41(v67, v12);
    return 0LL;
  }

  (*((void (**)(char *, id))v44 + 12))(v43, v45);
  v47 = v127;
  (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v8, v43, v6);
  sub_1CF340((uint64_t)v8, (uint64_t)v135);
  sub_45F6C((uint64_t)v135, (uint64_t)v142, &qword_2845F0);
  v48 = v126;
  if (v142[56] != 255)
  {
    sub_45D94((uint64_t)v142, (uint64_t)v143);
    sub_45D94((uint64_t)v143, (uint64_t)v144);
    if (v145 == 4)
    {
      v49 = (void *)v144[0];
      v50 = v144[2];
      v133 = (char *)v144[5];
      v51 = (char *)v144[6];
      swift_bridgeObjectRelease(v144[4]);
      v52 = swift_bridgeObjectRelease(v50);
      if (v51)
      {
        v131 = v49;
        v132 = v8;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v130)(v22, v129, v12, v52);
        swift_bridgeObjectRetain(v51);
        v54 = (os_log_s *)Logger.logObject.getter(v53);
        v55 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v54, v55))
        {
          v56 = swift_slowAlloc(12LL, -1LL);
          v120 = v22;
          v57 = (uint8_t *)v56;
          v58 = swift_slowAlloc(8LL, -1LL);
          v129 = v6;
          v59 = (void *)v58;
          v130 = (uint64_t (*)(char *, uint64_t, uint64_t))v12;
          *(_DWORD *)v57 = 138412290;
          v60 = sub_6C9C();
          v61 = swift_allocError(&type metadata for String, v60, 0LL, 0LL);
          *v62 = v133;
          v62[1] = v51;
          swift_bridgeObjectRetain(v51);
          v63 = _swift_stdlib_bridgeErrorToNSError(v61);
          v139 = v63;
          uint64_t v12 = (uint64_t)v130;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, v140);
          *v59 = v63;
          v47 = v127;
          swift_bridgeObjectRelease_n(v51, 2LL);
          _os_log_impl(&dword_0, v54, v55, "PlayMediaShim DirectInvocation reports an error: %@", v57, 0xCu);
          v64 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v59, 1LL, v64);
          v65 = v59;
          uint64_t v6 = v129;
          swift_slowDealloc(v65, -1LL, -1LL);
          v66 = v57;
          v22 = v120;
          swift_slowDealloc(v66, -1LL, -1LL);
        }

        else
        {
          swift_bridgeObjectRelease_n(v51, 2LL);
        }

        v41(v22, v12);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v132, v6);
        return 0LL;
      }

      if (v49)
      {
        v113 = *(void (**)(char *, uint64_t))(v47 + 8);
        v114 = v49;
        v113(v8, v6);
        v115 = *(void **)(v125 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_shimAudioExperience);
        *(void *)(v125 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_shimAudioExperience) = v49;

        return 1LL;
      }

      v48 = v119;
      v117 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v130)(v119, v129, v12, v52);
      v92 = (os_log_s *)Logger.logObject.getter(v117);
      v93 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v92, (os_log_type_t)v93))
      {
        v94 = v12;
        v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)v95 = 0;
        v96 = "PlayMediaShim DirectInvocation doesn't include audioExperience";
        goto LABEL_25;
      }

      goto LABEL_26;
    }

    sub_45DD0((uint64_t)v135);
  }

  sub_1CF340((uint64_t)v8, (uint64_t)v136);
  sub_45F6C((uint64_t)v136, (uint64_t)v137, &qword_2845F0);
  if (v137[56] == 255)
  {
LABEL_23:
    v91 = v130(v48, v129, v12);
    v92 = (os_log_s *)Logger.logObject.getter(v91);
    LOBYTE(v93) = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v92, (os_log_type_t)v93))
    {
      v94 = v12;
      v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v95 = 0;
      v96 = "Only DirectInvocation from PlayMediaShim is supported";
LABEL_25:
      _os_log_impl(&dword_0, v92, (os_log_type_t)v93, v96, v95, 2u);
      v97 = v95;
      uint64_t v12 = v94;
      swift_slowDealloc(v97, -1LL, -1LL);
    }

  v30 = 0LL;
  v31 = a11;
  if (a8)
  {
LABEL_5:
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a8);
    v33 = a15;
    if (v31) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }

    v24 = String.lowercased()();
    v25 = String.lowercased()();
    v23 = v25._object;
    if (v24._object)
    {
      if (v24._countAndFlagsBits == v25._countAndFlagsBits && v24._object == v25._object)
      {
        swift_bridgeObjectRelease_n(v24._object, 2LL);
        v26 = 1;
      }

      else
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v24._countAndFlagsBits, v24._object);
        swift_bridgeObjectRelease(v24._object);
        swift_bridgeObjectRelease(v25._object);
      }

      *(_BYTE *)(inited + 72) = v26 & 1;
      strcpy((char *)(inited + 80), "isStorySleep");
      *(_BYTE *)(inited + 93) = 0;
      *(_WORD *)(inited + 94) = -5120;
      goto LABEL_21;
    }

LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL, __dst);
  }
}

  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  uint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }

  v11 = v3[2];
  uint64_t v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }

    uint64_t v8 = *a5;
    uint64_t v7 = a5[1];
    uint64_t v9 = *(void *)(*a5 + 16LL);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }

  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

        uint64_t v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1LL << v3) - 1;
  }

  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1LL << result) - 1;
  }

  *v21 = v23 & v22;
  v24 = *(void *)(a2 + 16);
  v25 = __OFSUB__(v24, 1LL);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

uint64_t sub_6C00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_6C3C(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_6C5C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

unint64_t sub_6C9C()
{
  unint64_t result = qword_283FF0;
  if (!qword_283FF0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_283FF0);
  }

  return result;
}

unint64_t sub_6CE0()
{
  unint64_t result = qword_287F98;
  if (!qword_287F98)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_287F98);
  }

  return result;
}

unint64_t sub_6D24()
{
  unint64_t result = qword_287FA0;
  if (!qword_287FA0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_287FA0);
  }

  return result;
}

unint64_t sub_6D68()
{
  unint64_t result = qword_286098;
  if (!qword_286098)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_286098);
  }

  return result;
}

unint64_t sub_6DAC()
{
  unint64_t result = qword_287960;
  if (!qword_287960)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_287960);
  }

  return result;
}

uint64_t sub_6DF0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = a3(a2);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_6E30()
{
  unint64_t result = qword_28B218;
  if (!qword_28B218)
  {
    uint64_t v1 = sub_45D50(&qword_28B210);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for RCHFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_28B218);
  }

  return result;
}

uint64_t sub_6E7C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void *sub_6EA8(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t sub_6ECC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6EEC(a1, a2);
}

uint64_t sub_6EEC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v65 = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v59 - v11;
  __chkstk_darwin(v10);
  int v14 = (char *)&v59 - v13;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v5, (uint64_t)qword_2969C8);
  v16 = *(uint64_t (**)(char *))(v6 + 16);
  v66 = (char *)v15;
  uint64_t v17 = v16(v14);
  v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v64 = v5;
    uint64_t v20 = swift_slowAlloc(12LL, -1LL);
    v63 = v12;
    v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v62 = v3;
    uint64_t v23 = v22;
    uint64_t v68 = v22;
    uint64_t v60 = v6;
    *(_DWORD *)v21 = 136446210;
    uint64_t v24 = static Insights.frameKit.getter();
    v61 = v16;
    v25 = a1;
    v26 = v9;
    unint64_t v28 = v27;
    uint64_t v67 = sub_6978(v24, v27, &v68);
    uint64_t v5 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
    unint64_t v29 = v28;
    uint64_t v9 = v26;
    a1 = v25;
    v16 = v61;
    swift_bridgeObjectRelease(v29);
    _os_log_impl(&dword_0, v18, v19, "AudioFlowProvider#findFlowForX %{public}s reaching logic", v21, 0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1LL, -1LL);
    v30 = v21;
    uint64_t v12 = v63;
    swift_slowDealloc(v30, -1LL, -1LL);

    v31 = *(void (**)(char *, uint64_t))(v60 + 8);
  }

  else
  {

    v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  }

  v31(v14, v5);
  type metadata accessor for ErrorFilingProvider(0LL);
  static ErrorFilingProvider.setupTrialClient()();
  uint64_t v32 = sub_73CC(a1);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = ((uint64_t (*)(char *, char *, uint64_t))v16)(v12, v66, v5);
    v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc(12LL, -1LL);
      uint64_t v64 = v5;
      v38 = (uint8_t *)v37;
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      uint64_t v68 = v39;
      v63 = v12;
      *(_DWORD *)v38 = 136446210;
      uint64_t v40 = static Insights.frameKit.getter();
      unint64_t v42 = v41;
      uint64_t v67 = sub_6978(v40, v41, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      swift_bridgeObjectRelease(v42);
      _os_log_impl(&dword_0, v35, v36, "AudioFlowProvider#findFlowForX %{public}s returned flow", v38, 0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);

      v43 = v63;
      uint64_t v44 = v64;
    }

    else
    {

      v43 = v12;
      uint64_t v44 = v5;
    }

    v31(v43, v44);
    static FlowSearchResult.flow(_:)(v33);
    return swift_release(v33);
  }

  else
  {
    uint64_t v45 = ((uint64_t (*)(char *, char *, uint64_t))v16)(v9, v66, v5);
    v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc(12LL, -1LL);
      v66 = v9;
      v49 = (uint8_t *)v48;
      uint64_t v50 = v5;
      uint64_t v51 = swift_slowAlloc(32LL, -1LL);
      uint64_t v68 = v51;
      *(_DWORD *)v49 = 136446210;
      uint64_t v52 = static Insights.frameKit.getter();
      unint64_t v54 = v53;
      uint64_t v67 = sub_6978(v52, v53, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      swift_bridgeObjectRelease(v54);
      _os_log_impl(&dword_0, v46, v47, "AudioFlowProvider#findFlowForX %{public}s returned no flow", v49, 0xCu);
      swift_arrayDestroy(v51, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      v55 = v66;
      uint64_t v56 = v50;
    }

    else
    {

      v55 = v9;
      uint64_t v56 = v5;
    }

    uint64_t v58 = ((uint64_t (*)(char *, uint64_t))v31)(v55, v56);
    return static FlowSearchResult.noFlow.getter(v58);
  }
}

uint64_t sub_73CC(char *a1)
{
  uint64_t v1245 = 0LL;
  uint64_t v1206 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v1189 = *(void *)(v1206 - 8);
  uint64_t v2 = __chkstk_darwin(v1206);
  v1134 = (char *)&v1116 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __chkstk_darwin(v2);
  v1148 = (char *)&v1116 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  v1158 = (char *)&v1116 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v1169 = (char *)&v1116 - v9;
  uint64_t v1157 = v10;
  __chkstk_darwin(v8);
  v1199 = (char *)&v1116 - v11;
  uint64_t v12 = type metadata accessor for WarmupComponent(0LL);
  uint64_t v1174 = *(void *)(v12 - 8);
  uint64_t v1175 = v12;
  __chkstk_darwin(v12);
  v1173 = (char *)&v1116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845D0);
  uint64_t v15 = __chkstk_darwin(v14);
  v1182 = (char *)&v1116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  v1160 = (char *)&v1116 - v17;
  uint64_t v1184 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v1183 = *(void *)(v1184 - 8);
  uint64_t v18 = __chkstk_darwin(v1184);
  v1161 = (char *)&v1116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  v1150 = (char *)&v1116 - v20;
  uint64_t v21 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v21);
  uint64_t v1186 = (uint64_t)&v1116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_285BD0);
  uint64_t v24 = __chkstk_darwin(v23);
  v1155 = (char *)&v1116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v24);
  v1171 = (char *)&v1116 - v27;
  __chkstk_darwin(v26);
  v1207 = (char *)&v1116 - v28;
  uint64_t v1221 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v1218 = *(void *)(v1221 - 8);
  __chkstk_darwin(v1221);
  v1192 = (char *)&v1116 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v1219 = sub_6C5C(&qword_284DA8);
  uint64_t v30 = __chkstk_darwin(v1219);
  uint64_t v1138 = (uint64_t)&v1116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v1176 = (uint64_t)&v1116 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v1208 = (uint64_t)&v1116 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v1202 = (uint64_t)&v1116 - v37;
  __chkstk_darwin(v36);
  uint64_t v1214 = (uint64_t)&v1116 - v38;
  uint64_t v39 = sub_6C5C(&qword_284DB0);
  uint64_t v40 = __chkstk_darwin(v39);
  uint64_t v1132 = (uint64_t)&v1116 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v1142 = (uint64_t)&v1116 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v1146 = (uint64_t)&v1116 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v1156 = (uint64_t)&v1116 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v1180 = (uint64_t)&v1116 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v1187 = (uint64_t)&v1116 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v1168 = (uint64_t)&v1116 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v1194 = (uint64_t)&v1116 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v1195 = (uint64_t)&v1116 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v1177 = (uint64_t)&v1116 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v1235 = (char *)&v1116 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v1200 = (uint64_t)&v1116 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v1188 = (uint64_t)&v1116 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v1234 = (uint64_t)&v1116 - v67;
  __chkstk_darwin(v66);
  uint64_t v1205 = (uint64_t)&v1116 - v68;
  uint64_t v69 = sub_6C5C(&qword_284CA0);
  uint64_t v70 = __chkstk_darwin(v69);
  uint64_t v1185 = (uint64_t)&v1116 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v70);
  uint64_t v1216 = (uint64_t)&v1116 - v72;
  uint64_t v1222 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v1220 = *(void *)(v1222 - 8);
  uint64_t v73 = __chkstk_darwin(v1222);
  uint64_t v1153 = (uint64_t)&v1116 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v1170 = (uint64_t)&v1116 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v1190 = (uint64_t)&v1116 - v78;
  __chkstk_darwin(v77);
  uint64_t v1224 = (uint64_t)&v1116 - v79;
  v1244 = (void (*)(char *, uint64_t))type metadata accessor for NLIntent(0LL);
  uint64_t v1243 = *((void *)v1244 - 1);
  __chkstk_darwin(v1244);
  v1232 = (char *)&v1116 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v1212 = type metadata accessor for UUID(0LL);
  uint64_t v1211 = *(void *)(v1212 - 8);
  __chkstk_darwin(v1212);
  v1210 = (char *)&v1116 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v1229 = type metadata accessor for OSSignpostID(0LL);
  unint64_t v1228 = *(void *)(v1229 - 8);
  __chkstk_darwin(v1229);
  v1227 = (char *)&v1116 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v83 = type metadata accessor for Parse(0LL);
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = *(void *)(v84 + 64);
  uint64_t v86 = __chkstk_darwin(v83);
  v1203 = (char *)&v1116 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = __chkstk_darwin(v86);
  v1172 = (void **)((char *)&v1116 - v88);
  uint64_t v89 = __chkstk_darwin(v87);
  v1217 = (char *)&v1116 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v1215 = (char *)&v1116 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  v1246 = (char *)&v1116 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  v1231 = (char *)&v1116 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  v1230 = (char *)&v1116 - v98;
  __chkstk_darwin(v97);
  v100 = (char *)&v1116 - v99;
  uint64_t v101 = type metadata accessor for Logger(0LL);
  v102 = *(void **)(v101 - 8);
  uint64_t v1247 = v101;
  uint64_t v103 = __chkstk_darwin(v101);
  v1162 = (char *)&v1116 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = __chkstk_darwin(v103);
  v1131 = (char *)&v1116 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  v1143 = (char *)&v1116 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  v1166 = (char *)&v1116 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  v1164 = (char *)&v1116 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  v1152 = (char *)&v1116 - v114;
  uint64_t v115 = __chkstk_darwin(v113);
  v1136 = (char *)&v1116 - v116;
  uint64_t v117 = __chkstk_darwin(v115);
  v1154 = (char *)&v1116 - v118;
  uint64_t v119 = __chkstk_darwin(v117);
  v1181 = (char *)&v1116 - v120;
  uint64_t v121 = __chkstk_darwin(v119);
  v1144 = (char *)&v1116 - v122;
  uint64_t v123 = __chkstk_darwin(v121);
  v1122 = (char *)&v1116 - v124;
  uint64_t v125 = __chkstk_darwin(v123);
  v1119 = (char *)&v1116 - v126;
  uint64_t v127 = __chkstk_darwin(v125);
  v1121 = (char *)&v1116 - v128;
  uint64_t v129 = __chkstk_darwin(v127);
  v1120 = (char *)&v1116 - v130;
  uint64_t v131 = __chkstk_darwin(v129);
  v1126 = (char *)&v1116 - v132;
  uint64_t v133 = __chkstk_darwin(v131);
  v1125 = (char *)&v1116 - v134;
  uint64_t v135 = __chkstk_darwin(v133);
  v1124 = (char *)&v1116 - v136;
  uint64_t v137 = __chkstk_darwin(v135);
  v1123 = (char *)&v1116 - v138;
  uint64_t v139 = __chkstk_darwin(v137);
  v1130 = (char *)&v1116 - v140;
  uint64_t v141 = __chkstk_darwin(v139);
  v1128 = (char *)&v1116 - v142;
  uint64_t v143 = __chkstk_darwin(v141);
  v1133 = (char *)&v1116 - v144;
  uint64_t v145 = __chkstk_darwin(v143);
  v1140 = (char *)&v1116 - v146;
  uint64_t v147 = __chkstk_darwin(v145);
  v1137 = (char *)&v1116 - v148;
  uint64_t v149 = __chkstk_darwin(v147);
  v1159 = (char *)&v1116 - v150;
  uint64_t v151 = __chkstk_darwin(v149);
  v1135 = (char *)&v1116 - v152;
  uint64_t v153 = __chkstk_darwin(v151);
  v1147 = (char *)&v1116 - v154;
  uint64_t v155 = __chkstk_darwin(v153);
  v1163 = (char *)&v1116 - v156;
  uint64_t v157 = __chkstk_darwin(v155);
  v1178 = (char *)&v1116 - v158;
  uint64_t v159 = __chkstk_darwin(v157);
  v1167 = (char *)&v1116 - v160;
  uint64_t v161 = __chkstk_darwin(v159);
  v1129 = (char *)&v1116 - v162;
  uint64_t v163 = __chkstk_darwin(v161);
  v1127 = (char *)&v1116 - v164;
  uint64_t v165 = __chkstk_darwin(v163);
  v1145 = (char *)&v1116 - v166;
  uint64_t v167 = __chkstk_darwin(v165);
  v1197 = (char *)&v1116 - v168;
  uint64_t v169 = __chkstk_darwin(v167);
  v1198 = (char *)&v1116 - v170;
  uint64_t v171 = __chkstk_darwin(v169);
  v1139 = (char *)&v1116 - v172;
  uint64_t v173 = __chkstk_darwin(v171);
  v1165 = (char *)&v1116 - v174;
  uint64_t v175 = __chkstk_darwin(v173);
  v1151 = (char *)&v1116 - v176;
  uint64_t v177 = __chkstk_darwin(v175);
  v1149 = (char *)&v1116 - v178;
  uint64_t v179 = __chkstk_darwin(v177);
  v1141 = (char *)&v1116 - v180;
  uint64_t v181 = __chkstk_darwin(v179);
  v1179 = (char *)&v1116 - v182;
  uint64_t v183 = __chkstk_darwin(v181);
  v1193 = (char *)&v1116 - v184;
  uint64_t v185 = __chkstk_darwin(v183);
  v1191 = (char *)&v1116 - v186;
  uint64_t v187 = __chkstk_darwin(v185);
  v1213 = (char *)&v1116 - v188;
  uint64_t v189 = __chkstk_darwin(v187);
  v1201 = (char *)&v1116 - v190;
  uint64_t v191 = __chkstk_darwin(v189);
  v1209 = (char *)&v1116 - v192;
  uint64_t v193 = __chkstk_darwin(v191);
  v1196 = (char *)&v1116 - v194;
  __chkstk_darwin(v193);
  v196 = (char *)&v1116 - v195;
  static SiriAudioState.isMakeFlowFromParse.setter(1LL);
  static SiriAudioState.isWarmup.setter(0LL);
  uint64_t v197 = sub_FAF8();
  v1237 = v102;
  v198 = (void (*)(char *, uint64_t, uint64_t))v102[2];
  uint64_t v1238 = v197;
  v1239 = v198;
  ((void (*)(char *))v198)(v196);
  v199 = *(void (**)(void, void, void))(v84 + 16);
  v1240 = a1;
  v1236 = (void (*)(char *, char *, uint64_t))v199;
  v199(v100, a1, v83);
  uint64_t v200 = *(unsigned __int8 *)(v84 + 80);
  uint64_t v201 = (v200 + 16) & ~v200;
  uint64_t v202 = swift_allocObject(&unk_271398, v201 + v85, v200 | 7);
  uint64_t v1242 = v84;
  v203 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v84 + 32);
  v1223 = v100;
  uint64_t v1248 = v83;
  uint64_t v204 = v203(v202 + v201, v100, v83);
  v1226 = v196;
  os_log_t v1225 = (os_log_t)Logger.logObject.getter(v204);
  LODWORD(v1241) = static os_log_type_t.default.getter();
  uint64_t v205 = swift_allocObject(&unk_2713C0, 17LL, 7LL);
  *(_BYTE *)(v205 + 16) = 34;
  uint64_t v206 = swift_allocObject(&unk_2713E8, 17LL, 7LL);
  *(_BYTE *)(v206 + 16) = 8;
  uint64_t v207 = swift_allocObject(&unk_271410, 17LL, 7LL);
  *(_BYTE *)(v207 + 16) = 34;
  uint64_t v208 = swift_allocObject(&unk_271438, 17LL, 7LL);
  *(_BYTE *)(v208 + 16) = 8;
  uint64_t v209 = swift_allocObject(&unk_271460, 17LL, 7LL);
  *(_BYTE *)(v209 + 16) = 32;
  uint64_t v210 = swift_allocObject(&unk_271488, 17LL, 7LL);
  *(_BYTE *)(v210 + 16) = 8;
  uint64_t v211 = swift_allocObject(&unk_2714B0, 32LL, 7LL);
  *(void *)(v211 + 16) = sub_1014C;
  *(void *)(v211 + 24) = v202;
  uint64_t v212 = swift_allocObject(&unk_2714D8, 32LL, 7LL);
  *(void *)(v212 + 16) = sub_1646C;
  *(void *)(v212 + 24) = v211;
  uint64_t v1233 = sub_6C5C(&qword_284DE0);
  uint64_t v213 = swift_allocObject(v1233, 176LL, 7LL);
  uint64_t v214 = sub_14816C(v213, 9LL);
  void *v215 = sub_16464;
  v215[1] = v205;
  v215[2] = sub_64F90;
  v215[3] = v206;
  v215[4] = sub_FBE0;
  v215[5] = 0LL;
  v215[6] = sub_64F90;
  v215[7] = v207;
  v215[8] = sub_64F90;
  v215[9] = v208;
  v215[10] = sub_FBF8;
  v215[11] = 0LL;
  v215[12] = sub_64F90;
  v215[13] = v209;
  v215[14] = sub_64F90;
  v215[15] = v210;
  v215[16] = sub_16454;
  v215[17] = v212;
  swift_retain(v205);
  swift_retain(v206);
  swift_retain(v207);
  swift_retain(v208);
  swift_retain(v209);
  swift_retain(v210);
  swift_retain(v212);
  uint64_t v216 = v1247;
  swift_bridgeObjectRelease(v214);
  os_log_t v217 = v1225;
  if (os_log_type_enabled(v1225, (os_log_type_t)v1241))
  {
    uint64_t v1118 = v210;
    v218 = (uint8_t *)sub_55F20(32LL);
    uint64_t v219 = swift_slowAlloc(96LL, -1LL);
    v1257[0] = 0LL;
    uint64_t v1116 = v219;
    v1117 = v218;
    *(void *)&v1256[0] = v219;
    *(_WORD *)v218 = 770;
    *(void *)&__int128 v1249 = v218 + 2;
    *(void *)&__int128 v1258 = sub_16464;
    *((void *)&v1258 + 1) = v205;
    uint64_t v220 = v1245;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    if (v220) {
      goto LABEL_396;
    }
    swift_release(v205);
    *(void *)&__int128 v1258 = sub_64F90;
    *((void *)&v1258 + 1) = v206;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    swift_release(v206);
    *(void *)&__int128 v1258 = sub_FBE0;
    *((void *)&v1258 + 1) = 0LL;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    *(void *)&__int128 v1258 = sub_64F90;
    *((void *)&v1258 + 1) = v207;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    swift_release(v207);
    *(void *)&__int128 v1258 = sub_64F90;
    *((void *)&v1258 + 1) = v208;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    swift_release(v208);
    *(void *)&__int128 v1258 = sub_FBF8;
    *((void *)&v1258 + 1) = 0LL;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    *(void *)&__int128 v1258 = sub_64F90;
    *((void *)&v1258 + 1) = v209;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    v221 = v217;
    swift_release(v209);
    uint64_t v222 = v1118;
    *(void *)&__int128 v1258 = sub_64F90;
    *((void *)&v1258 + 1) = v1118;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    swift_release(v222);
    *(void *)&__int128 v1258 = sub_16454;
    *((void *)&v1258 + 1) = v212;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    uint64_t v1245 = 0LL;
    v223 = v1237;
    v224 = v1226;
    swift_release(v212);
    v225 = v1117;
    _os_log_impl( &dword_0,  v221,  (os_log_type_t)v1241,  "AudioFlowProvider#makeFlow %{public}s for request id: %{public}s. Received parse: %s",  v1117,  0x20u);
    uint64_t v226 = v1116;
    swift_arrayDestroy(v1116, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v226, -1LL, -1LL);
    sub_101D4((uint64_t)v225);

    v227 = (void *)v223[1];
    v228 = v224;
    uint64_t v229 = v1247;
  }

  else
  {

    swift_release(v212);
    swift_release(v210);
    swift_release(v209);
    swift_release(v208);
    swift_release(v207);
    swift_release(v206);
    swift_release(v205);
    v227 = (void *)v1237[1];
    v228 = v1226;
    uint64_t v229 = v216;
  }

  v230 = v227;
  ((void (*)(char *, uint64_t))v227)(v228, v229);
  uint64_t v231 = v1248;
  static ExecutorProvider.shared.getter(&v1258);
  uint64_t v232 = *((void *)&v1259 + 1);
  uint64_t v233 = v1260;
  sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
  uint64_t v234 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v232, v233);
  if (v235) {
    uint64_t v236 = v234;
  }
  else {
    uint64_t v236 = 4144959LL;
  }
  if (v235) {
    unint64_t v237 = v235;
  }
  else {
    unint64_t v237 = 0xE300000000000000LL;
  }
  uint64_t v238 = sub_6C3C(&v1258);
  uint64_t v239 = static os_signpost_type_t.event.getter(v238);
  v240 = v1236;
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v241 = qword_296AA0;
  uint64_t v242 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v243 = swift_allocObject(v242, 72LL, 7LL);
  *(_OWORD *)(v243 + 16) = xmmword_214510;
  *(void *)(v243 + 56) = &type metadata for String;
  *(void *)(v243 + 64) = sub_6DAC();
  *(void *)(v243 + 32) = v236;
  *(void *)(v243 + 40) = v237;
  uint64_t v244 = swift_bridgeObjectRetain(v237);
  v245 = v1227;
  static OSSignpostID.exclusive.getter(v244);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v239,  &dword_0,  v241,  "audioFlowDelegatePluginMakeFlowFrameEvent",  41LL,  2LL,  v245,  "refId=%{signpost.telemetry:string1,public}@",  43LL,  2,  v243);
  swift_bridgeObjectRelease(v243);
  (*(void (**)(char *, uint64_t))(v1228 + 8))(v245, v1229);
  swift_bridgeObjectRelease(v237);
  uint64_t v1229 = type metadata accessor for MediaPlayerPlaybackContextProvider(0LL);
  uint64_t v246 = ((uint64_t (*)(void))static MediaPlayerPlaybackContextProvider.shared.getter)();
  dispatch thunk of MediaPlayerPlaybackContextProvider.clear()();
  swift_release(v246);
  sub_101E0();
  unint64_t v1228 = 0xD000000000000014LL;
  static TailSpinManager.deleteTailSpinFiles(suiteName:)();
  v247 = v1230;
  v248 = v1240;
  v240(v1230, v1240, v231);
  uint64_t v249 = v1242;
  v1241 = *(uint64_t (**)(char *, uint64_t))(v1242 + 88);
  int v250 = v1241(v247, v231);
  int v251 = enum case for Parse.NLv3IntentPlusServerConversion(_:);
  v1237 = v230;
  if (v250 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v249 + 96))(v247, v1248);
    v252 = *(char **)&v247[*(int *)(sub_6C5C(&qword_284618) + 48)];
    uint64_t v253 = (*(uint64_t (**)(char *, void *))(v1243 + 8))(v247, v1244);
    v254 = (void *)Parse.ServerConversion.siriKitIntent.getter(v253);
    id v255 = [v254 intentId];

    uint64_t v256 = (uint64_t)v1235;
    if (v255)
    {
      swift_release(v252);

      uint64_t v258 = v1247;
      uint64_t v257 = v1234;
      v259 = v1231;
    }

    else
    {
      v1227 = v252;
      LODWORD(v1230) = v251;
      v260 = v1210;
      uint64_t v261 = UUID.init()();
      v262 = (os_log_s *)UUID.uuidString.getter(v261);
      v264 = v263;
      (*(void (**)(char *, uint64_t))(v1211 + 8))(v260, v1212);
      v265 = v1196;
      v1239(v1196, v1238, v1247);
      uint64_t v266 = swift_allocObject(&unk_271DE8, 32LL, 7LL);
      os_log_t v1225 = v262;
      *(void *)(v266 + 16) = v262;
      *(void *)(v266 + 24) = v264;
      v1226 = v264;
      uint64_t v267 = swift_bridgeObjectRetain(v264);
      v268 = (os_log_s *)Logger.logObject.getter(v267);
      int v269 = static os_log_type_t.default.getter();
      uint64_t v270 = swift_allocObject(&unk_271E10, 17LL, 7LL);
      *(_BYTE *)(v270 + 16) = 32;
      uint64_t v271 = swift_allocObject(&unk_271E38, 17LL, 7LL);
      *(_BYTE *)(v271 + 16) = 8;
      uint64_t v272 = swift_allocObject(&unk_271E60, 32LL, 7LL);
      *(void *)(v272 + 16) = ShazamKitMatch.skId.getter;
      *(void *)(v272 + 24) = v266;
      uint64_t v273 = swift_allocObject(&unk_271E88, 32LL, 7LL);
      *(void *)(v273 + 16) = sub_64F88;
      *(void *)(v273 + 24) = v272;
      uint64_t v274 = swift_allocObject(v1233, 80LL, 7LL);
      uint64_t v275 = sub_14816C(v274, 3LL);
      void *v276 = sub_64F90;
      v276[1] = v270;
      v276[2] = sub_64F90;
      v276[3] = v271;
      v276[4] = sub_64F8C;
      v276[5] = v273;
      swift_retain(v270);
      swift_retain(v271);
      swift_retain(v273);
      swift_bridgeObjectRelease(v275);
      LODWORD(v1118) = v269;
      if (os_log_type_enabled(v268, (os_log_type_t)v269))
      {
        v277 = (uint8_t *)sub_55F20(12LL);
        uint64_t v278 = swift_slowAlloc(32LL, -1LL);
        v1257[0] = 0LL;
        *(void *)&v1256[0] = v278;
        *(_WORD *)v277 = 258;
        *(void *)&__int128 v1249 = v277 + 2;
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v270;
        uint64_t v220 = v1245;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        if (v220) {
          goto LABEL_396;
        }
        swift_release(v270);
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v271;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        swift_release(v271);
        *(void *)&__int128 v1258 = sub_64F8C;
        *((void *)&v1258 + 1) = v273;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        uint64_t v257 = v1234;
        swift_release(v273);
        _os_log_impl( &dword_0,  v268,  (os_log_type_t)v1118,  "AudioFlowProvider#makeFlow found nil intentId, updating to: %s",  v277,  0xCu);
        swift_arrayDestroy(v278, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v278, -1LL, -1LL);
        sub_101D4((uint64_t)v277);

        uint64_t v279 = ((uint64_t (*)(char *, uint64_t))v1237)(v265, v1247);
      }

      else
      {

        swift_release(v273);
        swift_release(v271);
        swift_release(v270);
        uint64_t v279 = ((uint64_t (*)(char *, uint64_t))v1237)(v265, v1247);
        uint64_t v220 = v1245;
        uint64_t v257 = v1234;
      }

      v280 = v1227;
      v281 = (void *)Parse.ServerConversion.siriKitIntent.getter(v279);
      id v282 = [v281 _metadata];

      v283 = v1209;
      uint64_t v1245 = v220;
      if (v282)
      {
        v284 = v1226;
        NSString v285 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v284);
        [v282 setIntentId:v285];
      }

      else
      {
        swift_bridgeObjectRelease(v1226);
      }

      uint64_t v286 = v1247;
      v1239(v283, v1238, v1247);
      uint64_t v287 = swift_retain(v280);
      v288 = (os_log_s *)Logger.logObject.getter(v287);
      int v289 = static os_log_type_t.default.getter();
      v290 = v280;
      uint64_t v291 = swift_allocObject(&unk_271EB0, 17LL, 7LL);
      *(_BYTE *)(v291 + 16) = 34;
      uint64_t v292 = swift_allocObject(&unk_271ED8, 17LL, 7LL);
      *(_BYTE *)(v292 + 16) = 8;
      uint64_t v293 = swift_allocObject(&unk_271F00, 32LL, 7LL);
      *(void *)(v293 + 16) = sub_155150;
      *(void *)(v293 + 24) = v290;
      uint64_t v294 = swift_allocObject(&unk_271F28, 32LL, 7LL);
      *(void *)(v294 + 16) = sub_64F88;
      *(void *)(v294 + 24) = v293;
      uint64_t v295 = swift_allocObject(v1233, 80LL, 7LL);
      uint64_t v296 = sub_14816C(v295, 3LL);
      void *v297 = sub_64F90;
      v297[1] = v291;
      v297[2] = sub_64F90;
      v297[3] = v292;
      v297[4] = sub_64F8C;
      v297[5] = v294;
      swift_retain(v291);
      swift_retain(v292);
      swift_retain(v294);
      swift_bridgeObjectRelease(v296);
      LODWORD(v1226) = v289;
      if (os_log_type_enabled(v288, (os_log_type_t)v289))
      {
        os_log_t v1225 = v288;
        v298 = (uint8_t *)sub_55F20(12LL);
        uint64_t v299 = swift_slowAlloc(32LL, -1LL);
        v1257[0] = 0LL;
        *(void *)&v1256[0] = v299;
        *(_WORD *)v298 = 258;
        *(void *)&__int128 v1249 = v298 + 2;
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v291;
        uint64_t v220 = v1245;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        if (v220) {
          goto LABEL_396;
        }
        swift_release(v291);
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v292;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        v240 = v1236;
        swift_release(v292);
        *(void *)&__int128 v1258 = sub_64F8C;
        *((void *)&v1258 + 1) = v294;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        uint64_t v1245 = 0LL;
        v259 = v1231;
        v300 = v1227;
        swift_release(v294);
        os_log_t v301 = v1225;
        _os_log_impl( &dword_0,  v1225,  (os_log_type_t)v1226,  "AudioFlowProvider#makeFlow Updated intentId: %{public}s",  v298,  0xCu);
        swift_arrayDestroy(v299, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v299, -1LL, -1LL);
        sub_101D4((uint64_t)v298);
        swift_release(v300);

        uint64_t v258 = v1247;
        ((void (*)(char *, uint64_t))v1237)(v1209, v1247);
        uint64_t v249 = v1242;
        v248 = v1240;
        uint64_t v256 = (uint64_t)v1235;
        uint64_t v257 = v1234;
      }

      else
      {

        swift_release(v294);
        swift_release(v292);
        swift_release(v291);
        swift_release(v290);
        ((void (*)(char *, uint64_t))v1237)(v1209, v286);
        uint64_t v258 = v286;
        uint64_t v249 = v1242;
        v248 = v1240;
        v240 = v1236;
        uint64_t v256 = (uint64_t)v1235;
        v259 = v1231;
      }

      int v251 = (int)v1230;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v249 + 8))(v247, v1248);
    uint64_t v256 = (uint64_t)v1235;
    uint64_t v257 = v1234;
    uint64_t v258 = v1247;
    v259 = v1231;
  }

  uint64_t v302 = v1248;
  v240(v259, v248, v1248);
  if (v1241(v259, v302) == v251)
  {
    LODWORD(v1230) = v251;
    (*(void (**)(char *, uint64_t))(v249 + 96))(v259, v1248);
    v303 = *(char **)&v259[*(int *)(sub_6C5C(&qword_284618) + 48)];
    uint64_t v304 = (*(uint64_t (**)(char *, void *))(v1243 + 8))(v259, v1244);
    v305 = (void *)Parse.ServerConversion.siriKitIntent.getter(v304);
    id v306 = [v305 identifier];

    if (v306)
    {
      swift_release(v303);
    }

    else
    {
      v1226 = v303;
      v307 = v1210;
      uint64_t v308 = UUID.init()();
      uint64_t v309 = UUID.uuidString.getter(v308);
      v311 = v310;
      (*(void (**)(char *, uint64_t))(v1211 + 8))(v307, v1212);
      v312 = v1201;
      v1239(v1201, v1238, v258);
      uint64_t v313 = swift_allocObject(&unk_271C80, 32LL, 7LL);
      v1227 = (char *)v309;
      *(void *)(v313 + 16) = v309;
      *(void *)(v313 + 24) = v311;
      v1231 = v311;
      uint64_t v314 = swift_bridgeObjectRetain(v311);
      v315 = (os_log_s *)Logger.logObject.getter(v314);
      int v316 = static os_log_type_t.default.getter();
      uint64_t v317 = swift_allocObject(&unk_271CA8, 17LL, 7LL);
      *(_BYTE *)(v317 + 16) = 32;
      uint64_t v318 = v258;
      uint64_t v319 = swift_allocObject(&unk_271CD0, 17LL, 7LL);
      *(_BYTE *)(v319 + 16) = 8;
      uint64_t v320 = swift_allocObject(&unk_271CF8, 32LL, 7LL);
      *(void *)(v320 + 16) = j___s23AudioFlowDelegatePlugin14ShazamKitMatchC4skIdSSSgvg;
      *(void *)(v320 + 24) = v313;
      uint64_t v321 = swift_allocObject(&unk_271D20, 32LL, 7LL);
      *(void *)(v321 + 16) = sub_64F88;
      *(void *)(v321 + 24) = v320;
      uint64_t v322 = swift_allocObject(v1233, 80LL, 7LL);
      uint64_t v323 = sub_14816C(v322, 3LL);
      void *v324 = sub_64F90;
      v324[1] = v317;
      v324[2] = sub_64F90;
      v324[3] = v319;
      v324[4] = sub_64F8C;
      v324[5] = v321;
      swift_retain(v317);
      swift_retain(v319);
      swift_retain(v321);
      swift_bridgeObjectRelease(v323);
      LODWORD(v1225) = v316;
      if (os_log_type_enabled(v315, (os_log_type_t)v316))
      {
        v325 = (uint8_t *)sub_55F20(12LL);
        uint64_t v326 = swift_slowAlloc(32LL, -1LL);
        v1257[0] = 0LL;
        *(void *)&v1256[0] = v326;
        *(_WORD *)v325 = 258;
        *(void *)&__int128 v1249 = v325 + 2;
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v317;
        uint64_t v220 = v1245;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        if (v220) {
          goto LABEL_396;
        }
        swift_release(v317);
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v319;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        v327 = v1201;
        v328 = v1226;
        swift_release(v319);
        *(void *)&__int128 v1258 = sub_64F8C;
        *((void *)&v1258 + 1) = v321;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        uint64_t v1245 = 0LL;
        uint64_t v257 = v1234;
        swift_release(v321);
        _os_log_impl( &dword_0,  v315,  (os_log_type_t)v1225,  "AudioFlowProvider#makeFlow found nil identifier, updating to: %s",  v325,  0xCu);
        swift_arrayDestroy(v326, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v326, -1LL, -1LL);
        sub_101D4((uint64_t)v325);

        uint64_t v318 = v1247;
        uint64_t v329 = ((uint64_t (*)(char *, uint64_t))v1237)(v327, v1247);
        v330 = v1213;
      }

      else
      {

        swift_release(v321);
        swift_release(v319);
        swift_release(v317);
        uint64_t v329 = ((uint64_t (*)(char *, uint64_t))v1237)(v312, v318);
        uint64_t v257 = v1234;
        v330 = v1213;
        v328 = v1226;
      }

      v331 = (void *)Parse.ServerConversion.siriKitIntent.getter(v329);
      v332 = v1231;
      NSString v333 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v332);
      [v331 setIdentifier:v333];

      v1239(v330, v1238, v318);
      uint64_t v334 = swift_retain(v328);
      v335 = (os_log_s *)Logger.logObject.getter(v334);
      LODWORD(v331) = static os_log_type_t.default.getter();
      uint64_t v336 = swift_allocObject(&unk_271D48, 17LL, 7LL);
      *(_BYTE *)(v336 + 16) = 34;
      uint64_t v337 = swift_allocObject(&unk_271D70, 17LL, 7LL);
      *(_BYTE *)(v337 + 16) = 8;
      uint64_t v338 = swift_allocObject(&unk_271D98, 32LL, 7LL);
      *(void *)(v338 + 16) = sub_1550F0;
      *(void *)(v338 + 24) = v328;
      uint64_t v339 = swift_allocObject(&unk_271DC0, 32LL, 7LL);
      *(void *)(v339 + 16) = sub_64F88;
      *(void *)(v339 + 24) = v338;
      uint64_t v340 = swift_allocObject(v1233, 80LL, 7LL);
      uint64_t v341 = sub_14816C(v340, 3LL);
      void *v342 = sub_64F90;
      v342[1] = v336;
      v342[2] = sub_64F90;
      v342[3] = v337;
      v342[4] = sub_64F8C;
      v342[5] = v339;
      swift_retain(v336);
      swift_retain(v337);
      swift_retain(v339);
      swift_bridgeObjectRelease(v341);
      LODWORD(v1231) = (_DWORD)v331;
      os_log_type_t v343 = v331;
      v344 = v335;
      if (os_log_type_enabled(v335, v343))
      {
        v345 = (uint8_t *)sub_55F20(12LL);
        uint64_t v346 = swift_slowAlloc(32LL, -1LL);
        v1257[0] = 0LL;
        *(void *)&v1256[0] = v346;
        *(_WORD *)v345 = 258;
        *(void *)&__int128 v1249 = v345 + 2;
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v336;
        uint64_t v220 = v1245;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        if (v220) {
          goto LABEL_396;
        }
        swift_release(v336);
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v337;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        swift_release(v337);
        *(void *)&__int128 v1258 = sub_64F8C;
        *((void *)&v1258 + 1) = v339;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        uint64_t v1245 = 0LL;
        v347 = v1213;
        swift_release(v339);
        _os_log_impl( &dword_0,  v344,  (os_log_type_t)v1231,  "AudioFlowProvider#makeFlow Updated identifier: %{public}s",  v345,  0xCu);
        swift_arrayDestroy(v346, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v346, -1LL, -1LL);
        sub_101D4((uint64_t)v345);
        swift_release(v328);

        uint64_t v258 = v1247;
        ((void (*)(char *, uint64_t))v1237)(v347, v1247);
        uint64_t v249 = v1242;
        v248 = v1240;
        v240 = v1236;
        uint64_t v256 = (uint64_t)v1235;
        uint64_t v257 = v1234;
      }

      else
      {

        swift_release(v339);
        swift_release(v337);
        swift_release(v336);
        swift_release(v328);
        ((void (*)(char *, uint64_t))v1237)(v1213, v318);
        uint64_t v258 = v318;
        uint64_t v249 = v1242;
        v248 = v1240;
        v240 = v1236;
        uint64_t v256 = (uint64_t)v1235;
      }
    }

    int v251 = (int)v1230;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v249 + 8))(v259, v1248);
  }

  v348 = v1246;
  uint64_t v349 = v1248;
  v240(v1246, v248, v1248);
  int v350 = v1241(v348, v349);
  if (v350 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v350 == v251)
    {
      v360 = v1217;
      uint64_t v361 = v1248;
      v240(v1217, v1246, v1248);
      (*(void (**)(char *, uint64_t))(v249 + 96))(v360, v361);
      uint64_t v362 = sub_6C5C(&qword_284618);
      v363 = *(uint64_t (**)(char *, uint64_t))&v360[*(int *)(v362 + 48)];
      v364 = (char *)Parse.ServerConversion.siriKitIntent.getter(v362);
      uint64_t v365 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      uint64_t v366 = swift_dynamicCastObjCClass(v364, v365);
      v1241 = v363;
      v1235 = v364;
      if (v366)
      {
        v367 = v1197;
        v1239(v1197, v1238, v258);
        uint64_t v368 = swift_retain(v363);
        v369 = (os_log_s *)Logger.logObject.getter(v368);
        int v370 = static os_log_type_t.default.getter();
        uint64_t v371 = swift_allocObject(&unk_271A00, 17LL, 7LL);
        *(_BYTE *)(v371 + 16) = 34;
        uint64_t v372 = swift_allocObject(&unk_271A28, 17LL, 7LL);
        *(_BYTE *)(v372 + 16) = 8;
        uint64_t v373 = v258;
        uint64_t v374 = swift_allocObject(&unk_271A50, 32LL, 7LL);
        *(void *)(v374 + 16) = sub_154FC4;
        *(void *)(v374 + 24) = v363;
        uint64_t v375 = swift_allocObject(&unk_271A78, 32LL, 7LL);
        *(void *)(v375 + 16) = sub_64F88;
        *(void *)(v375 + 24) = v374;
        uint64_t v376 = swift_allocObject(v1233, 80LL, 7LL);
        uint64_t v377 = sub_14816C(v376, 3LL);
        void *v378 = sub_64F90;
        v378[1] = v371;
        v378[2] = sub_64F90;
        v378[3] = v372;
        v378[4] = sub_64F8C;
        v378[5] = v375;
        swift_retain(v371);
        swift_retain(v372);
        swift_retain(v375);
        swift_bridgeObjectRelease(v377);
        LODWORD(v1234) = v370;
        os_log_type_t v379 = v370;
        v380 = v369;
        if (os_log_type_enabled(v369, v379))
        {
          v381 = (uint8_t *)sub_55F20(12LL);
          uint64_t v382 = swift_slowAlloc(32LL, -1LL);
          v1257[0] = 0LL;
          *(void *)&v1256[0] = v382;
          *(_WORD *)v381 = 258;
          *(void *)&__int128 v1249 = v381 + 2;
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v371;
          uint64_t v220 = v1245;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          if (v220) {
            goto LABEL_396;
          }
          swift_release(v371);
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v372;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          swift_release(v372);
          *(void *)&__int128 v1258 = sub_64F8C;
          *((void *)&v1258 + 1) = v375;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          uint64_t v1245 = 0LL;
          v383 = v1240;
          v384 = v1197;
          swift_release(v375);
          _os_log_impl( &dword_0,  v380,  (os_log_type_t)v1234,  "AudioFlowDelegatePlugin#makeFlow Using SiriKitFlowFrame for INPlayMediaIntent: %{public}s",  v381,  0xCu);
          swift_arrayDestroy(v382, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v382, -1LL, -1LL);
          sub_101D4((uint64_t)v381);

          v385 = (void (*)(char *, uint64_t))v1237;
          uint64_t v386 = ((uint64_t (*)(char *, uint64_t))v1237)(v384, v1247);
          uint64_t v249 = v1242;
        }

        else
        {

          swift_release(v375);
          swift_release(v372);
          swift_release(v371);
          uint64_t v452 = v373;
          v385 = (void (*)(char *, uint64_t))v1237;
          uint64_t v386 = ((uint64_t (*)(char *, uint64_t))v1237)(v367, v452);
          uint64_t v249 = v1242;
          v383 = v1240;
        }

        v453 = v1241;
        v454 = (void *)Parse.ServerConversion.siriKitIntent.getter(v386);
        uint64_t v455 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
        uint64_t v456 = swift_dynamicCastObjCClass(v454, v455);
        if (!v456)
        {

          uint64_t v508 = type metadata accessor for Input(0LL);
          uint64_t v509 = (uint64_t)v1207;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v508 - 8) + 56LL))( v1207,  1LL,  1LL,  v508);
          uint64_t v409 = sub_110130(v509);
          sub_1F6CC(v509, &qword_285BD0);
          swift_release(v453);

LABEL_100:
          (*(void (**)(char *, void *))(v1243 + 8))(v1217, v1244);
          goto LABEL_254;
        }

        *(void *)&__int128 v1258 = v456;
        sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
        BOOL v457 = CommonIntentSignals.isPirene()();
        BOOL v458 = v457;
        uint64_t v459 = static MediaPlayerPlaybackContextProvider.shared.getter(v457);
        if (v458) {
          uint64_t v460 = 2LL;
        }
        else {
          uint64_t v460 = 1LL;
        }
        dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(v460);
        swift_release(v459);
        v461 = v1223;
        v462 = v1236;
        v1236(v1223, v383, v1248);
        uint64_t v463 = v1185;
        sub_206FC0(v461, v1185);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1220 + 48))(v463, 1LL, v1222) == 1)
        {
          sub_1F6CC(v463, &qword_284CA0);
          v464 = v1167;
          uint64_t v465 = v1247;
          uint64_t v466 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1167, v1238, v1247);
          v467 = (os_log_s *)Logger.logObject.getter(v466);
          os_log_type_t v468 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v467, v468))
          {
            v469 = (uint8_t *)sub_55F20(2LL);
            *(void *)&__int128 v1249 = 0LL;
            v1257[0] = 0LL;
            *(_WORD *)v469 = 0;
            *(void *)&__int128 v1258 = v469 + 2;
            sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            _os_log_impl( &dword_0,  v467,  v468,  "AudioFlowProvider#makeFlow Fatal: Cannot get AudioNLv3Intent from NLv3IntentPlusServerConversion parse",  v469,  2u);
            sub_101D4((uint64_t)v469);
            swift_release(v1241);

            v385(v464, v1247);
          }

          else
          {

            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            swift_release(v1241);
            v385(v464, v465);
          }

LABEL_143:
          (*(void (**)(char *, void *))(v1243 + 8))(v1217, v1244);
          goto LABEL_61;
        }

        uint64_t v512 = v463;
        uint64_t v513 = v1170;
        sub_B8980(v512, v1170);
        unsigned __int8 v514 = sub_3042C();
        uint64_t v515 = v1247;
        if ((v514 & 1) != 0)
        {
          v516 = v1223;
          v462(v1223, v383, v1248);
          uint64_t v517 = (uint64_t)v1207;
          Input.init(parse:)(v516);
          uint64_t v518 = type metadata accessor for Input(0LL);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v518 - 8) + 56LL))( v517,  0LL,  1LL,  v518);
          uint64_t v409 = sub_112424(v517);
          swift_release(v1241);

          sub_1F6CC(v517, &qword_285BD0);
LABEL_250:
          uint64_t v871 = v513;
LABEL_251:
          sub_DD994(v871);
          goto LABEL_252;
        }

        sub_6DF0(&qword_287000, 255LL, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C220);
        if (AudioIntent.isAirPlayMusicWithoutAppName()())
        {
          v656 = v1145;
          uint64_t v657 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1145, v1238, v515);
          v658 = (os_log_s *)Logger.logObject.getter(v657);
          os_log_type_t v659 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v658, v659))
          {
            v660 = (uint8_t *)sub_55F20(2LL);
            *(void *)&__int128 v1249 = 0LL;
            v1257[0] = 0LL;
            *(_WORD *)v660 = 0;
            *(void *)&__int128 v1258 = v660 + 2;
            sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            _os_log_impl( &dword_0,  v658,  v659,  "AudioFlowDelegatePlugin#makeFlow#NLv3IntentPlusServerConversion This is an AirPlay request without an app name, returning first audio play flow",  v660,  2u);
            uint64_t v661 = (uint64_t)v660;
            uint64_t v513 = v1170;
            sub_101D4(v661);
          }

          else
          {

            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          }

          v385(v656, v515);
          uint64_t v869 = type metadata accessor for Input(0LL);
          uint64_t v870 = (uint64_t)v1207;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v869 - 8) + 56LL))( v1207,  1LL,  1LL,  v869);
          uint64_t v409 = sub_110130(v870);
          sub_1F6CC(v870, &qword_285BD0);
          swift_release(v1241);

          goto LABEL_250;
        }

        char v778 = INPlayMediaIntent.isAmbiguousShuffle.getter();
        uint64_t v779 = v1153;
        sub_FE7FC(v513, v1153);
        if ((v778 & 1) != 0)
        {
          uint64_t v780 = v1146;
          sub_208724(v1146);
          uint64_t v781 = v1218;
          uint64_t v782 = v1142;
          uint64_t v783 = v1221;
          (*(void (**)(uint64_t, void, uint64_t))(v1218 + 104))( v1142,  enum case for CommonAudio.Verb.shuffle(_:),  v1221);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v781 + 56))(v782, 0LL, 1LL, v783);
          uint64_t v784 = v1138;
          v785 = (char *)(v1138 + *(int *)(v1219 + 48));
          sub_FF10(v780, v1138, &qword_284DB0);
          v1240 = v785;
          uint64_t v786 = (uint64_t)v785;
          uint64_t v787 = v783;
          sub_FF10(v782, v786, &qword_284DB0);
          v788 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v781 + 48);
          if (v788((char *)v784, 1LL, v783) == 1)
          {
            sub_1F6CC(v782, &qword_284DB0);
            sub_1F6CC(v1146, &qword_284DB0);
            sub_DD994(v1153);
            int v789 = v788(v1240, 1LL, v783);
            uint64_t v249 = v1242;
            if (v789 == 1)
            {
              sub_1F6CC(v784, &qword_284DB0);
              goto LABEL_325;
            }

            goto LABEL_310;
          }

          uint64_t v946 = v1132;
          sub_FF10(v784, v1132, &qword_284DB0);
          v947 = v1240;
          if (v788(v1240, 1LL, v787) == 1)
          {
            sub_1F6CC(v1142, &qword_284DB0);
            sub_1F6CC(v1146, &qword_284DB0);
            sub_DD994(v1153);
            (*(void (**)(uint64_t, uint64_t))(v1218 + 8))(v946, v787);
            uint64_t v249 = v1242;
LABEL_310:
            sub_1F6CC(v784, &qword_284DA8);
            goto LABEL_330;
          }

          uint64_t v984 = v1218;
          v985 = v1192;
          (*(void (**)(char *, char *, uint64_t))(v1218 + 32))(v1192, v947, v787);
          uint64_t v986 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
          char v987 = dispatch thunk of static Equatable.== infix(_:_:)(v946, v985, v787, v986);
          v988 = *(void (**)(char *, uint64_t))(v984 + 8);
          v988(v985, v787);
          sub_1F6CC(v1142, &qword_284DB0);
          sub_1F6CC(v1146, &qword_284DB0);
          sub_DD994(v1153);
          v988((char *)v946, v787);
          sub_1F6CC(v784, &qword_284DB0);
          uint64_t v249 = v1242;
          if ((v987 & 1) != 0)
          {
LABEL_325:
            v1240 = (char *)v454;
            v989 = v1204;
            uint64_t v990 = v1204[15];
            uint64_t v991 = v1204[16];
            sub_6EA8(v1204 + 12, v990);
            if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v990, v991) & 1) == 0
              || (uint64_t v992 = v989[15],
                  uint64_t v993 = v989[16],
                  sub_6EA8(v989 + 12, v992),
                  (dispatch thunk of FeatureFlagProviding.isMediaControlsOnSiriXv2Enabled.getter(v992, v993) & 1) == 0))
            {
              v1009 = v1129;
              uint64_t v1010 = v1247;
              uint64_t v1011 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1129, v1238, v1247);
              v1012 = (os_log_s *)Logger.logObject.getter(v1011);
              os_log_type_t v1013 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v1012, v1013))
              {
                v1014 = (uint8_t *)sub_55F20(2LL);
                *(void *)&__int128 v1249 = 0LL;
                v1257[0] = 0LL;
                *(_WORD *)v1014 = 0;
                *(void *)&__int128 v1258 = v1014 + 2;
                sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
                swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                _os_log_impl( &dword_0,  v1012,  v1013,  "AudioFlowDelegatePlugin#makeFlow Intent is ambiguous shuffle, but Siri X flag(s) are disabled. Handling as play...",  v1014,  2u);
                sub_101D4((uint64_t)v1014);
              }

              else
              {

                swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
              }

              v385(v1009, v1010);
              uint64_t v1039 = v1170;
              v1040 = v1241;
              v1041 = v1240;
              uint64_t v1042 = type metadata accessor for Input(0LL);
              uint64_t v1043 = (uint64_t)v1207;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1042 - 8) + 56LL))( v1207,  1LL,  1LL,  v1042);
              uint64_t v409 = sub_110130(v1043);
              sub_1F6CC(v1043, &qword_285BD0);
              swift_release(v1040);

              uint64_t v871 = v1039;
              goto LABEL_251;
            }

            v994 = v1127;
            uint64_t v995 = v1247;
            uint64_t v996 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1127, v1238, v1247);
            v997 = (os_log_s *)Logger.logObject.getter(v996);
            os_log_type_t v998 = static os_log_type_t.default.getter();
            uint64_t v999 = swift_allocObject(&unk_271AA0, 17LL, 7LL);
            *(_BYTE *)(v999 + 16) = 34;
            uint64_t v1000 = swift_allocObject(&unk_271AC8, 17LL, 7LL);
            *(_BYTE *)(v1000 + 16) = 8;
            uint64_t v1001 = swift_allocObject(v1233, 80LL, 7LL);
            uint64_t v1002 = sub_14816C(v1001, 3LL);
            void *v1003 = sub_64F90;
            v1003[1] = v999;
            v1003[2] = sub_64F90;
            v1003[3] = v1000;
            v1003[4] = sub_FBEC;
            v1003[5] = 0LL;
            swift_retain(v999);
            swift_retain(v1000);
            swift_bridgeObjectRelease(v1002);
            if (os_log_type_enabled(v997, v998))
            {
              v1004 = (uint8_t *)sub_55F20(12LL);
              uint64_t v1005 = swift_slowAlloc(32LL, -1LL);
              v1257[0] = 0LL;
              *(void *)&v1256[0] = v1005;
              *(_WORD *)v1004 = 258;
              *(void *)&__int128 v1249 = v1004 + 2;
              *(void *)&__int128 v1258 = sub_64F90;
              *((void *)&v1258 + 1) = v999;
              uint64_t v220 = v1245;
              sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
              if (v220) {
                goto LABEL_396;
              }
              swift_release(v999);
              *(void *)&__int128 v1258 = sub_64F90;
              *((void *)&v1258 + 1) = v1000;
              sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
              swift_release(v1000);
              *(void *)&__int128 v1258 = sub_FBEC;
              *((void *)&v1258 + 1) = 0LL;
              sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
              _os_log_impl( &dword_0,  v997,  v998,  "AudioFlowDelegatePlugin#makeFlow %{public}s Intent is ambiguous shuffle, pushing AmbiguousShuffleFlow",  v1004,  0xCu);
              swift_arrayDestroy(v1005, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v1005, -1LL, -1LL);
              sub_101D4((uint64_t)v1004);

              ((void (*)(char *, uint64_t))v1237)(v994, v1247);
            }

            else
            {

              swift_release(v1000);
              swift_release(v999);
              v385(v994, v995);
            }

            uint64_t v249 = v1242;
            uint64_t v1063 = v1170;
            v1064 = v1241;
            uint64_t v1065 = sub_1127C4();
            uint64_t v409 = sub_111D28(v1065);
            swift_release(v1064);

            swift_release(v1065);
            uint64_t v1008 = v1063;
            goto LABEL_331;
          }
        }

        else
        {
          sub_DD994(v779);
          uint64_t v249 = v1242;
        }

    swift_bridgeObjectRelease(v390);
    swift_bridgeObjectRelease(v19);
    uint64_t v275 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v363, v391, v382);
    v276 = (os_log_s *)Logger.logObject.getter(v275);
    v277 = static os_log_type_t.info.getter(v276);
    if (os_log_type_enabled(v276, v277))
    {
      uint64_t v278 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v278 = 0;
      _os_log_impl( &dword_0,  v276,  v277,  "PlayMediaDialogProvider going to makeBestWorst for non-empty best or worst",  v278,  2u);
      swift_slowDealloc(v278, -1LL, -1LL);
    }

    v388(v363, v382);
    uint64_t v279 = (uint64_t)v373;
    sub_16156C(v392, (void *)v67, (uint64_t)sub_16B694, (uint64_t)v373);
    goto LABEL_200;
  }

  swift_bridgeObjectRelease(v231);
  v252 = v364;
  uint64_t v253 = v382;
  v254 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v364, v391, v382);
  id v255 = (os_log_s *)Logger.logObject.getter(v254);
  uint64_t v256 = static os_log_type_t.info.getter(v255);
  if (os_log_type_enabled(v255, v256))
  {
    uint64_t v257 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v257 = 0;
    _os_log_impl(&dword_0, v255, v256, "PlayMediaDialogProvider going to makeCreateRadio", v257, 2u);
    swift_slowDealloc(v257, -1LL, -1LL);
  }

  v388(v252, v253);
  uint64_t v258 = (uint64_t)v373;
  sub_161008(v392, v385, v67, v232, (uint64_t)sub_16B694, (uint64_t)v373);
  swift_release(v258);
  swift_bridgeObjectRelease(v231);
  swift_bridgeObjectRelease(v389);
  return swift_bridgeObjectRelease(v67);
}

LABEL_330:
        uint64_t v1006 = type metadata accessor for Input(0LL);
        uint64_t v1007 = (uint64_t)v1207;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1006 - 8) + 56LL))( v1207,  1LL,  1LL,  v1006);
        uint64_t v409 = sub_110130(v1007);
        sub_1F6CC(v1007, &qword_285BD0);
        swift_release(v1241);

        uint64_t v1008 = v513;
LABEL_331:
        sub_DD994(v1008);
        goto LABEL_100;
      }

      uint64_t v431 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
      if (swift_dynamicCastObjCClass(v364, v431))
      {
        v432 = v1178;
        v1239(v1178, v1238, v258);
        uint64_t v433 = swift_retain(v363);
        v434 = (os_log_s *)Logger.logObject.getter(v433);
        int v435 = static os_log_type_t.default.getter();
        uint64_t v436 = swift_allocObject(&unk_271960, 17LL, 7LL);
        *(_BYTE *)(v436 + 16) = 66;
        uint64_t v437 = swift_allocObject(&unk_271988, 17LL, 7LL);
        *(_BYTE *)(v437 + 16) = 8;
        uint64_t v438 = v258;
        uint64_t v439 = swift_allocObject(&unk_2719B0, 32LL, 7LL);
        *(void *)(v439 + 16) = j___s11SiriKitFlow5ParseO16ServerConversionC04siriB6IntentSo8INIntentCvg;
        *(void *)(v439 + 24) = v363;
        uint64_t v440 = swift_allocObject(&unk_2719D8, 32LL, 7LL);
        *(void *)(v440 + 16) = sub_155498;
        *(void *)(v440 + 24) = v439;
        uint64_t v441 = swift_allocObject(v1233, 80LL, 7LL);
        uint64_t v442 = sub_14816C(v441, 3LL);
        void *v443 = sub_64F90;
        v443[1] = v436;
        v443[2] = sub_64F90;
        v443[3] = v437;
        v443[4] = sub_15549C;
        v443[5] = v440;
        swift_retain(v436);
        swift_retain(v437);
        swift_retain(v440);
        swift_bridgeObjectRelease(v442);
        LODWORD(v1239) = v435;
        os_log_type_t v444 = v435;
        v445 = v434;
        if (os_log_type_enabled(v434, v444))
        {
          v446 = (uint8_t *)sub_55F20(12LL);
          uint64_t v447 = swift_slowAlloc(8LL, -1LL);
          v1257[0] = v447;
          *(void *)&v1256[0] = 0LL;
          *(_WORD *)v446 = 258;
          *(void *)&__int128 v1249 = v446 + 2;
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v436;
          uint64_t v220 = v1245;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          if (v220) {
            goto LABEL_396;
          }
          swift_release(v436);
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v437;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          swift_release(v437);
          *(void *)&__int128 v1258 = sub_15549C;
          *((void *)&v1258 + 1) = v440;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          v448 = v1240;
          v449 = v1178;
          swift_release(v440);
          _os_log_impl( &dword_0,  v445,  (os_log_type_t)v1239,  "AudioFlowDelegatePlugin#makeFlow Using SiriKitFlowFrame for INAddMediaIntent: %{public}@",  v446,  0xCu);
          uint64_t v450 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v447, 1LL, v450);
          swift_slowDealloc(v447, -1LL, -1LL);
          sub_101D4((uint64_t)v446);

          uint64_t v451 = ((uint64_t (*)(char *, uint64_t))v1237)(v449, v1247);
        }

        else
        {

          swift_release(v440);
          swift_release(v437);
          swift_release(v436);
          uint64_t v451 = ((uint64_t (*)(char *, uint64_t))v1237)(v432, v438);
          v448 = v1240;
        }

        v613 = v1241;
        v614 = (void *)Parse.ServerConversion.siriKitIntent.getter(v451);
        uint64_t v615 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
        uint64_t v616 = swift_dynamicCastObjCClass(v614, v615);
        v617 = (void *)v616;
        v618 = v1236;
        if (v616)
        {
          *(void *)&__int128 v1258 = v616;
          sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
          BOOL v619 = CommonIntentSignals.isPirene()();
          if (v619)
          {
            uint64_t v620 = static MediaPlayerPlaybackContextProvider.shared.getter(v619);
            uint64_t v621 = 2LL;
LABEL_164:
            dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(v621);
            swift_release(v620);
            v663 = v1223;
            v618(v1223, v448, v1248);
            uint64_t v664 = (uint64_t)v1171;
            Input.init(parse:)(v663);
            uint64_t v665 = type metadata accessor for Input(0LL);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v665 - 8) + 56LL))( v664,  0LL,  1LL,  v665);
            id v666 = v617;
            uint64_t v667 = sub_1526BC((uint64_t)v448);
LABEL_230:
            uint64_t v828 = v667;
            static OutputPublisherFactory.makeOutputPublisher()(&v1258, v667);
            uint64_t v409 = sub_153610(v664, (uint64_t)&v1258, v617, v828);
            swift_release(v613);

            swift_release(v828);
            sub_6C3C(&v1258);
            sub_1F6CC(v664, &qword_285BD0);
            goto LABEL_252;
          }
        }

        else
        {
        }

        uint64_t v620 = static MediaPlayerPlaybackContextProvider.shared.getter(v619);
        uint64_t v621 = 1LL;
        goto LABEL_164;
      }

      uint64_t v551 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      if (!swift_dynamicCastObjCClass(v364, v551))
      {
        uint64_t v757 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        if (!swift_dynamicCastObjCClass(v364, v757))
        {

          uint64_t v890 = v258;
          v891 = v1135;
          uint64_t v892 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1135, v1238, v890);
          v893 = (os_log_s *)Logger.logObject.getter(v892);
          os_log_type_t v894 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v893, v894))
          {
            v895 = (uint8_t *)sub_55F20(2LL);
            *(void *)&__int128 v1249 = 0LL;
            v1257[0] = 0LL;
            *(_WORD *)v895 = 0;
            *(void *)&__int128 v1258 = v895 + 2;
            sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            _os_log_impl(&dword_0, v893, v894, "AudioFlowDelegatePlugin#makeFlow Unexpected intent", v895, 2u);
            sub_101D4((uint64_t)v895);
          }

          else
          {

            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          }

          ((void (*)(char *, uint64_t))v1237)(v891, v890);
          unint64_t v965 = v1228;
          type metadata accessor for ErrorFilingProvider(0LL);
          static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000020LL,  0x8000000000221670LL,  0xD000000000000010LL,  0x80000000002216C0LL,  v965,  0x800000000021FFF0LL);
          swift_release(v363);
          goto LABEL_143;
        }

        v758 = v1147;
        v1239(v1147, v1238, v258);
        uint64_t v759 = swift_retain(v363);
        v760 = (os_log_s *)Logger.logObject.getter(v759);
        int v761 = static os_log_type_t.default.getter();
        uint64_t v762 = swift_allocObject(&unk_271820, 17LL, 7LL);
        *(_BYTE *)(v762 + 16) = 66;
        uint64_t v763 = swift_allocObject(&unk_271848, 17LL, 7LL);
        *(_BYTE *)(v763 + 16) = 8;
        uint64_t v764 = v258;
        uint64_t v765 = swift_allocObject(&unk_271870, 32LL, 7LL);
        *(void *)(v765 + 16) = j___s11SiriKitFlow5ParseO16ServerConversionC04siriB6IntentSo8INIntentCvg;
        *(void *)(v765 + 24) = v363;
        uint64_t v766 = swift_allocObject(&unk_271898, 32LL, 7LL);
        *(void *)(v766 + 16) = sub_154F7C;
        *(void *)(v766 + 24) = v765;
        uint64_t v767 = swift_allocObject(v1233, 80LL, 7LL);
        uint64_t v768 = sub_14816C(v767, 3LL);
        void *v769 = sub_64F90;
        v769[1] = v762;
        v769[2] = sub_64F90;
        v769[3] = v763;
        v769[4] = sub_1645C;
        v769[5] = v766;
        swift_retain(v762);
        swift_retain(v763);
        swift_retain(v766);
        swift_bridgeObjectRelease(v768);
        LODWORD(v1240) = v761;
        os_log_type_t v770 = v761;
        v771 = v760;
        if (os_log_type_enabled(v760, v770))
        {
          v772 = (uint8_t *)sub_55F20(12LL);
          uint64_t v773 = swift_slowAlloc(8LL, -1LL);
          v1257[0] = v773;
          *(void *)&v1256[0] = 0LL;
          *(_WORD *)v772 = 258;
          *(void *)&__int128 v1249 = v772 + 2;
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v762;
          uint64_t v220 = v1245;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          if (v220) {
            goto LABEL_396;
          }
          swift_release(v762);
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v763;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          swift_release(v763);
          *(void *)&__int128 v1258 = sub_1645C;
          *((void *)&v1258 + 1) = v766;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          v774 = v1147;
          swift_release(v766);
          _os_log_impl( &dword_0,  v771,  (os_log_type_t)v1240,  "AudioFlowDelegatePlugin#makeFlow Using SiriKitFlowFrame for INSearchForMediaIntent: %{public}@",  v772,  0xCu);
          uint64_t v775 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v773, 1LL, v775);
          swift_slowDealloc(v773, -1LL, -1LL);
          sub_101D4((uint64_t)v772);

          v776 = v774;
          uint64_t v777 = v1247;
        }

        else
        {

          swift_release(v766);
          swift_release(v763);
          swift_release(v762);
          v776 = v758;
          uint64_t v777 = v764;
        }

        uint64_t v896 = ((uint64_t (*)(char *, uint64_t))v1237)(v776, v777);
        v897 = (void *)Parse.ServerConversion.siriKitIntent.getter(v896);
        uint64_t v898 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        uint64_t v899 = swift_dynamicCastObjCClass(v897, v898);
        if (v899)
        {
          *(void *)&__int128 v1258 = v899;
          sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
          BOOL v900 = CommonIntentSignals.isPirene()();
          BOOL v901 = v900;
          uint64_t v902 = static MediaPlayerPlaybackContextProvider.shared.getter(v900);
          if (v901) {
            uint64_t v903 = 2LL;
          }
          else {
            uint64_t v903 = 1LL;
          }
          dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(v903);
          swift_release(v902);
        }

        uint64_t v904 = sub_6C5C(&qword_28B210);
        *(void *)&__int128 v1258 = *sub_1831E0();
        swift_retain(v1258);
        uint64_t v905 = *sub_183220();
        swift_retain(v905);
        uint64_t v906 = RCHFlow.__allocating_init(strategy:childFlowFactory:)(&v1258, v905);
        *(void *)&__int128 v1258 = v906;
        uint64_t v907 = sub_21318( (unint64_t *)&qword_28B218,  &qword_28B210,  (uint64_t)&protocol conformance descriptor for RCHFlow<A>);
        uint64_t v409 = Flow.eraseToAnyFlow()(v904, v907);
        swift_release(v906);
        swift_release(v1241);

LABEL_252:
        (*(void (**)(char *, void *))(v1243 + 8))(v1217, v1244);
        goto LABEL_253;
      }

      v552 = v1163;
      v1239(v1163, v1238, v258);
      uint64_t v553 = swift_retain(v363);
      v554 = (os_log_s *)Logger.logObject.getter(v553);
      int v555 = static os_log_type_t.default.getter();
      uint64_t v556 = swift_allocObject(&unk_2718C0, 17LL, 7LL);
      *(_BYTE *)(v556 + 16) = 66;
      uint64_t v557 = swift_allocObject(&unk_2718E8, 17LL, 7LL);
      *(_BYTE *)(v557 + 16) = 8;
      uint64_t v558 = v258;
      uint64_t v559 = swift_allocObject(&unk_271910, 32LL, 7LL);
      *(void *)(v559 + 16) = j___s11SiriKitFlow5ParseO16ServerConversionC04siriB6IntentSo8INIntentCvg;
      *(void *)(v559 + 24) = v363;
      uint64_t v560 = swift_allocObject(&unk_271938, 32LL, 7LL);
      *(void *)(v560 + 16) = sub_155498;
      *(void *)(v560 + 24) = v559;
      uint64_t v561 = swift_allocObject(v1233, 80LL, 7LL);
      uint64_t v562 = sub_14816C(v561, 3LL);
      void *v563 = sub_64F90;
      v563[1] = v556;
      v563[2] = sub_64F90;
      v563[3] = v557;
      v563[4] = sub_15549C;
      v563[5] = v560;
      swift_retain(v556);
      swift_retain(v557);
      swift_retain(v560);
      swift_bridgeObjectRelease(v562);
      LODWORD(v1239) = v555;
      os_log_type_t v564 = v555;
      v565 = v554;
      if (os_log_type_enabled(v554, v564))
      {
        v566 = (uint8_t *)sub_55F20(12LL);
        uint64_t v567 = swift_slowAlloc(8LL, -1LL);
        v1257[0] = v567;
        *(void *)&v1256[0] = 0LL;
        *(_WORD *)v566 = 258;
        *(void *)&__int128 v1249 = v566 + 2;
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v556;
        uint64_t v220 = v1245;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        if (v220) {
          goto LABEL_396;
        }
        swift_release(v556);
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v557;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        swift_release(v557);
        *(void *)&__int128 v1258 = sub_15549C;
        *((void *)&v1258 + 1) = v560;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        v568 = v1240;
        v569 = v1163;
        swift_release(v560);
        _os_log_impl( &dword_0,  v565,  (os_log_type_t)v1239,  "AudioFlowDelegatePlugin#makeFlow Using SiriKitFlowFrame for INUpdateMediaAffinityIntent: %{public}@",  v566,  0xCu);
        uint64_t v570 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v567, 1LL, v570);
        swift_slowDealloc(v567, -1LL, -1LL);
        sub_101D4((uint64_t)v566);

        uint64_t v571 = ((uint64_t (*)(char *, uint64_t))v1237)(v569, v1247);
      }

      else
      {

        swift_release(v560);
        swift_release(v557);
        swift_release(v556);
        uint64_t v571 = ((uint64_t (*)(char *, uint64_t))v1237)(v552, v558);
        v568 = v1240;
      }

      v613 = v1241;
      v810 = (void *)Parse.ServerConversion.siriKitIntent.getter(v571);
      uint64_t v811 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v812 = swift_dynamicCastObjCClass(v810, v811);
      v617 = (void *)v812;
      v813 = v1236;
      if (v812)
      {
        *(void *)&__int128 v1258 = v812;
        sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        BOOL v814 = CommonIntentSignals.isPirene()();
        if (v814)
        {
          uint64_t v815 = static MediaPlayerPlaybackContextProvider.shared.getter(v814);
          uint64_t v816 = 2LL;
LABEL_229:
          dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(v816);
          swift_release(v815);
          v826 = v1223;
          v813(v1223, v568, v1248);
          uint64_t v664 = (uint64_t)v1155;
          Input.init(parse:)(v826);
          uint64_t v827 = type metadata accessor for Input(0LL);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v827 - 8) + 56LL))( v664,  0LL,  1LL,  v827);
          id v666 = v617;
          uint64_t v667 = sub_152974((uint64_t)v568);
          goto LABEL_230;
        }
      }

      else
      {
      }

      uint64_t v815 = static MediaPlayerPlaybackContextProvider.shared.getter(v814);
      uint64_t v816 = 1LL;
      goto LABEL_229;
    }

    if (v350 == enum case for Parse.directInvocation(_:))
    {
      v398 = v1203;
      uint64_t v399 = v1248;
      v240(v1203, v1246, v1248);
      (*(void (**)(char *, uint64_t))(v249 + 96))(v398, v399);
      uint64_t v400 = v1189;
      v401 = *(uint64_t (**)(char *, char *, uint64_t))(v1189 + 16);
      uint64_t v402 = v401(v1199, v398, v1206);
      uint64_t v403 = Parse.DirectInvocation.identifier.getter(v402);
      uint64_t v405 = v404;
      uint64_t v406 = sub_1CB318(0);
      uint64_t v408 = v407;
      if (v403 == v406 && v405 == v407)
      {
        swift_bridgeObjectRelease_n(v405, 2LL);
LABEL_91:
        uint64_t v479 = type metadata accessor for Input(0LL);
        uint64_t v480 = (uint64_t)v1207;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v479 - 8) + 56LL))( v1207,  1LL,  1LL,  v479);
        uint64_t v409 = sub_110130(v480);
        sub_1F6CC(v480, &qword_285BD0);
        v481 = *(void (**)(char *, uint64_t))(v400 + 8);
        uint64_t v482 = v1206;
        v481(v1199, v1206);
        v481(v1203, v482);
        goto LABEL_254;
      }

      char v478 = _stringCompareWithSmolCheck(_:_:expecting:)(v403, v405);
      swift_bridgeObjectRelease(v405);
      swift_bridgeObjectRelease(v408);
      if ((v478 & 1) != 0) {
        goto LABEL_91;
      }
      v593 = *(void (**)(char *, uint64_t))(v400 + 8);
      uint64_t v594 = v1206;
      v593(v1199, v1206);
      uint64_t v595 = (uint64_t)v1169;
      uint64_t v596 = v401(v1169, v1203, v594);
      uint64_t v597 = Parse.DirectInvocation.identifier.getter(v596);
      uint64_t v599 = v598;
      uint64_t v600 = sub_1CB318(1u);
      uint64_t v602 = v601;
      v1244 = v593;
      if (v597 == v600 && v599 == v601)
      {
        swift_bridgeObjectRelease_n(v599, 2LL);
        v603 = v1166;
        goto LABEL_178;
      }

      char v689 = _stringCompareWithSmolCheck(_:_:expecting:)(v597, v599);
      swift_bridgeObjectRelease(v599);
      swift_bridgeObjectRelease(v602);
      v603 = v1166;
      if ((v689 & 1) != 0)
      {
LABEL_178:
        v1239(v603, v1238, v258);
        v690 = v1158;
        uint64_t v691 = v595;
        uint64_t v692 = v1206;
        v401(v1158, (char *)v691, v1206);
        uint64_t v693 = *(unsigned __int8 *)(v400 + 80);
        uint64_t v694 = (v693 + 16) & ~v693;
        uint64_t v695 = swift_allocObject(&unk_271690, v694 + v1157, v693 | 7);
        uint64_t v696 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v400 + 32))(v695 + v694, v690, v692);
        v697 = (os_log_s *)Logger.logObject.getter(v696);
        LODWORD(v690) = static os_log_type_t.default.getter();
        uint64_t v698 = swift_allocObject(&unk_2716B8, 17LL, 7LL);
        *(_BYTE *)(v698 + 16) = 34;
        uint64_t v699 = swift_allocObject(&unk_2716E0, 17LL, 7LL);
        *(_BYTE *)(v699 + 16) = 8;
        uint64_t v700 = swift_allocObject(&unk_271708, 32LL, 7LL);
        *(void *)(v700 + 16) = sub_154E24;
        *(void *)(v700 + 24) = v695;
        uint64_t v701 = swift_allocObject(&unk_271730, 32LL, 7LL);
        *(void *)(v701 + 16) = sub_64F88;
        *(void *)(v701 + 24) = v700;
        uint64_t v702 = swift_allocObject(v1233, 80LL, 7LL);
        uint64_t v703 = sub_14816C(v702, 3LL);
        void *v704 = sub_64F90;
        v704[1] = v698;
        v704[2] = sub_64F90;
        v704[3] = v699;
        v704[4] = sub_64F8C;
        v704[5] = v701;
        swift_retain(v698);
        swift_retain(v699);
        swift_retain(v701);
        swift_bridgeObjectRelease(v703);
        LODWORD(v1243) = (_DWORD)v690;
        if (os_log_type_enabled(v697, (os_log_type_t)v690))
        {
          v705 = (uint8_t *)sub_55F20(12LL);
          uint64_t v706 = swift_slowAlloc(32LL, -1LL);
          v1257[0] = 0LL;
          *(void *)&v1256[0] = v706;
          *(_WORD *)v705 = 258;
          *(void *)&__int128 v1249 = v705 + 2;
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v698;
          uint64_t v220 = v1245;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          if (v220) {
            goto LABEL_396;
          }
          swift_release(v698);
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v699;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          swift_release(v699);
          *(void *)&__int128 v1258 = sub_64F8C;
          *((void *)&v1258 + 1) = v701;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          uint64_t v707 = v1242;
          uint64_t v708 = v1247;
          v709 = (void (*)(char *, uint64_t))v1237;
          swift_release(v701);
          _os_log_impl( &dword_0,  v697,  (os_log_type_t)v1243,  "AudioFlowDelegatePlugin#makeFlow Using SiriKitFlow for invocation: %{public}s",  v705,  0xCu);
          swift_arrayDestroy(v706, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v706, -1LL, -1LL);
          sub_101D4((uint64_t)v705);

          v709(v1166, v708);
        }

        else
        {

          swift_release(v701);
          swift_release(v699);
          swift_release(v698);
          ((void (*)(char *, uint64_t))v1237)(v603, v1247);
          uint64_t v707 = v1242;
        }

        uint64_t v790 = (uint64_t)v1169;
        uint64_t v791 = sub_1CF340((uint64_t)v1169, (uint64_t)&v1258);
        static OutputPublisherFactory.makeOutputPublisher()(&v1249, v791);
        uint64_t v792 = type metadata accessor for AudioFlowProvider();
        uint64_t v793 = swift_allocObject(v792, 16LL, 7LL);
        v1257[3] = v792;
        v1257[4] = &off_26FF60;
        v1257[0] = v793;
        if (qword_283988 != -1) {
          swift_once(&qword_283988, sub_1E4118);
        }
        uint64_t v794 = static PlayMedia.flowStrategy;
        swift_retain(static PlayMedia.flowStrategy);
        uint64_t v795 = sub_152CC8();
        uint64_t v796 = sub_1094C((uint64_t)v1257, v792);
        __chkstk_darwin(v796);
        v798 = (uint64_t *)((char *)&v1116 - ((v797 + 15) & 0xFFFFFFFFFFFFFFF0LL));
        (*(void (**)(uint64_t *))(v799 + 16))(v798);
        uint64_t v800 = sub_15428C((uint64_t)&v1258, &v1249, *v798, v794, v795);
        sub_6C3C(v1257);
        *(void *)&__int128 v1249 = v800;
        uint64_t v801 = type metadata accessor for DirectActionAudioSearchFlow(0LL);
        uint64_t v802 = sub_6DF0( &qword_28B1F8,  255LL,  type metadata accessor for DirectActionAudioSearchFlow,  (uint64_t)&unk_2196A0);
        uint64_t v409 = Flow.eraseToAnyFlow()(v801, v802);
        swift_release(v800);
        uint64_t v803 = v1206;
        v804 = v1244;
        v1244((char *)v790, v1206);
        v804(v1203, v803);
        uint64_t v249 = v707;
        goto LABEL_254;
      }

      uint64_t v829 = v1206;
      v593((char *)v595, v1206);
      v830 = v1148;
      uint64_t v831 = v401(v1148, v1203, v829);
      uint64_t v832 = Parse.DirectInvocation.identifier.getter(v831);
      uint64_t v834 = v833;
      uint64_t v835 = sub_1CB318(4u);
      uint64_t v837 = v836;
      if (v832 == v835 && v834 == v836)
      {
        swift_bridgeObjectRelease_n(v834, 2LL);
        v838 = v1143;
        goto LABEL_287;
      }

      char v908 = _stringCompareWithSmolCheck(_:_:expecting:)(v832, v834);
      swift_bridgeObjectRelease(v834);
      swift_bridgeObjectRelease(v837);
      v838 = v1143;
      if ((v908 & 1) != 0)
      {
LABEL_287:
        v1239(v838, v1238, v258);
        v909 = v1158;
        v910 = v830;
        uint64_t v911 = v1206;
        v401(v1158, v910, v1206);
        uint64_t v912 = *(unsigned __int8 *)(v400 + 80);
        uint64_t v913 = (v912 + 16) & ~v912;
        uint64_t v914 = swift_allocObject(&unk_2715C8, v913 + v1157, v912 | 7);
        uint64_t v915 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v400 + 32))(v914 + v913, v909, v911);
        v916 = (os_log_s *)Logger.logObject.getter(v915);
        LODWORD(v909) = static os_log_type_t.default.getter();
        uint64_t v917 = swift_allocObject(&unk_2715F0, 17LL, 7LL);
        *(_BYTE *)(v917 + 16) = 34;
        uint64_t v918 = swift_allocObject(&unk_271618, 17LL, 7LL);
        *(_BYTE *)(v918 + 16) = 8;
        uint64_t v919 = swift_allocObject(&unk_271640, 32LL, 7LL);
        *(void *)(v919 + 16) = sub_154E24;
        *(void *)(v919 + 24) = v914;
        uint64_t v920 = swift_allocObject(&unk_271668, 32LL, 7LL);
        *(void *)(v920 + 16) = sub_64F88;
        *(void *)(v920 + 24) = v919;
        uint64_t v921 = swift_allocObject(v1233, 80LL, 7LL);
        uint64_t v922 = sub_14816C(v921, 3LL);
        void *v923 = sub_64F90;
        v923[1] = v917;
        v923[2] = sub_64F90;
        v923[3] = v918;
        v923[4] = sub_64F8C;
        v923[5] = v920;
        swift_retain(v917);
        swift_retain(v918);
        swift_retain(v920);
        swift_bridgeObjectRelease(v922);
        LODWORD(v1243) = (_DWORD)v909;
        if (os_log_type_enabled(v916, (os_log_type_t)v909))
        {
          v924 = (uint8_t *)sub_55F20(12LL);
          uint64_t v925 = swift_slowAlloc(32LL, -1LL);
          v1257[0] = 0LL;
          *(void *)&v1256[0] = v925;
          *(_WORD *)v924 = 258;
          *(void *)&__int128 v1249 = v924 + 2;
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v917;
          uint64_t v220 = v1245;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          if (v220) {
            goto LABEL_396;
          }
          swift_release(v917);
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v918;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          swift_release(v918);
          *(void *)&__int128 v1258 = sub_64F8C;
          *((void *)&v1258 + 1) = v920;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          uint64_t v926 = v1247;
          v927 = (void (*)(char *, uint64_t))v1237;
          swift_release(v920);
          _os_log_impl( &dword_0,  v916,  (os_log_type_t)v1243,  "AudioFlowDelegatePlugin#makeFlow Got Acoustic ID reformation from appLaunch: %{public}s",  v924,  0xCu);
          swift_arrayDestroy(v925, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v925, -1LL, -1LL);
          sub_101D4((uint64_t)v924);

          v927(v1143, v926);
        }

        else
        {

          swift_release(v920);
          swift_release(v918);
          swift_release(v917);
          ((void (*)(char *, uint64_t))v1237)(v838, v1247);
        }

        uint64_t v951 = type metadata accessor for Input(0LL);
        uint64_t v952 = (uint64_t)v1207;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v951 - 8) + 56LL))( v1207,  1LL,  1LL,  v951);
        uint64_t v953 = v1186;
        sub_10D7D8(v1186);
        sub_10D808(&v1258);
        sub_10D8DC((uint64_t *)&v1249);
        v954 = j___s11SiriKitFlow10AceServiceO12currentAsyncAA0de7InvokerG0_pvgZ(v1257);
        uint64_t v955 = sub_64FA8(v954);
        j___s11SiriKitFlow22OutputPublisherFactoryO04makedE0AA0dE0_pyFZ(v1256, v955);
        sub_10D900(v1255);
        sub_10D964(v1254);
        sub_10D980(v1253);
        sub_10D9E8(v1251);
        uint64_t v956 = sub_1094C((uint64_t)v1251, v1252);
        __chkstk_darwin(v956);
        v958 = (uint64_t *)((char *)&v1116 - ((v957 + 15) & 0xFFFFFFFFFFFFFFF0LL));
        (*(void (**)(uint64_t *))(v959 + 16))(v958);
        uint64_t v960 = sub_10EC08(v952, v953, &v1258, &v1249, v1257, v955, v1256, v1255, v1254, v1253, *v958);
        sub_6C3C(v1251);
        *(void *)&__int128 v1258 = v960;
        uint64_t v961 = type metadata accessor for AcousticIDFlow(0LL);
        uint64_t v962 = sub_6DF0(&qword_289EC0, 255LL, type metadata accessor for AcousticIDFlow, (uint64_t)&unk_218768);
        uint64_t v409 = Flow.eraseToAnyFlow()(v961, v962);
        swift_release(v960);
        uint64_t v963 = v1206;
        v964 = v1244;
        v1244(v1148, v1206);
        v964(v1203, v963);
        goto LABEL_253;
      }

      uint64_t v973 = v1206;
      v593(v830, v1206);
      v974 = *(uint64_t (**)(char *, char *, uint64_t))(v400 + 32);
      v975 = v1134;
      uint64_t v976 = v974(v1134, v1203, v973);
      uint64_t v977 = Parse.DirectInvocation.identifier.getter(v976);
      uint64_t v979 = v978;
      uint64_t v980 = sub_1CB318(5u);
      uint64_t v982 = v981;
      if (v977 == v980 && v979 == v981)
      {
        swift_bridgeObjectRelease_n(v979, 2LL);
        v983 = v1131;
        goto LABEL_337;
      }

      char v1015 = _stringCompareWithSmolCheck(_:_:expecting:)(v977, v979);
      swift_bridgeObjectRelease(v979);
      swift_bridgeObjectRelease(v982);
      v983 = v1131;
      if ((v1015 & 1) != 0)
      {
LABEL_337:
        uint64_t v1016 = v1247;
        v1239(v983, v1238, v1247);
        v1017 = v1158;
        v1018 = v975;
        uint64_t v1019 = v1206;
        v401(v1158, v1018, v1206);
        uint64_t v1020 = *(unsigned __int8 *)(v1189 + 80);
        uint64_t v1021 = (v1020 + 16) & ~v1020;
        uint64_t v1022 = swift_allocObject(&unk_271500, v1021 + v1157, v1020 | 7);
        uint64_t v1023 = v974((char *)(v1022 + v1021), v1017, v1019);
        v1024 = (os_log_s *)Logger.logObject.getter(v1023);
        int v1025 = static os_log_type_t.default.getter();
        uint64_t v1026 = swift_allocObject(&unk_271528, 17LL, 7LL);
        *(_BYTE *)(v1026 + 16) = 34;
        uint64_t v1027 = swift_allocObject(&unk_271550, 17LL, 7LL);
        *(_BYTE *)(v1027 + 16) = 8;
        uint64_t v1028 = swift_allocObject(&unk_271578, 32LL, 7LL);
        *(void *)(v1028 + 16) = sub_154E24;
        *(void *)(v1028 + 24) = v1022;
        uint64_t v1029 = swift_allocObject(&unk_2715A0, 32LL, 7LL);
        *(void *)(v1029 + 16) = sub_64F88;
        *(void *)(v1029 + 24) = v1028;
        uint64_t v1030 = swift_allocObject(v1233, 80LL, 7LL);
        uint64_t v1031 = sub_14816C(v1030, 3LL);
        void *v1032 = sub_64F90;
        v1032[1] = v1026;
        v1032[2] = sub_64F90;
        v1032[3] = v1027;
        v1032[4] = sub_64F8C;
        v1032[5] = v1029;
        swift_retain(v1026);
        swift_retain(v1027);
        swift_retain(v1029);
        swift_bridgeObjectRelease(v1031);
        LODWORD(v1243) = v1025;
        if (os_log_type_enabled(v1024, (os_log_type_t)v1025))
        {
          v1033 = (uint8_t *)sub_55F20(12LL);
          uint64_t v1034 = swift_slowAlloc(32LL, -1LL);
          v1257[0] = 0LL;
          *(void *)&v1256[0] = v1034;
          *(_WORD *)v1033 = 258;
          *(void *)&__int128 v1249 = v1033 + 2;
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v1026;
          uint64_t v220 = v1245;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          if (v220) {
            goto LABEL_396;
          }
          swift_release(v1026);
          *(void *)&__int128 v1258 = sub_64F90;
          *((void *)&v1258 + 1) = v1027;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          swift_release(v1027);
          *(void *)&__int128 v1258 = sub_64F8C;
          *((void *)&v1258 + 1) = v1029;
          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
          uint64_t v1035 = v1242;
          uint64_t v1036 = v1247;
          v1037 = (void (*)(char *, uint64_t))v1237;
          v1038 = v1244;
          swift_release(v1029);
          _os_log_impl( &dword_0,  v1024,  (os_log_type_t)v1243,  "AudioFlowDelegatePlugin#makeFlow Got PlayMediaShim invocation: %{public}s",  v1033,  0xCu);
          swift_arrayDestroy(v1034, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v1034, -1LL, -1LL);
          sub_101D4((uint64_t)v1033);

          v1037(v1131, v1036);
        }

        else
        {

          swift_release(v1029);
          swift_release(v1027);
          swift_release(v1026);
          ((void (*)(char *, uint64_t))v1237)(v983, v1016);
          uint64_t v1035 = v1242;
          v1038 = v1244;
        }

        v1044 = v1223;
        v1236(v1223, v1240, v1248);
        uint64_t v1045 = (uint64_t)v1207;
        Input.init(parse:)(v1044);
        uint64_t v1046 = type metadata accessor for Input(0LL);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v1046 - 8) + 56LL))( v1045,  0LL,  1LL,  v1046);
        uint64_t v1047 = sub_110130(v1045);
        sub_1F6CC(v1045, &qword_285BD0);
        *(void *)&__int128 v1258 = v1047;
        uint64_t v1048 = type metadata accessor for AnyFlow(0LL);
        uint64_t v409 = Flow.eraseToAnyFlow()(v1048, &protocol witness table for AnyFlow);
        swift_release(v1047);
        v1038(v1134, v1206);
        uint64_t v249 = v1035;
        goto LABEL_254;
      }

      v593(v975, v1206);
      uint64_t v249 = v1242;
      uint64_t v258 = v1247;
LABEL_345:
      v1049 = v1162;
      uint64_t v1050 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1162, v1238, v258);
      v1051 = (os_log_s *)Logger.logObject.getter(v1050);
      os_log_type_t v1052 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v1051, v1052))
      {
        v1053 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v1053 = 0;
        *(void *)&__int128 v1258 = v1053 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl( &dword_0,  v1051,  v1052,  "AudioFlowDelegatePlugin#makeFlow unexpected parse type. Rejecting...",  v1053,  2u);
        sub_101D4((uint64_t)v1053);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      ((void (*)(char *, uint64_t))v1237)(v1049, v258);
      type metadata accessor for ErrorFilingProvider(0LL);
      static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000020LL,  0x8000000000221670LL,  0xD000000000000013LL,  0x80000000002216A0LL,  0x776F6C466F4ELL,  0xE600000000000000LL);
      goto LABEL_61;
    }

    if (v350 == enum case for Parse.pommesResponse(_:))
    {
      v414 = v1172;
      uint64_t v415 = v1248;
      v240((char *)v1172, v1246, v1248);
      (*(void (**)(void **, uint64_t))(v249 + 96))(v414, v415);
      v416 = *v414;
      v417 = v1181;
      v1239(v1181, v1238, v258);
      uint64_t v418 = v258;
      uint64_t v419 = swift_allocObject(&unk_271758, 24LL, 7LL);
      *(void *)(v419 + 16) = v416;
      v1244 = v416;
      v420 = (os_log_s *)Logger.logObject.getter(v1244);
      LODWORD(v414) = static os_log_type_t.default.getter();
      uint64_t v421 = swift_allocObject(&unk_271780, 17LL, 7LL);
      *(_BYTE *)(v421 + 16) = 32;
      uint64_t v422 = swift_allocObject(&unk_2717A8, 17LL, 7LL);
      *(_BYTE *)(v422 + 16) = 8;
      uint64_t v423 = swift_allocObject(&unk_2717D0, 32LL, 7LL);
      *(void *)(v423 + 16) = sub_154F0C;
      *(void *)(v423 + 24) = v419;
      uint64_t v424 = swift_allocObject(&unk_2717F8, 32LL, 7LL);
      *(void *)(v424 + 16) = sub_64F88;
      *(void *)(v424 + 24) = v423;
      uint64_t v425 = swift_allocObject(v1233, 80LL, 7LL);
      uint64_t v426 = sub_14816C(v425, 3LL);
      void *v427 = sub_64F90;
      v427[1] = v421;
      v427[2] = sub_64F90;
      v427[3] = v422;
      v427[4] = sub_64F8C;
      v427[5] = v424;
      swift_retain(v421);
      swift_retain(v422);
      swift_retain(v424);
      swift_bridgeObjectRelease(v426);
      LODWORD(v1243) = (_DWORD)v414;
      if (os_log_type_enabled(v420, (os_log_type_t)v414))
      {
        v428 = (uint8_t *)sub_55F20(12LL);
        uint64_t v429 = swift_slowAlloc(32LL, -1LL);
        v1257[0] = 0LL;
        *(void *)&v1256[0] = v429;
        *(_WORD *)v428 = 258;
        *(void *)&__int128 v1249 = v428 + 2;
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v421;
        uint64_t v220 = v1245;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        if (v220) {
          goto LABEL_396;
        }
        swift_release(v421);
        *(void *)&__int128 v1258 = sub_64F90;
        *((void *)&v1258 + 1) = v422;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        swift_release(v422);
        *(void *)&__int128 v1258 = sub_64F8C;
        *((void *)&v1258 + 1) = v424;
        sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
        uint64_t v1245 = 0LL;
        swift_release(v424);
        _os_log_impl( &dword_0,  v420,  (os_log_type_t)v1243,  "AudioFlowDelegatePlugin#makeFlow Received .pommesResponse parse: %s",  v428,  0xCu);
        swift_arrayDestroy(v429, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v429, -1LL, -1LL);
        sub_101D4((uint64_t)v428);

        uint64_t v430 = v1247;
        ((void (*)(char *, uint64_t))v1237)(v1181, v1247);
      }

      else
      {

        swift_release(v424);
        swift_release(v422);
        swift_release(v421);
        ((void (*)(char *, uint64_t))v1237)(v417, v418);
        uint64_t v430 = v418;
      }

      v572 = v1240;
      uint64_t v573 = (uint64_t)v1182;
      uint64_t v1260 = 0LL;
      __int128 v1258 = 0u;
      __int128 v1259 = 0u;
      v574 = v1244;
      static CurareDonation.donateCurareResponseUsedMarker(from:into:)(v1244, &v1258);
      uint64_t v575 = sub_1F6CC((uint64_t)&v1258, &qword_28B200);
      uint64_t v576 = PommesResponse.componentsWarmedUp.getter(v575);
      uint64_t v578 = (uint64_t)v1173;
      uint64_t v577 = v1174;
      uint64_t v579 = v1175;
      (*(void (**)(char *, void, uint64_t))(v1174 + 104))( v1173,  enum case for WarmupComponent.audioPluginWarmup(_:),  v1175);
      char v580 = sub_88340(v578, v576);
      (*(void (**)(uint64_t, uint64_t))(v577 + 8))(v578, v579);
      uint64_t v581 = swift_bridgeObjectRelease(v576);
      if ((v580 & 1) == 0)
      {
        static ExecutorProvider.shared.getter(&v1258);
        uint64_t v582 = *((void *)&v1259 + 1);
        uint64_t v583 = v1260;
        sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
        uint64_t v584 = v583;
        uint64_t v573 = (uint64_t)v1182;
        v572 = v1240;
        uint64_t v585 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v582, v584);
        if (v586) {
          uint64_t v587 = v585;
        }
        else {
          uint64_t v587 = 0LL;
        }
        if (v586) {
          unint64_t v588 = v586;
        }
        else {
          unint64_t v588 = 0xE000000000000000LL;
        }
        sub_6C3C(&v1258);
        sub_14F704(v587, v588);
        uint64_t v581 = swift_bridgeObjectRelease(v588);
      }

      uint64_t v589 = static MediaPlayerPlaybackContextProvider.shared.getter(v581);
      dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(3LL);
      uint64_t v590 = swift_release(v589);
      Parse.firstNLUUserDialogAct()(v590);
      uint64_t v591 = v1183;
      uint64_t v592 = v1184;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1183 + 48))(v573, 1LL, v1184) == 1)
      {
        sub_1F6CC(v573, &qword_2845D0);
      }

      else
      {
        v604 = v1161;
        uint64_t v605 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v591 + 32))(v1161, v573, v592);
        uint64_t v606 = v591;
        uint64_t v607 = static MediaPlayerPlaybackContextProvider.shared.getter(v605);
        dispatch thunk of MediaPlayerPlaybackContextProvider.setUserDialogAct(to:)(v604);
        swift_release(v607);
        (*(void (**)(char *, uint64_t))(v606 + 8))(v604, v592);
      }

      sub_B7C84(v572, (uint64_t)&v1249);
      if (v1250)
      {
        sub_49B60(&v1249, &v1258);
        sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
        if (AudioIntent.isAirPlayMusicWithoutAppName()())
        {
          v608 = v1154;
          uint64_t v609 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1154, v1238, v430);
          v610 = (os_log_s *)Logger.logObject.getter(v609);
          os_log_type_t v611 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v610, v611))
          {
            v612 = (uint8_t *)sub_55F20(2LL);
            v1257[0] = 0LL;
            *(void *)&v1256[0] = 0LL;
            *(_WORD *)v612 = 0;
            *(void *)&__int128 v1249 = v612 + 2;
            sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1249, (uint64_t)v1257, (uint64_t)v1256);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            _os_log_impl( &dword_0,  v610,  v611,  "AudioFlowDelegatePlugin#makeFlow#pommesResponse This is an AirPlay request without an app name, returning first audio play flow",  v612,  2u);
            sub_101D4((uint64_t)v612);
          }

          else
          {

            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          }

          ((void (*)(char *, uint64_t))v1237)(v608, v430);
          uint64_t v817 = type metadata accessor for Input(0LL);
          uint64_t v818 = (uint64_t)v1207;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v817 - 8) + 56LL))( v1207,  1LL,  1LL,  v817);
          uint64_t v409 = sub_110130(v818);
          sub_1F6CC(v818, &qword_285BD0);
LABEL_226:

          sub_6C3C(&v1258);
          goto LABEL_253;
        }

        uint64_t v662 = sub_6C3C(&v1258);
      }

      else
      {
        uint64_t v662 = sub_1F6CC((uint64_t)&v1249, &qword_2848C0);
      }

      uint64_t v668 = Parse.firstUsoTask()(v662);
      if (v668)
      {
        uint64_t v669 = v668;
        if (sub_10574() || (sub_4A218() & 1) != 0 || (sub_49CA0() & 1) != 0)
        {
          v670 = v1204;
          uint64_t v671 = v1204[15];
          uint64_t v672 = v1204[16];
          sub_6EA8(v1204 + 12, v671);
          if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v671, v672) & 1) != 0)
          {
            uint64_t v673 = v670[15];
            uint64_t v674 = v670[16];
            sub_6EA8(v670 + 12, v673);
            if ((dispatch thunk of FeatureFlagProviding.isMediaControlsOnSiriXv2Enabled.getter(v673, v674) & 1) != 0)
            {
              v675 = v1136;
              uint64_t v676 = v1247;
              uint64_t v677 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1136, v1238, v1247);
              v678 = (os_log_s *)Logger.logObject.getter(v677);
              os_log_type_t v679 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v678, v679))
              {
                v680 = (uint8_t *)sub_55F20(2LL);
                *(void *)&__int128 v1249 = 0LL;
                v1257[0] = 0LL;
                *(_WORD *)v680 = 0;
                *(void *)&__int128 v1258 = v680 + 2;
                sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
                swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                _os_log_impl( &dword_0,  v678,  v679,  "AudioFlowDelegatePlugin#makeFlow Returning AmbiguousShuffleFlow",  v680,  2u);
                sub_101D4((uint64_t)v680);
              }

              else
              {

                swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
              }

              ((void (*)(char *, uint64_t))v1237)(v675, v676);
              sub_6EA8(v1204 + 2, v1204[5]);
              sub_10690((uint64_t *)&v1258);
              uint64_t v948 = *((void *)&v1259 + 1);
              uint64_t v949 = v1260;
              sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
              uint64_t v950 = Flow.eraseToAnyFlow()(v948, v949);
              uint64_t v409 = sub_111D28(v950);
              swift_release(v950);
              swift_release(v669);
              goto LABEL_226;
            }
          }

          v683 = v1152;
          uint64_t v430 = v1247;
          uint64_t v684 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1152, v1238, v1247);
          v685 = (os_log_s *)Logger.logObject.getter(v684);
          os_log_type_t v686 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v685, v686))
          {
            v687 = (uint8_t *)sub_55F20(2LL);
            *(void *)&__int128 v1249 = 0LL;
            v1257[0] = 0LL;
            *(_WORD *)v687 = 0;
            *(void *)&__int128 v1258 = v687 + 2;
            uint64_t v688 = v1245;
            sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
            uint64_t v1245 = v688;
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            _os_log_impl( &dword_0,  v685,  v686,  "AudioFlowDelegatePlugin#makeFlow Task is shuffle::MediaItem parse, but Siri X flag(s) are disabled. Fallin g through to PommesResponseFlow...",  v687,  2u);
            uint64_t v430 = v1247;
            sub_101D4((uint64_t)v687);
          }

          else
          {

            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          }

          swift_release(v669);
          ((void (*)(char *, uint64_t))v1237)(v683, v430);
        }

        else
        {
          swift_release(v669);
        }
      }

      v819 = v1164;
      uint64_t v820 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1164, v1238, v430);
      v821 = (os_log_s *)Logger.logObject.getter(v820);
      os_log_type_t v822 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v821, v822))
      {
        v823 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v823 = 0;
        *(void *)&__int128 v1258 = v823 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl(&dword_0, v821, v822, "AudioFlowDelegatePlugin#makeFlow Returning PommesResponseFlow", v823, 2u);
        sub_101D4((uint64_t)v823);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      ((void (*)(char *, uint64_t))v1237)(v819, v430);
      sub_6EA8(v1204 + 2, v1204[5]);
      sub_10690((uint64_t *)&v1258);
      uint64_t v824 = *((void *)&v1259 + 1);
      uint64_t v825 = v1260;
      sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
      uint64_t v409 = Flow.eraseToAnyFlow()(v824, v825);
      goto LABEL_226;
    }

    if (v350 != enum case for Parse.uso(_:)) {
      goto LABEL_345;
    }
    v502 = v1159;
    uint64_t v503 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1159, v1238, v258);
    v504 = (os_log_s *)Logger.logObject.getter(v503);
    os_log_type_t v505 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v504, v505))
    {
      v506 = (uint8_t *)sub_55F20(2LL);
      *(void *)&__int128 v1249 = 0LL;
      v1257[0] = 0LL;
      *(_WORD *)v506 = 0;
      *(void *)&__int128 v1258 = v506 + 2;
      uint64_t v507 = v1245;
      sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
      uint64_t v1245 = v507;
      v248 = v1240;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      _os_log_impl(&dword_0, v504, v505, "AudioFlowDelegatePlugin#makeFlow received .uso parse", v506, 2u);
      sub_101D4((uint64_t)v506);
    }

    else
    {

      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }

    uint64_t v710 = ((uint64_t (*)(char *, uint64_t))v1237)(v502, v258);
    uint64_t v711 = v1184;
    uint64_t v712 = (uint64_t)v1160;
    Parse.firstNLUUserDialogAct()(v710);
    uint64_t v713 = v1183;
    int v714 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1183 + 48))(v712, 1LL, v711);
    v715 = v1204;
    if (v714 == 1)
    {
      uint64_t v716 = sub_1F6CC(v712, &qword_2845D0);
    }

    else
    {
      v717 = v1150;
      uint64_t v718 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v713 + 32))(v1150, v712, v711);
      uint64_t v719 = v713;
      uint64_t v720 = static MediaPlayerPlaybackContextProvider.shared.getter(v718);
      dispatch thunk of MediaPlayerPlaybackContextProvider.setUserDialogAct(to:)(v717);
      swift_release(v720);
      uint64_t v716 = (*(uint64_t (**)(char *, uint64_t))(v719 + 8))(v717, v711);
    }

    uint64_t v721 = Parse.firstUsoTask()(v716);
    if (!v721)
    {
      v805 = v1144;
      uint64_t v806 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1144, v1238, v258);
      v807 = (os_log_s *)Logger.logObject.getter(v806);
      os_log_type_t v808 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v807, v808))
      {
        v809 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v809 = 0;
        *(void *)&__int128 v1258 = v809 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl( &dword_0,  v807,  v808,  "AudioFlowDelegatePlugin#makeFlow failed to get uso task from parse",  v809,  2u);
        sub_101D4((uint64_t)v809);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      v886 = v805;
LABEL_272:
      uint64_t v887 = v258;
      goto LABEL_273;
    }

    uint64_t v722 = v721;
    uint64_t v723 = static MediaPlayerPlaybackContextProvider.shared.getter(v721);
    dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(4LL);
    swift_release(v723);
    sub_B7C84(v248, (uint64_t)&v1249);
    if (v1250)
    {
      sub_49B60(&v1249, &v1258);
      sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
      if (AudioIntent.isAirPlayMusicWithoutAppName()())
      {
        v724 = v1137;
        uint64_t v725 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1137, v1238, v258);
        v726 = (os_log_s *)Logger.logObject.getter(v725);
        os_log_type_t v727 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v726, v727))
        {
          v728 = (uint8_t *)sub_55F20(2LL);
          v1257[0] = 0LL;
          *(void *)&v1256[0] = 0LL;
          *(_WORD *)v728 = 0;
          *(void *)&__int128 v1249 = v728 + 2;
          sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1249, (uint64_t)v1257, (uint64_t)v1256);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          _os_log_impl( &dword_0,  v726,  v727,  "AudioFlowDelegatePlugin#makeFlow#uso This is an AirPlay request without an app name, returning first audio play flow",  v728,  2u);
          sub_101D4((uint64_t)v728);
        }

        else
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        }

        ((void (*)(char *, uint64_t))v1237)(v724, v258);
        uint64_t v249 = v1242;
        uint64_t v944 = type metadata accessor for Input(0LL);
        uint64_t v945 = (uint64_t)v1207;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v944 - 8) + 56LL))( v1207,  1LL,  1LL,  v944);
        uint64_t v409 = sub_110130(v945);
        sub_1F6CC(v945, &qword_285BD0);
        swift_release(v722);
        sub_6C3C(&v1258);
        goto LABEL_254;
      }

      sub_6C3C(&v1258);
    }

    else
    {
      sub_1F6CC((uint64_t)&v1249, &qword_2848C0);
    }

    if (sub_2E694())
    {
      static ExecutorProvider.shared.getter(&v1258);
      uint64_t v873 = *((void *)&v1259 + 1);
      uint64_t v874 = v1260;
      sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
      uint64_t v875 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v873, v874);
      if (v876) {
        uint64_t v877 = v875;
      }
      else {
        uint64_t v877 = 0LL;
      }
      if (v876) {
        unint64_t v878 = v876;
      }
      else {
        unint64_t v878 = 0xE000000000000000LL;
      }
      sub_6C3C(&v1258);
      sub_14F704(v877, v878);
      swift_bridgeObjectRelease(v878);
      v879 = v1140;
      uint64_t v880 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1140, v1238, v258);
      v881 = (os_log_s *)Logger.logObject.getter(v880);
      os_log_type_t v882 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v881, v882))
      {
        v883 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v883 = 0;
        *(void *)&__int128 v1258 = v883 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v884 = "AudioFlowDelegatePlugin#makeFlow This is play request, returning first audio play flow";
LABEL_268:
        _os_log_impl(&dword_0, v881, v882, v884, v883, 2u);
        sub_101D4((uint64_t)v883);

LABEL_276:
        ((void (*)(char *, uint64_t))v1237)(v879, v258);
        uint64_t v249 = v1242;
        uint64_t v888 = type metadata accessor for Input(0LL);
        uint64_t v889 = (uint64_t)v1207;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v888 - 8) + 56LL))( v1207,  1LL,  1LL,  v888);
        uint64_t v409 = sub_110130(v889);
        sub_1F6CC(v889, &qword_285BD0);
        swift_release(v722);
        goto LABEL_254;
      }

      goto LABEL_275;
    }

    if ((sub_2E8C8() & 1) != 0)
    {
      v879 = v1133;
      uint64_t v885 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1133, v1238, v258);
      v881 = (os_log_s *)Logger.logObject.getter(v885);
      os_log_type_t v882 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v881, v882))
      {
        v883 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v883 = 0;
        *(void *)&__int128 v1258 = v883 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v884 = "AudioFlowDelegatePlugin#makeFlow resume+app request. Returning flow";
        goto LABEL_268;
      }

  if (AudioIntent.isBeats1Only()())
  {
    uint64_t v640 = static CommonAudio.beatsOne.getter();
    v682 = v681;
    swift_bridgeObjectRelease(v643);
    uint64_t v643 = v682;
  }

  sub_1641C(0LL, &qword_284DD8, &OBJC_CLASS___INMediaSearch_ptr);
  v683 = v775;
  os_log_type_t v808 = v775;
  swift_bridgeObjectRetain(v643);
  uint64_t v684 = (void *)INMediaSearch.init(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( v812,  v772,  v640,  v643,  v805,  v814,  v804,  v809,  v667,  v670,  v683,  v800,  v797,  v806);
  v685 = sub_FAF8();
  (*(void (**)(char *, uint64_t, uint64_t))(v665 + 16))(v666, v685, v664);
  os_log_type_t v686 = swift_allocObject(&unk_26C520, 24LL, 7LL);
  *(void *)(v686 + 16) = v684;
  BOOL v814 = v684;
  v687 = (void *)Logger.logObject.getter(v814);
  LODWORD(v683) = static os_log_type_t.default.getter();
  uint64_t v688 = swift_allocObject(&unk_26C548, 17LL, 7LL);
  *(_BYTE *)(v688 + 16) = 32;
  char v689 = swift_allocObject(&unk_26C570, 17LL, 7LL);
  *(_BYTE *)(v689 + 16) = 8;
  v690 = swift_allocObject(&unk_26C598, 32LL, 7LL);
  *(void *)(v690 + 16) = sub_64FA4;
  *(void *)(v690 + 24) = v686;
  uint64_t v691 = swift_allocObject(&unk_26C5C0, 32LL, 7LL);
  *(void *)(v691 + 16) = sub_64F88;
  *(void *)(v691 + 24) = v690;
  uint64_t v692 = sub_6C5C(&qword_284DE0);
  inited = swift_initStackObject(v692, &v823);
  uint64_t v694 = sub_14816C(inited, 3LL);
  *uint64_t v695 = sub_64F90;
  v695[1] = v688;
  v695[2] = sub_64F90;
  v695[3] = v689;
  v695[4] = sub_64F8C;
  v695[5] = v691;
  swift_retain(v688);
  swift_retain(v689);
  swift_retain(v691);
  swift_bridgeObjectRelease(v694);
  LODWORD(v812) = (_DWORD)v683;
  if (!os_log_type_enabled((os_log_t)v687, (os_log_type_t)v683))
  {
    swift_bridgeObjectRelease(v643);

    swift_release(v688);
    swift_release(v689);
    swift_release(v691);

    (*(void (**)(char *, uint64_t))(v791 + 8))(v790, v792);
    swift_bridgeObjectRelease(v799);
    sub_1F6CC(v796, &qword_284D98);
    swift_bridgeObjectRelease(v793);
    uint64_t v700 = v813;
    uint64_t v701 = v802;
    goto LABEL_336;
  }

  v809 = (os_log_s *)v687;
  uint64_t v696 = (uint8_t *)sub_55F20(12LL);
  v697 = swift_slowAlloc(32LL, -1LL);
  v821 = 0LL;
  uint64_t v820 = v697;
  *(_WORD *)uint64_t v696 = 258;
  os_log_type_t v822 = v696 + 2;
  uint64_t v824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_64F90;
  uint64_t v825 = v688;
  uint64_t v698 = v752;
  sub_FB40(&v824, (uint64_t)&v822, (uint64_t)&v821, (uint64_t)&v820);
  if (!v698)
  {
    swift_release(v688);
    uint64_t v824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_64F90;
    uint64_t v825 = v689;
    sub_FB40(&v824, (uint64_t)&v822, (uint64_t)&v821, (uint64_t)&v820);
    swift_release(v689);
    uint64_t v824 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_64F8C;
    uint64_t v825 = v691;
    sub_FB40(&v824, (uint64_t)&v822, (uint64_t)&v821, (uint64_t)&v820);
    uint64_t v699 = v791;
    uint64_t v700 = v813;
    uint64_t v701 = v802;
    uint64_t v702 = v808;
    swift_release(v691);
    uint64_t v703 = v809;
    _os_log_impl(&dword_0, v809, (os_log_type_t)v812, "ConverterHelpers#convertMediaSearch mediaSearch: %s", v696, 0xCu);
    swift_arrayDestroy(v697, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v697, -1LL, -1LL);
    sub_101D4((uint64_t)v696);
    swift_bridgeObjectRelease(v643);

    (*(void (**)(char *, uint64_t))(v699 + 8))(v790, v792);
    swift_bridgeObjectRelease(v799);
    sub_1F6CC(v796, &qword_284D98);
    swift_bridgeObjectRelease(v793);
LABEL_336:
    sub_16474(v701, v811, (uint64_t)v810, (uint64_t)v803);
    swift_bridgeObjectRelease(v700);
    sub_6C3C(v845);
    return (uint64_t)v814;
  }

  swift_bridgeObjectRelease(v643);
  uint64_t result = swift_errorRelease(v698);
  __break(1u);
  return result;
}

LABEL_275:
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      goto LABEL_276;
    }

    if (sub_10574() || (sub_4A218() & 1) != 0 || (sub_49CA0() & 1) != 0)
    {
      uint64_t v928 = v715[15];
      uint64_t v929 = v715[16];
      sub_6EA8(v715 + 12, v928);
      if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v928, v929) & 1) != 0)
      {
        uint64_t v930 = v715[15];
        uint64_t v931 = v715[16];
        sub_6EA8(v715 + 12, v930);
        if ((dispatch thunk of FeatureFlagProviding.isMediaControlsOnSiriXv2Enabled.getter(v930, v931) & 1) != 0)
        {
          static ExecutorProvider.shared.getter(&v1258);
          uint64_t v932 = *((void *)&v1259 + 1);
          uint64_t v933 = v1260;
          sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
          uint64_t v934 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v932, v933);
          if (v935) {
            uint64_t v936 = v934;
          }
          else {
            uint64_t v936 = 0LL;
          }
          if (v935) {
            unint64_t v937 = v935;
          }
          else {
            unint64_t v937 = 0xE000000000000000LL;
          }
          sub_6C3C(&v1258);
          sub_14F704(v936, v937);
          swift_bridgeObjectRelease(v937);
          v938 = v1128;
          uint64_t v939 = v1247;
          uint64_t v940 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1128, v1238, v1247);
          v941 = (os_log_s *)Logger.logObject.getter(v940);
          os_log_type_t v942 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v941, v942))
          {
            v943 = (uint8_t *)sub_55F20(2LL);
            *(void *)&__int128 v1249 = 0LL;
            v1257[0] = 0LL;
            *(_WORD *)v943 = 0;
            *(void *)&__int128 v1258 = v943 + 2;
            sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
            _os_log_impl( &dword_0,  v941,  v942,  "AudioFlowDelegatePlugin#makeFlow uso parse returning AmbiguousShuffleFlow",  v943,  2u);
            sub_101D4((uint64_t)v943);
          }

          else
          {

            swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          }

          ((void (*)(char *, uint64_t))v1237)(v938, v939);
          uint64_t v1061 = sub_1127C4();
          uint64_t v409 = sub_111D28(v1061);
          swift_release(v722);
          uint64_t v1062 = v1061;
          goto LABEL_355;
        }
      }

      v967 = v1130;
      uint64_t v968 = v1247;
      uint64_t v969 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1130, v1238, v1247);
      v970 = (os_log_s *)Logger.logObject.getter(v969);
      os_log_type_t v971 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v970, v971))
      {
        v972 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v972 = 0;
        *(void *)&__int128 v1258 = v972 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl( &dword_0,  v970,  v971,  "AudioFlowDelegatePlugin#makeFlow Task is shuffle::MediaItem parse, but Siri X flag(s) are disabled. Rejecting...",  v972,  2u);
        sub_101D4((uint64_t)v972);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      swift_release(v722);
      v886 = v967;
      uint64_t v887 = v968;
LABEL_273:
      ((void (*)(char *, uint64_t))v1237)(v886, v887);
      uint64_t v409 = 0LL;
      goto LABEL_253;
    }

    if ((sub_2EAAC() & 1) != 0)
    {
      uint64_t v1054 = v715[15];
      uint64_t v1055 = v715[16];
      sub_6EA8(v715 + 12, v1054);
      if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v1054, v1055) & 1) != 0)
      {
        v1056 = v1123;
        uint64_t v1057 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1123, v1238, v258);
        v1058 = (os_log_s *)Logger.logObject.getter(v1057);
        os_log_type_t v1059 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v1058, v1059))
        {
          v1060 = (uint8_t *)sub_55F20(2LL);
          *(void *)&__int128 v1249 = 0LL;
          v1257[0] = 0LL;
          *(_WORD *)v1060 = 0;
          *(void *)&__int128 v1258 = v1060 + 2;
          sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          _os_log_impl( &dword_0,  v1058,  v1059,  "AudioFlowDelegatePlugin#makeFlow uso parse returning UpdateMediaAffinity flow",  v1060,  2u);
          sub_101D4((uint64_t)v1060);
        }

        else
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        }

        ((void (*)(char *, uint64_t))v1237)(v1056, v258);
        uint64_t v409 = sub_152F60(v1240);
        uint64_t v1062 = v722;
        goto LABEL_355;
      }

      v1073 = v1124;
      uint64_t v1074 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1124, v1238, v258);
      v1075 = (os_log_s *)Logger.logObject.getter(v1074);
      os_log_type_t v1076 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v1075, v1076))
      {
        v1077 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v1077 = 0;
        *(void *)&__int128 v1258 = v1077 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl( &dword_0,  v1075,  v1076,  "AudioFlowDelegatePlugin#makeFlow parse is uso affinity task, but music on on Siri X is disabled. Rejecting...",  v1077,  2u);
        sub_101D4((uint64_t)v1077);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      swift_release(v722);
      v886 = v1073;
      goto LABEL_272;
    }

    if ((sub_2ECE4() & 1) != 0)
    {
      uint64_t v1066 = v722;
      uint64_t v1067 = v715[15];
      uint64_t v1068 = v715[16];
      sub_6EA8(v715 + 12, v1067);
      if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v1067, v1068) & 1) != 0)
      {
        uint64_t v1069 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1125, v1238, v258);
        v1070 = (os_log_s *)Logger.logObject.getter(v1069);
        os_log_type_t v1071 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v1070, v1071))
        {
          v1072 = (uint8_t *)sub_55F20(2LL);
          *(void *)&__int128 v1249 = 0LL;
          v1257[0] = 0LL;
          *(_WORD *)v1072 = 0;
          *(void *)&__int128 v1258 = v1072 + 2;
          sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          _os_log_impl( &dword_0,  v1070,  v1071,  "AudioFlowDelegatePlugin#makeFlow uso parse returning AcousticID flow",  v1072,  2u);
          sub_101D4((uint64_t)v1072);
        }

        else
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        }

        ((void (*)(char *, uint64_t))v1237)(v1125, v1247);
        uint64_t v1095 = type metadata accessor for Input(0LL);
        uint64_t v1096 = (uint64_t)v1207;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1095 - 8) + 56LL))( v1207,  1LL,  1LL,  v1095);
        uint64_t v1097 = v1186;
        sub_10D7D8(v1186);
        sub_10D808(&v1258);
        sub_10D8DC((uint64_t *)&v1249);
        v1098 = j___s11SiriKitFlow10AceServiceO12currentAsyncAA0de7InvokerG0_pvgZ(v1257);
        uint64_t v1099 = sub_64FA8(v1098);
        j___s11SiriKitFlow22OutputPublisherFactoryO04makedE0AA0dE0_pyFZ(v1256, v1099);
        sub_10D900(v1255);
        sub_10D964(v1254);
        sub_10D980(v1253);
        sub_10D9E8(v1251);
        uint64_t v1100 = sub_1094C((uint64_t)v1251, v1252);
        __chkstk_darwin(v1100);
        v1102 = (uint64_t *)((char *)&v1116 - ((v1101 + 15) & 0xFFFFFFFFFFFFFFF0LL));
        (*(void (**)(uint64_t *))(v1103 + 16))(v1102);
        uint64_t v1104 = sub_10EC08(v1096, v1097, &v1258, &v1249, v1257, v1099, v1256, v1255, v1254, v1253, *v1102);
        sub_6C3C(v1251);
        *(void *)&__int128 v1258 = v1104;
        uint64_t v1105 = type metadata accessor for AcousticIDFlow(0LL);
        uint64_t v1106 = sub_6DF0(&qword_289EC0, 255LL, type metadata accessor for AcousticIDFlow, (uint64_t)&unk_218768);
        uint64_t v409 = Flow.eraseToAnyFlow()(v1105, v1106);
        swift_release(v1104);
        uint64_t v1062 = v1066;
        goto LABEL_355;
      }

      uint64_t v1084 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1126, v1238, v258);
      v1085 = (os_log_s *)Logger.logObject.getter(v1084);
      os_log_type_t v1086 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v1085, v1086))
      {
        v1087 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v1087 = 0;
        *(void *)&__int128 v1258 = v1087 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl( &dword_0,  v1085,  v1086,  "AudioFlowDelegatePlugin#makeFlow parse is uso AcousticID task, but music on on Siri X is disabled. Rejecting...",  v1087,  2u);
        sub_101D4((uint64_t)v1087);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      swift_release(v722);
      v886 = v1126;
      uint64_t v887 = v1247;
      goto LABEL_273;
    }

    if ((sub_2F440() & 1) != 0)
    {
      uint64_t v1078 = v715[15];
      uint64_t v1079 = v715[16];
      sub_6EA8(v715 + 12, v1078);
      if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v1078, v1079) & 1) == 0)
      {
        uint64_t v1107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1121, v1238, v1247);
        v1108 = (os_log_s *)Logger.logObject.getter(v1107);
        os_log_type_t v1109 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v1108, v1109))
        {
          v1110 = (uint8_t *)sub_55F20(2LL);
          *(void *)&__int128 v1249 = 0LL;
          v1257[0] = 0LL;
          *(_WORD *)v1110 = 0;
          *(void *)&__int128 v1258 = v1110 + 2;
          sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          _os_log_impl( &dword_0,  v1108,  v1109,  "AudioFlowDelegatePlugin#makeFlow parse is uso Determine task, but music on on Siri X is disabled. Rejecting...",  v1110,  2u);
          sub_101D4((uint64_t)v1110);
        }

        else
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        }

        swift_release(v722);
        v886 = v1121;
        uint64_t v887 = v1247;
        goto LABEL_273;
      }

      uint64_t v1080 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1120, v1238, v1247);
      v1081 = (os_log_s *)Logger.logObject.getter(v1080);
      os_log_type_t v1082 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v1081, v1082))
      {
        v1083 = (uint8_t *)sub_55F20(2LL);
        *(void *)&__int128 v1249 = 0LL;
        v1257[0] = 0LL;
        *(_WORD *)v1083 = 0;
        *(void *)&__int128 v1258 = v1083 + 2;
        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        _os_log_impl( &dword_0,  v1081,  v1082,  "AudioFlowDelegatePlugin#makeFlow uso parse returning Ambiguous Determine flow",  v1083,  2u);
        sub_101D4((uint64_t)v1083);
      }

      else
      {

        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      }

      ((void (*)(char *, uint64_t))v1237)(v1120, v1247);
      uint64_t v409 = sub_112050();
LABEL_395:
      uint64_t v1062 = v722;
LABEL_355:
      swift_release(v1062);
      goto LABEL_253;
    }

    sub_6EA8(v715 + 2, v715[5]);
    sub_10690((uint64_t *)&v1258);
    uint64_t v1088 = sub_6C5C(&qword_28B208);
    uint64_t v1089 = type metadata accessor for PommesResponseFlow(0LL);
    if ((swift_dynamicCast(&v1249, &v1258, v1088, v1089, 6LL) & 1) != 0)
    {
      uint64_t v1090 = v1249;
      if ((sub_201100() & 1) != 0)
      {
        uint64_t v1091 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1119, v1238, v1247);
        v1092 = (os_log_s *)Logger.logObject.getter(v1091);
        os_log_type_t v1093 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v1092, v1093))
        {
          v1094 = (uint8_t *)sub_55F20(2LL);
          *(void *)&__int128 v1249 = 0LL;
          v1257[0] = 0LL;
          *(_WORD *)v1094 = 0;
          *(void *)&__int128 v1258 = v1094 + 2;
          sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
          _os_log_impl( &dword_0,  v1092,  v1093,  "AudioFlowDelegatePlugin#makeFlow uso parse returning PommesResponseFlow",  v1094,  2u);
          sub_101D4((uint64_t)v1094);
        }

        else
        {

          swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        }

        ((void (*)(char *, uint64_t))v1237)(v1119, v1247);
        *(void *)&__int128 v1258 = v1090;
        uint64_t v1115 = sub_6DF0(&qword_289EE0, 255LL, type metadata accessor for PommesResponseFlow, (uint64_t)&unk_21BD88);
        uint64_t v409 = Flow.eraseToAnyFlow()(v1089, v1115);
        swift_release(v1090);
        goto LABEL_395;
      }

      swift_release(v1090);
    }

    uint64_t v1111 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1122, v1238, v1247);
    v1112 = (os_log_s *)Logger.logObject.getter(v1111);
    os_log_type_t v1113 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1112, v1113))
    {
      v1114 = (uint8_t *)sub_55F20(2LL);
      *(void *)&__int128 v1249 = 0LL;
      v1257[0] = 0LL;
      *(_WORD *)v1114 = 0;
      *(void *)&__int128 v1258 = v1114 + 2;
      sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      _os_log_impl(&dword_0, v1112, v1113, "AudioFlowDelegatePlugin#makeFlow unexpected uso parse", v1114, 2u);
      sub_101D4((uint64_t)v1114);
    }

    else
    {

      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }

    swift_release(v722);
    v886 = v1122;
    uint64_t v887 = v1247;
    goto LABEL_273;
  }

  v351 = v1215;
  uint64_t v352 = v1248;
  v240(v1215, v1246, v1248);
  (*(void (**)(char *, uint64_t))(v249 + 96))(v351, v352);
  (*(void (**)(char *, char *, void (*)(char *, uint64_t)))(v1243 + 32))(v1232, v351, v1244);
  v353 = v1223;
  v240(v1223, v248, v352);
  uint64_t v354 = v1216;
  sub_206FC0(v353, v1216);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1220 + 48))(v354, 1LL, v1222) == 1)
  {
    sub_1F6CC(v354, &qword_284CA0);
    v355 = v1198;
    uint64_t v356 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1198, v1238, v258);
    v357 = (os_log_s *)Logger.logObject.getter(v356);
    os_log_type_t v358 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v357, v358))
    {
      v359 = (uint8_t *)sub_55F20(2LL);
      *(void *)&__int128 v1249 = 0LL;
      v1257[0] = 0LL;
      *(_WORD *)v359 = 0;
      *(void *)&__int128 v1258 = v359 + 2;
      sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      _os_log_impl( &dword_0,  v357,  v358,  "AudioFlowProvider#makeFlow Fatal: Cannot get AudioNLv3Intent from NLv3IntentOnly parse",  v359,  2u);
      sub_101D4((uint64_t)v359);
    }

    else
    {

      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }

    ((void (*)(char *, uint64_t))v1237)(v355, v258);
LABEL_60:
    (*(void (**)(char *, void *))(v1243 + 8))(v1232, v1244);
LABEL_61:
    uint64_t v409 = 0LL;
LABEL_254:
    (*(void (**)(char *, uint64_t))(v249 + 8))(v1246, v1248);
    static SiriAudioState.isMakeFlowFromParse.setter(0LL);
    return v409;
  }

  uint64_t v387 = sub_B8980(v354, v1224);
  uint64_t v388 = static MediaPlayerPlaybackContextProvider.shared.getter(v387);
  dispatch thunk of MediaPlayerPlaybackContextProvider.setExecutionSource(to:)(1LL);
  swift_release(v388);
  uint64_t v389 = v1205;
  sub_208724(v1205);
  uint64_t v390 = v1218;
  uint64_t v391 = v1221;
  v1236 = *(void (**)(char *, char *, uint64_t))(v1218 + 104);
  v1236((char *)v257, (char *)enum case for CommonAudio.Verb.directedAcousticId(_:), v1221);
  v1241 = *(uint64_t (**)(char *, uint64_t))(v390 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v1241)(v257, 0LL, 1LL, v391);
  uint64_t v392 = v257;
  uint64_t v393 = v1214;
  uint64_t v394 = v1214 + *(int *)(v1219 + 48);
  sub_FF10(v389, v1214, &qword_284DB0);
  sub_FF10(v392, v394, &qword_284DB0);
  v395 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v390 + 48);
  if (v395(v393, 1LL, v391) != 1)
  {
    uint64_t v410 = v1188;
    sub_FF10(v393, v1188, &qword_284DB0);
    if (v395(v394, 1LL, v391) != 1)
    {
      uint64_t v483 = v1218;
      v484 = v1192;
      (*(void (**)(char *, uint64_t, uint64_t))(v1218 + 32))(v1192, v394, v391);
      uint64_t v485 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      char v486 = dispatch thunk of static Equatable.== infix(_:_:)(v410, v484, v391, v485);
      uint64_t v487 = v249;
      v488 = *(void (**)(char *, uint64_t))(v483 + 8);
      v488(v484, v1221);
      sub_1F6CC(v1234, &qword_284DB0);
      sub_1F6CC(v1205, &qword_284DB0);
      v488((char *)v410, v1221);
      uint64_t v249 = v487;
      uint64_t v256 = (uint64_t)v1235;
      uint64_t v391 = v1221;
      sub_1F6CC(v393, &qword_284DB0);
      uint64_t v397 = v1202;
      uint64_t v411 = v1200;
      if ((v486 & 1) != 0) {
        goto LABEL_93;
      }
LABEL_65:
      sub_208724(v411);
      v1236((char *)v256, (char *)enum case for CommonAudio.Verb.determine(_:), v391);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v1241)(v256, 0LL, 1LL, v391);
      uint64_t v412 = v397 + *(int *)(v1219 + 48);
      sub_FF10(v411, v397, &qword_284DB0);
      sub_FF10(v256, v412, &qword_284DB0);
      if (v395(v397, 1LL, v391) == 1)
      {
        sub_1F6CC(v256, &qword_284DB0);
        sub_1F6CC(v411, &qword_284DB0);
        if (v395(v412, 1LL, v391) == 1)
        {
          sub_1F6CC(v397, &qword_284DB0);
          v413 = v1193;
LABEL_110:
          uint64_t v537 = v1247;
          uint64_t v538 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v413, v1238, v1247);
          v539 = (os_log_s *)Logger.logObject.getter(v538);
          os_log_type_t v540 = static os_log_type_t.default.getter();
          uint64_t v541 = swift_allocObject(&unk_271BE0, 17LL, 7LL);
          *(_BYTE *)(v541 + 16) = 34;
          uint64_t v542 = swift_allocObject(&unk_271C08, 17LL, 7LL);
          *(_BYTE *)(v542 + 16) = 8;
          uint64_t v543 = swift_allocObject(v1233, 80LL, 7LL);
          uint64_t v544 = sub_14816C(v543, 3LL);
          void *v545 = sub_64F90;
          v545[1] = v541;
          v545[2] = sub_64F90;
          v545[3] = v542;
          v545[4] = sub_FBEC;
          v545[5] = 0LL;
          swift_retain(v541);
          swift_retain(v542);
          swift_bridgeObjectRelease(v544);
          if (os_log_type_enabled(v539, v540))
          {
            v546 = (uint8_t *)sub_55F20(12LL);
            uint64_t v547 = swift_slowAlloc(32LL, -1LL);
            v1257[0] = 0LL;
            *(void *)&v1256[0] = v547;
            *(_WORD *)v546 = 258;
            *(void *)&__int128 v1249 = v546 + 2;
            *(void *)&__int128 v1258 = sub_64F90;
            *((void *)&v1258 + 1) = v541;
            uint64_t v220 = v1245;
            sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
            if (v220) {
              goto LABEL_396;
            }
            swift_release(v541);
            *(void *)&__int128 v1258 = sub_64F90;
            *((void *)&v1258 + 1) = v542;
            sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
            swift_release(v542);
            *(void *)&__int128 v1258 = sub_FBEC;
            *((void *)&v1258 + 1) = 0LL;
            sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
            uint64_t v548 = v1242;
            v549 = (void (*)(char *, uint64_t))v1237;
            v550 = v1193;
            _os_log_impl( &dword_0,  v539,  v540,  "AudioFlowDelegatePlugin#makeFlow %{public}s Returning Ambiguous Determine flow",  v546,  0xCu);
            swift_arrayDestroy(v547, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v547, -1LL, -1LL);
            sub_101D4((uint64_t)v546);

            v549(v550, v1247);
            uint64_t v249 = v548;
          }

          else
          {

            swift_release(v542);
            swift_release(v541);
            ((void (*)(char *, uint64_t))v1237)(v413, v537);
            uint64_t v249 = v1242;
          }

          uint64_t v622 = sub_112050();
          goto LABEL_196;
        }
      }

      else
      {
        uint64_t v470 = v1177;
        sub_FF10(v397, v1177, &qword_284DB0);
        unsigned int v471 = v395(v412, 1LL, v391);
        v413 = v1193;
        if (v471 != 1)
        {
          uint64_t v531 = v1218;
          v532 = v1192;
          (*(void (**)(char *, uint64_t, uint64_t))(v1218 + 32))(v1192, v412, v391);
          uint64_t v533 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
          char v534 = dispatch thunk of static Equatable.== infix(_:_:)(v470, v532, v391, v533);
          uint64_t v535 = v249;
          v536 = *(void (**)(char *, uint64_t))(v531 + 8);
          v536(v532, v1221);
          sub_1F6CC((uint64_t)v1235, &qword_284DB0);
          sub_1F6CC(v1200, &qword_284DB0);
          v536((char *)v470, v1221);
          uint64_t v249 = v535;
          uint64_t v391 = v1221;
          sub_1F6CC(v1202, &qword_284DB0);
          uint64_t v472 = v1208;
          if ((v534 & 1) != 0) {
            goto LABEL_110;
          }
LABEL_87:
          uint64_t v473 = v1195;
          sub_208724(v1195);
          uint64_t v474 = v1194;
          v1236((char *)v1194, (char *)enum case for CommonAudio.Verb.like(_:), v391);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v1241)(v474, 0LL, 1LL, v391);
          uint64_t v475 = v472 + *(int *)(v1219 + 48);
          sub_FF10(v473, v1208, &qword_284DB0);
          uint64_t v476 = v1208;
          sub_FF10(v474, v475, &qword_284DB0);
          if (v395(v476, 1LL, v391) == 1)
          {
            sub_1F6CC(v474, &qword_284DB0);
            uint64_t v476 = v1208;
            sub_1F6CC(v473, &qword_284DB0);
            if (v395(v475, 1LL, v391) == 1)
            {
              sub_1F6CC(v476, &qword_284DB0);
              uint64_t v477 = v1190;
              sub_FE7FC(v1224, v1190);
LABEL_145:
              sub_DD994(v477);
              uint64_t v629 = v1247;
LABEL_191:
              v736 = v1179;
              uint64_t v737 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1179, v1238, v629);
              v738 = (os_log_s *)Logger.logObject.getter(v737);
              os_log_type_t v739 = static os_log_type_t.default.getter();
              uint64_t v740 = swift_allocObject(&unk_271B90, 17LL, 7LL);
              *(_BYTE *)(v740 + 16) = 34;
              uint64_t v741 = swift_allocObject(&unk_271BB8, 17LL, 7LL);
              *(_BYTE *)(v741 + 16) = 8;
              uint64_t v742 = swift_allocObject(v1233, 80LL, 7LL);
              uint64_t v743 = sub_14816C(v742, 3LL);
              void *v744 = sub_64F90;
              v744[1] = v740;
              v744[2] = sub_64F90;
              v744[3] = v741;
              v744[4] = sub_FBEC;
              v744[5] = 0LL;
              swift_retain(v740);
              swift_retain(v741);
              swift_bridgeObjectRelease(v743);
              if (os_log_type_enabled(v738, v739))
              {
                v745 = (uint8_t *)sub_55F20(12LL);
                uint64_t v746 = swift_slowAlloc(32LL, -1LL);
                v1257[0] = 0LL;
                *(void *)&v1256[0] = v746;
                *(_WORD *)v745 = 258;
                *(void *)&__int128 v1249 = v745 + 2;
                *(void *)&__int128 v1258 = sub_64F90;
                *((void *)&v1258 + 1) = v740;
                uint64_t v220 = v1245;
                sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                if (v220) {
                  goto LABEL_396;
                }
                swift_release(v740);
                *(void *)&__int128 v1258 = sub_64F90;
                *((void *)&v1258 + 1) = v741;
                sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                swift_release(v741);
                *(void *)&__int128 v1258 = sub_FBEC;
                *((void *)&v1258 + 1) = 0LL;
                sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                uint64_t v747 = v1242;
                v748 = (void (*)(char *, uint64_t))v1237;
                v749 = v1179;
                _os_log_impl( &dword_0,  v738,  v739,  "AudioFlowDelegatePlugin#makeFlow %{public}s Returning UpdateMediaAffinity flow",  v745,  0xCu);
                swift_arrayDestroy(v746, 1LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v746, -1LL, -1LL);
                sub_101D4((uint64_t)v745);

                v748(v749, v1247);
                uint64_t v249 = v747;
              }

              else
              {

                swift_release(v741);
                swift_release(v740);
                ((void (*)(char *, uint64_t))v1237)(v736, v629);
                uint64_t v249 = v1242;
              }

              uint64_t v622 = sub_152F60(v1240);
LABEL_196:
              uint64_t v409 = v622;
              goto LABEL_197;
            }
          }

          else
          {
            uint64_t v510 = v1168;
            sub_FF10(v476, v1168, &qword_284DB0);
            if (v395(v475, 1LL, v391) != 1)
            {
              uint64_t v623 = v1218;
              v624 = v1192;
              (*(void (**)(char *, uint64_t, uint64_t))(v1218 + 32))(v1192, v475, v391);
              uint64_t v625 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
              char v626 = dispatch thunk of static Equatable.== infix(_:_:)(v510, v624, v391, v625);
              uint64_t v627 = v249;
              v628 = *(void (**)(char *, uint64_t))(v623 + 8);
              v628(v624, v1221);
              sub_1F6CC(v1194, &qword_284DB0);
              sub_1F6CC(v1195, &qword_284DB0);
              v628((char *)v510, v1221);
              uint64_t v249 = v627;
              uint64_t v391 = v1221;
              sub_1F6CC(v476, &qword_284DB0);
              uint64_t v477 = v1190;
              sub_FE7FC(v1224, v1190);
              uint64_t v511 = v1187;
              if ((v626 & 1) != 0) {
                goto LABEL_145;
              }
LABEL_146:
              sub_208724(v511);
              uint64_t v630 = v1180;
              v1236((char *)v1180, (char *)enum case for CommonAudio.Verb.unlike(_:), v391);
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v1241)(v630, 0LL, 1LL, v391);
              uint64_t v631 = v1176;
              uint64_t v632 = v1176 + *(int *)(v1219 + 48);
              sub_FF10(v511, v1176, &qword_284DB0);
              sub_FF10(v630, v632, &qword_284DB0);
              if (v395(v631, 1LL, v391) == 1)
              {
                sub_1F6CC(v630, &qword_284DB0);
                sub_1F6CC(v511, &qword_284DB0);
                sub_DD994(v477);
                unsigned int v633 = v395(v632, 1LL, v391);
                uint64_t v629 = v1247;
                v634 = v1240;
                if (v633 == 1)
                {
                  sub_1F6CC(v631, &qword_284DB0);
                  goto LABEL_191;
                }
              }

              else
              {
                uint64_t v635 = v1156;
                sub_FF10(v631, v1156, &qword_284DB0);
                unsigned int v636 = v395(v632, 1LL, v391);
                uint64_t v629 = v1247;
                v634 = v1240;
                if (v636 != 1)
                {
                  uint64_t v729 = v635;
                  uint64_t v730 = v1218;
                  v731 = v1192;
                  (*(void (**)(char *, uint64_t, uint64_t))(v1218 + 32))(v1192, v632, v391);
                  uint64_t v732 = sub_6DF0( (unint64_t *)&qword_284E08,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
                  uint64_t v733 = v729;
                  LOBYTE(v729) = dispatch thunk of static Equatable.== infix(_:_:)(v729, v731, v391, v732);
                  uint64_t v734 = v249;
                  v735 = *(void (**)(char *, uint64_t))(v730 + 8);
                  v735(v731, v391);
                  sub_1F6CC(v1180, &qword_284DB0);
                  sub_1F6CC(v1187, &qword_284DB0);
                  sub_DD994(v1190);
                  v735((char *)v733, v391);
                  uint64_t v249 = v734;
                  sub_1F6CC(v1176, &qword_284DB0);
                  if ((v729 & 1) != 0) {
                    goto LABEL_191;
                  }
LABEL_152:
                  if (sub_207D38())
                  {
                    v637 = v1204;
                    uint64_t v638 = v1204[15];
                    uint64_t v639 = v1204[16];
                    sub_6EA8(v1204 + 12, v638);
                    if ((dispatch thunk of FeatureFlagProviding.isMusicOnSiriXEnabled.getter(v638, v639) & 1) != 0)
                    {
                      uint64_t v640 = v637[15];
                      uint64_t v641 = v637[16];
                      sub_6EA8(v637 + 12, v640);
                      if ((dispatch thunk of FeatureFlagProviding.isMediaControlsOnSiriXv2Enabled.getter(v640, v641) & 1) != 0)
                      {
                        v642 = v1141;
                        uint64_t v643 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1141, v1238, v629);
                        v644 = (os_log_s *)Logger.logObject.getter(v643);
                        os_log_type_t v645 = static os_log_type_t.default.getter();
                        uint64_t v646 = swift_allocObject(&unk_271B40, 17LL, 7LL);
                        *(_BYTE *)(v646 + 16) = 34;
                        uint64_t v647 = swift_allocObject(&unk_271B68, 17LL, 7LL);
                        *(_BYTE *)(v647 + 16) = 8;
                        uint64_t v648 = swift_allocObject(v1233, 80LL, 7LL);
                        uint64_t v649 = sub_14816C(v648, 3LL);
                        void *v650 = sub_64F90;
                        v650[1] = v646;
                        v650[2] = sub_64F90;
                        v650[3] = v647;
                        v650[4] = sub_FBEC;
                        v650[5] = 0LL;
                        swift_retain(v646);
                        swift_retain(v647);
                        swift_bridgeObjectRelease(v649);
                        if (os_log_type_enabled(v644, v645))
                        {
                          v651 = (uint8_t *)sub_55F20(12LL);
                          uint64_t v652 = swift_slowAlloc(32LL, -1LL);
                          v1257[0] = 0LL;
                          *(void *)&v1256[0] = v652;
                          *(_WORD *)v651 = 258;
                          *(void *)&__int128 v1249 = v651 + 2;
                          *(void *)&__int128 v1258 = sub_64F90;
                          *((void *)&v1258 + 1) = v646;
                          uint64_t v220 = v1245;
                          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                          if (v220) {
                            goto LABEL_396;
                          }
                          swift_release(v646);
                          *(void *)&__int128 v1258 = sub_64F90;
                          *((void *)&v1258 + 1) = v647;
                          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                          swift_release(v647);
                          *(void *)&__int128 v1258 = sub_FBEC;
                          *((void *)&v1258 + 1) = 0LL;
                          sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                          uint64_t v653 = v1242;
                          v654 = (void (*)(char *, uint64_t))v1237;
                          v655 = v1141;
                          _os_log_impl( &dword_0,  v644,  v645,  "AudioFlowDelegatePlugin#makeFlow %{public}s Intent is ambiguous shuffle, pushing AmbiguousShuffleFlow",  v651,  0xCu);
                          swift_arrayDestroy(v652, 1LL, (char *)&type metadata for Any + 8);
                          swift_slowDealloc(v652, -1LL, -1LL);
                          sub_101D4((uint64_t)v651);

                          v654(v655, v1247);
                          uint64_t v249 = v653;
                        }

                        else
                        {

                          swift_release(v647);
                          swift_release(v646);
                          ((void (*)(char *, uint64_t))v1237)(v642, v629);
                          uint64_t v249 = v1242;
                        }

                        uint64_t v966 = sub_1127C4();
                        uint64_t v409 = sub_111D28(v966);
                        swift_release(v966);
                        goto LABEL_197;
                      }
                    }

                    v750 = v1149;
                    uint64_t v751 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1149, v1238, v629);
                    v752 = (os_log_s *)Logger.logObject.getter(v751);
                    os_log_type_t v753 = static os_log_type_t.default.getter();
                    if (os_log_type_enabled(v752, v753))
                    {
                      v754 = (uint8_t *)sub_55F20(2LL);
                      *(void *)&__int128 v1249 = 0LL;
                      v1257[0] = 0LL;
                      *(_WORD *)v754 = 0;
                      *(void *)&__int128 v1258 = v754 + 2;
                      uint64_t v755 = v249;
                      uint64_t v756 = v1245;
                      sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
                      uint64_t v1245 = v756;
                      uint64_t v249 = v755;
                      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                      _os_log_impl( &dword_0,  v752,  v753,  "AudioFlowDelegatePlugin#makeFlow Intent is ambiguous shuffle, but Siri X flag(s) are disabled. Continuing...",  v754,  2u);
                      sub_101D4((uint64_t)v754);
                    }

                    else
                    {

                      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                    }

                    v839 = v750;
                    v682 = (void (*)(char *, uint64_t))v1237;
                    ((void (*)(char *, uint64_t))v1237)(v839, v629);
                    v634 = v1240;
                    v681 = v1165;
                  }

                  else
                  {
                    v681 = v1165;
                    v682 = (void (*)(char *, uint64_t))v1237;
                  }

                  sub_6DF0(&qword_287000, 255LL, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C220);
                  if (!AudioIntent.isAirPlayMusicWithoutAppName()())
                  {
                    sub_14F4E0((uint64_t)&v1258);
                    uint64_t v845 = *((void *)&v1259 + 1);
                    uint64_t v846 = v1260;
                    sub_6EA8(&v1258, *((uint64_t *)&v1259 + 1));
                    uint64_t v409 = dispatch thunk of ControlsFlowProviding.makeFlow(for:)(v634, v845, v846);
                    sub_6C3C(&v1258);
                    if (!v409)
                    {
                      v864 = v1139;
                      uint64_t v865 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1139, v1238, v629);
                      v866 = (os_log_s *)Logger.logObject.getter(v865);
                      os_log_type_t v867 = static os_log_type_t.error.getter();
                      if (os_log_type_enabled(v866, v867))
                      {
                        v868 = (uint8_t *)sub_55F20(2LL);
                        *(void *)&__int128 v1249 = 0LL;
                        v1257[0] = 0LL;
                        *(_WORD *)v868 = 0;
                        *(void *)&__int128 v1258 = v868 + 2;
                        sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
                        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                        _os_log_impl( &dword_0,  v866,  v867,  "AudioFlowDelegatePlugin#makeFlow Unable to get controls flow for parse",  v868,  2u);
                        sub_101D4((uint64_t)v868);
                      }

                      else
                      {

                        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                      }

                      v682(v864, v629);
                      type metadata accessor for ErrorFilingProvider(0LL);
                      static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000020LL,  0x8000000000221670LL,  0xD000000000000016LL,  0x80000000002216E0LL,  0xD000000000000013LL,  0x8000000000221700LL);
                      sub_DD994(v1224);
                      goto LABEL_60;
                    }

                    uint64_t v847 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v681, v1238, v629);
                    v848 = (void *)Logger.logObject.getter(v847);
                    os_log_type_t v849 = static os_log_type_t.default.getter();
                    uint64_t v850 = v629;
                    uint64_t v851 = swift_allocObject(&unk_271AF0, 17LL, 7LL);
                    *(_BYTE *)(v851 + 16) = 34;
                    v852 = v681;
                    uint64_t v853 = swift_allocObject(&unk_271B18, 17LL, 7LL);
                    *(_BYTE *)(v853 + 16) = 8;
                    uint64_t v854 = swift_allocObject(v1233, 80LL, 7LL);
                    uint64_t v855 = sub_14816C(v854, 3LL);
                    void *v856 = sub_64F90;
                    v856[1] = v851;
                    v856[2] = sub_64F90;
                    v856[3] = v853;
                    v856[4] = sub_FBEC;
                    v856[5] = 0LL;
                    swift_retain(v851);
                    swift_retain(v853);
                    swift_bridgeObjectRelease(v855);
                    if (!os_log_type_enabled((os_log_t)v848, v849))
                    {
                      swift_release(v851);
                      swift_release(v853);

                      ((void (*)(char *, uint64_t))v1237)(v852, v850);
                      goto LABEL_108;
                    }

                    os_log_type_t v857 = v849;
                    v858 = (uint8_t *)sub_55F20(12LL);
                    uint64_t v859 = swift_slowAlloc(32LL, -1LL);
                    v1257[0] = 0LL;
                    *(void *)&v1256[0] = v859;
                    *(_WORD *)v858 = 258;
                    *(void *)&__int128 v1249 = v858 + 2;
                    *(void *)&__int128 v1258 = sub_64F90;
                    *((void *)&v1258 + 1) = v851;
                    uint64_t v220 = v1245;
                    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                    if (!v220)
                    {
                      swift_release(v851);
                      *(void *)&__int128 v1258 = sub_64F90;
                      *((void *)&v1258 + 1) = v853;
                      sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                      v860 = (void (*)(char *, uint64_t))v1237;
                      swift_release(v853);
                      *(void *)&__int128 v1258 = sub_FBEC;
                      *((void *)&v1258 + 1) = 0LL;
                      sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
                      uint64_t v861 = v1242;
                      _os_log_impl( &dword_0,  (os_log_t)v848,  v857,  "AudioFlowDelegatePlugin#makeFlow %{public}s Returning controls frame from audio plugin",  v858,  0xCu);
                      swift_arrayDestroy(v859, 1LL, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v859, -1LL, -1LL);
                      sub_101D4((uint64_t)v858);

                      v860(v1165, v1247);
                      sub_DD994(v1224);
                      (*(void (**)(char *, void *))(v1243 + 8))(v1232, v1244);
                      uint64_t v249 = v861;
                      goto LABEL_254;
                    }

                    goto LABEL_396;
                  }

                  v840 = v1151;
                  uint64_t v841 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1151, v1238, v629);
                  v842 = (os_log_s *)Logger.logObject.getter(v841);
                  os_log_type_t v843 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v842, v843))
                  {
                    v844 = (uint8_t *)sub_55F20(2LL);
                    *(void *)&__int128 v1249 = 0LL;
                    v1257[0] = 0LL;
                    *(_WORD *)v844 = 0;
                    *(void *)&__int128 v1258 = v844 + 2;
                    sub_10600((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v1258, (uint64_t)&v1249, (uint64_t)v1257);
                    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                    _os_log_impl( &dword_0,  v842,  v843,  "AudioFlowDelegatePlugin#makeFlow#NLv3IntentOnly This is an AirPlay request without an app name, re turning first audio play flow",  v844,  2u);
                    sub_101D4((uint64_t)v844);
                  }

                  else
                  {

                    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
                  }

                  v682(v840, v629);
                  uint64_t v862 = type metadata accessor for Input(0LL);
                  uint64_t v863 = (uint64_t)v1207;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v862 - 8) + 56LL))( v1207,  1LL,  1LL,  v862);
                  uint64_t v409 = sub_110130(v863);
                  sub_1F6CC(v863, &qword_285BD0);
LABEL_197:
                  sub_DD994(v1224);
                  (*(void (**)(char *, void *))(v1243 + 8))(v1232, v1244);
                  goto LABEL_254;
                }

                sub_1F6CC(v1180, &qword_284DB0);
                sub_1F6CC(v1187, &qword_284DB0);
                sub_DD994(v1190);
                (*(void (**)(uint64_t, uint64_t))(v1218 + 8))(v635, v391);
              }

              sub_1F6CC(v631, &qword_284DA8);
              goto LABEL_152;
            }

            sub_1F6CC(v1194, &qword_284DB0);
            sub_1F6CC(v1195, &qword_284DB0);
            (*(void (**)(uint64_t, uint64_t))(v1218 + 8))(v510, v391);
          }

          sub_1F6CC(v476, &qword_284DA8);
          uint64_t v477 = v1190;
          sub_FE7FC(v1224, v1190);
          uint64_t v511 = v1187;
          goto LABEL_146;
        }

        sub_1F6CC((uint64_t)v1235, &qword_284DB0);
        sub_1F6CC(v1200, &qword_284DB0);
        (*(void (**)(uint64_t, uint64_t))(v1218 + 8))(v470, v391);
      }

      sub_1F6CC(v397, &qword_284DA8);
      uint64_t v472 = v1208;
      goto LABEL_87;
    }

    sub_1F6CC(v1234, &qword_284DB0);
    sub_1F6CC(v389, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v1218 + 8))(v410, v391);
    uint64_t v397 = v1202;
LABEL_64:
    sub_1F6CC(v1214, &qword_284DA8);
    uint64_t v411 = v1200;
    goto LABEL_65;
  }

  sub_1F6CC(v392, &qword_284DB0);
  sub_1F6CC(v389, &qword_284DB0);
  unsigned int v396 = v395(v394, 1LL, v391);
  uint64_t v397 = v1202;
  if (v396 != 1) {
    goto LABEL_64;
  }
  sub_1F6CC(v1214, &qword_284DB0);
LABEL_93:
  v489 = v1191;
  uint64_t v490 = v1247;
  uint64_t v491 = ((uint64_t (*)(char *, uint64_t, uint64_t))v1239)(v1191, v1238, v1247);
  v492 = (void *)Logger.logObject.getter(v491);
  os_log_type_t v493 = static os_log_type_t.default.getter();
  uint64_t v494 = swift_allocObject(&unk_271C30, 17LL, 7LL);
  *(_BYTE *)(v494 + 16) = 34;
  uint64_t v495 = swift_allocObject(&unk_271C58, 17LL, 7LL);
  *(_BYTE *)(v495 + 16) = 8;
  uint64_t v496 = swift_allocObject(v1233, 80LL, 7LL);
  uint64_t v497 = sub_14816C(v496, 3LL);
  void *v498 = sub_64F90;
  v498[1] = v494;
  v498[2] = sub_64F90;
  v498[3] = v495;
  v498[4] = sub_FBEC;
  v498[5] = 0LL;
  swift_retain(v494);
  swift_retain(v495);
  swift_bridgeObjectRelease(v497);
  if (!os_log_type_enabled((os_log_t)v492, v493))
  {

    swift_release(v495);
    swift_release(v494);
    ((void (*)(char *, uint64_t))v1237)(v489, v490);
    goto LABEL_107;
  }

  v499 = (uint8_t *)sub_55F20(12LL);
  uint64_t v500 = swift_slowAlloc(32LL, -1LL);
  v1257[0] = 0LL;
  *(void *)&v1256[0] = v500;
  *(_WORD *)v499 = 258;
  *(void *)&__int128 v1249 = v499 + 2;
  *(void *)&__int128 v1258 = sub_64F90;
  *((void *)&v1258 + 1) = v494;
  uint64_t v220 = v1245;
  sub_FB40((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258, (uint64_t)&v1249, (uint64_t)v1257, (uint64_t)v1256);
  if (!v220)
  {
    swift_release(v494);
    *(void *)&__int128 v1258 = sub_64F90;
    *((void *)&v1258 + 1) = v495;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    swift_release(v495);
    *(void *)&__int128 v1258 = sub_FBEC;
    *((void *)&v1258 + 1) = 0LL;
    sub_FB40( (uint64_t (**)(uint64_t, uint64_t, uint64_t))&v1258,  (uint64_t)&v1249,  (uint64_t)v1257,  (uint64_t)v1256);
    v501 = (void (*)(char *, uint64_t))v1237;
    _os_log_impl( &dword_0,  (os_log_t)v492,  v493,  "AudioFlowDelegatePlugin#makeFlow %{public}s Returning acousticID flow",  v499,  0xCu);
    swift_arrayDestroy(v500, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v500, -1LL, -1LL);
    sub_101D4((uint64_t)v499);

    v501(v1191, v1247);
LABEL_107:
    uint64_t v519 = type metadata accessor for Input(0LL);
    uint64_t v520 = (uint64_t)v1207;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v519 - 8) + 56LL))(v1207, 1LL, 1LL, v519);
    uint64_t v521 = v1186;
    sub_10D7D8(v1186);
    sub_10D808(&v1258);
    sub_10D8DC((uint64_t *)&v1249);
    v522 = j___s11SiriKitFlow10AceServiceO12currentAsyncAA0de7InvokerG0_pvgZ(v1257);
    uint64_t v523 = sub_64FA8(v522);
    j___s11SiriKitFlow22OutputPublisherFactoryO04makedE0AA0dE0_pyFZ(v1256, v523);
    sub_10D900(v1255);
    sub_10D964(v1254);
    sub_10D980(v1253);
    sub_10D9E8(v1251);
    uint64_t v524 = sub_1094C((uint64_t)v1251, v1252);
    __chkstk_darwin(v524);
    v526 = (uint64_t *)((char *)&v1116 - ((v525 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    (*(void (**)(uint64_t *))(v527 + 16))(v526);
    uint64_t v528 = sub_10EC08(v520, v521, &v1258, &v1249, v1257, v523, v1256, v1255, v1254, v1253, *v526);
    sub_6C3C(v1251);
    *(void *)&__int128 v1258 = v528;
    uint64_t v529 = type metadata accessor for AcousticIDFlow(0LL);
    uint64_t v530 = sub_6DF0(&qword_289EC0, 255LL, type metadata accessor for AcousticIDFlow, (uint64_t)&unk_218768);
    uint64_t v409 = Flow.eraseToAnyFlow()(v529, v530);
    swift_release(v528);
LABEL_108:
    sub_DD994(v1224);
    (*(void (**)(char *, void *))(v1243 + 8))(v1232, v1244);
LABEL_253:
    uint64_t v249 = v1242;
    goto LABEL_254;
  }

LABEL_396:
  swift_errorRelease(v220);
  __break(1u);
  uint64_t result = swift_errorRelease(v1245);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AcousticIDFlow.State(uint64_t a1)
{
  return sub_1E58C(a1, (uint64_t *)&unk_28A6F8, (uint64_t)&nominal type descriptor for AcousticIDFlow.State);
}

uint64_t type metadata accessor for AudioNLv3Intent(uint64_t a1)
{
  uint64_t result = qword_28EAA0;
  if (!qword_28EAA0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudioNLv3Intent);
  }
  return result;
}

uint64_t sub_FAF8()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  return sub_6960(v0, (uint64_t)qword_2969C8);
}

uint64_t sub_FB40(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_FB74(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  unint64_t v8 = v7;
  uint64_t v9 = sub_6978(v6, v7, a3);
  uint64_t v10 = *a1 + 8;
  uint64_t v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  uint64_t result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_FBE0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_FB74(a1, a2, a3, (uint64_t (*)(void))&static Insights.frameKit.getter);
}

uint64_t sub_FBEC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_FB74(a1, a2, a3, (uint64_t (*)(void))&static Insights.appSelection.getter);
}

uint64_t sub_FBF8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  sub_6EA8(&v16, v18);
  v15[0] = dispatch thunk of ExecutorProviding.currentRequestId.getter(v5, v6);
  v15[1] = v7;
  uint64_t v8 = sub_6C5C(&qword_284600);
  uint64_t v9 = String.init<A>(describing:)(v15, v8);
  unint64_t v11 = v10;
  sub_6C3C(&v16);
  uint64_t v12 = sub_6978(v9, v11, a3);
  uint64_t v13 = *a1 + 8;
  uint64_t v16 = v12;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
  uint64_t result = swift_bridgeObjectRelease(v11);
  *a1 = v13;
  return result;
}

uint64_t sub_FCC0()
{
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  sub_6EA8(v4, v5);
  uint64_t started = dispatch thunk of AceServiceInvoker.currentStartRequestId()(v0, v1);
  sub_6C3C(v4);
  return started;
}

uint64_t sub_FD2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v2 + 32, v19, 0LL, 0LL);
  sub_FF10(v2 + 32, (uint64_t)&v17, &qword_28A2B0);
  if (v18) {
    return sub_FF54(&v17, a1);
  }
  sub_1F6CC((uint64_t)&v17, &qword_28A2B0);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v9 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  unint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "AceServiceExecutorProviderWrapper#aceService initializing AceService...", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(uint64_t))(v2 + 16))(v14);
  sub_157C4(a1, (uint64_t)&v17);
  swift_beginAccess(v2 + 32, v16, 33LL, 0LL);
  sub_DD950((uint64_t)&v17, v2 + 32, &qword_28A2B0);
  return swift_endAccess(v16);
}

uint64_t sub_FF10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_6C5C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_FF54(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_BYTE **sub_FF6C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_FF7C(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *a1 + 8;
  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = 0LL;
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  uint64_t v9 = *a2;
  if (*a2)
  {
    *uint64_t v9 = v7;
    *a2 = v9 + 1;
  }

  else
  {
  }

uint64_t sub_1002C(uint64_t *a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  double v5 = a4();
  uint64_t v6 = *a1 + 8;
  double v8 = v5;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1007C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  unint64_t v8 = v7;
  uint64_t v9 = sub_6978(v6, v7, a3);
  uint64_t v10 = *a1 + 8;
  uint64_t v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  uint64_t result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_100EC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1010C(uint64_t (*a1)(void))
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(a1(0LL) - 8) + 80LL);
  return sub_10158(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1014C()
{
  return sub_1010C((uint64_t (*)(void))&type metadata accessor for Parse);
}

uint64_t sub_10158(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  __chkstk_darwin();
  double v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return String.init<A>(describing:)(v5, v3);
}

uint64_t sub_101D4(uint64_t a1)
{
  return swift_slowDealloc(a1, -1LL, -1LL);
}

void sub_101E0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v4 = objc_allocWithZone(&OBJC_CLASS___NSUserDefaults);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithSuiteName:v5];

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 objectForKey:v7];

    if (v8)
    {
      _bridgeAnyObjectToAny(_:)(v15, v8);
      swift_unknownObjectRelease(v8);
      sub_1F6CC((uint64_t)v15, &qword_284028);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v9 = sub_6960(v0, (uint64_t)qword_2969C8);
      uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v9, v0);
      uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
      os_log_type_t v12 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl( &dword_0,  v11,  v12,  "AudioFlowDelegatePlugin#clearExistingEndSpeechTime removing existing key",  v13,  2u);
        swift_slowDealloc(v13, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      NSString v14 = String._bridgeToObjectiveC()();
      [v6 removeObjectForKey:v14];
    }

    else
    {
      memset(v15, 0, sizeof(v15));

      sub_1F6CC((uint64_t)v15, &qword_284028);
    }
  }

uint64_t sub_10430(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_10470()
{
  unint64_t v0 = dispatch thunk of PommesResponse.experiences.getter();
  uint64_t v1 = v0;
  if (v0 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v0);
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v11))
  {
    uint64_t v3 = 4LL;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, v1)
         : *(id *)(v1 + 8 * v3);
      NSString v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1LL)) {
        break;
      }
      uint64_t v7 = type metadata accessor for AudioExperience(0LL);
      uint64_t v8 = swift_dynamicCastClass(v5, v7);
      if (v8)
      {
        uint64_t v9 = v8;
        swift_bridgeObjectRelease_n(v1, 2LL);
        return v9;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_10;
      }
    }

    __break(1u);
LABEL_14:
    if (v1 < 0) {
      uint64_t v11 = v1;
    }
    else {
      uint64_t v11 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v1);
  }

LABEL_10:
  swift_bridgeObjectRelease_n(v1, 2LL);
  return 0LL;
}

  swift_bridgeObjectRelease(a2);
  uint64_t v18 = v61;
  if ((unint64_t)v61 >> 62)
  {
    if (v61 < 0) {
      uint64_t v56 = v61;
    }
    else {
      uint64_t v56 = v61 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v61);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v18);
  }

  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v19 = v4;
  if (!v62)
  {
    id v4 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
    if (v4 >= v7) {
      goto LABEL_28;
    }
LABEL_19:
    if (qword_283888 == -1) {
      goto LABEL_20;
    }
    goto LABEL_70;
  }

  if (a2 < 0) {
    uint64_t v20 = a2;
  }
  else {
    uint64_t v20 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a2);
  id v4 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(a2);
  if (v4 < v7) {
    goto LABEL_19;
  }
LABEL_28:
  while (v7 < 0)
  {
    __break(1u);
LABEL_70:
    swift_once(&qword_283888, sub_BFC5C);
LABEL_20:
    uint64_t v21 = sub_6960(v19, (uint64_t)qword_2969C8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v60, v21, v19);
    swift_bridgeObjectRetain(a2);
    uint64_t v22 = swift_bridgeObjectRetain(v18);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    uint64_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc(22LL, -1LL);
      *(_DWORD *)uint64_t v25 = 134218240;
      uint64_t v64 = (void *)v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65);
      swift_bridgeObjectRelease(v61);
      *(_WORD *)(v25 + 12) = 2048;
      uint64_t v64 = (void *)v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65);
      swift_bridgeObjectRelease(a2);
      _os_log_impl( &dword_0,  v23,  v24,  "AceOutputHelper is applying dialogs to snippets but there are %ld dialogs and %ld snippets. We will attempt to a ttach dialogs to as many snippets as possible and add empty AceViews as needed.",  (uint8_t *)v25,  0x16u);
      uint64_t v26 = v25;
      uint64_t v18 = v61;
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v18);
    }

    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v60, v19);
  }

  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v18);
  uint64_t v33 = sub_74828(0LL, v7, a2, v18, v58 & 1);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v18);
  if (v7 >= v4) {
    return (uint64_t)v33;
  }
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v19, (uint64_t)qword_2969C8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v59, v34, v19);
  swift_bridgeObjectRetain(a2);
  uint64_t v35 = swift_bridgeObjectRetain(v18);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  uint64_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (_DWORD *)swift_slowAlloc(22LL, -1LL);
    uint64_t v61 = v19;
    uint64_t v39 = v33;
    uint64_t v40 = v18;
    uint64_t v41 = v38;
    uint8_t *v38 = 134218240;
    uint64_t v64 = (void *)v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65);
    uint64_t v42 = v40;
    uint64_t v33 = v39;
    uint64_t v19 = v61;
    swift_bridgeObjectRelease(v42);
    *((_WORD *)v41 + 6) = 2048;
    uint64_t v64 = (void *)v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65);
    swift_bridgeObjectRelease(a2);
    _os_log_impl( &dword_0,  v36,  v37,  "AceOutputHelper received %ld dialogs but there are %ld snippets. Adding remaining snippets without dialog.",  (uint8_t *)v41,  0x16u);
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v18);
  }

  uint64_t result = (*(uint64_t (**)(_BYTE *, uint64_t))(v63 + 8))(v59, v19);
  if (v12 < v7)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    swift_once(&qword_283888, sub_BFC5C);
LABEL_23:
    uint64_t v27 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v28 = v63;
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v7, v27, v4);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    uint64_t v31 = static os_log_type_t.info.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( &dword_0,  v30,  v31,  "AceOutputHelper detected SADialogs on one or more snippets. Declining to modify provided snippets",  v32,  2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v7, v4);
    swift_bridgeObjectRetain(a2);
    return a2;
  }

  if (!v62)
  {
    uint64_t v44 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
    if (v44 >= (unint64_t)v7)
    {
      uint64_t result = swift_bridgeObjectRetain(a2);
      goto LABEL_45;
    }

    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }

  if (a2 < 0) {
    uint64_t v45 = a2;
  }
  else {
    uint64_t v45 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a2);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v45);
  if (result < v7) {
    goto LABEL_75;
  }
  swift_bridgeObjectRetain(a2);
  uint64_t v44 = _CocoaArrayWrapper.endIndex.getter(v45);
  uint64_t result = swift_bridgeObjectRelease(a2);
LABEL_45:
  if (v44 < v12) {
    goto LABEL_72;
  }
  if ((a2 & 0xC000000000000001LL) == 0 || v7 == v12) {
    goto LABEL_51;
  }
  if (v7 < v12)
  {
    sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
    uint64_t v46 = v7;
    do
    {
      uint64_t v47 = v46 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v46);
      uint64_t v46 = v47;
    }

    while (v12 != v47);
LABEL_51:
    if (v62)
    {
      if (a2 < 0) {
        uint64_t v51 = a2;
      }
      else {
        uint64_t v51 = a2 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a2);
      uint64_t v48 = _CocoaArrayWrapper.subscript.getter(v7, v12, v51);
      uint64_t v49 = v52;
      uint64_t v7 = v53;
      uint64_t v50 = v54;
      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    else
    {
      uint64_t v48 = a2 & 0xFFFFFFFFFFFFFF8LL;
      uint64_t v49 = (a2 & 0xFFFFFFFFFFFFFF8LL) + 32;
      uint64_t v50 = (2 * v12) | 1;
    }

    uint64_t v64 = v33;
    sub_97C34(v48, v49, v7, v50);
    return (uint64_t)v64;
  }

    if (a1 == 5)
    {
      uint64_t v15 = sub_A6F68;
      goto LABEL_12;
    }

    if (a3)
    {
      uint64_t v19 = a3;
    }

    else
    {
      type metadata accessor for App(0LL);
      uint64_t v19 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    }

    swift_retain(a3);
    uint64_t v20 = v19;
    uint64_t v21 = a2;
    uint64_t v22 = 0x6E776F6E6B6E55LL;
    uint64_t v23 = 0xE700000000000000LL;
    goto LABEL_18;
  }

  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))off_26D888[(char)a1];
LABEL_12:
  uint64_t v18 = &OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_playMediaCatDialogService;
LABEL_13:
  uint64_t v19 = *(void *)(v7 + *v18);
  swift_retain(v19);
  sub_A45A4( (void (*)(unint64_t, uint64_t, _OWORD *, uint64_t (*)(), uint64_t))v15,  v19,  a2,  a3,  a4,  a5,  a6);
  return swift_release(v19);
}

      if ((v40 & 0xC000000000000001LL) != 0)
      {
        uint64_t v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v40);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          goto LABEL_54;
        }

        uint64_t v41 = *(id *)(v40 + 32);
      }

      uint64_t v42 = v41;
      swift_bridgeObjectRelease(v40);
      uint64_t v43 = [v42 type];

LABEL_42:
      uint64_t v92 = (id)INMediaItemTypeGetName(v43);
      if (v92)
      {
        uint64_t v93 = v92;
        uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
        uint64_t v96 = v95;
      }

      else
      {
        uint64_t v94 = 0LL;
        uint64_t v96 = 0xE000000000000000LL;
      }

      sub_19235C();
      uint64_t v123 = a5;
      if ((v97 & 1) != 0)
      {
        swift_bridgeObjectRelease(v96);
        uint64_t v98 = (id)INMediaItemTypeGetName(3LL);
        if (v98)
        {
LABEL_50:
          uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
          uint64_t v96 = v100;

          goto LABEL_51;
        }

        __break(1u);
      }

      sub_19236C();
      if ((v99 & 1) != 0)
      {
        swift_bridgeObjectRelease(v96);
        uint64_t v98 = (id)INMediaItemTypeGetName(4LL);
        if (v98) {
          goto LABEL_50;
        }
LABEL_54:
        __break(1u);
        JUMPOUT(0xB612CLL);
      }

  uint64_t v163 = v28;
  uint64_t v164 = v49;
  uint64_t v50 = 0LL;
  uint64_t v185 = _swiftEmptyArrayStorage;
  uint64_t v180 = v26 & 0xC000000000000001LL;
  uint64_t v166 = v26 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v175 = v26;
  uint64_t v165 = v26 + 32;
  uint64_t v28 = &qword_26AA80;
  uint64_t v179 = v9;
  uint64_t v174 = v10;
  uint64_t v162 = a5;
  while (1)
  {
    while (1)
    {
      if (v180)
      {
        uint64_t v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v175);
      }

      else
      {
        if ((unint64_t)v50 >= *(void *)(v166 + 16))
        {
          __break(1u);
          goto LABEL_70;
        }

        uint64_t v53 = *(id *)(v165 + 8LL * (void)v50);
      }

      a2 = v53;
      if (__OFADD__(v50++, 1LL))
      {
        __break(1u);
        goto LABEL_68;
      }

      uint64_t v24 = (char *)0xD000000000000013LL;
      uint64_t v49 = "PrioritizeClassicalPlayback";
      swift_bridgeObjectRetain("PrioritizeClassicalPlayback");
      uint64_t v55 = [a2 privateMediaItemValueData];
      if (!v55
        || (uint64_t v26 = (uint64_t)v55,
            a6 = (char *)[v55 internalSignals],
            (id)v26,
            !a6))
      {
        uint64_t v59 = "PrioritizeClassicalPlayback";
LABEL_28:
        swift_bridgeObjectRelease(v59);
        goto LABEL_29;
      }

      uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a6, &type metadata for String);

      a6 = *(char **)(v26 + 16);
      if (!a6)
      {
        swift_bridgeObjectRelease("PrioritizeClassicalPlayback");
        uint64_t v59 = (const char *)v26;
        goto LABEL_28;
      }

      uint64_t v56 = *(void *)(v26 + 32);
      uint64_t v57 = *(const char **)(v26 + 40);
      uint64_t v58 = v56 == 0xD000000000000013LL && v57 == "PrioritizeClassicalPlayback";
      if (v58 || (_stringCompareWithSmolCheck(_:_:expecting:)(v56, v57) & 1) != 0) {
        goto LABEL_11;
      }
      if (a6 != (_BYTE *)&dword_0 + 1) {
        break;
      }
LABEL_26:
      swift_bridgeObjectRelease("PrioritizeClassicalPlayback");
      swift_bridgeObjectRelease(v26);
      uint64_t v9 = v179;
      uint64_t v10 = v174;
      a5 = v162;
LABEL_29:

      if (v50 == a5)
      {
LABEL_47:
        swift_bridgeObjectRelease(v175);
        uint64_t v70 = v185;
        uint64_t v71 = static INMediaItem.unique(_:)(v185);
        swift_release(v70);
        uint64_t v72 = v167;
        uint64_t v28 = v163;
        uint64_t v73 = ((uint64_t (*)(char *, uint64_t, uint64_t))v163)(v167, v182, v9);
        uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
        uint64_t v75 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v76 = 0;
          _os_log_impl( &dword_0,  v74,  v75,  "PlayMediaAppResolver#postResolve adding MediaItems to PlayMediaIntent for Apple Music Classical playback",  v76,  2u);
          swift_slowDealloc(v76, -1LL, -1LL);
        }

        v10(v72, v9);
        uint64_t v77 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
        uint64_t v78 = v181;
        uint64_t v79 = swift_dynamicCastObjCClass(v181, v77);
        uint64_t v80 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
        a5 = v164;
        if (v79)
        {
          uint64_t v81 = [v78 backingStore];
          uint64_t v82 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
          uint64_t v83 = swift_dynamicCastObjCClass(v81, v82);
          if (v83) {
            goto LABEL_60;
          }
        }

        else
        {
          uint64_t v84 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
          if (swift_dynamicCastObjCClass(v78, v84))
          {
            uint64_t v81 = [v78 backingStore];
            uint64_t v85 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
            uint64_t v83 = swift_dynamicCastObjCClass(v81, v85);
            if (v83) {
              goto LABEL_60;
            }
          }

          else
          {
            uint64_t v86 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
            if (swift_dynamicCastObjCClass(v78, v86))
            {
              uint64_t v81 = [v78 backingStore];
              uint64_t v87 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
              uint64_t v83 = swift_dynamicCastObjCClass(v81, v87);
              if (v83) {
                goto LABEL_60;
              }
            }

            else
            {
              uint64_t v88 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
              if (!swift_dynamicCastObjCClass(v78, v88))
              {
                swift_bridgeObjectRelease(v71);
LABEL_62:
                if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v78,  (uint64_t)&off_26AA90) & 1) != 0)
                {
                  uint64_t v93 = [v181 *(SEL *)&v80[343]];
                  uint64_t v94 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
                  uint64_t v95 = (void *)swift_dynamicCastObjCClass(v93, v94);
                  if (!v95) {

                  }
                  [v95 setPlayShuffled:1];
                }

                goto LABEL_75;
              }

              uint64_t v81 = [v78 backingStore];
              uint64_t v89 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
              uint64_t v83 = swift_dynamicCastObjCClass(v81, v89);
              if (v83)
              {
LABEL_60:
                uint64_t v90 = (void *)v83;
                isa = Array._bridgeToObjectiveC()().super.isa;
                uint64_t v92 = (id)INIntentSlotValueTransformToMediaItemValues();

                [v90 setMediaItems:v92];
                swift_bridgeObjectRelease(v71);

                uint64_t v80 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
                uint64_t v78 = v181;
                goto LABEL_62;
              }
            }
          }
        }

        swift_bridgeObjectRelease(v71);

        goto LABEL_62;
      }
    }

    uint64_t v60 = *(void *)(v26 + 48);
    uint64_t v61 = *(const char **)(v26 + 56);
    if (v60 != 0xD000000000000013LL || v61 != "PrioritizeClassicalPlayback")
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v61);
      if ((result & 1) == 0) {
        break;
      }
    }

  *(void *)(v43 + 32) = sub_A89B0(v44);
  *(void *)(v43 + 40) = v45;
  uint64_t v46 = v43;
LABEL_11:
  NLContextUpdate.weightedPromptResponseTargets.setter(v46);
  uint64_t v48 = v122;
  uint64_t v47 = v123;
  uint64_t v49 = v121;
LABEL_12:
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v47, v35, v48);
  uint64_t v50 = 0LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v47, v50, 1LL, v48);
}

BOOL sub_10574()
{
  if (!v6[3])
  {
    sub_1F6CC((uint64_t)v6, &qword_284028);
    goto LABEL_5;
  }

  uint64_t v1 = type metadata accessor for UsoTask_shuffle_common_MediaItem(0LL);
  if (!swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, v1, 6LL))
  {
LABEL_5:
    uint64_t v2 = 0LL;
    goto LABEL_6;
  }

  uint64_t v2 = v5;
LABEL_6:
  BOOL v3 = v2 != 0;
  swift_release(v2);
  return v3;
}

uint64_t sub_10600(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = result;
    uint64_t v9 = (void *)(swift_bridgeObjectRetain(result) + 40);
    do
    {
      uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))*(v9 - 1);
      uint64_t v10 = *v9;
      swift_retain(*v9);
      v11(a2, a3, a4);
      swift_release(v10);
      v9 += 2;
      --v4;
    }

    while (v4);
    return swift_bridgeObjectRelease(v8);
  }

  return result;
}

uint64_t sub_10690@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = type metadata accessor for ControlsFlowProvider(0LL);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v7 = v29;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v29 - v12;
  ControlsFlowProvider.init()(v11);
  uint64_t v14 = type metadata accessor for AudioFlowProvider();
  uint64_t v15 = swift_allocObject(v14, 16LL, 7LL);
  static FeatureFlagProvider.shared.getter(v15);
  static AceService.current.getter(v36);
  v35[3] = v14;
  v35[4] = &off_26FF60;
  v35[0] = v15;
  uint64_t v16 = v15;
  uint64_t v17 = type metadata accessor for PommesResponseFlow(0LL);
  uint64_t v30 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = sub_1094C((uint64_t)v35, v14);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = *v20;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, v6);
  uint64_t v23 = (uint64_t)v31;
  uint64_t v24 = v32;
  uint64_t v25 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v5, v33);
  swift_retain(v16);
  uint64_t v26 = sub_10F4F4((uint64_t)v10, v22, v23, (uint64_t)v36, 0LL, v30);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v25);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v6);
  sub_6C3C(v35);
  swift_release(v16);
  uint64_t v27 = v34;
  v34[3] = v17;
  uint64_t result = sub_10430(&qword_289EE0, type metadata accessor for PommesResponseFlow, (uint64_t)&unk_21BD88);
  v27[4] = result;
  *uint64_t v27 = v26;
  return result;
}

uint64_t type metadata accessor for AudioFlowProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin17AudioFlowProvider);
}

uint64_t type metadata accessor for PommesResponseFlow(uint64_t a1)
{
  uint64_t result = qword_28E548;
  if (!qword_28E548) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PommesResponseFlow);
  }
  return result;
}

uint64_t sub_1094C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

void *sub_10974(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

uint64_t sub_109B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.onAsync(input:)[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10A18;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_10A18(uint64_t a1)
{
  uint64_t v6 = *v1;
  uint64_t v3 = *(void *)(v6 + 16);
  uint64_t v4 = *v1;
  uint64_t v6 = v4;
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_10A68(uint64_t a1)
{
  return sub_10A8C(a1) & 1;
}

uint64_t sub_10A8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v189 = type metadata accessor for Siri_Nlu_External_Parser.ParserIdentifier(0LL);
  uint64_t v197 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v186 = (char *)&v171 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v188 = sub_6C5C(&qword_28E668);
  __chkstk_darwin(v188);
  uint64_t v198 = (uint64_t)&v171 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_28E670);
  uint64_t v7 = __chkstk_darwin(v6);
  v196 = (char *)&v171 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v187 = (uint64_t)&v171 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v171 - v11;
  uint64_t v13 = type metadata accessor for USOParse(0LL);
  uint64_t v199 = *(void *)(v13 - 8);
  uint64_t v200 = v13;
  __chkstk_darwin(v13);
  v203 = (char *)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Input(0LL);
  uint64_t v210 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v193 = (char *)&v171 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v207 = type metadata accessor for Parse(0LL);
  uint64_t v17 = *(void *)(v207 - 8);
  uint64_t v18 = __chkstk_darwin(v207);
  uint64_t v190 = (char *)&v171 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v191 = (void **)((char *)&v171 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v194 = (char *)&v171 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v195 = (uint8_t **)((char *)&v171 - v25);
  __chkstk_darwin(v24);
  uint64_t v27 = (uint8_t **)((char *)&v171 - v26);
  uint64_t v28 = sub_6C5C(&qword_285BD0);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v205 = (uint64_t)&v171 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v204 = (char *)&v171 - v31;
  uint64_t v211 = type metadata accessor for Logger(0LL);
  uint64_t v32 = *(void *)(v211 - 8);
  uint64_t v33 = __chkstk_darwin(v211);
  uint64_t v192 = (char *)&v171 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v185 = (char *)&v171 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v184 = (char *)&v171 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v183 = (char *)&v171 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v182 = (char *)&v171 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v201 = (char *)&v171 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v202 = (char *)&v171 - v46;
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v171 - v47;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v49 = sub_6960(v211, (uint64_t)qword_2969C8);
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v208 = v49;
  uint64_t v209 = v50;
  uint64_t v51 = ((uint64_t (*)(char *))v50)(v48);
  uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v53 = static os_log_type_t.debug.getter();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v206 = a1;
  if (v54)
  {
    uint64_t v55 = v12;
    uint64_t v56 = v15;
    uint64_t v57 = v17;
    uint64_t v58 = v27;
    uint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl(&dword_0, v52, v53, "PommesResponseFlow#onInput", v59, 2u);
    uint64_t v60 = v59;
    uint64_t v27 = v58;
    uint64_t v17 = v57;
    uint64_t v15 = v56;
    uint64_t v12 = v55;
    a1 = v206;
    swift_slowDealloc(v60, -1LL, -1LL);
  }

  uint64_t v61 = *(void (**)(char *, uint64_t))(v32 + 8);
  v61(v48, v211);
  uint64_t v62 = v210;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v210 + 16);
  uint64_t v64 = v204;
  v63(v204, a1, v15);
  uint64_t v180 = *(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56);
  v180(v64, 0LL, 1LL, v15);
  uint64_t v65 = (uint64_t)v64;
  uint64_t v66 = v205;
  sub_88CFC(v65, v205);
  uint64_t v67 = v2;
  uint64_t v68 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_input, &v213, 33LL, 0LL);
  uint64_t v181 = v68;
  sub_1B3B0(v66, v68);
  uint64_t v69 = swift_endAccess(&v213);
  Input.parse.getter(v69);
  uint64_t v70 = *(uint64_t (**)(char *, uint64_t))(v17 + 88);
  uint64_t v71 = v207;
  int v72 = v70((char *)v27, v207);
  if (v72 == enum case for Parse.pommesResponse(_:))
  {
    (*(void (**)(void *, uint64_t))(v17 + 96))(v27, v71);
    uint64_t v73 = *v27;
    uint64_t v74 = v202;
    uint64_t v75 = v209(v202, v208, v211);
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl( &dword_0,  v76,  v77,  "PommesResponseFlow#onInput found .pommesResponse in primary parse of input",  v78,  2u);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    v61(v74, v211);
    uint64_t v79 = *(void **)(v67 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_pommesResponse);
    *(void *)(v67 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_pommesResponse) = v73;

    return 1LL;
  }

  uint64_t v179 = v2;
  if (v72 != enum case for Parse.uso(_:))
  {
    uint64_t v96 = (uint64_t)v192;
    uint64_t v97 = v209(v192, v208, v211);
    uint64_t v98 = (os_log_s *)Logger.logObject.getter(v97);
    os_log_type_t v99 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v100 = 0;
      _os_log_impl( &dword_0,  v98,  v99,  "PommesResponseFlow#onInput top parse is not .pommesResponse and .pommesResponse is not a top alternative for all owed .uso parse.",  v100,  2u);
      swift_slowDealloc(v100, -1LL, -1LL);
    }

    v61((char *)v96, v211);
    (*(void (**)(void *, uint64_t))(v17 + 8))(v27, v71);
    return 0LL;
  }

  int v175 = v72;
  uint64_t v176 = v70;
  unsigned int v178 = enum case for Parse.pommesResponse(_:);
  uint64_t v192 = v12;
  uint64_t v202 = (char *)v61;
  uint64_t v81 = v201;
  v209(v201, v208, v211);
  uint64_t v82 = v193;
  uint64_t v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v63)(v193, v206, v15);
  uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v87 = swift_slowAlloc(32LL, -1LL);
    uint64_t v173 = v87;
    uint64_t v213 = v87;
    uint64_t v174 = v27;
    uint64_t v172 = v86;
    *(_DWORD *)uint64_t v86 = 136315138;
    uint64_t v171 = v86 + 4;
    uint64_t v88 = Input.alternatives.getter(v87);
    uint64_t v89 = Array.description.getter(v88, v71);
    uint64_t v177 = v17;
    uint64_t v90 = v82;
    unint64_t v92 = v91;
    swift_bridgeObjectRelease(v88);
    uint64_t v212 = sub_6978(v89, v92, &v213);
    uint64_t v27 = v174;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, &v213);
    uint64_t v17 = v177;
    swift_bridgeObjectRelease(v92);
    (*(void (**)(char *, uint64_t))(v210 + 8))(v90, v15);
    uint64_t v93 = v172;
    _os_log_impl( &dword_0,  v84,  v85,  "PommesResponseFlow#onInput found .uso parse in primary parse of input and alternatives: %s",  v172,  0xCu);
    uint64_t v94 = v173;
    swift_arrayDestroy(v173, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v94, -1LL, -1LL);
    swift_slowDealloc(v93, -1LL, -1LL);

    uint64_t v95 = v201;
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v210 + 8))(v82, v15);

    uint64_t v95 = v81;
  }

  uint64_t v101 = ((uint64_t (*)(char *, uint64_t))v202)(v95, v211);
  v102 = v203;
  uint64_t v103 = v195;
  uint64_t v104 = Input.parse.getter(v101);
  uint64_t v105 = Parse.firstUsoTask()(v104);
  uint64_t v210 = *(void *)(v17 + 8);
  ((void (*)(void *, uint64_t))v210)(v103, v71);
  uint64_t v106 = v200;
  if (!v105)
  {
    uint64_t v144 = v185;
    uint64_t v145 = v209(v185, v208, v211);
    uint64_t v146 = (os_log_s *)Logger.logObject.getter(v145);
    uint64_t v147 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v146, (os_log_type_t)v147))
    {
      uint64_t v148 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v148 = 0;
      _os_log_impl( &dword_0,  v146,  (os_log_type_t)v147,  "PommesResponseFlow#onInput failed to get uso task from parse",  v148,  2u);
      swift_slowDealloc(v148, -1LL, -1LL);
    }

    goto LABEL_39;
  }

  uint64_t v193 = (char *)v105;
  uint64_t v107 = sub_201100();
  if ((v107 & 1) == 0)
  {
    uint64_t v144 = v184;
    uint64_t v149 = v209(v184, v208, v211);
    uint64_t v150 = (os_log_s *)Logger.logObject.getter(v149);
    os_log_type_t v151 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v152 = 0;
      uint64_t v153 = "PommesResponseFlow#onInput received unhandleable task";
LABEL_37:
      _os_log_impl(&dword_0, v150, v151, v153, v152, 2u);
      swift_slowDealloc(v152, -1LL, -1LL);
    }

LABEL_38:
    swift_release(v193);
LABEL_39:
    ((void (*)(char *, uint64_t))v202)(v144, v211);
    ((void (*)(void *, uint64_t))v210)(v27, v71);
    return 0LL;
  }

  uint64_t v173 = v15;
  uint64_t v108 = Input.alternatives.getter(v107);
  uint64_t v109 = *(void *)(v108 + 16);
  uint64_t v110 = swift_bridgeObjectRelease(v108);
  if (!v109)
  {
    uint64_t v144 = v183;
    uint64_t v154 = v209(v183, v208, v211);
    uint64_t v150 = (os_log_s *)Logger.logObject.getter(v154);
    os_log_type_t v151 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v150, v151))
    {
      uint64_t v152 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v152 = 0;
      uint64_t v153 = "PommesResponseFlow#onInput received empty alternatives list, no .pommesResponse in alternatives";
      goto LABEL_37;
    }

    goto LABEL_38;
  }

  uint64_t v111 = Input.alternatives.getter(v110);
  uint64_t v112 = v111;
  uint64_t v113 = *(void *)(v111 + 16);
  if (!v113)
  {
    swift_release(v193);
    swift_bridgeObjectRelease(v112);
LABEL_46:
    ((void (*)(void *, uint64_t))v210)(v27, v71);
    return 1LL;
  }

  uint64_t v174 = v27;
  unint64_t v114 = (*(unsigned __int8 *)(v17 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v183 = (char *)v111;
  uint64_t v115 = (char *)(v111 + v114);
  LODWORD(v185) = enum case for Siri_Nlu_External_Parser.ParserIdentifier.overrides(_:);
  uint64_t v184 = *(char **)(v17 + 72);
  uint64_t v116 = *(void (**)(char *))(v17 + 16);
  uint64_t v117 = v194;
  uint64_t v118 = v187;
  uint64_t v119 = v199;
  uint64_t v177 = v17;
  while (1)
  {
    uint64_t v206 = v113;
    uint64_t v201 = v115;
    v116(v117);
    uint64_t v120 = v191;
    ((void (*)(void **, char *, uint64_t))v116)(v191, v117, v71);
    uint64_t v121 = v176;
    int v122 = v176((char *)v120, v71);
    if (v122 == v178)
    {
      swift_bridgeObjectRelease(v183);
      (*(void (**)(void **, uint64_t))(v17 + 96))(v120, v71);
      uint64_t v155 = *v120;
      uint64_t v156 = v117;
      uint64_t v157 = *(void **)(v179 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_pommesResponse);
      *(void *)(v179 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_pommesResponse) = v155;
      id v158 = v155;

      uint64_t v159 = v195;
      *uint64_t v195 = v158;
      (*(void (**)(void *, void, uint64_t))(v17 + 104))(v159, v178, v71);
      id v160 = v158;
      uint64_t v161 = (uint64_t)v204;
      Input.init(parse:)(v159);

      swift_release(v193);
      ((void (*)(char *, uint64_t))v210)(v156, v71);
      v180((char *)v161, 0LL, 1LL, v173);
      uint64_t v162 = v205;
      sub_88CFC(v161, v205);
      uint64_t v163 = v181;
      swift_beginAccess(v181, &v213, 33LL, 0LL);
      sub_1B3B0(v162, v163);
      swift_endAccess(&v213);
LABEL_45:
      uint64_t v27 = v174;
      goto LABEL_46;
    }

    ((void (*)(void **, uint64_t))v210)(v120, v71);
    uint64_t v123 = v190;
    uint64_t v124 = v116;
    ((void (*)(void))v116)();
    int v125 = v121(v123, v71);
    if (v125 != v175)
    {
      swift_bridgeObjectRelease(v183);
      ((void (*)(char *, uint64_t))v210)(v123, v71);
      goto LABEL_50;
    }

    (*(void (**)(char *, uint64_t))(v17 + 96))(v123, v71);
    uint64_t v126 = (*(uint64_t (**)(char *, char *, uint64_t))(v119 + 32))(v102, v123, v106);
    uint64_t v127 = v106;
    uint64_t v128 = (uint64_t)v192;
    USOParse.parserIdentifier.getter(v126);
    uint64_t v129 = v197;
    uint64_t v130 = v189;
    (*(void (**)(uint64_t, void, uint64_t))(v197 + 104))(v118, v185, v189);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v118, 0LL, 1LL, v130);
    uint64_t v131 = v102;
    uint64_t v132 = v118;
    uint64_t v133 = v198;
    uint64_t v134 = v198 + *(int *)(v188 + 48);
    sub_FF10(v128, v198, &qword_28E670);
    sub_FF10(v132, v134, &qword_28E670);
    uint64_t v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
    if (v135(v133, 1LL, v130) != 1) {
      break;
    }
    sub_1F6CC(v132, &qword_28E670);
    sub_1F6CC(v128, &qword_28E670);
    (*(void (**)(char *, uint64_t))(v199 + 8))(v131, v127);
    if (v135(v134, 1LL, v130) != 1) {
      goto LABEL_48;
    }
    uint64_t v118 = v132;
    uint64_t v106 = v127;
    sub_1F6CC(v198, &qword_28E670);
    uint64_t v71 = v207;
    uint64_t v119 = v199;
LABEL_21:
    uint64_t v117 = v194;
    ((void (*)(char *, uint64_t))v210)(v194, v71);
    uint64_t v115 = &v184[(void)v201];
    uint64_t v113 = v206 - 1;
    uint64_t v17 = v177;
    v102 = v203;
    uint64_t v116 = v124;
    if (v206 == 1)
    {
      swift_release(v193);
      swift_bridgeObjectRelease(v183);
      goto LABEL_45;
    }
  }

  uint64_t v136 = (uint64_t)v196;
  sub_FF10(v133, (uint64_t)v196, &qword_28E670);
  if (v135(v134, 1LL, v130) != 1)
  {
    uint64_t v137 = v197;
    uint64_t v138 = v186;
    (*(void (**)(char *, uint64_t, uint64_t))(v197 + 32))(v186, v134, v130);
    uint64_t v139 = sub_10430( &qword_28E678,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_Parser.ParserIdentifier,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_Parser.ParserIdentifier);
    char v140 = dispatch thunk of static Equatable.== infix(_:_:)(v196, v138, v130, v139);
    uint64_t v141 = *(void (**)(char *, uint64_t))(v137 + 8);
    v141(v138, v130);
    uint64_t v142 = v187;
    sub_1F6CC(v187, &qword_28E670);
    sub_1F6CC((uint64_t)v192, &qword_28E670);
    uint64_t v119 = v199;
    uint64_t v106 = v200;
    (*(void (**)(char *, uint64_t))(v199 + 8))(v203, v200);
    v141(v196, v130);
    uint64_t v143 = v133;
    uint64_t v118 = v142;
    sub_1F6CC(v143, &qword_28E670);
    uint64_t v71 = v207;
    if ((v140 & 1) == 0) {
      goto LABEL_49;
    }
    goto LABEL_21;
  }

  sub_1F6CC(v187, &qword_28E670);
  sub_1F6CC((uint64_t)v192, &qword_28E670);
  (*(void (**)(char *, uint64_t))(v199 + 8))(v203, v200);
  (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v136, v130);
LABEL_48:
  sub_1F6CC(v198, &qword_28E668);
  uint64_t v71 = v207;
LABEL_49:
  swift_bridgeObjectRelease(v183);
LABEL_50:
  uint64_t v164 = v174;
  uint64_t v165 = v182;
  uint64_t v166 = v209(v182, v208, v211);
  uint64_t v167 = (os_log_s *)Logger.logObject.getter(v166);
  os_log_type_t v168 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v167, v168))
  {
    uint64_t v169 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v169 = 0;
    _os_log_impl( &dword_0,  v167,  v168,  "PommesResponseFlow#onInput .pommesResponse not found in alternatives before encountering a non-override parse",  v169,  2u);
    swift_slowDealloc(v169, -1LL, -1LL);
  }

  swift_release(v193);
  ((void (*)(char *, uint64_t))v202)(v165, v211);
  uint64_t v170 = (void (*)(void *, uint64_t))v210;
  ((void (*)(char *, uint64_t))v210)(v194, v71);
  v170(v164, v71);
  return 0LL;
}

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_11C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_11C64()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_11CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to Flow.execute()[1]);
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_11C64;
  return Flow.execute()(a1, a2, a3);
}

uint64_t sub_11D18(void (*a1)(char *), uint64_t a2)
{
  return sub_11D38(a1, a2);
}

uint64_t sub_11D38(void (*a1)(char *), uint64_t a2)
{
  uint64_t v580 = a2;
  uint64_t v581 = a1;
  uint64_t v546 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v536 = *(void *)(v546 - 8);
  __chkstk_darwin(v546);
  uint64_t v512 = (char *)v505 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v528 = sub_6C5C(&qword_284DA0);
  __chkstk_darwin(v528);
  uint64_t v537 = (uint64_t)v505 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_284DC8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v521 = (uint64_t)v505 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v535 = (uint64_t)v505 - v9;
  __chkstk_darwin(v8);
  os_log_type_t v540 = (char *)v505 - v10;
  uint64_t v559 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v558 = *(void *)(v559 - 8);
  __chkstk_darwin(v559);
  uint64_t v557 = (char *)v505 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v576 = (void *)type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v574 = *(v576 - 1);
  __chkstk_darwin(v576);
  v563 = (char *)v505 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v569 = sub_6C5C(&qword_284DA8);
  uint64_t v13 = __chkstk_darwin(v569);
  uint64_t v522 = (uint64_t)v505 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v529 = (uint64_t)v505 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v547 = (uint64_t)v505 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v538 = (uint64_t)v505 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v549 = (uint64_t)v505 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v560 = (uint64_t)v505 - v24;
  __chkstk_darwin(v23);
  uint64_t v575 = (uint64_t)v505 - v25;
  uint64_t v26 = sub_6C5C(&qword_284DB0);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v513 = (uint64_t)v505 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v531 = (uint64_t)v505 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v532 = (uint64_t)v505 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v519 = (uint64_t)v505 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v533 = (char *)v505 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v526 = (char *)v505 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v534 = (uint64_t)v505 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v562 = (uint64_t)v505 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v553 = (uint64_t)v505 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v524 = (uint64_t)v505 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v541 = (char *)v505 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v542 = (uint64_t)v505 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v530 = (uint64_t)v505 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v545 = (char *)v505 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v554 = (uint64_t)v505 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v539 = (uint64_t)v505 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v555 = (uint64_t)v505 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v556 = (uint64_t)v505 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v565 = (uint64_t)v505 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v572 = (uint64_t)v505 - v66;
  __chkstk_darwin(v65);
  uint64_t v567 = (char *)v505 - v67;
  uint64_t v68 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v68);
  uint64_t v573 = (char *)v505 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v578 = *(uint8_t **)(v70 - 8);
  uint64_t v579 = v70;
  uint64_t v71 = __chkstk_darwin(v70);
  uint64_t v571 = (char *)v505 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v71);
  uint64_t v577 = (char *)v505 - v73;
  uint64_t v74 = type metadata accessor for Logger(0LL);
  uint64_t v582 = *(void *)(v74 - 8);
  uint64_t v583 = v74;
  uint64_t v75 = __chkstk_darwin(v74);
  os_log_type_t v77 = (char *)v505 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = __chkstk_darwin(v75);
  uint64_t v80 = (char *)v505 - v79;
  uint64_t v81 = __chkstk_darwin(v78);
  v568 = (char *)v505 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  v566 = (char *)v505 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  uint64_t v511 = (char *)v505 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v516 = (char *)v505 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v520 = (char *)v505 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  uint64_t v525 = (char *)v505 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v544 = (char *)v505 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  uint64_t v543 = (char *)v505 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v518 = (char *)v505 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  uint64_t v551 = (char *)v505 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  uint64_t v561 = (char *)v505 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  os_log_type_t v564 = (char *)v505 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  uint64_t v570 = (char *)v505 - v106;
  __chkstk_darwin(v105);
  uint64_t v108 = (char *)v505 - v107;
  uint64_t v109 = sub_6C5C(&qword_285BD0);
  uint64_t v110 = __chkstk_darwin(v109);
  uint64_t v552 = (uint64_t)v505 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v110);
  uint64_t v113 = (char *)v505 - v112;
  uint64_t v114 = type metadata accessor for Input(0LL);
  uint64_t v115 = *(void *)(v114 - 8);
  uint64_t v116 = __chkstk_darwin(v114);
  uint64_t v515 = (char *)v505 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v118 = __chkstk_darwin(v116);
  unsigned __int8 v514 = (char *)v505 - v119;
  uint64_t v120 = __chkstk_darwin(v118);
  uint64_t v523 = (uint64_t)v505 - v121;
  uint64_t v122 = __chkstk_darwin(v120);
  uint64_t v548 = (char *)v505 - v123;
  uint64_t v124 = __chkstk_darwin(v122);
  uint64_t v550 = (uint64_t)v505 - v125;
  __chkstk_darwin(v124);
  uint64_t v127 = (char *)v505 - v126;
  uint64_t v128 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_input, v589, 0LL, 0LL);
  uint64_t v517 = v128;
  sub_FF10(v128, (uint64_t)v113, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1LL, v114) == 1)
  {
    uint64_t v129 = v2;
    sub_1F6CC((uint64_t)v113, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v130 = v583;
    uint64_t v131 = sub_6960(v583, (uint64_t)qword_2969C8);
    uint64_t v132 = v582;
    uint64_t v133 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v582 + 16))(v77, v131, v130);
    uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
    os_log_type_t v135 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v136 = 0;
      _os_log_impl(&dword_0, v134, v135, "PommesResponseFlow#execute error unpacking input", v136, 2u);
      swift_slowDealloc(v136, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v132 + 8))(v77, v130);
    uint64_t v137 = *(void *)(v129
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
    uint64_t v138 = v129 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
    type metadata accessor for App(0LL);
    uint64_t v139 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v140 = swift_allocObject(&unk_2766A8, 32LL, 7LL);
    uint64_t v141 = v580;
    *(void *)(v140 + 16) = v581;
    *(void *)(v140 + 24) = v141;
    type metadata accessor for SiriKitTaskLoggingProvider(0LL);
    uint64_t v142 = swift_retain(v141);
    uint64_t v143 = static SiriKitTaskLoggingProvider.shared.getter(v142);
    sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v137,  v138,  v139,  v143,  0xD000000000000013LL,  0x80000000002241E0LL,  (uint64_t)sub_201398,  v140);
    swift_release(v143);
    swift_release(v139);
    return swift_release(v140);
  }

  uint64_t v145 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
  uint64_t v510 = v127;
  v145(v127, v113, v114);
  uint64_t v146 = *(void **)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_pommesResponse);
  uint64_t v527 = v115;
  uint64_t v147 = v2;
  if (!v146)
  {
    uint64_t v190 = v582;
    uint64_t v189 = v583;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v191 = sub_6960(v189, (uint64_t)qword_2969C8);
    uint64_t v192 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 16))(v80, v191, v189);
    uint64_t v193 = (os_log_s *)Logger.logObject.getter(v192);
    os_log_type_t v194 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v193, v194))
    {
      uint64_t v195 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v195 = 0;
      _os_log_impl(&dword_0, v193, v194, "PommesResponseFlow#execute pommesResponse is nil", v195, 2u);
      v196 = v195;
      uint64_t v189 = v583;
      swift_slowDealloc(v196, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v190 + 8))(v80, v189);
    uint64_t v197 = *(void *)(v2
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
    uint64_t v198 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
    type metadata accessor for App(0LL);
    uint64_t v199 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v200 = swift_allocObject(&unk_2766D0, 32LL, 7LL);
    uint64_t v201 = v580;
    *(void *)(v200 + 16) = v581;
    *(void *)(v200 + 24) = v201;
    type metadata accessor for SiriKitTaskLoggingProvider(0LL);
    uint64_t v202 = swift_retain(v201);
    uint64_t v203 = static SiriKitTaskLoggingProvider.shared.getter(v202);
    sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v197,  v198,  v199,  v203,  0x6F707365526C694ELL,  0xEB0000000065736ELL,  (uint64_t)sub_201398,  v200);
    swift_release(v203);
    swift_release(v199);
    uint64_t v204 = v200;
    goto LABEL_37;
  }

  id v148 = v146;
  uint64_t v149 = sub_10470();
  uint64_t v151 = v582;
  uint64_t v150 = v583;
  if (!v149)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v205 = sub_6960(v150, (uint64_t)qword_2969C8);
    uint64_t v206 = v568;
    (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v568, v205, v150);
    id v207 = v148;
    uint64_t v208 = v150;
    uint64_t v209 = (os_log_s *)Logger.logObject.getter(v207);
    os_log_type_t v210 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v209, v210))
    {
      uint64_t v211 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v579 = swift_slowAlloc(32LL, -1LL);
      uint64_t v584 = v579;
      *(_DWORD *)uint64_t v211 = 136315138;
      uint64_t v578 = v211 + 4;
      uint64_t v212 = dispatch thunk of PommesResponse.experiences.getter();
      uint64_t v213 = type metadata accessor for Experience(0LL);
      uint64_t v214 = v207;
      uint64_t v215 = v114;
      uint64_t v216 = Array.description.getter(v212, v213);
      unint64_t v218 = v217;
      swift_bridgeObjectRelease(v212);
      uint64_t v219 = v216;
      uint64_t v114 = v215;
      id v207 = v214;
      uint64_t v588 = sub_6978(v219, v218, &v584);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v588, v589);

      swift_bridgeObjectRelease(v218);
      _os_log_impl( &dword_0,  v209,  v210,  "PommesResponseFlow#execute pommesResponse doesn't contain audioExperience %s",  v211,  0xCu);
      uint64_t v220 = v579;
      swift_arrayDestroy(v579, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v220, -1LL, -1LL);
      swift_slowDealloc(v211, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v582 + 8))(v568, v583);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v151 + 8))(v206, v208);
    }

    uint64_t v246 = v580;
    uint64_t v247 = *(void *)(v147
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
    uint64_t v248 = v147 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
    type metadata accessor for App(0LL);
    uint64_t v249 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v250 = swift_allocObject(&unk_2766F8, 32LL, 7LL);
    *(void *)(v250 + 16) = v581;
    *(void *)(v250 + 24) = v246;
    type metadata accessor for SiriKitTaskLoggingProvider(0LL);
    uint64_t v251 = swift_retain(v246);
    uint64_t v252 = static SiriKitTaskLoggingProvider.shared.getter(v251);
    sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v247,  v248,  v249,  v252,  1161916238LL,  0xE400000000000000LL,  (uint64_t)sub_201398,  v250);

    swift_release(v252);
    swift_release(v249);
    uint64_t v204 = v250;
LABEL_37:
    swift_release(v204);
LABEL_38:
    uint64_t v253 = *(uint64_t (**)(uint64_t, char *))(v527 + 8);
    uint64_t v254 = (uint64_t)v510;
    id v255 = (char *)v114;
    return v253(v254, v255);
  }

  uint64_t v152 = (void *)v149;
  uint64_t v507 = v2;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  id v508 = v148;
  uint64_t v153 = sub_6960(v150, (uint64_t)qword_2969C8);
  uint64_t v154 = *(char **)(v151 + 16);
  uint64_t v509 = v153;
  v568 = v154;
  uint64_t v155 = ((uint64_t (*)(char *))v154)(v108);
  uint64_t v156 = (os_log_s *)Logger.logObject.getter(v155);
  os_log_type_t v157 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v156, v157))
  {
    id v158 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v158 = 0;
    _os_log_impl(&dword_0, v156, v157, "PommesResponseFlow#execute", v158, 2u);
    uint64_t v159 = v158;
    uint64_t v151 = v582;
    swift_slowDealloc(v159, -1LL, -1LL);
  }

  uint64_t v582 = *(void *)(v151 + 8);
  ((void (*)(char *, uint64_t))v582)(v108, v150);
  id v160 = v152;
  uint64_t v161 = v577;
  Experience.userDialogAct.getter(v160);

  uint64_t v162 = type metadata accessor for AudioUsoIntent(0LL);
  uint64_t v163 = v578;
  uint64_t v164 = v579;
  uint64_t v165 = (void (*)(char *, char *, uint64_t))*((void *)v578 + 2);
  uint64_t v166 = v573;
  v165(v573, v161, v579);
  (*((void (**)(char *, void, uint64_t, uint64_t))v163 + 7))(v166, 0LL, 1LL, v164);
  uint64_t v167 = AudioUsoIntent.__allocating_init(userDialogAct:)(v166);
  if (!v167)
  {
    v221 = v160;
    uint64_t v222 = v566;
    uint64_t v223 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v566, v509, v150);
    v224 = (os_log_s *)Logger.logObject.getter(v223);
    os_log_type_t v225 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v224, v225))
    {
      uint64_t v226 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v226 = 0;
      _os_log_impl(&dword_0, v224, v225, "PommesResponseFlow#execute AudioUsoIntent failed to be constructed", v226, 2u);
      v227 = v226;
      uint64_t v150 = v583;
      swift_slowDealloc(v227, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v582)(v222, v150);
    uint64_t v228 = *(void *)(v507
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
    uint64_t v229 = v507 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
    type metadata accessor for App(0LL);
    uint64_t v230 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v231 = swift_allocObject(&unk_276720, 32LL, 7LL);
    uint64_t v232 = v580;
    *(void *)(v231 + 16) = v581;
    *(void *)(v231 + 24) = v232;
    type metadata accessor for SiriKitTaskLoggingProvider(0LL);
    uint64_t v233 = swift_retain(v232);
    uint64_t v234 = static SiriKitTaskLoggingProvider.shared.getter(v233);
    sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v228,  v229,  v230,  v234,  0xD000000000000012LL,  0x8000000000224200LL,  (uint64_t)sub_201398,  v231);

    swift_release(v234);
    swift_release(v230);
    swift_release(v231);
    (*((void (**)(char *, uint64_t))v578 + 1))(v161, v164);
    goto LABEL_38;
  }

  id v168 = (id)v167;
  v505[1] = v162;
  id v506 = v160;
  uint64_t v573 = (char *)v114;
  uint64_t v169 = v570;
  ((void (*)(char *, uint64_t, uint64_t))v568)(v570, v509, v150);
  uint64_t v170 = v571;
  v165(v571, v161, v164);
  uint64_t v171 = (char *)v508;
  uint64_t v172 = (os_log_s *)Logger.logObject.getter(v171);
  os_log_type_t v173 = static os_log_type_t.debug.getter();
  BOOL v174 = os_log_type_enabled(v172, v173);
  v566 = v171;
  if (v174)
  {
    uint64_t v175 = swift_slowAlloc(22LL, -1LL);
    v505[0] = swift_slowAlloc(64LL, -1LL);
    uint64_t v588 = v505[0];
    *(_DWORD *)uint64_t v175 = 136315394;
    uint64_t v176 = v171;
    id v177 = [v176 description];
    uint64_t v178 = static String._unconditionallyBridgeFromObjectiveC(_:)(v177);
    id v508 = v168;
    unint64_t v180 = v179;

    uint64_t v584 = sub_6978(v178, v180, &v588);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v584, v585);

    swift_bridgeObjectRelease(v180);
    *(_WORD *)(v175 + 12) = 2080;
    type metadata accessor for SiriNLUTypesPrintUtils(0LL);
    uint64_t v586 = v579;
    uint64_t v587 = sub_10430( &qword_284610,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
    uint64_t v181 = (char *)sub_10974(&v584);
    uint64_t v182 = v571;
    v165(v181, v571, v579);
    uint64_t v183 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v584);
    unint64_t v185 = v184;
    sub_6C3C(&v584);
    uint64_t v584 = sub_6978(v183, v185, &v588);
    id v168 = v508;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v584, v585);
    unint64_t v186 = v185;
    uint64_t v164 = v579;
    swift_bridgeObjectRelease(v186);
    uint64_t v578 = (uint8_t *)*((void *)v578 + 1);
    ((void (*)(char *, uint64_t))v578)(v182, v164);
    _os_log_impl( &dword_0,  v172,  v173,  "PommesResponseFlow#execute pommesResponse: %s userDialogAct: %s",  (uint8_t *)v175,  0x16u);
    uint64_t v187 = v505[0];
    swift_arrayDestroy(v505[0], 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v187, -1LL, -1LL);
    swift_slowDealloc(v175, -1LL, -1LL);

    uint64_t v188 = v570;
  }

  else
  {

    uint64_t v578 = (uint8_t *)*((void *)v578 + 1);
    ((void (*)(char *, uint64_t))v578)(v170, v164);

    uint64_t v188 = v169;
  }

  unint64_t v235 = (void (*)(char *, uint64_t))v582;
  uint64_t v236 = ((uint64_t (*)(char *, uint64_t))v582)(v188, v150);
  uint64_t v237 = v572;
  uint64_t v238 = (uint64_t)v567;
  dispatch thunk of AudioUsoIntent.verb.getter(v236);
  uint64_t v239 = v574;
  v240 = v576;
  uint64_t v570 = *(char **)(v574 + 104);
  ((void (*)(uint64_t, void, void *))v570)(v237, enum case for CommonAudio.Verb.resume(_:), v576);
  uint64_t v571 = *(char **)(v239 + 56);
  ((void (*)(uint64_t, void, uint64_t, void *))v571)(v237, 0LL, 1LL, v240);
  uint64_t v241 = v575;
  uint64_t v242 = v575 + *(int *)(v569 + 48);
  sub_FF10(v238, v575, &qword_284DB0);
  uint64_t v243 = v240;
  sub_FF10(v237, v242, &qword_284DB0);
  uint64_t v244 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v239 + 48);
  if (v244(v241, 1LL, v243) == 1)
  {
    sub_1F6CC(v237, &qword_284DB0);
    sub_1F6CC(v238, &qword_284DB0);
    if (v244(v242, 1LL, v576) == 1)
    {
      sub_1F6CC(v575, &qword_284DB0);
      goto LABEL_41;
    }

    goto LABEL_34;
  }

  uint64_t v245 = v565;
  sub_FF10(v241, v565, &qword_284DB0);
  if (v244(v242, 1LL, v243) == 1)
  {
    sub_1F6CC(v572, &qword_284DB0);
    sub_1F6CC(v238, &qword_284DB0);
    (*(void (**)(uint64_t, void *))(v574 + 8))(v245, v243);
LABEL_34:
    sub_1F6CC(v575, &qword_284DA8);
    goto LABEL_43;
  }

  uint64_t v256 = v574;
  uint64_t v257 = *(void (**)(char *, uint64_t, void *))(v574 + 32);
  id v508 = v244;
  uint64_t v258 = v245;
  v259 = v563;
  v257(v563, v242, v243);
  uint64_t v260 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v261 = dispatch thunk of static Equatable.== infix(_:_:)(v258, v259, v243, v260);
  id v262 = v168;
  v263 = *(void (**)(char *, void *))(v256 + 8);
  v263(v259, v243);
  sub_1F6CC(v572, &qword_284DB0);
  sub_1F6CC(v238, &qword_284DB0);
  uint64_t v264 = v258;
  uint64_t v244 = (unsigned int (*)(uint64_t, uint64_t, void *))v508;
  v263((char *)v264, v243);
  id v168 = v262;
  unint64_t v235 = (void (*)(char *, uint64_t))v582;
  sub_1F6CC(v241, &qword_284DB0);
  if ((v261 & 1) != 0)
  {
LABEL_41:
    v265 = v564;
    uint64_t v266 = v583;
    uint64_t v267 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v564, v509, v583);
    v268 = (os_log_s *)Logger.logObject.getter(v267);
    os_log_type_t v269 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v268, v269))
    {
      uint64_t v270 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v270 = 0;
      uint64_t v271 = "PommesResponseFlow#execute un-ambiguous resume. Completing and calling SiriPlaybackControls makeFlow";
LABEL_46:
      _os_log_impl(&dword_0, v268, v269, v271, v270, 2u);
      swift_slowDealloc(v270, -1LL, -1LL);
      goto LABEL_47;
    }

    goto LABEL_47;
  }

LABEL_43:
  uint64_t v584 = (uint64_t)v168;
  if (AudioIntent.isReferencedPlayRequest()())
  {
    v265 = v561;
    uint64_t v266 = v583;
    uint64_t v272 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v561, v509, v583);
    v268 = (os_log_s *)Logger.logObject.getter(v272);
    os_log_type_t v269 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v268, v269))
    {
      uint64_t v270 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v270 = 0;
      uint64_t v271 = "PommesResponseFlow#execute Referenced play request: This is an AddSpeaker request and should be handled in controls";
      goto LABEL_46;
    }

LABEL_47:
    v235(v265, v266);
    uint64_t v273 = (uint64_t)v510;
    sub_20051C((uint64_t)v510, v581, v580);

    swift_release(v168);
    uint64_t v274 = v577;
    uint64_t v275 = v164;
LABEL_48:
    ((void (*)(char *, uint64_t))v578)(v274, v275);
    uint64_t v253 = *(uint64_t (**)(uint64_t, char *))(v527 + 8);
    uint64_t v254 = v273;
LABEL_49:
    id v255 = v573;
    return v253(v254, v255);
  }

  uint64_t v584 = (uint64_t)v168;
  BOOL v276 = AudioIntent.isPlayRequest()();
  if (v276)
  {
    v277 = v551;
    uint64_t v278 = v583;
    uint64_t v279 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v551, v509, v583);
    v280 = (os_log_s *)Logger.logObject.getter(v279);
    os_log_type_t v281 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v280, v281))
    {
      id v282 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v282 = 0;
      _os_log_impl(&dword_0, v280, v281, "PommesResponseFlow#execute forwarding to first audio play flow", v282, 2u);
      swift_slowDealloc(v282, -1LL, -1LL);
    }

    v235(v277, v278);
    uint64_t v283 = v527;
    uint64_t v284 = v552;
    uint64_t v285 = (uint64_t)v510;
    uint64_t v286 = v573;
    (*(void (**)(uint64_t, char *, char *))(v527 + 16))(v552, v510, v573);
    (*(void (**)(uint64_t, void, uint64_t, char *))(v283 + 56))(v284, 0LL, 1LL, v286);
    uint64_t v287 = sub_110130(v284);
    sub_1F6CC(v284, &qword_285BD0);
    v288 = v557;
    static ExecuteResponse.complete(next:)(v287);
    swift_release(v287);
    v581(v288);

    swift_release(v168);
    (*(void (**)(char *, uint64_t))(v558 + 8))(v288, v559);
    ((void (*)(char *, uint64_t))v578)(v577, v164);
    return (*(uint64_t (**)(uint64_t, char *))(v283 + 8))(v285, v286);
  }

  uint64_t v289 = v556;
  id v508 = v168;
  dispatch thunk of AudioUsoIntent.verb.getter(v276);
  uint64_t v290 = v555;
  uint64_t v291 = v576;
  ((void (*)(uint64_t, void, void *))v570)(v555, enum case for CommonAudio.Verb.subscribe(_:), v576);
  ((void (*)(uint64_t, void, uint64_t, void *))v571)(v290, 0LL, 1LL, v291);
  uint64_t v292 = v560;
  uint64_t v293 = v560 + *(int *)(v569 + 48);
  sub_FF10(v289, v560, &qword_284DB0);
  uint64_t v294 = v291;
  sub_FF10(v290, v293, &qword_284DB0);
  if (v244(v292, 1LL, v291) == 1)
  {
    sub_1F6CC(v290, &qword_284DB0);
    sub_1F6CC(v289, &qword_284DB0);
    unsigned int v295 = v244(v293, 1LL, v576);
    uint64_t v296 = v562;
    uint64_t v297 = v554;
    v298 = (void (*)(char *, void, void *))v570;
    if (v295 == 1)
    {
      uint64_t v299 = v560;
      v300 = (void (*)(uint64_t, void, uint64_t, void *))v571;
LABEL_69:
      uint64_t v303 = sub_1F6CC(v299, &qword_284DB0);
      goto LABEL_70;
    }

    goto LABEL_59;
  }

  uint64_t v301 = v539;
  sub_FF10(v292, v539, &qword_284DB0);
  unsigned int v302 = v244(v293, 1LL, v291);
  uint64_t v296 = v562;
  uint64_t v297 = v554;
  if (v302 == 1)
  {
    sub_1F6CC(v555, &qword_284DB0);
    sub_1F6CC(v556, &qword_284DB0);
    (*(void (**)(uint64_t, void *))(v574 + 8))(v301, v294);
    v298 = (void (*)(char *, void, void *))v570;
LABEL_59:
    uint64_t v303 = sub_1F6CC(v560, &qword_284DA8);
    v300 = (void (*)(uint64_t, void, uint64_t, void *))v571;
    goto LABEL_60;
  }

  uint64_t v329 = v574;
  v330 = v563;
  (*(void (**)(char *, uint64_t, void *))(v574 + 32))(v563, v293, v294);
  uint64_t v331 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  uint64_t v332 = v301;
  LODWORD(v575) = dispatch thunk of static Equatable.== infix(_:_:)(v301, v330, v294, v331);
  NSString v333 = *(void (**)(char *, void *))(v329 + 8);
  v300 = (void (*)(uint64_t, void, uint64_t, void *))v571;
  v333(v330, v294);
  sub_1F6CC(v555, &qword_284DB0);
  sub_1F6CC(v556, &qword_284DB0);
  v333((char *)v332, v294);
  uint64_t v303 = sub_1F6CC(v292, &qword_284DB0);
  v298 = (void (*)(char *, void, void *))v570;
  if ((v575 & 1) != 0) {
    goto LABEL_70;
  }
LABEL_60:
  dispatch thunk of AudioUsoIntent.verb.getter(v303);
  uint64_t v304 = (uint64_t)v545;
  v305 = v576;
  v298(v545, enum case for CommonAudio.Verb.update(_:), v576);
  v300(v304, 0LL, 1LL, v305);
  uint64_t v306 = v549;
  uint64_t v307 = v549 + *(int *)(v569 + 48);
  sub_FF10(v297, v549, &qword_284DB0);
  sub_FF10(v304, v307, &qword_284DB0);
  if (v244(v306, 1LL, v305) == 1)
  {
    sub_1F6CC(v304, &qword_284DB0);
    sub_1F6CC(v297, &qword_284DB0);
    if (v244(v307, 1LL, v576) == 1)
    {
      uint64_t v299 = v306;
      uint64_t v296 = v562;
      goto LABEL_69;
    }

    goto LABEL_65;
  }

  uint64_t v308 = v530;
  sub_FF10(v306, v530, &qword_284DB0);
  if (v244(v307, 1LL, v305) == 1)
  {
    sub_1F6CC(v304, &qword_284DB0);
    sub_1F6CC(v554, &qword_284DB0);
    (*(void (**)(uint64_t, void *))(v574 + 8))(v308, v305);
LABEL_65:
    uint64_t v303 = sub_1F6CC(v306, &qword_284DA8);
    uint64_t v296 = v562;
    goto LABEL_66;
  }

  uint64_t v358 = v574;
  v359 = v563;
  (*(void (**)(char *, uint64_t, void *))(v574 + 32))(v563, v307, v305);
  uint64_t v360 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v361 = dispatch thunk of static Equatable.== infix(_:_:)(v308, v359, v305, v360);
  uint64_t v362 = *(void (**)(char *, void *))(v358 + 8);
  v300 = (void (*)(uint64_t, void, uint64_t, void *))v571;
  v362(v359, v305);
  sub_1F6CC(v304, &qword_284DB0);
  sub_1F6CC(v554, &qword_284DB0);
  v362((char *)v308, v305);
  uint64_t v303 = sub_1F6CC(v549, &qword_284DB0);
  uint64_t v296 = v562;
  if ((v361 & 1) != 0) {
    goto LABEL_70;
  }
LABEL_66:
  uint64_t v309 = v542;
  dispatch thunk of AudioUsoIntent.verb.getter(v303);
  uint64_t v310 = (uint64_t)v541;
  v311 = v576;
  v298(v541, enum case for CommonAudio.Verb.follow(_:), v576);
  v300(v310, 0LL, 1LL, v311);
  uint64_t v312 = v538;
  uint64_t v313 = v538 + *(int *)(v569 + 48);
  sub_FF10(v309, v538, &qword_284DB0);
  sub_FF10(v310, v313, &qword_284DB0);
  if (v244(v312, 1LL, v311) == 1)
  {
    sub_1F6CC(v310, &qword_284DB0);
    sub_1F6CC(v309, &qword_284DB0);
    if (v244(v313, 1LL, v576) == 1)
    {
      uint64_t v299 = v312;
      goto LABEL_69;
    }

    goto LABEL_80;
  }

  uint64_t v334 = v524;
  sub_FF10(v312, v524, &qword_284DB0);
  if (v244(v313, 1LL, v311) == 1)
  {
    sub_1F6CC((uint64_t)v541, &qword_284DB0);
    sub_1F6CC(v542, &qword_284DB0);
    (*(void (**)(uint64_t, void *))(v574 + 8))(v334, v311);
LABEL_80:
    uint64_t v303 = sub_1F6CC(v312, &qword_284DA8);
    goto LABEL_81;
  }

  uint64_t v422 = v574;
  uint64_t v423 = v563;
  (*(void (**)(char *, uint64_t, void *))(v574 + 32))(v563, v313, v311);
  uint64_t v424 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v425 = dispatch thunk of static Equatable.== infix(_:_:)(v334, v423, v311, v424);
  uint64_t v426 = *(void (**)(char *, void *))(v422 + 8);
  v300 = (void (*)(uint64_t, void, uint64_t, void *))v571;
  v426(v423, v311);
  sub_1F6CC((uint64_t)v541, &qword_284DB0);
  sub_1F6CC(v542, &qword_284DB0);
  v426((char *)v334, v311);
  uint64_t v303 = sub_1F6CC(v538, &qword_284DB0);
  if ((v425 & 1) != 0)
  {
LABEL_70:
    uint64_t v314 = v553;
    dispatch thunk of AudioUsoIntent.verb.getter(v303);
    v315 = v576;
    v298((char *)v296, enum case for CommonAudio.Verb.update(_:), v576);
    v300(v296, 0LL, 1LL, v315);
    uint64_t v316 = v547;
    uint64_t v317 = v547 + *(int *)(v569 + 48);
    sub_FF10(v314, v547, &qword_284DB0);
    uint64_t v318 = v315;
    sub_FF10(v296, v317, &qword_284DB0);
    if (v244(v316, 1LL, v315) == 1)
    {
      sub_1F6CC(v296, &qword_284DB0);
      sub_1F6CC(v314, &qword_284DB0);
      unsigned int v319 = v244(v317, 1LL, v315);
      id v320 = v508;
      uint64_t v321 = v546;
      if (v319 == 1)
      {
        uint64_t v322 = sub_1F6CC(v316, &qword_284DB0);
        uint64_t v323 = (uint64_t)v540;
LABEL_85:
        dispatch thunk of AudioUsoIntent.mediaType.getter(v322);
        uint64_t v353 = v536;
        uint64_t v354 = v535;
        (*(void (**)(uint64_t, void, uint64_t))(v536 + 104))( v535,  enum case for CommonAudio.MediaType.news(_:),  v321);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v353 + 56))(v354, 0LL, 1LL, v321);
        uint64_t v355 = v537;
        uint64_t v356 = v537 + *(int *)(v528 + 48);
        sub_FF10(v323, v537, &qword_284DC8);
        sub_FF10(v354, v356, &qword_284DC8);
        v357 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v353 + 48);
        if (v357(v355, 1LL, v321) == 1)
        {
          sub_1F6CC(v354, &qword_284DC8);
          uint64_t v355 = v537;
          sub_1F6CC(v323, &qword_284DC8);
          if (v357(v356, 1LL, v321) == 1)
          {
            sub_1F6CC(v355, &qword_284DC8);
LABEL_118:
            v434 = v518;
            uint64_t v435 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v518, v509, v583);
            uint64_t v436 = (os_log_s *)Logger.logObject.getter(v435);
            os_log_type_t v437 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v436, v437))
            {
              uint64_t v438 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v438 = 0;
              _os_log_impl( &dword_0,  v436,  v437,  "PommesResponseFlow#execute Update verb and news mediaType present, forwarding SwitchPodcastNewsPreferenceFlow",  v438,  2u);
              swift_slowDealloc(v438, -1LL, -1LL);
            }

            ((void (*)(char *, uint64_t))v582)(v434, v583);
            uint64_t v439 = v552;
            sub_FF10(v517, v552, &qword_285BD0);
            uint64_t v440 = sub_112424(v439);
            sub_1F6CC(v439, &qword_285BD0);
            uint64_t v441 = v557;
            static ExecuteResponse.complete(next:)(v440);
            v581(v441);

            swift_release(v440);
            swift_release(v320);
            (*(void (**)(char *, uint64_t))(v558 + 8))(v441, v559);
            goto LABEL_121;
          }
        }

        else
        {
          uint64_t v363 = v521;
          sub_FF10(v355, v521, &qword_284DC8);
          if (v357(v356, 1LL, v321) != 1)
          {
            uint64_t v428 = v536;
            uint64_t v429 = v323;
            uint64_t v430 = v512;
            (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v512, v356, v321);
            uint64_t v431 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
            char v432 = dispatch thunk of static Equatable.== infix(_:_:)(v363, v430, v321, v431);
            uint64_t v433 = *(void (**)(char *, uint64_t))(v428 + 8);
            v433(v430, v321);
            sub_1F6CC(v535, &qword_284DC8);
            sub_1F6CC(v429, &qword_284DC8);
            v433((char *)v363, v321);
            sub_1F6CC(v355, &qword_284DC8);
            uint64_t v352 = v548;
            if ((v432 & 1) != 0) {
              goto LABEL_118;
            }
            goto LABEL_94;
          }

          sub_1F6CC(v535, &qword_284DC8);
          sub_1F6CC(v323, &qword_284DC8);
          (*(void (**)(uint64_t, uint64_t))(v536 + 8))(v363, v321);
        }

        v327 = &qword_284DA0;
        uint64_t v328 = v355;
        goto LABEL_93;
      }
    }

    else
    {
      uint64_t v324 = v534;
      sub_FF10(v316, v534, &qword_284DB0);
      unsigned int v325 = v244(v317, 1LL, v315);
      uint64_t v321 = v546;
      uint64_t v326 = v540;
      if (v325 != 1)
      {
        uint64_t v346 = v574;
        v347 = v563;
        (*(void (**)(char *, uint64_t, void *))(v574 + 32))(v563, v317, v318);
        uint64_t v348 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        char v349 = dispatch thunk of static Equatable.== infix(_:_:)(v324, v347, v318, v348);
        int v350 = *(void (**)(char *, void *))(v346 + 8);
        v351 = v347;
        uint64_t v352 = v548;
        v350(v351, v318);
        sub_1F6CC(v562, &qword_284DB0);
        sub_1F6CC(v553, &qword_284DB0);
        v350((char *)v324, v318);
        uint64_t v322 = sub_1F6CC(v316, &qword_284DB0);
        id v320 = v508;
        uint64_t v323 = (uint64_t)v326;
        if ((v349 & 1) == 0)
        {
LABEL_94:
          v364 = v566;
          uint64_t v365 = sub_10470();
          if (v365)
          {
            uint64_t v366 = (uint8_t *)v365;
            id v367 = [objc_allocWithZone(INAddMediaIntent) init];
            uint64_t v368 = (void *)dispatch thunk of PommesResponse.clientResults.getter();
            id v369 = sub_59CEC(v366, v368);

            uint64_t v370 = v527;
            swift_bridgeObjectRelease(v368);

            uint64_t v371 = v550;
            sub_5A4F4(v550);
            uint64_t v372 = v543;
            uint64_t v373 = v583;
            ((void (*)(char *, uint64_t, uint64_t))v568)(v543, v509, v583);
            uint64_t v374 = v573;
            uint64_t v375 = (*(uint64_t (**)(char *, uint64_t, char *))(v370 + 16))(v352, v371, v573);
            uint64_t v376 = (os_log_s *)Logger.logObject.getter(v375);
            os_log_type_t v377 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v376, v377))
            {
              v378 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v379 = swift_slowAlloc(32LL, -1LL);
              uint64_t v584 = v379;
              *(_DWORD *)v378 = 136315138;
              uint64_t v576 = v378 + 4;
              uint64_t v380 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
              uint64_t v381 = dispatch thunk of CustomStringConvertible.description.getter(v374, v380);
              unint64_t v383 = v382;
              uint64_t v588 = sub_6978(v381, v382, &v584);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v588, v589);
              swift_bridgeObjectRelease(v383);
              v384 = *(void (**)(char *, char *))(v527 + 8);
              v384(v352, v374);
              _os_log_impl( &dword_0,  v376,  v377,  "PommesResponseFlow#execute updated serverConversion input: %s",  v378,  0xCu);
              swift_arrayDestroy(v379, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v379, -1LL, -1LL);
              swift_slowDealloc(v378, -1LL, -1LL);

              v385 = v543;
            }

            else
            {
              v384 = *(void (**)(char *, char *))(v370 + 8);
              v384(v352, v374);

              v385 = v372;
            }

            uint64_t v400 = (void (*)(char *, uint64_t))v582;
            ((void (*)(char *, uint64_t))v582)(v385, v373);
            v401 = v577;
            uint64_t v402 = v559;
            uint64_t v403 = v544;
            uint64_t v404 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v544, v509, v373);
            uint64_t v405 = (os_log_s *)Logger.logObject.getter(v404);
            os_log_type_t v406 = static os_log_type_t.debug.getter();
            BOOL v407 = os_log_type_enabled(v405, v406);
            uint64_t v408 = (uint64_t)v510;
            if (v407)
            {
              uint64_t v409 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v409 = 0;
              _os_log_impl(&dword_0, v405, v406, "PommesResponseFlow#execute forwarding AddMedia RCHFlow", v409, 2u);
              uint64_t v410 = v409;
              uint64_t v403 = v544;
              uint64_t v373 = v583;
              swift_slowDealloc(v410, -1LL, -1LL);
            }

            v400(v403, v373);
            uint64_t v411 = v550;
            uint64_t v412 = sub_1113B4(v550, v369);
            v413 = v557;
            static ExecuteResponse.complete(next:)(v412);
            v581(v413);

            swift_release(v412);
            swift_release(v508);
            (*(void (**)(char *, uint64_t))(v558 + 8))(v413, v402);
            v414 = v573;
            v384((char *)v411, v573);
            ((void (*)(char *, uint64_t))v578)(v401, v579);
            return ((uint64_t (*)(uint64_t, char *))v384)(v408, v414);
          }

          uint64_t v386 = v364;
          uint64_t v387 = v525;
          uint64_t v388 = v583;
          uint64_t v389 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v525, v509, v583);
          uint64_t v390 = (os_log_s *)Logger.logObject.getter(v389);
          os_log_type_t v391 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v390, v391))
          {
            uint64_t v392 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v392 = 0;
            _os_log_impl(&dword_0, v390, v391, "PommesResponseFlow#execute failed to build addMediaIntent", v392, 2u);
            swift_slowDealloc(v392, -1LL, -1LL);
          }

          ((void (*)(char *, uint64_t))v582)(v387, v388);
          uint64_t v393 = *(void *)(v507
                           + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
          uint64_t v394 = v507 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
          type metadata accessor for App(0LL);
          uint64_t v395 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
          uint64_t v396 = swift_allocObject(&unk_276770, 32LL, 7LL);
          uint64_t v397 = v580;
          *(void *)(v396 + 16) = v581;
          *(void *)(v396 + 24) = v397;
          type metadata accessor for SiriKitTaskLoggingProvider(0LL);
          uint64_t v398 = swift_retain(v397);
          uint64_t v399 = static SiriKitTaskLoggingProvider.shared.getter(v398);
          sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v393,  v394,  v395,  v399,  0x4D4164656C696146LL,  0xEE00646C69754249LL,  (uint64_t)sub_201398,  v396);
LABEL_100:

          swift_release(v508);
          swift_release(v399);
          swift_release(v395);
          swift_release(v396);
LABEL_121:
          ((void (*)(char *, uint64_t))v578)(v577, v579);
          uint64_t v253 = *(uint64_t (**)(uint64_t, char *))(v527 + 8);
          uint64_t v254 = (uint64_t)v510;
          goto LABEL_49;
        }

        goto LABEL_85;
      }

      sub_1F6CC(v562, &qword_284DB0);
      sub_1F6CC(v553, &qword_284DB0);
      (*(void (**)(uint64_t, void *))(v574 + 8))(v324, v318);
    }

    v327 = &qword_284DA8;
    uint64_t v328 = v316;
LABEL_93:
    sub_1F6CC(v328, v327);
    uint64_t v352 = v548;
    goto LABEL_94;
  }

      uint64_t v104 = &unk_283000;
    }
  }

  if (v104[273] != -1LL) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v156 = v268;
  os_log_type_t v157 = sub_6960(v268, (uint64_t)qword_2969C8);
  id v158 = v269;
  uint64_t v159 = (void (*)(char *))*((void *)v269 + 2);
  id v160 = v263;
  uint64_t v260 = v157;
  uint64_t v264 = (uint64_t)v159;
  v159(v263);
  uint64_t v162 = v279;
  uint64_t v161 = v280;
  swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v163 = swift_bridgeObjectRetain_n(v161, 2LL);
  uint64_t v164 = (os_log_s *)Logger.logObject.getter(v163);
  uint64_t v165 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v164, v165))
  {
    uint64_t v166 = swift_slowAlloc(22LL, -1LL);
    uint64_t v167 = swift_slowAlloc(64LL, -1LL);
    *(void *)&v277[0] = v167;
    *(_DWORD *)uint64_t v166 = 136315394;
    swift_bridgeObjectRetain(v161);
    uint64_t v275 = sub_6978(v162, v161, (uint64_t *)v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
    swift_bridgeObjectRelease_n(v161, 3LL);
    *(_WORD *)(v166 + 12) = 2080;
    swift_bridgeObjectRetain(a1);
    id v168 = v267;
    uint64_t v275 = sub_6978(v267, a1, (uint64_t *)v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
    swift_bridgeObjectRelease_n(a1, 3LL);
    _os_log_impl( &dword_0,  v164,  v165,  "DisplayApp#init found default displayName:%s for identifier:%s",  (uint8_t *)v166,  0x16u);
    swift_arrayDestroy(v167, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v167, -1LL, -1LL);
    swift_slowDealloc(v166, -1LL, -1LL);

    uint64_t v169 = (void (*)(char *, uint64_t))*((void *)v269 + 1);
    v169(v263, v156);
    uint64_t v83 = v271;
  }

  else
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease_n(v161, 2LL);
    uint64_t v169 = (void (*)(char *, uint64_t))v158[1];
    v169(v160, v156);
    uint64_t v83 = v271;
    id v168 = v267;
  }

  if ((static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v168, a1) & 1) != 0)
  {
    uint64_t v170 = v247;
    ((void (*)(char *, uint64_t, uint64_t))v264)(v247, v260, v156);
    uint64_t v171 = swift_bridgeObjectRetain_n(a1, 2LL);
    uint64_t v172 = (os_log_s *)Logger.logObject.getter(v171);
    os_log_type_t v173 = static os_log_type_t.debug.getter();
    BOOL v174 = os_log_type_enabled(v172, v173);
    uint64_t v246 = (char *)v169;
    if (v174)
    {
      uint64_t v175 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v176 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v277[0] = v176;
      *(_DWORD *)uint64_t v175 = 136315138;
      swift_bridgeObjectRetain(a1);
      id v177 = v267;
      uint64_t v275 = sub_6978(v267, a1, (uint64_t *)v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
      swift_bridgeObjectRelease_n(a1, 3LL);
      _os_log_impl(&dword_0, v172, v173, "DisplayApp#init checking for override name for identifier:%s...", v175, 0xCu);
      swift_arrayDestroy(v176, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v176, -1LL, -1LL);
      swift_slowDealloc(v175, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v246)(v170, v156);
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
      v169(v170, v156);
      id v177 = v267;
    }

    uint64_t v178 = dispatch_semaphore_create(0LL);
    unint64_t v179 = swift_allocObject(&unk_26D488, 32LL, 7LL);
    *(void *)(v179 + 16) = 0LL;
    uint64_t v247 = (char *)(v179 + 16);
    *(void *)(v179 + 24) = 0LL;
    uint64_t v278 = 0LL;
    memset(v277, 0, sizeof(v277));
    unint64_t v180 = v279;
    uint64_t v181 = v280;
    uint64_t v182 = (void *)swift_allocObject(&unk_26D4B0, 64LL, 7LL);
    v182[2] = v178;
    v182[3] = v180;
    v182[4] = v181;
    v182[5] = v177;
    v182[6] = a1;
    v182[7] = v179;
    uint64_t v183 = swift_allocObject(&unk_26D4D8, 32LL, 7LL);
    *(void *)(v183 + 16) = sub_9D4E8;
    *(void *)(v183 + 24) = v182;
    unint64_t v184 = qword_2838D0;
    swift_bridgeObjectRetain(a1);
    os_log_type_t v269 = v178;
    v263 = (char *)v179;
    swift_retain(v179);
    swift_bridgeObjectRetain(v181);
    swift_retain(v182);
    uint64_t v245 = a1;
    if (v184 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    unint64_t v185 = (id)qword_296AA0;
    unint64_t v186 = v250;
    OSSignpostID.init(log:)(v185);
    uint64_t v187 = v251;
    uint64_t v188 = v249;
    uint64_t v189 = v252;
    (*(void (**)(char *, char *, uint64_t))(v251 + 16))(v249, v186, v252);
    uint64_t v190 = *(unsigned __int8 *)(v187 + 80);
    uint64_t v191 = (v190 + 33) & ~v190;
    uint64_t v192 = (v248 + v191 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v193 = swift_allocObject(&unk_26D500, v192 + 16, v190 | 7);
    *(void *)(v193 + 16) = "stringsBackedAppNameLocalizedAppName";
    *(void *)(v193 + 24) = 36LL;
    *(_BYTE *)(v193 + 32) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v187 + 32))(v193 + v191, v188, v189);
    os_log_type_t v194 = (void *)(v193 + v192);
    *os_log_type_t v194 = sub_9D4F8;
    v194[1] = v183;
    uint64_t v195 = swift_retain(v183);
    v196 = static os_signpost_type_t.begin.getter(v195);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v196,  &dword_0,  qword_296AA0,  "stringsBackedAppNameLocalizedAppName",  36LL,  2LL,  v186,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
    uint64_t v197 = swift_allocObject(&unk_26D528, 32LL, 7LL);
    *(void *)(v197 + 16) = sub_33D7C;
    *(void *)(v197 + 24) = v193;
    swift_retain(v193);
    uint64_t v198 = v267;
    uint64_t v199 = v245;
    sub_216B0((uint64_t)sub_33BF0, v197, v267, v245, (uint64_t)v281, (uint64_t)v277);
    swift_release(v193);
    swift_release(v197);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v186, v189);
    swift_release(v182);
    swift_release(v183);
    uint64_t v200 = sub_1F6CC((uint64_t)v277, &qword_2860C0);
    uint64_t v201 = v253;
    static DispatchTime.now()(v200);
    uint64_t v202 = v256;
    *uint64_t v256 = 1LL;
    uint64_t v203 = v257;
    uint64_t v204 = v259;
    (*(void (**)(void *, void, uint64_t))(v257 + 104))( v202,  enum case for DispatchTimeInterval.seconds(_:),  v259);
    uint64_t v205 = v254;
    + infix(_:_:)(v201, v202);
    (*(void (**)(void *, uint64_t))(v203 + 8))(v202, v204);
    uint64_t v206 = *(void (**)(char *, uint64_t))(v255 + 8);
    id v207 = v258;
    v206(v201, v258);
    OS_dispatch_semaphore.wait(timeout:)(v205);
    v206(v205, v207);
    uint64_t v208 = v262;
    uint64_t v209 = v268;
    ((void (*)(uint64_t, uint64_t, uint64_t))v264)(v262, v260, v268);
    swift_bridgeObjectRetain_n(v199, 2LL);
    os_log_type_t v210 = v263;
    uint64_t v211 = swift_retain_n(v263, 2LL);
    uint64_t v212 = (os_log_s *)Logger.logObject.getter(v211);
    uint64_t v213 = static os_log_type_t.debug.getter();
    uint64_t v214 = v213;
    a1 = v199;
    if (os_log_type_enabled(v212, v213))
    {
      uint64_t v215 = swift_slowAlloc(22LL, -1LL);
      LODWORD(v259) = v214;
      uint64_t v216 = v215;
      unint64_t v217 = swift_slowAlloc(64LL, -1LL);
      uint64_t v275 = v217;
      *(_DWORD *)uint64_t v216 = 136315394;
      swift_beginAccess(v247, v272, 0LL, 0LL);
      unint64_t v218 = *((void *)v210 + 3);
      *(void *)&v277[0] = *((void *)v210 + 2);
      *((void *)&v277[0] + 1) = v218;
      swift_bridgeObjectRetain(v218);
      uint64_t v219 = sub_6C5C(&qword_284600);
      uint64_t v220 = String.init<A>(describing:)(v277, v219);
      v221 = v198;
      uint64_t v223 = v222;
      *(void *)&v277[0] = sub_6978(v220, v222, &v275);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v277, (char *)v277 + 8);
      swift_release_n(v210, 2LL);
      swift_bridgeObjectRelease(v223);
      *(_WORD *)(v216 + 12) = 2080;
      swift_bridgeObjectRetain(a1);
      *(void *)&v277[0] = sub_6978(v221, a1, &v275);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v277, (char *)v277 + 8);
      swift_bridgeObjectRelease_n(a1, 3LL);
      _os_log_impl( &dword_0,  v212,  (os_log_type_t)v259,  "DisplayApp#init override name:%s for identifier:%s...",  (uint8_t *)v216,  0x16u);
      swift_arrayDestroy(v217, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v217, -1LL, -1LL);
      swift_slowDealloc(v216, -1LL, -1LL);

      v224 = v246;
      ((void (*)(uint64_t, uint64_t))v246)(v262, v209);
      os_log_type_t v225 = v247;
      uint64_t v83 = v271;
      uint64_t v85 = v270;
    }

    else
    {

      swift_bridgeObjectRelease_n(v199, 2LL);
      swift_release_n(v210, 2LL);
      v224 = v246;
      ((void (*)(uint64_t, uint64_t))v246)(v208, v209);
      uint64_t v83 = v271;
      uint64_t v85 = v270;
      os_log_type_t v225 = v247;
    }

    uint64_t v226 = v209;
    swift_beginAccess(v225, v277, 0LL, 0LL);
    uint64_t v81 = *((void *)v210 + 2);
    uint64_t v80 = *((void *)v210 + 3);
    v227 = v261;
    if (v80)
    {
      swift_beginAccess(&v279, &v275, 0LL, 0LL);
      id v262 = v279;
      uint64_t v228 = v226;
      uint64_t v82 = v280;
      ((void (*)(char *, uint64_t, uint64_t))v264)(v227, v260, v228);
      swift_bridgeObjectRetain_n(v80, 3LL);
      swift_bridgeObjectRetain_n(a1, 2LL);
      uint64_t v229 = swift_bridgeObjectRetain_n(v82, 2LL);
      uint64_t v230 = (os_log_s *)Logger.logObject.getter(v229);
      uint64_t v231 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v230, v231))
      {
        uint64_t v232 = swift_slowAlloc(32LL, -1LL);
        uint64_t v264 = swift_slowAlloc(96LL, -1LL);
        uint64_t v274 = v264;
        *(_DWORD *)uint64_t v232 = 136315650;
        swift_bridgeObjectRetain(v80);
        uint64_t v273 = sub_6978(v81, v80, &v274);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, &v274);
        swift_bridgeObjectRelease_n(v80, 3LL);
        *(_WORD *)(v232 + 12) = 2080;
        swift_bridgeObjectRetain(v82);
        uint64_t v273 = sub_6978(v262, v82, &v274);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, &v274);
        swift_bridgeObjectRelease_n(v82, 3LL);
        *(_WORD *)(v232 + 22) = 2080;
        swift_bridgeObjectRetain(a1);
        uint64_t v273 = sub_6978(v267, a1, &v274);
        uint64_t v83 = v271;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, &v274);
        swift_bridgeObjectRelease_n(a1, 3LL);
        _os_log_impl( &dword_0,  v230,  v231,  "DisplayApp#init found using primary:%s, alternate:%s for app:%s",  (uint8_t *)v232,  0x20u);
        uint64_t v233 = v264;
        swift_arrayDestroy(v264, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v233, -1LL, -1LL);
        uint64_t v234 = v232;
        uint64_t v85 = v270;
        swift_slowDealloc(v234, -1LL, -1LL);

        unint64_t v235 = v261;
      }

      else
      {

        swift_bridgeObjectRelease_n(a1, 2LL);
        swift_bridgeObjectRelease_n(v82, 2LL);
        swift_bridgeObjectRelease_n(v80, 2LL);

        unint64_t v235 = v227;
      }

      ((void (*)(char *, uint64_t))v224)(v235, v268);
      swift_release(v263);
      uint64_t v79 = v81;
      uint64_t v81 = v262;
    }

    else
    {

      swift_beginAccess(&v279, &v275, 0LL, 0LL);
      uint64_t v79 = v279;
      uint64_t v80 = v280;
      swift_release(v210);
      uint64_t v82 = 0LL;
    }
  }

  else
  {
    swift_beginAccess(&v279, v277, 0LL, 0LL);
    uint64_t v81 = 0LL;
    uint64_t v82 = 0LL;
    uint64_t v79 = v279;
    uint64_t v80 = v280;
    uint64_t v85 = v270;
  }

  swift_bridgeObjectRetain_n(v82, 2LL);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v82);
  sub_15858(v281);
  swift_bridgeObjectRelease(v85);

  swift_release(v83);
  swift_bridgeObjectRelease(v82);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(a1);
  uint64_t result = swift_release(v265);
  uint64_t v86 = v266;
  uint64_t v78 = v267;
  uint64_t v84 = v242;
LABEL_70:
  *uint64_t v86 = v78;
  v86[1] = a1;
  v86[2] = v79;
  v86[3] = v80;
  v86[4] = v81;
  v86[5] = v82;
  v86[6] = v83;
  v86[7] = v84;
  v86[8] = v85;
  return result;
}

LABEL_81:
  uint64_t v335 = (uint64_t)v526;
  id v336 = v508;
  dispatch thunk of AudioUsoIntent.verb.getter(v303);
  uint64_t v337 = (uint64_t)v533;
  uint64_t v338 = v576;
  v298(v533, enum case for CommonAudio.Verb.summarise(_:), v576);
  v300(v337, 0LL, 1LL, v338);
  uint64_t v339 = v529;
  uint64_t v340 = v529 + *(int *)(v569 + 48);
  sub_FF10(v335, v529, &qword_284DB0);
  uint64_t v341 = v338;
  uint64_t v342 = v339;
  sub_FF10(v337, v340, &qword_284DB0);
  if (v244(v339, 1LL, v341) == 1)
  {
    sub_1F6CC(v337, &qword_284DB0);
    sub_1F6CC(v335, &qword_284DB0);
    unsigned int v343 = v244(v340, 1LL, v576);
    uint64_t v344 = v532;
    uint64_t v345 = v531;
    if (v343 == 1) {
      goto LABEL_111;
    }
  }

  else
  {
    uint64_t v415 = v339;
    uint64_t v416 = v519;
    sub_FF10(v415, v519, &qword_284DB0);
    if (v244(v340, 1LL, v341) != 1)
    {
      uint64_t v442 = v574;
      v443 = v563;
      (*(void (**)(char *, uint64_t, void *))(v574 + 32))(v563, v340, v341);
      uint64_t v444 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      LODWORD(v575) = dispatch thunk of static Equatable.== infix(_:_:)(v416, v443, v341, v444);
      uint64_t v445 = v416;
      v446 = *(void (**)(char *, void *))(v442 + 8);
      v300 = (void (*)(uint64_t, void, uint64_t, void *))v571;
      v446(v443, v341);
      sub_1F6CC((uint64_t)v533, &qword_284DB0);
      sub_1F6CC(v335, &qword_284DB0);
      v446((char *)v445, v341);
      id v336 = v508;
      uint64_t v417 = sub_1F6CC(v529, &qword_284DB0);
      uint64_t v344 = v532;
      uint64_t v345 = v531;
      if ((v575 & 1) != 0) {
        goto LABEL_125;
      }
      goto LABEL_108;
    }

    sub_1F6CC((uint64_t)v533, &qword_284DB0);
    sub_1F6CC(v335, &qword_284DB0);
    (*(void (**)(uint64_t, void *))(v574 + 8))(v416, v341);
    uint64_t v344 = v532;
    uint64_t v345 = v531;
  }

  uint64_t v417 = sub_1F6CC(v342, &qword_284DA8);
LABEL_108:
  dispatch thunk of AudioUsoIntent.verb.getter(v417);
  uint64_t v418 = v576;
  v298((char *)v345, enum case for CommonAudio.Verb.open(_:), v576);
  v300(v345, 0LL, 1LL, v418);
  uint64_t v419 = v522;
  uint64_t v420 = v522 + *(int *)(v569 + 48);
  sub_FF10(v344, v522, &qword_284DB0);
  uint64_t v421 = v418;
  sub_FF10(v345, v420, &qword_284DB0);
  if (v244(v419, 1LL, v418) == 1)
  {
    sub_1F6CC(v345, &qword_284DB0);
    sub_1F6CC(v344, &qword_284DB0);
    if (v244(v420, 1LL, v418) == 1)
    {
      uint64_t v342 = v419;
LABEL_111:
      sub_1F6CC(v342, &qword_284DB0);
      goto LABEL_125;
    }

    goto LABEL_116;
  }

  uint64_t v427 = v513;
  sub_FF10(v419, v513, &qword_284DB0);
  if (v244(v420, 1LL, v421) == 1)
  {
    sub_1F6CC(v531, &qword_284DB0);
    sub_1F6CC(v532, &qword_284DB0);
    (*(void (**)(uint64_t, void *))(v574 + 8))(v427, v421);
LABEL_116:
    sub_1F6CC(v419, &qword_284DA8);
LABEL_128:
    uint64_t v273 = (uint64_t)v510;
    sub_20051C((uint64_t)v510, v581, v580);

    swift_release(v336);
    uint64_t v274 = v577;
    uint64_t v275 = v579;
    goto LABEL_48;
  }

  uint64_t v447 = v574;
  uint64_t v448 = v419;
  v449 = v563;
  (*(void (**)(char *, uint64_t, void *))(v574 + 32))(v563, v420, v421);
  uint64_t v450 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v451 = dispatch thunk of static Equatable.== infix(_:_:)(v427, v449, v421, v450);
  uint64_t v452 = *(void (**)(char *, void *))(v447 + 8);
  v452(v449, v421);
  sub_1F6CC(v531, &qword_284DB0);
  sub_1F6CC(v532, &qword_284DB0);
  v452((char *)v427, v421);
  sub_1F6CC(v448, &qword_284DB0);
  if ((v451 & 1) == 0) {
    goto LABEL_128;
  }
LABEL_125:
  v453 = v566;
  uint64_t v454 = sub_10470();
  if (!v454)
  {
    uint64_t v386 = v453;
    uint64_t v477 = v511;
    uint64_t v478 = v583;
    uint64_t v479 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v511, v509, v583);
    uint64_t v480 = (os_log_s *)Logger.logObject.getter(v479);
    os_log_type_t v481 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v480, v481))
    {
      uint64_t v482 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v482 = 0;
      _os_log_impl(&dword_0, v480, v481, "PommesResponseFlow#execute failed to build searchMediaIntent", v482, 2u);
      swift_slowDealloc(v482, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v582)(v477, v478);
    uint64_t v483 = *(void *)(v507
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService);
    uint64_t v484 = v507 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker;
    type metadata accessor for App(0LL);
    uint64_t v395 = App.__allocating_init(appIdentifier:)(0LL, 0LL);
    uint64_t v396 = swift_allocObject(&unk_276748, 32LL, 7LL);
    uint64_t v485 = v580;
    *(void *)(v396 + 16) = v581;
    *(void *)(v396 + 24) = v485;
    type metadata accessor for SiriKitTaskLoggingProvider(0LL);
    uint64_t v486 = swift_retain(v485);
    uint64_t v399 = static SiriKitTaskLoggingProvider.shared.getter(v486);
    sub_200E1C( 0xD00000000000001FLL,  0x800000000021E6C0LL,  v483,  v484,  v395,  v399,  0x4D5364656C696146LL,  0xEE00646C69754249LL,  (uint64_t)sub_201398,  v396);
    goto LABEL_100;
  }

  uint64_t v455 = (uint8_t *)v454;
  id v456 = [objc_allocWithZone(INSearchForMediaIntent) init];
  BOOL v457 = (void *)dispatch thunk of PommesResponse.clientResults.getter();
  id v458 = sub_17FBAC(v455, v457);

  swift_bridgeObjectRelease(v457);
  uint64_t v459 = v523;
  sub_5A4F4(v523);
  uint64_t v460 = v520;
  uint64_t v461 = v583;
  ((void (*)(char *, uint64_t, uint64_t))v568)(v520, v509, v583);
  uint64_t v462 = v527;
  uint64_t v463 = v514;
  uint64_t v464 = v459;
  uint64_t v465 = v573;
  uint64_t v576 = *(void **)(v527 + 16);
  uint64_t v466 = ((uint64_t (*)(char *, uint64_t, char *))v576)(v514, v464, v573);
  v467 = (os_log_s *)Logger.logObject.getter(v466);
  os_log_type_t v468 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v467, v468))
  {
    v469 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v470 = swift_slowAlloc(32LL, -1LL);
    uint64_t v584 = v470;
    *(_DWORD *)v469 = 136315138;
    uint64_t v575 = (uint64_t)(v469 + 4);
    uint64_t v471 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v472 = dispatch thunk of CustomStringConvertible.description.getter(v465, v471);
    unint64_t v474 = v473;
    uint64_t v588 = sub_6978(v472, v473, &v584);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v588, v589);
    swift_bridgeObjectRelease(v474);
    uint64_t v475 = *(void (**)(char *, char *))(v527 + 8);
    v475(v463, v465);
    _os_log_impl(&dword_0, v467, v468, "PommesResponseFlow#execute updated serverConversion input: %s", v469, 0xCu);
    swift_arrayDestroy(v470, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v470, -1LL, -1LL);
    swift_slowDealloc(v469, -1LL, -1LL);

    uint64_t v476 = v520;
  }

  else
  {
    uint64_t v475 = *(void (**)(char *, char *))(v462 + 8);
    v475(v463, v465);

    uint64_t v476 = v460;
  }

  ((void (*)(char *, uint64_t))v582)(v476, v461);
  uint64_t v487 = v577;
  uint64_t v488 = v559;
  v489 = v516;
  uint64_t v490 = ((uint64_t (*)(char *, uint64_t, uint64_t))v568)(v516, v509, v461);
  uint64_t v491 = (os_log_s *)Logger.logObject.getter(v490);
  os_log_type_t v492 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v491, v492))
  {
    os_log_type_t v493 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v493 = 0;
    _os_log_impl(&dword_0, v491, v492, "PommesResponseFlow#execute forwarding SearchForMedia RCHFlow", v493, 2u);
    uint64_t v461 = v583;
    swift_slowDealloc(v493, -1LL, -1LL);
  }

  ((void (*)(char *, uint64_t))v582)(v489, v461);
  uint64_t v494 = sub_6C5C(&qword_28B210);
  if (qword_283930 != -1) {
    swift_once(&qword_283930, sub_183260);
  }
  uint64_t v584 = qword_296B18;
  uint64_t v495 = qword_283938;
  swift_retain(qword_296B18);
  if (v495 != -1) {
    swift_once(&qword_283938, sub_183330);
  }
  uint64_t v496 = qword_296B20;
  uint64_t v497 = v515;
  uint64_t v498 = v523;
  v499 = v573;
  ((void (*)(char *, uint64_t, char *))v576)(v515, v523, v573);
  swift_retain(v496);
  id v500 = v458;
  uint64_t v501 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v584, v496, v497, v500);
  uint64_t v584 = v501;
  unint64_t v502 = sub_6E30();
  uint64_t v503 = Flow.eraseToAnyFlow()(v494, v502);
  swift_release(v501);
  v504 = v557;
  static ExecuteResponse.complete(next:)(v503);
  v581(v504);

  swift_release(v503);
  swift_release(v508);
  (*(void (**)(char *, uint64_t))(v558 + 8))(v504, v488);
  v475((char *)v498, v499);
  ((void (*)(char *, uint64_t))v578)(v487, v579);
  return ((uint64_t (*)(char *, char *))v475)(v510, v499);
}

  if (v74 < 0) {
    uint64_t v125 = v74;
  }
  else {
    uint64_t v125 = v74 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v74);
  uint64_t v253 = _CocoaArrayWrapper.endIndex.getter(v125);
  swift_bridgeObjectRelease(v74);
  if (!v253) {
    goto LABEL_85;
  }
LABEL_17:
  if ((v74 & 0xC000000000000001LL) != 0)
  {
    uint64_t v131 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v74);
    goto LABEL_20;
  }

  if (*(void *)((char *)&dword_10 + (v74 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v131 = *(id *)(v74 + 32);
LABEL_20:
    uint64_t v132 = v131;
    swift_bridgeObjectRelease(v74);
    uint64_t v133 = [v132 type];

LABEL_87:
    uint64_t v290 = v73;
    uint64_t v254 = (uint64_t)v322;
    id v255 = v326;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v332,  v86,  v322,  v69,  v80,  v323,  v326,  v133,  0,  v290,  v68);
    swift_bridgeObjectRelease(v255);
    sub_1F6CC(v80, &qword_2845A0);
    sub_1F6CC((uint64_t)v69, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v254, &qword_2845A8);
    sub_6EA8(v81 + 18, v81[21]);
    uint64_t v256 = *(int *)(v333 + 48);
    uint64_t v257 = (uint64_t)v311;
    uint64_t v258 = (uint64_t)v324;
    v259 = v330;
    v76(v311, v324, v330);
    uint64_t v260 = v327;
    *(void *)(v257 + v256) = v327;
    char v261 = sub_6C5C(&qword_287980);
    id v262 = swift_allocObject(v261, 40LL, 7LL);
    *(_OWORD *)(v262 + 16) = xmmword_214980;
    v263 = [objc_allocWithZone(SAUICloseAssistant) init];
    *(void *)(v262 + 32) = v263;
    uint64_t v338 = v262;
    specialized Array._endMutation()(v263);
    uint64_t v264 = v338;
    v265 = (uint64_t)v296;
    sub_175200(v257, v260, (uint64_t)v296, v338, (void (*)(void))v328, v329);

    swift_bridgeObjectRelease(v264);
    sub_1F6CC(v265, (uint64_t *)&unk_286C50);
    sub_1F6CC(v258, &qword_289340);
    return (*((uint64_t (**)(uint64_t, uint64_t))v325 + 1))(v257, v259);
  }

  __break(1u);
LABEL_90:
  if (v73 < 0) {
    uint64_t v266 = v73;
  }
  else {
    uint64_t v266 = v73 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v73);
  uint64_t v97 = (void *)_CocoaArrayWrapper.endIndex.getter(v266);
  swift_bridgeObjectRelease(v73);
  if (!v97)
  {
LABEL_94:
    swift_bridgeObjectRelease(v73);
LABEL_95:
    uint64_t v246 = 0LL;
LABEL_96:
    uint64_t v291 = v76;
    uint64_t v267 = v80;
    v268 = (uint64_t)v315;
    os_log_type_t v269 = (uint64_t)v316;
    uint64_t v270 = v326;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v332,  v267,  v315,  v316,  v86,  v323,  v326,  v246,  0,  v291,  v69);
    swift_bridgeObjectRelease(v270);
    sub_1F6CC((uint64_t)v86, &qword_2845A0);
    sub_1F6CC(v269, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v268, &qword_2845A8);
    sub_6EA8(v331 + 18, v331[21]);
    uint64_t v271 = *(int *)(v333 + 48);
    uint64_t v272 = (uint64_t)v305;
    uint64_t v273 = (uint64_t)v324;
    ((void (*)(char *, uint64_t *, uint64_t))v74)(v305, v324, v330);
    *(void *)(v272 + v271) = v327;
    uint64_t v274 = v340;
    if ((unint64_t)v340 >> 62)
    {
      if (v340 < 0) {
        uint64_t v279 = v340;
      }
      else {
        uint64_t v279 = v340 & 0xFFFFFFFFFFFFFF8LL;
      }
      v280 = sub_1641C(0LL, &qword_287D88, &OBJC_CLASS___SABaseCommand_ptr);
      swift_bridgeObjectRetain(v274);
      BOOL v276 = _bridgeCocoaArray<A>(_:)(v279, v280);
      swift_bridgeObjectRelease(v274);
    }

    else
    {
      uint64_t v275 = swift_bridgeObjectRetain(v340);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v275);
      sub_1641C(0LL, &qword_287D88, &OBJC_CLASS___SABaseCommand_ptr);
      BOOL v276 = v274;
    }

    v277 = (uint64_t)v296;
    swift_bridgeObjectRelease(v274);
    uint64_t v278 = v327;
    sub_175200(v272, v327, v277, v276, (void (*)(void))v328, v329);

    swift_bridgeObjectRelease(v276);
    sub_1F6CC(v277, (uint64_t *)&unk_286C50);
    sub_1F6CC(v273, &qword_289340);
    return (*((uint64_t (**)(uint64_t, uint64_t))v325 + 1))(v272, v330);
  }

  while (1)
  {
    if ((v73 & 0xC000000000000001LL) != 0)
    {
      uint64_t v244 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v73);
      goto LABEL_70;
    }

    if (*(void *)((char *)&dword_10 + (v73 & 0xFFFFFFFFFFFFF8LL)))
    {
      uint64_t v244 = *(id *)(v73 + 32);
LABEL_70:
      uint64_t v245 = v244;
      swift_bridgeObjectRelease(v73);
      uint64_t v246 = [v245 type];

      goto LABEL_96;
    }

    __break(1u);
LABEL_116:
    uint64_t v143 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v80);
LABEL_32:
    uint64_t v144 = v143;
    swift_bridgeObjectRelease(v80);
    uint64_t v145 = [v144 privateMediaItemValueData];

    if (v145)
    {
      uint64_t v146 = [v145 punchoutURI];

      if (v146)
      {
        uint64_t v86 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v146);
        uint64_t v80 = v147;

        if (qword_283888 == -1) {
          goto LABEL_35;
        }
        goto LABEL_120;
      }
    }

LABEL_40:
    os_log_type_t v157 = v302;
    id v158 = v317;
    uint64_t v159 = v304;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    id v160 = sub_6960(v158, (uint64_t)qword_2969C8);
    uint64_t v161 = v318;
    uint64_t v162 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v318 + 16))(v159, v160, v158);
    uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
    uint64_t v164 = static os_log_type_t.error.getter();
    uint64_t v165 = (void (*)(void, void, void))v125;
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v166 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v166 = 0;
      swift_bridgeObjectRelease(v340);
      _os_log_impl( &dword_0,  v163,  v164,  "HandleIntentStrategy#makeIntentHandledResponse missing 1P punchoutURI in resolved mediaItem",  v166,  2u);
      swift_slowDealloc(v166, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v161 + 8))(v159, v158);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v161 + 8))(v159, v158);
      swift_bridgeObjectRelease(v340);
    }

    uint64_t v167 = type metadata accessor for CommandFailure(0LL);
    id v168 = *(unsigned int *)(v167 + 48);
    uint64_t v169 = *(unsigned __int16 *)(v167 + 52);
    NSString v333 = v167;
    swift_allocObject(v167, v168, v169);
    uint64_t v125 = CommandFailure.init(errorCode:reason:)(-1LL, 0xD00000000000002CLL, 0x800000000021FC20LL);
    uint64_t v170 = CommandFailure.reason.getter();
    if (v171)
    {
      uint64_t v172 = v170;
      os_log_type_t v173 = v171;
    }

    else
    {
      BOOL v174 = v320;
      uint64_t v175 = v319;
      uint64_t v176 = v321;
      id v177 = (*(uint64_t (**)(char *, void, void *))(v320 + 104))( v319,  enum case for AdditionalMetricsDescription.StatusReason.unknown(_:),  v321);
      uint64_t v172 = AdditionalMetricsDescription.StatusReason.rawValue.getter(v177);
      os_log_type_t v173 = v178;
      unint64_t v179 = *(void (**)(char *, void *))(v174 + 8);
      os_log_type_t v157 = v302;
      v179(v175, v176);
    }

    unint64_t v180 = v298;
    uint64_t v76 = v165;
    (*(void (**)(char *, void, void))(v298 + 104))( v86,  enum case for AdditionalMetricsDescription.ModuleName.sfmhis(_:),  v165);
    uint64_t v181 = v86;
    uint64_t v182 = v297;
    uint64_t v183 = v299;
    (*(void (**)(char *, void, uint64_t))(v297 + 104))( v157,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v299);
    uint64_t v326 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v181,  v157,  v172,  v173,  3LL,  0LL);
    v327 = v184;
    swift_bridgeObjectRelease(v173);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v157, v183);
    (*(void (**)(char *, void (*)(void, void, void)))(v180 + 8))(v181, v76);
    unint64_t v185 = v97 + 8;
    unint64_t v186 = v97;
    uint64_t v97 = (void *)v97[11];
    uint64_t v138 = (id)v186[12];
    sub_6EA8(v185, (uint64_t)v97);
    uint64_t v187 = enum case for ActivityType.failed(_:);
    uint64_t v188 = type metadata accessor for ActivityType(0LL);
    uint64_t v189 = *(void *)(v188 - 8);
    uint64_t v190 = v308;
    (*(void (**)(char *, uint64_t, uint64_t))(v189 + 104))(v308, v187, v188);
    uint64_t v80 = 1LL;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(v190, 0LL, 1LL, v188);
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v325 + 7))(v309, 1LL, 1LL, v330);
    uint64_t v191 = enum case for SiriKitReliabilityCodes.unsupportedParameterPunchout(_:);
    uint64_t v192 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v193 = *(void *)(v192 - 8);
    os_log_type_t v194 = v310;
    (*(void (**)(char *, uint64_t, uint64_t))(v193 + 104))(v310, v191, v192);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v194, 0LL, 1LL, v192);
    uint64_t v86 = (char *)v334;
    uint64_t v195 = [v334 mediaItems];
    if (!v195) {
      goto LABEL_112;
    }
    v196 = v195;
    uint64_t v197 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v196, v197);

    if (!((unint64_t)v74 >> 62))
    {
      uint64_t v69 = *(void (**)(uint64_t *, uint64_t *))((char *)&dword_10 + (v74 & 0xFFFFFFFFFFFFF8LL));
      if (!v69) {
        break;
      }
      goto LABEL_51;
    }

    id v282 = v74 < 0 ? v74 : v74 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v74);
    uint64_t v69 = (void (*)(uint64_t *, uint64_t *))_CocoaArrayWrapper.endIndex.getter(v282);
    swift_bridgeObjectRelease(v74);
    if (!v69) {
      break;
    }
LABEL_51:
    if ((v74 & 0xC000000000000001LL) != 0) {
      goto LABEL_118;
    }
    if (*(void *)((char *)&dword_10 + (v74 & 0xFFFFFFFFFFFFF8LL)))
    {
      uint64_t v198 = *(id *)(v74 + 32);
      goto LABEL_54;
    }

    __break(1u);
LABEL_120:
    swift_once(&qword_283888, sub_BFC5C);
LABEL_35:
    id v148 = v317;
    uint64_t v149 = sub_6960(v317, (uint64_t)qword_2969C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v318 + 16))(v74, v149, v148);
    uint64_t v150 = swift_bridgeObjectRetain_n(v80, 2LL);
    uint64_t v151 = (os_log_s *)Logger.logObject.getter(v150);
    uint64_t v152 = static os_log_type_t.debug.getter();
    uint64_t v153 = os_log_type_enabled(v151, v152);
    uint64_t v294 = v76;
    if (v153)
    {
      unsigned int v295 = (void (*)(char *, char *, uint64_t))v69;
      uint64_t v154 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v155 = swift_slowAlloc(32LL, -1LL);
      uint64_t v338 = v155;
      *(_DWORD *)uint64_t v154 = 136315138;
      swift_bridgeObjectRetain(v80);
      uint64_t v337 = sub_6978((uint64_t)v86, v80, &v338);
      uint64_t v69 = (void (*)(uint64_t *, uint64_t *))v295;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v337, &v338);
      swift_bridgeObjectRelease_n(v80, 3LL);
      _os_log_impl(&dword_0, v151, v152, "Creating app punchout command with punchoutURI: %s", v154, 0xCu);
      swift_arrayDestroy(v155, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v156 = v155;
      uint64_t v97 = v331;
      swift_slowDealloc(v156, -1LL, -1LL);
      swift_slowDealloc(v154, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v318 + 8))(v303, v148);
    }

    else
    {

      swift_bridgeObjectRelease_n(v80, 2LL);
      (*(void (**)(uint64_t, uint64_t))(v318 + 8))(v74, v148);
    }

    uint64_t v201 = [objc_allocWithZone(SAUIAppPunchOut) init];
    uint64_t v202 = v301;
    URL.init(string:)(v86);
    swift_bridgeObjectRelease(v80);
    uint64_t v203 = type metadata accessor for URL(0LL);
    uint64_t v204 = *(void *)(v203 - 8);
    uint64_t v206 = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48))(v202, 1LL, v203) != 1)
    {
      URL._bridgeToObjectiveC()(v205);
      uint64_t v206 = v207;
      (*(void (**)(char *, uint64_t))(v204 + 8))(v202, v203);
    }

    objc_msgSend(v201, "setPunchOutUri:", v206, v294);

    uint64_t v208 = v97[5];
    uint64_t v209 = v97[6];
    sub_6EA8(v97 + 2, v208);
    os_log_type_t v210 = v201;
    dispatch thunk of AceServiceInvoker.currentStartRequestId()(v208, v209);
    if (v211)
    {
      uint64_t v212 = v211;
      uint64_t v213 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v212);
    }

    else
    {
      uint64_t v213 = 0LL;
    }

    [v210 setRefId:v213];

    uint64_t v214 = v210;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v214);
    uint64_t v216 = *(void *)((char *)&dword_10 + (v340 & 0xFFFFFFFFFFFFFF8LL));
    uint64_t v215 = *(void *)((char *)&dword_18 + (v340 & 0xFFFFFFFFFFFFFF8LL));
    if (v216 >= v215 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v215 > 1, v216 + 1, 1LL);
    }
    unint64_t v217 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v216, v214);
    specialized Array._endMutation()(v217);

    uint64_t v125 = (uint64_t)v294;
LABEL_64:
    unsigned int v295 = (void (*)(char *, char *, uint64_t))v69;
    unint64_t v218 = v298;
    uint64_t v219 = v300;
    (*(void (**)(char *, void, uint64_t))(v298 + 104))( v300,  enum case for AdditionalMetricsDescription.ModuleName.sfmhis(_:),  v125);
    uint64_t v220 = v97;
    v221 = v297;
    uint64_t v222 = v302;
    uint64_t v223 = v299;
    (*(void (**)(char *, void, uint64_t))(v297 + 104))( v302,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v299);
    v224 = v320;
    os_log_type_t v225 = v319;
    uint64_t v226 = v125;
    v227 = v321;
    (*(void (**)(char *, void, void *))(v320 + 104))( v319,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v321);
    uint64_t v323 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v219,  v222,  v225,  0LL,  1LL);
    uint64_t v326 = v228;
    (*(void (**)(char *, void *))(v224 + 8))(v225, v227);
    (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v223);
    (*(void (**)(char *, uint64_t))(v218 + 8))(v219, v226);
    uint64_t v76 = (void (*)(void, void, void))v220[11];
    uint64_t v69 = (void (*)(uint64_t *, uint64_t *))v220[12];
    uint64_t v125 = (uint64_t)sub_6EA8(v220 + 8, (uint64_t)v76);
    uint64_t v229 = enum case for ActivityType.completed(_:);
    uint64_t v230 = type metadata accessor for ActivityType(0LL);
    uint64_t v231 = *(void *)(v230 - 8);
    uint64_t v232 = v315;
    (*(void (**)(char *, uint64_t, uint64_t))(v231 + 104))(v315, v229, v230);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v231 + 56))(v232, 0LL, 1LL, v230);
    uint64_t v233 = *(int *)(v333 + 48);
    uint64_t v234 = v325;
    uint64_t v74 = *((void *)v325 + 2);
    unint64_t v235 = v306;
    uint64_t v236 = v330;
    ((void (*)(char *, uint64_t *, uint64_t))v74)(v306, v324, v330);
    *(void *)&v235[v233] = v327;
    uint64_t v237 = v316;
    v295(v316, v235, v236);
    (*((void (**)(char *, void, uint64_t, uint64_t))v234 + 7))(v237, 0LL, 1LL, v236);
    uint64_t v238 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v239 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    v240 = *(void *)(v239 - 8);
    uint64_t v86 = v307;
    (*(void (**)(char *, uint64_t, uint64_t))(v240 + 104))(v307, v238, v239);
    uint64_t v80 = (uint64_t)v334;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v240 + 56))(v86, 0LL, 1LL, v239);
    uint64_t v241 = [(id)v80 mediaItems];
    if (!v241) {
      goto LABEL_95;
    }
    uint64_t v242 = v241;
    uint64_t v243 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v242, v243);

    uint64_t v97 = *(void **)((char *)&dword_10 + (v73 & 0xFFFFFFFFFFFFF8LL));
    if (!v97) {
      goto LABEL_94;
    }
  }

  swift_bridgeObjectRelease(v74);
LABEL_112:
  uint64_t v200 = 0LL;
LABEL_113:
  uint64_t v292 = v97;
  uint64_t v293 = v138;
  uint64_t v283 = (uint64_t)v308;
  uint64_t v284 = (uint64_t)v309;
  uint64_t v285 = (uint64_t)v310;
  uint64_t v286 = v327;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v332,  v86,  v308,  v309,  v310,  v326,  v327,  v200,  0,  v292,  v293);
  swift_bridgeObjectRelease(v286);
  sub_1F6CC(v285, &qword_2845A0);
  sub_1F6CC(v284, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v283, &qword_2845A8);
  uint64_t v287 = sub_6DF0( &qword_287D90,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommandFailure,  (uint64_t)&protocol conformance descriptor for CommandFailure);
  v288 = swift_allocError(v333, v287, 0LL, 0LL);
  *uint64_t v289 = v125;
  uint64_t v338 = v288;
  uint64_t v339 = v80;
  swift_retain(v125);
  v328(&v338);
  swift_release(v125);
  sub_1F6CC((uint64_t)&v338, (uint64_t *)&unk_286C60);
  sub_1F6CC((uint64_t)v296, (uint64_t *)&unk_286C50);
  uint64_t v250 = &qword_289340;
  uint64_t v251 = v324;
  return sub_1F6CC((uint64_t)v251, v250);
}

uint64_t type metadata accessor for SiriForAirPlayFlow(uint64_t a1)
{
  uint64_t result = qword_2863E8;
  if (!qword_2863E8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SiriForAirPlayFlow);
  }
  return result;
}

uint64_t sub_156E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for StringsBackedAppNameResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

unint64_t sub_15780()
{
  unint64_t result = qword_284F10;
  if (!qword_284F10)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for StringsBackedAppNameResolver,  &type metadata for StringsBackedAppNameResolver);
    atomic_store(result, (unint64_t *)&qword_284F10);
  }

  return result;
}

uint64_t sub_157C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for ExecuteOnRemoteFlowPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t type metadata accessor for CatService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin10CatService);
}

void *sub_15858(void *a1)
{
  return a1;
}

uint64_t destroy for StringsBackedAppNameResolver(void *a1)
{
  return sub_6C3C(a1 + 5);
}

uint64_t type metadata accessor for PlayMediaCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin25PlayMediaCatDialogService);
}

uint64_t type metadata accessor for CommonMediaIntentCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin33CommonMediaIntentCatDialogService);
}

uint64_t sub_158F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PommesResponseFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_15918(void (*a1)(char *), void (*a2)(char *))
{
  return sub_15938(a1, a2);
}

uint64_t sub_15938(void (*a1)(char *), void (*a2)(char *))
{
  uint64_t v67 = a2;
  uint64_t v66 = a1;
  uint64_t v2 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  __chkstk_darwin(v2);
  uint64_t v63 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  uint64_t v5 = *(void *)(v60 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v58 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v59 = (char *)&v57 - v7;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v57 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v57 - v15;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v19 = v18(v16, v17, v8);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "SiriForAirPlayFlow#execute started", v22, 2u);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  uint64_t v62 = *(void (**)(char *, uint64_t))(v9 + 8);
  v62(v16, v8);
  uint64_t v23 = *(void *)(v68 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_featureFlags + 24);
  uint64_t v24 = *(void *)(v68 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_featureFlags + 32);
  uint64_t v25 = sub_6EA8((void *)(v68 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_featureFlags), v23);
  uint64_t v26 = *(void *)(v23 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v57 - v27;
  (*(void (**)(char *))(v26 + 16))((char *)&v57 - v27);
  LOBYTE(v24) = dispatch thunk of FeatureFlagProviding.isSiriForAirPlayEnabled.getter(v23, v24);
  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v23);
  if ((v24 & 1) == 0)
  {
    uint64_t v44 = v18(v12, v17, v8);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl(&dword_0, v45, v46, "SiriForAirPlayFlow#execute Feature is not enabled, executing locally", v47, 2u);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    uint64_t v48 = v12;
    goto LABEL_16;
  }

  if ((static SiriAudioEnvironment.isHomePod.getter(v29) & 1) == 0)
  {
    uint64_t v49 = v57;
    uint64_t v50 = v18(v57, v17, v8);
    uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_0, v51, v52, "SiriForAirPlayFlow#execute Platform is not HomePod, executing locally", v53, 2u);
      swift_slowDealloc(v53, -1LL, -1LL);
    }

    uint64_t v48 = v49;
LABEL_16:
    v62(v48, v8);
    uint64_t v54 = *(void **)(v68 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_intent);
    id v55 = v54;
    uint64_t v56 = v63;
    sub_A38E8(v54);

    v66(v56);
    return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v56, v65);
  }

  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  id v30 = (id)qword_296AA0;
  uint64_t v31 = v59;
  OSSignpostID.init(log:)(v30);
  uint64_t v33 = v60;
  uint64_t v32 = v61;
  uint64_t v34 = v58;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v58, v31, v61);
  uint64_t v35 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v36 = (v35 + 33) & ~v35;
  unint64_t v37 = (v5 + v36 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v38 = swift_allocObject(&unk_26D820, v37 + 16, v35 | 7);
  *(void *)(v38 + 16) = "siriForAirPlayExecute";
  *(void *)(v38 + 24) = 21LL;
  *(_BYTE *)(v38 + 32) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v38 + v36, v34, v32);
  uint64_t v39 = (void (**)(char *))(v38 + v37);
  uint64_t v40 = v67;
  *uint64_t v39 = v66;
  v39[1] = v40;
  uint64_t v41 = swift_retain(v40);
  uint64_t v42 = static os_signpost_type_t.begin.getter(v41);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v42,  &dword_0,  qword_296AA0,  "siriForAirPlayExecute",  21LL,  2LL,  v31,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  swift_retain(v38);
  sub_A6600(v68, (char *)sub_33CC4, v38);
  swift_release_n(v38, 2LL);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v31, v32);
}

uint64_t type metadata accessor for AmbiguousPlayFlow(uint64_t a1)
{
  uint64_t result = qword_28CB40;
  if (!qword_28CB40) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AmbiguousPlayFlow);
  }
  return result;
}

uint64_t sub_15ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SiriForAirPlayFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_15EFC(uint64_t a1, uint64_t a2)
{
  return sub_15F1C(a1, a2);
}

uint64_t sub_15F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v22 = a1;
  uint64_t v23 = v4;
  uint64_t v5 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - v10;
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = (v12 + 33) & ~v12;
  unint64_t v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v15 = swift_allocObject(&unk_274168, v14 + 16, v12 | 7);
  *(void *)(v15 + 16) = "ambiguousPlayFlowFrameAction";
  *(void *)(v15 + 24) = 28LL;
  *(_BYTE *)(v15 + 32) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15 + v13, v9, v5);
  uint64_t v16 = (void *)(v15 + v14);
  *uint64_t v16 = v22;
  v16[1] = a2;
  uint64_t v17 = swift_retain(a2);
  uint64_t v18 = static os_signpost_type_t.begin.getter(v17);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v18,  &dword_0,  qword_296AA0,  "ambiguousPlayFlowFrameAction",  28LL,  2LL,  v11,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v19 = swift_allocObject(&unk_274190, 32LL, 7LL);
  *(void *)(v19 + 16) = sub_33CC4;
  *(void *)(v19 + 24) = v15;
  swift_retain(v15);
  sub_1B05D4((uint64_t *)sub_33CB0, v19, v24, v23);
  swift_release(v15);
  swift_release(v19);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

uint64_t sub_16130(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_162A8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1F9E4(0, *(void *)(v2 + 16) + 1LL, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1F9E4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_161C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_6C5C(&qword_284018);
  unint64_t v4 = (void *)swift_allocObject(v3, 16 * v1 + 32, 7LL);
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = v1;
  void v4[3] = 2 * (v6 >> 4);
  uint64_t v7 = sub_C9B7C((uint64_t)&v10, v4 + 4, v1, a1);
  uint64_t v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_A7610(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return v4;
}

void *sub_162A8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    while (1)
    {
      int64_t v5 = sub_91278(v4, 0LL);
      if (v4 < 0) {
        break;
      }
      uint64_t v6 = v5;
      uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0) {
        goto LABEL_14;
      }
      if (v7 == v4) {
        return v6;
      }
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "invalid Collection: less than 'count' elements in collection",  60LL,  2LL,  "Swift/ContiguousArrayBuffer.swift",  33LL,  v10,  1122LL,  0);
      __break(1u);
LABEL_10:
      uint64_t v4 = String.UTF8View._foreignCount()();
      if (!v4) {
        return &_swiftEmptyArrayStorage;
      }
    }

    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  v10,  71LL,  0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Insufficient space allocated to copy string contents",  52LL,  2LL,  "Swift/StringUTF8View.swift",  26LL,  v10,  430LL,  0);
    __break(1u);
  }

  else
  {
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

uint64_t sub_1641C(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_16454(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1007C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1645C(uint64_t *a1, void **a2, uint64_t a3)
{
}

_BYTE **sub_16464(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  return sub_FF6C(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1646C()
{
  return sub_100EC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_16474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }

  return result;
}

uint64_t sub_164A4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PlaybackQueueLocation(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PlaybackSignals(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = AudioExperience.playbackSignals.getter(v10);
  Apple_Parsec_Siri_V2alpha_PlaybackSignals.playbackQueueLocation.getter(v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  int v14 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4);
  if (v14 == enum case for Apple_Parsec_Siri_V2alpha_PlaybackQueueLocation.UNRECOGNIZED(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v15 = *v7;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v16 = sub_6960(v0, (uint64_t)qword_2969C8);
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v16, v0);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v20 = 134217984;
      uint64_t v23 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
      _os_log_impl( &dword_0,  v18,  v19,  "ConverterHelpers#convertPlaybackQueueLocation unrecognized playbackQueueLocation: %ld",  v20,  0xCu);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }

  else
  {
    if (v14 == enum case for Apple_Parsec_Siri_V2alpha_PlaybackQueueLocation.next(_:)) {
      return 2LL;
    }
    if (v14 == enum case for Apple_Parsec_Siri_V2alpha_PlaybackQueueLocation.later(_:)) {
      return 3LL;
    }
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  }

  return 1LL;
}

id sub_1672C(void *a1)
{
  uint64_t v73 = a1;
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v71 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent(0LL);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  __chkstk_darwin(v4);
  uint64_t v66 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_28B5E8);
  __chkstk_darwin(v6);
  uint64_t v69 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PlaybackSignals(0LL);
  uint64_t v9 = *(objc_class **)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v13 = PommesAudioPluginResults.audioResults.getter(v10);
  uint64_t v14 = v13;
  uint64_t v75 = (uint64_t)_swiftEmptyArrayStorage;
  if (v13 >> 62) {
    goto LABEL_28;
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v13);
LABEL_3:
  uint64_t v70 = v1;
  uint64_t v72 = v2;
  if (v15)
  {
    uint64_t v65 = v9;
    uint64_t v9 = (objc_class *)(v14 & 0xC000000000000001LL);
    uint64_t v1 = 4LL;
    while (1)
    {
      uint64_t v16 = v1 - 4;
      if (v9)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v14);
        uint64_t v2 = v1 - 3;
        if (__OFADD__(v16, 1LL)) {
          goto LABEL_27;
        }
      }

      else
      {
        uint64_t v17 = *(void *)(v14 + 8 * v1);
        swift_retain(v17);
        uint64_t v2 = v1 - 3;
        if (__OFADD__(v16, 1LL))
        {
LABEL_27:
          __break(1u);
LABEL_28:
          if (v14 < 0) {
            uint64_t v59 = v14;
          }
          else {
            uint64_t v59 = v14 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(v14);
          uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v59);
          goto LABEL_3;
        }
      }

      id v18 = sub_16E20();
      uint64_t v19 = swift_release(v17);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
      unint64_t v21 = *(void *)((char *)&dword_10 + (v75 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v20 = *(void *)((char *)&dword_18 + (v75 & 0xFFFFFFFFFFFFFF8LL));
      if (v21 >= v20 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1LL);
      }
      uint64_t v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v18);
      specialized Array._endMutation()(v22);
      ++v1;
      if (v2 == v15)
      {
        swift_bridgeObjectRelease(v14);
        uint64_t v60 = (void *)v75;
        uint64_t v1 = v70;
        uint64_t v9 = v65;
        goto LABEL_15;
      }
    }
  }

  swift_bridgeObjectRelease(v14);
  uint64_t v60 = _swiftEmptyArrayStorage;
LABEL_15:
  uint64_t v23 = swift_bridgeObjectRelease(v14);
  AudioExperience.shouldPerformAppSelection.getter(v23);
  v24.super.super.isa = Bool._bridgeToObjectiveC()().super.super.isa;
  uint64_t v25 = AudioExperience.playbackSignals.getter(v24.super.super.isa);
  Apple_Parsec_Siri_V2alpha_PlaybackSignals.immediatelyStartPlayback.getter(v25);
  isa = (void (*)(char *, uint64_t))v9[1].isa;
  isa(v12, v8);
  v27.super.super.isa = Bool._bridgeToObjectiveC()().super.super.isa;
  uint64_t v28 = AudioExperience.playbackSignals.getter(v27.super.super.isa);
  Apple_Parsec_Siri_V2alpha_PlaybackSignals.isAmbiguousPlay.getter(v28);
  isa(v12, v8);
  v29.super.super.isa = Bool._bridgeToObjectiveC()().super.super.isa;
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v30.super.super.isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  uint64_t v31 = (void *)dispatch thunk of AudioExperience.internalSignals.getter(v30.super.super.isa);
  if ((sub_881D0(0x655273656D6D6F50LL, 0xEE0065736E6F7073LL, v31) & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0) {
      uint64_t v31 = sub_1FC6C(0LL, v31[2] + 1LL, 1, v31);
    }
    unint64_t v33 = v31[2];
    unint64_t v32 = v31[3];
    if (v33 >= v32 >> 1) {
      uint64_t v31 = sub_1FC6C((void *)(v32 > 1), v33 + 1, 1, v31);
    }
    v31[2] = v33 + 1;
    uint64_t v34 = (char *)&v31[2 * v33];
    strcpy(v34 + 32, "PommesResponse");
    v34[47] = -18;
  }

  id v35 = sub_184E0(v73);
  uint64_t v65 = v24.super.super.isa;
  id v64 = v35;
  uint64_t v63 = v27.super.super.isa;
  uint64_t v62 = v29.super.super.isa;
  uint64_t v61 = v30.super.super.isa;
  uint64_t v36 = v66;
  uint64_t v37 = AudioExperience.audioClientComponent.getter();
  uint64_t v38 = (uint64_t)v69;
  Apple_Parsec_Siri_V2alpha_AudioClientComponent.audioIntentDetails.getter(v37);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v68);
  uint64_t v39 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v38, 0LL, 1LL, v39);
  uint64_t v40 = sub_1C7E0C(v38);
  unint64_t v42 = v41;
  sub_1F6CC(v38, &qword_28B5E8);
  id v43 = objc_allocWithZone(&OBJC_CLASS___INPrivatePlayMediaIntentData);
  id v44 = sub_1C7890( 0LL,  v24.super.super.isa,  (uint64_t)v60,  v35,  0LL,  0LL,  0LL,  v27.super.super.isa,  v29.super.super.isa,  v30.super.super.isa,  (uint64_t)v31,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v40,  v42);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v45 = sub_6960(v1, (uint64_t)qword_2969C8);
  os_log_type_t v46 = v71;
  uint64_t v47 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v45, v1);
  id v48 = v44;
  uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
  os_log_type_t v50 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v52 = swift_slowAlloc(32LL, -1LL);
    uint64_t v75 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    uint64_t v73 = v51 + 4;
    id v53 = v48;
    id v54 = [v53 description];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    unint64_t v57 = v56;

    uint64_t v74 = sub_6978(v55, v57, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75);

    swift_bridgeObjectRelease(v57);
    _os_log_impl( &dword_0,  v49,  v50,  "ConverterHelpers#convertPrivatePlayMediaIntentData privatePlayData: %s",  v51,  0xCu);
    swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v52, -1LL, -1LL);
    swift_slowDealloc(v51, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v70);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v1);
  }

  return v48;
}

id sub_16E20()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v56 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v51 - v4;
  uint64_t v6 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v51 - v11);
  uint64_t v13 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItem(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v57 = v13;
  uint64_t v58 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = AudioResult.audioItem.getter(v18);
  Apple_Parsec_Siri_V2alpha_AudioItem.type.getter(v21);
  int v22 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v12, v6);
  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.UNRECOGNIZED(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v12, v6);
    uint64_t v23 = *v12;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = sub_6960(v0, (uint64_t)qword_2969C8);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v5, v24, v0);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = v58;
    if (v28)
    {
      NSNumber v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)NSNumber v30 = 134217984;
      uint64_t v60 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
      _os_log_impl(&dword_0, v26, v27, "ConverterHelpers#convertAudioItems unrecognized AudioItemType: %ld", v30, 0xCu);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
    id v31 = sub_1742C((uint64_t)v20, 0LL);
    unint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
    goto LABEL_9;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.song(_:))
  {
    id v31 = sub_1742C((uint64_t)v20, 1LL);
    unint64_t v32 = *(void (**)(char *, uint64_t))(v58 + 8);
LABEL_9:
    unint64_t v33 = v20;
    uint64_t v34 = v57;
LABEL_29:
    v32(v33, v34);
    return v31;
  }

  uint64_t v35 = v57;
  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.album(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 2LL;
LABEL_28:
    id v31 = sub_1742C(v36, v37);
    unint64_t v32 = *(void (**)(char *, uint64_t))(v58 + 8);
    unint64_t v33 = v20;
    uint64_t v34 = v35;
    goto LABEL_29;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.artist(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 3LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.genre(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 4LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.playlist(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 5LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastShow(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 6LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastEpisode(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 7LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.audioBook(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 10LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.podcastStation(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 15LL;
    goto LABEL_28;
  }

  if (v22 == enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.radioStation(_:))
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = 16LL;
    goto LABEL_28;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = sub_6960(v0, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v56, v39, v0);
  uint64_t v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v58 + 16))(v17, v20, v35);
  unint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.default.getter();
  int v55 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    id v54 = v41;
    id v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = swift_slowAlloc(32LL, -1LL);
    uint64_t v53 = v44;
    uint64_t v60 = v44;
    uint64_t v52 = v43;
    *(_DWORD *)id v43 = 136315138;
    uint64_t v51 = v43 + 4;
    Apple_Parsec_Siri_V2alpha_AudioItem.type.getter(v44);
    uint64_t v45 = String.init<A>(describing:)(v10, v6);
    unint64_t v47 = v46;
    uint64_t v59 = sub_6978(v45, v46, &v60);
    uint64_t v35 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
    swift_bridgeObjectRelease(v47);
    id v48 = *(void (**)(char *, uint64_t))(v58 + 8);
    v48(v17, v35);
    uint64_t v49 = v52;
    _os_log_impl( &dword_0,  v54,  (os_log_type_t)v55,  "ConverterHelpers#convertAudioItems unrecognized AudioItemType type: %s",  v52,  0xCu);
    uint64_t v50 = v53;
    swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  else
  {
    id v48 = *(void (**)(char *, uint64_t))(v58 + 8);
    v48(v17, v35);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v56, v0);
  id v31 = sub_1742C((uint64_t)v20, 0LL);
  v48(v20, v35);
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v12, v6);
  return v31;
}

id sub_1742C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_6C5C(&qword_28D438);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PlaybackItem.ContentOrigin(0LL);
  uint64_t v105 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v102 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v103 = (char *)&v100 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v100 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v100 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v100 - v16;
  uint64_t v18 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioConfidenceLevel(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  int v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = Apple_Parsec_Siri_V2alpha_AudioItem.artist.getter(v20);
  uint64_t v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000LL) == 0) {
    uint64_t v25 = v23 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v130 = a2;
  uint64_t v106 = v17;
  if (v25)
  {
    uint64_t v122 = v23;
    unint64_t v123 = v24;
  }

  else
  {
    swift_bridgeObjectRelease(v24);
    uint64_t v122 = 0LL;
    unint64_t v123 = 0LL;
  }

  uint64_t v26 = Apple_Parsec_Siri_V2alpha_AudioItem.identifier.getter();
  uint64_t v28 = v27;
  uint64_t v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000LL) == 0) {
    uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    uint64_t v30 = v26;
  }

  else
  {
    swift_bridgeObjectRelease(v27);
    uint64_t v30 = 0LL;
    uint64_t v28 = 0LL;
  }

  uint64_t v31 = Apple_Parsec_Siri_V2alpha_AudioItem.title.getter();
  uint64_t v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000LL) == 0) {
    uint64_t v33 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (v33)
  {
    uint64_t v120 = v31;
    unint64_t v121 = v32;
  }

  else
  {
    swift_bridgeObjectRelease(v32);
    uint64_t v120 = 0LL;
    unint64_t v121 = 0LL;
  }

  uint64_t v34 = Apple_Parsec_Siri_V2alpha_AudioItem.assetInfo.getter();
  uint64_t v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000LL) == 0) {
    uint64_t v36 = v34 & 0xFFFFFFFFFFFFLL;
  }
  if (v36)
  {
    uint64_t v118 = v34;
    unint64_t v119 = v35;
  }

  else
  {
    swift_bridgeObjectRelease(v35);
    uint64_t v118 = 0LL;
    unint64_t v119 = 0LL;
  }

  uint64_t v37 = Apple_Parsec_Siri_V2alpha_AudioItem.recommendationID.getter();
  uint64_t v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000LL) == 0) {
    uint64_t v39 = v37 & 0xFFFFFFFFFFFFLL;
  }
  if (v39)
  {
    uint64_t v116 = v37;
    unint64_t v117 = v38;
  }

  else
  {
    swift_bridgeObjectRelease(v38);
    uint64_t v116 = 0LL;
    unint64_t v117 = 0LL;
  }

  uint64_t v40 = Apple_Parsec_Siri_V2alpha_AudioItem.images.getter();
  id v128 = sub_17D3C(v40);
  uint64_t v41 = swift_bridgeObjectRelease(v40);
  uint64_t v42 = Apple_Parsec_Siri_V2alpha_AudioItem.sharedUserIDFromPlayableMusicAccount.getter(v41);
  uint64_t v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000LL) == 0) {
    uint64_t v44 = v42 & 0xFFFFFFFFFFFFLL;
  }
  if (v44)
  {
    uint64_t v114 = v42;
    unint64_t v115 = v43;
  }

  else
  {
    swift_bridgeObjectRelease(v43);
    uint64_t v114 = 0LL;
    unint64_t v115 = 0LL;
  }

  uint64_t v45 = Apple_Parsec_Siri_V2alpha_AudioItem.punchoutUri.getter();
  uint64_t v47 = HIBYTE(v46) & 0xF;
  if ((v46 & 0x2000000000000000LL) == 0) {
    uint64_t v47 = v45 & 0xFFFFFFFFFFFFLL;
  }
  if (v47)
  {
    uint64_t v112 = v45;
    unint64_t v113 = v46;
  }

  else
  {
    swift_bridgeObjectRelease(v46);
    uint64_t v112 = 0LL;
    unint64_t v113 = 0LL;
  }

  uint64_t v131 = (void *)Apple_Parsec_Siri_V2alpha_AudioItem.internalSignals.getter();
  Apple_Parsec_Siri_V2alpha_AudioItem.ampConfidenceScore.getter();
  Apple_Parsec_Siri_V2alpha_AudioItem.ampConfidenceLevel.getter();
  uint64_t v127 = sub_17ECC((uint64_t)v22);
  uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  int v49 = Apple_Parsec_Siri_V2alpha_AudioItem.requiresSubscription.getter(v48);
  uint64_t v50 = Apple_Parsec_Siri_V2alpha_AudioItem.provider.getter();
  uint64_t v52 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000LL) == 0) {
    uint64_t v52 = v50 & 0xFFFFFFFFFFFFLL;
  }
  if (v52)
  {
    uint64_t v110 = v50;
    unint64_t v111 = v51;
  }

  else
  {
    swift_bridgeObjectRelease(v51);
    uint64_t v110 = 0LL;
    unint64_t v111 = 0LL;
  }

  int v53 = Apple_Parsec_Siri_V2alpha_AudioItem.isAvailable.getter();
  int v54 = Apple_Parsec_Siri_V2alpha_AudioItem.isHardBan.getter();
  uint64_t v55 = Apple_Parsec_Siri_V2alpha_AudioItem.bundleID.getter();
  uint64_t v57 = HIBYTE(v56) & 0xF;
  if ((v56 & 0x2000000000000000LL) == 0) {
    uint64_t v57 = v55 & 0xFFFFFFFFFFFFLL;
  }
  int v125 = v53;
  if (v57)
  {
    uint64_t v108 = v55;
    unint64_t v109 = v56;
  }

  else
  {
    swift_bridgeObjectRelease(v56);
    uint64_t v108 = 0LL;
    unint64_t v109 = 0LL;
  }

  uint64_t v58 = Apple_Parsec_Siri_V2alpha_AudioItem.universalResourceLink.getter();
  uint64_t v60 = v59;
  uint64_t v61 = HIBYTE(v59) & 0xF;
  if ((v59 & 0x2000000000000000LL) == 0) {
    uint64_t v61 = v58 & 0xFFFFFFFFFFFFLL;
  }
  int v126 = v54;
  if (v61)
  {
    uint64_t v107 = v58;
  }

  else
  {
    swift_bridgeObjectRelease(v59);
    uint64_t v107 = 0LL;
    uint64_t v60 = 0LL;
  }

  uint64_t v62 = Apple_Parsec_Siri_V2alpha_AudioItem.providerAppName.getter();
  uint64_t v64 = v63;
  uint64_t v65 = HIBYTE(v63) & 0xF;
  if ((v63 & 0x2000000000000000LL) == 0) {
    uint64_t v65 = v62 & 0xFFFFFFFFFFFFLL;
  }
  if (!v65)
  {
    swift_bridgeObjectRelease(v63);
    uint64_t v62 = 0LL;
    uint64_t v64 = 0LL;
  }

  uint64_t v129 = v30;
  uint64_t v124 = v62;
  if (v28)
  {
    int v101 = v49;
    swift_bridgeObjectRetain(v28);
    static PlaybackItem.Identifier.parse(uri:)(v30, v28);
    swift_bridgeObjectRelease(v28);
    uint64_t v66 = type metadata accessor for PlaybackItem.Identifier(0LL);
    uint64_t v67 = *(void *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v5, 1LL, v66) == 1)
    {
      sub_1F6CC((uint64_t)v5, &qword_28D438);
      goto LABEL_73;
    }

    PlaybackItem.Identifier.contentOrigin.getter();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v66);
    uint64_t v68 = v105;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v106, v15, v6);
    uint64_t v100 = *(void (**)(char *, void, uint64_t))(v68 + 104);
    v100(v104, enum case for PlaybackItem.ContentOrigin.device(_:), v6);
    uint64_t v69 = sub_10430( &qword_28D440,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackItem.ContentOrigin,  (uint64_t)&protocol conformance descriptor for PlaybackItem.ContentOrigin);
    dispatch thunk of RawRepresentable.rawValue.getter(&v134, v6, v69);
    uint64_t v70 = v6;
    dispatch thunk of RawRepresentable.rawValue.getter(&v132, v6, v69);
    uint64_t v71 = v135;
    uint64_t v72 = v133;
    if (v134 == v132 && v135 == v133)
    {
      char v73 = 1;
      uint64_t v72 = v135;
    }

    else
    {
      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v135);
    }

    swift_bridgeObjectRelease(v71);
    swift_bridgeObjectRelease(v72);
    uint64_t v74 = v105;
    uint64_t v75 = *(void (**)(char *, uint64_t))(v105 + 8);
    uint64_t v76 = v70;
    v75(v104, v70);
    os_log_type_t v77 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
    uint64_t v78 = v103;
    uint64_t v79 = v106;
    v77(v103, v106, v76);
    if ((v73 & 1) == 0)
    {
      v100(v102, enum case for PlaybackItem.ContentOrigin.sirisync(_:), v76);
      dispatch thunk of RawRepresentable.rawValue.getter(&v134, v76, v69);
      dispatch thunk of RawRepresentable.rawValue.getter(&v132, v76, v69);
      uint64_t v80 = v135;
      uint64_t v81 = v133;
      if (v134 != v132 || v135 != v133)
      {
        char v99 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v135);
        swift_bridgeObjectRelease(v80);
        swift_bridgeObjectRelease(v81);
        v75(v102, v76);
        v75(v103, v76);
        if ((v99 & 1) == 0)
        {
LABEL_72:
          v75(v79, v76);
          goto LABEL_73;
        }

LABEL_67:
        uint64_t v82 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native(v131) & 1) == 0) {
          uint64_t v82 = sub_1FC6C(0LL, v82[2] + 1LL, 1, v82);
        }
        unint64_t v84 = v82[2];
        unint64_t v83 = v82[3];
        if (v84 >= v83 >> 1) {
          uint64_t v82 = sub_1FC6C((void *)(v83 > 1), v84 + 1, 1, v82);
        }
        v82[2] = v84 + 1;
        uint64_t v131 = v82;
        uint64_t v85 = (char *)&v82[2 * v84];
        strcpy(v85 + 32, "SourceLibrary");
        *((_WORD *)v85 + 23) = -4864;
        goto LABEL_72;
      }

      swift_bridgeObjectRelease_n(v135, 2LL);
      v75(v102, v76);
      uint64_t v78 = v103;
    }

    v75(v78, v76);
    goto LABEL_67;
  }

LABEL_73:
  uint64_t v86 = Apple_Parsec_Siri_V2alpha_AudioItem.audioSubItems.getter();
  uint64_t v87 = sub_1811C(v86);
  swift_bridgeObjectRelease(v86);
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  Class v89 = Bool._bridgeToObjectiveC()().super.super.isa;
  Class v90 = Bool._bridgeToObjectiveC()().super.super.isa;
  Class v91 = Float._bridgeToObjectiveC()().super.super.isa;
  uint64_t v92 = sub_1CA96C();
  unint64_t v94 = v93;
  id v95 = objc_allocWithZone(&OBJC_CLASS___INPrivateMediaItemValueData);
  id v96 = sub_1C7AF4( v116,  v117,  v118,  v119,  v114,  v115,  v112,  v113,  isa,  v110,  v111,  v89,  v90,  v108,  v109,  v107,  v60,  v124,  v64,  (uint64_t)v131,  v91,  v127,  v92,  v94,  (uint64_t)v87);
  id v97 = objc_allocWithZone(&OBJC_CLASS___INMediaItem);
  return sub_1831C(v129, v28, v120, v121, v130, v128, v122, v123, 0LL, 0LL, v96);
}

                    uint64_t v279 = v332;
                    v280 = v385;
                    os_log_type_t v281 = ((uint64_t (*)(char *, uint64_t, uint64_t))v345)(v332, v327, v385);
                    id v282 = (os_log_s *)Logger.logObject.getter(v281);
                    uint64_t v283 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v282, v283))
                    {
                      uint64_t v284 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                      *(_WORD *)uint64_t v284 = 0;
                      _os_log_impl( &dword_0,  v282,  v283,  "AmbiguousDetermineFlow#execute received non-determine verb",  v284,  2u);
                      uint64_t v285 = v284;
                      v265 = v364;
                      swift_slowDealloc(v285, -1LL, -1LL);
                    }

                    ((void (*)(char *, uint64_t))v376)(v279, v280);
                    uint64_t v286 = v354;
                    uint64_t v287 = v360;
                    (*(void (**)(char *, void, uint64_t))(v265 + 104))( v354,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v360);
                    v288 = v368;
                    uint64_t v289 = v353;
                    uint64_t v290 = v355;
                    (*(void (**)(char *, void, uint64_t))(v368 + 104))( v353,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v355);
                    uint64_t v291 = v406;
                    uint64_t v292 = v407;
                    sub_6EA8(&v405, v406);
                    uint64_t v293 = v333;
                    dispatch thunk of AudioIntent.verb.getter(v291, v292);
                    uint64_t v294 = String.init<A>(describing:)(v293, v334);
                    uint64_t v296 = v295;
                    uint64_t v297 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v286,  v289,  v294,  v295,  0LL,  1LL);
                    v384 = v298;
                    v385 = v297;
                    uint64_t v299 = swift_bridgeObjectRelease(v296);
                    (*(void (**)(char *, uint64_t, __n128))(v288 + 8))(v289, v290, v299);
                    (*(void (**)(char *, uint64_t))(v364 + 8))(v286, v287);
                    v300 = v359[16];
                    os_log_type_t v377 = (char *)v359[17];
                    sub_6EA8(v359 + 13, v300);
                    uint64_t v301 = v370;
                    (*(void (**)(char *, void, uint64_t))(v372 + 104))( v370,  enum case for TypeOfIntent.determine(_:),  v373);
                    unsigned int v302 = enum case for ActivityType.failed(_:);
                    uint64_t v303 = type metadata accessor for ActivityType(0LL);
                    uint64_t v304 = *(void *)(v303 - 8);
                    v305 = (uint64_t)v358;
                    (*(void (**)(char *, uint64_t, uint64_t))(v304 + 104))(v358, v302, v303);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v304 + 56))(v305, 0LL, 1LL, v303);
                    uint64_t v306 = type metadata accessor for TemplatingResult(0LL);
                    uint64_t v307 = (uint64_t)v357;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v306 - 8) + 56LL))( v357,  1LL,  1LL,  v306);
                    uint64_t v308 = enum case for SiriKitReliabilityCodes.genericError(_:);
                    uint64_t v309 = type metadata accessor for SiriKitReliabilityCodes(0LL);
                    uint64_t v310 = *(void *)(v309 - 8);
                    v311 = (uint64_t)v356;
                    (*(void (**)(char *, uint64_t, uint64_t))(v310 + 104))(v356, v308, v309);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v310 + 56))(v311, 0LL, 1LL, v309);
                    uint64_t v312 = v384;
                    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v301,  v305,  v307,  v311,  v385,  v384,  v300,  v377);
                    swift_bridgeObjectRelease(v312);
                    sub_1F6CC(v311, &qword_2845A0);
                    sub_1F6CC(v307, (uint64_t *)&unk_286BD0);
                    sub_1F6CC(v305, &qword_2845A8);
                    uint64_t v313 = (*(uint64_t (**)(char *, uint64_t))(v372 + 8))(v301, v373);
                    uint64_t v314 = v379;
                    static ExecuteResponse.complete()(v313);
                    v382(v314);
                    ((void (*)(char *, uint64_t))v380[1])(v314, v381);
                    goto LABEL_50;
                  }

                  sub_1F6CC(v339, &qword_284DB0);
                  sub_1F6CC(v259, &qword_284DB0);
                  (*(void (**)(uint64_t, uint64_t))(v371 + 8))(v266, v261);
                  v265 = v364;
                }

                sub_1F6CC(v262, &qword_284DA8);
                sub_6C3C(v395);
                goto LABEL_73;
              }

              sub_1F6CC(v342, &qword_284DB0);
              sub_1F6CC(v343, &qword_284DB0);
              (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v256, v253);
            }

            sub_1F6CC(v254, &qword_284DA8);
            sub_6C3C(&v398);
            sub_874C4((uint64_t)&v405, (uint64_t)v395);
            goto LABEL_64;
          }

          sub_1F6CC(v363, &qword_284DB0);
          sub_1F6CC(v350, &qword_284DB0);
          (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v162, v159);
        }

        sub_1F6CC(v160, &qword_284DA8);
        sub_6C3C(&v402);
        sub_874C4((uint64_t)&v405, (uint64_t)&v398);
        goto LABEL_58;
      }

      sub_1F6CC(v365, &qword_284DB0);
      sub_1F6CC(v367, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v155, v148);
    }

    sub_1F6CC(v149, &qword_284DA8);
    sub_874C4((uint64_t)&v405, (uint64_t)&v402);
    goto LABEL_31;
  }

  sub_1F6CC((uint64_t)&v402, &qword_2848C0);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v131 = v385;
  uint64_t v132 = sub_6960(v385, (uint64_t)qword_2969C8);
  uint64_t v133 = v384;
  uint64_t v134 = v345;
  uint64_t v135 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v384 + 16))(v345, v132, v131);
  uint64_t v136 = (os_log_s *)Logger.logObject.getter(v135);
  uint64_t v137 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v136, v137))
  {
    uint64_t v138 = v81;
    uint64_t v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v139 = 0;
    _os_log_impl( &dword_0,  v136,  v137,  "AmbiguousDetermineFlow#execute received unsupported NLv3IntentOnly, USO parse",  v139,  2u);
    uint64_t v140 = v139;
    uint64_t v81 = v138;
    swift_slowDealloc(v140, -1LL, -1LL);
  }

  uint64_t v141 = (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v134, v131);
  uint64_t v142 = v379;
  static ExecuteResponse.complete()(v141);
  v382(v142);
  ((void (*)(char *, uint64_t))v380[1])(v142, v381);
  return ((uint64_t (*)(char *, uint64_t))v113)(v81, v73);
}

id sub_17D3C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)(a1 + 16))
  {
    type metadata accessor for Apple_Parsec_Siri_V2alpha_Image(0LL);
    double v9 = Apple_Parsec_Siri_V2alpha_Image.width.getter();
    double v10 = Apple_Parsec_Siri_V2alpha_Image.height.getter();
    uint64_t v11 = Apple_Parsec_Siri_V2alpha_Image.uriFormatString.getter();
    uint64_t v13 = v12;
    URL.init(string:)(v11);
    swift_bridgeObjectRelease(v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      id v14 = [(id)objc_opt_self(INImage) imageWithURL:v16 width:v9 height:v10];

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v14;
    }

    sub_1F6CC((uint64_t)v4, &qword_284628);
  }

  return 0LL;
}

uint64_t sub_17ECC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioConfidenceLevel(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for Apple_Parsec_Siri_V2alpha_AudioConfidenceLevel.UNRECOGNIZED(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v11 = *v9;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v12 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
    id v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v16 = 134217984;
      uint64_t v19 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
      _os_log_impl( &dword_0,  v14,  v15,  "ConverterHelpers#convertAmpConfidenceLevel unrecognized AudioConfidenceLevel: %ld",  v16,  0xCu);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0LL;
  }

  if (v10 == enum case for Apple_Parsec_Siri_V2alpha_AudioConfidenceLevel.low(_:)) {
    return 1LL;
  }
  if (v10 == enum case for Apple_Parsec_Siri_V2alpha_AudioConfidenceLevel.medium(_:)) {
    return 2LL;
  }
  if (v10 != enum case for Apple_Parsec_Siri_V2alpha_AudioConfidenceLevel.high(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
    return 0LL;
  }

  return 3LL;
}

void *sub_1811C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioSubItem(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = &_swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v26 = &_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v25 = *(void *)(v3 + 72);
    double v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
    for (uint64_t i = v9(v5, v8, v2); ; uint64_t i = v9(v5, v8, v2))
    {
      uint64_t v16 = Apple_Parsec_Siri_V2alpha_AudioSubItem.identifier.getter(i);
      unint64_t v18 = v17;
      uint64_t v19 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000LL) == 0) {
        uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (!v19)
      {
        swift_bridgeObjectRelease(v17);
        unint64_t v18 = 0LL;
      }

      uint64_t v20 = Apple_Parsec_Siri_V2alpha_AudioSubItem.assetInfo.getter();
      unint64_t v22 = v21;
      uint64_t v23 = HIBYTE(v21) & 0xF;
      if ((v21 & 0x2000000000000000LL) == 0) {
        uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        if (v18) {
          goto LABEL_14;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v21);
        unint64_t v22 = 0LL;
        if (v18)
        {
LABEL_14:
          NSString v24 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v18);
          if (v22) {
            goto LABEL_3;
          }
          goto LABEL_18;
        }
      }

      NSString v24 = 0LL;
      if (v22)
      {
LABEL_3:
        NSString v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v22);
        goto LABEL_4;
      }

LABEL_18:
      NSString v11 = 0LL;
LABEL_4:
      id v12 = [objc_allocWithZone(INMediaSubItem) initWithIdentifier:v24 assetInfo:v11];

      uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      uint64_t v14 = v26[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      uint64_t v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized ContiguousArray._endMutation()(v15);
      v8 += v25;
      if (!--v6) {
        return v26;
      }
    }
  }

  return result;
}

    NSString v24 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0LL, 0LL);
    swift_willThrow(v24);
    uint64_t v61 = v24;
    swift_errorRetain(v24);
    uint64_t v25 = sub_6C5C(&qword_284010);
    if ((swift_dynamicCast(v25, &v61, v25, &type metadata for _MergeError, 0LL) & 1) == 0)
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
      swift_bridgeObjectRelease_n(a1, 2LL);
      swift_errorRelease(v61);
      return;
    }

    goto LABEL_64;
  }

    swift_release(v123);
    return;
  }

  if (v59 != enum case for Parse.pommesResponse(_:))
  {
    uint64_t v82 = v120(v116, v119, v58);
    unint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    unint64_t v84 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v85 = 0;
      _os_log_impl( &dword_0,  v83,  v84,  "CommonFlowStrategy#makeIntentFromParse received non NLv3IntentPlusServerConversion or NLv3IntentOnly parse",  v85,  2u);
      swift_slowDealloc(v85, -1LL, -1LL);
    }

    v57(v116, v58);
    uint64_t v86 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v87 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v88 = swift_allocError(v86, v87, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v86 - 8) + 104LL))( v89,  enum case for PlaybackCode.ceGE14(_:),  v86);
    Class v90 = v122;
    swift_beginAccess(v122 + 16, &v129, 1LL, 0LL);
    Class v91 = *(void **)(v90 + 16);
    *(void *)(v90 + 16) = v88;
    uint64_t v92 = *(_BYTE *)(v90 + 24);
    *(_BYTE *)(v90 + 24) = 1;
    sub_87F60(v91, v92);
    dispatch_group_leave(v121);
    ((void (*)(void **, uint64_t))v49)(v12, v8);
    goto LABEL_18;
  }

  (*(void (**)(void **, uint64_t))(v37 + 96))(v12, v8);
  uint64_t v74 = *v12;
  v120(v117, v119, v58);
  uint64_t v75 = v74;
  uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
  os_log_type_t v77 = static os_log_type_t.default.getter(v76);
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v79 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v78 = 138477827;
    uint64_t v129 = (uint64_t)v75;
    uint64_t v80 = v75;
    uint64_t v58 = v125;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v129, &v130);
    *uint64_t v79 = v75;

    _os_log_impl( &dword_0,  v76,  v77,  "CommonFlowStrategy#makeIntentFromParse received pommesResponse: %{private}@",  v78,  0xCu);
    uint64_t v81 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v79, 1LL, v81);
    swift_slowDealloc(v79, -1LL, -1LL);
    swift_slowDealloc(v78, -1LL, -1LL);
  }

  else
  {

    uint64_t v76 = (os_log_s *)v75;
  }

  v57(v117, v58);
  uint64_t v108 = v123;
  (*(void (**)(id, void (*)(void *, char), uint64_t))(*v118 + 240LL))(v75, sub_87F54, v123);
  swift_release(v108);
}

  swift_beginAccess(v7, &v21, 0LL, 0LL);
  uint64_t v19 = swift_weakLoadStrong(v7);
  if (v19)
  {
    uint64_t v20 = v19;
    sub_1AAB88(a3);
    swift_release(v20);
  }

  a4(a3);
}

id sub_1831C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  id v12 = v11;
  if (a2)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    if (a4) {
      goto LABEL_3;
    }
  }

  else
  {
    NSString v18 = 0LL;
    if (a4)
    {
LABEL_3:
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a4);
      uint64_t v20 = a9;
      if (a8) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }

  NSString v19 = 0LL;
  uint64_t v20 = a9;
  if (a8)
  {
LABEL_4:
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a8);
    uint64_t v22 = a10;
    if (v20) {
      goto LABEL_5;
    }
LABEL_10:
    v23.super.Class isa = 0LL;
    NSString v24 = a11;
    if (v22) {
      goto LABEL_6;
    }
LABEL_11:
    v25.super.Class isa = 0LL;
    goto LABEL_12;
  }

LABEL_9:
  NSString v21 = 0LL;
  uint64_t v22 = a10;
  if (!v20) {
    goto LABEL_10;
  }
LABEL_5:
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v23.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  NSString v24 = a11;
  if (!v22) {
    goto LABEL_11;
  }
LABEL_6:
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v25.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
LABEL_12:
  id v26 = [v12 initWithIdentifier:v18 title:v19 type:a5 artwork:a6 artist:v21 topics:v23.super.isa namedEntities:v25.super.isa privateMediaItemValueData:v24];

  return v26;
}

  if ((v51 & 0xC000000000000001LL) != 0)
  {
    uint64_t v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v51);
    goto LABEL_12;
  }

  if (*(void *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v52 = *(id *)(v51 + 32);
LABEL_12:
    int v53 = v52;
    swift_bridgeObjectRelease(v51);
    int v54 = [v53 type];

LABEL_19:
    unint64_t v59 = v36;
    uint64_t v58 = (uint64_t)v70;
    uint64_t v57 = (uint64_t)v71;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v63,  v47,  v70,  v71,  v46,  v64,  v65,  v54,  0,  v59,  v37);
    sub_1F6CC(v46, &qword_2845A0);
    sub_1F6CC(v57, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v58, &qword_2845A8);
    v75[0] = v66;
    uint64_t v76 = 1;
    swift_errorRetain(v66);
    a6(v75);
    sub_1F6CC((uint64_t)v75, (uint64_t *)&unk_286C60);
    return;
  }

  __break(1u);
}

  uint64_t v28 = 0LL;
LABEL_10:
  uint64_t v30 = a14;
  uint64_t v29 = a15;
  uint64_t v31 = a12;
  if (v27 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_16B6A0(a20, v27);
    uint64_t v31 = a12;
    uint64_t v30 = a14;
    uint64_t v29 = a15;
  }

  uint64_t v34 = v31;
  unint64_t v35 = v30;
  uint64_t v37 = [v36 initWithAppSelectionEnabled:a1 appInferred:a2 audioSearchResults:v43.super.isa privateMediaIntentData:a4 appSelectionSignalsEnabled:a5 a ppSelectionSignalsFrequencyDenominator:a6 shouldSuppressCommonWholeHouseAudioRoutes:a7 immediatelyStartPlayback:a8 isAm biguousPlay:a9 isPersonalizedRequest:a10 internalSignals:v24.super.isa entityConfidenceSignalsEnabled:v31 entityConfidenceSignalsFreque ncyDenominatorInternal:a13 entityConfidenceSignalsFrequencyDenominatorProd:v30 entityConfidenceSignalsMaxItemsToDisamb iguate:v29 alternativeProviderBundleIdentifier:v26 ampPAFDataSetID:v28 pegasusMetaData:isa];

  return v37;
}

id sub_184E0(void *a1)
{
  uint64_t v2 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioUnderstanding(0LL);
  uint64_t v160 = *(void *)(v2 - 8);
  uint64_t v161 = v2;
  __chkstk_darwin(v2);
  uint64_t v159 = (char *)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = type metadata accessor for IdentifiedUser.Classification(0LL);
  uint64_t v162 = *(void *)(v156 - 8);
  uint64_t v4 = __chkstk_darwin(v156);
  uint64_t v153 = (char *)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v155 = (char *)&v152 - v7;
  __chkstk_darwin(v6);
  uint64_t v164 = (char *)&v152 - v8;
  double v9 = (void (*)(char *, char *, uint64_t))type metadata accessor for IdentifiedUser(0LL);
  int v10 = (objc_class *)*((void *)v9 - 1);
  uint64_t v166 = v9;
  Class v167 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v154 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v152 - v13;
  uint64_t v15 = type metadata accessor for Apple_Parsec_Siri_V2alpha_MultiUserContext.UserIdentityClassification(0LL);
  uint64_t v158 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  os_log_type_t v157 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v172 = type metadata accessor for Logger(0LL);
  uint64_t v170 = *(uint64_t (**)(char *, uint64_t))(v172 - 8);
  uint64_t v17 = __chkstk_darwin(v172);
  uint64_t v171 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  NSString v21 = (char *)&v152 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v165 = (char *)&v152 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v163 = (char *)&v152 - v25;
  __chkstk_darwin(v24);
  Class v169 = (Class)((char *)&v152 - v26);
  uint64_t v27 = sub_6C5C(&qword_28D430);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for Apple_Parsec_Siri_V2alpha_MultiUserContext(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v152 - v36;
  id v168 = a1;
  AudioExperience.multiUserContext.getter(v35);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1LL, v30) == 1)
  {
    uint64_t v38 = sub_1F6CC((uint64_t)v29, &qword_28D430);
    uint64_t v39 = static SiriEnvironmentWrapper.retrieve()(v38);
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v41 = ((uint64_t (*)(void))SiriEnvironment.userIdentity.getter)();
      dispatch thunk of UserIdentityProvider.identifiedUser.getter();
      uint64_t v42 = swift_release(v41);
      Class v169 = (Class)IdentifiedUser.sharedUserId.getter(v42);
      unint64_t v44 = v43;
      Class isa = (void (*)(char *, void (*)(char *, char *, uint64_t)))v167[1].isa;
      isa(v14, v166);
      if (v44)
      {
        uint64_t v46 = v172;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v47 = sub_6960(v46, (uint64_t)qword_2969C8);
        uint64_t v48 = (objc_class *)*((void *)v170 + 2);
        uint64_t v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(v163, v47, v46);
        uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
        os_log_type_t v51 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v50, v51))
        {
          unint64_t v52 = v44;
          int v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)int v53 = 0;
          _os_log_impl( &dword_0,  v50,  v51,  "ConverterHelpers#convertPrivateMediaIntentData AudioExperience.multiuserContext missing. Fetching multi user info from SiriEnvironment",  v53,  2u);
          int v54 = v53;
          unint64_t v44 = v52;
          swift_slowDealloc(v54, -1LL, -1LL);
        }

        uint64_t v55 = (uint64_t (*)(char *, uint64_t))*((void *)v170 + 1);
        uint64_t v56 = v55(v163, v46);
        uint64_t v57 = SiriEnvironment.userIdentity.getter(v56);
        uint64_t v58 = v154;
        dispatch thunk of UserIdentityProvider.identifiedUser.getter();
        uint64_t v59 = swift_release(v57);
        uint64_t v60 = v164;
        IdentifiedUser.voiceConfidenceClassification.getter(v59);
        isa(v58, v166);
        ((void (*)(char *, uint64_t, uint64_t))v48)(v165, v47, v46);
        uint64_t v61 = v162;
        uint64_t v62 = v155;
        uint64_t v63 = v156;
        uint64_t v166 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
        v166(v155, v60, v156);
        uint64_t v64 = swift_bridgeObjectRetain_n(v44, 2LL);
        uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
        os_log_type_t v66 = static os_log_type_t.debug.getter();
        BOOL v67 = os_log_type_enabled(v65, v66);
        Class v167 = v48;
        uint64_t v170 = v55;
        if (v67)
        {
          uint64_t v68 = swift_slowAlloc(22LL, -1LL);
          uint64_t v163 = (char *)swift_slowAlloc(64LL, -1LL);
          v173[0] = (uint64_t)v163;
          *(_DWORD *)uint64_t v68 = 136315394;
          swift_bridgeObjectRetain(v44);
          uint64_t v176 = (void (*)(void, void, void))sub_6978((uint64_t)v169, v44, v173);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
          swift_bridgeObjectRelease_n(v44, 3LL);
          *(_WORD *)(v68 + 12) = 2080;
          uint64_t v69 = v153;
          v166(v153, v62, v63);
          uint64_t v70 = String.init<A>(describing:)(v69, v63);
          unint64_t v72 = v71;
          uint64_t v176 = (void (*)(void, void, void))sub_6978(v70, v71, v173);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
          swift_bridgeObjectRelease(v72);
          char v73 = *(void (**)(char *, uint64_t))(v162 + 8);
          v73(v62, v63);
          _os_log_impl( &dword_0,  v65,  v66,  "ConverterHelpers#convertPrivateMediaIntentData SiriEnvironment sharedUserID: %s, confidence: %s",  (uint8_t *)v68,  0x16u);
          uint64_t v74 = v163;
          swift_arrayDestroy(v163, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v74, -1LL, -1LL);
          swift_slowDealloc(v68, -1LL, -1LL);

          v170(v165, v172);
        }

        else
        {
          swift_bridgeObjectRelease_n(v44, 2LL);
          char v73 = *(void (**)(char *, uint64_t))(v61 + 8);
          v73(v62, v63);

          v55(v165, v172);
        }

        uint64_t v174 = v63;
        uint64_t v175 = &protocol witness table for IdentifiedUser.Classification;
        uint64_t v105 = (char *)sub_10974(v173);
        uint64_t v106 = v164;
        v166(v105, v164, v63);
        swift_bridgeObjectRetain(v44);
        uint64_t v107 = static INSpeakerIDConfidence.from(confidence:)(v173);
        sub_6C3C(v173);
        id v108 = objc_allocWithZone(&OBJC_CLASS___INSpeakerIDInfo);
        NSString v109 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v44);
        id v95 = [v108 initWithSharedUserID:v109 speakerIDConfidence:v107];
        swift_release(v40);

        uint64_t v96 = ((uint64_t (*)(char *, uint64_t))v73)(v106, v63);
        id v97 = v171;
        uint64_t v78 = v172;
        goto LABEL_24;
      }

      swift_release(v40);
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v78 = v172;
    uint64_t v98 = sub_6960(v172, (uint64_t)qword_2969C8);
    char v99 = v170;
    Class v167 = (Class)*((void *)v170 + 2);
    uint64_t v100 = ((uint64_t (*)(char *, uint64_t, uint64_t))v167)(v21, v98, v78);
    int v101 = (os_log_s *)Logger.logObject.getter(v100);
    os_log_type_t v102 = static os_log_type_t.error.getter();
    BOOL v103 = os_log_type_enabled(v101, v102);
    id v97 = v171;
    if (v103)
    {
      uint64_t v104 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v104 = 0;
      _os_log_impl( &dword_0,  v101,  v102,  "ConverterHelpers#convertPrivateMediaIntentData AudioExperience.multiuserContext missing and we don't have SiriEn vironment sharedUserId. There will be no speakerIDInfo for this request",  v104,  2u);
      swift_slowDealloc(v104, -1LL, -1LL);
    }

    uint64_t v170 = (uint64_t (*)(char *, uint64_t))*((void *)v99 + 1);
    uint64_t v96 = v170(v21, v78);
    Class v169 = 0LL;
    unint64_t v44 = 0LL;
    id v95 = 0LL;
  }

  else
  {
    uint64_t v75 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v37, v29, v30);
    uint64_t v76 = (objc_class *)Apple_Parsec_Siri_V2alpha_MultiUserContext.sharedUserID.getter(v75);
    unint64_t v44 = v77;
    uint64_t v165 = (char *)v15;
    uint64_t v174 = v15;
    uint64_t v175 = &protocol witness table for Apple_Parsec_Siri_V2alpha_MultiUserContext.UserIdentityClassification;
    sub_10974(v173);
    ((void (*)(void))Apple_Parsec_Siri_V2alpha_MultiUserContext.userIdentificationClassification.getter)();
    uint64_t v166 = (void (*)(char *, char *, uint64_t))static INSpeakerIDConfidence.from(confidence:)(v173);
    sub_6C3C(v173);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v78 = v172;
    uint64_t v79 = sub_6960(v172, (uint64_t)qword_2969C8);
    Class v80 = v169;
    uint64_t v81 = v170;
    Class v167 = (Class)*((void *)v170 + 2);
    ((void (*)(Class, uint64_t, uint64_t))v167)(v169, v79, v78);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v37, v30);
    uint64_t v82 = swift_bridgeObjectRetain_n(v44, 2LL);
    unint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v84 = static os_log_type_t.debug.getter();
    LODWORD(v163) = v84;
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = swift_slowAlloc(32LL, -1LL);
      uint64_t v162 = swift_slowAlloc(32LL, -1LL);
      v173[0] = v162;
      *(_DWORD *)uint64_t v85 = 136315650;
      swift_bridgeObjectRetain(v44);
      uint64_t v176 = (void (*)(void, void, void))sub_6978((uint64_t)v76, v44, v173);
      uint64_t v164 = (char *)v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
      uint64_t v86 = swift_bridgeObjectRelease_n(v164, 3LL);
      *(_WORD *)(v85 + 12) = 2048;
      uint64_t v156 = v85 + 14;
      uint64_t v87 = v157;
      uint64_t v88 = Apple_Parsec_Siri_V2alpha_MultiUserContext.userIdentificationClassification.getter(v86);
      uint64_t v89 = Apple_Parsec_Siri_V2alpha_MultiUserContext.UserIdentityClassification.rawValue.getter(v88);
      (*(void (**)(char *, char *))(v158 + 8))(v87, v165);
      Class v90 = *(void (**)(char *, uint64_t))(v31 + 8);
      v90(v34, v30);
      uint64_t v176 = (void (*)(void, void, void))v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
      *(_WORD *)(v85 + 22) = 2048;
      uint64_t v78 = v172;
      Class v91 = v166;
      uint64_t v176 = (void (*)(void, void, void))v166;
      unint64_t v44 = (unint64_t)v164;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);
      _os_log_impl( &dword_0,  v83,  (os_log_type_t)v163,  "ConverterHelpers#convertPrivateMediaIntentData AudioExperience.multiuserContext sharedUserID: %s, userIdentifica tionClassification: %ld, speakerIDConfidence: %ld",  (uint8_t *)v85,  0x20u);
      uint64_t v92 = v162;
      swift_arrayDestroy(v162, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v92, -1LL, -1LL);
      swift_slowDealloc(v85, -1LL, -1LL);

      uint64_t v170 = (uint64_t (*)(char *, uint64_t))*((void *)v170 + 1);
      v170((char *)v169, v78);
    }

    else
    {
      Class v90 = *(void (**)(char *, uint64_t))(v31 + 8);
      v90(v34, v30);

      swift_bridgeObjectRelease_n(v44, 2LL);
      uint64_t v170 = (uint64_t (*)(char *, uint64_t))*((void *)v81 + 1);
      v170((char *)v80, v78);
      Class v91 = v166;
    }

    id v93 = objc_allocWithZone(&OBJC_CLASS___INSpeakerIDInfo);
    swift_bridgeObjectRetain(v44);
    Class v169 = v76;
    NSString v94 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v44);
    id v95 = [v93 initWithSharedUserID:v94 speakerIDConfidence:v91];

    uint64_t v96 = ((uint64_t (*)(char *, uint64_t))v90)(v37, v30);
    id v97 = v171;
  }

LABEL_24:
  uint64_t v110 = AudioExperience.boltProxiedBundleID.getter(v96);
  uint64_t v112 = v111;
  if (v110 || v111 != 0xE000000000000000LL)
  {
    char v114 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, v111);
    uint64_t v115 = swift_bridgeObjectRelease(v112);
    id v113 = 0LL;
    if ((v114 & 1) == 0)
    {
      AudioExperience.boltProxiedBundleID.getter(v115);
      uint64_t v117 = v116;
      unint64_t v118 = v44;
      unint64_t v119 = v159;
      uint64_t v120 = AudioExperience.audioUnderstanding.getter();
      Apple_Parsec_Siri_V2alpha_AudioUnderstanding.appName.getter(v120);
      uint64_t v122 = v121;
      unint64_t v123 = v119;
      unint64_t v44 = v118;
      (*(void (**)(char *, uint64_t))(v160 + 8))(v123, v161);
      id v124 = objc_allocWithZone(&OBJC_CLASS___INAppIdentifier);
      NSString v125 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v117);
      NSString v126 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v122);
      id v113 = [v124 initWithBundleIdentifier:v125 bundleVersion:0 appName:v126];
    }
  }

  else
  {
    swift_bridgeObjectRelease(0xE000000000000000LL);
    id v113 = 0LL;
  }

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v127.super.super.Class isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
  v128.super.super.Class isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
  uint64_t v129 = v95;
  id v130 = v95;
  id v131 = v113;
  uint64_t v132 = v127.super.super.isa;
  uint64_t v133 = v128.super.super.isa;
  if (v44)
  {
    NSString v134 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v44);
  }

  else
  {
    NSString v134 = 0LL;
  }

  id v135 = [objc_allocWithZone(INPrivateMediaIntentData) initWithSpeakerIDInfo:v95 proxiedThirdPartyAppInfo:v113 isAppAttributionRequired:0 useDialogMemoryForAttribution:0 isAppCo rrection:0 fallbackUsername:0 wholeHouseAudioMetadata:0 nlConfidenceScore:v127.super.super.isa nlConfidenceLevel:0 asrConfidenceScore:v128.super.super.isa asrC onfidenceLevel:0 resolvedSharedUserID:v134 homeAutomationEntityProvider:0];

  Class v169 = v127.super.super.isa;
  Class v136 = v167;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v137 = sub_6960(v78, (uint64_t)qword_2969C8);
  ((void (*)(char *, uint64_t, uint64_t))v136)(v97, v137, v78);
  id v138 = v135;
  uint64_t v139 = (os_log_s *)Logger.logObject.getter(v138);
  os_log_type_t v140 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v139, v140))
  {
    id v168 = v129;
    uint64_t v141 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v142 = swift_slowAlloc(32LL, -1LL);
    v173[0] = v142;
    *(_DWORD *)uint64_t v141 = 136315138;
    uint64_t v165 = (char *)(v141 + 4);
    id v143 = v138;
    id v144 = [v143 description];
    uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)(v144);
    uint64_t v166 = (void (*)(char *, char *, uint64_t))v113;
    Class v167 = v128.super.super.isa;
    uint64_t v146 = v145;
    unint64_t v148 = v147;

    uint64_t v176 = (void (*)(void, void, void))sub_6978(v146, v148, v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v176, &v177);

    swift_bridgeObjectRelease(v148);
    _os_log_impl( &dword_0,  v139,  v140,  "ConverterHelpers#convertPrivateMediaIntentData privateMediaData: %s",  v141,  0xCu);
    swift_arrayDestroy(v142, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v142, -1LL, -1LL);
    swift_slowDealloc(v141, -1LL, -1LL);

    uint64_t v149 = v171;
    uint64_t v150 = v172;
  }

  else
  {

    uint64_t v149 = v97;
    uint64_t v150 = v78;
  }

  v170(v149, v150);
  return v138;
}

  if (qword_283888 != -1) {
LABEL_38:
  }
    swift_once(&qword_283888, sub_BFC5C);
  unint64_t v44 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v44, v6);
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  uint64_t v47 = static os_log_type_t.default.getter();
  uint64_t v58 = v46;
  uint64_t v48 = os_log_type_enabled(v46, v47);
  uint64_t v49 = v60;
  if (v48)
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl( &dword_0,  v58,  v47,  "PlayMediaRCHFlowWrapper#logCoreAnalytics setting last invocation date for podcast in DailyBriefing synced DB",  v50,  2u);
    os_log_type_t v51 = v50;
    uint64_t v49 = v60;
    swift_slowDealloc(v51, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  type metadata accessor for DBKnowledgeStore(0LL);
  unint64_t v52 = static DBKnowledgeStore.instance.getter();
  int v53 = Date.init()(v52);
  int v54 = Date.timeIntervalSince1970.getter(v53);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  dispatch thunk of DBKnowledgeStore.setLastInvocationFor(podcast:at:)(v59, v49, v54);
  swift_bridgeObjectRelease(v49);
  swift_release(v19);

  swift_release(v52);
}

        sub_4AE18((uint64_t)v71, (uint64_t)v70);
        if (!v70[3])
        {
          NSString v21 = v70;
          goto LABEL_28;
        }

        uint64_t v37 = type metadata accessor for UsoTask_request_common_MediaItem(0LL);
        swift_release(v69);
        return 1LL;
      }
    }

    else
    {
      sub_1F6CC((uint64_t)v71, &qword_284028);
    }

    sub_4AE18((uint64_t)v73, (uint64_t)v71);
    goto LABEL_24;
  }

  uint64_t v23 = type metadata accessor for UsoTask_summarise_common_MediaItem(0LL);
  uint64_t v24 = v70[0];
  uint64_t v25 = swift_retain(v70[0]);
  dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v71, v25);
  swift_release(v24);
  uint64_t v26 = v71[0];
  if (v71[0])
  {
    uint64_t v27 = swift_retain(v71[0]);
    uint64_t v28 = CodeGenBase.entity.getter(v27);
    uint64_t v29 = swift_release(v26);
    uint64_t v30 = UsoEntity.attributes.getter(v29);
    swift_release(v28);
    if (*(void *)(v30 + 16))
    {
      sub_9A744(0x73636972796CLL, 0xE600000000000000LL);
      uint64_t v32 = v31;
      swift_bridgeObjectRelease(v30);
      swift_release(v26);
      if ((v32 & 1) != 0) {
        goto LABEL_34;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v30);
      swift_release(v26);
    }
  }

  uint64_t v39 = swift_retain(v24);
  dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v71, v39);
  uint64_t v40 = swift_release(v24);
  uint64_t v41 = v71[0];
  if (v71[0])
  {
    uint64_t v42 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v40);
    swift_release(v41);
    if (v42)
    {
      swift_release(v42);
LABEL_34:
      sub_1F6CC((uint64_t)v73, &qword_284028);
      swift_release(v24);
      return 0LL;
    }
  }

  unint64_t v43 = sub_6C5C(&qword_2848F0);
  unint64_t v44 = *(void *)(v5 + 72);
  uint64_t v45 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v46 = (v45 + 32) & ~v45;
  uint64_t v47 = swift_allocObject(v43, v46 + 4 * v44, v45 | 7);
  *(_OWORD *)(v47 + 16) = xmmword_214FF0;
  uint64_t v68 = v47;
  uint64_t v48 = v47 + v46;
  uint64_t v49 = *(void (**)(void))(v5 + 104);
  ((void (*)(uint64_t, void, uint64_t))v49)( v48,  enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_TvShow(_:),  v4);
  BOOL v67 = v48 + v44;
  v49();
  os_log_type_t v66 = v48 + 2 * v44;
  v49();
  uint64_t v50 = v48 + 3 * v44;
  ((void (*)(uint64_t, void, uint64_t))v49)( v50,  enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Episode(_:),  v4);
  os_log_type_t v51 = swift_retain(v24);
  dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v71, v51);
  unint64_t v52 = swift_release(v24);
  int v53 = v71[0];
  if (!v71[0]
    || (int v54 = dispatch thunk of UsoEntity_common_MediaItem.mediaItemType.getter(v52), v55 = swift_release(v53), !v54))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1LL, 1LL, v4);
    goto LABEL_44;
  }

  dispatch thunk of UsoEntity_common_MediaItemType.definedValue.getter(v55);
  swift_release(v54);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4) == 1)
  {
LABEL_44:
    swift_release(v24);
    swift_bridgeObjectRelease(v68);
    sub_1F6CC((uint64_t)v73, &qword_284028);
    uint64_t v35 = &qword_2848E8;
    uint64_t v36 = v3;
    goto LABEL_45;
  }

  uint64_t v65 = v50;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v56(v8, v48, v4);
  uint64_t v57 = sub_10430( &qword_2848F8,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_MediaItemType.DefinedValues);
  uint64_t v58 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v10, v4, v57);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v60 = v68;
  swift_bridgeObjectRetain(v68);
  v59(v8, v4);
  if ((v58 & 1) != 0
    || (v56(v8, v67, v4),
        uint64_t v61 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v10, v4, v57),
        v59(v8, v4),
        (v61 & 1) != 0)
    || (v56(v8, v66, v4),
        uint64_t v62 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v10, v4, v57),
        v59(v8, v4),
        (v62 & 1) != 0))
  {
    swift_release(v24);
    swift_bridgeObjectRelease(v60);
LABEL_42:
    v59(v10, v4);
    sub_1F6CC((uint64_t)v73, &qword_284028);
    swift_bridgeObjectRelease(v60);
    return 0LL;
  }

  v56(v8, v65, v4);
  uint64_t v63 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v10, v4, v57);
  v59(v8, v4);
  swift_release(v24);
  swift_bridgeObjectRelease(v60);
  if ((v63 & 1) != 0) {
    goto LABEL_42;
  }
  v59(v10, v4);
  sub_1F6CC((uint64_t)v73, &qword_284028);
  swift_bridgeObjectRelease(v60);
  return 1LL;
}

  swift_bridgeObjectRelease(a1);
  return 0LL;
}

  uint64_t v19 = *(void *)(v15 + 16);
  if ((*(void *)(v15 + 24) >> 1) - v19 < v10)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  if ((v10 & 0x8000000000000000LL) == 0)
  {
    uint64_t v20 = v15 + 8 * v19 + 32;
    NSString v21 = v7 + 8 * v6;
    if (v21 < v20 + 8 * v10 && v20 < v21 + 8 * v10)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
      goto LABEL_40;
    }

    sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
    swift_arrayInitWithCopy(v20);
    if (!v10)
    {
LABEL_31:
      uint64_t v25 = swift_unknownObjectRelease(v4);
      return specialized Array._endMutation()(v25);
    }

    uint64_t v22 = *(void *)((char *)&dword_10 + (*v5 & 0xFFFFFFFFFFFFFF8LL));
    uint64_t v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 + v10;
    if (!v23)
    {
      *(void *)((char *)&dword_10 + (*v5 & 0xFFFFFFFFFFFFFF8LL)) = v24;
      goto LABEL_31;
    }

    goto LABEL_37;
  }

    v39(v75, v76);
    return 0LL;
  }

  unint64_t v44 = (os_log_s *)v43;
  uint64_t v45 = type metadata accessor for AudioUsoIntent(0LL);
  uint64_t v46 = v119;
  Experience.userDialogAct.getter(v45);
  uint64_t v47 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 0LL, 1LL, v47);
  uint64_t v48 = AudioUsoIntent.__allocating_init(userDialogAct:)(v46);
  if (!v48)
  {
LABEL_19:
    uint64_t v78 = v116;
    uint64_t v79 = v121(v116, v120, v40);
    Class v80 = (os_log_s *)Logger.logObject.getter(v79);
    uint64_t v81 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v82 = 0;
      _os_log_impl(&dword_0, v80, v81, "OpenMediaItemFlow#on invalid AudioIntent for open use case", v82, 2u);
      swift_slowDealloc(v82, -1LL, -1LL);
      unint64_t v83 = (os_log_s *)v42;
      uint64_t v42 = (char *)v44;
    }

    else
    {
      unint64_t v83 = v80;
      Class v80 = v44;
    }

    uint64_t v75 = v78;
    uint64_t v76 = v40;
    goto LABEL_24;
  }

  uint64_t v49 = v48;
  uint64_t v104 = v44;
  uint64_t v117 = v42;
  unint64_t v119 = (char *)v39;
  uint64_t v50 = (uint64_t)v112;
  dispatch thunk of AudioUsoIntent.verb.getter(v48);
  os_log_type_t v51 = v113;
  unint64_t v52 = v118;
  int v53 = v115;
  (*(void (**)(uint64_t, void, uint64_t))(v113 + 104))(v118, enum case for CommonAudio.Verb.open(_:), v115);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0LL, 1LL, v53);
  int v54 = v114;
  uint64_t v55 = v114 + *(int *)(v111 + 48);
  sub_FF10(v50, v114, &qword_284DB0);
  sub_FF10(v52, v55, &qword_284DB0);
  uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v56(v54, 1LL, v53) != 1)
  {
    unint64_t v77 = v109;
    sub_FF10(v54, v109, &qword_284DB0);
    if (v56(v55, 1LL, v53) != 1)
    {
      uint64_t v86 = v50;
      uint64_t v87 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v105, v55, v53);
      uint64_t v88 = sub_11E578();
      uint64_t v89 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v87, v53, v88);
      swift_release(v49);
      Class v90 = *(void (**)(char *, uint64_t))(v51 + 8);
      v90(v87, v53);
      sub_1F6CC(v118, &qword_284DB0);
      sub_1F6CC(v86, &qword_284DB0);
      v90((char *)v77, v53);
      sub_1F6CC(v54, &qword_284DB0);
      uint64_t v39 = (uint64_t (*)(char *, uint64_t))v119;
      uint64_t v42 = v117;
      unint64_t v44 = v104;
      if ((v89 & 1) != 0) {
        goto LABEL_28;
      }
      goto LABEL_19;
    }

    swift_release(v49);
    sub_1F6CC(v118, &qword_284DB0);
    sub_1F6CC(v50, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v77, v53);
    uint64_t v39 = (uint64_t (*)(char *, uint64_t))v119;
    goto LABEL_18;
  }

  swift_release(v49);
  sub_1F6CC(v52, &qword_284DB0);
  sub_1F6CC(v50, &qword_284DB0);
  uint64_t v57 = v56(v55, 1LL, v53);
  uint64_t v39 = (uint64_t (*)(char *, uint64_t))v119;
  if (v57 != 1)
  {
LABEL_18:
    sub_1F6CC(v54, &qword_284DA8);
    uint64_t v42 = v117;
    unint64_t v44 = v104;
    goto LABEL_19;
  }

  sub_1F6CC(v54, &qword_284DB0);
  uint64_t v42 = v117;
  unint64_t v44 = v104;
LABEL_28:

  Class v91 = *(void **)(v110 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_pommesResponse);
  *(void *)(v110 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_pommesResponse) = v42;

  uint64_t v92 = v106;
  id v93 = v121(v106, v120, v40);
  NSString v94 = (os_log_s *)Logger.logObject.getter(v93);
  id v95 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v96 = 0;
    _os_log_impl(&dword_0, v94, v95, "OpenMediaItemFlow#on accepting input", v96, 2u);
    swift_slowDealloc(v96, -1LL, -1LL);
  }

  v39(v92, v40);
  id v97 = type metadata accessor for Input(0LL);
  uint64_t v98 = *(void *)(v97 - 8);
  char v99 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v107, v122, v97);
  uint64_t v100 = *(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56);
  os_log_type_t v84 = 1LL;
  v100(v99, 0LL, 1LL, v97);
  int v101 = (uint64_t)v99;
  os_log_type_t v102 = v108;
  sub_88CFC(v101, v108);
  BOOL v103 = v110 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_input;
  swift_beginAccess(v110 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_input, v123, 33LL, 0LL);
  sub_1B3B0(v102, v103);
  swift_endAccess(v123);
  return v84;
}

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  BOOL v103 = sub_6960(v59, (uint64_t)qword_2969C8);
  uint64_t v104 = v251;
  uint64_t v105 = v251[2];
  uint64_t v106 = v241;
  uint64_t v242 = v103;
  uint64_t v243 = v105;
  ((void (*)(dispatch_semaphore_s *))v105)(v241);
  id v108 = v261;
  uint64_t v107 = v262;
  swift_bridgeObjectRetain_n(a1, 2LL);
  NSString v109 = swift_bridgeObjectRetain_n(v107, 2LL);
  uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
  uint64_t v111 = static os_log_type_t.default.getter(v110);
  uint64_t v112 = os_log_type_enabled(v110, v111);
  uint64_t v85 = (uint64_t)v252;
  if (v112)
  {
    id v113 = swift_slowAlloc(22LL, -1LL);
    char v114 = swift_slowAlloc(64LL, -1LL);
    *(void *)&v259[0] = v114;
    *(_DWORD *)id v113 = 136315394;
    swift_bridgeObjectRetain(v107);
    uint64_t v257 = sub_6978(v108, v107, (uint64_t *)v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
    swift_bridgeObjectRelease_n(v107, 3LL);
    *(_WORD *)(v113 + 12) = 2080;
    swift_bridgeObjectRetain(a1);
    uint64_t v115 = v59;
    uint64_t v116 = v250;
    uint64_t v257 = sub_6978(v250, (unint64_t)a1, (uint64_t *)v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
    swift_bridgeObjectRelease_n(a1, 3LL);
    _os_log_impl( &dword_0,  v110,  v111,  "DisplayApp#init found default displayName:%s for identifier:%s",  (uint8_t *)v113,  0x16u);
    swift_arrayDestroy(v114, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v114, -1LL, -1LL);
    swift_slowDealloc(v113, -1LL, -1LL);

    uint64_t v117 = v115;
    uint64_t v251 = (void (**)(char *, uint64_t, uint64_t))v251[1];
    ((void (*)(dispatch_semaphore_s *, uint64_t))v251)(v241, v115);
    unint64_t v83 = v253;
  }

  else
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease_n(v107, 2LL);
    uint64_t v117 = v59;
    uint64_t v251 = (void (**)(char *, uint64_t, uint64_t))v104[1];
    ((void (*)(dispatch_semaphore_s *, uint64_t))v251)(v106, v59);
    unint64_t v83 = v253;
    uint64_t v116 = v250;
  }

  if ((static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v116, a1) & 1) != 0)
  {
    unint64_t v118 = v239;
    unint64_t v119 = v117;
    v243(v239, v242, v117);
    uint64_t v120 = swift_bridgeObjectRetain_n(a1, 2LL);
    uint64_t v121 = (os_log_s *)Logger.logObject.getter(v120);
    uint64_t v122 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v121, v122))
    {
      unint64_t v123 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v124 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v259[0] = v124;
      *(_DWORD *)unint64_t v123 = 136315138;
      swift_bridgeObjectRetain(a1);
      uint64_t v257 = sub_6978(v250, (unint64_t)a1, (uint64_t *)v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
      swift_bridgeObjectRelease_n(a1, 3LL);
      _os_log_impl(&dword_0, v121, v122, "DisplayApp#init checking for override name for identifier:%s...", v123, 0xCu);
      swift_arrayDestroy(v124, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1LL, -1LL);
      swift_slowDealloc(v123, -1LL, -1LL);

      NSString v125 = v239;
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
      NSString v125 = v118;
    }

    ((void (*)(char *, uint64_t))v251)(v125, v119);
    os_log_type_t v140 = dispatch_semaphore_create(0LL);
    uint64_t v141 = swift_allocObject(&unk_270E18, 32LL, 7LL);
    *(void *)(v141 + 16) = 0LL;
    uint64_t v142 = v141 + 16;
    *(void *)(v141 + 24) = 0LL;
    uint64_t v260 = 0LL;
    memset(v259, 0, sizeof(v259));
    id v144 = v261;
    id v143 = v262;
    uint64_t v145 = (void *)swift_allocObject(&unk_270E40, 64LL, 7LL);
    v145[2] = v140;
    v145[3] = v144;
    uint64_t v146 = v250;
    v145[4] = v143;
    v145[5] = v146;
    v145[6] = a1;
    v145[7] = v141;
    swift_bridgeObjectRetain(a1);
    unint64_t v147 = v140;
    swift_retain(v141);
    swift_bridgeObjectRetain(v143);
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v146,  a1,  v259,  sub_9D4E8,  v145,  v248,  v230);
    swift_release(v145);
    unint64_t v148 = sub_14B30C((uint64_t)v259);
    uint64_t v149 = v231;
    static DispatchTime.now()(v148);
    uint64_t v150 = v234;
    *uint64_t v234 = 1LL;
    uint64_t v151 = v235;
    uint64_t v152 = v237;
    (*(void (**)(void *, void, uint64_t))(v235 + 104))( v150,  enum case for DispatchTimeInterval.seconds(_:),  v237);
    uint64_t v153 = v232;
    + infix(_:_:)(v149, v150);
    (*(void (**)(void *, uint64_t))(v151 + 8))(v150, v152);
    uint64_t v154 = *(void (**)(char *, uint64_t))(v233 + 8);
    uint64_t v155 = v236;
    v154(v149, v236);
    uint64_t v241 = v147;
    OS_dispatch_semaphore.wait(timeout:)(v153);
    v154(v153, v155);
    uint64_t v156 = v240;
    os_log_type_t v157 = v249;
    v243(v240, v242, v249);
    swift_bridgeObjectRetain_n(a1, 2LL);
    uint64_t v158 = swift_retain_n(v141, 2LL);
    uint64_t v159 = (os_log_s *)Logger.logObject.getter(v158);
    uint64_t v160 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v159, v160))
    {
      uint64_t v161 = swift_slowAlloc(22LL, -1LL);
      uint64_t v162 = swift_slowAlloc(64LL, -1LL);
      uint64_t v257 = v162;
      *(_DWORD *)uint64_t v161 = 136315394;
      swift_beginAccess(v142, v254, 0LL, 0LL);
      uint64_t v163 = *(void *)(v141 + 24);
      *(void *)&v259[0] = *(void *)(v141 + 16);
      *((void *)&v259[0] + 1) = v163;
      swift_bridgeObjectRetain(v163);
      uint64_t v164 = sub_6C5C(&qword_284600);
      uint64_t v165 = String.init<A>(describing:)(v259, v164);
      Class v167 = v166;
      *(void *)&v259[0] = sub_6978(v165, v166, &v257);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v259, (char *)v259 + 8);
      swift_release_n(v141, 2LL);
      swift_bridgeObjectRelease(v167);
      *(_WORD *)(v161 + 12) = 2080;
      swift_bridgeObjectRetain(a1);
      *(void *)&v259[0] = sub_6978(v250, (unint64_t)a1, &v257);
      unint64_t v83 = v253;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v259, (char *)v259 + 8);
      swift_bridgeObjectRelease_n(a1, 3LL);
      _os_log_impl( &dword_0,  v159,  v160,  "DisplayApp#init override name:%s for identifier:%s...",  (uint8_t *)v161,  0x16u);
      swift_arrayDestroy(v162, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v162, -1LL, -1LL);
      swift_slowDealloc(v161, -1LL, -1LL);

      id v168 = v240;
      Class v169 = v249;
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
      swift_release_n(v141, 2LL);
      id v168 = v156;
      Class v169 = v157;
    }

    ((void (*)(char *, uint64_t))v251)(v168, v169);
    uint64_t v85 = (uint64_t)v252;
    swift_beginAccess(v142, v259, 0LL, 0LL);
    uint64_t v81 = *(void *)(v141 + 16);
    Class v80 = *(void *)(v141 + 24);
    uint64_t v170 = v238;
    if (v80)
    {
      swift_beginAccess(&v261, &v257, 0LL, 0LL);
      uint64_t v171 = v261;
      uint64_t v82 = v262;
      v243(v170, v242, v249);
      swift_bridgeObjectRetain_n(v80, 3LL);
      swift_bridgeObjectRetain_n(a1, 2LL);
      uint64_t v172 = swift_bridgeObjectRetain_n(v82, 2LL);
      os_log_type_t v173 = (os_log_s *)Logger.logObject.getter(v172);
      uint64_t v174 = static os_log_type_t.debug.getter();
      uint64_t v175 = v174;
      if (os_log_type_enabled(v173, v174))
      {
        uint64_t v176 = swift_slowAlloc(32LL, -1LL);
        LODWORD(v243) = v175;
        uint64_t v177 = v171;
        uint64_t v178 = v176;
        uint64_t v242 = swift_slowAlloc(96LL, -1LL);
        uint64_t v256 = v242;
        *(_DWORD *)uint64_t v178 = 136315650;
        swift_bridgeObjectRetain(v80);
        id v255 = sub_6978(v81, v80, &v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v255, &v256);
        swift_bridgeObjectRelease_n(v80, 3LL);
        *(_WORD *)(v178 + 12) = 2080;
        swift_bridgeObjectRetain(v82);
        id v255 = sub_6978(v177, v82, &v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v255, &v256);
        swift_bridgeObjectRelease_n(v82, 3LL);
        *(_WORD *)(v178 + 22) = 2080;
        swift_bridgeObjectRetain(a1);
        id v255 = sub_6978(v250, (unint64_t)a1, &v256);
        unint64_t v83 = v253;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v255, &v256);
        swift_bridgeObjectRelease_n(a1, 3LL);
        _os_log_impl( &dword_0,  v173,  (os_log_type_t)v243,  "DisplayApp#init found using primary:%s, alternate:%s for app:%s",  (uint8_t *)v178,  0x20u);
        unint64_t v179 = v242;
        swift_arrayDestroy(v242, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v179, -1LL, -1LL);
        swift_slowDealloc(v178, -1LL, -1LL);

        ((void (*)(char *, uint64_t))v251)(v238, v249);
        swift_release(v141);
        uint64_t v79 = v81;
        uint64_t v81 = v177;
      }

      else
      {

        swift_bridgeObjectRelease_n(a1, 2LL);
        swift_bridgeObjectRelease_n(v82, 2LL);
        swift_bridgeObjectRelease_n(v80, 2LL);

        ((void (*)(char *, uint64_t))v251)(v170, v249);
        swift_release(v141);
        uint64_t v79 = v81;
        uint64_t v81 = v171;
      }

      uint64_t v85 = (uint64_t)v252;
    }

    else
    {

      swift_beginAccess(&v261, &v257, 0LL, 0LL);
      uint64_t v79 = v261;
      Class v80 = v262;
      swift_release(v141);
      uint64_t v82 = 0LL;
    }
  }

  else
  {
    swift_beginAccess(&v261, v259, 0LL, 0LL);
    uint64_t v81 = 0LL;
    uint64_t v82 = 0LL;
    uint64_t v79 = v261;
    Class v80 = v262;
  }

  swift_bridgeObjectRetain_n(v82, 2LL);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(a1);
  uint64_t v200 = swift_bridgeObjectRelease(v82);
  (*(void (**)(char *, uint64_t, __n128))(v244 + 8))(v247, v248, v200);
  swift_bridgeObjectRelease(v85);

  swift_release(v83);
  swift_bridgeObjectRelease(v82);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(a1);
  swift_release(v245);
  uint64_t v86 = v246;
  uint64_t v78 = v250;
  os_log_type_t v84 = v224;
LABEL_58:
  *uint64_t v86 = v78;
  v86[1] = (uint64_t)a1;
  v86[2] = v79;
  v86[3] = v80;
  v86[4] = v81;
  v86[5] = v82;
  v86[6] = (uint64_t)v83;
  v86[7] = v84;
  v86[8] = v85;
}

  uint64_t v40 = String.lowercased()();
  uint64_t v41 = String.lowercased()();
  uint64_t v39 = v41._object;
  if (v40._object)
  {
    if (v40._countAndFlagsBits == v41._countAndFlagsBits && v40._object == v41._object)
    {
      swift_bridgeObjectRelease_n(v40._object, 2LL);
      uint64_t v42 = 1;
    }

    else
    {
      uint64_t v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v40._countAndFlagsBits, v40._object);
      swift_bridgeObjectRelease(v40._object);
      swift_bridgeObjectRelease(v41._object);
    }

    *(_BYTE *)(v30 + 192) = v42 & 1;
    *(void *)(v30 + 216) = &type metadata for Bool;
    strcpy((char *)(v30 + 224), "isStorySleep");
    *(_BYTE *)(v30 + 237) = 0;
    *(_WORD *)(v30 + 238) = -5120;
    goto LABEL_32;
  }

        Class v90 = 0LL;
        goto LABEL_25;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v93 & 0xFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_13;
    }

    swift_bridgeObjectRelease(v93);
    goto LABEL_24;
  }

  *(void *)&uint64_t v398 = v79;
  uint64_t v87 = String.init<A>(describing:)(&v398, v74);
  uint64_t v89 = v88;
  *(void *)&uint64_t v398 = sub_6978(v87, v88, (uint64_t *)&v401);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v398, (char *)&v398 + 8);
  uint64_t v64 = (id)v390;

  swift_bridgeObjectRelease(v89);
  _os_log_impl( &dword_0,  (os_log_t)v65,  (os_log_type_t)v66,  "PlayMediaDialogProvider: makePlayDialog with intent internal signals: %s and first media item signals: %s",  (uint8_t *)v67,  0x16u);
  Class v90 = v357;
  swift_arrayDestroy(v357, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v90, -1LL, -1LL);
  swift_slowDealloc(v67, -1LL, -1LL);

  unint64_t v71 = (uint64_t (*)(char *, uint64_t))v19[1].isa;
  uint64_t v18 = v382;
  unint64_t v72 = v71(v59, v382);
  uint64_t v60 = v373;
  char v73 = v392;
  Class isa = v379;
LABEL_25:
  App.appIdentifier.getter(v72);
  if (!v91)
  {
    uint64_t v100 = v381;
    int v101 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v381, v391, v18);
    os_log_type_t v102 = (os_log_s *)Logger.logObject.getter(v101);
    BOOL v103 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v104 = 0;
      _os_log_impl(&dword_0, v102, v103, "Missing app bundle identifier", v104, 2u);
      swift_slowDealloc(v104, -1LL, -1LL);
    }

    v71(v100, v18);
    uint64_t v105 = sub_6C9C();
    uint64_t v106 = swift_allocError(&type metadata for String, v105, 0LL, 0LL);
    *uint64_t v107 = 0xD00000000000001DLL;
    v107[1] = 0x8000000000220870LL;
    id v108 = v385;
    NSString v109 = (uint64_t)v386;
    *uint64_t v386 = v106;
    swift_storeEnumTagMultiPayload(v109, v108, 1LL);
    sub_1FA7D0(v109, v387, (uint64_t)v388, v389);
    uint64_t v110 = (uint64_t *)&unk_286BB0;
    uint64_t v111 = v109;
    goto LABEL_37;
  }

  if ((v383 & 1) == 0)
  {
    swift_bridgeObjectRelease(v91);
    uint64_t v112 = v380;
    id v113 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v380, v391, v18);
    char v114 = (os_log_s *)Logger.logObject.getter(v113);
    uint64_t v115 = static os_log_type_t.info.getter(v114);
    if (os_log_type_enabled(v114, v115))
    {
      uint64_t v116 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v116 = 0;
      _os_log_impl(&dword_0, v114, v115, "PlayMediaDialogProvider suppressing dialog for non-interstitial", v116, 2u);
      swift_slowDealloc(v116, -1LL, -1LL);
    }

    v71(v112, v18);
    uint64_t v117 = *(int *)(sub_6C5C(&qword_289340) + 48);
    unint64_t v118 = (uint64_t)v386;
    *(void *)(v118 + v117) = sub_155584();
    swift_storeEnumTagMultiPayload(v118, v385, 0LL);
    sub_1FA7D0(v118, v387, (uint64_t)v388, v389);
    uint64_t v110 = (uint64_t *)&unk_286BB0;
    uint64_t v111 = v118;
    goto LABEL_37;
  }

  uint64_t v389 = v91;
  uint64_t v92 = v71;
  unint64_t v382 = v18;
  *(void *)&v401 = v64;
  uint64_t v386 = (void *)sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v387 = (uint64_t (*)(uint64_t))MediaIntentCommons.getMediaType()( v386,  &protocol witness table for INPlayMediaIntent);
  id v93 = sub_6C5C(&qword_28B5F0);
  inited = swift_initStackObject(v93, v404);
  *(_OWORD *)(inited + 16) = xmmword_214510;
  sub_157C4(v384 + 168, (uint64_t)&v401);
  *(void *)(inited + 32) = 4LL;
  sub_FF54(&v401, inited + 40);
  swift_bridgeObjectRetain(inited);
  sub_2FD10(inited + 32, (uint64_t)&v396);
  id v95 = *sub_6EA8(v397, v397[3]);
  swift_beginAccess(v95 + 16, &v395, 0LL, 0LL);
  uint64_t v96 = *(void *)(v95 + 16);
  if (*(void *)(v96 + 16))
  {
    swift_bridgeObjectRetain(v96);
    id v97 = sub_9A744(0xD00000000000001ALL, 0x800000000021D140LL);
    if ((v98 & 1) != 0)
    {
      char v99 = *(void *)(*(void *)(v96 + 56) + 8 * v97);
      swift_bridgeObjectRelease(v96);
      if (v99 < v396) {
        goto LABEL_44;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v96);
      if (v396 >= 1) {
        goto LABEL_44;
      }
    }
  }

  else if (v396 > 0)
  {
    goto LABEL_44;
  }

  uint64_t v390 = (unint64_t)v64;
  uint64_t v388 = v92;
  unint64_t v119 = v378;
  uint64_t v120 = v382;
  uint64_t v121 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v378, v391, v382);
  uint64_t v122 = (os_log_s *)Logger.logObject.getter(v121);
  unint64_t v123 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v122, v123))
  {
    id v124 = swift_slowAlloc(12LL, -1LL);
    uint64_t v379 = isa;
    NSString v125 = v124;
    NSString v126 = swift_slowAlloc(32LL, -1LL);
    uint64_t v393 = v126;
    *(_DWORD *)NSString v125 = 136315138;
    *(void *)(v125 + 4) = sub_6978(0xD00000000000001ALL, 0x800000000021D140LL, &v393);
    _os_log_impl( &dword_0,  v122,  v123,  "DialogMemoryUseCase#%s#meetsCondition dialog occurence exceeded the dialog memory limit",  (uint8_t *)v125,  0xCu);
    swift_arrayDestroy(v126, 1LL, (char *)&type metadata for Any + 8);
    NSNumber v127 = v126;
    Class isa = v379;
    NSNumber v128 = v392;
    swift_slowDealloc(v127, -1LL, -1LL);
    uint64_t v129 = v125;
    char v73 = v128;
    swift_slowDealloc(v129, -1LL, -1LL);
  }

  id v130 = v119;
  uint64_t v92 = v388;
  v388(v130, v120);
  uint64_t v64 = (id)v390;
LABEL_44:
  sub_2FD94((uint64_t)&v396);
  swift_bridgeObjectRelease(inited);
  uint64_t v399 = 0u;
  uint64_t v400 = 0u;
  uint64_t v398 = 0u;
  swift_bridgeObjectRelease(inited);
  if ((void)v400)
  {
    swift_bridgeObjectRelease(v389);
    v401 = v398;
    uint64_t v402 = v399;
    uint64_t v403 = v400;
    sub_15DF60(v73, v64, *(void **)(v384 + 120), (uint64_t)sub_16B694, (uint64_t)v60);
    sub_2FD94((uint64_t)&v401);
    goto LABEL_46;
  }

  sub_1F6CC((uint64_t)&v398, &qword_28B5F8);
  if ((sub_18048C(v73) & 1) != 0)
  {
    uint64_t v388 = v92;
    swift_bridgeObjectRelease(v389);
    uint64_t v133 = [v64 privatePlayMediaIntentData];
    NSString v134 = v133;
    id v135 = v382;
    if (v133)
    {
      Class v136 = [v133 pegasusMetaData];

      uint64_t v137 = v73;
      if (v136)
      {
        NSString v134 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v136);
        uint64_t v139 = v138;

LABEL_70:
        uint64_t v161 = v377;
        sub_1C75F0((uint64_t)v134, v139, v377);
        sub_16B6A0((uint64_t)v134, v139);
        uint64_t v162 = v375;
        sub_FF10(v161, v375, &qword_28B5E8);
        uint64_t v163 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
        uint64_t v164 = *(void *)(v163 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v162, 1LL, v163) == 1)
        {
          sub_1F6CC(v162, &qword_28B5E8);
          uint64_t v389 = 0LL;
          uint64_t v165 = 0LL;
        }

        else
        {
          uint64_t v389 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.nlsContainerID.getter();
          uint64_t v165 = v166;
          (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v162, v163);
        }

        Class v167 = v137;
        id v168 = v376;
        ((void (*)(char *, uint64_t, uint64_t))isa)(v376, v391, v135);
        Class v169 = swift_bridgeObjectRetain(v165);
        uint64_t v170 = (os_log_s *)Logger.logObject.getter(v169);
        uint64_t v171 = static os_log_type_t.info.getter(v170);
        if (os_log_type_enabled(v170, v171))
        {
          uint64_t v390 = (unint64_t)v64;
          uint64_t v172 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          os_log_type_t v173 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v172 = 138412290;
          if (v165)
          {
            uint64_t v174 = sub_6C9C();
            uint64_t v175 = v60;
            uint64_t v176 = swift_allocError(&type metadata for String, v174, 0LL, 0LL);
            *uint64_t v177 = v389;
            v177[1] = v165;
            swift_bridgeObjectRetain(v165);
            uint64_t v178 = v176;
            uint64_t v60 = v175;
            unint64_t v179 = _swift_stdlib_bridgeErrorToNSError(v178);
            *(void *)&v401 = v179;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v401, (char *)&v401 + 8);
          }

          else
          {
            *(void *)&v401 = 0LL;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v401, (char *)&v401 + 8);
            unint64_t v179 = 0LL;
          }

          *os_log_type_t v173 = v179;
          swift_bridgeObjectRelease_n(v165, 2LL);
          _os_log_impl(&dword_0, v170, v171, "PlayMediaDialogProvider going to makeNlsContainer for %@", v172, 0xCu);
          unint64_t v180 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v173, 1LL, v180);
          swift_slowDealloc(v173, -1LL, -1LL);
          swift_slowDealloc(v172, -1LL, -1LL);

          id v135 = v382;
          Class v167 = v137;
          uint64_t v64 = (id)v390;
          id v168 = v376;
        }

        else
        {

          swift_bridgeObjectRelease_n(v165, 2LL);
        }

        v388(v168, v135);
        sub_15E198(v167, v64, (uint64_t)sub_16B694, (uint64_t)v60);
        uint64_t v110 = &qword_28B5E8;
        uint64_t v111 = v377;
LABEL_37:
        sub_1F6CC(v111, v110);
LABEL_46:
        id v131 = v60;
        return swift_release(v131);
      }

      NSString v134 = 0LL;
    }

    else
    {
      uint64_t v137 = v73;
    }

    uint64_t v139 = 0xF000000000000000LL;
    goto LABEL_70;
  }

  sub_25864();
  os_log_type_t v140 = v382;
  if ((v141 & 1) != 0)
  {
    swift_bridgeObjectRelease(v389);
    uint64_t v142 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v374, v391, v140);
    id v143 = (os_log_s *)Logger.logObject.getter(v142);
    id v144 = static os_log_type_t.info.getter(v143);
    if (os_log_type_enabled(v143, v144))
    {
      uint64_t v145 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v145 = 0;
      _os_log_impl( &dword_0,  v143,  v144,  "PlayMediaDialogProvider going to isPodcastPromotion for storytelling",  v145,  2u);
      swift_slowDealloc(v145, -1LL, -1LL);
    }

    v92(v374, v140);
    sub_15E560(v73, v64, (uint64_t)sub_16B694, (uint64_t)v60);
    goto LABEL_46;
  }

  uint64_t v388 = v92;
  uint64_t v373 = v60;
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  uint64_t v146 = (void *)INPlayMediaIntent.privateMediaIntentData.getter();
  unint64_t v147 = (Class)[v146 isAppCorrection];

  if (!v147) {
    unint64_t v147 = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
  }
  uint64_t v19 = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
  unint64_t v148 = static NSObject.== infix(_:_:)(v147, v19);

  if ((v148 & 1) == 0)
  {
    swift_bridgeObjectRelease(v389);
    uint64_t v156 = v372;
    os_log_type_t v157 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v372, v391, v140);
    uint64_t v158 = (os_log_s *)Logger.logObject.getter(v157);
    uint64_t v159 = static os_log_type_t.info.getter(v158);
    if (os_log_type_enabled(v158, v159))
    {
      uint64_t v160 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v160 = 0;
      _os_log_impl( &dword_0,  v158,  v159,  "PlayMediaDialogProvider going to makePlayWithAppCorrection for app correction",  v160,  2u);
      swift_slowDealloc(v160, -1LL, -1LL);
    }

    v388(v156, v140);
    uint64_t v155 = (uint64_t)v373;
    sub_163208(v392, v64, (uint64_t)sub_16B694, (uint64_t)v373);
    goto LABEL_67;
  }

  sub_2FE18();
  if ((v149 & 1) != 0)
  {
    swift_bridgeObjectRelease(v389);
    uint64_t v150 = v371;
    uint64_t v151 = ((uint64_t (*)(char *, uint64_t, uint64_t))isa)(v371, v391, v140);
    uint64_t v152 = (os_log_s *)Logger.logObject.getter(v151);
    uint64_t v153 = static os_log_type_t.info.getter(v152);
    if (os_log_type_enabled(v152, v153))
    {
      uint64_t v154 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v154 = 0;
      _os_log_impl( &dword_0,  v152,  v153,  "PlayMediaDialogProvider going to makeWholeLibrary when playback item identifier is to play whole library",  v154,  2u);
      swift_slowDealloc(v154, -1LL, -1LL);
    }

    v388(v150, v140);
    uint64_t v155 = (uint64_t)v373;
    sub_15FBCC(v392, v64, (uint64_t)sub_16B694, (uint64_t)v373);
LABEL_67:
    id v131 = (void *)v155;
    return swift_release(v131);
  }

  sub_30240();
  uint64_t v379 = isa;
  if (v182)
  {
    uint64_t v183 = v181;
    BOOL v67 = v182;
    *(void *)&v401 = v181;
    *((void *)&v401 + 1) = v182;
    *(void *)&uint64_t v398 = 0x7C295C3F2A2E285CLL;
    *((void *)&v398 + 1) = 0xEF5D5C3F2A2E5B5CLL;
    uint64_t v396 = 0LL;
    v397[0] = 0xE000000000000000LL;
    unint64_t v184 = sub_6D68();
    unint64_t v185 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v398,  &v396,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v184,  v184,  v184);
    uint64_t v187 = v186;
    uint64_t v188 = String.count.getter(v183, v67);
    uint64_t v189 = String.count.getter(v185, v187);
    if (__OFSUB__(v188, v189))
    {
      __break(1u);
      goto LABEL_211;
    }

    if (v188 - v189 < 35 || String.count.getter(v185, v187) <= 5)
    {
      swift_bridgeObjectRelease(v187);
    }

    else
    {
      swift_bridgeObjectRelease(v67);
      uint64_t v183 = v185;
      BOOL v67 = v187;
    }
  }

  else
  {
    sub_30240();
    uint64_t v183 = v190;
    BOOL v67 = v191;
  }

  uint64_t v192 = sub_3024C();
  os_log_type_t v194 = v193;
  swift_bridgeObjectRetain(v193);
  uint64_t v195 = INPlayMediaIntent.isCreateRadioFromCurrentlyPlayingUnknownReference()()
      && INPlayMediaIntent.isServerSearchSuppressed()();
  if (!(v67 | v194))
  {
    v196 = [v64 mediaSearch];
    if (v196)
    {
      uint64_t v197 = v196;
      uint64_t v198 = v192;
      uint64_t v199 = v194;
      uint64_t v200 = (char *)[v196 reference];

      uint64_t v201 = v200 == (_BYTE *)&dword_0 + 1;
      os_log_type_t v194 = v199;
      uint64_t v192 = v198;
      uint64_t v202 = v201;
      if (((v202 | v195) & 1) != 0) {
        goto LABEL_96;
      }
    }

    else if (v195)
    {
      goto LABEL_96;
    }

    swift_bridgeObjectRelease(v389);
    uint64_t v219 = v369;
    uint64_t v220 = v382;
    v221 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v369, v391, v382);
    uint64_t v222 = (os_log_s *)Logger.logObject.getter(v221);
    uint64_t v223 = static os_log_type_t.info.getter(v222);
    if (os_log_type_enabled(v222, v223))
    {
      v224 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v224 = 0;
      _os_log_impl( &dword_0,  v222,  v223,  "PlayMediaDialogProvider going to makePlayDialogEmptyContentTitle for empty title and artist",  v224,  2u);
      swift_slowDealloc(v224, -1LL, -1LL);
    }

    v388(v219, v220);
    uint64_t v155 = (uint64_t)v373;
    sub_15E380(v392, v64, (uint64_t)sub_16B694, (uint64_t)v373);
    goto LABEL_67;
  }

        uint64_t v11 = (v20 - 1) & v20;
        uint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }

      uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      uint64_t v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_21964(v25, v38);
      }

      else
      {
        sub_6C00((uint64_t)v25, (uint64_t)v38);
        swift_bridgeObjectRetain(v23);
      }

      Hasher.init(_seed:)(v37, *(void *)(v8 + 40));
      String.hash(into:)(v37, v24, v23);
      uint64_t result = Hasher._finalize()();
      uint64_t v26 = -1LL << *(_BYTE *)(v8 + 32);
      uint64_t v27 = result & ~v26;
      uint64_t v28 = v27 >> 6;
      if (((-1LL << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        uint64_t v15 = __clz(__rbit64((-1LL << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v29 = 0;
        uint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }

          uint64_t v31 = v28 == v30;
          if (v28 == v30) {
            uint64_t v28 = 0LL;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }

        while (v32 == -1);
        uint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }

      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v15;
      uint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *uint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_21964(v38, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }

  uint64_t result = swift_release(v5);
  *uint64_t v3 = v8;
  return result;
}

        uint64_t v11 = (v19 - 1) & v19;
        uint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }

      NSString v21 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      uint64_t v35 = v21;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 16 * v17 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain(*((void *)&v21 + 1));
        swift_bridgeObjectRetain(v22);
      }

      Hasher.init(_seed:)(v36, *(void *)(v8 + 40));
      if (v23)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(v23);
        String.hash(into:)(v36, v35, v23);
        swift_bridgeObjectRelease(v23);
      }

      else
      {
        Hasher._combine(_:)(0);
      }

      uint64_t result = Hasher._finalize()();
      uint64_t v24 = -1LL << *(_BYTE *)(v8 + 32);
      uint64_t v25 = result & ~v24;
      uint64_t v26 = v25 >> 6;
      if (((-1LL << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        uint64_t v15 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v27 = 0;
        uint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }

          uint64_t v29 = v26 == v28;
          if (v26 == v28) {
            uint64_t v26 = 0LL;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v12 + 8 * v26);
        }

        while (v30 == -1);
        uint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }

      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v15;
      *(_OWORD *)(*(void *)(v8 + 48) + 16 * v15) = v35;
      *(void *)(*(void *)(v8 + 56) + 8 * v15) = v22;
      ++*(void *)(v8 + 16);
    }
  }

  uint64_t result = swift_release(v5);
  *uint64_t v3 = v8;
  return result;
}

id sub_1941C(void (*a1)(char *, uint64_t), unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v59 = a1;
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  unint64_t v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v51 - v14;
  id v60 = [objc_allocWithZone(_INPBIntentMetadata) init];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v56 = v16;
  uint64_t v57 = v17;
  ((void (*)(char *))v17)(v15);
  uint64_t v18 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v55 = v10;
  uint64_t v58 = v13;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v62 = v23;
    uint64_t v51 = a3;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v61 = sub_6978((uint64_t)v59, a2, &v62);
    a3 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl(&dword_0, v19, v20, "ConverterHelpers#convertIntentMetadata Setting launchId to: %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1LL, -1LL);
    uint64_t v24 = v22;
    uint64_t v13 = v58;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  uint64_t v25 = *(void (**)(char *, uint64_t))(v55 + 8);
  v25(v15, v9);
  id v26 = v60;
  if (v60)
  {
    id v27 = v60;
    NSString v28 = String._bridgeToObjectiveC()();
    [v27 setLaunchId:v28];

    id v29 = v27;
    uint64_t v30 = v52;
    uint64_t v31 = UUID.init()();
    UUID.uuidString.getter(v31);
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v54);
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
    [v29 setIntentId:v34];
  }

  if (a4)
  {
    uint64_t v35 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000LL) == 0) {
      uint64_t v35 = a3 & 0xFFFFFFFFFFFFLL;
    }
    if (v35 && v26)
    {
      id v36 = v26;
      swift_bridgeObjectRetain(a4);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a4);
      [v36 setSystemExtensionBundleId:v37];
    }
  }

  v57(v13, v56, v9);
  id v38 = v26;
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    uint64_t v59 = v25;
    uint64_t v43 = v42;
    uint64_t v61 = (uint64_t)v26;
    uint64_t v62 = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    id v44 = v38;
    uint64_t v45 = sub_6C5C(&qword_28D478);
    uint64_t v46 = String.init<A>(describing:)(&v61, v45);
    unint64_t v48 = v47;
    uint64_t v61 = sub_6978(v46, v47, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

    unint64_t v49 = v48;
    id v26 = v60;
    swift_bridgeObjectRelease(v49);
    _os_log_impl(&dword_0, v39, v40, "ConverterHelpers#convertIntentMetadata intentMetadata: %s", v41, 0xCu);
    swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);

    v59(v58, v9);
  }

  else
  {

    v25(v13, v9);
  }

  return v26;
}

double sub_19928@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v192 = a2;
  uint64_t v188 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v186 = *(void *)(v188 - 8);
  uint64_t v4 = __chkstk_darwin(v188);
  id v168 = (char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v178 = (char *)&v163 - v7;
  __chkstk_darwin(v6);
  uint64_t v187 = (char **)((char *)&v163 - v8);
  uint64_t v9 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v9);
  uint64_t v175 = (char *)&v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Siri_Nlu_External_UserParse(0LL);
  uint64_t v173 = *(void *)(v11 - 8);
  uint64_t v174 = v11;
  __chkstk_darwin(v11);
  uint64_t v172 = (char *)&v163 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v182 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  unint64_t v184 = *(uint8_t **)(v182 - 8);
  uint64_t v13 = __chkstk_darwin(v182);
  uint64_t v170 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v181 = (char *)&v163 - v16;
  __chkstk_darwin(v15);
  uint64_t v171 = (char *)&v163 - v17;
  uint64_t v18 = type metadata accessor for USOParse(0LL);
  uint64_t v176 = *(void *)(v18 - 8);
  uint64_t v177 = v18;
  __chkstk_darwin(v18);
  unint64_t v180 = (char *)&v163 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Parse(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (void **)((char *)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v189 = *(void *)(v24 - 8);
  uint64_t v190 = (uint8_t *)v24;
  uint64_t v25 = __chkstk_darwin(v24);
  id v27 = (char *)&v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v163 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  unint64_t v179 = (char *)&v163 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v183 = (char *)&v163 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  unint64_t v185 = (char *)&v163 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  Class v167 = (char *)&v163 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  Class v169 = (char *)&v163 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v166 = (char *)&v163 - v42;
  __chkstk_darwin(v41);
  id v44 = (char *)&v163 - v43;
  uint64_t v191 = v2;
  id v45 = [v2 privatePlayMediaIntentData];
  if (!v45
    || (uint64_t v46 = v45,
        id v47 = [v45 privateMediaIntentData],
        v46,
        !v47)
    || (unint64_t v48 = (char *)[v47 homeAutomationEntityProvider],
        v47,
        !v48))
  {
LABEL_11:
    (*(void (**)(void **, uint64_t, uint64_t))(v21 + 16))(v23, a1, v20);
    int v62 = (*(uint64_t (**)(void **, uint64_t))(v21 + 88))(v23, v20);
    if (v62 == enum case for Parse.NLv3IntentOnly(_:))
    {
      (*(void (**)(void **, uint64_t))(v21 + 8))(v23, v20);
      return sub_189FC8(a1, v192);
    }

    if (v62 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      (*(void (**)(void **, uint64_t))(v21 + 96))(v23, v20);
      uint64_t v63 = sub_6C5C(&qword_284618);
      swift_release(*(void **)((char *)v23 + *(int *)(v63 + 48)));
      uint64_t v64 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(void **, uint64_t))(*(void *)(v64 - 8) + 8LL))(v23, v64);
      return sub_189FC8(a1, v192);
    }

    if (v62 == enum case for Parse.directInvocation(_:))
    {
      (*(void (**)(void **, uint64_t))(v21 + 96))(v23, v20);
      uint64_t v20 = v186;
      uint64_t v65 = (uint64_t)v187;
      id v66 = (id)v188;
      (*(void (**)(char **, void **, uint64_t))(v186 + 32))(v187, v23, v188);
      sub_1CF340(v65, (uint64_t)v195);
      sub_8747C((uint64_t)v195, (uint64_t)v196);
      uint64_t v68 = v189;
      BOOL v67 = v190;
      if (v196[56] != 255)
      {
        sub_45D94((uint64_t)v196, (uint64_t)v197);
        sub_45D94((uint64_t)v197, (uint64_t)&v198);
        if (v200 == 4)
        {
          uint64_t v69 = v198;
          uint64_t v70 = v199[1];
          uint64_t v71 = v199[3];
          swift_bridgeObjectRelease(v199[5]);
          swift_bridgeObjectRelease(v71);
          swift_bridgeObjectRelease(v70);
          unint64_t v185 = v69;
          if (v69)
          {
            unint64_t v72 = v185;
            char v73 = v170;
            Experience.userDialogAct.getter(v72);
            uint64_t v138 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(v73);
            (*((void (**)(char *, uint64_t))v184 + 1))(v73, v182);
            if ((unint64_t)v138 >> 62)
            {
              if (v138 < 0) {
                uint64_t v143 = v138;
              }
              else {
                uint64_t v143 = v138 & 0xFFFFFFFFFFFFFF8LL;
              }
              swift_bridgeObjectRetain(v138);
              uint64_t v144 = _CocoaArrayWrapper.endIndex.getter(v143);
              swift_bridgeObjectRelease(v138);
              if (v144) {
                goto LABEL_65;
              }
            }

            else if (*(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)))
            {
LABEL_65:
              if ((v138 & 0xC000000000000001LL) != 0)
              {
                uint64_t v139 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v138);
                goto LABEL_68;
              }

              if (*(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)))
              {
                uint64_t v139 = *(void *)(v138 + 32);
                swift_retain(v139);
LABEL_68:
                swift_bridgeObjectRelease(v138);
                sub_1ADDC(v139, v192);

                swift_release(v139);
                (*(void (**)(uint64_t, id))(v20 + 8))(v65, v66);
                return result;
              }

              __break(1u);
              goto LABEL_114;
            }

            swift_bridgeObjectRelease(v138);
          }

          if (qword_283888 == -1) {
            goto LABEL_22;
          }
          goto LABEL_87;
        }

        sub_45DD0((uint64_t)v195);
      }

      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v109 = sub_6960((uint64_t)v67, (uint64_t)qword_2969C8);
      uint64_t v110 = (*(uint64_t (**)(char *, uint64_t, uint8_t *))(v68 + 16))(v30, v109, v67);
      uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
      os_log_type_t v112 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v111, v112))
      {
        id v113 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v113 = 0;
        _os_log_impl( &dword_0,  v111,  v112,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider Unsupported directinvocation type",  v113,  2u);
        char v114 = v113;
        id v66 = (id)v188;
        swift_slowDealloc(v114, -1LL, -1LL);
      }

      (*(void (**)(char *, uint8_t *))(v68 + 8))(v30, v67);
      (*(void (**)(uint64_t, id))(v20 + 8))(v65, v66);
      goto LABEL_103;
    }

    uint64_t v68 = (uint64_t)v190;
    if (v62 == enum case for Parse.pommesResponse(_:))
    {
      (*(void (**)(void **, uint64_t))(v21 + 96))(v23, v20);
      uint64_t v92 = *v23;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v93 = sub_6960(v68, (uint64_t)qword_2969C8);
      uint64_t v94 = v189;
      uint64_t v65 = *(void *)(v189 + 16);
      uint64_t v188 = v93;
      ((void (*)(char *))v65)(v185);
      unint64_t v72 = v92;
      id v95 = (os_log_s *)Logger.logObject.getter(v72);
      os_log_type_t v96 = static os_log_type_t.default.getter();
      id v66 = (id)v96;
      if (os_log_type_enabled(v95, v96))
      {
        id v97 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v187 = (char **)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)id v97 = 138412290;
        uint64_t v198 = v72;
        uint64_t v98 = v72;
        uint64_t v94 = v189;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, v199);
        char v99 = v187;
        *uint64_t v187 = v72;

        _os_log_impl( &dword_0,  v95,  (os_log_type_t)v66,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider Unpacking tasks from pommesResponse: %@",  v97,  0xCu);
        uint64_t v100 = sub_6C5C((uint64_t *)&unk_286BC0);
        id v66 = v99;
        swift_arrayDestroy(v99, 1LL, v100);
        int v101 = v99;
        uint64_t v68 = (uint64_t)v190;
        swift_slowDealloc(v101, -1LL, -1LL);
        swift_slowDealloc(v97, -1LL, -1LL);
      }

      else
      {

        id v95 = (os_log_s *)v72;
      }

      BOOL v67 = v184;

      uint64_t v115 = *(uint64_t (**)(char *, uint64_t))(v94 + 8);
      uint64_t v116 = v115(v185, v68);
      uint64_t v117 = dispatch thunk of PommesResponse.experiences.getter(v116);
      uint64_t v138 = v117;
      if ((unint64_t)v117 >> 62)
      {
        if (v117 >= 0) {
          v117 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v142 = _CocoaArrayWrapper.endIndex.getter(v117);
        uint64_t v20 = (uint64_t)v181;
        if (!v142) {
          goto LABEL_98;
        }
      }

      else
      {
        uint64_t v20 = (uint64_t)v181;
      }

      if ((v138 & 0xC000000000000001LL) != 0)
      {
        id v118 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v138);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
LABEL_87:
          swift_once(&qword_283888, sub_BFC5C);
LABEL_22:
          uint64_t v74 = sub_6960((uint64_t)v67, (uint64_t)qword_2969C8);
          uint64_t v75 = v179;
          (*(void (**)(char *, uint64_t, uint8_t *))(v68 + 16))(v179, v74, v67);
          uint64_t v76 = v20;
          unint64_t v77 = *(uint64_t (**)(char *, uint64_t, id))(v20 + 16);
          uint64_t v78 = v178;
          uint64_t v79 = v77(v178, v65, v66);
          Class v80 = (os_log_s *)Logger.logObject.getter(v79);
          os_log_type_t v81 = static os_log_type_t.error.getter();
          LODWORD(v191) = v81;
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v82 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            id v83 = v66;
            uint64_t v84 = swift_slowAlloc(32LL, -1LL);
            uint64_t v194 = v84;
            unint64_t v184 = v82;
            *(_DWORD *)uint64_t v82 = 136315138;
            uint64_t v183 = (char *)(v82 + 4);
            uint64_t v85 = v68;
            uint64_t v86 = v168;
            v77(v168, (uint64_t)v78, v83);
            uint64_t v87 = String.init<A>(describing:)(v86, v83);
            unint64_t v89 = v88;
            uint64_t v193 = sub_6978(v87, v88, &v194);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v193, &v194);
            swift_bridgeObjectRelease(v89);
            Class v90 = *(void (**)(char *, id))(v76 + 8);
            v90(v78, v83);
            Class v91 = v184;
            _os_log_impl( &dword_0,  v80,  (os_log_type_t)v191,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider unable to get audioExperience or the first task: %s",  v184,  0xCu);
            swift_arrayDestroy(v84, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v84, -1LL, -1LL);
            swift_slowDealloc(v91, -1LL, -1LL);

            (*(void (**)(char *, uint8_t *))(v85 + 8))(v179, v190);
            v90((char *)v187, v83);
          }

          else
          {

            uint64_t v129 = *(void (**)(char *, id))(v76 + 8);
            v129(v78, v66);

            (*(void (**)(char *, uint8_t *))(v68 + 8))(v75, v67);
            v129((char *)v65, v66);
          }

          goto LABEL_103;
        }

        id v118 = *(id *)(v138 + 32);
      }

      unint64_t v119 = v118;
      swift_bridgeObjectRelease(v138);
      uint64_t v120 = type metadata accessor for AudioExperience(0LL);
      if (!swift_dynamicCastClass(v119, v120))
      {

LABEL_99:
        ((void (*)(char *, uint64_t, uint64_t))v65)(v183, v188, v68);
        unint64_t v147 = v72;
        unint64_t v148 = (os_log_s *)Logger.logObject.getter(v147);
        os_log_type_t v149 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v148, v149))
        {
          uint64_t v150 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v191 = (char **)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v150 = 138412290;
          uint64_t v198 = v147;
          uint64_t v151 = v147;
          uint64_t v68 = (uint64_t)v190;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, v199);
          uint64_t v152 = v191;
          *uint64_t v191 = v147;

          _os_log_impl( &dword_0,  v148,  v149,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider unable to get the first task: %@",  v150,  0xCu);
          uint64_t v153 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v152, 1LL, v153);
          swift_slowDealloc(v152, -1LL, -1LL);
          swift_slowDealloc(v150, -1LL, -1LL);
        }

        else
        {

          unint64_t v148 = (os_log_s *)v147;
        }

        v115(v183, v68);
        goto LABEL_103;
      }

      id v66 = v119;
      Experience.userDialogAct.getter(v66);

      uint64_t v138 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(v20);
      (*((void (**)(uint64_t, uint64_t))v67 + 1))(v20, v182);
      if ((unint64_t)v138 >> 62)
      {
        if (v138 < 0) {
          uint64_t v145 = v138;
        }
        else {
          uint64_t v145 = v138 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v138);
        uint64_t v146 = _CocoaArrayWrapper.endIndex.getter(v145);
        swift_bridgeObjectRelease(v138);
        if (v146) {
          goto LABEL_71;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_71:
        if ((v138 & 0xC000000000000001LL) != 0)
        {
LABEL_114:
          uint64_t v140 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v138);
          goto LABEL_74;
        }

        if (*(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)))
        {
          uint64_t v140 = *(void *)(v138 + 32);
          swift_retain(v140);
LABEL_74:
          swift_bridgeObjectRelease(v138);
          sub_1ADDC(v140, v192);

          swift_release(v140);
          return result;
        }

        __break(1u);
        goto LABEL_116;
      }

LABEL_98:
      swift_bridgeObjectRelease(v138);
      goto LABEL_99;
    }

    if (v62 != enum case for Parse.uso(_:))
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v121 = sub_6960(v68, (uint64_t)qword_2969C8);
      uint64_t v122 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v189 + 16))(v27, v121, v68);
      unint64_t v123 = (os_log_s *)Logger.logObject.getter(v122);
      os_log_type_t v124 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v123, v124))
      {
        NSString v125 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)NSString v125 = 0;
        _os_log_impl( &dword_0,  v123,  v124,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider No HomeAutomationProviders found for this intent",  v125,  2u);
        swift_slowDealloc(v125, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v189 + 8))(v27, v68);
      NSString v126 = (_OWORD *)v192;
      *(void *)(v192 + 32) = 0LL;
      *NSString v126 = 0u;
      v126[1] = 0u;
      NSNumber v127 = *(void (**)(void **, uint64_t))(v21 + 8);
      NSNumber v128 = v23;
      goto LABEL_51;
    }

    (*(void (**)(void **, uint64_t))(v21 + 96))(v23, v20);
    uint64_t v65 = v176;
    uint64_t v20 = v177;
    uint64_t v102 = (*(uint64_t (**)(char *, void **, uint64_t))(v176 + 32))(v180, v23, v177);
    BOOL v103 = v172;
    uint64_t v104 = USOParse.userParse.getter(v102);
    uint64_t v105 = Siri_Nlu_External_UserParse.userDialogActs.getter(v104);
    (*(void (**)(char *, uint64_t))(v173 + 8))(v103, v174);
    if (*(void *)(v105 + 16))
    {
      BOOL v67 = v184;
      uint64_t v106 = (uint64_t)v175;
      unint64_t v72 = (char *)v182;
      (*((void (**)(char *, unint64_t, uint64_t))v184 + 2))( v175,  v105 + ((v184[80] + 32LL) & ~(unint64_t)v184[80]),  v182);
      uint64_t v107 = 0LL;
      uint64_t v108 = v189;
    }

    else
    {
      uint64_t v107 = 1LL;
      uint64_t v108 = v189;
      unint64_t v72 = (char *)v182;
      BOOL v67 = v184;
      uint64_t v106 = (uint64_t)v175;
    }

    (*((void (**)(uint64_t, uint64_t, uint64_t, char *))v67 + 7))(v106, v107, 1LL, v72);
    swift_bridgeObjectRelease(v105);
    if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v67 + 6))(v106, 1LL, v72) == 1)
    {
      sub_1F6CC(v106, &qword_2845D0);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v130 = sub_6960(v68, (uint64_t)qword_2969C8);
      id v131 = v167;
      uint64_t v132 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 16))(v167, v130, v68);
      uint64_t v133 = (os_log_s *)Logger.logObject.getter(v132);
      os_log_type_t v134 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v133, v134))
      {
        id v135 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v135 = 0;
        _os_log_impl( &dword_0,  v133,  v134,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider No user dialog act found in userParse.",  v135,  2u);
        swift_slowDealloc(v135, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v108 + 8))(v131, v68);
LABEL_62:
      (*(void (**)(char *, uint64_t))(v65 + 8))(v180, v20);
LABEL_103:
      uint64_t v154 = (_OWORD *)v192;
      *(void *)(v192 + 32) = 0LL;
      double result = 0.0;
      *uint64_t v154 = 0u;
      v154[1] = 0u;
      return result;
    }

    Class v136 = v171;
    (*((void (**)(char *, uint64_t, char *))v67 + 4))(v171, v106, v72);
    uint64_t v137 = static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)(v136);
    uint64_t v138 = v137;
    if ((unint64_t)v137 >> 62)
    {
      if (v137 < 0) {
        uint64_t v155 = v137;
      }
      else {
        uint64_t v155 = v137 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v137);
      uint64_t v156 = _CocoaArrayWrapper.endIndex.getter(v155);
      swift_bridgeObjectRelease(v138);
      if (v156) {
        goto LABEL_77;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v137 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_77:
      if ((v138 & 0xC000000000000001LL) != 0)
      {
LABEL_116:
        uint64_t v141 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v138);
        goto LABEL_80;
      }

      if (*(void *)((char *)&dword_10 + (v138 & 0xFFFFFFFFFFFFF8LL)))
      {
        uint64_t v141 = *(void *)(v138 + 32);
        swift_retain(v141);
LABEL_80:
        swift_bridgeObjectRelease(v138);
        sub_1ADDC(v141, v192);
        swift_release(v141);
        (*((void (**)(char *, char *))v67 + 1))(v171, v72);
        NSNumber v127 = *(void (**)(void **, uint64_t))(v65 + 8);
        NSNumber v128 = (void **)v180;
LABEL_51:
        v127(v128, v20);
        return result;
      }

      __break(1u);
      goto LABEL_118;
    }

    swift_bridgeObjectRelease(v138);
    if (qword_283888 == -1)
    {
LABEL_109:
      uint64_t v157 = sub_6960(v68, (uint64_t)qword_2969C8);
      uint64_t v158 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 16))(v166, v157, v68);
      uint64_t v159 = (os_log_s *)Logger.logObject.getter(v158);
      os_log_type_t v160 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v159, v160))
      {
        uint64_t v161 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v161 = 0;
        _os_log_impl( &dword_0,  v159,  v160,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider No tasks found in input",  v161,  2u);
        uint64_t v162 = v161;
        unint64_t v72 = (char *)v182;
        swift_slowDealloc(v162, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v108 + 8))(v166, v68);
      (*((void (**)(char *, char *))v67 + 1))(v171, v72);
      goto LABEL_62;
    }

LABEL_118:
    swift_once(&qword_283888, sub_BFC5C);
    goto LABEL_109;
  }

  uint64_t v164 = a1;
  unint64_t v49 = v30;
  uint64_t v198 = v48;
  uint64_t v50 = sub_1641C(0LL, &qword_28C130, &OBJC_CLASS___INHomeAutomationEntityProvider_ptr);
  unint64_t v51 = sub_18F8F0();
  uint64_t v165 = v50;
  unint64_t v163 = v51;
  if ((HomeAutomationEntityProviding.hasHomeAutomationNodes.getter(v50, v51) & 1) == 0)
  {

    uint64_t v30 = v49;
    a1 = v164;
    goto LABEL_11;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v52 = (uint64_t)v190;
  uint64_t v53 = sub_6960((uint64_t)v190, (uint64_t)qword_2969C8);
  uint64_t v54 = v189;
  uint64_t v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v189 + 16))(v44, v53, v52);
  uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v58 = 0;
    _os_log_impl( &dword_0,  v56,  v57,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider INPlayMediaIntent has a valid HomeAutomationEntityProvider. C hoosing as the intent homeAutomationProvider",  v58,  2u);
    swift_slowDealloc(v58, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v52);
  id v60 = (char **)v192;
  unint64_t v61 = v163;
  *(void *)(v192 + 24) = v165;
  v60[4] = (char *)v61;
  *id v60 = v48;
  return result;
}

double sub_1ADDC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v15[1] = a1;
  uint64_t v8 = type metadata accessor for UsoTask(0LL);
  if ((HomeAutomationEntityProviding.hasHomeAutomationNodes.getter(v8, &protocol witness table for UsoTask) & 1) != 0)
  {
    *(void *)(a2 + 24) = v8;
    *(void *)(a2 + 32) = &protocol witness table for UsoTask;
    *(void *)a2 = a1;
    swift_retain(a1);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v10 = sub_6960(v4, (uint64_t)qword_2969C8);
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl( &dword_0,  v12,  v13,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider No homeAutomation nodes found in Uso Task",  v14,  2u);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(a2 + 32) = 0LL;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }

  return result;
}

uint64_t sub_1AF68(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for EncryptionProvider(0LL);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v61 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v54 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for Input(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
  uint64_t v53 = v22;
  uint64_t v26 = v23;
  id v27 = v19;
  v25(v22, 0LL, 1LL, v26);
  uint64_t v59 = a2;
  id v52 = a2;
  static FeatureFlagProvider.shared.getter(v52);
  uint64_t v28 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v51 = static MediaRemoteAPIProvider.shared.getter(v28);
  uint64_t v29 = static AceService.current.getter(v63);
  if (qword_2838F0 != -1) {
    uint64_t v29 = (void *)swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v30 = static DeviceProvider.shared.getter(v29);
  EncryptionProvider.init()(v30);
  type metadata accessor for SharedContextProvider(0LL);
  uint64_t v50 = static SharedContextProvider.shared.getter();
  uint64_t v31 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v48 = static SiriKitTaskLoggingProvider.shared.getter(v31);
  uint64_t v32 = type metadata accessor for ConfirmInterruptionFlow(0LL);
  uint64_t v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v35 = (uint64_t)v54;
  unint64_t v49 = v27;
  v34(v54, v27, v61);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v62);
  uint64_t v36 = (uint64_t)v55;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v14, v9);
  uint64_t v46 = v10;
  uint64_t v47 = v9;
  uint64_t v37 = v8;
  uint64_t v39 = (uint64_t)v56;
  uint64_t v38 = v57;
  uint64_t v40 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v37, v58);
  uint64_t v41 = v51;
  swift_retain(v51);
  uint64_t v42 = sub_A588C((uint64_t)v53, v59, v35, v41, (uint64_t)v63, v62, v36, v39, v50, v48, v33);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v40);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
  swift_release(v41);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v49, v61);
  *(void *)&v62[0] = v42;
  uint64_t v43 = sub_10430(&qword_286610, type metadata accessor for ConfirmInterruptionFlow, (uint64_t)&unk_217758);
  uint64_t v44 = Flow.eraseToAnyFlow()(v32, v43);
  swift_release(v42);
  return v44;
}

uint64_t type metadata accessor for ConfirmInterruptionFlow(uint64_t a1)
{
  uint64_t result = qword_288928;
  if (!qword_288928) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ConfirmInterruptionFlow);
  }
  return result;
}

uint64_t sub_1B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B3F8( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v61 = a3;
  int v62 = a6;
  uint64_t v59 = a4;
  uint64_t v60 = (uint8_t *)a5;
  uint64_t v58 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v10 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v55 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v55 - v21;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v33 = sub_6960(v13, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v22, v33, v13);
    swift_errorRetain(a1);
    uint64_t v34 = swift_errorRetain(a1);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = a7;
      uint64_t v38 = (uint8_t *)v37;
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      uint64_t v57 = v14;
      uint64_t v40 = v39;
      uint64_t v66 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_getErrorValue(a1, v64, v63);
      uint64_t v41 = Error.localizedDescription.getter(v63[1], v63[2]);
      unint64_t v43 = v42;
      uint64_t v65 = sub_6978(v41, v42, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      swift_bridgeObjectRelease(v43);
      sub_ABC68(a1, 1);
      sub_ABC68(a1, 1);
      _os_log_impl( &dword_0,  v35,  v36,  "AmbiguousPlayFlowFrame#executeFlow Failure getting frame from controls: %s",  v38,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v22, v13);
    }

    else
    {
      sub_ABC68(a1, 1);
      sub_ABC68(a1, 1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    }

    sub_1B4310(v59, (uint64_t)v60, (void (*)(void))v62);
    return sub_ABC68(a1, 1);
  }

  else if (a1)
  {
    uint64_t v23 = qword_283888;
    swift_retain_n(a1, 2LL);
    if (v23 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = sub_6960(v13, (uint64_t)qword_2969C8);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v24, v13);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v56 = a7;
      uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v61 = swift_slowAlloc(32LL, -1LL);
      uint64_t v66 = v61;
      uint64_t v57 = v14;
      *(_DWORD *)uint64_t v28 = 136446210;
      uint64_t v60 = v28 + 4;
      uint64_t v29 = static Insights.frameKit.getter();
      unint64_t v31 = v30;
      uint64_t v65 = sub_6978(v29, v30, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      swift_bridgeObjectRelease(v31);
      _os_log_impl( &dword_0,  v26,  v27,  "AmbiguousPlayFlow#executeFlow %{public}s executing resume flow from controls",  v28,  0xCu);
      uint64_t v32 = v61;
      swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v28, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v13);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }

    static ExecuteResponse.complete(next:)(a1);
    v62(v12);
    sub_ABC68(a1, 0);
    sub_ABC68(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v58);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v45 = sub_6960(v13, (uint64_t)qword_2969C8);
    uint64_t v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v45, v13);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v47, v48))
    {
      unint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v50 = swift_slowAlloc(32LL, -1LL);
      uint64_t v57 = v14;
      uint64_t v51 = v50;
      uint64_t v66 = v50;
      *(_DWORD *)unint64_t v49 = 136446210;
      uint64_t v52 = static Insights.frameKit.getter();
      unint64_t v54 = v53;
      uint64_t v65 = sub_6978(v52, v53, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      swift_bridgeObjectRelease(v54);
      _os_log_impl( &dword_0,  v47,  v48,  "AmbiguousPlayFlow#executeFlow %{public}s no flow received from controls for intent",  v49,  0xCu);
      swift_arrayDestroy(v51, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v13);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    }

    return sub_1B4310(v59, (uint64_t)v60, (void (*)(void))v62);
  }

uint64_t sub_1BA30(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1BA50(__int128 *a1, uint64_t (*a2)(__int128 *))
{
  __int128 v3 = *a1;
  return a2(&v3);
}

uint64_t sub_1BA84(_BYTE *a1, uint64_t (*a2)(_BYTE *))
{
  char v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  return a2(v4);
}

uint64_t sub_1BAC4( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *))
{
  char v11 = *((_BYTE *)a1 + 8);
  uint64_t v14 = *a1;
  char v15 = v11;
  uint64_t v12 = static os_signpost_type_t.end.getter(a1, a2);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)(v12, &dword_0, qword_296AA0, a2, a3, a4, a5);
  return a6(&v14);
}

uint64_t sub_1BB84( uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *))
{
  uint64_t v13 = *a1;
  uint64_t v11 = static os_signpost_type_t.end.getter(a1, a2);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)(v11, &dword_0, qword_296AA0, a2, a3, a4, a5);
  return a6(&v13);
}

uint64_t sub_1BC3C( _BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_BYTE *))
{
  char v11 = a1[1];
  v14[0] = *a1;
  v14[1] = v11;
  uint64_t v12 = static os_signpost_type_t.end.getter();
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)(v12, &dword_0, qword_296AA0, a2, a3, a4, a5);
  return a6(v14);
}

uint64_t sub_1BCFC( __int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(__int128 *))
{
  __int128 v13 = *a1;
  uint64_t v11 = static os_signpost_type_t.end.getter(a1, a2);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)(v11, &dword_0, qword_296AA0, a2, a3, a4, a5);
  return a6(&v13);
}

uint64_t sub_1BDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AmbiguousPlayFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_1BDDC()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1BE00()
{
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_featureFlags));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nextLocalFlow + 8));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_outputPublisher));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_playMediaCatDialogService));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_commonMediaIntentCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_appNameResolver));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_aceService));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_viewFactory));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_siriKitTaskLoggingProvider));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedApp));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_remoteFlow + 8));

  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_nowPlayingProvider));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_addMediaCatDialogService));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_updateMediaAffinityCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_companionDeviceProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_voiceProfileProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_resolvedAppHistoryProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_installedAppProvider));
  return v0;
}

uint64_t sub_1BF74()
{
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

uint64_t sub_1BFA8()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t CatService.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 300LL, 7LL);
}

uint64_t sub_1C028(void (*a1)(char *), uint64_t a2)
{
  return sub_1C048(a1, a2);
}

uint64_t sub_1C048(void (*a1)(char *), uint64_t a2)
{
  uint64_t v383 = a2;
  v384 = a1;
  uint64_t v360 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v359 = *(void *)(v360 - 8);
  __chkstk_darwin(v360);
  uint64_t v358 = (char *)&v342 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v4);
  uint64_t v363 = (char *)&v342 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v367 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v366 = *(void *)(v367 - 8);
  uint64_t v6 = __chkstk_darwin(v367);
  v357 = (char *)&v342 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  v364 = (char *)&v342 - v8;
  uint64_t v9 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v9);
  uint64_t v356 = (char *)&v342 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v373 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v368 = *(void *)(v373 - 8);
  uint64_t v11 = __chkstk_darwin(v373);
  uint64_t v352 = (char *)&v342 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v354 = (char *)&v342 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v362 = (uint8_t *)&v342 - v16;
  __chkstk_darwin(v15);
  uint64_t v370 = (uint8_t *)&v342 - v17;
  uint64_t v381 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v382 = *(void *)(v381 - 8);
  uint64_t v18 = __chkstk_darwin(v381);
  int v350 = (char *)&v342 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v380 = (char *)&v342 - v20;
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v385 = v21;
  uint64_t v386 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v378 = (char *)&v342 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  os_log_type_t v377 = (char *)&v342 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v347 = (char *)&v342 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v346 = (char *)&v342 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v345 = (char *)&v342 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v344 = (char *)&v342 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  char v349 = (char *)&v342 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v348 = (char *)&v342 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v355 = (char *)&v342 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v351 = (char *)&v342 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v353 = (char *)&v342 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v365 = (char *)&v342 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  char v361 = (char *)&v342 - v48;
  __chkstk_darwin(v47);
  uint64_t v376 = (char *)&v342 - v49;
  uint64_t v50 = type metadata accessor for Parse(0LL);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v379 = (char *)&v342 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)&v342 - v54;
  uint64_t v56 = sub_6C5C(&qword_285BD0);
  uint64_t v57 = __chkstk_darwin(v56);
  uint64_t v372 = (char *)&v342 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = __chkstk_darwin(v57);
  id v369 = (uint8_t *)&v342 - v60;
  __chkstk_darwin(v59);
  int v62 = (char *)&v342 - v61;
  uint64_t v63 = type metadata accessor for Input(0LL);
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v371 = (char *)&v342 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v65);
  uint64_t v68 = (char *)&v342 - v67;
  uint64_t v375 = v2;
  uint64_t v69 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_input, v394, 0LL, 0LL);
  sub_FF10(v69, (uint64_t)v62, &qword_285BD0);
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
  if (v70(v62, 1LL, v63) == 1)
  {
    sub_1F6CC((uint64_t)v62, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v71 = v385;
    uint64_t v72 = sub_6960(v385, (uint64_t)qword_2969C8);
    uint64_t v73 = v386;
    uint64_t v74 = v378;
    uint64_t v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v378, v72, v71);
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.error.getter();
    BOOL v78 = os_log_type_enabled(v76, v77);
    uint64_t v79 = v381;
    uint64_t v80 = v382;
    if (v78)
    {
      os_log_type_t v81 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v81 = 0;
      _os_log_impl(&dword_0, v76, v77, "ConfirmInterruptionFlow#execute received nil input", v81, 2u);
      swift_slowDealloc(v81, -1LL, -1LL);
    }

    uint64_t v82 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v74, v71);
    id v83 = v380;
    static ExecuteResponse.complete()(v82);
    v384(v83);
    return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v83, v79);
  }

  uint64_t v85 = *(uint64_t (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v374 = v63;
  uint64_t v86 = v85(v68, v62, v63);
  Input.parse.getter(v86);
  double v87 = sub_B7C84(v55, (uint64_t)&v388);
  unint64_t v88 = *(void (**)(char *, uint64_t, double))(v51 + 8);
  v88(v55, v50, v87);
  unint64_t v89 = v68;
  if (*((void *)&v389 + 1))
  {
    uint64_t v343 = v64;
    Class v90 = sub_49B60(&v388, &v391);
    Class v91 = (void **)v379;
    uint64_t v92 = v50;
    Input.parse.getter(v90);
    uint64_t v93 = (*(uint64_t (**)(void **, uint64_t))(v51 + 88))(v91, v50);
    if ((_DWORD)v93 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      (*(void (**)(void **, uint64_t))(v51 + 96))(v91, v50);
      uint64_t v94 = sub_6C5C(&qword_284618);
      uint64_t v95 = *(uint64_t *)((char *)v91 + *(int *)(v94 + 48));
      os_log_type_t v96 = (void *)Parse.ServerConversion.siriKitIntent.getter(v94);
      uint64_t v97 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      uint64_t v98 = swift_dynamicCastObjCClass(v96, v97);
      if (!v98)
      {

        uint64_t v101 = v374;
        uint64_t v105 = v385;
        uint64_t v103 = v386;
        uint64_t v104 = v343;
        goto LABEL_30;
      }

      id v99 = (id)v98;
      uint64_t v100 = (uint64_t)v369;
      sub_FF10(v69, (uint64_t)v369, &qword_285BD0);
      uint64_t v101 = v374;
      unsigned int v102 = v70((char *)v100, 1LL, v374);
      uint64_t v103 = v386;
      uint64_t v104 = v343;
      if (v102 == 1)
      {

        sub_1F6CC(v100, &qword_285BD0);
        uint64_t v105 = v385;
LABEL_30:
        uint64_t v160 = v381;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v161 = sub_6960(v105, (uint64_t)qword_2969C8);
        uint64_t v162 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 16))(v376, v161, v105);
        unint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
        os_log_type_t v164 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v163, v164))
        {
          uint64_t v165 = v104;
          uint64_t v166 = v101;
          Class v167 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)Class v167 = 0;
          _os_log_impl( &dword_0,  v163,  v164,  "ConfirmInterruptionFlow#execute NLv3IntentPlusServerConversion error...",  v167,  2u);
          id v168 = v167;
          uint64_t v101 = v166;
          uint64_t v104 = v165;
          swift_slowDealloc(v168, -1LL, -1LL);
        }

        uint64_t v169 = (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v376, v105);
        uint64_t v170 = v380;
        static ExecuteResponse.complete()(v169);
        v384(v170);
        swift_release(v95);
        (*(void (**)(char *, uint64_t))(v382 + 8))(v170, v160);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v89, v101);
        uint64_t v171 = type metadata accessor for NLIntent(0LL);
        (*(void (**)(char *, uint64_t))(*(void *)(v171 - 8) + 8LL))(v379, v171);
        return sub_6C3C(&v391);
      }

      swift_release(v95);
      sub_1F6CC(v100, &qword_285BD0);
      uint64_t v172 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v172 - 8) + 8LL))(v379, v172);
      id v173 = v96;
      uint64_t v144 = v385;
      uint64_t v145 = v375;
      uint64_t v174 = (uint64_t)v372;
LABEL_53:
      uint64_t v208 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 16);
      v208(v174, v89, v101);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v174, 0LL, 1LL, v101);
      sub_6C5C(&qword_288AF8);
      if (qword_283988 != -1) {
        swift_once(&qword_283988, sub_1E4118);
      }
      uint64_t v209 = v144;
      *(void *)&__int128 v388 = static PlayMedia.flowStrategy;
      uint64_t v210 = qword_283990;
      swift_retain(static PlayMedia.flowStrategy);
      if (v210 != -1) {
        swift_once(&qword_283990, sub_1E4264);
      }
      uint64_t v211 = static PlayMedia.childFlowFactory;
      uint64_t v212 = v371;
      uint64_t v213 = v374;
      v208((uint64_t)v371, v89, v374);
      swift_retain(v211);
      id v214 = v99;
      uint64_t v215 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v388, v211, v212, v214);
      uint64_t v216 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
      uint64_t v217 = static SiriKitTaskLoggingProvider.shared.getter(v216);
      uint64_t v218 = type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
      uint64_t v219 = swift_allocObject(v218, *(unsigned int *)(v218 + 48), *(unsigned __int16 *)(v218 + 52));
      uint64_t v220 = (char *)sub_10DCC0(v174, v215, v217, v219);
      v221 = v220;
      uint64_t v222 = (uint64_t *)(v145 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_state);
      if (*(_BYTE *)(v145 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_state + 8) == 1)
      {
        *uint64_t v222 = 1LL;
        *((_BYTE *)v222 + 8) = 0;
        sub_E1CE0((uint64_t)v220, v214, v384, v383);
        swift_release(v221);

        (*(void (**)(char *, uint64_t))(v343 + 8))(v89, v213);
      }

      else
      {
        uint64_t v380 = v220;
        v378 = v89;
        uint64_t v223 = *v222;
        uint64_t v225 = v392;
        uint64_t v224 = v393;
        sub_6EA8(&v391, v392);
        uint64_t v226 = (uint64_t)v363;
        dispatch thunk of ConfirmableIntent.confirmationState.getter(v225, *(void *)(v224 + 8));
        uint64_t v227 = v366;
        uint64_t v228 = v367;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v366 + 48))(v226, 1LL, v367) == 1)
        {
          uint64_t v229 = sub_1F6CC(v226, &qword_284630);
          uint64_t v230 = v343;
          if (v223 == 2)
          {
            uint64_t v308 = static os_signpost_type_t.event.getter(v229);
            uint64_t v309 = v378;
            if (qword_2838D0 != -1) {
              swift_once(&qword_2838D0, sub_1362AC);
            }
            uint64_t v310 = qword_296AA0;
            uint64_t v311 = sub_6C5C((uint64_t *)&unk_289320);
            uint64_t v312 = swift_allocObject(v311, 72LL, 7LL);
            *(_OWORD *)(v312 + 16) = xmmword_214510;
            *(void *)(v312 + 56) = &type metadata for Int;
            *(void *)(v312 + 64) = &protocol witness table for Int;
            *(void *)(v312 + 3sub_6C3C(v0 + 2) = -2LL;
            uint64_t v313 = v358;
            static OSSignpostID.exclusive.getter(v312);
            os_signpost(_:dso:log:name:signpostID:_:_:)( v308,  &dword_0,  v310,  "seConfirmInterruption",  21LL,  2LL,  v313,  "status=%d enableTelemetry=YES",  29);
            swift_bridgeObjectRelease(v312);
            (*(void (**)(char *, uint64_t))(v359 + 8))(v313, v360);
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v314 = sub_6960(v209, (uint64_t)qword_2969C8);
            v315 = v345;
            uint64_t v316 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v345, v314, v209);
            uint64_t v317 = (os_log_s *)Logger.logObject.getter(v316);
            os_log_type_t v318 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v317, v318))
            {
              unsigned int v319 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)unsigned int v319 = 0;
              _os_log_impl( &dword_0,  v317,  v318,  "ConfirmInterruptionFlow#execute No confirmation value after reprompted, issuing dialog informing user of misunderstood response and exiting...",  v319,  2u);
              swift_slowDealloc(v319, -1LL, -1LL);
            }

            (*(void (**)(char *, uint64_t))(v386 + 8))(v315, v209);
            sub_E4FF8(v214, 0, (uint64_t)v384, v383);
            swift_release(v380);

            (*(void (**)(char *, uint64_t))(v230 + 8))(v309, v374);
          }

          else if (v223 == 1)
          {
            uint64_t v231 = v209;
            uint64_t v232 = v378;
            uint64_t v233 = v380;
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v234 = sub_6960(v231, (uint64_t)qword_2969C8);
            unint64_t v235 = v344;
            uint64_t v236 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v344, v234, v231);
            uint64_t v237 = (os_log_s *)Logger.logObject.getter(v236);
            os_log_type_t v238 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v237, v238))
            {
              uint64_t v239 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v239 = 0;
              _os_log_impl( &dword_0,  v237,  v238,  "ConfirmInterruptionFlow#execute No confirmation value after prompted, reprompting...",  v239,  2u);
              v240 = v239;
              uint64_t v233 = v380;
              swift_slowDealloc(v240, -1LL, -1LL);
            }

            (*(void (**)(char *, uint64_t))(v386 + 8))(v235, v231);
            *uint64_t v222 = 2LL;
            *((_BYTE *)v222 + 8) = 0;
            sub_E396C(v214, 1, (uint64_t)v384, v383);
            swift_release(v233);

            (*(void (**)(char *, uint64_t))(v230 + 8))(v232, v374);
          }

          else
          {
            uint64_t v320 = static os_signpost_type_t.event.getter(v229);
            if (qword_2838D0 != -1) {
              swift_once(&qword_2838D0, sub_1362AC);
            }
            uint64_t v321 = qword_296AA0;
            uint64_t v322 = sub_6C5C((uint64_t *)&unk_289320);
            uint64_t v323 = swift_allocObject(v322, 72LL, 7LL);
            *(_OWORD *)(v323 + 16) = xmmword_214510;
            *(void *)(v323 + 56) = &type metadata for Int;
            *(void *)(v323 + 64) = &protocol witness table for Int;
            *(void *)(v323 + 3sub_6C3C(v0 + 2) = -1LL;
            uint64_t v324 = v358;
            static OSSignpostID.exclusive.getter(v323);
            os_signpost(_:dso:log:name:signpostID:_:_:)( v320,  &dword_0,  v321,  "seConfirmInterruption",  21LL,  2LL,  v324,  "status=%d enableTelemetry=YES",  29);
            swift_bridgeObjectRelease(v323);
            (*(void (**)(char *, uint64_t))(v359 + 8))(v324, v360);
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v325 = v385;
            uint64_t v326 = sub_6960(v385, (uint64_t)qword_2969C8);
            v327 = v346;
            uint64_t v328 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v346, v326, v325);
            uint64_t v329 = (os_log_s *)Logger.logObject.getter(v328);
            os_log_type_t v330 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v329, v330))
            {
              uint64_t v331 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v331 = 0;
              _os_log_impl( &dword_0,  v329,  v330,  "ConfirmInterruptionFlow#execute Unexpected state, erroring out...",  v331,  2u);
              swift_slowDealloc(v331, -1LL, -1LL);
            }

            (*(void (**)(char *, uint64_t))(v386 + 8))(v327, v385);
            uint64_t v332 = v375;
            uint64_t v333 = *(void *)(v375
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver
                             + 24);
            uint64_t v334 = *(void *)(v375
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver
                             + 32);
            sub_6EA8( (void *)(v375 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver),  v333);
            uint64_t v335 = static BundleIdentifiers.sentinelBundleIdentifier.getter();
            uint64_t v337 = v336;
            uint64_t v390 = 0LL;
            __int128 v388 = 0u;
            __int128 v389 = 0u;
            uint64_t v338 = swift_allocObject(&unk_26F250, 32LL, 7LL);
            *(void *)(v338 + 16) = v332;
            *(void *)(v338 + 24) = v214;
            id v339 = v214;
            swift_retain(v332);
            dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)( v335,  v337,  &v388,  sub_E87F4,  v338,  v333,  v334);
            swift_bridgeObjectRelease(v337);
            swift_release(v338);
            sub_1F6CC((uint64_t)&v388, &qword_2860C0);
            sub_E71CC(v339, 0x7463657078656E55LL, 0xEF65746174536465LL, (uint64_t)v384, v383);
            swift_release(v380);

            (*(void (**)(char *, uint64_t))(v343 + 8))(v378, v374);
          }
        }

        else
        {
          uint64_t v241 = v364;
          (*(void (**)(char *, uint64_t, uint64_t))(v227 + 32))(v364, v226, v228);
          uint64_t v242 = v357;
          (*(void (**)(char *, char *, uint64_t))(v227 + 16))(v357, v241, v228);
          uint64_t v243 = (*(uint64_t (**)(char *, uint64_t))(v227 + 88))(v242, v228);
          int v244 = v243;
          LODWORD(v241) = enum case for CommonAudio.Confirmation.yes(_:);
          uint64_t v245 = static os_signpost_type_t.event.getter(v243);
          uint64_t v246 = v343;
          if (v244 == (_DWORD)v241)
          {
            uint64_t v247 = v378;
            if (qword_2838D0 != -1) {
              swift_once(&qword_2838D0, sub_1362AC);
            }
            uint64_t v248 = qword_296AA0;
            uint64_t v249 = sub_6C5C((uint64_t *)&unk_289320);
            uint64_t v250 = swift_allocObject(v249, 72LL, 7LL);
            *(_OWORD *)(v250 + 16) = xmmword_214510;
            *(void *)(v250 + 56) = &type metadata for Int;
            *(void *)(v250 + 64) = &protocol witness table for Int;
            *(void *)(v250 + 3sub_6C3C(v0 + 2) = 1LL;
            uint64_t v251 = v358;
            static OSSignpostID.exclusive.getter(v250);
            os_signpost(_:dso:log:name:signpostID:_:_:)( v245,  &dword_0,  v248,  "seConfirmInterruption",  21LL,  2LL,  v251,  "status=%d enableTelemetry=YES",  29);
            swift_bridgeObjectRelease(v250);
            (*(void (**)(char *, uint64_t))(v359 + 8))(v251, v360);
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v252 = sub_6960(v209, (uint64_t)qword_2969C8);
            uint64_t v253 = v348;
            uint64_t v254 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v348, v252, v209);
            id v255 = (os_log_s *)Logger.logObject.getter(v254);
            os_log_type_t v256 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v255, v256))
            {
              uint64_t v257 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v257 = 0;
              _os_log_impl( &dword_0,  v255,  v256,  "ConfirmInterruptionFlow#execute User responded yes to verification request, executing PlayMediaRCHFlowWrapper...",  v257,  2u);
              swift_slowDealloc(v257, -1LL, -1LL);
            }

            (*(void (**)(char *, uint64_t))(v386 + 8))(v253, v209);
            uint64_t v258 = *(void *)(v375
                             + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_originalPlayMediaRCHFlowWrapper);
            if (v258)
            {
              v259 = *(char **)(v375
                              + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_originalPlayMediaRCHFlowWrapper);
              uint64_t v260 = v381;
              uint64_t v261 = v382;
              id v262 = v380;
            }

            else
            {
              id v262 = v380;
              swift_retain(v380);
              v259 = v262;
              uint64_t v260 = v381;
              uint64_t v261 = v382;
            }

            *(void *)&__int128 v388 = v259;
            uint64_t v340 = sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
            swift_retain(v258);
            uint64_t v341 = v350;
            static ExecuteResponse.complete<A>(next:)(&v388, v218, v340);
            swift_release(v259);
            v384(v341);
            swift_release(v262);

            (*(void (**)(char *, uint64_t))(v261 + 8))(v341, v260);
            (*(void (**)(char *, uint64_t))(v366 + 8))(v364, v367);
            (*(void (**)(char *, uint64_t))(v246 + 8))(v247, v374);
          }

          else
          {
            os_log_type_t v281 = v378;
            if (qword_2838D0 != -1) {
              swift_once(&qword_2838D0, sub_1362AC);
            }
            uint64_t v282 = qword_296AA0;
            uint64_t v283 = sub_6C5C((uint64_t *)&unk_289320);
            uint64_t v284 = swift_allocObject(v283, 72LL, 7LL);
            *(_OWORD *)(v284 + 16) = xmmword_214510;
            *(void *)(v284 + 56) = &type metadata for Int;
            *(void *)(v284 + 64) = &protocol witness table for Int;
            *(void *)(v284 + 3sub_6C3C(v0 + 2) = 2LL;
            uint64_t v285 = v358;
            static OSSignpostID.exclusive.getter(v284);
            os_signpost(_:dso:log:name:signpostID:_:_:)( v245,  &dword_0,  v282,  "seConfirmInterruption",  21LL,  2LL,  v285,  "status=%d enableTelemetry=YES",  29);
            swift_bridgeObjectRelease(v284);
            (*(void (**)(char *, uint64_t))(v359 + 8))(v285, v360);
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v286 = sub_6960(v209, (uint64_t)qword_2969C8);
            uint64_t v287 = v349;
            uint64_t v288 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v349, v286, v209);
            uint64_t v289 = (os_log_s *)Logger.logObject.getter(v288);
            os_log_type_t v290 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v289, v290))
            {
              uint64_t v291 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v291 = 0;
              _os_log_impl( &dword_0,  v289,  v290,  "ConfirmInterruptionFlow#execute User responded no to verification request, confirming no interruption wi ll happen and exiting...",  v291,  2u);
              swift_slowDealloc(v291, -1LL, -1LL);
            }

            (*(void (**)(char *, uint64_t))(v386 + 8))(v287, v209);
            sub_E4FF8(v214, 1, (uint64_t)v384, v383);
            swift_release(v380);

            uint64_t v292 = *(void (**)(char *, uint64_t))(v366 + 8);
            uint64_t v293 = v367;
            v292(v364, v367);
            (*(void (**)(char *, uint64_t))(v246 + 8))(v281, v374);
            v292(v357, v293);
          }
        }
      }

      return sub_6C3C(&v391);
    }

    if ((_DWORD)v93 == enum case for Parse.pommesResponse(_:))
    {
      (*(void (**)(void **, uint64_t))(v51 + 96))(v91, v50);
      uint64_t v121 = (char *)*v91;
      uint64_t v122 = (char *)sub_10470();
      uint64_t v123 = v385;
      if (!v122)
      {
        uint64_t v181 = v374;
        uint64_t v182 = v386;
        uint64_t v183 = v381;
        uint64_t v184 = v382;
        uint64_t v185 = v343;
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v186 = sub_6960(v123, (uint64_t)qword_2969C8);
        uint64_t v187 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v182 + 16))(v365, v186, v123);
        uint64_t v188 = (os_log_s *)Logger.logObject.getter(v187);
        os_log_type_t v189 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v188, v189))
        {
          uint64_t v190 = v183;
          uint64_t v191 = v185;
          uint64_t v192 = v181;
          uint64_t v193 = v121;
          uint64_t v194 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v194 = 0;
          _os_log_impl( &dword_0,  v188,  v189,  "ConfirmInterruptionFlow#execute pommesResponse contains no AudioExperience",  v194,  2u);
          uint64_t v195 = v194;
          uint64_t v121 = v193;
          uint64_t v181 = v192;
          uint64_t v185 = v191;
          uint64_t v183 = v190;
          uint64_t v184 = v382;
          swift_slowDealloc(v195, -1LL, -1LL);
        }

        uint64_t v196 = (*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v365, v123);
        uint64_t v197 = v380;
        static ExecuteResponse.complete()(v196);
        v384(v197);

        (*(void (**)(char *, uint64_t))(v184 + 8))(v197, v183);
        (*(void (**)(char *, uint64_t))(v185 + 8))(v89, v181);
        return sub_6C3C(&v391);
      }

      uint64_t v380 = v121;
      v378 = v89;
      os_log_type_t v124 = v370;
      uint64_t v379 = v122;
      Experience.userDialogAct.getter(v122);
      uint64_t v125 = v386;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v126 = sub_6960(v123, (uint64_t)qword_2969C8);
      NSNumber v127 = v361;
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v361, v126, v123);
      uint64_t v128 = v123;
      uint64_t v129 = v368;
      uint64_t v130 = *(uint64_t (**)(char *, uint8_t *, uint64_t))(v368 + 16);
      id v131 = v362;
      uint64_t v132 = v373;
      uint64_t v133 = v130((char *)v362, v124, v373);
      os_log_type_t v134 = (os_log_s *)Logger.logObject.getter(v133);
      os_log_type_t v135 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v134, v135))
      {
        Class v136 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        os_log_type_t v377 = (char *)swift_slowAlloc(32LL, -1LL);
        uint64_t v387 = v377;
        *(_DWORD *)Class v136 = 136315138;
        uint64_t v376 = (char *)(v136 + 4);
        type metadata accessor for SiriNLUTypesPrintUtils(0LL);
        *((void *)&v389 + 1) = v132;
        uint64_t v390 = sub_10430( &qword_284610,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
        uint64_t v137 = (char *)sub_10974(&v388);
        v130(v137, v131, v132);
        uint64_t v138 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v388);
        unint64_t v140 = v139;
        sub_6C3C(&v388);
        *(void *)&__int128 v388 = sub_6978(v138, v140, (uint64_t *)&v387);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v388, (char *)&v388 + 8);
        swift_bridgeObjectRelease(v140);
        uint64_t v141 = v132;
        uint64_t v142 = *(void (**)(char *, uint64_t))(v129 + 8);
        v142((char *)v131, v141);
        _os_log_impl( &dword_0,  v134,  v135,  "ConfirmInterruptionFlow#execute pommesResponse userDialogAct: %s",  v136,  0xCu);
        uint64_t v143 = v377;
        swift_arrayDestroy(v377, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v104 = v343;
        swift_slowDealloc(v143, -1LL, -1LL);
        swift_slowDealloc(v136, -1LL, -1LL);

        uint64_t v144 = v385;
        (*(void (**)(char *, uint64_t))(v386 + 8))(v127, v385);
        unint64_t v89 = v378;
        uint64_t v145 = v375;
      }

      else
      {
        uint64_t v198 = v132;
        uint64_t v142 = *(void (**)(char *, uint64_t))(v129 + 8);
        v142((char *)v131, v198);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v127, v128);
        unint64_t v89 = v378;
        uint64_t v144 = v128;
        uint64_t v145 = v375;
        uint64_t v104 = v343;
      }

      uint64_t v199 = *(void **)(v145 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_intent);
      if (v199
        && (uint64_t v200 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent), (v201 = swift_dynamicCastObjCClass(v199, v200)) != 0))
      {
        id v202 = (id)v201;
        id v203 = v199;
        v142((char *)v370, v373);
      }

      else
      {
        id v204 = [objc_allocWithZone(INPlayMediaIntent) init];
        uint64_t v205 = v380;
        uint64_t v206 = dispatch thunk of PommesResponse.clientResults.getter();
        id v207 = v379;
        id v202 = sub_170254(v379, v206);

        swift_bridgeObjectRelease(v206);
        v142((char *)v370, v373);
      }

      uint64_t v174 = (uint64_t)v372;
      id v99 = v202;
      uint64_t v101 = v374;
      goto LABEL_53;
    }

    uint64_t v147 = v385;
    uint64_t v146 = v386;
    if ((_DWORD)v93 == enum case for Parse.uso(_:))
    {
      uint64_t v148 = Input.parse.getter(v93);
      uint64_t v149 = (uint64_t)v356;
      Parse.firstNLUUserDialogAct()(v148);
      ((void (*)(char *, uint64_t))v88)(v55, v92);
      uint64_t v150 = v368;
      uint64_t v151 = v373;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v368 + 48))(v149, 1LL, v373) != 1)
      {
        v263 = v354;
        (*(void (**)(char *, uint64_t, uint64_t))(v150 + 32))(v354, v149, v151);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v264 = sub_6960(v147, (uint64_t)qword_2969C8);
        v265 = *(char **)(v146 + 16);
        uint64_t v376 = (char *)v264;
        os_log_type_t v377 = v265;
        ((void (*)(char *))v265)(v353);
        uint64_t v266 = *(uint64_t (**)(char *, char *, uint64_t))(v150 + 16);
        uint64_t v267 = v352;
        uint64_t v268 = v266(v352, v263, v151);
        os_log_type_t v269 = (os_log_s *)Logger.logObject.getter(v268);
        os_log_type_t v270 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v269, v270))
        {
          uint64_t v271 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v272 = swift_slowAlloc(32LL, -1LL);
          v378 = v89;
          uint64_t v273 = v272;
          uint64_t v387 = (char *)v272;
          uint64_t v370 = v271;
          *(_DWORD *)uint64_t v271 = 136315138;
          id v369 = v271 + 4;
          type metadata accessor for SiriNLUTypesPrintUtils(0LL);
          *((void *)&v389 + 1) = v151;
          uint64_t v390 = sub_10430( &qword_284610,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
          uint64_t v274 = (char *)sub_10974(&v388);
          v266(v274, v267, v151);
          uint64_t v275 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v388);
          unint64_t v277 = v276;
          sub_6C3C(&v388);
          *(void *)&__int128 v388 = sub_6978(v275, v277, (uint64_t *)&v387);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v388, (char *)&v388 + 8);
          swift_bridgeObjectRelease(v277);
          uint64_t v278 = *(void (**)(char *, uint64_t))(v368 + 8);
          v278(v267, v151);
          uint64_t v279 = v370;
          _os_log_impl(&dword_0, v269, v270, "ConfirmInterruptionFlow#execute usoParse userDialogAct: %s", v370, 0xCu);
          swift_arrayDestroy(v273, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v280 = v273;
          unint64_t v89 = v378;
          swift_slowDealloc(v280, -1LL, -1LL);
          swift_slowDealloc(v279, -1LL, -1LL);
        }

        else
        {

          uint64_t v278 = *(void (**)(char *, uint64_t))(v150 + 8);
          v278(v267, v151);
        }

        uint64_t v144 = v385;
        uint64_t v294 = *(void (**)(char *, uint64_t))(v386 + 8);
        v294(v353, v385);
        v278(v354, v151);
        uint64_t v295 = v374;
        uint64_t v145 = v375;
        uint64_t v296 = *(void **)(v375 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_intent);
        if (!v296
          || (uint64_t v297 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent), (v298 = swift_dynamicCastObjCClass(v296, v297)) == 0))
        {
          ((void (*)(char *, uint64_t))v88)(v379, v92);
          uint64_t v301 = v347;
          uint64_t v302 = ((uint64_t (*)(char *, char *, uint64_t))v377)(v347, v376, v144);
          uint64_t v303 = (os_log_s *)Logger.logObject.getter(v302);
          os_log_type_t v304 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v303, v304))
          {
            v305 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)v305 = 0;
            _os_log_impl(&dword_0, v303, v304, "ConfirmInterruptionFlow#execute received nil playMediaIntent", v305, 2u);
            swift_slowDealloc(v305, -1LL, -1LL);
          }

          uint64_t v306 = ((uint64_t (*)(char *, uint64_t))v294)(v301, v144);
          uint64_t v307 = v380;
          static ExecuteResponse.complete()(v306);
          v384(v307);
          (*(void (**)(char *, uint64_t))(v382 + 8))(v307, v381);
          (*(void (**)(char *, uint64_t))(v343 + 8))(v89, v295);
          return sub_6C3C(&v391);
        }

        id v99 = (id)v298;
        id v299 = v296;
        ((void (*)(char *, uint64_t))v88)(v379, v92);
        id v300 = v299;
        uint64_t v174 = (uint64_t)v372;
        uint64_t v104 = v343;
        uint64_t v101 = v295;
        goto LABEL_53;
      }

      sub_1F6CC(v149, &qword_2845D0);
      uint64_t v152 = v374;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v153 = sub_6960(v147, (uint64_t)qword_2969C8);
      uint64_t v154 = v351;
      uint64_t v155 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v146 + 16))(v351, v153, v147);
      uint64_t v156 = (void *)Logger.logObject.getter(v155);
      os_log_type_t v157 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled((os_log_t)v156, v157))
      {
LABEL_41:

        uint64_t v179 = (*(uint64_t (**)(char *, uint64_t))(v146 + 8))(v154, v147);
        unint64_t v180 = v380;
        static ExecuteResponse.complete()(v179);
        v384(v180);
        (*(void (**)(char *, uint64_t))(v382 + 8))(v180, v381);
        (*(void (**)(char *, uint64_t))(v343 + 8))(v89, v152);
        ((void (*)(void **, uint64_t))v88)(v91, v92);
        return sub_6C3C(&v391);
      }

      uint64_t v158 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v158 = 0;
      uint64_t v159 = "ConfirmInterruptionFlow#execute usoParse contains no UDA";
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v175 = sub_6960(v147, (uint64_t)qword_2969C8);
      uint64_t v154 = v355;
      uint64_t v176 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v146 + 16))(v355, v175, v147);
      uint64_t v156 = (void *)Logger.logObject.getter(v176);
      os_log_type_t v157 = static os_log_type_t.error.getter();
      BOOL v177 = os_log_type_enabled((os_log_t)v156, v157);
      uint64_t v152 = v374;
      if (!v177) {
        goto LABEL_41;
      }
      uint64_t v158 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v158 = 0;
      uint64_t v159 = "ConfirmInterruptionFlow#execute Ignorning non-server-conversion parse";
    }

    _os_log_impl(&dword_0, (os_log_t)v156, v157, v159, v158, 2u);
    uint64_t v178 = v158;
    Class v91 = (void **)v379;
    swift_slowDealloc(v178, -1LL, -1LL);
    goto LABEL_41;
  }

  sub_1F6CC((uint64_t)&v388, &qword_2848C0);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v106 = v385;
  uint64_t v107 = sub_6960(v385, (uint64_t)qword_2969C8);
  uint64_t v108 = v386;
  uint64_t v109 = v377;
  uint64_t v110 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v386 + 16))(v377, v107, v106);
  uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
  os_log_type_t v112 = static os_log_type_t.error.getter();
  BOOL v113 = os_log_type_enabled(v111, v112);
  uint64_t v114 = v374;
  uint64_t v115 = v381;
  uint64_t v116 = v382;
  if (v113)
  {
    uint64_t v117 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v117 = 0;
    _os_log_impl(&dword_0, v111, v112, "ConfirmInterruptionFlow#execute nil confirmableIntent", v117, 2u);
    id v118 = v117;
    uint64_t v109 = v377;
    swift_slowDealloc(v118, -1LL, -1LL);
  }

  uint64_t v119 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v109, v106);
  uint64_t v120 = v380;
  static ExecuteResponse.complete()(v119);
  v384(v120);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v120, v115);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v89, v114);
}

uint64_t type metadata accessor for PlayMediaRCHFlowWrapper(uint64_t a1)
{
  return sub_1E58C(a1, (uint64_t *)&unk_28DAB8, (uint64_t)&nominal type descriptor for PlayMediaRCHFlowWrapper);
}

uint64_t sub_1E58C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata(a1, a3);
  }
  return result;
}

uint64_t type metadata accessor for DialogHistoryProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin21DialogHistoryProvider);
}

uint64_t type metadata accessor for PlayMediaDialogProvider(uint64_t a1)
{
  uint64_t result = qword_28B250;
  if (!qword_28B250) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayMediaDialogProvider);
  }
  return result;
}

uint64_t sub_1E61C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ConfirmInterruptionFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_1E644()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

void *sub_1E668()
{
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_shimError
                                      + 8));
  return v0;
}

uint64_t PlayMedia.ChildFlowFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t sub_1E728()
{
  return SiriEnvironmentLocating<>.siriEnvironment.setter();
}

uint64_t sub_1E748()
{
  return SiriEnvironmentLocating<>.siriEnvironment.getter();
}

uint64_t sub_1E768(uint64_t a1, uint64_t a2)
{
  return sub_1E788(a1, a2);
}

uint64_t sub_1E788(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v32 = v10;
    uint64_t v20 = v7;
    uint64_t v21 = v5;
    uint64_t v22 = v3;
    uint64_t v23 = a2;
    uint64_t v24 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "PlayMediaRCHFlowWrapper#execute", v19, 2u);
    uint64_t v25 = v24;
    a2 = v23;
    uint64_t v3 = v22;
    uint64_t v5 = v21;
    uint64_t v7 = v20;
    uint64_t v10 = v32;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_283978 != -1) {
    swift_once(&qword_283978, sub_1DBD50);
  }
  uint64_t v26 = (void *)swift_allocObject(&unk_275660, 40LL, 7LL);
  uint64_t v27 = v33;
  v26[2] = v3;
  v26[3] = v27;
  v26[4] = a2;
  aBlock[4] = sub_1EAE0;
  uint64_t v39 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_6E7C;
  aBlock[3] = &unk_275678;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain(v3);
  uint64_t v29 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v29);
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v30 = sub_6C5C(&qword_285480);
  sub_21318((unint64_t *)&qword_287950, &qword_285480, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v37, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v7, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  return swift_release(v39);
}

uint64_t sub_1EAE0()
{
  return sub_1EAEC(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1EAEC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v102 = a3;
  uint64_t v103 = a2;
  uint64_t v107 = a1;
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v100 = *(void *)(v3 - 8);
  uint64_t v101 = v3;
  __chkstk_darwin(v3);
  id v99 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_28DDB8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289EA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v104 = v8;
  uint64_t v105 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v98 = (char *)&v94 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v95 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  os_log_type_t v96 = (char *)&v94 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v94 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v94 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v94 - v25;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v27 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v106 = v14;
  uint64_t v29 = v28(v26, v27, v14);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_0, v30, v31, "PlayMediaRCHFlowWrapper#execute-async", v32, 2u);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v34 = v106;
  v33(v26, v106);
  uint64_t v35 = v107 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result;
  swift_beginAccess(v107 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result, v112, 0LL, 0LL);
  sub_FF10(v35, (uint64_t)v7, &qword_28DDB8);
  uint64_t v37 = v104;
  uint64_t v36 = v105;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v7, 1LL, v104) != 1)
  {
    uint64_t v48 = v98;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v98, v7, v37);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v48, v37);
    uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v12, v37);
    if ((_DWORD)v49 == enum case for RCHFlowResult.complete<A, B>(_:))
    {
      (*(void (**)(char *, uint64_t))(v36 + 96))(v12, v37);
      uint64_t v50 = v34;
      uint64_t v51 = *(void *)v12;
      uint64_t v52 = (void *)*((void *)v12 + 1);

      uint64_t v53 = v28(v97, v27, v50);
      uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
      os_log_type_t v55 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl(&dword_0, v54, v55, "PlayMediaRCHFlowWrapper#execute completed", v56, 2u);
        swift_slowDealloc(v56, -1LL, -1LL);
      }

      v33(v97, v106);
      id v57 = [v52 intentId];
      uint64_t v58 = (uint64_t)v103;
      if (v57)
      {
        uint64_t v59 = v57;
        uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
        uint64_t v62 = v61;
      }

      else
      {
        uint64_t v60 = 0LL;
        uint64_t v62 = 0LL;
      }

      type metadata accessor for INPlayMediaIntentHandler(0LL);
      uint64_t v85 = static INPlayMediaIntentHandler.removeContinuation(for:)(v60, v62);
      swift_bridgeObjectRelease(v62);
      sub_27764(v51, v52, v85, v58, v102);

      swift_release(v51);
      swift_release(v85);
      uint64_t v86 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
    }

    else
    {
      if ((_DWORD)v49 == enum case for RCHFlowResult.error<A, B>(_:))
      {
        (*(void (**)(char *, uint64_t))(v36 + 96))(v12, v37);
        uint64_t v63 = *(void *)v12;
        uint64_t v64 = v96;
        v28(v96, v27, v34);
        swift_errorRetain(v63);
        uint64_t v65 = swift_errorRetain(v63);
        uint64_t v66 = v34;
        uint64_t v67 = (os_log_s *)Logger.logObject.getter(v65);
        os_log_type_t v68 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v70 = swift_slowAlloc(32LL, -1LL);
          uint64_t v111 = v70;
          *(_DWORD *)uint64_t v69 = 136315138;
          swift_getErrorValue(v63, v110, v109);
          uint64_t v71 = Error.localizedDescription.getter(v109[1], v109[2]);
          unint64_t v73 = v72;
          uint64_t v108 = sub_6978(v71, v72, &v111);
          uint64_t v36 = v105;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, v109);
          swift_bridgeObjectRelease(v73);
          swift_errorRelease(v63);
          swift_errorRelease(v63);
          _os_log_impl(&dword_0, v67, v68, "PlayMediaRCHFlowWrapper#execute error: %s", v69, 0xCu);
          swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v74 = v70;
          uint64_t v48 = v98;
          swift_slowDealloc(v74, -1LL, -1LL);
          swift_slowDealloc(v69, -1LL, -1LL);

          uint64_t v75 = v96;
          uint64_t v76 = v106;
        }

        else
        {
          swift_errorRelease(v63);
          swift_errorRelease(v63);

          uint64_t v75 = v64;
          uint64_t v76 = v66;
        }

        uint64_t v87 = ((uint64_t (*)(char *, uint64_t))v33)(v75, v76);
        unint64_t v88 = v103;
        uint64_t v90 = v100;
        uint64_t v89 = v101;
        Class v91 = v99;
        static ExecuteResponse.complete()(v87);
        v88(v91);
        swift_errorRelease(v63);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v89);
      }

      else
      {
        if ((_DWORD)v49 != enum case for RCHFlowResult.cancelled<A, B>(_:))
        {
          uint64_t v92 = v99;
          static ExecuteResponse.complete()(v49);
          v103(v92);
          (*(void (**)(char *, uint64_t))(v100 + 8))(v92, v101);
          uint64_t v93 = *(void (**)(char *, uint64_t))(v36 + 8);
          v93(v48, v37);
          return ((uint64_t (*)(char *, uint64_t))v93)(v12, v37);
        }

        os_log_type_t v77 = v95;
        uint64_t v78 = v28(v95, v27, v34);
        uint64_t v79 = (os_log_s *)Logger.logObject.getter(v78);
        os_log_type_t v80 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v79, v80))
        {
          os_log_type_t v81 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)os_log_type_t v81 = 0;
          _os_log_impl(&dword_0, v79, v80, "PlayMediaRCHFlowWrapper#execute cancelled, closing", v81, 2u);
          uint64_t v82 = v81;
          uint64_t v34 = v106;
          swift_slowDealloc(v82, -1LL, -1LL);
        }

        uint64_t v83 = ((uint64_t (*)(char *, uint64_t))v33)(v77, v34);
        uint64_t v84 = v99;
        static ExecuteResponse.complete()(v83);
        v103(v84);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v84, v101);
      }

      uint64_t v86 = *(uint64_t (**)(char *, uint64_t))(v36 + 8);
    }

    return v86(v48, v37);
  }

  sub_1F6CC((uint64_t)v7, &qword_28DDB8);
  uint64_t v38 = v28(v24, v27, v34);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl( &dword_0,  v39,  v40,  "PlayMediaRCHFlowWrapper#execute no result from action, assuming this is the prior-execution",  v41,  2u);
    uint64_t v42 = v41;
    uint64_t v34 = v106;
    swift_slowDealloc(v42, -1LL, -1LL);
  }

  v33(v24, v34);
  uint64_t v43 = v107;
  uint64_t v111 = *(void *)(v107 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playMediaFlow);
  swift_retain(v111);
  swift_retain(v43);
  uint64_t v44 = sub_6C5C(&qword_288AF8);
  uint64_t v45 = sub_21318(&qword_28DDF0, &qword_288AF8, (uint64_t)&protocol conformance descriptor for RCHFlow<A>);
  uint64_t v46 = v99;
  static ExecuteResponse.ongoing<A>(next:childCompletion:)(&v111, sub_27540, v43, v44, v45);
  swift_release(v43);
  swift_release(v111);
  v103(v46);
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v46, v101);
}

uint64_t sub_1F3C4( uint8_t *a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v43 = a4;
  uint64_t v9 = type metadata accessor for Parse(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v37 - v14;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = sub_6960(v16, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, v16);
  uint64_t v42 = v17;
  uint64_t v21 = *(uint64_t (**)(char *, uint8_t *, uint64_t))(v10 + 16);
  uint64_t v46 = a1;
  uint64_t v22 = v21(v15, a1, v9);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter(v23);
  uint64_t v41 = v10;
  os_log_type_t v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc(12LL, -1LL);
    os_log_type_t v40 = a2;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    v48[0] = v38;
    uint64_t v39 = a3;
    *(_DWORD *)uint64_t v27 = 136315138;
    v37[1] = v27 + 4;
    v21(v13, (uint8_t *)v15, v9);
    uint64_t v28 = String.init<A>(describing:)(v13, v9);
    unint64_t v30 = v29;
    uint64_t v47 = sub_6978(v28, v29, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48);
    __n128 v31 = swift_bridgeObjectRelease(v30);
    (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v15, v9, v31);
    _os_log_impl(&dword_0, v23, v25, "AppResolutionStrategy#makeAppResolutionStateFromParse %s", v27, 0xCu);
    uint64_t v32 = v38;
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    uint64_t v33 = v27;
    a2 = v40;
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v9);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v16);
  uint64_t v34 = type metadata accessor for AppResolutionStrategy(0LL, v43, v44, v45);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_21AC88, v34);
  sub_136558(v46, v34, WitnessTable, v48);
  a2(v48);
  return sub_1F6CC((uint64_t)v48, &qword_28D080);
}

uint64_t sub_1F6CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_6C5C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for AppIdentifierAppResolutionProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin34AppIdentifierAppResolutionProvider);
}

uint64_t sub_1F728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1F750();
  *a1 = v2;
  return swift_retain(v2);
}

uint64_t sub_1F750()
{
  return *(void *)(v0 + 16);
}

uint64_t CommonAppResolver.resolveApp(forIntent:withConversionState:_:)( void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = 0xD000000000000010LL;
  uint64_t v10 = *v5;
  uint64_t v11 = sub_6C5C(&qword_287EE8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  os_log_type_t v24 = a1;
  uint64_t v14 = *(void *)(v10 + class metadata base offset for CommonAppResolver);
  a1;
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286C70);
  if (swift_dynamicCast(&v25, &v24, v14, v15, 6LL))
  {
    uint64_t v16 = *((void *)&v26 + 1);
    uint64_t v17 = v27;
    sub_6EA8(&v25, *((uint64_t *)&v26 + 1));
    CommonIntentSignals.getPreResolvedApp()(v16, v17);
    sub_6C3C(&v25);
    uint64_t v18 = sub_6C5C(&qword_285EA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48LL))(v13, 1LL, v18) == 1)
    {
      uint64_t v19 = 0x800000000021FD00LL;
    }

    else
    {
      uint64_t v9 = 0x6552657250707061LL;
      uint64_t v19 = 0xEE006465766C6F73LL;
    }
  }

  else
  {
    uint64_t v27 = 0LL;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    sub_1F6CC((uint64_t)&v25, &qword_2858C8);
    uint64_t v20 = sub_6C5C(&qword_285EA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v13, 1LL, 1LL, v20);
    uint64_t v19 = 0x800000000021FD00LL;
  }

  uint64_t v21 = swift_allocObject(&unk_272D40, 32LL, 7LL);
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + sub_6C3C(v0 + 24) = a4;
  __chkstk_darwin(v21);
  swift_retain(a4);
  sub_CE9D0( (uint64_t)"commonAppResolver",  17LL,  2u,  (uint64_t)sub_188C28,  v21,  "name=%{signpost.telemetry:string1,public}@ enableTelemetry=YES ",  63LL,  2,  v9,  v19,  (void (*)(uint64_t (*)(), uint64_t))sub_188C2C,  (uint64_t)(&v23 - 6));
  swift_bridgeObjectRelease(v19);
  swift_release(v21);
  return sub_1F6CC((uint64_t)v13, &qword_287EE8);
}

uint64_t sub_1F9D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1FFB8( a1,  a2,  a3,  a4,  &qword_287DB8,  (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_1F9E4(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_30;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_6C5C(&qword_284D68);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_6C3C(v0 + 2) = v8;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8]) {
      memmove(v13, v14, v8);
    }
    *((void *)a4 + sub_6C3C(v0 + 2) = 0LL;
    goto LABEL_28;
  }

  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }

LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

    if ((v86 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_31;
    }
    goto LABEL_36;
  }

  sub_1F6CC((uint64_t)v92, &qword_28DDB8);
  uint64_t v93 = (uint64_t)v201;
  uint64_t v94 = 0LL;
  if ((v87 & 0x2000000000000000LL) == 0) {
    goto LABEL_30;
  }
LABEL_35:
  if ((v87 & 0xF00000000000000LL) != 0)
  {
LABEL_31:
    uint64_t v198 = v94;
    uint64_t v95 = sub_6C5C(&qword_285478);
    inited = swift_initStackObject(v95, &v210);
    *(_OWORD *)(inited + 16) = xmmword_215760;
    *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6449707061LL;
    *(void *)(inited + 40) = 0xE500000000000000LL;
    uint64_t v97 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v87);
    *(void *)(inited + 48) = v97;
    *(void *)(inited + 56) = 1701080931LL;
    *(void *)(inited + 64) = 0xE400000000000000LL;
    *(NSNumber *)(inited + 7sub_6C3C(v0 + 2) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 80) = 0x70616C45656D6974LL;
    *(void *)(inited + 88) = 0xEB00000000646573LL;
    uint64_t v98 = v180;
    sub_FF10(v93, v180, &qword_285470);
    id v99 = type metadata accessor for AppSelectionReport(0LL);
    uint64_t v100 = *(void *)(v99 - 8);
    uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
    uint64_t v102 = v101(v98, 1LL, v99);
    uint64_t v199 = v100;
    if (v102 == 1)
    {
      sub_1F6CC(v98, &qword_285470);
    }

    else
    {
      AppSelectionReport.timeElapsed.getter();
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v99);
    }

    uint64_t v116 = (void *)v205;
    v117.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    *(NSNumber *)(inited + 96) = v117;
    *(void *)(inited + 104) = 0x65636E6174736E69LL;
    *(void *)(inited + 11sub_6C3C(v0 + 2) = 0xE800000000000000LL;
    id v118 = v181;
    uint64_t v119 = static FeatureFlagProvider.shared.getter(v117.super.super.isa);
    FeatureFlagProvider.appSelectionUsageCounter.getter(v119);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v118, v183);
    *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 128) = 0x756F43736D657469LL;
    *(void *)(inited + 136) = 0xEA0000000000746ELL;
    if (v116)
    {
      uint64_t v120 = [v116 mediaItems];
      if (v120)
      {
        uint64_t v121 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
        uint64_t v122 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v120, v121);

        if ((unint64_t)v122 >> 62)
        {
          if (v122 < 0) {
            BOOL v177 = v122;
          }
          else {
            BOOL v177 = v122 & 0xFFFFFFFFFFFFFF8LL;
          }
          swift_bridgeObjectRetain(v122);
          _CocoaArrayWrapper.endIndex.getter(v177);
          swift_bridgeObjectRelease(v122);
        }

        swift_bridgeObjectRelease(v122);
      }

      *(NSNumber *)(inited + 1sub_6C3C(v0 + 44) = Int._bridgeToObjectiveC()();
      *(void *)(inited + 15sub_6C3C(v0 + 2) = 0x7265666E49707061LL;
      *(void *)(inited + 160) = 0xEB00000000646572LL;
      uint64_t v123 = v116;
      os_log_type_t v124 = INPlayMediaIntent.appInferred.getter(v123);
    }

    else
    {
      *(NSNumber *)(inited + 1sub_6C3C(v0 + 44) = Int._bridgeToObjectiveC()();
      *(void *)(inited + 15sub_6C3C(v0 + 2) = 0x7265666E49707061LL;
      *(void *)(inited + 160) = 0xEB00000000646572LL;
      os_log_type_t v124 = 1;
    }

    *(void *)(inited + 168) = [objc_allocWithZone(NSNumber) initWithBool:v124 & 1];
    *(void *)(inited + 176) = 0x706D657474417361LL;
    *(void *)(inited + 184) = 0xEB00000000646574LL;
    *(void *)(inited + 19sub_6C3C(v0 + 2) = objc_msgSend( objc_allocWithZone(NSNumber),  "initWithBool:",  v101(v93, 1, v99) != 1);
    *(void *)(inited + 200) = 0x646573557361LL;
    *(void *)(inited + 208) = 0xE600000000000000LL;
    uint64_t v125 = v184;
    sub_FF10(v93, v184, &qword_285470);
    uint64_t v126 = v101(v125, 1LL, v99);
    NSNumber v127 = (uint64_t)v186;
    if ((_DWORD)v126 == 1)
    {
      sub_1F6CC(v125, &qword_285470);
      uint64_t v128 = 0;
    }

    else
    {
      uint64_t v128 = AppSelectionReport.appSelectionUsed.getter(v126);
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v125, v99);
    }

    uint64_t v129 = (uint64_t)v190;
    *(void *)(inited + 216) = [objc_allocWithZone(NSNumber) initWithBool:v128 & 1];
    strcpy((char *)(inited + 224), "asExperimentId");
    *(_BYTE *)(inited + 2sub_6C3C(v0 + 39) = -18;
    uint64_t v130 = v185;
    sub_FF10(v93, v185, &qword_285470);
    if (v101(v130, 1LL, v99) == 1)
    {
      sub_1F6CC(v130, &qword_285470);
      id v131 = 0xE000000000000000LL;
    }

    else
    {
      AppSelectionReport.experimentId.getter();
      id v131 = v132;
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v130, v99);
    }

    uint64_t v133 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v131);
    *(void *)(inited + 240) = v133;
    strcpy((char *)(inited + 248), "asTreatmentId");
    *(_WORD *)(inited + 26sub_6C3C(v0 + 2) = -4864;
    sub_FF10(v93, v127, &qword_285470);
    if (v101(v127, 1LL, v99) == 1)
    {
      sub_1F6CC(v127, &qword_285470);
      os_log_type_t v134 = 0xE000000000000000LL;
      os_log_type_t v135 = v199;
    }

    else
    {
      AppSelectionReport.treatmentId.getter();
      os_log_type_t v134 = v136;
      os_log_type_t v135 = v199;
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v127, v99);
    }

    uint64_t v137 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v134);
    *(void *)(inited + 264) = v137;
    *(void *)(inited + 27sub_6C3C(v0 + 2) = 0x756F6C6C6F527361LL;
    *(void *)(inited + 280) = 0xEB00000000644974LL;
    uint64_t v138 = v187;
    sub_FF10(v93, v187, &qword_285470);
    if (v101(v138, 1LL, v99) == 1)
    {
      sub_1F6CC(v138, &qword_285470);
      unint64_t v139 = 0xE000000000000000LL;
    }

    else
    {
      AppSelectionReport.rolloutId.getter();
      unint64_t v139 = v140;
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v138, v99);
    }

    uint64_t v141 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v139);
    *(void *)(inited + 288) = v141;
    *(void *)(inited + 296) = 0x6469666E6F437361LL;
    *(void *)(inited + 304) = 0xEF73624165636E65LL;
    uint64_t v142 = v188;
    sub_FF10(v93, v188, &qword_285470);
    if (v101(v142, 1LL, v99) == 1)
    {
      sub_1F6CC(v142, &qword_285470);
    }

    else
    {
      AppSelectionReport.confidenceAbs.getter();
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v142, v99);
    }

    uint64_t v143 = (uint64_t)v189;
    *(NSNumber *)(inited + 31sub_6C3C(v0 + 2) = Double._bridgeToObjectiveC()();
    *(void *)(inited + 320) = 0xD000000000000010LL;
    *(void *)(inited + 328) = 0x800000000021E380LL;
    sub_FF10(v93, v143, &qword_285470);
    if (v101(v143, 1LL, v99) == 1)
    {
      sub_1F6CC(v143, &qword_285470);
    }

    else
    {
      AppSelectionReport.confidenceOddsRatio.getter();
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v143, v99);
    }

    *(NSNumber *)(inited + 336) = Double._bridgeToObjectiveC()();
    *(void *)(inited + 3sub_6C3C(v0 + 44) = 0x64497070417361LL;
    *(void *)(inited + 35sub_6C3C(v0 + 2) = 0xE700000000000000LL;
    sub_FF10(v93, v129, &qword_285470);
    if (v101(v129, 1LL, v99) == 1)
    {
      sub_1F6CC(v129, &qword_285470);
      uint64_t v144 = 0xE000000000000000LL;
    }

    else
    {
      AppSelectionReport.bundleIdentifier.getter();
      uint64_t v144 = v145;
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v129, v99);
    }

    uint64_t v146 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v144);
    *(void *)(inited + 360) = v146;
    *(void *)(inited + 368) = 0x7265735577656ELL;
    *(void *)(inited + 376) = 0xE700000000000000LL;
    uint64_t v147 = v191;
    sub_FF10(v93, v191, &qword_285470);
    if (v101(v147, 1LL, v99) == 1)
    {
      sub_1F6CC(v147, &qword_285470);
      uint64_t v148 = 0;
    }

    else
    {
      uint64_t v148 = AppSelectionReport.newUser.getter();
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v147, v99);
    }

    *(void *)(inited + 384) = [objc_allocWithZone(NSNumber) initWithBool:v148 & 1];
    strcpy((char *)(inited + 392), "successCount");
    *(_BYTE *)(inited + 405) = 0;
    *(_WORD *)(inited + 406) = -5120;
    *(NSNumber *)(inited + 408) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 416) = 0xD000000000000010LL;
    *(void *)(inited + 4sub_6C3C(v0 + 24) = 0x800000000021E3A0LL;
    uint64_t v149 = v101(v93, 1LL, v99) != 1;
    sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(NSNumber *)(inited + 43sub_6C3C(v0 + 2) = NSNumber.init(integerLiteral:)(v149);
    *(void *)(inited + 440) = 0x6F43646573557361LL;
    *(void *)(inited + 448) = 0xEB00000000746E75LL;
    uint64_t v150 = v192;
    sub_FF10(v93, v192, &qword_285470);
    uint64_t v151 = v101(v150, 1LL, v99);
    if ((_DWORD)v151 == 1)
    {
      sub_1F6CC(v150, &qword_285470);
      uint64_t v152 = v206;
      uint64_t v153 = v193;
    }

    else
    {
      uint64_t v154 = AppSelectionReport.appSelectionUsed.getter(v151);
      (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v150, v99);
      uint64_t v152 = v206;
      uint64_t v153 = v193;
      if ((v154 & 1) != 0)
      {
        uint64_t v155 = 1LL;
LABEL_77:
        *(NSNumber *)(inited + 456) = NSNumber.init(integerLiteral:)(v155);
        strcpy((char *)(inited + 464), "responseCode");
        *(_BYTE *)(inited + 47sub_6C3C(v0 + 7) = 0;
        *(_WORD *)(inited + 478) = -5120;
        v208[0] = (uint64_t)v204;
        dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
        os_log_type_t v157 = v156;
        uint64_t v158 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v157);
        *(void *)(inited + 480) = v158;
        uint64_t v159 = sub_75420(inited);
        v203(v153, v202, v152);
        uint64_t v160 = swift_bridgeObjectRetain_n(v159, 2LL);
        uint64_t v161 = (os_log_s *)Logger.logObject.getter(v160);
        uint64_t v162 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v161, v162))
        {
          unint64_t v163 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          os_log_type_t v164 = swift_slowAlloc(32LL, -1LL);
          v208[0] = v164;
          *(_DWORD *)unint64_t v163 = 136315138;
          id v204 = v163 + 4;
          uint64_t v165 = sub_1641C(0LL, &qword_285488, &OBJC_CLASS___NSObject_ptr);
          uint64_t v166 = swift_bridgeObjectRetain(v159);
          Class v167 = Dictionary.description.getter( v166,  &type metadata for String,  v165,  &protocol witness table for String);
          id v168 = v93;
          uint64_t v170 = v169;
          swift_bridgeObjectRelease(v159);
          id v207 = sub_6978(v167, v170, v208);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v207, v208);
          swift_bridgeObjectRelease_n(v159, 2LL);
          uint64_t v171 = v170;
          uint64_t v93 = v168;
          swift_bridgeObjectRelease(v171);
          _os_log_impl( &dword_0,  v161,  v162,  "PlayMediaRCHFlowWrapper#logCoreAnalytics recording result analytics data: %s",  v163,  0xCu);
          swift_arrayDestroy(v164, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v164, -1LL, -1LL);
          swift_slowDealloc(v163, -1LL, -1LL);

          uint64_t v172 = v193;
          id v173 = v206;
        }

        else
        {

          swift_bridgeObjectRelease_n(v159, 2LL);
          uint64_t v172 = v153;
          id v173 = v152;
        }

        v200(v172, v173);
        uint64_t v114 = (void *)v205;
        uint64_t v174 = String._bridgeToObjectiveC()();
        uint64_t v175 = swift_allocObject(&unk_2754D0, 24LL, 7LL);
        *(void *)(v175 + 16) = v159;
        v208[4] = (uint64_t)CommonFlowStrategy.makeParameterMetadata(intent:);
        uint64_t v209 = v175;
        v208[0] = (uint64_t)_NSConcreteStackBlock;
        v208[1] = 1107296256LL;
        v208[2] = (uint64_t)sub_2DABC;
        v208[3] = (uint64_t)&unk_2754E8;
        uint64_t v176 = _Block_copy(v208);
        swift_release(v209);
        AnalyticsSendEventLazy(v174, v176);
        _Block_release(v176);

        goto LABEL_81;
      }
    }

    uint64_t v155 = 0LL;
    goto LABEL_77;
  }

    __break(1u);
    goto LABEL_31;
  }

  sub_1CC78C(v16, a3 & 1);
  uint64_t v18 = sub_9A744(v8, v7);
  if ((v17 & 1) == (v19 & 1))
  {
    uint64_t v13 = v18;
    uint64_t v20 = a1;
    if ((v17 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_11:
    uint64_t v22 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0LL, 0LL);
    swift_willThrow();
    uint64_t v58 = v22;
    swift_errorRetain(v22);
    uint64_t v23 = sub_6C5C(&qword_284010);
    if ((swift_dynamicCast(v23, &v58, v23, &type metadata for _MergeError, 0LL) & 1) == 0)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease_n(a2, 2LL);
      swift_bridgeObjectRelease_n(v20, 2LL);
      return swift_errorRelease(v58);
    }

    goto LABEL_34;
  }

      uint64_t v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v10 = *(void **)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
  }

  int64_t v7 = (uint64_t)[objc_allocWithZone(SAAceView) init];
  if ((a3 & 0xC000000000000001LL) != 0)
  {
LABEL_33:
    uint64_t v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
    goto LABEL_25;
  }

  if ((v9 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (v9 < *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v19 = *(id *)(a3 + 8 * v9 + 32);
LABEL_25:
    uint64_t v20 = v19;
    [(id)v7 setDialog:v19];

    sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    uint64_t v21 = NSNumber.init(integerLiteral:)(a4 & 1).super.super.isa;
    [(id)v7 setListenAfterSpeaking:v21];

LABEL_26:
    *a5 = v7;
    return;
  }

  __break(1u);
}

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

        swift_bridgeObjectRelease("QueryStationUser");
        swift_bridgeObjectRelease(v39);
        uint64_t v2 = v148;
        uint64_t v21 = v149;
        uint64_t v3 = v150;
        goto LABEL_37;
      }

      goto LABEL_35;
    }
  }

  uint64_t v54 = "QueryStationUser";
LABEL_36:
  swift_bridgeObjectRelease(v54);
LABEL_37:
  uint64_t v1 = v164;
LABEL_38:
  swift_arrayDestroy(&qword_26AD30, 1LL, &type metadata for String);
  uint64_t v33 = 0xD000000000000015LL;
  unint64_t v6 = "QueryStationDecade";
  swift_bridgeObjectRetain("QueryStationDecade");
  uint64_t v62 = (__objc2_ivar_list *)-[__objc2_ivar_list mediaItems](v1, "mediaItems");
  if (!v62)
  {
LABEL_54:
    uint64_t v79 = (uint64_t)v6;
LABEL_118:
    swift_bridgeObjectRelease(v79);
    goto LABEL_119;
  }

  uint64_t v44 = v62;
  uint64_t v35 = v1;
  uint64_t v63 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v63);

  if (!((unint64_t)v39 >> 62))
  {
LABEL_117:
    swift_bridgeObjectRelease("QueryStationDecade");
    uint64_t v79 = v39;
    goto LABEL_118;
  }

  if (v39 < 0) {
    uint64_t v141 = v39;
  }
  else {
    uint64_t v141 = v39 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v39);
  uint64_t v44 = (__objc2_ivar_list *)_CocoaArrayWrapper.endIndex.getter(v141);
  swift_bridgeObjectRelease(v39);
  if (!v44) {
    goto LABEL_117;
  }
LABEL_41:
  if ((v39 & 0xC000000000000001LL) != 0)
  {
LABEL_127:
    uint64_t v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v39);
    goto LABEL_44;
  }

  if (!*(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFF8LL)))
  {
    __break(1u);
LABEL_129:
    uint64_t v95 = v33;
    uint64_t v133 = v154;
    goto LABEL_104;
  }

  uint64_t v64 = *(id *)(v39 + 32);
LABEL_44:
  uint64_t v65 = v64;
  swift_bridgeObjectRelease(v39);
  uint64_t v66 = [v65 privateMediaItemValueData];

  if (!v66) {
    goto LABEL_54;
  }
  uint64_t v67 = [v66 internalSignals];

  if (!v67) {
    goto LABEL_54;
  }
  uint64_t v34 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v67, &type metadata for String);

  uint64_t v39 = *((void *)v34 + 2);
  if (!v39)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v79 = (uint64_t)v34;
    goto LABEL_118;
  }

  uint64_t v149 = v21;
  uint64_t v150 = v3;
  os_log_type_t v68 = *((void *)v34 + 4);
  uint64_t v69 = (const char *)*((void *)v34 + 5);
  if ((v68 != v33 || v69 != v6) && (_stringCompareWithSmolCheck(_:_:expecting:)(v68, v69) & 1) == 0)
  {
    if (v39 != 1)
    {
      uint64_t v44 = (__objc2_ivar_list *)(v34 + 56);
      os_log_type_t v80 = 1LL;
      while (1)
      {
        os_log_type_t v81 = v80 + 1;
        if (__OFADD__(v80, 1LL)) {
          break;
        }
        uint64_t v82 = v44[-1];
        uint64_t v83 = (const char *)*v44;
        uint64_t v84 = v82 == v33 && v83 == v6;
        if (v84
          || (((uint64_t (*)(void, void))_stringCompareWithSmolCheck(_:_:expecting:))(v82, v83) & 1) != 0)
        {
          goto LABEL_50;
        }

        v44 += 2;
        ++v80;
        if (v81 == v39) {
          goto LABEL_66;
        }
      }

  __break(1u);
  return result;
}

uint64_t sub_1FB30(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1FFB8(a1, a2, a3, a4, &qword_287DF8, (uint64_t (*)(void))&type metadata accessor for Device);
}

void *sub_1FB44(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_6C5C(&qword_287DF0);
      uint64_t v11 = (void *)swift_allocObject(v10, 72 * v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 72);
      uint64_t v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[9 * v8 + 4]) {
          memmove(v13, a4 + 4, 72 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
    }

    sub_CA07C(0LL, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_1FC6C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_6C5C(&qword_284018);
      uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4]) {
          memmove(v14, a4 + 4, 16 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_C9E6C(0LL, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_1FD78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_6C5C(&qword_28AA98);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + sub_6C3C(v0 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + sub_6C3C(v0 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 16 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_1FE70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1FFB8(a1, a2, a3, a4, &qword_287DB0, (uint64_t (*)(void))&type metadata accessor for RREntity);
}

uint64_t sub_1FE84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1FFB8( a1,  a2,  a3,  a4,  &qword_287E18,  (uint64_t (*)(void))&type metadata accessor for FromEntity);
}

void *sub_1FE98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_6C5C(&qword_287E00);
      uint64_t v11 = (void *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4]) {
          memmove(v13, a4 + 4, 24 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
    }

    sub_C9D78(0LL, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

uint64_t sub_1FFB8( char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v10 = a2;
  }

  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v13 = sub_6C5C(a5);
  uint64_t v14 = *(void *)(a6(0LL) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  size_t v19 = j__malloc_size(v18);
  if (!v15) {
    goto LABEL_29;
  }
  if (v19 - v17 == 0x8000000000000000LL && v15 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  uint64_t v21 = a6(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    unint64_t v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(void *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }

    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }

    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_CA280(0LL, v11, v24, a4, a6);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t getEnumTagSinglePayload for CustomAppResolutionProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_6C3C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_20210()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 24LL);
  uint64_t v3 = type metadata accessor for App(0LL);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  swift_bridgeObjectRetain(v2);
  return App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)( v1,  v2,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
}

uint64_t sub_20280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void sub_202AC(void *a1, uint64_t a2)
{
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  if (swift_dynamicCastObjCClass(a1, v4))
  {
    id v5 = a1;
    INPlayMediaIntent.markDisambiguationReasonResponseResultType(resolutionResultType:)(a2);
  }

uint64_t sub_20328(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a2;
  uint64_t v28 = a1;
  unint64_t v29 = a4;
  uint64_t v27 = a3;
  uint64_t v8 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = swift_allocObject(&unk_272E70, 32LL, 7LL);
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + sub_6C3C(v0 + 24) = a6;
  uint64_t v16 = qword_2838D0;
  swift_retain(a6);
  if (v16 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (v17 + 33) & ~v17;
  unint64_t v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = swift_allocObject(&unk_272E98, v19 + 16, v17 | 7);
  *(void *)(v20 + 16) = "resolveSelectedApp";
  *(void *)(v20 + sub_6C3C(v0 + 24) = 18LL;
  *(_BYTE *)(v20 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20 + v18, v12, v8);
  uint64_t v21 = (void *)(v20 + v19);
  void *v21 = sub_188C28;
  v21[1] = v15;
  uint64_t v22 = swift_retain(v15);
  uint64_t v23 = static os_signpost_type_t.begin.getter(v22);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v23,  &dword_0,  qword_296AA0,  "resolveSelectedApp",  18LL,  2LL,  v14,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v24 = swift_allocObject(&unk_272EC0, 32LL, 7LL);
  *(void *)(v24 + 16) = sub_33CC4;
  *(void *)(v24 + sub_6C3C(v0 + 24) = v20;
  swift_retain(v20);
  sub_186DF8((uint64_t)sub_33CB0, v24, v31, v27, v29, v28, v30);
  swift_release(v20);
  swift_release(v24);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return swift_release(v15);
}

uint64_t CommonAppResolver.appInstalled(bundleIdentifier:sharedUserId:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  return sub_188C38(a1, a2, a5, a6);
}

uint64_t sub_20584(uint64_t a1)
{
  return sub_20594( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void **)(v1 + 48));
}

uint64_t sub_20594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  v36[0] = a4;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v36 - v16;
  swift_bridgeObjectRetain(a3);
  uint64_t v18 = swift_bridgeObjectRetain(a1);
  unint64_t v19 = sub_208B0(v18, a2, a3);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a3);
  uint64_t v20 = v19[2];
  swift_bridgeObjectRelease(v19);
  if (v20)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v21 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v21, v11);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "CommonIntentAppResolver#appInstalled app is installed", v25, 2u);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return ((uint64_t (*)(uint64_t))v36[0])(1LL);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v27 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v27, v11);
    unint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      __n128 v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)__n128 v31 = 0;
      _os_log_impl( &dword_0,  v29,  v30,  "CommonIntentAppResolver#appInstalled app missing (at least from cache), refreshing...",  v31,  2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    uint64_t v32 = (void *)((char *)a6 + *(void *)(class metadata base offset for CommonAppResolver + *a6 + 48));
    uint64_t v33 = v32[3];
    uint64_t v34 = v32[4];
    sub_6EA8(v32, v33);
    uint64_t v35 = (void *)swift_allocObject(&unk_272F88, 48LL, 7LL);
    v35[2] = a2;
    v35[3] = a3;
    v35[4] = v36[0];
    void v35[5] = a5;
    swift_bridgeObjectRetain(a3);
    swift_retain(a5);
    InstalledAppProviding.installedApps(for:sharedUserId:useCache:completion:)( 0LL,  0LL,  0LL,  0LL,  sub_189840,  v35,  v33,  v34);
    return swift_release(v35);
  }

void *sub_208B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = type metadata accessor for InstalledApp(0LL);
  uint64_t v7 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v30 - v10;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = *(void *)(v9 + 72);
    v30[1] = v3;
    uint64_t v31 = (v14 + 32) & ~v14;
    uint64_t v16 = a1 + v31;
    uint64_t v34 = v15;
    uint64_t v35 = v9;
    uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v17 = v32;
    for (uint64_t i = v33(v11, a1 + v31, v32); ; uint64_t i = v33(v11, v16, v17))
    {
      uint64_t v20 = InstalledApp.bundleIdentifier.getter(i);
      uint64_t v22 = v21;
      if (v20 == a2 && v21 == a3)
      {
        swift_bridgeObjectRelease(a3);
      }

      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21);
        swift_bridgeObjectRelease(v22);
        if ((v23 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v17);
          uint64_t v19 = v34;
          goto LABEL_4;
        }
      }

      uint64_t v24 = a3;
      unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v25(v36, v11, v17);
      uint64_t v26 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      {
        sub_C70D8(0, v26[2] + 1LL, 1);
        uint64_t v26 = v37;
      }

      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1)
      {
        sub_C70D8(v27 > 1, v28 + 1, 1);
        uint64_t v26 = v37;
      }

      v26[2] = v28 + 1;
      uint64_t v19 = v34;
      uint64_t v29 = (uint64_t)v26 + v31 + v28 * v34;
      uint64_t v17 = v32;
      v25((char *)v29, v36, v32);
      uint64_t v37 = v26;
      a3 = v24;
LABEL_4:
      v16 += v19;
      if (!--v13) {
        return v37;
      }
    }
  }

  return result;
}

uint64_t sub_20ACC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = class metadata base offset for CommonAppResolver + *v2;
  uint64_t v10 = (uint64_t)v2 + *(void *)(v9 + 24);
  uint64_t v11 = (uint64_t)v2 + *(void *)(v9 + 32);
  swift_beginAccess(v11, v30, 0LL, 0LL);
  sub_157C4(v11, (uint64_t)v31);
  uint64_t v12 = sub_20DCC(a1, a2, v10, (uint64_t)v31);
  sub_6C3C(v31);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v5, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  swift_retain_n(v12, 2LL);
  uint64_t v14 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v26 = a1;
    uint64_t v18 = v17;
    uint64_t v27 = swift_slowAlloc(64LL, -1LL);
    v31[0] = v27;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v28 = v6;
    uint64_t v29 = v12;
    uint64_t v19 = type metadata accessor for App(0LL);
    uint64_t v20 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v19, v20);
    unint64_t v23 = v22;
    uint64_t v29 = sub_6978(v21, v22, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30);
    swift_release_n(v12, 2LL);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v18 + 1sub_6C3C(v0 + 2) = 2082;
    swift_bridgeObjectRetain(a2);
    uint64_t v29 = sub_6978(v26, a2, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v15,  v16,  "CommonIntentAppResolver#app created app as: %{public}s from bundleIdentifier: %{public}s",  (uint8_t *)v18,  0x16u);
    uint64_t v24 = v27;
    swift_arrayDestroy(v27, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_release_n(v12, 2LL);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  return v12;
}

uint64_t sub_20DCC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = static BundleIdentifiers.extensionBundleIdentifier(for:deviceProvider:featureFlagProvider:)(a1, a2, a3, a4);
  uint64_t v14 = v13;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  swift_bridgeObjectRetain_n(v14, 2LL);
  uint64_t v16 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc(22LL, -1LL);
    uint64_t v31 = v9;
    uint64_t v20 = v19;
    uint64_t v30 = swift_slowAlloc(64LL, -1LL);
    uint64_t v34 = v14;
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v20 = 136315394;
    v29[1] = v20 + 4;
    uint64_t v33 = v12;
    swift_bridgeObjectRetain(v14);
    uint64_t v21 = sub_6C5C(&qword_284600);
    uint64_t v22 = String.init<A>(describing:)(&v33, v21);
    uint64_t v32 = v12;
    uint64_t v23 = a1;
    unint64_t v25 = v24;
    uint64_t v33 = sub_6978(v22, v24, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease_n(v14, 2LL);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v20 + 1sub_6C3C(v0 + 2) = 2080;
    swift_bridgeObjectRetain(a2);
    uint64_t v33 = sub_6978(v23, a2, &v35);
    a1 = v23;
    uint64_t v12 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v17,  v18,  "App#resolveWithSystemExtension resolved system extension: %s for bundle: %s",  (uint8_t *)v20,  0x16u);
    uint64_t v26 = v30;
    swift_arrayDestroy(v30, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease_n(v14, 2LL);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  uint64_t v27 = type metadata accessor for App(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  swift_bridgeObjectRetain(a2);
  return App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)( a1,  a2,  v12,  v14,  0LL,  0LL,  0LL,  0LL);
}

uint64_t PlayMediaAppResolver.postResolve(for:app:resolutionResultType:completion:)( void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a3;
  unint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = swift_allocObject(&unk_26E5A0, 32LL, 7LL);
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + sub_6C3C(v0 + 24) = a5;
  uint64_t v15 = qword_2838D0;
  swift_retain(a5);
  if (v15 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (v16 + 33) & ~v16;
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v19 = swift_allocObject(&unk_26E5C8, v18 + 16, v16 | 7);
  *(void *)(v19 + 16) = "postResolve";
  *(void *)(v19 + sub_6C3C(v0 + 24) = 11LL;
  *(_BYTE *)(v19 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v11, v7);
  uint64_t v20 = (uint64_t (**)(unsigned __int8 *))(v19 + v18);
  *uint64_t v20 = sub_CF294;
  v20[1] = (uint64_t (*)(unsigned __int8 *))v14;
  uint64_t v21 = swift_retain(v14);
  uint64_t v22 = static os_signpost_type_t.begin.getter(v21);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v22,  &dword_0,  qword_296AA0,  "postResolve",  11LL,  2LL,  v13,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v23 = swift_allocObject(&unk_26E5F0, 32LL, 7LL);
  *(void *)(v23 + 16) = sub_D2D38;
  *(void *)(v23 + sub_6C3C(v0 + 24) = v19;
  swift_retain(v19);
  sub_D3EF0((const char *)sub_D2D94, (char *)v23, v27, v25, v26, v28);
  swift_release(v19);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return swift_release(v14);
}

uint64_t sub_21318(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_45D50(a2);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_21358()
{
  unint64_t result = qword_287950;
  if (!qword_287950)
  {
    uint64_t v1 = sub_45D50(&qword_285480);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_287950);
  }

  return result;
}

uint64_t sub_213A4()
{
  return sub_213AC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_213AC(uint64_t a1, void *a2)
{
  uint64_t result = App.appIdentifier.getter(a1);
  if (v4)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t v7 = (void *)((char *)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 16));
    uint64_t v8 = v7[3];
    uint64_t v9 = v7[4];
    sub_6EA8(v7, v8);
    uint64_t v11 = 0LL;
    memset(v10, 0, sizeof(v10));
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v5, v6, v10, sub_227A0, 0LL, v8, v9);
    swift_bridgeObjectRelease(v6);
    return sub_1F6CC((uint64_t)v10, &qword_2860C0);
  }

  return result;
}

uint64_t StringsBackedAppNameResolver.localizedAppName(for:helper:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a3;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = swift_allocObject(&unk_271110, 32LL, 7LL);
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + sub_6C3C(v0 + 24) = a5;
  uint64_t v15 = qword_2838D0;
  swift_retain(a5);
  if (v15 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (v16 + 33) & ~v16;
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v19 = swift_allocObject(&unk_271138, v18 + 16, v16 | 7);
  *(void *)(v19 + 16) = "stringsBackedAppNameLocalizedAppName";
  *(void *)(v19 + sub_6C3C(v0 + 24) = 36LL;
  *(_BYTE *)(v19 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v11, v7);
  uint64_t v20 = (void *)(v19 + v18);
  *uint64_t v20 = sub_14EC74;
  v20[1] = v14;
  uint64_t v21 = swift_retain(v14);
  uint64_t v22 = static os_signpost_type_t.begin.getter(v21);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v22,  &dword_0,  qword_296AA0,  "stringsBackedAppNameLocalizedAppName",  36LL,  2LL,  v13,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v23 = swift_allocObject(&unk_271160, 32LL, 7LL);
  *(void *)(v23 + 16) = sub_2248C;
  *(void *)(v23 + sub_6C3C(v0 + 24) = v19;
  swift_retain(v19);
  sub_216B0((uint64_t)sub_33BF8, v23, v25, v26, v28, v27);
  swift_release(v19);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return swift_release(v14);
}

uint64_t sub_216B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v30 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v28 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = swift_allocObject(&unk_271208, 32LL, 7LL);
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + sub_6C3C(v0 + 24) = a2;
  unint64_t v18 = (void *)swift_allocObject(&unk_271230, 48LL, 7LL);
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_22770;
  v18[5] = v17;
  swift_retain(a2);
  uint64_t v19 = swift_bridgeObjectRetain(a4);
  uint64_t v20 = (void *)static AppNameResolver.queue.getter(v19);
  sub_156E8(a5, (uint64_t)v35);
  sub_21974(a6, (uint64_t)v34);
  uint64_t v21 = swift_allocObject(&unk_271258, 168LL, 7LL);
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + sub_6C3C(v0 + 24) = a4;
  __int128 v22 = v35[3];
  *(_OWORD *)(v21 + 64) = v35[2];
  *(_OWORD *)(v21 + 80) = v22;
  *(_OWORD *)(v21 + 96) = v35[4];
  __int128 v23 = v35[1];
  *(_OWORD *)(v21 + 3sub_6C3C(v0 + 2) = v35[0];
  *(_OWORD *)(v21 + 48) = v23;
  *(void *)(v21 + 11sub_6C3C(v0 + 2) = sub_22494;
  *(void *)(v21 + 120) = v18;
  sub_219BC((uint64_t)v34, v21 + 128);
  aBlock[4] = sub_21A4C;
  uint64_t v33 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_6E7C;
  aBlock[3] = &unk_271270;
  unint64_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a4);
  uint64_t v25 = swift_retain(v18);
  static DispatchQoS.unspecified.getter(v25);
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_21A04();
  uint64_t v26 = sub_6C5C(&qword_285480);
  sub_21358();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v16, v14, v24);
  _Block_release(v24);
  swift_release(v18);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
  return swift_release(v33);
}

_OWORD *sub_21964(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_21974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2860C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_219BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2860C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_21A04()
{
  unint64_t result = qword_287940;
  if (!qword_287940)
  {
    uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_287940);
  }

  return result;
}

uint64_t sub_21A4C()
{
  return sub_21A60(v0[2], v0[3], (uint64_t)(v0 + 4), v0[14], v0[15], (uint64_t)(v0 + 16));
}

uint64_t sub_21A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v53 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t v21 = static BundleIdentifiers.music.getter(v18);
  uint64_t v23 = v22;
  if (v21 == a1 && v22 == a2)
  {
    swift_bridgeObjectRelease(a2);
LABEL_5:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v26 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, v26, v10);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl( &dword_0,  v28,  v29,  "StringsBackedAppNameResolver: resolving music localized name from Strings",  v30,  2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    char v31 = 0;
    uint64_t v32 = 0x754D20656C707041LL;
    unint64_t v33 = 0xEB00000000636973LL;
    return sub_21F04(v31, (char *)v32, v33, v54, v55);
  }

  uint64_t v53 = a6;
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22);
  uint64_t v25 = swift_bridgeObjectRelease(v23);
  if ((v24 & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v34 = static BundleIdentifiers.podcasts.getter(v25);
  uint64_t v36 = v35;
  if (v34 == a1 && v35 == a2)
  {
    swift_bridgeObjectRelease(a2);
LABEL_14:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, v38, v10);
    os_log_type_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl( &dword_0,  v40,  v41,  "StringsBackedAppNameResolver: resolving podcasts localized name from Strings",  v42,  2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    char v31 = 1;
    uint64_t v32 = 0x6F5020656C707041LL;
    unint64_t v33 = 0xEE00737473616364LL;
    return sub_21F04(v31, (char *)v32, v33, v54, v55);
  }

  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35);
  swift_bridgeObjectRelease(v36);
  if ((v37 & 1) != 0) {
    goto LABEL_14;
  }
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v44 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v44, v10);
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl( &dword_0,  v46,  v47,  "StringsBackedAppNameResolver: resolving localized name from core app name resolver",  v48,  2u);
    swift_slowDealloc(v48, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_157C4(a3, (uint64_t)v56);
  uint64_t v49 = v57;
  uint64_t v50 = v58;
  sub_6EA8(v56, v57);
  uint64_t v51 = (void *)swift_allocObject(&unk_2712A8, 48LL, 7LL);
  v51[2] = a1;
  v51[3] = a2;
  uint64_t v52 = v55;
  v51[4] = v54;
  v51[5] = v52;
  swift_bridgeObjectRetain(a2);
  swift_retain(v52);
  dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(a1, a2, v53, sub_14F360, v51, v49, v50);
  swift_release(v51);
  return sub_6C3C(v56);
}

uint64_t type metadata accessor for AppResolutionStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppResolutionStrategy);
}

uint64_t sub_21F04(char a1, char *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v45 = a3;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v43 = a2;
  uint64_t v46 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v6 = *(void *)(v46 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v46);
  uint64_t v9 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v40 = v7;
    uint64_t v21 = v11;
    uint64_t v22 = v6;
    uint64_t v23 = v9;
    char v24 = a1;
    uint64_t v25 = v20;
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "StringsBackedAppNameResolver: getting app name from Strings...", v20, 2u);
    uint64_t v26 = v25;
    a1 = v24;
    uint64_t v9 = v23;
    uint64_t v6 = v22;
    uint64_t v11 = v21;
    uint64_t v7 = v40;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v27 = swift_allocObject(&unk_2712D0, 32LL, 7LL);
  *(void *)(v27 + 16) = v41;
  uint64_t v28 = v42;
  *(void *)(v27 + sub_6C3C(v0 + 24) = v42;
  uint64_t v29 = qword_2838D0;
  swift_retain(v28);
  if (v29 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  LODWORD(v4sub_6C3C(v0 + 2) = a1 & 1;
  OSSignpostID.init(log:)((id)qword_296AA0);
  uint64_t v30 = v46;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v46);
  uint64_t v31 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v32 = (v31 + 33) & ~v31;
  unint64_t v33 = (v7 + v32 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v34 = swift_allocObject(&unk_2712F8, v33 + 16, v31 | 7);
  *(void *)(v34 + 16) = "stringsBackedAppNameStringsExecute";
  *(void *)(v34 + sub_6C3C(v0 + 24) = 34LL;
  *(_BYTE *)(v34 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v34 + v32, v9, v30);
  uint64_t v35 = (void *)(v34 + v33);
  void *v35 = sub_22490;
  v35[1] = v27;
  uint64_t v36 = swift_retain(v27);
  uint64_t v37 = static os_signpost_type_t.begin.getter(v36);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v37,  &dword_0,  qword_296AA0,  "stringsBackedAppNameStringsExecute",  34LL,  2LL,  v11,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  swift_retain(v34);
  sub_14EFB4(v44, v42, v43, v45, (void (*)(uint64_t *))sub_2248C, v34);
  swift_release_n(v34, 2LL);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v30);
  return swift_release(v27);
}

uint64_t type metadata accessor for AudioFlowDelegatePlugin()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin23AudioFlowDelegatePlugin);
}

uint64_t sub_22284()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_222FC()
{
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t sub_22330()
{
  swift_release(*(void *)(v0 + 48));
  swift_errorRelease(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_22374()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));

  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);

  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_22430()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_22464()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t sub_22494(uint64_t a1, uint64_t a2)
{
  return sub_224B0( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(uint64_t (**)(void, void))(v2 + 32),  *(void *)(v2 + 40));
}

uint64_t sub_224B0( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void, void), uint64_t a6)
{
  uint64_t v33 = a1;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v16 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc(22LL, -1LL);
    uint64_t v31 = a6;
    uint64_t v20 = v19;
    uint64_t v30 = swift_slowAlloc(64LL, -1LL);
    uint64_t v36 = v30;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v32 = a5;
    swift_bridgeObjectRetain(a4);
    uint64_t v34 = sub_6978(a3, a4, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease_n(a4, 3LL);
    *(_WORD *)(v20 + 1sub_6C3C(v0 + 2) = 2080;
    uint64_t v21 = v33;
    uint64_t v34 = v33;
    uint64_t v35 = a2;
    swift_bridgeObjectRetain(a2);
    uint64_t v22 = sub_6C5C(&qword_284600);
    uint64_t v23 = String.init<A>(describing:)(&v34, v22);
    unint64_t v25 = v24;
    uint64_t v34 = sub_6978(v23, v24, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_bridgeObjectRelease_n(a2, 2LL);
    unint64_t v26 = v25;
    a5 = v32;
    swift_bridgeObjectRelease(v26);
    _os_log_impl( &dword_0,  v17,  v18,  "StringsBackedAppNameResolver: resolved localized name for bundle: %s as %s",  (uint8_t *)v20,  0x16u);
    uint64_t v27 = v30;
    swift_arrayDestroy(v30, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v21 = v33;
  }

  return a5(v21, a2);
}

uint64_t sub_22770(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_227A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc(22LL, -1LL);
    uint64_t v22 = swift_slowAlloc(64LL, -1LL);
    uint64_t v25 = v22;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v13 = static Insights.appSelection.getter();
    unint64_t v15 = v14;
    uint64_t v23 = sub_6978(v13, v14, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease(v15);
    *(_WORD *)(v12 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v23 = a1;
    uint64_t v24 = a2;
    swift_bridgeObjectRetain(a2);
    uint64_t v16 = sub_6C5C(&qword_284600);
    uint64_t v17 = String.init<A>(describing:)(&v23, v16);
    unint64_t v19 = v18;
    uint64_t v23 = sub_6978(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v19);
    _os_log_impl( &dword_0,  v10,  v11,  "CommonAppResolutionService#postResolve %{public}s App name pre-resolved as: %{public}s",  (uint8_t *)v12,  0x16u);
    uint64_t v20 = v22;
    swift_arrayDestroy(v22, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_229F4()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  uint64_t v8 = v0 + v4;
  uint64_t v9 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);

  swift_release(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_22AC0()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_22AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for CommonFlowStrategy(0LL, *(void *)(a2 + 80), *(void *)(a2 + 88), a4);
  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, v6, a3);
}

uint64_t type metadata accessor for CommonFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonFlowStrategy);
}

uint64_t sub_22B3C()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_22B60()
{
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_originalPlayMediaRCHFlowWrapper));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_featureFlagProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_mediaRemoteAPIProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_deviceProvider));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_playMediaCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_aceServiceInvoker));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_viewFactory));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_appNameResolver));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_sharedContextProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_seDeviceProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_siriKitTaskLoggingProvider));
  return v0;
}

uint64_t sub_22C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_873CC( a1,  a2,  a3,  a4,  a5,  a6,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:));
}

uint64_t sub_22C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CommonFlowStrategy(0LL, *(void *)(a3 + 80), *(void *)(a3 + 88), a4);
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_22CB0(uint64_t a1, uint64_t a2)
{
  return CommonFlowStrategy.makeSiriKitIntentHandler(app:intent:)(a1, a2);
}

uint64_t CommonFlowStrategy.makeSiriKitIntentHandler(app:intent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v11 = swift_retain_n(a1, 2LL);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = a2;
    unint64_t v15 = (uint8_t *)v14;
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    uint64_t v32 = a1;
    uint64_t v33 = v27;
    uint64_t v29 = v5;
    *(_DWORD *)unint64_t v15 = 136315138;
    unint64_t v26 = v15 + 4;
    uint64_t v16 = type metadata accessor for App(0LL);
    uint64_t v28 = v7;
    uint64_t v17 = v16;
    uint64_t v18 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
    unint64_t v21 = v20;
    uint64_t v32 = sub_6978(v19, v20, &v33);
    uint64_t v5 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v21);
    _os_log_impl(&dword_0, v12, v13, "CommonFlowStrategy#makeSiriKitIntentHandler Saving app name %s", v15, 0xCu);
    uint64_t v22 = v27;
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    uint64_t v23 = v15;
    a2 = v30;
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v6);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  uint64_t v24 = *(void *)(v31 + 32);
  *(void *)(v31 + 3sub_6C3C(v0 + 2) = a1;
  swift_retain(a1);
  swift_release(v24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 + 88) + 32LL))(a1, a2);
}

uint64_t sub_22F74()
{
  return static SiriAudioEnvironment.isCarPlay.getter() & 1;
}

uint64_t sub_22F8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v2 + 88, v19, 0LL, 0LL);
  sub_FF10(v2 + 88, (uint64_t)&v17, &qword_284000);
  if (v18) {
    return sub_FF54(&v17, a1);
  }
  sub_1F6CC((uint64_t)&v17, &qword_284000);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v9 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v13 = 0;
    _os_log_impl( &dword_0,  v11,  v12,  "AceServiceExecutorProviderWrapper#deviceState initializing DeviceState...",  v13,  2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(uint64_t))(v2 + 72))(v14);
  sub_157C4(a1, (uint64_t)&v17);
  swift_beginAccess(v2 + 88, v16, 33LL, 0LL);
  sub_DD950((uint64_t)&v17, v2 + 88, &qword_284000);
  return swift_endAccess(v16);
}

uint64_t sub_23170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  sub_6EA8(v7, v8);
  dispatch thunk of AceServiceInvoker.prepareForAudioHandoff(completion:)(a1, a2, v4, v5);
  return sub_6C3C(v7);
}

uint64_t sub_231E4(int a1, int a2, id a3, uint64_t (*a4)(BOOL))
{
  return a4([a3 code] != (char *)&dword_0 + 1);
}

uint64_t sub_23220(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return PlayMedia.HandleIntentStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5);
}

uint64_t PlayMedia.HandleIntentStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v212 = a3;
  uint64_t v213 = a4;
  uint64_t v215 = a2;
  uint64_t v199 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v197 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v195 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v194 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v193 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v203 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v192 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v196 = (char *)&v184 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v202 = type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v201 = *(void *)(v202 - 8);
  uint64_t v12 = __chkstk_darwin(v202);
  uint64_t v187 = (char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v200 = (char *)&v184 - v14;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void **)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  id v204 = (char *)&v184 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v190 = (char *)&v184 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v191 = (char *)&v184 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v205 = (char *)&v184 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v206 = (char *)&v184 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v184 - v31;
  static SiriEnvironmentWrapper.store()(v30);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v33 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v34 = (void **)v16[2];
  uint64_t v210 = v33;
  uint64_t v211 = v34;
  ((void (*)(char *))v34)(v32);
  uint64_t v35 = swift_retain_n(a1, 2LL);
  id v214 = v16;
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  os_log_type_t v189 = v19;
  if (v38)
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v40 = (void **)swift_slowAlloc(32LL, -1LL);
    uint64_t v208 = v6;
    uint64_t v41 = v40;
    aBlock = v40;
    uint64_t v209 = a5;
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v188 = v15;
    uint64_t v222 = (void *)a1;
    uint64_t v42 = type metadata accessor for App(0LL);
    uint64_t v43 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter(v42, v43);
    unint64_t v46 = v45;
    uint64_t v222 = (void *)sub_6978(v44, v45, (uint64_t *)&aBlock);
    a5 = v209;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
    swift_bridgeObjectRelease(v46);
    swift_release_n(a1, 2LL);
    _os_log_impl(&dword_0, v36, v37, "HandleIntentStrategy#makePreHandleIntentOutput for app: %s", v39, 0xCu);
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    os_log_type_t v47 = v41;
    uint64_t v6 = v208;
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v39, -1LL, -1LL);

    uint64_t v48 = (void (*)(char *, uint64_t))v214[1];
    uint64_t v49 = v32;
    uint64_t v50 = v188;
  }

  else
  {
    swift_release_n(a1, 2LL);

    uint64_t v48 = (void (*)(char *, uint64_t))v214[1];
    uint64_t v49 = v32;
    uint64_t v50 = v15;
  }

  id v207 = v48;
  ((void (*)(char *))v48)(v49);
  uint64_t v51 = a1;
  if ((sub_1F5C3C(a1) & 1) == 0) {
    return sub_2454C(v51, v215, v212, v213, a5);
  }
  uint64_t v52 = (void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider);
  uint64_t v53 = *(void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider + 24);
  uint64_t v54 = *(void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider + 32);
  sub_6EA8( (void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider),  v53);
  if ((dispatch thunk of DeviceProviding.isPhone.getter(v53, v54) & 1) == 0)
  {
    uint64_t v55 = v52[3];
    uint64_t v56 = v52[4];
    sub_6EA8(v52, v55);
    if ((dispatch thunk of DeviceProviding.isIPad.getter(v55, v56) & 1) == 0) {
      return sub_2454C(v51, v215, v212, v213, a5);
    }
  }

  uint64_t v57 = type metadata accessor for AirPlayRouteSetupContext(0LL);
  uint64_t v58 = *(void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider + 24);
  uint64_t v59 = *(void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider + 32);
  sub_6EA8( (void *)(v6 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider),  v58);
  uint64_t v60 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v58, v59);
  uint64_t v62 = v61;
  uint64_t v186 = v57;
  uint64_t v63 = static AirPlayRouteSetupContext.shared(refId:)(v60, v61);
  swift_bridgeObjectRelease(v62);
  id v214 = (void *)v63;
  if (!v63) {
    return sub_2454C(v51, v215, v212, v213, a5);
  }
  uint64_t v209 = a5;
  uint64_t v64 = v206;
  uint64_t v65 = v50;
  ((void (*)(char *, uint64_t, uint64_t))v211)(v206, v210, v50);
  uint64_t v66 = v215;
  swift_retain_n(v214, 2LL);
  id v67 = v66;
  os_log_type_t v68 = (os_log_s *)Logger.logObject.getter(v67);
  os_log_type_t v69 = static os_log_type_t.debug.getter();
  BOOL v70 = os_log_type_enabled(v68, v69);
  uint64_t v208 = v6;
  uint64_t v185 = v67;
  if (v70)
  {
    uint64_t v71 = swift_slowAlloc(22LL, -1LL);
    unint64_t v72 = (void **)swift_slowAlloc(64LL, -1LL);
    uint64_t v188 = v51;
    unint64_t v73 = v72;
    aBlock = v72;
    *(_DWORD *)uint64_t v71 = 136315394;
    id v74 = [v67 debugDescription];
    uint64_t v75 = v65;
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
    unint64_t v78 = v77;

    uint64_t v222 = (void *)sub_6978(v76, v78, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
    swift_bridgeObjectRelease(v78);

    *(_WORD *)(v71 + 1sub_6C3C(v0 + 2) = 2080;
    uint64_t v79 = v214;
    uint64_t v222 = v214;
    uint64_t v80 = sub_10430( &qword_2858C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
    uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter(v186, v80);
    unint64_t v83 = v82;
    uint64_t v222 = (void *)sub_6978(v81, v82, (uint64_t *)&aBlock);
    uint64_t v65 = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
    swift_bridgeObjectRelease(v83);
    swift_release_n(v79, 2LL);
    _os_log_impl( &dword_0,  v68,  v69,  "HandleIntentStrategy#makePreHandleIntentOutput Handling AirPlay Route setup for 3p app on iOS. Intent: %s, Context: %s",  (uint8_t *)v71,  0x16u);
    swift_arrayDestroy(v73, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v84 = v73;
    uint64_t v51 = v188;
    swift_slowDealloc(v84, -1LL, -1LL);
    swift_slowDealloc(v71, -1LL, -1LL);

    uint64_t v85 = v206;
    uint64_t v86 = v75;
  }

  else
  {

    swift_release_n(v214, 2LL);
    uint64_t v85 = v64;
    uint64_t v86 = v65;
  }

  uint64_t v87 = v207;
  v207(v85, v86);
  unint64_t v88 = v205;
  ((void (*)(char *, uint64_t, uint64_t))v211)(v205, v210, v65);
  uint64_t v89 = swift_retain_n(v214, 2LL);
  uint64_t v90 = (os_log_s *)Logger.logObject.getter(v89);
  os_log_type_t v91 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v93 = (void **)swift_slowAlloc(32LL, -1LL);
    aBlock = v93;
    *(_DWORD *)uint64_t v92 = 136315138;
    uint64_t v94 = v214;
    uint64_t v222 = v214;
    uint64_t v95 = sub_10430( &qword_2858C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
    uint64_t v96 = dispatch thunk of CustomStringConvertible.description.getter(v186, v95);
    unint64_t v98 = v97;
    uint64_t v222 = (void *)sub_6978(v96, v97, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
    swift_bridgeObjectRelease(v98);
    swift_release_n(v94, 2LL);
    _os_log_impl( &dword_0,  v90,  v91,  "HandleIntentStrategy#makePreHandleIntentOutput airPlay route setup state: %s",  v92,  0xCu);
    swift_arrayDestroy(v93, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v93, -1LL, -1LL);
    id v99 = v92;
    uint64_t v87 = v207;
    swift_slowDealloc(v99, -1LL, -1LL);

    uint64_t v100 = v205;
  }

  else
  {
    swift_release_n(v214, 2LL);

    uint64_t v100 = v88;
  }

  v87(v100, v65);
  uint64_t v101 = v208;
  a5 = v209;
  uint64_t v102 = v204;
  uint64_t v103 = v185;
  if (!INPlayMediaIntent.areAirPlayRoutesPresent()() && !INPlayMediaIntent.areHashedRouteUIDsPresent()()) {
    goto LABEL_34;
  }
  if (!INPlayMediaIntent.isMediaItemsPopulated()()) {
    goto LABEL_34;
  }
  BOOL v104 = INPlayMediaIntent.isCommonAirPlayRouteSetupSuppressed()();
  if (!v104) {
    goto LABEL_34;
  }
  uint64_t v105 = v200;
  dispatch thunk of AirPlayRouteSetupContext.state.getter(v104);
  uint64_t v106 = (*(uint64_t (**)(char *, uint64_t))(v201 + 88))(v105, v202);
  if ((_DWORD)v106 == enum case for AirPlayRouteSetupState.suppressedCommonRouteSetup(_:))
  {
    uint64_t v107 = v191;
    uint64_t v108 = ((uint64_t (*)(char *, uint64_t, uint64_t))v211)(v191, v210, v65);
    uint64_t v109 = (os_log_s *)Logger.logObject.getter(v108);
    os_log_type_t v110 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v109, v110))
    {
      uint64_t v111 = v65;
      os_log_type_t v112 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v112 = 0;
      _os_log_impl( &dword_0,  v109,  v110,  "HandleIntentStrategy#makePreHandleIntentOutput Starting looking for devices and setting AirPlay routes...",  v112,  2u);
      BOOL v113 = v112;
      uint64_t v65 = v111;
      uint64_t v103 = v185;
      swift_slowDealloc(v113, -1LL, -1LL);
    }

    uint64_t v114 = ((uint64_t (*)(char *, uint64_t))v87)(v107, v65);
    uint64_t v115 = v196;
    uint64_t v116 = static DispatchQoS.userInteractive.getter(v114);
    uint64_t v117 = v193;
    static OS_dispatch_queue.Attributes.concurrent.getter(v116);
    uint64_t v211 = (void **)static DispatchQueues.queue(_:qos:attributes:)( 0x5379616C50726941LL,  0xEC00000070757465LL,  v115,  v117);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v117, v195);
    id v118 = *(void (**)(char *, uint64_t))(v192 + 8);
    v118(v115, v203);
    uint64_t v119 = swift_allocObject(&unk_276050, 32LL, 7LL);
    *(void *)(v119 + 16) = v101;
    *(void *)(v119 + sub_6C3C(v0 + 24) = v103;
    uint64_t v220 = sub_1FE768;
    uint64_t v221 = v119;
    aBlock = _NSConcreteStackBlock;
    uint64_t v217 = 1107296256LL;
    uint64_t v218 = sub_6E7C;
    uint64_t v219 = &unk_276068;
    uint64_t v120 = _Block_copy(&aBlock);
    id v121 = v103;
    uint64_t v122 = swift_retain(v101);
    static DispatchQoS.unspecified.getter(v122);
    uint64_t v222 = _swiftEmptyArrayStorage;
    sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v123 = sub_6C5C(&qword_285480);
    sub_21358();
    os_log_type_t v124 = v197;
    uint64_t v125 = v199;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v222, v123);
    uint64_t v126 = v211;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v115, v124, v120);
    _Block_release(v120);

    swift_release(v214);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v124, v125);
    v118(v115, v203);
    goto LABEL_26;
  }

  if ((_DWORD)v106 == enum case for AirPlayRouteSetupState.startedDeviceSearch(_:))
  {
    NSNumber v127 = v196;
    uint64_t v128 = static DispatchQoS.userInteractive.getter(v106);
    uint64_t v129 = v193;
    static OS_dispatch_queue.Attributes.concurrent.getter(v128);
    uint64_t v210 = static DispatchQueues.queue(_:qos:attributes:)(0x5379616C50726941LL, 0xEC00000070757465LL, v127, v129);
    (*(void (**)(char *, uint64_t))(v194 + 8))(v129, v195);
    uint64_t v211 = *(void ***)(v192 + 8);
    ((void (*)(char *, uint64_t))v211)(v127, v203);
    uint64_t v130 = swift_allocObject(&unk_276000, 32LL, 7LL);
    id v131 = v214;
    *(void *)(v130 + 16) = v101;
    *(void *)(v130 + sub_6C3C(v0 + 24) = v131;
    uint64_t v220 = sub_1FE734;
    uint64_t v221 = v130;
    aBlock = _NSConcreteStackBlock;
    uint64_t v217 = 1107296256LL;
    uint64_t v218 = sub_6E7C;
    uint64_t v219 = &unk_276018;
    uint64_t v132 = _Block_copy(&aBlock);
    swift_retain(v131);
    uint64_t v133 = swift_retain(v101);
    static DispatchQoS.unspecified.getter(v133);
    uint64_t v222 = _swiftEmptyArrayStorage;
    sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v134 = sub_6C5C(&qword_285480);
    sub_21358();
    os_log_type_t v135 = v197;
    uint64_t v136 = v199;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v222, v134);
    uint64_t v137 = (void *)v210;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v127, v135, v132);
    _Block_release(v132);

    swift_release(v131);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v135, v136);
    ((void (*)(char *, uint64_t))v211)(v127, v203);
LABEL_26:
    uint64_t v138 = (void *)v221;
LABEL_35:
    swift_release(v138);
    return sub_2454C(v51, v215, v212, v213, a5);
  }

  if ((_DWORD)v106 == enum case for AirPlayRouteSetupState.startedDeviceSearchWithRouteSetup(_:))
  {
    unint64_t v139 = v190;
    uint64_t v140 = ((uint64_t (*)(char *, uint64_t, uint64_t))v211)(v190, v210, v65);
    uint64_t v141 = (os_log_s *)Logger.logObject.getter(v140);
    os_log_type_t v142 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v141, v142))
    {
      uint64_t v143 = v65;
      uint64_t v144 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v144 = 0;
      _os_log_impl( &dword_0,  v141,  v142,  "HandleIntentStrategy#makePreHandleIntentOutput Nothing to do here, routes are being setup",  v144,  2u);
      uint64_t v145 = v144;
      uint64_t v65 = v143;
      swift_slowDealloc(v145, -1LL, -1LL);

      swift_release(v214);
    }

    else
    {
      swift_release(v214);
    }

    v87(v139, v65);
    return sub_2454C(v51, v215, v212, v213, a5);
  }

  if ((_DWORD)v106 != enum case for AirPlayRouteSetupState.error(_:))
  {
    uint64_t v159 = v189;
    ((void (*)(char *, uint64_t, uint64_t))v211)(v189, v210, v65);
    id v160 = v103;
    swift_retain_n(v214, 2LL);
    uint64_t v161 = v65;
    id v162 = v160;
    unint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
    os_log_type_t v164 = static os_log_type_t.info.getter(v163);
    int v165 = v164;
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v166 = swift_slowAlloc(22LL, -1LL);
      uint64_t v188 = v161;
      uint64_t v167 = v166;
      id v168 = (void **)swift_slowAlloc(64LL, -1LL);
      uint64_t v211 = v168;
      aBlock = v168;
      *(_DWORD *)uint64_t v167 = 136315394;
      uint64_t v169 = v187;
      LODWORD(v210) = v165;
      uint64_t v170 = v214;
      dispatch thunk of AirPlayRouteSetupContext.state.getter(v168);
      uint64_t v171 = String.init<A>(describing:)(v169, v202);
      unint64_t v173 = v172;
      uint64_t v222 = (void *)sub_6978(v171, v172, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
      swift_bridgeObjectRelease(v173);
      swift_release_n(v170, 2LL);
      *(_WORD *)(v167 + 1sub_6C3C(v0 + 2) = 2080;
      id v174 = [v162 debugDescription];
      uint64_t v175 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
      id v207 = v87;
      uint64_t v176 = v51;
      unint64_t v178 = v177;

      uint64_t v222 = (void *)sub_6978(v175, v178, (uint64_t *)&aBlock);
      a5 = v209;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
      unint64_t v179 = v178;
      uint64_t v51 = v176;
      swift_bridgeObjectRelease(v179);

      _os_log_impl( &dword_0,  v163,  (os_log_type_t)v210,  "HandleIntentStrategy#makeSiriKitIntentHandler Unexpected state of AirPlay route setup: %s, intent: %s",  (uint8_t *)v167,  0x16u);
      unint64_t v180 = v211;
      swift_arrayDestroy(v211, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v180, -1LL, -1LL);
      swift_slowDealloc(v167, -1LL, -1LL);

      swift_release(v170);
      v207(v189, v188);
    }

    else
    {
      swift_release_n(v214, 3LL);

      v87(v159, v161);
    }

    (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v202);
    return sub_2454C(v51, v215, v212, v213, a5);
  }

  if ((dispatch thunk of AirPlayRouteSetupContext.errorReported.getter() & 1) != 0)
  {
LABEL_34:
    uint64_t v138 = v214;
    goto LABEL_35;
  }

  ((void (*)(char *, uint64_t, uint64_t))v211)(v102, v210, v65);
  uint64_t v146 = swift_retain_n(v214, 2LL);
  uint64_t v147 = (os_log_s *)Logger.logObject.getter(v146);
  os_log_type_t v148 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v147, v148))
  {
    uint64_t v149 = swift_slowAlloc(12LL, -1LL);
    uint64_t v188 = v65;
    uint64_t v150 = (uint8_t *)v149;
    uint64_t v151 = (void **)swift_slowAlloc(32LL, -1LL);
    id v207 = v87;
    uint64_t v152 = v151;
    aBlock = v151;
    *(_DWORD *)uint64_t v150 = 136315138;
    uint64_t v153 = v214;
    uint64_t v222 = v214;
    uint64_t v154 = sub_10430( &qword_2858C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
    uint64_t v155 = dispatch thunk of CustomStringConvertible.description.getter(v186, v154);
    unint64_t v157 = v156;
    uint64_t v222 = (void *)sub_6978(v155, v156, (uint64_t *)&aBlock);
    a5 = v209;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v222, v223);
    swift_bridgeObjectRelease(v157);
    swift_release_n(v153, 2LL);
    _os_log_impl( &dword_0,  v147,  v148,  "HandleIntentStrategy#makePreHandleIntentOutput Something went wrong setting up AirPlay routes %s. Generating error dialog",  v150,  0xCu);
    swift_arrayDestroy(v152, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v152, -1LL, -1LL);
    swift_slowDealloc(v150, -1LL, -1LL);

    v207(v204, v188);
  }

  else
  {
    swift_release_n(v214, 2LL);

    v87(v102, v65);
  }

  uint64_t v182 = v212;
  uint64_t v181 = v213;
  uint64_t v183 = v214;
  dispatch thunk of AirPlayRouteSetupContext.errorReported.setter(1LL);
  PlayMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( v51,  v185,  v182,  v181,  a5);
  return swift_release(v183);
}

uint64_t sub_2454C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v49 = a5;
  uint64_t v50 = a3;
  uint64_t v47 = a4;
  uint64_t v48 = a2;
  uint64_t v51 = a1;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v16 = v15(v13, v14, v7);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "HandleIntentStrategy#makePreHandleIntentOutput...", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v13, v7);
  uint64_t v21 = v6[6];
  uint64_t v22 = v6[7];
  sub_6EA8(v6 + 3, v21);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v21, v22) & 1) != 0) {
    return sub_1F96A4(v51, v48, v50, v47, v49);
  }
  v15(v11, v14, v7);
  uint64_t v24 = v51;
  uint64_t v25 = swift_retain_n(v51, 2LL);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v46 = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v44 = v28 + 4;
    unint64_t v45 = v28;
    uint64_t v52 = v51;
    uint64_t v53 = v29;
    uint64_t v30 = type metadata accessor for App(0LL);
    uint64_t v31 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v30, v31);
    unint64_t v34 = v33;
    uint64_t v52 = sub_6978(v32, v33, &v53);
    uint64_t v24 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    swift_bridgeObjectRelease(v34);
    swift_release_n(v24, 2LL);
    uint64_t v35 = v45;
    _os_log_impl(&dword_0, v26, v27, "HandleIntentStrategy#makePreHandleIntentOutput for app: %s", v45, 0xCu);
    uint64_t v36 = v46;
    swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v35, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v24, 2LL);
  }

  v20(v11, v7);
  os_log_type_t v37 = (void *)swift_allocObject(&unk_276550, 64LL, 7LL);
  void v37[2] = v6;
  v37[3] = v24;
  uint64_t v38 = v47;
  uint64_t v39 = v48;
  v37[4] = v48;
  v37[5] = v38;
  uint64_t v41 = v49;
  uint64_t v40 = v50;
  v37[6] = v49;
  v37[7] = v40;
  swift_retain(v24);
  swift_retain(v6);
  id v42 = v39;
  swift_retain(v41);
  id v43 = v40;
  sub_102920(1, v24, v42, (uint64_t)sub_24928, (uint64_t)v37);
  return swift_release(v37);
}

uint64_t sub_248FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_24928(uint64_t a1, char a2)
{
  return sub_265C0( a1,  a2,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24934);
}

uint64_t sub_24934( uint64_t a1, char a2, void *a3, uint64_t a4, void *a5, void (*a6)(__int128 *), unint64_t a7)
{
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  unint64_t v83 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  unint64_t v82 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v81 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v79 = *(void *)(v20 - 8);
  uint64_t v80 = (void *)v20;
  __chkstk_darwin(v20);
  unint64_t v78 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v76 = *(void *)(v22 - 8);
  uint64_t v77 = v22;
  __chkstk_darwin(v22);
  uint64_t v75 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  os_log_type_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) != 0)
  {
    BOOL v70 = a3;
    uint64_t v72 = a4;
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v71 = a5;
    unint64_t v73 = a6;
    unint64_t v74 = a7;
    uint64_t v32 = sub_6960(v24, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v32, v24);
    swift_errorRetain(a1);
    uint64_t v33 = swift_errorRetain(a1);
    unint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v84 = a1;
      v85[0] = v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      uint64_t v69 = (uint64_t)(v36 + 4);
      swift_errorRetain(a1);
      uint64_t v38 = sub_6C5C(&qword_284010);
      uint64_t v39 = String.init<A>(describing:)(&v84, v38);
      unint64_t v41 = v40;
      uint64_t v84 = sub_6978(v39, v40, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
      swift_bridgeObjectRelease(v41);
      sub_25404(a1, 1);
      sub_25404(a1, 1);
      _os_log_impl( &dword_0,  v34,  v35,  "HandleIntentStrategy#makePreHandleIntentOutput failed with error: %{public}s",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    else
    {
      sub_25404(a1, 1);
      sub_25404(a1, 1);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    id v43 = v75;
    uint64_t v42 = v76;
    uint64_t v44 = v77;
    (*(void (**)(char *, void, uint64_t))(v76 + 104))( v75,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v77);
    uint64_t v46 = v78;
    uint64_t v45 = v79;
    uint64_t v47 = v80;
    (*(void (**)(char *, void, void *))(v79 + 104))( v78,  enum case for AdditionalMetricsDescription.SourceFunction.preHandle(_:),  v80);
    swift_getErrorValue(a1, v88, v87);
    uint64_t v48 = Error.localizedDescription.getter(v87[1], v87[2]);
    uint64_t v50 = v49;
    uint64_t v69 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v43,  v46,  v48,  v49,  1LL,  0LL);
    uint64_t v52 = v51;
    swift_bridgeObjectRelease(v50);
    (*(void (**)(char *, void *))(v45 + 8))(v46, v47);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    uint64_t v53 = *(void *)((char *)v70
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v54 = *(void *)((char *)v70
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 32);
    uint64_t v80 = sub_6EA8( (void *)((char *)v70 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v53);
    uint64_t v55 = enum case for ActivityType.failed(_:);
    uint64_t v56 = type metadata accessor for ActivityType(0LL);
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v81, v55, v56);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0LL, 1LL, v56);
    uint64_t v59 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v60 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56LL))(v82, 1LL, 1LL, v59);
    uint64_t v61 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v62 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v64 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 104))(v83, v61, v62);
    uint64_t v65 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v64, 0LL, 1LL, v62);
    uint64_t v66 = v71;
    uint64_t v67 = INPlayMediaIntent.firstMediaItemType()(v65);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v72,  v66,  v58,  v60,  v64,  v69,  v52,  v67,  0,  v53,  v54);
    swift_bridgeObjectRelease(v52);
    sub_1F6CC(v64, &qword_2845A0);
    sub_1F6CC(v60, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v58, &qword_2845A8);
    v85[0] = a1;
    char v86 = 1;
    swift_errorRetain(a1);
    v73((__int128 *)v85);
    sub_25404(a1, 1);
    return sub_1F6CC((uint64_t)v85, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v28 = a5;
    uint64_t v29 = *(void **)((char *)a3
                     + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaDialogProvider);
    sub_24FEC(a1, 0);
    swift_retain(a3);
    swift_retain(a4);
    id v30 = v28;
    swift_retain(a7);
    sub_1684B4(a4, v30, v29, a3, a4, v30, a6, a7, a1);
    sub_25404(a1, 0);
    swift_release(a3);
    swift_release(a4);

    return swift_release(a7);
  }

uint64_t sub_24FEC(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain(a1);
  }
}

id sub_24FF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  int v26 = a2;
  uint64_t v5 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  id v13 = [objc_allocWithZone(SAUIAddDialogs) init];
  uint64_t v14 = UUID.init()();
  UUID.uuidString.getter(v14);
  uint64_t v16 = v15;
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  [v13 setAceId:v17];

  uint64_t v18 = sub_252A8(a1, v26);
  sub_1641C(0LL, &qword_285710, &OBJC_CLASS___SADialog_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  [v13 setDialogs:isa];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  Class v20 = NSNumber.init(integerLiteral:)(v27 & 1).super.super.isa;
  [v13 setListenAfterSpeaking:v20];

  TemplatingResult.behaviorAfterSpeaking.getter();
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v6 + 88))(v8, v5) == enum case for BehaviorAfterSpeaking.dingAndListen(_:))
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 96))(v8, v5);
    uint64_t v21 = *((void *)v8 + 1);
    id v22 = [objc_allocWithZone(SAUIListenAfterSpeakingBehavior) init];
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    [v22 setStartAlertSoundID:v23];

    [v13 setListenAfterSpeakingBehavior:v22];
    if (!v28) {
      return v13;
    }
    goto LABEL_5;
  }

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  if (v28) {
LABEL_5:
  }
    objc_msgSend(v13, "setRequestEndBehavior:");
  return v13;
}

void *sub_252A8(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for TemplatingSection(0LL);
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = TemplatingResult.sections.getter(v4);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v9);
    unint64_t v10 = (*(unsigned __int8 *)(v23 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v22 = v8;
    unint64_t v11 = v8 + v10;
    uint64_t v12 = *(void *)(v23 + 72);
    id v13 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
    int v14 = a2 & 1;
    do
    {
      v13(v6, v11, v3);
      id v15 = sub_74334((uint64_t)v6, v14);
      uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v3);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
      uint64_t v17 = v24[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
      uint64_t v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized ContiguousArray._endMutation()(v18);
      v11 += v12;
      --v9;
    }

    while (v9);
    uint64_t v19 = v24;
    swift_bridgeObjectRelease(v22);
  }

  else
  {
    swift_bridgeObjectRelease(v7);
    return _swiftEmptyArrayStorage;
  }

  return v19;
}

uint64_t sub_25404(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  else {
    return swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_25410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t type metadata accessor for PlayMedia.HandleIntentStrategy(uint64_t a1)
{
  uint64_t result = qword_28E370;
  if (!qword_28E370) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayMedia.HandleIntentStrategy);
  }
  return result;
}

uint64_t sub_254A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_254F0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return PlayMedia.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5);
}

uint64_t PlayMedia.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v47 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  int v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v12);
  uint64_t v15 = v5[6];
  uint64_t v16 = v5[7];
  sub_6EA8(v5 + 3, v15);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v15, v16) & 1) != 0) {
    return sub_1FAB18(a1, a2, v47, a4, a5);
  }
  uint64_t v43 = a4;
  uint64_t v44 = a2;
  uint64_t v45 = a5;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = v11;
  uint64_t v19 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v20 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v14, v19, v11);
  uint64_t v21 = a1;
  uint64_t v22 = swift_retain_n(a1, 2LL);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v48 = v21;
    uint64_t v49 = v41;
    *(_DWORD *)uint64_t v25 = 136315138;
    unint64_t v40 = v25 + 4;
    uint64_t v26 = type metadata accessor for App(0LL);
    uint64_t v42 = v18;
    uint64_t v27 = v26;
    uint64_t v28 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter(v27, v28);
    unint64_t v31 = v30;
    uint64_t v48 = sub_6978(v29, v30, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    swift_bridgeObjectRelease(v31);
    swift_release_n(v21, 2LL);
    _os_log_impl(&dword_0, v23, v24, "HandleIntentStrategy#makeIntentHandledResponse for app: %s", v25, 0xCu);
    uint64_t v32 = v41;
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v42);
  }

  else
  {
    swift_release_n(a1, 2LL);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v18);
  }

  uint64_t v34 = v43;
  uint64_t v33 = v44;
  os_log_type_t v35 = (void *)swift_allocObject(&unk_2760A0, 64LL, 7LL);
  v35[2] = v6;
  v35[3] = v21;
  v35[4] = v33;
  _OWORD v35[5] = v34;
  uint64_t v36 = v45;
  uint64_t v37 = v47;
  v35[6] = v45;
  v35[7] = v37;
  swift_retain(v21);
  swift_retain(v6);
  id v38 = v33;
  swift_retain(v36);
  id v39 = v37;
  sub_102920(0, v21, v38, (uint64_t)sub_265B4, (uint64_t)v35);
  return swift_release(v35);
}

void sub_25864()
{
  id v1 = [v0 mediaItems];
  if (!v1) {
    goto LABEL_16;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
LABEL_26:
    swift_bridgeObjectRelease("er");
    uint64_t v13 = (char *)v4;
    goto LABEL_27;
  }

  if (v4 < 0) {
    uint64_t v20 = v4;
  }
  else {
    uint64_t v20 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v4);
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v4);
  if (!v21) {
    goto LABEL_26;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001LL) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v4);
    goto LABEL_7;
  }

  if (*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v5 = *(id *)(v4 + 32);
LABEL_7:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease(v4);
    id v7 = [v6 privateMediaItemValueData];

    if (v7)
    {
      id v8 = [v7 internalSignals];

      if (v8)
      {
        uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

        uint64_t v9 = *(void *)(v4 + 16);
        if (v9)
        {
          uint64_t v10 = *(void *)(v4 + 32);
          uint64_t v11 = *(char **)(v4 + 40);
          BOOL v12 = v10 == 0xD000000000000019LL && v11 == "er";
          if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v10, v11) & 1) != 0)
          {
LABEL_15:
            swift_bridgeObjectRelease("er");
            swift_bridgeObjectRelease(v4);
            swift_arrayDestroy(&qword_26AAE0, 1LL, &type metadata for String);
            return;
          }

          if (v9 != 1)
          {
            int v14 = (char **)(v4 + 56);
            uint64_t v15 = 1LL;
            while (1)
            {
              uint64_t v16 = v15 + 1;
              if (__OFADD__(v15, 1LL)) {
                goto LABEL_35;
              }
              uint64_t v17 = (uint64_t)*(v14 - 1);
              uint64_t v18 = *v14;
              BOOL v19 = v17 == 0xD000000000000019LL && v18 == "er";
              if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18) & 1) != 0) {
                goto LABEL_15;
              }
              v14 += 2;
              ++v15;
              if (v16 == v9) {
                goto LABEL_26;
              }
            }
          }
        }

        goto LABEL_26;
      }
    }

LABEL_16:
    uint64_t v13 = "er";
LABEL_27:
    swift_bridgeObjectRelease(v13);
    swift_arrayDestroy(&qword_26AAE0, 1LL, &type metadata for String);
    _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v0,  (uint64_t)&off_26AAF0);
    return;
  }

  __break(1u);
LABEL_35:
  __break(1u);
}

    int v14 = 1;
LABEL_17:
    swift_bridgeObjectRelease(v2);
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return v14 & 1;
  }

  uint64_t v45 = 6LL;
LABEL_17:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v46 = *(void *)(v0 + 160);
  uint64_t v47 = *(void *)(v0 + 168);
  uint64_t v48 = *(void *)(v0 + 152);
  uint64_t v49 = sub_6960(v48, (uint64_t)qword_2969C8);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v47, v49, v48);
  uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
  uint64_t v52 = static os_log_type_t.debug.getter();
  uint64_t v53 = os_log_type_enabled(v51, v52);
  uint64_t v55 = *(void *)(v0 + 160);
  uint64_t v54 = *(void *)(v0 + 168);
  uint64_t v56 = *(void *)(v0 + 152);
  if (v53)
  {
    uint64_t v71 = *(void *)(v0 + 160);
    unint64_t v73 = *(void *)(v0 + 168);
    BOOL v70 = *(void *)(v0 + 152);
    uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v58 = swift_slowAlloc(32LL, -1LL);
    uint64_t v75 = v58;
    *(_DWORD *)uint64_t v57 = 136315138;
    *(void *)(v0 + 64) = v45;
    type metadata accessor for INPlayMediaIntentResponseCode(0LL);
    uint64_t v60 = String.init<A>(describing:)(v0 + 64, v59);
    uint64_t v62 = v61;
    *(void *)(v0 + 7sub_6C3C(v0 + 2) = sub_6978(v60, v61, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease(v62);
    _os_log_impl( &dword_0,  v51,  v52,  "AirPlayErrorIntentHandler#handle short circuiting handle because of AirPlay setup error, returning %s",  v57,  0xCu);
    swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1LL, -1LL);
    swift_slowDealloc(v57, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v73, v70);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
  }

  BOOL v12 = [objc_allocWithZone(INPlayMediaIntentResponse) initWithCode:v45 userActivity:0];
  swift_release(v74);
LABEL_23:
  uint64_t v63 = *(void *)(v0 + 168);
  uint64_t v65 = *(void *)(v0 + 136);
  uint64_t v64 = *(void *)(v0 + 144);
  uint64_t v67 = *(void *)(v0 + 120);
  uint64_t v66 = *(void *)(v0 + 128);
  uint64_t v68 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  return (*(uint64_t (**)(id))(v0 + 8))(v12);
}

  if (v20 != 1)
  {
    if (v20 == 2)
    {
      uint64_t v54 = 0xE700000000000000LL;
      uint64_t v33 = 0x454B494C534944LL;
      goto LABEL_20;
    }

    goto LABEL_19;
  }

  uint64_t v54 = 0xE400000000000000LL;
  uint64_t v33 = 1162561868LL;
LABEL_20:
  if (!v24)
  {
    sub_1CBFB0(0x656C746974LL, 0xE500000000000000LL, &v58);
    sub_1F6CC((uint64_t)&v58, &qword_284028);
    if (v30) {
      goto LABEL_22;
    }
LABEL_24:
    sub_1CBFB0(0x747369747261LL, 0xE600000000000000LL, &v58);
    sub_1F6CC((uint64_t)&v58, &qword_284028);
    goto LABEL_25;
  }

  uint64_t v59 = &type metadata for String;
  *(void *)&uint64_t v58 = v22;
  *((void *)&v58 + 1) = v24;
  sub_21964(&v58, v62);
  uint64_t v34 = v64;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v64);
  uint64_t v61 = v34;
  sub_33808(v62, 0x656C746974LL, 0xE500000000000000LL, isUniquelyReferenced_nonNull_native);
  uint64_t v64 = v61;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  if (!v30) {
    goto LABEL_24;
  }
LABEL_22:
  uint64_t v59 = &type metadata for String;
  *(void *)&uint64_t v58 = v29;
  *((void *)&v58 + 1) = v30;
  sub_21964(&v58, v62);
  uint64_t v36 = v64;
  uint64_t v37 = swift_isUniquelyReferenced_nonNull_native(v64);
  uint64_t v61 = v36;
  sub_33808(v62, 0x747369747261LL, 0xE600000000000000LL, v37);
  uint64_t v64 = v61;
  *(void *)&id v38 = swift_bridgeObjectRelease(0x8000000000000000LL).n128_u64[0];
LABEL_25:
  id v39 = objc_msgSend(a5, "mediaItems", v38, v54);
  if (v39)
  {
    unint64_t v40 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);

    if ((unint64_t)v41 >> 62)
    {
      if (v41 < 0) {
        uint64_t v52 = v41;
      }
      else {
        uint64_t v52 = v41 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v41);
      id v39 = (id)_CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease(v41);
    }

    else
    {
      id v39 = *(id *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFF8LL));
    }

    swift_bridgeObjectRelease(v41);
  }

  uint64_t v59 = &type metadata for Int;
  *(void *)&uint64_t v58 = v39;
  sub_21964(&v58, v62);
  uint64_t v42 = v64;
  uint64_t v43 = swift_isUniquelyReferenced_nonNull_native(v64);
  uint64_t v61 = v42;
  sub_33808(v62, 0x657449616964656DLL, 0xEE00746E756F436DLL, v43);
  uint64_t v44 = v61;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v59 = &type metadata for String;
  *(void *)&uint64_t v58 = v33;
  *((void *)&v58 + 1) = v54;
  sub_21964(&v58, v62);
  uint64_t v45 = swift_isUniquelyReferenced_nonNull_native(v44);
  uint64_t v61 = v44;
  sub_33808(v62, 0x7974696E69666661LL, 0xEC00000065707954LL, v45);
  uint64_t v46 = v61;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v47 = *(void *)(v57 + 120);
  uint64_t v59 = (void *)sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  uint64_t v60 = &off_275D10;
  *(void *)&uint64_t v58 = a5;
  uint64_t v48 = *(void *)(v47 + 40);
  uint64_t v49 = *(void *)(v47 + 48);
  __chkstk_darwin(v59);
  v53[2] = v48;
  v53[3] = v49;
  v53[4] = 0xD000000000000013LL;
  v53[5] = 0x8000000000220B50LL;
  v53[6] = v50;
  v53[7] = v46;
  v53[8] = a1;
  v53[9] = &v58;
  v53[10] = 0LL;
  uint64_t v51 = a5;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v55,  v56,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v48,  v49,  0xD000000000000013LL,  0x8000000000220B50LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v53);
  swift_bridgeObjectRelease(v46);
  sub_1F6CC((uint64_t)&v58, &qword_283FE8);
}

  uint64_t v13 = "ShuffleClassical";
LABEL_27:
  swift_bridgeObjectRelease(v13);
  swift_arrayDestroy(&qword_26AC18, 1LL, &type metadata for String);
  uint64_t v20 = [v0 mediaSearch];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = (char *)[v20 sortOrder];

    if (v22 == (_BYTE *)&dword_0 + 1)
    {
      uint64_t v23 = [v0 mediaSearch];
      os_log_type_t v24 = v23;
      if (v23)
      {
        uint64_t v25 = [v23 mediaType];
      }

      else
      {
        uint64_t v25 = 0LL;
      }

      uint64_t v26 = sub_882F8((uint64_t)v25, v24 == 0LL, (uint64_t)&off_26AC28);
      if ((v26 & 1) != 0)
      {
        uint64_t v27 = INPlayMediaIntent.firstMediaItemType()(v26);
        sub_88294(v27, (uint64_t)&off_26AC98);
      }
    }
  }

  uint64_t v36 = 0LL;
  uint64_t v37 = a19;
  if (v35)
  {
LABEL_8:
    id v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    id v39 = a20;
    if (v37) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t v46 = 0LL;
    unint64_t v40 = a24;
    if (v39) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }

uint64_t sub_25AD0(uint64_t a1)
{
  switch(a1)
  {
    case 1LL:
      uint64_t result = 1196314451LL;
      break;
    case 2LL:
      uint64_t result = 0x4D55424C41LL;
      break;
    case 3LL:
      uint64_t result = 0x545349545241LL;
      break;
    case 4LL:
      uint64_t result = 0x45524E4547LL;
      break;
    case 5LL:
      uint64_t result = 0x5453494C59414C50LL;
      break;
    case 6LL:
    case 15LL:
      uint64_t result = 0x5F54534143444F50LL;
      break;
    case 7LL:
      uint64_t result = 0x5F54534143444F50LL;
      break;
    case 8LL:
      uint64_t result = 0xD000000000000010LL;
      break;
    case 9LL:
      uint64_t v2 = 0x5F434953554DLL;
      goto LABEL_19;
    case 10LL:
      uint64_t result = 0x4F425F4F49445541LL;
      break;
    case 11LL:
      uint64_t result = 0x4549564F4DLL;
      break;
    case 12LL:
      uint64_t result = 0x574F48535F5654LL;
      break;
    case 13LL:
      uint64_t result = 0x5F574F48535F5654LL;
      break;
    case 14LL:
      uint64_t result = 0x49565F434953554DLL;
      break;
    case 16LL:
      uint64_t v2 = 0x5F4F49444152LL;
LABEL_19:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x5453000000000000LL;
      break;
    case 17LL:
      uint64_t result = 0x4E4F4954415453LL;
      break;
    case 18LL:
      uint64_t result = 0x434953554DLL;
      break;
    case 19LL:
      uint64_t result = 0xD000000000000019LL;
      break;
    case 20LL:
      uint64_t result = 1398228302LL;
      break;
    default:
      uint64_t result = 0x4E574F4E4B4E55LL;
      break;
  }

  return result;
}

uint64_t type metadata accessor for PlayMediaAlternativesViewProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider);
}

unint64_t sub_25D14(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_6C5C(&qword_2858E8);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v41 = v1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v40 = (unint64_t)(63 - v4) >> 6;
  id v7 = &v47;
  id v8 = &v49;
  unint64_t result = swift_bridgeObjectRetain(v1);
  int64_t i = 0LL;
  uint64_t v11 = (char *)&type metadata for Any + 8;
  BOOL v12 = &type metadata for String;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v21 = i + 1;
  if (__OFADD__(i, 1LL)) {
    goto LABEL_35;
  }
  if (v21 >= v40) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v41 + 8 * v21);
  int64_t v23 = i + 1;
  if (!v22)
  {
    int64_t v23 = i + 2;
    if (i + 2 >= v40) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v41 + 8 * v23);
    if (!v22)
    {
      int64_t v23 = i + 3;
      if (i + 3 >= v40) {
        goto LABEL_32;
      }
      unint64_t v22 = *(void *)(v41 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = i + 4;
        if (i + 4 >= v40) {
          goto LABEL_32;
        }
        unint64_t v22 = *(void *)(v41 + 8 * v23);
        if (!v22)
        {
          int64_t v24 = i + 5;
          if (i + 5 < v40)
          {
            unint64_t v22 = *(void *)(v41 + 8 * v24);
            if (v22)
            {
              int64_t v23 = i + 5;
              goto LABEL_26;
            }

            while (1)
            {
              int64_t v23 = v24 + 1;
              if (__OFADD__(v24, 1LL)) {
                goto LABEL_36;
              }
              if (v23 >= v40) {
                break;
              }
              unint64_t v22 = *(void *)(v41 + 8 * v23);
              ++v24;
              if (v22) {
                goto LABEL_26;
              }
            }
          }

LABEL_32:
          sub_A7610(v1);
          return (unint64_t)v3;
        }
      }
    }
  }

  unint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  unint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  uint64_t v44 = String.lowercased()();
  uint64_t v45 = String.lowercased()();
  uint64_t v43 = v45._object;
  if (v44._object)
  {
    if (v44._countAndFlagsBits == v45._countAndFlagsBits && v44._object == v45._object)
    {
      swift_bridgeObjectRelease_n(v44._object, 2LL);
      uint64_t v46 = 1;
    }

    else
    {
      uint64_t v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v44._countAndFlagsBits, v44._object);
      swift_bridgeObjectRelease(v44._object);
      swift_bridgeObjectRelease(v45._object);
    }

    *(_BYTE *)(v30 + 240) = v46 & 1;
    *(void *)(v30 + 264) = &type metadata for Bool;
    *(void *)(v30 + 27sub_6C3C(v0 + 2) = 0xD000000000000011LL;
    *(void *)(v30 + 280) = 0x80000000002219A0LL;
    goto LABEL_40;
  }

        uint64_t v114 = v137;
        uint64_t v115 = ((uint64_t (*)(char *, uint64_t, uint64_t))v149)(v137, v148, v84);
        uint64_t v116 = (os_log_s *)Logger.logObject.getter(v115);
        uint64_t v117 = static os_log_type_t.default.getter(v116);
        if (os_log_type_enabled(v116, v117))
        {
          id v118 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)id v118 = 0;
          _os_log_impl(&dword_0, v116, v117, "AppResolutionStrategy#actionForInput cancelled", v118, 2u);
          swift_slowDealloc(v118, -1LL, -1LL);
        }

        uint64_t v119 = v54(v114, v84);
        static ActionForInput.cancel()(v119);
        ((void (*)(char *, uint64_t))v108)(v145, v151);
        return sub_6C3C(v165);
      }

      swift_bridgeObjectRelease_n(*((void *)&v163 + 1), 2LL);
      ((void (*)(char *, uint64_t))v108)(v138, v109);
      uint64_t v111 = v140;
    }

    ((void (*)(char *, uint64_t))v108)(v111, v109);
    goto LABEL_32;
  }

  sub_1F6CC((uint64_t)&v163, &qword_284638);
  unint64_t v78 = v139;
  uint64_t v79 = ((uint64_t (*)(char *, uint64_t, uint64_t))v149)(v139, v148, v56);
  uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
  uint64_t v81 = static os_log_type_t.default.getter(v80);
  if (os_log_type_enabled(v80, v81))
  {
    unint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v82 = 0;
    _os_log_impl(&dword_0, v80, v81, "AppResolutionStrategy#actionForInput received invalid intent", v82, 2u);
    swift_slowDealloc(v82, -1LL, -1LL);
  }

  unint64_t v83 = v54(v78, v56);
  return static ActionForInput.ignore()(v83);
}

          sub_A7610(v1);
          return;
        }
      }
    }
  }

    BOOL v19 = 0LL;
    unint64_t v20 = 0LL;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_42;
    }
LABEL_33:
    unint64_t result = sub_9A744(0x726577736E61LL, 0xE600000000000000LL);
    if ((v42 & 1) != 0)
    {
      sub_6C00(*(void *)(a1 + 56) + 32 * result, (uint64_t)v58);
      unint64_t result = swift_dynamicCast(&v56, v58, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
      if ((_DWORD)result) {
        uint64_t v17 = v56;
      }
      else {
        uint64_t v17 = 0LL;
      }
      if ((_DWORD)result) {
        uint64_t v16 = v57;
      }
      else {
        uint64_t v16 = 0LL;
      }
      uint64_t v43 = *(void *)(a1 + 16);
      if (!v43) {
        goto LABEL_47;
      }
LABEL_43:
      unint64_t result = sub_9A744(0x726F727265LL, 0xE500000000000000LL);
      if ((v44 & 1) != 0)
      {
        sub_6C00(*(void *)(a1 + 56) + 32 * result, (uint64_t)v58);
        unint64_t result = swift_dynamicCast(&v56, v58, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
        uint64_t v43 = v56;
        uint64_t v45 = v57;
        if (!(_DWORD)result)
        {
          uint64_t v43 = 0LL;
          uint64_t v45 = 0LL;
        }

        goto LABEL_48;
      }

      goto LABEL_46;
    }

LABEL_26:
  uint64_t v43 = (v22 - 1) & v22;
  unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; unint64_t v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    uint64_t v25 = 16 * v20;
    uint64_t v26 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v20);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = (uint64_t *)(*(void *)(v1 + 56) + v25);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v45 = v28;
    uint64_t v46 = v27;
    v44[0] = v30;
    v44[1] = v31;
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v31);
    swift_dynamicCast(v7, v44, v12, v11, 7LL);
    uint64_t v32 = v45;
    uint64_t v33 = v46;
    sub_21964(v7, v8);
    sub_21964(v8, v50);
    sub_21964(v50, &v48);
    unint64_t result = sub_9A744(v32, v33);
    unint64_t v34 = result;
    if ((v35 & 1) != 0)
    {
      int64_t v42 = i;
      uint64_t v13 = v8;
      int v14 = v7;
      uint64_t v15 = v1;
      uint64_t v16 = v12;
      uint64_t v17 = v11;
      uint64_t v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      uint64_t *v18 = v32;
      v18[1] = v33;
      uint64_t v11 = v17;
      BOOL v12 = v16;
      uint64_t v1 = v15;
      id v7 = v14;
      id v8 = v13;
      int64_t i = v42;
      BOOL v19 = (void *)(v3[7] + 32 * v34);
      sub_6C3C(v19);
      unint64_t result = (unint64_t)sub_21964(&v48, v19);
      unint64_t v6 = v43;
      if (!v43) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }

    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v36 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v36 = v32;
    v36[1] = v33;
    unint64_t result = (unint64_t)sub_21964(&v48, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v37 = v3[2];
    BOOL v38 = __OFADD__(v37, 1LL);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_34;
    }
    v3[2] = v39;
    unint64_t v6 = v43;
    if (!v43) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v43 = (v6 - 1) & v6;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

  unint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  uint64_t v45 = 0LL;
  uint64_t v44 = 0xE000000000000000LL;
LABEL_27:
  uint64_t v87 = &type metadata for String;
  *(void *)&char v86 = v45;
  *((void *)&v86 + 1) = v44;
  sub_21964(&v86, v90);
  __int128 v48 = v92;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v92);
  uint64_t v89 = v48;
  sub_33808(v90, 0x707954616964656DLL, 0xE900000000000065LL, isUniquelyReferenced_nonNull_native);
  uint64_t v50 = v89;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v87 = &type metadata for String;
  *(void *)&char v86 = v27;
  *((void *)&v86 + 1) = v29;
  sub_21964(&v86, v90);
  uint64_t v51 = swift_isUniquelyReferenced_nonNull_native(v50);
  uint64_t v89 = v50;
  sub_33808(v90, 0x656C746974LL, 0xE500000000000000LL, v51);
  uint64_t v52 = v89;
  uint64_t v92 = v89;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  if (v34)
  {
    uint64_t v87 = &type metadata for String;
    *(void *)&char v86 = v81;
    *((void *)&v86 + 1) = v34;
    sub_21964(&v86, v90);
    uint64_t v53 = swift_isUniquelyReferenced_nonNull_native(v52);
    uint64_t v89 = v52;
    sub_33808(v90, 0x747369747261LL, 0xE600000000000000LL, v53);
    uint64_t v92 = v89;
    swift_bridgeObjectRelease(0x8000000000000000LL);
  }

  else
  {
    sub_1CBFB0(0x747369747261LL, 0xE600000000000000LL, &v86);
    sub_1F6CC((uint64_t)&v86, &qword_284028);
  }

  uint64_t v54 = [a5 mediaItems];
  if (v54)
  {
    uint64_t v55 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

    if ((unint64_t)v56 >> 62)
    {
      if (v56 < 0) {
        unint64_t v74 = v56;
      }
      else {
        unint64_t v74 = v56 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v56);
      uint64_t v54 = (id)_CocoaArrayWrapper.endIndex.getter(v74);
      swift_bridgeObjectRelease(v56);
    }

    else
    {
      uint64_t v54 = *(id *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFF8LL));
    }

    swift_bridgeObjectRelease(v56);
  }

  uint64_t v87 = &type metadata for Int;
  *(void *)&char v86 = v54;
  sub_21964(&v86, v90);
  uint64_t v57 = v92;
  uint64_t v58 = swift_isUniquelyReferenced_nonNull_native(v92);
  uint64_t v89 = v57;
  sub_33808(v90, 0x657449616964656DLL, 0xEE00746E756F436DLL, v58);
  uint64_t v92 = v89;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v81 = v18;
  sub_680FC((uint64_t)v18, (uint64_t)v16);
  uint64_t v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1LL, v23);
  if ((_DWORD)v59 == 1)
  {
    uint64_t v60 = v82;
    uint64_t v61 = v84;
    sub_1F6CC((uint64_t)v16, &qword_2845D8);
    uint64_t v62 = 0LL;
    uint64_t v87 = &type metadata for String;
LABEL_39:
    uint64_t v64 = 0xE000000000000000LL;
    goto LABEL_40;
  }

  uint64_t v60 = v82;
  uint64_t v62 = INMediaDestination.playlistName.getter(v59);
  uint64_t v64 = v63;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v23);
  uint64_t v87 = &type metadata for String;
  if (!v64)
  {
    uint64_t v61 = v84;
    uint64_t v62 = 0LL;
    goto LABEL_39;
  }

  uint64_t v61 = v84;
LABEL_40:
  *(void *)&char v86 = v62;
  *((void *)&v86 + 1) = v64;
  sub_21964(&v86, v90);
  uint64_t v65 = v92;
  uint64_t v66 = swift_isUniquelyReferenced_nonNull_native(v92);
  uint64_t v89 = v65;
  sub_33808(v90, 0x7473696C79616C70LL, 0xED0000656C746954LL, v66);
  uint64_t v67 = v89;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v68 = *(void *)(v85 + 120);
  uint64_t v87 = (void *)sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
  unint64_t v88 = (char *)&_s11descr2734E9VMn.NumFields + 3;
  *(void *)&char v86 = a5;
  uint64_t v69 = *(void *)(v68 + 40);
  BOOL v70 = *(void *)(v68 + 48);
  __chkstk_darwin(v87);
  *(&v80 - 10) = v69;
  *(&v80 - 9) = v70;
  *(&v80 - 8) = 0xD000000000000017LL;
  *(&v80 - sub_6C3C(v0 + 7) = 0x800000000021F300LL;
  uint64_t v75 = v71;
  uint64_t v76 = v67;
  uint64_t v77 = v83;
  unint64_t v78 = &v86;
  uint64_t v79 = 0LL;
  unint64_t v73 = v72;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v60,  v61,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v69,  v70,  0xD000000000000017LL,  0x800000000021F300LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v80 - 12));
  swift_bridgeObjectRelease(v67);
  sub_1F6CC((uint64_t)&v86, &qword_283FE8);
  sub_1F6CC((uint64_t)v81, &qword_2845D8);
}

      swift_once(&qword_283890, sub_BFCDC);
      goto LABEL_7;
    }
  }

  else if (*(void *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8LL)))
  {
    goto LABEL_3;
  }

  swift_bridgeObjectRelease(v25);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v67 = sub_6960(v10, (uint64_t)qword_2969E0);
  uint64_t v93 = (char *)*((void *)v11 + 2);
  uint64_t v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v93)(v16, v67, v10);
  uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
  BOOL v70 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v87 = (char *)v67;
    uint64_t v72 = v11;
    unint64_t v73 = v10;
    unint64_t v74 = v2;
    uint64_t v75 = v71;
    *(_WORD *)uint64_t v71 = 0;
    _os_log_impl(&dword_0, v69, v70, "ShazamKitRecognizer#sessionDidFindMatch Invalid results from ShazamKit", v71, 2u);
    uint64_t v76 = v75;
    uint64_t v2 = v74;
    uint64_t v10 = v73;
    uint64_t v11 = v72;
    uint64_t v67 = (uint64_t)v87;
    swift_slowDealloc(v76, -1LL, -1LL);
  }

  uint64_t v77 = (void (*)(char *, uint64_t))*((void *)v11 + 1);
  v77(v16, v10);
  (*((void (**)(char *, void, uint8_t *))v88 + 13))( v9,  enum case for PlaybackCode.acousticIDGenericError(_:),  v89);
  (*((void (**)(void *, void, uint64_t))v90 + 13))(v6, enum case for DomainCode.shazamKit(_:), v91);
  PlaybackCodeAndDescription.init(playbackCode:domainCode:errorDescription:)( v9,  v6,  0x5264696C61766E49LL,  0xEE0073746C757365LL);
  swift_storeEnumTagMultiPayload(v22, v94, 1LL);
  unint64_t v78 = (uint64_t)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result];
  swift_beginAccess(&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result], aBlock, 33LL, 0LL);
  sub_BFC0C((uint64_t)v22, v78);
  swift_endAccess(aBlock);
  [*(id *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession] setDelegate:0];
  uint64_t v79 = v92;
  uint64_t v80 = ((uint64_t (*)(char *, uint64_t, uint64_t))v93)(v92, v67, v10);
  uint64_t v81 = (os_log_s *)Logger.logObject.getter(v80);
  unint64_t v82 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v81, v82))
  {
    unint64_t v83 = v2;
    uint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v84 = 0;
    _os_log_impl(&dword_0, v81, v82, "ShazamKitRecognizer#handleCompletion Triggering dispatchGroup leave", v84, 2u);
    uint64_t v85 = v84;
    uint64_t v2 = v83;
    swift_slowDealloc(v85, -1LL, -1LL);
  }

  v77(v79, v10);
  dispatch_group_leave(*(dispatch_group_t *)&v2[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup]);
}

        uint64_t v9 = (v19 - 1) & v19;
        uint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }

      int64_t v21 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v17);
      unint64_t v22 = *v21;
      int64_t v23 = v21[1];
      Hasher.init(_seed:)(v34, *(void *)(v6 + 40));
      String.hash(into:)(v34, v22, v23);
      unint64_t result = Hasher._finalize()();
      int64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
      uint64_t v25 = result & ~v24;
      uint64_t v26 = v25 >> 6;
      if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        int v14 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v27 = 0;
        uint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          uint64_t v29 = v26 == v28;
          if (v26 == v28) {
            uint64_t v26 = 0LL;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v26);
        }

        while (v30 == -1);
        int v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }

      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
      uint64_t v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
      *uint64_t v15 = v22;
      v15[1] = v23;
      ++*(void *)(v6 + 16);
    }
  }

  unint64_t result = swift_release(v3);
  *uint64_t v2 = v6;
  return result;
}

    uint64_t v10 = (v19 - 1) & v19;
    uint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    int64_t v21 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v17);
    unint64_t v22 = *v21;
    int64_t v23 = v21[1];
    Hasher.init(_seed:)(v33, *(void *)(v6 + 40));
    swift_bridgeObjectRetain(v23);
    String.hash(into:)(v33, v22, v23);
    unint64_t result = Hasher._finalize()();
    int64_t v24 = -1LL << *(_BYTE *)(v6 + 32);
    uint64_t v25 = result & ~v24;
    uint64_t v26 = v25 >> 6;
    if (((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      int v14 = __clz(__rbit64((-1LL << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v27 = 0;
      uint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        uint64_t v29 = v26 == v28;
        if (v26 == v28) {
          uint64_t v26 = 0LL;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }

      while (v30 == -1);
      int v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }

    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    uint64_t v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
    *uint64_t v15 = v22;
    v15[1] = v23;
    ++*(void *)(v6 + 16);
  }

  unint64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_36:
    unint64_t result = swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_38;
  }

  BOOL v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    uint64_t v13 = v20;
    goto LABEL_26;
  }

  while (1)
  {
    uint64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_36;
    }
    BOOL v19 = *(void *)(v8 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_26;
    }
  }

  __int128 v48 = swift_bridgeObjectRelease(v33).n128_u64[0];
LABEL_27:
  uint64_t v49 = objc_msgSend(v27, "title", *(double *)&v48);
  if (!v49) {
    goto LABEL_31;
  }
  uint64_t v50 = v49;
  uint64_t v33 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
  unint64_t v34 = v51;

LABEL_33:
  uint64_t v53 = (char *)[v79 affinityType];
  if (v53 == (_BYTE *)&dword_0 + 2)
  {
    uint64_t v54 = 0xE700000000000000LL;
    uint64_t v55 = 0x454B494C534944LL;
  }

  else if (v53 == (_BYTE *)&dword_0 + 1)
  {
    uint64_t v54 = 0xE400000000000000LL;
    uint64_t v55 = 1162561868LL;
  }

  else
  {
    uint64_t v54 = 0xE700000000000000LL;
    uint64_t v55 = 0x4E574F4E4B4E55LL;
  }

  if (v34)
  {
    uint64_t v84 = &type metadata for String;
    *(void *)&unint64_t v83 = v33;
    *((void *)&v83 + 1) = v34;
    sub_21964(&v83, v82);
    uint64_t v56 = v87;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v87);
    uint64_t v81 = v56;
    sub_33808(v82, 0x436F54656C746974LL, 0xEE006D7269666E6FLL, isUniquelyReferenced_nonNull_native);
    uint64_t v87 = v81;
    swift_bridgeObjectRelease(0x8000000000000000LL);
  }

  else
  {
    sub_1CBFB0(0x436F54656C746974LL, 0xEE006D7269666E6FLL, &v83);
    sub_1F6CC((uint64_t)&v83, &qword_284028);
  }

  uint64_t v76 = v27;
  if (v32)
  {
    uint64_t v84 = &type metadata for String;
    *(void *)&unint64_t v83 = v30;
    *((void *)&v83 + 1) = v32;
    sub_21964(&v83, v82);
    swift_bridgeObjectRetain(v32);
    uint64_t v58 = v87;
    uint64_t v59 = swift_isUniquelyReferenced_nonNull_native(v87);
    uint64_t v81 = v58;
    sub_33808(v82, 0x6F54747369747261LL, 0xEF6D7269666E6F43LL, v59);
    uint64_t v60 = v81;
    swift_bridgeObjectRelease(0x8000000000000000LL);
  }

  else
  {
    sub_1CBFB0(0x6F54747369747261LL, 0xEF6D7269666E6F43LL, &v83);
    sub_1F6CC((uint64_t)&v83, &qword_284028);
    uint64_t v60 = v87;
  }

  uint64_t v84 = &type metadata for Bool;
  LOBYTE(v83) = 0;
  sub_21964(&v83, v82);
  uint64_t v61 = swift_isUniquelyReferenced_nonNull_native(v60);
  uint64_t v81 = v60;
  sub_33808(v82, 0x5265726E65477369LL, 0xEC0000006F696461LL, v61);
  uint64_t v62 = v81;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v84 = &type metadata for String;
  *(void *)&unint64_t v83 = v55;
  *((void *)&v83 + 1) = v54;
  sub_21964(&v83, v82);
  uint64_t v63 = swift_isUniquelyReferenced_nonNull_native(v62);
  uint64_t v81 = v62;
  sub_33808(v82, 0x7954746E65746E69LL, 0xEA00000000006570LL, v63);
  uint64_t v64 = v81;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v65 = v8[2];
  uint64_t v66 = v8[13];
  uint64_t v67 = v8[14];
  uint64_t v84 = (void *)sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  uint64_t v85 = &off_275D10;
  *(void *)&unint64_t v83 = v79;
  __chkstk_darwin(v84);
  *(&v75 - 10) = v66;
  *(&v75 - 9) = v67;
  *(&v75 - 8) = 0xD000000000000011LL;
  *(&v75 - sub_6C3C(v0 + 7) = 0x8000000000220BA0LL;
  BOOL v70 = v65;
  uint64_t v71 = v64;
  uint64_t v72 = v80;
  unint64_t v73 = &v83;
  unint64_t v74 = 0LL;
  uint64_t v69 = v68;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v77,  v78,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v66,  v67,  0xD000000000000011LL,  0x8000000000220BA0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v75 - 12));
  swift_bridgeObjectRelease(v64);

  sub_1F6CC((uint64_t)&v83, &qword_283FE8);
  *(void *)&unint64_t result = swift_bridgeObjectRelease(v32).n128_u64[0];
  return result;
}

    int v14 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_27:
    int64_t v24 = *(void *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v24 * v20, v4);
    uint64_t v25 = *(void *)(v10 + 40);
    uint64_t v26 = sub_10430( &qword_28A780,  (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoResponse.LevelOfDetail,  (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
    unint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    uint64_t v27 = -1LL << *(_BYTE *)(v10 + 32);
    uint64_t v28 = result & ~v27;
    uint64_t v29 = v28 >> 6;
    if (((-1LL << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      uint64_t v18 = __clz(__rbit64((-1LL << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v30 = 0;
      uint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }

        uint64_t v32 = v29 == v31;
        if (v29 == v31) {
          uint64_t v29 = 0LL;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v15 + 8 * v29);
      }

      while (v33 == -1);
      uint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
    }

    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))( *(void *)(v10 + 48) + v18 * v24,  v7,  v4);
    ++*(void *)(v10 + 16);
  }

  while (1)
  {
    uint64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_36;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_26;
    }
  }

    uint64_t v13 = (v21 - 1) & v21;
    BOOL v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_27:
    int64_t v23 = v7;
    int64_t v24 = *(void *)(v7 + 48);
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
    v26(v6, v24 + v25 * v19, v4);
    uint64_t v27 = *(void *)(v9 + 40);
    uint64_t v28 = sub_10430( &qword_28A780,  (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoResponse.LevelOfDetail,  (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
    unint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    uint64_t v29 = -1LL << *(_BYTE *)(v9 + 32);
    uint64_t v30 = result & ~v29;
    uint64_t v31 = v30 >> 6;
    if (((-1LL << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      uint64_t v17 = __clz(__rbit64((-1LL << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v32 = 0;
      uint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }

        unint64_t v34 = v31 == v33;
        if (v31 == v33) {
          uint64_t v31 = 0LL;
        }
        v32 |= v34;
        char v35 = *(void *)(v14 + 8 * v31);
      }

      while (v35 == -1);
      uint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }

    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v17;
    unint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(void *)(v9 + 16);
    id v7 = v23;
  }

  uint64_t v16 = v20 + 4;
  if (v20 + 4 < v38)
  {
    int64_t v21 = v39[v16];
    unint64_t v22 = v20 + 4;
    if (!v21)
    {
      while (1)
      {
        uint64_t v16 = v22 + 1;
        if (__OFADD__(v22, 1LL)) {
          goto LABEL_42;
        }
        if (v16 >= v38) {
          goto LABEL_36;
        }
        int64_t v21 = v39[v16];
        ++v22;
        if (v21) {
          goto LABEL_26;
        }
      }
    }

    goto LABEL_26;
  }

  unint64_t v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v14, v112, v10);
  uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  uint64_t v85 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v84, v85))
  {
    char v86 = swift_slowAlloc(22LL, -1LL);
    uint64_t v87 = swift_slowAlloc(64LL, -1LL);
    v127[0] = v87;
    *(_DWORD *)char v86 = v40[289];
    swift_beginAccess(v128, &v125, 0LL, 0LL);
    unint64_t v88 = v128[0];
    swift_bridgeObjectRetain(v128[0]);
    uint64_t v90 = Array.description.getter(v89, v116);
    uint64_t v92 = v91;
    swift_bridgeObjectRelease(v88);
    os_log_type_t v124 = sub_6978(v90, v92, v127);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, &v125);
    swift_bridgeObjectRelease(v92);
    *(_WORD *)(v86 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v94 = static Insights.responseFramework.getter(v93);
    uint64_t v96 = v95;
    os_log_type_t v124 = sub_6978(v94, v95, v127);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, &v125);
    swift_bridgeObjectRelease(v96);
    _os_log_impl( &dword_0,  v84,  v85,  "MediaItemDisambiguationStrategy#disambiguationSnippet returning items to disambiguate: %s %{public}s",  (uint8_t *)v86,  0x16u);
    swift_arrayDestroy(v87, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v87, -1LL, -1LL);
    swift_slowDealloc(v86, -1LL, -1LL);
  }

  v113(v14, v10);
  swift_beginAccess(v128, v127, 0LL, 0LL);
  unint64_t v97 = v128[0];
  unint64_t v98 = v107;
  swift_bridgeObjectRetain(v107);
  swift_bridgeObjectRetain(v97);
  id v99 = v108;
  SiriAudioDisambiguationSnippetModel.init(title:items:directInvocation:isAppDisambiguation:)( v106,  v98,  v97,  0xD000000000000034LL,  0x800000000021D8A0LL,  1LL);
  uint64_t v100 = enum case for SiriAudioSnippets.disambiguation(_:);
  uint64_t v101 = type metadata accessor for SiriAudioSnippets(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 104LL))(v99, v100, v101);
  *(void *)&unint64_t result = swift_bridgeObjectRelease(v97).n128_u64[0];
  return result;
}

        unint64_t v82 = "er";
LABEL_52:
        swift_bridgeObjectRelease(v82);
LABEL_53:
        swift_arrayDestroy(&qword_26AF40, 1LL, &type metadata for String);
        if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v70,  (uint64_t)&off_26AF50) & 1) != 0) {
          goto LABEL_54;
        }

        uint64_t v145 = v71;
        if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v70,  (uint64_t)&off_26AF80) & 1) != 0)
        {
          uint64_t v146 = v194;
          uint64_t v147 = v202;
          v201((char *)v194, v209, v202);
          os_log_type_t v148 = v210;
          if ((*(unsigned int (**)(char **, uint64_t))(v210 + 88))(v146, v147) == enum case for AppResolutionResult.AppResolutionResultError.appNotSupported(_:))
          {
            uint64_t v149 = v148;
            uint64_t v150 = v147;
            uint64_t v151 = (*(uint64_t (**)(char **, uint64_t))(v148 + 96))(v146, v147);
            uint64_t v152 = *v146;
            uint64_t v153 = App.appIdentifier.getter(v151);
            if (v154)
            {
              uint64_t v155 = v153;
              unint64_t v156 = v154;
              if ((static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v153, v154) & 1) == 0)
              {
                uint64_t v198 = v152;
                unint64_t v163 = v190;
                os_log_type_t v164 = v213;
                int v165 = v205(v190, v204, v213);
                uint64_t v166 = (os_log_s *)Logger.logObject.getter(v165);
                uint64_t v167 = static os_log_type_t.default.getter(v166);
                id v168 = os_log_type_enabled(v166, v167);
                uint64_t v211 = v155;
                if (v168)
                {
                  uint64_t v169 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                  *(_WORD *)uint64_t v169 = 0;
                  _os_log_impl( &dword_0,  v166,  v167,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse unsupported lyrics search, buildin g custom error dialog",  v169,  2u);
                  uint64_t v170 = v169;
                  uint64_t v155 = v211;
                  swift_slowDealloc(v170, -1LL, -1LL);
                }

                ((void (*)(char *, unint64_t))v208)(v163, v164);
                uint64_t v171 = v203;
                uint64_t v213 = (*(uint64_t (**)(uint64_t))(v212 + 32))(v62);
                type metadata accessor for App(0LL);
                swift_bridgeObjectRetain(v156);
                uint64_t v208 = App.__allocating_init(appIdentifier:)(v155, v156);
                v201(v200, v209, v150);
                unint64_t v172 = v192;
                (*(void (**)(char *, uint64_t, uint64_t))(v192 + 16))(v193, v171, v62);
                unint64_t v173 = *(unsigned __int8 *)(v149 + 80);
                id v174 = (v173 + 48) & ~v173;
                uint64_t v175 = (v199 + v174 + 7) & 0xFFFFFFFFFFFFFFF8LL;
                uint64_t v176 = *(unsigned __int8 *)(v172 + 80);
                unint64_t v177 = v62;
                unint64_t v178 = (v176 + v175 + 16) & ~v176;
                unint64_t v179 = (v191 + v178 + 7) & 0xFFFFFFFFFFFFFFF8LL;
                unint64_t v180 = (char *)swift_allocObject(&unk_270AA8, v179 + 16, v173 | v176 | 7);
                uint64_t v181 = v212;
                *((void *)v180 + sub_6C3C(v0 + 2) = v177;
                *((void *)v180 + 3) = v181;
                *((void *)v180 + 4) = v197;
                *((void *)v180 + 5) = v145;
                (*(void (**)(char *, char *, uint64_t))(v149 + 32))(&v180[v174], v200, v202);
                uint64_t v182 = &v180[v175];
                uint64_t v183 = v207;
                *(void *)uint64_t v182 = v206;
                *((void *)v182 + 1) = v183;
                (*(void (**)(char *, char *, uint64_t))(v172 + 32))(&v180[v178], v193, v177);
                uint64_t v184 = (uint64_t *)&v180[v179];
                *uint64_t v184 = v211;
                v184[1] = v156;
                uint64_t v185 = v145;
                uint64_t v186 = v197;
                swift_retain(v197);
                swift_retain(v183);
                uint64_t v187 = v208;
                uint64_t v188 = v213;
                sub_1F1D8C(v208, v185, (uint64_t)sub_140BE8, (uint64_t)v180);
                swift_release(v180);
                swift_release(v188);
                swift_release(v187);
                swift_release(v198);

                uint64_t v144 = v186;
                return swift_release(v144);
              }

              swift_release(v152);
              swift_bridgeObjectRelease(v156);
            }

            else
            {

              swift_release(v152);
            }
          }

          else
          {

            ((void (*)(char **, uint64_t))v55)(v146, v147);
          }
        }

        else
        {
        }

        uint64_t v58 = v197;
LABEL_66:
        unint64_t v157 = v198;
        uint64_t v158 = v205(v198, v204, v213);
        uint64_t v159 = (os_log_s *)Logger.logObject.getter(v158);
        id v160 = static os_log_type_t.default.getter(v159);
        if (os_log_type_enabled(v159, v160))
        {
          uint64_t v161 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v161 = 0;
          _os_log_impl( &dword_0,  v159,  v160,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse non-play or non-lyrics or non-appNotSuppor ted, using default rendering...",  v161,  2u);
          swift_slowDealloc(v161, -1LL, -1LL);
        }

        ((void (*)(char *, unint64_t))v208)(v157, v213);
        v218[0] = v58;
        id v162 = sub_10430( &qword_28AA78,  (uint64_t (*)(uint64_t))type metadata accessor for InternalRenderingFlowStrategy,  (uint64_t)&unk_218A90);
        AppResolutionFlowStrategy.makeAppResolutionUnsuccessfulResponse(intent:reason:completion:)( v60,  v209,  v206,  v207,  v57,  v162);
        uint64_t v144 = v58;
        return swift_release(v144);
      }
    }

    else if (*(void *)((char *)&dword_10 + (v75 & 0xFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_16;
    }

    v41(v48, v12);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
    return 0LL;
  }

  sub_45D94((uint64_t)v137, (uint64_t)v138);
  sub_45D94((uint64_t)v138, (uint64_t)&v139);
  if (v141)
  {
    sub_45DD0((uint64_t)v136);
    goto LABEL_23;
  }

  unint64_t v98 = a1;
  id v99 = (void *)v140[1];
  swift_bridgeObjectRelease(v140[0]);

  uint64_t v100 = v130(v121, v129, v12);
  uint64_t v101 = (os_log_s *)Logger.logObject.getter(v100);
  uint64_t v102 = static os_log_type_t.default.getter(v101);
  if (os_log_type_enabled(v101, v102))
  {
    uint64_t v103 = v12;
    BOOL v104 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)BOOL v104 = 0;
    _os_log_impl( &dword_0,  v101,  v102,  "AmbiguousPlayFlow#on received replay request direct invocation. Handling in SiriAudio",  v104,  2u);
    uint64_t v105 = v104;
    BOOL v12 = v103;
    swift_slowDealloc(v105, -1LL, -1LL);
  }

  v41(v121, v12);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
  uint64_t v106 = type metadata accessor for Input(0LL);
  uint64_t v107 = *(void *)(v106 - 8);
  uint64_t v108 = v123;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v123, v98, v106);
  uint64_t v109 = *(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56);
  char v86 = 1LL;
  v109(v108, 0LL, 1LL, v106);
  os_log_type_t v110 = (uint64_t)v108;
  uint64_t v111 = v124;
  sub_45F6C(v110, v124, &qword_285BD0);
  os_log_type_t v112 = v125 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input;
  swift_beginAccess(v125 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input, v134, 33LL, 0LL);
  sub_1B3B0(v111, v112);
  uint64_t v90 = v134;
LABEL_30:
  swift_endAccess(v90);
  return v86;
}

  uint64_t v39 = (v21 - 1) & v21;
  BOOL v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; BOOL v19 = __clz(__rbit64(v6)) | (i << 6))
  {
    int64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    LOBYTE(vsub_6C3C(v0 + 24) = *(_BYTE *)(*(void *)(v1 + 56) + v19);
    uint64_t v41 = v26;
    int64_t v42 = v25;
    int64_t v40 = (char)v24;
    swift_bridgeObjectRetain(v25);
    swift_dynamicCast(v7, &v40, v11, v10, 7LL);
    uint64_t v27 = v41;
    uint64_t v28 = v42;
    sub_21964(v7, v8);
    sub_21964(v8, v46);
    sub_21964(v46, &v44);
    uint64_t v29 = sub_9A744(v27, v28);
    uint64_t v30 = v29;
    if ((v31 & 1) != 0)
    {
      BOOL v38 = i;
      BOOL v12 = v8;
      uint64_t v13 = v7;
      int v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v3[6] + 16 * v29);
      swift_bridgeObjectRelease(v17[1]);
      *uint64_t v17 = v27;
      v17[1] = v28;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      id v7 = v13;
      id v8 = v12;
      int64_t i = v38;
      uint64_t v18 = (void *)(v3[7] + 32 * v30);
      sub_6C3C(v18);
      sub_21964(&v44, v18);
      unint64_t v6 = v39;
      if (!v39) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }

    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << v29;
    uint64_t v32 = (uint64_t *)(v3[6] + 16 * v29);
    *uint64_t v32 = v27;
    v32[1] = v28;
    sub_21964(&v44, (_OWORD *)(v3[7] + 32 * v29));
    uint64_t v33 = v3[2];
    unint64_t v34 = __OFADD__(v33, 1LL);
    char v35 = v33 + 1;
    if (v34) {
      goto LABEL_34;
    }
    v3[2] = v35;
    unint64_t v6 = v39;
    if (!v39) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v39 = (v6 - 1) & v6;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

    sub_1F6CC((uint64_t)v15, &qword_2860A0);
    goto LABEL_27;
  }

  if (*(void *)((char *)&dword_10 + (v53 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v54 = *(id *)(v53 + 32);
    goto LABEL_18;
  }

  __break(1u);
}

    sub_1F6CC(v44, &qword_2860A0);
    goto LABEL_27;
  }

  if (*(void *)((char *)&dword_10 + (v50 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v51 = *(id *)(v50 + 32);
    goto LABEL_18;
  }

  __break(1u);
}

uint64_t sub_2607C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_6C5C(&qword_2858D8);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v29 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v4) >> 6;
  id v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }

    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v14 >= v28) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v29 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v29 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v29 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }

LABEL_27:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v9 = v16;
LABEL_28:
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_6C00(*(void *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(void *)&__int128 v40 = v20;
    *((void *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(void *)&v38[0] = v20;
    *((void *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7LL);
    sub_21964(v39, v33);
    __int128 v34 = v30;
    __int128 v35 = v31;
    uint64_t v36 = v32;
    sub_21964(v33, v37);
    __int128 v30 = v34;
    __int128 v31 = v35;
    uint64_t v32 = v36;
    sub_21964(v37, v38);
    sub_21964(v38, &v34);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v21 = -1LL << *((_BYTE *)v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1LL << v22) & ~*(void *)&v7[8 * (v22 >> 6)]) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1LL << v22) & ~*(void *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }

        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0LL;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)&v7[8 * v23];
      }

      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }

    *(void *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v10;
    uint64_t v11 = v3[6] + 40 * v10;
    *(_OWORD *)uint64_t v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(void *)(v11 + 3sub_6C3C(v0 + 2) = v32;
    uint64_t result = (uint64_t)sub_21964(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }

  int64_t v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_A7610(a1);
    return (uint64_t)v3;
  }

  unint64_t v15 = *(void *)(v29 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v9 + 5;
    goto LABEL_27;
  }

  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v16 >= v28) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_27;
    }
  }

    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }

    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  os_log_type_t v110 = v262;
  uint64_t v111 = sub_6960(v262, (uint64_t)qword_2969C8);
  os_log_type_t v112 = v261;
  BOOL v113 = v261[2];
  uint64_t v114 = v260;
  v113(v260, v111, v110);
  uint64_t v115 = v40;
  uint64_t v116 = (os_log_s *)Logger.logObject.getter(v115);
  uint64_t v117 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v116, v117))
  {
    id v118 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v119 = swift_slowAlloc(32LL, -1LL);
    *(void *)&uint64_t v266 = v119;
    *(_DWORD *)id v118 = 136315138;
    uint64_t v258 = (uint8_t *)v111;
    *(void *)&v265 = v115;
    uint64_t v120 = v259;
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v259);
    uint64_t v122 = dispatch thunk of CustomStringConvertible.description.getter(v120, WitnessTable);
    os_log_type_t v124 = v123;
    *(void *)&v265 = sub_6978(v122, v123, (uint64_t *)&v266);
    uint64_t v111 = (uint64_t)v258;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v265, (char *)&v265 + 8);

    swift_bridgeObjectRelease(v124);
    _os_log_impl(&dword_0, v116, v117, "CommonMedia#makeSiriKitIntentHandler for intent: %s", v118, 0xCu);
    swift_arrayDestroy(v119, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v125 = v119;
    os_log_type_t v110 = v262;
    swift_slowDealloc(v125, -1LL, -1LL);
    swift_slowDealloc(v118, -1LL, -1LL);

    uint64_t v126 = (uint64_t (**)(_BYTE *, uint64_t, uint64_t))v261[1];
    ((void (*)(_BYTE *, uint64_t))v126)(v260, v110);
  }

  else
  {

    uint64_t v126 = (uint64_t (**)(_BYTE *, uint64_t, uint64_t))v112[1];
    ((void (*)(_BYTE *, uint64_t))v126)(v114, v110);
  }

  NSNumber v127 = v263;
  uint64_t v128 = v257;
  if ((sub_7F354() & 1) != 0)
  {
    uint64_t v129 = v255;
    uint64_t v130 = v113(v255, v111, v110);
    id v131 = (os_log_s *)Logger.logObject.getter(v130);
    uint64_t v132 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v133 = swift_slowAlloc(12LL, -1LL);
      uint64_t v261 = v126;
      uint64_t v134 = (uint8_t *)v133;
      os_log_type_t v135 = swift_slowAlloc(32LL, -1LL);
      uint64_t v260 = v115;
      uint64_t v136 = v135;
      os_log_type_t v269 = v135;
      *(_DWORD *)uint64_t v134 = 136315138;
      uint64_t v258 = v134 + 4;
      uint64_t v137 = v253;
      uint64_t v138 = *(uint64_t (**)(uint64_t, uint64_t))(v253 + 24);
      unint64_t v139 = (void *)v138(v128, v253);
      ObjectType = swift_getObjectType(v139);

      *(void *)&uint64_t v266 = ObjectType;
      uint64_t v141 = sub_6C5C((uint64_t *)&unk_2875F0);
      os_log_type_t v142 = String.init<A>(describing:)(&v266, v141);
      uint64_t v144 = v143;
      *(void *)&uint64_t v266 = sub_6978(v142, v143, &v269);
      NSNumber v127 = v263;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v266, (char *)&v266 + 8);
      swift_bridgeObjectRelease(v144);
      _os_log_impl( &dword_0,  v131,  v132,  "CommonMedia#makeSiriKitIntentHandler IS for 1p music or podcasts, returning embedded handler: %s",  v134,  0xCu);
      swift_arrayDestroy(v136, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v145 = v136;
      uint64_t v115 = v260;
      swift_slowDealloc(v145, -1LL, -1LL);
      swift_slowDealloc(v134, -1LL, -1LL);

      ((void (*)(_BYTE *, uint64_t))v261)(v255, v262);
    }

    else
    {

      ((void (*)(_BYTE *, uint64_t))v126)(v129, v110);
      uint64_t v137 = v253;
      uint64_t v138 = *(uint64_t (**)(uint64_t, uint64_t))(v253 + 24);
    }

    swift_retain(v127);
    id v162 = v138(v128, v137);
    unint64_t v163 = v115;
    os_log_type_t v164 = v254;
    SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v127, v162, v163, v259);
    int v165 = type metadata accessor for SiriKitIntentHandler(0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56LL))( v164,  0LL,  1LL,  v165);
  }

  else
  {
    v113(v256, v111, v110);
    uint64_t v146 = v115;
    swift_retain_n(v127, 2LL);
    uint64_t v147 = v146;
    os_log_type_t v148 = (os_log_s *)Logger.logObject.getter(v147);
    uint64_t v149 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v148, v149))
    {
      uint64_t v261 = v126;
      uint64_t v150 = swift_slowAlloc(22LL, -1LL);
      uint64_t v151 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)uint64_t v150 = 138412546;
      uint64_t v152 = App.appIdentifier.getter(v151);
      uint64_t v154 = v153;
      uint64_t v155 = v254;
      if (v153)
      {
        unint64_t v156 = String.debugDescription.getter(v152, v153);
        uint64_t v158 = v157;
        swift_bridgeObjectRelease(v154);
        uint64_t v159 = sub_6C9C();
        id v160 = swift_allocError(&type metadata for String, v159, 0LL, 0LL);
        *uint64_t v161 = v156;
        v161[1] = v158;
        NSNumber v127 = v263;
        uint64_t v154 = _swift_stdlib_bridgeErrorToNSError(v160);
        os_log_type_t v269 = v154;
      }

      else
      {
        os_log_type_t v269 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v269, v270);
      *uint64_t v151 = v154;
      swift_release_n(v127, 2LL);
      *(_WORD *)(v150 + 1sub_6C3C(v0 + 2) = 2112;
      uint64_t v166 = [v147 launchId];
      uint64_t v167 = v166;
      if (v166)
      {
        id v168 = static String._unconditionallyBridgeFromObjectiveC(_:)(v166);
        uint64_t v170 = v169;

        uint64_t v171 = sub_6C9C();
        unint64_t v172 = swift_allocError(&type metadata for String, v171, 0LL, 0LL);
        *unint64_t v173 = v168;
        v173[1] = v170;
        uint64_t v167 = (void *)_swift_stdlib_bridgeErrorToNSError(v172);
        os_log_type_t v269 = (uint64_t)v167;
      }

      else
      {
        os_log_type_t v269 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v269, v270);
      os_log_type_t v110 = v262;
      v151[1] = (uint64_t)v167;

      _os_log_impl( &dword_0,  v148,  v149,  "CommonMedia#makeSiriKitIntentHandler not for 1p music or podcasts (or radio on watch). Bundle: %@, intent launchId: %@",  (uint8_t *)v150,  0x16u);
      id v174 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v151, 2LL, v174);
      swift_slowDealloc(v151, -1LL, -1LL);
      swift_slowDealloc(v150, -1LL, -1LL);

      uint64_t v126 = v261;
    }

    else
    {

      swift_release_n(v127, 2LL);
      uint64_t v155 = v254;
    }

    ((void (*)(_BYTE *, uint64_t))v126)(v256, v110);
    uint64_t v175 = type metadata accessor for SiriKitIntentHandler(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56LL))( v155,  1LL,  1LL,  v175);
  }

    int64_t v16 = (v22 - 1) & v22;
    uint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = *(void *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v20, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))( *(void *)(v8 + 48) + v20,  v5,  v2);
  }

  unint64_t v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    uint64_t result = (void *)swift_release(v6);
    uint64_t v1 = v25;
    goto LABEL_30;
  }

  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    unint64_t v13 = v23;
    goto LABEL_27;
  }

  while (1)
  {
    unint64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }

    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    int64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain(v18);
  }

  unint64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  uint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }

  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    uint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }

LABEL_39:
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    uint64_t v61 = swift_allocObject(v52, 48LL, 7LL);
    *(_OWORD *)(v61 + 16) = v120;
    uint64_t v62 = 2;
LABEL_40:
    *(void *)(v61 + 3sub_6C3C(v0 + 2) = sub_A89B0(v62);
    *(void *)(v61 + 40) = v63;
    NLContextUpdate.weightedPromptResponseTargets.setter(v61);

    goto LABEL_12;
  }

  if (v42 == 0xD000000000000012LL && v24 == 0x800000000021CD90LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x800000000021CD90LL) & 1) != 0
    || v42 == 0xD000000000000015LL && v24 == 0x800000000021CDC0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015LL, 0x800000000021CDC0LL) & 1) != 0)
  {
    uint64_t v43 = swift_allocObject(v27, 48LL, 7LL);
    *(_OWORD *)(v43 + 16) = v120;
    uint64_t v44 = 11;
  }

  else if (v42 == 0x6B63616279616C70LL && v24 == 0xED00006465657053LL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6B63616279616C70LL, 0xED00006465657053LL) & 1) != 0)
  }
  {
    uint64_t v43 = swift_allocObject(v27, 48LL, 7LL);
    *(_OWORD *)(v43 + 16) = v120;
    uint64_t v44 = 12;
  }

  else
  {
    if ((v42 != 0x7974696E69666661LL || v24 != 0xEC00000065707954LL)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7974696E69666661LL, 0xEC00000065707954LL) & 1) == 0)
    {
      if (v42 == 0x6675685379616C70LL && v24 == 0xEC00000064656C66LL
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6675685379616C70LL, 0xEC00000064656C66LL) & 1) != 0)
      {
        uint64_t v64 = swift_allocObject(v27, 80LL, 7LL);
        *(_OWORD *)(v64 + 16) = xmmword_2168F0;
        uint64_t v65 = String.uppercased()();
        uint64_t v128 = v27;
        uint64_t v134 = v65;
        uint64_t v132 = 32LL;
        uint64_t v133 = 0xE100000000000000LL;
        uint64_t v130 = 95LL;
        id v131 = 0xE100000000000000LL;
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
        uint64_t v67 = v66;
        swift_bridgeObjectRelease(v65._object);
        v134._countAndFlagsBits = sub_A89B0(1u);
        v134._object = v68;
        v69._countAndFlagsBits = 0x2E65756C61562ELL;
        v69._object = (void *)0xE700000000000000LL;
        String.append(_:)(v69);
        BOOL v70 = String.uppercased()();
        uint64_t v71 = v70._object;
        String.append(_:)(v70);
        swift_bridgeObjectRelease(v67);
        swift_bridgeObjectRelease(v71);
        uint64_t v72 = v134._object;
        *(void *)(v64 + 3sub_6C3C(v0 + 2) = v134._countAndFlagsBits;
        *(void *)(v64 + 40) = v72;
        unint64_t v73 = String.uppercased()();
        uint64_t v134 = v73;
        uint64_t v132 = 32LL;
        uint64_t v133 = 0xE100000000000000LL;
        uint64_t v130 = 95LL;
        id v131 = 0xE100000000000000LL;
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
        uint64_t v75 = v74;
        swift_bridgeObjectRelease(v73._object);
        v134._countAndFlagsBits = sub_A89B0(1u);
        v134._object = v76;
        v77._countAndFlagsBits = 0x2E65756C61562ELL;
        v77._object = (void *)0xE700000000000000LL;
        String.append(_:)(v77);
        unint64_t v78 = String.uppercased()();
        uint64_t v79 = v78._object;
        String.append(_:)(v78);
        swift_bridgeObjectRelease(v75);
        swift_bridgeObjectRelease(v79);
        uint64_t v80 = v134._object;
        *(void *)(v64 + 48) = v134._countAndFlagsBits;
        *(void *)(v64 + 56) = v80;
        uint64_t v81 = String.uppercased()();
        uint64_t v134 = v81;
        uint64_t v132 = 32LL;
        uint64_t v133 = 0xE100000000000000LL;
        uint64_t v130 = 95LL;
        id v131 = 0xE100000000000000LL;
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
        unint64_t v83 = v82;
        swift_bridgeObjectRelease(v81._object);
        v134._countAndFlagsBits = sub_A89B0(1u);
        v134._object = v84;
        v85._countAndFlagsBits = 0x2E65756C61562ELL;
        v85._object = (void *)0xE700000000000000LL;
        String.append(_:)(v85);
        char v86 = String.uppercased()();
        uint64_t v87 = v86._object;
        String.append(_:)(v86);
        swift_bridgeObjectRelease(v83);
        swift_bridgeObjectRelease(v87);
        unint64_t v88 = v134._object;
        *(void *)(v64 + 64) = v134._countAndFlagsBits;
        *(void *)(v64 + 7sub_6C3C(v0 + 2) = v88;
        __int128 v35 = v129;
        NLContextUpdate.weightedPromptResponseOptions.setter(v64);
        uint64_t v89 = v128;
      }

      else
      {
        if ((v42 != 0x6C50656D75736572LL || v24 != 0xEE006B6361627961LL)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C50656D75736572LL, 0xEE006B6361627961LL) & 1) == 0)
        {
          uint64_t v49 = v121;
          __int128 v48 = v122;
          (*(void (**)(char *, uint64_t))(v121 + 8))(v129, v122);
          uint64_t v50 = 1LL;
          uint64_t v47 = v123;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v47, v50, 1LL, v48);
        }

        uint64_t v92 = v27;
        uint64_t v93 = swift_allocObject(v27, 80LL, 7LL);
        *(_OWORD *)(v93 + 16) = xmmword_2168F0;
        uint64_t v94 = String.uppercased()();
        uint64_t v134 = v94;
        uint64_t v132 = 32LL;
        uint64_t v133 = 0xE100000000000000LL;
        uint64_t v130 = 95LL;
        id v131 = 0xE100000000000000LL;
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
        uint64_t v96 = v95;
        swift_bridgeObjectRelease(v94._object);
        v134._countAndFlagsBits = sub_A89B0(1u);
        v134._object = v97;
        v98._countAndFlagsBits = 0x2E65756C61562ELL;
        v98._object = (void *)0xE700000000000000LL;
        String.append(_:)(v98);
        id v99 = String.uppercased()();
        uint64_t v100 = v99._object;
        String.append(_:)(v99);
        swift_bridgeObjectRelease(v96);
        swift_bridgeObjectRelease(v100);
        uint64_t v101 = v134._object;
        *(void *)(v93 + 3sub_6C3C(v0 + 2) = v134._countAndFlagsBits;
        *(void *)(v93 + 40) = v101;
        uint64_t v102 = String.uppercased()();
        uint64_t v134 = v102;
        uint64_t v132 = 32LL;
        uint64_t v133 = 0xE100000000000000LL;
        uint64_t v130 = 95LL;
        id v131 = 0xE100000000000000LL;
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
        BOOL v104 = v103;
        swift_bridgeObjectRelease(v102._object);
        v134._countAndFlagsBits = sub_A89B0(1u);
        v134._object = v105;
        v106._countAndFlagsBits = 0x2E65756C61562ELL;
        v106._object = (void *)0xE700000000000000LL;
        String.append(_:)(v106);
        uint64_t v107 = String.uppercased()();
        uint64_t v108 = v107._object;
        String.append(_:)(v107);
        swift_bridgeObjectRelease(v104);
        swift_bridgeObjectRelease(v108);
        uint64_t v109 = v134._object;
        *(void *)(v93 + 48) = v134._countAndFlagsBits;
        *(void *)(v93 + 56) = v109;
        os_log_type_t v110 = String.uppercased()();
        uint64_t v134 = v110;
        uint64_t v132 = 32LL;
        uint64_t v133 = 0xE100000000000000LL;
        uint64_t v130 = 95LL;
        id v131 = 0xE100000000000000LL;
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
        os_log_type_t v112 = v111;
        swift_bridgeObjectRelease(v110._object);
        v134._countAndFlagsBits = sub_A89B0(1u);
        v134._object = v113;
        v114._countAndFlagsBits = 0x2E65756C61562ELL;
        v114._object = (void *)0xE700000000000000LL;
        String.append(_:)(v114);
        uint64_t v115 = String.uppercased()();
        uint64_t v116 = v115._object;
        String.append(_:)(v115);
        swift_bridgeObjectRelease(v112);
        swift_bridgeObjectRelease(v116);
        uint64_t v117 = v134._object;
        *(void *)(v93 + 64) = v134._countAndFlagsBits;
        *(void *)(v93 + 7sub_6C3C(v0 + 2) = v117;
        __int128 v35 = v129;
        NLContextUpdate.weightedPromptResponseOptions.setter(v93);
        uint64_t v89 = v92;
      }

      uint64_t v90 = swift_allocObject(v89, 48LL, 7LL);
      *(_OWORD *)(v90 + 16) = v120;
      *(void *)(v90 + 3sub_6C3C(v0 + 2) = sub_A89B0(1u);
      *(void *)(v90 + 40) = v91;
      uint64_t v46 = v90;
      goto LABEL_11;
    }

    uint64_t v43 = swift_allocObject(v27, 48LL, 7LL);
    *(_OWORD *)(v43 + 16) = v120;
    uint64_t v44 = 13;
  }

  (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
LABEL_40:
  unint64_t v83 = swift_beginAccess(&v110, v109, 0LL, 0LL);
  uint64_t v84 = v110;
  uint64_t v85 = static os_signpost_type_t.event.getter(v83);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  char v86 = qword_296AA0;
  uint64_t v87 = sub_6C5C((uint64_t *)&unk_289320);
  unint64_t v88 = swift_allocObject(v87, 72LL, 7LL);
  *(_OWORD *)(v88 + 16) = xmmword_214510;
  *(void *)(v88 + 56) = &type metadata for Int;
  *(void *)(v88 + 64) = &protocol witness table for Int;
  *(void *)(v88 + 3sub_6C3C(v0 + 2) = v84;
  static OSSignpostID.exclusive.getter(v88);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v85,  &dword_0,  v86,  "playFlowFrameWrapperPlaybackInfo",  32LL,  2LL,  v10,  "sirikitPlaybackQueueStatus=%{signpost.telemetry:number1,public}d enableTelemetry=YES ",  85LL,  2,  v88);
  swift_bridgeObjectRelease(v88);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_26440(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_2646C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_264C0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4LL;
  }
  unint64_t v8 = v7 - 4;
  int64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_26570(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_265A8(uint64_t a1, char a2)
{
  return sub_15554C(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_265B4(uint64_t a1, char a2)
{
  return sub_265C0( a1,  a2,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_265D8);
}

uint64_t sub_265C0( uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, void))
{
  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_265D8( uint64_t a1, char a2, uint64_t a3, void (*a4)(char *, id), void *a5, void (*a6)(uint64_t *), uint64_t a7, char *a8)
{
  unint64_t v83 = a8;
  uint64_t v89 = a7;
  uint64_t v90 = a5;
  uint64_t v87 = a6;
  uint64_t v88 = a3;
  os_log_type_t v91 = a4;
  uint64_t v86 = type metadata accessor for Logger(0LL);
  uint64_t v82 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v12);
  uint64_t v85 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v14);
  uint64_t v84 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  BOOL v26 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.pmhis(_:),  v23);
    (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v19);
    unint64_t v83 = v18;
    uint64_t v48 = a1;
    uint64_t v81 = a1;
    swift_getErrorValue(a1, v95, v94);
    uint64_t v49 = v94[1];
    uint64_t v50 = v94[2];
    swift_errorRetain(v48);
    uint64_t v51 = Error.localizedDescription.getter(v49, v50);
    uint64_t v53 = v52;
    uint64_t v86 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v26,  v22,  v51,  v52,  1LL,  0LL);
    uint64_t v55 = v54;
    swift_bridgeObjectRelease(v53);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    uint64_t v57 = *(void *)(v88
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v56 = *(void *)(v88
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider
                    + 32);
    sub_6EA8( (void *)(v88 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider),  v57);
    uint64_t v58 = enum case for ActivityType.failed(_:);
    uint64_t v59 = type metadata accessor for ActivityType(0LL);
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v83, v58, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v61, 0LL, 1LL, v59);
    uint64_t v62 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v63 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v84, 1LL, 1LL, v62);
    uint64_t v64 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v65 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v66 = *(void *)(v65 - 8);
    uint64_t v67 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 104))(v85, v64, v65);
    uint64_t v68 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v67, 0LL, 1LL, v65);
    uint64_t v69 = v90;
    uint64_t v70 = INPlayMediaIntent.firstMediaItemType()(v68);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v91,  v69,  v61,  v63,  v67,  v86,  v55,  v70,  0,  v57,  v56);
    swift_bridgeObjectRelease(v55);
    sub_1F6CC(v67, &qword_2845A0);
    sub_1F6CC(v63, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v61, &qword_2845A8);
    uint64_t v71 = v81;
    v92[0] = v81;
    char v93 = 1;
    swift_errorRetain(v81);
    v87(v92);
    sub_25404(v71, 1);
    return sub_1F6CC((uint64_t)v92, (uint64_t *)&unk_286C60);
  }

  uint64_t v27 = v88;
  uint64_t v28 = a1 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v29 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0) {
      uint64_t v79 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v79 = a1;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v79);
  }

  else
  {
    uint64_t v30 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(a1);
  }

  uint64_t v32 = v89;
  __int128 v31 = v90;
  uint64_t v33 = v91;
  uint64_t v34 = v86;
  uint64_t v35 = v27;
  if (v30)
  {
    if ((v29 & 0xC000000000000001LL) != 0)
    {
      id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v29);
    }

    else
    {
      if (!*(void *)(v28 + 16))
      {
        __break(1u);
        goto LABEL_22;
      }

      id v36 = *(id *)(v29 + 32);
    }

    uint64_t v37 = v36;
    id v38 = [v36 viewId];

    uint64_t v35 = v27;
    if (v38)
    {
      uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      uint64_t v33 = v39;

      if (qword_283888 == -1)
      {
LABEL_10:
        uint64_t v40 = sub_6960(v34, (uint64_t)qword_2969C8);
        uint64_t v41 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v11, v40, v34);
        uint64_t v42 = swift_bridgeObjectRetain(v33);
        uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
        os_log_type_t v44 = static os_log_type_t.info.getter(v43);
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v46 = swift_slowAlloc(32LL, -1LL);
          v92[0] = v46;
          uint64_t v81 = v29;
          *(_DWORD *)uint64_t v45 = 136315138;
          uint64_t v85 = (char *)(v45 + 4);
          swift_bridgeObjectRetain(v33);
          uint64_t v96 = sub_6978(v86, (unint64_t)v33, v92);
          uint64_t v29 = v81;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97);
          swift_bridgeObjectRelease_n(v33, 3LL);
          _os_log_impl(&dword_0, v43, v44, "HandleIntentStrategy#makeIntentHandledResponse viewId: %s", v45, 0xCu);
          swift_arrayDestroy(v46, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v47 = v46;
          uint64_t v32 = v89;
          swift_slowDealloc(v47, -1LL, -1LL);
          swift_slowDealloc(v45, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v82 + 8))(v11, v34);
        }

        else
        {
          swift_bridgeObjectRelease_n(v33, 2LL);

          (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v34);
        }

        __int128 v31 = v90;
        uint64_t v33 = v91;
        uint64_t v35 = v27;
        goto LABEL_15;
      }

LABEL_22:
      swift_once(&qword_283888, sub_BFC5C);
      goto LABEL_10;
    }
  }

    uint64_t v27 = 0LL;
    BOOL v26 = 0xE000000000000000LL;
    goto LABEL_23;
  }

  __break(1u);
}

  uint64_t v23 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  uint64_t v24 = (uint64_t *)(*(void *)(v23 + 48) + 16 * a3);
  *uint64_t v24 = v8;
  v24[1] = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1LL);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

            unint64_t v78 = *((void *)v145 + 3);
            uint64_t v79 = *((void *)v145 + 4);
            sub_6EA8(v145, v78);
            uint64_t v80 = (uint64_t)v132;
            dispatch thunk of AudioIntent.mediaType.getter(v78, v79);
            uint64_t v81 = (uint64_t)&v49[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType];
            swift_beginAccess( &v49[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType],  v154,  33LL,  0LL);
            sub_64F40(v80, v81);
            swift_endAccess(v154);
            goto LABEL_23;
          }

          sub_1F6CC(v134, &qword_284DC8);
          sub_1F6CC(v65, &qword_284DC8);
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v73, v70);
        }

        sub_1F6CC(v71, &qword_284DA0);
        sub_6C3C(v150);
        goto LABEL_23;
      }

      sub_1F6CC(v136, &qword_284DC8);
      sub_1F6CC(v137, &qword_284DC8);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v66, v59);
      uint64_t v65 = (uint64_t)v135;
    }

    sub_1F6CC(v141, &qword_284DA0);
    sub_157C4((uint64_t)v145, (uint64_t)v150);
    goto LABEL_14;
  }

  sub_1F6CC((uint64_t)v33, &qword_284E30);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v41 = sub_6960(v27, (uint64_t)qword_2969C8);
  uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, v41, v27);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v44 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl(&dword_0, v43, v44, "UpdateMediaIntent#amend failed to get now playing info", v45, 2u);
    swift_slowDealloc(v45, -1LL, -1LL);
  }

  uint64_t v46 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  v146(v46);
}

LABEL_15:
  uint64_t v73 = v35;
  unint64_t v74 = (void *)swift_allocObject(&unk_276500, 72LL, 7LL);
  v74[2] = v73;
  v74[3] = v33;
  uint64_t v75 = v87;
  v74[4] = v31;
  v74[5] = v75;
  uint64_t v76 = v83;
  v74[6] = v32;
  v74[7] = v76;
  v74[8] = v29;
  swift_retain(v73);
  swift_retain(v33);
  id v77 = v31;
  swift_retain(v32);
  unint64_t v78 = v76;
  sub_1562B8(v33, v77, (uint64_t)v76, (void (*)(void *))sub_200204, (uint64_t)v74);
  return swift_release(v74);
}

  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

  if (v5 == v2 && v6 == v3)
  {
    unint64_t v8 = 1;
    uint64_t v3 = v6;
  }

  else
  {
    unint64_t v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6);
  }

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  return v8 & 1;
}

  uint64_t v35 = swift_bridgeObjectRelease(v11);
  id v36 = v51;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v17)(v51, v16, v22, v35);
  uint64_t v37 = swift_bridgeObjectRetain_n(a3, 2LL);
  id v38 = (os_log_s *)Logger.logObject.getter(v37);
  uint64_t v39 = static os_log_type_t.default.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = v22;
    uint64_t v41 = v36;
    uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v43 = swift_slowAlloc(32LL, -1LL);
    uint64_t v56 = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    swift_bridgeObjectRetain(a3);
    uint64_t v55 = sub_6978(v54, (unint64_t)a3, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( &dword_0,  v38,  v39,  "InternalSignalsManager#doesIntenthaveInternalSignalWith prefix: %s is not present in intent. (unlock)",  v42,  0xCu);
    swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    swift_slowDealloc(v42, -1LL, -1LL);

    os_log_type_t v44 = v41;
    uint64_t v45 = v40;
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    os_log_type_t v44 = v36;
    uint64_t v45 = v22;
  }

  v52(v44, v45);
  uint64_t v32 = 0LL;
LABEL_20:
  uint64_t v46 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  uint64_t v47 = swift_retain(v46);
  dispatch thunk of PThreadMutex.unlock()(v47);
  swift_release(v46);
  return v32;
}

  uint64_t v32 = swift_bridgeObjectRelease(v22);
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v16)(v8, v15, v4, v32);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  uint64_t v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "InternalSignalsManager#getSignal could not find signal. (unlock)", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  v52(v8, v4);
  uint64_t v37 = *(void *)((char *)&dword_10 + (void)off_28CA28);
  id v38 = swift_retain(v37);
  dispatch thunk of PThreadMutex.unlock()(v38);
  swift_release(v37);
  return 0LL;
}

  uint64_t v34 = 0LL;
  uint64_t v35 = a17;
  if (v33)
  {
LABEL_7:
    id v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v33);
    uint64_t v37 = a19;
    if (v35) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }

uint64_t sub_26CE0(uint64_t a1, uint64_t a2, int a3)
{
  int v58 = a3;
  uint64_t v61 = a1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t)&v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v59 = &v57[-v9];
  __chkstk_darwin(v8);
  uint64_t v60 = &v57[-v10];
  unint64_t v62 = (unint64_t)a2 >> 62;
  uint64_t v63 = v11;
  uint64_t v12 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a2);
  for (; v12; uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v55))
  {
    uint64_t v13 = 4LL;
    while (1)
    {
      id v14 = (a2 & 0xC000000000000001LL) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a2)
          : *(id *)(a2 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1LL)) {
        break;
      }
      id v17 = [v14 dialog];

      if (v17)
      {
        swift_bridgeObjectRelease(a2);
        if (qword_283888 == -1) {
          goto LABEL_23;
        }
        goto LABEL_73;
      }

      ++v13;
      if (v16 == v12) {
        goto LABEL_10;
      }
    }

    __break(1u);
LABEL_60:
    if (a2 < 0) {
      uint64_t v55 = a2;
    }
    else {
      uint64_t v55 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
  }

LABEL_76:
  __break(1u);
  return result;
}

  if (v66[273] != -1LL) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v183 = v238;
  uint64_t v184 = sub_6960(v238, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v237 + 16))(v235, v184, v183);
  uint64_t v185 = v92;
  uint64_t v186 = (os_log_s *)Logger.logObject.getter(v185);
  uint64_t v187 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v186, v187))
  {
    uint64_t v188 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v189 = swift_slowAlloc(32LL, -1LL);
    uint64_t v239 = (uint64_t)v92;
    v240 = v189;
    *(_DWORD *)uint64_t v188 = 136315138;
    uint64_t v190 = v185;
    uint64_t v191 = sub_6C5C(&qword_28D458);
    uint64_t v192 = String.init<A>(describing:)(&v239, v191);
    uint64_t v194 = v193;
    uint64_t v239 = sub_6978(v192, v193, &v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, &v240);

    uint64_t v195 = v194;
    uint64_t v92 = v234;
    swift_bridgeObjectRelease(v195);
    _os_log_impl(&dword_0, v186, v187, "ConverterHelpers#convertMediaDestination mediaDestination: %s", v188, 0xCu);
    swift_arrayDestroy(v189, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v189, -1LL, -1LL);
    swift_slowDealloc(v188, -1LL, -1LL);
  }

  else
  {
  }

  (*(void (**)(char *, uint64_t))(v237 + 8))(v235, v238);
  swift_bridgeObjectRelease(v68);
  return (uint64_t)v92;
}

id sub_2744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [objc_allocWithZone(SAUIAddViews) init];
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  sub_97EC0(a4);
  sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a3);
  [v6 setViews:isa];

  NSString v8 = String._bridgeToObjectiveC()();
  [v6 setDialogPhase:v8];

  return v6;
}

uint64_t sub_27540(uint64_t a1)
{
  return sub_27548(a1, v1);
}

uint64_t sub_27548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28DDB8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v24[-v8 - 8];
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "PlayMediaRCHFlowWrapper#execute setting result...", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = sub_6C5C(&qword_289EA8);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v9, a1, v19);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0LL, 1LL, v19);
  sub_2AAFC((uint64_t)v9, (uint64_t)v7);
  uint64_t v21 = a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result;
  swift_beginAccess(v21, v24, 33LL, 0LL);
  sub_1E3E98((uint64_t)v7, v21);
  return swift_endAccess(v24);
}

uint64_t sub_27764(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v60 = a4;
  uint64_t v61 = a3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = App.appIdentifier.getter(v13);
  int v58 = a2;
  if (v17)
  {
    uint64_t v18 = v16;
    unint64_t v19 = v17;
    uint64_t v20 = (void *)static BundleIdentifiers.musicBundleIdentifiers.getter();
    char v21 = sub_881D0(v18, v19, v20);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0)
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v22 = sub_6960(v8, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v22, v8);
      uint64_t v23 = swift_bridgeObjectRetain(v19);
      os_log_type_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc(12LL, -1LL);
        uint64_t v57 = a5;
        uint64_t v27 = (uint8_t *)v26;
        uint64_t v28 = swift_slowAlloc(32LL, -1LL);
        uint64_t v56 = v9;
        uint64_t v29 = v28;
        uint64_t v62 = v28;
        *(_DWORD *)uint64_t v27 = 136446210;
        uint64_t v55 = v27 + 4;
        swift_bridgeObjectRetain(v19);
        uint64_t v64 = sub_6978(v18, v19, &v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65);
        swift_bridgeObjectRelease_n(v19, 3LL);
        _os_log_impl( &dword_0,  v24,  v25,  "PlayMediaRCHFlowWrapper#processAllContinuations for bundle: %{public}s IS a music or radio request, performing prepareForSetQueue validation...",  v27,  0xCu);
        swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1LL, -1LL);
        uint64_t v30 = v27;
        a5 = v57;
        swift_slowDealloc(v30, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v8);
      }

      else
      {

        swift_bridgeObjectRelease_n(v19, 2LL);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      }

      uint64_t v48 = v58;
      type metadata accessor for MediaPlaybackLite(0LL);
      uint64_t v49 = static MediaPlaybackLite.shared.getter();
      uint64_t v45 = (void *)swift_allocObject(&unk_275548, 64LL, 7LL);
      uint64_t v50 = v59;
      uint64_t v51 = v60;
      v45[2] = v59;
      v45[3] = a1;
      uint64_t v52 = v61;
      v45[4] = v48;
      v45[5] = v52;
      v45[6] = v51;
      v45[7] = a5;
      swift_retain(v50);
      swift_retain(a1);
      id v53 = v48;
      swift_retain(v52);
      swift_retain(a5);
      dispatch thunk of MediaPlaybackLite.waitForPrepareForSetQueue(completion:)(sub_27C8C, v45);
      swift_release(v49);
      return swift_release(v45);
    }

    swift_bridgeObjectRelease(v19);
    a2 = v58;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v31, v8);
  uint64_t v32 = swift_retain_n(a1, 2LL);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc(12LL, -1LL);
    uint64_t v56 = v9;
    id v36 = (uint8_t *)v35;
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    uint64_t v64 = v37;
    *(_DWORD *)id v36 = 136446210;
    uint64_t v57 = a5;
    uint64_t v62 = App.appIdentifier.getter(v37);
    uint64_t v63 = v38;
    uint64_t v39 = sub_6C5C(&qword_284600);
    uint64_t v40 = String.init<A>(describing:)(&v62, v39);
    unint64_t v42 = v41;
    uint64_t v62 = sub_6978(v40, v41, &v64);
    a5 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v42);
    _os_log_impl( &dword_0,  v33,  v34,  "PlayMediaRCHFlowWrapper#processAllContinuations %{public}s not a music or radio bundle identifier, skipping prepar eForSetQueue validation",  v36,  0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v43 = v37;
    a2 = v58;
    swift_slowDealloc(v43, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v8);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }

  uint64_t v44 = v59;
  uint64_t v45 = (void *)swift_allocObject(&unk_275520, 56LL, 7LL);
  uint64_t v46 = v60;
  v45[2] = a2;
  v45[3] = v46;
  v45[4] = a5;
  v45[5] = v44;
  v45[6] = a1;
  swift_retain(v44);
  swift_retain(a1);
  id v47 = a2;
  swift_retain(a5);
  dispatch thunk of AtomicValue.computeIfAbsent(startTimeMaxSecondsAgo:completion:)(0LL, 1LL, sub_33ECC, v45);
  return swift_release(v45);
}

uint64_t sub_27C8C(uint64_t a1)
{
  return sub_27C9C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
}

uint64_t sub_27C9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v107 = a7;
  uint64_t v108 = a5;
  uint64_t v103 = a6;
  uint64_t v104 = a2;
  uint64_t v105 = a3;
  uint64_t v106 = a4;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v109 = *(void *)(v8 - 8);
  uint64_t v110 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v102 = (char *)&v92 - v12;
  uint64_t v13 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v92 - v18;
  uint64_t v20 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 64LL);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v101 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v100 = (char *)&v92 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v92 - v28;
  uint64_t v30 = a1;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_FF10(v30, (uint64_t)v22, &qword_28A680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v22, 1LL, v34) == 1)
  {
    sub_1F6CC((uint64_t)v22, &qword_28A680);
LABEL_5:
    uint64_t v41 = v109;
    uint64_t v40 = v110;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v42 = sub_6960(v40, (uint64_t)qword_2969C8);
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v11, v42, v40);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl( &dword_0,  v44,  v45,  "PlayMediaRCHFlowWrapper#processAllContinuations found non-error result for prepareForSetQueue, continuing to val idate playback continuation...",  v46,  2u);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v40);
    id v47 = (void *)swift_allocObject(&unk_275570, 56LL, 7LL);
    uint64_t v49 = v106;
    uint64_t v48 = v107;
    uint64_t v50 = v103;
    v47[2] = v106;
    v47[3] = v50;
    v47[4] = v48;
    uint64_t v51 = v104;
    uint64_t v52 = v105;
    v47[5] = v104;
    v47[6] = v52;
    swift_retain(v51);
    swift_retain(v52);
    id v53 = v49;
    swift_retain(v48);
    dispatch thunk of AtomicValue.computeIfAbsent(startTimeMaxSecondsAgo:completion:)(0LL, 1LL, sub_33ECC, v47);
    return swift_release(v47);
  }

  unint64_t v98 = *(uint64_t (**)(char *, char *, uint64_t))(v32 + 32);
  uint64_t v35 = v98(v29, v22, v34);
  uint64_t v36 = v32;
  PlaybackCodeAndDescription.playbackCode.getter(v35);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))( v17,  enum case for PlaybackCode.noSetQueueCodes(_:),  v13);
  uint64_t v37 = sub_10430( &qword_28B620,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  char v38 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v17, v13, v37);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v14 + 8);
  v39(v17, v13);
  v39(v19, v13);
  if ((v38 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v34);
    goto LABEL_5;
  }

  uint64_t v55 = v36;
  id v99 = v29;
  uint64_t v56 = v34;
  uint64_t v58 = v109;
  uint64_t v57 = v110;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v59 = sub_6960(v57, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v102, v59, v57);
  uint64_t v95 = v56;
  uint64_t v96 = v55;
  uint64_t v60 = v100;
  uint64_t v97 = *(uint64_t (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v61 = v97(v100, v99, v56);
  uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
  os_log_type_t v63 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v65 = swift_slowAlloc(32LL, -1LL);
    uint64_t v94 = v65;
    v112[0] = v65;
    *(_DWORD *)uint64_t v64 = 136446210;
    uint64_t v92 = v64 + 4;
    char v93 = v64;
    uint64_t v66 = PlaybackCodeAndDescription.playbackCode.getter(v65);
    uint64_t v67 = PlaybackCode.rawValue.getter(v66);
    unint64_t v69 = v68;
    v39(v19, v13);
    uint64_t v111 = sub_6978(v67, v69, v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, v112);
    swift_bridgeObjectRelease(v69);
    uint64_t v71 = v95;
    uint64_t v70 = v96;
    uint64_t v72 = *(void (**)(char *, uint64_t))(v96 + 8);
    v72(v60, v95);
    os_log_type_t v73 = v63;
    unint64_t v74 = v93;
    _os_log_impl( &dword_0,  v62,  v73,  "PlayMediaRCHFlowWrapper#processAllContinuations found unsuccessful prepareForSetQueue response %{public}s... waiti ng for playback continuation to complete to error...",  v93,  0xCu);
    uint64_t v75 = v94;
    swift_arrayDestroy(v94, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v75, -1LL, -1LL);
    swift_slowDealloc(v74, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v109 + 8))(v102, v110);
    uint64_t v76 = v70;
  }

  else
  {
    uint64_t v71 = v95;
    uint64_t v76 = v96;
    uint64_t v72 = *(void (**)(char *, uint64_t))(v96 + 8);
    v72(v60, v95);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v102, v57);
  }

  id v77 = v101;
  unint64_t v78 = v99;
  v97(v101, v99, v71);
  uint64_t v79 = *(unsigned __int8 *)(v76 + 80);
  uint64_t v80 = (v79 + 16) & ~v79;
  unint64_t v81 = (v24 + v80 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v82 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v83 = (v82 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v84 = (v83 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v85 = swift_allocObject(&unk_275598, v84 + 16, v79 | 7);
  v98((char *)(v85 + v80), v77, v71);
  uint64_t v86 = v104;
  uint64_t v87 = v105;
  *(void *)(v85 + v81) = v104;
  *(void *)(v85 + v8sub_6C3C(v0 + 2) = v87;
  uint64_t v89 = v106;
  uint64_t v88 = v107;
  *(void *)(v85 + v83) = v106;
  uint64_t v90 = (void *)(v85 + v84);
  *uint64_t v90 = v103;
  v90[1] = v88;
  swift_retain(v86);
  swift_retain(v87);
  id v91 = v89;
  swift_retain(v88);
  dispatch thunk of AtomicValue.computeIfAbsent(startTimeMaxSecondsAgo:completion:)(0LL, 1LL, sub_1E3D34, v85);
  swift_release(v85);
  return ((uint64_t (*)(char *, uint64_t))v72)(v78, v71);
}

uint64_t sub_28358( uint64_t a1, void *a2, void (*a3)(char *), void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v203 = a6;
  uint64_t v206 = a4;
  uint64_t v207 = a5;
  uint64_t v205 = a3;
  uint64_t v195 = (void (*)(char *, char *, uint64_t))type metadata accessor for ExecuteResponse(0LL);
  uint64_t v194 = (uint8_t *)*((void *)v195 - 1);
  __chkstk_darwin(v195);
  uint64_t v193 = (char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_28DDB8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v201 = (uint64_t)&v179 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v199 = (uint64_t *)((char *)&v179 - v12);
  uint64_t v187 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v185 = (char *)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v184 = type metadata accessor for Parse(0LL);
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v182 = (void **)((char *)&v179 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v191 = type metadata accessor for Input(0LL);
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v181 = (char *)&v179 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v208 = *(void **)(v19 - 8);
  uint64_t v209 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v192 = (char *)&v179 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v200 = (char *)&v179 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v202 = (uint64_t *)((char *)&v179 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v179 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v179 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v179 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v179 - v35;
  uint64_t v37 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v179 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v198 = (char *)&v179 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v196 = (char *)&v179 - v44;
  uint64_t v197 = v45;
  __chkstk_darwin(v43);
  id v47 = (char *)&v179 - v46;
  uint64_t v48 = a1;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  sub_FF10(v48, (uint64_t)v39, &qword_28A680);
  int v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v39, 1LL, v50);
  id v204 = a2;
  if (v53 == 1)
  {
    sub_1F6CC((uint64_t)v39, &qword_28A680);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v54 = v209;
    uint64_t v55 = sub_6960(v209, (uint64_t)qword_2969C8);
    uint64_t v56 = v208;
    uint64_t v57 = (uint64_t (*)(char *, uint64_t, uint64_t))v208[2];
    uint64_t v58 = v57(v36, v55, v54);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v62 = v57;
      uint64_t v63 = swift_slowAlloc(32LL, -1LL);
      v210[0] = v63;
      *(_DWORD *)uint64_t v61 = 136446210;
      uint64_t v64 = static Insights.frameKit.getter();
      unint64_t v66 = v65;
      uint64_t v213 = sub_6978(v64, v65, v210);
      uint64_t v54 = v209;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, v214);
      swift_bridgeObjectRelease(v66);
      _os_log_impl( &dword_0,  v59,  v60,  "PlayMediaRCHFlowWrapper#processPlaybackContinuation %{public}s lingering continuation completed successfully",  v61,  0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v67 = v63;
      uint64_t v57 = v62;
      swift_slowDealloc(v67, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      unint64_t v68 = (void (*)(char *, uint64_t))v208[1];
    }

    else
    {

      unint64_t v68 = (void (*)(char *, uint64_t))v56[1];
    }

    v68(v36, v54);
    uint64_t v88 = INPlayMediaIntent.isNewPlaybackProducing()();
    if ((v88 & 1) == 0)
    {
      uint64_t v89 = v57(v192, v55, v54);
      uint64_t v90 = (os_log_s *)Logger.logObject.getter(v89);
      os_log_type_t v91 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v92 = 0;
        _os_log_impl( &dword_0,  v90,  v91,  "PlayMediaRCHFlowWrapper#processPlaybackContinuation allowing Siri to resume as not new playback producing",  v92,  2u);
        swift_slowDealloc(v92, -1LL, -1LL);
      }

      uint64_t v88 = ((uint64_t (*)(char *, uint64_t))v68)(v192, v54);
    }

    char v93 = v193;
    static ExecuteResponse.complete()(v88);
    v205(v93);
    return (*((uint64_t (**)(char *, void (*)(char *, char *, uint64_t)))v194 + 1))(v93, v195);
  }

  else
  {
    uint64_t v195 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v195(v47, v39, v50);
    Swift::Bool v69 = INPlayMediaIntent.isPommesResponse()();
    uint64_t v70 = &unk_283000;
    uint64_t v71 = v208;
    uint64_t v189 = v50;
    uint64_t v188 = v47;
    uint64_t v180 = v52;
    if (v69)
    {
      sub_FF10( v207 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_input,  (uint64_t)v17,  &qword_285BD0);
      uint64_t v72 = v190;
      uint64_t v73 = v191;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v17, 1LL, v191) == 1)
      {
        sub_1F6CC((uint64_t)v17, &qword_285BD0);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v74 = v209;
        uint64_t v75 = sub_6960(v209, (uint64_t)qword_2969C8);
        uint64_t v76 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71[2])(v34, v75, v74);
        id v77 = (os_log_s *)Logger.logObject.getter(v76);
        os_log_type_t v78 = static os_log_type_t.error.getter();
        BOOL v79 = os_log_type_enabled(v77, v78);
        id v47 = v188;
        if (v79)
        {
          uint64_t v80 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          unint64_t v81 = v47;
          uint64_t v82 = v50;
          uint64_t v83 = swift_slowAlloc(32LL, -1LL);
          v210[0] = v83;
          *(_DWORD *)uint64_t v80 = 136446210;
          uint64_t v84 = static Insights.frameKit.getter();
          unint64_t v86 = v85;
          uint64_t v213 = sub_6978(v84, v85, v210);
          uint64_t v70 = (void *)&unk_283000;
          uint64_t v71 = v208;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, v214);
          swift_bridgeObjectRelease(v86);
          _os_log_impl( &dword_0,  v77,  v78,  "PlayMediaRCHFlowWrapper#processPlaybackContinuation %{public}s Cache invalidation: input passed for pommesRe sponse extraction is nil",  v80,  0xCu);
          swift_arrayDestroy(v83, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v87 = v83;
          uint64_t v50 = v82;
          id v47 = v81;
          swift_slowDealloc(v87, -1LL, -1LL);
          swift_slowDealloc(v80, -1LL, -1LL);

          ((void (*)(char *, uint64_t))v71[1])(v34, v209);
        }

        else
        {

          ((void (*)(char *, uint64_t))v71[1])(v34, v74);
        }

        uint64_t v52 = v180;
      }

      else
      {
        uint64_t v95 = v181;
        uint64_t v96 = (*(uint64_t (**)(char *, char *, uint64_t))(v72 + 32))(v181, v17, v73);
        uint64_t v97 = v182;
        Input.parse.getter(v96);
        uint64_t v98 = v183;
        uint64_t v99 = v184;
        if ((*(unsigned int (**)(void **, uint64_t))(v183 + 88))(v97, v184) == enum case for Parse.pommesResponse(_:))
        {
          uint64_t v100 = v52;
          (*(void (**)(void **, uint64_t))(v98 + 96))(v97, v99);
          uint64_t v101 = *v97;
          uint64_t v102 = type metadata accessor for PommesSearchClient(0LL);
          swift_allocObject(v102, *(unsigned int *)(v102 + 48), *(unsigned __int16 *)(v102 + 52));
          uint64_t v103 = PommesSearchClient.init()();
          id v47 = v188;
          if (v103)
          {
            uint64_t v104 = v103;
            PommesSearchClient.invalidate(cachedResponse:)(v101);

            swift_release(v104);
            (*(void (**)(char *, uint64_t))(v190 + 8))(v95, v191);
          }

          else
          {
            if (qword_283888 != -1) {
              swift_once(&qword_283888, sub_BFC5C);
            }
            uint64_t v117 = v209;
            uint64_t v118 = sub_6960(v209, (uint64_t)qword_2969C8);
            uint64_t v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71[2])(v31, v118, v117);
            uint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
            os_log_type_t v121 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v120, v121))
            {
              uint64_t v122 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v123 = swift_slowAlloc(32LL, -1LL);
              v210[0] = v123;
              *(_DWORD *)uint64_t v122 = 136446210;
              uint64_t v194 = v122 + 4;
              uint64_t v124 = static Insights.frameKit.getter();
              unint64_t v126 = v125;
              uint64_t v213 = sub_6978(v124, v125, v210);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, v214);
              swift_bridgeObjectRelease(v126);
              _os_log_impl( &dword_0,  v120,  v121,  "PlayMediaRCHFlowWrapper#processPlaybackContinuation %{public}s Cache invalidation: nil PommesSearchClient instantiation",  v122,  0xCu);
              swift_arrayDestroy(v123, 1LL, (char *)&type metadata for Any + 8);
              uint64_t v127 = v123;
              uint64_t v71 = v208;
              swift_slowDealloc(v127, -1LL, -1LL);
              swift_slowDealloc(v122, -1LL, -1LL);

              ((void (*)(char *, uint64_t))v71[1])(v31, v209);
            }

            else
            {

              ((void (*)(char *, uint64_t))v71[1])(v31, v117);
            }

            (*(void (**)(char *, uint64_t))(v190 + 8))(v181, v191);
            uint64_t v50 = v189;
          }

          uint64_t v52 = v100;
          uint64_t v70 = &unk_283000;
        }

        else
        {
          id v47 = v188;
          if (qword_283888 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v105 = v209;
          uint64_t v106 = sub_6960(v209, (uint64_t)qword_2969C8);
          uint64_t v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v71[2])(v28, v106, v105);
          uint64_t v108 = (os_log_s *)Logger.logObject.getter(v107);
          os_log_type_t v109 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v108, v109))
          {
            uint64_t v110 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v111 = v52;
            uint64_t v112 = swift_slowAlloc(32LL, -1LL);
            v210[0] = v112;
            *(_DWORD *)uint64_t v110 = 136446210;
            uint64_t v113 = static Insights.frameKit.getter();
            unint64_t v115 = v114;
            uint64_t v213 = sub_6978(v113, v114, v210);
            uint64_t v71 = v208;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, v214);
            swift_bridgeObjectRelease(v115);
            _os_log_impl( &dword_0,  v108,  v109,  "PlayMediaRCHFlowWrapper#processPlaybackContinuation %{public}s Cache invalidation: non pommes-response input",  v110,  0xCu);
            swift_arrayDestroy(v112, 1LL, (char *)&type metadata for Any + 8);
            uint64_t v116 = v112;
            uint64_t v52 = v111;
            uint64_t v70 = (void *)&unk_283000;
            swift_slowDealloc(v116, -1LL, -1LL);
            swift_slowDealloc(v110, -1LL, -1LL);

            ((void (*)(char *, uint64_t))v71[1])(v28, v209);
            (*(void (**)(char *, uint64_t))(v190 + 8))(v181, v191);
          }

          else
          {

            ((void (*)(char *, uint64_t))v71[1])(v28, v105);
            (*(void (**)(char *, uint64_t))(v190 + 8))(v95, v191);
          }

          uint64_t v50 = v189;
          (*(void (**)(void **, uint64_t))(v183 + 8))(v182, v184);
        }
      }
    }

    if (v70[273] != -1LL) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v128 = v209;
    uint64_t v129 = sub_6960(v209, (uint64_t)qword_2969C8);
    uint64_t v130 = (char *)v71[2];
    id v131 = v202;
    uint64_t v193 = (char *)v129;
    uint64_t v192 = v130;
    ((void (*)(void *))v130)(v202);
    uint64_t v132 = v196;
    uint64_t v194 = *(uint8_t **)(v52 + 16);
    uint64_t v133 = ((uint64_t (*)(char *, char *, uint64_t))v194)(v196, v47, v50);
    uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
    os_log_type_t v135 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = swift_slowAlloc(22LL, -1LL);
      uint64_t v191 = swift_slowAlloc(64LL, -1LL);
      v210[0] = v191;
      *(_DWORD *)uint64_t v136 = 136446466;
      uint64_t v137 = static Insights.frameKit.getter();
      unint64_t v139 = v138;
      uint64_t v213 = sub_6978(v137, v138, v210);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, v214);
      uint64_t v140 = swift_bridgeObjectRelease(v139);
      *(_WORD *)(v136 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v141 = v132;
      os_log_type_t v142 = v185;
      uint64_t v143 = PlaybackCodeAndDescription.playbackCode.getter(v140);
      uint64_t v144 = PlaybackCode.rawValue.getter(v143);
      unint64_t v146 = v145;
      (*(void (**)(char *, uint64_t))(v186 + 8))(v142, v187);
      uint64_t v213 = sub_6978(v144, v146, v210);
      uint64_t v128 = v209;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, v214);
      swift_bridgeObjectRelease(v146);
      uint64_t v196 = *(char **)(v52 + 8);
      ((void (*)(char *, uint64_t))v196)(v141, v189);
      _os_log_impl( &dword_0,  v134,  v135,  "PlayMediaRCHFlowWrapper#processPlaybackContinuation %{public}s lingering continuation completed with error Playb ackCodeAndDescription: %{public}s",  (uint8_t *)v136,  0x16u);
      uint64_t v147 = v191;
      swift_arrayDestroy(v191, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v147, -1LL, -1LL);
      swift_slowDealloc(v136, -1LL, -1LL);

      os_log_type_t v148 = (void (*)(void *, uint64_t))v208[1];
      v148(v202, v128);
    }

    else
    {
      uint64_t v196 = *(char **)(v52 + 8);
      ((void (*)(char *, uint64_t))v196)(v132, v50);

      os_log_type_t v148 = (void (*)(void *, uint64_t))v71[1];
      v148(v131, v128);
    }

    uint64_t v149 = v204;
    id v150 = [objc_allocWithZone(INPlayMediaIntentResponse) initWithCode:6 userActivity:0];
    uint64_t v151 = v203;
    uint64_t v152 = (uint64_t)v199;
    *uint64_t v199 = v203;
    *(void *)(v152 + 8) = v149;
    *(void *)(v152 + 16) = v150;
    uint64_t v153 = enum case for RCHFlowResult.complete<A, B>(_:);
    uint64_t v154 = sub_6C5C(&qword_289EA8);
    uint64_t v155 = *(void *)(v154 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 104))(v152, v153, v154);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v155 + 56))(v152, 0LL, 1LL, v154);
    uint64_t v156 = v201;
    sub_2AAFC(v152, v201);
    uint64_t v157 = v207 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result;
    swift_beginAccess(v207 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result, v210, 33LL, 0LL);
    swift_retain(v151);
    id v204 = v149;
    uint64_t v208 = v150;
    sub_1E3E98(v156, v157);
    swift_endAccess(v210);
    uint64_t v158 = v200;
    uint64_t v159 = ((uint64_t (*)(char *, char *, uint64_t))v192)(v200, v193, v128);
    id v160 = (os_log_s *)Logger.logObject.getter(v159);
    os_log_type_t v161 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v160, v161))
    {
      id v162 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v162 = 0;
      _os_log_impl( &dword_0,  v160,  v161,  "PlayMediaRCHFlowWrapper#execute unexpected error causing cancel of any previously requested prepareForAudioHandoff",  v162,  2u);
      swift_slowDealloc(v162, -1LL, -1LL);
    }

    v148(v158, v128);
    static AceService.current.getter(v210);
    uint64_t v163 = v211;
    uint64_t v209 = v212;
    uint64_t v202 = sub_6EA8(v210, v211);
    os_log_type_t v164 = v198;
    int v165 = v188;
    uint64_t v166 = v189;
    ((void (*)(char *, char *, uint64_t))v194)(v198, v188, v189);
    uint64_t v167 = *(unsigned __int8 *)(v180 + 80);
    uint64_t v168 = (v167 + 24) & ~v167;
    unint64_t v169 = (v197 + v168 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v170 = (v169 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v171 = (v170 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v172 = swift_allocObject(&unk_275610, v171 + 16, v167 | 7);
    uint64_t v173 = v207;
    *(void *)(v172 + 16) = v207;
    v195((char *)(v172 + v168), v164, v166);
    uint64_t v174 = v203;
    uint64_t v175 = v204;
    *(void *)(v172 + v169) = v203;
    *(void *)(v172 + v170) = v175;
    uint64_t v176 = (void (**)(char *))(v172 + v171);
    unint64_t v177 = v206;
    *uint64_t v176 = v205;
    v176[1] = v177;
    swift_retain(v174);
    id v178 = v175;
    swift_retain(v173);
    swift_retain(v177);
    dispatch thunk of AceServiceInvoker.prepareForAudioHandoffFailed(completion:)(sub_1E3F9C, v172, v163, v209);

    swift_release(v172);
    ((void (*)(char *, uint64_t))v196)(v165, v166);
    return sub_6C3C(v210);
  }

uint64_t sub_29530@<X0>(void (*a1)(os_log_t, id, uint64_t)@<X8>)
{
  return sub_29550(a1);
}

uint64_t sub_29550@<X0>(void (*a1)(os_log_t, id, uint64_t)@<X8>)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "PlayMediaRCHFlowWrapper#exitValue exiting", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_29698(a1);
}

uint64_t sub_29698@<X0>(void (*a1)(os_log_t, id, uint64_t)@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_28DDB8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v157 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v163 = (uint64_t)&v153 - v7;
  uint64_t v8 = sub_6C5C(&qword_289EA8);
  os_log_type_t v9 = *(void (***)(char *, uint64_t, uint64_t))(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v160 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v153 - v12;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v158 = (char *)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v154 = (char *)&v153 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v155 = (void (**)(uint64_t, char *))((char *)&v153 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v153 = (void (*)(char *, uint64_t, uint64_t))((char *)&v153 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  os_log_t v156 = (os_log_t)((char *)&v153 - v25);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v153 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v29 = *(uint64_t (**)(void))(v15 + 16);
  id v161 = (id)v28;
  id v162 = (void (*)(os_log_t, id, uint64_t))v29;
  uint64_t v30 = v29(v27);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v159 = v14;
    uint64_t v34 = v13;
    uint64_t v35 = v9;
    uint64_t v36 = a1;
    uint64_t v37 = v8;
    uint64_t v38 = v2;
    uint64_t v39 = v33;
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "PlayMediaRCHFlowWrapper#exit", v33, 2u);
    uint64_t v40 = v39;
    uint64_t v2 = v38;
    uint64_t v8 = v37;
    a1 = v36;
    os_log_type_t v9 = v35;
    uint64_t v13 = v34;
    uint64_t v14 = v159;
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  uint64_t v41 = *(void (**)(char *, uint64_t))(v15 + 8);
  v41(v27, v14);
  uint64_t v42 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result, v169, 0LL, 0LL);
  uint64_t v43 = v163;
  sub_FF10(v42, v163, &qword_28DDB8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v9[6])(v43, 1LL, v8) != 1)
  {
    v9[4](v13, v43, v8);
    int v53 = v9[2];
    uint64_t v54 = v160;
    v53(v160, (uint64_t)v13, v8);
    int v55 = ((uint64_t (*)(void *, uint64_t))v9[11])(v54, v8);
    if (v55 == enum case for RCHFlowResult.complete<A, B>(_:))
    {
      uint64_t v153 = v53;
      uint64_t v154 = (char *)v8;
      uint64_t v163 = v2;
      uint64_t v155 = (void (**)(uint64_t, char *))v9;
      ((void (*)(void *, uint64_t))v9[12])(v54, v8);
      uint64_t v57 = *v54;
      uint64_t v56 = (void *)v54[1];
      uint64_t v58 = (void *)v54[2];
      os_log_t v59 = v156;
      v162(v156, v161, v14);
      id v60 = v58;
      swift_retain_n(v57, 2LL);
      id v61 = v56;
      id v62 = v60;
      id v63 = v61;
      uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
      os_log_type_t v65 = static os_log_type_t.default.getter();
      int v66 = v65;
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v67 = swift_slowAlloc(42LL, -1LL);
        uint64_t v159 = v14;
        uint64_t v68 = v67;
        id v162 = (void (*)(os_log_t, id, uint64_t))swift_slowAlloc(128LL, -1LL);
        uint64_t v168 = (void (*)(void, void, void))v162;
        *(_DWORD *)uint64_t v68 = 136446978;
        LODWORD(v161) = v66;
        uint64_t v69 = static Insights.frameKit.getter();
        uint64_t v158 = v13;
        unint64_t v71 = v70;
        id v164 = (id)sub_6978(v69, v70, (uint64_t *)&v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        swift_bridgeObjectRelease(v71);
        *(_WORD *)(v68 + 1sub_6C3C(v0 + 2) = 2080;
        id v164 = [v62 code];
        uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
        unint64_t v74 = v73;
        id v164 = (id)sub_6978(v72, v73, (uint64_t *)&v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);

        uint64_t v75 = swift_bridgeObjectRelease(v74);
        *(_WORD *)(v68 + 2sub_6C3C(v0 + 2) = 2080;
        id v164 = (id)App.appIdentifier.getter(v75);
        uint64_t v165 = v76;
        uint64_t v77 = sub_6C5C(&qword_284600);
        uint64_t v78 = String.init<A>(describing:)(&v164, v77);
        unint64_t v80 = v79;
        id v164 = (id)sub_6978(v78, v79, (uint64_t *)&v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        swift_release_n(v57, 2LL);
        uint64_t v81 = swift_bridgeObjectRelease(v80);
        *(_WORD *)(v68 + 3sub_6C3C(v0 + 2) = 2080;
        uint64_t v82 = INPlayMediaIntent.slimDescription.getter(v81);
        unint64_t v84 = v83;
        id v164 = (id)sub_6978(v82, v83, (uint64_t *)&v168);
        uint64_t v13 = v158;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);

        swift_bridgeObjectRelease(v84);
        _os_log_impl( &dword_0,  v64,  (os_log_type_t)v161,  "PlayMediaRCHFlowWrapper#exit %{public}s SUCCESS response code:%s with app:%s intent:%s",  (uint8_t *)v68,  0x2Au);
        unint64_t v85 = (void (*)(void, void, void))v162;
        swift_arrayDestroy(v162, 4LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v85, -1LL, -1LL);
        swift_slowDealloc(v68, -1LL, -1LL);

        os_log_t v86 = v156;
        uint64_t v87 = v159;
      }

      else
      {

        swift_release_n(v57, 2LL);
        os_log_t v86 = v59;
        uint64_t v87 = v14;
      }

      v41((char *)v86, v87);
      uint64_t v110 = (uint64_t)v157;
      uint64_t v111 = v163;
      sub_2A528((uint64_t)v13);
      uint64_t v113 = v153;
      uint64_t v112 = v154;
      v153((char *)v110, (uint64_t)v13, (uint64_t)v154);
      uint64_t v114 = (uint64_t)v13;
      unint64_t v115 = v155;
      ((void (*)(uint64_t, void, uint64_t, char *))v155[7])(v110, 0LL, 1LL, v112);
      sub_2A8CC(v110);
      sub_1F6CC(v110, &qword_28DDB8);
      sub_2AF04(v114);
      sub_2B5CC(v114);
      sub_1E3278(v114);
      v113((char *)a1, v114, (uint64_t)v112);

      uint64_t v2 = v111;
      swift_release(v57);

      v115[1](v114, v112);
      return sub_2BEF8(v2);
    }

    uint64_t v88 = v14;
    uint64_t v89 = enum case for RCHFlowResult.error<A, B>(_:);
    if (v55 == enum case for RCHFlowResult.error<A, B>(_:))
    {
      uint64_t v158 = v13;
      ((void (*)(void *, uint64_t))v9[12])(v54, v8);
      uint64_t v90 = v54;
      uint64_t v91 = *v54;
      LODWORD(v160) = *((unsigned __int8 *)v90 + 8);
      uint64_t v92 = (char *)v155;
      uint64_t v93 = v88;
      v162((os_log_t)v155, v161, v88);
      swift_errorRetain(v91);
      uint64_t v94 = swift_errorRetain(v91);
      uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
      os_log_type_t v96 = static os_log_type_t.error.getter();
      LODWORD(v16sub_6C3C(v0 + 2) = v96;
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = swift_slowAlloc(28LL, -1LL);
        uint64_t v163 = v2;
        uint64_t v98 = v97;
        id v161 = (id)swift_slowAlloc(64LL, -1LL);
        id v164 = v161;
        *(_DWORD *)uint64_t v98 = 136446722;
        os_log_t v156 = v95;
        uint64_t v99 = static Insights.frameKit.getter();
        uint64_t v153 = v53;
        unint64_t v101 = v100;
        uint64_t v168 = (void (*)(void, void, void))sub_6978(v99, v100, (uint64_t *)&v164);
        uint64_t v159 = v93;
        uint64_t v154 = (char *)v8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169);
        swift_bridgeObjectRelease(v101);
        *(_WORD *)(v98 + 1sub_6C3C(v0 + 2) = 1024;
        LODWORD(v168) = (_DWORD)v160;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 4);
        *(_WORD *)(v98 + 18) = 2082;
        swift_getErrorValue(v91, v167, v166);
        uint64_t v102 = Error.localizedDescription.getter(v166[1], v166[2]);
        unint64_t v104 = v103;
        uint64_t v168 = (void (*)(void, void, void))sub_6978(v102, v103, (uint64_t *)&v164);
        int v53 = v153;
        uint64_t v8 = (uint64_t)v154;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169);
        swift_bridgeObjectRelease(v104);
        swift_errorRelease(v91);
        swift_errorRelease(v91);
        os_log_t v105 = v156;
        _os_log_impl( &dword_0,  v156,  (os_log_type_t)v162,  "PlayMediaRCHFlowWrapper#exit %{public}s ERROR response. handled:%{BOOL}d error: %{public}s",  (uint8_t *)v98,  0x1Cu);
        id v106 = v161;
        swift_arrayDestroy(v161, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v106, -1LL, -1LL);
        uint64_t v107 = v98;
        uint64_t v2 = v163;
        swift_slowDealloc(v107, -1LL, -1LL);

        uint64_t v108 = v92;
        uint64_t v109 = v159;
      }

      else
      {
        swift_errorRelease(v91);
        swift_errorRelease(v91);

        uint64_t v108 = v92;
        uint64_t v109 = v93;
      }

      v41(v108, v109);
      uint64_t v133 = (uint64_t)v157;
      uint64_t v13 = v158;
      sub_2A528((uint64_t)v158);
      v53((char *)v133, (uint64_t)v13, v8);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v9[7])(v133, 0LL, 1LL, v8);
      sub_2A8CC(v133);
      sub_1F6CC(v133, &qword_28DDB8);
      sub_2AF04((uint64_t)v13);
      sub_2B5CC((uint64_t)v13);
      sub_1E3278((uint64_t)v13);
      v53((char *)a1, (uint64_t)v13, v8);
      swift_errorRelease(v91);
    }

    else
    {
      if (v55 != enum case for RCHFlowResult.cancelled<A, B>(_:))
      {
        uint64_t v158 = v13;
        uint64_t v159 = v88;
        uint64_t v134 = v154;
        uint64_t v135 = ((uint64_t (*)(char *, id, uint64_t))v162)(v154, v161, v88);
        uint64_t v136 = (os_log_s *)Logger.logObject.getter(v135);
        os_log_type_t v137 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v136, v137))
        {
          unint64_t v138 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          id v139 = (id)swift_slowAlloc(32LL, -1LL);
          id v162 = (void (*)(os_log_t, id, uint64_t))a1;
          uint64_t v163 = v2;
          id v140 = v139;
          id v164 = v139;
          *(_DWORD *)unint64_t v138 = 136446210;
          id v161 = v138 + 4;
          uint64_t v141 = static Insights.frameKit.getter();
          unint64_t v143 = v142;
          uint64_t v168 = (void (*)(void, void, void))sub_6978(v141, v142, (uint64_t *)&v164);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169);
          swift_bridgeObjectRelease(v143);
          _os_log_impl(&dword_0, v136, v137, "PlayMediaRCHFlowWrapper#exit %{public}s UNKNOWN response", v138, 0xCu);
          swift_arrayDestroy(v140, 1LL, (char *)&type metadata for Any + 8);
          id v144 = v140;
          a1 = (void (*)(void, void, void))v162;
          uint64_t v2 = v163;
          swift_slowDealloc(v144, -1LL, -1LL);
          swift_slowDealloc(v138, -1LL, -1LL);

          unint64_t v145 = v154;
        }

        else
        {

          unint64_t v145 = v134;
        }

        v41(v145, v159);
        uint64_t v147 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v148 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v149 = swift_allocError(v147, v148, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v147 - 8) + 104LL))( v150,  enum case for PlaybackCode.ceGE94(_:),  v147);
        uint64_t v151 = v9[1];
        ((void (*)(char *, uint64_t))v151)(v158, v8);
        *(void *)a1 = v149;
        *((_BYTE *)a1 + 8) = 0;
        v9[13]((char *)a1, v89, v8);
        ((void (*)(char *, uint64_t))v151)(v160, v8);
        return sub_2BEF8(v2);
      }

      uint64_t v163 = v2;
      uint64_t v116 = v153;
      uint64_t v117 = v88;
      uint64_t v118 = ((uint64_t (*)(void, id, uint64_t))v162)(v153, v161, v88);
      uint64_t v119 = (os_log_s *)Logger.logObject.getter(v118);
      os_log_type_t v120 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v119, v120))
      {
        id v162 = (void (*)(os_log_t, id, uint64_t))a1;
        uint64_t v121 = swift_slowAlloc(12LL, -1LL);
        uint64_t v158 = v13;
        uint64_t v122 = (uint8_t *)v121;
        id v123 = (id)swift_slowAlloc(32LL, -1LL);
        uint64_t v159 = v117;
        id v124 = v123;
        id v164 = v123;
        uint64_t v155 = (void (**)(uint64_t, char *))v9;
        *(_DWORD *)uint64_t v122 = 136446210;
        uint64_t v125 = static Insights.frameKit.getter();
        uint64_t v126 = v8;
        unint64_t v128 = v127;
        uint64_t v168 = (void (*)(void, void, void))sub_6978(v125, v127, (uint64_t *)&v164);
        os_log_type_t v9 = (void (**)(char *, uint64_t, uint64_t))v155;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, v169);
        unint64_t v129 = v128;
        uint64_t v8 = v126;
        a1 = (void (*)(void, void, void))v162;
        swift_bridgeObjectRelease(v129);
        _os_log_impl(&dword_0, v119, v120, "PlayMediaRCHFlowWrapper#exit %{public}s CANCELLED response", v122, 0xCu);
        swift_arrayDestroy(v124, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v124, -1LL, -1LL);
        uint64_t v130 = v122;
        uint64_t v13 = v158;
        swift_slowDealloc(v130, -1LL, -1LL);

        id v131 = v153;
        uint64_t v132 = v159;
      }

      else
      {

        id v131 = v116;
        uint64_t v132 = v117;
      }

      v41((char *)v131, v132);
      uint64_t v146 = (uint64_t)v157;
      uint64_t v2 = v163;
      sub_2A528((uint64_t)v13);
      v53((char *)v146, (uint64_t)v13, v8);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v9[7])(v146, 0LL, 1LL, v8);
      sub_2A8CC(v146);
      sub_1F6CC(v146, &qword_28DDB8);
      sub_2AF04((uint64_t)v13);
      sub_2B5CC((uint64_t)v13);
      sub_1E3278((uint64_t)v13);
      v53((char *)a1, (uint64_t)v13, v8);
    }

    ((void (*)(char *, uint64_t))v9[1])(v13, v8);
    return sub_2BEF8(v2);
  }

  sub_1F6CC(v43, &qword_28DDB8);
  uint64_t v44 = (uint64_t)v158;
  uint64_t v45 = ((uint64_t (*)(char *, id, uint64_t))v162)(v158, v161, v14);
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v48 = 0;
    _os_log_impl(&dword_0, v46, v47, "PlayMediaRCHFlowWrapper#exit missing saved result", v48, 2u);
    swift_slowDealloc(v48, -1LL, -1LL);
  }

  v41((char *)v44, v14);
  uint64_t v49 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v50 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v51 = swift_allocError(v49, v50, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v49 - 8) + 104LL))( v52,  enum case for PlaybackCode.ceGE93(_:),  v49);
  *(void *)a1 = v51;
  *((_BYTE *)a1 + 8) = 0;
  v9[13]((char *)a1, enum case for RCHFlowResult.error<A, B>(_:), v8);
  return sub_2BEF8(v2);
}

uint64_t sub_2A528(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = sub_6C5C(&qword_289EA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v37 - v13);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)&v37 - v13, a1, v8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v9 + 88);
  if (v16((char *)v14, v8) == enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v14, v8);
    uint64_t v17 = *v14;
    id v38 = (id)v14[1];
    uint64_t v18 = (void *)v14[2];
    v15(v12, a1, v8);
    int v19 = v16(v12, v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    int v20 = enum case for RCHFlowResult.cancelled<A, B>(_:);
    uint64_t v21 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v22 = v40;
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 16))(v7, v21, v2);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "PlayMediaRCHFlowWrapper#appSelectionRecord Saving...", v26, 2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v2);
    swift_retain(v17);
    id v27 = v38;
    id v28 = v38;
    id v29 = [v18 code];
    sub_DF2AC( v17,  v27,  (uint64_t)v29,  0,  v19 == v20,  *(void *)(v39 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_pseSignalsStitcher));

    return swift_release_n(v17, 2LL);
  }

  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v14, v8);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v31 = sub_6960(v2, (uint64_t)qword_2969C8);
    uint64_t v32 = v40;
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 16))(v5, v31, v2);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_0, v34, v35, "PlayMediaRCHFlowWrapper#appSelectionRecord unable to get RCH result", v36, 2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v5, v2);
  }

uint64_t sub_2A8CC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_28DDB8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "PlayMediaRCHFlowWrapper#logCoreAnalytics", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for AppSelectionContext(0LL);
  static ExecutorProvider.shared.getter(v25);
  uint64_t v15 = v26;
  uint64_t v16 = v27;
  sub_6EA8(v25, v26);
  uint64_t v17 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v15, v16);
  uint64_t v19 = v18;
  sub_FF10(a1, (uint64_t)&v25[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL), &qword_28DDB8);
  uint64_t v20 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v21 = (v20 + 16) & ~v20;
  uint64_t v22 = swift_allocObject(&unk_275408, v21 + v4, v20 | 7);
  sub_2AAFC((uint64_t)v5, v22 + v21);
  static AppSelectionContext.shared(refId:completion:)(v17, v19, sub_2AB44, v22);
  swift_release(v22);
  swift_bridgeObjectRelease(v19);
  return sub_6C3C(v25);
}

uint64_t sub_2AAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28DDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_2AB44(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_28DDB8) - 8) + 80LL);
  return sub_2AB84(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_2AB84(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v37 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_28DDB8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v32 = static DispatchQueues.analytics.getter(v13);
  sub_FF10(a2, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL), &qword_28DDB8);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (v14 + 24) & ~v14;
  uint64_t v33 = v14 | 7;
  uint64_t v16 = swift_allocObject(&unk_275430, v15 + v12, v14 | 7);
  *(void *)(v16 + 16) = a1;
  sub_2AAFC((uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL), v16 + v15);
  uint64_t v43 = sub_2C428;
  uint64_t v44 = v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v40 = 1107296256LL;
  uint64_t v41 = sub_6E7C;
  uint64_t v42 = &unk_275448;
  uint64_t v17 = _Block_copy(&aBlock);
  uint64_t v18 = swift_retain(a1);
  static DispatchQoS.unspecified.getter(v18);
  id v38 = _swiftEmptyArrayStorage;
  uint64_t v31 = sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v19 = sub_6C5C(&qword_285480);
  uint64_t v30 = v19;
  uint64_t v29 = sub_21318((unint64_t *)&qword_287950, &qword_285480, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v19);
  uint64_t v20 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v9, v6, v17);
  _Block_release(v17);

  uint64_t v37 = *(void *)(v37 + 8);
  ((void (*)(char *, uint64_t))v37)(v6, v4);
  uint64_t v21 = v36;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v35 + 8);
  v22(v9, v36);
  uint64_t v23 = swift_release(v44);
  uint64_t v24 = (void *)static DispatchQueues.analytics.getter(v23);
  sub_FF10(v34, (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL), &qword_28DDB8);
  uint64_t v25 = (v14 + 16) & ~v14;
  uint64_t v26 = swift_allocObject(&unk_275480, v25 + v12, v33);
  sub_2AAFC((uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL), v26 + v25);
  uint64_t v43 = sub_2DB48;
  uint64_t v44 = v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v40 = 1107296256LL;
  uint64_t v41 = sub_6E7C;
  uint64_t v42 = &unk_275498;
  uint64_t v27 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter(v27);
  id v38 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v9, v6, v27);
  _Block_release(v27);

  ((void (*)(char *, uint64_t))v37)(v6, v4);
  v22(v9, v21);
  return swift_release(v44);
}

uint64_t sub_2AF04(uint64_t a1)
{
  uint64_t v76 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v82 = *(void *)(v1 - 8);
  uint64_t v83 = v1;
  __chkstk_darwin(v1);
  uint64_t v81 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  __chkstk_darwin(v3);
  uint64_t v78 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_289EA8);
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  __chkstk_darwin(v5);
  uint64_t v72 = v6;
  unint64_t v73 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = type metadata accessor for Date(0LL);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v77 = type metadata accessor for DateInterval(0LL);
  uint64_t v85 = *(void *)(v77 - 8);
  uint64_t v9 = __chkstk_darwin(v77);
  unint64_t v84 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  os_log_t v86 = (char *)&v67 - v11;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v67 - v17;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v21 = v20(v18, v19, v12);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = v16;
    uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_0, v22, v23, "PlayMediaRCHFlowWrapper#saveToSiriMemory", v25, 2u);
    uint64_t v26 = v25;
    uint64_t v16 = v24;
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  uint64_t v28 = v27(v18, v12);
  static Date.now.getter(v28);
  uint64_t v29 = v86;
  DateInterval.init(start:duration:)(v8, 0.0);
  v20(v16, v19, v12);
  uint64_t v31 = v84;
  uint64_t v30 = v85;
  uint64_t v32 = v77;
  uint64_t v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 16))(v84, v29, v77);
  uint64_t v34 = v16;
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc(22LL, -1LL);
    uint64_t v38 = swift_slowAlloc(64LL, -1LL);
    uint64_t v67 = v38;
    aBlock[0] = v38;
    *(_DWORD *)uint64_t v37 = 136315394;
    static Date.now.getter(v38);
    uint64_t v39 = sub_10430( &qword_28B608,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v68 = v34;
    uint64_t v69 = v27;
    uint64_t v40 = v71;
    uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter(v71, v39);
    unint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v8, v40);
    uint64_t v87 = (void *)sub_6978(v41, v43, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
    swift_bridgeObjectRelease(v43);
    *(_WORD *)(v37 + 1sub_6C3C(v0 + 2) = 2080;
    uint64_t v44 = sub_10430( &qword_28DDE0,  (uint64_t (*)(uint64_t))&type metadata accessor for DateInterval,  (uint64_t)&protocol conformance descriptor for DateInterval);
    uint64_t v45 = v84;
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter(v32, v44);
    unint64_t v48 = v47;
    uint64_t v87 = (void *)sub_6978(v46, v47, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, aBlock);
    swift_bridgeObjectRelease(v48);
    uint64_t v49 = *(void (**)(char *, uint64_t))(v85 + 8);
    v49(v45, v32);
    _os_log_impl( &dword_0,  v35,  v36,  "PlayMediaRCHFlowWrapper#saveToSiriMemory called at: %s and dateInterval: %s",  (uint8_t *)v37,  0x16u);
    uint64_t v50 = v67;
    swift_arrayDestroy(v67, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);

    uint64_t v51 = v69(v68, v12);
  }

  else
  {
    uint64_t v49 = *(void (**)(char *, uint64_t))(v30 + 8);
    v49(v31, v32);

    uint64_t v51 = v27(v34, v12);
  }

  uint64_t v52 = v32;
  int v53 = (void *)static DispatchQueues.analytics.getter(v51);
  int v55 = v73;
  uint64_t v54 = v74;
  uint64_t v56 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v76, v75);
  uint64_t v57 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v58 = (v57 + 16) & ~v57;
  uint64_t v59 = swift_allocObject(&unk_2753B8, v58 + v72, v57 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v59 + v58, v55, v56);
  aBlock[4] = (uint64_t)sub_2E0E4;
  uint64_t v89 = v59;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_6E7C;
  aBlock[3] = (uint64_t)&unk_2753D0;
  id v60 = _Block_copy(aBlock);
  id v61 = v78;
  static DispatchQoS.unspecified.getter(v60);
  uint64_t v87 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v62 = sub_6C5C(&qword_285480);
  sub_21318((unint64_t *)&qword_287950, &qword_285480, (uint64_t)&protocol conformance descriptor for [A]);
  id v63 = v81;
  uint64_t v64 = v62;
  uint64_t v65 = v83;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v87, v64);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v61, v63, v60);
  _Block_release(v60);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v63, v65);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v61, v80);
  v49(v86, v52);
  return swift_release(v89);
}

uint64_t sub_2B5CC(uint64_t a1)
{
  uint64_t v112 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v107 = *(void *)(v1 - 8);
  uint64_t v108 = v1;
  __chkstk_darwin(v1);
  id v106 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v104 = *(void *)(v3 - 8);
  uint64_t v105 = v3;
  __chkstk_darwin(v3);
  unint64_t v103 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v99 = *(void *)(v5 - 8);
  uint64_t v100 = v5;
  __chkstk_darwin(v5);
  uint64_t v98 = (void (**)(char *, uint64_t, uint64_t))((char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v102 = type metadata accessor for DispatchTime(0LL);
  uint64_t v96 = *(void *)(v102 - 8);
  uint64_t v7 = __chkstk_darwin(v102);
  uint64_t v95 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  unint64_t v101 = (char *)&v91 - v9;
  uint64_t v10 = sub_6C5C(&qword_289EA8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v110 = v10;
  uint64_t v111 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v97 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v91 - v14;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v109 = (char *)&v91 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v93 = (char *)&v91 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v91 - v25;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v27 = sub_6960(v16, (uint64_t)qword_2969C8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v29 = v28(v26, v27, v16);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_0, v30, v31, "PlayMediaRCHFlowWrapper#logReliability", v32, 2u);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v33(v26, v16);
  uint64_t v34 = v111;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
  uint64_t v36 = v110;
  v35(v15, v112, v110);
  if ((*(unsigned int (**)(char *, uint64_t))(v34 + 88))(v15, v36) != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v36);
LABEL_16:
    uint64_t v54 = v28(v20, v27, v16);
    int v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl( &dword_0,  v55,  v56,  "PlayMediaRCHFlowWrapper#logReliability not a music or podcast bundle identifier, skipping logging reliability info",  v57,  2u);
      swift_slowDealloc(v57, -1LL, -1LL);
    }

    uint64_t v52 = v20;
    return ((uint64_t (*)(char *, uint64_t))v33)(v52, v16);
  }

  uint64_t v91 = v35;
  (*(void (**)(char *, uint64_t))(v34 + 96))(v15, v36);
  uint64_t v37 = *(void *)v15;
  uint64_t v38 = (void *)*((void *)v15 + 2);

  uint64_t v40 = App.appIdentifier.getter(v39);
  if (!v41)
  {
    uint64_t v53 = v37;
LABEL_15:
    swift_release(v53);
    goto LABEL_16;
  }

  uint64_t v42 = v40;
  uint64_t v43 = v41;
  uint64_t v92 = v37;
  uint64_t v44 = (void *)static BundleIdentifiers.internalBundleIdentifiers.getter(v40);
  char v45 = sub_881D0(v42, v43, v44);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v44);
  if ((v45 & 1) == 0)
  {
    uint64_t v53 = v92;
    goto LABEL_15;
  }

  int64_t v46 = sub_2BE70(0x63uLL) + 1;
  uint64_t v47 = v92;
  if (v46 > 5)
  {
    uint64_t v48 = v28(v109, v27, v16);
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v51 = 134217984;
      aBlock = (void **)v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v115);
      _os_log_impl( &dword_0,  v49,  v50,  "PlayMediaRCHFlowWrapper#logReliability random roll: %ld (/100) was NOT <= 5 for 5%% chance, skipping...",  v51,  0xCu);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    swift_release(v47);
    uint64_t v52 = v109;
    return ((uint64_t (*)(char *, uint64_t))v33)(v52, v16);
  }

  uint64_t v59 = v93;
  uint64_t v60 = v28(v93, v27, v16);
  id v61 = (os_log_s *)Logger.logObject.getter(v60);
  os_log_type_t v62 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v61, v62))
  {
    id v63 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)id v63 = 134217984;
    uint64_t v36 = v110;
    aBlock = (void **)v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v115);
    _os_log_impl( &dword_0,  v61,  v62,  "PlayMediaRCHFlowWrapper#logReliability random roll: %ld (/100) was <= 5 for 5%% chance, continuing with reliability test.",  v63,  0xCu);
    swift_slowDealloc(v63, -1LL, -1LL);
  }

  v33(v59, v16);
  static ExecutorProvider.shared.getter(&aBlock);
  uint64_t v64 = v116;
  uint64_t v65 = v117;
  sub_6EA8(&aBlock, (uint64_t)v116);
  uint64_t v66 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v64, v65);
  uint64_t v68 = v67;
  uint64_t v69 = sub_6C3C(&aBlock);
  uint64_t v110 = static DispatchQueues.analytics.getter(v69);
  uint64_t v70 = v95;
  static DispatchTime.now()(v110);
  uint64_t v71 = v98;
  *uint64_t v98 = 5LL;
  uint64_t v73 = v99;
  uint64_t v72 = v100;
  (*(void (**)(void *, void, uint64_t))(v99 + 104))( v71,  enum case for DispatchTimeInterval.seconds(_:),  v100);
  uint64_t v74 = v101;
  + infix(_:_:)(v70, v71);
  (*(void (**)(void *, uint64_t))(v73 + 8))(v71, v72);
  uint64_t v109 = *(char **)(v96 + 8);
  uint64_t v75 = v102;
  ((void (*)(char *, uint64_t))v109)(v70, v102);
  uint64_t v76 = v97;
  v91(v97, v112, v36);
  uint64_t v77 = v111;
  uint64_t v78 = *(unsigned __int8 *)(v111 + 80);
  uint64_t v79 = v36;
  uint64_t v80 = (v78 + 16) & ~v78;
  unint64_t v81 = (v94 + v80 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v82 = swift_allocObject(&unk_275340, v81 + 16, v78 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v82 + v80, v76, v79);
  uint64_t v83 = (uint64_t *)(v82 + v81);
  *uint64_t v83 = v66;
  v83[1] = v68;
  uint64_t v117 = sub_1E3928;
  uint64_t v118 = v82;
  aBlock = _NSConcreteStackBlock;
  v115[0] = 1107296256LL;
  v115[1] = sub_6E7C;
  uint64_t v116 = &unk_275358;
  unint64_t v84 = _Block_copy(&aBlock);
  uint64_t v85 = v103;
  static DispatchQoS.unspecified.getter(v84);
  uint64_t v113 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v86 = sub_6C5C(&qword_285480);
  sub_21318((unint64_t *)&qword_287950, &qword_285480, (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v87 = v106;
  uint64_t v88 = v86;
  uint64_t v89 = v108;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v113, v88);
  uint64_t v90 = (void *)v110;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v74, v85, v87, v84);
  swift_release(v92);
  _Block_release(v84);

  (*(void (**)(char *, uint64_t))(v107 + 8))(v87, v89);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v85, v105);
  ((void (*)(char *, uint64_t))v109)(v74, v75);
  return swift_release(v118);
}

unint64_t sub_2BE70(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0LL;
    swift_stdlib_random(&v3, 8LL);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0LL;
          swift_stdlib_random(&v3, 8LL);
        }

        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_2BEF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v31 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v32[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = static os_signpost_type_t.end.getter(v7, v10);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  os_signpost(_:dso:log:name:signpostID:)( v11,  &dword_0,  qword_296AA0,  "playFlowFrameWrapperTotal",  25LL,  2LL,  a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_signpost);
  static ExecutorProvider.shared.getter(v32);
  uint64_t v12 = v33;
  uint64_t v13 = v34;
  sub_6EA8(v32, v33);
  uint64_t v14 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v12, v13);
  if (v15) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 4144959LL;
  }
  if (v15) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = 0xE300000000000000LL;
  }
  uint64_t v18 = sub_6C3C(v32);
  uint64_t v19 = static os_signpost_type_t.event.getter(v18);
  uint64_t v20 = qword_296AA0;
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v22 = swift_allocObject(v21, 72LL, 7LL);
  *(_OWORD *)(v22 + 16) = xmmword_214510;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_6DAC();
  *(void *)(v22 + 3sub_6C3C(v0 + 2) = v16;
  *(void *)(v22 + 40) = v17;
  uint64_t v23 = swift_bridgeObjectRetain(v17);
  static OSSignpostID.exclusive.getter(v23);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v19,  &dword_0,  v20,  "playFlowFrameWrapperExitEvent",  29LL,  2LL,  v9,  "refId=%{signpost.telemetry:string1,public}@",  43LL,  2,  v22);
  swift_bridgeObjectRelease(v22);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRelease(v17);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v25 = v31;
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 16))(v4, v24, v2);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_0, v27, v28, "PlayMediaRCHFlowWrapper#exit done.", v29, 2u);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v4, v2);
}

uint64_t sub_2C1F4()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_2C218()
{
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playMediaDialogProvider));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_viewFactory));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_pseSignalsStitcher));
  uint64_t v1 = v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_signpost;
  uint64_t v2 = type metadata accessor for OSSignpostID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_start;
  uint64_t v4 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  sub_1F6CC(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result, &qword_28DDB8);
  return v0;
}

uint64_t sub_2C314()
{
  return swift_deallocClassInstance(v0, 288LL, 7LL);
}

void *sub_2C334()
{
  return v0;
}

uint64_t sub_2C390()
{
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_controlsFlowProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_audioFlowProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_featureFlagProvider));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_2C428()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_28DDB8) - 8) + 80LL);
  return sub_2C45C(*(void *)(v0 + 16), (void *)(v0 + ((v1 + 24) & ~v1)));
}

uint64_t sub_2C45C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  id v8 = (id)qword_296AA0;
  uint64_t v9 = OSSignpostID.init(log:)(v8);
  uint64_t v10 = static os_signpost_type_t.begin.getter(v9);
  os_signpost(_:dso:log:name:signpostID:)(v10, &dword_0, v8, "playFlowFrameWrapperCoreAnalytics", 33LL, 2LL, v7);
  sub_2C57C(a1, a2);
  uint64_t v13 = static os_signpost_type_t.end.getter(v11, v12);
  os_signpost(_:dso:log:name:signpostID:)(v13, &dword_0, v8, "playFlowFrameWrapperCoreAnalytics", 33LL, 2LL, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_2C57C(uint64_t a1, id a2)
{
  id v204 = a2;
  uint64_t v3 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v182 = *(void *)(v3 - 8);
  uint64_t v183 = v3;
  __chkstk_darwin(v3);
  uint64_t v181 = (char *)&v178 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for CoreAnalyticsResponses.FabricatedPlayCodes(0LL);
  uint64_t v197 = *(void *)(v5 - 8);
  uint64_t v198 = v5;
  __chkstk_darwin(v5);
  uint64_t v196 = (char *)&v178 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_28DDB8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v199 = (uint64_t)&v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v195 = (uint64_t)&v178 - v11;
  __chkstk_darwin(v10);
  uint64_t v194 = (uint64_t *)((char *)&v178 - v12);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v178 = (char *)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v193 = (char *)&v178 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v179 = (char *)&v178 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v178 - v21;
  uint64_t v205 = sub_6C5C(&qword_285470);
  uint64_t v23 = __chkstk_darwin(v205);
  uint64_t v192 = (uint64_t)&v178 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v191 = (uint64_t)&v178 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v178 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v189 = (char *)&v178 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v188 = (uint64_t)&v178 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v187 = (uint64_t)&v178 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v186 = (char *)&v178 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v185 = (uint64_t)&v178 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v184 = (uint64_t)&v178 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v180 = (uint64_t)&v178 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  int64_t v46 = (char *)&v178 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v49 = (char *)&v178 - v48;
  uint64_t v50 = __chkstk_darwin(v47);
  uint64_t v52 = (char *)&v178 - v51;
  if (a1)
  {
    dispatch thunk of AppSelectionContext.report.getter(v50);
  }

  else
  {
    uint64_t v53 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v52, 1LL, 1LL, v53);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v54 = sub_6960(v13, (uint64_t)qword_2969C8);
  int v55 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v14 + 2);
  uint64_t v202 = v54;
  uint64_t v203 = v55;
  ((void (*)(char *))v55)(v22);
  uint64_t v56 = sub_FF10((uint64_t)v52, (uint64_t)v49, &qword_285470);
  uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
  os_log_type_t v58 = static os_log_type_t.debug.getter();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v206 = v13;
  uint64_t v201 = v52;
  uint64_t v190 = v29;
  if (v59)
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v61 = swift_slowAlloc(32LL, -1LL);
    uint64_t v200 = v14;
    uint64_t v62 = v61;
    v208[0] = v61;
    *(_DWORD *)uint64_t v60 = 136315138;
    sub_FF10((uint64_t)v49, (uint64_t)v46, &qword_285470);
    uint64_t v63 = String.init<A>(describing:)(v46, v205);
    unint64_t v65 = v64;
    uint64_t v207 = sub_6978(v63, v64, v208);
    uint64_t v13 = v206;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v207, v208);
    swift_bridgeObjectRelease(v65);
    sub_1F6CC((uint64_t)v49, &qword_285470);
    _os_log_impl( &dword_0,  v57,  v58,  "PlayMediaRCHFlowWrapper#logCoreAnalytics supplying CoreAnalytics instrumentation, with appSelectionReport: %s...",  v60,  0xCu);
    swift_arrayDestroy(v62, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v62, -1LL, -1LL);
    swift_slowDealloc(v60, -1LL, -1LL);

    uint64_t v66 = (void (*)(char *, uint64_t))*((void *)v200 + 1);
  }

  else
  {
    sub_1F6CC((uint64_t)v49, &qword_285470);

    uint64_t v66 = (void (*)(char *, uint64_t))*((void *)v14 + 1);
  }

  v66(v22, v13);
  uint64_t v67 = (uint64_t)v204;
  uint64_t v68 = v194;
  sub_FF10((uint64_t)v204, (uint64_t)v194, &qword_28DDB8);
  uint64_t v69 = sub_6C5C(&qword_289EA8);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48);
  if (v71(v68, 1LL, v69) == 1)
  {
    sub_1F6CC((uint64_t)v68, &qword_28DDB8);
LABEL_16:
    uint64_t v205 = 0LL;
    goto LABEL_17;
  }

  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v70 + 88))(v68, v69) != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v70 + 8))(v68, v69);
    goto LABEL_16;
  }

  (*(void (**)(uint64_t *, uint64_t))(v70 + 96))(v68, v69);
  uint64_t v72 = *v68;
  uint64_t v205 = v68[1];
  uint64_t v73 = (void *)v68[2];
  swift_release(v72);

  uint64_t v74 = v203(v179, v202, v13);
  uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
  os_log_type_t v76 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v77 = 0;
    _os_log_impl( &dword_0,  v75,  v76,  "PlayMediaRCHFlowWrapper#logCoreAnalytics supplying intent from complete FlowResult",  v77,  2u);
    swift_slowDealloc(v77, -1LL, -1LL);
  }

  v66(v179, v13);
  uint64_t v67 = (uint64_t)v204;
LABEL_17:
  uint64_t v78 = v195;
  sub_FF10(v67, v195, &qword_28DDB8);
  unsigned int v79 = v71((uint64_t *)v78, 1LL, v69);
  uint64_t v200 = v66;
  if (v79 == 1)
  {
    sub_1F6CC(v78, &qword_28DDB8);
LABEL_27:
    uint64_t v86 = 0LL;
    unint64_t v87 = 0xE000000000000000LL;
    goto LABEL_28;
  }

  if ((*(unsigned int (**)(uint64_t, uint64_t))(v70 + 88))(v78, v69) != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v78, v69);
    goto LABEL_27;
  }

  (*(void (**)(uint64_t, uint64_t))(v70 + 96))(v78, v69);
  uint64_t v80 = *(void *)v78;
  unint64_t v81 = *(void **)(v78 + 16);

  uint64_t v83 = App.appIdentifier.getter(v82);
  unint64_t v85 = v84;
  swift_release(v80);
  if (v85) {
    uint64_t v86 = v83;
  }
  else {
    uint64_t v86 = 0LL;
  }
  uint64_t v67 = (uint64_t)v204;
  if (v85) {
    unint64_t v87 = v85;
  }
  else {
    unint64_t v87 = 0xE000000000000000LL;
  }
LABEL_28:
  uint64_t v88 = v196;
  uint64_t v89 = v197;
  uint64_t v90 = v198;
  uint64_t v91 = (*(uint64_t (**)(char *, void, uint64_t))(v197 + 104))( v196,  enum case for CoreAnalyticsResponses.FabricatedPlayCodes.generalUnsuccessful(_:),  v198);
  id v204 = (id)CoreAnalyticsResponses.FabricatedPlayCodes.rawValue.getter(v91);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v90);
  uint64_t v92 = (uint64_t *)v199;
  sub_FF10(v67, v199, &qword_28DDB8);
  if (v71(v92, 1LL, v69) != 1)
  {
    int v103 = (*(uint64_t (**)(uint64_t *, uint64_t))(v70 + 88))(v92, v69);
    uint64_t v93 = (uint64_t)v201;
    if (v103 == enum case for RCHFlowResult.complete<A, B>(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v70 + 96))(v92, v69);
      uint64_t v104 = *v92;
      uint64_t v105 = (void *)v92[1];
      id v106 = (void *)v92[2];
      swift_release(v104);

      id v204 = [v106 code];
      uint64_t v107 = (int *)[v106 code];

      BOOL v94 = v107 == &dword_4;
      if ((v87 & 0x2000000000000000LL) != 0) {
        goto LABEL_35;
      }
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v70 + 8))(v92, v69);
      BOOL v94 = 0LL;
      if ((v87 & 0x2000000000000000LL) != 0) {
        goto LABEL_35;
      }
    }

LABEL_36:
  swift_bridgeObjectRelease(v87);
  uint64_t v108 = v178;
  uint64_t v109 = v206;
  uint64_t v110 = v203(v178, v202, v206);
  uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
  os_log_type_t v112 = static os_log_type_t.error.getter();
  BOOL v113 = os_log_type_enabled(v111, v112);
  uint64_t v114 = (void *)v205;
  if (v113)
  {
    unint64_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v115 = 0;
    _os_log_impl( &dword_0,  v111,  v112,  "PlayMediaRCHFlowWrapper#logCoreAnalytics no meaningful app identifier",  v115,  2u);
    swift_slowDealloc(v115, -1LL, -1LL);
  }

  v200(v108, v109);
LABEL_81:
  sub_1F6CC(v93, &qword_285470);
}

    uint64_t v9 = 0;
    goto LABEL_37;
  }

  uint64_t v7 = (uint64_t)sub_9144C(result, a2, 10LL);
  uint64_t v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0) {
    return 0LL;
  }
  else {
    return v7;
  }
}

    v37 += 32LL;
    if (!--v36)
    {

      uint64_t v10 = (void *)swift_bridgeObjectRelease_n(v35, 2LL);
      uint64_t v12 = v19;
      uint64_t v13 = v51;
      uint64_t v5 = v44;
      goto LABEL_11;
    }
  }

  swift_bridgeObjectRelease_n(v35, 2LL);
  swift_bridgeObjectRelease(a3);
LABEL_55:
  uint64_t v42 = v44;
LABEL_56:
  sub_A7610(v42);
}

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  __break(1u);
  return result;
}

  swift_release(v7);
  uint64_t v2 = v37;
  uint64_t v36 = 1LL << *(_BYTE *)(v7 + 32);
  if (v36 >= 64) {
    bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *uint64_t v39 = -1LL << v36;
  }
  *(void *)(v7 + sub_6C3C(v0 + 16) = 0LL;
LABEL_40:
  uint64_t result = swift_release(v7);
  *uint64_t v2 = v9;
  return result;
}

  swift_bridgeObjectRelease(v43);
  *(_BYTE *)(v30 + 240) = 0;
  *(void *)(v30 + 264) = &type metadata for Bool;
  *(void *)(v30 + 27sub_6C3C(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v30 + 280) = 0x80000000002219A0LL;
  if (!v17)
  {
    uint64_t v47 = String.lowercased()()._object;
    goto LABEL_44;
  }

  uint64_t v57 = 0;
LABEL_37:
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v57;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0x7473726F577369LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE700000000000000LL;
  os_log_type_t v58 = [a2 mediaSearch];
  if (v58)
  {
    BOOL v59 = v58;
    uint64_t v60 = (int *)[v58 sortOrder];

    uint64_t v61 = v60 == &dword_4;
  }

  else
  {
    uint64_t v61 = 0;
  }

  *(_BYTE *)(inited + 96) = v61;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x656C746974LL;
  uint64_t v62 = v96;
  if (v91) {
    uint64_t v62 = 0LL;
  }
  uint64_t v63 = 0xE000000000000000LL;
  if (v91) {
    unint64_t v64 = 0xE000000000000000LL;
  }
  else {
    unint64_t v64 = v30;
  }
  *(void *)(inited + 136) = 0xE500000000000000LL;
  *(void *)(inited + 1sub_6C3C(v0 + 44) = v62;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = v64;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(inited + 176) = 0x747369747261LL;
  unint64_t v65 = v92;
  if (v35)
  {
    uint64_t v66 = v35;
  }

  else
  {
    unint64_t v65 = 0LL;
    uint64_t v66 = 0xE000000000000000LL;
  }

  *(void *)(inited + 184) = 0xE600000000000000LL;
  *(void *)(inited + 19sub_6C3C(v0 + 2) = v65;
  *(void *)(inited + 200) = v66;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for String;
  *(void *)(inited + 2sub_6C3C(v0 + 24) = 0x7053747369747261LL;
  uint64_t v67 = v93;
  if (v44) {
    uint64_t v63 = v44;
  }
  else {
    uint64_t v67 = 0LL;
  }
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xEF64656966696365LL;
  *(void *)(inited + 240) = v67;
  *(void *)(inited + 24sub_6C3C(v0 + 8) = v63;
  *(void *)(inited + 264) = &type metadata for String;
  strcpy((char *)(inited + 272), "isAppSpecified");
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 7) = -18;
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 8) = v97 & 1;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 320) = 0xD00000000000001BLL;
  *(void *)(inited + 32sub_6C3C(v0 + 8) = 0x8000000000221920LL;
  *(_BYTE *)(inited + 336) = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  *(void *)(inited + 360) = &type metadata for Bool;
  *(void *)(inited + 36sub_6C3C(v0 + 8) = 0xD00000000000001CLL;
  *(void *)(inited + 376) = 0x8000000000221940LL;
  uint64_t v68 = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  *(void *)(inited + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(inited + 384) = v68;
  NSString v97 = sub_74D54(inited);
  uint64_t v69 = (void *)*((void *)v98 + 15);
  v102[3] = v95;
  v102[4] = &off_272BD0;
  v102[0] = a2;
  if ((v94 & 1) != 0)
  {
    uint64_t v70 = v69[4];
    uint64_t v71 = v69[5];
    uint64_t v72 = v69[6];
    uint64_t v73 = swift_allocObject(&unk_272438, 32LL, 7LL);
    uint64_t v98 = v90;
    uint64_t v74 = v101;
    *(void *)(v73 + sub_6C3C(v0 + 16) = v99;
    *(void *)(v73 + sub_6C3C(v0 + 24) = v74;
    __chkstk_darwin(v73);
    *(void *)&v90[-80] = v71;
    *(void *)&v90[-72] = v72;
    *(void *)&v90[-64] = 0xD000000000000014LL;
    *(void *)&v90[-56] = 0x8000000000221B20LL;
    unint64_t v85 = v70;
    uint64_t v75 = v97;
    uint64_t v86 = v97;
    unint64_t v87 = v100;
    uint64_t v88 = v102;
    uint64_t v89 = 0LL;
    os_log_type_t v76 = a2;
    swift_retain(v74);
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v73,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v71,  v72,  0xD000000000000014LL,  0x8000000000221B20LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v90[-96]);
    uint64_t v77 = v75;
  }

  else
  {
    unsigned int v79 = v69[4];
    uint64_t v78 = v69[5];
    uint64_t v80 = v69[6];
    uint64_t v73 = swift_allocObject(&unk_272410, 32LL, 7LL);
    uint64_t v98 = v90;
    unint64_t v81 = v101;
    *(void *)(v73 + sub_6C3C(v0 + 16) = v99;
    *(void *)(v73 + sub_6C3C(v0 + 24) = v81;
    __chkstk_darwin(v73);
    *(void *)&v90[-80] = v78;
    *(void *)&v90[-72] = v80;
    *(void *)&v90[-64] = 0xD000000000000015LL;
    *(void *)&v90[-56] = 0x8000000000221B00LL;
    unint64_t v85 = v79;
    uint64_t v82 = v97;
    uint64_t v86 = v97;
    unint64_t v87 = v100;
    uint64_t v88 = v102;
    uint64_t v89 = 0LL;
    uint64_t v83 = a2;
    swift_retain(v81);
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v73,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v78,  v80,  0xD000000000000015LL,  0x8000000000221B00LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v90[-96]);
    uint64_t v77 = v82;
  }

  swift_bridgeObjectRelease(v77);
  swift_release(v73);
  return sub_1F6CC((uint64_t)v102, &qword_283FE8);
}

            uint64_t v57 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
            os_log_type_t v58 = swift_dynamicCastObjCClass(v53, v57);
            uint64_t v108 = v28;
            *((void *)&v107 + 1) = v33;
            if (!v58)
            {
              uint64_t v66 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
              if (swift_dynamicCastObjCClass(v53, v66))
              {
                uint64_t v67 = 0xE300000000000000LL;
                uint64_t v68 = 4473921LL;
              }

              else
              {
                uint64_t v69 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
                if (swift_dynamicCastObjCClass(v53, v69))
                {
                  uint64_t v67 = 0xE600000000000000LL;
                  uint64_t v68 = 0x484352414553LL;
                }

                else
                {
                  uint64_t v96 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
                  NSString v97 = (void *)swift_dynamicCastObjCClass(v53, v96);
                  if (!v97)
                  {
                    swift_bridgeObjectRelease(v35);
                    swift_bridgeObjectRelease(v120);
                    uint64_t v99 = type metadata accessor for PlaybackCode(0LL);
                    uint64_t v100 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
                    unint64_t v101 = swift_allocError(v99, v100, 0LL, 0LL);
                    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v99 - 8) + 104LL))( v102,  enum case for PlaybackCode.ceGE10(_:),  v99);
                    int v103 = v106;
                    *id v106 = v101;
                    swift_storeEnumTagMultiPayload(v103, v105, 1LL);
                    v110(v103);

                    BOOL v94 = (uint64_t *)&unk_286BB0;
                    uint64_t v95 = v103;
LABEL_76:
                    sub_1F6CC((uint64_t)v95, v94);
                    *(void *)&uint64_t result = swift_bridgeObjectRelease(v33).n128_u64[0];
                    return result;
                  }

                  uint64_t v98 = (char *)[v97 affinityType];
                  if (v98 == (_BYTE *)&dword_0 + 1)
                  {
                    uint64_t v67 = 0xE400000000000000LL;
                    uint64_t v68 = 1162561868LL;
                  }

                  else
                  {
                    uint64_t v67 = 0xE700000000000000LL;
                    if (v98 == (_BYTE *)&dword_0 + 2) {
                      uint64_t v68 = 0x454B494C534944LL;
                    }
                    else {
                      uint64_t v68 = 0x4E574F4E4B4E55LL;
                    }
                  }
                }
              }

              goto LABEL_66;
            }

            BOOL v59 = (void *)v58;
            uint64_t v60 = v53;
            uint64_t v61 = [v59 mediaSearch];
            uint64_t v104 = v34;
            if (v61)
            {
              uint64_t v63 = v61;
              unint64_t v64 = (unint64_t)[v61 genreNames];

              if (!v64)
              {
                uint64_t v34 = 0LL;
                if (!v28)
                {
LABEL_55:
                  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v59,  (uint64_t)&off_269DB0) & 1) == 0)
                  {

                    goto LABEL_63;
                  }

Class sub_2DABC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  uint64_t v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    sub_1641C(0LL, &qword_285488, &OBJC_CLASS___NSObject_ptr);
    v5.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    v5.super.Class isa = 0LL;
  }

  return v5.super.isa;
}

uint64_t CommonFlowStrategy.makeParameterMetadata(intent:)()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 16));
}

uint64_t sub_2DB48()
{
  return sub_2E0F8(&qword_28DDB8, (uint64_t (*)(uint64_t))sub_2DB5C);
}

void sub_2DB5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSDictionary v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v13 = sub_6C5C(&qword_28DDB8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v15, &qword_28DDB8);
  uint64_t v16 = sub_6C5C(&qword_289EA8);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v16) == 1)
  {
    sub_1F6CC((uint64_t)v15, &qword_28DDB8);
LABEL_17:
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = sub_6960(v6, (uint64_t)qword_2969C8);
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v38, v6);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_0, v40, v41, "PlayMediaRCHFlowWrapper#logCoreAnalytics skipping daily briefing", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return;
  }

  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v15, v16) != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    goto LABEL_17;
  }

  (*(void (**)(char *, uint64_t))(v17 + 96))(v15, v16);
  uint64_t v19 = *(void *)v15;
  uint64_t v18 = (void *)*((void *)v15 + 1);

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v18,  (uint64_t)&off_26B718) & 1) == 0) {
    goto LABEL_30;
  }
  id v20 = [v18 mediaItems];
  if (!v20) {
    goto LABEL_30;
  }
  uint64_t v21 = v20;
  uint64_t v22 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if (!((unint64_t)v23 >> 62))
  {
LABEL_35:
    swift_release(v19);

    swift_bridgeObjectRelease(v23);
    return;
  }

  if (v23 < 0) {
    uint64_t v55 = v23;
  }
  else {
    uint64_t v55 = v23 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v23);
  uint64_t v56 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease(v23);
  if (!v56) {
    goto LABEL_35;
  }
LABEL_8:
  if ((v23 & 0xC000000000000001LL) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      goto LABEL_38;
    }

    id v24 = *(id *)(v23 + 32);
  }

  uint64_t v25 = v24;
  swift_bridgeObjectRelease(v23);
  id v26 = [v25 identifier];

  if (!v26)
  {
LABEL_30:
    swift_release(v19);

    return;
  }

  uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  uint64_t v28 = v27;

  uint64_t v30 = App.appIdentifier.getter(v29);
  if (!v31)
  {
    uint64_t v43 = v28;
LABEL_29:
    swift_bridgeObjectRelease(v43);
    goto LABEL_30;
  }

  uint64_t v32 = v31;
  uint64_t v60 = v28;
  uint64_t v33 = v30;
  uint64_t v34 = static BundleIdentifiers.podcasts.getter(v30);
  uint64_t v36 = v33;
  uint64_t v37 = v35;
  if (v34 == v36 && v32 == v35)
  {
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v32);
    goto LABEL_24;
  }

  LODWORD(v5sub_6C3C(v0 + 8) = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v32);
  if ((v58 & 1) == 0)
  {
    uint64_t v43 = v60;
    goto LABEL_29;
  }

uint64_t sub_2E0E4()
{
  return sub_2E0F8(&qword_289EA8, (uint64_t (*)(uint64_t))sub_2E130);
}

uint64_t sub_2E0F8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(a1) - 8) + 80LL);
  return a2(v2 + ((v3 + 16) & ~v3));
}

void sub_2E130(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v69 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v67 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v62 - v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v62 - v7;
  uint64_t v9 = sub_6C5C(&qword_289EA8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (uint64_t *)((char *)&v62 - v15);
  __chkstk_darwin(v14);
  uint64_t v18 = (uint64_t *)((char *)&v62 - v17);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19((char *)&v62 - v17, a1, v9);
  id v20 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88);
  int v21 = v20(v18, v9);
  if (v21 != enum case for RCHFlowResult.complete<A, B>(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v18, v9);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v36 = v69;
    uint64_t v37 = sub_6960(v69, (uint64_t)qword_2969C8);
    uint64_t v38 = v68;
    uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 16))(v8, v37, v36);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_0, v40, v41, "PlayMediaRCHFlowWrapper#saveToSiriMemory no intent", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v36);
    return;
  }

  int v22 = v21;
  unint64_t v64 = (uint64_t *)v13;
  uint64_t v23 = *(void (**)(uint64_t *, uint64_t))(v10 + 96);
  v23(v18, v9);
  uint64_t v24 = *v18;
  unint64_t v65 = (os_log_s *)v18[1];
  uint64_t v25 = (void *)v18[2];
  swift_release(v24);

  v19((char *)v16, a1, v9);
  if (v20(v16, v9) != v22)
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v16, v9);
LABEL_14:
    uint64_t v44 = v68;
    uint64_t v43 = v69;
    uint64_t v45 = v67;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v46 = sub_6960(v43, (uint64_t)qword_2969C8);
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 16))(v45, v46, v43);
    BOOL v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_0, v48, v49, "PlayMediaRCHFlowWrapper#saveToSiriMemory no app present", v50, 2u);
      swift_slowDealloc(v50, -1LL, -1LL);
      uint64_t v51 = v65;
    }

    else
    {
      uint64_t v51 = v48;
      BOOL v48 = v65;
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    return;
  }

  uint64_t v63 = v23;
  v23(v16, v9);
  uint64_t v27 = *v16;
  id v26 = (void *)v16[1];
  uint64_t v28 = (void *)v16[2];

  App.appIdentifier.getter(v29);
  if (!v30)
  {
    swift_release(v27);
    goto LABEL_14;
  }

  swift_bridgeObjectRelease(v30);
  uint64_t v31 = v64;
  v19((char *)v64, a1, v9);
  if (v20(v31, v9) == v22)
  {
    v63(v31, v9);
    uint64_t v32 = (void *)v31[1];
    uint64_t v33 = (void *)v31[2];
    swift_release(*v31);

    if ([v33 code] == &dword_4)
    {
      uint64_t v34 = v65;
      uint64_t v35 = v65;
      sub_181F84(v34);
      swift_release(v27);

      return;
    }

    uint64_t v52 = v27;
  }

  else
  {
    uint64_t v52 = v27;
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v31, v9);
  }

  uint64_t v54 = v68;
  uint64_t v53 = v69;
  uint64_t v55 = v66;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v56 = sub_6960(v53, (uint64_t)qword_2969C8);
  uint64_t v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v56, v53);
  os_log_type_t v58 = (os_log_s *)Logger.logObject.getter(v57);
  os_log_type_t v59 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v60 = 0;
    _os_log_impl( &dword_0,  v58,  v59,  "PlayMediaRCHFlowWrapper#saveToSiriMemory no response present, or not success",  v60,  2u);
    swift_slowDealloc(v60, -1LL, -1LL);
    uint64_t v61 = v65;
  }

  else
  {
    uint64_t v61 = v58;
    os_log_type_t v58 = v65;
  }

  swift_release(v52);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
}

BOOL sub_2E694()
{
  if (v18)
  {
    uint64_t v1 = type metadata accessor for UsoTask_play_uso_NoEntity(0LL);
    if ((swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v1, 6LL) & 1) != 0)
    {
      uint64_t v2 = v16;
      uint64_t v3 = swift_retain(v16);
      dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v17, v3);
      swift_release(v2);
      uint64_t v4 = v17[0];
      uint64_t v5 = swift_release(v17[0]);
      if (v4)
      {
        sub_1F6CC((uint64_t)v19, &qword_284028);
        uint64_t v6 = v2;
LABEL_17:
        swift_release(v6);
        return 0;
      }

      uint64_t v12 = dispatch thunk of Uso_VerbTemplate_ReferenceControl.settings.getter(v5);
      if (v12)
      {
        uint64_t v13 = v12;
        if ((unint64_t)v12 >> 62)
        {
          if (v12 >= 0) {
            v12 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v12);
        }

        else
        {
          uint64_t v14 = *(void *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8LL));
        }

        swift_bridgeObjectRelease(v13);
        swift_release(v2);
        BOOL v11 = v14 == 0;
      }

      else
      {
        swift_release(v2);
        BOOL v11 = 1;
      }

      goto LABEL_19;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v17, &qword_284028);
  }

  sub_FF10((uint64_t)v19, (uint64_t)v17, &qword_284028);
  if (v18)
  {
    uint64_t v7 = type metadata accessor for UsoTask_play_common_MediaItem(0LL);
    if ((swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v7, 6LL) & 1) != 0)
    {
      uint64_t v8 = v16;
      uint64_t v9 = UsoTask_play_common_MediaItem.referencedMediaItem()();
      if (!v9)
      {
        sub_1F6CC((uint64_t)v19, &qword_284028);
        uint64_t v6 = v8;
        goto LABEL_17;
      }

      uint64_t v10 = v9;
      BOOL v11 = UsoEntity_common_MediaItem.hasMediaTypeOnly()();
      swift_release(v10);
      swift_release(v8);
LABEL_19:
      sub_1F6CC((uint64_t)v19, &qword_284028);
      return v11;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v17, &qword_284028);
  }

  sub_1F6CC((uint64_t)v19, &qword_284028);
  return 0;
}

uint64_t sub_2E888(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_2E8C8()
{
  if (v16)
  {
    uint64_t v1 = type metadata accessor for UsoTask_resume_uso_NoEntity(0LL);
    if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v1, 6LL) & 1) != 0)
    {
      uint64_t v2 = v14;
      uint64_t v3 = swift_retain(v14);
      dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v15, v3);
      uint64_t v4 = swift_release(v2);
      uint64_t v5 = v15[0];
      if (v15[0])
      {
        uint64_t v6 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v4);
        swift_release(v5);
        swift_release(v2);
        if (v6)
        {
          swift_release(v6);
          sub_1F6CC((uint64_t)v17, &qword_284028);
          return 1LL;
        }
      }

      else
      {
        swift_release(v2);
      }
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v15, &qword_284028);
  }

  sub_FF10((uint64_t)v17, (uint64_t)v15, &qword_284028);
  if (!v16)
  {
    sub_1F6CC((uint64_t)v15, &qword_284028);
    goto LABEL_15;
  }

  uint64_t v7 = type metadata accessor for UsoTask_resume_common_MediaItem(0LL);
  if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v7, 6LL) & 1) == 0)
  {
LABEL_15:
    sub_1F6CC((uint64_t)v17, &qword_284028);
    return 0LL;
  }

  uint64_t v8 = v14;
  uint64_t v9 = swift_retain(v14);
  dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v15, v9);
  uint64_t v10 = swift_release(v8);
  uint64_t v11 = v15[0];
  if (v15[0])
  {
    uint64_t v12 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v10);
    swift_release(v8);
    swift_release(v11);
    sub_1F6CC((uint64_t)v17, &qword_284028);
    if (v12)
    {
      swift_release(v12);
      return 1LL;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v17, &qword_284028);
    swift_release(v8);
  }

  return 0LL;
}

uint64_t sub_2EAAC()
{
  if (!v12)
  {
    sub_1F6CC((uint64_t)v11, &qword_284028);
    goto LABEL_6;
  }

  uint64_t v1 = type metadata accessor for UsoTask_like_common_MediaItem(0LL);
  if ((swift_dynamicCast(v10, v11, (char *)&type metadata for Any + 8, v1, 6LL) & 1) == 0)
  {
LABEL_6:
    sub_FF10((uint64_t)v13, (uint64_t)v11, &qword_284028);
    goto LABEL_7;
  }

  uint64_t v2 = v10[0];
  sub_FF10((uint64_t)v13, (uint64_t)v11, &qword_284028);
  if (v2)
  {
    swift_release(v2);
    sub_1F6CC((uint64_t)v11, &qword_284028);
LABEL_10:
    sub_FF10((uint64_t)v13, (uint64_t)v10, &qword_284028);
    sub_1F6CC((uint64_t)v10, &qword_284028);
LABEL_15:
    sub_4AE18((uint64_t)v13, (uint64_t)v9);
    sub_1F6CC((uint64_t)v9, &qword_284028);
    return 1LL;
  }

LABEL_7:
  sub_4AE18((uint64_t)v11, (uint64_t)v10);
  if (v10[3])
  {
    uint64_t v3 = type metadata accessor for UsoTask_unlike_common_MediaItem(0LL);
    if ((swift_dynamicCast(v9, v10, (char *)&type metadata for Any + 8, v3, 6LL) & 1) != 0)
    {
      swift_release(v9[0]);
      goto LABEL_10;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v10, &qword_284028);
  }

  sub_FF10((uint64_t)v13, (uint64_t)v10, &qword_284028);
  sub_4AE18((uint64_t)v10, (uint64_t)v9);
  if (v9[3])
  {
    uint64_t v4 = type metadata accessor for UsoTask_like_uso_NoEntity(0LL);
    if ((swift_dynamicCast(v8, v9, (char *)&type metadata for Any + 8, v4, 6LL) & 1) != 0)
    {
      swift_release(v8[0]);
      goto LABEL_15;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v9, &qword_284028);
  }

  sub_4AE18((uint64_t)v13, (uint64_t)v9);
  sub_4AE18((uint64_t)v9, (uint64_t)v8);
  if (v8[3])
  {
    uint64_t v6 = type metadata accessor for UsoTask_unlike_uso_NoEntity(0LL);
    if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v6, 6LL) & 1) != 0)
    {
      swift_release(v7);
      return 1LL;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v8, &qword_284028);
  }

  return 0LL;
}

  swift_release(v25);
  return v12;
}

  uint64_t v42 = v58;
  uint64_t v43 = v31(v58, v25, v10);
  if ((v57 & 1) != 0)
  {
    uint64_t v44 = TemplatingResult.print.getter(v43);
    uint64_t v45 = *(void *)(v44 + 16);
    swift_bridgeObjectRelease(v44);
    v35(v42, v10);
    if (v45 - 1 == v36)
    {
      sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
      uint64_t v46 = v20;
      Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
      [v46 setListenAfterSpeaking:isa];

      BOOL v48 = v55;
      TemplatingResult.behaviorAfterSpeaking.getter();
      os_log_type_t v49 = v54;
      uint64_t v50 = v56;
      if ((*(unsigned int (**)(char *, uint64_t))(v54 + 88))(v48, v56) == enum case for BehaviorAfterSpeaking.dingAndListen(_:))
      {
        (*(void (**)(char *, uint64_t))(v49 + 96))(v48, v50);
        uint64_t v51 = *((void *)v48 + 1);
        uint64_t v52 = [objc_allocWithZone(SAUIListenAfterSpeakingBehavior) init];
        uint64_t v53 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v51);
        [v52 setStartAlertSoundID:v53];

        [v46 setListenAfterSpeakingBehavior:v52];
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
      }
    }
  }

  else
  {
    v35(v42, v10);
  }

  return (uint64_t)v20;
}

  uint64_t v12 = sub_91530(v8, v9, a3);
  swift_bridgeObjectRelease(v7);
  return v12;
}

    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }

  if (!v6)
  {
    swift_release(a1[3]);
    goto LABEL_7;
  }

  uint64_t v7 = a2[3];
  uint64_t v8 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }

  if (!v6)
  {
    swift_release(a1[3]);
    goto LABEL_7;
  }

  uint64_t v7 = a2[3];
  uint64_t v8 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_release(v8);
  return a1;
}

  uint64_t v15 = sub_6EA8(v4 + 24, v4[27]);
  uint64_t v16 = static BundleIdentifiers.classical.getter(v15);
  uint64_t v18 = v17;
  dispatch thunk of TCCProviding.rejectTCC(bundleId:)(v16);
  swift_bridgeObjectRelease(v18);
  swift_beginAccess(v4 + 9, v25, 33LL, 0LL);
  uint64_t v19 = v4[12];
  id v20 = v4[13];
  sub_1094C((uint64_t)(v4 + 9), v19);
  uint64_t result = (void (*)(_BYTE *, void))dispatch thunk of FeatureFlagProviding.classicalTCCRejectedCounter.modify( v24,  v19,  v20);
  if (!__OFADD__(*v22, 1LL))
  {
    ++*v22;
    result(v24, 0LL);
    swift_endAccess(v25);
    goto LABEL_9;
  }

  __break(1u);
  return result;
}

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a2);
  return v18;
}

uint64_t sub_2ECE4()
{
  uint64_t v1 = sub_6C5C(&qword_284900);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v69 - v5;
  uint64_t v7 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v69 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v69 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v69 - v18;
  static UsoTask_CodegenConverter.convert(task:)(v77, v0);
  sub_FF10((uint64_t)v77, (uint64_t)v75, &qword_284028);
  if (v76)
  {
    uint64_t v20 = type metadata accessor for UsoTask_noVerb_common_App(0LL);
    if ((swift_dynamicCast(&v74, v75, (char *)&type metadata for Any + 8, v20, 6LL) & 1) != 0)
    {
      uint64_t v73 = v6;
      int v21 = v14;
      int v22 = v4;
      uint64_t v23 = v74;
      uint64_t v24 = swift_retain(v74);
      dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter(v75, v24);
      swift_release(v23);
      if (v75[0])
      {
        uint64_t v71 = v23;
        uint64_t v72 = v75[0];
        uint64_t v25 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)( 1701667182LL,  0xE400000000000000LL);
        if (!v25)
        {
          uint64_t v28 = v73;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v73, 1LL, 1LL, v7);
          uint64_t v56 = v71;
LABEL_40:
          swift_release(v56);
          swift_release(v72);
          sub_1F6CC((uint64_t)v77, &qword_284028);
          uint64_t v54 = &qword_284900;
          uint64_t v55 = v28;
          goto LABEL_41;
        }

        uint64_t v26 = v25;
        uint64_t v27 = *(void *)(v25 + 16);
        uint64_t v28 = v73;
        if (v27)
        {
          uint64_t v70 = v19;
          unint64_t v29 = v25 + ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
          uint64_t v30 = *(void *)(v8 + 72);
          uint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16);
          uint64_t v69 = v25;
          swift_bridgeObjectRetain(v25);
          while (1)
          {
            uint64_t v33 = v31(v17, v29, v7);
            uint64_t v34 = UsoIdentifier.namespace.getter(v33);
            if (v35)
            {
              uint64_t v36 = v35;
              if (v34 == 0x656D614E707061LL && v35 == 0xE700000000000000LL)
              {
                uint64_t v26 = v69;
                swift_bridgeObjectRelease(v69);
                goto LABEL_38;
              }

              char v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35);
              swift_bridgeObjectRelease(v36);
              if ((v32 & 1) != 0) {
                break;
              }
            }

            (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
            v29 += v30;
            if (!--v27)
            {
              uint64_t v26 = v69;
              swift_bridgeObjectRelease(v69);
              uint64_t v57 = 1LL;
              uint64_t v19 = v70;
              goto LABEL_35;
            }
          }

          uint64_t v26 = v69;
          uint64_t v36 = v69;
LABEL_38:
          uint64_t v19 = v70;
          uint64_t v56 = v71;
          swift_bridgeObjectRelease(v36);
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v28, v17, v7);
          uint64_t v57 = 0LL;
        }

        else
        {
          uint64_t v57 = 1LL;
LABEL_35:
          uint64_t v56 = v71;
        }

        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v28, v57, 1LL, v7);
        swift_bridgeObjectRelease(v26);
        uint64_t v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v19, v28, v7);
        uint64_t v62 = UsoIdentifier.value.getter(v61);
        uint64_t v64 = v63;
        if (v62 == 0xD000000000000011LL && v63 == 0x800000000021D9D0LL)
        {
          swift_release(v72);
          swift_bridgeObjectRelease(0x800000000021D9D0LL);
          char v59 = 1;
        }

        else
        {
          char v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v63);
          swift_release(v72);
          swift_bridgeObjectRelease(v64);
        }

        swift_release(v56);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v7);
LABEL_58:
        sub_1F6CC((uint64_t)v77, &qword_284028);
        return v59 & 1;
      }

      swift_release(v23);
      uint64_t v4 = v22;
      uint64_t v14 = v21;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)v75, &qword_284028);
  }

  sub_FF10((uint64_t)v77, (uint64_t)v75, &qword_284028);
  if (!v76)
  {
    sub_1F6CC((uint64_t)v75, &qword_284028);
    goto LABEL_29;
  }

  uint64_t v37 = type metadata accessor for UsoTask_summarise_common_MediaItem(0LL);
  if ((swift_dynamicCast(&v74, v75, (char *)&type metadata for Any + 8, v37, 6LL) & 1) == 0)
  {
LABEL_29:
    uint64_t v54 = &qword_284028;
    uint64_t v55 = (char *)v77;
    goto LABEL_41;
  }

  uint64_t v38 = v74;
  uint64_t v39 = swift_retain(v74);
  dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v75, v39);
  uint64_t v40 = swift_release(v38);
  uint64_t v41 = v75[0];
  if (v75[0]
    && (uint64_t v42 = dispatch thunk of CodeGenGlobalArgs.usoAssociatedApp.getter(v40), swift_release(v41), v42)
    && (uint64_t v43 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)( 1701667182LL,  0xE400000000000000LL),  swift_release(v42),  v43))
  {
    uint64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      uint64_t v72 = v38;
      uint64_t v73 = v14;
      unint64_t v45 = v43 + ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v46 = *(void *)(v8 + 72);
      uint64_t v47 = v43;
      BOOL v48 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v71 = v47;
      swift_bridgeObjectRetain(v47);
      while (1)
      {
        uint64_t v50 = v48(v11, v45, v7);
        uint64_t v51 = UsoIdentifier.namespace.getter(v50);
        if (v52)
        {
          uint64_t v53 = v52;
          if (v51 == 0x656D614E707061LL && v52 == 0xE700000000000000LL)
          {
            uint64_t v43 = v71;
            swift_bridgeObjectRelease(v71);
            goto LABEL_50;
          }

          char v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52);
          swift_bridgeObjectRelease(v53);
          if ((v49 & 1) != 0) {
            break;
          }
        }

        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
        v45 += v46;
        if (!--v44)
        {
          uint64_t v43 = v71;
          swift_bridgeObjectRelease(v71);
          uint64_t v58 = 1LL;
          goto LABEL_51;
        }
      }

      uint64_t v43 = v71;
      uint64_t v53 = v71;
LABEL_50:
      swift_bridgeObjectRelease(v53);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v4, v11, v7);
      uint64_t v58 = 0LL;
LABEL_51:
      uint64_t v38 = v72;
      uint64_t v14 = v73;
    }

    else
    {
      uint64_t v58 = 1LL;
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, v58, 1LL, v7);
    swift_bridgeObjectRelease(v43);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1LL, v7) != 1)
    {
      uint64_t v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v14, v4, v7);
      uint64_t v66 = UsoIdentifier.value.getter(v65);
      uint64_t v68 = v67;
      if (v66 == 0xD000000000000011LL && v67 == 0x800000000021D9D0LL)
      {
        swift_release(v38);
        swift_bridgeObjectRelease(0x800000000021D9D0LL);
        char v59 = 1;
      }

      else
      {
        char v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v67);
        swift_release(v38);
        swift_bridgeObjectRelease(v68);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      goto LABEL_58;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1LL, 1LL, v7);
  }

  swift_release(v38);
  sub_1F6CC((uint64_t)v77, &qword_284028);
  uint64_t v54 = &qword_284900;
  uint64_t v55 = v4;
LABEL_41:
  sub_1F6CC((uint64_t)v55, v54);
  char v59 = 0;
  return v59 & 1;
}

uint64_t sub_2F440()
{
  uint64_t v1 = sub_6C5C(&qword_2848E8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v64 - v9;
  static UsoTask_CodegenConverter.convert(task:)(v73, v0);
  sub_FF10((uint64_t)v73, (uint64_t)v71, &qword_284028);
  if (!v72)
  {
    sub_1F6CC((uint64_t)v71, &qword_284028);
    goto LABEL_11;
  }

  uint64_t v11 = type metadata accessor for UsoTask_request_common_MediaItem(0LL);
  uint64_t v12 = v70[0];
  uint64_t v13 = swift_retain(v70[0]);
  dispatch thunk of Uso_VerbTemplate_ReferenceSelect.reference.getter(v71, v13);
  swift_release(v12);
  uint64_t v14 = v71[0];
  if (!v71[0])
  {
    uint64_t v22 = v12;
LABEL_10:
    swift_release(v22);
    goto LABEL_11;
  }

  uint64_t v15 = swift_retain(v71[0]);
  uint64_t v16 = CodeGenBase.entity.getter(v15);
  uint64_t v17 = swift_release(v14);
  uint64_t v18 = UsoEntity.attributes.getter(v17);
  swift_release(v16);
  if (!*(void *)(v18 + 16))
  {
    swift_bridgeObjectRelease(v18);
    swift_release(v12);
    uint64_t v22 = v14;
    goto LABEL_10;
  }

  sub_9A744(0x73636972796CLL, 0xE600000000000000LL);
  char v20 = v19;
  swift_bridgeObjectRelease(v18);
  swift_release(v12);
  swift_release(v14);
  if ((v20 & 1) != 0)
  {
    int v21 = v73;
LABEL_28:
    sub_1F6CC((uint64_t)v21, &qword_284028);
    return 0LL;
  }

LABEL_11:
  sub_FF10((uint64_t)v73, (uint64_t)v71, &qword_284028);
  if (!v72)
  {
    sub_1F6CC((uint64_t)v71, &qword_284028);
LABEL_18:
    sub_FF10((uint64_t)v73, (uint64_t)v71, &qword_284028);
    if (v72)
    {
      uint64_t v33 = type metadata accessor for UsoTask_checkExistence_common_MediaItem(0LL);
      if ((swift_dynamicCast(v70, v71, (char *)&type metadata for Any + 8, v33, 6LL) & 1) != 0)
      {
        uint64_t v34 = v70[0];
        sub_4AE18((uint64_t)v73, (uint64_t)v71);
        if (v34)
        {
          swift_release(v34);
          uint64_t v35 = &qword_284028;
          uint64_t v36 = (char *)v71;
LABEL_45:
          sub_1F6CC((uint64_t)v36, v35);
          return 1LL;
        }

    if (String.count.getter(v2, v3) > 59)
    {
      swift_bridgeObjectRelease(v11);
    }

    else
    {
      uint64_t v22 = v2;
      uint64_t v23 = v3;
      char v20 = v6;
      int v21 = v11;
      uint64_t v17 = sub_6D68();
      uint64_t v18 = StringProtocol.contains<A>(_:)(&v20, &type metadata for String, &type metadata for String, v17, v17);
      swift_bridgeObjectRelease(v11);
      if ((v18 & 1) == 0) {
        return v2;
      }
    }

    swift_bridgeObjectRelease(v3);
    return 0LL;
  }

  __break(1u);
  return result;
}

    v18[(v12 >> 6) + 8] |= 1LL << v12;
    char v20 = (uint64_t *)(v18[6] + 16 * v12);
    *char v20 = a2;
    v20[1] = a3;
    *(void *)(v18[7] + 8 * v1sub_6C3C(v0 + 2) = a1;
    int v21 = v18[2];
    uint64_t v22 = __OFADD__(v21, 1LL);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain(a3);
    }

    goto LABEL_14;
  }

  sub_1CCDAC(result, a4 & 1);
  uint64_t result = sub_9A744(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    uint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if ((v16 & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }

  swift_bridgeObjectRelease(a3);
  return 0LL;
}

  uint64_t v14 = 1;
  return v14 & 1;
}

      uint64_t v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10) {
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
      goto LABEL_5;
    }

    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }

    swift_bridgeObjectRelease("PrioritizeClassicalPlayback");
    swift_bridgeObjectRelease(v26);
    uint64_t v51 = swift_arrayDestroy(&qword_26AA80, 1LL, &type metadata for String);
    char v49 = (const char *)&v185;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v51);
    uint64_t v24 = (char *)v185[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
    uint64_t v52 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, a2);
    specialized ContiguousArray._endMutation()(v52);
    uint64_t v9 = v179;
    uint64_t v10 = v174;
    a5 = v162;
    if (v50 == v162) {
      goto LABEL_47;
    }
  }

  if (a6 == (_BYTE *)&dword_0 + 2) {
    goto LABEL_26;
  }
  uint64_t v64 = (const char **)(v26 + 72);
  uint64_t v65 = 2LL;
  while (1)
  {
    uint64_t v66 = (char *)(v65 + 1);
    if (__OFADD__(v65, 1LL)) {
      break;
    }
    uint64_t v67 = (uint64_t)*(v64 - 1);
    uint64_t v68 = *v64;
    if (v67 == 0xD000000000000013LL && v68 == "PrioritizeClassicalPlayback") {
      goto LABEL_11;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68);
    if ((result & 1) != 0) {
      goto LABEL_11;
    }
    v64 += 2;
    ++v65;
    if (v66 == a6) {
      goto LABEL_26;
    }
  }

  __break(1u);
  return result;
}

    sub_1F6CC((uint64_t)v12, &qword_284DA8);
    uint64_t v30 = 2LL;
    uint64_t v29 = v51;
    goto LABEL_15;
  }

  sub_D8208((uint64_t)v12, (uint64_t)v16);
  if (v28(v27, 1LL, v7) == 1)
  {
    sub_1F6CC((uint64_t)v19, &qword_284DB0);
    sub_1F6CC((uint64_t)v21, &qword_284DB0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    goto LABEL_11;
  }

  char v31 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v46, v27, v7);
  char v32 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  uint64_t v33 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v31, v7, v32);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v8 + 8);
  v34(v31, v7);
  sub_1F6CC((uint64_t)v19, &qword_284DB0);
  sub_1F6CC((uint64_t)v21, &qword_284DB0);
  v34(v16, v7);
  sub_1F6CC((uint64_t)v12, &qword_284DB0);
  uint64_t v29 = v51;
  if ((v33 & 1) != 0) {
    goto LABEL_13;
  }
  uint64_t v30 = 2LL;
LABEL_15:
  uint64_t v35 = [v29 backingStore];
  uint64_t v36 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
  uint64_t v37 = (void *)swift_dynamicCastObjCClass(v35, v36);
  if (v37) {
    [v37 setAffinityType:INMediaAffinityTypeGetBackingType(v30)];
  }

  uint64_t v38 = v48;
  uint64_t v39 = v48[3];
  uint64_t v40 = v48[4];
  sub_6EA8(v48, v39);
  sub_157C4(v47, (uint64_t)v54);
  sub_157C4((uint64_t)v38, (uint64_t)v53);
  sub_157C4((uint64_t)v55, (uint64_t)v52);
  uint64_t v41 = (void *)swift_allocObject(&unk_26FA88, 160LL, 7LL);
  uint64_t v42 = v50;
  _OWORD v41[2] = v49;
  v41[3] = v42;
  sub_FF54(v54, (uint64_t)(v41 + 4));
  sub_FF54(v53, (uint64_t)(v41 + 9));
  sub_FF54(v52, (uint64_t)(v41 + 14));
  v41[19] = v29;
  swift_retain(v42);
  uint64_t v43 = v29;
  dispatch thunk of NowPlayingProviding.app(completion:)(sub_FF218, v41, v39, v40);
  swift_release(v41);
  return sub_6C3C(v55);
}

  sub_1F6CC((uint64_t)&v120, &qword_286640);
  uint64_t v78 = v109;
  unsigned int v79 = v108(v109, v107, v47);
  uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
  unint64_t v81 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v82 = 0;
    _os_log_impl(&dword_0, v80, v81, "Fatal: cannot case intent as PrivateMediaIntentDataProviding", v82, 2u);
    swift_slowDealloc(v82, -1LL, -1LL);
  }

  v46(v78, v47);
  uint64_t v83 = type metadata accessor for CommandFailure(0LL);
  swift_allocObject(v83, *(unsigned int *)(v83 + 48), *(unsigned __int16 *)(v83 + 52));
  unint64_t v84 = CommandFailure.init(errorCode:reason:)(-2LL, 0xD000000000000035LL, 0x8000000000221360LL);
  unint64_t v85 = sub_10430( &qword_287D90,  (uint64_t (*)(uint64_t))&type metadata accessor for CommandFailure,  (uint64_t)&protocol conformance descriptor for CommandFailure);
  uint64_t v86 = swift_allocError(v83, v85, 0LL, 0LL);
  *unint64_t v87 = v84;
  v116[0] = v86;
  uint64_t v119 = 1;
  v110(v116);
  return sub_1F6CC((uint64_t)v116, (uint64_t *)&unk_286C60);
}

  uint64_t v37 = 1LL;
LABEL_12:
  v26(v36, a1);
  return v37;
}

BOOL sub_2FB84()
{
  if (!v10)
  {
    sub_1F6CC((uint64_t)v9, &qword_284028);
LABEL_5:
    sub_FF10((uint64_t)v11, (uint64_t)v9, &qword_284028);
    if (v10)
    {
      uint64_t v2 = type metadata accessor for UsoTask_shuffle_common_MediaItem(0LL);
    }

    else
    {
      sub_1F6CC((uint64_t)v9, &qword_284028);
    }

    sub_FF10((uint64_t)v11, (uint64_t)v9, &qword_284028);
    if (v10)
    {
      uint64_t v3 = type metadata accessor for UsoTask_repeat_common_MediaItem(0LL);
    }

    else
    {
      sub_1F6CC((uint64_t)v9, &qword_284028);
    }

    sub_1F6CC((uint64_t)v11, &qword_284028);
    return 0LL;
  }

  uint64_t v1 = type metadata accessor for UsoTask_play_common_MediaItem(0LL);
LABEL_11:
  uint64_t v4 = v8;
  uint64_t v5 = swift_retain(v8);
  dispatch thunk of Uso_VerbTemplate_ReferenceControl.reference.getter(v9, v5);
  swift_release_n(v4, 2LL);
  sub_1F6CC((uint64_t)v11, &qword_284028);
  BOOL v6 = v9[0] != 0LL;
  if (v9[0]) {
    swift_release(v9[0]);
  }
  return v6;
}

uint64_t sub_2FD10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for SiriForAirPlayDialogMemory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 3sub_6C3C(v0 + 2) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

uint64_t sub_2FD94(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SiriForAirPlayDialogMemory(uint64_t a1)
{
  return sub_6C3C((void *)(a1 + 8));
}

uint64_t getEnumTagSinglePayload for SiriForAirPlayDialogMemory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_6C3C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

void sub_2FE18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PlaybackItem.ContentOrigin(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for PlaybackItem.Scheme(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = 0LL;
  unint64_t v40 = 0xE000000000000000LL;
  uint64_t v10 = (*(uint64_t (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for PlaybackItem.Scheme.library(_:),  v6);
  uint64_t v11 = PlaybackItem.Scheme.rawValue.getter(v10);
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease(v40);
  uint64_t v39 = v11;
  unint64_t v40 = v13;
  v14._countAndFlagsBits = 3092282LL;
  v14._object = (void *)0xE300000000000000LL;
  String.append(_:)(v14);
  uint64_t v15 = (*(uint64_t (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for PlaybackItem.ContentOrigin.wholelibrary(_:),  v2);
  uint64_t v16 = PlaybackItem.ContentOrigin.rawValue.getter(v15);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 47LL;
  v20._object = (void *)0xE100000000000000LL;
  String.append(_:)(v20);
  uint64_t v22 = v39;
  unint64_t v21 = v40;
  id v23 = [v1 mediaItems];
  if (!v23)
  {
    uint64_t v35 = v21;
LABEL_16:
    swift_bridgeObjectRelease(v35);
    return;
  }

  uint64_t v24 = v23;
  uint64_t v25 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

  if (!((unint64_t)v26 >> 62))
  {
    goto LABEL_15;
  }

  if (v26 < 0) {
    uint64_t v36 = v26;
  }
  else {
    uint64_t v36 = v26 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v26);
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v26);
  if (!v37)
  {
LABEL_15:
    swift_bridgeObjectRelease(v21);
    uint64_t v35 = v26;
    goto LABEL_16;
  }

LABEL_4:
  if ((v26 & 0xC000000000000001LL) != 0)
  {
    id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v26);
LABEL_7:
    uint64_t v28 = v27;
    swift_bridgeObjectRelease(v26);
    id v29 = [v28 identifier];

    if (v29)
    {
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      unint64_t v32 = v31;

      uint64_t v39 = v30;
      unint64_t v40 = v32;
      v38[0] = v22;
      v38[1] = v21;
      unint64_t v33 = sub_6CE0();
      unint64_t v34 = sub_6D24();
      BidirectionalCollection<>.starts<A>(with:)(v38, &type metadata for String, &type metadata for String, v33, v34);
      swift_bridgeObjectRelease(v21);
      uint64_t v35 = v32;
    }

    else
    {
      uint64_t v35 = v21;
    }

    goto LABEL_16;
  }

  if (*(void *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v27 = *(id *)(v26 + 32);
    goto LABEL_7;
  }

  __break(1u);
}

  if ((v6 & 0xC000000000000001LL) != 0)
  {
    uint64_t v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v6);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    uint64_t v7 = *(id *)(v6 + 32);
  }

  uint64_t v8 = v7;
  swift_bridgeObjectRelease(v6);
  uint64_t v9 = [v8 *a1];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  }

  if ((v19 & 0xC000000000000001LL) != 0)
  {
    Swift::String v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      JUMPOUT(0x3C9D4LL);
    }

    Swift::String v20 = *(id *)(v19 + 32);
  }

  unint64_t v21 = v20;
  swift_bridgeObjectRelease(v19);
  uint64_t v22 = [v21 type];

LABEL_14:
  uint64_t v100 = a9;
  uint64_t v25 = (id)INMediaItemTypeGetName(v22);
  if (v25)
  {
    uint64_t v26 = v25;
    id v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    id v29 = v28;
  }

  else
  {
    id v27 = 0LL;
    id v29 = 0xE000000000000000LL;
  }

  uint64_t v30 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v30);
  if (a2 == 0x657449616964656DLL && a3 == 0xEA0000000000736DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
  {
    switch((unint64_t)v15)
    {
      case 1uLL:
        swift_bridgeObjectRelease(v29);
        unint64_t v31 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v34 = *(void *)(v31 + 24);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v33;
        uint64_t v92 = v34;
        uint64_t v35 = 0xD000000000000022LL;
        uint64_t v36 = 0x800000000021D760LL;
        uint64_t v93 = 0xD000000000000022LL;
        BOOL v94 = 0x800000000021D760LL;
        uint64_t v95 = v37;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        uint64_t v38 = a5;
        goto LABEL_32;
      case 2uLL:
        swift_bridgeObjectRelease(v29);
        char v49 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        unint64_t v33 = *(void *)(v49 + 16);
        unint64_t v34 = *(void *)(v49 + 24);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v33;
        uint64_t v92 = v34;
        uint64_t v35 = 0xD000000000000029LL;
        uint64_t v36 = 0x800000000021D700LL;
        uint64_t v93 = 0xD000000000000029LL;
        BOOL v94 = 0x800000000021D700LL;
        uint64_t v95 = v50;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        uint64_t v51 = a5;
        goto LABEL_32;
      case 3uLL:
        uint64_t v52 = sub_6C5C(&qword_2844D0);
        uint64_t inited = swift_initStackObject(v52, v102);
        *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
        *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x707954616964656DLL;
        *(void *)(inited + 40) = 0xE900000000000065LL;
        *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
        *(void *)(inited + 4sub_6C3C(v0 + 8) = v27;
        *(void *)(inited + 56) = v29;
        uint64_t v54 = sub_74D54(inited);
        uint64_t v55 = *(void *)(v9 + 120);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        uint64_t v56 = *(void *)(v55 + 40);
        uint64_t v57 = *(void *)(v55 + 48);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v56;
        uint64_t v92 = v57;
        uint64_t v93 = 0xD000000000000029LL;
        BOOL v94 = 0x800000000021D6D0LL;
        uint64_t v95 = v58;
        uint64_t v96 = v54;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        char v59 = a5;
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  v100,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v56,  v57,  0xD000000000000029LL,  0x800000000021D6D0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v90);
        uint64_t v60 = v54;
        goto LABEL_34;
      case 4uLL:
        swift_bridgeObjectRelease(v29);
        char v61 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        unint64_t v33 = *(void *)(v61 + 16);
        unint64_t v34 = *(void *)(v61 + 24);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v33;
        uint64_t v92 = v34;
        uint64_t v35 = 0xD00000000000002CLL;
        uint64_t v36 = 0x800000000021D790LL;
        uint64_t v93 = 0xD00000000000002CLL;
        BOOL v94 = 0x800000000021D790LL;
        uint64_t v95 = v62;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        char v63 = a5;
        goto LABEL_32;
      case 5uLL:
        swift_bridgeObjectRelease(v29);
        uint64_t v64 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        uint64_t v65 = a5;
        sub_45FD4(v64, v101, (uint64_t)&v103, a8, v100);
        swift_bridgeObjectRelease(v64);
        return sub_1F6CC((uint64_t)&v103, &qword_283FE8);
      case 6uLL:
        swift_bridgeObjectRelease(v29);
        uint64_t v66 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        unint64_t v33 = *(void *)(v66 + 40);
        unint64_t v34 = *(void *)(v66 + 48);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v33;
        uint64_t v92 = v34;
        uint64_t v35 = 0xD000000000000026LL;
        uint64_t v36 = 0x800000000021D730LL;
        uint64_t v93 = 0xD000000000000026LL;
        BOOL v94 = 0x800000000021D730LL;
        uint64_t v95 = v67;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        uint64_t v68 = a5;
        goto LABEL_32;
      case 7uLL:
        swift_bridgeObjectRelease(v29);
        uint64_t v69 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        unint64_t v33 = *(void *)(v69 + 16);
        unint64_t v34 = *(void *)(v69 + 24);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v33;
        uint64_t v92 = v34;
        uint64_t v35 = 0xD000000000000027LL;
        uint64_t v36 = 0x800000000021D6A0LL;
        uint64_t v93 = 0xD000000000000027LL;
        BOOL v94 = 0x800000000021D6A0LL;
        uint64_t v95 = v70;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        uint64_t v71 = a5;
        goto LABEL_32;
      case 8uLL:
        swift_bridgeObjectRelease(v29);
        uint64_t v72 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        unint64_t v33 = *(void *)(v72 + 16);
        unint64_t v34 = *(void *)(v72 + 24);
        __chkstk_darwin(*((void *)&v104 + 1));
        uint64_t v91 = v33;
        uint64_t v92 = v34;
        uint64_t v35 = 0xD000000000000026LL;
        uint64_t v36 = 0x800000000021D670LL;
        uint64_t v93 = 0xD000000000000026LL;
        BOOL v94 = 0x800000000021D670LL;
        uint64_t v95 = v73;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        uint64_t v74 = a5;
        goto LABEL_32;
      default:
        swift_bridgeObjectRelease(v29);
        if ((id)_INSearchForMediaMediaItemUnsupportedReasonAppNotAvailable == v15)
        {
          uint64_t v42 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v105 = 0LL;
          int v103 = 0u;
          uint64_t v104 = 0u;
          uint64_t v43 = __chkstk_darwin(v42);
          uint64_t v91 = v44;
          uint64_t v92 = v45;
          uint64_t v46 = 0xD000000000000024LL;
          uint64_t v47 = 0x800000000021D640LL;
          uint64_t v93 = 0xD000000000000024LL;
          BOOL v94 = 0x800000000021D640LL;
          uint64_t v95 = v48;
          uint64_t v96 = v43;
          NSString v97 = v101;
          uint64_t v98 = &v103;
          uint64_t v99 = 0LL;
LABEL_38:
          sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  v100,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ ena bleTelemetry=YES ",  125LL,  2,  v44,  v45,  v46,  v47,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v90);
LABEL_39:
          sub_1F6CC((uint64_t)&v103, &qword_283FE8);
          return swift_bridgeObjectRelease(v42);
        }

        if ((id)_INSearchForMediaMediaItemUnsupportedReasonAppNotConfigured == v15)
        {
          uint64_t v42 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v105 = 0LL;
          int v103 = 0u;
          uint64_t v104 = 0u;
          uint64_t v76 = __chkstk_darwin(v42);
          uint64_t v91 = v44;
          uint64_t v92 = v45;
          uint64_t v46 = 0xD000000000000025LL;
          uint64_t v47 = 0x800000000021D610LL;
          uint64_t v93 = 0xD000000000000025LL;
          BOOL v94 = 0x800000000021D610LL;
          uint64_t v95 = v77;
          uint64_t v96 = v76;
          NSString v97 = v101;
          uint64_t v98 = &v103;
          uint64_t v99 = 0LL;
          goto LABEL_38;
        }

        if ((id)_INSearchForMediaMediaItemUnsupportedReasonAppAccountFailure == v15)
        {
          uint64_t v42 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v105 = 0LL;
          int v103 = 0u;
          uint64_t v104 = 0u;
          uint64_t v78 = __chkstk_darwin(v42);
          uint64_t v91 = v79;
          uint64_t v92 = v80;
          uint64_t v93 = 0xD000000000000026LL;
          BOOL v94 = 0x800000000021D5E0LL;
          uint64_t v95 = v81;
          uint64_t v96 = v78;
          NSString v97 = v101;
          uint64_t v98 = &v103;
          uint64_t v99 = 0LL;
          sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  v100,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ ena bleTelemetry=YES ",  125LL,  2,  v79,  v80,  0xD000000000000026LL,  0x800000000021D5E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v90);
          goto LABEL_39;
        }

        uint64_t v82 = (id)_INSearchForMediaMediaItemUnsupportedReasonAppDoesntSupportIntent;
        uint64_t v83 = *(void *)(v9 + 120);
        unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
        uint64_t v105 = &off_26DE60;
        *(void *)&int v103 = a5;
        if (v82 == v15)
        {
          unint64_t v84 = *(void *)(v83 + 24);
          unint64_t v85 = *(void *)(v83 + 16);
          __chkstk_darwin(*((void *)&v104 + 1));
          uint64_t v91 = v85;
          uint64_t v92 = v84;
          unint64_t v87 = 0xD00000000000002BLL;
          uint64_t v88 = 0x800000000021D5B0LL;
          uint64_t v93 = 0xD00000000000002BLL;
          BOOL v94 = 0x800000000021D5B0LL;
        }

        else
        {
          unint64_t v84 = *(void *)(v83 + 24);
          unint64_t v85 = *(void *)(v83 + 16);
          __chkstk_darwin(*((void *)&v104 + 1));
          uint64_t v91 = v85;
          uint64_t v92 = v84;
          unint64_t v87 = 0xD00000000000001CLL;
          uint64_t v88 = 0x800000000021D590LL;
          uint64_t v93 = 0xD00000000000001CLL;
          BOOL v94 = 0x800000000021D590LL;
        }

        uint64_t v95 = v86;
        uint64_t v96 = v32;
        NSString v97 = v101;
        uint64_t v98 = &v103;
        uint64_t v99 = 0LL;
        uint64_t v89 = a5;
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  v100,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v85,  v84,  v87,  v88,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v90);
        break;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v29);
    uint64_t v39 = *(void *)(v9 + 120);
    unint64_t v32 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    *((void *)&v104 + 1) = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
    uint64_t v105 = &off_26DE60;
    *(void *)&int v103 = a5;
    unint64_t v33 = *(void *)(v39 + 40);
    unint64_t v34 = *(void *)(v39 + 48);
    __chkstk_darwin(*((void *)&v104 + 1));
    uint64_t v91 = v33;
    uint64_t v92 = v34;
    uint64_t v35 = 0xD000000000000019LL;
    uint64_t v36 = 0x800000000021D4F0LL;
    uint64_t v93 = 0xD000000000000019LL;
    BOOL v94 = 0x800000000021D4F0LL;
    uint64_t v95 = v40;
    uint64_t v96 = v32;
    NSString v97 = v101;
    uint64_t v98 = &v103;
    uint64_t v99 = 0LL;
    uint64_t v41 = a5;
LABEL_32:
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  v100,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v33,  v34,  v35,  v36,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v90);
  }

  uint64_t v60 = v32;
LABEL_34:
  swift_bridgeObjectRelease(v60);
  return sub_1F6CC((uint64_t)&v103, &qword_283FE8);
}

  if ((v24 & 0xC000000000000001LL) != 0)
  {
    uint64_t v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v24);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
LABEL_23:
      swift_once(&qword_283888, sub_BFC5C);
      goto LABEL_16;
    }

    uint64_t v25 = *(id *)(v24 + 32);
  }

  uint64_t v26 = v25;
  swift_bridgeObjectRelease(v24);
  id v27 = [v26 type];

LABEL_14:
  uint64_t v30 = a3[19];
  unint64_t v31 = a3[20];
  sub_6EA8(a3 + 16, v30);
  if ((dispatch thunk of FeatureFlagProviding.isAppIntentsEnabled.getter(v30, v31) & 1) == 0)
  {
LABEL_19:
    uint64_t v45 = sub_6C5C(&qword_2844D0);
    uint64_t inited = swift_initStackObject(v45, v74);
    *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
    *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x68637461577369LL;
    *(void *)(inited + 40) = 0xE700000000000000LL;
    uint64_t v47 = static SiriAudioEnvironment.isWatch.getter();
    *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
    *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v47 & 1;
    uint64_t v48 = sub_74D54(inited);
    char v49 = a3[15];
    uint64_t v72 = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
    uint64_t v73 = &off_26DE60;
    v71[0] = a2;
    uint64_t v50 = *(void *)(v49 + 40);
    uint64_t v51 = *(void *)(v49 + 48);
    __chkstk_darwin(v72);
    *(&v61 - 10) = v50;
    *(&v61 - 9) = v51;
    *(&v61 - sub_6C3C(v0 + 8) = 0xD000000000000015LL;
    *(&v61 - sub_6C3C(v0 + 7) = 0x800000000021D820LL;
    uint64_t v56 = v52;
    uint64_t v57 = v48;
    char v58 = v70;
    char v59 = v71;
    uint64_t v60 = 0LL;
    uint64_t v54 = v53;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_3D0AC,  (uint64_t)v19,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v50,  v51,  0xD000000000000015LL,  0x800000000021D820LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v61 - 12));
    swift_bridgeObjectRelease(v48);
    uint64_t v43 = &qword_283FE8;
    uint64_t v44 = v71;
    goto LABEL_20;
  }

  if (qword_283888 != -1) {
    goto LABEL_23;
  }
LABEL_16:
  uint64_t v70 = v20;
  unint64_t v32 = v63;
  unint64_t v33 = sub_6960(v63, (uint64_t)qword_2969C8);
  unint64_t v34 = v62;
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 16))(v18, v33, v32);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  uint64_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl( &dword_0,  v36,  v37,  "SearchForMediaDialogProvider#makeIntentHandledDialog AppIntents enabled, returning suppressed CAT for music",  v38,  2u);
    swift_slowDealloc(v38, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v32);
  uint64_t v39 = *(int *)(sub_6C5C(&qword_289340) + 48);
  unint64_t v40 = (uint64_t)v67;
  TemplatingResult.init(templateIdentifier:speak:print:)( 0xD00000000000001FLL,  0x800000000021D840LL,  _swiftEmptyArrayStorage,  &off_269D80);
  uint64_t v41 = [objc_allocWithZone(DialogExecutionResult) init];
  uint64_t v42 = String._bridgeToObjectiveC()();
  [v41 setCatId:v42];

  *(void *)(v40 + vsub_6C3C(v0 + 39) = v41;
  swift_storeEnumTagMultiPayload(v40, v66, 0LL);
  sub_C1F84(v40, a4, v64, v70, v68, v69, (uint64_t)v65);
  uint64_t v43 = (uint64_t *)&unk_286BB0;
  uint64_t v44 = (void *)v40;
LABEL_20:
  sub_1F6CC((uint64_t)v44, v43);
  return swift_release(v19);
}

  if ((v4 & 0xC000000000000001LL) != 0)
  {
    uint64_t v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v4);
    goto LABEL_7;
  }

  if (*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v5 = *(id *)(v4 + 32);
LABEL_7:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease(v4);
    [v6 type];

    return;
  }

  __break(1u);
}

      uint64_t result = (unint64_t *)swift_bridgeObjectRelease(v12);
      goto LABEL_5;
    }

    uint64_t result = (unint64_t *)swift_bridgeObjectRelease(v12);
LABEL_15:
    id v23 = v32[v17];
    v32[v17] = v23 & ~v18;
    if ((v18 & v23) != 0)
    {
      uint64_t v24 = v33 - 1;
      if (__OFSUB__(v33, 1LL)) {
        goto LABEL_30;
      }
      --v33;
      if (!v24) {
        return (unint64_t *)&_swiftEmptySetSingleton;
      }
    }

  if ((v19 & 0xC000000000000001LL) != 0)
  {
    Swift::String v20 = v9;
    unint64_t v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      JUMPOUT(0x10B0B0LL);
    }

    Swift::String v20 = v9;
    unint64_t v21 = *(id *)(v19 + 32);
  }

  uint64_t v22 = v21;
  id v23 = objc_msgSend(v21, "type", swift_bridgeObjectRelease(v19).n128_f64[0]);

LABEL_15:
  id v120 = a9;
  uint64_t v26 = (id)INMediaItemTypeGetName(v23);
  uint64_t v121 = a8;
  if (v26)
  {
    id v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    uint64_t v30 = v29;
  }

  else
  {
    uint64_t v28 = 0LL;
    uint64_t v30 = 0xE000000000000000LL;
  }

  unint64_t v31 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v31);
  if (a2 == 0x657449616964656DLL && a3 == 0xEA0000000000736DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
  {
    switch((unint64_t)v14)
    {
      case 1uLL:
        swift_bridgeObjectRelease(v30);
        unint64_t v32 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 24);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v36 = 0xD000000000000022LL;
        uint64_t v37 = 0x800000000021D760LL;
        uint64_t v110 = 0xD000000000000022LL;
        uint64_t v111 = 0x800000000021D760LL;
        os_log_type_t v112 = v38;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        unint64_t v40 = v39;
        goto LABEL_37;
      case 2uLL:
        swift_bridgeObjectRelease(v30);
        char v59 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v59 + 16);
        uint64_t v35 = *(void *)(v59 + 24);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v36 = 0xD000000000000029LL;
        uint64_t v37 = 0x800000000021D700LL;
        uint64_t v110 = 0xD000000000000029LL;
        uint64_t v111 = 0x800000000021D700LL;
        os_log_type_t v112 = v60;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        char v62 = v61;
        goto LABEL_37;
      case 3uLL:
        char v63 = v117 == (_BYTE *)&dword_0 + 2;
        uint64_t v64 = v118 == (_BYTE *)&dword_0 + 1;
        uint64_t v65 = sub_6C5C(&qword_2844D0);
        uint64_t inited = swift_initStackObject(v65, &v123);
        *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_2168F0;
        strcpy((char *)(inited + 32), "isLikeAffinity");
        *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
        *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v64;
        *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
        *(void *)(inited + 80) = 0xD000000000000011LL;
        *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000220BC0LL;
        *(_BYTE *)(inited + 96) = v63;
        *(void *)(inited + 120) = &type metadata for Bool;
        *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x707954616964656DLL;
        *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
        *(void *)(inited + 136) = 0xE900000000000065LL;
        *(void *)(inited + 1sub_6C3C(v0 + 44) = v28;
        *(void *)(inited + 15sub_6C3C(v0 + 2) = v30;
        uint64_t v45 = sub_74D54(inited);
        uint64_t v67 = *(void *)(v20 + 120);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        uint64_t v68 = *(void *)(v67 + 40);
        uint64_t v69 = *(void *)(v67 + 48);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v68;
        uint64_t v109 = v69;
        uint64_t v110 = 0xD000000000000029LL;
        uint64_t v111 = 0x800000000021D6D0LL;
        os_log_type_t v112 = v70;
        BOOL v113 = v45;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        uint64_t v72 = v71;
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v121,  v120,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v68,  v69,  0xD000000000000029LL,  0x800000000021D6D0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v107);
        goto LABEL_31;
      case 4uLL:
        swift_bridgeObjectRelease(v30);
        uint64_t v73 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v73 + 16);
        uint64_t v35 = *(void *)(v73 + 24);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v36 = 0xD00000000000002CLL;
        uint64_t v37 = 0x800000000021D790LL;
        uint64_t v110 = 0xD00000000000002CLL;
        uint64_t v111 = 0x800000000021D790LL;
        os_log_type_t v112 = v74;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        uint64_t v76 = v75;
        goto LABEL_37;
      case 5uLL:
        swift_bridgeObjectRelease(v30);
        uint64_t v77 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        uint64_t v78 = v119;
        sub_45FD4(v77, v122, (uint64_t)&v125, v121, v120);
        swift_bridgeObjectRelease(v77);
        goto LABEL_39;
      case 6uLL:
        swift_bridgeObjectRelease(v30);
        unsigned int v79 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v79 + 40);
        uint64_t v35 = *(void *)(v79 + 48);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v36 = 0xD000000000000026LL;
        uint64_t v37 = 0x800000000021D730LL;
        uint64_t v110 = 0xD000000000000026LL;
        uint64_t v111 = 0x800000000021D730LL;
        os_log_type_t v112 = v80;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        uint64_t v82 = v81;
        goto LABEL_37;
      case 7uLL:
        swift_bridgeObjectRelease(v30);
        uint64_t v83 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v83 + 16);
        uint64_t v35 = *(void *)(v83 + 24);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v36 = 0xD000000000000027LL;
        uint64_t v37 = 0x800000000021D6A0LL;
        uint64_t v110 = 0xD000000000000027LL;
        uint64_t v111 = 0x800000000021D6A0LL;
        os_log_type_t v112 = v84;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        uint64_t v86 = v85;
        goto LABEL_37;
      case 8uLL:
        swift_bridgeObjectRelease(v30);
        unint64_t v87 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v87 + 16);
        uint64_t v35 = *(void *)(v87 + 24);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v36 = 0xD000000000000026LL;
        uint64_t v37 = 0x800000000021D670LL;
        uint64_t v110 = 0xD000000000000026LL;
        uint64_t v111 = 0x800000000021D670LL;
        os_log_type_t v112 = v88;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        uint64_t v90 = v89;
        goto LABEL_37;
      default:
        swift_bridgeObjectRelease(v30);
        if ((id)_INUpdateMediaAffinityMediaItemUnsupportedReasonAppNotAvailable == v14)
        {
          uint64_t v52 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v127 = 0LL;
          uint64_t v125 = 0u;
          uint64_t v126 = 0u;
          uint64_t v53 = __chkstk_darwin(v52);
          uint64_t v108 = v54;
          uint64_t v109 = v55;
          uint64_t v56 = 0xD000000000000024LL;
          uint64_t v57 = 0x800000000021D640LL;
          uint64_t v110 = 0xD000000000000024LL;
          uint64_t v111 = 0x800000000021D640LL;
          os_log_type_t v112 = v58;
          BOOL v113 = v53;
          uint64_t v114 = v122;
          unint64_t v115 = &v125;
          uint64_t v116 = 0LL;
LABEL_45:
          sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v121,  v120,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ ena bleTelemetry=YES ",  125LL,  2,  v54,  v55,  v56,  v57,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v107);
          sub_1F6CC((uint64_t)&v125, &qword_283FE8);
          *(void *)&uint64_t result = swift_bridgeObjectRelease(v52).n128_u64[0];
          return result;
        }

        if ((id)_INUpdateMediaAffinityMediaItemUnsupportedReasonAppNotConfigured == v14)
        {
          uint64_t v52 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v127 = 0LL;
          uint64_t v125 = 0u;
          uint64_t v126 = 0u;
          uint64_t v98 = __chkstk_darwin(v52);
          uint64_t v108 = v54;
          uint64_t v109 = v55;
          uint64_t v56 = 0xD000000000000025LL;
          uint64_t v57 = 0x800000000021D610LL;
          uint64_t v110 = 0xD000000000000025LL;
          uint64_t v111 = 0x800000000021D610LL;
          os_log_type_t v112 = v99;
          BOOL v113 = v98;
          uint64_t v114 = v122;
          unint64_t v115 = &v125;
          uint64_t v116 = 0LL;
          goto LABEL_45;
        }

        if ((id)_INUpdateMediaAffinityMediaItemUnsupportedReasonAppAccountFailure == v14)
        {
          uint64_t v52 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v127 = 0LL;
          uint64_t v125 = 0u;
          uint64_t v126 = 0u;
          uint64_t v100 = __chkstk_darwin(v52);
          uint64_t v108 = v54;
          uint64_t v109 = v55;
          uint64_t v56 = 0xD000000000000026LL;
          uint64_t v57 = 0x800000000021D5E0LL;
          uint64_t v110 = 0xD000000000000026LL;
          uint64_t v111 = 0x800000000021D5E0LL;
          os_log_type_t v112 = v101;
          BOOL v113 = v100;
          uint64_t v114 = v122;
          unint64_t v115 = &v125;
          uint64_t v116 = 0LL;
          goto LABEL_45;
        }

        int v102 = (id)_INUpdateMediaAffinityMediaItemUnsupportedReasonAppDoesntSupportIntent;
        int v103 = *(void *)(v20 + 120);
        unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
        uint64_t v127 = &off_275D10;
        *(void *)&uint64_t v125 = v119;
        unint64_t v34 = *(void *)(v103 + 16);
        uint64_t v35 = *(void *)(v103 + 24);
        __chkstk_darwin(*((void *)&v126 + 1));
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        if (v102 == v14)
        {
          uint64_t v36 = 0xD00000000000002BLL;
          uint64_t v37 = 0x800000000021D5B0LL;
          uint64_t v110 = 0xD00000000000002BLL;
          uint64_t v111 = 0x800000000021D5B0LL;
        }

        else
        {
          uint64_t v36 = 0xD00000000000001CLL;
          uint64_t v37 = 0x800000000021D590LL;
          uint64_t v110 = 0xD00000000000001CLL;
          uint64_t v111 = 0x800000000021D590LL;
        }

        os_log_type_t v112 = v104;
        BOOL v113 = v33;
        uint64_t v114 = v122;
        unint64_t v115 = &v125;
        uint64_t v116 = 0LL;
        id v106 = v105;
LABEL_37:
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v121,  v120,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v34,  v35,  v36,  v37,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v107);
        break;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v30);
    if (a2 == 0x7974696E69666661LL && a3 == 0xEC00000065707954LL
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x7974696E69666661LL, 0xEC00000065707954LL) & 1) != 0)
    {
      uint64_t v41 = v117 == (_BYTE *)&dword_0 + 2;
      uint64_t v42 = v118 == (_BYTE *)&dword_0 + 1;
      uint64_t v43 = sub_6C5C(&qword_2844D0);
      uint64_t v44 = swift_initStackObject(v43, &v124);
      strcpy((char *)(v44 + 32), "isLikeAffinity");
      *(_BYTE *)(v44 + 4sub_6C3C(v0 + 7) = -18;
      *(_BYTE *)(v44 + 4sub_6C3C(v0 + 8) = v42;
      *(void *)(v44 + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
      *(void *)(v44 + 80) = 0xD000000000000011LL;
      *(_OWORD *)(v44 + sub_6C3C(v0 + 16) = xmmword_2160E0;
      *(void *)(v44 + 8sub_6C3C(v0 + 8) = 0x8000000000220BC0LL;
      *(void *)(v44 + 120) = &type metadata for Bool;
      *(_BYTE *)(v44 + 96) = v41;
      uint64_t v45 = sub_74D54(v44);
      uint64_t v46 = *(void *)(v20 + 120);
      *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
      uint64_t v127 = &off_275D10;
      *(void *)&uint64_t v125 = v119;
      uint64_t v47 = *(void *)(v46 + 40);
      uint64_t v48 = *(void *)(v46 + 48);
      __chkstk_darwin(*((void *)&v126 + 1));
      uint64_t v108 = v47;
      uint64_t v109 = v48;
      uint64_t v110 = 0xD000000000000017LL;
      uint64_t v111 = 0x8000000000220C00LL;
      os_log_type_t v112 = v49;
      BOOL v113 = v45;
      uint64_t v114 = v122;
      unint64_t v115 = &v125;
      uint64_t v116 = 0LL;
      uint64_t v51 = v50;
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v121,  v120,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v47,  v48,  0xD000000000000017LL,  0x8000000000220C00LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v107);
LABEL_31:
      swift_bridgeObjectRelease(v45);
      goto LABEL_39;
    }

    uint64_t v92 = *(void *)(v20 + 120);
    unint64_t v33 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    *((void *)&v126 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_284CA8,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
    uint64_t v127 = &off_275D10;
    *(void *)&uint64_t v125 = v119;
    uint64_t v93 = *(void *)(v92 + 40);
    BOOL v94 = *(void *)(v92 + 48);
    __chkstk_darwin(*((void *)&v126 + 1));
    uint64_t v108 = v93;
    uint64_t v109 = v94;
    uint64_t v110 = 0xD000000000000019LL;
    uint64_t v111 = 0x800000000021D4F0LL;
    os_log_type_t v112 = v95;
    BOOL v113 = v33;
    uint64_t v114 = v122;
    unint64_t v115 = &v125;
    uint64_t v116 = 0LL;
    NSString v97 = v96;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v121,  v120,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v93,  v94,  0xD000000000000019LL,  0x800000000021D4F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v107);
  }

  swift_bridgeObjectRelease(v33);
LABEL_39:
  sub_1F6CC((uint64_t)&v125, &qword_283FE8);
  return result;
}

  if ((v3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    uint64_t v4 = *(id *)(v3 + 32);
  }

  uint64_t v5 = v4;
  swift_bridgeObjectRelease(v3);
  uint64_t v6 = [v5 privateMediaItemValueData];

  if (v6)
  {
    uint64_t v7 = [v6 provider];

    if (v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    }
  }

  if ((v6 & 0xC000000000000001LL) != 0)
  {
    uint64_t v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v6);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    uint64_t v7 = *(id *)(v6 + 32);
  }

  uint64_t v8 = v7;
  swift_bridgeObjectRelease(v6);
  uint64_t v9 = [v8 *a1];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  }

  if ((v6 & 0xC000000000000001LL) != 0)
  {
    uint64_t v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v6);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    uint64_t v7 = *(id *)(v6 + 32);
  }

  uint64_t v8 = v7;
  uint64_t v9 = objc_msgSend(v7, *a1, swift_bridgeObjectRelease(v6).n128_f64[0]);

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  }

void sub_30104(SEL *a1)
{
  id v3 = [v1 mediaItems];
  if (!v3) {
    return;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v6);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v6);
    if (v11) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease(v6);
    return;
  }

void sub_30240()
{
}

uint64_t sub_3024C()
{
  if (!v1)
  {
    sub_30104((SEL *)&selRef_artist);
    return v14;
  }

  uint64_t v2 = v0;
  unint64_t v3 = v1;
  sub_30104((SEL *)&selRef_title);
  if (!v5)
  {
    sub_30104((SEL *)&selRef_title);
    if (!v16) {
      return v2;
    }
    uint64_t v6 = v15;
    unint64_t v11 = v16;
    goto LABEL_11;
  }

  uint64_t v6 = v4;
  unint64_t v7 = v5;
  uint64_t v22 = v4;
  unint64_t v23 = v5;
  uint64_t v20 = 0x7C295C3F2A2E285CLL;
  unint64_t v21 = 0xEF5D5C3F2A2E5B5CLL;
  v19[0] = 0LL;
  v19[1] = 0xE000000000000000LL;
  unint64_t v8 = sub_6D68();
  uint64_t v9 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v20,  v19,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v8,  v8,  v8);
  unint64_t v11 = v10;
  uint64_t v12 = String.count.getter(v6, v7);
  uint64_t result = String.count.getter(v9, v11);
  if (!__OFSUB__(v12, result))
  {
    if (v12 - result < 35 || String.count.getter(v9, v11) < 6)
    {
      swift_bridgeObjectRelease(v11);
      unint64_t v11 = v7;
    }

    else
    {
      swift_bridgeObjectRelease(v7);
      uint64_t v6 = v9;
    }

id sub_3042C()
{
  id result = [v0 privatePlayMediaIntentData];
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  id v3 = [result internalSignals];

  if (!v3) {
    return 0LL;
  }
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);

  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_7:
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  unint64_t v6 = sub_6D68();
  unint64_t v7 = (uint64_t *)(v4 + 40);
  while (1)
  {
    uint64_t v8 = *v7;
    v9[2] = *(v7 - 1);
    void v9[3] = v8;
    v9[0] = 0xD000000000000014LL;
    v9[1] = 0x8000000000222280LL;
    if ((StringProtocol.contains<A>(_:)(v9, &type metadata for String, &type metadata for String, v6, v6) & 1) != 0) {
      break;
    }
    v7 += 2;
    if (!--v5) {
      goto LABEL_7;
    }
  }

  swift_bridgeObjectRelease(v4);
  return &dword_0 + 1;
}

void *sub_30544()
{
  id v1 = [v0 mediaSearch];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 genreNames];

    if (v3)
    {
      uint64_t v4 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);

      if (v4[2])
      {
        uint64_t v2 = (void *)v4[4];
        swift_bridgeObjectRetain(v4[5]);
        swift_bridgeObjectRelease(v4);
      }

      else
      {
        swift_bridgeObjectRelease(v4);
        return 0LL;
      }
    }

    else
    {
      return 0LL;
    }
  }

  return v2;
}

void sub_30600()
{
}

uint64_t sub_3060C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_283FE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t DialogService.buildIntentParams(for:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MultiUserState(0LL);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SirikitDeviceState(0LL);
  uint64_t v8 = sub_172594();
  v43[0] = v8;
  unint64_t v9 = sub_1C39A4();
  uint64_t v10 = CATType.toDictionary.getter(v7, v9);
  swift_release(v8);
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, &v46);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_2144D0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x646E756F72477369LL;
  *(void *)(inited + 40) = 0xEB00000000676E69LL;
  sub_FF10(a1, (uint64_t)v43, &qword_283FE8);
  uint64_t v13 = v44;
  if (v44)
  {
    uint64_t v14 = v45;
    sub_6EA8(v43, v44);
    char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14) & 1;
    sub_6C3C(v43);
  }

  else
  {
    sub_1F6CC((uint64_t)v43, &qword_283FE8);
    char v15 = 0;
  }

  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v15;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000018LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x80000000002232F0LL;
  sub_FF10(a1, (uint64_t)v43, &qword_283FE8);
  uint64_t v16 = v44;
  if (v44)
  {
    uint64_t v42 = a1;
    uint64_t v17 = v45;
    char v18 = sub_6EA8(v43, v44);
    if (a2)
    {
      uint64_t v19 = App.appIdentifier.getter(v18);
      a2 = v20;
    }

    else
    {
      uint64_t v19 = 0LL;
    }

    char v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24))(v19, a2, v16, v17);
    swift_bridgeObjectRelease(a2);
    char v21 = v22 & 1;
    sub_6C3C(v43);
    a1 = v42;
  }

  else
  {
    sub_1F6CC((uint64_t)v43, &qword_283FE8);
    char v21 = 0;
  }

  *(_BYTE *)(inited + 96) = v21;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000020LL;
  *(void *)(inited + 136) = 0x8000000000223310LL;
  sub_FF10(a1, (uint64_t)v43, &qword_283FE8);
  uint64_t v23 = v44;
  if (v44)
  {
    uint64_t v24 = v45;
    sub_6EA8(v43, v44);
    char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24) & 1;
    uint64_t v26 = sub_6C3C(v43);
  }

  else
  {
    uint64_t v26 = sub_1F6CC((uint64_t)v43, &qword_283FE8);
    char v25 = 0;
  }

  *(_BYTE *)(inited + 1sub_6C3C(v0 + 44) = v25;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD000000000000013LL;
  *(void *)(inited + 184) = 0x8000000000223340LL;
  uint64_t v27 = static SiriEnvironmentWrapper.retrieve()(v26);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = SiriEnvironment.currentRequest.getter(v27);
    uint64_t v30 = swift_release(v28);
    CurrentRequest.multiUserState.getter(v30);
    uint64_t v31 = swift_release(v29);
    LOBYTE(v2sub_6C3C(v0 + 8) = MultiUserState.isEnabled.getter(v31);
    sub_30AA4((uint64_t)v6);
    char v32 = v28 ^ 1;
  }

  else
  {
    char v32 = 1;
  }

  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v32 & 1;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 2sub_6C3C(v0 + 24) = 0xD000000000000010LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0x8000000000223360LL;
  sub_FF10(a1, (uint64_t)v43, &qword_283FE8);
  uint64_t v33 = v44;
  if (v44)
  {
    uint64_t v34 = v45;
    sub_6EA8(v43, v44);
    char v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34) & 1;
    sub_6C3C(v43);
  }

  else
  {
    sub_1F6CC((uint64_t)v43, &qword_283FE8);
    char v35 = 0;
  }

  *(_BYTE *)(inited + 240) = v35;
  *(void *)(inited + 264) = &type metadata for Bool;
  *(void *)(inited + 27sub_6C3C(v0 + 2) = 0xD000000000000010LL;
  *(void *)(inited + 280) = 0x8000000000223380LL;
  uint64_t v36 = DialogService.fallbackUsername(for:)(a1);
  if (v37) {
    uint64_t v38 = v36;
  }
  else {
    uint64_t v38 = 0LL;
  }
  unint64_t v39 = 0xE000000000000000LL;
  if (v37) {
    unint64_t v39 = v37;
  }
  *(void *)(inited + 28sub_6C3C(v0 + 8) = v38;
  *(void *)(inited + 296) = v39;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 320) = 0x656369766564LL;
  *(void *)(inited + 32sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  *(void *)(inited + 360) = sub_6C5C(&qword_284048);
  *(void *)(inited + 336) = v10;
  return sub_74D54(inited);
}

uint64_t sub_30AA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MultiUserState(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t DialogService.fallbackUsername(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v13 = v12(v10, v11, v2);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "going to compute fallback username", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v10, v2);
  sub_FF10(a1, (uint64_t)v39, &qword_283FE8);
  uint64_t v18 = v40;
  if (!v40)
  {
    sub_1F6CC((uint64_t)v39, &qword_283FE8);
    return 0LL;
  }

  uint64_t v19 = v41;
  sub_6EA8(v39, v40);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
  uint64_t v22 = v21;
  sub_6C3C(v39);
  if (!v22) {
    return 0LL;
  }
  sub_157C4(v38 + 216, (uint64_t)v39);
  uint64_t v23 = v40;
  uint64_t v24 = v41;
  sub_6EA8(v39, v40);
  char v25 = dispatch thunk of MorphunProviding.hasNeededDataToUseMorphunInflection()(v23, v24);
  sub_6C3C(v39);
  if ((v25 & 1) != 0)
  {
    uint64_t v26 = v12(v8, v11, v2);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "has needed data to use morphun in fallback username", v29, 2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    v17(v8, v2);
  }

  else
  {
    swift_bridgeObjectRelease(v22);
    uint64_t v30 = v37;
    uint64_t v31 = v12(v37, v11, v2);
    char v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "doesn't have needed data to use morphun in fallback username", v34, 2u);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    v17(v30, v2);
    return 0LL;
  }

  return v20;
}

uint64_t sub_30E4C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_28BA78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_30E8C(uint64_t a1, unint64_t a2)
{
  return sub_30E9C( a1,  a2,  v2 + 16,  *(void (**)(void))(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 72),  *(void *)(v2 + 80));
}

uint64_t sub_30E9C( uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v70 = a5;
  uint64_t v71 = a4;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_FF10(a3, (uint64_t)v79, &qword_283FE8);
  uint64_t v69 = a1;
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    sub_1F6CC((uint64_t)v79, &qword_283FE8);
    unint64_t v72 = a2;
    goto LABEL_11;
  }

  if ((static SiriAudioEnvironment.isHomePod.getter(v16) & 1) == 0)
  {
    a1 = 0LL;
    unint64_t v72 = 0xE000000000000000LL;
    goto LABEL_8;
  }

  uint64_t v67 = v13;
  sub_FF10((uint64_t)v79, (uint64_t)&v73, &qword_283FE8);
  uint64_t v17 = v75;
  if (v75)
  {
    uint64_t v18 = v76;
    sub_6EA8(&v73, v75);
    a1 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
    unint64_t v20 = v19;
    sub_6C3C(&v73);
    unint64_t v72 = v20;
    if (v20)
    {
      uint64_t v13 = v67;
LABEL_8:
      sub_1F6CC((uint64_t)v79, &qword_283FE8);
      goto LABEL_11;
    }
  }

  else
  {
    sub_1F6CC((uint64_t)&v73, &qword_283FE8);
  }

  sub_1F6CC((uint64_t)v79, &qword_283FE8);
  swift_bridgeObjectRelease(0LL);
  a1 = 0LL;
  unint64_t v72 = 0xE000000000000000LL;
  uint64_t v13 = v67;
LABEL_11:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v21, v12);
  sub_FF10(a3, (uint64_t)v79, &qword_283FE8);
  swift_bridgeObjectRetain_n(a2, 2LL);
  unint64_t v22 = v72;
  uint64_t v23 = swift_bridgeObjectRetain_n(v72, 2LL);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  int v68 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, (os_log_type_t)v68))
  {
    uint64_t v62 = a1;
    uint64_t v64 = v15;
    uint64_t v65 = v12;
    uint64_t v66 = a6;
    uint64_t v67 = v13;
    uint64_t v25 = 7104878LL;
    uint64_t v26 = swift_slowAlloc(38LL, -1LL);
    uint64_t v27 = swift_slowAlloc(96LL, -1LL);
    uint64_t v63 = v27;
    uint64_t v77 = v27;
    *(_DWORD *)uint64_t v26 = 67109890;
    LOBYTE(v7sub_6C3C(v0 + 3) = static SiriAudioEnvironment.isHomePod.getter(v27) & 1;
    LODWORD(v7sub_6C3C(v0 + 3) = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, (char *)&v73 + 4);
    *(_WORD *)(v26 + sub_6C3C(v0 + 8) = 2080;
    if (a2)
    {
      uint64_t v25 = v69;
      unint64_t v28 = a2;
    }

    else
    {
      unint64_t v28 = 0xE300000000000000LL;
    }

    swift_bridgeObjectRetain(a2);
    uint64_t v73 = sub_6978(v25, v28, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v26 + 1sub_6C3C(v0 + 8) = 2080;
    sub_FF10((uint64_t)v79, (uint64_t)&v73, &qword_283FE8);
    uint64_t v29 = v75;
    if (v75)
    {
      uint64_t v30 = v76;
      sub_6EA8(&v73, v75);
      uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 56))(v29, v30);
      unint64_t v33 = v32;
      sub_6C3C(&v73);
      a1 = v62;
      if (v33)
      {
        uint64_t v34 = v31;
        uint64_t v35 = v67;
LABEL_23:
        uint64_t v73 = sub_6978(v34, v33, &v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
        swift_bridgeObjectRelease(v33);
        sub_1F6CC((uint64_t)v79, &qword_283FE8);
        *(_WORD *)(v26 + 2sub_6C3C(v0 + 8) = 2080;
        unint64_t v22 = v72;
        swift_bridgeObjectRetain(v72);
        uint64_t v73 = sub_6978(a1, v22, &v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);
        swift_bridgeObjectRelease_n(v22, 3LL);
        _os_log_impl( &dword_0,  v24,  (os_log_type_t)v68,  "isHomePod = %{BOOL}d, appName = %s, proxiedAppName = %s, localizedName = %s",  (uint8_t *)v26,  0x26u);
        uint64_t v36 = v63;
        swift_arrayDestroy(v63, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1LL, -1LL);
        swift_slowDealloc(v26, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v64, v65);
        a6 = v66;
        goto LABEL_24;
      }
    }

    else
    {
      sub_1F6CC((uint64_t)&v73, &qword_283FE8);
      a1 = v62;
    }

    swift_bridgeObjectRelease(0LL);
    unint64_t v33 = 0xE300000000000000LL;
    uint64_t v35 = v67;
    uint64_t v34 = 7104878LL;
    goto LABEL_23;
  }

  swift_bridgeObjectRelease_n(a2, 2LL);
  sub_1F6CC((uint64_t)v79, &qword_283FE8);

  swift_bridgeObjectRelease_n(v22, 2LL);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
LABEL_24:
  uint64_t v37 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v37, &v78);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219310;
  strcpy((char *)(inited + 32), "localizedName");
  *(_WORD *)(inited + 46) = -4864;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a1;
  *(void *)(inited + 56) = v22;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  strcpy((char *)(inited + 80), "isFirstParty");
  *(_BYTE *)(inited + 9sub_6C3C(v0 + 3) = 0;
  *(_WORD *)(inited + 94) = -5120;
  uint64_t v39 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(a6, a7);
  *(_BYTE *)(inited + 96) = v39 & 1;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x636973754D7369LL;
  *(void *)(inited + 136) = 0xE700000000000000LL;
  uint64_t v40 = static BundleIdentifiers.music.getter(v39);
  uint64_t v42 = v41;
  if (v40 == a6 && v41 == a7)
  {
    char v43 = 1;
    uint64_t v42 = a7;
  }

  else
  {
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)(a6, a7);
  }

  uint64_t v44 = swift_bridgeObjectRelease(v42);
  *(_BYTE *)(inited + 1sub_6C3C(v0 + 44) = v43 & 1;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0x736163646F507369LL;
  *(void *)(inited + 184) = 0xEA00000000007374LL;
  uint64_t v45 = static BundleIdentifiers.podcasts.getter(v44);
  uint64_t v47 = v46;
  if (v45 == a6 && v46 == a7)
  {
    char v48 = 1;
    uint64_t v47 = a7;
  }

  else
  {
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)(a6, a7);
  }

  uint64_t v49 = swift_bridgeObjectRelease(v47);
  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v48 & 1;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 2sub_6C3C(v0 + 24) = 0x736B6F6F427369LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE700000000000000LL;
  uint64_t v50 = static BundleIdentifiers.books.getter(v49);
  uint64_t v52 = v51;
  if (v50 == a6 && v51 == a7)
  {
    char v53 = 1;
    uint64_t v52 = a7;
  }

  else
  {
    char v53 = _stringCompareWithSmolCheck(_:_:expecting:)(a6, a7);
  }

  uint64_t v54 = swift_bridgeObjectRelease(v52);
  *(_BYTE *)(inited + 240) = v53 & 1;
  *(void *)(inited + 264) = &type metadata for Bool;
  strcpy((char *)(inited + 272), "isSoundscapes");
  *(_WORD *)(inited + 286) = -4864;
  uint64_t v55 = static BundleIdentifiers.soundscapes.getter(v54);
  uint64_t v57 = v56;
  if (v55 == a6 && v56 == a7)
  {
    char v58 = 1;
  }

  else
  {
    char v58 = _stringCompareWithSmolCheck(_:_:expecting:)(a6, a7);
    a7 = v57;
  }

  swift_bridgeObjectRelease(a7);
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 8) = v58 & 1;
  unint64_t v59 = sub_74D54(inited);
  v71();
  return swift_bridgeObjectRelease(v59);
}

uint64_t sub_315F4(uint64_t a1)
{
  return MediaIntentCommons.wholeHouseAudioMetadata()(a1, &protocol witness table for INPlayMediaIntent);
}

uint64_t sub_31600()
{
  return MediaIntentCommons.proxiedAppName()().value._countAndFlagsBits;
}

unint64_t sub_3160C(void *a1)
{
  uint64_t v2 = (void *)type metadata accessor for Logger(0LL);
  unint64_t v3 = *(v2 - 1);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (unint64_t *)((char *)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v173 - v11;
  __chkstk_darwin(v10);
  if (!a1)
  {
    if (qword_283888 == -1)
    {
LABEL_6:
      uint64_t v20 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
      uint64_t v21 = (*(uint64_t (**)(unint64_t *, uint64_t, void *))(v3 + 16))(v6, v20, v2);
      unint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl( &dword_0,  v22,  v23,  "No Whole House Audio Metadata present, passing empty app parameter values for CAT",  v24,  2u);
        swift_slowDealloc(v24, -1LL, -1LL);
      }

      (*(void (**)(unint64_t *, void *))(v3 + 8))(v6, v2);
      return sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    }

LABEL_156:
    swift_once(&qword_283888, sub_BFC5C);
    goto LABEL_6;
  }

  uint64_t v176 = v15;
  uint64_t v177 = (char *)&v173 - v13;
  uint64_t v174 = v14;
  uint64_t v175 = v16;
  id v17 = a1;
  unint64_t v184 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  id v18 = [v17 numberOfHomeAutomationWords];
  if (v18)
  {
    id v19 = v18;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v19;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      sub_1CBFB0(0xD00000000000001BLL, 0x800000000021DC00LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Int;
    *(void *)&__int128 v182 = 0LL;
  }

  sub_21964(&v182, &v180);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0xD00000000000001BLL, 0x800000000021DC00LL, isUniquelyReferenced_nonNull_native);
  unint64_t v27 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v27);
LABEL_11:
  id v28 = [v17 isAllSpeakers];
  if (v28)
  {
    id v29 = v28;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v29;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      sub_1CBFB0(0x6570536C6C417369LL, 0xED00007372656B61LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Bool;
    LOBYTE(v18sub_6C3C(v0 + 2) = 0;
  }

  sub_21964(&v182, &v180);
  char v30 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0x6570536C6C417369LL, 0xED00007372656B61LL, v30);
  unint64_t v31 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v31);
LABEL_16:
  id v32 = [v17 isPauseOrStop];
  if (v32)
  {
    id v33 = v32;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v33;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      sub_1CBFB0(0x4F65737561507369LL, 0xED0000706F745372LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_21;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Bool;
    LOBYTE(v18sub_6C3C(v0 + 2) = 0;
  }

  sub_21964(&v182, &v180);
  char v34 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0x4F65737561507369LL, 0xED0000706F745372LL, v34);
  unint64_t v35 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v35);
LABEL_21:
  id v36 = [v17 isWholeHouseAudioCommand];
  if (v36)
  {
    id v37 = v36;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v37;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      sub_1CBFB0(0xD000000000000018LL, 0x800000000021DC20LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_26;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Bool;
    LOBYTE(v18sub_6C3C(v0 + 2) = 0;
  }

  sub_21964(&v182, &v180);
  char v38 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0xD000000000000018LL, 0x800000000021DC20LL, v38);
  unint64_t v39 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v39);
LABEL_26:
  id v40 = [v17 isInHere];
  if (v40)
  {
    id v41 = v40;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v41;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      sub_1CBFB0(0x657265486E497369LL, 0xE800000000000000LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_31;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Bool;
    LOBYTE(v18sub_6C3C(v0 + 2) = 0;
  }

  sub_21964(&v182, &v180);
  char v42 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0x657265486E497369LL, 0xE800000000000000LL, v42);
  unint64_t v43 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v43);
LABEL_31:
  id v44 = [v17 hasExcept];
  if (v44)
  {
    id v45 = v44;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v45;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      sub_1CBFB0(0x7065637845736168LL, 0xE900000000000074LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_36;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Bool;
    LOBYTE(v18sub_6C3C(v0 + 2) = 0;
  }

  sub_21964(&v182, &v180);
  char v46 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0x7065637845736168LL, 0xE900000000000074LL, v46);
  unint64_t v47 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v47);
LABEL_36:
  id v178 = (void *)v3;
  id v48 = [v17 speakerRooms];
  uint64_t v49 = v48;
  if (v48)
  {
    uint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, &type metadata for String);

    uint64_t v49 = *(void **)(v50 + 16);
    swift_bridgeObjectRelease(v50);
  }

  uint64_t v183 = &type metadata for Bool;
  LOBYTE(v18sub_6C3C(v0 + 2) = (unint64_t)v49 > 2;
  sub_21964(&v182, &v180);
  char v51 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0xD000000000000013LL, 0x800000000021DC40LL, v51);
  unint64_t v52 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v52);
  id v53 = [v17 speakerRooms];
  uint64_t v54 = v53;
  if (v53)
  {
    uint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v53, &type metadata for String);

    uint64_t v54 = *(void **)(v55 + 16);
    swift_bridgeObjectRelease(v55);
  }

  uint64_t v183 = &type metadata for Bool;
  LOBYTE(v18sub_6C3C(v0 + 2) = (unint64_t)v54 > 1;
  sub_21964(&v182, &v180);
  char v56 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0xD000000000000011LL, 0x800000000021DC80LL, v56);
  unint64_t v57 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v57);
  id v58 = [v17 permanentNames];
  unint64_t v59 = v58;
  if (v58)
  {
    uint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, &type metadata for String);

    unint64_t v59 = *(void **)(v60 + 16);
    swift_bridgeObjectRelease(v60);
  }

  uint64_t v183 = &type metadata for Bool;
  LOBYTE(v18sub_6C3C(v0 + 2) = v59 != 0LL;
  sub_21964(&v182, &v180);
  char v61 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0x70756F7247736168LL, 0xE900000000000073LL, v61);
  unint64_t v62 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v62);
  uint64_t v63 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
  id v64 = [v17 isParticipatingSpeaker];
  if (v64)
  {
    id v65 = v64;
    uint64_t v181 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v180 = v65;
    sub_21964(&v180, &v182);
    if (!v183)
    {
      sub_1F6CC((uint64_t)&v182, &qword_284028);
      uint64_t v6 = &v184;
      sub_1CBFB0(0xD000000000000016LL, 0x800000000021DCA0LL, &v180);
      sub_1F6CC((uint64_t)&v180, &qword_284028);
      goto LABEL_47;
    }
  }

  else
  {
    uint64_t v183 = &type metadata for Bool;
    LOBYTE(v18sub_6C3C(v0 + 2) = 0;
  }

  sub_21964(&v182, &v180);
  char v66 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  uint64_t v6 = &v179;
  sub_33808(&v180, 0xD000000000000016LL, 0x800000000021DCA0LL, v66);
  unint64_t v67 = v184;
  unint64_t v184 = v179;
  swift_bridgeObjectRelease(v67);
LABEL_47:
  int v68 = (char *)v17;
  uint64_t v69 = sub_1C3F1C(a1);

  uint64_t v70 = (os_log_s *)[v68 isParticipatingSpeaker];
  unint64_t v3 = (unint64_t)v178;
  if (v70)
  {
    uint64_t v71 = v70;
    if (v69[2] == 1LL && -[os_log_s BOOLValue](v70, "BOOLValue"))
    {
      swift_bridgeObjectRelease(v69);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v72 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
      uint64_t v73 = v177;
      uint64_t v74 = (*(uint64_t (**)(char *, uint64_t, void *))(v3 + 16))(v177, v72, v2);
      uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
      os_log_type_t v76 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl(&dword_0, v75, v76, "Skipping destination because isParticipatingSpeaker = true", v77, 2u);
        swift_slowDealloc(v77, -1LL, -1LL);
        uint64_t v78 = (os_log_s *)v68;
      }

      else
      {
        uint64_t v78 = v75;
        uint64_t v75 = v71;
        uint64_t v71 = (os_log_s *)v68;
      }

      (*(void (**)(char *, void *))(v3 + 8))(v73, v2);
      return v184;
    }
  }

  unint64_t v79 = v69[2];
  uint64_t v177 = v68;
  if (!v79) {
    goto LABEL_67;
  }
  uint64_t v63 = (__objc2_ivar_list *)v69[4];
  int v68 = (char *)v69[5];
  char v80 = *((_BYTE *)v69 + 48);
  uint64_t v81 = qword_283888;
  swift_bridgeObjectRetain(v68);
  if ((v80 & 1) == 0)
  {
    if (v81 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v90 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
    uint64_t v91 = (*(uint64_t (**)(char *, uint64_t, void *))(v3 + 16))(v12, v90, v2);
    uint64_t v92 = (os_log_s *)Logger.logObject.getter(v91);
    os_log_type_t v93 = static os_log_type_t.default.getter();
    unint64_t v3 = v93;
    if (os_log_type_enabled(v92, v93))
    {
      BOOL v94 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)BOOL v94 = 0;
      _os_log_impl( &dword_0,  v92,  (os_log_type_t)v3,  "Destination #1: Destination is an accesory. Setting speaker.firstSpeakerName to the groupName",  v94,  2u);
      swift_slowDealloc(v94, -1LL, -1LL);
    }

    ((void (*)(char *, void *))v178[1])(v12, v2);
    uint64_t v183 = &type metadata for String;
    *(void *)&__int128 v182 = v63;
    *((void *)&v182 + 1) = v68;
    sub_21964(&v182, &v180);
    char v88 = swift_isUniquelyReferenced_nonNull_native(v184);
    unint64_t v179 = v184;
    unint64_t v184 = 0x8000000000000000LL;
    uint64_t v89 = "firstSpeakerName";
    goto LABEL_66;
  }

  if (v81 != -1) {
    goto LABEL_157;
  }
  while (1)
  {
    uint64_t v82 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
    uint64_t v83 = v175;
    uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v3 + 16))(v175, v82, v2);
    unint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      unint64_t v87 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v87 = 0;
      _os_log_impl( &dword_0,  v85,  v86,  "Destination #1: Destination is a room or zone. Setting speaker.firstSpeakerRoom to the groupName",  v87,  2u);
      swift_slowDealloc(v87, -1LL, -1LL);
    }

    (*(void (**)(uint64_t, void *))(v3 + 8))(v83, v2);
    uint64_t v183 = &type metadata for String;
    *(void *)&__int128 v182 = v63;
    *((void *)&v182 + 1) = v68;
    sub_21964(&v182, &v180);
    char v88 = swift_isUniquelyReferenced_nonNull_native(v184);
    unint64_t v179 = v184;
    unint64_t v184 = 0x8000000000000000LL;
    uint64_t v89 = "firstSpeakerRoom";
LABEL_66:
    uint64_t v6 = &v179;
    sub_33808(&v180, 0xD000000000000010LL, (unint64_t)(v89 - 32) | 0x8000000000000000LL, v88);
    unint64_t v95 = v184;
    unint64_t v184 = v179;
    swift_bridgeObjectRelease(v95);
    int v68 = v177;
LABEL_67:
    unint64_t v96 = v79 != 0;
    unint64_t v97 = v69[2];
    if (v97 < v96 || v97 < v79)
    {
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }

    if (v79 == v96)
    {
      uint64_t v98 = v69;
      goto LABEL_87;
    }

    if (v79 > v96) {
      break;
    }
    __break(1u);
LABEL_157:
    swift_once(&qword_283888, sub_BFC5C);
  }

  uint64_t v99 = 3LL;
  if (!v79) {
    uint64_t v99 = 0LL;
  }
  uint64_t v100 = &v69[v99];
  uint64_t v101 = v100[4];
  unint64_t v3 = v100[5];
  char v102 = *((_BYTE *)v100 + 48);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v69);
  if ((v102 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v103 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
    uint64_t v104 = v174;
    uint64_t v105 = ((uint64_t (*)(uint64_t, uint64_t, void *))v178[2])(v174, v103, v2);
    id v106 = (os_log_s *)Logger.logObject.getter(v105);
    os_log_type_t v107 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl( &dword_0,  v106,  v107,  "Destination #2: Destination is a room or zone. Setting speaker.secondSpeakerRoom to the groupName",  v108,  2u);
      swift_slowDealloc(v108, -1LL, -1LL);
    }

    ((void (*)(uint64_t, void *))v178[1])(v104, v2);
    uint64_t v183 = &type metadata for String;
    *(void *)&__int128 v182 = v101;
    *((void *)&v182 + 1) = v3;
    sub_21964(&v182, &v180);
    char v109 = swift_isUniquelyReferenced_nonNull_native(v184);
    unint64_t v179 = v184;
    unint64_t v184 = 0x8000000000000000LL;
    uint64_t v110 = "secondSpeakerRoom";
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v111 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
    uint64_t v112 = ((uint64_t (*)(uint64_t, uint64_t, void *))v178[2])(v176, v111, v2);
    BOOL v113 = (os_log_s *)Logger.logObject.getter(v112);
    os_log_type_t v114 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v113, v114))
    {
      unint64_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v115 = 0;
      _os_log_impl( &dword_0,  v113,  v114,  "Destination #2: Destination is an accesory. Setting speaker.secondSpeakerName to the groupName",  v115,  2u);
      swift_slowDealloc(v115, -1LL, -1LL);
    }

    ((void (*)(uint64_t, void *))v178[1])(v176, v2);
    uint64_t v183 = &type metadata for String;
    *(void *)&__int128 v182 = v101;
    *((void *)&v182 + 1) = v3;
    sub_21964(&v182, &v180);
    char v109 = swift_isUniquelyReferenced_nonNull_native(v184);
    unint64_t v179 = v184;
    unint64_t v184 = 0x8000000000000000LL;
    uint64_t v110 = "secondSpeakerName";
  }

  sub_33808(&v180, 0xD000000000000011LL, (unint64_t)(v110 - 32) | 0x8000000000000000LL, v109);
  uint64_t v98 = (void *)v184;
  unint64_t v184 = v179;
LABEL_87:
  swift_bridgeObjectRelease(v98);
  id v116 = [v68 spokenEntityNames];
  if (v116)
  {
    NSNumber v117 = v116;
    uint64_t v118 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v116, &type metadata for String);
  }

  else
  {
    uint64_t v118 = &off_269C78;
  }

  id v119 = [v68 spokenEntityTypes];
  if (v119)
  {
    id v120 = v119;
    uint64_t v121 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v119, &type metadata for String);
  }

  else
  {
    uint64_t v121 = &off_269CA8;
  }

  uint64_t v6 = (unint64_t *)sub_1C4154(v118, v121);
  swift_bridgeObjectRelease(v121);
  swift_bridgeObjectRelease(v118);
  int64_t v122 = 0LL;
  id v123 = v6 + 8;
  uint64_t v124 = 1LL << *((_BYTE *)v6 + 32);
  uint64_t v125 = -1LL;
  if (v124 < 64) {
    uint64_t v125 = ~(-1LL << v124);
  }
  unint64_t v126 = v125 & v6[8];
  int64_t v127 = (unint64_t)(v124 + 63) >> 6;
  char v128 = _swiftEmptyArrayStorage;
  uint64_t v2 = _swiftEmptyArrayStorage;
  while (2)
  {
    id v178 = v128;
LABEL_97:
    uint64_t v129 = v2;
LABEL_98:
    uint64_t v2 = v129;
    if (v126)
    {
      unint64_t v130 = __clz(__rbit64(v126));
      v126 &= v126 - 1;
      unint64_t v131 = v130 | (v122 << 6);
      goto LABEL_114;
    }

    int64_t v132 = v122 + 1;
    if (__OFADD__(v122, 1LL))
    {
      __break(1u);
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }

    if (v132 >= v127) {
      goto LABEL_131;
    }
    unint64_t v133 = v123[v132];
    ++v122;
    if (v133) {
      goto LABEL_113;
    }
    int64_t v122 = v132 + 1;
    if (v132 + 1 >= v127) {
      goto LABEL_131;
    }
    unint64_t v133 = v123[v122];
    if (v133) {
      goto LABEL_113;
    }
    int64_t v122 = v132 + 2;
    if (v132 + 2 >= v127) {
      goto LABEL_131;
    }
    unint64_t v133 = v123[v122];
    if (v133)
    {
LABEL_113:
      unint64_t v126 = (v133 - 1) & v133;
      unint64_t v131 = __clz(__rbit64(v133)) + (v122 << 6);
LABEL_114:
      uint64_t v135 = 16 * v131;
      unint64_t v136 = (uint64_t *)(v6[6] + v135);
      uint64_t v138 = *v136;
      uint64_t v137 = v136[1];
      unint64_t v139 = (void *)(v6[7] + v135);
      uint64_t v140 = v139[1];
      BOOL v141 = *v139 == 1297043282LL && v140 == 0xE400000000000000LL;
      if (v141 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v139, v140) & 1) != 0)
      {
        char v128 = 0LL;
        if (v178)
        {
          swift_bridgeObjectRetain(v137);
          char v145 = swift_isUniquelyReferenced_nonNull_native(v178);
          NSString v146 = v178;
          if ((v145 & 1) == 0) {
            NSString v146 = sub_1FC6C(0LL, v178[2] + 1LL, 1, v178);
          }
          unint64_t v148 = v146[2];
          unint64_t v147 = v146[3];
          unint64_t v3 = v148 + 1;
          if (v148 >= v147 >> 1) {
            NSString v146 = sub_1FC6C((void *)(v147 > 1), v148 + 1, 1, v146);
          }
          v146[2] = v3;
          Swift::Int v149 = &v146[2 * v148];
          v149[4] = v138;
          v149[5] = v137;
          char v128 = v146;
        }

        continue;
      }

      uint64_t v129 = 0LL;
      if (v2)
      {
        swift_bridgeObjectRetain(v137);
        if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
          uint64_t v2 = sub_1FC6C(0LL, v2[2] + 1LL, 1, v2);
        }
        unint64_t v143 = v2[2];
        unint64_t v142 = v2[3];
        unint64_t v3 = v143 + 1;
        if (v143 >= v142 >> 1) {
          uint64_t v2 = sub_1FC6C((void *)(v142 > 1), v143 + 1, 1, v2);
        }
        v2[2] = v3;
        unint64_t v144 = &v2[2 * v143];
        v144[4] = v138;
        v144[5] = v137;
        goto LABEL_97;
      }

      goto LABEL_98;
    }

    break;
  }

  int64_t v134 = v132 + 3;
  if (v134 < v127)
  {
    unint64_t v133 = v123[v134];
    if (!v133)
    {
      while (1)
      {
        int64_t v122 = v134 + 1;
        if (__OFADD__(v134, 1LL)) {
          goto LABEL_154;
        }
        if (v122 >= v127) {
          goto LABEL_131;
        }
        unint64_t v133 = v123[v122];
        ++v134;
        if (v133) {
          goto LABEL_113;
        }
      }
    }

    int64_t v122 = v134;
    goto LABEL_113;
  }

LABEL_131:
  swift_release(v6);
  uint64_t v150 = v177;
  if (!v2) {
    goto LABEL_143;
  }
  uint64_t v151 = v2[2];
  if (!v151) {
    goto LABEL_143;
  }
  if (v151 == 1)
  {
    uint64_t v152 = v2[4];
    uint64_t v153 = v2[5];
    uint64_t v183 = &type metadata for String;
    *(void *)&__int128 v182 = v152;
    *((void *)&v182 + 1) = v153;
    sub_21964(&v182, &v180);
    swift_bridgeObjectRetain(v153);
    char v154 = swift_isUniquelyReferenced_nonNull_native(v184);
    unint64_t v179 = v184;
    unint64_t v184 = 0x8000000000000000LL;
    uint64_t v155 = 0xD000000000000024LL;
    uint64_t v156 = "firstPermanentNameFromSpokenEntities";
    goto LABEL_142;
  }

  uint64_t v157 = v2[4];
  uint64_t v158 = v2[5];
  uint64_t v183 = &type metadata for String;
  *(void *)&__int128 v182 = v157;
  *((void *)&v182 + 1) = v158;
  sub_21964(&v182, &v180);
  swift_bridgeObjectRetain(v158);
  char v159 = swift_isUniquelyReferenced_nonNull_native(v184);
  unint64_t v179 = v184;
  unint64_t v184 = 0x8000000000000000LL;
  sub_33808(&v180, 0xD000000000000024LL, 0x800000000021DB80LL, v159);
  unint64_t v160 = v184;
  unint64_t v184 = v179;
  unint64_t result = swift_bridgeObjectRelease(v160);
  if (v2[2] < 2uLL)
  {
    __break(1u);
  }

  else
  {
    uint64_t v163 = v2[6];
    uint64_t v162 = v2[7];
    uint64_t v183 = &type metadata for String;
    uint64_t v164 = swift_bridgeObjectRetain(v162);
    if (v164) {
      uint64_t v165 = v163;
    }
    else {
      uint64_t v165 = 0LL;
    }
    unint64_t v166 = 0xE000000000000000LL;
    if (v164) {
      unint64_t v166 = v164;
    }
    *(void *)&__int128 v182 = v165;
    *((void *)&v182 + 1) = v166;
    sub_21964(&v182, &v180);
    char v154 = swift_isUniquelyReferenced_nonNull_native(v184);
    unint64_t v179 = v184;
    unint64_t v184 = 0x8000000000000000LL;
    uint64_t v155 = 0xD000000000000025LL;
    uint64_t v156 = "secondPermanentNameFromSpokenEntities";
LABEL_142:
    sub_33808(&v180, v155, (unint64_t)(v156 - 32) | 0x8000000000000000LL, v154);
    unint64_t v167 = v184;
    unint64_t v184 = v179;
    swift_bridgeObjectRelease(v167);
LABEL_143:
    if (v178)
    {
      if (v178[2] == 1LL)
      {
        uint64_t v168 = v178[4];
        uint64_t v169 = v178[5];
        uint64_t v183 = &type metadata for String;
        *(void *)&__int128 v182 = v168;
        *((void *)&v182 + 1) = v169;
        sub_21964(&v182, &v180);
        swift_bridgeObjectRetain(v169);
        char v170 = swift_isUniquelyReferenced_nonNull_native(v184);
        unint64_t v179 = v184;
        unint64_t v184 = 0x8000000000000000LL;
        sub_33808(&v180, 0xD00000000000001FLL, 0x800000000021DBE0LL, v170);
        unint64_t v171 = v184;
        unint64_t v184 = v179;

        swift_bridgeObjectRelease(v171);
      }

      else
      {
      }

      uint64_t v172 = v178;
    }

    else
    {

      uint64_t v172 = 0LL;
    }

    unint64_t v25 = v184;
    swift_bridgeObjectRelease(v172);
    swift_bridgeObjectRelease(v2);
    return v25;
  }

  return result;
}

uint64_t sub_32CC0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_32CF0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

BOOL sub_32D14()
{
  return CommonIntentSignals.handledBySiriForAirPlay()() && !MediaIntentCommons.appPredictionSFANoviceDialog()();
}

uint64_t sub_32D9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_32DD8(uint64_t a1)
{
  return a1;
}

void sub_32E0C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  unint64_t v8 = v4;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v26 = a1;
    }
    else {
      uint64_t v26 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(a1, 2LL);
    swift_bridgeObjectRetain(a2);
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a1);
    if (!v13) {
      goto LABEL_57;
    }
  }

  else
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(a2);
    if (!v13) {
      goto LABEL_57;
    }
  }

  unint64_t v58 = a1 & 0xC000000000000001LL;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
LABEL_32:
      sub_1CC5E8();
      if ((v7 & 1) == 0) {
        goto LABEL_33;
      }
      goto LABEL_18;
    }

    id v14 = *(id *)(a1 + 32);
  }

  uint64_t v5 = v14;
  if (!((unint64_t)a2 >> 62))
  {
    uint64_t v15 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8LL));
    if (v15) {
      goto LABEL_8;
    }
LABEL_30:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a1);

LABEL_58:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a1);
    return;
  }

  if (a2 < 0) {
    uint64_t v27 = a2;
  }
  else {
    uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a2);
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(a2);
  if (!v15) {
    goto LABEL_30;
  }
LABEL_8:
  uint64_t v54 = v13;
  uint64_t v55 = v15;
  unint64_t v57 = a2 & 0xC000000000000001LL;
  if ((a2 & 0xC000000000000001LL) != 0) {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2);
  }
  else {
    id v16 = *(id *)(a2 + 32);
  }
  uint64_t v6 = v16;
  unint64_t v62 = v5;
  id v17 = (void *)*a4;
  unint64_t v8 = sub_9AA88((uint64_t)v5);
  uint64_t v19 = v17[2];
  BOOL v20 = (v18 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }

  char v7 = v18;
  if (v17[3] >= v21)
  {
    if ((a3 & 1) != 0)
    {
      if ((v18 & 1) == 0) {
        goto LABEL_33;
      }
      goto LABEL_18;
    }

    goto LABEL_32;
  }

  sub_1CD3D4(v21, a3 & 1);
  unint64_t v22 = sub_9AA88((uint64_t)v5);
  if ((v7 & 1) == (v23 & 1))
  {
    unint64_t v8 = v22;
    if ((v7 & 1) == 0)
    {
LABEL_33:
      id v28 = (void *)*a4;
      *(void *)(*a4 + 8 * (v8 >> 6) + 64) |= 1LL << v8;
      uint64_t v29 = 8 * v8;
      *(void *)(v28[6] + vsub_6C3C(v0 + 29) = v5;
      *(void *)(v28[7] + vsub_6C3C(v0 + 29) = v6;
      uint64_t v30 = v28[2];
      BOOL v31 = __OFADD__(v30, 1LL);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_60;
      }
      v28[2] = v32;
      if (v54 != 1)
      {
        if (v58)
        {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1LL, a1);
        }

        else
        {
          if (*(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8LL)) < 2uLL)
          {
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }

          id v33 = *(id *)(a1 + 40);
        }

        uint64_t v5 = v33;
        uint64_t v56 = v55 - 1;
        if (v56)
        {
          uint64_t v34 = 0LL;
          while (1)
          {
            id v35 = v57
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34 + 1, a2)
                : *(id *)(a2 + 40 + 8 * v34);
            uint64_t v6 = v35;
            unint64_t v62 = v5;
            id v36 = (void *)*a4;
            unint64_t v37 = sub_9AA88((uint64_t)v5);
            uint64_t v39 = v36[2];
            BOOL v40 = (v38 & 1) == 0;
            BOOL v31 = __OFADD__(v39, v40);
            uint64_t v41 = v39 + v40;
            if (v31) {
              goto LABEL_59;
            }
            char v42 = v38;
            if (v36[3] < v41)
            {
              sub_1CD3D4(v41, 1LL);
              unint64_t v37 = sub_9AA88((uint64_t)v5);
              if ((v42 & 1) != (v43 & 1)) {
                goto LABEL_63;
              }
            }

            if ((v42 & 1) != 0) {
              goto LABEL_18;
            }
            id v44 = (void *)*a4;
            *(void *)(*a4 + 8 * (v37 >> 6) + 64) |= 1LL << v37;
            uint64_t v45 = 8 * v37;
            *(void *)(v44[6] + v45) = v5;
            *(void *)(v44[7] + v45) = v6;
            uint64_t v46 = v44[2];
            BOOL v31 = __OFADD__(v46, 1LL);
            uint64_t v47 = v46 + 1;
            if (v31) {
              goto LABEL_60;
            }
            void v44[2] = v47;
            if (v54 - 2 == v34) {
              goto LABEL_57;
            }
            unint64_t v48 = v34 + 2;
            if (v58)
            {
              id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, a1);
            }

            else
            {
              id v49 = *(id *)(a1 + 48 + 8 * v34);
            }

            uint64_t v5 = v49;
            if (v34 == 0x7FFFFFFFFFFFFFFDLL) {
              goto LABEL_61;
            }
            if (v56 == ++v34) {
              goto LABEL_30;
            }
          }
        }

        goto LABEL_30;
      }

LABEL_57:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(a1);
      goto LABEL_58;
    }

LABEL_63:
  uint64_t v50 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v50);
  __break(1u);
LABEL_64:
  uint64_t v59 = 0LL;
  unint64_t v60 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(30LL);
  v51._object = (void *)0x80000000002234F0LL;
  v51._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v51);
  uint64_t v52 = sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
  _print_unlocked<A, B>(_:_:)( &v62,  &v59,  v52,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v53._countAndFlagsBits = 39LL;
  v53._object = (void *)0xE100000000000000LL;
  String.append(_:)(v53);
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v59,  v60,  "Swift/NativeDictionary.swift",  28LL,  2LL,  783LL,  0);
  __break(1u);
}

                  swift_bridgeObjectRelease(v64);
LABEL_65:
                  unint64_t v67 = 0xE400000000000000LL;
                  int v68 = 1497451600LL;
                  uint64_t v34 = v104;
LABEL_66:
                  if (!v35)
                  {
                    sub_1CBFB0(0x436F54656C746974LL, 0xEE006D7269666E6FLL, v115);
                    sub_1F6CC((uint64_t)v115, &qword_284028);
                    uint64_t v78 = 0;
                    goto LABEL_70;
                  }

                  uint64_t v78 = 0;
                  id v64 = v35;
LABEL_68:
                  *((void *)&v117 + 1) = &type metadata for String;
                  *(void *)&id v116 = v34;
                  *((void *)&v116 + 1) = v64;
                  sub_21964(&v116, v115);
                  unint64_t v79 = v120;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v120);
                  os_log_type_t v114 = v79;
                  sub_33808(v115, 0x436F54656C746974LL, 0xEE006D7269666E6FLL, isUniquelyReferenced_nonNull_native);
                  id v120 = v114;
                  swift_bridgeObjectRelease(0x8000000000000000LL);
LABEL_70:
                  id v33 = *((void *)&v107 + 1);
                  if (*((void *)&v107 + 1))
                  {
                    *((void *)&v117 + 1) = &type metadata for String;
                    id v116 = v107;
                    sub_21964(&v116, v115);
                    swift_bridgeObjectRetain(v33);
                    uint64_t v81 = v120;
                    uint64_t v82 = swift_isUniquelyReferenced_nonNull_native(v120);
                    os_log_type_t v114 = v81;
                    sub_33808(v115, 0x6F54747369747261LL, 0xEF6D7269666E6F43LL, v82);
                    uint64_t v83 = v114;
                    swift_bridgeObjectRelease(0x8000000000000000LL);
                  }

                  else
                  {
                    sub_1CBFB0(0x6F54747369747261LL, 0xEF6D7269666E6F43LL, &v116);
                    sub_1F6CC((uint64_t)&v116, &qword_284028);
                    uint64_t v83 = v120;
                  }

                  *((void *)&v117 + 1) = &type metadata for Bool;
                  LOBYTE(v1sub_6C3C(v0 + 16) = v78;
                  sub_21964(&v116, v115);
                  uint64_t v84 = swift_isUniquelyReferenced_nonNull_native(v83);
                  os_log_type_t v114 = v83;
                  sub_33808(v115, 0x5265726E65477369LL, 0xEC0000006F696461LL, v84);
                  unint64_t v85 = v114;
                  swift_bridgeObjectRelease(0x8000000000000000LL);
                  *((void *)&v117 + 1) = &type metadata for String;
                  *(void *)&id v116 = v68;
                  *((void *)&v116 + 1) = v67;
                  sub_21964(&v116, v115);
                  os_log_type_t v86 = swift_isUniquelyReferenced_nonNull_native(v85);
                  os_log_type_t v114 = v85;
                  sub_33808(v115, 0x7954746E65746E69LL, 0xEA00000000006570LL, v86);
                  unint64_t v87 = v114;
                  swift_bridgeObjectRelease(0x8000000000000000LL);
                  char v88 = v8[13];
                  uint64_t v89 = v8[14];
                  *(void *)&v115[0] = v112;
                  uint64_t v90 = *(void *)(v109 + 80);
                  uint64_t v91 = v112;
                  uint64_t v92 = sub_6C5C(&qword_285BC8);
                  os_log_type_t v93 = swift_dynamicCast(&v116, v115, v90, v92, 6LL);
                  if ((v93 & 1) == 0)
                  {
                    uint64_t v118 = 0LL;
                    id v116 = 0u;
                    NSNumber v117 = 0u;
                  }

                  __chkstk_darwin(v93);
                  *(&v104 - 10) = v88;
                  *(&v104 - 9) = v89;
                  *(&v104 - sub_6C3C(v0 + 8) = 0xD000000000000011LL;
                  *(&v104 - sub_6C3C(v0 + 7) = 0x8000000000220BA0LL;
                  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v110,  v111,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,publ ic}@ enableTelemetry=YES ",  125LL,  2,  v88,  v89,  0xD000000000000011LL,  0x8000000000220BA0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v104 - 12));
                  swift_bridgeObjectRelease(v87);

                  BOOL v94 = &qword_283FE8;
                  unint64_t v95 = (uint64_t *)&v116;
                  goto LABEL_76;
                }

uint64_t sub_333A8(void *a1, void *a2, char a3, void *a4)
{
  if (!a1[2] || (uint64_t v51 = a2[2]) == 0)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a1);
  }

  uint64_t v50 = a1[2];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v7);
  uint64_t v56 = v8;
  uint64_t v57 = v7;
  uint64_t v11 = (void *)*a4;
  swift_bridgeObjectRetain(v10);
  unint64_t v13 = sub_9A744(v8, v7);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_30;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if ((a3 & 1) != 0)
    {
      BOOL v20 = a1;
      if ((v12 & 1) != 0) {
        goto LABEL_11;
      }
    }

    else
    {
      sub_1CC0A0();
      BOOL v20 = a1;
      if ((v17 & 1) != 0) {
        goto LABEL_11;
      }
    }

LABEL_14:
    uint64_t v24 = (void *)*a4;
    *(void *)(*a4 + 8 * (v13 >> 6) + 64) |= 1LL << v13;
    uint64_t v25 = (uint64_t *)(v24[6] + 16 * v13);
    uint64_t *v25 = v8;
    v25[1] = v7;
    uint64_t v26 = (void *)(v24[7] + 16 * v13);
    void *v26 = v9;
    v26[1] = v10;
    uint64_t v27 = v24[2];
    BOOL v28 = __OFADD__(v27, 1LL);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }

    v24[2] = v29;
    if (v50 == 1)
    {
LABEL_18:
      swift_bridgeObjectRelease_n(a2, 2LL);
      return swift_bridgeObjectRelease_n(v20, 2LL);
    }

    if (v20[2] < 2uLL) {
      goto LABEL_32;
    }
    if (v51 == 1) {
      goto LABEL_18;
    }
    uint64_t v30 = v20 + 7;
    BOOL v31 = a2 + 7;
    for (unint64_t i = 2LL; ; ++i)
    {
      uint64_t v33 = *(v30 - 1);
      uint64_t v7 = *v30;
      swift_bridgeObjectRetain(*v30);
      uint64_t v34 = *(v31 - 1);
      uint64_t v10 = *v31;
      uint64_t v56 = v33;
      uint64_t v57 = v7;
      id v35 = (void *)*a4;
      swift_bridgeObjectRetain(v10);
      unint64_t v36 = sub_9A744(v33, v7);
      uint64_t v38 = v35[2];
      BOOL v39 = (v37 & 1) == 0;
      BOOL v28 = __OFADD__(v38, v39);
      uint64_t v40 = v38 + v39;
      if (v28) {
        break;
      }
      char v41 = v37;
      if (v35[3] < v40)
      {
        sub_1CC78C(v40, 1LL);
        unint64_t v36 = sub_9A744(v33, v7);
        if ((v41 & 1) != (v42 & 1)) {
          goto LABEL_33;
        }
      }

      if ((v41 & 1) != 0)
      {
        BOOL v20 = a1;
        goto LABEL_11;
      }

      char v43 = (void *)*a4;
      *(void *)(*a4 + 8 * (v36 >> 6) + 64) |= 1LL << v36;
      id v44 = (uint64_t *)(v43[6] + 16 * v36);
      *id v44 = v33;
      v44[1] = v7;
      uint64_t v45 = (void *)(v43[7] + 16 * v36);
      *uint64_t v45 = v34;
      v45[1] = v10;
      uint64_t v46 = v43[2];
      BOOL v28 = __OFADD__(v46, 1LL);
      uint64_t v47 = v46 + 1;
      BOOL v20 = a1;
      if (v28) {
        goto LABEL_31;
      }
      v43[2] = v47;
      if (v50 == i) {
        goto LABEL_18;
      }
      if (i >= a1[2]) {
        goto LABEL_32;
      }
      if (v51 == i) {
        goto LABEL_18;
      }
      v31 += 2;
      v30 += 2;
    }

  if (!v7)
  {
    uint64_t v11 = 1;
    return v11 & 1;
  }

  uint64_t v11 = 0;
LABEL_18:
  swift_bridgeObjectRelease(v7);
  return v11 & 1;
}

  if ((v40 & 0xC000000000000001LL) != 0)
  {
    char v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v40);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    char v41 = *(id *)(v40 + 32);
  }

  char v42 = v41;
  swift_bridgeObjectRelease(v40);
  char v43 = (char *)[v42 type];

  if (v43 == (_BYTE *)&dword_0 + 2)
  {
    id v44 = 0xE500000000000000LL;
    uint64_t v45 = 0x6D75626C61LL;
    goto LABEL_27;
  }

  if (v43 == (_BYTE *)&dword_4 + 2)
  {
    id v44 = 0xE700000000000000LL;
    uint64_t v45 = 0x74736163646F70LL;
    goto LABEL_27;
  }

  uint64_t v32 = 0LL;
  uint64_t v33 = a15;
  if (v31)
  {
LABEL_6:
    uint64_t v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    id v35 = a17;
    if (v33) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }

    uint64_t v7 = 0;
  }

  return v7 & 1;
}

LABEL_33:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_34:
  uint64_t v54 = 0LL;
  unint64_t v55 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(30LL);
  v48._object = (void *)0x80000000002234F0LL;
  v48._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v48);
  _print_unlocked<A, B>(_:_:)( &v56,  &v54,  &type metadata for String,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v49._countAndFlagsBits = 39LL;
  v49._object = (void *)0xE100000000000000LL;
  String.append(_:)(v49);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v54,  v55,  "Swift/NativeDictionary.swift",  28LL,  2LL,  783LL,  0);
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    unint64_t v79 = &qword_284DA8;
    char v80 = (void (*)(void, void))v78;
    goto LABEL_34;
  }

  uint64_t v101 = v213;
  sub_FF10(v78, v213, &qword_284DB0);
  if (v85(v100, 1LL, v27) == 1)
  {
    sub_1F6CC(v84, &qword_284DB0);
    sub_1F6CC(v224, &qword_284DB0);
    (*((void (**)(uint64_t, uint64_t))v233 + 1))(v101, v27);
    goto LABEL_33;
  }

  uint64_t v103 = v233;
  uint64_t v104 = v84;
  uint64_t v105 = v214;
  (*((void (**)(char *, uint64_t, uint64_t))v233 + 4))(v214, v100, v27);
  id v106 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  os_log_type_t v107 = dispatch thunk of static Equatable.== infix(_:_:)(v101, v105, v27, v106);
  uint64_t v108 = (void (*)(char *, uint64_t))*((void *)v103 + 1);
  v108(v105, v27);
  sub_1F6CC(v104, &qword_284DB0);
  sub_1F6CC(v224, &qword_284DB0);
  v108((char *)v101, v27);
  sub_1F6CC(v78, &qword_284DB0);
  uint64_t v92 = v234;
  if ((v107 & 1) == 0)
  {
LABEL_41:
    char v102 = 1LL;
    goto LABEL_42;
  }

    uint64_t v11 = (v26 - 1) & v26;
    uint64_t v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_34:
    uint64_t v32 = 16 * v23;
    uint64_t v33 = (uint64_t *)(*(void *)(v5 + 48) + v32);
    id v35 = *v33;
    uint64_t v34 = v33[1];
    unint64_t v36 = (uint64_t *)(*(void *)(v5 + 56) + v32);
    char v37 = *v36;
    uint64_t v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }

    Hasher.init(_seed:)(v44, *(void *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    uint64_t result = Hasher._finalize()();
    BOOL v15 = -1LL << *(_BYTE *)(v8 + 32);
    uint64_t v16 = result & ~v15;
    char v17 = v16 >> 6;
    if (((-1LL << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1LL << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      BOOL v28 = 0;
      uint64_t v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }

        uint64_t v30 = v17 == v29;
        if (v17 == v29) {
          char v17 = 0LL;
        }
        v28 |= v30;
        BOOL v31 = *(void *)(v12 + 8 * v17);
      }

      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }

    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    char v19 = 16 * v18;
    BOOL v20 = (void *)(*(void *)(v8 + 48) + v19);
    *BOOL v20 = v35;
    v20[1] = v34;
    uint64_t v21 = (void *)(*(void *)(v8 + 56) + v19);
    void *v21 = v37;
    v21[1] = v38;
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  unint64_t v3 = v40;
  uint64_t v25 = (void *)(v5 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  BOOL v39 = 1LL << *(_BYTE *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    uint64_t *v25 = -1LL << v39;
  }
  *(void *)(v5 + sub_6C3C(v0 + 16) = 0LL;
LABEL_43:
  uint64_t result = swift_release(v5);
  *unint64_t v3 = v8;
  return result;
}

    uint64_t v11 = (v24 - 1) & v24;
    uint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_34:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    BOOL v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain(v30[1]);
    }
    Hasher.init(_seed:)(v39, *(void *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    uint64_t result = Hasher._finalize()();
    BOOL v15 = -1LL << *(_BYTE *)(v8 + 32);
    uint64_t v16 = result & ~v15;
    char v17 = v16 >> 6;
    if (((-1LL << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1LL << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }

        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          char v17 = 0LL;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }

      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }

    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    char v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *char v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v1sub_6C3C(v0 + 8) = v33;
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  unint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v34 = 1LL << *(_BYTE *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *uint64_t v23 = -1LL << v34;
  }
  *(void *)(v5 + sub_6C3C(v0 + 16) = 0LL;
LABEL_43:
  uint64_t result = swift_release(v5);
  *unint64_t v3 = v8;
  return result;
}

    uint64_t v11 = (v25 - 1) & v25;
    uint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_34:
    BOOL v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v5 + 48) + v31);
    uint64_t v33 = *(void **)(*(void *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      uint64_t v34 = v32;
      id v35 = v33;
    }

    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v16 = -1LL << *(_BYTE *)(v8 + 32);
    char v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1LL << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      char v19 = __clz(__rbit64((-1LL << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v27 = 0;
      BOOL v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }

        uint64_t v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0LL;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }

      while (v30 == -1);
      char v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }

    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v19;
    BOOL v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  unint64_t v3 = v37;
  uint64_t v24 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  unint64_t v36 = 1LL << *(_BYTE *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *uint64_t v24 = -1LL << v36;
  }
  *(void *)(v5 + sub_6C3C(v0 + 16) = 0LL;
LABEL_43:
  uint64_t result = swift_release(v5);
  *unint64_t v3 = v8;
  return result;
}

    swift_bridgeObjectRelease(v31);
    *(_BYTE *)(inited + 120) = 0;
    strcpy((char *)(inited + 128), "isWordOfTheDay");
    *(_BYTE *)(inited + 14sub_6C3C(v0 + 3) = -18;
    if (!v11)
    {
      id v35 = String.lowercased()()._object;
      goto LABEL_41;
    }

_OWORD *sub_33808(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_9A744(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }

  else
  {
    char v16 = v11;
    uint64_t v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      unint64_t v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        char v19 = (void *)(v18[7] + 32 * v12);
        sub_6C3C(v19);
        return sub_21964(a1, v19);
      }

      goto LABEL_11;
    }

    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CC258();
      goto LABEL_7;
    }

    sub_1CCAB0(v15, a4 & 1);
    unint64_t v21 = sub_9A744(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if ((v16 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_33A88(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }

  uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_33938(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_9A744(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1CC43C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v1sub_6C3C(v0 + 2) = a1;
      return result;
    }

_OWORD *sub_33A88(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_21964(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_33AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_6C3C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_33BF0(__int128 *a1)
{
  return sub_1BA50(a1, *(uint64_t (**)(__int128 *))(v1 + 16));
}

uint64_t sub_33BF8(__int128 *a1)
{
  uint64_t v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  __int128 v4 = *a1;
  return v2(&v4);
}

uint64_t sub_33C2C(_BYTE *a1)
{
  return sub_1BA84(a1, *(uint64_t (**)(_BYTE *))(v1 + 16));
}

uint64_t sub_33C34(_BYTE *a1)
{
  uint64_t v2 = *(uint64_t (**)(_BYTE *))(v1 + 16);
  char v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  return v2(v5);
}

uint64_t sub_33C74(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((_BYTE *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t sub_33CB0(uint64_t a1)
{
  return sub_1BA2C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_33CB8(uint64_t a1)
{
  return sub_1BA30(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_33CC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_1BAC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), v1 + v4, *v5, v5[1]);
}

uint64_t sub_33D20(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BAC4( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(uint64_t *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_33D7C(__int128 *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BCFC( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(__int128 *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_33DD8(_BYTE *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BC3C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  v1 + v4,  *(uint64_t (**)(_BYTE *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL)));
}

uint64_t sub_33E38(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E40(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E48(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E50(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E58(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E60(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E68(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E70(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E78(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E80(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E88(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E90(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33E98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33EA0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33EA8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33EB0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_33EB8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_33ECC(uint64_t a1)
{
  return sub_33EB8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_28358);
}

_UNKNOWN **variable initialization expression of MediaItemDisambiguationStrategy.supportedParameters()
{
  return &off_26A040;
}

uint64_t variable initialization expression of MediaItemDisambiguationStrategy.mediaTypeTable()
{
  return 0x657449616964654DLL;
}

void *variable initialization expression of CommonFlowStrategy.parameterMetadata()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of CommonFlowStrategy.extensionRequestTimedOutErrorCode()
{
  return 1307LL;
}

uint64_t variable initialization expression of DetermineIntentResponse.code()
{
  return 0LL;
}

unint64_t variable initialization expression of ExecuteMusicOnRemoteFlow.kDirectInvocationIdentifier()
{
  return 0xD000000000000025LL;
}

uint64_t variable initialization expression of ExecuteMusicOnRemoteFlow.kDirectInvocationPayloadKeyInput()
{
  return 0x7461447475706E69LL;
}

uint64_t variable initialization expression of ExecuteMusicOnRemoteFlow.state()
{
  return 0LL;
}

uint64_t variable initialization expression of ExecuteMusicOnRemoteFlow.inputToExecute@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Input(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

double variable initialization expression of ExecuteMusicOnRemoteFlow.companionNotInRangeErrorCodes()
{
  uint64_t v0 = sub_6C5C(&qword_283A98);
  uint64_t v1 = swift_allocObject(v0, 88LL, 7LL);
  *(_OWORD *)(v1 + sub_6C3C(v0 + 16) = xmmword_2144D0;
  *(_OWORD *)(v1 + 3sub_6C3C(v0 + 2) = xmmword_2144E0;
  *(void *)&double result = 1011LL;
  *(_OWORD *)(v1 + 4sub_6C3C(v0 + 8) = xmmword_2144F0;
  *(_OWORD *)(v1 + 64) = xmmword_214500;
  *(void *)(v1 + 80) = 1017LL;
  return result;
}

double variable initialization expression of ExecuteMusicOnRemoteFlow.companionWifiMismatchErrorCodes()
{
  return sub_3400C(1019LL);
}

double variable initialization expression of ExecuteMusicOnRemoteFlow.companionConnectionTimedOut()
{
  return sub_3400C(1007LL);
}

double sub_3400C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_283A98);
  uint64_t v3 = swift_allocObject(v2, 40LL, 7LL);
  *(void *)&double result = 1LL;
  *(_OWORD *)(v3 + sub_6C3C(v0 + 16) = xmmword_214510;
  *(void *)(v3 + 3sub_6C3C(v0 + 2) = a1;
  return result;
}

uint64_t variable initialization expression of CommonAppResolver.metadataResolutionTypeKey()
{
  return 0x6974756C6F736572LL;
}

uint64_t variable initialization expression of InternalSignalsManager.lock()
{
  v2[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v2[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v2[0] = static SiriKitTaskLoggingProvider.shared.getter();
  uint64_t v0 = type metadata accessor for PThreadMutex(0LL);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return PThreadMutex.init(name:abortOnFail:analyticsService:)(0xD00000000000001ALL, 0x800000000021D190LL, 1LL, v2);
}

Swift::Int sub_340F0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3, 0LL);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_34134()
{
}

Swift::Int sub_3415C(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_3419C(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_341B0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(_BYTE *)(a2 + sub_6C3C(v0 + 8) = 0;
  return result;
}

_DWORD *sub_341C0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_341D0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_341DC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

BOOL sub_3420C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_34220(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_3422C(uint64_t a1)
{
  uint64_t v98 = type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL);
  uint64_t v2 = *(void *)(v98 - 8);
  uint64_t v3 = __chkstk_darwin(v98);
  uint64_t v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  unint64_t v96 = (char *)&v95 - v6;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v99 = v7;
  uint64_t v100 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  char v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v97 = (char *)&v95 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  char v16 = (char *)&v95 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  char v19 = (char *)&v95 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v95 - v20;
  uint64_t v22 = type metadata accessor for AppResolutionResult(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 16))(v25, a1, v22);
  int v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(v23 + 88))(v25, v22);
  if (v26 == enum case for AppResolutionResult.needsConfirmation(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v23 + 96))(v25, v22);
    uint64_t v27 = *v25;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v28 = v99;
    uint64_t v29 = sub_6960(v99, (uint64_t)qword_2969C8);
    uint64_t v30 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v19, v29, v28);
    uint64_t v31 = swift_retain_n(v27, 2LL);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v35 = swift_slowAlloc(32LL, -1LL);
      uint64_t v101 = v27;
      uint64_t v102 = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v36 = type metadata accessor for App(0LL);
      uint64_t v37 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter(v36, v37);
      unint64_t v40 = v39;
      uint64_t v101 = sub_6978(v38, v39, &v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
      swift_release_n(v27, 2LL);
      swift_bridgeObjectRelease(v40);
      _os_log_impl(&dword_0, v32, v33, "AppResolutionAction#from confirm %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v100 + 8))(v19, v99);
    }

    else
    {

      swift_release_n(v27, 2LL);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v28);
    }

    type metadata accessor for AppResolutionAction(0LL);
    uint64_t v55 = static AppResolutionAction.confirm(app:)(v27);
LABEL_27:
    uint64_t v69 = v55;
    swift_release(v27);
    return v69;
  }

  if (v26 == enum case for AppResolutionResult.needsDisambiguation(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v23 + 96))(v25, v22);
    uint64_t v41 = *v25;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v42 = v99;
    uint64_t v43 = sub_6960(v99, (uint64_t)qword_2969C8);
    uint64_t v44 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v16, v43, v42);
    uint64_t v45 = swift_bridgeObjectRetain_n(v41, 2LL);
    uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.default.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      Swift::String v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v49 = swift_slowAlloc(32LL, -1LL);
      uint64_t v102 = v49;
      *(_DWORD *)Swift::String v48 = 136315138;
      uint64_t v50 = type metadata accessor for App(0LL);
      swift_bridgeObjectRetain(v41);
      uint64_t v52 = Array.description.getter(v51, v50);
      unint64_t v54 = v53;
      swift_bridgeObjectRelease(v41);
      uint64_t v101 = sub_6978(v52, v54, &v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
      swift_bridgeObjectRelease_n(v41, 2LL);
      swift_bridgeObjectRelease(v54);
      _os_log_impl(&dword_0, v46, v47, "AppResolutionAction#from disambiguate %s", v48, 0xCu);
      swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v100 + 8))(v16, v99);
    }

    else
    {

      swift_bridgeObjectRelease_n(v41, 2LL);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v42);
    }

    type metadata accessor for AppResolutionAction(0LL);
    uint64_t v69 = static AppResolutionAction.disambiguate(apps:)(v41);
    swift_bridgeObjectRelease(v41);
  }

  else
  {
    if (v26 == enum case for AppResolutionResult.selected(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v23 + 96))(v25, v22);
      uint64_t v27 = *v25;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v56 = v99;
      uint64_t v57 = sub_6960(v99, (uint64_t)qword_2969C8);
      uint64_t v58 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v21, v57, v56);
      uint64_t v59 = swift_retain_n(v27, 2LL);
      unint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
      os_log_type_t v61 = static os_log_type_t.default.getter(v60);
      if (os_log_type_enabled(v60, v61))
      {
        unint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v63 = swift_slowAlloc(32LL, -1LL);
        uint64_t v101 = v27;
        uint64_t v102 = v63;
        *(_DWORD *)unint64_t v62 = 136315138;
        uint64_t v98 = (uint64_t)(v62 + 4);
        uint64_t v64 = type metadata accessor for App(0LL);
        uint64_t v65 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
        uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter(v64, v65);
        unint64_t v68 = v67;
        uint64_t v101 = sub_6978(v66, v67, &v102);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
        swift_release_n(v27, 2LL);
        swift_bridgeObjectRelease(v68);
        _os_log_impl(&dword_0, v60, v61, "AppResolutionAction#from selected %s", v62, 0xCu);
        swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v63, -1LL, -1LL);
        swift_slowDealloc(v62, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v100 + 8))(v21, v56);
      }

      else
      {

        swift_release_n(v27, 2LL);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v56);
      }

      type metadata accessor for AppResolutionAction(0LL);
      uint64_t v55 = static AppResolutionAction.select(app:)(v27);
      goto LABEL_27;
    }

    uint64_t v70 = v99;
    if (v26 == enum case for AppResolutionResult.unsuccessful(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v23 + 96))(v25, v22);
      uint64_t v71 = v96;
      uint64_t v72 = v98;
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v96, v25, v98);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v73 = sub_6960(v70, (uint64_t)qword_2969C8);
      uint64_t v74 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v97, v73, v70);
      uint64_t v75 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 16);
      uint64_t v76 = v75(v5, v71, v72);
      uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
      os_log_type_t v78 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v77, v78))
      {
        unint64_t v79 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        char v80 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)unint64_t v79 = 138412290;
        uint64_t v81 = sub_10430( (unint64_t *)&unk_283AA0,  (uint64_t (*)(uint64_t))&type metadata accessor for AppResolutionResult.AppResolutionResultError,  (uint64_t)&protocol conformance descriptor for AppResolutionResult.AppResolutionResultError);
        uint64_t v82 = swift_allocError(v72, v81, 0LL, 0LL);
        v75(v83, v5, v98);
        uint64_t v84 = _swift_stdlib_bridgeErrorToNSError(v82);
        uint64_t v102 = v84;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103);
        *char v80 = v84;
        uint64_t v72 = v98;
        uint64_t v74 = v100;
        unint64_t v85 = *(void (**)(char *, uint64_t))(v2 + 8);
        v85(v5, v98);
        _os_log_impl(&dword_0, v77, v78, "AppResolutionAction#from unsuccessful. Error %@", v79, 0xCu);
        uint64_t v86 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v80, 1LL, v86);
        unint64_t v87 = v80;
        uint64_t v70 = v99;
        swift_slowDealloc(v87, -1LL, -1LL);
        char v88 = v79;
        uint64_t v71 = v96;
        swift_slowDealloc(v88, -1LL, -1LL);
      }

      else
      {
        unint64_t v85 = *(void (**)(char *, uint64_t))(v2 + 8);
        v85(v5, v72);
      }

      (*(void (**)(char *, uint64_t))(v74 + 8))(v97, v70);
      type metadata accessor for AppResolutionAction(0LL);
      uint64_t v69 = static AppResolutionAction.noAppFound()();
      v85(v71, v72);
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v90 = sub_6960(v70, (uint64_t)qword_2969C8);
      uint64_t v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 16))(v11, v90, v70);
      uint64_t v92 = (os_log_s *)Logger.logObject.getter(v91);
      os_log_type_t v93 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v92, v93))
      {
        BOOL v94 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)BOOL v94 = 0;
        _os_log_impl(&dword_0, v92, v93, "AppResolutionAction#from unkown state, return .noAppFound", v94, 2u);
        swift_slowDealloc(v94, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v100 + 8))(v11, v70);
      type metadata accessor for AppResolutionAction(0LL);
      uint64_t v69 = static AppResolutionAction.noAppFound()();
      (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v25, v22);
    }
  }

  return v69;
}

void type metadata accessor for INPlayMediaIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for MRPlaybackState(uint64_t a1)
{
}

void type metadata accessor for INIntentSlotValueType(uint64_t a1)
{
}

void type metadata accessor for INMediaAffinityType(uint64_t a1)
{
}

void type metadata accessor for INPlaybackRepeatMode(uint64_t a1)
{
}

void type metadata accessor for INPlaybackQueueLocation(uint64_t a1)
{
}

void type metadata accessor for INMediaSortOrder(uint64_t a1)
{
}

void type metadata accessor for INMediaItemType(uint64_t a1)
{
}

void sub_34DC4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, a3);
    if (!v5) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }

uint64_t sub_34E08()
{
  return sub_10430( &qword_283AF8,  (uint64_t (*)(uint64_t))type metadata accessor for INIntentSlotValueType,  (uint64_t)&unk_2147E0);
}

void DialogService.buildCompanionParams(with:completion:)()
{
}

void sub_34E50()
{
  qword_283E60 = (uint64_t)&off_269C28;
}

uint64_t CatService.__allocating_init(appNameResolver:options:morphunProvider:aceServiceInvoker:featureFlagProvider:)( void *a1, int a2, void *a3, void *a4, void *a5)
{
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v13 = sub_1094C((uint64_t)a1, v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v17 = sub_397D4((uint64_t)v15, a2, a3, a4, a5, v5, v11, v12);
  sub_6C3C(a1);
  return v17;
}

uint64_t CatService.init(appNameResolver:options:morphunProvider:aceServiceInvoker:featureFlagProvider:)( void *a1, int a2, void *a3, void *a4, void *a5)
{
  uint64_t v30 = a4;
  int v29 = a2;
  uint64_t v8 = a1[3];
  uint64_t v28 = a1[4];
  uint64_t v9 = sub_1094C((uint64_t)a1, v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = a3[3];
  uint64_t v27 = a3[4];
  uint64_t v14 = sub_1094C((uint64_t)a3, v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v18 = a5[3];
  uint64_t v19 = a5[4];
  uint64_t v20 = sub_1094C((uint64_t)a5, v18);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v23 + 16))(v22);
  uint64_t v24 = sub_39468((uint64_t)v11, v29, (uint64_t)v16, v30, (uint64_t)v22, v31, v8, v13, v18, v28, v27, v19);
  sub_6C3C(a5);
  sub_6C3C(a3);
  sub_6C3C(a1);
  return v24;
}

uint64_t sub_350D8( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v42 = a8;
  uint64_t v43 = a2;
  uint64_t v40 = a7;
  uint64_t v41 = a1;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v15, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v20 = swift_bridgeObjectRetain_n(a6, 2LL);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc(22LL, -1LL);
    uint64_t v37 = swift_slowAlloc(64LL, -1LL);
    uint64_t v46 = v37;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v39 = v16;
    swift_bridgeObjectRetain(a4);
    uint64_t v38 = a3;
    uint64_t v44 = sub_6978(a3, a4, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    swift_bridgeObjectRelease_n(a4, 3LL);
    *(_WORD *)(v23 + 1sub_6C3C(v0 + 2) = 2080;
    swift_bridgeObjectRetain(a6);
    uint64_t v44 = sub_6978(a5, (unint64_t)a6, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    swift_bridgeObjectRelease_n(a6, 3LL);
    _os_log_impl(&dword_0, v21, v22, "Evaluating CAT family:%s id:%s...", (uint8_t *)v23, 0x16u);
    uint64_t v24 = v37;
    swift_arrayDestroy(v37, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v15);
    a3 = v38;
  }

  else
  {

    swift_bridgeObjectRelease_n(a6, 2LL);
    swift_bridgeObjectRelease_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }

  uint64_t v46 = a3;
  unint64_t v47 = a4;
  swift_bridgeObjectRetain(a4);
  v25._countAndFlagsBits = 35LL;
  v25._object = (void *)0xE100000000000000LL;
  String.append(_:)(v25);
  v26._countAndFlagsBits = a5;
  v26._object = a6;
  String.append(_:)(v26);
  uint64_t v28 = v46;
  unint64_t v27 = v47;
  uint64_t v29 = type metadata accessor for SiriEnvironment(0LL);
  uint64_t v30 = static SiriEnvironmentWrapper.retrieve()(v29);
  if (!v30) {
    uint64_t v30 = static SiriEnvironment.default.getter();
  }
  uint64_t v31 = v30;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v33 = v42;
  *(&v36 - 10) = v40;
  *(&v36 - 9) = v33;
  *(&v36 - sub_6C3C(v0 + 8) = a9;
  *(&v36 - sub_6C3C(v0 + 7) = a10;
  *(&v36 - 6) = a11;
  *(&v36 - 5) = v28;
  uint64_t v34 = v41;
  *(&v36 - 4) = v27;
  *(&v36 - sub_6C3C(v0 + 3) = v34;
  *(&v36 - sub_6C3C(v0 + 2) = v43;
  static SiriEnvironment.withTaskLocalEnvironment<A>(_:_:)(v32, sub_399CC);
  swift_release(v31);
  return swift_bridgeObjectRelease(v27);
}

uint64_t sub_35424( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v52 = a6;
  uint64_t v53 = a8;
  unint64_t v54 = a5;
  uint64_t v55 = a7;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v56 = a2;
  uint64_t v11 = type metadata accessor for ResponseMode(0LL);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v51 = a9;
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v48 = a1;
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    unint64_t v47 = v22;
    *(_DWORD *)os_log_type_t v22 = 138412290;
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v23 = static SiriEnvironment.forCurrentTask.getter();
    uint64_t v24 = v23;
    if (v23)
    {
      uint64_t v25 = SiriEnvironment.currentRequest.getter(v23);
      uint64_t v45 = v9;
      uint64_t v26 = v25;
      uint64_t v27 = swift_release(v24);
      CurrentRequest.responseMode.getter(v27);
      uint64_t v28 = swift_release(v26);
      uint64_t v29 = ResponseMode.description.getter(v28);
      uint64_t v31 = v30;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
      unint64_t v32 = sub_6C9C();
      uint64_t v33 = swift_allocError(&type metadata for String, v32, 0LL, 0LL);
      *uint64_t v34 = v29;
      v34[1] = v31;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError(v33);
      uint64_t v35 = v47;
      uint64_t v59 = v24;
    }

    else
    {
      uint64_t v35 = v47;
      uint64_t v59 = 0LL;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);
    uint64_t v36 = v46;
    uint64_t *v46 = v24;
    _os_log_impl(&dword_0, v20, v21, "CatService#execute is creating dialog with responseMode = %@", v35, 0xCu);
    uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v36, 1LL, v37);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v35, -1LL, -1LL);
    a1 = v48;
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v38 = v58;
  sub_FF10(v58, (uint64_t)&v59, &qword_283FE8);
  uint64_t v39 = (void *)swift_allocObject(&unk_26B9F0, 104LL, 7LL);
  uint64_t v40 = v54;
  _OWORD v39[2] = v54;
  void v39[3] = a1;
  sub_3060C((uint64_t)&v59, (uint64_t)(v39 + 4));
  uint64_t v41 = v51;
  uint64_t v42 = v55;
  v39[9] = v52;
  v39[10] = v42;
  v39[11] = v53;
  v39[12] = v41;
  id v43 = v40;
  swift_retain(a1);
  swift_bridgeObjectRetain(v42);
  swift_retain(v41);
  DialogService.buildParams(with:app:intentDialogContext:completion:)(v56, v57, v38, (uint64_t)sub_39A4C, (uint64_t)v39);
  return swift_release(v39);
}

void sub_3579C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    id v16 = a2;
  }

  else
  {
    if (qword_283968 != -1) {
      swift_once(&qword_283968, sub_1C198C);
    }
    id v16 = (id)qword_296BA0;
  }

  id v17 = a2;
  id v21 = (id)sub_39A60(a4);
  uint64_t v18 = a3[35];
  uint64_t v19 = a3[36];
  sub_6EA8(a3 + 32, v18);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v18, v19) & 1) != 0)
  {
    CatService.executeDialog(for:parameters:bundle:globals:completion:)(a5, a6, a1, (uint64_t)v16, v21, a7, a8);
    uint64_t v20 = v16;
  }

  else
  {
    CatService.executeTemplateResult(for:parameters:bundle:globals:completion:)(a5, a6, a1, (uint64_t)v16, v21, a7, a8);
    uint64_t v20 = v21;
    id v21 = v16;
  }
}

uint64_t CatService.executeDialogResult(_:_:for:parameters:bundle:intentDialogContext:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[11] = a8;
  v9[12] = v8;
  v9[9] = a6;
  v9[10] = a7;
  v9[7] = a4;
  v9[8] = a5;
  v9[5] = a2;
  v9[6] = a3;
  void v9[4] = a1;
  uint64_t v10 = type metadata accessor for OSSignpostID(0LL);
  v9[13] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[14] = v11;
  v9[15] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_35944, 0LL, 0LL);
}

uint64_t sub_35944()
{
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v1 = v0[15];
  id v2 = (id)qword_296AA0;
  uint64_t v3 = OSSignpostID.init(log:)(v2);
  uint64_t v4 = static os_signpost_type_t.begin.getter(v3);
  os_signpost(_:dso:log:name:signpostID:)(v4, &dword_0, v2, "catServiceExecute", 17LL, 2LL, v1);
  uint64_t v5 = (uint64_t **)swift_task_alloc(dword_284044);
  v0[16] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = (uint64_t *)sub_35A20;
  return sub_35B00((uint64_t)(v0 + 2), v0[4], v0[5], v0[6], v0[7], v0[12], v0[9], v0[8]);
}

uint64_t sub_35A20()
{
  return swift_task_switch(sub_35A74, 0LL, 0LL);
}

uint64_t sub_35A74()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)(v4, &dword_0, qword_296AA0, "catServiceExecute", 17LL, 2LL, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 24);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v6);
}

uint64_t sub_35B00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v15;
  v8[16] = v16;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  v8[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[18] = v10;
  v8[19] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  v8[20] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[21] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[22] = swift_task_alloc(v13);
  v8[23] = swift_task_alloc(v13);
  return swift_task_switch(sub_35BD8, 0LL, 0LL);
}

uint64_t sub_35BD8()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  unint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v62(v1, v6, v2);
  swift_bridgeObjectRetain_n(v5, 2LL);
  uint64_t v7 = swift_bridgeObjectRetain_n(v4, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.info.getter(v8);
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 168);
  unint64_t v14 = *(void *)(v0 + 88);
  if (v10)
  {
    uint64_t v59 = *(void *)(v0 + 168);
    unint64_t v15 = *(void *)(v0 + 72);
    uint64_t v58 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v61 = v6;
    uint64_t v18 = swift_slowAlloc(64LL, -1LL);
    uint64_t v65 = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain(v15);
    *(void *)(v0 + 40) = sub_6978(v16, v15, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease_n(v15, 3LL);
    *(_WORD *)(v17 + 1sub_6C3C(v0 + 2) = 2080;
    swift_bridgeObjectRetain(v14);
    *(void *)(v0 + 4sub_6C3C(v0 + 8) = sub_6978(v58, v14, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease_n(v14, 3LL);
    _os_log_impl( &dword_0,  v8,  v9,  "CatService#executeDialogResult Evaluating CAT family:%s id:%s...",  (uint8_t *)v17,  0x16u);
    swift_arrayDestroy(v18, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v19 = v18;
    uint64_t v6 = v61;
    swift_slowDealloc(v19, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  }

  else
  {
    swift_bridgeObjectRelease_n(*(void *)(v0 + 72), 2LL);
    swift_bridgeObjectRelease_n(v14, 2LL);

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  }

  v20(v11, v12);
  uint64_t v21 = *(void *)(v0 + 176);
  uint64_t v22 = *(void *)(v0 + 160);
  uint64_t v24 = *(void *)(v0 + 80);
  uint64_t v23 = *(void **)(v0 + 88);
  uint64_t v25 = *(void *)(v0 + 72);
  uint64_t v65 = *(void *)(v0 + 64);
  uint64_t v66 = v25;
  swift_bridgeObjectRetain(v25);
  v26._countAndFlagsBits = 35LL;
  v26._object = (void *)0xE100000000000000LL;
  String.append(_:)(v26);
  v27._countAndFlagsBits = v24;
  v27._object = v23;
  String.append(_:)(v27);
  uint64_t v28 = v66;
  *(void *)(v0 + 19sub_6C3C(v0 + 2) = v65;
  *(void *)(v0 + 200) = v28;
  uint64_t v29 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v21, v6, v22);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.info.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)unint64_t v32 = 138412290;
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v34 = static SiriEnvironment.forCurrentTask.getter();
    uint64_t v35 = v34;
    if (v34)
    {
      uint64_t v37 = *(void *)(v0 + 144);
      uint64_t v36 = *(void *)(v0 + 152);
      uint64_t v60 = *(void *)(v0 + 136);
      uint64_t v63 = v20;
      uint64_t v38 = SiriEnvironment.currentRequest.getter(v34);
      uint64_t v39 = swift_release(v35);
      CurrentRequest.responseMode.getter(v39);
      uint64_t v40 = swift_release(v38);
      uint64_t v41 = ResponseMode.description.getter(v40);
      uint64_t v43 = v42;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v60);
      unint64_t v44 = sub_6C9C();
      uint64_t v45 = swift_allocError(&type metadata for String, v44, 0LL, 0LL);
      uint64_t *v46 = v41;
      v46[1] = v43;
      uint64_t v20 = v63;
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError(v45);
      *(void *)(v0 + 3sub_6C3C(v0 + 2) = v35;
      uint64_t v47 = v0 + 32;
      uint64_t v48 = v0 + 40;
    }

    else
    {
      uint64_t v47 = v0 + 24;
      *(void *)(v0 + sub_6C3C(v0 + 24) = 0LL;
      uint64_t v48 = v0 + 32;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(v47, v48);
    *uint64_t v33 = v35;
    _os_log_impl( &dword_0,  v30,  v31,  "CatService#executeDialogResult is creating dialog with responseMode = %@",  v32,  0xCu);
    uint64_t v49 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v33, 1LL, v49);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  uint64_t v50 = *(void *)(v0 + 176);
  uint64_t v51 = *(void *)(v0 + 160);
  uint64_t v53 = *(void *)(v0 + 112);
  uint64_t v52 = *(void *)(v0 + 120);
  __int128 v64 = *(_OWORD *)(v0 + 96);

  v20(v50, v51);
  uint64_t v54 = swift_task_alloc(48LL);
  *(void *)(v0 + 20sub_6C3C(v0 + 8) = v54;
  *(_OWORD *)(v54 + sub_6C3C(v0 + 16) = v64;
  *(void *)(v54 + 3sub_6C3C(v0 + 2) = v53;
  *(void *)(v54 + 40) = v52;
  uint64_t v55 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 2sub_6C3C(v0 + 16) = v55;
  uint64_t v56 = sub_6C5C(&qword_284048);
  void *v55 = v0;
  v55[1] = sub_360E8;
  return withCheckedContinuation<A>(isolation:function:_:)( v0 + 16,  0LL,  0LL,  0xD000000000000043LL,  0x800000000021D390LL,  sub_3A88C,  v54,  v56);
}

uint64_t sub_360E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 216LL));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_36170, 0LL, 0LL);
}

uint64_t sub_36170()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[16];
  v0[28] = v1;
  if (v2)
  {
    id v3 = v2;
  }

  else
  {
    if (qword_283968 == -1)
    {
      uint64_t v2 = 0LL;
    }

    else
    {
      swift_once(&qword_283968, sub_1C198C);
      uint64_t v2 = (void *)v0[16];
    }

    id v3 = (id)qword_296BA0;
  }

  v0[29] = v3;
  uint64_t v4 = v0[15];
  id v5 = v2;
  uint64_t v6 = sub_39A60(v4);
  v0[30] = v6;
  uint64_t v7 = (void *)swift_task_alloc(dword_283E9C);
  v0[31] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_36280;
  return CatService.executeDialog(for:parameters:bundle:globals:)(v0[24], v0[25], v1, (uint64_t)v3, v6);
}

uint64_t sub_36280(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 248);
  uint64_t v5 = *(void *)(*v2 + 224);
  uint64_t v6 = *(void *)(*v2 + 200);
  *(void *)(v3 + 256) = a1;
  *(_BYTE *)(v3 + 264) = a2;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  return swift_task_switch(sub_3632C, 0LL, 0LL);
}

uint64_t sub_3632C()
{
  char v1 = *(_BYTE *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void **)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 56);

  *(void *)uint64_t v7 = v2;
  *(_BYTE *)(v7 + sub_6C3C(v0 + 8) = v1 & 1;
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_363DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_6C5C(qword_284050);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a1,  v9);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 16) & ~v12;
  uint64_t v14 = swift_allocObject(&unk_26BB48, v13 + v11, v12 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v14 + v13,  (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
  DialogService.buildParams(with:app:intentDialogContext:completion:)(a3, a4, a5, (uint64_t)sub_3A8FC, v14);
  return swift_release(v14);
}

uint64_t sub_364DC(uint64_t a1)
{
  uint64_t v3 = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v1 = sub_6C5C(qword_284050);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t CatService.executeTemplateResult(for:parameters:bundle:globals:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a6;
  uint64_t v62 = a7;
  uint64_t v65 = a4;
  uint64_t v66 = a2;
  uint64_t v64 = a1;
  uint64_t v9 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v68 + 64);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v63 = (char *)&v51 - v12;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  swift_bridgeObjectRetain_n(a3, 2LL);
  id v18 = a5;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v67 = a3;
  uint64_t v59 = (uint64_t)v18;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    int v54 = v21;
    uint64_t v24 = v18;
    uint64_t v25 = v23;
    uint64_t v53 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v56 = swift_slowAlloc(64LL, -1LL);
    v71[0] = v56;
    *(_DWORD *)uint64_t v25 = 136446722;
    uint64_t v57 = v10;
    uint64_t v26 = static Insights.cat.getter();
    unint64_t v28 = v27;
    uint64_t v70 = sub_6978(v26, v27, v71);
    uint64_t v55 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v25 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v29 = swift_bridgeObjectRetain(a3);
    uint64_t v52 = (char *)&type metadata for Any + 8;
    uint64_t v30 = Dictionary.description.getter( v29,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    uint64_t v58 = v9;
    unint64_t v32 = v31;
    swift_bridgeObjectRelease(a3);
    uint64_t v70 = sub_6978(v30, v32, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
    swift_bridgeObjectRelease_n(a3, 2LL);
    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v25 + 2sub_6C3C(v0 + 2) = 2112;
    uint64_t v70 = (uint64_t)v24;
    id v33 = v24;
    uint64_t v10 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
    uint64_t v34 = v53;
    *uint64_t v53 = v24;

    uint64_t v9 = v58;
    _os_log_impl( &dword_0,  v19,  (os_log_type_t)v54,  "CatService#executeTemplateResult %{public}s using params: %{public}s globals: %@",  (uint8_t *)v25,  0x20u);
    uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v34, 1LL, v35);
    swift_slowDealloc(v34, -1LL, -1LL);
    uint64_t v36 = v56;
    swift_arrayDestroy(v56, 2LL, v52);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  id v37 = (id)qword_296AA0;
  uint64_t v38 = v63;
  OSSignpostID.init(log:)(v37);
  uint64_t v39 = v68;
  uint64_t v40 = v60;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v60, v38, v9);
  uint64_t v41 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v42 = (v41 + 33) & ~v41;
  unint64_t v43 = (v10 + v42 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v44 = swift_allocObject(&unk_26BAD0, v43 + 16, v41 | 7);
  *(void *)(v44 + sub_6C3C(v0 + 16) = "catServiceInnerExecute";
  *(void *)(v44 + sub_6C3C(v0 + 24) = 22LL;
  *(_BYTE *)(v44 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v44 + v42, v40, v9);
  uint64_t v45 = (void *)(v44 + v43);
  uint64_t v46 = v62;
  *uint64_t v45 = v61;
  v45[1] = v46;
  uint64_t v47 = swift_retain(v46);
  uint64_t v48 = static os_signpost_type_t.begin.getter(v47);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v48,  &dword_0,  qword_296AA0,  "catServiceInnerExecute",  22LL,  2LL,  v38,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v49 = swift_allocObject(&unk_26BAF8, 32LL, 7LL);
  *(void *)(v49 + sub_6C3C(v0 + 16) = sub_33CC0;
  *(void *)(v49 + sub_6C3C(v0 + 24) = v44;
  swift_retain(v44);
  sub_36A34((uint64_t)sub_3A940, v49, v65, v64, v66, v67, v59, v69);
  swift_release(v44);
  swift_release(v49);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v9);
}

uint64_t sub_36A34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v37 = a8;
  uint64_t v38 = a3;
  uint64_t v40 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v11 = type metadata accessor for CATOption(0LL);
  uint64_t v39 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  os_log_type_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v21))
  {
    BOOL v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v34 = a5;
    uint64_t v23 = v11;
    uint64_t v24 = a6;
    uint64_t v25 = a7;
    uint64_t v26 = v22;
    *(_WORD *)BOOL v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "CatService#executeTemplateResult CAT.execute ...", v22, 2u);
    unint64_t v27 = v26;
    a7 = v25;
    a6 = v24;
    uint64_t v11 = v23;
    a5 = v34;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  type metadata accessor for CATExecutor(0LL);
  uint64_t v42 = 0LL;
  memset(v41, 0, sizeof(v41));
  uint64_t v28 = v37;
  CATOption.init(rawValue:)(*(int *)(v37 + 296));
  uint64_t v29 = (void *)swift_allocObject(&unk_26BB20, 64LL, 7LL);
  void v29[2] = v35;
  uint64_t v30 = v36;
  v29[3] = v36;
  v29[4] = v28;
  uint64_t v31 = v40;
  v29[5] = v40;
  v29[6] = a5;
  v29[7] = a6;
  swift_retain(v30);
  swift_retain(v28);
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a6);
  static CATExecutor.execute(bundle:catId:parameters:globals:callback:options:_:)( v38,  v31,  a5,  a6,  a7,  v41,  v13,  sub_3A87C,  v29);
  swift_release(v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  return sub_1F6CC((uint64_t)v41, &qword_284030);
}

uint64_t sub_36CBC( uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(char *, char *, uint64_t))
{
  char v88 = a7;
  unint64_t v92 = a6;
  uint64_t v90 = a5;
  uint64_t v96 = a3;
  unint64_t v97 = a2;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_log_type_t v93 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v81 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v81 - v14;
  uint64_t v94 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v94);
  uint64_t v95 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v91 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  BOOL v22 = (char *)&v81 - v21;
  uint64_t v23 = sub_6C5C(&qword_284038);
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t *)((char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v25, &qword_284038);
  if (swift_getEnumCaseMultiPayload(v25, v23) == 1)
  {
    uint64_t v26 = *v25;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v27 = v17;
    uint64_t v28 = sub_6960(v17, (uint64_t)qword_2969C8);
    uint64_t v29 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v22, v28, v17);
    swift_errorRetain(v26);
    uint64_t v30 = swift_errorRetain(v26);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc(22LL, -1LL);
      uint64_t v34 = swift_slowAlloc(64LL, -1LL);
      v101[0] = v34;
      *(_DWORD *)uint64_t v33 = 136446466;
      uint64_t v35 = static Insights.cat.getter();
      uint64_t v87 = v29;
      unint64_t v37 = v36;
      uint64_t v100 = sub_6978(v35, v36, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      swift_bridgeObjectRelease(v37);
      *(_WORD *)(v33 + 1sub_6C3C(v0 + 2) = 2082;
      swift_getErrorValue(v26, v99, v98);
      uint64_t v38 = Error.localizedDescription.getter(v98[1], v98[2]);
      unint64_t v40 = v39;
      uint64_t v100 = sub_6978(v38, v39, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      swift_bridgeObjectRelease(v40);
      swift_errorRelease(v26);
      swift_errorRelease(v26);
      _os_log_impl( &dword_0,  v31,  v32,  "CatService#executeTemplateResult %{public}s Error evaluating CAT: %{public}s",  (uint8_t *)v33,  0x16u);
      swift_arrayDestroy(v34, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v22, v27);
    }

    else
    {
      swift_errorRelease(v26);
      swift_errorRelease(v26);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v27);
    }

    uint64_t v76 = v94;
    uint64_t v77 = (uint64_t)v95;
    *(void *)uint64_t v95 = v26;
    swift_storeEnumTagMultiPayload(v77, v76, 1LL);
    swift_errorRetain(v26);
    v97(v77);
    swift_errorRelease(v26);
    return sub_1F6CC(v77, (uint64_t *)&unk_286BB0);
  }

  else
  {
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v15, v25, v8);
    uint64_t v42 = TemplatingResult.meta.getter(v41);
    sub_39ED8(v90, v92, v42, (uint64_t)v88);
    swift_bridgeObjectRelease(v42);
    uint64_t v43 = v8;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    unint64_t v44 = v17;
    uint64_t v45 = sub_6960(v17, (uint64_t)qword_2969C8);
    uint64_t v46 = v18;
    uint64_t v47 = v91;
    (*(void (**)(char *, uint64_t, unint64_t))(v18 + 16))(v91, v45, v44);
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v49 = v89;
    v48(v89, v15, v8);
    char v88 = v48;
    v48(v93, v15, v8);
    unint64_t v50 = v92;
    uint64_t v51 = swift_bridgeObjectRetain_n(v92, 2LL);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.default.getter();
    int v86 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc(42LL, -1LL);
      uint64_t v82 = v9;
      unint64_t v85 = v15;
      uint64_t v55 = v54;
      uint64_t v84 = swift_slowAlloc(128LL, -1LL);
      v101[0] = v84;
      *(_DWORD *)uint64_t v55 = 136446978;
      os_log_t v83 = v52;
      uint64_t v56 = static Insights.cat.getter();
      uint64_t v87 = v46;
      unint64_t v58 = v57;
      uint64_t v100 = sub_6978(v56, v57, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      swift_bridgeObjectRelease(v58);
      *(_WORD *)(v55 + 1sub_6C3C(v0 + 2) = 2082;
      swift_bridgeObjectRetain(v50);
      uint64_t v100 = sub_6978(v90, v50, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      uint64_t v59 = swift_bridgeObjectRelease_n(v50, 3LL);
      *(_WORD *)(v55 + 2sub_6C3C(v0 + 2) = 2082;
      uint64_t v60 = TemplatingResult.speak.getter(v59);
      uint64_t v61 = v43;
      uint64_t v62 = Array.description.getter(v60, &type metadata for String);
      unint64_t v92 = v44;
      unint64_t v64 = v63;
      swift_bridgeObjectRelease(v60);
      uint64_t v100 = sub_6978(v62, v64, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      swift_bridgeObjectRelease(v64);
      uint64_t v65 = *(uint64_t (**)(char *, uint64_t))(v82 + 8);
      uint64_t v66 = v65(v49, v61);
      *(_WORD *)(v55 + 3sub_6C3C(v0 + 2) = 2082;
      uint64_t v67 = v93;
      uint64_t v68 = TemplatingResult.print.getter(v66);
      uint64_t v69 = Array.description.getter(v68, &type metadata for String);
      unint64_t v71 = v70;
      swift_bridgeObjectRelease(v68);
      uint64_t v100 = sub_6978(v69, v71, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, v101);
      swift_bridgeObjectRelease(v71);
      uint64_t v72 = v67;
      uint64_t v43 = v61;
      v65(v72, v61);
      os_log_t v73 = v83;
      _os_log_impl( &dword_0,  v83,  (os_log_type_t)v86,  "CatService#executeTemplateResult %{public}s Successfully evaluated CAT: catId:%{public}s, result.speak:%{public} s, result.print:%{public}s",  (uint8_t *)v55,  0x2Au);
      uint64_t v74 = v84;
      swift_arrayDestroy(v84, 4LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1LL, -1LL);
      uint64_t v75 = v55;
      uint64_t v15 = v85;
      swift_slowDealloc(v75, -1LL, -1LL);

      (*(void (**)(char *, unint64_t))(v87 + 8))(v91, v92);
    }

    else
    {
      swift_bridgeObjectRelease_n(v50, 2LL);
      uint64_t v65 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      v65(v49, v43);
      v65(v93, v43);

      (*(void (**)(char *, unint64_t))(v46 + 8))(v47, v44);
    }

    uint64_t v79 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v80 = (uint64_t)v95;
    v88(v95, v15, v43);
    *(void *)(v80 + v79) = [objc_allocWithZone(DialogExecutionResult) init];
    swift_storeEnumTagMultiPayload(v80, v94, 0LL);
    v97(v80);
    sub_1F6CC(v80, (uint64_t *)&unk_286BB0);
    return v65(v15, v43);
  }

uint64_t CatService.executeDialog(for:parameters:bundle:globals:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a6;
  uint64_t v62 = a7;
  uint64_t v65 = a4;
  uint64_t v66 = a2;
  uint64_t v64 = a1;
  uint64_t v9 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v68 + 64);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v63 = (char *)&v51 - v12;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  swift_bridgeObjectRetain_n(a3, 2LL);
  id v18 = a5;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v67 = a3;
  uint64_t v59 = (uint64_t)v18;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    int v54 = v21;
    uint64_t v24 = v18;
    uint64_t v25 = v23;
    os_log_type_t v53 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v56 = swift_slowAlloc(64LL, -1LL);
    v71[0] = v56;
    *(_DWORD *)uint64_t v25 = 136446722;
    uint64_t v57 = v10;
    uint64_t v26 = static Insights.cat.getter();
    unint64_t v28 = v27;
    uint64_t v70 = sub_6978(v26, v27, v71);
    uint64_t v55 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
    swift_bridgeObjectRelease(v28);
    *(_WORD *)(v25 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v29 = swift_bridgeObjectRetain(a3);
    uint64_t v52 = (char *)&type metadata for Any + 8;
    uint64_t v30 = Dictionary.description.getter( v29,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    uint64_t v58 = v9;
    unint64_t v32 = v31;
    swift_bridgeObjectRelease(a3);
    uint64_t v70 = sub_6978(v30, v32, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
    swift_bridgeObjectRelease_n(a3, 2LL);
    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v25 + 2sub_6C3C(v0 + 2) = 2112;
    uint64_t v70 = (uint64_t)v24;
    id v33 = v24;
    uint64_t v10 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
    uint64_t v34 = v53;
    *os_log_type_t v53 = v24;

    uint64_t v9 = v58;
    _os_log_impl( &dword_0,  v19,  (os_log_type_t)v54,  "CatService#executeDialog %{public}s using params: %{public}s globals: %@",  (uint8_t *)v25,  0x20u);
    uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v34, 1LL, v35);
    swift_slowDealloc(v34, -1LL, -1LL);
    uint64_t v36 = v56;
    swift_arrayDestroy(v56, 2LL, v52);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  id v37 = (id)qword_296AA0;
  uint64_t v38 = v63;
  OSSignpostID.init(log:)(v37);
  uint64_t v39 = v68;
  unint64_t v40 = v60;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v60, v38, v9);
  uint64_t v41 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v42 = (v41 + 33) & ~v41;
  unint64_t v43 = (v10 + v42 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v44 = swift_allocObject(&unk_26BA30, v43 + 16, v41 | 7);
  *(void *)(v44 + sub_6C3C(v0 + 16) = "catServiceInnerExecute";
  *(void *)(v44 + sub_6C3C(v0 + 24) = 22LL;
  *(_BYTE *)(v44 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v44 + v42, v40, v9);
  uint64_t v45 = (void *)(v44 + v43);
  uint64_t v46 = v62;
  *uint64_t v45 = v61;
  v45[1] = v46;
  uint64_t v47 = swift_retain(v46);
  uint64_t v48 = static os_signpost_type_t.begin.getter(v47);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v48,  &dword_0,  qword_296AA0,  "catServiceInnerExecute",  22LL,  2LL,  v38,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v49 = swift_allocObject(&unk_26BA58, 32LL, 7LL);
  *(void *)(v49 + sub_6C3C(v0 + 16) = sub_33CC0;
  *(void *)(v49 + sub_6C3C(v0 + 24) = v44;
  swift_retain(v44);
  sub_379C8((uint64_t)sub_33CB0, v49, v65, v64, v66, v67, v59, v69);
  swift_release(v44);
  swift_release(v49);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v9);
}

void sub_379C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a7;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  id v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "CatService#executeDialog CAT.execute ...", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v33 = (id)objc_opt_self(&OBJC_CLASS___CATDialog);
  NSString v21 = String._bridgeToObjectiveC()();
  uint64_t v22 = sub_2607C(a6);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  uint64_t v24 = swift_bridgeObjectRelease(v22);
  uint64_t v25 = dispatch thunk of CATGlobals.toDictionary.getter(v24);
  Class v26 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v25);
  uint64_t v27 = *(unsigned int *)(a8 + 296);
  unint64_t v28 = (void *)swift_allocObject(&unk_26BA80, 64LL, 7LL);
  v28[2] = a8;
  v28[3] = a4;
  v28[4] = a5;
  v28[5] = a6;
  uint64_t v29 = v36;
  v28[6] = v35;
  v28[7] = v29;
  aBlock[4] = sub_39EC8;
  uint64_t v39 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_3885C;
  aBlock[3] = &unk_26BA98;
  uint64_t v30 = _Block_copy(aBlock);
  unint64_t v31 = v39;
  swift_retain(a8);
  swift_bridgeObjectRetain(a5);
  swift_bridgeObjectRetain(a6);
  swift_retain(v29);
  swift_release(v31);
  [v33 execute:v37 catId:v21 parameters:isa globals:v26 callback:0 options:v27 completion:v30];
  _Block_release(v30);
}

uint64_t sub_37C88( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v120 = a8;
  uint64_t v121 = (_BYTE *)a6;
  id v123 = a7;
  unint64_t v124 = a5;
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v111[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v15);
  id v119 = &v111[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v122 = type metadata accessor for Logger(0LL);
  *(void *)&__int128 v125 = *(void *)(v122 - 8);
  uint64_t v17 = __chkstk_darwin(v122);
  NSNumber v117 = &v111[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v17);
  os_log_type_t v20 = &v111[-v19];
  id v21 = [a1 meta];
  uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_39ED8(a4, v124, v22, (uint64_t)v121);
  swift_bridgeObjectRelease(v22);
  uint64_t v118 = v15;
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = v122;
    uint64_t v24 = sub_6960(v122, (uint64_t)qword_2969C8);
    uint64_t v25 = v125;
    Class v26 = v117;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v125 + 16))(v117, v24, v23);
    swift_errorRetain(a2);
    uint64_t v27 = swift_errorRetain(a2);
    unint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter();
    BOOL v30 = os_log_type_enabled(v28, v29);
    unint64_t v31 = v123;
    if (v30)
    {
      uint64_t v32 = swift_slowAlloc(22LL, -1LL);
      uint64_t v33 = swift_slowAlloc(64LL, -1LL);
      uint64_t v129 = v33;
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v34 = static Insights.cat.getter();
      unint64_t v36 = v35;
      uint64_t v128 = sub_6978(v34, v35, &v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
      swift_bridgeObjectRelease(v36);
      *(_WORD *)(v32 + 1sub_6C3C(v0 + 2) = 2082;
      swift_getErrorValue(a2, v127, v126);
      uint64_t v37 = Error.localizedDescription.getter(v126[1], v126[2]);
      unint64_t v39 = v38;
      uint64_t v128 = sub_6978(v37, v38, &v129);
      unint64_t v31 = v123;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
      swift_bridgeObjectRelease(v39);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl( &dword_0,  v28,  v29,  "CatService#executeDialog %{public}s Error evaluating CAT: %{public}s",  (uint8_t *)v32,  0x16u);
      swift_arrayDestroy(v33, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v125 + 8))(v117, v23);
    }

    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v26, v23);
    }

    uint64_t v40 = v118;
    uint64_t v41 = (uint64_t)v119;
    *id v119 = a2;
    swift_storeEnumTagMultiPayload(v41, v40, 1LL);
    swift_errorRetain(a2);
    v31(v41);
    swift_errorRelease(a2);
    return sub_1F6CC(v41, (uint64_t *)&unk_286BB0);
  }

  uint64_t v116 = v12;
  NSNumber v117 = v20;
  uint64_t v121 = v14;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v115 = a4;
  uint64_t v42 = v122;
  uint64_t v43 = sub_6960(v122, (uint64_t)qword_2969C8);
  uint64_t v44 = v125;
  uint64_t v45 = v117;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v125 + 16))(v117, v43, v42);
  id v46 = a1;
  uint64_t v47 = (void *)Logger.logObject.getter(v46);
  int v48 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v47, (os_log_type_t)v48))
  {

    (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v45, v42);
    uint64_t v70 = v11;
    uint64_t v49 = v116;
    goto LABEL_36;
  }

  int v112 = v48;
  os_log_t v114 = (os_log_t)v47;
  uint64_t v49 = swift_slowAlloc(32LL, -1LL);
  uint64_t v50 = swift_slowAlloc(16LL, -1LL);
  uint64_t v51 = swift_slowAlloc(32LL, -1LL);
  uint64_t v129 = v51;
  *(_DWORD *)uint64_t v49 = 136446722;
  uint64_t v52 = static Insights.cat.getter();
  unint64_t v54 = v53;
  uint64_t v128 = sub_6978(v52, v53, &v129);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
  swift_bridgeObjectRelease(v54);
  *(_WORD *)(v49 + 1sub_6C3C(v0 + 2) = 2114;
  id v55 = [v46 dialog];
  int64_t v56 = sub_39E4C();
  uint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

  if ((unint64_t)v57 >> 62)
  {
    if (v57 < 0) {
      uint64_t v82 = v57;
    }
    else {
      uint64_t v82 = v57 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v57);
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter(v82);
    swift_bridgeObjectRelease(v57);
  }

  else
  {
    uint64_t v58 = *(void *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v113 = v51;
  if (!v58)
  {
    swift_bridgeObjectRelease(v57);
    uint64_t v128 = 0LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
    uint64_t v68 = 0LL;
    goto LABEL_20;
  }

  if ((v57 & 0xC000000000000001LL) != 0) {
    goto LABEL_64;
  }
  if (!*(void *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFF8LL)))
  {
    __break(1u);
    goto LABEL_66;
  }

  for (id i = *(id *)(v57 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v57))
  {
    uint64_t v60 = i;
    swift_bridgeObjectRelease(v57);
    id v61 = [v60 fullPrint];

    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    uint64_t v64 = v63;

    unint64_t v65 = sub_6C9C();
    uint64_t v66 = swift_allocError(&type metadata for String, v65, 0LL, 0LL);
    *uint64_t v67 = v62;
    v67[1] = v64;
    uint64_t v68 = _swift_stdlib_bridgeErrorToNSError(v66);
    uint64_t v128 = v68;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
LABEL_20:
    *(void *)uint64_t v50 = v68;

    *(_WORD *)(v49 + 2sub_6C3C(v0 + 2) = 2114;
    id v71 = [v46 dialog];
    int64_t v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v71, v56);

    uint64_t v51 = v125;
    if ((unint64_t)v56 >> 62)
    {
      if (v56 < 0) {
        uint64_t v83 = v56;
      }
      else {
        uint64_t v83 = v56 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v56);
      uint64_t v84 = _CocoaArrayWrapper.endIndex.getter(v83);
      swift_bridgeObjectRelease(v56);
      if (v84)
      {
LABEL_22:
        if ((v56 & 0xC000000000000001LL) != 0)
        {
LABEL_66:
          id v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v56);
        }

        else
        {
          id v72 = *(id *)(v56 + 32);
        }

        os_log_t v73 = v72;
        swift_bridgeObjectRelease(v56);
        id v74 = [v73 fullSpeak];

        uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
        uint64_t v77 = v76;

        unint64_t v78 = sub_6C9C();
        uint64_t v79 = swift_allocError(&type metadata for String, v78, 0LL, 0LL);
        *uint64_t v80 = v75;
        v80[1] = v77;
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError(v79);
        uint64_t v128 = v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
        goto LABEL_35;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_22;
    }

    swift_bridgeObjectRelease(v56);
    uint64_t v128 = 0LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
    uint64_t v81 = 0LL;
LABEL_35:
    *(void *)(v50 + sub_6C3C(v0 + 8) = v81;

    os_log_t v85 = v114;
    _os_log_impl( &dword_0,  v114,  (os_log_type_t)v112,  "CatService#executeDialog %{public}s Successfully evaluated dialog to Print: %{public}@ speak:%{public}@",  (uint8_t *)v49,  0x20u);
    uint64_t v86 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v50, 2LL, v86);
    swift_slowDealloc(v50, -1LL, -1LL);
    uint64_t v87 = v113;
    swift_arrayDestroy(v113, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v87, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);

    (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v117, v122);
    uint64_t v70 = v11;
    uint64_t v49 = v116;
LABEL_36:
    uint64_t v50 = sub_6C5C(&qword_284018);
    uint64_t v11 = swift_allocObject(v50, 48LL, 7LL);
    __int128 v125 = xmmword_214510;
    *(_OWORD *)(v11 + sub_6C3C(v0 + 16) = xmmword_214510;
    id v88 = [v46 dialog];
    int64_t v89 = sub_39E4C();
    uint64_t v90 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v88, v89);

    if ((unint64_t)v90 >> 62)
    {
      if (v90 < 0) {
        id v88 = (id)v90;
      }
      else {
        id v88 = (id)(v90 & 0xFFFFFFFFFFFFFF8LL);
      }
      swift_bridgeObjectRetain(v90);
      uint64_t v97 = _CocoaArrayWrapper.endIndex.getter(v88);
      swift_bridgeObjectRelease(v90);
      if (!v97)
      {
LABEL_46:
        swift_bridgeObjectRelease(v90);
        uint64_t v94 = 0LL;
        unint64_t v96 = 0xE000000000000000LL;
        goto LABEL_47;
      }
    }

    else if (!*(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_46;
    }

    if ((v90 & 0xC000000000000001LL) != 0)
    {
      id v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v90);
    }

    else
    {
      if (!*(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8LL)))
      {
        __break(1u);
LABEL_62:
        uint64_t v99 = (void (*)(uint64_t))v88;
        id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v89);
LABEL_53:
        uint64_t v101 = v100;
        swift_bridgeObjectRelease(v89);
        id v102 = [v101 fullPrint];

        uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
        unint64_t v105 = v104;

        id v88 = v99;
        uint64_t v57 = (uint64_t)v121;
        goto LABEL_55;
      }

      id v91 = *(id *)(v90 + 32);
    }

    unint64_t v92 = v91;
    swift_bridgeObjectRelease(v90);
    id v93 = [v92 fullSpeak];

    uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
    unint64_t v96 = v95;

LABEL_47:
    *(void *)(v11 + 3sub_6C3C(v0 + 2) = v94;
    *(void *)(v11 + 40) = v96;
    uint64_t v50 = swift_allocObject(v50, 48LL, 7LL);
    *(_OWORD *)(v50 + sub_6C3C(v0 + 16) = v125;
    id v98 = [v46 dialog];
    int64_t v89 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, v89);

    if ((unint64_t)v89 >> 62)
    {
      int64_t v110 = v89 < 0 ? v89 : v89 & 0xFFFFFFFFFFFFFF8LL;
      swift_bridgeObjectRetain(v89);
      int64_t v56 = _CocoaArrayWrapper.endIndex.getter(v110);
      swift_bridgeObjectRelease(v89);
    }

    else
    {
      int64_t v56 = *(void *)((char *)&dword_10 + (v89 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v57 = (uint64_t)v121;
    id v88 = v123;
    if (!v56) {
      break;
    }
    if ((v89 & 0xC000000000000001LL) != 0) {
      goto LABEL_62;
    }
    if (*(void *)((char *)&dword_10 + (v89 & 0xFFFFFFFFFFFFF8LL)))
    {
      uint64_t v99 = v123;
      id v100 = *(id *)(v89 + 32);
      goto LABEL_53;
    }

    __break(1u);
LABEL_64:
    ;
  }

  swift_bridgeObjectRelease(v89);
  uint64_t v103 = 0LL;
  unint64_t v105 = 0xE000000000000000LL;
LABEL_55:
  *(void *)(v50 + 3sub_6C3C(v0 + 2) = v103;
  *(void *)(v50 + 40) = v105;
  unint64_t v106 = v124;
  swift_bridgeObjectRetain(v124);
  TemplatingResult.init(templateIdentifier:speak:print:)(v115, v106, v11, v50);
  uint64_t v107 = *(int *)(sub_6C5C(&qword_289340) + 48);
  uint64_t v108 = (uint64_t)v119;
  (*(void (**)(void *, uint64_t, uint64_t))(v49 + 16))(v119, v57, v70);
  *(void *)(v108 + v10sub_6C3C(v0 + 7) = v46;
  swift_storeEnumTagMultiPayload(v108, v118, 0LL);
  id v109 = v46;
  ((void (*)(uint64_t))v88)(v108);
  sub_1F6CC(v108, (uint64_t *)&unk_286BB0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v57, v70);
}

void sub_3885C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void (**)(id, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  id v8 = a2;
  id v7 = a3;
  v6(v8, a3);
  swift_release(v5);
}

uint64_t CatService.executeDialog(for:parameters:bundle:globals:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[26] = a5;
  v6[27] = v5;
  v6[24] = a3;
  v6[25] = a4;
  v6[22] = a1;
  v6[23] = a2;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  v6[28] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[29] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[30] = swift_task_alloc(v9);
  v6[31] = swift_task_alloc(v9);
  return swift_task_switch(sub_38974, 0LL, 0LL);
}

uint64_t sub_38974()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[24];
  uint64_t v16 = v0[25];
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___CATDialog);
  NSString v5 = String._bridgeToObjectiveC()();
  v0[32] = v5;
  uint64_t v6 = sub_2607C(v3);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v0[33] = isa;
  swift_bridgeObjectRelease(v6);
  uint64_t v9 = dispatch thunk of CATGlobals.toDictionary.getter(v8);
  Class v10 = Dictionary._bridgeToObjectiveC()().super.isa;
  v0[34] = v10;
  __n128 v11 = swift_bridgeObjectRelease(v9);
  uint64_t v12 = *(unsigned int *)(v2 + 296);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_38B10;
  uint64_t v13 = swift_continuation_init(v0 + 2, 1LL, v11);
  v0[10] = _NSConcreteStackBlock;
  uint64_t v14 = v0 + 10;
  v14[1] = 0x40000000LL;
  _BYTE v14[2] = sub_39364;
  v14[3] = &unk_26BA08;
  v14[4] = v13;
  [v4 execute:v16 catId:v5 parameters:isa globals:v10 callback:0 options:v12 completion:v14];
  return swift_continuation_await(v1);
}

uint64_t sub_38B10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 280LL) = v1;
  if (v1) {
    uint64_t v2 = sub_39118;
  }
  else {
    uint64_t v2 = sub_38BB4;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_38BB4()
{
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 256);
  uint64_t v3 = *(void **)(v0 + 120);

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v7 = sub_6960(v5, (uint64_t)qword_2969C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
  id v8 = v3;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v56 = v10;
    uint64_t v11 = v0 + 168;
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    uint64_t v58 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
    uint64_t v57 = swift_slowAlloc(32LL, -1LL);
    uint64_t v60 = v57;
    *(_DWORD *)uint64_t v12 = 136446722;
    uint64_t v13 = static Insights.cat.getter();
    unint64_t v15 = v14;
    *(void *)(v0 + 136) = sub_6978(v13, v14, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144);
    *(void *)&double v16 = swift_bridgeObjectRelease(v15).n128_u64[0];
    *(_WORD *)(v12 + 1sub_6C3C(v0 + 2) = 2114;
    id v17 = objc_msgSend(v8, "dialog", v16);
    unint64_t v18 = sub_39E4C();
    uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0) {
        uint64_t v54 = v19;
      }
      else {
        uint64_t v54 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v19);
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(v19);
    }

    else
    {
      uint64_t v20 = *(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v59 = (uint64_t *)(v0 + 152);
    if (v20)
    {
      if ((v19 & 0xC000000000000001LL) != 0)
      {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          goto LABEL_34;
        }

        id v21 = *(id *)(v19 + 32);
      }

      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, "fullPrint", swift_bridgeObjectRelease(v19).n128_f64[0]);

      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      uint64_t v26 = v25;

      unint64_t v27 = sub_6C9C();
      uint64_t v28 = swift_allocError(&type metadata for String, v27, 0LL, 0LL);
      *os_log_type_t v29 = v24;
      v29[1] = v26;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError(v28);
      *(void *)(v0 + 1sub_6C3C(v0 + 44) = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v59);
      uint64_t v11 = v0 + 168;
    }

    else
    {
      swift_bridgeObjectRelease(v19);
      *(void *)(v0 + 16sub_6C3C(v0 + 8) = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176);
    }

    *uint64_t v58 = v20;

    *(_WORD *)(v12 + 2sub_6C3C(v0 + 2) = 2114;
    id v33 = [v8 dialog];
    uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v18);

    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0) {
        uint64_t v55 = v34;
      }
      else {
        uint64_t v55 = v34 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v34);
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter(v55);
      swift_bridgeObjectRelease(v34);
    }

    else
    {
      uint64_t v35 = *(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFF8LL));
    }

    if (!v35)
    {
      swift_bridgeObjectRelease(v34);
      *(void *)(v0 + 160) = 0LL;
      uint64_t v45 = v0 + 160;
      uint64_t v46 = v11;
      goto LABEL_21;
    }

    if ((v34 & 0xC000000000000001LL) != 0)
    {
      id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v34);
      goto LABEL_19;
    }

    if (*(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFF8LL)))
    {
      id v36 = *(id *)(v34 + 32);
LABEL_19:
      uint64_t v37 = v36;
      id v38 = objc_msgSend(v36, "fullSpeak", swift_bridgeObjectRelease(v34).n128_f64[0]);

      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      uint64_t v41 = v40;

      unint64_t v42 = sub_6C9C();
      uint64_t v43 = swift_allocError(&type metadata for String, v42, 0LL, 0LL);
      *uint64_t v44 = v39;
      v44[1] = v41;
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError(v43);
      uint64_t v45 = v0 + 152;
      *uint64_t v59 = v35;
      uint64_t v46 = v0 + 160;
LABEL_21:
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v45, v46);
      uint64_t v47 = *(void *)(v0 + 248);
      uint64_t v49 = *(void *)(v0 + 224);
      uint64_t v48 = *(void *)(v0 + 232);
      v58[1] = v35;

      _os_log_impl( &dword_0,  v9,  v56,  "CatService#executeDialog %{public}s Successfully evaluated dialog to Print: %{public}@ speak:%{public}@",  (uint8_t *)v12,  0x20u);
      uint64_t v50 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v58, 2LL, v50);
      swift_slowDealloc(v58, -1LL, -1LL);
      swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);

      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
      goto LABEL_22;
    }

LABEL_34:
    __break(1u);
  }

  uint64_t v30 = *(void *)(v0 + 248);
  uint64_t v31 = *(void *)(v0 + 224);
  uint64_t v32 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
LABEL_22:
  uint64_t v51 = *(void *)(v0 + 240);
  BOOL v52 = *(void *)(v0 + 280) != 0LL;
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(id, BOOL))(v0 + 8))(v8, v52);
}

          uint64_t v7 = 0LL;
          uint64_t v9 = 1;
          goto LABEL_37;
        }

        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }

      uint64_t v7 = (result - 48);
      unint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          uint64_t v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          id v21 = 10 * v7;
          uint64_t v7 = v21 + v20;
          uint64_t v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }

    swift_bridgeObjectRetain(v137);
    if ((swift_isUniquelyReferenced_nonNull_native(v99) & 1) == 0) {
      uint64_t v99 = sub_1FC6C(0LL, v99[2] + 1LL, 1, v99);
    }
    unint64_t v143 = v99[2];
    unint64_t v142 = v99[3];
    if (v143 >= v142 >> 1) {
      uint64_t v99 = sub_1FC6C((void *)(v142 > 1), v143 + 1, 1, v99);
    }
    v99[2] = v143 + 1;
    unint64_t v144 = &v99[2 * v143];
    v144[4] = v138;
    v144[5] = v137;
    uint64_t v404 = v99;
LABEL_26:
    if ((char *)++v134 == v384)
    {
      swift_bridgeObjectRelease(v88);
      char v159 = swift_bridgeObjectRelease(v355);
      uint64_t v108 = v380;
      unint64_t v160 = v381;
      uint64_t v121 = v382;
      uint64_t v81 = v385;
      goto LABEL_73;
    }
  }

  char v154 = (uint64_t *)v349;
  uint64_t v155 = 4LL;
  while (!__OFADD__(v155, 1LL))
  {
    uint64_t v348 = (uint8_t *)(v155 + 1);
    uint64_t v156 = *(v154 - 1);
    uint64_t v157 = *v154;
    if (v156 == v138 && v157 == v137) {
      goto LABEL_44;
    }
    double result = _stringCompareWithSmolCheck(_:_:expecting:)(v156, v157);
    if ((result & 1) != 0) {
      goto LABEL_44;
    }
    v154 += 2;
    ++v155;
    if (v348 == v133) {
      goto LABEL_34;
    }
  }

  __break(1u);
LABEL_162:
  __break(1u);
  return result;
}

uint64_t sub_39118(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 272);
  uint64_t v4 = *(void **)(v1 + 256);
  uint64_t v3 = *(void **)(v1 + 264);
  swift_willThrow(a1);

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v5 = *(void *)(v1 + 280);
  uint64_t v7 = *(void *)(v1 + 232);
  uint64_t v6 = *(void *)(v1 + 240);
  uint64_t v8 = *(void *)(v1 + 224);
  uint64_t v9 = sub_6960(v8, (uint64_t)qword_2969C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  swift_errorRetain(v5);
  uint64_t v10 = swift_errorRetain(v5);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.error.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v1 + 280);
  if (v13)
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    double v16 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)unint64_t v15 = 138412290;
    swift_errorRetain(v14);
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError(v14);
    *(void *)(v1 + 12sub_6C3C(v0 + 8) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 128, v1 + 136);
    *double v16 = v17;
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl(&dword_0, v11, v12, "CatService#executeDialog has returned an error: %@", v15, 0xCu);
    uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v16, 1LL, v18);
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(*(void *)(v1 + 280));
    swift_errorRelease(v14);
  }

  uint64_t v20 = *(void *)(v1 + 232);
  uint64_t v19 = *(void *)(v1 + 240);
  uint64_t v21 = *(void *)(v1 + 224);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  uint64_t v22 = *(void *)(v1 + 280);
  uint64_t v23 = *(void *)(v1 + 240);
  swift_task_dealloc(*(void *)(v1 + 248));
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(uint64_t, BOOL))(v1 + 8))(v22, v22 != 0);
}

uint64_t sub_39364(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_6C5C(&qword_284010);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    **(void **)(*(void *)(v3 + 64) + 40LL) = a2;
    id v10 = a2;
    return swift_continuation_throwingResume(v3);
  }

void CatService.init(appNameResolver:morphunProvider:aceServiceInvoker:multiUserConnectionProvider:contactsManager:deviceProvider:)()
{
}

uint64_t sub_39414()
{
  return sub_6C3C((void *)(v0 + 256));
}

void *CatService.deinit()
{
  return v0;
}

uint64_t sub_39468( uint64_t a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v55 = a7;
  uint64_t v67 = a6;
  uint64_t v60 = a5;
  uint64_t v68 = a4;
  uint64_t v59 = a3;
  int v61 = a2;
  uint64_t v57 = a1;
  uint64_t v65 = a11;
  uint64_t v58 = a12;
  uint64_t v66 = a10;
  uint64_t v64 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v52 = *(void *)(v64 - 8);
  uint64_t v14 = v52;
  uint64_t v15 = __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = *(void *)(a8 - 8);
  uint64_t v56 = a8;
  uint64_t v21 = v20;
  uint64_t v22 = __chkstk_darwin(v17);
  uint64_t v62 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v51 - v25;
  uint64_t v27 = *(void *)(a7 - 8);
  uint64_t v28 = __chkstk_darwin(v24);
  uint64_t v30 = (char *)&v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v51 - v31;
  id v33 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  uint64_t v54 = v27;
  v33((char *)&v51 - v31, v57, a7);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v35 = v21;
  uint64_t v53 = v21;
  v34(v26, v59, a8);
  v72[3] = a9;
  v72[4] = v58;
  id v36 = sub_10974(v72);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32LL))(v36, v60, a9);
  uint64_t v37 = v67;
  *(_DWORD *)(v67 + 296) = v61;
  sub_157C4((uint64_t)v72, v37 + 256);
  sub_157C4((uint64_t)v68, (uint64_t)v71);
  type metadata accessor for MultiUserConnectionProvider(0LL);
  memset(v69, 0, sizeof(v69));
  uint64_t v70 = 0LL;
  uint64_t v38 = static MultiUserConnectionProvider.shared.getter();
  uint64_t v39 = v19;
  static DeviceProvider.shared.getter(v38);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v41 = (uint64_t)v63;
  unint64_t v42 = v39;
  uint64_t v43 = v39;
  uint64_t v44 = v64;
  v40(v63, v42, v64);
  uint64_t v45 = v55;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v30, v32, v55);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v47 = (uint64_t)v62;
  uint64_t v48 = v56;
  v46(v62, v26, v56);
  swift_retain(v38);
  uint64_t v49 = sub_1C3CD4((uint64_t)v30, v47, v71, v38, (uint64_t)v69, v41, v67, v45, v48, v66, v65);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v44);
  swift_release(v38);
  sub_6C3C(v72);
  sub_6C3C(v68);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v48);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v45);
  return v49;
}

uint64_t sub_397D4( uint64_t a1, int a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v40 = a8;
  uint64_t v41 = a4;
  int v39 = a2;
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v38 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v16 = v15;
  (*(void (**)(char *))(v15 + 32))((char *)&v34 - v13);
  uint64_t v17 = type metadata accessor for CatService();
  uint64_t v36 = swift_allocObject(v17, 300LL, 7LL);
  uint64_t v37 = a3;
  uint64_t v18 = a3[3];
  uint64_t v35 = a3[4];
  uint64_t v19 = sub_1094C((uint64_t)a3, v18);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v22 + 16))(v21);
  uint64_t v23 = a5[3];
  uint64_t v24 = a5[4];
  uint64_t v25 = sub_1094C((uint64_t)a5, v23);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v28 + 16))(v27);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v30 = v16;
  uint64_t v31 = (uint64_t)v38;
  v29(v38, v14, a7);
  uint64_t v32 = sub_39468(v31, v39, (uint64_t)v21, v41, (uint64_t)v27, v36, a7, v18, v23, v40, v35, v24);
  sub_6C3C(a5);
  sub_6C3C(v37);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, a7);
  return v32;
}

uint64_t sub_399CC()
{
  return sub_35424( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void **)(v0 + 48),  *(void *)(v0 + 56),  *(void *)(v0 + 64),  *(void *)(v0 + 72),  *(void *)(v0 + 80));
}

uint64_t sub_39A00()
{
  swift_release(*(void *)(v0 + 24));
  if (*(void *)(v0 + 56)) {
    sub_6C3C((void *)(v0 + 32));
  }
  swift_bridgeObjectRelease(*(void *)(v0 + 80));
  swift_release(*(void *)(v0 + 96));
  return swift_deallocObject(v0, 104LL, 7LL);
}

void sub_39A4C(uint64_t a1)
{
}

uint64_t sub_39A60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v38 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_283FF8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for CATGlobals(0LL);
  uint64_t v42 = 0LL;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  uint64_t v12 = static CATGlobals.defaultBuilder(deviceState:)(&v40);
  sub_1F6CC((uint64_t)&v40, &qword_284000);
  uint64_t v13 = type metadata accessor for ResponseMode(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v11, 1LL, 1LL, v13);
  uint64_t v14 = dispatch thunk of CATGlobals.Builder.withResponseMode(_:)(v11);
  swift_release(v12);
  sub_1F6CC((uint64_t)v11, &qword_283FF8);
  sub_FF10(a1, (uint64_t)&v40, &qword_283FE8);
  uint64_t v15 = *((void *)&v41 + 1);
  if (*((void *)&v41 + 1))
  {
    uint64_t v16 = v42;
    sub_6EA8(&v40, *((uint64_t *)&v41 + 1));
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v15, v16);
    unint64_t v19 = v18;
    uint64_t v20 = sub_6C3C(&v40);
    if (v19)
    {
      uint64_t v37 = v3;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v21 = sub_6960(v6, (uint64_t)qword_2969C8);
      uint64_t v22 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v8, v21, v6);
      uint64_t v23 = swift_bridgeObjectRetain_n(v19, 2LL);
      uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v27 = swift_slowAlloc(32LL, -1LL);
        uint64_t v36 = v2;
        uint64_t v28 = v27;
        *(void *)&__int128 v40 = v27;
        uint64_t v35 = v5;
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v34 = v26 + 4;
        swift_bridgeObjectRetain(v19);
        uint64_t v39 = sub_6978(v17, v19, (uint64_t *)&v40);
        uint64_t v5 = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
        swift_bridgeObjectRelease_n(v19, 3LL);
        _os_log_impl( &dword_0,  v24,  v25,  "CatService#execute Found locale override: %s. Using for CAT execution",  v26,  0xCu);
        swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v29 = v28;
        uint64_t v2 = v36;
        swift_slowDealloc(v29, -1LL, -1LL);
        swift_slowDealloc(v26, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v6);
      }

      else
      {

        swift_bridgeObjectRelease_n(v19, 2LL);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
      }

      swift_bridgeObjectRetain(v19);
      Locale.init(identifier:)(v17, v19);
      uint64_t v30 = dispatch thunk of CATGlobals.Builder.withSiriLocale(_:)(v5);
      swift_release(v30);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v2);
      uint64_t v31 = dispatch thunk of CATGlobals.Builder.withDeviceLocale(_:)(v17, v19);
      swift_bridgeObjectRelease(v19);
      uint64_t v20 = swift_release(v31);
    }
  }

  else
  {
    uint64_t v20 = sub_1F6CC((uint64_t)&v40, &qword_283FE8);
  }

  uint64_t v32 = dispatch thunk of CATGlobals.Builder.build()(v20);
  swift_release(v14);
  return v32;
}

unint64_t sub_39E4C()
{
  unint64_t result = qword_284008;
  if (!qword_284008)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___DialogElement);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_284008);
  }

  return result;
}

uint64_t sub_39E8C()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_39EC8(void *a1, uint64_t a2)
{
  return sub_37C88( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void (**)(uint64_t))(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_39ED8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v107 = a4;
  uint64_t v7 = sub_6C5C(&qword_284020);
  __chkstk_darwin(v7);
  unint64_t v106 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v98 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v98 - v17;
  uint64_t result = sub_72408(a3);
  if (v20)
  {
    uint64_t v21 = result;
    unint64_t v22 = v20;
    if (qword_283840 != -1) {
      swift_once(&qword_283840, sub_34E50);
    }
    if ((sub_881D0(v21, v22, (void *)qword_283E60) & 1) == 0) {
      return swift_bridgeObjectRelease(v22);
    }
    unint64_t v105 = v13;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v9, (uint64_t)qword_2969C8);
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v102 = v23;
    uint64_t v103 = v24;
    ((void (*)(char *))v24)(v18);
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v25 = swift_bridgeObjectRetain(v22);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.info.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v104 = a1;
    uint64_t v101 = v16;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc(22LL, -1LL);
      uint64_t v100 = v9;
      unint64_t v30 = a2;
      uint64_t v31 = v29;
      uint64_t v99 = swift_slowAlloc(64LL, -1LL);
      *(void *)&__int128 v110 = v99;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_bridgeObjectRetain(v30);
      uint64_t v108 = sub_6978(a1, v30, (uint64_t *)&v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109);
      swift_bridgeObjectRelease_n(v30, 3LL);
      *(_WORD *)(v31 + 1sub_6C3C(v0 + 2) = 2080;
      swift_bridgeObjectRetain(v22);
      uint64_t v108 = sub_6978(v21, v22, (uint64_t *)&v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109);
      swift_bridgeObjectRelease_n(v22, 3LL);
      _os_log_impl( &dword_0,  v26,  v27,  "CatService#catchAllForRadarFilingConsideration, catId: %s and category: %s, possible TTR candidate",  (uint8_t *)v31,  0x16u);
      uint64_t v32 = v99;
      swift_arrayDestroy(v99, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      uint64_t v33 = v31;
      a2 = v30;
      uint64_t v9 = v100;
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v22, 2LL);
      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
    v34(v18, v9);
    type metadata accessor for ErrorFilingProvider(0LL);
    uint64_t v35 = static ErrorFilingProvider.errorInfoForTitleKey.getter();
    uint64_t v37 = v36;
    uint64_t v38 = v107;
    if (*(void *)(v107 + 16) && (unint64_t v39 = sub_9A744(v35, v36), (v40 & 1) != 0))
    {
      sub_6C00(*(void *)(v38 + 56) + 32 * v39, (uint64_t)&v110);
    }

    else
    {
      __int128 v110 = 0u;
      __int128 v111 = 0u;
    }

    swift_bridgeObjectRelease(v37);
    if (*((void *)&v111 + 1))
    {
      int v41 = swift_dynamicCast(&v108, &v110, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
      if (v41) {
        uint64_t v42 = v108;
      }
      else {
        uint64_t v42 = 0LL;
      }
      if (v41) {
        unint64_t v43 = v109;
      }
      else {
        unint64_t v43 = 0LL;
      }
    }

    else
    {
      sub_1F6CC((uint64_t)&v110, &qword_284028);
      uint64_t v42 = 0LL;
      unint64_t v43 = 0LL;
    }

    uint64_t v44 = static ErrorFilingProvider.airplayNotRespondingParamsKey.getter();
    uint64_t v46 = v45;
    if (*(void *)(v38 + 16) && (unint64_t v47 = sub_9A744(v44, v45), (v48 & 1) != 0))
    {
      sub_6C00(*(void *)(v38 + 56) + 32 * v47, (uint64_t)&v110);
    }

    else
    {
      __int128 v110 = 0u;
      __int128 v111 = 0u;
    }

    swift_bridgeObjectRelease(v46);
    if (*((void *)&v111 + 1))
    {
      uint64_t v49 = swift_dynamicCast(&v108, &v110, (char *)&type metadata for Any + 8, &type metadata for Bool, 6LL);
      if (!(_DWORD)v49 || (v108 & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v50 = ((uint64_t (*)(void))static ErrorFilingProvider.errorInfoForParamsKey.getter)();
      uint64_t v52 = v51;
      if (*(void *)(v38 + 16) && (unint64_t v53 = sub_9A744(v50, v51), (v54 & 1) != 0))
      {
        sub_6C00(*(void *)(v38 + 56) + 32 * v53, (uint64_t)&v110);
      }

      else
      {
        __int128 v110 = 0u;
        __int128 v111 = 0u;
      }

      swift_bridgeObjectRelease(v52);
      if (*((void *)&v111 + 1))
      {
        uint64_t v55 = type metadata accessor for AirPlayRouteSetupContext(0LL);
        uint64_t v49 = swift_dynamicCast(&v108, &v110, (char *)&type metadata for Any + 8, v55, 6LL);
        if ((v49 & 1) != 0)
        {
          uint64_t v107 = v42;
          unint64_t v56 = a2;
          uint64_t v57 = v108;
          uint64_t v58 = v101;
          uint64_t v59 = v103(v101, v102, v9);
          uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
          os_log_type_t v61 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v62 = 0;
            _os_log_impl(&dword_0, v60, v61, "CatService#catchAllForRadarFilingConsideration SFA TTR attempt", v62, 2u);
            swift_slowDealloc(v62, -1LL, -1LL);
          }

          uint64_t v63 = ((uint64_t (*)(char *, uint64_t))v34)(v58, v9);
          uint64_t v64 = dispatch thunk of AirPlayRouteSetupContext.description.getter(v63);
          uint64_t v66 = v65;
          uint64_t v67 = dispatch thunk of AirPlayRouteSetupContext.airPlayRouteIDs.getter();
          uint64_t v68 = type metadata accessor for TTRComponentInfo(0LL);
          uint64_t v69 = v106;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56LL))(v106, 1LL, 1LL, v68);
          static ErrorFilingProvider.fileTTR(errorToReport:errorDomain:extraInfo:extraDescInfo:deviceIDs:attachmentURLs:ttrComponentInfo:title:duc:)( 0xD000000000000028LL,  0x800000000021D320LL,  0xD000000000000010LL,  0x800000000021D350LL,  0LL,  0LL,  v64,  v66,  v67,  0LL,  v69,  v107,  v43,  v104,  v56);
          swift_release(v57);
          swift_bridgeObjectRelease(v66);
          swift_bridgeObjectRelease(v67);
          swift_bridgeObjectRelease(v43);
          uint64_t v70 = (uint64_t)v69;
          return sub_1F6CC(v70, &qword_284020);
        }

LABEL_40:
        uint64_t v71 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v49);
        uint64_t v73 = v72;
        if (*(void *)(v38 + 16) && (unint64_t v74 = sub_9A744(v71, v72), (v75 & 1) != 0))
        {
          sub_6C00(*(void *)(v38 + 56) + 32 * v74, (uint64_t)&v110);
        }

        else
        {
          __int128 v110 = 0u;
          __int128 v111 = 0u;
        }

        swift_bridgeObjectRelease(v73);
        if (*((void *)&v111 + 1))
        {
          uint64_t v76 = swift_dynamicCast(&v108, &v110, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
          if ((v76 & 1) != 0)
          {
            uint64_t v78 = v108;
            unint64_t v77 = v109;
LABEL_55:
            uint64_t v85 = v103(v105, v102, v9);
LABEL_58:
            uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
            os_log_type_t v87 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v86, v87))
            {
              id v88 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              uint64_t v107 = v78;
              int64_t v89 = v34;
              unint64_t v90 = v43;
              uint64_t v91 = v9;
              unint64_t v92 = a2;
              id v93 = v88;
              *(_WORD *)id v88 = 0;
              _os_log_impl(&dword_0, v86, v87, "CatService#catchAllForRadarFilingConsideration TTR attempt", v88, 2u);
              uint64_t v94 = v93;
              a2 = v92;
              uint64_t v9 = v91;
              unint64_t v43 = v90;
              uint64_t v34 = v89;
              uint64_t v78 = v107;
              swift_slowDealloc(v94, -1LL, -1LL);
            }

            v34(v105, v9);
            if (v77)
            {
              uint64_t v95 = v104;
            }

            else
            {
              swift_bridgeObjectRetain(a2);
              uint64_t v95 = v104;
              uint64_t v78 = v104;
              unint64_t v77 = a2;
            }

            uint64_t v96 = type metadata accessor for TTRComponentInfo(0LL);
            uint64_t v97 = v106;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56LL))( v106,  1LL,  1LL,  v96);
            static ErrorFilingProvider.fileTTR(errorToReport:errorDomain:extraInfo:extraDescInfo:deviceIDs:attachmentURLs:ttrComponentInfo:title:duc:)( v78,  v77,  0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v97,  v42,  v43,  v95,  a2);
            swift_bridgeObjectRelease(v77);
            swift_bridgeObjectRelease(v43);
            uint64_t v70 = (uint64_t)v97;
            return sub_1F6CC(v70, &qword_284020);
          }
        }

        else
        {
          uint64_t v76 = sub_1F6CC((uint64_t)&v110, &qword_284028);
        }

        uint64_t v79 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v76);
        uint64_t v81 = v80;
        if (*(void *)(v38 + 16) && (unint64_t v82 = sub_9A744(v79, v80), (v83 & 1) != 0))
        {
          sub_6C00(*(void *)(v38 + 56) + 32 * v82, (uint64_t)&v110);
        }

        else
        {
          __int128 v110 = 0u;
          __int128 v111 = 0u;
        }

        swift_bridgeObjectRelease(v81);
        if (*((void *)&v111 + 1))
        {
          if ((swift_dynamicCast(&v108, &v110, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL) & 1) != 0)
          {
            *(void *)&__int128 v110 = v108;
            uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
            unint64_t v77 = v84;
            goto LABEL_55;
          }
        }

        else
        {
          sub_1F6CC((uint64_t)&v110, &qword_284028);
        }

        uint64_t v78 = 0LL;
        unint64_t v77 = 0LL;
        uint64_t v85 = v103(v105, v102, v9);
        goto LABEL_58;
      }
    }

    uint64_t v49 = sub_1F6CC((uint64_t)&v110, &qword_284028);
    goto LABEL_40;
  }

  return result;
}

    int64_t v127 = v150;
    v150[4] = 0LL;
    uint64_t result = 0.0;
    *int64_t v127 = 0u;
    v127[1] = 0u;
    return result;
  }

  (*(void (**)(void **, uint64_t))(v20 + 96))(v56, v19);
  uint64_t v68 = v145;
  uint64_t v69 = (uint64_t)v147;
  (*(void (**)(char *, void **, uint64_t))(v145 + 32))(v147, v56, v146);
  sub_1CF340(v69, (uint64_t)v156);
  sub_8747C((uint64_t)v156, (uint64_t)&v157);
  if (v158[48] == 255)
  {
    uint64_t v95 = v140;
    v144(v140, v143, v27);
    uint64_t v96 = *(uint64_t (**)(char *, char *, uint64_t))(v68 + 16);
    uint64_t v97 = v141;
    uint64_t v98 = v96(v141, v147, v146);
    uint64_t v99 = v27;
    uint64_t v100 = (os_log_s *)Logger.logObject.getter(v98);
    uint64_t v101 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      char v154 = swift_slowAlloc(32LL, -1LL);
      char v159 = v154;
      unint64_t v142 = v99;
      *(_DWORD *)uint64_t v102 = 136315138;
      uint64_t v153 = (char *)(v102 + 4);
      uint64_t v103 = v131;
      uint64_t v104 = v146;
      v96(v131, v97, v146);
      unint64_t v105 = String.init<A>(describing:)(v103, v104);
      uint64_t v107 = v106;
      uint64_t v155 = sub_6978(v105, v106, &v159);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v155, v156);
      swift_bridgeObjectRelease(v107);
      uint64_t v108 = *(void (**)(char *, uint64_t))(v145 + 8);
      v108(v97, v104);
      _os_log_impl( &dword_0,  v100,  v101,  "CommonAudioIntent#actionForInput received unsupported directInvocation: %s",  v102,  0xCu);
      unint64_t v109 = v154;
      swift_arrayDestroy(v154, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v109, -1LL, -1LL);
      swift_slowDealloc(v102, -1LL, -1LL);

      v55(v95, v142);
      v108(v147, v104);
    }

    else
    {

      uint64_t v122 = *(void (**)(char *, uint64_t))(v68 + 8);
      id v123 = v146;
      v122(v97, v146);
      v55(v95, v99);
      v122(v147, v123);
    }

    goto LABEL_40;
  }

  sub_45D94((uint64_t)&v157, (uint64_t)&v159);
  uint64_t v70 = type metadata accessor for DirectInvocationIntent(0LL);
  swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
  sub_B89C4( (uint64_t)&v159,  (void (*)(void, void, void, void, void, void, void, void))sub_45EC0);
  uint64_t v71 = sub_10D1F0((uint64_t)&v159);
  if (!v71)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v147, v146);
    sub_B89C4( (uint64_t)v156,  (void (*)(void, void, void, void, void, void, void, void))sub_45E08);
    goto LABEL_12;
  }

  uint64_t v72 = v71;
  uint64_t v73 = v150;
  v150[3] = v70;
  void v73[4] = sub_10430(&qword_287010, type metadata accessor for DirectInvocationIntent, (uint64_t)&unk_218258);
  sub_B89C4( (uint64_t)v156,  (void (*)(void, void, void, void, void, void, void, void))sub_45E08);
  *uint64_t v73 = v72;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v147, v146);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

      sub_1402A4((void **)&v36, &v35, &v34);
      return 1LL;
    }
  }

  else if (v7 >= -71)
  {
    uint64_t v11 = a4;
    if (a4 != __src || &__src[72 * v8] <= a4) {
      memmove(a4, __src, 72 * v8);
    }
    uint64_t v12 = &a4[72 * v8];
    uint64_t v34 = v12;
    if ((unint64_t)v5 < a3 && v7 >= 72)
    {
      uint64_t v13 = sub_6D68();
      uint64_t v14 = a4;
      while (1)
      {
        uint64_t v15 = *((void *)v5 + 3);
        uint64_t v16 = *((void *)v14 + 2);
        uint64_t v17 = *((void *)v14 + 3);
        uint64_t v32 = *((void *)v5 + 2);
        uint64_t v33 = v15;
        unint64_t v30 = v16;
        uint64_t v31 = v17;
        if (StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( &v30,  &type metadata for String,  &type metadata for String,  v13,  v13) == -1)
        {
          unint64_t v19 = v5 + 72;
          unint64_t v18 = v5;
          if (v6 == v5 && v6 < v19) {
            goto LABEL_18;
          }
        }

        else
        {
          uint64_t v11 = v14 + 72;
          unint64_t v18 = v14;
          unint64_t v19 = v5;
          if (v6 == v14)
          {
            v14 += 72;
            if (v6 < v11) {
              goto LABEL_18;
            }
          }

          else
          {
            v14 += 72;
          }
        }

        memmove(v6, v18, 0x48uLL);
LABEL_18:
        v6 += 72;
        if (v14 < v12)
        {
          uint64_t v5 = v19;
        }

        uint64_t v35 = v11;
        uint64_t v36 = v6;
        goto LABEL_40;
      }
    }

    goto LABEL_40;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1046LL,  0);
  __break(1u);
  return result;
}

  char v48 = String.lowercased()();
  uint64_t v49 = String.lowercased()();
  unint64_t v47 = v49._object;
  if (v48._object)
  {
    if (v48._countAndFlagsBits == v49._countAndFlagsBits && v48._object == v49._object)
    {
      swift_bridgeObjectRelease_n(v48._object, 2LL);
      uint64_t v50 = 1;
    }

    else
    {
      uint64_t v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v48._countAndFlagsBits, v48._object);
      swift_bridgeObjectRelease(v48._object);
      swift_bridgeObjectRelease(v49._object);
    }

    *(_BYTE *)(v30 + 28sub_6C3C(v0 + 8) = v50 & 1;
    *(void *)(v30 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
    strcpy((char *)(v30 + 320), "isWordOfTheDay");
    *(_BYTE *)(v30 + 335) = -18;
    uint64_t v51 = v96;
    goto LABEL_48;
  }

  uint64_t v46 = v27[2];
  unint64_t v47 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v47, &v81);
  uint64_t v49 = (void *)inited;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219300;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 40) = 0xE500000000000000LL;
  uint64_t v50 = (unint64_t)v79;
  uint64_t v51 = v72;
  if (!v79) {
    uint64_t v51 = 0LL;
  }
  uint64_t v52 = 0xE000000000000000LL;
  if (!v79) {
    uint64_t v50 = 0xE000000000000000LL;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v51;
  *(void *)(inited + 56) = v50;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 80) = 0x6369706F74LL;
  unint64_t v53 = v74;
  if (v10)
  {
    char v54 = v10;
  }

  else
  {
    unint64_t v53 = 0LL;
    char v54 = 0xE000000000000000LL;
  }

  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE500000000000000LL;
  *(void *)(inited + 96) = v53;
  *(void *)(inited + 104) = v54;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x72656469766F7270LL;
  uint64_t v55 = v73;
  if (v78) {
    uint64_t v52 = v78;
  }
  else {
    uint64_t v55 = 0LL;
  }
  *(void *)(inited + 136) = 0xE800000000000000LL;
  *(void *)(inited + 1sub_6C3C(v0 + 44) = v55;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = v52;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(inited + 176) = 0xD000000000000014LL;
  *(void *)(inited + 184) = 0x8000000000221A20LL;
  unint64_t v56 = sub_6C5C(&qword_28B600);
  v49[24] = v27;
  v49[27] = v56;
  v49[28] = 0xD00000000000001CLL;
  v49[33] = &type metadata for Int;
  v49[29] = 0x8000000000221A40LL;
  v49[30] = v46;
  uint64_t v78 = sub_74D54((uint64_t)v49);
  uint64_t v57 = *(void **)(v5 + 120);
  v80[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v80[4] = &off_272BD0;
  v80[0] = a2;
  uint64_t v58 = v57[4];
  uint64_t v59 = v57[5];
  uint64_t v60 = v57[6];
  os_log_type_t v61 = swift_allocObject(&unk_272320, 32LL, 7LL);
  uint64_t v79 = &v68;
  *(void *)(v61 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v61 + sub_6C3C(v0 + 24) = a4;
  __chkstk_darwin(v61);
  v67[2] = v59;
  v67[3] = v60;
  v67[4] = 0x7377654E79616C50LL;
  v67[5] = 0xEF74736163646F50LL;
  v67[6] = v58;
  uint64_t v62 = v78;
  v67[7] = v78;
  v67[8] = v77;
  v67[9] = v80;
  v67[10] = 0LL;
  uint64_t v63 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v61,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v59,  v60,  0x7377654E79616C50LL,  0xEF74736163646F50LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v67);
  swift_bridgeObjectRelease(v62);
  swift_release(v61);
  sub_1F6CC((uint64_t)v80, &qword_283FE8);
}

uint64_t sub_3A81C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_3A840()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_3A87C(uint64_t a1)
{
  return sub_36CBC( a1,  *(void (**)(uint64_t))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void (**)(char *, char *, uint64_t))(v1 + 56));
}

uint64_t sub_3A88C(uint64_t a1)
{
  return sub_363DC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_3A898()
{
  uint64_t v1 = sub_6C5C(qword_284050);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_3A8FC(uint64_t a1)
{
  return sub_364DC(a1);
}

uint64_t sub_3A948(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 96);
}

uint64_t sub_3A994(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject(&unk_26BC38, 40LL, 7LL);
  _BYTE v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  swift_retain(a2);
  swift_retain(v2);
  sub_1F19D8((uint64_t)sub_3B034, (uint64_t)v5);
  return swift_release(v5);
}

uint64_t sub_3AA10(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_289340);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v17);
  unint64_t v19 = (uint64_t *)((char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload(v19, v17) == 1)
  {
    v31[0] = *v19;
    uint64_t v20 = v31[0];
    char v32 = 1;
    swift_errorRetain(v31[0]);
    a2(v31);
    swift_errorRelease(v20);
    return sub_1F6CC((uint64_t)v31, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v30 = a3;
    uint64_t v22 = *(int *)(v11 + 48);
    uint64_t v23 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(char *, void *, uint64_t))(v24 + 32))(v16, v19, v23);
    uint64_t v25 = *(void **)((char *)v19 + v22);
    *(void *)&v16[v22] = v25;
    sub_6EA8((void *)(a4 + 24), *(void *)(a4 + 48));
    uint64_t v26 = *(int *)(v11 + 48);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v14, v16, v23);
    *(void *)&v14[v26] = v25;
    uint64_t v27 = type metadata accessor for NLContextUpdate(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v10, 1LL, 1LL, v27);
    id v28 = v25;
    sub_175200((uint64_t)v14, v28, (uint64_t)v10, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))a2, v30);

    sub_1F6CC((uint64_t)v10, (uint64_t *)&unk_286C50);
    sub_1F6CC((uint64_t)v16, &qword_289340);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v23);
  }

uint64_t sub_3AC6C()
{
  return v0;
}

uint64_t sub_3AC90()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for ContinueInAppPunchOutStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContinueInAppPunchOutStrategy);
}

uint64_t static NowPlayingIntentInfo.supportsSecureCoding.getter()
{
  return 1LL;
}

uint64_t sub_3ACD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  return sub_3AEC8(a1, a2, a4);
}

uint64_t sub_3ACE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for ContinueInAppPunchOutStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), a4);
  return ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:completion:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_3AD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:)[1]);
  *(void *)(v6 + sub_6C3C(v0 + 16) = v13;
  uint64_t v15 = type metadata accessor for ContinueInAppPunchOutStrategy(0LL, *(void *)(a5 + 80), *(void *)(a5 + 88), v14);
  *uint64_t v13 = v6;
  v13[1] = sub_3B08C;
  return ContinueInAppDialogFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:)(a1, a2, a3, a4, v15, a6);
}

uint64_t sub_3ADFC(uint64_t a1, uint64_t a2)
{
  return sub_3A994(a1, a2);
}

uint64_t sub_3AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc(async function pointer to UnlockDeviceFlowStrategy.makePromptForDeviceUnlock()[1]);
  *(void *)(v3 + sub_6C3C(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_11C64;
  return UnlockDeviceFlowStrategy.makePromptForDeviceUnlock()(a1, a2, a3);
}

uint64_t sub_3AE88(uint64_t a1)
{
  return swift_getWitnessTable(&unk_214A20, a1);
}

uint64_t sub_3AE98(uint64_t a1)
{
  return swift_getWitnessTable(&unk_214AB8, a1);
}

uint64_t sub_3AEA8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_214A88, a1);
}

uint64_t sub_3AEB8(uint64_t a1)
{
  return swift_getWitnessTable(&unk_214A50, a1);
}

uint64_t sub_3AEC8(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v6 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(a1, a2, 0LL);
  uint64_t v7 = sub_6C5C(&qword_287980);
  uint64_t v8 = swift_allocObject(v7, 40LL, 7LL);
  *(_OWORD *)(v8 + sub_6C3C(v0 + 16) = xmmword_214980;
  *(void *)(v8 + 3sub_6C3C(v0 + 2) = v6;
  v14[0] = v8;
  specialized Array._endMutation()(v8);
  uint64_t v9 = v14[0];
  memset(v12, 0, sizeof(v12));
  uint64_t v13 = 0LL;
  v14[3] = type metadata accessor for AceOutput(0LL);
  v14[4] = &protocol witness table for AceOutput;
  sub_10974(v14);
  id v10 = v6;
  AceOutput.init(commands:flowActivity:)(v9, v12);
  char v15 = 0;
  a3(v14);

  return sub_1F6CC((uint64_t)v14, (uint64_t *)&unk_286C60);
}

unint64_t sub_3AFCC()
{
  unint64_t result = qword_2840E8[0];
  if (!qword_2840E8[0])
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___SAIntentGroupLaunchAppWithIntent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_2840E8);
  }

  return result;
}

uint64_t sub_3B008()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_3B034(uint64_t a1)
{
  return sub_3AA10(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_3B040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_3B090(uint64_t a1)
{
  v2[0] = "(";
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 2LL, v2, a1 + 96);
}

uint64_t sub_3B0DC()
{
  return v0;
}

uint64_t sub_3B100()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for CommonMediaConfirmationSnippetProvider( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonMediaConfirmationSnippetProvider);
}

uint64_t sub_3B138(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  uint64_t v2 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v2);
  char v40 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  id v10 = (char *)&v37 - v9;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v12 = v38(v10, v11, v4);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v39 = v8;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v37 = v11;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v18;
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v19 = static Insights.responseFramework.getter(v18);
    unint64_t v21 = v20;
    uint64_t v43 = sub_6978(v19, v20, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    swift_bridgeObjectRelease(v21);
    _os_log_impl( &dword_0,  v13,  v14,  "CommonMediaConfirmationSnippetProvider#confirmationSnippetProvider... %{public}s",  v17,  0xCu);
    swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v22 = v18;
    uint64_t v8 = v39;
    swift_slowDealloc(v22, -1LL, -1LL);
    uint64_t v23 = v17;
    uint64_t v11 = v37;
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v10, v4);
  uint64_t v25 = v38(v8, v11, v4);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    id v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v29;
    *(_DWORD *)id v28 = 136446210;
    uint64_t v30 = static Insights.responseFramework.getter(v29);
    unint64_t v32 = v31;
    uint64_t v43 = sub_6978(v30, v31, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    swift_bridgeObjectRelease(v32);
    _os_log_impl( &dword_0,  v26,  v27,  "CommonMediaConfirmationSnippetProvider#confirmationSnippetProvider Returning empty snippet for non iOS device. %{public}s",  v28,  0xCu);
    swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);

    uint64_t v33 = v39;
  }

  else
  {

    uint64_t v33 = v8;
  }

  v24(v33, v4);
  uint64_t v34 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v35 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v40, 1LL, 1LL, v34);
  v42(v35);
  return sub_3B4D0(v35);
}

uint64_t sub_3B4D0(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3B510()
{
  uint64_t v1 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v15 = *(void *)(v0 + 24);
  uint64_t v25 = *(void *)(v0 + 32);
  uint64_t v14 = v25;
  sub_157C4(v0 + 40, (uint64_t)v28);
  swift_retain(v14);
  uint64_t v16 = swift_retain(v15);
  uint64_t v17 = static FeatureFlagProvider.shared.getter(v16);
  static StringsFileResolver.shared.getter(v17);
  uint64_t v18 = sub_6C5C(&qword_284250);
  uint64_t v19 = swift_allocObject(v18, 176LL, 7LL);
  uint64_t v20 = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v22 = v26;
  uint64_t v21 = v27;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v4, v6, v27);
  uint64_t v23 = sub_3B7D4(v25, v15, v28, (uint64_t)v11, (uint64_t)v4, v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v7);
  return v23;
}

void *sub_3B6C0()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  sub_157C4(v0 + 40, (uint64_t)v10);
  uint64_t v8 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v9 = &protocol witness table for FeatureFlagProvider;
  sub_10974(&v7);
  swift_retain(v1);
  uint64_t v3 = swift_retain(v2);
  static FeatureFlagProvider.shared.getter(v3);
  uint64_t v4 = sub_6C5C(&qword_284248);
  uint64_t v5 = (void *)swift_allocObject(v4, 120LL, 7LL);
  v5[14] = &off_269D08;
  _BYTE v5[2] = v1;
  v5[3] = v2;
  sub_FF54(v10, (uint64_t)(v5 + 4));
  sub_FF54(&v7, (uint64_t)(v5 + 9));
  return v5;
}

uint64_t sub_3B778()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t _s27NeedsDisambiguationStrategyCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin8AddMedia27NeedsDisambiguationStrategy);
}

uint64_t sub_3B7D4(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)(a6 + 72);
  uint64_t v13 = type metadata accessor for FeatureFlagProvider(0LL);
  *(void *)(a6 + 96) = v13;
  *(void *)(a6 + 104) = &protocol witness table for FeatureFlagProvider;
  uint64_t v14 = sub_10974(v12);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32LL))(v14, a4, v13);
  uint64_t v15 = type metadata accessor for StringsFileResolver(0LL);
  *(void *)(a6 + 1sub_6C3C(v0 + 44) = v15;
  *(void *)(a6 + 15sub_6C3C(v0 + 2) = &protocol witness table for StringsFileResolver;
  uint64_t v16 = sub_10974((void *)(a6 + 120));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL))(v16, a5, v15);
  *(void *)(a6 + 11sub_6C3C(v0 + 2) = &off_269CD8;
  strcpy((char *)(a6 + 160), "MediaItemType");
  *(_WORD *)(a6 + 174) = -4864;
  *(void *)(a6 + sub_6C3C(v0 + 16) = a1;
  *(void *)(a6 + sub_6C3C(v0 + 24) = a2;
  sub_FF54(a3, a6 + 32);
  return a6;
}

uint64_t sub_3B8D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(v5 + 120);
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  v27[3] = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
  v27[4] = &off_26DE60;
  v27[0] = a2;
  uint64_t v12 = v10[4];
  uint64_t v13 = v10[5];
  uint64_t v14 = v10[6];
  uint64_t v18 = v13;
  uint64_t v19 = v14;
  unint64_t v20 = 0xD000000000000018LL;
  unint64_t v21 = 0x800000000021D800LL;
  uint64_t v22 = v12;
  unint64_t v23 = v11;
  uint64_t v24 = a1;
  uint64_t v25 = v27;
  uint64_t v26 = 0LL;
  id v15 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v13,  v14,  0xD000000000000018LL,  0x800000000021D800LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v17);
  swift_bridgeObjectRelease(v11);
  return sub_1F6CC((uint64_t)v27, &qword_283FE8);
}

uint64_t sub_3B9F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v13, v33);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
  *(void *)(inited + 40) = 0xE900000000000072LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v15 = sub_74D54(inited);
  uint64_t v16 = *(void **)(v6 + 120);
  void v32[3] = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
  v32[4] = &off_26DE60;
  uint64_t v17 = v16[4];
  uint64_t v18 = v16[5];
  uint64_t v19 = v16[6];
  uint64_t v23 = v18;
  uint64_t v24 = v19;
  unint64_t v25 = 0xD000000000000012LL;
  unint64_t v26 = 0x800000000021D7E0LL;
  uint64_t v27 = v17;
  unint64_t v28 = v15;
  uint64_t v29 = a1;
  uint64_t v30 = v32;
  uint64_t v31 = 0LL;
  v32[0] = a4;
  id v20 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a5,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD000000000000012LL,  0x800000000021D7E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v15);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

uint64_t sub_3BB70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v13, v33);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
  *(void *)(inited + 40) = 0xE900000000000072LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v15 = sub_74D54(inited);
  uint64_t v16 = *(void **)(v6 + 120);
  void v32[3] = sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
  v32[4] = &off_26DE60;
  uint64_t v17 = v16[4];
  uint64_t v18 = v16[5];
  uint64_t v19 = v16[6];
  uint64_t v23 = v18;
  uint64_t v24 = v19;
  unint64_t v25 = 0xD00000000000001ALL;
  unint64_t v26 = 0x800000000021D7C0LL;
  uint64_t v27 = v17;
  unint64_t v28 = v15;
  uint64_t v29 = a1;
  uint64_t v30 = v32;
  uint64_t v31 = 0LL;
  v32[0] = a4;
  id v20 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a5,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD00000000000001ALL,  0x800000000021D7C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v15);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

uint64_t sub_3BCEC( uint64_t a1, uint64_t a2, uint64_t a3, id a4, void *a5, int a6, int a7, uint64_t a8, uint64_t a9)
{
  id v15 = [a4 unsupportedReason];
  id v16 = [a5 mediaItems];
  uint64_t v101 = a1;
  if (!v16) {
    goto LABEL_13;
  }
  uint64_t v17 = v16;
  uint64_t v18 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0) {
      uint64_t v23 = v19;
    }
    else {
      uint64_t v23 = v19 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v19);
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v19);
    if (v24) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }

  if (!*(void *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_12:
    swift_bridgeObjectRelease(v19);
LABEL_13:
    id v22 = 0LL;
    goto LABEL_14;
  }

uint64_t sub_3C9F4()
{
  return sub_6C3C((void *)(v0 + 128));
}

uint64_t sub_3CA10()
{
  return swift_deallocClassInstance(v0, 168LL, 7LL);
}

uint64_t type metadata accessor for SearchForMediaDialogProvider(uint64_t a1)
{
  uint64_t result = qword_284280;
  if (!qword_284280) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchForMediaDialogProvider);
  }
  return result;
}

uint64_t sub_3CA98(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  return swift_initClassMetadata2(a1, 256LL, 2LL, v2, a1 + 520);
}

uint64_t sub_3CAE8( void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, void (*a7)(uint64_t *), uint64_t a8, void *a9)
{
  uint64_t v70 = a1;
  uint64_t v66 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v66);
  uint64_t v67 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = type metadata accessor for Logger(0LL);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = (void *)swift_allocObject(&unk_26BDC8, 64LL, 7LL);
  void v19[2] = a4;
  v19[3] = a5;
  void v19[4] = a6;
  v19[5] = a7;
  id v68 = a7;
  v19[6] = a8;
  v19[7] = a9;
  swift_retain(a4);
  uint64_t v64 = a5;
  swift_retain(a5);
  id v20 = a6;
  uint64_t v69 = a8;
  swift_retain(a8);
  id v65 = a9;
  id v21 = [a2 mediaItems];
  if (!v21) {
    goto LABEL_14;
  }
  id v22 = v21;
  uint64_t v23 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0) {
      uint64_t v28 = v24;
    }
    else {
      uint64_t v28 = v24 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v24);
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v24);
    if (v29) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease(v24);
    goto LABEL_14;
  }

uint64_t sub_3D068()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_3D0AC(uint64_t a1)
{
  return sub_C1F84( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(uint64_t *))(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
}

uint64_t sub_3D0BC(uint64_t a1, uint64_t a2)
{
  return sub_350D8( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void **)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 72),  *(void *)(v2 + 80));
}

uint64_t sub_3D0F4()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v6 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v7 = static SiriKitTaskLoggingProvider.shared.getter(v6);
  static AceService.current.getter(v14);
  uint64_t v8 = type metadata accessor for AddMediaFlowStrategy(0LL);
  uint64_t v9 = swift_allocObject(v8, 136LL, 7LL);
  sub_157C4((uint64_t)v14, (uint64_t)v13);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v12);
  swift_retain(v7);
  uint64_t v10 = sub_3D498(v12, v7, v13, v9);
  sub_6C3C(v14);
  uint64_t result = swift_release(v7);
  qword_296830 = v10;
  return result;
}

uint64_t sub_3D224(uint64_t a1)
{
  return sub_3D25C( a1,  (void (*)(void))type metadata accessor for AddMedia.ChildFlowFactory,  sub_1B7D50,  &qword_296838);
}

uint64_t sub_3D240(uint64_t a1)
{
  return sub_3D25C( a1,  (void (*)(void))&type metadata accessor for INAddMediaIntentHandler,  (uint64_t (*)(void))&INAddMediaIntentHandler.__allocating_init(),  &static AddMedia.intentHandler);
}

uint64_t sub_3D25C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin();
  unint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = static FeatureFlagProvider.shared.getter(v9);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v12);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  a2(0LL);
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t *AddMedia.intentHandler.unsafeMutableAddressor()
{
  if (qword_283858 != -1) {
    swift_once(&qword_283858, sub_3D240);
  }
  return &static AddMedia.intentHandler;
}

id static AddMedia.intentHandler.getter()
{
  if (qword_283858 != -1) {
    swift_once(&qword_283858, sub_3D240);
  }
  swift_beginAccess(&static AddMedia.intentHandler, v1, 0LL, 0LL);
  return (id)static AddMedia.intentHandler;
}

void static AddMedia.intentHandler.setter(uint64_t a1)
{
  if (qword_283858 != -1) {
    swift_once(&qword_283858, sub_3D240);
  }
  swift_beginAccess(&static AddMedia.intentHandler, v3, 1LL, 0LL);
  uint64_t v2 = (void *)static AddMedia.intentHandler;
  static AddMedia.intentHandler = a1;
}

uint64_t (*static AddMedia.intentHandler.modify(uint64_t a1))(void)
{
  if (qword_283858 != -1) {
    swift_once(&qword_283858, sub_3D240);
  }
  swift_beginAccess(&static AddMedia.intentHandler, a1, 33LL, 0LL);
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for AddMedia()
{
  return &type metadata for AddMedia;
}

uint64_t sub_3D498(_OWORD *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  __int128 v15 = a1[3];
  v40[2] = a1[2];
  v40[3] = v15;
  v40[4] = a1[4];
  __int128 v16 = a1[1];
  v40[0] = *a1;
  v40[1] = v16;
  uint64_t v17 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  void v39[3] = v17;
  v39[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v39[0] = a2;
  *(void *)(a4 + sub_6C3C(v0 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + sub_6C3C(v0 + 24) = xmmword_214CA0;
  sub_157C4((uint64_t)a3, (uint64_t)&v36);
  int v18 = CATDefaultMode;
  uint64_t v19 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v20 = static MorphunProvider.shared.getter(v19);
  static FeatureFlagProvider.shared.getter(v20);
  uint64_t v21 = type metadata accessor for CatService();
  uint64_t v22 = swift_allocObject(v21, 300LL, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_156E8((uint64_t)v40, (uint64_t)&v33);
  swift_retain(v20);
  uint64_t v23 = sub_10FF64(&v33, v18, v20, &v36, (uint64_t)v12, v22);
  swift_release(v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  swift_release(v20);
  *(void *)(a4 + 40) = v23;
  uint64_t v34 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v35 = (_UNKNOWN **)&protocol witness table for StringsFileResolver;
  sub_10974(&v33);
  uint64_t v24 = swift_retain(v23);
  uint64_t v25 = static StringsFileResolver.shared.getter(v24);
  uint64_t v26 = static SiriKitTaskLoggingProvider.shared.getter(v25);
  uint64_t v37 = v17;
  id v38 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v36 = v26;
  uint64_t v27 = sub_6C5C(qword_284500);
  uint64_t v28 = (void *)swift_allocObject(v27, 120LL, 7LL);
  v28[13] = 0xD000000000000011LL;
  v28[14] = 0x800000000021D860LL;
  __int128 v28[2] = v23;
  sub_FF54(&v33, (uint64_t)(v28 + 3));
  sub_FF54(&v36, (uint64_t)(v28 + 8));
  *(void *)(a4 + 4sub_6C3C(v0 + 8) = v28;
  sub_157C4((uint64_t)v39, a4 + 56);
  uint64_t v34 = v8;
  uint64_t v35 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v29 = sub_10974(&v33);
  static FeatureFlagProvider.shared.getter(v29);
  uint64_t v30 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v31 = swift_allocObject(v30, 56LL, 7LL);
  sub_FF54(&v33, v31 + 16);
  uint64_t v35 = &off_272868;
  uint64_t v34 = v30;
  *(void *)&__int128 v33 = v31;
  sub_6C3C(a3);
  sub_6C3C(v39);
  sub_15858(v40);
  sub_FF54(&v33, a4 + 96);
  return a4;
}

uint64_t sub_3D790(uint64_t a1)
{
  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = "(";
  v2[4] = "(";
  void v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 6LL, v2, a1 + 96);
}

uint64_t sub_3D7FC@<X0>(uint64_t (*a1)(char *, uint64_t)@<X6>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v155 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v135 = (char *)v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  char v154 = (char *)v132 - v8;
  __chkstk_darwin(v7);
  NSString v146 = (char *)v132 - v9;
  uint64_t v10 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v10);
  Swift::Int v149 = (char *)v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v150 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v144 = *(void *)(v150 - 8);
  uint64_t v12 = __chkstk_darwin(v150);
  unint64_t v139 = (char *)v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  BOOL v141 = (char *)v132 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v142 = (char *)v132 - v17;
  __chkstk_darwin(v16);
  unint64_t v143 = (char *)v132 - v18;
  uint64_t v153 = type metadata accessor for Parse(0LL);
  uint64_t v156 = *(void *)(v153 - 8);
  uint64_t v19 = __chkstk_darwin(v153);
  char v145 = (char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v158 = (char *)v132 - v21;
  uint64_t v22 = type metadata accessor for Input(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v136 = (char *)v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v157 = (char *)v132 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v140 = (char *)v132 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v137 = (char *)v132 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v132 - v36;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v38 = sub_6960(v26, (uint64_t)qword_2969C8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v147 = v38;
  unint64_t v148 = v39;
  ((void (*)(char *))v39)(v37);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t (*)(void, void), uint64_t))(v23 + 16);
  char v159 = a1;
  uint64_t v41 = v40(v25, (uint64_t (*)(void, void))a1, v22);
  uint64_t v42 = v27;
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v44 = static os_log_type_t.default.getter();
  uint64_t v152 = v23;
  os_log_type_t v45 = v44;
  BOOL v46 = os_log_type_enabled(v43, v44);
  uint64_t v151 = a2;
  if (v46)
  {
    uint64_t v133 = v42;
    uint64_t v47 = swift_slowAlloc(12LL, -1LL);
    uint64_t v134 = v4;
    unint64_t v48 = (uint8_t *)v47;
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    uint64_t v138 = v26;
    uint64_t v50 = v49;
    v167[0] = v49;
    *(_DWORD *)unint64_t v48 = 136315138;
    v132[1] = v48 + 4;
    uint64_t v51 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v22, v51);
    unint64_t v54 = v53;
    *(void *)&__int128 v165 = sub_6978(v52, v53, v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8);
    swift_bridgeObjectRelease(v54);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v25, v22);
    _os_log_impl(&dword_0, v43, v45, "MediaDestinationDisambiguationStrategy#actionForInput input:%s", v48, 0xCu);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v55 = v50;
    uint64_t v26 = v138;
    swift_slowDealloc(v55, -1LL, -1LL);
    uint64_t v56 = v48;
    uint64_t v4 = v134;
    swift_slowDealloc(v56, -1LL, -1LL);

    unint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v133 + 8);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v152 + 8))(v25, v22);

    unint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
  }

  uint64_t v58 = v57(v37, v26);
  id v59 = v158;
  Input.parse.getter(v58);
  uint64_t v60 = v156;
  uint64_t v61 = v153;
  int v62 = (*(uint64_t (**)(char *, uint64_t))(v156 + 88))(v59, v153);
  uint64_t v64 = v154;
  uint64_t v63 = v155;
  id v65 = v157;
  if (v62 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v60 + 96))(v59, v61);
    uint64_t v66 = sub_6C5C(&qword_284618);
    swift_release(*(void *)&v59[*(int *)(v66 + 48)]);
    uint64_t v67 = type metadata accessor for NLIntent(0LL);
    uint64_t v68 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8LL))(v59, v67);
    uint64_t v69 = (uint64_t)v149;
  }

  else
  {
    if (v62 == enum case for Parse.directInvocation(_:))
    {
      uint64_t v70 = v158;
      (*(void (**)(char *, uint64_t))(v60 + 96))(v158, v61);
      uint64_t v71 = (uint64_t)v146;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v146, v70, v4);
      sub_1CF340(v71, (uint64_t)v162);
      sub_45F6C((uint64_t)v162, (uint64_t)v163, &qword_2845F0);
      if (v164 != 255)
      {
        sub_45D94((uint64_t)v163, (uint64_t)&v165);
        sub_45D94((uint64_t)&v165, (uint64_t)v167);
        int v72 = v170;
        sub_45DD0((uint64_t)v162);
        if (v72 == 3)
        {
          uint64_t v73 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v146, v4);
          return static ActionForInput.handle()(v73);
        }
      }

      v148(v65, v147, v26);
      unint64_t v94 = *(uint64_t (**)(char *, char *, uint64_t))(v63 + 16);
      uint64_t v95 = v94(v64, v146, v4);
      unint64_t v96 = (os_log_s *)Logger.logObject.getter(v95);
      os_log_type_t v97 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v138 = v26;
        uint64_t v98 = swift_slowAlloc(12LL, -1LL);
        char v159 = v57;
        uint64_t v99 = v4;
        uint64_t v100 = (uint8_t *)v98;
        uint64_t v101 = swift_slowAlloc(32LL, -1LL);
        uint64_t v161 = v101;
        *(_DWORD *)uint64_t v100 = 136315138;
        uint64_t v158 = (char *)(v100 + 4);
        uint64_t v102 = v135;
        v94(v135, v64, v99);
        uint64_t v103 = String.init<A>(describing:)(v102, v99);
        unint64_t v105 = v104;
        uint64_t v160 = sub_6978(v103, v104, &v161);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161);
        swift_bridgeObjectRelease(v105);
        unint64_t v106 = *(void (**)(char *, uint64_t))(v155 + 8);
        v106(v64, v99);
        _os_log_impl( &dword_0,  v96,  v97,  "MediaDestinationDisambiguationStrategy#actionForInput received unsupported directInvocation: %s",  v100,  0xCu);
        swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v101, -1LL, -1LL);
        uint64_t v107 = v100;
        uint64_t v4 = v99;
        swift_slowDealloc(v107, -1LL, -1LL);

        uint64_t v108 = v159(v157, v138);
      }

      else
      {
        unint64_t v106 = *(void (**)(char *, uint64_t))(v63 + 8);
        v106(v64, v4);

        uint64_t v108 = v57(v157, v26);
      }

      static ActionForInput.ignore()(v108);
      return ((uint64_t (*)(char *, uint64_t))v106)(v146, v4);
    }

    uint64_t v69 = (uint64_t)v149;
    if (v62 != enum case for Parse.pommesResponse(_:))
    {
      unint64_t v109 = v136;
      uint64_t v110 = ((uint64_t (*)(char *, uint64_t, uint64_t))v148)(v136, v147, v26);
      __int128 v111 = (os_log_s *)Logger.logObject.getter(v110);
      os_log_type_t v112 = static os_log_type_t.error.getter();
      BOOL v113 = os_log_type_enabled(v111, v112);
      os_log_t v114 = v158;
      if (v113)
      {
        uint64_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v115 = 0;
        _os_log_impl( &dword_0,  v111,  v112,  "MediaDestinationDisambiguationStrategy#actionForInput Ignorning unsupported parse",  v115,  2u);
        swift_slowDealloc(v115, -1LL, -1LL);
      }

      uint64_t v116 = v57(v109, v26);
      static ActionForInput.ignore()(v116);
      return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v114, v61);
    }

    id v74 = (id *)v158;
    (*(void (**)(char *, uint64_t))(v60 + 96))(v158, v61);
  }

  uint64_t v75 = (uint64_t)v145;
  Input.parse.getter(v68);
  double v76 = sub_B6EF8(v75, &v165);
  (*(void (**)(uint64_t, uint64_t, double))(v60 + 8))(v75, v61, v76);
  if (v166)
  {
    sub_FF54(&v165, (uint64_t)v167);
    uint64_t v77 = v168;
    uint64_t v78 = v169;
    sub_6EA8(v167, v168);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v77, v78);
    uint64_t v79 = v144;
    uint64_t v80 = v150;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v69, 1LL, v150) == 1)
    {
      sub_1F6CC(v69, &qword_284630);
LABEL_17:
      uint64_t v73 = sub_6C3C(v167);
      return static ActionForInput.handle()(v73);
    }

    uint64_t v88 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v143, v69, v80);
    id v89 = *(void (**)(char *, void, uint64_t))(v79 + 104);
    v89(v142, enum case for CommonAudio.Confirmation.cancel(_:), v80);
    uint64_t v90 = sub_10430( qword_286CD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
    dispatch thunk of RawRepresentable.rawValue.getter(&v165, v80, v90);
    dispatch thunk of RawRepresentable.rawValue.getter(v163, v80, v90);
    uint64_t v91 = *((void *)&v165 + 1);
    uint64_t v92 = *((void *)&v163[0] + 1);
    if (v165 == v163[0])
    {
      char v93 = 1;
      uint64_t v92 = *((void *)&v165 + 1);
    }

    else
    {
      char v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, *((void *)&v165 + 1));
    }

    swift_bridgeObjectRelease(v91);
    swift_bridgeObjectRelease(v92);
    uint64_t v117 = v144;
    uint64_t v118 = *(void (**)(char *, uint64_t))(v144 + 8);
    uint64_t v119 = v150;
    v118(v142, v150);
    uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    uint64_t v121 = v141;
    v120(v141, v143, v119);
    if ((v93 & 1) == 0)
    {
      v89(v139, enum case for CommonAudio.Confirmation.no(_:), v119);
      dispatch thunk of RawRepresentable.rawValue.getter(&v165, v119, v90);
      dispatch thunk of RawRepresentable.rawValue.getter(v163, v119, v90);
      uint64_t v122 = *((void *)&v165 + 1);
      uint64_t v123 = *((void *)&v163[0] + 1);
      if (v165 != v163[0])
      {
        uint64_t v130 = v119;
        char v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, *((void *)&v165 + 1));
        swift_bridgeObjectRelease(v122);
        swift_bridgeObjectRelease(v123);
        v118(v139, v130);
        v118(v141, v130);
        if ((v131 & 1) == 0)
        {
          v118(v143, v150);
          goto LABEL_17;
        }

        goto LABEL_34;
      }

      swift_bridgeObjectRelease_n(*((void *)&v165 + 1), 2LL);
      v118(v139, v119);
      uint64_t v121 = v141;
    }

    v118(v121, v119);
LABEL_34:
    unint64_t v124 = v137;
    uint64_t v125 = ((uint64_t (*)(char *, uint64_t, uint64_t))v148)(v137, v147, v88);
    unint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
    os_log_type_t v127 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v128 = 0;
      _os_log_impl(&dword_0, v126, v127, "MediaDestinationDisambiguationStrategy#actionForInput cancelled", v128, 2u);
      swift_slowDealloc(v128, -1LL, -1LL);
    }

    uint64_t v129 = v57(v124, v88);
    static ActionForInput.cancel()(v129);
    v118(v143, v150);
    return sub_6C3C(v167);
  }

  sub_1F6CC((uint64_t)&v165, &qword_284638);
  id v82 = v140;
  uint64_t v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v148)(v140, v147, v26);
  uint64_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl( &dword_0,  v84,  v85,  "MediaDestinationDisambiguationStrategy#actionForInput received invalid intent",  v86,  2u);
    swift_slowDealloc(v86, -1LL, -1LL);
  }

  uint64_t v87 = v57(v82, v26);
  return static ActionForInput.ignore()(v87);
}

void *sub_3E494(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_2845D8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_C7074(0, v12, 0);
  if (!v12) {
    return v26;
  }
  uint64_t v13 = a1 + 32;
  uint64_t v23 = v9;
  uint64_t v24 = (char *)&type metadata for Any + 8;
  while (1)
  {
    sub_6C00(v13, (uint64_t)v25);
    int v14 = swift_dynamicCast(v4, v25, v24, v5, 6LL);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v14) {
      break;
    }
    v15(v4, 0LL, 1LL, v5);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v11, v4, v5);
    v16(v9, v11, v5);
    uint64_t v17 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
    {
      sub_C7074(0, v17[2] + 1LL, 1);
      uint64_t v17 = v26;
    }

    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1)
    {
      sub_C7074(v18 > 1, v19 + 1, 1);
      uint64_t v17 = v26;
    }

    v17[2] = v19 + 1;
    unint64_t v20 = (unint64_t)v17
    uint64_t v9 = v23;
    v16((char *)v20, v23, v5);
    uint64_t v26 = v17;
    v13 += 32LL;
    if (!--v12) {
      return v17;
    }
  }

  v15(v4, 1LL, 1LL, v5);
  swift_release(v26);
  sub_1F6CC((uint64_t)v4, &qword_2845D8);
  return 0LL;
}

void *sub_3E6DC(uint64_t a1)
{
  int64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2) {
    return v12;
  }
  for (uint64_t i = a1 + 32; ; i += 32LL)
  {
    sub_6C00(i, (uint64_t)v11);
    uint64_t v4 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v5 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6LL);
    if (!(_DWORD)v5) {
      break;
    }
    id v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    uint64_t v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    uint64_t v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2) {
      return v12;
    }
  }

  id v10 = 0LL;
  swift_release(v12);

  return 0LL;
}

uint64_t sub_3E7F4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2845D8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_6C5C(&qword_2845F8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = *(int *)(v11 + 48);
  uint64_t v15 = (char *)v13 + v14;
  uint64_t v16 = (char *)a1 + v14;
  *uint64_t v13 = *a1;
  uint64_t v17 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  uint64_t v20 = INMediaDestination.playlistName.getter(v19);
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v15, v17);
  uint64_t v24 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  uint64_t v25 = (void *)swift_dynamicCastObjCClass(a2, v24);
  if (v25)
  {
    uint64_t v26 = v20;
    id v27 = [v25 mediaDestination];
    if (v27)
    {
      uint64_t v28 = v27;
      static INMediaDestination._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v29 = 0LL;
    }

    else
    {
      uint64_t v29 = 1LL;
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v7, v29, 1LL, v17);
    sub_45F6C((uint64_t)v7, (uint64_t)v9, &qword_2845D8);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1LL, v17);
    if ((_DWORD)v30 != 1)
    {
      uint64_t v32 = INMediaDestination.playlistName.getter(v30);
      uint64_t v34 = v33;
      v23(v9, v17);
      if (v22)
      {
        if (v34)
        {
          if (v26 == v32 && v22 == v34)
          {
            swift_bridgeObjectRelease(v22);
            char v31 = 1;
          }

          else
          {
            char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v22);
            swift_bridgeObjectRelease(v22);
          }

          uint64_t v22 = v34;
          goto LABEL_9;
        }

        goto LABEL_8;
      }

      if (v34)
      {
        char v31 = 0;
        uint64_t v22 = v34;
        goto LABEL_9;
      }

LABEL_20:
      char v31 = 1;
      return v31 & 1;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v9, 1LL, 1LL, v17);
  }

  sub_1F6CC((uint64_t)v9, &qword_2845D8);
  if (!v22) {
    goto LABEL_20;
  }
LABEL_8:
  char v31 = 0;
LABEL_9:
  swift_bridgeObjectRelease(v22);
  return v31 & 1;
}

        int v72 = v88;
        uint64_t v73 = v92(v88, v91, v60);
        id v74 = (os_log_s *)Logger.logObject.getter(v73);
        uint64_t v75 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v74, v75))
        {
          double v76 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)double v76 = 0;
          _os_log_impl(&dword_0, v74, v75, "TCCAcceptanceFlowStrategy#actionForInput cancelled", v76, 2u);
          uint64_t v77 = v76;
          int v72 = v88;
          swift_slowDealloc(v77, -1LL, -1LL);
        }

        uint64_t v78 = v43(v72, v60);
        static ActionForInput.cancel()(v78);
        v68(v93, v47);
        return sub_6C3C(v103);
      }

      swift_bridgeObjectRelease_n(*((void *)&v101 + 1), 2LL);
      v68(v85, v47);
    }

    v68(v69, v47);
    goto LABEL_20;
  }

  sub_1F6CC((uint64_t)&v101, &qword_284638);
  unint64_t v53 = v87;
  unint64_t v54 = v92(v87, v91, v20);
  uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
  uint64_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    unint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v57 = 0;
    _os_log_impl(&dword_0, v55, v56, "TCCAcceptanceFlowStrategy#actionForInput received invalid NL intent", v57, 2u);
    swift_slowDealloc(v57, -1LL, -1LL);
  }

  uint64_t v58 = v43(v53, v20);
  return static ActionForInput.ignore()(v58);
}

    uint64_t v6 = (v12 - 1) & v12;
  }

  uint64_t v13 = v11 + 4;
  if (v13 >= v23) {
    return swift_release(a1);
  }
  uint64_t v12 = *(void *)(v22 + 8 * v13);
  if (v12)
  {
    uint64_t v8 = v13;
    goto LABEL_20;
  }

  while (1)
  {
    uint64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v8 >= v23) {
      return swift_release(a1);
    }
    uint64_t v12 = *(void *)(v22 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }

    sub_30600();
    uint64_t v92 = v37;
    uint64_t v35 = v38;
    goto LABEL_21;
  }

  swift_bridgeObjectRelease(v30);
  uint64_t v91 = 0;
  uint64_t v92 = 0LL;
  uint64_t v35 = 0LL;
LABEL_22:
  v102[0] = a2;
  uint64_t v95 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v39 = MediaIntentCommons.getMediaType()(v95, &protocol witness table for INPlayMediaIntent);
  unint64_t v94 = sub_88294(v39, (uint64_t)&off_26ACE0);
  uint64_t v40 = [a2 mediaSearch];
  uint64_t v100 = a1;
  uint64_t v101 = a4;
  uint64_t v98 = (_BYTE *)v5;
  uint64_t v99 = a3;
  if (v40
    && (uint64_t v41 = v40, v42 = [v40 artistName], v41, v42))
  {
    char v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    os_log_type_t v44 = v43;
  }

  else
  {
    char v93 = 0LL;
    os_log_type_t v44 = 0LL;
  }

  os_log_type_t v45 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v45, &v103);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219320;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x747365427369LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  uint64_t v47 = [a2 mediaSearch];
  if (v47)
  {
    unint64_t v48 = v47;
    uint64_t v49 = [v47 genreNames];

    if (v49)
    {
      uint64_t v50 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, &type metadata for String);

      if (v50[2])
      {
        uint64_t v51 = v50[4];
        uint64_t v52 = v50[5];
        swift_bridgeObjectRelease(v50);
        unint64_t v53 = HIBYTE(v52) & 0xF;
        if ((v52 & 0x2000000000000000LL) == 0) {
          unint64_t v53 = v51 & 0xFFFFFFFFFFFFLL;
        }
        if (v53) {
          goto LABEL_36;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v50);
      }
    }
  }

  unint64_t v54 = [a2 mediaSearch];
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = (char *)[v54 sortOrder];

    unint64_t v57 = v56 == (_BYTE *)&dword_0 + 3;
    goto LABEL_37;
  }

      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v13);
      uint64_t v3 = v19;
      uint64_t v1 = v18;
      uint64_t v2 = v30;
      uint64_t v5 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
      uint64_t v6 = &selRef_serviceGroups;
LABEL_23:
      if (++v4 == v2)
      {
        uint64_t v28 = 0LL;
LABEL_28:
        swift_bridgeObjectRelease(v29);
        return v28;
      }
    }

    id v27 = v8;
LABEL_22:
    swift_bridgeObjectRelease(v27);
    goto LABEL_23;
  }

  return 0LL;
}

  if (String.count.getter(v23, v24) > 59)
  {
    swift_bridgeObjectRelease(v34);
  }

  else
  {
    id v74 = v23;
    uint64_t v75 = v24;
    uint64_t v78 = v28;
    uint64_t v79 = v34;
    uint64_t v41 = sub_6D68();
    uint64_t v42 = StringProtocol.contains<A>(_:)(&v78, &type metadata for String, &type metadata for String, v41, v41);
    swift_bridgeObjectRelease(v34);
    if ((v42 & 1) == 0) {
      goto LABEL_25;
    }
  }

  swift_bridgeObjectRelease(v24);
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
LABEL_25:
  uint64_t v43 = v68;
  os_log_type_t v44 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v44, &v80);
  BOOL v46 = inited;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_2168F0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 40) = 0xE500000000000000LL;
  uint64_t v47 = v71;
  if (!v11) {
    uint64_t v47 = 0LL;
  }
  unint64_t v48 = 0xE000000000000000LL;
  if (v11) {
    uint64_t v49 = v11;
  }
  else {
    uint64_t v49 = 0xE000000000000000LL;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v47;
  *(void *)(inited + 56) = v49;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 80) = 0x747369747261LL;
  if (v24) {
    uint64_t v50 = v23;
  }
  else {
    uint64_t v50 = 0LL;
  }
  if (v24) {
    unint64_t v48 = v24;
  }
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  *(void *)(inited + 96) = v50;
  *(void *)(inited + 104) = v48;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x756F436567617375LL;
  *(void *)(inited + 136) = 0xEA0000000000746ELL;
  uint64_t v51 = *sub_6EA8((void *)(v70 + 8), *(void *)(v70 + 32));
  swift_beginAccess(v51 + 16, &v78, 0LL, 0LL);
  uint64_t v52 = *(void *)(v51 + 16);
  if (*(void *)(v52 + 16))
  {
    swift_bridgeObjectRetain(v52);
    unint64_t v53 = sub_9A744(0xD00000000000001ALL, 0x800000000021D140LL);
    if ((v54 & 1) != 0) {
      uint64_t v55 = *(void *)(*(void *)(v52 + 56) + 8 * v53);
    }
    else {
      uint64_t v55 = 0LL;
    }
    swift_bridgeObjectRelease(v52);
  }

  else
  {
    uint64_t v55 = 0LL;
  }

  *(void *)(v46 + 16sub_6C3C(v0 + 8) = &type metadata for Int;
  *(void *)(v46 + 1sub_6C3C(v0 + 44) = v55;
  uint64_t v56 = sub_74D54(v46);
  double v76 = sub_BC728();
  uint64_t v77 = &off_272BD0;
  unint64_t v57 = v30;
  id v74 = (uint64_t)v30;
  uint64_t v58 = v43[4];
  id v59 = v43[5];
  uint64_t v60 = v43[6];
  uint64_t v61 = swift_allocObject(&unk_275B58, 32LL, 7LL);
  uint64_t v71 = &v65;
  int v62 = v67;
  *(void *)(v61 + sub_6C3C(v0 + 16) = v36;
  *(void *)(v61 + sub_6C3C(v0 + 24) = v62;
  __chkstk_darwin(v61);
  v64[2] = v59;
  v64[3] = v60;
  v64[4] = 0xD000000000000017LL;
  v64[5] = 0x8000000000223DD0LL;
  v64[6] = v58;
  v64[7] = v56;
  _BYTE v64[8] = v66;
  v64[9] = &v74;
  v64[10] = 0LL;
  uint64_t v63 = v57;
  swift_retain(v62);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v61,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v59,  v60,  0xD000000000000017LL,  0x8000000000223DD0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3D0BC,  (uint64_t)v64);
  swift_bridgeObjectRelease(v56);
  swift_release(v61);
  return sub_1F6CC((uint64_t)&v74, &qword_283FE8);
}

uint64_t sub_3EA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v57 = a2;
  uint64_t v58 = sub_6C5C(&qword_2845F8);
  uint64_t v7 = *(void *)(v58 - 8);
  uint64_t v8 = __chkstk_darwin(v58);
  uint64_t v56 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v45 - v14;
  __chkstk_darwin(v13);
  unint64_t v54 = (char *)&v45 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  uint64_t v53 = v16;
  uint64_t v47 = a3;
  uint64_t v48 = v4;
  uint64_t v45 = a1;
  uint64_t v46 = v7;
  if (!v16)
  {
LABEL_15:
    swift_bridgeObjectRelease(v45);
    uint64_t v41 = 1LL;
    uint64_t v42 = v47;
    goto LABEL_18;
  }

  uint64_t v17 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v18 = 0LL;
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v49 = *(void *)(v19 + 72);
  uint64_t v50 = v17;
  uint64_t v21 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v51 = v19;
  uint64_t v52 = v21;
  uint64_t v22 = v17;
  uint64_t v23 = v54;
  uint64_t v24 = v19;
  while (1)
  {
    uint64_t v25 = v58;
    uint64_t v26 = &v55[*(int *)(v58 + 48)];
    uint64_t v59 = v20;
    id v27 = v52;
    ((void (*)(char *))v52)(v26);
    uint64_t v28 = (char *)v23 + *(int *)(v25 + 48);
    *uint64_t v23 = v18;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v26, v22);
    sub_45F6C((uint64_t)v23, (uint64_t)v12, &qword_2845F8);
    uint64_t v29 = *(int *)(v25 + 48);
    uint64_t v30 = (char *)v56 + v29;
    *uint64_t v56 = *(void *)v12;
    uint64_t v31 = v27(v30, &v12[v29], v22);
    uint64_t v32 = INMediaDestination.playlistName.getter(v31);
    uint64_t v34 = v33;
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v30, v22);
    if (!v57)
    {
      if (!v34) {
        goto LABEL_14;
      }
LABEL_4:
      swift_bridgeObjectRelease(v34);
      goto LABEL_5;
    }

    uint64_t v36 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v35);
    uint64_t v38 = v37;
    if (!v34)
    {
      uint64_t v34 = v37;
      if (!v37)
      {
LABEL_14:
        uint64_t v40 = v45;
        goto LABEL_17;
      }

      goto LABEL_4;
    }

    if (!v37) {
      goto LABEL_4;
    }
    if (v32 == v36 && v34 == v37) {
      break;
    }
    char v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v38);
    if ((v39 & 1) != 0) {
      goto LABEL_14;
    }
LABEL_5:
    ++v18;
    sub_1F6CC((uint64_t)v12, &qword_2845F8);
    uint64_t v20 = v59 + v49;
    if (v53 == v18) {
      goto LABEL_15;
    }
  }

  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v34);
  uint64_t v40 = v38;
LABEL_17:
  swift_bridgeObjectRelease(v40);
  uint64_t v42 = v47;
  sub_45F6C((uint64_t)v12, v47, &qword_2845F8);
  uint64_t v41 = 0LL;
LABEL_18:
  uint64_t v43 = v57;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v42, v41, 1LL, v58);
  return swift_release(v43);
}

uint64_t sub_3ED88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v54 = sub_6C5C(&qword_2845F8);
  uint64_t v42 = *(void *)(v54 - 8);
  uint64_t v5 = __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v42 - v11;
  __chkstk_darwin(v10);
  uint64_t v51 = (uint64_t *)((char *)&v42 - v12);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v44 = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v50 = v13;
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease(v44);
    uint64_t v38 = 1LL;
    uint64_t v35 = v46;
    uint64_t v39 = v43;
    goto LABEL_14;
  }

  uint64_t v14 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v15 = 0LL;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = (char *)(v44 + ((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
  uint64_t v47 = *(void *)(v16 + 72);
  uint64_t v48 = v14;
  uint64_t v55 = v16;
  uint64_t v49 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v18 = &qword_2845F8;
  uint64_t v19 = v14;
  while (1)
  {
    uint64_t v20 = v54;
    uint64_t v21 = v9;
    uint64_t v22 = v18;
    uint64_t v23 = &v52[*(int *)(v54 + 48)];
    uint64_t v24 = v49;
    v49(v23, v17, v19);
    uint64_t v25 = v51;
    uint64_t v26 = (char *)v51 + *(int *)(v20 + 48);
    *uint64_t v51 = v15;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v26, v23, v19);
    uint64_t v27 = (uint64_t)v25;
    uint64_t v18 = v22;
    uint64_t v28 = v22;
    uint64_t v9 = v21;
    sub_45F6C(v27, (uint64_t)v21, v28);
    uint64_t v29 = *(int *)(v20 + 48);
    uint64_t v30 = (char *)v53 + v29;
    *uint64_t v53 = *(void *)v21;
    uint64_t v31 = v24(v30, &v21[v29], v19);
    uint64_t v32 = INMediaDestination.playlistName.getter(v31);
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v19);
    if (!v34) {
      goto LABEL_3;
    }
    uint64_t v35 = v46;
    if (v32 == v45 && v34 == v46) {
      break;
    }
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v34);
    swift_bridgeObjectRelease(v34);
    if ((v37 & 1) != 0)
    {
      swift_bridgeObjectRelease(v44);
      uint64_t v35 = v46;
      goto LABEL_13;
    }

LABEL_3:
    ++v15;
    sub_1F6CC((uint64_t)v21, v18);
    v17 += v47;
    if (v50 == v15) {
      goto LABEL_11;
    }
  }

  swift_bridgeObjectRelease(v44);
  swift_bridgeObjectRelease(v34);
LABEL_13:
  uint64_t v40 = (uint64_t)v21;
  uint64_t v39 = v43;
  sub_45F6C(v40, v43, &qword_2845F8);
  uint64_t v38 = 0LL;
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v39, v38, 1LL, v54);
  return swift_bridgeObjectRelease(v35);
}

      swift_bridgeObjectRelease(v8);
      continue;
    }

    uint64_t result = swift_bridgeObjectRelease(v8);
LABEL_12:
    uint64_t v20 = a1[v13];
    a1[v13] = v14 | v20;
    if ((v14 & v20) == 0 && __OFADD__(v31++, 1LL))
    {
      __break(1u);
      return result;
    }
  }

  swift_bridgeObjectRelease(a3);
  uint64_t v5 = a2;
  uint64_t v28 = v31;
LABEL_27:
  swift_retain(a4);
  return sub_C9558(a1, v5, v28, a4);
}

  uint64_t v17 = swift_bridgeObjectRetain(a3);
LABEL_9:
  uint64_t v20 = OutputGenerationManifest.additionalCommands.setter(a3, v17);
  uint64_t v21 = SiriEnvironment.currentRequest.getter(v20);
  CurrentRequest.responseMode.getter(v21);
  swift_release(v21);
  OutputGenerationManifest.responseMode.setter(v13);
  uint64_t v22 = *(int *)(v8 + 48);
  uint64_t v23 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v10, a5, v23);
  uint64_t v25 = *(void **)(a5 + v22);
  *(void *)&v10[v22] = v25;
  uint64_t v26 = [v25 catId];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  uint64_t v29 = v28;

  OutputGenerationManifest.responseViewId.setter(v27, v29);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
  return OutputGenerationManifest.preserveResultSpaceIfPossible.setter(1LL);
}

uint64_t sub_3F054@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v43 = a1;
  uint64_t v33 = a3;
  uint64_t v44 = sub_6C5C(&qword_2845F8);
  uint64_t v34 = *(void *)(v44 - 8);
  uint64_t v6 = __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v32 - v10;
  __chkstk_darwin(v9);
  uint64_t v41 = (uint64_t *)((char *)&v32 - v11);
  uint64_t v12 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain(a2);
  uint64_t v37 = v12;
  uint64_t v35 = a2;
  if (v12)
  {
    uint64_t v13 = type metadata accessor for INMediaDestination(0LL);
    uint64_t v14 = 0LL;
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t v16 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v36 = *(void *)(v15 + 72);
    uint64_t v40 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v38 = v13;
    uint64_t v39 = v17;
    uint64_t v18 = &qword_2845F8;
    uint64_t v19 = v13;
    while (1)
    {
      uint64_t v20 = v18;
      uint64_t v21 = v44;
      uint64_t v22 = (uint64_t)v8;
      uint64_t v23 = &v42[*(int *)(v44 + 48)];
      v39(v23, v16, v19);
      uint64_t v24 = *(int *)(v21 + 48);
      uint64_t v18 = v20;
      uint64_t v25 = (uint64_t)v41;
      uint64_t v26 = (char *)v41 + v24;
      *uint64_t v41 = v14;
      uint64_t v27 = v23;
      uint64_t v8 = (char *)v22;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v26, v27, v19);
      sub_45F6C(v25, v22, v18);
      char v28 = v43(v22);
      if (v4)
      {
        sub_1F6CC(v22, &qword_2845F8);
        return swift_bridgeObjectRelease(v35);
      }

      if ((v28 & 1) != 0) {
        break;
      }
      ++v14;
      sub_1F6CC(v22, v18);
      v16 += v36;
      if (v37 == v14) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease(v35);
    uint64_t v30 = v33;
    sub_45F6C(v22, v33, &qword_2845F8);
    uint64_t v29 = 0LL;
  }

  else
  {
LABEL_6:
    swift_bridgeObjectRelease(v35);
    uint64_t v29 = 1LL;
    uint64_t v30 = v33;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v30, v29, 1LL, v44);
}

uint64_t sub_3F298(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a3);
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    uint64_t v8 = 0LL;
    while (1)
    {
      id v9 = (a3 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a3)
         : *(id *)(a3 + 8 * v8 + 32);
      uint64_t v10 = v9;
      uint64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1LL)) {
        break;
      }
      v15[0] = v8;
      v15[1] = v9;
      char v12 = a1(v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v8;
      }

      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v8;
      }

      ++v8;
      if (v11 == v7) {
        goto LABEL_11;
      }
    }

    __break(1u);
LABEL_16:
    if (a3 < 0) {
      uint64_t v14 = a3;
    }
    else {
      uint64_t v14 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
  }

uint64_t sub_3F3C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9)
{
  uint64_t v112 = a6;
  BOOL v113 = a8;
  uint64_t v115 = (void *)a7;
  uint64_t v109 = a3;
  uint64_t v110 = a4;
  uint64_t v108 = a2;
  uint64_t v104 = a1;
  uint64_t v114 = a9;
  __int128 v111 = a5;
  uint64_t v92 = *a5;
  uint64_t v97 = type metadata accessor for Locale(0LL);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  unint64_t v94 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v101 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v103 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = v12;
  __chkstk_darwin(v11);
  uint64_t v107 = (uint64_t)&v91 - v13;
  uint64_t v105 = sub_6C5C(&qword_289340);
  uint64_t v98 = *(void *)(v105 - 8);
  uint64_t v14 = __chkstk_darwin(v105);
  uint64_t v100 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v99 = v15;
  __chkstk_darwin(v14);
  unint64_t v106 = (char *)&v91 - v16;
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v17);
  uint64_t v95 = (uint64_t)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v19);
  char v93 = (void (**)(char *, uint64_t *, uint64_t))((char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v104, (uint64_t)v34, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v34, v32) == 1)
  {
    uint64_t v107 = *v34;
    uint64_t v35 = v107;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.mdds(_:),  v28);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.SourceFunction.pfDis(_:),  v24);
    swift_getErrorValue(v35, v119, v118);
    uint64_t v36 = Error.localizedDescription.getter(v118[1], v118[2]);
    uint64_t v38 = v37;
    uint64_t v110 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v31,  v27,  v108,  v109,  v36,  v37,  v110,  1LL,  0);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    uint64_t v42 = v111[7];
    uint64_t v41 = v111[8];
    sub_6EA8(v111 + 4, v42);
    uint64_t v43 = enum case for ActivityType.failed(_:);
    uint64_t v44 = type metadata accessor for ActivityType(0LL);
    uint64_t v45 = *(void *)(v44 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v23, v43, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v23, 0LL, 1LL, v44);
    uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v47 = (uint64_t)v93;
    (*(void (**)(void (**)(char *, uint64_t *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))( v93,  1LL,  1LL,  v46);
    uint64_t v48 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v49 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 104))(v95, v48, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0LL, 1LL, v49);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v112,  v115,  v23,  v47,  v51,  v110,  v40,  0LL,  1,  v42,  v41);
    swift_bridgeObjectRelease(v40);
    sub_1F6CC(v51, &qword_2845A0);
    sub_1F6CC(v47, (uint64_t *)&unk_286BD0);
    sub_1F6CC((uint64_t)v23, &qword_2845A8);
    v116[0] = v107;
    char v117 = 1;
    uint64_t v52 = v107;
    swift_errorRetain(v107);
    v113(v116);
    swift_errorRelease(v52);
    uint64_t v53 = (uint64_t *)&unk_286C60;
    uint64_t v54 = (char *)v116;
  }

  else
  {
    uint64_t v55 = *(int *)(v105 + 48);
    uint64_t v56 = type metadata accessor for TemplatingResult(0LL);
    char v93 = *(void (***)(char *, uint64_t *, uint64_t))(v56 - 8);
    uint64_t v57 = v106;
    v93[4](v106, v34, v56);
    uint64_t v58 = *(void **)((char *)v34 + v55);
    *(void *)&v57[v55] = v58;
    uint64_t v59 = (uint64_t *)v57;
    id v91 = v58;
    uint64_t v60 = sub_6C5C(&qword_284598);
    uint64_t v61 = PaginatedItemContainer.page.getter();
    uint64_t v63 = *(void *)(v92 + 80);
    uint64_t v62 = *(void *)(v92 + 88);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    uint64_t v104 = AssociatedTypeWitness;
    uint64_t v95 = swift_getAssociatedTypeWitness(0LL);
    uint64_t v65 = v107;
    uint64_t v66 = v112;
    sub_9530C((uint64_t)v115, v61, v112, AssociatedTypeWitness, v95, v107);
    swift_bridgeObjectRelease(v61);
    uint64_t v67 = PaginatedItemContainer.items.getter(v60);
    uint64_t v68 = (uint64_t)v94;
    static SiriAudioEnvironment.siriLocale.getter(v67);
    uint64_t v69 = sub_80BA8(v68, v67, 1);
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v68, v97);
    uint64_t v70 = sub_3FC40(v67);
    swift_bridgeObjectRelease(v67);
    uint64_t v71 = type metadata accessor for SiriKitDisambiguationList(0LL);
    swift_allocObject(v71, *(unsigned int *)(v71 + 48), *(unsigned __int16 *)(v71 + 52));
    uint64_t v97 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v70,  v69,  1LL,  0LL);
    uint64_t v72 = *(int *)(v105 + 48);
    uint64_t v73 = (uint64_t)v100;
    v93[2](v100, v59, v56);
    *(void *)(v73 + v7sub_6C3C(v0 + 2) = v91;
    uint64_t v74 = v65;
    uint64_t v75 = v103;
    sub_FF10(v74, v103, (uint64_t *)&unk_286C50);
    uint64_t v76 = *(unsigned __int8 *)(v98 + 80);
    uint64_t v77 = (v76 + 96) & ~v76;
    uint64_t v78 = *(unsigned __int8 *)(v101 + 80);
    uint64_t v79 = (v99 + v78 + v77) & ~v78;
    uint64_t v80 = (void *)swift_allocObject(&unk_26BF80, v79 + v102, v76 | v78 | 7);
    v80[2] = v63;
    v80[3] = v62;
    uint64_t v81 = v109;
    v80[4] = v108;
    v80[5] = v81;
    uint64_t v83 = (void *)v110;
    id v82 = v111;
    v80[6] = v110;
    v80[7] = v82;
    uint64_t v84 = v115;
    v80[8] = v66;
    v80[9] = v84;
    uint64_t v85 = (uint64_t)v80 + v77;
    uint64_t v86 = v114;
    v80[10] = v113;
    v80[11] = v86;
    sub_45F6C(v73, v85, &qword_289340);
    sub_45F6C(v75, (uint64_t)v80 + v79, (uint64_t *)&unk_286C50);
    swift_bridgeObjectRetain(v81);
    id v87 = v83;
    swift_retain(v82);
    swift_retain(v66);
    id v88 = v84;
    swift_retain(v86);
    uint64_t v89 = v97;
    sub_F30B0(v66, v97, (void (*)(void, void))sub_45CAC, (uint64_t)v80);
    swift_release(v89);
    swift_release(v80);
    sub_1F6CC(v107, (uint64_t *)&unk_286C50);
    uint64_t v54 = v106;
    uint64_t v53 = &qword_289340;
  }

  return sub_1F6CC((uint64_t)v54, v53);
}

void *sub_3FC40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_C70A0(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast(v15, v5, v2, (char *)&type metadata for Any + 8, 7LL);
      uint64_t v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_C70A0(0, v7[2] + 1LL, 1);
        uint64_t v7 = v16;
      }

      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_C70A0(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v16;
      }

      v7[2] = v12 + 1;
      sub_21964(v15, &v7[4 * v12 + 4]);
      v8 += v9;
      --v6;
    }

    while (v6);
  }

  return v7;
}

void *sub_3FDB4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_C70BC(0, v1, 0);
    uint64_t v3 = (void *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(*v3);
      if (v6 >= v7 >> 1) {
        sub_C70BC(v7 > 1, v6 + 1, 1);
      }
      v3 += 2;
      _swiftEmptyArrayStorage[2] = v6 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v6];
      void v8[4] = v5;
      v8[5] = v4;
      --v1;
    }

    while (v1);
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_3FE80(uint64_t a1)
{
  return sub_40018(a1, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
}

void *sub_3FE94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_C70A0(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v7 = v4[1];
      uint64_t v9 = v4[2];
      uint64_t v8 = v4[3];
      uint64_t v10 = v4[4];
      unint64_t v11 = (void *)v4[5];
      uint64_t v12 = v4[6];
      v17[0] = *(v4 - 2);
      v17[1] = v5;
      v17[2] = v6;
      void v17[3] = v7;
      void v17[4] = v9;
      v17[5] = v8;
      v17[6] = v10;
      v17[7] = v11;
      v17[8] = v12;
      swift_bridgeObjectRetain(v8);
      swift_retain(v10);
      id v13 = v11;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRetain(v7);
      swift_dynamicCast(v18, v17, &type metadata for DisplayApp, (char *)&type metadata for Any + 8, 7LL);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_C70A0(0, v2[2] + 1LL, 1);
        uint64_t v2 = v19;
      }

      unint64_t v15 = v2[2];
      unint64_t v14 = v2[3];
      if (v15 >= v14 >> 1)
      {
        sub_C70A0(v14 > 1, v15 + 1, 1);
        uint64_t v2 = v19;
      }

      void v2[2] = v15 + 1;
      sub_21964(v18, &v2[4 * v15 + 4]);
      v4 += 9;
      --v1;
    }

    while (v1);
  }

  return v2;
}

uint64_t sub_40004(uint64_t a1)
{
  return sub_40018(a1, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
}

uint64_t sub_40018(uint64_t a1, unint64_t *a2, void *a3)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v18 = a1;
    }
    else {
      uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t result = sub_C70A0(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000LL) == 0)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      for (uint64_t i = 0LL; i != v6; ++i)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        uint64_t v10 = sub_1641C(0LL, a2, a3);
        swift_dynamicCast(v20, &v19, v10, (char *)&type metadata for Any + 8, 7LL);
        uint64_t v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_C70A0(0, v7[2] + 1LL, 1);
          uint64_t v7 = v21;
        }

        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1)
        {
          sub_C70A0(v11 > 1, v12 + 1, 1);
          uint64_t v7 = v21;
        }

        v7[2] = v12 + 1;
        sub_21964(v20, &v7[4 * v12 + 4]);
      }
    }

    else
    {
      id v13 = (id *)(a1 + 32);
      uint64_t v14 = sub_1641C(0LL, a2, a3);
      do
      {
        id v19 = *v13;
        id v15 = v19;
        swift_dynamicCast(v20, &v19, v14, (char *)&type metadata for Any + 8, 7LL);
        uint64_t v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_C70A0(0, v7[2] + 1LL, 1);
          uint64_t v7 = v21;
        }

        unint64_t v17 = v7[2];
        unint64_t v16 = v7[3];
        if (v17 >= v16 >> 1)
        {
          sub_C70A0(v16 > 1, v17 + 1, 1);
          uint64_t v7 = v21;
        }

        v7[2] = v17 + 1;
        sub_21964(v20, &v7[4 * v17 + 4]);
        ++v13;
        --v6;
      }

      while (v6);
    }

    return (uint64_t)v7;
  }

  __break(1u);
  return result;
}

uint64_t sub_40268( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void (*a9)(__int128 *), uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v96 = a7;
  uint64_t v97 = a8;
  uint64_t v90 = a6;
  uint64_t v89 = a5;
  uint64_t v88 = a4;
  uint64_t v87 = a3;
  uint64_t v92 = a1;
  uint64_t v98 = a9;
  uint64_t v99 = a10;
  uint64_t v83 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v83);
  uint64_t v84 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = type metadata accessor for AceOutput(0LL);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  id v91 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v19);
  uint64_t v95 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v21);
  unint64_t v94 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v23);
  char v93 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(char *, void, uint64_t))(v30 + 104))( v33,  enum case for AdditionalMetricsDescription.ModuleName.mdds(_:),  v29);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.SourceFunction.pfDis(_:),  v25);
    uint64_t v58 = v92;
    swift_getErrorValue(v92, v101, v100);
    uint64_t v59 = v100[1];
    uint64_t v60 = v100[2];
    swift_errorRetain(v58);
    uint64_t v61 = Error.localizedDescription.getter(v59, v60);
    uint64_t v63 = v62;
    id v91 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v33,  v28,  v87,  v88,  v61,  v62,  v89,  2LL,  0);
    uint64_t v65 = v64;
    swift_bridgeObjectRelease(v63);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
    uint64_t v67 = v90[7];
    uint64_t v66 = v90[8];
    uint64_t v90 = sub_6EA8(v90 + 4, v67);
    uint64_t v68 = enum case for ActivityType.failed(_:);
    uint64_t v69 = type metadata accessor for ActivityType(0LL);
    uint64_t v70 = *(void *)(v69 - 8);
    uint64_t v71 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v93, v68, v69);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0LL, 1LL, v69);
    uint64_t v72 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v73 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v94, 1LL, 1LL, v72);
    uint64_t v74 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v75 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 104))(v95, v74, v75);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v77, 0LL, 1LL, v75);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v96,  v97,  v71,  v73,  v77,  v91,  v65,  0LL,  1,  v67,  v66);
    swift_bridgeObjectRelease(v65);
    sub_1F6CC(v77, &qword_2845A0);
    sub_1F6CC(v73, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v71, &qword_2845A8);
    *(void *)&__int128 v102 = v58;
    char v105 = 1;
    swift_errorRetain(v58);
    v98(&v102);
    sub_25404(v58, 1);
  }

  else
  {
    uint64_t v81 = v14;
    uint64_t v82 = a11;
    char v34 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v31);
    uint64_t v104 = 0LL;
    __int128 v102 = 0u;
    __int128 v103 = 0u;
    static AceOutputHelper.makeClarificationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( a11,  v34 & 1,  v92,  1LL,  1LL,  a12,  _swiftEmptyArrayStorage,  &v102);
    sub_1F6CC((uint64_t)&v102, &qword_2845C8);
    (*(void (**)(char *, void, uint64_t))(v30 + 104))( v33,  enum case for AdditionalMetricsDescription.ModuleName.mdds(_:),  v29);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.SourceFunction.pfDis(_:),  v25);
    uint64_t v35 = v81;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))( v17,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v81);
    uint64_t v92 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v33,  v28,  v87,  v88,  v17,  v89,  2LL,  0LL);
    uint64_t v89 = v36;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v35);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
    uint64_t v37 = v90[7];
    uint64_t v38 = v90[8];
    sub_6EA8(v90 + 4, v37);
    uint64_t v39 = enum case for ActivityType.disambiguation(_:);
    uint64_t v40 = type metadata accessor for ActivityType(0LL);
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v93, v39, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0LL, 1LL, v40);
    uint64_t v43 = *(int *)(v83 + 48);
    uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = v84;
    uint64_t v47 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v84, v82, v44);
    *(void *)&v46[v43] = *(void *)(v47 + v43);
    uint64_t v48 = (uint64_t)v94;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v94, v46, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v48, 0LL, 1LL, v44);
    uint64_t v49 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v50 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 104))(v95, v49, v50);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0LL, 1LL, v50);
    uint64_t v79 = v37;
    uint64_t v53 = v89;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v96,  v97,  v42,  v48,  v52,  v92,  v89,  0LL,  1,  v79,  v38);
    swift_bridgeObjectRelease(v53);
    sub_1F6CC(v52, &qword_2845A0);
    sub_1F6CC(v48, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v42, &qword_2845A8);
    uint64_t v54 = v86;
    *((void *)&v103 + 1) = v86;
    uint64_t v104 = &protocol witness table for AceOutput;
    uint64_t v55 = sub_10974(&v102);
    uint64_t v56 = v85;
    uint64_t v57 = v91;
    (*(void (**)(void *, char *, uint64_t))(v85 + 16))(v55, v91, v54);
    char v105 = 0;
    v98(&v102);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v54);
  }

  return sub_1F6CC((uint64_t)&v102, (uint64_t *)&unk_286C60);
}

void sub_40A40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7)
{
  uint64_t v88 = a7;
  uint64_t v89 = a4;
  uint64_t v85 = a6;
  uint64_t v86 = a5;
  uint64_t v90 = a3;
  uint64_t v83 = *(uint8_t **)a2;
  uint64_t v9 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  __chkstk_darwin(v9);
  uint64_t v80 = (uint64_t)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint8_t *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = sub_6C5C(&qword_289340);
  uint64_t v14 = __chkstk_darwin(v87);
  uint64_t v79 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v84 = (char *)v78 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v78 - v18;
  uint64_t v20 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v29);
  uint64_t v31 = (void *)((char *)v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v31, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v31, v29) == 1)
  {
    uint64_t v32 = *v31;
    uint64_t v33 = *(void *)(a2 + 56);
    uint64_t v34 = *(void *)(a2 + 64);
    sub_6EA8((void *)(a2 + 32), v33);
    uint64_t v35 = enum case for ActivityType.failed(_:);
    uint64_t v36 = type metadata accessor for ActivityType(0LL);
    uint64_t v37 = *(void *)(v36 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v28, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v28, 0LL, 1LL, v36);
    uint64_t v38 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v25, 1LL, 1LL, v38);
    uint64_t v39 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v40 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v41 = *(void *)(v40 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v22, v39, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v22, 0LL, 1LL, v40);
    swift_getErrorValue(v32, v94, v93);
    uint64_t v42 = Error.localizedDescription.getter(v93[1], v93[2]);
    uint64_t v44 = v43;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v90,  v89,  v28,  v25,  v22,  v42,  v43,  0LL,  1,  v33,  v34);
    swift_bridgeObjectRelease(v44);
    sub_1F6CC((uint64_t)v22, &qword_2845A0);
    sub_1F6CC((uint64_t)v25, (uint64_t *)&unk_286BD0);
    sub_1F6CC((uint64_t)v28, &qword_2845A8);
    v91[0] = v32;
    char v92 = 1;
    swift_errorRetain(v32);
    v86(v91);
    swift_errorRelease(v32);
    sub_1F6CC((uint64_t)v91, (uint64_t *)&unk_286C60);
    return;
  }

  uint64_t v45 = *(int *)(v87 + 48);
  uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v47 = *(void *)(v46 - 8);
  (*(void (**)(char *, uint64_t *, uint64_t))(v47 + 32))(v19, v31, v46);
  uint64_t v48 = *(void **)((char *)v31 + v45);
  *(void *)&v19[v45] = v48;
  id v49 = v48;
  v78[0] = sub_6C5C(&qword_284598);
  uint64_t v50 = PaginatedItemContainer.page.getter();
  uint64_t v52 = *((void *)v83 + 10);
  uint64_t v51 = *((void *)v83 + 11);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
  v78[2] = v51;
  v78[1] = v52;
  unint64_t v54 = swift_getAssociatedTypeWitness(0LL);
  uint64_t v83 = v13;
  sub_9530C(v89, v50, v90, AssociatedTypeWitness, v54, (uint64_t)v13);
  swift_bridgeObjectRelease(v50);
  uint64_t v55 = v87;
  uint64_t v56 = *(int *)(v87 + 48);
  uint64_t v90 = v47;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v58 = v46;
  uint64_t v59 = v84;
  v57(v84, v19, v46);
  *(void *)&v59[v56] = v49;
  id v60 = [v49 dialog];
  uint64_t v61 = sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
  uint64_t v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

  if ((unint64_t)v62 >> 62)
  {
    if (v62 < 0) {
      uint64_t v71 = v62;
    }
    else {
      uint64_t v71 = v62 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v62);
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v62);
    if (v63) {
      goto LABEL_5;
    }
LABEL_13:
    uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))v57;
    uint64_t v65 = (uint64_t)v19;
    swift_bridgeObjectRelease(v62);
    uint64_t v70 = 0xE000000000000000LL;
    goto LABEL_14;
  }

  uint64_t v63 = *(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8LL));
  if (!v63) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v62 & 0xC000000000000001LL) != 0)
  {
    uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))v57;
    uint64_t v65 = (uint64_t)v19;
    id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v62);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    uint64_t v64 = (void (*)(char *, uint64_t, uint64_t))v57;
    uint64_t v65 = (uint64_t)v19;
    id v66 = *(id *)(v62 + 32);
  }

  uint64_t v67 = v66;
  swift_bridgeObjectRelease(v62);
  id v68 = [v67 fullPrint];

  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
  uint64_t v70 = v69;

LABEL_14:
  uint64_t v72 = *(void (**)(char *, uint64_t))(v90 + 8);
  v72(v84, v58);
  uint64_t v73 = PaginatedItemContainer.items.getter(v78[0]);
  uint64_t v74 = v80;
  sub_4113C(v63, v70, v73, v80);
  swift_bridgeObjectRelease(v73);
  swift_bridgeObjectRelease(v70);
  uint64_t v75 = *(int *)(v55 + 48);
  uint64_t v76 = (uint64_t)v79;
  v64(v79, v65, v58);
  *(void *)(v76 + v7sub_6C3C(v0 + 5) = v49;
  uint64_t v77 = v83;
  sub_4520C(v74, v76, v49, v83, (uint64_t)v86, v85);

  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v74, v82);
  sub_1F6CC((uint64_t)v77, (uint64_t *)&unk_286C50);
  sub_1F6CC(v65, &qword_289340);
  v72((char *)v76, v58);
}

uint64_t sub_4113C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v70 = a4;
  uint64_t v4 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v4);
  uint64_t v76 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = type metadata accessor for SiriAudioDisambiguationItemModel(0LL);
  uint64_t v6 = *(void *)(v79 - 8);
  uint64_t v7 = __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v63 - v9;
  uint64_t v10 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v71 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v63 - v18;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v64 = v20;
  uint64_t v65 = v21;
  uint64_t v22 = ((uint64_t (*)(char *))v21)(v19);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = v11;
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v23, v24, "MediaItemDisambiguationStrategy#disambiguationSnippet...", v26, 2u);
    uint64_t v27 = v26;
    uint64_t v11 = v25;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v67 = v14;
  id v66 = v28;
  v28(v19, v14);
  v83[0] = _swiftEmptyArrayStorage;
  uint64_t v29 = *(void *)(v72 + 16);
  if (v29)
  {
    uint64_t v30 = v72 + ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v31 = *(void *)(v11 + 72);
    uint64_t v32 = *(void (**)(void, void, void))(v11 + 16);
    int v33 = enum case for INMediaDestination.playlist(_:);
    swift_bridgeObjectRetain(v72);
    uint64_t v74 = v32;
    uint64_t v75 = v11;
    int v73 = v33;
    uint64_t v34 = v77;
    do
    {
      v32(v13, v30, v10);
      if ((*(unsigned int (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v10) == v33)
      {
        (*(void (**)(uint64_t *, uint64_t))(v11 + 96))(v13, v10);
        uint64_t v35 = *v13;
        uint64_t v36 = v13[1];
        uint64_t v37 = type metadata accessor for URL(0LL);
        uint64_t v38 = v76;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v76, 1LL, 1LL, v37);
        swift_bridgeObjectRetain(v36);
        SiriAudioDisambiguationItemModel.init(id:title:subtitle:imageURL:)(v35, v36, v35, v36, 0LL, 0LL, v38);
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v78, v34, v79);
        unint64_t v39 = v83[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v83[0]) & 1) == 0) {
          unint64_t v39 = sub_C7044(0, *(void *)(v39 + 16) + 1LL, 1, v39);
        }
        unint64_t v41 = *(void *)(v39 + 16);
        unint64_t v40 = *(void *)(v39 + 24);
        if (v41 >= v40 >> 1) {
          unint64_t v39 = sub_C7044(v40 > 1, v41 + 1, 1, v39);
        }
        *(void *)(v39 + sub_6C3C(v0 + 16) = v41 + 1;
        unint64_t v42 = v39
        uint64_t v43 = v79;
        (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v42, v78, v79);
        v83[0] = v39;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v77, v43);
        uint64_t v32 = v74;
        uint64_t v11 = v75;
        int v33 = v73;
      }

      else
      {
        (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
      }

      v30 += v31;
      --v29;
    }

    while (v29);
    swift_bridgeObjectRelease(v72);
  }

  uint64_t v44 = v71;
  uint64_t v45 = v67;
  uint64_t v46 = v65(v71, v64, v67);
  uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    id v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    v82[0] = v50;
    *(_DWORD *)id v49 = 136315138;
    swift_beginAccess(v83, v81, 0LL, 0LL);
    uint64_t v51 = v83[0];
    uint64_t v52 = swift_bridgeObjectRetain(v83[0]);
    uint64_t v53 = Array.description.getter(v52, v79);
    unint64_t v55 = v54;
    swift_bridgeObjectRelease(v51);
    uint64_t v80 = sub_6978(v53, v55, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, v81);
    swift_bridgeObjectRelease(v55);
    _os_log_impl( &dword_0,  v47,  v48,  "MediaItemDisambiguationStrategy#disambiguationSnippet returning items to disambiguate: %s",  v49,  0xCu);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);

    uint64_t v56 = v71;
  }

  else
  {

    uint64_t v56 = v44;
  }

  v66(v56, v45);
  swift_beginAccess(v83, v82, 0LL, 0LL);
  uint64_t v57 = v83[0];
  uint64_t v58 = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v57);
  uint64_t v59 = v70;
  SiriAudioDisambiguationSnippetModel.init(title:items:directInvocation:isAppDisambiguation:)( v68,  v58,  v57,  0xD000000000000034LL,  0x800000000021D8A0LL,  0LL);
  uint64_t v60 = enum case for SiriAudioSnippets.disambiguation(_:);
  uint64_t v61 = type metadata accessor for SiriAudioSnippets(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 104LL))(v59, v60, v61);
  return swift_bridgeObjectRelease(v57);
}

uint64_t sub_41760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ResponseType(0LL);
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a2, (uint64_t)v17, (uint64_t *)&unk_286C50);
  uint64_t v18 = OutputGenerationManifest.nlContextUpdate.setter(v17);
  uint64_t v19 = SiriEnvironment.currentRequest.getter(v18);
  CurrentRequest.responseMode.getter(v19);
  swift_release(v19);
  OutputGenerationManifest.responseMode.setter(v14);
  uint64_t v20 = *(int *)(v9 + 48);
  uint64_t v21 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v11, a4, v21);
  uint64_t v23 = *(void **)(a4 + v20);
  *(void *)&v11[v20] = v23;
  id v24 = [v23 catId];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  uint64_t v27 = v26;

  OutputGenerationManifest.responseViewId.setter(v25, v27);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v21);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  OutputGenerationManifest.canUseServerTTS.setter(1LL);
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v8, enum case for ResponseType.disambiguation(_:), v30);
  return OutputGenerationManifest.responseType.setter(v8);
}

uint64_t sub_41984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_6C5C(&qword_289340);
  v4[11] = v5;
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_419E8, 0LL, 0LL);
}

uint64_t sub_419E8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v0[13] = ResponseFactory.init()();
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v6;
  v0[6] = sub_10430( (unint64_t *)&qword_286CA0,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v7 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v7, v4, v6);
  uint64_t v8 = sub_6C5C(&qword_287980);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + sub_6C3C(v0 + 16) = xmmword_214980;
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v3, v11);
  uint64_t v14 = *(void **)(v3 + v10);
  *(void *)(v1 + v10) = v14;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v14;
  specialized Array._endMutation()(v13);
  v0[14] = v9;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  id v16 = v14;
  v15(v1, v11);
  v0[15] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_41B78;
  return ((uint64_t (*)(void, void *, uint64_t, void))v19)(v0[7], v0 + 2, v9, v0[10]);
}

uint64_t sub_41B78()
{
  uint64_t v1 = (void *)(*v0 + 16);
  uint64_t v2 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v6 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 120));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_6C3C(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

void *sub_41BF4()
{
  return v0;
}

uint64_t sub_41C30()
{
  return swift_deallocClassInstance(v0, 120LL, 7LL);
}

uint64_t type metadata accessor for MediaDestinationDisambiguationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MediaDestinationDisambiguationStrategy);
}

uint64_t sub_41C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a6 + 80),  *(void *)(a6 + 88),  a4);
  return NeedsDisambiguationFlowStrategy.paginationStyle(app:intent:parameterName:intentResolutionResult:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_41CDC@<X0>(uint64_t (*a1)(char *, uint64_t)@<X6>, uint64_t a2@<X8>)
{
  return sub_3D7FC(a1, a2);
}

uint64_t sub_41CF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = swift_allocObject(&unk_26BFA8, 32LL, 7LL);
  *(void *)(v13 + sub_6C3C(v0 + 16) = a7;
  *(void *)(v13 + sub_6C3C(v0 + 24) = a8;
  swift_retain(a8);
  sub_42288(a3, a4, a6, (void (*)(uint64_t, uint64_t))sub_26570);
  return swift_release(v13);
}

uint64_t sub_41D7C( uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(char *, uint64_t), void (*a9)(uint64_t *), uint64_t a10)
{
  return sub_425E0(a2, a3, a4, a7, a8, a9, a10);
}

uint64_t sub_41DB8( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_44F48(a1, a2, a3, a4, a6, a7, a8, a9);
}

uint64_t sub_41DEC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_41E54( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:));
}

uint64_t sub_41E20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_41E54( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:));
}

uint64_t sub_41E54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v21 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a10 + 80),  *(void *)(a10 + 88),  a4);
  return a12(a1, a2, a3, a4, a5, a6, a7, a8, a9, v21, a11);
}

uint64_t sub_41F00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_41F60( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:));
}

uint64_t sub_41F30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_41F60( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:));
}

uint64_t sub_41F60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v20 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a9 + 80),  *(void *)(a9 + 88),  a4);
  return a11(a1, a2, a3, a4, a5, a6, a7, a8, v20, a10);
}

uint64_t sub_42000( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a7 + 80),  *(void *)(a7 + 88),  a4);
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_42078( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a8 + 80),  *(void *)(a8 + 88),  a4);
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_42100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + sub_6C3C(v0 + 16) = v15;
  uint64_t v17 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a6 + 80),  *(void *)(a6 + 88),  v16);
  *uint64_t v15 = v7;
  v15[1] = sub_11C64;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v17, a7);
}

uint64_t sub_421B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = v8;
  uint64_t v17 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v15 + sub_6C3C(v0 + 16) = v17;
  uint64_t v19 = type metadata accessor for MediaDestinationDisambiguationStrategy( 0LL,  *(void *)(a7 + 80),  *(void *)(a7 + 88),  v18);
  *uint64_t v17 = v15;
  v17[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v19, a8);
}

uint64_t sub_42268(uint64_t a1)
{
  return swift_getWitnessTable(&unk_214DB8, a1);
}

uint64_t sub_42278(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for BasicDisambiguationItemContainer<A>, a1);
}

uint64_t sub_42288(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((sub_881D0(a1, a2, *(void **)(v4 + 112)) & 1) != 0)
  {
    id v13 = [a3 disambiguationItems];
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, (char *)&type metadata for Any + 8);

    uint64_t v15 = *(void *)(v14 + 16);
    swift_bridgeObjectRelease(v14);
    if (v15
      && (id v16 = [a3 disambiguationItems],
          uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, (char *)&type metadata for Any + 8),
          v16,
          uint64_t v18 = sub_3E494(v17),
          swift_bridgeObjectRelease(v17),
          v18))
    {
      uint64_t v19 = sub_6C5C(&qword_284620);
      swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
      uint64_t v20 = BasicDisambiguationItemContainer.init(_:_:)(v18, 0LL);
      a4(v20, 0LL);
      return swift_release(v20);
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v26 = sub_6960(v9, (uint64_t)qword_2969C8);
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v9);
      uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl( &dword_0,  v28,  v29,  "MediaDestinationDisambiguationStrategy#makeDisambiguationItemContainer resolutionResult.disambiguationItems no t of type [INMediaItem] or empty",  v30,  2u);
        swift_slowDealloc(v30, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v31 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v32 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v33 = swift_allocError(v31, v32, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104LL))( v34,  enum case for PlaybackCode.ceGE42(_:),  v31);
      a4(v33, 1LL);
      return swift_errorRelease(v33);
    }
  }

  else
  {
    uint64_t v22 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v23 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v24 = swift_allocError(v22, v23, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104LL))( v25,  enum case for PlaybackCode.ceGE41(_:),  v22);
    a4(v24, 1LL);
    return swift_errorRelease(v24);
  }

uint64_t sub_425E0( void *a1, uint64_t a2, uint64_t *a3, void *a4, void (*a5)(char *, uint64_t), void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v448 = a7;
  uint64_t v449 = a2;
  uint64_t v450 = a3;
  char v451 = (void (*)(uint64_t *))a6;
  uint64_t v442 = (void (*)(char *, uint64_t))a5;
  id v445 = a4;
  uint64_t v428 = a1;
  uint64_t v8 = *v7;
  uint64_t v9 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v436 = v9;
  uint64_t v437 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v417 = (char *)&v399 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v422 = (char *)&v399 - v14;
  __chkstk_darwin(v13);
  v443 = (char *)&v399 - v15;
  uint64_t v16 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v16);
  uint64_t v416 = (char *)&v399 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v424 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v430 = *(void *)(v424 - 8);
  uint64_t v18 = __chkstk_darwin(v424);
  uint64_t v415 = (char *)&v399 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v420 = (char *)&v399 - v20;
  uint64_t v21 = *(void *)(v8 + 88);
  uint64_t v434 = *(void *)(v8 + 80);
  uint64_t v435 = v21;
  uint64_t AssociatedTypeWitness = (os_log_s *)swift_getAssociatedTypeWitness(255LL);
  uint64_t v22 = type metadata accessor for IntentPromptAnswer(0LL);
  uint64_t v426 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  char v425 = (char *)&v399 - v23;
  uint64_t v427 = v24;
  uint64_t v25 = type metadata accessor for DisambiguationResult(255LL);
  uint64_t v26 = sub_45D50(&qword_284010);
  uint64_t v27 = type metadata accessor for Result(0LL, v25, v26, &protocol self-conformance witness table for Error);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v399 - v29);
  uint64_t v31 = sub_6C5C(&qword_2845D8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v410 = (char *)&v399 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v414 = (uint64_t)&v399 - v35;
  __chkstk_darwin(v34);
  uint64_t v429 = (char *)&v399 - v36;
  uint64_t v37 = type metadata accessor for Logger(0LL);
  uint64_t v38 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v37 - 8);
  uint64_t v446 = v37;
  uint64_t v447 = v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v423 = (char *)&v399 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v440 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v399 - v42);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v411 = (char *)&v399 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  BOOL v407 = (char *)&v399 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v403 = (char *)&v399 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v418 = (char *)&v399 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v404 = (char *)&v399 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v413 = (char *)&v399 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v438 = (char *)&v399 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v431 = (char *)&v399 - v58;
  __chkstk_darwin(v57);
  char v432 = (uint8_t *)&v399 - v59;
  uint64_t v60 = sub_6C5C(&qword_2845E0);
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v412 = (uint64_t)&v399 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v409 = (uint64_t)&v399 - v64;
  __chkstk_darwin(v63);
  id v66 = (char *)&v399 - v65;
  uint64_t v439 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v441 = *(void **)(v439 - 8);
  uint64_t v67 = __chkstk_darwin(v439);
  uint64_t v405 = (char *)&v399 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v69 = __chkstk_darwin(v67);
  os_log_type_t v406 = (char *)&v399 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v402 = (char *)&v399 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v401 = (char *)&v399 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v408 = (char *)&v399 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v421 = (char *)&v399 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v81 = (char *)&v399 - v80;
  __chkstk_darwin(v79);
  uint64_t v433 = (char *)&v399 - v82;
  uint64_t v83 = type metadata accessor for Parse(0LL);
  uint64_t v84 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v86 = (void **)((char *)&v399 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v87 = sub_881D0(v449, (uint64_t)v450, (void *)v7[14]);
  if ((v87 & 1) == 0)
  {
    uint64_t v117 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v118 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v119 = swift_allocError(v117, v118, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v117 - 8) + 104LL))( v120,  enum case for PlaybackCode.ceGE43(_:),  v117);
    uint64_t *v30 = v119;
    swift_storeEnumTagMultiPayload(v30, v27, 1LL);
    v451(v30);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 8))(v30, v27);
  }

  uint64_t v449 = v28;
  uint64_t v450 = v30;
  uint64_t v419 = v27;
  Input.parse.getter(v87);
  int v88 = (*(uint64_t (**)(void **, uint64_t))(v84 + 88))(v86, v83);
  if (v88 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(void **, uint64_t))(v84 + 96))(v86, v83);
    uint64_t v89 = sub_6C5C(&qword_284618);
    uint64_t v90 = *(void **)((char *)v86 + *(int *)(v89 + 48));
    id v91 = (void *)Parse.ServerConversion.siriKitIntent.getter(v89);
    uint64_t v92 = swift_dynamicCastUnknownClass(v91, AssociatedTypeWitness);
    uint64_t v400 = v86;
    if (!v92)
    {
      uint64_t v183 = v90;

      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v184 = v446;
      uint64_t v185 = sub_6960(v446, (uint64_t)qword_2969C8);
      uint64_t v186 = v447[2](v438, v185, v184);
      uint64_t v187 = (os_log_s *)Logger.logObject.getter(v186);
      os_log_type_t v188 = static os_log_type_t.error.getter();
      BOOL v189 = os_log_type_enabled(v187, v188);
      uint64_t v190 = v419;
      uint64_t v191 = v449;
      uint64_t v192 = v450;
      if (v189)
      {
        uint64_t v193 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v193 = 0;
        _os_log_impl( &dword_0,  v187,  v188,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult Ignorning non-server-conversion parse",  v193,  2u);
        swift_slowDealloc(v193, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v447[1])(v438, v184);
      uint64_t v194 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v195 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v196 = swift_allocError(v194, v195, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v194 - 8) + 104LL))( v197,  enum case for PlaybackCode.ceGE44(_:),  v194);
      *uint64_t v192 = v196;
      swift_storeEnumTagMultiPayload(v192, v190, 1LL);
      v451(v192);
      swift_release(v183);
      (*(void (**)(uint64_t *, uint64_t))(v191 + 8))(v192, v190);
      goto LABEL_77;
    }

    uint64_t v93 = v92;
    uint64_t v94 = sub_6C5C(&qword_284598);
    uint64_t v95 = PaginatedItemContainer.items.getter(v94);
    __chkstk_darwin(v95);
    uint64_t v96 = v435;
    *(&v399 - sub_6C3C(v0 + 4) = v434;
    *(&v399 - sub_6C3C(v0 + 3) = v96;
    *(&v399 - sub_6C3C(v0 + 2) = v93;
    sub_3F054((uint64_t (*)(uint64_t))sub_45F4C, v95, (uint64_t)v66);
    swift_bridgeObjectRelease(v95);
    uint64_t v97 = sub_6C5C(&qword_2845F8);
    int v98 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 48LL))(v66, 1LL, v97);
    id v445 = v90;
    if (v98 != 1)
    {
      uint64_t v198 = &v66[*(int *)(v97 + 48)];
      uint64_t v199 = v441;
      uint64_t v200 = (void (*)(char *, char *, uint64_t))v441[4];
      uint64_t v201 = v439;
      v200(v81, v198, v439);
      uint64_t v202 = v433;
      v200(v433, v81, v201);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v203 = v446;
      uint64_t v204 = sub_6960(v446, (uint64_t)qword_2969C8);
      uint64_t v205 = v447;
      v447[2]((char *)v432, v204, v203);
      uint64_t v206 = v421;
      v443 = (char *)v199[2];
      uint64_t v207 = ((uint64_t (*)(char *, char *, uint64_t))v443)(v421, v202, v201);
      uint64_t v208 = (os_log_s *)Logger.logObject.getter(v207);
      os_log_type_t v209 = static os_log_type_t.error.getter();
      uint64_t v210 = v201;
      if (os_log_type_enabled(v208, v209))
      {
        uint64_t v211 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v440 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc(32LL, -1LL);
        uint64_t v459 = (void (*)(void, void))v440;
        *(_DWORD *)uint64_t v211 = 136315138;
        uint64_t v442 = (void (*)(char *, uint64_t))(v211 + 4);
        uint64_t v212 = sub_10430( (unint64_t *)&qword_284608,  (uint64_t (*)(uint64_t))&type metadata accessor for INMediaDestination,  (uint64_t)&protocol conformance descriptor for INMediaDestination);
        uint64_t v213 = dispatch thunk of CustomStringConvertible.description.getter(v201, v212);
        unint64_t v215 = v214;
        BOOL v457 = (os_log_s *)sub_6978(v213, v214, (uint64_t *)&v459);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v457, v458);
        swift_bridgeObjectRelease(v215);
        uint64_t v442 = (void (*)(char *, uint64_t))v199[1];
        v442(v206, v201);
        _os_log_impl( &dword_0,  v208,  v209,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult Updating media items with match: %s",  v211,  0xCu);
        uint64_t v216 = v440;
        swift_arrayDestroy(v440, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v216, -1LL, -1LL);
        swift_slowDealloc(v211, -1LL, -1LL);

        ((void (*)(uint8_t *, uint64_t))v447[1])(v432, v446);
      }

      else
      {
        uint64_t v442 = (void (*)(char *, uint64_t))v199[1];
        v442(v206, v201);

        ((void (*)(uint8_t *, uint64_t))v205[1])(v432, v446);
      }

      uint64_t v257 = v427;
      os_log_type_t v256 = v428;
      v259 = v425;
      uint64_t v258 = v426;
      uint64_t v260 = (uint64_t)v429;
      uint64_t v261 = v433;
      id v262 = v443;
      ((void (*)(char *, char *, uint64_t))v443)(v429, v433, v210);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v441[7])(v260, 0LL, 1LL, v210);
      sub_67FA8(v260);
      sub_1F6CC(v260, &qword_2845D8);
      uint64_t v461 = v210;
      v263 = sub_10974(&v459);
      ((void (*)(void *, char *, uint64_t))v262)(v263, v261, v210);
      id v264 = v256;
      IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v459, v264, AssociatedTypeWitness);
      v265 = v450;
      static DisambiguationResult.chosenItem(_:)(v259, v257);
      (*(void (**)(char *, uint64_t))(v258 + 8))(v259, v257);
      uint64_t v266 = v419;
      swift_storeEnumTagMultiPayload(v265, v419, 0LL);
      v451(v265);

      swift_release(v445);
      (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v265, v266);
      v442(v261, v210);
      goto LABEL_77;
    }

    sub_1F6CC((uint64_t)v66, &qword_2845E0);
    uint64_t v99 = v419;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v100 = v446;
    uint64_t v101 = sub_6960(v446, (uint64_t)qword_2969C8);
    __int128 v102 = v447;
    __int128 v103 = v431;
    v447[2](v431, v101, v100);
    id v104 = v91;
    char v105 = (os_log_s *)Logger.logObject.getter(v104);
    os_log_type_t v106 = static os_log_type_t.debug.getter();
    BOOL v107 = os_log_type_enabled(v105, v106);
    uint64_t v108 = v439;
    if (!v107)
    {

      ((void (*)(char *, uint64_t))v102[1])(v103, v100);
LABEL_76:
      uint64_t v339 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v340 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v341 = swift_allocError(v339, v340, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v339 - 8) + 104LL))( v342,  enum case for PlaybackCode.ceGE45(_:),  v339);
      uint64_t v343 = v450;
      *uint64_t v450 = v341;
      swift_storeEnumTagMultiPayload(v343, v99, 1LL);
      v451(v343);

      swift_release(v445);
      (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v343, v99);
LABEL_77:
      uint64_t v327 = type metadata accessor for NLIntent(0LL);
      uint64_t v296 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v327 - 8) + 8LL);
      uint64_t v326 = (char *)v400;
      return v296(v326, v327);
    }

    uint64_t v109 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v110 = (os_log_s *)swift_slowAlloc(32LL, -1LL);
    BOOL v457 = v110;
    *(_DWORD *)uint64_t v109 = 136315138;
    uint64_t v111 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    uint64_t v112 = (void *)swift_dynamicCastObjCClass(v93, v111);
    if (v112)
    {
      id v113 = [v112 mediaDestination];
      if (v113)
      {
        uint64_t v114 = v113;
        uint64_t v115 = (uint64_t)v410;
        static INMediaDestination._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v116 = 0LL;
      }

      else
      {
        uint64_t v116 = 1LL;
        uint64_t v115 = (uint64_t)v410;
      }

      uint64_t v328 = v441;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v441[7])(v115, v116, 1LL, v108);
      uint64_t v306 = v414;
      sub_45F6C(v115, v414, &qword_2845D8);
      uint64_t v329 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v328[6])(v306, 1LL, v108);
      if ((_DWORD)v329 != 1)
      {
        uint64_t AssociatedTypeWitness = v110;
        uint64_t v332 = v306;
        os_log_type_t v330 = (void (*)(void, void))INMediaDestination.playlistName.getter(v329);
        uint64_t v331 = v333;
        uint64_t v334 = v332;
        uint64_t v110 = AssociatedTypeWitness;
        ((void (*)(uint64_t, uint64_t))v328[1])(v334, v108);
        goto LABEL_75;
      }
    }

    else
    {
      uint64_t v306 = v414;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v441[7])(v414, 1LL, 1LL, v108);
    }

    sub_1F6CC(v306, &qword_2845D8);
    os_log_type_t v330 = 0LL;
    uint64_t v331 = 0LL;
LABEL_75:
    uint64_t v99 = v419;
    uint64_t v459 = v330;
    v460[0] = v331;
    uint64_t v335 = sub_6C5C(&qword_284600);
    uint64_t v336 = String.init<A>(describing:)(&v459, v335);
    unint64_t v338 = v337;
    uint64_t v459 = (void (*)(void, void))sub_6978(v336, v337, (uint64_t *)&v457);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v459, v460);

    swift_bridgeObjectRelease(v338);
    _os_log_impl( &dword_0,  v105,  v106,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult could not find selected content for intent playlistName: %s",  v109,  0xCu);
    swift_arrayDestroy(v110, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v110, -1LL, -1LL);
    swift_slowDealloc(v109, -1LL, -1LL);

    ((void (*)(char *, uint64_t))v447[1])(v431, v446);
    goto LABEL_76;
  }

  if (v88 != enum case for Parse.directInvocation(_:))
  {
    uint64_t v160 = v446;
    char v159 = v447;
    if (v88 != enum case for Parse.pommesResponse(_:))
    {
      uint64_t v400 = v86;
      uint64_t v217 = v419;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v218 = sub_6960(v160, (uint64_t)qword_2969C8);
      uint64_t v219 = v423;
      uint64_t v220 = v159[2](v423, v218, v160);
      uint64_t v221 = (os_log_s *)Logger.logObject.getter(v220);
      os_log_type_t v222 = static os_log_type_t.error.getter();
      BOOL v223 = os_log_type_enabled(v221, v222);
      uint64_t v224 = v449;
      uint64_t v225 = v450;
      if (v223)
      {
        uint64_t v226 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v226 = 0;
        _os_log_impl( &dword_0,  v221,  v222,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult Ignorning non-server-conversion parse",  v226,  2u);
        uint64_t v227 = v226;
        uint64_t v219 = v423;
        swift_slowDealloc(v227, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v447[1])(v219, v446);
      uint64_t v228 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v229 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v230 = swift_allocError(v228, v229, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v228 - 8) + 104LL))( v231,  enum case for PlaybackCode.ceGE51(_:),  v228);
      uint64_t *v225 = v230;
      swift_storeEnumTagMultiPayload(v225, v217, 1LL);
      v451(v225);
      (*(void (**)(uint64_t *, uint64_t))(v224 + 8))(v225, v217);
      return (*(uint64_t (**)(void **, uint64_t))(v84 + 8))(v400, v83);
    }

    (*(void (**)(void **, uint64_t))(v84 + 96))(v86, v83);
    uint64_t v161 = (char *)*v86;
    uint64_t v162 = (void *)sub_10470();
    uint64_t v163 = v419;
    if (!v162)
    {
      uint64_t v267 = v451;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v268 = sub_6960(v160, (uint64_t)qword_2969C8);
      os_log_type_t v269 = v407;
      uint64_t v270 = v159[2](v407, v268, v160);
      uint64_t v271 = (os_log_s *)Logger.logObject.getter(v270);
      os_log_type_t v272 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v271, v272))
      {
        uint64_t v273 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v273 = 0;
        _os_log_impl( &dword_0,  v271,  v272,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult pommesResponse contains no AudioExperience",  v273,  2u);
        uint64_t v274 = v273;
        uint64_t v267 = v451;
        swift_slowDealloc(v274, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v159[1])(v269, v160);
      uint64_t v275 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v276 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v277 = swift_allocError(v275, v276, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v275 - 8) + 104LL))( v278,  enum case for PlaybackCode.ceGE46(_:),  v275);
      uint64_t v279 = v450;
      *uint64_t v450 = v277;
      swift_storeEnumTagMultiPayload(v279, v163, 1LL);
      v267(v279);

      return (*(uint64_t (**)(uint64_t *, uint64_t))(v449 + 8))(v279, v163);
    }

    v443 = v161;
    id v164 = v162;
    __int128 v165 = v420;
    Experience.userDialogAct.getter(v164);
    id v445 = v164;

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v166 = sub_6960(v160, (uint64_t)qword_2969C8);
    unint64_t v167 = v159[2];
    uint64_t v168 = v413;
    uint64_t v438 = (char *)v166;
    uint64_t v440 = v167;
    ((void (*)(char *))v167)(v413);
    uint64_t v169 = *(uint64_t (**)(char *, char *, uint64_t))(v430 + 16);
    unsigned __int8 v170 = v415;
    uint64_t v171 = v424;
    uint64_t v172 = v169(v415, v165, v424);
    uint64_t v173 = (os_log_s *)Logger.logObject.getter(v172);
    os_log_type_t v174 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v173, v174))
    {
      uint64_t v175 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v437 = swift_slowAlloc(32LL, -1LL);
      BOOL v457 = (os_log_s *)v437;
      *(_DWORD *)uint64_t v175 = 136315138;
      type metadata accessor for SiriNLUTypesPrintUtils(0LL);
      uint64_t v461 = v424;
      uint64_t v462 = sub_10430( &qword_284610,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
      uint64_t v176 = sub_10974(&v459);
      v169((char *)v176, v170, v424);
      uint64_t v177 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v459);
      unint64_t v179 = v178;
      sub_6C3C(&v459);
      uint64_t v459 = (void (*)(void, void))sub_6978(v177, v179, (uint64_t *)&v457);
      uint64_t v171 = v424;
      uint64_t v160 = v446;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v459, v460);
      swift_bridgeObjectRelease(v179);
      __int128 v180 = *(void (**)(char *, uint64_t))(v430 + 8);
      v180(v170, v171);
      _os_log_impl( &dword_0,  v173,  v174,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult pommesResponse userDialogAct: %s",  v175,  0xCu);
      uint64_t v181 = v437;
      swift_arrayDestroy(v437, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v181, -1LL, -1LL);
      swift_slowDealloc(v175, -1LL, -1LL);

      __int128 v182 = (uint64_t (**)(char *, uint64_t, uint64_t))v447[1];
    }

    else
    {
      __int128 v180 = *(void (**)(char *, uint64_t))(v430 + 8);
      v180(v170, v171);

      __int128 v182 = (uint64_t (**)(char *, uint64_t, uint64_t))v159[1];
    }

    uint64_t v447 = v182;
    ((void (*)(char *, uint64_t))v182)(v168, v160);
    uint64_t v297 = sub_6C5C(&qword_284598);
    uint64_t v298 = PaginatedItemContainer.items.getter(v297);
    type metadata accessor for AudioUsoIntent(0LL);
    id v299 = v445;
    id v300 = v416;
    Experience.userDialogAct.getter(v299);

    (*(void (**)(char *, void, uint64_t, uint64_t))(v430 + 56))(v300, 0LL, 1LL, v171);
    uint64_t v301 = (void (*)(void, void))AudioUsoIntent.__allocating_init(userDialogAct:)(v300);
    uint64_t v302 = v418;
    if (!v301)
    {
      uint64_t v307 = v299;
      swift_bridgeObjectRelease(v298);
      uint64_t v308 = v403;
      uint64_t v309 = v440(v403, (uint64_t)v438, v160);
      uint64_t v310 = (os_log_s *)Logger.logObject.getter(v309);
      os_log_type_t v311 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v310, v311))
      {
        uint64_t v312 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v312 = 0;
        _os_log_impl( &dword_0,  v310,  v311,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult AudioUsoIntent failed to be constructed",  v312,  2u);
        swift_slowDealloc(v312, -1LL, -1LL);
      }

      ((void (*)(char *, uint64_t))v447)(v308, v160);
      uint64_t v313 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v314 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v315 = swift_allocError(v313, v314, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v313 - 8) + 104LL))( v316,  enum case for PlaybackCode.ceGE47(_:),  v313);
      uint64_t v317 = v450;
      *uint64_t v450 = v315;
      uint64_t v318 = v419;
      swift_storeEnumTagMultiPayload(v317, v419, 1LL);
      v451(v317);

      (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v317, v318);
      unsigned int v319 = v420;
      return ((uint64_t (*)(char *, uint64_t))v180)(v319, v171);
    }

    uint64_t v442 = (void (*)(char *, uint64_t))v301;
    uint64_t v303 = dispatch thunk of AudioUsoIntent.playlistMediaItems.getter();
    uint64_t v304 = v303;
    if ((unint64_t)v303 >> 62)
    {
      if (v303 >= 0) {
        v303 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v303);
      id v445 = v299;
      if (result) {
        goto LABEL_60;
      }
    }

    else
    {
      uint64_t result = *(void *)((char *)&dword_10 + (v303 & 0xFFFFFFFFFFFFF8LL));
      id v445 = v299;
      if (result)
      {
LABEL_60:
        if ((v304 & 0xC000000000000001LL) != 0)
        {
          uint64_t v305 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v304);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v304 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            return result;
          }

          uint64_t v305 = *(void *)(v304 + 32);
          swift_retain(v305);
        }

        swift_bridgeObjectRelease(v304);
        goto LABEL_83;
      }
    }

    swift_bridgeObjectRelease(v304);
    uint64_t v305 = 0LL;
LABEL_83:
    swift_retain(v305);
    uint64_t v344 = v409;
    sub_3EA8C(v298, v305, v409);
    uint64_t v345 = v344;
    swift_bridgeObjectRelease(v298);
    uint64_t v346 = sub_6C5C(&qword_2845F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v346 - 8) + 48LL))(v345, 1LL, v346) != 1)
    {
      uint64_t v437 = (uint64_t)v180;
      uint64_t v355 = v345 + *(int *)(v346 + 48);
      uint64_t v356 = v441;
      v357 = (void (*)(char *, uint64_t, uint64_t))v441[4];
      uint64_t v358 = v401;
      uint64_t v359 = v439;
      v357(v401, v355, v439);
      uint64_t v360 = v408;
      v357(v408, (uint64_t)v358, v359);
      char v361 = v404;
      v440(v404, (uint64_t)v438, v160);
      uint64_t v362 = v402;
      uint64_t v440 = (uint64_t (*)(char *, uint64_t, uint64_t))v356[2];
      uint64_t v363 = v440(v402, (uint64_t)v360, v359);
      v364 = (os_log_s *)Logger.logObject.getter(v363);
      os_log_type_t v365 = static os_log_type_t.default.getter();
      BOOL v366 = os_log_type_enabled(v364, v365);
      uint64_t v436 = v305;
      if (v366)
      {
        uint64_t v367 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v368 = v362;
        id v369 = (void (*)(void, void))swift_slowAlloc(32LL, -1LL);
        uint64_t v459 = v369;
        *(_DWORD *)uint64_t v367 = 136315138;
        uint64_t v438 = (char *)(v367 + 4);
        uint64_t v370 = sub_10430( (unint64_t *)&qword_284608,  (uint64_t (*)(uint64_t))&type metadata accessor for INMediaDestination,  (uint64_t)&protocol conformance descriptor for INMediaDestination);
        uint64_t v371 = v368;
        uint64_t v372 = dispatch thunk of CustomStringConvertible.description.getter(v359, v370);
        unint64_t v374 = v373;
        BOOL v457 = (os_log_s *)sub_6978(v372, v373, (uint64_t *)&v459);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v457, v458);
        swift_bridgeObjectRelease(v374);
        uint64_t v438 = (char *)v356[1];
        ((void (*)(char *, uint64_t))v438)(v371, v359);
        _os_log_impl( &dword_0,  v364,  v365,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult Updating media items with match: %s",  v367,  0xCu);
        swift_arrayDestroy(v369, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v369, -1LL, -1LL);
        swift_slowDealloc(v367, -1LL, -1LL);

        uint64_t v375 = v404;
        uint64_t v376 = v446;
      }

      else
      {
        uint64_t v438 = (char *)v356[1];
        ((void (*)(char *, uint64_t))v438)(v362, v359);

        uint64_t v375 = v361;
        uint64_t v376 = v160;
      }

      ((void (*)(char *, uint64_t))v447)(v375, v376);
      uint64_t v379 = v427;
      v378 = v428;
      uint64_t v381 = v425;
      uint64_t v380 = v426;
      uint64_t v382 = (uint64_t)v429;
      uint64_t v383 = v408;
      v384 = v440;
      v440(v429, (uint64_t)v408, v359);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v356[7])(v382, 0LL, 1LL, v359);
      sub_67FA8(v382);
      sub_1F6CC(v382, &qword_2845D8);
      uint64_t v461 = v359;
      uint64_t v385 = (char *)sub_10974(&v459);
      v384(v385, (uint64_t)v383, v359);
      id v386 = v378;
      IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v459, v386, AssociatedTypeWitness);
      uint64_t v387 = v450;
      static DisambiguationResult.chosenItem(_:)(v381, v379);
      (*(void (**)(char *, uint64_t))(v380 + 8))(v381, v379);
      uint64_t v388 = v419;
      swift_storeEnumTagMultiPayload(v387, v419, 0LL);
      v451(v387);

      swift_release(v436);
      swift_release(v442);
      (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v387, v388);
      ((void (*)(char *, uint64_t))v438)(v383, v359);
      return ((uint64_t (*)(char *, uint64_t))v437)(v420, v424);
    }

    sub_1F6CC(v345, &qword_2845E0);
    v440(v302, (uint64_t)v438, v160);
    uint64_t v347 = swift_retain_n(v305, 2LL);
    uint64_t v348 = (os_log_s *)Logger.logObject.getter(v347);
    os_log_type_t v349 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v348, v349))
    {
      uint64_t v437 = (uint64_t)v180;
      int v350 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v351 = swift_slowAlloc(32LL, -1LL);
      uint64_t v352 = v351;
      BOOL v457 = (os_log_s *)v351;
      *(_DWORD *)int v350 = 136315138;
      if (v305)
      {
        uint64_t v353 = (void (*)(void, void))dispatch thunk of UsoEntity_common_MediaItem.name.getter(v351);
      }

      else
      {
        uint64_t v353 = 0LL;
        uint64_t v354 = 0LL;
      }

      uint64_t v459 = v353;
      v460[0] = v354;
      uint64_t v389 = sub_6C5C(&qword_284600);
      uint64_t v390 = String.init<A>(describing:)(&v459, v389);
      unint64_t v392 = v391;
      uint64_t v459 = (void (*)(void, void))sub_6978(v390, v391, (uint64_t *)&v457);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v459, v460);
      swift_release_n(v305, 2LL);
      swift_bridgeObjectRelease(v392);
      _os_log_impl( &dword_0,  v348,  v349,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult could not find selected content for uso graph playlistName: %s",  v350,  0xCu);
      swift_arrayDestroy(v352, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v352, -1LL, -1LL);
      swift_slowDealloc(v350, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v447)(v418, v446);
      os_log_type_t v377 = v420;
      __int128 v180 = (void (*)(char *, uint64_t))v437;
    }

    else
    {

      swift_release_n(v305, 2LL);
      ((void (*)(char *, uint64_t))v447)(v302, v160);
      os_log_type_t v377 = v420;
    }

    uint64_t v393 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v394 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v395 = swift_allocError(v393, v394, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v393 - 8) + 104LL))( v396,  enum case for PlaybackCode.ceGE48(_:),  v393);
    uint64_t v397 = v450;
    *uint64_t v450 = v395;
    uint64_t v398 = v419;
    swift_storeEnumTagMultiPayload(v397, v419, 1LL);
    v451(v397);

    swift_release(v305);
    swift_release(v442);
    (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v397, v398);
    unsigned int v319 = v377;
    return ((uint64_t (*)(void, void))v180)(v319, v171);
  }

  (*(void (**)(void **, uint64_t))(v84 + 96))(v86, v83);
  uint64_t v122 = v436;
  uint64_t v123 = v437;
  uint64_t v124 = (uint64_t)v443;
  (*(void (**)(char *, void **, uint64_t))(v437 + 32))(v443, v86, v436);
  sub_1CF340(v124, (uint64_t)v454);
  uint64_t v125 = (void *)v454[0];
  uint64_t v126 = v454[1];
  os_log_type_t v127 = (void *)v454[2];
  id v445 = (id)v454[3];
  uint64_t v128 = v454[4];
  uint64_t v129 = (uint64_t (*)(char *, uint64_t, uint64_t))v454[5];
  uint64_t v130 = v454[6];
  LODWORD(v43sub_6C3C(v0 + 8) = v455;
  sub_45F6C((uint64_t)v454, (uint64_t)v456, &qword_2845F0);
  char v131 = (char *)v440;
  if (v456[56] != 255)
  {
    sub_45D94((uint64_t)v456, (uint64_t)&v457);
    sub_45D94((uint64_t)&v457, (uint64_t)&v459);
    if (v463 == 3)
    {
      uint64_t v440 = v129;
      uint64_t v435 = v128;
      int64_t v132 = v459;
      unint64_t v133 = v460[0];
      uint64_t v134 = sub_6C5C(&qword_284598);
      uint64_t v135 = PaginatedItemContainer.items.getter(v134);
      swift_bridgeObjectRetain(v133);
      uint64_t v136 = v412;
      uint64_t v442 = (void (*)(char *, uint64_t))v132;
      sub_3ED88(v135, (uint64_t)v132, v133, v412);
      swift_bridgeObjectRelease(v135);
      uint64_t v137 = sub_6C5C(&qword_2845F8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 48LL))(v136, 1LL, v137) == 1)
      {
        sub_1F6CC(v136, &qword_2845E0);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v138 = v446;
        uint64_t v139 = sub_6960(v446, (uint64_t)qword_2969C8);
        uint64_t v140 = v411;
        v447[2](v411, v139, v138);
        uint64_t v441 = v125;
        uint64_t v141 = (uint64_t)v125;
        uint64_t v142 = v126;
        uint64_t v143 = v126;
        uint64_t v144 = v127;
        char v145 = v127;
        uint64_t v146 = (uint64_t)v445;
        uint64_t v147 = v435;
        uint64_t v439 = v130;
        uint64_t v148 = v130;
        char v149 = (char)v438;
        uint64_t v150 = sub_45EC0(v141, v143, v145, (uint64_t)v445, v435, (uint64_t)v440, v148, (char)v438);
        uint64_t v151 = (os_log_s *)Logger.logObject.getter(v150);
        os_log_type_t v152 = static os_log_type_t.error.getter();
        uint64_t AssociatedTypeWitness = v151;
        LODWORD(v4sub_6C3C(v0 + 34) = v152;
        if (os_log_type_enabled(v151, v152))
        {
          uint64_t v153 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v433 = (char *)swift_slowAlloc(32LL, -1LL);
          v452[0] = (uint64_t)v433;
          *(_DWORD *)uint64_t v153 = 136315138;
          uint64_t v431 = (char *)(v153 + 4);
          char v432 = v153;
          char v154 = v440;
          uint64_t v155 = v439;
          sub_45EC0((uint64_t)v441, v142, v144, v146, v147, (uint64_t)v440, v439, v149);
          uint64_t v453 = sub_6978((uint64_t)v442, v133, v452);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, v454);
          sub_45DD0((uint64_t)v454);
          sub_45DD0((uint64_t)v454);
          sub_45E1C(v441, v142, v144, v146, v147, (uint64_t)v154, v155, v149);
          uint64_t v156 = AssociatedTypeWitness;
          uint64_t v157 = v432;
          _os_log_impl( &dword_0,  AssociatedTypeWitness,  (os_log_type_t)v434,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult could not find selected content for uso gra ph playlistName: %s",  v432,  0xCu);
          uint64_t v158 = v433;
          swift_arrayDestroy(v433, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v158, -1LL, -1LL);
          uint64_t v123 = v437;
          swift_slowDealloc(v157, -1LL, -1LL);

          ((void (*)(char *, uint64_t))v447[1])(v411, v446);
        }

        else
        {
          sub_45DD0((uint64_t)v454);
          sub_45DD0((uint64_t)v454);

          ((void (*)(char *, uint64_t))v447[1])(v140, v446);
        }

        uint64_t v320 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v321 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v322 = swift_allocError(v320, v321, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v320 - 8) + 104LL))( v323,  enum case for PlaybackCode.ceGE50(_:),  v320);
        uint64_t v324 = v450;
        *uint64_t v450 = v322;
        uint64_t v325 = v419;
        swift_storeEnumTagMultiPayload(v324, v419, 1LL);
        v451(v324);
        (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v324, v325);
        uint64_t v296 = *(uint64_t (**)(char *, uint64_t))(v123 + 8);
      }

      else
      {
        uint64_t v280 = v136 + *(int *)(v137 + 48);
        os_log_type_t v281 = v441;
        uint64_t v282 = (void (*)(char *, uint64_t, uint64_t))v441[4];
        uint64_t v283 = v405;
        uint64_t v284 = v123;
        uint64_t v285 = v439;
        v282(v405, v280, v439);
        sub_45DD0((uint64_t)v454);
        uint64_t v286 = v406;
        v282(v406, (uint64_t)v283, v285);
        uint64_t v287 = (void (*)(char *, char *, uint64_t))v281[2];
        uint64_t v288 = (uint64_t)v429;
        v287(v429, v286, v285);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v281[7])(v288, 0LL, 1LL, v285);
        uint64_t v289 = v428;
        sub_67FA8(v288);
        sub_1F6CC(v288, &qword_2845D8);
        v452[3] = v285;
        os_log_type_t v290 = sub_10974(v452);
        v287((char *)v290, v286, v285);
        id v291 = v289;
        uint64_t v292 = v425;
        IntentPromptAnswer.init(answeredValue:updatedIntent:)(v452, v291, AssociatedTypeWitness);
        uint64_t v293 = v450;
        uint64_t v294 = v427;
        static DisambiguationResult.chosenItem(_:)(v292, v427);
        (*(void (**)(char *, uint64_t))(v426 + 8))(v292, v294);
        uint64_t v295 = v419;
        swift_storeEnumTagMultiPayload(v293, v419, 0LL);
        v451(v293);
        (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v293, v295);
        ((void (*)(char *, uint64_t))v281[1])(v286, v285);
        uint64_t v296 = *(uint64_t (**)(char *, uint64_t))(v284 + 8);
      }

      uint64_t v326 = v443;
      uint64_t v327 = v436;
      return v296(v326, v327);
    }

    sub_45DD0((uint64_t)v454);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v232 = v446;
  uint64_t v233 = sub_6960(v446, (uint64_t)qword_2969C8);
  uint64_t v234 = v447;
  v447[2](v131, v233, v232);
  unint64_t v235 = *(uint64_t (**)(char *, char *, uint64_t))(v123 + 16);
  uint64_t v236 = v422;
  uint64_t v237 = v235(v422, v443, v122);
  os_log_type_t v238 = (void *)Logger.logObject.getter(v237);
  os_log_type_t v239 = static os_log_type_t.error.getter();
  if (os_log_type_enabled((os_log_t)v238, v239))
  {
    id v445 = v238;
    v240 = v236;
    uint64_t v241 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v242 = swift_slowAlloc(32LL, -1LL);
    v452[0] = v242;
    *(_DWORD *)uint64_t v241 = 136315138;
    uint64_t AssociatedTypeWitness = (os_log_s *)(v241 + 4);
    uint64_t v243 = v417;
    v235(v417, v236, v122);
    uint64_t v244 = v122;
    uint64_t v245 = String.init<A>(describing:)(v243, v122);
    unint64_t v247 = v246;
    uint64_t v453 = sub_6978(v245, v246, v452);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v453, v454);
    swift_bridgeObjectRelease(v247);
    uint64_t v248 = *(void (**)(char *, uint64_t))(v437 + 8);
    v248(v240, v122);
    id v249 = v445;
    _os_log_impl( &dword_0,  (os_log_t)v445,  v239,  "MediaDestinationDisambiguationStrategy#parseDisambiguationResult received unsupported directInvocation: %s",  v241,  0xCu);
    swift_arrayDestroy(v242, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v242, -1LL, -1LL);
    swift_slowDealloc(v241, -1LL, -1LL);

    ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v447[1])(v440, v446);
  }

  else
  {
    uint64_t v248 = *(void (**)(char *, uint64_t))(v123 + 8);
    v248(v236, v122);

    ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))v234[1])(v440, v232);
    uint64_t v244 = v122;
  }

  uint64_t v250 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v251 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v252 = swift_allocError(v250, v251, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v250 - 8) + 104LL))( v253,  enum case for PlaybackCode.ceGE49(_:),  v250);
  uint64_t v254 = v450;
  *uint64_t v450 = v252;
  uint64_t v255 = v419;
  swift_storeEnumTagMultiPayload(v254, v419, 1LL);
  v451(v254);
  (*(void (**)(uint64_t *, uint64_t))(v449 + 8))(v254, v255);
  return ((uint64_t (*)(char *, uint64_t))v248)(v443, v244);
}

uint64_t sub_44B5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v12 = *v7;
  uint64_t v13 = sub_6C5C(&qword_284598);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = v7[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, v13);
  uint64_t v18 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (v18 + 72) & ~v18;
  uint64_t v20 = (char *)swift_allocObject(&unk_26BF08, v19 + v15, v18 | 7);
  *((void *)v20 + sub_6C3C(v0 + 2) = *(void *)(v12 + 80);
  *((void *)v20 + sub_6C3C(v0 + 3) = *(void *)(v12 + 88);
  *((void *)v20 + sub_6C3C(v0 + 4) = v8;
  *((void *)v20 + sub_6C3C(v0 + 5) = a1;
  *((void *)v20 + 6) = a2;
  uint64_t v21 = v26;
  *((void *)v20 + sub_6C3C(v0 + 7) = v25;
  *((void *)v20 + sub_6C3C(v0 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v20[v19], v16, v13);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, id, void (*)(uint64_t), char *))(*(void *)v17 + 232LL);
  swift_retain(v8);
  swift_retain(a1);
  id v23 = a2;
  swift_retain(v21);
  v22(a1, v27, v28, v23, sub_451C0, v20);
  return swift_release(v20);
}

uint64_t sub_44CAC( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v49 = a8;
  uint64_t v50 = a3;
  uint64_t v46 = a7;
  uint64_t v47 = a2;
  uint64_t v42 = a5;
  uint64_t v51 = a4;
  uint64_t v48 = a1;
  uint64_t v44 = (void *)*v8;
  uint64_t v11 = sub_6C5C(&qword_284598);
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v45 + 64);
  __chkstk_darwin(v11);
  uint64_t v43 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "MediaDestinationDisambiguationStrategy#promptForDisambiguationLegacy...", v21, 2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v41 = v9[3];
  uint64_t v22 = v45;
  id v23 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v43, a6, v11);
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = (v24 + 96) & ~v24;
  uint64_t v26 = (char *)swift_allocObject(&unk_26BF58, v25 + v12, v24 | 7);
  uint64_t v27 = v44;
  *((void *)v26 + sub_6C3C(v0 + 2) = v44[10];
  uint64_t v29 = v50;
  uint64_t v28 = v51;
  *((void *)v26 + sub_6C3C(v0 + 3) = v27[11];
  *((void *)v26 + sub_6C3C(v0 + 4) = v29;
  uint64_t v30 = v42;
  *((void *)v26 + sub_6C3C(v0 + 5) = v28;
  *((void *)v26 + 6) = v30;
  uint64_t v31 = v11;
  uint64_t v32 = v48;
  uint64_t v33 = v49;
  *((void *)v26 + sub_6C3C(v0 + 7) = v9;
  *((void *)v26 + sub_6C3C(v0 + 8) = v32;
  uint64_t v44 = v9;
  uint64_t v34 = v46;
  uint64_t v35 = v47;
  *((void *)v26 + sub_6C3C(v0 + 9) = v47;
  *((void *)v26 + 10) = v34;
  *((void *)v26 + 11) = v33;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v26[v25], v23, v31);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, id, uint64_t (*)(uint64_t), char *))(*(void *)v41 + 232LL);
  swift_bridgeObjectRetain(v28);
  id v37 = v30;
  swift_retain(v44);
  swift_retain(v32);
  id v38 = v35;
  swift_retain(v33);
  v36(v32, v29, v28, v38, sub_45B2C, v26);
  return swift_release(v26);
}

uint64_t sub_44F48( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v33 = a5;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  os_log_type_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v32 = a4;
    uint64_t v23 = a6;
    uint64_t v24 = a7;
    uint64_t v25 = a8;
    uint64_t v26 = v22;
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "MediaDestinationDisambiguationStrategy#makePromptForDisambiguation...", v22, 2u);
    uint64_t v27 = v26;
    a8 = v25;
    a7 = v24;
    a6 = v23;
    a4 = v32;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v28 = v9[12];
  uint64_t v29 = v9[13];
  sub_6EA8(v9 + 9, v28);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v28, v29) & 1) != 0) {
    return sub_44B5C(v34, v35, v36, a4, a6, a7, a8);
  }
  else {
    return sub_44CAC(v34, v35, v36, a4, v33, a6, a7, a8);
  }
}

uint64_t sub_45130()
{
  uint64_t v1 = sub_6C5C(&qword_284598);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_451C0(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_284598) - 8) + 80LL);
  sub_40A40( a1,  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void (**)(void *))(v1 + 56),  *(void *)(v1 + 64),  v1 + ((v3 + 72) & ~v3));
}

uint64_t sub_4520C(uint64_t a1, uint64_t a2, void *a3, uint8_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v101 = a5;
  uint64_t v102 = a6;
  uint64_t v86 = a4;
  uint64_t v93 = a1;
  uint64_t v8 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v97 = *(void *)(v8 - 8);
  uint64_t v98 = v8;
  __chkstk_darwin(v8);
  uint64_t v96 = v9;
  id v104 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v99 = *(void *)(v13 - 8);
  uint64_t v100 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v94 = v15;
  uint64_t v95 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  char v105 = (char *)&v77 - v16;
  uint64_t v83 = type metadata accessor for ResponseMode(0LL);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  os_log_type_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_289340);
  uint64_t v90 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v91 = v24;
  uint64_t v92 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v77 - v25;
  uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v87 = *(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 16LL);
  uint64_t v88 = v27;
  v87(v26, a2);
  uint64_t v89 = v22;
  uint64_t v28 = *(int *)(v22 + 48);
  __int128 v103 = v26;
  *(void *)&v26[v28] = a3;
  id v85 = a3;
  uint64_t v29 = static SiriEnvironmentWrapper.retrieve()(v85);
  if (!v29)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v29 = static SiriEnvironment.default.getter();
  }

  uint64_t v30 = v29;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v18, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v31, v18);
  uint64_t v32 = swift_retain_n(v30, 2LL);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.info.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc(12LL, -1LL);
    uint64_t v80 = v12;
    uint64_t v36 = (uint8_t *)v35;
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    v107[0] = v37;
    uint64_t v78 = v19;
    uint64_t v79 = v18;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v77 = v36 + 4;
    uint64_t v38 = SiriEnvironment.currentRequest.getter(v37);
    uint64_t v39 = v81;
    CurrentRequest.responseMode.getter(v38);
    uint64_t v40 = swift_release(v38);
    uint64_t v41 = ResponseMode.description.getter(v40);
    unint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v39, v83);
    uint64_t v44 = v41;
    uint64_t v45 = v21;
    uint64_t v46 = (uint8_t *)v30;
    uint64_t v106 = sub_6978(v44, v43, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107);
    swift_release_n(v30, 2LL);
    swift_bridgeObjectRelease(v43);
    _os_log_impl( &dword_0,  v33,  v34,  "MediaItemDisambiguationStrategy#disambiguationSnippet with responseMode = %s",  v36,  0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v47 = v36;
    uint64_t v12 = v80;
    swift_slowDealloc(v47, -1LL, -1LL);

    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v45, v79);
  }

  else
  {

    swift_release_n(v30, 2LL);
    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v46 = (uint8_t *)v30;
  }

  uint64_t v84 = v46;
  uint64_t v49 = v12;
  static DialogPhase.clarification.getter(v48);
  uint64_t v51 = v88;
  uint64_t v50 = v89;
  uint64_t v52 = *(int *)(v89 + 48);
  uint64_t v53 = (uint64_t)v92;
  uint64_t v54 = (uint64_t)v103;
  uint64_t v55 = (void (*)(uint64_t, uint64_t, uint64_t))v87;
  uint64_t v56 = ((uint64_t (*)(char *, char *, uint64_t))v87)(v92, v103, v88);
  *(void *)(v53 + v5sub_6C3C(v0 + 2) = v85;
  __chkstk_darwin(v56);
  *(&v77 - sub_6C3C(v0 + 4) = v86;
  *(&v77 - sub_6C3C(v0 + 3) = v46;
  *(&v77 - sub_6C3C(v0 + 2) = (uint8_t *)v53;
  uint64_t v58 = (uint8_t *)v57;
  uint64_t v86 = v58;
  uint64_t v59 = v105;
  OutputGenerationManifest.init(dialogPhase:_:)(v49, sub_45890, &v77 - 6);
  sub_1F6CC(v53, &qword_289340);
  uint64_t v61 = v97;
  uint64_t v60 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v104, v93, v98);
  uint64_t v62 = *(int *)(v50 + 48);
  v55(v53, v54, v51);
  *(void *)(v53 + v6sub_6C3C(v0 + 2) = v58;
  uint64_t v63 = v99;
  uint64_t v64 = v95;
  uint64_t v65 = v59;
  uint64_t v66 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v95, v65, v100);
  uint64_t v67 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v68 = (v67 + 16) & ~v67;
  uint64_t v69 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v70 = (v96 + v69 + v68) & ~v69;
  uint64_t v71 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v72 = (v91 + v71 + v70) & ~v71;
  uint64_t v73 = swift_allocObject(&unk_26BF30, v72 + v94, v67 | v71 | v69 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v73 + v68, v104, v60);
  sub_45F6C(v53, v73 + v70, &qword_289340);
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v73 + v72, v64, v66);
  uint64_t v74 = v86;
  uint64_t v75 = sub_6C5C(&qword_2845C0);
  static Task<>.withCallback<A>(_:operation:)(v101, v102, &unk_2845B8, v73, v75);
  swift_release(v84);
  swift_release(v73);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v105, v66);
  return sub_1F6CC((uint64_t)v103, &qword_289340);
}

uint64_t sub_45890(uint64_t a1)
{
  return sub_41760(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_4589C()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v17 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v8, v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return swift_deallocObject(v0, v17, v14);
}

uint64_t sub_459B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_2845B4);
  *(void *)(v2 + sub_6C3C(v0 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_11C64;
  return sub_41984(a1, v12, v13, v14);
}

uint64_t sub_45A8C()
{
  uint64_t v1 = sub_6C5C(&qword_284598);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));

  swift_release(*(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_45B2C(uint64_t a1)
{
  return sub_3F3C8( a1,  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 72),  *(void (**)(void *))(v1 + 80),  *(void *)(v1 + 88));
}

uint64_t sub_45B8C()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));

  swift_release(*(void *)(v0 + 88));
  uint64_t v10 = v0 + v4;
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);

  uint64_t v12 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_45CAC(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  return sub_40268( a1,  v4,  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void **)(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 72),  *(void (**)(__int128 *))(v2 + 80),  *(void *)(v2 + 88),  v2 + v6,  v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_45D50(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_45D94(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_45DD0(uint64_t a1)
{
  return a1;
}

void sub_45E08(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 != -1) {
    sub_45E1C(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

void sub_45E1C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  switch(a8)
  {
    case 0:
      swift_bridgeObjectRelease(a2);

      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease(a2);
      break;
    case 4:

      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(a5);
      swift_bridgeObjectRelease(a7);
      break;
    default:
      return;
  }

uint64_t sub_45EC0( uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  switch(a8)
  {
    case 0:
      id v10 = a3;
      goto LABEL_4;
    case 1:
    case 3:
      goto LABEL_4;
    case 4:
      uint64_t v12 = (void *)result;
      swift_bridgeObjectRetain(a7);
      id v13 = v12;
      swift_bridgeObjectRetain(a3);
      a2 = a5;
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain(a2);
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_45F4C(void *a1)
{
  return sub_3E7F4(a1, *(void *)(v1 + 32)) & 1;
}

uint64_t sub_45F6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_6C5C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_45FB0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_45FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  char v16 = static SiriAudioEnvironment.isHomePod.getter(v13);
  uint64_t v17 = v5[3];
  uint64_t v18 = v5[4];
  uint64_t v19 = v5[2];
  uint64_t v28 = v19;
  uint64_t v29 = v17;
  if ((v16 & 1) != 0)
  {
    strcpy((char *)v30, "GenericError");
    BYTE5(v30[1]) = 0;
    HIWORD(v30[1]) = -5120;
    uint64_t v31 = v18;
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    uint64_t v35 = 0LL;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v19,  v17,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v27);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v20 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v21 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v15, v20, v11);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      uint64_t v37 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v36 = sub_6978(0x45636972656E6547LL, 0xEC000000726F7272LL, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
      _os_log_impl( &dword_0,  v22,  v23,  "UnsupportedMediaItemsCellularDataSettings invoked on HomePod, defaulting to %s",  v24,  0xCu);
      swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
  }

  else
  {
    v30[0] = 0xD000000000000029LL;
    v30[1] = 0x800000000021D950LL;
    uint64_t v31 = v18;
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    uint64_t v35 = 0LL;
    return sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ en ableTelemetry=YES ",  125LL,  2,  v19,  v17,  0xD000000000000029LL,  0x800000000021D950LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v27);
  }

double sub_462CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = swift_bridgeObjectRetain(a1);
  uint64_t v33 = &type metadata for Bool;
  LOBYTE(v3sub_6C3C(v0 + 2) = static SiriAudioEnvironment.isWatch.getter(v10) & 1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
  sub_1E1E1C(&v32, 0x68637461577369LL, 0xE700000000000000LL, isUniquelyReferenced_nonNull_native, v34);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v12 = sub_2E888((uint64_t)v34);
  char v13 = static SiriAudioEnvironment.isMac.getter(v12);
  uint64_t v33 = &type metadata for Bool;
  LOBYTE(v3sub_6C3C(v0 + 2) = v13 & 1;
  char v14 = swift_isUniquelyReferenced_nonNull_native(a1);
  sub_1E1E1C(&v32, 0x63614D7369LL, 0xE500000000000000LL, v14, v34);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v15 = sub_2E888((uint64_t)v34);
  char v16 = static SiriAudioEnvironment.isReality.getter(v15);
  uint64_t v33 = &type metadata for Bool;
  LOBYTE(v3sub_6C3C(v0 + 2) = v16 & 1;
  char v17 = swift_isUniquelyReferenced_nonNull_native(a1);
  uint64_t v31 = a1;
  sub_1E1E1C(&v32, 0x6976654452587369LL, 0xEA00000000006563LL, v17, v34);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  sub_2E888((uint64_t)v34);
  uint64_t v19 = v5[3];
  uint64_t v18 = v5[4];
  uint64_t v22 = v5[2];
  uint64_t v23 = v19;
  unint64_t v24 = 0xD000000000000015LL;
  unint64_t v25 = 0x800000000021D930LL;
  uint64_t v26 = v18;
  uint64_t v27 = a1;
  uint64_t v28 = 0LL;
  uint64_t v29 = a2;
  uint64_t v30 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v22,  v19,  0xD000000000000015LL,  0x800000000021D930LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v21);
  *(void *)&double result = swift_bridgeObjectRelease(a1).n128_u64[0];
  return result;
}

uint64_t sub_464AC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v91 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v83 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = sub_6C5C(&qword_2848D8);
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_284630);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v85 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v92 = (uint64_t)&v82 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v82 - v10;
  uint64_t v12 = type metadata accessor for Parse(0LL);
  char v13 = *(uint64_t (***)(char *, uint64_t))(v12 - 8);
  uint64_t v95 = v12;
  uint64_t v96 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v93 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  char v17 = (char *)&v82 - v16;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v86 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v87 = (char *)&v82 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v84 = (char *)&v82 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v82 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v30 = v29(v27, v28, v18);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v82 = a1;
    uint64_t v34 = v28;
    uint64_t v35 = v29;
    uint64_t v36 = v18;
    uint64_t v37 = v11;
    uint64_t v38 = v33;
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "SearchForMediaNeedsValueStrategy#actionForInput...", v33, 2u);
    uint64_t v39 = v38;
    uint64_t v11 = v37;
    uint64_t v18 = v36;
    uint64_t v29 = v35;
    uint64_t v28 = v34;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  uint64_t v40 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v41 = v40(v27, v18);
  Input.parse.getter(v41);
  uint64_t v43 = v95;
  unint64_t v42 = v96;
  int v44 = v96[11](v17, v95);
  if (v44 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    v42[12](v17, v43);
    uint64_t v45 = sub_6C5C(&qword_284618);
    swift_release(*(void *)&v17[*(int *)(v45 + 48)]);
    uint64_t v46 = type metadata accessor for NLIntent(0LL);
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8LL))(v17, v46);
  }

  else
  {
    int v48 = v44;
    int v49 = enum case for Parse.pommesResponse(_:);
    uint64_t v47 = v96[1](v17, v43);
    BOOL v50 = v48 == v49;
    unint64_t v42 = v96;
    if (!v50)
    {
      uint64_t v64 = v86;
      uint64_t v65 = v29(v86, v28, v18);
      uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
      os_log_type_t v67 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v66, v67)) {
        goto LABEL_18;
      }
      uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v62 = 0;
      uint64_t v63 = "SearchForMediaNeedsValueStrategy#actionForInput parse not of right type";
      goto LABEL_17;
    }
  }

  uint64_t v51 = v93;
  Input.parse.getter(v47);
  double v52 = sub_B7C84(v51, (uint64_t)&v97);
  ((void (*)(char *, uint64_t, double))v42[1])(v51, v43, v52);
  if (!v98)
  {
    sub_1F6CC((uint64_t)&v97, &qword_2848C0);
    uint64_t v64 = v87;
    uint64_t v61 = v29(v87, v28, v18);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v67 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v66, v67))
    {
LABEL_18:

      uint64_t v69 = v40(v64, v18);
      return static ActionForInput.ignore()(v69);
    }

    uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v62 = 0;
    uint64_t v63 = "SearchForMediaNeedsValueStrategy#actionForInput received invalid NL intent";
LABEL_17:
    _os_log_impl(&dword_0, v66, v67, v63, v62, 2u);
    swift_slowDealloc(v62, -1LL, -1LL);
    goto LABEL_18;
  }

  uint64_t v95 = v28;
  uint64_t v96 = (uint64_t (**)(char *, uint64_t))v29;
  sub_49B60(&v97, &v99);
  uint64_t v53 = v100;
  uint64_t v54 = v101;
  sub_6EA8(&v99, v100);
  dispatch thunk of ConfirmableIntent.confirmationState.getter(v53, *(void *)(v54 + 8));
  uint64_t v55 = v89;
  uint64_t v56 = v91;
  uint64_t v57 = v92;
  (*(void (**)(uint64_t, void, uint64_t))(v89 + 104))( v92,  enum case for CommonAudio.Confirmation.cancel(_:),  v91);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v57, 0LL, 1LL, v56);
  uint64_t v58 = v90;
  uint64_t v59 = v90 + *(int *)(v88 + 48);
  sub_FF10((uint64_t)v11, v90, &qword_284630);
  sub_FF10(v57, v59, &qword_284630);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v60(v58, 1LL, v56) == 1)
  {
    sub_1F6CC(v57, &qword_284630);
    sub_1F6CC((uint64_t)v11, &qword_284630);
    if (v60(v59, 1LL, v56) == 1)
    {
      sub_1F6CC(v58, &qword_284630);
LABEL_24:
      uint64_t v76 = v84;
      uint64_t v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(v84, v95, v18);
      uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
      os_log_type_t v79 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v80 = 0;
        _os_log_impl( &dword_0,  v78,  v79,  "SearchForMediaNeedsValueStrategy#actionForInput User asked to cancel",  v80,  2u);
        swift_slowDealloc(v80, -1LL, -1LL);
      }

      uint64_t v81 = v40(v76, v18);
      static ActionForInput.cancel()(v81);
      return sub_6C3C(&v99);
    }

    goto LABEL_21;
  }

  uint64_t v71 = v85;
  sub_FF10(v58, v85, &qword_284630);
  if (v60(v59, 1LL, v56) == 1)
  {
    sub_1F6CC(v57, &qword_284630);
    sub_1F6CC((uint64_t)v11, &qword_284630);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v71, v56);
LABEL_21:
    uint64_t v72 = sub_1F6CC(v58, &qword_2848D8);
    goto LABEL_22;
  }

  uint64_t v73 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v83, v59, v56);
  uint64_t v74 = sub_6DF0( &qword_2848E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
  LODWORD(v9sub_6C3C(v0 + 3) = dispatch thunk of static Equatable.== infix(_:_:)(v71, v73, v56, v74);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v55 + 8);
  v75(v73, v56);
  sub_1F6CC(v92, &qword_284630);
  sub_1F6CC((uint64_t)v11, &qword_284630);
  v75((char *)v71, v56);
  uint64_t v72 = sub_1F6CC(v58, &qword_284630);
LABEL_22:
  static ActionForInput.handle()(v72);
  return sub_6C3C(&v99);
}

uint64_t sub_46CB8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  int v49 = a5;
  uint64_t v51 = a2;
  uint64_t v52 = a7;
  uint64_t v48 = a6;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v46 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v53 = (uint64_t)&v42 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v19 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v11;
    uint64_t v25 = v24;
    uint64_t v55 = v24;
    uint64_t v43 = v15;
    *(_DWORD *)uint64_t v23 = 136446210;
    swift_bridgeObjectRetain(a4);
    uint64_t v54 = sub_6978(a3, a4, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease_n(a4, 3LL);
    _os_log_impl( &dword_0,  v20,  v21,  "SearchForMediaNeedsValueStrategy#makePromptForValue parameter: %{public}s",  v23,  0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v25;
    uint64_t v11 = v44;
    swift_slowDealloc(v26, -1LL, -1LL);
    a1 = v45;
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v14);
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  uint64_t v27 = v53;
  uint64_t v28 = v51;
  uint64_t v29 = a3;
  uint64_t v30 = v49;
  sub_17A5D8(v51, a3, a4, v49);
  uint64_t v31 = v50;
  uint64_t v45 = *(void *)(v50 + 16);
  uint64_t v32 = v27;
  uint64_t v33 = v47;
  sub_FF10(v32, v47, (uint64_t *)&unk_286C50);
  uint64_t v34 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v35 = (v34 + 80) & ~v34;
  uint64_t v36 = (void *)swift_allocObject(&unk_26C090, v35 + v11, v34 | 7);
  void v36[2] = v29;
  v36[3] = a4;
  v36[4] = v30;
  void v36[5] = v31;
  v36[6] = a1;
  v36[7] = v28;
  uint64_t v37 = a4;
  uint64_t v38 = v52;
  v36[8] = v48;
  v36[9] = v38;
  sub_45F6C(v33, (uint64_t)v36 + v35, (uint64_t *)&unk_286C50);
  swift_bridgeObjectRetain(v37);
  id v39 = v30;
  swift_retain(v31);
  swift_retain(a1);
  id v40 = v28;
  swift_retain(v38);
  sub_3B9F4(a1, v29, v37, v40, (uint64_t)sub_49C40, (uint64_t)v36);
  swift_release(v36);
  return sub_1F6CC(v53, (uint64_t *)&unk_286C50);
}

void sub_47048( uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), uint64_t a4, void *a5, uint64_t a6, void *a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10)
{
  uint64_t v146 = a8;
  id v155 = a7;
  uint64_t v144 = a6;
  uint64_t v156 = a1;
  uint64_t v157 = a5;
  uint64_t v153 = a4;
  uint64_t v150 = a2;
  uint64_t v151 = a3;
  uint64_t v145 = a9;
  uint64_t v137 = type metadata accessor for Logger(0LL);
  uint64_t v135 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v134 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v140 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = sub_6C5C(&qword_289340);
  uint64_t v12 = __chkstk_darwin(v154);
  uint64_t v136 = (char *)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v142 = (char **)((char *)&v129 - v15);
  __chkstk_darwin(v14);
  os_log_type_t v152 = (char *)&v129 - v16;
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v143 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v141 = (char *)&v129 - v20;
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v129 - v25;
  uint64_t v27 = sub_6C5C(&qword_2845A8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v147 = (char *)&v129 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v129 - v30;
  uint64_t v32 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v148 = *(void *)(v32 - 8);
  uint64_t v149 = v32;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char **)((char *)&v129 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v156, (uint64_t)v41, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v41, v39) == 1)
  {
    uint64_t v42 = *v41;
    (*(void (**)(char *, void, uint64_t))(v36 + 104))( v38,  enum case for AdditionalMetricsDescription.ModuleName.sfmnvs(_:),  v35);
    uint64_t v43 = v148;
    uint64_t v44 = v149;
    (*(void (**)(char *, void, uint64_t))(v148 + 104))( v34,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v149);
    os_log_type_t v152 = v42;
    swift_getErrorValue(v42, v161, v160);
    uint64_t v45 = Error.localizedDescription.getter(v160[1], v160[2]);
    uint64_t v47 = v46;
    uint64_t v154 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v38,  v34,  v150,  v151,  v45,  v46,  v153,  0LL,  1);
    uint64_t v156 = v48;
    swift_bridgeObjectRelease(v47);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v44);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    uint64_t v49 = v157[6];
    uint64_t v50 = v157[7];
    uint64_t v157 = sub_6EA8(v157 + 3, v49);
    uint64_t v51 = enum case for ActivityType.failed(_:);
    uint64_t v52 = type metadata accessor for ActivityType(0LL);
    uint64_t v53 = *(void *)(v52 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v31, v51, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v31, 0LL, 1LL, v52);
    uint64_t v54 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56LL))(v26, 1LL, 1LL, v54);
    uint64_t v55 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v56 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = (uint64_t)v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v141, v55, v56);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0LL, 1LL, v56);
    id v59 = v155;
    id v60 = [v155 mediaItems];
    if (v60)
    {
      uint64_t v61 = v60;
      uint64_t v62 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);

      if ((unint64_t)v63 >> 62)
      {
        id v103 = v59;
        if (v63 < 0) {
          uint64_t v104 = v63;
        }
        else {
          uint64_t v104 = v63 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v63);
        uint64_t v105 = v104;
        id v59 = v103;
        uint64_t v106 = _CocoaArrayWrapper.endIndex.getter(v105);
        swift_bridgeObjectRelease(v63);
        if (v106) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v63 & 0xC000000000000001LL) != 0)
        {
          id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v63);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v64 = *(id *)(v63 + 32);
LABEL_8:
          uint64_t v65 = v64;
          swift_bridgeObjectRelease(v63);
          id v66 = [v65 type];

LABEL_23:
          uint64_t v107 = v156;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v144,  v59,  v31,  v26,  v58,  v154,  v156,  v66,  0,  v49,  v50);
          swift_bridgeObjectRelease(v107);
          sub_1F6CC(v58, &qword_2845A0);
          sub_1F6CC((uint64_t)v26, (uint64_t *)&unk_286BD0);
          sub_1F6CC((uint64_t)v31, &qword_2845A8);
          uint64_t v108 = v152;
          v158[0] = v152;
          char v159 = 1;
          swift_errorRetain(v152);
          v146(v158);
          swift_errorRelease(v108);
          sub_1F6CC((uint64_t)v158, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_38;
      }

      swift_bridgeObjectRelease(v63);
    }

    id v66 = 0LL;
    goto LABEL_23;
  }

  uint64_t v67 = *(int *)(v154 + 48);
  uint64_t v68 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v141 = v24;
  uint64_t v156 = *(void *)(v68 - 8);
  unint64_t v133 = *(void (**)(char *, char **, uint64_t))(v156 + 32);
  uint64_t v69 = v152;
  v133(v152, v41, v68);
  uint64_t v70 = *(char **)((char *)v41 + v67);
  *(void *)&v69[v67] = v70;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))( v38,  enum case for AdditionalMetricsDescription.ModuleName.sfmnvs(_:),  v35);
  uint64_t v132 = v35;
  uint64_t v71 = v148;
  uint64_t v72 = v149;
  (*(void (**)(char *, void, uint64_t))(v148 + 104))( v34,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v149);
  uint64_t v73 = v139;
  uint64_t v74 = v138;
  uint64_t v75 = v140;
  (*(void (**)(char *, void, uint64_t))(v139 + 104))( v138,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v140);
  uint64_t v76 = v70;
  uint64_t v131 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v38,  v34,  v150,  v151,  v74,  v153,  0LL,  1LL);
  uint64_t v150 = v77;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v72);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v132);
  uint64_t v78 = v157[6];
  uint64_t v149 = v157[7];
  sub_6EA8(v157 + 3, v78);
  uint64_t v79 = enum case for ActivityType.resolveSlotNeedsValue(_:);
  uint64_t v80 = type metadata accessor for ActivityType(0LL);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 104))(v147, v79, v80);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v82, 0LL, 1LL, v80);
  uint64_t v83 = v154;
  uint64_t v84 = *(int *)(v154 + 48);
  uint64_t v85 = v156;
  uint64_t v86 = v142;
  uint64_t v87 = (uint64_t)v152;
  uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
  v151((char *)v142, v152, v68);
  *(char **)((char *)v86 + v8sub_6C3C(v0 + 4) = v76;
  uint64_t v88 = v141;
  v133(v141, v86, v68);
  uint64_t v89 = *(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56);
  uint64_t v90 = (uint64_t)v88;
  uint64_t v153 = v68;
  v89(v88, 0LL, 1LL, v68);
  uint64_t v91 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v92 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v93 = *(void *)(v92 - 8);
  uint64_t v94 = (uint64_t)v143;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 104))(v143, v91, v92);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v94, 0LL, 1LL, v92);
  id v95 = v155;
  id v96 = [v155 mediaItems];
  uint64_t v130 = v76;
  if (!v96) {
    goto LABEL_29;
  }
  __int128 v97 = v96;
  uint64_t v98 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v99 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v97, v98);

  if ((unint64_t)v99 >> 62)
  {
    if (v99 < 0) {
      uint64_t v109 = v99;
    }
    else {
      uint64_t v109 = v99 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v99);
    uint64_t v110 = _CocoaArrayWrapper.endIndex.getter(v109);
    swift_bridgeObjectRelease(v99);
    if (v110) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  if (!*(void *)((char *)&dword_10 + (v99 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_28:
    swift_bridgeObjectRelease(v99);
LABEL_29:
    id v102 = 0LL;
    goto LABEL_30;
  }

LABEL_12:
  if ((v99 & 0xC000000000000001LL) != 0)
  {
    id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v99);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v99 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_38:
      __break(1u);
      return;
    }

    id v100 = *(id *)(v99 + 32);
  }

  uint64_t v101 = v100;
  swift_bridgeObjectRelease(v99);
  id v102 = [v101 type];

LABEL_30:
  id v111 = v95;
  uint64_t v112 = (uint64_t)v147;
  uint64_t v113 = v90;
  uint64_t v114 = v90;
  uint64_t v115 = v150;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v144,  v111,  v147,  v114,  v94,  v131,  v150,  v102,  0,  v78,  v149);
  swift_bridgeObjectRelease(v115);
  sub_1F6CC(v94, &qword_2845A0);
  sub_1F6CC(v113, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v112, &qword_2845A8);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v116 = v137;
  uint64_t v117 = sub_6960(v137, (uint64_t)qword_2969C8);
  uint64_t v118 = v135;
  uint64_t v119 = v134;
  uint64_t v120 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v135 + 16))(v134, v117, v116);
  uint64_t v121 = (os_log_s *)Logger.logObject.getter(v120);
  os_log_type_t v122 = static os_log_type_t.error.getter();
  BOOL v123 = os_log_type_enabled(v121, v122);
  uint64_t v124 = v130;
  if (v123)
  {
    uint64_t v125 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v125 = 0;
    _os_log_impl( &dword_0,  v121,  v122,  "SearchForMediaNeedsValueStrategy#makePromptForValue return confirmation view output",  v125,  2u);
    swift_slowDealloc(v125, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v116);
  sub_6EA8(v157 + 8, v157[11]);
  uint64_t v126 = *(int *)(v83 + 48);
  uint64_t v127 = (uint64_t)v136;
  uint64_t v128 = v153;
  v151(v136, (char *)v87, v153);
  *(void *)(v127 + v1sub_6C3C(v0 + 26) = v124;
  sub_1761E0(v127, v124, a10, v146, v145);

  sub_1F6CC(v87, &qword_289340);
  (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v127, v128);
}

  if ((v94 & 0xC000000000000001LL) != 0)
  {
    id v95 = v82;
    id v96 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v94);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_36:
      __break(1u);
      return;
    }

    id v95 = v82;
    id v96 = *(id *)(v94 + 32);
  }

  __int128 v97 = v96;
  uint64_t v98 = v80;
  swift_bridgeObjectRelease(v94);
  uint64_t v99 = [v97 type];

LABEL_31:
  uint64_t v105 = v90;
  uint64_t v107 = (uint64_t)v131;
  uint64_t v106 = (uint64_t)v132;
  uint64_t v108 = v89;
  uint64_t v109 = v89;
  uint64_t v110 = v124;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v128,  v105,  v131,  v132,  v109,  v120,  v124,  v99,  0,  v75,  v118);
  swift_bridgeObjectRelease(v110);
  sub_1F6CC(v108, &qword_2845A0);
  sub_1F6CC(v106, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v107, &qword_2845A8);
  sub_6EA8(v74 + 13, v74[16]);
  id v111 = *(int *)(v98 + 48);
  uint64_t v112 = (uint64_t)v121;
  uint64_t v113 = (uint64_t)v137;
  v95(v121, v137, v65);
  uint64_t v114 = v125;
  *(void *)(v112 + v111) = v125;
  uint64_t v115 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v116 = (uint64_t)v122;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v122, 1LL, 1LL, v115);
  sub_175200(v112, v114, v116, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v129, v130);

  sub_1F6CC(v116, (uint64_t *)&unk_286C50);
  sub_1F6CC(v113, &qword_289340);
  (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v112, v65);
}

    uint64_t v76 = v265;
    sub_15858(v281);
    double result = swift_release(v76);
    if (v75)
    {
      swift_bridgeObjectRelease(v270);

      swift_release(v64);
      double result = swift_bridgeObjectRelease(a1);
    }

    uint64_t v78 = 0LL;
    a1 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v80 = 0LL;
    uint64_t v81 = 0LL;
    uint64_t v82 = 0LL;
    uint64_t v83 = 0LL;
    uint64_t v84 = 0LL;
    uint64_t v85 = 0LL;
    uint64_t v86 = v266;
    goto LABEL_70;
  }

  id v60 = v270;
LABEL_21:
  uint64_t v279 = v56;
  uint64_t v280 = v58;
  id v103 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000LL) == 0) {
    id v103 = v56 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v104 = &unk_283000;
  if (!v103)
  {
    uint64_t v105 = v60;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v106 = v268;
    uint64_t v107 = sub_6960(v268, (uint64_t)qword_2969C8);
    uint64_t v108 = v269;
    uint64_t v109 = (void (*)(char *, uint64_t))*((void *)v269 + 2);
    v240 = (void (*)(char *, uint64_t, uint64_t))v107;
    uint64_t v241 = v109;
    ((void (*)(char *))v109)(v35);
    uint64_t v110 = swift_bridgeObjectRetain_n(v105, 2LL);
    id v111 = (os_log_s *)Logger.logObject.getter(v110);
    uint64_t v112 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v113 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v239 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v277[0] = v239;
      os_log_type_t v238 = v113;
      *(_DWORD *)uint64_t v113 = 136315138;
      uint64_t v237 = (os_log_t)(v113 + 4);
      uint64_t v114 = swift_bridgeObjectRetain(v105);
      uint64_t v115 = Array.description.getter(v114, v260);
      uint64_t v117 = v116;
      swift_bridgeObjectRelease(v105);
      uint64_t v275 = sub_6978(v115, v117, (uint64_t *)v277);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
      swift_bridgeObjectRelease_n(v105, 2LL);
      swift_bridgeObjectRelease(v117);
      uint64_t v118 = v238;
      _os_log_impl(&dword_0, v111, v112, "DisplayApp#init Empty bundleIDs, looking in installed apps: %s", v238, 0xCu);
      uint64_t v119 = v239;
      swift_arrayDestroy(v239, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v119, -1LL, -1LL);
      swift_slowDealloc(v118, -1LL, -1LL);

      uint64_t v120 = (void (*)(char *, uint64_t))v108[1];
      v120(v35, v268);
    }

    else
    {

      swift_bridgeObjectRelease_n(v105, 2LL);
      uint64_t v120 = (void (*)(char *, uint64_t))v108[1];
      v120(v35, v106);
    }

    uint64_t v121 = *(void *)(v105 + 16);
    uint64_t v104 = (void *)&unk_283000;
    if (v121)
    {
      os_log_type_t v122 = v105;
      BOOL v123 = v105 + ((*(unsigned __int8 *)(v264 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80));
      uint64_t v124 = v122;
      uint64_t v125 = *(void *)(v264 + 72);
      uint64_t v126 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v264 + 16);
      swift_bridgeObjectRetain(v124);
      uint64_t v127 = v260;
      while (1)
      {
        uint64_t v128 = v126(v16, v123, v127);
        uint64_t v129 = InstalledApp.bundleIdentifier.getter(v128);
        uint64_t v131 = v130;
        if (v129 == v267 && a1 == v130)
        {
          swift_bridgeObjectRelease(v270);
          goto LABEL_41;
        }

        uint64_t v132 = _stringCompareWithSmolCheck(_:_:expecting:)(v129, v130);
        swift_bridgeObjectRelease(v131);
        if ((v132 & 1) != 0) {
          break;
        }
        (*(void (**)(char *, uint64_t))(v264 + 8))(v16, v127);
        v123 += v125;
        if (!--v121)
        {
          swift_bridgeObjectRelease(v270);
          goto LABEL_47;
        }
      }

      uint64_t v131 = v270;
LABEL_41:
      swift_bridgeObjectRelease(v131);
      uint64_t v139 = v264;
      uint64_t v140 = *(void (**)(unint64_t, char *, uint64_t))(v264 + 32);
      uint64_t v141 = v245;
      v140(v245, v16, v127);
      uint64_t v142 = v246;
      uint64_t v143 = ((uint64_t (*)(char *, uint64_t, uint64_t))v140)(v246, v141, v127);
      uint64_t v144 = InstalledApp.appName.getter(v143);
      uint64_t v146 = v145;
      uint64_t v147 = v127;
      uint64_t v148 = v268;
      if (v146)
      {
        uint64_t v149 = v144;
        swift_bridgeObjectRelease(v280);
        uint64_t v150 = v244;
        ((void (*)(char *, void, uint64_t))v241)(v244, v240, v148);
        swift_bridgeObjectRetain_n(a1, 2LL);
        uint64_t v151 = swift_bridgeObjectRetain_n(v146, 2LL);
        os_log_type_t v152 = (os_log_s *)Logger.logObject.getter(v151);
        uint64_t v153 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v152, v153))
        {
          uint64_t v154 = swift_slowAlloc(22LL, -1LL);
          uint64_t v245 = swift_slowAlloc(64LL, -1LL);
          *(void *)&v277[0] = v245;
          *(_DWORD *)uint64_t v154 = 136315394;
          swift_bridgeObjectRetain(v146);
          uint64_t v275 = sub_6978(v149, v146, (uint64_t *)v277);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
          swift_bridgeObjectRelease_n(v146, 3LL);
          *(_WORD *)(v154 + 1sub_6C3C(v0 + 2) = 2080;
          swift_bridgeObjectRetain(a1);
          uint64_t v275 = sub_6978(v267, a1, (uint64_t *)v277);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v275, v276);
          swift_bridgeObjectRelease_n(a1, 3LL);
          _os_log_impl( &dword_0,  v152,  v153,  "DisplayApp#init overriding empty displayName with:%s for identifier:%s",  (uint8_t *)v154,  0x16u);
          id v155 = v245;
          swift_arrayDestroy(v245, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v155, -1LL, -1LL);
          swift_slowDealloc(v154, -1LL, -1LL);

          v120(v244, v268);
          (*(void (**)(char *, uint64_t))(v264 + 8))(v246, v260);
        }

        else
        {
          swift_bridgeObjectRelease_n(v146, 2LL);
          swift_bridgeObjectRelease_n(a1, 2LL);

          v120(v150, v148);
          (*(void (**)(char *, uint64_t))(v264 + 8))(v142, v260);
        }

        uint64_t v279 = v149;
        uint64_t v280 = v146;
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v139 + 8))(v142, v147);
      }

  if ((v98 & 0xC000000000000001LL) != 0)
  {
    uint64_t v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v98);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v98 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_34:
      __break(1u);
      return;
    }

    uint64_t v99 = *(id *)(v98 + 32);
  }

  id v100 = v99;
  swift_bridgeObjectRelease(v98);
  uint64_t v101 = [v100 type];

LABEL_29:
  uint64_t v107 = v91;
  uint64_t v108 = (uint64_t)v132;
  uint64_t v109 = (uint64_t)v133;
  uint64_t v110 = v121;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v129,  v107,  v133,  v132,  v90,  v120,  v121,  v101,  0,  v75,  v118);
  swift_bridgeObjectRelease(v110);
  sub_1F6CC(v90, &qword_2845A0);
  sub_1F6CC(v108, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v109, &qword_2845A8);
  sub_6EA8(v93 + 18, v93[21]);
  id v111 = *(int *)(v95 + 48);
  uint64_t v112 = (uint64_t)v122;
  uint64_t v113 = v127;
  v117(v122, v80, (uint64_t)v127);
  uint64_t v114 = v125;
  *(void *)(v112 + v111) = v125;
  uint64_t v115 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v116 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v123, 1LL, 1LL, v115);
  sub_175200(v112, v114, v116, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v130, v131);

  sub_1F6CC(v116, (uint64_t *)&unk_286C50);
  sub_1F6CC(v94, &qword_289340);
  (*((void (**)(uint64_t, char *))v126 + 1))(v112, v113);
}

  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(*v29 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  double result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))( *(void *)(v24 + 48) + *(void *)(v7 + 72) * a2,  v23,  v6);
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v27 = __OFADD__(v26, 1LL);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + sub_6C3C(v0 + 16) = v28;
    return result;
  }

  __break(1u);
LABEL_15:
  double result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

  if ((v99 & 0xC000000000000001LL) != 0)
  {
    id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v99);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v99 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_34:
      __break(1u);
      return;
    }

    id v100 = *(id *)(v99 + 32);
  }

  uint64_t v101 = v100;
  id v102 = objc_msgSend(v100, "type", swift_bridgeObjectRelease(v99).n128_f64[0]);

LABEL_29:
  uint64_t v121 = v76;
  uint64_t v109 = v94;
  uint64_t v110 = (uint64_t)v138;
  id v111 = (uint64_t)v139;
  uint64_t v112 = v93;
  uint64_t v113 = v93;
  uint64_t v114 = v123;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v135,  v109,  v139,  v138,  v113,  v122,  v123,  v102,  0,  v121,  v130);
  swift_bridgeObjectRelease(v114);
  sub_1F6CC(v112, &qword_2845A0);
  sub_1F6CC(v110, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v111, &qword_2845A8);
  sub_6EA8(v75 + 8, v75[11]);
  uint64_t v115 = *(int *)(v81 + 48);
  uint64_t v116 = (uint64_t)v126;
  uint64_t v117 = v140;
  v84(v126, (char *)v96, v140);
  uint64_t v118 = v132;
  *(void *)(v116 + v11sub_6C3C(v0 + 5) = v132;
  uint64_t v119 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v120 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56LL))(v127, 1LL, 1LL, v119);
  sub_175200(v116, v118, v120, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v136, v137);

  sub_1F6CC(v120, (uint64_t *)&unk_286C50);
  sub_1F6CC(v96, &qword_289340);
  (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v116, v117);
}

    uint64_t v77 = v245;
    (*(void (**)(char *, uint64_t))(v244 + 8))(v247, v248);
    swift_release(v77);
    if (v76)
    {
      swift_bridgeObjectRelease(v60);

      swift_release(v64);
      swift_bridgeObjectRelease(a1);
    }

    uint64_t v78 = 0LL;
    a1 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v80 = 0LL;
    uint64_t v81 = 0LL;
    uint64_t v82 = 0LL;
    uint64_t v83 = 0LL;
    uint64_t v84 = 0LL;
    uint64_t v85 = 0LL;
    uint64_t v86 = v246;
    goto LABEL_58;
  }

  id v59 = v249;
LABEL_21:
  uint64_t v261 = v55;
  id v262 = v57;
  id v102 = HIBYTE(v57) & 0xF;
  if ((v57 & 0x2000000000000000LL) == 0) {
    id v102 = v55 & 0xFFFFFFFFFFFFLL;
  }
  if (!v102)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v126 = sub_6960(v59, (uint64_t)qword_2969C8);
    uint64_t v127 = v251;
    uint64_t v128 = (char *)v251[2];
    BOOL v223 = (void (*)(char *, uint64_t))v126;
    uint64_t v228 = v128;
    ((void (*)(char *))v128)(v33);
    uint64_t v129 = v252;
    uint64_t v130 = swift_bridgeObjectRetain_n(v252, 2LL);
    uint64_t v131 = (os_log_s *)Logger.logObject.getter(v130);
    uint64_t v132 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v131, v132))
    {
      unint64_t v133 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v222 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc(32LL, -1LL);
      *(void *)&v259[0] = v222;
      *(_DWORD *)unint64_t v133 = 136315138;
      uint64_t v221 = v133 + 4;
      swift_bridgeObjectRetain(v129);
      uint64_t v135 = Array.description.getter(v134, v243);
      uint64_t v137 = v136;
      swift_bridgeObjectRelease(v129);
      uint64_t v257 = sub_6978(v135, v137, (uint64_t *)v259);
      id v59 = v249;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
      swift_bridgeObjectRelease_n(v129, 2LL);
      swift_bridgeObjectRelease(v137);
      _os_log_impl(&dword_0, v131, v132, "DisplayApp#init Empty bundleIDs, looking in installed apps: %s", v133, 0xCu);
      uint64_t v138 = v222;
      swift_arrayDestroy(v222, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v138, -1LL, -1LL);
      swift_slowDealloc(v133, -1LL, -1LL);

      uint64_t v139 = v251[1];
    }

    else
    {

      swift_bridgeObjectRelease_n(v129, 2LL);
      uint64_t v139 = v127[1];
    }

    ((void (*)(char *, uint64_t))v139)(v33, v59);
    __int128 v180 = v129[2];
    if (v180)
    {
      uint64_t v181 = (uint64_t)v252
           + ((*(unsigned __int8 *)(v242 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80));
      __int128 v182 = *(void *)(v242 + 72);
      uint64_t v183 = *(uint64_t (**)(char *, uint64_t, void (*)(char *, uint64_t, uint64_t), __n128))(v242 + 16);
      uint64_t v184 = swift_bridgeObjectRetain(v252);
      uint64_t v185 = v243;
      while (1)
      {
        uint64_t v186 = v183(v14, v181, v185, v184);
        uint64_t v187 = InstalledApp.bundleIdentifier.getter(v186);
        BOOL v189 = v188;
        if (v187 == v250 && a1 == v188)
        {
          swift_bridgeObjectRelease(v252);
          goto LABEL_62;
        }

        uint64_t v190 = _stringCompareWithSmolCheck(_:_:expecting:)(v187, v188);
        uint64_t v191 = swift_bridgeObjectRelease(v189);
        if ((v190 & 1) != 0) {
          break;
        }
        uint64_t v185 = v243;
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t), __n128))(v242 + 8))( v14,  v243,  v191);
        v181 += v182;
        if (!--v180)
        {
          swift_bridgeObjectRelease(v252);
          goto LABEL_24;
        }
      }

      BOOL v189 = v252;
      uint64_t v185 = v243;
LABEL_62:
      uint64_t v201 = swift_bridgeObjectRelease(v189);
      uint64_t v202 = v242;
      uint64_t v203 = *(void (**)(uint64_t, char *, void (*)(char *, uint64_t, uint64_t), __n128))(v242 + 32);
      uint64_t v204 = v227;
      v203(v227, v14, v185, v201);
      uint64_t v205 = v229;
      uint64_t v206 = ((uint64_t (*)(char *, uint64_t, void))v203)(v229, v204, v185);
      uint64_t v207 = InstalledApp.appName.getter(v206);
      if (v208)
      {
        os_log_type_t v209 = v208;
        uint64_t v227 = v207;
        uint64_t v210 = swift_bridgeObjectRelease(v262);
        uint64_t v211 = v226;
        ((void (*)(char *, void (*)(char *, uint64_t), uint64_t, __n128))v228)( v226,  v223,  v59,  v210);
        swift_bridgeObjectRetain_n(a1, 2LL);
        uint64_t v212 = swift_bridgeObjectRetain_n(v209, 2LL);
        uint64_t v213 = (os_log_s *)Logger.logObject.getter(v212);
        unint64_t v214 = static os_log_type_t.default.getter(v213);
        if (os_log_type_enabled(v213, v214))
        {
          unint64_t v215 = swift_slowAlloc(22LL, -1LL);
          uint64_t v216 = swift_slowAlloc(64LL, -1LL);
          *(void *)&v259[0] = v216;
          *(_DWORD *)unint64_t v215 = 136315394;
          swift_bridgeObjectRetain(v209);
          uint64_t v217 = v227;
          uint64_t v257 = sub_6978(v227, v209, (uint64_t *)v259);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
          swift_bridgeObjectRelease_n(v209, 3LL);
          *(_WORD *)(v215 + 1sub_6C3C(v0 + 2) = 2080;
          swift_bridgeObjectRetain(a1);
          uint64_t v257 = sub_6978(v250, (unint64_t)a1, (uint64_t *)v259);
          id v59 = v249;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
          swift_bridgeObjectRelease_n(a1, 3LL);
          _os_log_impl( &dword_0,  v213,  v214,  "DisplayApp#init overriding empty displayName with:%s for identifier:%s",  (uint8_t *)v215,  0x16u);
          swift_arrayDestroy(v216, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v216, -1LL, -1LL);
          swift_slowDealloc(v215, -1LL, -1LL);

          ((void (*)(char *, uint64_t))v139)(v226, v59);
          (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v242 + 8))(v229, v243);
        }

        else
        {
          swift_bridgeObjectRelease_n(v209, 2LL);
          swift_bridgeObjectRelease_n(a1, 2LL);

          ((void (*)(char *, uint64_t))v139)(v211, v59);
          (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v242 + 8))(v205, v185);
          uint64_t v217 = v227;
        }

        uint64_t v261 = v217;
        id v262 = v209;
      }

      else
      {
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v202 + 8))(v205, v185);
      }
    }
  }

  if ((v88 & 0xC000000000000001LL) != 0)
  {
    uint64_t v89 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v88);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v88 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      goto LABEL_140;
    }

    uint64_t v89 = *(id *)(v88 + 32);
  }

  uint64_t v90 = v89;
  swift_bridgeObjectRelease(v88);
  uint64_t v91 = [v90 privateMediaItemValueData];

  if (!v91) {
    goto LABEL_24;
  }
  uint64_t v92 = [v91 internalSignals];

  if (!v92) {
    goto LABEL_23;
  }
  uint64_t v91 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)(v92, &type metadata for String);

LABEL_24:
  *(void *)&uint64_t v420 = v91;
  id v95 = String.init<A>(describing:)(&v420, v80);
  __int128 v97 = v96;
  *(void *)&uint64_t v420 = sub_6978(v95, v96, (uint64_t *)&v423);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v420, (char *)&v420 + 8);
  uint64_t v98 = v414;

  uint64_t v99 = v97;
  uint64_t v68 = v98;
  swift_bridgeObjectRelease(v99);
  _os_log_impl( &dword_0,  v69,  (os_log_type_t)v375,  "PlayMediaDialogProvider: makePlayDialog with intent internal signals: %s and first media item signals: %s",  (uint8_t *)v73,  0x16u);
  swift_arrayDestroy(v74, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v74, -1LL, -1LL);
  swift_slowDealloc(v73, -1LL, -1LL);

  uint64_t v78 = (void *)v376[1];
  uint64_t v72 = v396;
  uint64_t v79 = ((uint64_t (*)(_BYTE *, uint64_t))v78)(v62, v396);
LABEL_25:
  uint64_t v101 = (uint64_t)v411;
  id v100 = v412;
  id v102 = v413;
  App.appIdentifier.getter(v79);
  if (!v103)
  {
    uint64_t v113 = v399;
    uint64_t v114 = v410(v399, v409, v72);
    uint64_t v115 = (os_log_s *)Logger.logObject.getter(v114);
    uint64_t v116 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v115, v116))
    {
      uint64_t v117 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v117 = 0;
      _os_log_impl(&dword_0, v115, v116, "Missing app bundle identifier", v117, 2u);
      swift_slowDealloc(v117, -1LL, -1LL);
    }

    ((void (*)(_BYTE *, uint64_t))v78)(v113, v72);
    uint64_t v118 = sub_6C9C();
    uint64_t v119 = swift_allocError(&type metadata for String, v118, 0LL, 0LL);
    *uint64_t v120 = 0xD00000000000001DLL;
    v120[1] = 0x8000000000220870LL;
    uint64_t v121 = v402;
    os_log_type_t v122 = (uint64_t)v403;
    *uint64_t v403 = v119;
    swift_storeEnumTagMultiPayload(v122, v121, 1LL);
    sub_1F65D8(v122, (void *)v404, v406, v401, v408, v405, v407);
    BOOL v123 = (uint64_t *)&unk_286BB0;
    uint64_t v124 = (_BYTE *)v122;
    goto LABEL_37;
  }

  if ((v400 & 1) == 0)
  {
    swift_bridgeObjectRelease(v103);
    uint64_t v125 = v398;
    uint64_t v126 = v410(v398, v409, v72);
    uint64_t v127 = (os_log_s *)Logger.logObject.getter(v126);
    uint64_t v128 = static os_log_type_t.info.getter(v127);
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl(&dword_0, v127, v128, "PlayMediaDialogProvider suppressing dialog for non-interstitial", v129, 2u);
      swift_slowDealloc(v129, -1LL, -1LL);
    }

    ((void (*)(_BYTE *, uint64_t))v78)(v125, v72);
    uint64_t v130 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v131 = (uint64_t)v403;
    *(void *)(v131 + v130) = sub_155584();
    swift_storeEnumTagMultiPayload(v131, v402, 0LL);
    sub_1F65D8(v131, (void *)v404, v406, v401, v408, v405, v407);
    BOOL v123 = (uint64_t *)&unk_286BB0;
    uint64_t v124 = (_BYTE *)v131;
    goto LABEL_37;
  }

  uint64_t v376 = v78;
  uint64_t v408 = v103;
  uint64_t v414 = v68;
  *(void *)&uint64_t v423 = v68;
  os_log_type_t v406 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  BOOL v407 = MediaIntentCommons.getMediaType()(v406, &protocol witness table for INPlayMediaIntent);
  uint64_t v104 = sub_6C5C(&qword_28B5F0);
  uint64_t inited = swift_initStackObject(v104, v426);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
  sub_157C4(v100 + 168, (uint64_t)&v423);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 4LL;
  sub_FF54(&v423, inited + 40);
  swift_bridgeObjectRetain(inited);
  sub_2FD10(inited + 32, (uint64_t)&v418);
  uint64_t v106 = *sub_6EA8(v419, v419[3]);
  swift_beginAccess(v106 + 16, &v417, 0LL, 0LL);
  uint64_t v107 = *(void *)(v106 + 16);
  if (*(void *)(v107 + 16))
  {
    uint64_t v108 = v101;
    swift_bridgeObjectRetain(v107);
    uint64_t v109 = sub_9A744(0xD00000000000001ALL, 0x800000000021D140LL);
    if ((v110 & 1) != 0)
    {
      id v111 = *(void *)(*(void *)(v107 + 56) + 8 * v109);
      swift_bridgeObjectRelease(v107);
      uint64_t v112 = v397;
      if (v111 < v418) {
        goto LABEL_44;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v107);
      uint64_t v112 = v397;
      if (v418 >= 1) {
        goto LABEL_44;
      }
    }
  }

  else
  {
    uint64_t v108 = v101;
    uint64_t v112 = v397;
    if (v418 > 0) {
      goto LABEL_44;
    }
  }

  unint64_t v133 = v410(v112, v409, v72);
  uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
  uint64_t v135 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v134, v135))
  {
    uint64_t v136 = swift_slowAlloc(12LL, -1LL);
    uint64_t v396 = v72;
    uint64_t v137 = v136;
    uint64_t v138 = v100;
    uint64_t v139 = swift_slowAlloc(32LL, -1LL);
    uint64_t v415 = v139;
    *(_DWORD *)uint64_t v137 = 136315138;
    *(void *)(v137 + sub_6C3C(v0 + 4) = sub_6978(0xD00000000000001ALL, 0x800000000021D140LL, &v415);
    _os_log_impl( &dword_0,  v134,  v135,  "DialogMemoryUseCase#%s#meetsCondition dialog occurence exceeded the dialog memory limit",  (uint8_t *)v137,  0xCu);
    swift_arrayDestroy(v139, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v140 = v139;
    id v100 = v138;
    uint64_t v141 = v413;
    swift_slowDealloc(v140, -1LL, -1LL);
    uint64_t v142 = v137;
    id v102 = v141;
    uint64_t v72 = v396;
    swift_slowDealloc(v142, -1LL, -1LL);
  }

  ((void (*)(_BYTE *, uint64_t))v376)(v112, v72);
LABEL_44:
  sub_2FD94((uint64_t)&v418);
  swift_bridgeObjectRelease(inited);
  uint64_t v421 = 0u;
  uint64_t v422 = 0u;
  uint64_t v420 = 0u;
  swift_bridgeObjectRelease(inited);
  if ((void)v422)
  {
    swift_bridgeObjectRelease(v408);
    uint64_t v423 = v420;
    uint64_t v424 = v421;
    char v425 = v422;
    sub_15DF60(v102, v414, *(void **)(v100 + 120), (uint64_t)sub_16F208, v108);
    sub_2FD94((uint64_t)&v423);
    uint64_t v132 = v108;
    return swift_release(v132);
  }

  sub_1F6CC((uint64_t)&v420, &qword_28B5F8);
  uint64_t v144 = v414;
  if ((sub_18048C(v102) & 1) != 0)
  {
    swift_bridgeObjectRelease(v408);
    uint64_t v145 = [v144 privatePlayMediaIntentData];
    uint64_t v146 = v145;
    if (v145)
    {
      uint64_t v147 = [v145 pegasusMetaData];

      uint64_t v148 = v102;
      uint64_t v149 = v72;
      if (v147)
      {
        uint64_t v146 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v147);
        uint64_t v151 = v150;

LABEL_68:
        unint64_t v179 = v395;
        sub_1C75F0((uint64_t)v146, v151, (uint64_t)v395);
        sub_16B6A0((uint64_t)v146, v151);
        __int128 v180 = v393;
        sub_FF10((uint64_t)v179, (uint64_t)v393, &qword_28B5E8);
        uint64_t v181 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
        __int128 v182 = *(void *)(v181 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v182 + 48))(v180, 1LL, v181) == 1)
        {
          sub_1F6CC((uint64_t)v180, &qword_28B5E8);
          uint64_t v183 = 0LL;
          uint64_t v184 = 0LL;
        }

        else
        {
          uint64_t v183 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.nlsContainerID.getter();
          uint64_t v184 = v185;
          (*(void (**)(_BYTE *, uint64_t))(v182 + 8))(v180, v181);
        }

        uint64_t v186 = v394;
        uint64_t v187 = v149;
        v410(v394, v409, v149);
        os_log_type_t v188 = swift_bridgeObjectRetain(v184);
        BOOL v189 = (os_log_s *)Logger.logObject.getter(v188);
        uint64_t v190 = static os_log_type_t.info.getter(v189);
        if (os_log_type_enabled(v189, v190))
        {
          uint64_t v396 = v149;
          uint64_t v191 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v192 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v191 = 138412290;
          if (v184)
          {
            uint64_t v193 = sub_6C9C();
            uint64_t v194 = swift_allocError(&type metadata for String, v193, 0LL, 0LL);
            *uint64_t v195 = v183;
            v195[1] = v184;
            swift_bridgeObjectRetain(v184);
            uint64_t v196 = v194;
            uint64_t v101 = (uint64_t)v411;
            uint64_t v197 = _swift_stdlib_bridgeErrorToNSError(v196);
            *(void *)&uint64_t v423 = v197;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v423, (char *)&v423 + 8);
          }

          else
          {
            *(void *)&uint64_t v423 = 0LL;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v423, (char *)&v423 + 8);
            uint64_t v197 = 0LL;
            uint64_t v101 = (uint64_t)v411;
          }

          *uint64_t v192 = v197;
          swift_bridgeObjectRelease_n(v184, 2LL);
          _os_log_impl(&dword_0, v189, v190, "PlayMediaDialogProvider going to makeNlsContainer for %@", v191, 0xCu);
          uint64_t v199 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v192, 1LL, v199);
          swift_slowDealloc(v192, -1LL, -1LL);
          swift_slowDealloc(v191, -1LL, -1LL);

          uint64_t v198 = v413;
          uint64_t v187 = v396;
          uint64_t v186 = v394;
        }

        else
        {

          swift_bridgeObjectRelease_n(v184, 2LL);
          uint64_t v198 = v148;
          uint64_t v101 = (uint64_t)v411;
        }

        ((void (*)(_BYTE *, uint64_t))v376)(v186, v187);
        sub_15E198(v198, v414, (uint64_t)sub_16F208, v101);
        BOOL v123 = &qword_28B5E8;
        uint64_t v124 = v395;
LABEL_37:
        sub_1F6CC((uint64_t)v124, v123);
        uint64_t v132 = v101;
        return swift_release(v132);
      }

      uint64_t v146 = 0LL;
    }

    else
    {
      uint64_t v148 = v102;
      uint64_t v149 = v72;
    }

    uint64_t v151 = 0xF000000000000000LL;
    goto LABEL_68;
  }

  os_log_type_t v152 = v108;
  sub_25864();
  uint64_t v153 = (void (*)(_BYTE *, uint64_t))v376;
  if ((v154 & 1) != 0)
  {
    swift_bridgeObjectRelease(v408);
    id v155 = v392;
    uint64_t v156 = v410(v392, v409, v72);
    uint64_t v157 = (os_log_s *)Logger.logObject.getter(v156);
    uint64_t v158 = static os_log_type_t.info.getter(v157);
    if (os_log_type_enabled(v157, v158))
    {
      char v159 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v159 = 0;
      _os_log_impl( &dword_0,  v157,  v158,  "PlayMediaDialogProvider going to isPodcastPromotion for storytelling",  v159,  2u);
      uint64_t v160 = v159;
      uint64_t v144 = v414;
      swift_slowDealloc(v160, -1LL, -1LL);
    }

    v153(v155, v72);
    sub_15E560(v102, v144, (uint64_t)sub_16F208, v152);
    uint64_t v132 = v152;
    return swift_release(v132);
  }

  uint64_t v161 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  uint64_t v162 = (void *)INPlayMediaIntent.privateMediaIntentData.getter();
  Class isa = (Class)[v162 isAppCorrection];

  if (!isa) {
    Class isa = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
  }
  id v164 = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
  __int128 v165 = static NSObject.== infix(_:_:)(isa, v164);

  if ((v165 & 1) == 0)
  {
    swift_bridgeObjectRelease(v408);
    os_log_type_t v174 = v391;
    uint64_t v175 = v410(v391, v409, v72);
    uint64_t v176 = (os_log_s *)Logger.logObject.getter(v175);
    uint64_t v177 = static os_log_type_t.info.getter(v176);
    if (os_log_type_enabled(v176, v177))
    {
      unint64_t v178 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v178 = 0;
      _os_log_impl( &dword_0,  v176,  v177,  "PlayMediaDialogProvider going to makePlayWithAppCorrection for app correction",  v178,  2u);
      swift_slowDealloc(v178, -1LL, -1LL);
    }

    v153(v174, v72);
    sub_163208(v102, v414, (uint64_t)sub_16F208, v152);
    uint64_t v132 = v152;
    return swift_release(v132);
  }

  uint64_t v166 = v414;
  sub_2FE18();
  if ((v167 & 1) != 0)
  {
    swift_bridgeObjectRelease(v408);
    uint64_t v168 = v390;
    uint64_t v169 = v410(v390, v409, v72);
    unsigned __int8 v170 = (os_log_s *)Logger.logObject.getter(v169);
    uint64_t v171 = static os_log_type_t.info.getter(v170);
    if (os_log_type_enabled(v170, v171))
    {
      uint64_t v172 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v172 = 0;
      _os_log_impl( &dword_0,  v170,  v171,  "PlayMediaDialogProvider going to makeWholeLibrary when playback item identifier is to play whole library",  v172,  2u);
      uint64_t v173 = v172;
      uint64_t v166 = v414;
      swift_slowDealloc(v173, -1LL, -1LL);
    }

    v153(v168, v72);
    sub_15FBCC(v102, v166, (uint64_t)sub_16F208, v152);
    uint64_t v132 = v152;
    return swift_release(v132);
  }

  uint64_t v396 = v72;
  sub_30240();
  if (v201)
  {
    uint64_t v88 = v200;
    uint64_t v73 = v201;
    *(void *)&uint64_t v423 = v200;
    *((void *)&v423 + 1) = v201;
    *(void *)&uint64_t v420 = 0x7C295C3F2A2E285CLL;
    *((void *)&v420 + 1) = 0xEF5D5C3F2A2E5B5CLL;
    uint64_t v418 = 0LL;
    v419[0] = 0xE000000000000000LL;
    uint64_t v202 = sub_6D68();
    uint64_t v69 = (os_log_s *)StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v420,  &v418,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v202,  v202,  v202);
    uint64_t v204 = v203;
    uint64_t v74 = (void *)String.count.getter(v88, v73);
    uint64_t v205 = String.count.getter(v69, v204);
    if (__OFSUB__(v74, v205))
    {
      __break(1u);
      goto LABEL_210;
    }

    if ((uint64_t)v74 - v205 < 35 || String.count.getter(v69, v204) <= 5)
    {
      swift_bridgeObjectRelease(v204);
    }

    else
    {
      swift_bridgeObjectRelease(v73);
      uint64_t v88 = (uint64_t)v69;
      uint64_t v73 = v204;
    }
  }

  else
  {
    sub_30240();
    uint64_t v88 = v206;
    uint64_t v73 = v207;
  }

  uint64_t v208 = (void *)sub_3024C();
  uint64_t v210 = v209;
  swift_bridgeObjectRetain(v209);
  uint64_t v211 = INPlayMediaIntent.isCreateRadioFromCurrentlyPlayingUnknownReference()()
      && INPlayMediaIntent.isServerSearchSuppressed()();
  if (!(v73 | v210))
  {
    uint64_t v212 = [v414 mediaSearch];
    if (v212)
    {
      uint64_t v213 = v212;
      unint64_t v214 = v161;
      unint64_t v215 = v211;
      uint64_t v216 = v73;
      uint64_t v217 = v88;
      uint64_t v218 = v208;
      uint64_t v219 = v210;
      uint64_t v220 = (char *)[v212 reference];

      uint64_t v221 = v220 == (_BYTE *)&dword_0 + 1;
      uint64_t v210 = v219;
      uint64_t v208 = v218;
      uint64_t v88 = v217;
      uint64_t v73 = v216;
      uint64_t v211 = v215;
      uint64_t v161 = v214;
      uint64_t v153 = (void (*)(_BYTE *, uint64_t))v376;
      os_log_type_t v222 = v221;
      if (((v222 | v211) & 1) != 0) {
        goto LABEL_94;
      }
    }

    else if (v211)
    {
      goto LABEL_94;
    }

    swift_bridgeObjectRelease(v408);
    uint64_t v237 = v388;
    os_log_type_t v238 = v396;
    os_log_type_t v239 = v410(v388, v409, v396);
    v240 = (os_log_s *)Logger.logObject.getter(v239);
    uint64_t v241 = static os_log_type_t.info.getter(v240);
    if (os_log_type_enabled(v240, v241))
    {
      uint64_t v242 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v242 = 0;
      _os_log_impl( &dword_0,  v240,  v241,  "PlayMediaDialogProvider going to makePlayDialogEmptyContentTitle for empty title and artist",  v242,  2u);
      swift_slowDealloc(v242, -1LL, -1LL);
    }

    v153(v237, v238);
    sub_15E380(v413, v414, (uint64_t)sub_16F208, v152);
    uint64_t v132 = v152;
    return swift_release(v132);
  }

  if ((v90 & 0xC000000000000001LL) != 0)
  {
    uint64_t v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v90);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      goto LABEL_140;
    }

    uint64_t v91 = *(id *)(v90 + 32);
  }

  uint64_t v92 = v91;
  swift_bridgeObjectRelease(v90);
  uint64_t v93 = [v92 privateMediaItemValueData];

  if (!v93) {
    goto LABEL_24;
  }
  uint64_t v94 = [v93 internalSignals];

  if (!v94) {
    goto LABEL_23;
  }
  uint64_t v93 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)(v94, &type metadata for String);

LABEL_24:
  *(void *)&uint64_t v414 = v93;
  __int128 v97 = String.init<A>(describing:)(&v414, v82);
  uint64_t v99 = v98;
  *(void *)&uint64_t v414 = sub_6978(v97, v98, (uint64_t *)&v417);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v414, (char *)&v414 + 8);

  id v100 = v99;
  uint64_t v68 = (void *)v73;
  swift_bridgeObjectRelease(v100);
  _os_log_impl( &dword_0,  v69,  v70,  "PlayMediaDialogProvider: makePlayDialog with intent internal signals: %s and first media item signals: %s",  v72,  0x16u);
  uint64_t v101 = v371;
  swift_arrayDestroy(v371, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v101, -1LL, -1LL);
  swift_slowDealloc(v72, -1LL, -1LL);

  uint64_t v77 = *(void (**)(char *, void *))(v372 + 8);
  uint64_t v21 = v405;
  uint64_t v78 = ((uint64_t (*)(char *, void *))v77)(v62, v405);
  uint64_t v81 = (uint64_t)v406;
  uint64_t v79 = v407;
  uint64_t v80 = v408;
LABEL_25:
  App.appIdentifier.getter(v78);
  if (!v102)
  {
    uint64_t v113 = v394;
    uint64_t v114 = v404(v394, v403, v21);
    uint64_t v115 = (os_log_s *)Logger.logObject.getter(v114);
    uint64_t v116 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v115, v116))
    {
      uint64_t v117 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v117 = 0;
      _os_log_impl(&dword_0, v115, v116, "Missing app bundle identifier", v117, 2u);
      swift_slowDealloc(v117, -1LL, -1LL);
    }

    v77(v113, v21);
    uint64_t v118 = sub_6C9C();
    uint64_t v119 = swift_allocError(&type metadata for String, v118, 0LL, 0LL);
    *uint64_t v120 = 0xD00000000000001DLL;
    v120[1] = 0x8000000000220870LL;
    uint64_t v121 = v397;
    os_log_type_t v122 = (void *)v398;
    *(void *)uint64_t v398 = v119;
    swift_storeEnumTagMultiPayload(v122, v121, 1LL);
    sub_16B6BC(v122, v399, (uint64_t)v401, v396, v402, v400);
    BOOL v123 = (uint64_t *)&unk_286BB0;
    uint64_t v124 = (uint64_t)v122;
    goto LABEL_37;
  }

  id v103 = v102;
  if ((v395 & 1) == 0)
  {
    swift_bridgeObjectRelease(v102);
    uint64_t v125 = v393;
    uint64_t v126 = v404(v393, v403, v21);
    uint64_t v127 = (os_log_s *)Logger.logObject.getter(v126);
    uint64_t v128 = static os_log_type_t.info.getter(v127);
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl(&dword_0, v127, v128, "PlayMediaDialogProvider suppressing dialog for non-interstitial", v129, 2u);
      swift_slowDealloc(v129, -1LL, -1LL);
    }

    v77(v125, v21);
    uint64_t v130 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v131 = (void *)v398;
    *(void *)((char *)v131 + v130) = sub_155584();
    swift_storeEnumTagMultiPayload(v131, v397, 0LL);
    sub_16B6BC(v131, v399, (uint64_t)v401, v396, v402, v400);
    BOOL v123 = (uint64_t *)&unk_286BB0;
    uint64_t v124 = (uint64_t)v131;
    goto LABEL_37;
  }

  v401 = (void (*)(char *, id))v77;
  uint64_t v402 = (void (*)(void *))v68;
  *(void *)&uint64_t v417 = v68;
  uint64_t v399 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v400 = MediaIntentCommons.getMediaType()(v399, &protocol witness table for INPlayMediaIntent);
  uint64_t v104 = sub_6C5C(&qword_28B5F0);
  uint64_t inited = swift_initStackObject(v104, v420);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
  sub_157C4(v80 + 168, (uint64_t)&v417);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 4LL;
  sub_FF54(&v417, inited + 40);
  swift_bridgeObjectRetain(inited);
  sub_2FD10(inited + 32, (uint64_t)&v412);
  uint64_t v106 = *sub_6EA8(v413, v413[3]);
  swift_beginAccess(v106 + 16, &v411, 0LL, 0LL);
  uint64_t v107 = *(void *)(v106 + 16);
  if (*(void *)(v107 + 16))
  {
    uint64_t v108 = v81;
    swift_bridgeObjectRetain(v107);
    uint64_t v109 = sub_9A744(0xD00000000000001ALL, 0x800000000021D140LL);
    if ((v110 & 1) != 0)
    {
      id v111 = *(void *)(*(void *)(v107 + 56) + 8 * v109);
      swift_bridgeObjectRelease(v107);
      uint64_t v112 = v392;
      if (v111 < v412) {
        goto LABEL_44;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v107);
      uint64_t v112 = v392;
      if (v412 >= 1) {
        goto LABEL_44;
      }
    }
  }

  else
  {
    uint64_t v108 = v81;
    uint64_t v112 = v392;
    if (v412 > 0) {
      goto LABEL_44;
    }
  }

  unint64_t v133 = v404(v112, v403, v21);
  uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
  uint64_t v135 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v134, v135))
  {
    uint64_t v136 = swift_slowAlloc(12LL, -1LL);
    uint64_t v405 = v21;
    uint64_t v137 = v136;
    uint64_t v138 = swift_slowAlloc(32LL, -1LL);
    uint64_t v409 = v138;
    *(_DWORD *)uint64_t v137 = 136315138;
    *(void *)(v137 + sub_6C3C(v0 + 4) = sub_6978(0xD00000000000001ALL, 0x800000000021D140LL, &v409);
    _os_log_impl( &dword_0,  v134,  v135,  "DialogMemoryUseCase#%s#meetsCondition dialog occurence exceeded the dialog memory limit",  (uint8_t *)v137,  0xCu);
    swift_arrayDestroy(v138, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v139 = v138;
    uint64_t v79 = v407;
    swift_slowDealloc(v139, -1LL, -1LL);
    uint64_t v140 = v137;
    uint64_t v21 = v405;
    swift_slowDealloc(v140, -1LL, -1LL);
  }

  v401(v112, v21);
LABEL_44:
  sub_2FD94((uint64_t)&v412);
  swift_bridgeObjectRelease(inited);
  uint64_t v415 = 0u;
  uint64_t v416 = 0u;
  uint64_t v414 = 0u;
  swift_bridgeObjectRelease(inited);
  if ((void)v416)
  {
    swift_bridgeObjectRelease(v103);
    uint64_t v417 = v414;
    uint64_t v418 = v415;
    uint64_t v419 = v416;
    sub_15DF60(v79, v402, *(void **)(v408 + 120), (uint64_t)sub_16F138, v108);
    sub_2FD94((uint64_t)&v417);
    uint64_t v132 = v108;
    return swift_release(v132);
  }

  sub_1F6CC((uint64_t)&v414, &qword_28B5F8);
  uint64_t v142 = v402;
  uint64_t v81 = v108;
  if ((sub_18048C(v79) & 1) != 0)
  {
    swift_bridgeObjectRelease(v103);
    uint64_t v143 = [v142 privatePlayMediaIntentData];
    uint64_t v144 = v143;
    uint64_t v145 = v401;
    if (v143)
    {
      uint64_t v146 = [v143 pegasusMetaData];

      uint64_t v147 = v21;
      if (v146)
      {
        uint64_t v144 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v146);
        uint64_t v149 = v148;

LABEL_68:
        uint64_t v176 = v391;
        sub_1C75F0((uint64_t)v144, v149, v391);
        sub_16B6A0((uint64_t)v144, v149);
        uint64_t v177 = v389;
        sub_FF10(v176, v389, &qword_28B5E8);
        unint64_t v178 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
        unint64_t v179 = *(void *)(v178 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v177, 1LL, v178) == 1)
        {
          sub_1F6CC(v177, &qword_28B5E8);
          uint64_t v400 = 0LL;
          __int128 v180 = 0LL;
        }

        else
        {
          uint64_t v400 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.nlsContainerID.getter();
          __int128 v180 = v181;
          (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v177, v178);
        }

        __int128 v182 = v390;
        uint64_t v183 = v147;
        v404(v390, v403, v147);
        uint64_t v184 = swift_bridgeObjectRetain(v180);
        uint64_t v185 = (os_log_s *)Logger.logObject.getter(v184);
        uint64_t v186 = static os_log_type_t.info.getter(v185);
        if (os_log_type_enabled(v185, v186))
        {
          uint64_t v405 = v147;
          uint64_t v187 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          os_log_type_t v188 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v187 = 138412290;
          if (v180)
          {
            BOOL v189 = sub_6C9C();
            uint64_t v190 = swift_allocError(&type metadata for String, v189, 0LL, 0LL);
            *uint64_t v191 = v400;
            v191[1] = v180;
            swift_bridgeObjectRetain(v180);
            uint64_t v192 = _swift_stdlib_bridgeErrorToNSError(v190);
            *(void *)&uint64_t v417 = v192;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v417, (char *)&v417 + 8);
          }

          else
          {
            *(void *)&uint64_t v417 = 0LL;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v417, (char *)&v417 + 8);
            uint64_t v192 = 0LL;
          }

          *os_log_type_t v188 = v192;
          swift_bridgeObjectRelease_n(v180, 2LL);
          _os_log_impl(&dword_0, v185, v186, "PlayMediaDialogProvider going to makeNlsContainer for %@", v187, 0xCu);
          uint64_t v193 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v188, 1LL, v193);
          swift_slowDealloc(v188, -1LL, -1LL);
          swift_slowDealloc(v187, -1LL, -1LL);

          uint64_t v183 = v405;
          uint64_t v145 = v401;
          __int128 v182 = v390;
        }

        else
        {

          swift_bridgeObjectRelease_n(v180, 2LL);
        }

        v145(v182, v183);
        sub_15E198(v407, v402, (uint64_t)sub_16F138, v81);
        BOOL v123 = &qword_28B5E8;
        uint64_t v124 = v391;
LABEL_37:
        sub_1F6CC(v124, v123);
        uint64_t v132 = v81;
        return swift_release(v132);
      }

      uint64_t v144 = 0LL;
    }

    else
    {
      uint64_t v147 = v21;
    }

    uint64_t v149 = 0xF000000000000000LL;
    goto LABEL_68;
  }

  sub_25864();
  uint64_t v150 = v401;
  if ((v151 & 1) != 0)
  {
    swift_bridgeObjectRelease(v103);
    os_log_type_t v152 = v388;
    uint64_t v153 = v404(v388, v403, v21);
    uint64_t v154 = (os_log_s *)Logger.logObject.getter(v153);
    id v155 = static os_log_type_t.info.getter(v154);
    if (os_log_type_enabled(v154, v155))
    {
      uint64_t v156 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v156 = 0;
      _os_log_impl( &dword_0,  v154,  v155,  "PlayMediaDialogProvider going to isPodcastPromotion for storytelling",  v156,  2u);
      uint64_t v157 = v156;
      uint64_t v142 = v402;
      swift_slowDealloc(v157, -1LL, -1LL);
    }

    v150(v152, v21);
    sub_15E560(v79, v142, (uint64_t)sub_16F138, v108);
    uint64_t v132 = v108;
    return swift_release(v132);
  }

  uint64_t v158 = sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  char v159 = (void *)INPlayMediaIntent.privateMediaIntentData.getter();
  Class isa = (Class)[v159 isAppCorrection];

  if (!isa) {
    Class isa = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
  }
  uint64_t v161 = NSNumber.init(integerLiteral:)(0LL).super.super.isa;
  uint64_t v162 = static NSObject.== infix(_:_:)(isa, v161);

  if ((v162 & 1) == 0)
  {
    swift_bridgeObjectRelease(v103);
    uint64_t v171 = v387;
    uint64_t v172 = v404(v387, v403, v21);
    uint64_t v173 = (os_log_s *)Logger.logObject.getter(v172);
    os_log_type_t v174 = static os_log_type_t.info.getter(v173);
    if (os_log_type_enabled(v173, v174))
    {
      uint64_t v175 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v175 = 0;
      _os_log_impl( &dword_0,  v173,  v174,  "PlayMediaDialogProvider going to makePlayWithAppCorrection for app correction",  v175,  2u);
      swift_slowDealloc(v175, -1LL, -1LL);
    }

    v150(v171, v21);
    sub_163208(v79, v402, (uint64_t)sub_16F138, v81);
    uint64_t v132 = v81;
    return swift_release(v132);
  }

  uint64_t v163 = v402;
  sub_2FE18();
  if ((v164 & 1) != 0)
  {
    swift_bridgeObjectRelease(v103);
    __int128 v165 = v386;
    uint64_t v166 = v404(v386, v403, v21);
    unint64_t v167 = (os_log_s *)Logger.logObject.getter(v166);
    uint64_t v168 = static os_log_type_t.info.getter(v167);
    if (os_log_type_enabled(v167, v168))
    {
      uint64_t v169 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v169 = 0;
      _os_log_impl( &dword_0,  v167,  v168,  "PlayMediaDialogProvider going to makeWholeLibrary when playback item identifier is to play whole library",  v169,  2u);
      unsigned __int8 v170 = v169;
      uint64_t v163 = v402;
      swift_slowDealloc(v170, -1LL, -1LL);
    }

    v150(v165, v21);
    sub_15FBCC(v79, v163, (uint64_t)sub_16F138, v81);
    uint64_t v132 = v81;
    return swift_release(v132);
  }

  uint64_t v405 = v21;
  sub_30240();
  if (v195)
  {
    uint64_t v196 = v194;
    uint64_t v73 = v195;
    *(void *)&uint64_t v417 = v194;
    *((void *)&v417 + 1) = v195;
    *(void *)&uint64_t v414 = 0x7C295C3F2A2E285CLL;
    *((void *)&v414 + 1) = 0xEF5D5C3F2A2E5B5CLL;
    uint64_t v412 = 0LL;
    v413[0] = 0xE000000000000000LL;
    uint64_t v197 = sub_6D68();
    uint64_t v72 = (uint8_t *)StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v414,  &v412,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v197,  v197,  v197);
    uint64_t v199 = v198;
    uint64_t v200 = String.count.getter(v196, v73);
    uint64_t v201 = String.count.getter(v72, v199);
    if (__OFSUB__(v200, v201))
    {
      __break(1u);
      goto LABEL_210;
    }

    if (v200 - v201 < 35 || String.count.getter(v72, v199) <= 5)
    {
      swift_bridgeObjectRelease(v199);
    }

    else
    {
      swift_bridgeObjectRelease(v73);
      uint64_t v196 = (uint64_t)v72;
      uint64_t v73 = v199;
    }
  }

  else
  {
    sub_30240();
    uint64_t v196 = v202;
    uint64_t v73 = v203;
  }

  uint64_t v204 = sub_3024C();
  uint64_t v206 = v205;
  swift_bridgeObjectRetain(v205);
  uint64_t v207 = INPlayMediaIntent.isCreateRadioFromCurrentlyPlayingUnknownReference()()
      && INPlayMediaIntent.isServerSearchSuppressed()();
  if (!(v73 | v206))
  {
    uint64_t v208 = [v402 mediaSearch];
    if (v208)
    {
      os_log_type_t v209 = v208;
      uint64_t v210 = (char *)[v208 reference];
      uint64_t v398 = v158;
      uint64_t v211 = v207;
      uint64_t v212 = v73;
      uint64_t v213 = v196;
      unint64_t v214 = v204;
      unint64_t v215 = v206;
      uint64_t v216 = v210;

      uint64_t v217 = v216 == (_BYTE *)&dword_0 + 1;
      uint64_t v206 = v215;
      uint64_t v204 = v214;
      uint64_t v196 = v213;
      uint64_t v73 = v212;
      uint64_t v207 = v211;
      uint64_t v218 = v217;
      if (((v218 | v211) & 1) != 0) {
        goto LABEL_94;
      }
    }

    else if (v207)
    {
      goto LABEL_94;
    }

    swift_bridgeObjectRelease(v103);
    uint64_t v233 = v384;
    uint64_t v234 = v405;
    unint64_t v235 = v404(v384, v403, v405);
    uint64_t v236 = (os_log_s *)Logger.logObject.getter(v235);
    uint64_t v237 = static os_log_type_t.info.getter(v236);
    if (os_log_type_enabled(v236, v237))
    {
      os_log_type_t v238 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v238 = 0;
      _os_log_impl( &dword_0,  v236,  v237,  "PlayMediaDialogProvider going to makePlayDialogEmptyContentTitle for empty title and artist",  v238,  2u);
      swift_slowDealloc(v238, -1LL, -1LL);
    }

    v401(v233, v234);
    sub_15E380(v407, v402, (uint64_t)sub_16F138, v81);
    uint64_t v132 = v81;
    return swift_release(v132);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

  if ((v102 & 0xC000000000000001LL) != 0)
  {
    id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v102);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v102 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_37:
      __break(1u);
      return;
    }

    id v103 = *(id *)(v102 + 32);
  }

  uint64_t v104 = v103;
  uint64_t v105 = objc_msgSend(v103, "type", swift_bridgeObjectRelease(v102).n128_f64[0]);

LABEL_29:
  uint64_t v114 = v98;
  uint64_t v115 = v134;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v149,  v114,  v86,  v94,  v93,  v133,  v134,  v105,  0,  v81,  v145);
  swift_bridgeObjectRelease(v115);
  sub_1F6CC(v93, &qword_2845A0);
  sub_1F6CC(v94, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v86, &qword_2845A8);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v116 = v139;
  uint64_t v117 = sub_6960(v139, (uint64_t)qword_2969C8);
  uint64_t v118 = v138;
  uint64_t v119 = v137;
  uint64_t v120 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 16))(v137, v117, v116);
  uint64_t v121 = (os_log_s *)Logger.logObject.getter(v120);
  os_log_type_t v122 = static os_log_type_t.debug.getter();
  BOOL v123 = os_log_type_enabled(v121, v122);
  uint64_t v125 = (uint64_t)v152;
  uint64_t v124 = v153;
  if (v123)
  {
    uint64_t v126 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v126 = 0;
    _os_log_impl( &dword_0,  v121,  v122,  "UpdateMediaAffinity+HandleIntentStrategy#makeIntentHandledResponse returning completionViewOutput with a dialog.",  v126,  2u);
    swift_slowDealloc(v126, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v116);
  sub_6EA8(v80 + 8, v80[11]);
  uint64_t v127 = *(int *)(v157 + 48);
  uint64_t v128 = (uint64_t)v136;
  uint64_t v129 = v154;
  v89(v136, (char *)v125, v154);
  uint64_t v130 = v144;
  *(void *)(v128 + v12sub_6C3C(v0 + 7) = v144;
  sub_175200(v128, v130, v124, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v150, v151);

  sub_1F6CC(v124, (uint64_t *)&unk_286C50);
  sub_1F6CC(v125, &qword_289340);
  (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v128, v129);
}

  if ((v100 & 0xC000000000000001LL) != 0)
  {
    uint64_t v101 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v100);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v100 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_34:
      __break(1u);
      return;
    }

    uint64_t v101 = *(id *)(v100 + 32);
  }

  id v102 = v101;
  id v103 = objc_msgSend(v101, "type", swift_bridgeObjectRelease(v100).n128_f64[0]);

LABEL_29:
  uint64_t v109 = v93;
  uint64_t v110 = (uint64_t)v134;
  id v111 = (uint64_t)v135;
  uint64_t v112 = v123;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v131,  v109,  v135,  v134,  v92,  v122,  v123,  v103,  0,  v77,  v120);
  swift_bridgeObjectRelease(v112);
  sub_1F6CC(v92, &qword_2845A0);
  sub_1F6CC(v110, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v111, &qword_2845A8);
  sub_6EA8(v95 + 8, v95[11]);
  uint64_t v113 = *(int *)(v97 + 48);
  uint64_t v114 = (uint64_t)v124;
  uint64_t v115 = v129;
  v119(v124, v82, (uint64_t)v129);
  uint64_t v116 = v127;
  *(void *)(v114 + v11sub_6C3C(v0 + 3) = v127;
  uint64_t v117 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v118 = (uint64_t)v125;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56LL))(v125, 1LL, 1LL, v117);
  sub_175200(v114, v116, v118, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v132, v133);

  sub_1F6CC(v118, (uint64_t *)&unk_286C50);
  sub_1F6CC(v96, &qword_289340);
  (*((void (**)(uint64_t, char *))v128 + 1))(v114, v115);
}

  uint64_t v16 = v6;
  uint64_t v17 = [v6 internalSignals];

  if (!v17) {
    goto LABEL_14;
  }
  uint64_t v18 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String);

  uint64_t v5 = v17;
LABEL_15:

  return v18;
}

  uint64_t v67 = v171;
  v176[0] = v171;
  uint64_t v68 = sub_6C5C(&qword_284DD0);
  uint64_t v69 = v169;
  uint64_t v70 = *(void *)(v169 + 72);
  uint64_t v71 = *(unsigned __int8 *)(v169 + 80);
  uint64_t v72 = (v71 + 32) & ~v71;
  uint64_t v73 = 2 * v70;
  uint64_t v74 = swift_allocObject(v68, v72 + 3 * v70, v71 | 7);
  *(_OWORD *)(v74 + sub_6C3C(v0 + 16) = xmmword_2168F0;
  uint64_t v75 = v74 + v72;
  uint64_t v76 = enum case for CommonAudio.Attribute.fromArtist(_:);
  uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 104);
  uint64_t v78 = v170;
  v77(v75, enum case for CommonAudio.Attribute.fromArtist(_:), v170);
  uint64_t v79 = v75 + v70;
  uint64_t v80 = enum case for CommonAudio.Attribute.fromAlbum(_:);
  v77(v79, enum case for CommonAudio.Attribute.fromAlbum(_:), v78);
  v77(v75 + v73, enum case for CommonAudio.Attribute.fromSong(_:), v78);
  uint64_t v81 = sub_147908(v74);
  swift_setDeallocating(v74);
  swift_arrayDestroy(v75, 3LL, v78);
  swift_deallocClassInstance(v74, 32LL, 7LL);
  uint64_t v82 = type metadata accessor for AudioUsoIntent(0LL);
  LOBYTE(v7sub_6C3C(v0 + 4) = AudioIntent.hasAnyAttribute(_:)(v81, v82, &protocol witness table for AudioUsoIntent);
  uint64_t v83 = swift_bridgeObjectRelease(v81);
  if ((v74 & 1) == 0)
  {
    uint64_t v88 = (uint64_t)v162;
    dispatch thunk of AudioUsoIntent.mediaType.getter(v83);
    uint64_t v90 = v163;
    uint64_t v89 = v164;
    uint64_t v91 = *(void (**)(uint64_t, void, uint64_t))(v163 + 104);
    uint64_t v92 = v165;
    v91(v165, enum case for CommonAudio.MediaType.podcast(_:), v164);
    uint64_t v172 = *(char **)(v90 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v172)(v92, 0LL, 1LL, v89);
    uint64_t v93 = v46 + *(int *)(v167 + 48);
    sub_FF10(v88, v46, &qword_284DC8);
    sub_FF10(v92, v93, &qword_284DC8);
    uint64_t v94 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
    if (v94(v46, 1LL, v89) == 1)
    {
      sub_1F6CC(v92, &qword_284DC8);
      sub_1F6CC(v88, &qword_284DC8);
      id v95 = v94(v93, 1LL, v89);
      id v96 = (uint64_t)v160;
      if (v95 == 1) {
        goto LABEL_33;
      }
    }

    else
    {
      uint64_t v114 = (uint64_t)v158;
      sub_FF10(v46, (uint64_t)v158, &qword_284DC8);
      if (v94(v93, 1LL, v89) != 1)
      {
        uint64_t v116 = v46;
        uint64_t v117 = v155;
        (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v155, v93, v89);
        uint64_t v118 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        LODWORD(v170) = dispatch thunk of static Equatable.== infix(_:_:)(v114, v117, v89, v118);
        uint64_t v119 = v88;
        uint64_t v120 = *(void (**)(char *, uint64_t))(v90 + 8);
        v120(v117, v89);
        sub_1F6CC(v165, &qword_284DC8);
        sub_1F6CC(v119, &qword_284DC8);
        v120(v158, v89);
        uint64_t v115 = sub_1F6CC(v116, &qword_284DC8);
        id v96 = (uint64_t)v160;
        if ((v170 & 1) != 0) {
          goto LABEL_34;
        }
LABEL_30:
        uint64_t v121 = v159;
        dispatch thunk of AudioUsoIntent.mediaType.getter(v115);
        v91(v96, enum case for CommonAudio.MediaType.podcastStation(_:), v89);
        os_log_type_t v122 = v121;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v172)(v96, 0LL, 1LL, v89);
        BOOL v123 = v156;
        uint64_t v124 = v156 + *(int *)(v167 + 48);
        sub_FF10(v122, v156, &qword_284DC8);
        sub_FF10(v96, v124, &qword_284DC8);
        if (v94(v123, 1LL, v89) == 1)
        {
          sub_1F6CC(v96, &qword_284DC8);
          sub_1F6CC(v122, &qword_284DC8);
          if (v94(v124, 1LL, v89) == 1)
          {
            uint64_t v46 = v123;
LABEL_33:
            uint64_t v115 = sub_1F6CC(v46, &qword_284DC8);
            goto LABEL_34;
          }
        }

        else
        {
          uint64_t v132 = v154;
          sub_FF10(v123, v154, &qword_284DC8);
          if (v94(v124, 1LL, v89) != 1)
          {
            uint64_t v150 = v155;
            (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v155, v124, v89);
            uint64_t v151 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
            os_log_type_t v152 = dispatch thunk of static Equatable.== infix(_:_:)(v132, v150, v89, v151);
            uint64_t v153 = *(void (**)(char *, uint64_t))(v90 + 8);
            v153(v150, v89);
            sub_1F6CC(v96, &qword_284DC8);
            sub_1F6CC(v159, &qword_284DC8);
            v153((char *)v132, v89);
            uint64_t v115 = sub_1F6CC(v123, &qword_284DC8);
            if ((v152 & 1) == 0) {
              return 0LL;
            }
LABEL_34:
            uint64_t v125 = (void *)dispatch thunk of AudioUsoIntent.musicTitles.getter(v115);
            if (v125[2])
            {
              uint64_t v126 = v125[4];
              uint64_t v127 = v125[5];
              uint64_t v128 = swift_bridgeObjectRelease(v125);
              uint64_t v129 = HIBYTE(v127) & 0xF;
              if ((v127 & 0x2000000000000000LL) == 0) {
                uint64_t v129 = v126 & 0xFFFFFFFFFFFFLL;
              }
              uint64_t v55 = v173;
              uint64_t v53 = v174;
              uint64_t v130 = v157;
              if (v129)
              {
                uint64_t v131 = (void *)dispatch thunk of AudioUsoIntent.musicTitles.getter(v128);
                goto LABEL_44;
              }
            }

            else
            {
              uint64_t v128 = swift_bridgeObjectRelease(v125);
              uint64_t v55 = v173;
              uint64_t v53 = v174;
              uint64_t v130 = v157;
            }

            uint64_t v131 = (void *)dispatch thunk of AudioUsoIntent.entities.getter(v128);
LABEL_44:
            unint64_t v133 = v131;
            if (v131[2])
            {
              uint64_t v135 = v131[4];
              uint64_t v134 = v131[5];
              swift_bridgeObjectRetain_n(v134, 2LL);
              swift_bridgeObjectRelease(v133);
              swift_bridgeObjectRelease(v134);
              uint64_t v136 = HIBYTE(v134) & 0xF;
              if ((v134 & 0x2000000000000000LL) == 0) {
                uint64_t v136 = v135 & 0xFFFFFFFFFFFFLL;
              }
              if (v136)
              {
                uint64_t v137 = objc_allocWithZone(&OBJC_CLASS___INMediaItem);
                uint64_t v138 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v134);
                uint64_t v139 = [v137 initWithIdentifier:0 title:v138 type:0 artwork:0];

                if (qword_283888 != -1) {
                  swift_once(&qword_283888, sub_BFC5C);
                }
                uint64_t v140 = sub_6960(v53, (uint64_t)qword_2969C8);
                (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v130, v140, v53);
                uint64_t v57 = v139;
                uint64_t v56 = v130;
                uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
                uint64_t v141 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v58, v141))
                {
                  uint64_t v142 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                  uint64_t v143 = swift_slowAlloc(32LL, -1LL);
                  v176[0] = v143;
                  *(_DWORD *)uint64_t v142 = 136315138;
                  uint64_t v172 = (char *)(v142 + 4);
                  uint64_t v144 = v57;
                  uint64_t v145 = [v144 description];
                  uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)(v145);
                  uint64_t v148 = v147;

                  uint64_t v175 = sub_6978(v146, v148, v176);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, v176);

                  swift_bridgeObjectRelease(v148);
                  _os_log_impl( &dword_0,  v58,  v141,  "ConverterHelpers#convertMediaContainer intent has podcast or podcast station with not empty title item: %s",  v142,  0xCu);
                  swift_arrayDestroy(v143, 1LL, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v143, -1LL, -1LL);
                  swift_slowDealloc(v142, -1LL, -1LL);

                  (*(void (**)(char *, uint64_t))(v173 + 8))(v157, v174);
                  return v57;
                }

                goto LABEL_52;
              }

              uint64_t v131 = (void *)v134;
            }

            swift_bridgeObjectRelease(v131);
            return 0LL;
          }

          sub_1F6CC(v96, &qword_284DC8);
          sub_1F6CC(v122, &qword_284DC8);
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v132, v89);
        }

        sub_1F6CC(v123, &qword_284DA0);
        return 0LL;
      }

      sub_1F6CC(v165, &qword_284DC8);
      sub_1F6CC(v88, &qword_284DC8);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v114, v89);
      id v96 = (uint64_t)v160;
    }

    uint64_t v115 = sub_1F6CC(v46, &qword_284DA0);
    goto LABEL_30;
  }

  v176[0] = v67;
  uint64_t v84 = v161;
  v77((uint64_t)v161, v76, v78);
  uint64_t v85 = AudioIntent.hasAttribute(_:)(v84, v82, &protocol witness table for AudioUsoIntent);
  uint64_t v86 = *(void (**)(char *, uint64_t))(v69 + 8);
  v86(v84, v78);
  if ((v85 & 1) != 0)
  {
    uint64_t v87 = 3LL;
  }

  else
  {
    v176[0] = v67;
    v77((uint64_t)v84, v80, v78);
    __int128 v97 = AudioIntent.hasAttribute(_:)(v84, v82, &protocol witness table for AudioUsoIntent);
    v86(v84, v78);
    if ((v97 & 1) != 0) {
      uint64_t v87 = 2LL;
    }
    else {
      uint64_t v87 = 1LL;
    }
  }

  uint64_t v99 = v173;
  uint64_t v98 = v174;
  id v100 = v166;
  uint64_t v101 = objc_allocWithZone(&OBJC_CLASS___INMediaItem);
  id v102 = String._bridgeToObjectiveC()();
  id v103 = [v101 initWithIdentifier:v102 title:0 type:v87 artwork:0];

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v104 = sub_6960(v98, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v100, v104, v98);
  uint64_t v57 = v103;
  uint64_t v105 = (os_log_s *)Logger.logObject.getter(v57);
  uint64_t v106 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v105, v106))
  {
    uint64_t v107 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v108 = swift_slowAlloc(32LL, -1LL);
    v176[0] = v108;
    *(_DWORD *)uint64_t v107 = 136315138;
    uint64_t v172 = (char *)(v107 + 4);
    uint64_t v109 = v57;
    uint64_t v110 = [v109 description];
    id v111 = static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
    uint64_t v113 = v112;

    uint64_t v175 = sub_6978(v111, v113, v176);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v175, v176);

    swift_bridgeObjectRelease(v113);
    _os_log_impl( &dword_0,  v105,  v106,  "ConverterHelpers#convertMediaContainer intent has fromArtist, fromAlbum or fromSong item: %s",  v107,  0xCu);
    swift_arrayDestroy(v108, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v108, -1LL, -1LL);
    swift_slowDealloc(v107, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v173 + 8))(v166, v174);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
  }

  return v57;
}

uint64_t Determine.UnsupportedValueStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

uint64_t _s18NeedsValueStrategyCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin14SearchForMedia18NeedsValueStrategy);
}

uint64_t sub_47CCC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return sub_464AC(a1, a2);
}

void sub_47CE0( uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t *), uint64_t a8)
{
}

uint64_t sub_47CFC(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return sub_46CB8(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_47D1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa();
  return NeedsValueFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_47D9C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa();
  return NeedsValueFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_47E1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = _s18NeedsValueStrategyCMa();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_47E8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_47F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + sub_6C3C(v0 + 16) = v14;
  uint64_t v15 = _s18NeedsValueStrategyCMa();
  *uint64_t v14 = v7;
  v14[1] = sub_11C64;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_47FA8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v8 + sub_6C3C(v0 + 16) = v16;
  uint64_t v17 = _s18NeedsValueStrategyCMa();
  *uint64_t v16 = v8;
  v16[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v17, a8);
}

uint64_t sub_48054(uint64_t a1, uint64_t a2)
{
  return sub_6DF0(&qword_2848B0, a2, (uint64_t (*)(uint64_t))_s18NeedsValueStrategyCMa, (uint64_t)&unk_214F44);
}

void sub_48080( void *a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(uint64_t *), uint64_t a6)
{
  id v254 = a4;
  uint64_t v248 = a2;
  id v251 = a1;
  uint64_t v249 = sub_6C5C(&qword_2848B8);
  __chkstk_darwin(v249);
  uint64_t v10 = (uint64_t *)((char *)&v232 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  os_log_type_t v256 = (void *)type metadata accessor for Parse(0LL);
  uint64_t v255 = (void *)*(v256 - 1);
  uint64_t v11 = __chkstk_darwin(v256);
  uint64_t v242 = (char *)&v232 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v238 = (char *)&v232 - v14;
  __chkstk_darwin(v13);
  uint64_t v258 = (char *)&v232 - v15;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v237 = (char *)&v232 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v245 = (char *)&v232 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v235 = (char *)&v232 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v243 = (char *)&v232 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v244 = (char *)&v232 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v234 = (char *)&v232 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v233 = (char *)&v232 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v241 = (char *)&v232 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v236 = (char *)&v232 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  os_log_type_t v239 = (char *)&v232 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v232 - v38;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v40 = sub_6960(v16, (uint64_t)qword_2969C8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v253 = v40;
  uint64_t v252 = v41;
  ((void (*)(char *))v41)(v39);
  uint64_t v42 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v44 = static os_log_type_t.default.getter();
  BOOL v45 = os_log_type_enabled(v43, v44);
  uint64_t v250 = a6;
  unint64_t v247 = a3;
  if (v45)
  {
    uint64_t v46 = swift_slowAlloc(12LL, -1LL);
    unint64_t v246 = a5;
    v240 = v10;
    uint64_t v47 = (uint8_t *)v46;
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v265 = v48;
    *(_DWORD *)uint64_t v47 = 136446210;
    swift_bridgeObjectRetain(a3);
    *(void *)&__int128 v262 = sub_6978(v248, a3, (uint64_t *)&v265);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v262, (char *)&v262 + 8);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( &dword_0,  v43,  v44,  "SearchForMediaNeedsValueStrategy#parseResponseValue parameter: %{public}s",  v47,  0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    uint64_t v49 = v47;
    uint64_t v10 = v240;
    uint64_t v50 = v246;
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  else
  {
    uint64_t v50 = a5;

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t v257 = *(void (**)(char *, uint64_t))(v17 + 8);
  v257(v39, v16);
  id v51 = [v251 copy];
  _bridgeAnyObjectToAny(_:)(&v265, v51);
  swift_unknownObjectRelease(v51);
  id v251 = (id)sub_1641C(0LL, &qword_2844C8, &OBJC_CLASS___INSearchForMediaIntent_ptr);
  uint64_t v52 = swift_dynamicCast(&v268, &v265, (char *)&type metadata for Any + 8, v251, 6LL);
  uint64_t v53 = v252;
  uint64_t v54 = v258;
  if ((v52 & 1) == 0) {
    id v268 = 0LL;
  }
  Input.parse.getter(v52);
  uint64_t v55 = v255;
  uint64_t v56 = (uint64_t (*)(char *, void *))v255[11];
  uint64_t v57 = v256;
  uint64_t v58 = v56(v54, v256);
  int v59 = enum case for Parse.NLv3IntentPlusServerConversion(_:);
  if ((_DWORD)v58 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    int v78 = enum case for Parse.pommesResponse(_:);
    if ((_DWORD)v58 == enum case for Parse.pommesResponse(_:))
    {
      uint64_t v79 = v255;
      uint64_t v80 = (void **)v258;
      ((void (*)(char *, void *))v255[12])(v258, v57);
      uint64_t v81 = *v80;
      uint64_t v82 = (char *)sub_10470();
      uint64_t v258 = v82;
      uint64_t v70 = (void *)v16;
      if (!v82)
      {
        uint64_t v142 = v234;
        uint64_t v143 = v53(v234, v253, v16);
        uint64_t v144 = (os_log_s *)Logger.logObject.getter(v143);
        os_log_type_t v145 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v144, v145))
        {
          uint64_t v146 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v146 = 0;
          _os_log_impl( &dword_0,  v144,  v145,  "SearchForMediaNeedsValueStrategy#parseResponseValue pommesResponse contains no AudioExperience",  v146,  2u);
          swift_slowDealloc(v146, -1LL, -1LL);
        }

        v257(v142, v16);
        uint64_t v147 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v148 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v149 = swift_allocError(v147, v148, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v147 - 8) + 104LL))( v150,  enum case for PlaybackCode.ceGE77(_:),  v147);
        *uint64_t v10 = v149;
        swift_storeEnumTagMultiPayload(v10, v249, 1LL);
        v50(v10);

        goto LABEL_78;
      }

      uint64_t v83 = v238;
      Input.parse.getter(v82);
      double v84 = sub_B7C84(v83, (uint64_t)&v262);
      ((void (*)(char *, void *, double))v79[1])(v83, v57, v84);
      uint64_t v71 = v53;
      if (!*((void *)&v263 + 1))
      {
        sub_1F6CC((uint64_t)&v262, &qword_2848C0);
        os_log_type_t v174 = v233;
        uint64_t v175 = v53(v233, v253, (uint64_t)v70);
        uint64_t v176 = (os_log_s *)Logger.logObject.getter(v175);
        os_log_type_t v177 = static os_log_type_t.default.getter();
        BOOL v178 = os_log_type_enabled(v176, v177);
        unint64_t v179 = v257;
        if (v178)
        {
          __int128 v180 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)__int128 v180 = 0;
          _os_log_impl( &dword_0,  v176,  v177,  "SearchForMediaNeedsValueStrategy#parseResponseValue received invalid NL intent",  v180,  2u);
          swift_slowDealloc(v180, -1LL, -1LL);
        }

        v179(v174, (uint64_t)v70);
        uint64_t v181 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v182 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v183 = swift_allocError(v181, v182, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v181 - 8) + 104LL))( v184,  enum case for PlaybackCode.ceGE78(_:),  v181);
        *uint64_t v10 = v183;
        swift_storeEnumTagMultiPayload(v10, v249, 1LL);
        v50(v10);

LABEL_62:
LABEL_78:
        unint64_t v167 = &qword_2848B8;
        uint64_t v166 = v10;
LABEL_79:
        sub_1F6CC((uint64_t)v166, v167);
        goto LABEL_80;
      }

      unint64_t v246 = v50;
      sub_49B60(&v262, &v265);
      uint64_t v85 = v266;
      uint64_t v86 = v267;
      uint64_t v87 = sub_6EA8(&v265, (uint64_t)v266);
      *((void *)&v263 + 1) = v85;
      id v264 = v86;
      uint64_t v88 = v81;
      uint64_t v89 = sub_10974(&v262);
      (*(void (**)(void *, void *, void *))(*(v85 - 1) + 16LL))(v89, v87, v85);
      os_log_type_t v256 = sub_142D4C((uint64_t)v89, 0LL, 0LL, v85, v86);
      sub_6C3C(&v262);
      type metadata accessor for AudioPluginProcessor(0LL);
      uint64_t v90 = AudioPluginProcessor.__allocating_init()();
      uint64_t v255 = v88;
      uint64_t v91 = dispatch thunk of PommesResponse.clientResults.getter();
      uint64_t v92 = (uint8_t *)v258;
      uint64_t v93 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v258, v91);
      swift_release(v90);
      swift_bridgeObjectRelease(v91);
      id v94 = sub_1C6830(v92);
      id v95 = v236;
      v53(v236, v253, (uint64_t)v70);
      id v96 = v94;
      __int128 v97 = (os_log_s *)Logger.logObject.getter(v96);
      os_log_type_t v98 = static os_log_type_t.debug.getter();
      BOOL v99 = os_log_type_enabled(v97, v98);
      uint64_t v72 = v257;
      v240 = v10;
      uint64_t v244 = (char *)v93;
      if (v99)
      {
        id v100 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v101 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)id v100 = 138412290;
        *(void *)&__int128 v262 = v96;
        id v102 = v70;
        id v103 = v96;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v262, (char *)&v262 + 8);
        *uint64_t v101 = v96;

        uint64_t v70 = v102;
        uint64_t v71 = v252;
        _os_log_impl( &dword_0,  v97,  v98,  "SearchForMediaNeedsValueStrategy#parseResponseValue Updating privateSearchForMediaIntentData with: %@",  v100,  0xCu);
        uint64_t v104 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v101, 1LL, v104);
        uint64_t v105 = v101;
        uint64_t v72 = v257;
        swift_slowDealloc(v105, -1LL, -1LL);
        uint64_t v106 = v100;
        id v95 = v236;
        swift_slowDealloc(v106, -1LL, -1LL);
      }

      else
      {

        __int128 v97 = (os_log_s *)v96;
      }

      v72(v95, (uint64_t)v70);
      if (v268)
      {
        id v185 = v268;
        id v186 = [v185 backingStore];
        uint64_t v187 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
        uint64_t v188 = swift_dynamicCastObjCClass(v186, v187);
        if (v188)
        {
          BOOL v189 = (void *)v188;
          id v190 = (id)INIntentSlotValueTransformToPrivateSearchForMediaIntentData(v96);
          [v189 setPrivateSearchForMediaIntentData:v190];

          id v185 = v186;
          id v186 = v190;
          uint64_t v72 = v257;
        }
      }

      v71(v241, v253, (uint64_t)v70);
      uint64_t v191 = v256;
      uint64_t v192 = (os_log_s *)Logger.logObject.getter(v191);
      os_log_type_t v193 = static os_log_type_t.debug.getter();
      BOOL v194 = os_log_type_enabled(v192, v193);
      id v254 = v96;
      if (v194)
      {
        uint64_t v195 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v196 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v195 = 138412290;
        *(void *)&__int128 v262 = v191;
        uint64_t v197 = v70;
        uint64_t v198 = v191;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v262, (char *)&v262 + 8);
        void *v196 = v191;

        uint64_t v70 = v197;
        uint64_t v71 = v252;
        _os_log_impl( &dword_0,  v192,  v193,  "SearchForMediaNeedsValueStrategy#parseResponseValue Updating media search with: %@",  v195,  0xCu);
        uint64_t v199 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v196, 1LL, v199);
        uint64_t v200 = v196;
        uint64_t v72 = v257;
        swift_slowDealloc(v200, -1LL, -1LL);
        swift_slowDealloc(v195, -1LL, -1LL);
      }

      else
      {

        uint64_t v192 = (os_log_s *)v191;
      }

      uint64_t v10 = v240;
      uint64_t v69 = v246;
      unint64_t v68 = v247;

      v72(v241, (uint64_t)v70);
      id v201 = v268;
      if (!v268)
      {

        swift_release(v244);
        goto LABEL_74;
      }

      uint64_t v202 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      if (swift_dynamicCastObjCClass(v201, v202))
      {
        uint64_t v203 = v10;
        uint64_t v204 = v191;
        id v205 = v201;
        id v206 = [v205 backingStore];
        uint64_t v207 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        uint64_t v208 = swift_dynamicCastObjCClass(v206, v207);
        if (v208) {
          goto LABEL_71;
        }
      }

      else
      {
        uint64_t v213 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
        if (swift_dynamicCastObjCClass(v201, v213))
        {
          uint64_t v203 = v10;
          uint64_t v204 = v191;
          id v205 = v201;
          id v206 = [v205 backingStore];
          uint64_t v214 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
          uint64_t v208 = swift_dynamicCastObjCClass(v206, v214);
          if (v208) {
            goto LABEL_71;
          }
        }

        else
        {
          uint64_t v215 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
          if (swift_dynamicCastObjCClass(v201, v215))
          {
            uint64_t v203 = v10;
            uint64_t v204 = v191;
            id v205 = v201;
            id v206 = [v205 backingStore];
            uint64_t v216 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
            uint64_t v208 = swift_dynamicCastObjCClass(v206, v216);
            if (v208) {
              goto LABEL_71;
            }
          }

          else
          {
            uint64_t v217 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
            uint64_t v218 = swift_dynamicCastObjCClass(v201, v217);
            uint64_t v204 = v191;
            id v219 = v201;
            if (!v218)
            {
              uint64_t v72 = v257;
              id v206 = v254;
              goto LABEL_73;
            }

            id v205 = v219;
            uint64_t v203 = v10;
            id v206 = [v219 backingStore];
            uint64_t v220 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
            uint64_t v208 = swift_dynamicCastObjCClass(v206, v220);
            if (v208)
            {
LABEL_71:
              uint64_t v221 = (void *)v208;
              id v222 = (id)INIntentSlotValueTransformToMediaSearch(v204);
              [v221 setMediaSearch:v222];

              swift_release(v244);
              uint64_t v10 = v203;
              uint64_t v72 = v257;
              unint64_t v68 = v247;
              uint64_t v71 = v252;
              goto LABEL_74;
            }
          }
        }
      }

      uint64_t v10 = v203;
      uint64_t v72 = v257;
      uint64_t v71 = v252;

      uint64_t v204 = v254;
LABEL_73:

      swift_release(v244);
      unint64_t v68 = v247;
LABEL_74:
      sub_6C3C(&v265);
      id v73 = v268;
      if (v268) {
        goto LABEL_11;
      }
      goto LABEL_75;
    }

    uint64_t v107 = v242;
    Input.parse.getter(v58);
    uint64_t v108 = v256;
    int v109 = v56(v107, v256);
    BOOL v110 = v109 == v59;
    id v111 = v255;
    uint64_t v112 = v16;
    if (v110)
    {
      ((void (*)(char *, void *))v255[12])(v107, v108);
      uint64_t v113 = sub_6C5C(&qword_284618);
      swift_release(*(void *)&v107[*(int *)(v113 + 48)]);
      uint64_t v114 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v114 - 8) + 8LL))(v107, v114);
      uint64_t v115 = v258;
      uint64_t v116 = v243;
    }

    else
    {
      int v127 = v109;
      ((void (*)(char *, void *))v255[1])(v107, v108);
      uint64_t v115 = v258;
      uint64_t v116 = v243;
      if (v127 != v78)
      {
LABEL_31:
        uint64_t v134 = v53(v116, v253, v112);
        uint64_t v135 = (os_log_s *)Logger.logObject.getter(v134);
        os_log_type_t v136 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v135, v136))
        {
          uint64_t v137 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v137 = 0;
          _os_log_impl( &dword_0,  v135,  v136,  "SearchForMediaNeedsValueStrategy#parseResponseValue intent not of right type",  v137,  2u);
          swift_slowDealloc(v137, -1LL, -1LL);
        }

        v257(v116, v112);
        uint64_t v138 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v139 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v140 = swift_allocError(v138, v139, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v138 - 8) + 104LL))( v141,  enum case for PlaybackCode.ceGE79(_:),  v138);
        *uint64_t v10 = v140;
        swift_storeEnumTagMultiPayload(v10, v249, 1LL);
        v50(v10);
        sub_1F6CC((uint64_t)v10, &qword_2848B8);
        ((void (*)(char *, void *))v111[1])(v115, v256);
        goto LABEL_80;
      }
    }

    uint64_t v128 = v244;
    uint64_t v129 = v53(v244, v253, v112);
    uint64_t v130 = (os_log_s *)Logger.logObject.getter(v129);
    os_log_type_t v131 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v130, v131))
    {
      uint64_t v132 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v132 = 0;
      _os_log_impl( &dword_0,  v130,  v131,  "SearchForMediaNeedsValueStrategy#parseResponseValue and SearchForMediaNeedsValueStrategy#actionForInput parse ha ndling need to be the same!",  v132,  2u);
      unint64_t v133 = v132;
      uint64_t v128 = v244;
      swift_slowDealloc(v133, -1LL, -1LL);
    }

    v257(v128, v112);
    goto LABEL_31;
  }

  ((void (*)(char *, void *))v55[12])(v54, v57);
  uint64_t v60 = sub_6C5C(&qword_284618);
  uint64_t v61 = *(void *)&v54[*(int *)(v60 + 48)];
  uint64_t v62 = (void *)Parse.ServerConversion.siriKitIntent.getter(v60);
  uint64_t v63 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
  uint64_t v64 = swift_dynamicCastObjCClass(v62, v63);
  if (v64)
  {
    uint64_t v65 = (void *)v64;
    swift_release(v61);
    id v66 = v268;
    id v268 = v65;

    uint64_t v67 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8LL))(v54, v67);
    unint64_t v68 = v247;
    uint64_t v69 = v50;
    uint64_t v70 = (void *)v16;
    uint64_t v71 = v53;
    uint64_t v72 = v257;
    id v73 = v268;
    if (v268)
    {
LABEL_11:
      if (v248 == 0x657449616964656DLL && v68 == 0xEA0000000000736DLL
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
      {
        uint64_t v258 = (char *)v73;
        id v74 = [v258 mediaItems];
        if (v74)
        {
          uint64_t v75 = v74;
          uint64_t v76 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
          uint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v75, v76);

          *((void *)&v263 + 1) = sub_6C5C(&qword_2848D0);
          *(void *)&__int128 v262 = v77;
        }

        else
        {
          __int128 v262 = 0u;
          __int128 v263 = 0u;
        }

        uint64_t v151 = v245;
        sub_45F6C((uint64_t)&v262, (uint64_t)&v265, &qword_284028);
        v71(v151, v253, (uint64_t)v70);
        uint64_t v152 = sub_FF10((uint64_t)&v265, (uint64_t)&v262, &qword_284028);
        uint64_t v153 = (os_log_s *)Logger.logObject.getter(v152);
        os_log_type_t v154 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v153, v154))
        {
          id v155 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v156 = swift_slowAlloc(32LL, -1LL);
          uint64_t v257 = v72;
          uint64_t v157 = v156;
          uint64_t v261 = v156;
          *(_DWORD *)id v155 = 136446210;
          unint64_t v246 = v69;
          sub_FF10((uint64_t)&v262, (uint64_t)&v259, &qword_284028);
          uint64_t v158 = sub_6C5C(&qword_284028);
          uint64_t v159 = String.init<A>(describing:)(&v259, v158);
          os_log_type_t v256 = v70;
          unint64_t v161 = v160;
          uint64_t v259 = sub_6978(v159, v160, &v261);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260);
          swift_bridgeObjectRelease(v161);
          uint64_t v69 = v246;
          sub_1F6CC((uint64_t)&v262, &qword_284028);
          _os_log_impl( &dword_0,  v153,  v154,  "SearchForMediaNeedsValueStrategy#parseResponseValue returning with: %{public}s",  v155,  0xCu);
          swift_arrayDestroy(v157, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v157, -1LL, -1LL);
          swift_slowDealloc(v155, -1LL, -1LL);

          v257(v245, (uint64_t)v256);
        }

        else
        {
          sub_1F6CC((uint64_t)&v262, &qword_284028);

          v72(v151, (uint64_t)v70);
        }

        id v162 = v251;
        uint64_t v163 = v258;
        sub_FF10((uint64_t)&v265, (uint64_t)&v262, &qword_284028);
        id v164 = v163;
        IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v262, v164, v162);
        uint64_t v165 = sub_6C5C(&qword_2848C8);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56LL))( v10,  0LL,  1LL,  v165);
        swift_storeEnumTagMultiPayload(v10, v249, 0LL);
        v69(v10);

        sub_1F6CC((uint64_t)v10, &qword_2848B8);
        uint64_t v166 = (uint64_t *)&v265;
        unint64_t v167 = &qword_284028;
        goto LABEL_79;
      }

      uint64_t v168 = v235;
      v71(v235, v253, (uint64_t)v70);
      swift_bridgeObjectRetain_n(v68, 2LL);
      uint64_t v258 = (char *)v73;
      uint64_t v169 = (os_log_s *)Logger.logObject.getter(v258);
      os_log_type_t v170 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v169, v170))
      {
        uint64_t v171 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v172 = swift_slowAlloc(32LL, -1LL);
        uint64_t v257 = v72;
        uint64_t v173 = v172;
        *(void *)&__int128 v262 = v172;
        os_log_type_t v256 = v70;
        *(_DWORD *)uint64_t v171 = 136315138;
        swift_bridgeObjectRetain(v68);
        uint64_t v259 = sub_6978(v248, v68, (uint64_t *)&v262);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260);
        swift_bridgeObjectRelease_n(v68, 3LL);
        _os_log_impl( &dword_0,  v169,  v170,  "SearchForMediaNeedsValueStrategy#parseResponseValue Unexpected parameter:%s",  v171,  0xCu);
        swift_arrayDestroy(v173, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v173, -1LL, -1LL);
        swift_slowDealloc(v171, -1LL, -1LL);

        v257(v235, (uint64_t)v256);
      }

      else
      {

        swift_bridgeObjectRelease_n(v68, 2LL);
        v72(v168, (uint64_t)v70);
      }

      uint64_t v209 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v210 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v211 = swift_allocError(v209, v210, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v209 - 8) + 104LL))( v212,  enum case for PlaybackCode.ceGE81(_:),  v209);
      *uint64_t v10 = v211;
      swift_storeEnumTagMultiPayload(v10, v249, 1LL);
      v69(v10);
      goto LABEL_62;
    }

LABEL_75:
    BOOL v223 = v237;
    uint64_t v224 = v71(v237, v253, (uint64_t)v70);
    uint64_t v225 = (os_log_s *)Logger.logObject.getter(v224);
    os_log_type_t v226 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v225, v226))
    {
      uint64_t v227 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v227 = 0;
      _os_log_impl( &dword_0,  v225,  v226,  "SearchForMediaNeedsValueStrategy#parseResponseValue updatedIntent nil",  v227,  2u);
      swift_slowDealloc(v227, -1LL, -1LL);
    }

    v72(v223, (uint64_t)v70);
    uint64_t v228 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v229 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v230 = swift_allocError(v228, v229, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v228 - 8) + 104LL))( v231,  enum case for PlaybackCode.ceGE80(_:),  v228);
    *uint64_t v10 = v230;
    swift_storeEnumTagMultiPayload(v10, v249, 1LL);
    v69(v10);
    goto LABEL_78;
  }

  uint64_t v117 = v239;
  uint64_t v118 = v53(v239, v253, v16);
  uint64_t v119 = (os_log_s *)Logger.logObject.getter(v118);
  os_log_type_t v120 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v119, v120))
  {
    uint64_t v121 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v121 = 0;
    _os_log_impl( &dword_0,  v119,  v120,  "SearchForMediaNeedsValueStrategy#parseResponseValue Ignorning non-server-conversion parse",  v121,  2u);
    swift_slowDealloc(v121, -1LL, -1LL);
  }

  v257(v117, v16);
  uint64_t v122 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v123 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v124 = swift_allocError(v122, v123, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v122 - 8) + 104LL))( v125,  enum case for PlaybackCode.ceGE76(_:),  v122);
  *uint64_t v10 = v124;
  swift_storeEnumTagMultiPayload(v10, v249, 1LL);
  v50(v10);
  swift_release(v61);
  sub_1F6CC((uint64_t)v10, &qword_2848B8);
  uint64_t v126 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v126 - 8) + 8LL))(v258, v126);
LABEL_80:
}

                __break(1u);
              }

_OWORD *sub_49B60(__int128 *a1, _OWORD *a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_49B78()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 80) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 72));
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_49C40(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  sub_47048( a1,  *(void *)(v1 + 16),  *(void (**)(char *, char *, uint64_t))(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56),  *(void (**)(uint64_t *))(v1 + 64),  *(void *)(v1 + 72),  v1 + ((v3 + 80) & ~v3));
}

uint64_t sub_49CA0()
{
  uint64_t v1 = type metadata accessor for UsoMediaPlayerAttributes(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v62 - v13;
  static UsoTask_CodegenConverter.convert(task:)(v73, v0);
  sub_FF10((uint64_t)v73, (uint64_t)v72, &qword_284028);
  if (!v72[3])
  {
    sub_1F6CC((uint64_t)v72, &qword_284028);
    goto LABEL_6;
  }

  uint64_t v15 = type metadata accessor for UsoTask_play_common_MediaItem(0LL);
  if ((swift_dynamicCast(&v71, v72, (char *)&type metadata for Any + 8, v15, 6LL) & 1) == 0)
  {
LABEL_6:
    uint64_t v18 = &qword_284028;
    uint64_t v19 = (char *)v73;
    goto LABEL_7;
  }

  uint64_t v16 = v71;
  uint64_t v17 = UsoTask_play_common_MediaItem.referencedMediaItem()();
  swift_release(v17);
  if (v17)
  {
    sub_1F6CC((uint64_t)v73, &qword_284028);
    swift_release(v16);
    goto LABEL_8;
  }

  uint64_t v22 = swift_retain(v16);
  uint64_t v23 = dispatch thunk of Uso_VerbTemplate_ReferenceControl.settings.getter(v22);
  uint64_t result = swift_release(v16);
  if (!v23)
  {
    swift_release(v16);
    goto LABEL_6;
  }

  uint64_t v67 = v2;
  uint64_t v68 = v16;
  if (!((unint64_t)v23 >> 62))
  {
LABEL_45:
    swift_release(v68);
    swift_bridgeObjectRelease(v23);
    goto LABEL_6;
  }

  if (v23 >= 0) {
    uint64_t v60 = v23 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v60 = v23;
  }
  swift_bridgeObjectRetain(v23);
  uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v60);
  uint64_t result = swift_bridgeObjectRelease(v23);
  if (!v61) {
    goto LABEL_45;
  }
LABEL_13:
  if ((v23 & 0xC000000000000001LL) != 0)
  {
    uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return result;
    }

    uint64_t v24 = *(void *)(v23 + 32);
    swift_retain(v24);
  }

  uint64_t v25 = swift_bridgeObjectRelease(v23);
  dispatch thunk of CodeGenListEntry.entry.getter(v72, v25);
  uint64_t v26 = swift_release(v24);
  uint64_t v27 = v72[0];
  if (!v72[0])
  {
    swift_release(v68);
    goto LABEL_6;
  }

  uint64_t v28 = static UsoMediaSettingName.settingNameField.getter(v26);
  uint64_t v30 = v29;
  uint64_t v31 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)(v28, v29);
  uint64_t v32 = v30;
  uint64_t v33 = v31;
  swift_bridgeObjectRelease(v32);
  if (!v33)
  {
    sub_1F6CC((uint64_t)v73, &qword_284028);
    swift_release(v27);
    swift_release(v68);
    goto LABEL_8;
  }

  uint64_t v66 = v27;
  uint64_t v34 = *(void *)(v33 + 16);
  if (!v34)
  {
    uint64_t v45 = 1LL;
    goto LABEL_34;
  }

  uint64_t v64 = v1;
  uint64_t v65 = v14;
  unint64_t v35 = v33 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v36 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v69 = *(void *)(v9 + 72);
  uint64_t v70 = v36;
  uint64_t v63 = v33;
  swift_bridgeObjectRetain(v33);
  while (1)
  {
    uint64_t v38 = v70(v12, v35, v8);
    uint64_t v39 = UsoIdentifier.namespace.getter(v38);
    uint64_t v41 = v40;
    uint64_t v42 = static UsoMediaPlayerAttributes.namespace.getter();
    uint64_t v44 = v43;
    if (!v41)
    {
      swift_bridgeObjectRelease(v43);
      goto LABEL_21;
    }

    if (v39 == v42 && v41 == v43)
    {
      uint64_t v33 = v63;
      swift_bridgeObjectRelease(v63);
      swift_bridgeObjectRelease(v41);
      uint64_t v46 = v44;
      goto LABEL_33;
    }

    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v44);
    if ((v37 & 1) != 0) {
      break;
    }
LABEL_21:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v35 += v69;
    if (!--v34)
    {
      uint64_t v33 = v63;
      swift_bridgeObjectRelease(v63);
      uint64_t v45 = 1LL;
      uint64_t v1 = v64;
      uint64_t v14 = v65;
      goto LABEL_34;
    }
  }

  uint64_t v33 = v63;
  uint64_t v46 = v63;
LABEL_33:
  swift_bridgeObjectRelease(v46);
  uint64_t v14 = v65;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v12, v8);
  uint64_t v45 = 0LL;
  uint64_t v1 = v64;
LABEL_34:
  uint64_t v47 = v68;
  uint64_t v48 = v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v45, 1LL, v8);
  swift_bridgeObjectRelease(v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8) == 1)
  {
    sub_1F6CC((uint64_t)v73, &qword_284028);
    swift_release(v48);
    swift_release(v47);
    uint64_t v18 = &qword_284900;
    uint64_t v19 = v7;
LABEL_7:
    sub_1F6CC((uint64_t)v19, v18);
LABEL_8:
    char v20 = 0;
  }

  else
  {
    uint64_t v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    uint64_t v50 = v1;
    uint64_t v51 = UsoIdentifier.value.getter(v49);
    uint64_t v53 = v52;
    uint64_t v54 = v67;
    uint64_t v55 = (*(uint64_t (**)(char *, void, uint64_t))(v67 + 104))( v4,  enum case for UsoMediaPlayerAttributes.shuffled(_:),  v50);
    uint64_t v56 = UsoMediaPlayerAttributes.rawValue.getter(v55);
    uint64_t v58 = v57;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v4, v50);
    if (v51 == v56 && v53 == v58)
    {
      char v20 = 1;
      uint64_t v58 = v53;
    }

    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v53);
    }

    uint64_t v59 = v68;
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v58);
    swift_release(v59);
    swift_release(v66);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    sub_1F6CC((uint64_t)v73, &qword_284028);
  }

  return v20 & 1;
}

uint64_t sub_4A218()
{
  uint64_t v109 = type metadata accessor for UsoMediaPlayerAttributes(0LL);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v107 = (char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v2);
  BOOL v110 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v115 = *(void *)(v120 - 8);
  uint64_t v4 = __chkstk_darwin(v120);
  uint64_t v114 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  id v111 = (char *)&v104 - v6;
  uint64_t v119 = type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues(0LL);
  uint64_t v117 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v112 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_284908);
  __chkstk_darwin(v8);
  uint64_t v118 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2848E8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v113 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v116 = (char *)&v104 - v14;
  __chkstk_darwin(v13);
  uint64_t v121 = (uint64_t)&v104 - v15;
  uint64_t v16 = type metadata accessor for UsoEntity_common_Person.DefinedValues(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_284910);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_284918);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v104 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v104 - v30;
  static UsoTask_CodegenConverter.convert(task:)(v124, v0);
  sub_FF10((uint64_t)v124, (uint64_t)v123, &qword_284028);
  if (!v123[3])
  {
    sub_1F6CC((uint64_t)v123, &qword_284028);
    goto LABEL_7;
  }

  uint64_t v32 = type metadata accessor for UsoTask_play_common_MediaItem(0LL);
  if ((swift_dynamicCast(&v122, v123, (char *)&type metadata for Any + 8, v32, 6LL) & 1) == 0)
  {
LABEL_7:
    char v37 = &qword_284028;
    uint64_t v38 = (char *)v124;
    goto LABEL_8;
  }

  uint64_t v33 = v122;
  uint64_t v34 = UsoTask_play_common_MediaItem.referencedMediaItem()();
  if (!v34)
  {
    sub_1F6CC((uint64_t)v124, &qword_284028);
    swift_release(v33);
    goto LABEL_9;
  }

  uint64_t v105 = v33;
  uint64_t v106 = v34;
  uint64_t v35 = dispatch thunk of UsoEntity_common_MediaItem.associatedPerson.getter();
  if (v35)
  {
    uint64_t v36 = v35;
    dispatch thunk of UsoEntity_common_Person.definedValue.getter();
    swift_release(v36);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v31, 1LL, 1LL, v16);
  }

  (*(void (**)(char *, void, uint64_t))(v17 + 104))( v29,  enum case for UsoEntity_common_Person.DefinedValues.common_Person_User(_:),  v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v29, 0LL, 1LL, v16);
  uint64_t v41 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_FF10((uint64_t)v31, (uint64_t)v22, &qword_284918);
  sub_FF10((uint64_t)v29, v41, &qword_284918);
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v42((uint64_t)v22, 1LL, v16) == 1)
  {
    sub_1F6CC((uint64_t)v29, &qword_284918);
    sub_1F6CC((uint64_t)v31, &qword_284918);
    if (v42(v41, 1LL, v16) == 1)
    {
      uint64_t v43 = sub_1F6CC((uint64_t)v22, &qword_284918);
      uint64_t v44 = v105;
      goto LABEL_20;
    }

    goto LABEL_18;
  }

  sub_FF10((uint64_t)v22, (uint64_t)v26, &qword_284918);
  if (v42(v41, 1LL, v16) == 1)
  {
    sub_1F6CC((uint64_t)v29, &qword_284918);
    sub_1F6CC((uint64_t)v31, &qword_284918);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v16);
LABEL_18:
    sub_1F6CC((uint64_t)v22, &qword_284910);
    uint64_t v44 = v105;
LABEL_29:
    sub_1F6CC((uint64_t)v124, &qword_284028);
LABEL_30:
    swift_release(v106);
    swift_release(v44);
    goto LABEL_9;
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v19, v41, v16);
  uint64_t v45 = sub_10430( &qword_284920,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_Person.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_Person.DefinedValues);
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v19, v16, v45);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v17 + 8);
  v47(v19, v16);
  sub_1F6CC((uint64_t)v29, &qword_284918);
  sub_1F6CC((uint64_t)v31, &qword_284918);
  v47(v26, v16);
  uint64_t v43 = sub_1F6CC((uint64_t)v22, &qword_284918);
  uint64_t v44 = v105;
  if ((v46 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_20:
  uint64_t v48 = dispatch thunk of UsoEntity_common_MediaItem.mediaItemType.getter(v43);
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = v121;
    dispatch thunk of UsoEntity_common_MediaItemType.definedValue.getter(v48);
    swift_release(v49);
    uint64_t v52 = (uint64_t)v118;
    uint64_t v51 = v119;
    uint64_t v53 = v117;
  }

  else
  {
    uint64_t v53 = v117;
    uint64_t v50 = v121;
    uint64_t v51 = v119;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v121, 1LL, 1LL, v119);
    uint64_t v52 = (uint64_t)v118;
  }

  uint64_t v54 = (uint64_t)v116;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))( v116,  enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Music(_:),  v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0LL, 1LL, v51);
  uint64_t v55 = v52 + *(int *)(v8 + 48);
  sub_FF10(v50, v52, &qword_2848E8);
  sub_FF10(v54, v55, &qword_2848E8);
  uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v56(v52, 1LL, v51) == 1)
  {
    sub_1F6CC(v54, &qword_2848E8);
    sub_1F6CC(v50, &qword_2848E8);
    if (v56(v55, 1LL, v51) == 1)
    {
      sub_1F6CC(v52, &qword_2848E8);
      goto LABEL_32;
    }

    goto LABEL_28;
  }

  uint64_t v57 = v113;
  sub_FF10(v52, v113, &qword_2848E8);
  if (v56(v55, 1LL, v51) == 1)
  {
    sub_1F6CC(v54, &qword_2848E8);
    sub_1F6CC(v50, &qword_2848E8);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v57, v51);
LABEL_28:
    sub_1F6CC(v52, &qword_284908);
    goto LABEL_29;
  }

  uint64_t v58 = v112;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v112, v55, v51);
  uint64_t v59 = sub_10430( &qword_2848F8,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_MediaItemType.DefinedValues);
  char v60 = dispatch thunk of static Equatable.== infix(_:_:)(v57, v58, v51, v59);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v53 + 8);
  v61(v58, v51);
  sub_1F6CC(v54, &qword_2848E8);
  sub_1F6CC(v121, &qword_2848E8);
  v61((char *)v57, v51);
  sub_1F6CC(v52, &qword_2848E8);
  if ((v60 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_32:
  uint64_t v62 = swift_retain(v44);
  uint64_t v63 = dispatch thunk of Uso_VerbTemplate_ReferenceControl.settings.getter(v62);
  uint64_t result = swift_release(v44);
  if (!v63)
  {
LABEL_49:
    swift_release(v44);
    swift_release(v106);
    goto LABEL_7;
  }

  if (!((unint64_t)v63 >> 62))
  {
LABEL_66:
    swift_release(v44);
    swift_release(v106);
    swift_bridgeObjectRelease(v63);
    goto LABEL_7;
  }

  if (v63 >= 0) {
    uint64_t v102 = v63 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v102 = v63;
  }
  swift_bridgeObjectRetain(v63);
  uint64_t v103 = _CocoaArrayWrapper.endIndex.getter(v102);
  uint64_t result = swift_bridgeObjectRelease(v63);
  if (!v103) {
    goto LABEL_66;
  }
LABEL_35:
  if ((v63 & 0xC000000000000001LL) != 0)
  {
    uint64_t v64 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v63);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v63 & 0xFFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return result;
    }

    uint64_t v64 = *(void *)(v63 + 32);
    swift_retain(v64);
  }

  uint64_t v65 = swift_bridgeObjectRelease(v63);
  dispatch thunk of CodeGenListEntry.entry.getter(v123, v65);
  uint64_t v66 = swift_release(v64);
  uint64_t v67 = v123[0];
  if (!v123[0]) {
    goto LABEL_49;
  }
  uint64_t v68 = static UsoMediaSettingName.settingNameField.getter(v66);
  uint64_t v70 = v69;
  uint64_t v71 = dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)(v68, v69);
  swift_bridgeObjectRelease(v70);
  if (!v71)
  {
    sub_1F6CC((uint64_t)v124, &qword_284028);
    swift_release(v67);
    goto LABEL_30;
  }

  uint64_t v72 = *(void *)(v71 + 16);
  if (!v72)
  {
LABEL_52:
    uint64_t v85 = 1LL;
    uint64_t v86 = v115;
    uint64_t v87 = v110;
    uint64_t v88 = v111;
    goto LABEL_55;
  }

  unint64_t v73 = v71 + ((*(unsigned __int8 *)(v115 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
  uint64_t v74 = *(void *)(v115 + 72);
  uint64_t v75 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v115 + 16);
  swift_bridgeObjectRetain(v71);
  uint64_t v76 = v114;
  while (1)
  {
    uint64_t v78 = v75(v76, v73, v120);
    uint64_t v79 = UsoIdentifier.namespace.getter(v78);
    uint64_t v81 = v80;
    uint64_t v82 = static UsoMediaPlayerAttributes.namespace.getter();
    uint64_t v84 = v83;
    if (!v81)
    {
      swift_bridgeObjectRelease(v83);
      goto LABEL_43;
    }

    if (v79 == v82 && v81 == v83)
    {
      swift_bridgeObjectRelease(v71);
      swift_bridgeObjectRelease(v81);
      uint64_t v89 = v84;
      goto LABEL_54;
    }

    char v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v81);
    swift_bridgeObjectRelease(v81);
    swift_bridgeObjectRelease(v84);
    if ((v77 & 1) != 0) {
      break;
    }
LABEL_43:
    uint64_t v76 = v114;
    (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v120);
    v73 += v74;
    if (!--v72)
    {
      swift_bridgeObjectRelease(v71);
      goto LABEL_52;
    }
  }

  uint64_t v89 = v71;
LABEL_54:
  swift_bridgeObjectRelease(v89);
  uint64_t v86 = v115;
  uint64_t v87 = v110;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v110, v114, v120);
  uint64_t v85 = 0LL;
  uint64_t v88 = v111;
LABEL_55:
  uint64_t v90 = v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v87, v85, 1LL, v120);
  swift_bridgeObjectRelease(v71);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v87, 1LL, v90) == 1)
  {
    sub_1F6CC((uint64_t)v124, &qword_284028);
    swift_release(v67);
    swift_release(v106);
    swift_release(v105);
    char v37 = &qword_284900;
    uint64_t v38 = v87;
LABEL_8:
    sub_1F6CC((uint64_t)v38, v37);
LABEL_9:
    char v39 = 0;
  }

  else
  {
    uint64_t v91 = (*(uint64_t (**)(char *, char *, uint64_t))(v86 + 32))(v88, v87, v120);
    uint64_t v92 = UsoIdentifier.value.getter(v91);
    uint64_t v94 = v93;
    uint64_t v95 = v108;
    id v96 = v107;
    uint64_t v97 = v109;
    uint64_t v98 = (*(uint64_t (**)(char *, void, uint64_t))(v108 + 104))( v107,  enum case for UsoMediaPlayerAttributes.shuffled(_:),  v109);
    uint64_t v99 = UsoMediaPlayerAttributes.rawValue.getter(v98);
    uint64_t v101 = v100;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v97);
    if (v92 == v99 && v94 == v101)
    {
      char v39 = 1;
      uint64_t v101 = v94;
    }

    else
    {
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v94);
    }

    swift_bridgeObjectRelease(v101);
    swift_release(v106);
    swift_release(v105);
    swift_release(v67);
    swift_bridgeObjectRelease(v94);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v120);
    sub_1F6CC((uint64_t)v124, &qword_284028);
  }

  return v39 & 1;
}

uint64_t sub_4AE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_4AE60(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - v12;
  if ((a2 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v14 = sub_6960(v7, (uint64_t)qword_2969C8);
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v14, v7);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl( &dword_0,  v16,  v17,  "DetermineDialogProvider#respondWithCannotPreviousOrNextDialog Cannot answer question about previous",  v18,  2u);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    unint64_t v19 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v40 = 0LL;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    uint64_t v20 = __chkstk_darwin(v19);
    *((void *)&v38 - 10) = v21;
    *((void *)&v38 - sub_6C3C(v0 + 9) = v22;
    *((void *)&v38 - sub_6C3C(v0 + 8) = 0xD00000000000002ALL;
    *((void *)&v38 - sub_6C3C(v0 + 7) = 0x800000000021DA90LL;
    uint64_t v32 = v23;
    uint64_t v33 = v20;
    uint64_t v36 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    char v37 = &v38 - 6;
    uint64_t v34 = 0xD00000000000002ALL;
    uint64_t v35 = 0x800000000021DA90LL;
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = sub_6960(v7, (uint64_t)qword_2969C8);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v24, v7);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl( &dword_0,  v26,  v27,  "DetermineDialogProvider#respondWithCannotPreviousOrNextDialog Cannot answer question about next",  v28,  2u);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    unint64_t v19 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v40 = 0LL;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    uint64_t v29 = __chkstk_darwin(v19);
    *((void *)&v38 - 10) = v21;
    *((void *)&v38 - sub_6C3C(v0 + 9) = v22;
    *((void *)&v38 - sub_6C3C(v0 + 8) = 0xD000000000000026LL;
    *((void *)&v38 - sub_6C3C(v0 + 7) = 0x800000000021DA60LL;
    uint64_t v32 = v30;
    uint64_t v33 = v29;
    uint64_t v36 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    char v37 = &v38 - 6;
    uint64_t v34 = 0xD000000000000026LL;
    uint64_t v35 = 0x800000000021DA60LL;
  }

  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v21,  v22,  v34,  v35,  v36,  (uint64_t)v37);
  swift_bridgeObjectRelease(v19);
  return sub_4B3CC((uint64_t)&v38);
}

uint64_t sub_4B204( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = static ErrorFilingProvider.getErrorFilingInfo()();
  uint64_t v13 = *(void **)(v9 + 120);
  uint64_t v30 = 0LL;
  memset(v29, 0, sizeof(v29));
  uint64_t v14 = v13[4];
  uint64_t v15 = v13[5];
  uint64_t v16 = v13[6];
  uint64_t v20 = v15;
  uint64_t v21 = v16;
  unint64_t v22 = 0xD000000000000020LL;
  unint64_t v23 = 0x800000000021DA30LL;
  uint64_t v24 = v14;
  uint64_t v25 = v12;
  uint64_t v26 = a1;
  os_log_type_t v27 = v29;
  uint64_t v28 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a8,  a9,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v15,  v16,  0xD000000000000020LL,  0x800000000021DA30LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v19);
  swift_bridgeObjectRelease(v12);
  uint64_t v17 = sub_4B3CC((uint64_t)v29);
  return static ErrorFilingProvider.clearErrorFilingInfo()(v17);
}

uint64_t sub_4B300()
{
  return swift_release(*(void *)(v0 + 120));
}

uint64_t sub_4B308()
{
  return swift_deallocClassInstance(v0, 128LL, 7LL);
}

uint64_t type metadata accessor for DetermineDialogProvider(uint64_t a1)
{
  uint64_t result = qword_284950;
  if (!qword_284950) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DetermineDialogProvider);
  }
  return result;
}

uint64_t sub_4B388(uint64_t a1)
{
  uint64_t v2 = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256LL, 1LL, &v2, a1 + 520);
}

uint64_t sub_4B3CC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_283FE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_4B40C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v476 = a3;
  uint64_t v477 = a4;
  uint64_t v475 = a1;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v479 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v473 = (char *)&v445 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v471 = (char *)&v445 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v445 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  id v458 = (char *)&v445 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v464 = (char *)&v445 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  BOOL v457 = (char *)&v445 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  char v463 = (char *)&v445 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  id v456 = (char *)&v445 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v462 = (char *)&v445 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  unsigned __int8 v455 = (char *)&v445 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v461 = (char *)&v445 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v454 = (char *)&v445 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v460 = (char *)&v445 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v453 = (char *)&v445 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v459 = (char *)&v445 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v469 = (char *)&v445 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v465 = (char *)&v445 - v40;
  __chkstk_darwin(v39);
  uint64_t v482 = (char *)&v445 - v41;
  unint64_t v468 = sub_6C5C(&qword_2844D0);
  uint64_t v42 = swift_allocObject(v468, 896LL, 7LL);
  *(_OWORD *)(v42 + sub_6C3C(v0 + 16) = xmmword_215000;
  unint64_t v478 = 0xD000000000000010LL;
  *(void *)(v42 + 3sub_6C3C(v0 + 2) = 0xD000000000000010LL;
  *(void *)(v42 + 40) = 0x800000000021DB00LL;
  id v43 = [a2 whaDialogMetadata];
  uint64_t v466 = v12;
  if (!v43
    || (uint64_t v44 = v43,
        id v45 = [v43 firstSpeakerName],
        v44,
        !v45))
  {
    uint64_t v49 = (uint64_t *)(v42 + 48);
    *(void *)(v42 + 7sub_6C3C(v0 + 2) = &type metadata for String;
    goto LABEL_6;
  }

  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
  unint64_t v48 = v47;

  uint64_t v49 = (uint64_t *)(v42 + 48);
  *(void *)(v42 + 7sub_6C3C(v0 + 2) = &type metadata for String;
  if (!v48)
  {
LABEL_6:
    uint64_t *v49 = 0LL;
    unint64_t v48 = 0xE000000000000000LL;
    goto LABEL_7;
  }

  uint64_t *v49 = v46;
LABEL_7:
  *(void *)(v42 + 56) = v48;
  *(void *)(v42 + 80) = 0xD000000000000011LL;
  *(void *)(v42 + 8sub_6C3C(v0 + 8) = 0x800000000021DB20LL;
  id v50 = [a2 whaDialogMetadata];
  if (!v50
    || (uint64_t v51 = v50,
        id v52 = [v50 secondSpeakerName],
        v51,
        !v52))
  {
    uint64_t v56 = (uint64_t *)(v42 + 96);
    *(void *)(v42 + 120) = &type metadata for String;
    goto LABEL_12;
  }

  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  unint64_t v55 = v54;

  uint64_t v56 = (uint64_t *)(v42 + 96);
  *(void *)(v42 + 120) = &type metadata for String;
  if (!v55)
  {
LABEL_12:
    *uint64_t v56 = 0LL;
    unint64_t v55 = 0xE000000000000000LL;
    goto LABEL_13;
  }

  *uint64_t v56 = v53;
LABEL_13:
  *(void *)(v42 + 10sub_6C3C(v0 + 4) = v55;
  *(void *)(v42 + 12sub_6C3C(v0 + 8) = v478;
  *(void *)(v42 + 136) = 0x800000000021DB40LL;
  id v57 = [a2 whaDialogMetadata];
  if (!v57
    || (uint64_t v58 = v57,
        id v59 = [v57 firstSpeakerRoom],
        v58,
        !v59))
  {
    uint64_t v63 = (uint64_t *)(v42 + 144);
    *(void *)(v42 + 16sub_6C3C(v0 + 8) = &type metadata for String;
    goto LABEL_18;
  }

  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  unint64_t v62 = v61;

  uint64_t v63 = (uint64_t *)(v42 + 144);
  *(void *)(v42 + 16sub_6C3C(v0 + 8) = &type metadata for String;
  if (!v62)
  {
LABEL_18:
    uint64_t *v63 = 0LL;
    unint64_t v62 = 0xE000000000000000LL;
    goto LABEL_19;
  }

  uint64_t *v63 = v60;
LABEL_19:
  *(void *)(v42 + 15sub_6C3C(v0 + 2) = v62;
  *(void *)(v42 + 176) = 0xD000000000000011LL;
  *(void *)(v42 + 18sub_6C3C(v0 + 4) = 0x800000000021DB60LL;
  id v64 = [a2 whaDialogMetadata];
  if (!v64
    || (uint64_t v65 = v64,
        id v66 = [v64 secondSpeakerRoom],
        v65,
        !v66))
  {
    uint64_t v70 = (uint64_t *)(v42 + 192);
    *(void *)(v42 + 2sub_6C3C(v0 + 16) = &type metadata for String;
    goto LABEL_24;
  }

  uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
  unint64_t v69 = v68;

  uint64_t v70 = (uint64_t *)(v42 + 192);
  *(void *)(v42 + 2sub_6C3C(v0 + 16) = &type metadata for String;
  if (!v69)
  {
LABEL_24:
    *uint64_t v70 = 0LL;
    unint64_t v69 = 0xE000000000000000LL;
    goto LABEL_25;
  }

  *uint64_t v70 = v67;
LABEL_25:
  *(void *)(v42 + 200) = v69;
  *(void *)(v42 + 2sub_6C3C(v0 + 24) = 0xD000000000000024LL;
  *(void *)(v42 + 23sub_6C3C(v0 + 2) = 0x800000000021DB80LL;
  id v71 = [a2 whaDialogMetadata];
  if (!v71
    || (uint64_t v72 = v71,
        id v73 = [v71 firstPermanentNameFromSpokenEntities],
        v72,
        !v73))
  {
    char v77 = (uint64_t *)(v42 + 240);
    *(void *)(v42 + 26sub_6C3C(v0 + 4) = &type metadata for String;
    goto LABEL_30;
  }

  uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
  unint64_t v76 = v75;

  char v77 = (uint64_t *)(v42 + 240);
  *(void *)(v42 + 26sub_6C3C(v0 + 4) = &type metadata for String;
  if (!v76)
  {
LABEL_30:
    *char v77 = 0LL;
    unint64_t v76 = 0xE000000000000000LL;
    goto LABEL_31;
  }

  *char v77 = v74;
LABEL_31:
  *(void *)(v42 + 24sub_6C3C(v0 + 8) = v76;
  *(void *)(v42 + 27sub_6C3C(v0 + 2) = 0xD000000000000025LL;
  *(void *)(v42 + 280) = 0x800000000021DBB0LL;
  id v78 = [a2 whaDialogMetadata];
  if (!v78
    || (uint64_t v79 = v78,
        id v80 = [v78 secondPermanentNameFromSpokenEntities],
        v79,
        !v80))
  {
    uint64_t v84 = (uint64_t *)(v42 + 288);
    *(void *)(v42 + 31sub_6C3C(v0 + 2) = &type metadata for String;
    goto LABEL_36;
  }

  uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
  unint64_t v83 = v82;

  uint64_t v84 = (uint64_t *)(v42 + 288);
  *(void *)(v42 + 31sub_6C3C(v0 + 2) = &type metadata for String;
  if (!v83)
  {
LABEL_36:
    *uint64_t v84 = 0LL;
    unint64_t v83 = 0xE000000000000000LL;
    goto LABEL_37;
  }

  *uint64_t v84 = v81;
LABEL_37:
  *(void *)(v42 + 296) = v83;
  *(void *)(v42 + 320) = 0xD00000000000001FLL;
  *(void *)(v42 + 32sub_6C3C(v0 + 8) = 0x800000000021DBE0LL;
  id v85 = [a2 whaDialogMetadata];
  if (!v85
    || (uint64_t v86 = v85,
        id v87 = [v85 firstRoomNameFromSpokenEntities],
        v86,
        !v87))
  {
    uint64_t v91 = (uint64_t *)(v42 + 336);
    *(void *)(v42 + 360) = &type metadata for String;
    goto LABEL_42;
  }

  uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
  unint64_t v90 = v89;

  uint64_t v91 = (uint64_t *)(v42 + 336);
  *(void *)(v42 + 360) = &type metadata for String;
  if (!v90)
  {
LABEL_42:
    *uint64_t v91 = 0LL;
    unint64_t v90 = 0xE000000000000000LL;
    goto LABEL_43;
  }

  *uint64_t v91 = v88;
LABEL_43:
  *(void *)(v42 + 3sub_6C3C(v0 + 44) = v90;
  *(void *)(v42 + 36sub_6C3C(v0 + 8) = 0xD00000000000001BLL;
  *(void *)(v42 + 376) = 0x800000000021DC00LL;
  id v92 = [a2 whaDialogMetadata];
  if (v92
    && (uint64_t v93 = v92,
        id v94 = [v92 numberOfHomeAutomationWords],
        v93,
        v94))
  {
    *((void *)&v488 + 1) = sub_4F588();
    *(void *)&__int128 v487 = v94;
    sub_21964(&v487, (_OWORD *)(v42 + 384));
  }

  else
  {
    *(void *)(v42 + 40sub_6C3C(v0 + 8) = &type metadata for String;
    *(void *)(v42 + 38sub_6C3C(v0 + 4) = 0LL;
    *(void *)(v42 + 39sub_6C3C(v0 + 2) = 0xE000000000000000LL;
  }

  strcpy((char *)(v42 + 416), "isAllSpeakers");
  *(_WORD *)(v42 + 430) = -4864;
  id v95 = [a2 whaDialogMetadata];
  Class isa = (Class)[v95 isAllSpeakers];

  unint64_t v97 = sub_4F588();
  *(void *)(v42 + 456) = v97;
  if (!isa) {
    Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 43sub_6C3C(v0 + 2) = isa;
  strcpy((char *)(v42 + 464), "isPauseOrStop");
  *(_WORD *)(v42 + 47sub_6C3C(v0 + 8) = -4864;
  id v98 = [a2 whaDialogMetadata];
  Class v99 = (Class)[v98 isPauseOrStop];

  *(void *)(v42 + 50sub_6C3C(v0 + 4) = v97;
  if (!v99) {
    Class v99 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 480) = v99;
  *(void *)(v42 + 51sub_6C3C(v0 + 2) = 0xD000000000000018LL;
  *(void *)(v42 + 520) = 0x800000000021DC20LL;
  id v100 = [a2 whaDialogMetadata];
  Class v101 = (Class)[v100 isWholeHouseAudioCommand];

  *(void *)(v42 + 55sub_6C3C(v0 + 2) = v97;
  if (!v101) {
    Class v101 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 52sub_6C3C(v0 + 8) = v101;
  *(void *)(v42 + 560) = 0x657265486E497369LL;
  *(void *)(v42 + 56sub_6C3C(v0 + 8) = 0xE800000000000000LL;
  id v102 = [a2 whaDialogMetadata];
  Class v103 = (Class)[v102 isInHere];

  *(void *)(v42 + 600) = v97;
  if (!v103) {
    Class v103 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 576) = v103;
  *(void *)(v42 + 60sub_6C3C(v0 + 8) = 0x7065637845736168LL;
  *(void *)(v42 + 6sub_6C3C(v0 + 16) = 0xE900000000000074LL;
  id v104 = [a2 whaDialogMetadata];
  Class v105 = (Class)[v104 hasExcept];

  *(void *)(v42 + 64sub_6C3C(v0 + 8) = v97;
  if (!v105) {
    Class v105 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 6sub_6C3C(v0 + 24) = v105;
  unint64_t v467 = 0xD000000000000013LL;
  *(void *)(v42 + 656) = 0xD000000000000013LL;
  *(void *)(v42 + 66sub_6C3C(v0 + 4) = 0x800000000021DC40LL;
  id v106 = [a2 whaDialogMetadata];
  Class v107 = (Class)[v106 hasThreeOrMoreRooms];

  *(void *)(v42 + 696) = v97;
  if (!v107) {
    Class v107 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 67sub_6C3C(v0 + 2) = v107;
  *(void *)(v42 + 70sub_6C3C(v0 + 4) = 0xD000000000000015LL;
  *(void *)(v42 + 71sub_6C3C(v0 + 2) = 0x800000000021DC60LL;
  id v108 = [a2 whaDialogMetadata];
  Class v109 = (Class)[v108 hasThreeOrMoreDevices];

  *(void *)(v42 + 7sub_6C3C(v0 + 44) = v97;
  if (!v109) {
    Class v109 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 720) = v109;
  *(void *)(v42 + 75sub_6C3C(v0 + 2) = 0xD000000000000011LL;
  *(void *)(v42 + 760) = 0x800000000021DC80LL;
  id v110 = [a2 whaDialogMetadata];
  Class v111 = (Class)[v110 hasTwoOrMoreRooms];

  *(void *)(v42 + 79sub_6C3C(v0 + 2) = v97;
  if (!v111) {
    Class v111 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 76sub_6C3C(v0 + 8) = v111;
  *(void *)(v42 + 800) = 0x70756F7247736168LL;
  *(void *)(v42 + 80sub_6C3C(v0 + 8) = 0xE900000000000073LL;
  id v112 = [a2 whaDialogMetadata];
  Class v113 = (Class)[v112 hasGroups];

  *(void *)(v42 + 840) = v97;
  if (!v113) {
    Class v113 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  *(void *)(v42 + 8sub_6C3C(v0 + 16) = v113;
  *(void *)(v42 + 84sub_6C3C(v0 + 8) = 0xD000000000000016LL;
  *(void *)(v42 + 856) = 0x800000000021DCA0LL;
  id v114 = [a2 whaDialogMetadata];
  Class v115 = (Class)[v114 isParticipatingSpeaker];

  *(void *)(v42 + 88sub_6C3C(v0 + 8) = v97;
  if (!v115) {
    Class v115 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
  }
  id v481 = a2;
  *(void *)(v42 + 86sub_6C3C(v0 + 4) = v115;
  unint64_t v116 = sub_74D54(v42);
  uint64_t v117 = v482;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v118 = sub_6960(v5, (uint64_t)qword_2969C8);
  uint64_t v119 = v479;
  uint64_t v120 = *(void (**)(char *))(v479 + 16);
  uint64_t v480 = v118;
  v120(v117);
  uint64_t v121 = swift_bridgeObjectRetain_n(v116, 2LL);
  uint64_t v122 = (os_log_s *)Logger.logObject.getter(v121);
  uint64_t v123 = v5;
  os_log_type_t v124 = static os_log_type_t.debug.getter();
  BOOL v125 = os_log_type_enabled(v122, v124);
  uint64_t v472 = (char *)v97;
  if (v125)
  {
    uint64_t v126 = swift_slowAlloc(12LL, -1LL);
    uint64_t v470 = v5;
    int v127 = (uint8_t *)v126;
    uint64_t v128 = swift_slowAlloc(32LL, -1LL);
    unint64_t v474 = v120;
    uint64_t v129 = v128;
    *(void *)&__int128 v487 = v128;
    *(_DWORD *)int v127 = 136315138;
    uint64_t v452 = v127 + 4;
    swift_bridgeObjectRetain(v116);
    uint64_t v131 = Dictionary.description.getter( v130,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    unint64_t v133 = v132;
    swift_bridgeObjectRelease(v116);
    uint64_t v483 = (char *)sub_6978(v131, v133, (uint64_t *)&v487);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v483, v484);
    swift_bridgeObjectRelease_n(v116, 2LL);
    swift_bridgeObjectRelease(v133);
    _os_log_impl( &dword_0,  v122,  v124,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases WHA Params:%s",  v127,  0xCu);
    swift_arrayDestroy(v129, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v134 = v129;
    uint64_t v120 = v474;
    swift_slowDealloc(v134, -1LL, -1LL);
    swift_slowDealloc(v127, -1LL, -1LL);

    uint64_t v135 = *(void (**)(char *, uint64_t))(v119 + 8);
    uint64_t v136 = v470;
    v135(v482, v470);
  }

  else
  {

    swift_bridgeObjectRelease_n(v116, 2LL);
    uint64_t v135 = *(void (**)(char *, uint64_t))(v119 + 8);
    v135(v117, v123);
    uint64_t v136 = v123;
  }

  id v137 = v481;
  uint64_t v138 = (char *)[v481 queueLocation];
  uint64_t v139 = (char *)[v137 queueLocation];
  id v140 = [v137 nowPlayingIntentInfo];
  if (v140)
  {
    uint64_t v141 = v140;
    uint64_t v142 = type metadata accessor for NowPlayingIntentInfo();
    uint64_t v143 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v141, v142);

    if ((unint64_t)v143 >> 62)
    {
      if (v143 < 0) {
        uint64_t v428 = v143;
      }
      else {
        uint64_t v428 = v143 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v143);
      uint64_t v429 = _CocoaArrayWrapper.endIndex.getter(v428);
      swift_bridgeObjectRelease(v143);
      if (v429)
      {
LABEL_75:
        uint64_t v482 = v138;
        unint64_t v474 = v120;
        if ((v143 & 0xC000000000000001LL) != 0)
        {
          id v144 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v143);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v143 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            JUMPOUT(0x4EB2CLL);
          }

          id v144 = *(id *)(v143 + 32);
        }

        os_log_type_t v145 = v144;
        id v146 = objc_msgSend(v144, "noAppProvidedData", swift_bridgeObjectRelease(v143).n128_f64[0]);
        v147.super.super.Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
        if (v146)
        {
          id v148 = v146;
          char v149 = static NSObject.== infix(_:_:)(v148, v147.super.super.isa);

          if ((v149 & 1) != 0)
          {
            id v150 = [v145 isLoading];

            if (!v150) {
              goto LABEL_83;
            }
            id v151 = [v145 isLoading];
            v152.super.super.Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
            if (v151)
            {
              id v153 = v151;
              char v154 = static NSObject.== infix(_:_:)(v153, v152.super.super.isa);

              if ((v154 & 1) != 0)
              {
LABEL_83:
                id v155 = [v145 albumArtist];
                if (v155)
                {
                  uint64_t v156 = v155;
                  uint64_t v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(v155);
                  unint64_t v159 = v158;
                }

                else
                {
                  uint64_t v157 = 0LL;
                  unint64_t v159 = 0LL;
                }

                uint64_t v451 = v157;
                id v170 = [v145 album];
                if (v170)
                {
                  uint64_t v171 = v170;
                  uint64_t v172 = static String._unconditionallyBridgeFromObjectiveC(_:)(v170);
                  unint64_t v473 = v173;
                }

                else
                {
                  uint64_t v172 = 0LL;
                  unint64_t v473 = 0LL;
                }

                id v174 = [v145 trackArtist];
                unint64_t v450 = v159;
                uint64_t v452 = (uint8_t *)v172;
                if (v174)
                {
                  uint64_t v175 = v174;
                  uint64_t v176 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
                  uint64_t v471 = v177;
                }

                else
                {
                  uint64_t v176 = 0LL;
                  uint64_t v471 = 0LL;
                }

                uint64_t v472 = v139;
                id v178 = [v145 title];
                uint64_t v466 = (char *)v176;
                if (v178)
                {
                  unint64_t v179 = v178;
                  uint64_t v180 = static String._unconditionallyBridgeFromObjectiveC(_:)(v178);
                  unint64_t v182 = v181;
                }

                else
                {
                  uint64_t v180 = 0LL;
                  unint64_t v182 = 0LL;
                }

                unint64_t v485 = v180;
                unint64_t v486 = v182;
                id v183 = v481;
                if ([v481 requestType] == (char *)&dword_4 + 1)
                {
                  id v184 = objc_msgSend(v145, "playlistTitle", swift_bridgeObjectRelease(v182).n128_f64[0]);
                }

                else
                {
                  if ([v183 requestType] != &dword_4) {
                    goto LABEL_114;
                  }
                  id v184 = objc_msgSend(v145, "stationTitle", swift_bridgeObjectRelease(v182).n128_f64[0]);
                }

                id v185 = v184;
                id v186 = v185;
                if (v185)
                {
                  uint64_t v180 = static String._unconditionallyBridgeFromObjectiveC(_:)(v185);
                  unint64_t v182 = v187;
                }

                else
                {
                  uint64_t v180 = 0LL;
                  unint64_t v182 = 0LL;
                }

                unint64_t v485 = v180;
                unint64_t v486 = v182;
LABEL_114:
                uint64_t v449 = v145;
                id v191 = [v145 appBundleId];
                uint64_t v470 = v136;
                if (v191)
                {
                  uint64_t v192 = v191;
                  uint64_t v193 = static String._unconditionallyBridgeFromObjectiveC(_:)(v191);
                  uint64_t v195 = v194;

                  uint64_t v197 = static BundleIdentifiers.soundscapes.getter(v196);
                  uint64_t v199 = v198;
                  if (v195)
                  {
                    if (v193 == v197 && v195 == v198)
                    {
                      swift_bridgeObjectRelease_n(v195, 2LL);
LABEL_159:
                      BOOL v266 = v472 == (_BYTE *)&dword_0 + 2;
                      id v267 = v481;
                      BOOL v268 = v482 == (_BYTE *)&dword_0 + 3;
                      id v458 = (char *)[v481 requestType];
                      LODWORD(v47sub_6C3C(v0 + 8) = v458 == (_BYTE *)&dword_0 + 2;
                      uint64_t v459 = (char *)[v267 requestType];
                      LODWORD(v46sub_6C3C(v0 + 9) = v459 == (_BYTE *)&dword_0 + 1;
                      uint64_t v460 = (char *)[v267 requestType];
                      LODWORD(v46sub_6C3C(v0 + 4) = v460 == 0LL;
                      uint64_t v461 = (char *)[v267 requestType];
                      LODWORD(v46sub_6C3C(v0 + 3) = v461 == (char *)&dword_4;
                      uint64_t v462 = (char *)[v267 requestType];
                      BOOL v269 = v462 == (_BYTE *)&dword_4 + 1;
                      uint64_t v270 = swift_allocObject(v468, 608LL, 7LL);
                      uint64_t v271 = v270;
                      *(_OWORD *)(v270 + sub_6C3C(v0 + 16) = xmmword_215010;
                      *(void *)(v270 + 3sub_6C3C(v0 + 2) = v467;
                      *(void *)(v270 + 40) = 0x800000000021DCC0LL;
                      *(_BYTE *)(v270 + 4sub_6C3C(v0 + 8) = v268;
                      *(void *)(v270 + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
                      *(void *)(v270 + 80) = 0x65527478654E7369LL;
                      *(void *)(v270 + 8sub_6C3C(v0 + 8) = 0xEF65636E65726566LL;
                      *(_BYTE *)(v270 + 96) = v266;
                      uint64_t v272 = v470;
                      *(void *)(v270 + 120) = &type metadata for Bool;
                      *(void *)(v270 + 12sub_6C3C(v0 + 8) = 0x7472416D75626C61LL;
                      unint64_t v273 = v450;
                      uint64_t v274 = v451;
                      if (!v450) {
                        uint64_t v274 = 0LL;
                      }
                      unint64_t v275 = 0xE000000000000000LL;
                      if (v450) {
                        unint64_t v276 = v450;
                      }
                      else {
                        unint64_t v276 = 0xE000000000000000LL;
                      }
                      *(void *)(v270 + 136) = 0xEB00000000747369LL;
                      *(void *)(v270 + 1sub_6C3C(v0 + 44) = v274;
                      *(void *)(v270 + 15sub_6C3C(v0 + 2) = v276;
                      *(void *)(v270 + 16sub_6C3C(v0 + 8) = &type metadata for String;
                      *(void *)(v270 + 176) = 0x6D75626C61LL;
                      uint64_t v277 = v473;
                      uint64_t v278 = v452;
                      if (v473)
                      {
                        unint64_t v279 = (unint64_t)v473;
                      }

                      else
                      {
                        uint64_t v278 = 0LL;
                        unint64_t v279 = 0xE000000000000000LL;
                      }

                      *(void *)(v270 + 18sub_6C3C(v0 + 4) = 0xE500000000000000LL;
                      *(void *)(v270 + 19sub_6C3C(v0 + 2) = v278;
                      *(void *)(v270 + 200) = v279;
                      *(void *)(v270 + 2sub_6C3C(v0 + 16) = &type metadata for String;
                      *(void *)(v270 + 2sub_6C3C(v0 + 24) = 0x747241656C746974LL;
                      uint64_t v280 = v471;
                      os_log_type_t v281 = v466;
                      if (v471)
                      {
                        unint64_t v282 = (unint64_t)v471;
                      }

                      else
                      {
                        os_log_type_t v281 = 0LL;
                        unint64_t v282 = 0xE000000000000000LL;
                      }

                      *(void *)(v270 + 23sub_6C3C(v0 + 2) = 0xEB00000000747369LL;
                      *(void *)(v270 + 240) = v281;
                      *(void *)(v270 + 24sub_6C3C(v0 + 8) = v282;
                      *(void *)(v270 + 26sub_6C3C(v0 + 4) = &type metadata for String;
                      *(void *)(v270 + 27sub_6C3C(v0 + 2) = 0x656C746974LL;
                      if (v182) {
                        uint64_t v283 = v180;
                      }
                      else {
                        uint64_t v283 = 0LL;
                      }
                      if (v182) {
                        unint64_t v275 = v182;
                      }
                      *(void *)(v270 + 280) = 0xE500000000000000LL;
                      *(void *)(v270 + 28sub_6C3C(v0 + 8) = v283;
                      *(void *)(v270 + 296) = v275;
                      *(void *)(v270 + 31sub_6C3C(v0 + 2) = &type metadata for String;
                      *(void *)(v270 + 320) = 0x6D75626C417369LL;
                      *(void *)(v270 + 32sub_6C3C(v0 + 8) = 0xE700000000000000LL;
                      *(_BYTE *)(v270 + 336) = v478;
                      *(void *)(v270 + 360) = &type metadata for Bool;
                      *(void *)(v270 + 36sub_6C3C(v0 + 8) = 0x7473697472417369LL;
                      *(void *)(v270 + 376) = 0xE800000000000000LL;
                      *(_BYTE *)(v270 + 38sub_6C3C(v0 + 4) = (_BYTE)v469;
                      *(void *)(v270 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
                      *(void *)(v270 + 4sub_6C3C(v0 + 16) = 0x656C7469547369LL;
                      *(void *)(v270 + 4sub_6C3C(v0 + 24) = 0xE700000000000000LL;
                      *(_BYTE *)(v270 + 43sub_6C3C(v0 + 2) = (_BYTE)v464;
                      *(void *)(v270 + 456) = &type metadata for Bool;
                      *(void *)(v270 + 46sub_6C3C(v0 + 4) = 0x6F696461527369LL;
                      *(void *)(v270 + 47sub_6C3C(v0 + 2) = 0xE700000000000000LL;
                      *(_BYTE *)(v270 + 480) = (_BYTE)v463;
                      *(void *)(v270 + 50sub_6C3C(v0 + 4) = &type metadata for Bool;
                      *(void *)(v270 + 51sub_6C3C(v0 + 2) = 0x696C79616C507369LL;
                      *(void *)(v270 + 520) = 0xEA00000000007473LL;
                      *(void *)(v270 + 55sub_6C3C(v0 + 2) = &type metadata for Bool;
                      *(_BYTE *)(v270 + 52sub_6C3C(v0 + 8) = v269;
                      *(void *)(v270 + 560) = 0x6D61726150616877LL;
                      *(void *)(v270 + 56sub_6C3C(v0 + 8) = 0xE900000000000073LL;
                      *(void *)(v270 + 600) = sub_6C5C(&qword_284048);
                      *(void *)(v271 + 576) = v116;
                      swift_bridgeObjectRetain(v280);
                      swift_bridgeObjectRetain(v182);
                      swift_bridgeObjectRetain(v273);
                      swift_bridgeObjectRetain(v277);
                      unint64_t v284 = sub_74D54(v271);
                      uint64_t v285 = v465;
                      ((void (*)(char *, uint64_t, uint64_t))v474)(v465, v480, v272);
                      uint64_t v287 = (void (*)(char *))v485;
                      unint64_t v286 = v486;
                      swift_bridgeObjectRetain(v486);
                      swift_bridgeObjectRetain(v273);
                      swift_bridgeObjectRetain(v277);
                      uint64_t v471 = v280;
                      swift_bridgeObjectRetain(v280);
                      uint64_t v289 = (void *)Logger.logObject.getter(v288);
                      os_log_type_t v290 = static os_log_type_t.debug.getter();
                      int v291 = v290;
                      id v481 = v289;
                      if (os_log_type_enabled((os_log_t)v289, v290))
                      {
                        uint64_t v292 = swift_slowAlloc(112LL, -1LL);
                        uint64_t v480 = swift_slowAlloc(352LL, -1LL);
                        uint64_t v483 = (char *)v480;
                        *(_DWORD *)uint64_t v292 = 136317698;
                        BOOL v293 = v482 == (_BYTE *)&dword_0 + 3;
                        if (v482 == (_BYTE *)&dword_0 + 3) {
                          uint64_t v294 = 1702195828LL;
                        }
                        else {
                          uint64_t v294 = 0x65736C6166LL;
                        }
                        unint64_t v474 = v287;
                        uint64_t v482 = (char *)v284;
                        if (v293) {
                          unint64_t v295 = 0xE400000000000000LL;
                        }
                        else {
                          unint64_t v295 = 0xE500000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v294, v295, (uint64_t *)&v483);
                        LODWORD(v47sub_6C3C(v0 + 8) = v291;
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v295);
                        *(_WORD *)(v292 + 1sub_6C3C(v0 + 2) = 2080;
                        if (v472 == (_BYTE *)&dword_0 + 2) {
                          uint64_t v296 = 1702195828LL;
                        }
                        else {
                          uint64_t v296 = 0x65736C6166LL;
                        }
                        if (v472 == (_BYTE *)&dword_0 + 2) {
                          unint64_t v297 = 0xE400000000000000LL;
                        }
                        else {
                          unint64_t v297 = 0xE500000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v296, v297, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v297);
                        *(_WORD *)(v292 + 2sub_6C3C(v0 + 2) = 2080;
                        *(void *)&__int128 v487 = v451;
                        *((void *)&v487 + 1) = v273;
                        swift_bridgeObjectRetain(v273);
                        uint64_t v298 = sub_6C5C(&qword_284600);
                        uint64_t v299 = String.init<A>(describing:)(&v487, v298);
                        unint64_t v301 = v300;
                        *(void *)&__int128 v487 = sub_6978(v299, v300, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease_n(v273, 2LL);
                        swift_bridgeObjectRelease(v301);
                        *(_WORD *)(v292 + 3sub_6C3C(v0 + 2) = 2080;
                        uint64_t v302 = v473;
                        *(void *)&__int128 v487 = v452;
                        *((void *)&v487 + 1) = v473;
                        swift_bridgeObjectRetain(v473);
                        uint64_t v303 = String.init<A>(describing:)(&v487, v298);
                        unint64_t v305 = v304;
                        *(void *)&__int128 v487 = sub_6978(v303, v304, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease_n(v302, 2LL);
                        swift_bridgeObjectRelease(v305);
                        *(_WORD *)(v292 + 4sub_6C3C(v0 + 2) = 2080;
                        uint64_t v306 = v471;
                        *(void *)&__int128 v487 = v466;
                        *((void *)&v487 + 1) = v471;
                        swift_bridgeObjectRetain(v471);
                        uint64_t v307 = String.init<A>(describing:)(&v487, v298);
                        unint64_t v309 = v308;
                        *(void *)&__int128 v487 = sub_6978(v307, v308, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease_n(v306, 2LL);
                        swift_bridgeObjectRelease(v309);
                        *(_WORD *)(v292 + 5sub_6C3C(v0 + 2) = 2080;
                        *(void *)&__int128 v487 = v474;
                        *((void *)&v487 + 1) = v286;
                        swift_bridgeObjectRetain(v286);
                        uint64_t v310 = String.init<A>(describing:)(&v487, v298);
                        unint64_t v312 = v311;
                        *(void *)&__int128 v487 = sub_6978(v310, v311, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease_n(v286, 2LL);
                        unint64_t v313 = v312;
                        unint64_t v284 = (unint64_t)v482;
                        swift_bridgeObjectRelease(v313);
                        *(_WORD *)(v292 + 6sub_6C3C(v0 + 2) = 2080;
                        if (v458 == (_BYTE *)&dword_0 + 2) {
                          uint64_t v314 = 1702195828LL;
                        }
                        else {
                          uint64_t v314 = 0x65736C6166LL;
                        }
                        if (v458 == (_BYTE *)&dword_0 + 2) {
                          unint64_t v315 = 0xE400000000000000LL;
                        }
                        else {
                          unint64_t v315 = 0xE500000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v314, v315, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v315);
                        *(_WORD *)(v292 + 7sub_6C3C(v0 + 2) = 2080;
                        if (v459 == (_BYTE *)&dword_0 + 1) {
                          uint64_t v316 = 1702195828LL;
                        }
                        else {
                          uint64_t v316 = 0x65736C6166LL;
                        }
                        if (v459 == (_BYTE *)&dword_0 + 1) {
                          unint64_t v317 = 0xE400000000000000LL;
                        }
                        else {
                          unint64_t v317 = 0xE500000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v316, v317, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v317);
                        *(_WORD *)(v292 + 8sub_6C3C(v0 + 2) = 2080;
                        if (v460) {
                          uint64_t v318 = 0x65736C6166LL;
                        }
                        else {
                          uint64_t v318 = 1702195828LL;
                        }
                        if (v460) {
                          unint64_t v319 = 0xE500000000000000LL;
                        }
                        else {
                          unint64_t v319 = 0xE400000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v318, v319, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v319);
                        *(_WORD *)(v292 + 9sub_6C3C(v0 + 2) = 2080;
                        else {
                          uint64_t v320 = 0x65736C6166LL;
                        }
                        else {
                          unint64_t v321 = 0xE500000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v320, v321, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v321);
                        *(_WORD *)(v292 + 10sub_6C3C(v0 + 2) = 2080;
                        if (v462 == (_BYTE *)&dword_4 + 1) {
                          uint64_t v322 = 1702195828LL;
                        }
                        else {
                          uint64_t v322 = 0x65736C6166LL;
                        }
                        if (v462 == (_BYTE *)&dword_4 + 1) {
                          unint64_t v323 = 0xE400000000000000LL;
                        }
                        else {
                          unint64_t v323 = 0xE500000000000000LL;
                        }
                        *(void *)&__int128 v487 = sub_6978(v322, v323, (uint64_t *)&v483);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                        swift_bridgeObjectRelease(v323);
                        id v324 = v481;
                        _os_log_impl( &dword_0,  (os_log_t)v481,  (os_log_type_t)v478,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Soundscapes Params isPreviousRefere nce:%s isNextReference:%s albumArtist:%s album:%s titleArtist:%s title:%s isAlbum:%s isArtist: %s isTitle:%s isRadio:%s isPlaylist:%s",  (uint8_t *)v292,  0x70u);
                        uint64_t v325 = v480;
                        swift_arrayDestroy(v480, 11LL, (char *)&type metadata for Any + 8);
                        swift_slowDealloc(v325, -1LL, -1LL);
                        swift_slowDealloc(v292, -1LL, -1LL);

                        uint64_t v326 = (*(uint64_t (**)(char *, uint64_t))(v479 + 8))(v465, v470);
                      }

                      else
                      {

                        swift_bridgeObjectRelease_n(v286, 2LL);
                        swift_bridgeObjectRelease_n(v471, 2LL);
                        swift_bridgeObjectRelease_n(v473, 2LL);
                        swift_bridgeObjectRelease_n(v273, 2LL);
                        uint64_t v326 = ((uint64_t (*)(char *, uint64_t))v135)(v285, v272);
                      }

                      uint64_t v327 = v449;
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v326);
                      *(&v445 - 10) = v329;
                      *(&v445 - sub_6C3C(v0 + 9) = v328;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD00000000000001ELL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DDA0LL;
                      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v476,  v477,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2, public}@ enableTelemetry=YES ",  125LL,  2,  v329,  v328,  0xD00000000000001ELL,  0x800000000021DDA0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v445 - 12));
                      swift_bridgeObjectRelease(v284);

                      goto LABEL_287;
                    }

                    char v265 = _stringCompareWithSmolCheck(_:_:expecting:)(v193, v195);
                    swift_bridgeObjectRelease(v195);
                    swift_bridgeObjectRelease(v199);
                    uint64_t v136 = v470;
                    if ((v265 & 1) != 0) {
                      goto LABEL_159;
                    }
                    goto LABEL_122;
                  }

                  uint64_t v136 = v470;
                }

                else
                {
                  static BundleIdentifiers.soundscapes.getter(0LL);
                  uint64_t v199 = v200;
                }

                swift_bridgeObjectRelease(v199);
LABEL_122:
                BOOL v201 = v472 == (_BYTE *)&dword_0 + 2;
                BOOL v202 = v482 == (_BYTE *)&dword_0 + 3;
                uint64_t v203 = swift_allocObject(v468, 368LL, 7LL);
                uint64_t v204 = v203;
                *(_OWORD *)(v203 + sub_6C3C(v0 + 16) = xmmword_2144D0;
                *(void *)(v203 + 3sub_6C3C(v0 + 2) = v467;
                *(void *)(v203 + 40) = 0x800000000021DCC0LL;
                *(_BYTE *)(v203 + 4sub_6C3C(v0 + 8) = v202;
                *(void *)(v203 + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
                *(void *)(v203 + 80) = 0x65527478654E7369LL;
                *(void *)(v203 + 8sub_6C3C(v0 + 8) = 0xEF65636E65726566LL;
                *(_BYTE *)(v203 + 96) = v201;
                *(void *)(v203 + 120) = &type metadata for Bool;
                *(void *)(v203 + 12sub_6C3C(v0 + 8) = 0x7472416D75626C61LL;
                unint64_t v205 = v450;
                uint64_t v206 = v451;
                if (!v450) {
                  uint64_t v206 = 0LL;
                }
                unint64_t v207 = 0xE000000000000000LL;
                if (v450) {
                  unint64_t v208 = v450;
                }
                else {
                  unint64_t v208 = 0xE000000000000000LL;
                }
                *(void *)(v203 + 136) = 0xEB00000000747369LL;
                *(void *)(v203 + 1sub_6C3C(v0 + 44) = v206;
                *(void *)(v203 + 15sub_6C3C(v0 + 2) = v208;
                *(void *)(v203 + 16sub_6C3C(v0 + 8) = &type metadata for String;
                *(void *)(v203 + 176) = 0x6D75626C61LL;
                uint64_t v209 = v473;
                uint64_t v210 = v452;
                if (v473)
                {
                  unint64_t v211 = (unint64_t)v473;
                }

                else
                {
                  uint64_t v210 = 0LL;
                  unint64_t v211 = 0xE000000000000000LL;
                }

                *(void *)(v203 + 18sub_6C3C(v0 + 4) = 0xE500000000000000LL;
                *(void *)(v203 + 19sub_6C3C(v0 + 2) = v210;
                *(void *)(v203 + 200) = v211;
                *(void *)(v203 + 2sub_6C3C(v0 + 16) = &type metadata for String;
                *(void *)(v203 + 2sub_6C3C(v0 + 24) = 0x747241656C746974LL;
                uint64_t v212 = v471;
                uint64_t v213 = v466;
                if (v471)
                {
                  unint64_t v214 = (unint64_t)v471;
                }

                else
                {
                  uint64_t v213 = 0LL;
                  unint64_t v214 = 0xE000000000000000LL;
                }

                *(void *)(v203 + 23sub_6C3C(v0 + 2) = 0xEB00000000747369LL;
                *(void *)(v203 + 240) = v213;
                *(void *)(v203 + 24sub_6C3C(v0 + 8) = v214;
                *(void *)(v203 + 26sub_6C3C(v0 + 4) = &type metadata for String;
                *(void *)(v203 + 27sub_6C3C(v0 + 2) = 0x656C746974LL;
                if (v182) {
                  uint64_t v215 = v180;
                }
                else {
                  uint64_t v215 = 0LL;
                }
                if (v182) {
                  unint64_t v207 = v182;
                }
                *(void *)(v203 + 280) = 0xE500000000000000LL;
                *(void *)(v203 + 28sub_6C3C(v0 + 8) = v215;
                *(void *)(v203 + 296) = v207;
                *(void *)(v203 + 31sub_6C3C(v0 + 2) = &type metadata for String;
                *(void *)(v203 + 320) = 0x6D61726150616877LL;
                *(void *)(v203 + 32sub_6C3C(v0 + 8) = 0xE900000000000073LL;
                *(void *)(v203 + 360) = sub_6C5C(&qword_284048);
                *(void *)(v204 + 336) = v116;
                swift_bridgeObjectRetain(v212);
                swift_bridgeObjectRetain(v182);
                swift_bridgeObjectRetain(v205);
                swift_bridgeObjectRetain(v209);
                unint64_t v468 = sub_74D54(v204);
                uint64_t v216 = v469;
                uint64_t v217 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))v474;
                ((void (*)(char *, uint64_t, uint64_t))v474)(v469, v480, v136);
                unint64_t v218 = v486;
                unint64_t v467 = v485;
                swift_bridgeObjectRetain_n(v486, 2LL);
                swift_bridgeObjectRetain(v205);
                swift_bridgeObjectRetain_n(v209, 2LL);
                uint64_t v219 = swift_bridgeObjectRetain_n(v212, 2LL);
                uint64_t v220 = (os_log_s *)Logger.logObject.getter(v219);
                os_log_type_t v221 = static os_log_type_t.debug.getter();
                int v222 = v221;
                if (os_log_type_enabled(v220, v221))
                {
                  uint64_t v223 = swift_slowAlloc(62LL, -1LL);
                  uint64_t v465 = (char *)swift_slowAlloc(192LL, -1LL);
                  uint64_t v483 = v465;
                  *(_DWORD *)uint64_t v223 = 136316418;
                  int v448 = v222;
                  if (v482 == (_BYTE *)&dword_0 + 3) {
                    uint64_t v224 = 1702195828LL;
                  }
                  else {
                    uint64_t v224 = 0x65736C6166LL;
                  }
                  os_log_t v447 = v220;
                  if (v482 == (_BYTE *)&dword_0 + 3) {
                    unint64_t v225 = 0xE400000000000000LL;
                  }
                  else {
                    unint64_t v225 = 0xE500000000000000LL;
                  }
                  unint64_t v226 = v205;
                  *(void *)&__int128 v487 = sub_6978(v224, v225, (uint64_t *)&v483);
                  unint64_t v446 = v218;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                  swift_bridgeObjectRelease(v225);
                  *(_WORD *)(v223 + 1sub_6C3C(v0 + 2) = 2080;
                  if (v472 == (_BYTE *)&dword_0 + 2) {
                    uint64_t v227 = 1702195828LL;
                  }
                  else {
                    uint64_t v227 = 0x65736C6166LL;
                  }
                  if (v472 == (_BYTE *)&dword_0 + 2) {
                    unint64_t v228 = 0xE400000000000000LL;
                  }
                  else {
                    unint64_t v228 = 0xE500000000000000LL;
                  }
                  *(void *)&__int128 v487 = sub_6978(v227, v228, (uint64_t *)&v483);
                  uint64_t v229 = v473;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                  swift_bridgeObjectRelease(v228);
                  *(_WORD *)(v223 + 2sub_6C3C(v0 + 2) = 2080;
                  *(void *)&__int128 v487 = v451;
                  *((void *)&v487 + 1) = v205;
                  swift_bridgeObjectRetain(v205);
                  uint64_t v230 = sub_6C5C(&qword_284600);
                  uint64_t v231 = String.init<A>(describing:)(&v487, v230);
                  unint64_t v233 = v232;
                  *(void *)&__int128 v487 = sub_6978(v231, v232, (uint64_t *)&v483);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                  swift_bridgeObjectRelease_n(v226, 2LL);
                  swift_bridgeObjectRelease(v233);
                  *(_WORD *)(v223 + 3sub_6C3C(v0 + 2) = 2080;
                  *(void *)&__int128 v487 = v452;
                  *((void *)&v487 + 1) = v229;
                  swift_bridgeObjectRetain(v229);
                  uint64_t v234 = String.init<A>(describing:)(&v487, v230);
                  unint64_t v236 = v235;
                  *(void *)&__int128 v487 = sub_6978(v234, v235, (uint64_t *)&v483);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                  swift_bridgeObjectRelease_n(v229, 2LL);
                  swift_bridgeObjectRelease(v236);
                  *(_WORD *)(v223 + 4sub_6C3C(v0 + 2) = 2080;
                  *(void *)&__int128 v487 = v466;
                  *((void *)&v487 + 1) = v212;
                  swift_bridgeObjectRetain(v212);
                  uint64_t v237 = String.init<A>(describing:)(&v487, v230);
                  unint64_t v239 = v238;
                  *(void *)&__int128 v487 = sub_6978(v237, v238, (uint64_t *)&v483);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                  swift_bridgeObjectRelease_n(v212, 2LL);
                  swift_bridgeObjectRelease(v239);
                  *(_WORD *)(v223 + 5sub_6C3C(v0 + 2) = 2080;
                  unint64_t v240 = v446;
                  *(void *)&__int128 v487 = v467;
                  *((void *)&v487 + 1) = v446;
                  swift_bridgeObjectRetain(v446);
                  uint64_t v241 = v230;
                  uint64_t v136 = v470;
                  uint64_t v242 = String.init<A>(describing:)(&v487, v241);
                  unint64_t v244 = v243;
                  *(void *)&__int128 v487 = sub_6978(v242, v243, (uint64_t *)&v483);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v487, (char *)&v487 + 8);
                  swift_bridgeObjectRelease_n(v240, 2LL);
                  swift_bridgeObjectRelease(v244);
                  os_log_t v245 = v447;
                  _os_log_impl( &dword_0,  v447,  (os_log_type_t)v448,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Generic Params isPreviousReference:%s isN extReference:%s albumArtist:%s album:%s titleArtist:%s title:%s",  (uint8_t *)v223,  0x3Eu);
                  unint64_t v246 = v465;
                  swift_arrayDestroy(v465, 6LL, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v246, -1LL, -1LL);
                  swift_slowDealloc(v223, -1LL, -1LL);

                  uint64_t v135 = *(void (**)(char *, uint64_t))(v479 + 8);
                  v135(v469, v136);
                }

                else
                {

                  swift_bridgeObjectRelease_n(v218, 2LL);
                  swift_bridgeObjectRelease_n(v212, 2LL);
                  swift_bridgeObjectRelease_n(v473, 2LL);
                  swift_bridgeObjectRelease_n(v205, 2LL);
                  v135(v216, v136);
                }

                uint64_t v247 = v475;
                uint64_t v248 = v212;
                id v249 = [v481 requestType];
                uint64_t v250 = v449;
                switch((unint64_t)v249)
                {
                  case 0uLL:
                    swift_bridgeObjectRelease(v248);
                    swift_bridgeObjectRelease(v473);
                    swift_beginAccess(&v485, &v483, 0LL, 0LL);
                    unint64_t v251 = v486;
                    __n128 v252 = swift_bridgeObjectRelease(v486);
                    uint64_t v253 = v472;
                    if (v251)
                    {
                      uint64_t v254 = v217(v459, v480, v136, v252);
                      uint64_t v255 = (os_log_s *)Logger.logObject.getter(v254);
                      os_log_type_t v256 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v255, v256))
                      {
                        uint64_t v257 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)uint64_t v257 = 0;
                        _os_log_impl( &dword_0,  v255,  v256,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer about title",  v257,  2u);
                        swift_slowDealloc(v257, -1LL, -1LL);
                      }

                      uint64_t v258 = ((uint64_t (*)(char *, uint64_t))v135)(v459, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v258);
                      uint64_t v261 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v262 = 0x800000000021DCE0LL;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD000000000000018LL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DCE0LL;
                      unint64_t v263 = v468;
                      uint64_t v439 = v264;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
                      goto LABEL_237;
                    }

                    __n128 v378 = swift_bridgeObjectRelease(v468);
                    if (v482 == (_BYTE *)&dword_0 + 3 || v253 == (_BYTE *)&dword_0 + 2) {
                      goto LABEL_276;
                    }
                    uint64_t v379 = v217(v453, v480, v136, v378);
                    uint64_t v380 = (os_log_s *)Logger.logObject.getter(v379);
                    os_log_type_t v381 = static os_log_type_t.debug.getter();
                    if (os_log_type_enabled(v380, v381))
                    {
                      uint64_t v382 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                      *(_WORD *)uint64_t v382 = 0;
                      _os_log_impl( &dword_0,  v380,  v381,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer don't know about title",  v382,  2u);
                      swift_slowDealloc(v382, -1LL, -1LL);
                    }

                    v135(v453, v136);
                    unint64_t v383 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v489 = 0LL;
                    __int128 v487 = 0u;
                    __int128 v488 = 0u;
                    uint64_t v384 = __chkstk_darwin(v383);
                    uint64_t v387 = &v445 - 12;
                    *(&v445 - 10) = v385;
                    *(&v445 - sub_6C3C(v0 + 9) = v386;
                    unint64_t v388 = 0xED0000656C746954LL;
                    strcpy((char *)&v445 - 64, "DontKnowTitle");
                    *((_WORD *)&v445 - 2sub_6C3C(v0 + 5) = -4864;
                    uint64_t v439 = v389;
                    unint64_t v440 = v384;
                    uint64_t v441 = v247;
                    uint64_t v442 = &v487;
                    v443 = 0LL;
                    goto LABEL_269;
                  case 1uLL:
                    unint64_t v330 = v486;
                    swift_bridgeObjectRelease(v473);
                    __n128 v331 = swift_bridgeObjectRelease(v330);
                    if (v248)
                    {
                      __n128 v332 = swift_bridgeObjectRelease(v248);
                      uint64_t v333 = v217(v461, v480, v136, v332);
                      uint64_t v334 = (os_log_s *)Logger.logObject.getter(v333);
                      os_log_type_t v335 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v334, v335))
                      {
                        uint64_t v336 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)uint64_t v336 = 0;
                        _os_log_impl( &dword_0,  v334,  v335,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer about artist",  v336,  2u);
                        swift_slowDealloc(v336, -1LL, -1LL);
                      }

                      uint64_t v337 = ((uint64_t (*)(char *, uint64_t))v135)(v461, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v337);
                      unint64_t v338 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v339 = 0xD000000000000019LL;
                      unint64_t v340 = 0x800000000021DD60LL;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD000000000000019LL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DD60LL;
                      unint64_t v263 = v468;
                      uint64_t v439 = v341;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
                    }

                    else
                    {
                      if (v482 == (_BYTE *)&dword_0 + 3 || v472 == (_BYTE *)&dword_0 + 2)
                      {
                        BOOL v427 = v482 == (_BYTE *)&dword_0 + 3;
                        swift_bridgeObjectRelease(v468);
                        uint64_t v426 = v247;
                        char v425 = v427;
                        goto LABEL_277;
                      }

                      uint64_t v390 = v217(v455, v480, v136, v331);
                      unint64_t v391 = (os_log_s *)Logger.logObject.getter(v390);
                      os_log_type_t v392 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v391, v392))
                      {
                        uint64_t v393 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)uint64_t v393 = 0;
                        _os_log_impl( &dword_0,  v391,  v392,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer don't know about artist",  v393,  2u);
                        swift_slowDealloc(v393, -1LL, -1LL);
                      }

                      uint64_t v394 = ((uint64_t (*)(char *, uint64_t))v135)(v455, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v394);
                      unint64_t v338 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v339 = 0x776F6E4B746E6F44LL;
                      unint64_t v340 = 0xEE00747369747241LL;
                      strcpy((char *)&v445 - 64, "DontKnowArtist");
                      *((_BYTE *)&v445 - 4sub_6C3C(v0 + 9) = -18;
                      unint64_t v263 = v468;
                      uint64_t v439 = v395;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
                    }

                    goto LABEL_252;
                  case 2uLL:
                    unint64_t v342 = v486;
                    swift_bridgeObjectRelease(v248);
                    swift_bridgeObjectRelease(v342);
                    uint64_t v343 = v472;
                    if (v473)
                    {
                      __n128 v344 = swift_bridgeObjectRelease(v473);
                      uint64_t v345 = v217(v460, v480, v136, v344);
                      uint64_t v346 = (os_log_s *)Logger.logObject.getter(v345);
                      os_log_type_t v347 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v346, v347))
                      {
                        uint64_t v348 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)uint64_t v348 = 0;
                        _os_log_impl( &dword_0,  v346,  v347,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer about album",  v348,  2u);
                        swift_slowDealloc(v348, -1LL, -1LL);
                      }

                      uint64_t v349 = ((uint64_t (*)(char *, uint64_t))v135)(v460, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v349);
                      uint64_t v261 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v262 = 0x800000000021DD80LL;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD000000000000018LL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DD80LL;
                      unint64_t v263 = v468;
                      uint64_t v439 = v350;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
                      goto LABEL_237;
                    }

                    __n128 v396 = swift_bridgeObjectRelease(v468);
                    if (v482 == (_BYTE *)&dword_0 + 3 || v343 == (_BYTE *)&dword_0 + 2) {
                      goto LABEL_276;
                    }
                    uint64_t v397 = v217(v454, v480, v136, v396);
                    uint64_t v398 = (os_log_s *)Logger.logObject.getter(v397);
                    os_log_type_t v399 = static os_log_type_t.debug.getter();
                    if (os_log_type_enabled(v398, v399))
                    {
                      uint64_t v400 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                      *(_WORD *)uint64_t v400 = 0;
                      _os_log_impl( &dword_0,  v398,  v399,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer don't know about album",  v400,  2u);
                      swift_slowDealloc(v400, -1LL, -1LL);
                    }

                    v135(v454, v136);
                    unint64_t v383 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v489 = 0LL;
                    __int128 v487 = 0u;
                    __int128 v488 = 0u;
                    uint64_t v401 = __chkstk_darwin(v383);
                    uint64_t v387 = &v445 - 12;
                    *(&v445 - 10) = v385;
                    *(&v445 - sub_6C3C(v0 + 9) = v386;
                    unint64_t v388 = 0xED00006D75626C41LL;
                    strcpy((char *)&v445 - 64, "DontKnowAlbum");
                    *((_WORD *)&v445 - 2sub_6C3C(v0 + 5) = -4864;
                    uint64_t v439 = v402;
                    unint64_t v440 = v401;
                    uint64_t v441 = v247;
                    uint64_t v442 = &v487;
                    v443 = 0LL;
                    goto LABEL_269;
                  case 4uLL:
                    swift_bridgeObjectRelease(v248);
                    swift_bridgeObjectRelease(v473);
                    swift_beginAccess(&v485, &v483, 0LL, 0LL);
                    unint64_t v360 = v486;
                    __n128 v361 = swift_bridgeObjectRelease(v486);
                    uint64_t v362 = v472;
                    if (v360)
                    {
                      uint64_t v363 = v217(v462, v480, v136, v361);
                      v364 = (os_log_s *)Logger.logObject.getter(v363);
                      os_log_type_t v365 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v364, v365))
                      {
                        BOOL v366 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)BOOL v366 = 0;
                        _os_log_impl( &dword_0,  v364,  v365,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer about radio station",  v366,  2u);
                        swift_slowDealloc(v366, -1LL, -1LL);
                      }

                      uint64_t v367 = ((uint64_t (*)(char *, uint64_t))v135)(v462, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v367);
                      uint64_t v261 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v262 = 0x800000000021DD40LL;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD000000000000018LL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DD40LL;
                      unint64_t v263 = v468;
                      uint64_t v439 = v368;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
                      goto LABEL_237;
                    }

                    __n128 v410 = swift_bridgeObjectRelease(v468);
                    if (v482 == (_BYTE *)&dword_0 + 3 || v362 == (_BYTE *)&dword_0 + 2) {
                      goto LABEL_276;
                    }
                    uint64_t v411 = v217(v456, v480, v136, v410);
                    uint64_t v412 = (os_log_s *)Logger.logObject.getter(v411);
                    os_log_type_t v413 = static os_log_type_t.debug.getter();
                    if (os_log_type_enabled(v412, v413))
                    {
                      uint64_t v414 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                      *(_WORD *)uint64_t v414 = 0;
                      _os_log_impl( &dword_0,  v412,  v413,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer don't know about radio station",  v414,  2u);
                      swift_slowDealloc(v414, -1LL, -1LL);
                    }

                    v135(v456, v136);
                    unint64_t v383 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v489 = 0LL;
                    __int128 v487 = 0u;
                    __int128 v488 = 0u;
                    uint64_t v415 = __chkstk_darwin(v383);
                    uint64_t v387 = &v445 - 12;
                    *(&v445 - 10) = v385;
                    *(&v445 - sub_6C3C(v0 + 9) = v386;
                    unint64_t v388 = 0xED00006F69646152LL;
                    strcpy((char *)&v445 - 64, "DontKnowRadio");
                    *((_WORD *)&v445 - 2sub_6C3C(v0 + 5) = -4864;
                    uint64_t v439 = v416;
                    unint64_t v440 = v415;
                    uint64_t v441 = v247;
                    uint64_t v442 = &v487;
                    v443 = 0LL;
                    goto LABEL_269;
                  case 5uLL:
                    swift_bridgeObjectRelease(v248);
                    swift_bridgeObjectRelease(v473);
                    swift_beginAccess(&v485, &v483, 0LL, 0LL);
                    unint64_t v369 = v486;
                    __n128 v370 = swift_bridgeObjectRelease(v486);
                    uint64_t v371 = v472;
                    if (v369)
                    {
                      uint64_t v372 = v217(v463, v480, v136, v370);
                      unint64_t v373 = (os_log_s *)Logger.logObject.getter(v372);
                      os_log_type_t v374 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v373, v374))
                      {
                        uint64_t v375 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)uint64_t v375 = 0;
                        _os_log_impl( &dword_0,  v373,  v374,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer about playlist",  v375,  2u);
                        swift_slowDealloc(v375, -1LL, -1LL);
                      }

                      uint64_t v376 = ((uint64_t (*)(char *, uint64_t))v135)(v463, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v376);
                      unint64_t v338 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v339 = 0xD00000000000001BLL;
                      unint64_t v340 = 0x800000000021DD20LL;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD00000000000001BLL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DD20LL;
                      unint64_t v263 = v468;
                      uint64_t v439 = v377;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
LABEL_252:
                      v443 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
                      uint64_t v444 = v338;
                      uint64_t v441 = v339;
                      uint64_t v442 = (__int128 *)v340;
                      goto LABEL_253;
                    }

                    __n128 v417 = swift_bridgeObjectRelease(v468);
                    if (v482 == (_BYTE *)&dword_0 + 3 || v371 == (_BYTE *)&dword_0 + 2) {
                      goto LABEL_276;
                    }
                    uint64_t v418 = v217(v457, v480, v136, v417);
                    uint64_t v419 = (os_log_s *)Logger.logObject.getter(v418);
                    os_log_type_t v420 = static os_log_type_t.debug.getter();
                    if (os_log_type_enabled(v419, v420))
                    {
                      uint64_t v421 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                      *(_WORD *)uint64_t v421 = 0;
                      _os_log_impl( &dword_0,  v419,  v420,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Answer don't know about playlist",  v421,  2u);
                      swift_slowDealloc(v421, -1LL, -1LL);
                    }

                    v135(v457, v136);
                    unint64_t v383 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v489 = 0LL;
                    __int128 v487 = 0u;
                    __int128 v488 = 0u;
                    uint64_t v422 = __chkstk_darwin(v383);
                    *(&v445 - 10) = v385;
                    *(&v445 - sub_6C3C(v0 + 9) = v386;
                    uint64_t v423 = v478;
                    *(&v445 - sub_6C3C(v0 + 8) = v478;
                    *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DD00LL;
                    uint64_t v439 = v424;
                    unint64_t v440 = v422;
                    v443 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
                    uint64_t v444 = &v445 - 12;
                    uint64_t v441 = v423;
                    uint64_t v442 = (__int128 *)0x800000000021DD00LL;
                    goto LABEL_275;
                  default:
                    swift_bridgeObjectRelease(v248);
                    swift_bridgeObjectRelease(v473);
                    swift_beginAccess(&v485, &v483, 0LL, 0LL);
                    unint64_t v351 = v486;
                    __n128 v352 = swift_bridgeObjectRelease(v486);
                    uint64_t v353 = v472;
                    if (v351)
                    {
                      uint64_t v354 = v217(v464, v480, v136, v352);
                      uint64_t v355 = (os_log_s *)Logger.logObject.getter(v354);
                      os_log_type_t v356 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v355, v356))
                      {
                        v357 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)v357 = 0;
                        _os_log_impl( &dword_0,  v355,  v356,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Default, answer about title",  v357,  2u);
                        swift_slowDealloc(v357, -1LL, -1LL);
                      }

                      uint64_t v358 = ((uint64_t (*)(char *, uint64_t))v135)(v464, v136);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      __chkstk_darwin(v358);
                      uint64_t v261 = &v445 - 12;
                      *(&v445 - 10) = v260;
                      *(&v445 - sub_6C3C(v0 + 9) = v259;
                      unint64_t v262 = 0x800000000021DCE0LL;
                      *(&v445 - sub_6C3C(v0 + 8) = 0xD000000000000018LL;
                      *(&v445 - sub_6C3C(v0 + 7) = 0x800000000021DCE0LL;
                      unint64_t v263 = v468;
                      uint64_t v439 = v359;
                      unint64_t v440 = v468;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
LABEL_237:
                      v443 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
                      uint64_t v444 = v261;
                      uint64_t v441 = 0xD000000000000018LL;
                      uint64_t v442 = (__int128 *)v262;
LABEL_253:
                      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v476,  v477,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2, public}@ enableTelemetry=YES ",  125LL,  2,  v260,  v259,  v441,  (uint64_t)v442,  v443,  (uint64_t)v444);
                      swift_bridgeObjectRelease(v263);
                    }

                    else
                    {
                      __n128 v403 = swift_bridgeObjectRelease(v468);
                      if (v482 == (_BYTE *)&dword_0 + 3 || v353 == (_BYTE *)&dword_0 + 2)
                      {
LABEL_276:
                        char v425 = v482 == (_BYTE *)&dword_0 + 3;
                        uint64_t v426 = v247;
LABEL_277:
                        sub_4AE60(v426, v425, v476, v477);

                        return;
                      }

                      uint64_t v404 = v217(v458, v480, v136, v403);
                      uint64_t v405 = (os_log_s *)Logger.logObject.getter(v404);
                      os_log_type_t v406 = static os_log_type_t.debug.getter();
                      if (os_log_type_enabled(v405, v406))
                      {
                        BOOL v407 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                        *(_WORD *)BOOL v407 = 0;
                        _os_log_impl( &dword_0,  v405,  v406,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Default, answer don't know about title",  v407,  2u);
                        swift_slowDealloc(v407, -1LL, -1LL);
                      }

                      v135(v458, v136);
                      unint64_t v383 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
                      uint64_t v489 = 0LL;
                      __int128 v487 = 0u;
                      __int128 v488 = 0u;
                      uint64_t v408 = __chkstk_darwin(v383);
                      uint64_t v387 = &v445 - 12;
                      *(&v445 - 10) = v385;
                      *(&v445 - sub_6C3C(v0 + 9) = v386;
                      unint64_t v388 = 0xED0000656C746954LL;
                      strcpy((char *)&v445 - 64, "DontKnowTitle");
                      *((_WORD *)&v445 - 2sub_6C3C(v0 + 5) = -4864;
                      uint64_t v439 = v409;
                      unint64_t v440 = v408;
                      uint64_t v441 = v247;
                      uint64_t v442 = &v487;
                      v443 = 0LL;
LABEL_269:
                      v443 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
                      uint64_t v444 = v387;
                      uint64_t v441 = 0x776F6E4B746E6F44LL;
                      uint64_t v442 = (__int128 *)v388;
LABEL_275:
                      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v476,  v477,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2, public}@ enableTelemetry=YES ",  125LL,  2,  v385,  v386,  v441,  (uint64_t)v442,  v443,  (uint64_t)v444);
                      swift_bridgeObjectRelease(v383);
                    }

                    break;
                }

                goto LABEL_287;
              }

              __n128 v169 = swift_bridgeObjectRelease(v116);
            }

            else
            {
              swift_bridgeObjectRelease(v116);
            }

            unint64_t v161 = v466;
            uint64_t v188 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v474)(v466, v480, v136, v169);
            uint64_t v163 = (os_log_s *)Logger.logObject.getter(v188);
            os_log_type_t v189 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v163, v189))
            {
              id v190 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)id v190 = 0;
              _os_log_impl( &dword_0,  v163,  v189,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases Content retrieved is in a loading state and w e don't have final info, returning that we don't know title",  v190,  2u);
              swift_slowDealloc(v190, -1LL, -1LL);
            }

LABEL_90:
            v135(v161, v136);
            unint64_t v166 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
            uint64_t v489 = 0LL;
            __int128 v487 = 0u;
            __int128 v488 = 0u;
            __chkstk_darwin(v166);
            *(&v445 - 10) = v167;
            *(&v445 - sub_6C3C(v0 + 9) = v168;
            strcpy((char *)&v445 - 64, "DontKnowTitle");
            *((_WORD *)&v445 - 2sub_6C3C(v0 + 5) = -4864;
            sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v476,  v477,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ e nableTelemetry=YES ",  125LL,  2,  v167,  v168,  0x776F6E4B746E6F44LL,  0xED0000656C746954LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v445 - 12));
            swift_bridgeObjectRelease(v166);

            goto LABEL_287;
          }

          __n128 v160 = swift_bridgeObjectRelease(v116);
        }

        else
        {
          swift_bridgeObjectRelease(v116);
        }

        unint64_t v161 = v471;
        uint64_t v162 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v474)(v471, v480, v136, v160);
        uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
        os_log_type_t v164 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v163, v164))
        {
          uint64_t v165 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v165 = 0;
          _os_log_impl( &dword_0,  v163,  v164,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases API Call did not provide any data for the playing app, returning that we don't know title",  v165,  2u);
          swift_slowDealloc(v165, -1LL, -1LL);
        }

        goto LABEL_90;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v143 & 0xFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_75;
    }

    swift_bridgeObjectRelease(v116);
  }

  else
  {
    uint64_t v143 = v116;
  }

  __n128 v430 = swift_bridgeObjectRelease(v143);
  uint64_t v431 = v473;
  uint64_t v432 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v120)(v473, v480, v136, v430);
  uint64_t v433 = (os_log_s *)Logger.logObject.getter(v432);
  os_log_type_t v434 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v433, v434))
  {
    uint64_t v435 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v435 = 0;
    _os_log_impl( &dword_0,  v433,  v434,  "DetermineDialogProvider#makeIntentHandledDialogForAllCases No nowPlayingIntentInfo found returning that we don't know title",  v435,  2u);
    swift_slowDealloc(v435, -1LL, -1LL);
  }

  v135(v431, v136);
  unint64_t v436 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v489 = 0LL;
  __int128 v487 = 0u;
  __int128 v488 = 0u;
  __chkstk_darwin(v436);
  *(&v445 - 10) = v437;
  *(&v445 - sub_6C3C(v0 + 9) = v438;
  strcpy((char *)&v445 - 64, "DontKnowTitle");
  *((_WORD *)&v445 - 2sub_6C3C(v0 + 5) = -4864;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v476,  v477,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v437,  v438,  0x776F6E4B746E6F44LL,  0xED0000656C746954LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v445 - 12));
  swift_bridgeObjectRelease(v436);
LABEL_287:
  sub_4B3CC((uint64_t)&v487);
}

double sub_4EB44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v108 = a3;
  uint64_t v107 = a1;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v101 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v106 = (char *)&v101 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v101 - v16;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v19 = *(uint64_t (**)(char *))(v7 + 16);
  uint64_t v109 = v18;
  uint64_t v110 = v6;
  uint64_t v20 = v19(v17);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = a4;
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_0, v21, v22, "DetermineDialogProvider#handleWHARelatedChecks Reached logic", v24, 2u);
    uint64_t v25 = v24;
    a4 = v23;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v17, v110);
  if ([a2 whaError] != (char *)&dword_0 + 1)
  {
    id v28 = [a2 nowPlayingIntentInfo];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = type metadata accessor for NowPlayingIntentInfo();
      uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

      uint64_t v112 = v31;
      if ((unint64_t)v31 >> 62)
      {
        if (v31 < 0) {
          uint64_t v64 = v31;
        }
        else {
          uint64_t v64 = v31 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v31);
        uint64_t v65 = _CocoaArrayWrapper.endIndex.getter(v64);
        swift_bridgeObjectRelease(v31);
        if (v65 >= 1)
        {
          Class v105 = v19;
          id v102 = a2;
          Class v101 = v26;
          Class v103 = v13;
          uint64_t v104 = a4;
          uint64_t v120 = &_swiftEmptySetSingleton;
          swift_bridgeObjectRetain(v31);
          uint64_t v66 = _CocoaArrayWrapper.endIndex.getter(v64);
          swift_bridgeObjectRelease(v31);
          uint64_t v113 = v66;
          if (v66)
          {
            if (v113 >= 1)
            {
              uint64_t v13 = v103;
              uint64_t v26 = v101;
              a2 = v102;
              uint64_t v19 = v105;
              uint64_t v31 = v112;
LABEL_10:
              Class v105 = v19;
              id v102 = a2;
              Class v101 = v26;
              Class v103 = v13;
              uint64_t v32 = 0LL;
              unint64_t v111 = v31 & 0xC000000000000001LL;
              do
              {
                if (v111) {
                  id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v31);
                }
                else {
                  id v44 = *(id *)(v31 + 8 * v32 + 32);
                }
                id v45 = v44;
                id v46 = objc_msgSend(v44, "title", v101);
                if (v46)
                {
                  unint64_t v47 = v46;
                  uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
                  unint64_t v49 = v48;
                }

                else
                {
                  uint64_t v116 = 0LL;
                  unint64_t v49 = 0xE000000000000000LL;
                }

                id v50 = [v45 albumArtist];
                if (v50)
                {
                  uint64_t v51 = v50;
                  uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
                  uint64_t v53 = v52;
                }

                else
                {
                  uint64_t v115 = 0LL;
                  uint64_t v53 = (void *)0xE000000000000000LL;
                }

                id v54 = [v45 album];
                if (v54)
                {
                  unint64_t v55 = v54;
                  uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
                  id v57 = v56;
                }

                else
                {
                  uint64_t v114 = 0LL;
                  id v57 = (void *)0xE000000000000000LL;
                }

                id v58 = [v45 contentId];
                if (v58)
                {
                  id v59 = v58;
                  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
                  unint64_t v62 = v61;
                }

                else
                {
                  uint64_t v60 = 0LL;
                  unint64_t v62 = (void *)0xE000000000000000LL;
                }

                id v63 = [v45 trackArtist];
                if (v63)
                {
                  uint64_t v33 = v63;
                  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
                  uint64_t v36 = v35;
                }

                else
                {
                  uint64_t v34 = 0LL;
                  uint64_t v36 = (void *)0xE000000000000000LL;
                }

                ++v32;
                *(void *)&__int128 v121 = v116;
                *((void *)&v121 + 1) = v49;
                swift_bridgeObjectRetain(v49);
                v37._countAndFlagsBits = v115;
                v37._object = v53;
                String.append(_:)(v37);
                swift_bridgeObjectRelease(v53);
                swift_bridgeObjectRelease(v49);
                uint64_t v38 = *((void *)&v121 + 1);
                swift_bridgeObjectRetain(*((void *)&v121 + 1));
                v39._countAndFlagsBits = v114;
                v39._object = v57;
                String.append(_:)(v39);
                swift_bridgeObjectRelease(v38);
                swift_bridgeObjectRelease(v57);
                uint64_t v40 = *((void *)&v121 + 1);
                swift_bridgeObjectRetain(*((void *)&v121 + 1));
                v41._countAndFlagsBits = v60;
                v41._object = v62;
                String.append(_:)(v41);
                swift_bridgeObjectRelease(v40);
                swift_bridgeObjectRelease(v62);
                uint64_t v42 = *((void *)&v121 + 1);
                swift_bridgeObjectRetain(*((void *)&v121 + 1));
                v43._countAndFlagsBits = v34;
                v43._object = v36;
                String.append(_:)(v43);
                swift_bridgeObjectRelease(v42);
                swift_bridgeObjectRelease(v36);
                sub_C7B0C((uint64_t *)&v121, v121, *((uint64_t *)&v121 + 1));

                swift_bridgeObjectRelease(*((void *)&v121 + 1));
                uint64_t v31 = v112;
              }

              while (v113 != v32);
              goto LABEL_37;
            }

            __break(1u);
          }

LABEL_37:
          __n128 v67 = swift_bridgeObjectRelease(v31);
          unint64_t v68 = v106;
          uint64_t v69 = v110;
          uint64_t v70 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v105)(v106, v109, v110, v67);
          id v71 = (os_log_s *)Logger.logObject.getter(v70);
          os_log_type_t v72 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v71, v72))
          {
            id v73 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v74 = swift_slowAlloc(32LL, -1LL);
            *(void *)&__int128 v121 = v74;
            *(_DWORD *)id v73 = 136315138;
            swift_beginAccess(&v120, v117, 0LL, 0LL);
            unint64_t v75 = v120;
            swift_bridgeObjectRetain(v120);
            uint64_t v77 = Set.description.getter(v76, &type metadata for String, &protocol witness table for String);
            unint64_t v79 = v78;
            swift_bridgeObjectRelease(v75);
            uint64_t v118 = sub_6978(v77, v79, (uint64_t *)&v121);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
            swift_bridgeObjectRelease(v79);
            _os_log_impl( &dword_0,  v71,  v72,  "DetermineDialogProvider#handleWHARelatedChecks uniqueListOfNowPlayingMetadata: %s",  v73,  0xCu);
            swift_arrayDestroy(v74, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v74, -1LL, -1LL);
            swift_slowDealloc(v73, -1LL, -1LL);

            id v80 = v106;
          }

          else
          {

            id v80 = v68;
          }

          unint64_t v89 = v101;
          v101(v80, v69);
          swift_beginAccess(&v120, &v118, 0LL, 0LL);
          unint64_t v90 = v120;
          uint64_t v91 = v104;
          id v92 = v103;
          if (v120[2] == 1LL)
          {
            sub_4B40C(v107, v102, v108, v104);
            *(void *)&double result = swift_bridgeObjectRelease(v90).n128_u64[0];
          }

          else
          {
            uint64_t v93 = ((uint64_t (*)(char *, uint64_t, uint64_t))v105)(v103, v109, v110);
            id v94 = (os_log_s *)Logger.logObject.getter(v93);
            os_log_type_t v95 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v94, v95))
            {
              unint64_t v97 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)unint64_t v97 = 0;
              _os_log_impl( &dword_0,  v94,  v95,  "DetermineDialogProvider#handleWHARelatedChecks Multiple nowPlayingIntentInfo's found returning that mult iple streams playing in home",  v97,  2u);
              swift_slowDealloc(v97, -1LL, -1LL);
            }

            v89(v92, v110);
            unint64_t v98 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
            uint64_t v123 = 0LL;
            __int128 v121 = 0u;
            __int128 v122 = 0u;
            __chkstk_darwin(v98);
            *(&v101 - 10) = (void (*)(char *, uint64_t))v99;
            *(&v101 - sub_6C3C(v0 + 9) = (void (*)(char *, uint64_t))v100;
            *(&v101 - sub_6C3C(v0 + 8) = (void (*)(char *, uint64_t))0xD000000000000016LL;
            *(&v101 - sub_6C3C(v0 + 7) = (void (*)(char *, uint64_t))0x800000000021DAE0LL;
            sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v108,  v91,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ e nableTelemetry=YES ",  125LL,  2,  v99,  v100,  0xD000000000000016LL,  0x800000000021DAE0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v101 - 12));
            swift_bridgeObjectRelease(v98);
            sub_4B3CC((uint64_t)&v121);
            *(void *)&double result = swift_bridgeObjectRelease(v120).n128_u64[0];
          }

          return result;
        }
      }

      else
      {
        uint64_t v113 = *(void *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFF8LL));
        if (v113)
        {
          uint64_t v104 = a4;
          uint64_t v120 = &_swiftEmptySetSingleton;
          goto LABEL_10;
        }
      }

      __n128 v27 = swift_bridgeObjectRelease(v31);
    }
  }

  uint64_t v81 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v19)(v10, v109, v110, v27);
  unint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
  os_log_type_t v83 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v84 = 0;
    _os_log_impl( &dword_0,  v82,  v83,  "DetermineDialogProvider#handleWHARelatedChecks No nowPlayingIntentInfo found returning that we don't know what is playing in that room",  v84,  2u);
    swift_slowDealloc(v84, -1LL, -1LL);
  }

  v26(v10, v110);
  unint64_t v85 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v123 = 0LL;
  __int128 v121 = 0u;
  __int128 v122 = 0u;
  __chkstk_darwin(v85);
  *(&v101 - 10) = (void (*)(char *, uint64_t))v86;
  *(&v101 - sub_6C3C(v0 + 9) = (void (*)(char *, uint64_t))v87;
  *(&v101 - sub_6C3C(v0 + 8) = (void (*)(char *, uint64_t))0xD000000000000016LL;
  *(&v101 - sub_6C3C(v0 + 7) = (void (*)(char *, uint64_t))0x800000000021DAC0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v108,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v86,  v87,  0xD000000000000016LL,  0x800000000021DAC0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v101 - 12));
  swift_bridgeObjectRelease(v85);
  sub_4B3CC((uint64_t)&v121);
  return result;
}

  unint64_t v240 = v236;
  uint64_t v109 = v206;
  uint64_t v110 = v205;
  unint64_t v111 = v207;
  (*(void (**)(char *, void, uint64_t))(v206 + 104))( v205,  enum case for CommonAudio.Attribute.addToUnspecifiedPlaylist(_:),  v207);
  uint64_t v112 = type metadata accessor for AudioUsoIntent(0LL);
  uint64_t v113 = AudioIntent.hasAttribute(_:)(v110, v112, &protocol witness table for AudioUsoIntent);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
  if ((v113 & 1) == 0) {
    goto LABEL_41;
  }
  if (v92)
  {
    sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    uint64_t v114 = v92;
    uint64_t v115 = (void *)_INPBString.init(from:)(0LL, 0xE000000000000000LL);
    [v114 setPlaylistName:v115];
  }

  id v102 = 2LL;
LABEL_42:
  uint64_t v66 = &unk_283000;
  [v92 setMediaDestinationType:v102];
  if (v68)
  {
LABEL_43:
    uint64_t v116 = HIBYTE(v68) & 0xF;
    if ((v68 & 0x2000000000000000LL) == 0) {
      uint64_t v116 = v226 & 0xFFFFFFFFFFFFLL;
    }
    if (!v116) {
      goto LABEL_76;
    }
    uint64_t v117 = v66[273];
    swift_bridgeObjectRetain(v68);
    if (v117 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v118 = sub_6960(v238, (uint64_t)qword_2969C8);
    uint64_t v119 = *(void (**)(char *))(v237 + 16);
    unint64_t v236 = v118;
    v119(v225);
    uint64_t v120 = swift_retain_n(v230, 2LL);
    __int128 v121 = (os_log_s *)Logger.logObject.getter(v120);
    __int128 v122 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v121, v122))
    {
      uint64_t v123 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v124 = swift_slowAlloc(32LL, -1LL);
      unint64_t v240 = v124;
      BOOL v125 = v230;
      *(_DWORD *)uint64_t v123 = 136315138;
      unint64_t v239 = ((uint64_t (*)(void))PommesAudioPluginResults.targetPlaylists.getter)();
      uint64_t v126 = sub_6C5C(&qword_28D470);
      int v127 = String.init<A>(describing:)(&v239, v126);
      uint64_t v129 = v128;
      unint64_t v239 = sub_6978(v127, v128, &v240);
      id v92 = v234;
      uint64_t v130 = v237;
      uint64_t v131 = v238;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, &v240);
      swift_release_n(v125, 2LL);
      swift_bridgeObjectRelease(v129);
      _os_log_impl(&dword_0, v121, v122, "ConverterHelpers#convertMediaDestination targetPlaylists: %s", v123, 0xCu);
      swift_arrayDestroy(v124, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1LL, -1LL);
      swift_slowDealloc(v123, -1LL, -1LL);

      unint64_t v132 = *(uint64_t (**)(char *, uint64_t))(v130 + 8);
      unint64_t v133 = v132(v225, v131);
    }

    else
    {

      swift_release_n(v230, 2LL);
      unint64_t v132 = *(uint64_t (**)(char *, uint64_t))(v237 + 8);
      unint64_t v133 = v132(v225, v238);
    }

    uint64_t v134 = PommesAudioPluginResults.targetPlaylists.getter(v133);
    if (v134)
    {
      uint64_t v135 = v134;
      uint64_t v136 = v134 & 0xFFFFFFFFFFFFFF8LL;
      if ((unint64_t)v134 >> 62)
      {
        if (v134 >= 0) {
          v134 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        double result = _CocoaArrayWrapper.endIndex.getter(v134);
        if (result)
        {
LABEL_54:
          unint64_t v233 = v132;
          if ((v135 & 0xC000000000000001LL) != 0)
          {
            uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v119;
            uint64_t v139 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v135);
          }

          else
          {
            if (!*(void *)(v136 + 16))
            {
              __break(1u);
              return result;
            }

            uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v119;
            uint64_t v139 = *(void *)(v135 + 32);
            swift_retain(v139);
          }

          id v140 = v208;
          uint64_t v141 = swift_bridgeObjectRelease(v135);
          uint64_t v142 = v209;
          AudioResult.itemSource.getter(v141);
          uint64_t v143 = v211;
          id v144 = v210;
          (*(void (**)(char *, void, uint64_t))(v211 + 104))( v210,  enum case for AudioResult.ItemSource.clientLocalDevice(_:),  v140);
          os_log_type_t v145 = sub_10430( &qword_28D460,  (uint64_t (*)(uint64_t))&type metadata accessor for AudioResult.ItemSource,  (uint64_t)&protocol conformance descriptor for AudioResult.ItemSource);
          dispatch thunk of RawRepresentable.rawValue.getter(&v240, v140, v145);
          dispatch thunk of RawRepresentable.rawValue.getter(&v239, v140, v145);
          NSNumber v147 = v239;
          id v146 = v240;
          id v148 = *(void (**)(char *, uint64_t))(v143 + 8);
          v148(v144, v140);
          char v149 = ((uint64_t (*)(char *, uint64_t))v148)(v142, v140);
          if (v146 == v147)
          {
            id v150 = v203;
            id v151 = AudioResult.audioItem.getter(v149);
            NSNumber v152 = v199;
            Apple_Parsec_Siri_V2alpha_AudioItem.type.getter(v151);
            id v153 = *(void (**)(char *, uint64_t))(v198 + 8);
            v153(v150, v204);
            char v154 = v201;
            id v155 = v200;
            uint64_t v156 = v202;
            (*(void (**)(char *, void, uint64_t))(v201 + 104))( v200,  enum case for Apple_Parsec_Siri_V2alpha_AudioItemType.playlist(_:),  v202);
            uint64_t v157 = sub_10430( &qword_28D468,  (uint64_t (*)(uint64_t))&type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItemType,  (uint64_t)&protocol conformance descriptor for Apple_Parsec_Siri_V2alpha_AudioItemType);
            dispatch thunk of RawRepresentable.rawValue.getter(&v240, v156, v157);
            dispatch thunk of RawRepresentable.rawValue.getter(&v239, v156, v157);
            unint64_t v159 = v239;
            unint64_t v158 = v240;
            __n128 v160 = *(void (**)(char *, uint64_t))(v154 + 8);
            v160(v155, v156);
            v160(v152, v156);
            if (v158 == v159)
            {
              unint64_t v232 = v153;
              swift_bridgeObjectRelease(v231);
              unint64_t v161 = v197;
              v138(v197, v236, v238);
              uint64_t v162 = swift_retain_n(v139, 2LL);
              uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
              os_log_type_t v164 = static os_log_type_t.default.getter();
              uint64_t v66 = (void *)&unk_283000;
              if (os_log_type_enabled(v163, v164))
              {
                uint64_t v165 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                unint64_t v166 = swift_slowAlloc(32LL, -1LL);
                unint64_t v240 = v166;
                *(_DWORD *)uint64_t v165 = 136315138;
                unint64_t v236 = (uint64_t)(v165 + 4);
                uint64_t v167 = v203;
                uint64_t v168 = AudioResult.audioItem.getter(v166);
                __n128 v169 = Apple_Parsec_Siri_V2alpha_AudioItem.title.getter(v168);
                uint64_t v171 = v170;
                v232(v167, v204);
                unint64_t v239 = sub_6978(v169, v171, &v240);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, &v240);
                swift_release_n(v139, 2LL);
                swift_bridgeObjectRelease(v171);
                _os_log_impl( &dword_0,  v163,  v164,  "ConverterHelpers#convertMediaDestination correcting to destination playlist: %s",  v165,  0xCu);
                swift_arrayDestroy(v166, 1LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v166, -1LL, -1LL);
                swift_slowDealloc(v165, -1LL, -1LL);

                uint64_t v172 = v197;
              }

              else
              {

                swift_release_n(v139, 2LL);
                uint64_t v172 = v161;
              }

              v233(v172, v238);
              uint64_t v173 = v234;
              if (v234)
              {
                sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
                id v174 = v173;
                uint64_t v175 = v203;
                uint64_t v176 = AudioResult.audioItem.getter(v174);
                os_log_type_t v177 = Apple_Parsec_Siri_V2alpha_AudioItem.title.getter(v176);
                unint64_t v179 = v178;
                v232(v175, v204);
                uint64_t v180 = (void *)_INPBString.init(from:)(v177, v179);
                [v174 setPlaylistName:v180];
              }

              swift_release(v139);
              id v92 = v173;
              unint64_t v68 = v231;
              goto LABEL_76;
            }

            swift_release(v139);
            id v92 = v234;
          }

          else
          {
            swift_release(v139);
          }

          goto LABEL_72;
        }
      }

      else
      {
        double result = *(void *)((char *)&dword_10 + (v134 & 0xFFFFFFFFFFFFFF8LL));
        if (result) {
          goto LABEL_54;
        }
      }

      swift_bridgeObjectRelease(v135);
    }

    unint64_t v78 = 0LL;
    return v76(v77, v78, 1LL, v8);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v29 = v103;
  uint64_t v30 = sub_6960(v103, (uint64_t)qword_2969C8);
  uint64_t v31 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v98, v30, v29);
  uint64_t v32 = v104;
  Class v101 = *(char **)(v104 + 16);
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v12, v102, v8);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  uint64_t v35 = v8;
  uint64_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v36))
  {
    os_log_type_t v95 = v35;
    Swift::String v37 = swift_slowAlloc(12LL, -1LL);
    id v96 = v4;
    uint64_t v38 = (uint8_t *)v37;
    Swift::String v39 = swift_slowAlloc(32LL, -1LL);
    uint64_t v100 = a4;
    uint64_t v40 = v39;
    uint64_t v108 = v39;
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v99 = (char *)(v38 + 4);
    Swift::String v41 = sub_1E5EF8();
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter(v35, v41);
    id v44 = v43;
    id v106 = sub_6978(v42, v43, &v108);
    uint64_t v32 = v104;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107);
    swift_bridgeObjectRelease(v44);
    uint64_t v35 = v95;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v95);
    _os_log_impl(&dword_0, v34, v36, "User asked for device %{public}s by name. Skipping pruning", v38, 0xCu);
    swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
    id v45 = v40;
    a4 = v100;
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v38, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v105 + 8))(v31, v103);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v35);

    (*(void (**)(char *, uint64_t))(v105 + 8))(v31, v29);
  }

  ((void (*)(uint64_t, uint64_t, uint64_t))v101)(a4, v102, v35);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(a4, 0LL, 1LL, v35);
}

    uint64_t v36 = String.lowercased()();
    swift_bridgeObjectRelease(v11);
    Swift::String v37 = String.lowercased()();
    uint64_t v35 = v37._object;
    if (v36._object)
    {
      if (v36._countAndFlagsBits == v37._countAndFlagsBits && v36._object == v37._object)
      {
        swift_bridgeObjectRelease_n(v36._object, 2LL);
        uint64_t v38 = 1;
      }

      else
      {
        uint64_t v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v36._countAndFlagsBits, v36._object);
        swift_bridgeObjectRelease(v36._object);
        swift_bridgeObjectRelease(v37._object);
      }

      goto LABEL_43;
    }

unint64_t sub_4F588()
{
  unint64_t result = qword_289350;
  if (!qword_289350)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSNumber);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_289350);
  }

  return result;
}

uint64_t sub_4F5C4@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v89 = a1;
  uint64_t v82 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  unint64_t v75 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = sub_6C5C(&qword_2848D8);
  __chkstk_darwin(v79);
  uint64_t v81 = (uint64_t)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_284630);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v77 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v84 = (uint64_t)&v75 - v8;
  __chkstk_darwin(v7);
  uint64_t v83 = (uint64_t)&v75 - v9;
  uint64_t v10 = type metadata accessor for Parse(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v85 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v75 - v14;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v78 = (char *)&v75 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v76 = (char *)&v75 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v75 - v25;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v27 = sub_6960(v16, (uint64_t)qword_2969C8);
  id v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v86 = v27;
  uint64_t v87 = v28;
  uint64_t v29 = v16;
  uint64_t v30 = ((uint64_t (*)(char *))v28)(v26);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "UpdateMediaAffinityNeedsValueStrategy#actionForInput...", v33, 2u);
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v35 = v29;
  uint64_t v36 = v34(v26, v29);
  Input.parse.getter(v36);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v15, v10) != enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    uint64_t v51 = v87(v20, v86, v29);
    id v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      id v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "UpdateMediaAffinityNeedsValueStrategy#actionForInput parse not of right type",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    unint64_t v55 = v20;
    goto LABEL_16;
  }

  (*(void (**)(char *, uint64_t))(v11 + 96))(v15, v10);
  uint64_t v37 = sub_6C5C(&qword_284618);
  swift_release(*(void *)&v15[*(int *)(v37 + 48)]);
  uint64_t v38 = type metadata accessor for NLIntent(0LL);
  uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8LL))(v15, v38);
  uint64_t v40 = v85;
  Input.parse.getter(v39);
  double v41 = sub_B7C84(v40, (uint64_t)&v90);
  (*(void (**)(char *, uint64_t, double))(v11 + 8))(v40, v10, v41);
  if (!v91)
  {
    sub_1F6CC((uint64_t)&v90, &qword_2848C0);
    uint64_t v56 = v78;
    uint64_t v57 = v87(v78, v86, v29);
    id v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl( &dword_0,  v58,  v59,  "UpdateMediaAffinityNeedsValueStrategy#actionForInput received invalid NL intent",  v60,  2u);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    unint64_t v55 = v56;
LABEL_16:
    uint64_t v61 = v34(v55, v29);
    return static ActionForInput.ignore()(v61);
  }

  sub_49B60(&v90, &v92);
  uint64_t v42 = v93;
  uint64_t v43 = v94;
  sub_6EA8(&v92, v93);
  uint64_t v44 = v83;
  dispatch thunk of ConfirmableIntent.confirmationState.getter(v42, *(void *)(v43 + 8));
  uint64_t v45 = v80;
  uint64_t v46 = v84;
  uint64_t v47 = v82;
  (*(void (**)(uint64_t, void, uint64_t))(v80 + 104))( v84,  enum case for CommonAudio.Confirmation.cancel(_:),  v82);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0LL, 1LL, v47);
  uint64_t v48 = v81;
  uint64_t v49 = v81 + *(int *)(v79 + 48);
  sub_FF10(v44, v81, &qword_284630);
  sub_FF10(v46, v49, &qword_284630);
  id v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v50(v48, 1LL, v47) == 1)
  {
    sub_1F6CC(v46, &qword_284630);
    sub_1F6CC(v44, &qword_284630);
    if (v50(v49, 1LL, v47) == 1)
    {
      sub_1F6CC(v48, &qword_284630);
LABEL_22:
      uint64_t v69 = v76;
      uint64_t v70 = v87(v76, v86, v35);
      id v71 = (os_log_s *)Logger.logObject.getter(v70);
      os_log_type_t v72 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v71, v72))
      {
        id v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v73 = 0;
        _os_log_impl( &dword_0,  v71,  v72,  "UpdateMediaAffinityNeedsValueStrategy#actionForInput User asked to cancel",  v73,  2u);
        swift_slowDealloc(v73, -1LL, -1LL);
      }

      uint64_t v74 = v34(v69, v35);
      static ActionForInput.cancel()(v74);
      return sub_6C3C(&v92);
    }

    goto LABEL_19;
  }

  uint64_t v63 = v77;
  sub_FF10(v48, v77, &qword_284630);
  if (v50(v49, 1LL, v47) == 1)
  {
    sub_1F6CC(v84, &qword_284630);
    sub_1F6CC(v44, &qword_284630);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v63, v47);
LABEL_19:
    uint64_t v64 = sub_1F6CC(v48, &qword_2848D8);
    goto LABEL_20;
  }

  uint64_t v65 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v75, v49, v47);
  uint64_t v66 = sub_6DF0( &qword_2848E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)(v63, v65, v47, v66);
  unint64_t v68 = *(void (**)(char *, uint64_t))(v45 + 8);
  v68(v65, v47);
  sub_1F6CC(v84, &qword_284630);
  sub_1F6CC(v83, &qword_284630);
  v68((char *)v63, v47);
  uint64_t v64 = sub_1F6CC(v48, &qword_284630);
  if ((v67 & 1) != 0) {
    goto LABEL_22;
  }
LABEL_20:
  static ActionForInput.handle()(v64);
  return sub_6C3C(&v92);
}

uint64_t sub_4FDA4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a5;
  uint64_t v51 = a2;
  uint64_t v52 = a7;
  uint64_t v48 = a6;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v46 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v53 = (uint64_t)&v42 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v19 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v11;
    uint64_t v25 = v24;
    uint64_t v55 = v24;
    uint64_t v43 = v15;
    *(_DWORD *)uint64_t v23 = 136446210;
    swift_bridgeObjectRetain(a4);
    uint64_t v54 = sub_6978(a3, a4, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease_n(a4, 3LL);
    _os_log_impl( &dword_0,  v20,  v21,  "UpdateMediaAffinityNeedsValueStrategy#makePromptForValue parameter: %{public}s",  v23,  0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v25;
    uint64_t v11 = v44;
    swift_slowDealloc(v26, -1LL, -1LL);
    a1 = v45;
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v14);
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  uint64_t v27 = v53;
  id v28 = v51;
  uint64_t v29 = a3;
  uint64_t v30 = v49;
  sub_17A5D8(v51, a3, a4, v49);
  uint64_t v31 = v50;
  uint64_t v45 = *(void *)(v50 + 16);
  uint64_t v32 = v27;
  uint64_t v33 = v47;
  sub_FF10(v32, v47, (uint64_t *)&unk_286C50);
  uint64_t v34 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v35 = (v34 + 80) & ~v34;
  uint64_t v36 = (void *)swift_allocObject(&unk_26C150, v35 + v11, v34 | 7);
  void v36[2] = v29;
  v36[3] = a4;
  v36[4] = v30;
  void v36[5] = v31;
  v36[6] = a1;
  v36[7] = v28;
  uint64_t v37 = a4;
  uint64_t v38 = v52;
  v36[8] = v48;
  v36[9] = v38;
  sub_45F6C(v33, (uint64_t)v36 + v35, (uint64_t *)&unk_286C50);
  swift_bridgeObjectRetain(v37);
  id v39 = v30;
  swift_retain(v31);
  swift_retain(a1);
  id v40 = v28;
  swift_retain(v38);
  sub_10B484(a1, v29, v37, v40, (uint64_t)sub_520F0, (uint64_t)v36);
  swift_release(v36);
  return sub_1F6CC(v53, (uint64_t *)&unk_286C50);
}

void sub_50134( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10)
{
  uint64_t v123 = a8;
  id v131 = a7;
  uint64_t v121 = a6;
  uint64_t v129 = a4;
  uint64_t v130 = a5;
  uint64_t v127 = a2;
  uint64_t v128 = a3;
  uint64_t v132 = a1;
  uint64_t v122 = a9;
  uint64_t v117 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v116 = *(v117 - 1);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v133);
  uint64_t v113 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v119 = (char *)&v111 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v111 - v15;
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v120 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v118 = (char *)&v111 - v20;
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v22 = __chkstk_darwin(v21);
  BOOL v125 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v115 = (char *)&v111 - v24;
  uint64_t v25 = sub_6C5C(&qword_2845A8);
  uint64_t v26 = __chkstk_darwin(v25);
  os_log_type_t v124 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v111 - v28;
  uint64_t v126 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v30 = *(v126 - 1);
  __chkstk_darwin(v126);
  uint64_t v32 = (char *)&v111 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v37);
  id v39 = (uint64_t *)((char *)&v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v132, (uint64_t)v39, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v39, v37) == 1)
  {
    uint64_t v40 = *v39;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))( v36,  enum case for AdditionalMetricsDescription.ModuleName.umanvs(_:),  v33);
    double v41 = v126;
    (*(void (**)(char *, void, void *))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v126);
    swift_getErrorValue(v40, v137, v136);
    uint64_t v42 = Error.localizedDescription.getter(v136[1], v136[2]);
    uint64_t v44 = v43;
    uint64_t v132 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v36,  v32,  v127,  v128,  v42,  v43,  v129,  0LL,  1);
    uint64_t v133 = v45;
    swift_bridgeObjectRelease(v44);
    (*(void (**)(char *, void *))(v30 + 8))(v32, v41);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    uint64_t v47 = v130[6];
    uint64_t v46 = v130[7];
    uint64_t v130 = sub_6EA8(v130 + 3, v47);
    uint64_t v48 = enum case for ActivityType.failed(_:);
    uint64_t v49 = type metadata accessor for ActivityType(0LL);
    uint64_t v50 = *(void *)(v49 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v29, v48, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v29, 0LL, 1LL, v49);
    uint64_t v51 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v52 = (uint64_t)v115;
    (*(void (**)(void))(*(void *)(v51 - 8) + 56LL))();
    uint64_t v53 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v54 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v56 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 104))(v118, v53, v54);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0LL, 1LL, v54);
    id v57 = v131;
    id v58 = [v131 mediaItems];
    if (v58)
    {
      os_log_type_t v59 = v58;
      uint64_t v60 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v60);

      if ((unint64_t)v61 >> 62)
      {
        if (v61 < 0) {
          uint64_t v100 = v61;
        }
        else {
          uint64_t v100 = v61 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v61);
        uint64_t v101 = _CocoaArrayWrapper.endIndex.getter(v100);
        swift_bridgeObjectRelease(v61);
        if (v101) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v61 & 0xC000000000000001LL) != 0)
        {
          id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v61);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v62 = *(id *)(v61 + 32);
LABEL_8:
          uint64_t v63 = v62;
          swift_bridgeObjectRelease(v61);
          id v64 = [v63 type];

LABEL_23:
          uint64_t v102 = v133;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v121,  v57,  v29,  v52,  v56,  v132,  v133,  v64,  0,  v47,  v46);
          swift_bridgeObjectRelease(v102);
          sub_1F6CC(v56, &qword_2845A0);
          sub_1F6CC(v52, (uint64_t *)&unk_286BD0);
          sub_1F6CC((uint64_t)v29, &qword_2845A8);
          v134[0] = v40;
          char v135 = 1;
          swift_errorRetain(v40);
          v123(v134);
          swift_errorRelease(v40);
          sub_1F6CC((uint64_t)v134, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_34;
      }

      swift_bridgeObjectRelease(v61);
    }

    id v64 = 0LL;
    goto LABEL_23;
  }

  uint64_t v65 = *(int *)(v133 + 48);
  uint64_t v66 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v132 = *(void *)(v66 - 8);
  uint64_t v118 = *(char **)(v132 + 32);
  ((void (*)(char *, uint64_t *, uint64_t))v118)(v16, v39, v66);
  char v67 = *(void **)((char *)v39 + v65);
  *(void *)&v16[v65] = v67;
  uint64_t v112 = v34;
  unint64_t v68 = *(void (**)(char *, void, uint64_t))(v34 + 104);
  uint64_t v111 = v33;
  v68(v36, enum case for AdditionalMetricsDescription.ModuleName.umanvs(_:), v33);
  uint64_t v69 = v30;
  uint64_t v70 = v126;
  (*(void (**)(char *, void, void *))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v126);
  id v71 = v114;
  uint64_t v72 = v116;
  id v73 = v117;
  (*(void (**)(char *, void, void *))(v116 + 104))( v114,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v117);
  id v74 = v67;
  uint64_t v127 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v36,  v32,  v127,  v128,  v71,  v129,  0LL,  1LL);
  uint64_t v128 = v75;
  (*(void (**)(char *, void *))(v72 + 8))(v71, v73);
  (*(void (**)(char *, void *))(v69 + 8))(v32, v70);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v36, v111);
  uint64_t v76 = v130;
  uint64_t v77 = v130[6];
  uint64_t v115 = (char *)v130[7];
  uint64_t v116 = v77;
  uint64_t v117 = sub_6EA8(v130 + 3, v77);
  uint64_t v78 = enum case for ActivityType.resolveSlotNeedsValue(_:);
  uint64_t v79 = type metadata accessor for ActivityType(0LL);
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = v124;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v124, v78, v79);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v81, 0LL, 1LL, v79);
  uint64_t v82 = v132;
  uint64_t v83 = *(int *)(v133 + 48);
  uint64_t v84 = v119;
  uint64_t v85 = (uint64_t)v16;
  uint64_t v126 = *(void **)(v132 + 16);
  ((void (*)(char *, char *, uint64_t))v126)(v119, v16, v66);
  *(void *)&v84[v83] = v74;
  uint64_t v86 = v125;
  ((void (*)(char *, char *, uint64_t))v118)(v125, v84, v66);
  uint64_t v87 = *(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56);
  uint64_t v129 = v66;
  v87(v86, 0LL, 1LL, v66);
  uint64_t v88 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v89 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v91 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 104))(v120, v88, v89);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v91, 0LL, 1LL, v89);
  id v92 = v131;
  id v93 = [v131 mediaItems];
  uint64_t v94 = (uint64_t)v91;
  if (!v93)
  {
    uint64_t v97 = v133;
    goto LABEL_29;
  }

  uint64_t v95 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v96 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v93, v95);

  if ((unint64_t)v96 >> 62)
  {
    if (v96 < 0) {
      uint64_t v103 = v96;
    }
    else {
      uint64_t v103 = v96 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v96);
    id v93 = (id)_CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease(v96);
    uint64_t v97 = v133;
    if (v93) {
      goto LABEL_12;
    }
LABEL_28:
    swift_bridgeObjectRelease(v96);
    goto LABEL_29;
  }

  id v93 = *(id *)((char *)&dword_10 + (v96 & 0xFFFFFFFFFFFFF8LL));
  uint64_t v97 = v133;
  if (!v93) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v96 & 0xC000000000000001LL) != 0)
  {
    id v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v96);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v96 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_34:
      __break(1u);
      return;
    }

    id v98 = *(id *)(v96 + 32);
  }

  uint64_t v99 = v98;
  swift_bridgeObjectRelease(v96);
  id v93 = [v99 type];

  uint64_t v94 = (uint64_t)v91;
LABEL_29:
  uint64_t v104 = (uint64_t)v125;
  id v105 = v92;
  uint64_t v106 = (uint64_t)v124;
  uint64_t v107 = v128;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v121,  v105,  v124,  v125,  v94,  v127,  v128,  v93,  0,  v116,  v115);
  swift_bridgeObjectRelease(v107);
  sub_1F6CC(v94, &qword_2845A0);
  sub_1F6CC(v104, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v106, &qword_2845A8);
  sub_6EA8(v76 + 8, v76[11]);
  uint64_t v108 = *(int *)(v97 + 48);
  uint64_t v109 = (uint64_t)v113;
  uint64_t v110 = v129;
  ((void (*)(char *, uint64_t, uint64_t))v126)(v113, v85, v129);
  *(void *)(v109 + v10sub_6C3C(v0 + 8) = v74;
  sub_1761E0(v109, v74, a10, v123, v122);

  sub_1F6CC(v85, &qword_289340);
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v109, v110);
}

uint64_t _s11descr26C169V18NeedsValueStrategyCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin19UpdateMediaAffinity18NeedsValueStrategy);
}

uint64_t sub_50C5C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return sub_4F5C4(a1, a2);
}

void sub_50C70( uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
}

uint64_t sub_50C8C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return sub_4FDA4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_50CAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s11descr26C169V18NeedsValueStrategyCMa();
  return NeedsValueFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_50D2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s11descr26C169V18NeedsValueStrategyCMa();
  return NeedsValueFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_50DAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = _s11descr26C169V18NeedsValueStrategyCMa();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_50E1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s11descr26C169V18NeedsValueStrategyCMa();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_50E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + sub_6C3C(v0 + 16) = v14;
  uint64_t v15 = _s11descr26C169V18NeedsValueStrategyCMa();
  *uint64_t v14 = v7;
  v14[1] = sub_11C64;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_50F38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v8 + sub_6C3C(v0 + 16) = v16;
  uint64_t v17 = _s11descr26C169V18NeedsValueStrategyCMa();
  *uint64_t v16 = v8;
  v16[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v17, a8);
}

uint64_t sub_50FE4(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_284C90,  a2,  (uint64_t (*)(uint64_t))_s11descr26C169V18NeedsValueStrategyCMa,  (uint64_t)&unk_2150B4);
}

void sub_51010( void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v157 = a6;
  unint64_t v158 = a5;
  uint64_t v160 = a4;
  uint64_t v154 = a2;
  id v159 = a1;
  uint64_t v7 = sub_6C5C(&qword_284C98);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v162 = type metadata accessor for Parse(0LL);
  uint64_t v165 = *(void *)(v162 - 8);
  uint64_t v13 = __chkstk_darwin(v162);
  NSNumber v152 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  id v151 = (char *)&v143 - v16;
  __chkstk_darwin(v15);
  uint64_t v163 = (char *)&v143 - v17;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  id v146 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  char v149 = (char *)&v143 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  os_log_type_t v145 = (char *)&v143 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  unint64_t v161 = (char *)&v143 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  id v150 = (char *)&v143 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  NSNumber v147 = (char *)&v143 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v143 - v32;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v35 = *(void (**)(void))(v19 + 16);
  os_log_type_t v164 = (void (*)(char *, uint64_t))v34;
  id v155 = (void (*)(char *, void (*)(void, void), uint64_t))v35;
  v35(v33);
  uint64_t v36 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.default.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  id v153 = v12;
  uint64_t v156 = v7;
  unint64_t v148 = a3;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc(12LL, -1LL);
    id v144 = v9;
    double v41 = (uint8_t *)v40;
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    uint64_t v171 = v42;
    *(_DWORD *)double v41 = 136446210;
    swift_bridgeObjectRetain(a3);
    *(void *)&__int128 v169 = sub_6978(v154, a3, &v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v169, (char *)&v169 + 8);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl( &dword_0,  v37,  v38,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue parameter: %{public}s",  v41,  0xCu);
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    uint64_t v43 = v41;
    uint64_t v9 = v144;
    swift_slowDealloc(v43, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t v44 = *(void (**)(char *, uint64_t))(v19 + 8);
  v44(v33, v18);
  uint64_t v45 = v18;
  id v46 = [v159 copy];
  _bridgeAnyObjectToAny(_:)(&v171, v46);
  swift_unknownObjectRelease(v46);
  id v159 = (id)sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  uint64_t v47 = swift_dynamicCast(&v172, &v171, (char *)&type metadata for Any + 8, v159, 6LL);
  uint64_t v49 = v162;
  uint64_t v48 = v163;
  if ((v47 & 1) == 0) {
    id v172 = 0LL;
  }
  Input.parse.getter(v47);
  uint64_t v50 = v165;
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t))(v165 + 88);
  uint64_t v52 = v51(v48, v49);
  int v53 = enum case for Parse.NLv3IntentPlusServerConversion(_:);
  if ((_DWORD)v52 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v48, v49);
    uint64_t v54 = sub_6C5C(&qword_284618);
    uint64_t v55 = *(void *)&v48[*(int *)(v54 + 48)];
    uint64_t v56 = v151;
    Input.parse.getter(v54);
    uint64_t v57 = (uint64_t)v153;
    uint64_t v58 = sub_206FC0(v56, (uint64_t)v153);
    os_log_type_t v59 = (void *)Parse.ServerConversion.siriKitIntent.getter(v58);
    uint64_t v60 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    uint64_t v61 = swift_dynamicCastObjCClass(v59, v60);
    if (v61)
    {
      id v62 = (void *)v61;
      sub_1F6CC(v57, &qword_284CA0);
      swift_release(v55);
      id v63 = v172;
      id v172 = v62;

      uint64_t v64 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8LL))(v48, v64);
      id v65 = v172;
      if (v172)
      {
        unint64_t v66 = v148;
        if (v154 == 0x657449616964656DLL && v148 == 0xEA0000000000736DLL
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
        {
          id v67 = v65;
          id v68 = [v67 mediaItems];
          uint64_t v69 = v155;
          if (v68)
          {
            uint64_t v70 = v68;
            uint64_t v71 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
            uint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

            *((void *)&v170 + 1) = sub_6C5C(&qword_2848D0);
            *(void *)&__int128 v169 = v72;
          }

          else
          {
            __int128 v169 = 0u;
            __int128 v170 = 0u;
          }

          uint64_t v112 = v149;
          sub_45F6C((uint64_t)&v169, (uint64_t)&v171, &qword_284028);
          v69(v112, (void (*)(void, void))v164, v45);
          uint64_t v113 = sub_FF10((uint64_t)&v171, (uint64_t)&v169, &qword_284028);
          uint64_t v114 = (os_log_s *)Logger.logObject.getter(v113);
          os_log_type_t v115 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v114, v115))
          {
            uint64_t v116 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v117 = swift_slowAlloc(32LL, -1LL);
            os_log_type_t v164 = v44;
            id v118 = v67;
            uint64_t v119 = v117;
            uint64_t v168 = v117;
            uint64_t v165 = v45;
            *(_DWORD *)uint64_t v116 = 136446210;
            sub_FF10((uint64_t)&v169, (uint64_t)&v166, &qword_284028);
            uint64_t v120 = sub_6C5C(&qword_284028);
            uint64_t v121 = String.init<A>(describing:)(&v166, v120);
            unint64_t v123 = v122;
            uint64_t v166 = sub_6978(v121, v122, &v168);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167);
            swift_bridgeObjectRelease(v123);
            sub_1F6CC((uint64_t)&v169, &qword_284028);
            _os_log_impl( &dword_0,  v114,  v115,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue returning with: %{public}s",  v116,  0xCu);
            swift_arrayDestroy(v119, 1LL, (char *)&type metadata for Any + 8);
            uint64_t v124 = v119;
            id v67 = v118;
            swift_slowDealloc(v124, -1LL, -1LL);
            swift_slowDealloc(v116, -1LL, -1LL);

            v164(v149, v165);
          }

          else
          {
            sub_1F6CC((uint64_t)&v169, &qword_284028);

            v44(v112, v45);
          }

          sub_FF10((uint64_t)&v171, (uint64_t)&v169, &qword_284028);
          id v125 = v67;
          IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v169, v125, v159);
          uint64_t v126 = sub_6C5C(qword_284CB0);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56LL))( v9,  0LL,  1LL,  v126);
          swift_storeEnumTagMultiPayload(v9, v156, 0LL);
          v158(v9);

          sub_1F6CC((uint64_t)v9, &qword_284C98);
          uint64_t v127 = &v171;
          uint64_t v128 = &qword_284028;
          goto LABEL_40;
        }

        uint64_t v129 = v145;
        v155(v145, (void (*)(void, void))v164, v45);
        swift_bridgeObjectRetain_n(v66, 2LL);
        uint64_t v130 = (void (*)(char *, uint64_t))v65;
        id v131 = (os_log_s *)Logger.logObject.getter(v130);
        os_log_type_t v132 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v131, v132))
        {
          uint64_t v133 = swift_slowAlloc(12LL, -1LL);
          os_log_type_t v164 = v130;
          uint64_t v134 = v129;
          char v135 = (uint8_t *)v133;
          uint64_t v136 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v169 = v136;
          uint64_t v165 = v45;
          *(_DWORD *)char v135 = 136315138;
          swift_bridgeObjectRetain(v66);
          uint64_t v166 = sub_6978(v154, v66, (uint64_t *)&v169);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167);
          swift_bridgeObjectRelease_n(v66, 3LL);
          _os_log_impl( &dword_0,  v131,  v132,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue Unexpected parameter:%s",  v135,  0xCu);
          swift_arrayDestroy(v136, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v136, -1LL, -1LL);
          swift_slowDealloc(v135, -1LL, -1LL);

          id v137 = v134;
          uint64_t v130 = v164;
          uint64_t v138 = v165;
        }

        else
        {

          swift_bridgeObjectRelease_n(v66, 2LL);
          id v137 = v129;
          uint64_t v138 = v45;
        }

        v44(v137, v138);
        uint64_t v139 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v140 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v141 = swift_allocError(v139, v140, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v139 - 8) + 104LL))( v142,  enum case for PlaybackCode.ceGE86(_:),  v139);
        *uint64_t v9 = v141;
        swift_storeEnumTagMultiPayload(v9, v156, 1LL);
        v158(v9);
      }

      else
      {
        uint64_t v101 = v146;
        uint64_t v102 = ((uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v155)(v146, v164, v45);
        uint64_t v103 = (os_log_s *)Logger.logObject.getter(v102);
        os_log_type_t v104 = static os_log_type_t.default.getter();
        BOOL v105 = os_log_type_enabled(v103, v104);
        uint64_t v106 = v156;
        if (v105)
        {
          uint64_t v107 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v107 = 0;
          _os_log_impl( &dword_0,  v103,  v104,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue updatedIntent nil",  v107,  2u);
          swift_slowDealloc(v107, -1LL, -1LL);
        }

        v44(v101, v45);
        uint64_t v108 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v109 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v110 = swift_allocError(v108, v109, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v108 - 8) + 104LL))( v111,  enum case for PlaybackCode.ceGE85(_:),  v108);
        *uint64_t v9 = v110;
        swift_storeEnumTagMultiPayload(v9, v106, 1LL);
        v158(v9);
      }

      uint64_t v128 = &qword_284C98;
      uint64_t v127 = v9;
LABEL_40:
      sub_1F6CC((uint64_t)v127, v128);
      goto LABEL_41;
    }

    uint64_t v90 = v147;
    uint64_t v91 = ((uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v155)(v147, v164, v45);
    id v92 = (os_log_s *)Logger.logObject.getter(v91);
    os_log_type_t v93 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v94 = 0;
      _os_log_impl( &dword_0,  v92,  v93,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue Ignorning non-server-conversion parse",  v94,  2u);
      uint64_t v95 = v94;
      uint64_t v48 = v163;
      uint64_t v57 = (uint64_t)v153;
      swift_slowDealloc(v95, -1LL, -1LL);
    }

    v44(v90, v45);
    uint64_t v96 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v97 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v98 = swift_allocError(v96, v97, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v96 - 8) + 104LL))( v99,  enum case for PlaybackCode.ceGE83(_:),  v96);
    *uint64_t v9 = v98;
    swift_storeEnumTagMultiPayload(v9, v156, 1LL);
    v158(v9);
    swift_release(v55);
    sub_1F6CC((uint64_t)v9, &qword_284C98);
    sub_1F6CC(v57, &qword_284CA0);
    uint64_t v100 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v100 - 8) + 8LL))(v48, v100);
  }

  else
  {
    id v73 = v152;
    Input.parse.getter(v52);
    if (v51(v73, v49) == v53)
    {
      (*(void (**)(char *, uint64_t))(v165 + 96))(v73, v49);
      uint64_t v74 = sub_6C5C(&qword_284618);
      swift_release(*(void *)&v73[*(int *)(v74 + 48)]);
      uint64_t v75 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v75 - 8) + 8LL))(v73, v75);
      uint64_t v76 = v150;
      uint64_t v77 = (uint64_t (*)(char *, void (*)(void, void), uint64_t))v155;
      uint64_t v78 = ((uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v155)(v150, v164, v45);
      uint64_t v79 = (os_log_s *)Logger.logObject.getter(v78);
      os_log_type_t v80 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v81 = 0;
        _os_log_impl( &dword_0,  v79,  v80,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue and UpdateMediaAffinityNeedsValueStrategy#actionForIn put parse handling need to be the same!",  v81,  2u);
        swift_slowDealloc(v81, -1LL, -1LL);
      }

      v44(v76, v45);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v165 + 8))(v73, v49);
      uint64_t v77 = (uint64_t (*)(char *, void (*)(void, void), uint64_t))v155;
    }

    uint64_t v82 = v77(v161, (void (*)(void, void))v164, v45);
    uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v84 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v85 = 0;
      _os_log_impl( &dword_0,  v83,  v84,  "UpdateMediaAffinityNeedsValueStrategy#parseResponseValue intent not of right type",  v85,  2u);
      swift_slowDealloc(v85, -1LL, -1LL);
    }

    v44(v161, v45);
    uint64_t v86 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v87 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v88 = swift_allocError(v86, v87, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v86 - 8) + 104LL))( v89,  enum case for PlaybackCode.ceGE84(_:),  v86);
    *uint64_t v9 = v88;
    swift_storeEnumTagMultiPayload(v9, v156, 1LL);
    v158(v9);
    sub_1F6CC((uint64_t)v9, &qword_284C98);
    (*(void (**)(char *, uint64_t))(v165 + 8))(v48, v49);
  }

LABEL_41:
}

  __break(1u);
  return result;
}

    swift_bridgeObjectRelease(v35);
    os_log_type_t v38 = 0;
LABEL_43:
    *(_BYTE *)(inited + 1sub_6C3C(v0 + 44) = v38 & 1;
    BOOL v39 = sub_74E88(inited);
    sub_1CADF4(v39);
    double v41 = v40;
    swift_bridgeObjectRelease(v39);
    uint64_t v47 = 0LL;
    memset(v46, 0, sizeof(v46));
    __chkstk_darwin(v42);
    *(&v44 - 10) = 0x6964654D79616C50LL;
    *(&v44 - sub_6C3C(v0 + 9) = 0xEF746E65746E4961LL;
    *(&v44 - sub_6C3C(v0 + 8) = 0xD000000000000013LL;
    *(&v44 - sub_6C3C(v0 + 7) = 0x8000000000221C70LL;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)a2,  a3,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  0x6964654D79616C50LL,  0xEF746E65746E4961LL,  0xD000000000000013LL,  0x8000000000221C70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v44 - 12));

    swift_bridgeObjectRelease(v41);
    uint64_t v21 = &qword_283FE8;
    uint64_t v22 = (uint64_t *)v46;
    return sub_1F6CC((uint64_t)v22, v21);
  }

  uint64_t v18 = sub_6C9C();
  uint64_t v19 = swift_allocError(&type metadata for String, v18, 0LL, 0LL);
  *uint64_t v20 = 0xD000000000000023LL;
  v20[1] = 0x8000000000223E90LL;
  *uint64_t v8 = v19;
  swift_storeEnumTagMultiPayload(v8, v6, 1LL);
  a2(v8);
  uint64_t v21 = (uint64_t *)&unk_286BB0;
  uint64_t v22 = v8;
  return sub_1F6CC((uint64_t)v22, v21);
}

uint64_t sub_52028()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 80) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 72));
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_520F0(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  sub_50134( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56),  *(void (**)(uint64_t *))(v1 + 64),  *(void *)(v1 + 72),  v1 + ((v3 + 80) & ~v3));
}

uint64_t MediaItemDisambiguationStrategy.actionForInput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:input:)@<X0>( uint64_t (*a1)(char *, uint64_t)@<X6>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v155 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  char v135 = (char *)v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v154 = (char *)v132 - v8;
  __chkstk_darwin(v7);
  id v146 = (char *)v132 - v9;
  uint64_t v10 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v10);
  char v149 = (char *)v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v150 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v144 = *(void *)(v150 - 8);
  uint64_t v12 = __chkstk_darwin(v150);
  uint64_t v139 = (char *)v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v141 = (char *)v132 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v142 = (char *)v132 - v17;
  __chkstk_darwin(v16);
  uint64_t v143 = (char *)v132 - v18;
  uint64_t v153 = type metadata accessor for Parse(0LL);
  uint64_t v156 = *(void *)(v153 - 8);
  uint64_t v19 = __chkstk_darwin(v153);
  os_log_type_t v145 = (char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  unint64_t v158 = (char *)v132 - v21;
  uint64_t v22 = type metadata accessor for Input(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v136 = (char *)v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v157 = (char *)v132 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v140 = (char *)v132 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  id v137 = (char *)v132 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v132 - v36;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v38 = sub_6960(v26, (uint64_t)qword_2969C8);
  BOOL v39 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v147 = v38;
  unint64_t v148 = v39;
  ((void (*)(char *))v39)(v37);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t (*)(void, void), uint64_t))(v23 + 16);
  id v159 = a1;
  uint64_t v41 = v40(v25, (uint64_t (*)(void, void))a1, v22);
  uint64_t v42 = v27;
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v44 = static os_log_type_t.default.getter();
  uint64_t v152 = v23;
  os_log_type_t v45 = v44;
  BOOL v46 = os_log_type_enabled(v43, v44);
  uint64_t v151 = a2;
  if (v46)
  {
    uint64_t v133 = v42;
    uint64_t v47 = swift_slowAlloc(12LL, -1LL);
    uint64_t v134 = v4;
    uint64_t v48 = (uint8_t *)v47;
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    uint64_t v138 = v26;
    uint64_t v50 = v49;
    v167[0] = v49;
    *(_DWORD *)uint64_t v48 = 136315138;
    v132[1] = v48 + 4;
    uint64_t v51 = sub_10430( (unint64_t *)&qword_284640,  (uint64_t (*)(uint64_t))&type metadata accessor for Input,  (uint64_t)&protocol conformance descriptor for Input);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v22, v51);
    unint64_t v54 = v53;
    *(void *)&__int128 v165 = sub_6978(v52, v53, v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, (char *)&v165 + 8);
    swift_bridgeObjectRelease(v54);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v25, v22);
    _os_log_impl(&dword_0, v43, v45, "MediaItemDisambiguationStrategy#actionForInput input:%s", v48, 0xCu);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v55 = v50;
    uint64_t v26 = v138;
    swift_slowDealloc(v55, -1LL, -1LL);
    uint64_t v56 = v48;
    uint64_t v4 = v134;
    swift_slowDealloc(v56, -1LL, -1LL);

    uint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v133 + 8);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v152 + 8))(v25, v22);

    uint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
  }

  uint64_t v58 = v57(v37, v26);
  os_log_type_t v59 = v158;
  Input.parse.getter(v58);
  uint64_t v60 = v156;
  uint64_t v61 = v153;
  int v62 = (*(uint64_t (**)(char *, uint64_t))(v156 + 88))(v59, v153);
  uint64_t v64 = v154;
  uint64_t v63 = v155;
  id v65 = v157;
  if (v62 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    (*(void (**)(char *, uint64_t))(v60 + 96))(v59, v61);
    uint64_t v66 = sub_6C5C(&qword_284618);
    swift_release(*(void *)&v59[*(int *)(v66 + 48)]);
    uint64_t v67 = type metadata accessor for NLIntent(0LL);
    uint64_t v68 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8LL))(v59, v67);
    uint64_t v69 = (uint64_t)v149;
  }

  else
  {
    if (v62 == enum case for Parse.directInvocation(_:))
    {
      uint64_t v70 = v158;
      (*(void (**)(char *, uint64_t))(v60 + 96))(v158, v61);
      uint64_t v71 = (uint64_t)v146;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v146, v70, v4);
      sub_1CF340(v71, (uint64_t)v162);
      sub_45F6C((uint64_t)v162, (uint64_t)v163, &qword_2845F0);
      if (v164 != 255)
      {
        sub_45D94((uint64_t)v163, (uint64_t)&v165);
        sub_45D94((uint64_t)&v165, (uint64_t)v167);
        int v72 = v170;
        sub_45DD0((uint64_t)v162);
        if (v72 == 3)
        {
          uint64_t v73 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v146, v4);
          return static ActionForInput.handle()(v73);
        }
      }

      v148(v65, v147, v26);
      uint64_t v94 = *(uint64_t (**)(char *, char *, uint64_t))(v63 + 16);
      uint64_t v95 = v94(v64, v146, v4);
      uint64_t v96 = (os_log_s *)Logger.logObject.getter(v95);
      os_log_type_t v97 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v138 = v26;
        uint64_t v98 = swift_slowAlloc(12LL, -1LL);
        id v159 = v57;
        uint64_t v99 = v4;
        uint64_t v100 = (uint8_t *)v98;
        uint64_t v101 = swift_slowAlloc(32LL, -1LL);
        uint64_t v161 = v101;
        *(_DWORD *)uint64_t v100 = 136315138;
        unint64_t v158 = (char *)(v100 + 4);
        uint64_t v102 = v135;
        v94(v135, v64, v99);
        uint64_t v103 = String.init<A>(describing:)(v102, v99);
        unint64_t v105 = v104;
        uint64_t v160 = sub_6978(v103, v104, &v161);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161);
        swift_bridgeObjectRelease(v105);
        uint64_t v106 = *(void (**)(char *, uint64_t))(v155 + 8);
        v106(v64, v99);
        _os_log_impl( &dword_0,  v96,  v97,  "MediaItemDisambiguationStrategy#actionForInput received unsupported directInvocation: %s",  v100,  0xCu);
        swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v101, -1LL, -1LL);
        uint64_t v107 = v100;
        uint64_t v4 = v99;
        swift_slowDealloc(v107, -1LL, -1LL);

        uint64_t v108 = v159(v157, v138);
      }

      else
      {
        uint64_t v106 = *(void (**)(char *, uint64_t))(v63 + 8);
        v106(v64, v4);

        uint64_t v108 = v57(v157, v26);
      }

      static ActionForInput.ignore()(v108);
      return ((uint64_t (*)(char *, uint64_t))v106)(v146, v4);
    }

    uint64_t v69 = (uint64_t)v149;
    if (v62 != enum case for Parse.pommesResponse(_:))
    {
      uint64_t v109 = v136;
      uint64_t v110 = ((uint64_t (*)(char *, uint64_t, uint64_t))v148)(v136, v147, v26);
      uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
      os_log_type_t v112 = static os_log_type_t.error.getter();
      BOOL v113 = os_log_type_enabled(v111, v112);
      uint64_t v114 = v158;
      if (v113)
      {
        os_log_type_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v115 = 0;
        _os_log_impl( &dword_0,  v111,  v112,  "MediaItemDisambiguationStrategy#actionForInput Ignorning unsupported parse",  v115,  2u);
        swift_slowDealloc(v115, -1LL, -1LL);
      }

      uint64_t v116 = v57(v109, v26);
      static ActionForInput.ignore()(v116);
      return (*(uint64_t (**)(char *, uint64_t))(v156 + 8))(v114, v61);
    }

    uint64_t v74 = (id *)v158;
    (*(void (**)(char *, uint64_t))(v60 + 96))(v158, v61);
  }

  uint64_t v75 = (uint64_t)v145;
  Input.parse.getter(v68);
  double v76 = sub_B6EF8(v75, &v165);
  (*(void (**)(uint64_t, uint64_t, double))(v60 + 8))(v75, v61, v76);
  if (v166)
  {
    sub_FF54(&v165, (uint64_t)v167);
    uint64_t v77 = v168;
    uint64_t v78 = v169;
    sub_6EA8(v167, v168);
    dispatch thunk of ConfirmableIntent.confirmationState.getter(v77, v78);
    uint64_t v79 = v144;
    uint64_t v80 = v150;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v69, 1LL, v150) == 1)
    {
      sub_1F6CC(v69, &qword_284630);
LABEL_17:
      uint64_t v73 = sub_6C3C(v167);
      return static ActionForInput.handle()(v73);
    }

    uint64_t v88 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v143, v69, v80);
    uint64_t v89 = *(void (**)(char *, void, uint64_t))(v79 + 104);
    v89(v142, enum case for CommonAudio.Confirmation.cancel(_:), v80);
    uint64_t v90 = sub_10430( qword_286CD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
    dispatch thunk of RawRepresentable.rawValue.getter(&v165, v80, v90);
    dispatch thunk of RawRepresentable.rawValue.getter(v163, v80, v90);
    uint64_t v91 = *((void *)&v165 + 1);
    uint64_t v92 = *((void *)&v163[0] + 1);
    if (v165 == v163[0])
    {
      char v93 = 1;
      uint64_t v92 = *((void *)&v165 + 1);
    }

    else
    {
      char v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, *((void *)&v165 + 1));
    }

    swift_bridgeObjectRelease(v91);
    swift_bridgeObjectRelease(v92);
    uint64_t v117 = v144;
    id v118 = *(void (**)(char *, uint64_t))(v144 + 8);
    uint64_t v119 = v150;
    v118(v142, v150);
    uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    uint64_t v121 = v141;
    v120(v141, v143, v119);
    if ((v93 & 1) == 0)
    {
      v89(v139, enum case for CommonAudio.Confirmation.no(_:), v119);
      dispatch thunk of RawRepresentable.rawValue.getter(&v165, v119, v90);
      dispatch thunk of RawRepresentable.rawValue.getter(v163, v119, v90);
      uint64_t v122 = *((void *)&v165 + 1);
      uint64_t v123 = *((void *)&v163[0] + 1);
      if (v165 != v163[0])
      {
        uint64_t v130 = v119;
        char v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, *((void *)&v165 + 1));
        swift_bridgeObjectRelease(v122);
        swift_bridgeObjectRelease(v123);
        v118(v139, v130);
        v118(v141, v130);
        if ((v131 & 1) == 0)
        {
          v118(v143, v150);
          goto LABEL_17;
        }

        goto LABEL_34;
      }

      swift_bridgeObjectRelease_n(*((void *)&v165 + 1), 2LL);
      v118(v139, v119);
      uint64_t v121 = v141;
    }

    v118(v121, v119);
LABEL_34:
    uint64_t v124 = v137;
    uint64_t v125 = ((uint64_t (*)(char *, uint64_t, uint64_t))v148)(v137, v147, v88);
    uint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
    os_log_type_t v127 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v128 = 0;
      _os_log_impl(&dword_0, v126, v127, "MediaItemDisambiguationStrategy#actionForInput cancelled", v128, 2u);
      swift_slowDealloc(v128, -1LL, -1LL);
    }

    uint64_t v129 = v57(v124, v88);
    static ActionForInput.cancel()(v129);
    v118(v143, v150);
    return sub_6C3C(v167);
  }

  sub_1F6CC((uint64_t)&v165, &qword_284638);
  uint64_t v82 = v140;
  uint64_t v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v148)(v140, v147, v26);
  os_log_type_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl(&dword_0, v84, v85, "MediaItemDisambiguationStrategy#actionForInput received invalid intent", v86, 2u);
    swift_slowDealloc(v86, -1LL, -1LL);
  }

  uint64_t v87 = v57(v82, v26);
  return static ActionForInput.ignore()(v87);
}

uint64_t MediaItemDisambiguationStrategy.makeDisambiguationItemContainer(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t, uint64_t))
{
  return sub_560D4(a3, a4, a6, a7);
}

uint64_t MediaItemDisambiguationStrategy.parseDisambiguationResult(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:input:paginatedItems:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *, char *, uint64_t), uint64_t a8, void (*a9)(uint64_t *), uint64_t a10)
{
  return sub_5642C(a2, a3, a4, a7, a8, a9, a10);
}

uint64_t sub_52E20(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 8) identifier];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    uint64_t v5 = v4;
  }

  else
  {
    uint64_t v3 = 0LL;
    uint64_t v5 = 0LL;
  }

  id v6 = sub_68344();
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = [v6 mediaIdentifier];

    if (v8)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      uint64_t v7 = v10;

      if (!v5) {
        goto LABEL_14;
      }
LABEL_9:
      if (v7)
      {
        if (v3 == v9 && v5 == v7)
        {
          swift_bridgeObjectRelease(v5);
          char v11 = 1;
        }

        else
        {
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5);
          swift_bridgeObjectRelease(v5);
        }
      }

      else
      {
        char v11 = 0;
        uint64_t v7 = v5;
      }

      goto LABEL_18;
    }

    uint64_t v9 = 0LL;
    uint64_t v7 = 0LL;
    if (v5) {
      goto LABEL_9;
    }
  }

  else
  {
    uint64_t v9 = 0LL;
    if (v5) {
      goto LABEL_9;
    }
  }

uint64_t sub_52F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v4);
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v7 = [*(id *)(a1 + 8) identifier];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v11 = v10;
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v11 = 0LL;
  }

  sub_FF10(a2, (uint64_t)v6, &qword_284900);
  uint64_t v12 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1LL, v12);
  if ((_DWORD)v14 == 1)
  {
    sub_1F6CC((uint64_t)v6, &qword_284900);
    if (!v11) {
      goto LABEL_17;
    }
LABEL_14:
    char v19 = 0;
    uint64_t v17 = v11;
LABEL_19:
    swift_bridgeObjectRelease(v17);
    return v19 & 1;
  }

  uint64_t v15 = UsoIdentifier.value.getter(v14);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  if (v11)
  {
    if (v17)
    {
      if (v9 == v15 && v11 == v17)
      {
        swift_bridgeObjectRelease(v11);
        char v19 = 1;
      }

      else
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11);
        swift_bridgeObjectRelease(v11);
      }

      goto LABEL_19;
    }

    goto LABEL_14;
  }

  if (v17)
  {
    char v19 = 0;
    goto LABEL_19;
  }

LABEL_17:
  char v19 = 1;
  return v19 & 1;
}

  id v6 = *a1;
  id v7 = v6 >= 0xE;
  id v8 = v6 - 14;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

  id v6 = *a1;
  id v7 = v6 >= 4;
  id v8 = v6 - 4;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

  id v6 = *a1;
  id v7 = v6 >= 0xB;
  id v8 = v6 - 11;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

  id v6 = *a1;
  id v7 = v6 >= 2;
  id v8 = v6 - 2;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

  id v6 = *a1;
  id v7 = v6 >= 0xD;
  id v8 = v6 - 13;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

    sub_1F6CC(v68, &qword_28BA58);
    uint64_t v75 = 0;
    goto LABEL_18;
  }

  uint64_t v77 = v90;
  sub_FF10(v68, v90, &qword_285130);
  if (v70(v69, 1LL, v67) == 1)
  {
    sub_1F6CC(v96, &qword_285130);
    sub_1F6CC(v64, &qword_285130);
    v103(v106, v63);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v77, v67);
    uint64_t v74 = v104;
    goto LABEL_17;
  }

  uint64_t v78 = v97;
  uint64_t v79 = v64;
  uint64_t v61 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v88, v69, v67);
  uint64_t v80 = sub_10430( &qword_28BA68,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaceHint,  (uint64_t)&protocol conformance descriptor for PlaceHint);
  uint64_t v75 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v61, v67, v80);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v78 + 8);
  v81(v61, v67);
  sub_1F6CC(v96, &qword_285130);
  sub_1F6CC(v79, &qword_285130);
  v103(v106, v63);
  v81((char *)v77, v67);
  sub_1F6CC(v68, &qword_285130);
  double v76 = v108;
  LOBYTE(v61) = v107;
  uint64_t v74 = v104;
LABEL_20:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v82 = sub_6960(v72, (uint64_t)qword_2969C8);
  uint64_t v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 16))(v109, v82, v72);
  os_log_type_t v84 = (os_log_s *)Logger.logObject.getter(v83);
  os_log_type_t v85 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = swift_slowAlloc(26LL, -1LL);
    *(_DWORD *)uint64_t v86 = 67109888;
    uint64_t v110 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
    *(_WORD *)(v86 + sub_6C3C(v0 + 8) = 1024;
    uint64_t v110 = v61 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
    *(_WORD *)(v86 + sub_6C3C(v0 + 14) = 1024;
    uint64_t v110 = v75 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
    *(_WORD *)(v86 + 20) = 1024;
    uint64_t v110 = ((v76 | v61) | v75) & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, &v111);
    _os_log_impl( &dword_0,  v84,  v85,  "HomeAutomationEntityProviding#shouldIncludeTVs allDevices: %{BOOL}d, targetsTVs: %{BOOL}d, everywhereInRoom: %{boo l}d, includeTVs: %{BOOL}d",  (uint8_t *)v86,  0x1Au);
    swift_slowDealloc(v86, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v74 + 8))(v109, v72);
  return ((v76 | v61) | v75) & 1;
}

  id v6 = *a1;
  id v7 = v6 >= 3;
  id v8 = v6 - 3;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

  id v6 = *a1;
  id v7 = v6 >= 0x19;
  id v8 = v6 - 25;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

  uint64_t v38 = 0LL;
  BOOL v39 = a20;
  if (!v37) {
    goto LABEL_18;
  }
LABEL_9:
  BOOL v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  uint64_t v40 = a24;
  if (v39)
  {
LABEL_10:
    v41.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v39);
    goto LABEL_20;
  }

    uint64_t v69 = sub_1F6CC((uint64_t)v33, &qword_284DA8);
    uint64_t v70 = v232;
    uint64_t v71 = v229;
    goto LABEL_18;
  }

  sub_FF10((uint64_t)v33, (uint64_t)v43, &qword_284DB0);
  if (v64((char *)v63, 1LL, v27) == 1)
  {
    sub_1F6CC((uint64_t)v46, &qword_284DB0);
    sub_1F6CC((uint64_t)v48, &qword_284DB0);
    (*((void (**)(char *, uint64_t))v233 + 1))(v43, v27);
    uint64_t v68 = v231;
    goto LABEL_17;
  }

  uint64_t v86 = v233;
  uint64_t v87 = v214;
  (*((void (**)(char *, uint64_t, uint64_t))v233 + 4))(v214, v63, v27);
  uint64_t v88 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  uint64_t v89 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v87, v27, v88);
  uint64_t v90 = v29;
  uint64_t v91 = (void (*)(char *, uint64_t))*((void *)v86 + 1);
  v91(v87, v27);
  sub_1F6CC((uint64_t)v46, &qword_284DB0);
  sub_1F6CC((uint64_t)v48, &qword_284DB0);
  v91(v43, v27);
  uint64_t v29 = v90;
  uint64_t v66 = (void *)&unk_283000;
  uint64_t v69 = sub_1F6CC((uint64_t)v33, &qword_284DB0);
  uint64_t v68 = v231;
  uint64_t v70 = v232;
  uint64_t v71 = v229;
  if ((v89 & 1) != 0 && v231) {
    goto LABEL_26;
  }
LABEL_18:
  dispatch thunk of AudioUsoIntent.noun.getter(v69);
  int v72 = v227;
  uint64_t v73 = v228;
  uint64_t v74 = v223;
  (*(void (**)(uint64_t, void, uint64_t))(v228 + 104))( v227,  enum case for CommonAudio.Noun.library(_:),  v223);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v72, 0LL, 1LL, v74);
  uint64_t v75 = (uint64_t)v70 + *(int *)(v222 + 48);
  sub_FF10(v71, (uint64_t)v70, &qword_284D88);
  sub_FF10(v72, v75, &qword_284D88);
  double v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  if (v76((uint64_t)v70, 1LL, v74) == 1)
  {
    sub_1F6CC(v72, &qword_284D88);
    sub_1F6CC(v71, &qword_284D88);
    uint64_t v77 = v76(v75, 1LL, v74);
    uint64_t v78 = (uint64_t)v220;
    if (v77 == 1)
    {
      uint64_t v79 = &qword_284D88;
      uint64_t v80 = (void (*)(void, void))v232;
LABEL_34:
      sub_1F6CC((uint64_t)v80, v79);
      goto LABEL_35;
    }

    goto LABEL_23;
  }

  int v222 = v29;
  sub_FF10((uint64_t)v70, v221, &qword_284D88);
  uint64_t v81 = v76(v75, 1LL, v74);
  uint64_t v82 = (uint64_t)v70;
  uint64_t v78 = (uint64_t)v220;
  if (v81 == 1)
  {
    sub_1F6CC(v227, &qword_284D88);
    sub_1F6CC(v229, &qword_284D88);
    (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v221, v74);
    uint64_t v29 = v222;
LABEL_23:
    uint64_t v83 = sub_1F6CC((uint64_t)v232, &qword_284D80);
    os_log_type_t v84 = (uint64_t)v219;
    os_log_type_t v85 = v218;
    goto LABEL_28;
  }

  char v93 = v228;
  uint64_t v94 = v221;
  uint64_t v95 = v212;
  (*(void (**)(char *, uint64_t, uint64_t))(v228 + 32))(v212, v75, v74);
  uint64_t v96 = sub_10430( &qword_284DE8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Noun,  (uint64_t)&protocol conformance descriptor for CommonAudio.Noun);
  os_log_type_t v97 = dispatch thunk of static Equatable.== infix(_:_:)(v94, v95, v74, v96);
  uint64_t v98 = *(void (**)(char *, uint64_t))(v93 + 8);
  v98(v95, v74);
  sub_1F6CC(v227, &qword_284D88);
  sub_1F6CC(v229, &qword_284D88);
  v98((char *)v94, v74);
  uint64_t v83 = sub_1F6CC(v82, &qword_284D88);
  os_log_type_t v84 = (uint64_t)v219;
  uint64_t v29 = v222;
  os_log_type_t v85 = v218;
  if ((v97 & 1) != 0)
  {
LABEL_35:
    uint64_t v102 = 1LL;
    uint64_t v92 = v234;
    goto LABEL_42;
  }

  id v6 = *a1;
  id v7 = v6 >= 8;
  id v8 = v6 - 8;
  if (!v7) {
    id v8 = -1;
  }
  return (v8 + 1);
}

    swift_bridgeObjectRelease(v23);
    *(_BYTE *)(inited + 7sub_6C3C(v0 + 2) = 0;
    strcpy((char *)(inited + 80), "isStorySleep");
    *(_BYTE *)(inited + 9sub_6C3C(v0 + 3) = 0;
    *(_WORD *)(inited + 9sub_6C3C(v0 + 4) = -5120;
    if (!v11)
    {
      uint64_t v27 = String.lowercased()()._object;
      goto LABEL_25;
    }

uint64_t MediaItemDisambiguationStrategy.makePromptForDisambiguation(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_58BB0(a1, a2, a3, a4, a6, a7, a8, a9);
}

uint64_t MediaItemDisambiguationStrategy.promptForDisambiguationLegacy(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_58914(a1, a2, a3, a4, a6, a7, a8, a9);
}

uint64_t sub_53134( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9)
{
  uint64_t v115 = a6;
  uint64_t v116 = a8;
  id v118 = (void *)a7;
  uint64_t v112 = a3;
  uint64_t v113 = a4;
  uint64_t v111 = a2;
  uint64_t v107 = a1;
  uint64_t v117 = a9;
  uint64_t v114 = a5;
  uint64_t v95 = *a5;
  uint64_t v100 = type metadata accessor for Locale(0LL);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v104 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v106 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = v12;
  __chkstk_darwin(v11);
  uint64_t v110 = (uint64_t)&v92 - v13;
  uint64_t v108 = sub_6C5C(&qword_289340);
  uint64_t v101 = *(void *)(v108 - 8);
  uint64_t v14 = __chkstk_darwin(v108);
  uint64_t v103 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = v15;
  __chkstk_darwin(v14);
  uint64_t v109 = (char *)&v92 - v16;
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v17);
  uint64_t v97 = (uint64_t)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v19);
  uint64_t v96 = (void (**)(char *, uint64_t *, uint64_t))((char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v107, (uint64_t)v34, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v34, v32) == 1)
  {
    uint64_t v110 = *v34;
    uint64_t v35 = v110;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.mids(_:),  v28);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.SourceFunction.pfDis(_:),  v24);
    swift_getErrorValue(v35, v122, v121);
    uint64_t v36 = Error.localizedDescription.getter(v121[1], v121[2]);
    uint64_t v38 = v37;
    LOBYTE(v91) = 0;
    uint64_t v113 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v31,  v27,  v111,  v112,  v36,  v37,  v113,  1LL,  (_DWORD)v91);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease(v38);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    uint64_t v42 = v114[7];
    uint64_t v41 = v114[8];
    sub_6EA8(v114 + 4, v42);
    uint64_t v43 = enum case for ActivityType.failed(_:);
    uint64_t v44 = type metadata accessor for ActivityType(0LL);
    uint64_t v45 = *(void *)(v44 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v23, v43, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v23, 0LL, 1LL, v44);
    uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v47 = (uint64_t)v96;
    (*(void (**)(void (**)(char *, uint64_t *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))( v96,  1LL,  1LL,  v46);
    uint64_t v48 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v49 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 104))(v97, v48, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0LL, 1LL, v49);
    LOBYTE(v90) = 1;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v115,  v118,  v23,  v47,  v51,  v113,  v40,  0LL,  v90,  v42,  v41);
    swift_bridgeObjectRelease(v40);
    sub_1F6CC(v51, &qword_2845A0);
    sub_1F6CC(v47, (uint64_t *)&unk_286BD0);
    sub_1F6CC((uint64_t)v23, &qword_2845A8);
    uint64_t v52 = v110;
    v119[0] = v110;
    char v120 = 1;
    swift_errorRetain(v110);
    v116(v119);
    swift_errorRelease(v52);
    unint64_t v53 = (uint64_t *)&unk_286C60;
    unint64_t v54 = (char *)v119;
  }

  else
  {
    uint64_t v55 = *(int *)(v108 + 48);
    uint64_t v56 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v96 = *(void (***)(char *, uint64_t *, uint64_t))(v56 - 8);
    uint64_t v57 = (uint64_t *)v109;
    v96[4](v109, v34, v56);
    uint64_t v58 = *(void **)((char *)v34 + v55);
    *(uint64_t *)((char *)v57 + v5sub_6C3C(v0 + 5) = (uint64_t)v58;
    id v94 = v58;
    uint64_t v59 = sub_6C5C(&qword_284D48);
    uint64_t v60 = PaginatedItemContainer.page.getter();
    uint64_t v61 = *(void *)(v95 + 80);
    uint64_t v93 = *(void *)(v95 + 88);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    uint64_t v107 = AssociatedTypeWitness;
    uint64_t v97 = swift_getAssociatedTypeWitness(0LL);
    uint64_t v63 = v110;
    uint64_t v64 = v115;
    sub_958E4((uint64_t)v118, v60, v115, AssociatedTypeWitness, v97, v110);
    swift_bridgeObjectRelease(v60);
    uint64_t v65 = PaginatedItemContainer.items.getter(v59);
    uint64_t v66 = v98;
    uint64_t v67 = static SiriAudioEnvironment.siriLocale.getter(v65);
    __chkstk_darwin(v67);
    uint64_t v91 = v66;
    uint64_t v68 = sub_80CC4((void (*)(uint64_t *__return_ptr, id *))sub_59030, (uint64_t)&v90, v65);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v100);
    uint64_t v69 = sub_3FE80(v65);
    swift_bridgeObjectRelease(v65);
    uint64_t v70 = type metadata accessor for SiriKitDisambiguationList(0LL);
    swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
    uint64_t v100 = SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v69,  v68,  1LL,  0LL);
    uint64_t v71 = *(int *)(v108 + 48);
    uint64_t v72 = (uint64_t)v103;
    v96[2](v103, v57, v56);
    *(void *)(v72 + v71) = v94;
    uint64_t v73 = v106;
    sub_FF10(v63, v106, (uint64_t *)&unk_286C50);
    uint64_t v74 = *(unsigned __int8 *)(v101 + 80);
    uint64_t v75 = (v74 + 96) & ~v74;
    uint64_t v76 = *(unsigned __int8 *)(v104 + 80);
    uint64_t v77 = (v102 + v76 + v75) & ~v76;
    uint64_t v78 = (void *)swift_allocObject(&unk_26C320, v77 + v105, v74 | v76 | 7);
    uint64_t v79 = v93;
    v78[2] = v61;
    void v78[3] = v79;
    uint64_t v80 = v112;
    v78[4] = v111;
    v78[5] = v80;
    uint64_t v82 = (void *)v113;
    uint64_t v81 = v114;
    v78[6] = v113;
    v78[7] = v81;
    uint64_t v83 = v118;
    v78[8] = v64;
    v78[9] = v83;
    uint64_t v84 = (uint64_t)v78 + v75;
    uint64_t v85 = v117;
    v78[10] = v116;
    v78[11] = v85;
    sub_45F6C(v72, v84, &qword_289340);
    sub_45F6C(v73, (uint64_t)v78 + v77, (uint64_t *)&unk_286C50);
    swift_bridgeObjectRetain(v80);
    id v86 = v82;
    swift_retain(v81);
    swift_retain(v64);
    id v87 = v83;
    swift_retain(v85);
    uint64_t v88 = v100;
    sub_F30B0(v64, v100, (void (*)(void, void))sub_5916C, (uint64_t)v78);
    swift_release(v88);
    swift_release(v78);
    sub_1F6CC(v110, (uint64_t *)&unk_286C50);
    unint64_t v54 = v109;
    unint64_t v53 = &qword_289340;
  }

  return sub_1F6CC((uint64_t)v54, v53);
}

uint64_t sub_53A04( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void (*a9)(__int128 *), uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v96 = a7;
  uint64_t v97 = a8;
  int v90 = a6;
  uint64_t v89 = a5;
  uint64_t v88 = a4;
  uint64_t v87 = a3;
  uint64_t v92 = a1;
  uint64_t v98 = a9;
  uint64_t v99 = a10;
  uint64_t v83 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v83);
  uint64_t v84 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = type metadata accessor for AceOutput(0LL);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v91 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v19);
  uint64_t v95 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v21);
  id v94 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v23);
  uint64_t v93 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(char *, void, uint64_t))(v30 + 104))( v33,  enum case for AdditionalMetricsDescription.ModuleName.mids(_:),  v29);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.SourceFunction.pfDis(_:),  v25);
    uint64_t v58 = v92;
    swift_getErrorValue(v92, v101, v100);
    uint64_t v59 = v100[1];
    uint64_t v60 = v100[2];
    swift_errorRetain(v58);
    uint64_t v61 = Error.localizedDescription.getter(v59, v60);
    uint64_t v63 = v62;
    uint64_t v91 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v33,  v28,  v87,  v88,  v61,  v62,  v89,  2LL,  0);
    uint64_t v65 = v64;
    swift_bridgeObjectRelease(v63);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
    uint64_t v67 = v90[7];
    uint64_t v66 = v90[8];
    int v90 = sub_6EA8(v90 + 4, v67);
    uint64_t v68 = enum case for ActivityType.failed(_:);
    uint64_t v69 = type metadata accessor for ActivityType(0LL);
    uint64_t v70 = *(void *)(v69 - 8);
    uint64_t v71 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v93, v68, v69);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0LL, 1LL, v69);
    uint64_t v72 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v73 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v94, 1LL, 1LL, v72);
    uint64_t v74 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v75 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 104))(v95, v74, v75);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v77, 0LL, 1LL, v75);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v96,  v97,  v71,  v73,  v77,  v91,  v65,  0LL,  1,  v67,  v66);
    swift_bridgeObjectRelease(v65);
    sub_1F6CC(v77, &qword_2845A0);
    sub_1F6CC(v73, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v71, &qword_2845A8);
    *(void *)&__int128 v102 = v58;
    char v105 = 1;
    swift_errorRetain(v58);
    v98(&v102);
    sub_25404(v58, 1);
  }

  else
  {
    uint64_t v81 = v14;
    uint64_t v82 = a11;
    char v34 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v31);
    uint64_t v104 = 0LL;
    __int128 v102 = 0u;
    __int128 v103 = 0u;
    static AceOutputHelper.makeClarificationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( a11,  v34 & 1,  v92,  1LL,  1LL,  a12,  _swiftEmptyArrayStorage,  &v102);
    sub_1F6CC((uint64_t)&v102, &qword_2845C8);
    (*(void (**)(char *, void, uint64_t))(v30 + 104))( v33,  enum case for AdditionalMetricsDescription.ModuleName.mids(_:),  v29);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.SourceFunction.pfDis(_:),  v25);
    uint64_t v35 = v81;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))( v17,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v81);
    uint64_t v92 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v33,  v28,  v87,  v88,  v17,  v89,  0LL,  1LL);
    uint64_t v89 = v36;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v35);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
    uint64_t v37 = v90[7];
    uint64_t v38 = v90[8];
    sub_6EA8(v90 + 4, v37);
    uint64_t v39 = enum case for ActivityType.disambiguation(_:);
    uint64_t v40 = type metadata accessor for ActivityType(0LL);
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v93, v39, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0LL, 1LL, v40);
    uint64_t v43 = *(int *)(v83 + 48);
    uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = v84;
    uint64_t v47 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v84, v82, v44);
    *(void *)&v46[v43] = *(void *)(v47 + v43);
    uint64_t v48 = (uint64_t)v94;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v94, v46, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v48, 0LL, 1LL, v44);
    uint64_t v49 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v50 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 104))(v95, v49, v50);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0LL, 1LL, v50);
    uint64_t v79 = v37;
    uint64_t v53 = v89;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v96,  v97,  v42,  v48,  v52,  v92,  v89,  0LL,  1,  v79,  v38);
    swift_bridgeObjectRelease(v53);
    sub_1F6CC(v52, &qword_2845A0);
    sub_1F6CC(v48, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v42, &qword_2845A8);
    uint64_t v54 = v86;
    *((void *)&v103 + 1) = v86;
    uint64_t v104 = &protocol witness table for AceOutput;
    uint64_t v55 = sub_10974(&v102);
    uint64_t v56 = v85;
    uint64_t v57 = v91;
    (*(void (**)(void *, char *, uint64_t))(v85 + 16))(v55, v91, v54);
    char v105 = 0;
    v98(&v102);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v54);
  }

  return sub_1F6CC((uint64_t)&v102, (uint64_t *)&unk_286C60);
}

void sub_541DC( uint64_t a1, void *a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), void (*a5)(uint64_t *), uint64_t a6, void *a7)
{
  uint64_t v108 = a6;
  uint64_t v109 = a7;
  uint64_t v106 = a2;
  uint64_t v107 = a5;
  uint64_t v110 = a4;
  uint64_t v111 = a3;
  uint64_t v101 = *a2;
  uint64_t v100 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint8_t *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  __int128 v102 = (char *)&v94 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v19 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v19);
  char v105 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v21);
  uint64_t v104 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v23);
  __int128 v103 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v29);
  uint64_t v31 = (uint64_t *)((char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v31, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v31, v29) != 1)
  {
    uint64_t v46 = *(int *)(v12 + 48);
    uint64_t v47 = type metadata accessor for TemplatingResult(0LL);
    char v105 = (char *)v12;
    uint64_t v48 = *(void *)(v47 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v48 + 32))(v18, v31, v47);
    uint64_t v49 = *(void **)((char *)v31 + v46);
    *(void *)&v18[v46] = v49;
    uint64_t v50 = v11;
    id v51 = v49;
    uint64_t v95 = sub_6C5C(&qword_284D48);
    uint64_t v52 = PaginatedItemContainer.page.getter();
    uint64_t v53 = *(void *)(v101 + 80);
    uint64_t v54 = *(char **)(v101 + 88);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    __int128 v103 = v54;
    uint64_t v101 = v53;
    uint64_t v56 = swift_getAssociatedTypeWitness(0LL);
    sub_958E4((uint64_t)v110, v52, v111, AssociatedTypeWitness, v56, (uint64_t)v50);
    swift_bridgeObjectRelease(v52);
    uint64_t v57 = v105;
    uint64_t v58 = *((int *)v105 + 12);
    uint64_t v111 = v48;
    uint64_t v59 = v102;
    uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v110(v102, v18, v47);
    *(void *)&v59[v58] = v51;
    id v94 = v51;
    id v60 = [v51 dialog];
    uint64_t v61 = sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
    uint64_t v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

    if ((unint64_t)v62 >> 62)
    {
      if (v62 < 0) {
        uint64_t v93 = v62;
      }
      else {
        uint64_t v93 = v62 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v62);
      uint64_t v63 = _CocoaArrayWrapper.endIndex.getter(v93);
      swift_bridgeObjectRelease(v62);
    }

    else
    {
      uint64_t v63 = *(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8LL));
    }

    uint64_t v96 = v50;
    uint64_t v104 = (char *)v47;
    if (v63)
    {
      if ((v62 & 0xC000000000000001LL) != 0)
      {
        id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v62);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          return;
        }

        id v64 = *(id *)(v62 + 32);
      }

      uint64_t v65 = v64;
      swift_bridgeObjectRelease(v62);
      id v66 = [v65 fullPrint];

      uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      uint64_t v68 = v67;
    }

    else
    {
      swift_bridgeObjectRelease(v62);
      uint64_t v68 = 0xE000000000000000LL;
    }

    uint64_t v84 = *(void (**)(char *, char *))(v111 + 8);
    uint64_t v85 = v59;
    uint64_t v86 = v104;
    v84(v85, v104);
    uint64_t v87 = PaginatedItemContainer.items.getter(v95);
    uint64_t v88 = v98;
    sub_54B68(v63, v68, v87, v98);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v87);
    uint64_t v89 = *((int *)v57 + 12);
    uint64_t v90 = (uint64_t)v97;
    v110(v97, v18, (uint64_t)v86);
    uint64_t v91 = v94;
    *(void *)(v90 + v8sub_6C3C(v0 + 9) = v94;
    uint64_t v92 = v96;
    sub_592EC(v88, v90, v91, v96, (uint64_t)v107, v108);

    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v88, v100);
    sub_1F6CC((uint64_t)v92, (uint64_t *)&unk_286C50);
    sub_1F6CC((uint64_t)v18, &qword_289340);
    v84((char *)v90, v86);
    return;
  }

  uint64_t v32 = *v31;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v33 = sub_6960(v25, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v33, v25);
  swift_errorRetain(v32);
  uint64_t v34 = swift_errorRetain(v32);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc(22LL, -1LL);
    uint64_t v109 = (void *)swift_slowAlloc(64LL, -1LL);
    v115[0] = (uint64_t)v109;
    *(_DWORD *)uint64_t v37 = 136315394;
    swift_getErrorValue(v32, v114, v113);
    uint64_t v38 = Error.localizedDescription.getter(v113[1], v113[2]);
    unint64_t v40 = v39;
    uint64_t v112 = sub_6978(v38, v39, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113);
    swift_bridgeObjectRelease(v40);
    swift_errorRelease(v32);
    uint64_t v41 = swift_errorRelease(v32);
    *(_WORD *)(v37 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v42 = static Insights.responseFramework.getter(v41);
    unint64_t v44 = v43;
    uint64_t v112 = sub_6978(v42, v43, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113);
    swift_bridgeObjectRelease(v44);
    _os_log_impl( &dword_0,  v35,  v36,  "MediaItemDisambiguationStrategy#promptForDisambiguationWithRF failed to build dialog. error: %s %{public}s",  (uint8_t *)v37,  0x16u);
    uint64_t v45 = v109;
    swift_arrayDestroy(v109, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(v32);
    swift_errorRelease(v32);
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v70 = v106[7];
  uint64_t v69 = v106[8];
  uint64_t v109 = sub_6EA8(v106 + 4, v70);
  uint64_t v71 = enum case for ActivityType.failed(_:);
  uint64_t v72 = type metadata accessor for ActivityType(0LL);
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 104))(v103, v71, v72);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v74, 0LL, 1LL, v72);
  uint64_t v75 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v76 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v104, 1LL, 1LL, v75);
  uint64_t v77 = enum case for SiriKitReliabilityCodes.renderingError(_:);
  uint64_t v78 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v105, v77, v78);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0LL, 1LL, v78);
  swift_getErrorValue(v32, v118, v117);
  uint64_t v81 = Error.localizedDescription.getter(v117[1], v117[2]);
  uint64_t v83 = v82;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v111,  v110,  v74,  v76,  v80,  v81,  v82,  0LL,  1,  v70,  v69);
  swift_bridgeObjectRelease(v83);
  sub_1F6CC(v80, &qword_2845A0);
  sub_1F6CC(v76, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v74, &qword_2845A8);
  v115[0] = v32;
  char v116 = 1;
  swift_errorRetain(v32);
  v107(v115);
  swift_errorRelease(v32);
  sub_1F6CC((uint64_t)v115, (uint64_t *)&unk_286C60);
}

uint64_t sub_54B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v91 = a2;
  uint64_t v92 = a4;
  uint64_t v5 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SiriAudioDisambiguationItemModel(0LL);
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v99 = (char *)&v86 - v10;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v86 - v16;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v86 = v18;
  uint64_t v87 = v19;
  uint64_t v20 = ((uint64_t (*)(char *))v19)(v17);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v93 = v11;
  uint64_t v98 = a3;
  uint64_t v89 = v15;
  if (v23)
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    v105[0] = v25;
    *(_DWORD *)uint64_t v24 = 136446210;
    uint64_t v26 = static Insights.responseFramework.getter(v25);
    unint64_t v28 = v27;
    uint64_t v103 = sub_6978(v26, v27, v105);
    a3 = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104);
    swift_bridgeObjectRelease(v28);
    _os_log_impl(&dword_0, v21, v22, "MediaItemDisambiguationStrategy#disambiguationSnippet... %{public}s", v24, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);

    uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v30 = v17;
    uint64_t v31 = v93;
  }

  else
  {

    uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v30 = v17;
    uint64_t v31 = v11;
  }

  uint64_t v88 = v29;
  v29(v30, v31);
  v106[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v64 = a3;
    }
    else {
      uint64_t v64 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v64);
    uint64_t v32 = result;
    if (result) {
      goto LABEL_8;
    }
LABEL_30:
    swift_bridgeObjectRelease(a3);
    uint64_t v65 = v89;
    uint64_t v66 = v93;
    uint64_t v67 = v87(v89, v86, v93);
    uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc(22LL, -1LL);
      uint64_t v71 = swift_slowAlloc(64LL, -1LL);
      v105[0] = v71;
      *(_DWORD *)uint64_t v70 = 136315394;
      swift_beginAccess(v106, &v103, 0LL, 0LL);
      uint64_t v72 = v106[0];
      uint64_t v73 = swift_bridgeObjectRetain(v106[0]);
      uint64_t v74 = Array.description.getter(v73, v7);
      unint64_t v76 = v75;
      swift_bridgeObjectRelease(v72);
      uint64_t v102 = sub_6978(v74, v76, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103);
      uint64_t v77 = swift_bridgeObjectRelease(v76);
      *(_WORD *)(v70 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v78 = static Insights.responseFramework.getter(v77);
      unint64_t v80 = v79;
      uint64_t v102 = sub_6978(v78, v79, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103);
      swift_bridgeObjectRelease(v80);
      _os_log_impl( &dword_0,  v68,  v69,  "MediaItemDisambiguationStrategy#disambiguationSnippet returning items to disambiguate: %s %{public}s",  (uint8_t *)v70,  0x16u);
      swift_arrayDestroy(v71, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1LL, -1LL);
      swift_slowDealloc(v70, -1LL, -1LL);
    }

    v88(v65, v66);
    swift_beginAccess(v106, v105, 0LL, 0LL);
    uint64_t v81 = v106[0];
    uint64_t v82 = v91;
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRetain(v81);
    uint64_t v83 = v92;
    SiriAudioDisambiguationSnippetModel.init(title:items:directInvocation:isAppDisambiguation:)( v90,  v82,  v81,  0xD000000000000034LL,  0x800000000021D8A0LL,  0LL);
    uint64_t v84 = enum case for SiriAudioSnippets.disambiguation(_:);
    uint64_t v85 = type metadata accessor for SiriAudioSnippets(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 104LL))(v83, v84, v85);
    return swift_bridgeObjectRelease(v81);
  }

  uint64_t v32 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  uint64_t result = swift_bridgeObjectRetain(a3);
  if (!v32) {
    goto LABEL_30;
  }
LABEL_8:
  if (v32 >= 1)
  {
    uint64_t v34 = 0LL;
    unint64_t v35 = a3 & 0xC000000000000001LL;
    os_log_type_t v36 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
    unint64_t v95 = a3 & 0xC000000000000001LL;
    uint64_t v96 = v7;
    uint64_t v94 = v32;
    while (1)
    {
      if (v35) {
        id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, a3);
      }
      else {
        id v37 = *(id *)(a3 + 8 * v34 + 32);
      }
      uint64_t v38 = v37;
      id v39 = [v37 *(SEL *)&v36[380]];
      if (v39)
      {
        unint64_t v40 = v39;
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        uint64_t v43 = v42;

        id v44 = [v38 title];
        if (v44)
        {
          uint64_t v45 = v44;
          uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          uint64_t v48 = v47;

          id v49 = [v38 artist];
          if (v49)
          {
            uint64_t v50 = v49;
            uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
            uint64_t v53 = v52;
          }

          else
          {
            uint64_t v51 = 0LL;
            uint64_t v53 = 0LL;
          }

          uint64_t v54 = sub_5530C(v51, v53, (uint64_t)[v38 type]);
          uint64_t v56 = v55;
          swift_bridgeObjectRelease(v53);
          uint64_t v57 = type metadata accessor for URL(0LL);
          uint64_t v58 = v97;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56LL))(v97, 1LL, 1LL, v57);
          uint64_t v59 = v99;
          SiriAudioDisambiguationItemModel.init(id:title:subtitle:imageURL:)(v41, v43, v46, v48, v54, v56, v58);
          uint64_t v7 = v96;
          (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v100, v59, v96);
          unint64_t v60 = v106[0];
          if ((swift_isUniquelyReferenced_nonNull_native(v106[0]) & 1) == 0) {
            unint64_t v60 = sub_C7044(0, *(void *)(v60 + 16) + 1LL, 1, v60);
          }
          a3 = v98;
          uint64_t v32 = v94;
          unint64_t v62 = *(void *)(v60 + 16);
          unint64_t v61 = *(void *)(v60 + 24);
          if (v62 >= v61 >> 1) {
            unint64_t v60 = sub_C7044(v61 > 1, v62 + 1, 1, v60);
          }
          *(void *)(v60 + sub_6C3C(v0 + 16) = v62 + 1;
          uint64_t v63 = v101;
          (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))( v60 + ((*(unsigned __int8 *)(v63 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))
          + *(void *)(v101 + 72) * v62,
            v100,
            v7);

          v106[0] = v60;
          (*(void (**)(char *, uint64_t))(v63 + 8))(v99, v7);
          unint64_t v35 = v95;
          os_log_type_t v36 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
          goto LABEL_12;
        }

        swift_bridgeObjectRelease(v43);
      }

LABEL_12:
      if (v32 == ++v34) {
        goto LABEL_30;
      }
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_5530C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  v24[0] = a1;
  uint64_t v5 = *v3;
  uint64_t v25 = type metadata accessor for Locale(0LL);
  uint64_t v6 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = v3[18];
  uint64_t v9 = v3[19];
  v24[1] = sub_6EA8(v3 + 15, v10);
  uint64_t v11 = sub_25AD0(a3);
  uint64_t v13 = v12;
  uint64_t v15 = v3[20];
  uint64_t v14 = v3[21];
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v5);
  id v17 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v17);
  uint64_t v18 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( v11,  v13,  v15,  v14,  v17,  v8,  0LL,  0xE000000000000000LL,  v10,  v9);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease(v13);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  if (v26)
  {
    uint64_t v27 = v24[0];
    uint64_t v28 = v26;
    swift_bridgeObjectRetain(v26);
    v21._countAndFlagsBits = 32LL;
    v21._object = (void *)0xE100000000000000LL;
    String.append(_:)(v21);
    v22._countAndFlagsBits = v18;
    v22._object = v20;
    String.append(_:)(v22);
    swift_bridgeObjectRelease(v20);
    return v27;
  }

  return v18;
}

uint64_t sub_55490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  void v4[9] = a2;
  uint64_t v5 = sub_6C5C(&qword_289340);
  v4[12] = v5;
  v4[13] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v4[14] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[15] = v7;
  v4[16] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_5551C, 0LL, 0LL);
}

uint64_t sub_5551C()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[14];
  if (v8)
  {
    uint64_t v36 = v0[16];
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v14 = static Insights.responseFramework.getter(v13);
    unint64_t v16 = v15;
    v0[7] = sub_6978(v14, v15, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8);
    swift_bridgeObjectRelease(v16);
    _os_log_impl( &dword_0,  v6,  v7,  "MediaItemDisambiguationStrategy#clarificationOutput returning output. %{public}s",  v12,  0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v36, v11);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  }

  uint64_t v18 = v0[12];
  uint64_t v17 = v0[13];
  uint64_t v20 = v0[9];
  uint64_t v19 = v0[10];
  uint64_t v21 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v0[17] = ResponseFactory.init()();
  uint64_t v22 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v22;
  v0[6] = sub_10430( (unint64_t *)&qword_286CA0,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  BOOL v23 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16LL))(v23, v20, v22);
  uint64_t v24 = sub_6C5C(&qword_287980);
  uint64_t v25 = swift_allocObject(v24, 40LL, 7LL);
  *(_OWORD *)(v25 + sub_6C3C(v0 + 16) = xmmword_214980;
  uint64_t v26 = *(int *)(v18 + 48);
  uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v17, v19, v27);
  uint64_t v30 = *(void **)(v19 + v26);
  *(void *)(v17 + vsub_6C3C(v0 + 26) = v30;
  *(void *)(v25 + 3sub_6C3C(v0 + 2) = v30;
  uint64_t v38 = v25;
  specialized Array._endMutation()(v29);
  uint64_t v31 = v38;
  v0[18] = v38;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  id v33 = v30;
  v32(v17, v27);
  v0[19] = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_55820;
  return ((uint64_t (*)(void, void *, uint64_t, void))v37)(v0[8], v0 + 2, v31, v0[11]);
}

uint64_t sub_55820()
{
  uint64_t v1 = (void *)(*v0 + 16);
  uint64_t v2 = *(void *)(*v0 + 144);
  uint64_t v4 = *(void *)(*v0 + 128);
  uint64_t v3 = *(void *)(*v0 + 136);
  uint64_t v5 = *(void *)(*v0 + 104);
  uint64_t v7 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 152));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_6C3C(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

void *MediaItemDisambiguationStrategy.deinit()
{
  return v0;
}

uint64_t MediaItemDisambiguationStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 176LL, 7LL);
}

uint64_t sub_5591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for MediaItemDisambiguationStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), a4);
  return NeedsDisambiguationFlowStrategy.paginationStyle(app:intent:parameterName:intentResolutionResult:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_55994@<X0>(uint64_t (*a1)(char *, uint64_t)@<X6>, uint64_t a2@<X8>)
{
  return MediaItemDisambiguationStrategy.actionForInput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:input:)( a1,  a2);
}

uint64_t sub_559A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = swift_allocObject(&unk_26C2D0, 32LL, 7LL);
  *(void *)(v13 + sub_6C3C(v0 + 16) = a7;
  *(void *)(v13 + sub_6C3C(v0 + 24) = a8;
  swift_retain(a8);
  sub_560D4(a3, a4, a6, (void (*)(uint64_t, uint64_t))sub_26570);
  return swift_release(v13);
}

uint64_t sub_55A34( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *, char *, uint64_t), uint64_t a8, void (*a9)(uint64_t *), uint64_t a10)
{
  return sub_5642C(a2, a3, a4, a7, a8, a9, a10);
}

uint64_t sub_55A70( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_58BB0(a1, a2, a3, a4, a6, a7, a8, a9);
}

uint64_t sub_55AA4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_55B0C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:));
}

uint64_t sub_55AD8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_55B0C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:paginatedItems:_:));
}

uint64_t sub_55B0C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v21 = type metadata accessor for MediaItemDisambiguationStrategy( 0LL,  *(void *)(a10 + 80),  *(void *)(a10 + 88),  a4);
  return a12(a1, a2, a3, a4, a5, a6, a7, a8, a9, v21, a11);
}

uint64_t sub_55BB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_55C18( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makePromptForDeviceUnlock(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:));
}

uint64_t sub_55BE8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_55C18( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&NeedsDisambiguationFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:));
}

uint64_t sub_55C18( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v20 = type metadata accessor for MediaItemDisambiguationStrategy(0LL, *(void *)(a9 + 80), *(void *)(a9 + 88), a4);
  return a11(a1, a2, a3, a4, a5, a6, a7, a8, v20, a10);
}

uint64_t sub_55CB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for MediaItemDisambiguationStrategy(0LL, *(void *)(a7 + 80), *(void *)(a7 + 88), a4);
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_55D30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = type metadata accessor for MediaItemDisambiguationStrategy(0LL, *(void *)(a8 + 80), *(void *)(a8 + 88), a4);
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_55DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + sub_6C3C(v0 + 16) = v15;
  uint64_t v17 = type metadata accessor for MediaItemDisambiguationStrategy(0LL, *(void *)(a6 + 80), *(void *)(a6 + 88), v16);
  *uint64_t v15 = v7;
  v15[1] = sub_11C64;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v17, a7);
}

uint64_t sub_55E68( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = v8;
  uint64_t v17 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v15 + sub_6C3C(v0 + 16) = v17;
  uint64_t v19 = type metadata accessor for MediaItemDisambiguationStrategy(0LL, *(void *)(a7 + 80), *(void *)(a7 + 88), v18);
  *uint64_t v17 = v15;
  v17[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v19, a8);
}

uint64_t sub_55F20(uint64_t a1)
{
  return swift_slowAlloc(a1, -1LL);
}

uint64_t sub_55F28(uint64_t result, _BYTE **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_55F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    do
    {
      uint64_t v6 = 0LL;
      while (1)
      {
        id v7 = (a1 & 0xC000000000000001LL) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1)
           : *(id *)(a1 + 8 * v6 + 32);
        uint64_t v8 = v7;
        uint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1LL)) {
          break;
        }
        id v10 = [v7 identifier];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease(a1);
            uint64_t v17 = a3;
            goto LABEL_18;
          }

          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14);
          swift_bridgeObjectRelease(v14);
          if ((v16 & 1) != 0)
          {
            uint64_t v17 = a1;
LABEL_18:
            swift_bridgeObjectRelease(v17);
            return v6;
          }
        }

        ++v6;
        if (v9 == v5) {
          goto LABEL_24;
        }
      }

      __break(1u);
LABEL_20:
      uint64_t v18 = a3;
      if (a1 < 0) {
        uint64_t v19 = a1;
      }
      else {
        uint64_t v19 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a1);
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v19);
      a3 = v18;
      uint64_t v5 = v20;
    }

    while (v20);
  }

uint64_t sub_560D4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((sub_881D0(a1, a2, *(void **)(v4 + 112)) & 1) != 0)
  {
    id v13 = [a3 disambiguationItems];
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, (char *)&type metadata for Any + 8);

    uint64_t v15 = *(void *)(v14 + 16);
    swift_bridgeObjectRelease(v14);
    if (v15
      && (id v16 = [a3 disambiguationItems],
          uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, (char *)&type metadata for Any + 8),
          v16,
          uint64_t v18 = sub_3E6DC(v17),
          swift_bridgeObjectRelease(v17),
          v18))
    {
      uint64_t v19 = sub_6C5C(&qword_284D60);
      swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
      uint64_t v20 = BasicDisambiguationItemContainer.init(_:_:)(v18, 0LL);
      a4(v20, 0LL);
      return swift_release(v20);
    }

    else
    {
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v26 = sub_6960(v9, (uint64_t)qword_2969C8);
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v26, v9);
      uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl( &dword_0,  v28,  v29,  "MediaItemDisambiguationStrategy#makeDisambiguationItemContainer resolutionResult.disambiguationItems not of ty pe [INMediaItem] or empty",  v30,  2u);
        swift_slowDealloc(v30, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v31 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v32 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v33 = swift_allocError(v31, v32, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104LL))( v34,  enum case for PlaybackCode.ceGE29(_:),  v31);
      a4(v33, 1LL);
      return swift_errorRelease(v33);
    }
  }

  else
  {
    uint64_t v22 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v23 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v24 = swift_allocError(v22, v23, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104LL))( v25,  enum case for PlaybackCode.ceGE28(_:),  v22);
    a4(v24, 1LL);
    return swift_errorRelease(v24);
  }

uint64_t sub_5642C( void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *, uint64_t), uint64_t a5, void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v405 = a7;
  os_log_type_t v406 = a6;
  uint64_t v392 = a5;
  uint64_t v401 = a4;
  uint64_t v402 = a2;
  uint64_t v403 = a3;
  uint64_t v385 = a1;
  uint64_t v8 = *v7;
  uint64_t v393 = (void *)type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v395 = (void (**)(void, void, void))*(v393 - 1);
  uint64_t v9 = __chkstk_darwin(v393);
  uint64_t v368 = (char *)v355 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  __n128 v378 = (char *)v355 - v12;
  __chkstk_darwin(v11);
  __n128 v396 = (void *)((char *)v355 - v13);
  uint64_t v14 = type metadata accessor for AudioUsoIntent.UsoNamespace(0LL);
  uint64_t v373 = *(void *)(v14 - 8);
  uint64_t v374 = v14;
  __chkstk_darwin(v14);
  uint64_t v372 = (char *)v355 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v391 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v382 = *(void *)(v391 - 8);
  uint64_t v16 = __chkstk_darwin(v391);
  uint64_t v376 = (char *)v355 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v377 = (char *)v355 - v18;
  uint64_t v19 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v19);
  uint64_t v367 = (uint64_t)v355 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v21);
  BOOL v366 = (char *)v355 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v375 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v365 = *(void *)(v375 - 8);
  uint64_t v23 = __chkstk_darwin(v375);
  v364 = (char *)v355 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v379 = (char *)v355 - v25;
  uint64_t v26 = *(void *)(v8 + 88);
  uint64_t v387 = *(void *)(v8 + 80);
  uint64_t v388 = v26;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
  uint64_t v27 = type metadata accessor for IntentPromptAnswer(0LL);
  uint64_t v383 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v386 = (char *)v355 - v28;
  uint64_t v384 = v29;
  uint64_t v30 = type metadata accessor for DisambiguationResult(255LL);
  uint64_t v31 = sub_45D50(&qword_284010);
  uint64_t v32 = type metadata accessor for Result(0LL, v30, v31, &protocol self-conformance witness table for Error);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (void *)((char *)v355 - v34);
  uint64_t v36 = (uint8_t *)type metadata accessor for Parse(0LL);
  id v37 = (uint64_t (**)(void, void))*((void *)v36 - 1);
  uint64_t v398 = v36;
  os_log_type_t v399 = v37;
  uint64_t v38 = __chkstk_darwin(v36);
  Class v400 = (Class)((char *)v355 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v38);
  uint64_t v394 = (char *)v355 - v40;
  uint64_t v41 = type metadata accessor for Input(0LL);
  uint64_t v42 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v44 = (char *)v355 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v404 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v45 = *(v404 - 1);
  uint64_t v46 = __chkstk_darwin(v404);
  uint64_t v380 = (char *)v355 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = __chkstk_darwin(v46);
  os_log_type_t v381 = (char *)v355 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v369 = (char *)v355 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  __n128 v361 = (char *)v355 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v362 = (char *)v355 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v363 = (char *)v355 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  __n128 v370 = (char *)v355 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v389 = (char *)v355 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v390 = (char *)v355 - v63;
  __chkstk_darwin(v62);
  uint64_t v65 = (char *)v355 - v64;
  if ((sub_881D0(v402, v403, (void *)v7[14]) & 1) == 0)
  {
    uint64_t v89 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v90 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v91 = swift_allocError(v89, v90, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v89 - 8) + 104LL))( v92,  enum case for PlaybackCode.ceGE31(_:),  v89);
    uint64_t *v35 = v91;
    swift_storeEnumTagMultiPayload(v35, v32, 1LL);
    v406(v35);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v33 + 8))(v35, v32);
  }

  uint64_t v402 = v32;
  uint64_t v403 = v33;
  uint64_t v371 = v35;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v66 = (uint64_t)v404;
  uint64_t v67 = sub_6960((uint64_t)v404, (uint64_t)qword_2969C8);
  uint64_t v68 = v45;
  os_log_type_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  uint64_t v359 = v67;
  unint64_t v360 = v69;
  ((void (*)(char *))v69)(v65);
  uint64_t v70 = v41;
  uint64_t v71 = (*(uint64_t (**)(char *, void, uint64_t))(v42 + 16))(v44, v401, v41);
  uint64_t v72 = (os_log_s *)Logger.logObject.getter(v71);
  os_log_type_t v73 = static os_log_type_t.info.getter(v72);
  if (os_log_type_enabled(v72, v73))
  {
    os_log_t v358 = v72;
    uint64_t v74 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v75 = swift_slowAlloc(32LL, -1LL);
    uint64_t v357 = v75;
    uint64_t v414 = (void *)v75;
    *(_DWORD *)uint64_t v74 = 136315138;
    v355[1] = v74 + 4;
    os_log_type_t v356 = v74;
    unint64_t v76 = v394;
    Input.parse.getter(v75);
    uint64_t v77 = v76;
    uint64_t v78 = v68;
    unint64_t v79 = v398;
    uint64_t v80 = String.init<A>(describing:)(v77, v398);
    unint64_t v82 = v81;
    uint64_t v412 = sub_6978(v80, v81, (uint64_t *)&v414);
    uint64_t v66 = (uint64_t)v404;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v412, &v413);
    swift_bridgeObjectRelease(v82);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v70);
    os_log_t v83 = v358;
    uint64_t v84 = v356;
    _os_log_impl(&dword_0, v358, v73, "MediaItemDisambiguationStrategy#parseDisambiguationResult parse:%s", v356, 0xCu);
    uint64_t v85 = v357;
    swift_arrayDestroy(v357, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1LL, -1LL);
    uint64_t v86 = v406;
    swift_slowDealloc(v84, -1LL, -1LL);

    uint64_t v87 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
    uint64_t v88 = v87(v65, v66);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);

    uint64_t v87 = *(uint64_t (**)(char *, uint64_t))(v68 + 8);
    uint64_t v88 = v87(v65, v66);
    uint64_t v86 = v406;
    unint64_t v79 = v398;
  }

  p_Class isa = (void **)&v400->isa;
  Input.parse.getter(v88);
  unint64_t v95 = v399;
  int v96 = ((uint64_t (**)(void **, uint8_t *))v399)[11](p_isa, v79);
  uint64_t v97 = v79;
  if (v96 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v98 = v86;
    ((uint64_t (**)(void **, uint8_t *))v95)[12](p_isa, v97);
    uint64_t v99 = sub_6C5C(&qword_284618);
    uint64_t v100 = *(uint64_t (**)(char *, char *, uint64_t))((char *)p_isa + *(int *)(v99 + 48));
    uint64_t v101 = (uint64_t (**)(void, void))Parse.ServerConversion.siriKitIntent.getter(v99);
    uint64_t v102 = swift_dynamicCastUnknownClass(v101, AssociatedTypeWitness);
    if (v102)
    {
      uint64_t v103 = v102;
      os_log_type_t v399 = v101;
      uint64_t v401 = v100;
      uint64_t v104 = sub_6C5C(&qword_284D48);
      uint64_t v105 = PaginatedItemContainer.items.getter(v104);
      __chkstk_darwin(v105);
      uint64_t v106 = v388;
      v355[-4] = v387;
      v355[-3] = v106;
      v355[-2] = v103;
      sub_3F298((uint64_t (*)(void *))sub_59CCC, (uint64_t)&v355[-6], v105);
      uint64_t v108 = v107;
      swift_bridgeObjectRelease(v105);
      if (v108)
      {
        v360(v390, v359, v66);
        uint64_t v109 = v108;
        uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
        os_log_type_t v111 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v110, v111))
        {
          uint64_t v112 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          __n128 v396 = (void *)swift_slowAlloc(8LL, -1LL);
          uint64_t v398 = v112;
          *(_DWORD *)uint64_t v112 = 138412290;
          uint64_t v394 = (char *)v87;
          uint64_t v414 = v109;
          uint64_t v113 = v109;
          uint64_t v87 = (uint64_t (*)(char *, uint64_t))v394;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v414, v415);
          uint64_t v114 = v396;
          *__n128 v396 = v108;

          uint64_t v115 = v398;
          _os_log_impl( &dword_0,  v110,  v111,  "MediaItemDisambiguationStrategy#parseDisambiguationResult Updating media items with match: %@",  v398,  0xCu);
          uint64_t v116 = sub_6C5C((uint64_t *)&unk_286BC0);
          swift_arrayDestroy(v114, 1LL, v116);
          swift_slowDealloc(v114, -1LL, -1LL);
          swift_slowDealloc(v115, -1LL, -1LL);
        }

        else
        {

          uint64_t v110 = (os_log_s *)v109;
        }

        uint64_t v198 = v383;

        v87(v390, (uint64_t)v404);
        uint64_t v199 = sub_6C5C(&qword_287980);
        uint64_t v200 = swift_allocObject(v199, 40LL, 7LL);
        *(_OWORD *)(v200 + sub_6C3C(v0 + 16) = xmmword_214980;
        *(void *)(v200 + 3sub_6C3C(v0 + 2) = v109;
        uint64_t v414 = (void *)v200;
        specialized Array._endMutation()(v200);
        uint64_t v201 = (uint64_t)v414;
        BOOL v202 = v109;
        uint64_t v203 = v385;
        sub_683D8(v201, 1);
        swift_bridgeObjectRelease(v201);
        uint64_t v204 = v399;
        id v205 = sub_68344();

        sub_68144((uint64_t)v205);
        uint64_t v416 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
        uint64_t v414 = v202;
        uint64_t v206 = v202;
        id v207 = v203;
        unint64_t v208 = v386;
        IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v414, v207, AssociatedTypeWitness);
        uint64_t v209 = v371;
        uint64_t v210 = v384;
        static DisambiguationResult.chosenItem(_:)(v208, v384);
        (*(void (**)(char *, uint64_t))(v198 + 8))(v208, v210);
        uint64_t v211 = v402;
        swift_storeEnumTagMultiPayload(v209, v402, 0LL);
        v406(v209);

        swift_release(v401);
        (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v209, v211);
      }

      else
      {
        uint64_t v192 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v193 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v194 = swift_allocError(v192, v193, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v192 - 8) + 104LL))( v195,  enum case for PlaybackCode.ceGE33(_:),  v192);
        uint64_t v196 = v371;
        *uint64_t v371 = v194;
        uint64_t v197 = v402;
        swift_storeEnumTagMultiPayload(v196, v402, 1LL);
        v98(v196);

        swift_release(v401);
        (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v196, v197);
      }

      uint64_t v212 = type metadata accessor for NLIntent(0LL);
      return (*(uint64_t (**)(Class, uint64_t))(*(void *)(v212 - 8) + 8LL))(v400, v212);
    }

    else
    {
      unsigned __int8 v170 = (uint64_t (*)(void, void, void))v100;

      uint64_t v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v360)(v389, v359, v66);
      id v172 = (os_log_s *)Logger.logObject.getter(v171);
      os_log_type_t v173 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v172, v173))
      {
        id v174 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v174 = 0;
        _os_log_impl( &dword_0,  v172,  v173,  "MediaItemDisambiguationStrategy#parseDisambiguationResult Ignorning non-server-conversion parse",  v174,  2u);
        swift_slowDealloc(v174, -1LL, -1LL);
      }

      v87(v389, v66);
      uint64_t v175 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v176 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v177 = swift_allocError(v175, v176, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v175 - 8) + 104LL))( v178,  enum case for PlaybackCode.ceGE32(_:),  v175);
      unint64_t v179 = v371;
      *uint64_t v371 = v177;
      uint64_t v180 = v402;
      swift_storeEnumTagMultiPayload(v179, v402, 1LL);
      v98(v179);
      swift_release((uint64_t (*)(char *, char *, uint64_t))v170);
      (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v179, v180);
      uint64_t v181 = type metadata accessor for NLIntent(0LL);
      return (*(uint64_t (**)(void **, uint64_t))(*(void *)(v181 - 8) + 8LL))(p_isa, v181);
    }
  }

  if (v96 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v394 = (char *)v87;
    ((uint64_t (**)(void **, uint8_t *))v95)[12](p_isa, v79);
    uint64_t v117 = (uint64_t)v396;
    ((void (**)(void *, void **, void *))v395)[4](v396, p_isa, v393);
    sub_1CF340(v117, (uint64_t)v409);
    uint64_t v118 = v409[0];
    uint64_t v119 = v409[1];
    char v120 = (void *)v409[2];
    uint64_t v121 = v409[3];
    uint64_t v122 = v409[4];
    uint64_t v123 = v409[5];
    uint64_t v124 = v409[6];
    char v125 = v410;
    sub_45F6C((uint64_t)v409, (uint64_t)v411, &qword_2845F0);
    if (v411[56] != 255)
    {
      sub_45D94((uint64_t)v411, (uint64_t)&v412);
      sub_45D94((uint64_t)&v412, (uint64_t)&v414);
      if (v418 == 3)
      {
        uint64_t v404 = v414;
        uint64_t v401 = (uint64_t (*)(char *, char *, uint64_t))v415[0];
        uint64_t v126 = sub_6C5C(&qword_284D48);
        uint64_t v127 = PaginatedItemContainer.items.getter(v126);
        sub_45EC0(v118, v119, v120, v121, v122, v123, v124, v125);
        sub_55F38(v127, (uint64_t)v404, (uint64_t)v401);
        uint64_t v129 = v128;
        sub_45DD0((uint64_t)v409);
        swift_bridgeObjectRelease(v127);
        sub_45DD0((uint64_t)v409);
        if (v129)
        {
          uint64_t v130 = sub_6C5C(&qword_287980);
          uint64_t v131 = swift_allocObject(v130, 40LL, 7LL);
          *(_OWORD *)(v131 + sub_6C3C(v0 + 16) = xmmword_214980;
          *(void *)(v131 + 3sub_6C3C(v0 + 2) = v129;
          v407[0] = v131;
          specialized Array._endMutation()(v131);
          uint64_t v132 = v407[0];
          id v133 = v129;
          uint64_t v134 = v385;
          sub_683D8(v132, 1);
          swift_bridgeObjectRelease(v132);
          id v135 = [v134 backingStore];
          uint64_t v136 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
          id v137 = (void *)swift_dynamicCastObjCClass(v135, v136);
          uint64_t v138 = v406;
          uint64_t v139 = v402;
          uint64_t v140 = v403;
          uint64_t v141 = v371;
          uint64_t v142 = v393;
          if (v137) {
            [v137 setMediaSearch:0];
          }

          v407[3] = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
          v407[0] = (uint64_t)v133;
          id v143 = v134;
          id v144 = v133;
          os_log_type_t v145 = v386;
          IntentPromptAnswer.init(answeredValue:updatedIntent:)(v407, v143, AssociatedTypeWitness);
          uint64_t v146 = v384;
          static DisambiguationResult.chosenItem(_:)(v145, v384);
          (*(void (**)(char *, uint64_t))(v383 + 8))(v145, v146);
          swift_storeEnumTagMultiPayload(v141, v139, 0LL);
          v138(v141);

          (*(void (**)(uint64_t *, uint64_t))(v140 + 8))(v141, v139);
          return ((uint64_t (*)(void *, void *))v395[1])(v396, v142);
        }

        else
        {
          uint64_t v288 = type metadata accessor for PlaybackCode(0LL);
          uint64_t v289 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
          uint64_t v290 = swift_allocError(v288, v289, 0LL, 0LL);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v288 - 8) + 104LL))( v291,  enum case for PlaybackCode.ceGE38(_:),  v288);
          uint64_t v292 = v371;
          *uint64_t v371 = v290;
          uint64_t v293 = v402;
          swift_storeEnumTagMultiPayload(v292, v402, 1LL);
          v406(v292);
          (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v292, v293);
          return ((uint64_t (*)(void *, void *))v395[1])(v396, v393);
        }
      }

      sub_45DD0((uint64_t)v409);
    }

    uint64_t v213 = v381;
    uint64_t v214 = (uint64_t)v404;
    v360(v381, v359, (uint64_t)v404);
    uint64_t v215 = v395;
    uint64_t v216 = (uint64_t (*)(char *, void *, void *))v395[2];
    uint64_t v217 = v378;
    unint64_t v218 = v393;
    uint64_t v219 = v216(v378, v396, v393);
    uint64_t v220 = (os_log_s *)Logger.logObject.getter(v219);
    os_log_type_t v221 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v220, v221))
    {
      int v222 = v217;
      uint64_t v223 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v224 = swift_slowAlloc(32LL, -1LL);
      v407[0] = v224;
      *(_DWORD *)uint64_t v223 = 136315138;
      uint64_t v401 = (uint64_t (*)(char *, char *, uint64_t))(v223 + 4);
      unint64_t v225 = v368;
      v216(v368, v222, v218);
      uint64_t v226 = String.init<A>(describing:)(v225, v218);
      unint64_t v228 = v227;
      uint64_t v408 = sub_6978(v226, v227, v407);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v408, v409);
      swift_bridgeObjectRelease(v228);
      uint64_t v229 = (void (*)(char *, void *))v395[1];
      v229(v222, v218);
      _os_log_impl( &dword_0,  v220,  v221,  "AppResolutionStrategy#makeAppResolutionStateFromParse received unsupported directInvocation: %s",  v223,  0xCu);
      swift_arrayDestroy(v224, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v224, -1LL, -1LL);
      swift_slowDealloc(v223, -1LL, -1LL);

      uint64_t v230 = v381;
      uint64_t v231 = (uint64_t)v404;
    }

    else
    {
      uint64_t v229 = (void (*)(char *, void *))v215[1];
      v229(v217, v218);

      uint64_t v230 = v213;
      uint64_t v231 = v214;
    }

    ((void (*)(char *, uint64_t))v394)(v230, v231);
    unint64_t v232 = v406;
    uint64_t v233 = v402;
    uint64_t v234 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v235 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v236 = swift_allocError(v234, v235, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v234 - 8) + 104LL))( v237,  enum case for PlaybackCode.ceGE37(_:),  v234);
    unint64_t v238 = v371;
    *uint64_t v371 = v236;
    swift_storeEnumTagMultiPayload(v238, v233, 1LL);
    v232(v238);
    (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v238, v233);
    return ((uint64_t (*)(void *, void *))v229)(v396, v218);
  }

  uint64_t v147 = v86;
  unint64_t v148 = v371;
  if (v96 != enum case for Parse.pommesResponse(_:))
  {
    uint64_t v182 = ((uint64_t (*)(char *, uint64_t, uint64_t))v360)(v380, v359, v66);
    id v183 = (os_log_s *)Logger.logObject.getter(v182);
    os_log_type_t v184 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v183, v184))
    {
      id v185 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v185 = 0;
      _os_log_impl( &dword_0,  v183,  v184,  "MediaItemDisambiguationStrategy#parseDisambiguationResult Ignorning non-server-conversion parse",  v185,  2u);
      id v186 = v185;
      uint64_t v97 = v398;
      swift_slowDealloc(v186, -1LL, -1LL);
    }

    v87(v380, v66);
    uint64_t v187 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v188 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v189 = swift_allocError(v187, v188, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v187 - 8) + 104LL))( v190,  enum case for PlaybackCode.ceGE39(_:),  v187);
    *unint64_t v148 = v189;
    uint64_t v191 = v402;
    swift_storeEnumTagMultiPayload(v148, v402, 1LL);
    v147(v148);
    (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v148, v191);
    return ((uint64_t (**)(void **, uint8_t *))v399)[1](p_isa, v97);
  }

  ((uint64_t (**)(void **, uint8_t *))v95)[12](p_isa, v97);
  char v149 = *p_isa;
  uint64_t v150 = (void (**)(void, void, void))sub_10470();
  if (!v150)
  {
    uint64_t v239 = ((uint64_t (*)(char *, uint64_t, uint64_t))v360)(v369, v359, v66);
    unint64_t v240 = (os_log_s *)Logger.logObject.getter(v239);
    os_log_type_t v241 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v240, v241))
    {
      uint64_t v242 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v242 = 0;
      _os_log_impl( &dword_0,  v240,  v241,  "MediaItemDisambiguationStrategy#parseDisambiguationResult pommesResponse contains no AudioExperience",  v242,  2u);
      swift_slowDealloc(v242, -1LL, -1LL);
    }

    v87(v369, v66);
    uint64_t v243 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v244 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v245 = swift_allocError(v243, v244, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v243 - 8) + 104LL))( v246,  enum case for PlaybackCode.ceGE34(_:),  v243);
    *unint64_t v148 = v245;
    uint64_t v247 = v402;
    swift_storeEnumTagMultiPayload(v148, v402, 1LL);
    v147(v148);

    return (*(uint64_t (**)(uint64_t *, uint64_t))(v403 + 8))(v148, v247);
  }

  os_log_type_t v399 = (uint64_t (**)(void, void))v149;
  uint64_t v151 = v379;
  uint64_t v395 = v150;
  Experience.userDialogAct.getter(v150);
  uint64_t v152 = v370;
  v360(v370, v359, v66);
  uint64_t v154 = v364;
  uint64_t v153 = v365;
  uint64_t v155 = v375;
  uint64_t v401 = *(uint64_t (**)(char *, char *, uint64_t))(v365 + 16);
  uint64_t v156 = v401(v364, v151, v375);
  uint64_t v157 = (os_log_s *)Logger.logObject.getter(v156);
  os_log_type_t v158 = static os_log_type_t.default.getter();
  int v159 = v158;
  BOOL v160 = os_log_type_enabled(v157, v158);
  uint64_t v394 = (char *)v87;
  if (v160)
  {
    LODWORD(v400) = v159;
    uint64_t v161 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v162 = swift_slowAlloc(32LL, -1LL);
    uint64_t v412 = v162;
    uint64_t v398 = v161;
    *(_DWORD *)uint64_t v161 = 136315138;
    type metadata accessor for SiriNLUTypesPrintUtils(0LL);
    uint64_t v416 = v155;
    uint64_t v417 = sub_10430( &qword_284610,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
    uint64_t v163 = (char *)sub_10974(&v414);
    v401(v163, v154, v155);
    uint64_t v164 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v414);
    unint64_t v166 = v165;
    sub_6C3C(&v414);
    uint64_t v414 = (void *)sub_6978(v164, v166, &v412);
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v394;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v414, v415);
    unint64_t v167 = v166;
    uint64_t v66 = (uint64_t)v404;
    swift_bridgeObjectRelease(v167);
    uint64_t v393 = *(void **)(v153 + 8);
    ((void (*)(char *, uint64_t))v393)(v154, v155);
    uint64_t v168 = v398;
    _os_log_impl( &dword_0,  v157,  (os_log_type_t)v400,  "MediaItemDisambiguationStrategy#parseDisambiguationResult pommesResponse userDialogAct: %s",  v398,  0xCu);
    swift_arrayDestroy(v162, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v162, -1LL, -1LL);
    swift_slowDealloc(v168, -1LL, -1LL);

    uint64_t v169 = v370;
  }

  else
  {
    uint64_t v393 = *(void **)(v153 + 8);
    ((void (*)(char *, uint64_t))v393)(v154, v155);

    uint64_t v169 = v152;
  }

  v87(v169, v66);
  uint64_t v248 = sub_6C5C(&qword_284D48);
  uint64_t v249 = PaginatedItemContainer.items.getter(v248);
  uint64_t v250 = (uint64_t (*)(char *, char *, uint64_t))type metadata accessor for AudioUsoIntent(0LL);
  unint64_t v251 = v366;
  v401(v366, v379, v155);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v251, 0LL, 1LL, v155);
  uint64_t v401 = v250;
  uint64_t v252 = AudioUsoIntent.__allocating_init(userDialogAct:)(v251);
  id v253 = v399;
  if (!v252)
  {
    swift_bridgeObjectRelease(v249);
    uint64_t v294 = v361;
    uint64_t v295 = ((uint64_t (*)(char *, uint64_t, uint64_t))v360)(v361, v359, v66);
    uint64_t v296 = (os_log_s *)Logger.logObject.getter(v295);
    os_log_type_t v297 = static os_log_type_t.error.getter();
    BOOL v298 = os_log_type_enabled(v296, v297);
    uint64_t v299 = v371;
    if (v298)
    {
      unint64_t v300 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v300 = 0;
      _os_log_impl( &dword_0,  v296,  v297,  "MediaItemDisambiguationStrategy#parseDisambiguationResult AudioUsoIntent failed to be constructed",  v300,  2u);
      unint64_t v301 = v300;
      uint64_t v294 = v361;
      swift_slowDealloc(v301, -1LL, -1LL);
    }

    v87(v294, v66);
    uint64_t v302 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v303 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v304 = swift_allocError(v302, v303, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v302 - 8) + 104LL))( v305,  enum case for PlaybackCode.ceGE35(_:),  v302);
    *uint64_t v299 = v304;
    uint64_t v306 = v402;
    swift_storeEnumTagMultiPayload(v299, v402, 1LL);
    v406(v299);

    (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v299, v306);
    return ((uint64_t (*)(char *, uint64_t))v393)(v379, v375);
  }

  uint64_t v254 = v252;
  uint64_t v255 = dispatch thunk of AudioUsoIntent.disambiguationEntities.getter();
  uint64_t v256 = v255;
  uint64_t v257 = v371;
  if (!((unint64_t)v255 >> 62))
  {
    uint64_t result = *(void *)((char *)&dword_10 + (v255 & 0xFFFFFFFFFFFFF8LL));
    uint64_t v392 = v254;
    if (result) {
      goto LABEL_46;
    }
LABEL_75:
    swift_bridgeObjectRelease(v256);
    goto LABEL_76;
  }

  if (v255 >= 0) {
    v255 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v255);
  uint64_t v392 = v254;
  if (!result) {
    goto LABEL_75;
  }
LABEL_46:
  if ((v256 & 0xC000000000000001LL) != 0)
  {
    uint64_t v258 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v256);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v256 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return result;
    }

    uint64_t v258 = *(void *)(v256 + 32);
    swift_retain(v258);
  }

  swift_bridgeObjectRelease(v256);
  if (!v258)
  {
LABEL_76:
    uint64_t v307 = v367;
    uint64_t v308 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v382 + 56))(v367, 1LL, 1LL, v391);
    uint64_t v390 = 0LL;
    goto LABEL_77;
  }

  uint64_t v389 = (char *)v249;
  uint64_t v259 = swift_retain(v258);
  uint64_t v260 = dispatch thunk of CodeGenBase.usoIdentifiers.getter(v259);
  uint64_t v390 = (char *)v258;
  swift_release(v258);
  uint64_t v261 = *(void *)(v260 + 16);
  if (!v261)
  {
LABEL_69:
    uint64_t v307 = v367;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v382 + 56))(v367, 1LL, 1LL, v391);
    uint64_t v308 = swift_bridgeObjectRelease(v260);
    goto LABEL_71;
  }

  unint64_t v262 = v260 + ((*(unsigned __int8 *)(v382 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v382 + 80));
  LODWORD(v39sub_6C3C(v0 + 8) = enum case for AudioUsoIntent.UsoNamespace.identifier(_:);
  Class v400 = *(Class *)(v382 + 72);
  unint64_t v263 = *(void **)(v382 + 16);
  uint64_t v388 = v260;
  swift_bridgeObjectRetain(v260);
  uint64_t v264 = v391;
  BOOL v266 = v376;
  char v265 = v377;
  __n128 v396 = v263;
  while (1)
  {
    uint64_t v269 = ((uint64_t (*)(char *, unint64_t, uint64_t))v263)(v265, v262, v264);
    uint64_t v270 = UsoIdentifier.appBundleId.getter(v269);
    uint64_t v272 = v271;
    uint64_t v273 = static AudioUsoIntent.pegasusAppBundle.getter(v270);
    uint64_t v275 = v274;
    if (v270 == v273 && v272 == v274)
    {
      swift_bridgeObjectRelease_n(v272, 2LL);
      uint64_t v276 = ((uint64_t (*)(char *, char *, uint64_t))v263)(v266, v265, v391);
    }

    else
    {
      char v277 = _stringCompareWithSmolCheck(_:_:expecting:)(v270, v272);
      swift_bridgeObjectRelease(v272);
      swift_bridgeObjectRelease(v275);
      uint64_t v264 = v391;
      uint64_t v276 = ((uint64_t (*)(char *, char *, uint64_t))v263)(v266, v265, v391);
      if ((v277 & 1) == 0) {
        goto LABEL_63;
      }
    }

    uint64_t v278 = UsoIdentifier.namespace.getter(v276);
    uint64_t v280 = v279;
    os_log_type_t v281 = v372;
    uint64_t v282 = v373;
    uint64_t v283 = v374;
    uint64_t v284 = (*(uint64_t (**)(char *, void, uint64_t))(v373 + 104))(v372, v398, v374);
    uint64_t v285 = AudioUsoIntent.UsoNamespace.rawValue.getter(v284);
    uint64_t v287 = v286;
    (*(void (**)(char *, uint64_t))(v282 + 8))(v281, v283);
    if (!v280)
    {
      swift_bridgeObjectRelease(v287);
      uint64_t v264 = v391;
      BOOL v266 = v376;
      char v265 = v377;
      unint64_t v263 = v396;
LABEL_63:
      BOOL v268 = *(void (**)(char *, uint64_t))(v382 + 8);
      v268(v266, v264);
      goto LABEL_53;
    }

    if (v278 == v285 && v280 == v287) {
      break;
    }
    char v267 = _stringCompareWithSmolCheck(_:_:expecting:)(v278, v280);
    swift_bridgeObjectRelease(v280);
    swift_bridgeObjectRelease(v287);
    BOOL v268 = *(void (**)(char *, uint64_t))(v382 + 8);
    BOOL v266 = v376;
    uint64_t v264 = v391;
    v268(v376, v391);
    char v265 = v377;
    unint64_t v263 = v396;
    if ((v267 & 1) != 0) {
      goto LABEL_70;
    }
LABEL_53:
    v268(v265, v264);
    v262 += (unint64_t)v400;
    if (!--v261)
    {
      uint64_t v260 = v388;
      swift_bridgeObjectRelease(v388);
      uint64_t v66 = (uint64_t)v404;
      uint64_t v257 = v371;
      id v253 = v399;
      goto LABEL_69;
    }
  }

  swift_bridgeObjectRelease(v280);
  swift_bridgeObjectRelease(v287);
  uint64_t v264 = v391;
  (*(void (**)(char *, uint64_t))(v382 + 8))(v376, v391);
  char v265 = v377;
LABEL_70:
  uint64_t v309 = v388;
  swift_bridgeObjectRelease(v388);
  uint64_t v310 = v382;
  uint64_t v307 = v367;
  (*(void (**)(uint64_t, char *, uint64_t))(v382 + 32))(v367, v265, v264);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v310 + 56))(v307, 0LL, 1LL, v264);
  uint64_t v308 = swift_bridgeObjectRelease(v309);
  uint64_t v66 = (uint64_t)v404;
  uint64_t v257 = v371;
  id v253 = v399;
LABEL_71:
  uint64_t v249 = (uint64_t)v389;
LABEL_77:
  __chkstk_darwin(v308);
  v355[-2] = v307;
  sub_3F298((uint64_t (*)(void *))sub_59CB0, (uint64_t)&v355[-4], v249);
  uint64_t v311 = v249;
  unint64_t v313 = v312;
  swift_bridgeObjectRelease(v311);
  if (v313)
  {
    Class v314 = sub_147BD8(v392, v313);
    unint64_t v315 = v363;
    v360(v363, v359, v66);
    uint64_t v316 = v313;
    unint64_t v317 = (os_log_s *)Logger.logObject.getter(v316);
    os_log_type_t v318 = static os_log_type_t.default.getter();
    BOOL v319 = os_log_type_enabled(v317, v318);
    uint64_t v401 = v316;
    if (v319)
    {
      uint64_t v320 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      unint64_t v321 = (void *)swift_slowAlloc(8LL, -1LL);
      Class v400 = v314;
      *(_DWORD *)uint64_t v320 = 138412290;
      uint64_t v414 = v316;
      uint64_t v322 = v316;
      Class v314 = v400;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v414, v415);
      *unint64_t v321 = v313;

      _os_log_impl( &dword_0,  v317,  v318,  "MediaItemDisambiguationStrategy#parseDisambiguationResult Updating media items with match: %@",  v320,  0xCu);
      uint64_t v323 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v321, 1LL, v323);
      id v324 = v321;
      unint64_t v315 = v363;
      swift_slowDealloc(v324, -1LL, -1LL);
      swift_slowDealloc(v320, -1LL, -1LL);
    }

    else
    {

      unint64_t v317 = (os_log_s *)v316;
    }

    unint64_t v330 = v362;

    uint64_t v331 = (uint64_t)v404;
    ((void (*)(char *, void *))v394)(v315, v404);
    v360(v330, v359, v331);
    __n128 v332 = v314;
    uint64_t v333 = (os_log_s *)Logger.logObject.getter(v332);
    os_log_type_t v334 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v333, v334))
    {
      os_log_type_t v335 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v336 = (objc_class **)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)os_log_type_t v335 = 138412290;
      uint64_t v414 = &v332->isa;
      uint64_t v337 = v332;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v414, v415);
      *uint64_t v336 = v332;

      _os_log_impl( &dword_0,  v333,  v334,  "MediaItemDisambiguationStrategy#parseDisambiguationResult Updating media search with: %@",  v335,  0xCu);
      uint64_t v338 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v336, 1LL, v338);
      unint64_t v339 = v336;
      unint64_t v330 = v362;
      swift_slowDealloc(v339, -1LL, -1LL);
      swift_slowDealloc(v335, -1LL, -1LL);
    }

    else
    {
    }

    unint64_t v340 = v406;
    uint64_t v341 = v402;
    uint64_t v343 = v384;
    unint64_t v342 = v385;
    uint64_t v344 = v383;
    ((void (*)(char *, void *))v394)(v330, v404);
    uint64_t v345 = sub_6C5C(&qword_287980);
    uint64_t v346 = swift_allocObject(v345, 40LL, 7LL);
    *(_OWORD *)(v346 + sub_6C3C(v0 + 16) = xmmword_214980;
    os_log_type_t v347 = v401;
    *(void *)(v346 + 3sub_6C3C(v0 + 2) = v401;
    uint64_t v414 = (void *)v346;
    specialized Array._endMutation()(v346);
    uint64_t v348 = (uint64_t)v414;
    uint64_t v349 = v347;
    sub_683D8(v348, 1);
    swift_bridgeObjectRelease(v348);
    uint64_t v350 = v332;
    sub_68144((uint64_t)v332);

    uint64_t v416 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v414 = v349;
    id v351 = v342;
    __n128 v352 = v349;
    uint64_t v353 = v386;
    IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v414, v351, AssociatedTypeWitness);
    uint64_t v354 = v371;
    static DisambiguationResult.chosenItem(_:)(v353, v343);
    (*(void (**)(char *, uint64_t))(v344 + 8))(v353, v343);
    swift_storeEnumTagMultiPayload(v354, v341, 0LL);
    v340(v354);

    swift_release(v390);
    swift_release(v392);
    (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v354, v341);
    ((void (*)(char *, uint64_t))v393)(v379, v375);
    return sub_1F6CC(v367, &qword_284900);
  }

  else
  {
    uint64_t v325 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v326 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v327 = swift_allocError(v325, v326, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v325 - 8) + 104LL))( v328,  enum case for PlaybackCode.ceGE36(_:),  v325);
    *uint64_t v257 = v327;
    uint64_t v329 = v402;
    swift_storeEnumTagMultiPayload(v257, v402, 1LL);
    v406(v257);

    swift_release(v390);
    swift_release(v392);
    (*(void (**)(uint64_t *, uint64_t))(v403 + 8))(v257, v329);
    ((void (*)(char *, uint64_t))v393)(v379, v375);
    return sub_1F6CC(v307, &qword_284900);
  }

uint64_t sub_585F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a6;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v51 = a2;
  uint64_t v46 = *v7;
  uint64_t v11 = sub_6C5C(&qword_284D48);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  __chkstk_darwin(v11);
  uint64_t v44 = v12;
  uint64_t v45 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v42 = a5;
    uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v55 = v22;
    uint64_t v41 = v14;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v43 = a1;
    uint64_t v23 = static Insights.responseFramework.getter(v22);
    unint64_t v25 = v24;
    uint64_t v54 = sub_6978(v23, v24, &v55);
    a1 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    unint64_t v26 = v25;
    a5 = v42;
    swift_bridgeObjectRelease(v26);
    _os_log_impl( &dword_0,  v19,  v20,  "MediaItemDisambiguationStrategy#promptForDisambiguationWithRF... %{public}s",  v21,  0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v13);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  uint64_t v27 = v50;
  uint64_t v28 = *(void *)(v50 + 24);
  uint64_t v30 = v47;
  uint64_t v29 = v48;
  uint64_t v31 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v45, a5, v48);
  uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = (v32 + 72) & ~v32;
  uint64_t v34 = (char *)swift_allocObject(&unk_26C348, v33 + v44, v32 | 7);
  uint64_t v35 = v46;
  *((void *)v34 + sub_6C3C(v0 + 2) = *(void *)(v46 + 80);
  *((void *)v34 + sub_6C3C(v0 + 3) = *(void *)(v35 + 88);
  *((void *)v34 + sub_6C3C(v0 + 4) = v27;
  uint64_t v36 = v51;
  *((void *)v34 + sub_6C3C(v0 + 5) = a1;
  *((void *)v34 + 6) = v36;
  *((void *)v34 + sub_6C3C(v0 + 7) = v49;
  *((void *)v34 + sub_6C3C(v0 + 8) = a7;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v34[v33], v31, v29);
  id v37 = *(void (**)(uint64_t, uint64_t, uint64_t, id, void (*)(uint64_t), char *))(*(void *)v28 + 232LL);
  swift_retain(v27);
  swift_retain(a1);
  id v38 = v36;
  swift_retain(a7);
  v37(a1, v52, v53, v38, sub_592A0, v34);
  return swift_release(v34);
}

uint64_t sub_58914( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v49 = a8;
  uint64_t v50 = a3;
  uint64_t v46 = a7;
  uint64_t v47 = a2;
  uint64_t v42 = a5;
  uint64_t v51 = a4;
  uint64_t v48 = a1;
  uint64_t v44 = (void *)*v8;
  uint64_t v11 = sub_6C5C(&qword_284D48);
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v45 + 64);
  __chkstk_darwin(v11);
  uint64_t v43 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "MediaItemDisambiguationStrategy#promptForDisambiguationLegacy...", v21, 2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v41 = v9[3];
  uint64_t v22 = v45;
  uint64_t v23 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v43, a6, v11);
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = (v24 + 96) & ~v24;
  unint64_t v26 = (char *)swift_allocObject(&unk_26C2F8, v25 + v12, v24 | 7);
  uint64_t v27 = v44;
  *((void *)v26 + sub_6C3C(v0 + 2) = v44[10];
  uint64_t v29 = v50;
  uint64_t v28 = v51;
  *((void *)v26 + sub_6C3C(v0 + 3) = v27[11];
  *((void *)v26 + sub_6C3C(v0 + 4) = v29;
  uint64_t v30 = v42;
  *((void *)v26 + sub_6C3C(v0 + 5) = v28;
  *((void *)v26 + 6) = v30;
  uint64_t v31 = v11;
  uint64_t v32 = v48;
  uint64_t v33 = v49;
  *((void *)v26 + sub_6C3C(v0 + 7) = v9;
  *((void *)v26 + sub_6C3C(v0 + 8) = v32;
  uint64_t v44 = v9;
  uint64_t v34 = v46;
  uint64_t v35 = v47;
  *((void *)v26 + sub_6C3C(v0 + 9) = v47;
  *((void *)v26 + 10) = v34;
  *((void *)v26 + 11) = v33;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v26[v25], v23, v31);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, id, uint64_t (*)(uint64_t), char *))(*(void *)v41 + 232LL);
  swift_bridgeObjectRetain(v28);
  id v37 = v30;
  swift_retain(v44);
  swift_retain(v32);
  id v38 = v35;
  swift_retain(v33);
  v36(v32, v29, v28, v38, sub_58FD0, v26);
  return swift_release(v26);
}

uint64_t sub_58BB0( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v42 = a4;
  uint64_t v43 = a6;
  uint64_t v39 = a5;
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  id v18 = a2;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.info.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    uint64_t v37 = a7;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = a8;
    uint64_t v24 = v23;
    uint64_t v36 = v14;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v44 = (uint64_t)v18;
    uint64_t v45 = v23;
    v35[1] = v22 + 4;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, AssociatedTypeWitness);
    uint64_t v27 = sub_BBD38((uint64_t)&v44, AssociatedTypeWitness, WitnessTable);
    unint64_t v29 = v28;
    uint64_t v44 = sub_6978(v27, v28, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);

    swift_bridgeObjectRelease(v29);
    _os_log_impl( &dword_0,  v19,  v20,  "MediaItemDisambiguationStrategy#makePromptForDisambiguation intent: %s",  v22,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v30 = v24;
    a8 = v38;
    swift_slowDealloc(v30, -1LL, -1LL);
    uint64_t v31 = v22;
    a7 = v37;
    swift_slowDealloc(v31, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v13);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  uint64_t v32 = v9[12];
  uint64_t v33 = v9[13];
  sub_6EA8(v9 + 9, v32);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v32, v33) & 1) != 0) {
    return sub_585F4(v40, v18, v41, v42, v43, a7, a8);
  }
  else {
    return sub_58914(v40, v18, v41, v42, v39, v43, a7, a8);
  }
}

uint64_t sub_58E78(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for MediaItemDisambiguationStrategy<A>, a1);
}

uint64_t sub_58E88(uint64_t a1)
{
  v2[0] = (char *)&value witness table for () + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = "(";
  v2[4] = "(";
  void v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v2[6] = "(";
  v2[7] = &unk_2152F8;
  return swift_initClassMetadata2(a1, 0LL, 8LL, v2, a1 + 96);
}

uint64_t type metadata accessor for MediaItemDisambiguationStrategy( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MediaItemDisambiguationStrategy);
}

uint64_t sub_58F0C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_58F30()
{
  uint64_t v1 = sub_6C5C(&qword_284D48);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));

  swift_release(*(void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_58FD0(uint64_t a1)
{
  return sub_53134( a1,  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 72),  *(void (**)(void *))(v1 + 80),  *(void *)(v1 + 88));
}

void sub_59030(void **a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_5904C()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));

  swift_release(*(void *)(v0 + 88));
  uint64_t v10 = v0 + v4;
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);

  uint64_t v12 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_5916C(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  return sub_53A04( a1,  v4,  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void **)(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 72),  *(void (**)(__int128 *))(v2 + 80),  *(void *)(v2 + 88),  v2 + v6,  v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_59210()
{
  uint64_t v1 = sub_6C5C(&qword_284D48);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_592A0(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_284D48) - 8) + 80LL);
  sub_541DC( a1,  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void (**)(char *, char *, uint64_t))(v1 + 48),  *(void (**)(uint64_t *))(v1 + 56),  *(void *)(v1 + 64),  (void *)(v1 + ((v3 + 72) & ~v3)));
}

uint64_t sub_592EC(uint64_t a1, uint64_t a2, void *a3, uint8_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v113 = a5;
  uint64_t v114 = a6;
  uint64_t v104 = a4;
  uint64_t v106 = a1;
  uint64_t v8 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v109 = *(void *)(v8 - 8);
  uint64_t v110 = v8;
  __chkstk_darwin(v8);
  uint64_t v108 = v9;
  uint64_t v118 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v10);
  uint64_t v103 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v111 = *(void *)(v12 - 8);
  uint64_t v112 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v107 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = v14;
  __chkstk_darwin(v13);
  uint64_t v117 = (char *)&v90 - v15;
  uint64_t v94 = type metadata accessor for ResponseMode(0LL);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  id v18 = *(uint64_t (**)(char *, uint64_t))(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v115 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v90 - v21;
  uint64_t v23 = sub_6C5C(&qword_289340);
  uint64_t v100 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v101 = v25;
  uint64_t v102 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v90 - v26;
  uint64_t v28 = type metadata accessor for TemplatingResult(0LL);
  unint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16LL);
  uint64_t v99 = v28;
  uint64_t v98 = v29;
  ((void (*)(char *, uint64_t))v29)(v27, a2);
  uint64_t v97 = v23;
  uint64_t v30 = *(int *)(v23 + 48);
  uint64_t v116 = v27;
  *(void *)&v27[v30] = a3;
  uint64_t v31 = qword_283888;
  id v96 = a3;
  if (v31 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v32 = sub_6960(v17, (uint64_t)qword_2969C8);
  uint64_t v33 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v18 + 2);
  uint64_t v34 = v33(v22, v32, v17);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v91 = v18;
    uint64_t v39 = v38;
    v120[0] = v38;
    uint64_t v95 = v17;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v40 = static Insights.responseFramework.getter(v38);
    uint64_t v41 = v33;
    unint64_t v43 = v42;
    uint64_t v119 = sub_6978(v40, v42, v120);
    uint64_t v17 = v95;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120);
    unint64_t v44 = v43;
    uint64_t v33 = v41;
    swift_bridgeObjectRelease(v44);
    _os_log_impl(&dword_0, v35, v36, "MediaItemDisambiguationStrategy#clarificationOutput... %{public}s", v37, 0xCu);
    swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);

    uint64_t v45 = (uint64_t (*)(char *, uint64_t))*((void *)v91 + 1);
  }

  else
  {

    uint64_t v45 = (uint64_t (*)(char *, uint64_t))*((void *)v18 + 1);
  }

  uint64_t v46 = v45(v22, v17);
  uint64_t v47 = static SiriEnvironmentWrapper.retrieve()(v46);
  if (!v47)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v47 = static SiriEnvironment.default.getter();
  }

  uint64_t v48 = v47;
  v33(v115, v32, v17);
  uint64_t v49 = swift_retain_n(v48, 2LL);
  uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.info.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = v17;
    uint64_t v53 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v54 = swift_slowAlloc(32LL, -1LL);
    v120[0] = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v90 = v53 + 4;
    uint64_t v55 = SiriEnvironment.currentRequest.getter(v54);
    uint64_t v91 = v45;
    uint64_t v56 = v92;
    CurrentRequest.responseMode.getter(v55);
    uint64_t v57 = swift_release(v55);
    uint64_t v58 = ResponseMode.description.getter(v57);
    unint64_t v60 = v59;
    (*(void (**)(char *, uint64_t))(v93 + 8))(v56, v94);
    uint64_t v119 = sub_6978(v58, v60, v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, v120);
    swift_release_n(v48, 2LL);
    swift_bridgeObjectRelease(v60);
    _os_log_impl( &dword_0,  v50,  v51,  "MediaItemDisambiguationStrategy#clarificationOutput with responseMode = %s",  v53,  0xCu);
    swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v53, -1LL, -1LL);

    uint64_t v61 = v91(v115, v52);
  }

  else
  {

    swift_release_n(v48, 2LL);
    uint64_t v61 = v45(v115, v17);
  }

  uint64_t v95 = v48;
  uint64_t v62 = v103;
  static DialogPhase.clarification.getter(v61);
  uint64_t v63 = v97;
  uint64_t v64 = *(int *)(v97 + 48);
  uint64_t v65 = (uint64_t)v102;
  uint64_t v66 = (uint64_t)v116;
  uint64_t v67 = v99;
  uint64_t v68 = v98;
  uint64_t v69 = ((uint64_t (*)(char *, char *, uint64_t))v98)(v102, v116, v99);
  *(void *)(v65 + v6sub_6C3C(v0 + 4) = v96;
  __chkstk_darwin(v69);
  *(&v90 - sub_6C3C(v0 + 4) = v104;
  *(&v90 - sub_6C3C(v0 + 3) = (uint8_t *)v48;
  *(&v90 - sub_6C3C(v0 + 2) = (uint8_t *)v65;
  uint64_t v71 = (char *)v70;
  uint64_t v115 = v71;
  uint64_t v72 = v117;
  OutputGenerationManifest.init(dialogPhase:_:)(v62, sub_45890, &v90 - 6);
  sub_1F6CC(v65, &qword_289340);
  uint64_t v73 = v109;
  uint64_t v74 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v118, v106, v110);
  uint64_t v75 = *(int *)(v63 + 48);
  v68(v65, v66, v67);
  *(void *)(v65 + v7sub_6C3C(v0 + 5) = v71;
  uint64_t v76 = v111;
  uint64_t v77 = v107;
  uint64_t v78 = v72;
  uint64_t v79 = v112;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v107, v78, v112);
  uint64_t v80 = *(unsigned __int8 *)(v73 + 80);
  uint64_t v81 = (v80 + 16) & ~v80;
  uint64_t v82 = *(unsigned __int8 *)(v100 + 80);
  uint64_t v83 = (v108 + v82 + v81) & ~v82;
  uint64_t v84 = *(unsigned __int8 *)(v76 + 80);
  uint64_t v85 = (v101 + v84 + v83) & ~v84;
  uint64_t v86 = swift_allocObject(&unk_26C370, v85 + v105, v80 | v84 | v82 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v86 + v81, v118, v74);
  sub_45F6C(v65, v86 + v83, &qword_289340);
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v86 + v85, v77, v79);
  uint64_t v87 = v115;
  uint64_t v88 = sub_6C5C(&qword_2845C0);
  static Task<>.withCallback<A>(_:operation:)(v113, v114, &unk_284D58, v86, v88);
  swift_release(v95);
  swift_release(v86);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v117, v79);
  return sub_1F6CC((uint64_t)v116, &qword_289340);
}

uint64_t sub_59AC0()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v17 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v8, v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return swift_deallocObject(v0, v17, v14);
}

uint64_t sub_59BDC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_284D54);
  *(void *)(v2 + sub_6C3C(v0 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_11C64;
  return sub_55490(a1, v12, v13, v14);
}

uint64_t sub_59CB0(uint64_t a1)
{
  return sub_52F64(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_59CCC(uint64_t a1)
{
  return sub_52E20(a1) & 1;
}

id sub_59CEC(uint8_t *a1, void *a2)
{
  id v3 = v2;
  id v87 = a2;
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for AudioUsoIntent(0LL);
  uint64_t v88 = a1;
  Experience.userDialogAct.getter();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0LL, 1LL, v5);
  uint64_t v16 = AudioUsoIntent.__allocating_init(userDialogAct:)(v15);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = (void *)sub_5B3C8(v16, 0LL, 0LL);
    uint64_t v19 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    if (swift_dynamicCastObjCClass(v3, v19))
    {
      id v20 = v3;
      id v21 = [v3 backingStore];
      uint64_t v22 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v23 = swift_dynamicCastObjCClass(v21, v22);
      uint64_t v24 = v88;
      if (v23)
      {
LABEL_19:
        uint64_t v46 = (void *)v23;
        id v47 = (id)INIntentSlotValueTransformToMediaSearch(v18);
        [v46 setMediaSearch:v47];

        uint64_t v18 = v21;
        id v21 = v47;
      }
    }

    else
    {
      uint64_t v38 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
      uint64_t v39 = swift_dynamicCastObjCClass(v3, v38);
      uint64_t v24 = v88;
      if (v39)
      {
        id v20 = v3;
        id v21 = [v3 backingStore];
        uint64_t v40 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
        uint64_t v23 = swift_dynamicCastObjCClass(v21, v40);
        if (v23) {
          goto LABEL_19;
        }
      }

      else
      {
        uint64_t v42 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
        if (swift_dynamicCastObjCClass(v3, v42))
        {
          id v20 = v3;
          id v21 = [v3 backingStore];
          uint64_t v43 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
          uint64_t v23 = swift_dynamicCastObjCClass(v21, v43);
          if (v23) {
            goto LABEL_19;
          }
        }

        else
        {
          uint64_t v44 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
          if (!swift_dynamicCastObjCClass(v3, v44)) {
            goto LABEL_21;
          }
          id v20 = v3;
          id v21 = [v3 backingStore];
          uint64_t v45 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
          uint64_t v23 = swift_dynamicCastObjCClass(v21, v45);
          if (v23) {
            goto LABEL_19;
          }
        }
      }
    }

    id v3 = v20;

    uint64_t v18 = v21;
LABEL_21:
    id v48 = v87;

    type metadata accessor for AudioPluginProcessor(0LL);
    uint64_t v49 = AudioPluginProcessor.__allocating_init()();
    uint64_t v50 = (uint8_t *)dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v24, v48);
    swift_release(v49);
    uint64_t v88 = v50;
    id v51 = sub_1C6FCC(v24);
    id v52 = [v3 backingStore];
    uint64_t v53 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
    uint64_t v54 = swift_dynamicCastObjCClass(v52, v53);
    if (v54)
    {
      uint64_t v55 = (void *)v54;
      id v56 = v3;
      id v57 = (id)INIntentSlotValueTransformToPrivateAddMediaIntentData(v51);
      [v55 setPrivateAddMediaIntentData:v57];

      id v51 = v52;
      id v52 = v57;
      id v3 = v56;
    }

    uint64_t v58 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter();
    unint64_t v60 = v59;
    uint64_t v61 = AudioExperience.systemExtensionBundleID.getter();
    unint64_t v63 = v62;
    id v64 = sub_1941C(v58, v60, v61, v62);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v63);
    uint64_t v65 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    if (swift_dynamicCastObjCClass(v3, v65))
    {
      id v66 = [v3 backingStore];
      uint64_t v67 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v68 = (void *)swift_dynamicCastObjCClass(v66, v67);
      if (!v68) {

      }
      [v68 setIntentMetadata:v64];
      uint64_t v69 = (uint64_t)v88;
      goto LABEL_31;
    }

    uint64_t v70 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    if (swift_dynamicCastObjCClass(v3, v70))
    {
      id v71 = [v3 backingStore];
      uint64_t v72 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
      uint64_t v68 = (void *)swift_dynamicCastObjCClass(v71, v72);
      uint64_t v69 = (uint64_t)v88;
      if (!v68) {
LABEL_29:
      }
    }

    else
    {
      uint64_t v79 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      uint64_t v80 = swift_dynamicCastObjCClass(v3, v79);
      uint64_t v69 = (uint64_t)v88;
      if (v80)
      {
        id v71 = [v3 backingStore];
        uint64_t v81 = &OBJC_CLASS____INPBUpdateMediaAffinityIntent;
      }

      else
      {
        uint64_t v82 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        if (!swift_dynamicCastObjCClass(v3, v82))
        {
          uint64_t v68 = v64;
          goto LABEL_31;
        }

        id v71 = [v3 backingStore];
        uint64_t v81 = &OBJC_CLASS____INPBSearchForMediaIntent;
      }

      uint64_t v83 = objc_opt_self(v81);
      uint64_t v68 = (void *)swift_dynamicCastObjCClass(v71, v83);
      if (!v68) {
        goto LABEL_29;
      }
    }

    [v68 setIntentMetadata:v64];

LABEL_31:
    uint64_t v73 = (void *)sub_1C8248(v17, v69);
    id v74 = [v3 backingStore];
    uint64_t v75 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
    uint64_t v76 = (void *)swift_dynamicCastObjCClass(v74, v75);
    if (!v76) {

    }
    [v76 setMediaDestination:v73];
    id v77 = v3;
    swift_release(v17);
    swift_release(v69);
    return v3;
  }

  uint64_t v86 = v8;
  id v87 = v3;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = (uint8_t *)v9;
  uint64_t v26 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v27 = v10;
  uint64_t v28 = v12;
  (*(void (**)(char *, uint64_t, uint8_t *))(v10 + 16))(v12, v26, v25);
  unint64_t v29 = v88;
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v85 = swift_slowAlloc(32LL, -1LL);
    uint64_t v90 = v85;
    uint64_t v88 = v25;
    *(_DWORD *)uint64_t v32 = 136315138;
    v84[1] = v32 + 4;
    uint64_t v33 = v86;
    Experience.userDialogAct.getter();
    uint64_t v34 = String.init<A>(describing:)(v33, v5);
    unint64_t v36 = v35;
    uint64_t v89 = sub_6978(v34, v35, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90);

    swift_bridgeObjectRelease(v36);
    _os_log_impl( &dword_0,  v30,  v31,  "INAddMediaIntent#amend unable to construct AudioUsoIntent from userDialogAct: %s",  v32,  0xCu);
    uint64_t v37 = v85;
    swift_arrayDestroy(v85, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v32, -1LL, -1LL);

    (*(void (**)(char *, uint8_t *))(v27 + 8))(v28, v88);
  }

  else
  {

    (*(void (**)(char *, uint8_t *))(v27 + 8))(v12, v25);
  }

  id v3 = v87;
  id v41 = v87;
  return v3;
}

uint64_t sub_5A4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v35 = type metadata accessor for Parse(0LL);
  uint64_t v31 = *(void *)(v35 - 8);
  uint64_t v1 = __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - v3;
  uint64_t v32 = type metadata accessor for SiriKitConfirmationState(0LL);
  uint64_t v5 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_284D70);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_284D78);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for NLIntent(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for NonTerminalIntentNode(0LL);
  uint64_t v39 = &protocol witness table for NonTerminalIntentNode;
  sub_10974(v37);
  NonTerminalIntentNode.init(name:childNodes:resultIDs:)( 0x6973734169726953LL,  0xED0000746E617473LL,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage);
  uint64_t v18 = type metadata accessor for NLState(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v13, 1LL, 1LL, v18);
  uint64_t v19 = type metadata accessor for MitigatorClassification(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v10, 1LL, 1LL, v19);
  __int16 v29 = 0;
  char v28 = 1;
  __int16 v27 = 1;
  NLIntent.init(rootNode:score:originalInput:allWordsMatched:primary:usingExplicitInput:intentRank:isNERBasedParse:intentID:nlState:mitigatorClassification:strippedVoiceTrigger:isInvalidVoiceTrigger:isSuggested:metaDomainActions:)( v37,  0LL,  1LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  v27,  0LL,  v28,  v13,  v10,  0LL,  0LL,  v29,  _swiftEmptyArrayStorage);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for SiriKitConfirmationState.unset(_:),  v32);
  uint64_t v38 = type metadata accessor for AppResolutionStateProvider(0LL);
  uint64_t v39 = &protocol witness table for AppResolutionStateProvider;
  sub_10974(v37);
  AppResolutionStateProvider.init(appSelectionState:)(0LL);
  uint64_t v20 = type metadata accessor for Parse.ServerConversion(0LL);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v21 = Parse.ServerConversion.init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)( v33,  v7,  _swiftEmptyArrayStorage,  v37);
  uint64_t v22 = *(int *)(sub_6C5C(&qword_284618) + 48);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v4, v17, v14);
  *(void *)&v4[v22] = v21;
  uint64_t v23 = v31;
  uint64_t v24 = v35;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))( v4,  enum case for Parse.NLv3IntentPlusServerConversion(_:),  v35);
  uint64_t v25 = v34;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v4, v24);
  Input.init(parse:)(v25);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_5A874( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t (*a8)(void), uint64_t a9, void *a10, void *a11, uint64_t a12, void *a13)
{
  uint64_t v60 = a5;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v55 - v23;
  if (a4 && !a7)
  {
    uint64_t v58 = a12;
    unint64_t v59 = a13;
    id v57 = a11;
    uint64_t v34 = swift_bridgeObjectRetain(a4);
    uint64_t v35 = static BundleIdentifiers.tvAirPlayBundleIdentifier.getter(v34);
    uint64_t v37 = v36;
    if (v35 == a3 && v36 == a4)
    {
      uint64_t v38 = swift_bridgeObjectRelease(v36);
    }

    else
    {
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4);
      uint64_t v38 = swift_bridgeObjectRelease(v37);
      if ((v39 & 1) == 0) {
        goto LABEL_19;
      }
    }

    if ((static SiriAudioEnvironment.isHomePod.getter(v38) & 1) != 0 && a6)
    {
      id v56 = a8;
      uint64_t v41 = a10[3];
      uint64_t v40 = a10[4];
      sub_6EA8(a10, v41);
      swift_bridgeObjectRetain(a6);
      if ((dispatch thunk of FeatureFlagProviding.isSiriForAirPlayEnabled.getter(v41, v40) & 1) != 0)
      {
        swift_bridgeObjectRelease(a4);
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v42 = sub_6960(v18, (uint64_t)qword_2969C8);
        (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v24, v42, v18);
        uint64_t v43 = swift_bridgeObjectRetain_n(a6, 2LL);
        uint64_t v44 = (void *)Logger.logObject.getter(v43);
        os_log_type_t v45 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled((os_log_t)v44, v45))
        {

          swift_bridgeObjectRelease_n(a6, 2LL);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
          a4 = a6;
          a8 = v56;
          uint64_t v49 = v60;
          goto LABEL_23;
        }

        uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v47 = swift_slowAlloc(32LL, -1LL);
        *(void *)&v62[0] = v47;
        *(_DWORD *)uint64_t v46 = 136315138;
        uint64_t v55 = v46 + 4;
        swift_bridgeObjectRetain(a6);
        uint64_t v61 = sub_6978(v60, a6, (uint64_t *)v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62);
        swift_bridgeObjectRelease_n(a6, 3LL);
        _os_log_impl( &dword_0,  (os_log_t)v44,  v45,  "INAddMediaIntent#applyNowPlayingForAirPlay bundleId is AirPlay, replacing bundleId with representedBundleId %s and may attempt to execute on the device of the requesting user",  v46,  0xCu);
        swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1LL, -1LL);
        swift_slowDealloc(v46, -1LL, -1LL);

        id v48 = *(void (**)(char *, uint64_t))(v19 + 8);
        uint64_t v49 = v60;
        v48(v24, v18);
        a4 = a6;
      }

      else
      {
        swift_bridgeObjectRelease(a6);
        uint64_t v49 = a3;
      }

      a8 = v56;
LABEL_23:
      uint64_t v50 = v57[3];
      uint64_t v51 = v57[4];
      sub_6EA8(v57, v50);
      sub_157C4(v58, (uint64_t)v62);
      id v52 = (void *)swift_allocObject(&unk_26C610, 96LL, 7LL);
      v52[2] = a8;
      v52[3] = a9;
      sub_FF54(v62, (uint64_t)(v52 + 4));
      uint64_t v53 = v59;
      v52[9] = v59;
      v52[10] = v49;
      v52[11] = a4;
      swift_retain(a9);
      id v54 = v53;
      dispatch thunk of NowPlayingProviding.item(completion:)(sub_64F2C, v52, v50, v51);
      return swift_release(v52);
    }

LABEL_19:
    uint64_t v49 = a3;
    goto LABEL_23;
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v25, v18);
  __int16 v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    __int16 v29 = a8;
    uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl( &dword_0,  v27,  v28,  "INAddMediaIntent#applyNowPlayingForAirPlay failed to get bundleId for now playing app",  v30,  2u);
    uint64_t v31 = v30;
    a8 = v29;
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  return a8(v32);
}

  uint64_t v76 = (void *)v70;
  id v77 = (id)INIntentSlotValueTransformToMediaSearch(v59);
  [v76 setMediaSearch:v77];
  swift_release(v48);

LABEL_22:
  (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v46);
  uint64_t v31 = v114;
  uint64_t v32 = v115;
  id v33 = v112;
  uint64_t v34 = v113;
LABEL_23:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v78 = sub_6960(v37, (uint64_t)qword_2969C8);
  uint64_t v79 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v36, v78, v37);
  uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
  uint64_t v81 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v82 = 0;
    _os_log_impl(&dword_0, v80, v81, "ShuffleOnDeviceFlow#execute resolving routes for 3p app", v82, 2u);
    swift_slowDealloc(v82, -1LL, -1LL);
  }

  uint64_t v83 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  Input.parse.getter(v83);
  uint64_t v84 = (uint64_t)v118;
  uint64_t v85 = v119;
  uint64_t v86 = (void *)(v119 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_deviceResolutionProvider);
  id v87 = (void *)(v119 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_encryptionProvider);
  uint64_t v88 = (void *)(v119 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_sharedContextProvider);
  (*(void (**)(void *, uint64_t, uint64_t))(v34 + 16))(v118, v33, v31);
  uint64_t v89 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v90 = (v89 + 48) & ~v89;
  uint64_t v91 = (char *)swift_allocObject(&unk_26ED48, v90 + v117, v89 | 7);
  uint64_t v92 = v31;
  uint64_t v93 = v124;
  *((void *)v91 + sub_6C3C(v0 + 2) = v85;
  *((void *)v91 + sub_6C3C(v0 + 3) = v93;
  *((void *)v91 + sub_6C3C(v0 + 4) = v32;
  uint64_t v94 = v122;
  *((void *)v91 + sub_6C3C(v0 + 5) = v122;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(&v91[v90], v84, v92);
  uint64_t v95 = v86[3];
  uint64_t v123 = v86[4];
  id v96 = sub_6EA8(v86, v95);
  uint64_t v97 = v87[3];
  uint64_t v117 = v87[4];
  uint64_t v118 = v96;
  uint64_t v98 = sub_6EA8(v87, v97);
  uint64_t v100 = v88[3];
  uint64_t v99 = v88[4];
  uint64_t v101 = sub_6EA8(v88, v100);
  swift_retain(v85);
  uint64_t v102 = v93;
  swift_retain(v94);
  uint64_t v105 = v99;
  uint64_t v103 = v125;
  sub_18EDB8( v125,  (uint64_t)v118,  (uint64_t)v98,  (uint64_t)v101,  (void (*)(void))sub_DD728,  (uint64_t)v91,  v102,  v97,  v95,  v100,  v117,  v123,  v105);
  swift_release(v91);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 8))(v103, v121);
}

      v42(v69, v15);
      uint64_t v146 = a1;
      uint64_t v82 = type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
      uint64_t v83 = sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
      uint64_t v84 = v137;
      static ExecuteResponse.complete<A>(next:)(&v146, v82, v83);
      v143(v84);
      return ((uint64_t (**)(char *, uint64_t))v138)[1](v84, v139);
    }

    id v96 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    uint64_t v139 = v13;
    v96(v132, v61, v13);
    uint64_t v97 = objc_allocWithZone(&OBJC_CLASS___AFInstanceContext);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    uint64_t v99 = [v97 initWithEndpointUUID:isa];

    uint64_t v100 = objc_allocWithZone(&OBJC_CLASS___AFPreferences);
    uint64_t v138 = (uint64_t (**)(void, void))v99;
    id v137 = (char *)[v100 initWithInstanceContext:v99];
    if ([v137 mediaPlaybackEnabled])
    {
      uint64_t v101 = (void *)swift_allocObject(&unk_26F200, 72LL, 7LL);
      uint64_t v101[2] = v5;
      v101[3] = v59;
      uint64_t v102 = v134;
      v101[4] = v60;
      v101[5] = v102;
      uint64_t v103 = v5;
      uint64_t v105 = v143;
      uint64_t v104 = v144;
      v101[6] = v143;
      v101[7] = v104;
      char v101[8] = a1;
      swift_retain_n(a1, 2LL);
      swift_retain_n(v103, 2LL);
      uint64_t v106 = v102;
      swift_retain_n(v104, 2LL);
      swift_bridgeObjectRetain_n(v60, 2LL);
      uint64_t v107 = a1;
      uint64_t v108 = v106;
      uint64_t v109 = [v108 hashedRouteUIDs];
      if (v109)
      {
        uint64_t v110 = v109;
        uint64_t v111 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v109, &type metadata for String);

        uint64_t v112 = *(void *)(v103
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider
                         + 24);
        uint64_t v113 = *(void *)(v103
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider
                         + 32);
        sub_6EA8( (void *)(v103 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23ConfirmInterruptionFlow_encryptionProvider),  v112);
        uint64_t v114 = swift_allocObject(&unk_26F228, 32LL, 7LL);
        *(void *)(v114 + sub_6C3C(v0 + 16) = sub_E8414;
        *(void *)(v114 + sub_6C3C(v0 + 24) = v101;
        swift_retain(v101);
        uint64_t v115 = v112;
        uint64_t v104 = v144;
        dispatch thunk of EncryptionProviding.decodeRouteIds(_:completion:)(v111, sub_E8804, v114, v115, v113);
        swift_release(v103);
        swift_release(v101);
        swift_bridgeObjectRelease(v111);
        uint64_t v116 = (void *)v114;
      }

      else
      {
        sub_E2A74((uint64_t)_swiftEmptyArrayStorage, v103, v59, v60, v108, (uint64_t)v105, v104, v107);
        swift_release(v103);
        uint64_t v116 = v101;
      }

      swift_release(v116);

      swift_release(v107);
      swift_release(v104);

      swift_bridgeObjectRelease_n(v60, 2LL);
      return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v132, v139);
    }

    else
    {
      uint64_t v117 = swift_bridgeObjectRelease(v60);
      uint64_t v118 = static os_signpost_type_t.event.getter(v117);
      if (qword_2838D0 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      uint64_t v119 = qword_296AA0;
      char v120 = sub_6C5C((uint64_t *)&unk_289320);
      uint64_t v121 = swift_allocObject(v120, 72LL, 7LL);
      *(_OWORD *)(v121 + sub_6C3C(v0 + 16) = xmmword_214510;
      *(void *)(v121 + 56) = &type metadata for Int;
      *(void *)(v121 + 6sub_6C3C(v0 + 4) = &protocol witness table for Int;
      *(void *)(v121 + 3sub_6C3C(v0 + 2) = 6LL;
      uint64_t v122 = v140;
      static OSSignpostID.exclusive.getter(v121);
      os_signpost(_:dso:log:name:signpostID:_:_:)( v118,  &dword_0,  v119,  "seConfirmInterruption",  21LL,  2LL,  v122,  "status=%d enableTelemetry=YES",  29);
      swift_bridgeObjectRelease(v121);
      (*(void (**)(char *, uint64_t))(v141 + 8))(v122, v142);
      uint64_t v123 = v129;
      uint64_t v124 = v53(v129, v145, v15);
      char v125 = (os_log_s *)Logger.logObject.getter(v124);
      uint64_t v126 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v125, v126))
      {
        uint64_t v127 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v127 = 0;
        _os_log_impl( &dword_0,  v125,  v126,  "ConfirmInterruptionFlow#startLogic Non-WHA request with media playback disabled on local device, returning dis abled playback error dialog...",  v127,  2u);
        swift_slowDealloc(v127, -1LL, -1LL);
      }

      v42(v123, v15);
      sub_E624C(v134, (uint64_t)v143, v144);

      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v132, v139);
    }
  }

  else
  {
    uint64_t v86 = static os_signpost_type_t.event.getter(v56);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    id v87 = qword_296AA0;
    uint64_t v88 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v89 = swift_allocObject(v88, 72LL, 7LL);
    *(_OWORD *)(v89 + sub_6C3C(v0 + 16) = xmmword_214510;
    *(void *)(v89 + 56) = &type metadata for Int;
    *(void *)(v89 + 6sub_6C3C(v0 + 4) = &protocol witness table for Int;
    *(void *)(v89 + 3sub_6C3C(v0 + 2) = 4LL;
    uint64_t v90 = v140;
    static OSSignpostID.exclusive.getter(v89);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v86,  &dword_0,  v87,  "seConfirmInterruption",  21LL,  2LL,  v90,  "status=%d enableTelemetry=YES",  29);
    swift_bridgeObjectRelease(v89);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v90, v142);
    uint64_t v91 = v131;
    uint64_t v92 = v53(v131, v145, v15);
    uint64_t v93 = (os_log_s *)Logger.logObject.getter(v92);
    uint64_t v94 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v95 = 0;
      _os_log_impl( &dword_0,  v93,  v94,  "ConfirmInterruptionFlow#startLogic No endpoint ID was found, checking for proxy group player HomePod...",  v95,  2u);
      swift_slowDealloc(v95, -1LL, -1LL);
    }

    v42(v91, v15);
    return sub_E2FC4(a1, v134, v143, v58);
  }

    uint64_t v76 = v90;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v90, 1LL, 1LL, v87);
    swift_storeEnumTagMultiPayload(v76, v88, 0LL);
    v91(v76);
    return sub_1F6CC(v76, &qword_2866F8);
  }

  (*(void (**)(char *, void, uint64_t))(v13 + 104))( v15,  enum case for SiriAudioActionButtonSnippetRole.standard(_:),  v12);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for SiriAudioActionButtonSnippetStyle.button(_:),  v8);
  uint64_t v30 = v29;
  swift_bridgeObjectRetain(v26);
  uint64_t v31 = v80;
  SiriAudioActionButtonSnippetModel.init(buttonLabel:buttonCommand:buttonRole:buttonStyle:)(v27, v26, v30, v15, v11);
  uint64_t v32 = (uint64_t)v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v83, v31, v82);
  id v33 = enum case for SiriAudioSnippets.actionButton(_:);
  uint64_t v34 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 104))(v32, v33, v34);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
  v36(v32, 0LL, 1LL, v34);
  uint64_t v37 = v87;
  v36(v32 + *(int *)(v87 + 20), 1LL, 1LL, v34);
  uint64_t v38 = (void *)(v32 + *(int *)(v37 + 24));
  void *v38 = 0LL;
  v38[1] = 0LL;
  *(void *)(v32 + *(int *)(v37 + 28)) = 0LL;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  char v39 = v85;
  uint64_t v40 = sub_6960(v85, (uint64_t)qword_2969C8);
  uint64_t v41 = v84;
  uint64_t v42 = v78;
  uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 16))(v78, v40, v39);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v47 = swift_slowAlloc(32LL, -1LL);
    uint64_t v94 = v47;
    uint64_t v79 = v30;
    *(_DWORD *)uint64_t v46 = 136446210;
    id v48 = static Insights.responseFramework.getter(v47);
    uint64_t v50 = v49;
    uint64_t v92 = sub_6978(v48, v49, &v94);
    uint64_t v30 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
    swift_bridgeObjectRelease(v50);
    _os_log_impl( &dword_0,  v44,  v45,  "PlayMediaTVOSSnippetModelProvider#intentPreHandledSnippet returning action button snippet, %{public}s",  v46,  0xCu);
    swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v78, v39);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
  }

  uint64_t v73 = (uint64_t)v83;
  id v74 = v90;
  sub_107DE8((uint64_t)v83, v90);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v74, 0LL, 1LL, v37);
  swift_storeEnumTagMultiPayload(v74, v88, 0LL);
  v91(v74);

  sub_1F6CC(v74, &qword_2866F8);
  sub_107E2C(v73);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v80, v82);
}

    swift_bridgeObjectRelease_n(a2, 2LL);
    uint64_t v51 = v45;
    goto LABEL_20;
  }

  v111(v44, v110, v14);
  id v52 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
  id v54 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v112 = v14;
    uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v56 = swift_slowAlloc(32LL, -1LL);
    v115[0] = v56;
    *(_DWORD *)uint64_t v55 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v114 = sub_6978(a1, a2, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v53,  v54,  "AudioFlowDelegatePlugin#warmup aquired lock for: %s... set warmupRefID to the same",  v55,  0xCu);
    swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v55, -1LL, -1LL);

    uint64_t v58 = v112;
    id v57 = v113;
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    id v57 = v44;
    uint64_t v58 = v14;
  }

  v43(v57, v58);
  id v64 = qword_28B0B0;
  qword_28B0A8 = a1;
  qword_28B0B0 = a2;
  swift_bridgeObjectRelease(v64);
  uint64_t v65 = swift_bridgeObjectRetain(a2);
  id v66 = static os_signpost_type_t.event.getter(v65);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v67 = qword_296AA0;
  uint64_t v68 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v69 = swift_allocObject(v68, 72LL, 7LL);
  *(_OWORD *)(v69 + sub_6C3C(v0 + 16) = xmmword_214510;
  *(void *)(v69 + 56) = &type metadata for String;
  *(void *)(v69 + 6sub_6C3C(v0 + 4) = sub_6DAC();
  *(void *)(v69 + 3sub_6C3C(v0 + 2) = a1;
  *(void *)(v69 + 40) = a2;
  uint64_t v70 = swift_bridgeObjectRetain(a2);
  id v71 = v101;
  static OSSignpostID.exclusive.getter(v70);
  uint64_t v112 = a1;
  os_signpost(_:dso:log:name:signpostID:_:_:)( v66,  &dword_0,  v67,  "audioFlowDelegatePluginWarmupEvent",  34LL,  2LL,  v71,  "refId=%{signpost.telemetry:string1,public}@",  43LL,  2,  v69);
  swift_bridgeObjectRelease(v69);
  uint64_t v111 = (void (*)(char *, uint64_t, uint64_t))a2;
  uint64_t v72 = v100;
  uint64_t v113 = *(char **)(v100 + 8);
  uint64_t v73 = v102;
  id v74 = ((uint64_t (*)(char *, uint64_t))v113)(v71, v102);
  uint64_t v75 = v106;
  Date.init()(v74);
  uint64_t v76 = v103;
  id v77 = v97;
  uint64_t v78 = v107;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v97, v75, v107);
  uint64_t v79 = *(unsigned __int8 *)(v76 + 80);
  uint64_t v80 = (v79 + 16) & ~v79;
  uint64_t v81 = (v96 + v80 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v82 = swift_allocObject(&unk_271F50, v81 + 8, v79 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v82 + v80, v77, v78);
  *(void *)(v82 + v81) = v105;
  OSSignpostID.init(log:)((id)qword_296AA0);
  uint64_t v83 = v99;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v99, v71, v73);
  uint64_t v84 = *(unsigned __int8 *)(v72 + 80);
  uint64_t v85 = (v84 + 33) & ~v84;
  uint64_t v86 = (v98 + v85 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  id v87 = swift_allocObject(&unk_271F78, v86 + 16, v84 | 7);
  *(void *)(v87 + sub_6C3C(v0 + 16) = "audioFlowDelegatePluginWarmup";
  *(void *)(v87 + sub_6C3C(v0 + 24) = 29LL;
  *(_BYTE *)(v87 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v87 + v85, v83, v73);
  uint64_t v88 = (id (**)(uint64_t))(v87 + v86);
  *uint64_t v88 = sub_155210;
  v88[1] = (id (*)(uint64_t))v82;
  uint64_t v89 = swift_retain(v82);
  uint64_t v90 = static os_signpost_type_t.begin.getter(v89);
  LOBYTE(v9sub_6C3C(v0 + 4) = 2;
  os_signpost(_:dso:log:name:signpostID:_:_:)( v90,  &dword_0,  qword_296AA0,  "audioFlowDelegatePluginWarmup",  29LL,  2LL,  v71,  " enableTelemetry=YES ",  21LL,  v94,  &_swiftEmptyArrayStorage);
  uint64_t v91 = swift_allocObject(&unk_271FA0, 32LL, 7LL);
  *(void *)(v91 + sub_6C3C(v0 + 16) = sub_33CC4;
  *(void *)(v91 + sub_6C3C(v0 + 24) = v87;
  swift_retain(v87);
  uint64_t v92 = v109;
  sub_150620((uint64_t)sub_33CB8, v91, v112, (uint64_t)v111, v109, v105);
  swift_release(v87);
  swift_release(v91);
  ((void (*)(char *, uint64_t))v113)(v71, v73);
  swift_release(v82);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v106, v107);
  unint64_t v63 = v92;
  return swift_release(v63);
}

  uint64_t v31 = App.appIdentifier.getter(v17);
  if (v32)
  {
    id v33 = v32;
  }

  else
  {
    uint64_t v31 = 0LL;
    id v33 = 0xE000000000000000LL;
  }

  uint64_t v34 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v31, v33);
  swift_bridgeObjectRelease(v33);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease(v16);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    char v39 = sub_6960(v3, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v39, v3);
    uint64_t v40 = swift_retain(a1);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    uint64_t v42 = static os_log_type_t.info.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v60 = v4;
      uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v43 = 138412290;
      os_log_type_t v45 = App.appIdentifier.getter(v44);
      if (v46)
      {
        uint64_t v47 = v45;
        id v48 = v46;
        uint64_t v49 = sub_6C9C();
        uint64_t v50 = swift_allocError(&type metadata for String, v49, 0LL, 0LL);
        *uint64_t v51 = v47;
        v51[1] = v48;
        id v52 = _swift_stdlib_bridgeErrorToNSError(v50);
        unint64_t v62 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
      }

      else
      {
        unint64_t v62 = 0LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
        id v52 = 0LL;
      }

      *uint64_t v44 = v52;
      swift_release(a1);
      _os_log_impl(&dword_0, v41, v42, "INPlayMediaIntent#PlayNlsContainer false: playing on 3p app %@", v43, 0xCu);
      unint64_t v59 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v44, 1LL, v59);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      uint64_t v4 = v60;
    }

    else
    {

      swift_release(a1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return 0LL;
  }

  uint64_t v35 = *(void *)(v16 + 16);
  if (!v35)
  {
LABEL_27:
    swift_bridgeObjectRelease(v16);
    return 0LL;
  }

  uint64_t v60 = v4;
  uint64_t v36 = sub_6D68();
  uint64_t v37 = (uint64_t *)(v16 + 40);
  while (1)
  {
    uint64_t v38 = *v37;
    unint64_t v62 = *(v37 - 1);
    unint64_t v63 = v38;
    v61[0] = 0xD000000000000010LL;
    v61[1] = 0x80000000002222A0LL;
    if ((StringProtocol.contains<A>(_:)(v61, &type metadata for String, &type metadata for String, v36, v36) & 1) != 0) {
      break;
    }
    v37 += 2;
    if (!--v35) {
      goto LABEL_27;
    }
  }

  swift_bridgeObjectRelease(v16);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v53 = sub_6960(v3, (uint64_t)qword_2969C8);
  id v54 = v60;
  uint64_t v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 16))(v10, v53, v3);
  id v56 = (os_log_s *)Logger.logObject.getter(v55);
  id v57 = static os_log_type_t.info.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v58 = 0;
    _os_log_impl(&dword_0, v56, v57, "INPlayMediaIntent#PlayNlsContainer true", v58, 2u);
    swift_slowDealloc(v58, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v3);
  return &dword_0 + 1;
}

  v41.super.Class isa = 0LL;
LABEL_20:
  id v48 = v32;
  if (v40 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_16B6A0(a23, v40);
  }

  if (a25)
  {
    sub_1641C(0LL, &qword_28D448, &OBJC_CLASS___INMediaSubItem_ptr);
    v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a25);
  }

  else
  {
    v43.super.Class isa = 0LL;
  }

  os_log_type_t v45 = [v47 initWithRecommendationId:v49 assetInfo:v29 sharedUserIdFromPlayableMusicAccount:v30 punchoutURI:v48 requiresSubscription:a9 provi der:v34 isAvailable:a12 isHardBan:a13 bundleId:v36 universalResourceLink:v38 providerAppName:v46 internalSignals:v41.super.isa ampConfidenceScore:a21 am pConfidenceLevel:a22 pegasusMetaData:isa mediaSubItems:v43.super.isa];

  return v45;
}

  id v143 = v193;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v193, v138, v139);
  id v144 = (*(uint64_t (**)(char *, uint64_t))(v137 + 88))(v143, v139);
  if (v144 == enum case for SiriKitConfirmationState.confirmed(_:))
  {
    os_log_type_t v145 = v195;
    uint64_t v146 = v202;
    (*(void (**)(uint64_t, void, uint64_t))(v195 + 104))( v202,  enum case for ConfirmationResponse.confirmed(_:),  v140);
    uint64_t v147 = *(char **)(v145 + 56);
    id v137 = v199;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v147)(v146, 0LL, 1LL, v140);
    unint64_t v148 = v192;
  }

  else
  {
    unint64_t v148 = v192;
    if (v144 == enum case for SiriKitConfirmationState.rejected(_:))
    {
      char v149 = v195;
      uint64_t v150 = v202;
      (*(void (**)(uint64_t, void, uint64_t))(v195 + 104))( v202,  enum case for ConfirmationResponse.rejected(_:),  v140);
      uint64_t v147 = *(char **)(v149 + 56);
      id v137 = v199;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v147)(v150, 0LL, 1LL, v140);
    }

    else
    {
      uint64_t v147 = *(char **)(v195 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v147)(v202, 1LL, 1LL, v140);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v193, v139);
    }
  }

  (*(void (**)(char *, uint64_t))(v137 + 8))(v201, v139);
  swift_bridgeObjectRetain(v148);
  v219._countAndFlagsBits = v198;
  v219._object = v148;
  uint64_t v151 = sub_20C4FC(v219);
  if (v151 != 8)
  {
    BOOL v160 = v151;
    uint64_t v161 = v188;
    v212(v188, v211, v115);
    uint64_t v162 = swift_bridgeObjectRetain_n(v148, 2LL);
    uint64_t v163 = (unint64_t)v148;
    uint64_t v164 = (os_log_s *)Logger.logObject.getter(v162);
    unint64_t v165 = v115;
    unint64_t v166 = static os_log_type_t.default.getter(v164);
    unint64_t v167 = os_log_type_enabled(v164, v166);
    uint64_t v200 = v147;
    if (v167)
    {
      uint64_t v168 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v169 = v161;
      unsigned __int8 v170 = swift_slowAlloc(32LL, -1LL);
      *(void *)&uint64_t v214 = v170;
      *(_DWORD *)uint64_t v168 = 136315138;
      swift_bridgeObjectRetain(v163);
      uint64_t v213 = sub_6978(v198, v163, (uint64_t *)&v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, &v214);
      swift_bridgeObjectRelease_n(v163, 3LL);
      _os_log_impl( &dword_0,  v164,  v166,  "CommonNeedsConfirmationStrategy#parseConfirmationResponse Applying parameter %s in intent",  v168,  0xCu);
      swift_arrayDestroy(v170, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v170, -1LL, -1LL);
      swift_slowDealloc(v168, -1LL, -1LL);

      uint64_t v171 = v169;
    }

    else
    {

      swift_bridgeObjectRelease_n(v163, 2LL);
      uint64_t v171 = v161;
    }

    v210(v171, v165);
    __asm { BR              X10 }
  }

  uint64_t v152 = v190;
  v212(v190, v211, v115);
  uint64_t v153 = swift_bridgeObjectRetain_n(v148, 2LL);
  uint64_t v154 = (unint64_t)v148;
  uint64_t v155 = (os_log_s *)Logger.logObject.getter(v153);
  uint64_t v156 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v155, v156))
  {
    uint64_t v157 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    os_log_type_t v158 = swift_slowAlloc(32LL, -1LL);
    *(void *)&uint64_t v214 = v158;
    *(_DWORD *)uint64_t v157 = 136315138;
    swift_bridgeObjectRetain(v154);
    uint64_t v213 = sub_6978(v198, v154, (uint64_t *)&v214);
    uint64_t v121 = v204;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v213, &v214);
    swift_bridgeObjectRelease_n(v154, 3LL);
    _os_log_impl( &dword_0,  v155,  v156,  "CommonNeedsConfirmationStrategy#parseConfirmationResponse unexpected parameter: %s",  v157,  0xCu);
    swift_arrayDestroy(v158, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v158, -1LL, -1LL);
    swift_slowDealloc(v157, -1LL, -1LL);

    int v159 = v190;
  }

  else
  {

    swift_bridgeObjectRelease_n(v148, 2LL);
    int v159 = v152;
  }

  v210(v159, v115);
  id v172 = type metadata accessor for PlaybackCode(0LL);
  os_log_type_t v173 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  id v174 = swift_allocError(v172, v173, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v172 - 8) + 104LL))( v175,  enum case for PlaybackCode.ceGE54(_:),  v172);
  uint64_t v177 = v206;
  uint64_t v176 = v207;
  *uint64_t v206 = v174;
  swift_storeEnumTagMultiPayload(v177, v176, 1LL);
  v209(v177);
  (*(void (**)(uint64_t *, uint64_t))(v205 + 8))(v177, v176);
  sub_1F6CC(v202, (uint64_t *)&unk_286CC0);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v134, v122);
  return sub_6C3C(&v216);
}

uint64_t sub_5ACF4( uint64_t a1, void (*a2)(void), uint64_t a3, void *a4, void *a5, void (*a6)(char *, uint64_t), unint64_t a7)
{
  uint64_t v73 = a6;
  unint64_t v74 = a7;
  uint64_t v78 = a5;
  uint64_t v79 = a3;
  uint64_t v75 = a4;
  uint64_t v80 = a2;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_284DC8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_284E30);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for NowPlayingInfo(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v72 - v22;
  sub_FF10(a1, (uint64_t)v16, &qword_284E30);
  if (swift_getEnumCaseMultiPayload(v16, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    uint64_t v33 = type metadata accessor for NowPlayingIntent(0LL);
    swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
    uint64_t v34 = sub_B8A00((uint64_t)v21);
    uint64_t v35 = v75[3];
    uint64_t v36 = v75[4];
    sub_6EA8(v75, v35);
    dispatch thunk of AudioIntent.mediaType.getter(v35, v36);
    uint64_t v37 = (uint64_t)&v34[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType];
    swift_beginAccess(&v34[OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType], v81, 33LL, 0LL);
    sub_64F40((uint64_t)v13, v37);
    swift_endAccess(v81);
    uint64_t v38 = swift_retain(v34);
    char v39 = (void *)sub_5FDD4(v38, 0LL, 0LL);
    swift_release(v34);
    uint64_t v40 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v41 = v78;
    uint64_t v42 = swift_dynamicCastObjCClass(v78, v40);
    uint64_t v72 = v17;
    if (v42)
    {
      id v43 = [v41 backingStore];
      uint64_t v44 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v45 = swift_dynamicCastObjCClass(v43, v44);
      if (v45)
      {
        uint64_t v46 = (void *)v45;
        id v47 = (id)INIntentSlotValueTransformToMediaSearch(v39);
        [v46 setMediaSearch:v47];

        char v39 = v43;
        id v43 = v47;
      }

      id v48 = sub_1941C(v73, v74, 0LL, 0LL);
      id v49 = [v41 backingStore];
      uint64_t v50 = &OBJC_CLASS____INPBPlayMediaIntent;
    }

    else
    {
      uint64_t v51 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
      if (swift_dynamicCastObjCClass(v41, v51))
      {
        id v52 = [v41 backingStore];
        uint64_t v53 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
        uint64_t v54 = swift_dynamicCastObjCClass(v52, v53);
        if (v54)
        {
          uint64_t v55 = (void *)v54;
          id v56 = (id)INIntentSlotValueTransformToMediaSearch(v39);
          [v55 setMediaSearch:v56];

          char v39 = v52;
          id v52 = v56;
        }

        id v48 = sub_1941C(v73, v74, 0LL, 0LL);
        id v49 = [v41 backingStore];
        uint64_t v50 = &OBJC_CLASS____INPBAddMediaIntent;
      }

      else
      {
        uint64_t v57 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
        if (swift_dynamicCastObjCClass(v41, v57))
        {
          id v58 = [v41 backingStore];
          uint64_t v59 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
          uint64_t v60 = swift_dynamicCastObjCClass(v58, v59);
          if (v60)
          {
            uint64_t v61 = (void *)v60;
            id v62 = (id)INIntentSlotValueTransformToMediaSearch(v39);
            [v61 setMediaSearch:v62];

            char v39 = v58;
            id v58 = v62;
          }

          id v48 = sub_1941C(v73, v74, 0LL, 0LL);
          id v49 = [v41 backingStore];
          uint64_t v50 = &OBJC_CLASS____INPBUpdateMediaAffinityIntent;
        }

        else
        {
          uint64_t v63 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
          if (!swift_dynamicCastObjCClass(v41, v63))
          {

            id v70 = sub_1941C(v73, v74, 0LL, 0LL);
            id v71 = v80;
LABEL_26:

            v71();
            swift_release(v34);
            return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v17);
          }

          id v64 = [v41 backingStore];
          uint64_t v65 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
          uint64_t v66 = swift_dynamicCastObjCClass(v64, v65);
          if (v66)
          {
            uint64_t v67 = (void *)v66;
            id v68 = (id)INIntentSlotValueTransformToMediaSearch(v39);
            [v67 setMediaSearch:v68];

            char v39 = v64;
            id v64 = v68;
          }

          id v48 = sub_1941C(v73, v74, 0LL, 0LL);
          id v49 = [v41 backingStore];
          uint64_t v50 = &OBJC_CLASS____INPBSearchForMediaIntent;
        }
      }
    }

    uint64_t v69 = objc_opt_self(v50);
    id v70 = (id)swift_dynamicCastObjCClass(v49, v69);
    id v71 = v80;
    if (!v70) {

    }
    objc_msgSend(v70, "setIntentMetadata:", v48, v72);
    uint64_t v17 = v72;
    goto LABEL_26;
  }

  sub_1F6CC((uint64_t)v16, &qword_284E30);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = v77;
  uint64_t v25 = sub_6960(v77, (uint64_t)qword_2969C8);
  uint64_t v26 = v76;
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 16))(v10, v25, v24);
  os_log_type_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl( &dword_0,  v28,  v29,  "INAddMediaIntent#applyNowPlayingForAirPlay failed to get now playing info",  v30,  2u);
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v24);
  return ((uint64_t (*)(uint64_t))v80)(v31);
}

uint64_t sub_5B3C8(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  os_log_t v779 = a3;
  uint64_t v777 = a2;
  uint64_t v4 = type metadata accessor for CommonAudio.Modifier(0LL);
  uint64_t v686 = *(void *)(v4 - 8);
  uint64_t v687 = v4;
  __chkstk_darwin(v4);
  v685 = (char *)&v679 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v760 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v761 = *(void *)(v760 - 8);
  __chkstk_darwin(v760);
  uint64_t v708 = (char *)&v679 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v748 = type metadata accessor for CommonAudio.Noun(0LL);
  uint64_t v730 = *(void *)(v748 - 8);
  __chkstk_darwin(v748);
  char v689 = (char *)&v679 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v723 = sub_6C5C(&qword_284D80);
  __chkstk_darwin(v723);
  uint64_t v747 = (char *)&v679 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_284D88);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v699 = (uint64_t)&v679 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v753 = (uint64_t)&v679 - v13;
  __chkstk_darwin(v12);
  uint64_t v746 = (char *)&v679 - v14;
  uint64_t v764 = type metadata accessor for Logger(0LL);
  uint64_t v763 = *(void *)(v764 - 8);
  __chkstk_darwin(v764);
  uint64_t v759 = (char *)&v679 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v16);
  uint64_t v718 = (uint64_t)&v679 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AudioUsoIntent.UsoNamespace(0LL);
  uint64_t v716 = *(void *)(v18 - 8);
  uint64_t v717 = v18;
  __chkstk_darwin(v18);
  v715 = (char *)&v679 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v724 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v731 = *(void *)(v724 - 8);
  uint64_t v20 = __chkstk_darwin(v724);
  uint64_t v693 = (char *)&v679 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  v682 = (char *)&v679 - v22;
  uint64_t v692 = sub_6C5C(&qword_284D90);
  __chkstk_darwin(v692);
  uint64_t v695 = (uint64_t)&v679 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_284D98);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v709 = (uint64_t)&v679 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v683 = (uint64_t)&v679 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v698 = (uint64_t)&v679 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v736 = (char *)&v679 - v32;
  __chkstk_darwin(v31);
  uint64_t v770 = (uint64_t)&v679 - v33;
  uint64_t v34 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v757 = (char *)&v679 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v782 = sub_6C5C(&qword_284DA0);
  uint64_t v37 = __chkstk_darwin(v782);
  uint64_t v743 = (uint64_t)&v679 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v742 = (char *)&v679 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v729 = (uint64_t)&v679 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  os_log_t v769 = (os_log_t)((char *)&v679 - v44);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v738 = (uint64_t)&v679 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v781 = (os_log_s *)((char *)&v679 - v48);
  uint64_t v49 = __chkstk_darwin(v47);
  v735 = (char *)&v679 - v50;
  __chkstk_darwin(v49);
  os_log_t v783 = (os_log_t)((char *)&v679 - v51);
  os_log_t v772 = (os_log_t)type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v784 = (os_log_s *)*((void *)v772 - 1);
  __chkstk_darwin(v772);
  uint64_t v768 = (char *)&v679 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v754 = sub_6C5C(&qword_284DA8);
  uint64_t v53 = __chkstk_darwin(v754);
  uint64_t v696 = (uint64_t)&v679 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v706 = (uint64_t)&v679 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v703 = (uint64_t)&v679 - v58;
  __chkstk_darwin(v57);
  uint64_t v755 = (uint64_t)&v679 - v59;
  uint64_t v60 = sub_6C5C(&qword_284DB0);
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v697 = (uint64_t)&v679 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v690 = (uint64_t)&v679 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v691 = (uint64_t)&v679 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v684 = (uint64_t)&v679 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v700 = (uint64_t)&v679 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v701 = (uint64_t)&v679 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v713 = (uint64_t)&v679 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v714 = (uint64_t)&v679 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  v745 = (char *)&v679 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v711 = (char *)&v679 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  v771 = (os_log_s *)((char *)&v679 - v82);
  __chkstk_darwin(v81);
  uint64_t v773 = (char *)&v679 - v83;
  uint64_t v84 = sub_6C5C(&qword_284DB8);
  __chkstk_darwin(v84);
  uint64_t v86 = (char *)&v679 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = sub_6C5C(&qword_284DC0);
  __chkstk_darwin(v87);
  uint64_t v89 = (char *)&v679 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = sub_6C5C(&qword_284DC8);
  uint64_t v91 = __chkstk_darwin(v90);
  uint64_t v705 = (uint64_t)&v679 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v707 = (uint64_t)&v679 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  uint64_t v688 = (uint64_t)&v679 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v721 = (uint64_t)&v679 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  uint64_t v740 = (char *)&v679 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  uint64_t v741 = (char *)&v679 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  uint64_t v710 = (uint64_t)&v679 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  uint64_t v702 = (char *)&v679 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v694 = (uint64_t)&v679 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v725 = (uint64_t)&v679 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  uint64_t v726 = (uint64_t)&v679 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  uint64_t v737 = (char *)&v679 - v114;
  uint64_t v115 = __chkstk_darwin(v113);
  v728 = (char *)&v679 - v116;
  uint64_t v117 = __chkstk_darwin(v115);
  uint64_t v720 = (uint64_t)&v679 - v118;
  uint64_t v119 = __chkstk_darwin(v117);
  uint64_t v758 = (uint64_t)&v679 - v120;
  uint64_t v121 = __chkstk_darwin(v119);
  uint64_t v762 = (uint64_t)&v679 - v122;
  uint64_t v123 = __chkstk_darwin(v121);
  v681 = (char *)&v679 - v124;
  uint64_t v125 = __chkstk_darwin(v123);
  uint64_t v712 = (char *)&v679 - v126;
  uint64_t v127 = __chkstk_darwin(v125);
  uint64_t v752 = (uint64_t)&v679 - v128;
  uint64_t v129 = __chkstk_darwin(v127);
  uint64_t v733 = (uint64_t)&v679 - v130;
  uint64_t v131 = __chkstk_darwin(v129);
  uint64_t v719 = (uint64_t)&v679 - v132;
  uint64_t v133 = __chkstk_darwin(v131);
  uint64_t v765 = (uint64_t)&v679 - v134;
  uint64_t v135 = __chkstk_darwin(v133);
  uint64_t v734 = (char *)&v679 - v136;
  uint64_t v137 = __chkstk_darwin(v135);
  uint64_t v704 = (uint64_t)&v679 - v138;
  uint64_t v139 = __chkstk_darwin(v137);
  v774 = (void (**)(os_log_s *, void, uint64_t))((char *)&v679 - v140);
  uint64_t v141 = __chkstk_darwin(v139);
  uint64_t v775 = (void (**)(os_log_s *, void, uint64_t))((char *)&v679 - v142);
  uint64_t v143 = __chkstk_darwin(v141);
  os_log_type_t v145 = (char *)&v679 - v144;
  __chkstk_darwin(v143);
  uint64_t v147 = (char *)&v679 - v146;
  uint64_t v148 = type metadata accessor for AudioUsoIntent(0LL);
  v804[3] = v148;
  v804[4] = (uint64_t)&protocol witness table for AudioUsoIntent;
  v804[0] = a1;
  swift_retain(a1);
  uint64_t v727 = dispatch thunk of AudioIntent.mediaIdentifier.getter(v148, &protocol witness table for AudioUsoIntent);
  v776 = v149;
  dispatch thunk of AudioIntent.targetMediaType.getter(v148, &protocol witness table for AudioUsoIntent);
  uint64_t v150 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v151 = v150(v147, 1LL, v34);
  id v785 = (id)v148;
  uint64_t v778 = v35;
  uint64_t v780 = (uint64_t)v150;
  if (v151 == 1)
  {
    sub_1F6CC((uint64_t)v147, &qword_284DC8);
    dispatch thunk of AudioIntent.mediaType.getter(v148, &protocol witness table for AudioUsoIntent);
    if (v150(v145, 1LL, v34) == 1)
    {
      sub_1F6CC((uint64_t)v145, &qword_284DC8);
      os_log_t v766 = 0LL;
    }

    else
    {
      os_log_t v766 = (os_log_t)sub_20154C();
      (*(void (**)(char *, uint64_t))(v778 + 8))(v145, v34);
    }
  }

  else
  {
    os_log_t v766 = (os_log_t)sub_20154C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v147, v34);
  }

  uint64_t v152 = v760;
  dispatch thunk of AudioIntent.sort.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v153 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v154 = *(void *)(v153 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v89, 1LL, v153) == 1)
  {
    sub_1F6CC((uint64_t)v89, &qword_284DC0);
    os_log_type_t v739 = 0LL;
  }

  else
  {
    os_log_type_t v739 = (void (*)(void, void))sub_201568();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v89, v153);
  }

  id v155 = v785;
  uint64_t v156 = dispatch thunk of AudioIntent.genres.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v751 = sub_14252C(v156);
  swift_bridgeObjectRelease(v156);
  uint64_t v157 = dispatch thunk of AudioIntent.moods.getter(v155, &protocol witness table for AudioUsoIntent);
  uint64_t v158 = dispatch thunk of AudioIntent.activities.getter(v155, &protocol witness table for AudioUsoIntent);
  uint64_t v159 = sub_1C75B0(v157, v158);
  swift_bridgeObjectRelease(v157);
  swift_bridgeObjectRelease(v158);
  BOOL v160 = sub_14252C(v159);
  swift_bridgeObjectRelease(v159);
  uint64_t v161 = sub_F8628((uint64_t)v160);
  uint64_t v722 = 0LL;
  if (v161 == 1)
  {
    uint64_t v162 = static BundleIdentifiers.soundscapes.getter();
    uint64_t v164 = v163;
    if (v779)
    {
      if (v162 == v777 && v163 == v779)
      {
        swift_bridgeObjectRelease(v163);
LABEL_16:
        os_log_t v756 = (os_log_t)sub_7241C(v160);
        os_log_t v779 = v166;
        goto LABEL_18;
      }

      char v165 = _stringCompareWithSmolCheck(_:_:expecting:)(v777, v779);
      swift_bridgeObjectRelease(v164);
      if ((v165 & 1) != 0) {
        goto LABEL_16;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v163);
    }
  }

  os_log_t v756 = 0LL;
  os_log_t v779 = 0LL;
LABEL_18:
  uint64_t v749 = sub_64828(v804[0]);
  dispatch thunk of AudioIntent.reference.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v167 = type metadata accessor for CommonAudio.Reference(0LL);
  uint64_t v168 = *(void *)(v167 - 8);
  int v169 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v168 + 48))(v86, 1LL, v167);
  uint64_t v777 = v34;
  uint64_t v170 = v152;
  if (v169 == 1)
  {
    sub_1F6CC((uint64_t)v86, &qword_284DB8);
    uint64_t v732 = 0LL;
  }

  else
  {
    uint64_t v732 = sub_20184C();
    (*(void (**)(char *, uint64_t))(v168 + 8))(v86, v167);
  }

  uint64_t v171 = sub_6C5C(&qword_284DD0);
  unint64_t v172 = (unint64_t)v784;
  uint64_t v173 = *((void *)v784 + 9);
  uint64_t v174 = swift_allocObject( v171,  ((*((unsigned __int8 *)v784 + 80) + 32LL) & ~(unint64_t)*((unsigned __int8 *)v784 + 80)) + 2 * v173,  *((unsigned __int8 *)v784 + 80) | 7LL);
  uint64_t v175 = sub_142CF0(v174, 2LL);
  uint64_t v177 = v176;
  uint64_t v178 = *(void (**)(uint64_t))(v172 + 104);
  unsigned int v744 = enum case for CommonAudio.Attribute.affinity(_:);
  os_log_t v179 = v772;
  v178(v176);
  uint64_t v767 = v178;
  ((void (*)(uint64_t, void, os_log_t))v178)( v177 + v173,  enum case for CommonAudio.Attribute.recommended(_:),  v179);
  uint64_t v180 = WHAError.rawValue.getter(v175);
  uint64_t v181 = sub_F8628(v180);
  id v182 = v785;
  if (v181) {
    id v183 = sub_147908(v180);
  }
  else {
    id v183 = &_swiftEmptySetSingleton;
  }
  uint64_t v184 = (uint64_t)v773;
  id v185 = v771;
  swift_bridgeObjectRelease(v180);
  char v186 = AudioIntent.hasAnyAttribute(_:)(v183, v182, &protocol witness table for AudioUsoIntent);
  swift_bridgeObjectRelease(v183);
  sub_157C4((uint64_t)v804, (uint64_t)v803);
  v750 = v160;
  if ((v186 & 1) != 0) {
    goto LABEL_25;
  }
  sub_6EA8(v803, v803[3]);
  dispatch thunk of AudioIntent.verb.getter(v182, &protocol witness table for AudioUsoIntent);
  uint64_t v190 = v761;
  uint64_t v191 = v170;
  os_log_type_t v679 = *(void (**)(os_log_s *, void, uint64_t))(v761 + 104);
  v679(v185, enum case for CommonAudio.Verb.start(_:), v170);
  v680 = *(void (**)(os_log_s *, void, uint64_t, uint64_t))(v190 + 56);
  v680(v185, 0LL, 1LL, v170);
  uint64_t v192 = v755;
  uint64_t v193 = v755 + *(int *)(v754 + 48);
  sub_FF10(v184, v755, &qword_284DB0);
  sub_FF10((uint64_t)v185, v193, &qword_284DB0);
  uint64_t v194 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v190 + 48);
  if (v194(v192, 1LL, v191) == 1)
  {
    sub_1F6CC((uint64_t)v185, &qword_284DB0);
    sub_1F6CC(v184, &qword_284DB0);
    int v195 = v194(v193, 1LL, v191);
    uint64_t v196 = (uint64_t)v745;
    if (v195 == 1)
    {
      sub_1F6CC(v755, &qword_284DB0);
LABEL_25:
      sub_6C3C(v803);
      sub_157C4((uint64_t)v804, (uint64_t)v802);
LABEL_26:
      sub_6C3C(v802);
      v745 = (char *)&dword_8;
      id v187 = v785;
      uint64_t v188 = v777;
      os_log_t v189 = v766;
      goto LABEL_49;
    }

    goto LABEL_32;
  }

  uint64_t v197 = v697;
  sub_FF10(v192, v697, &qword_284DB0);
  if (v194(v193, 1LL, v191) == 1)
  {
    sub_1F6CC((uint64_t)v771, &qword_284DB0);
    sub_1F6CC((uint64_t)v773, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v761 + 8))(v197, v191);
    uint64_t v196 = (uint64_t)v745;
LABEL_32:
    sub_1F6CC(v755, &qword_284DA8);
    sub_6C3C(v803);
    sub_157C4((uint64_t)v804, (uint64_t)v802);
    uint64_t v198 = (uint64_t)v711;
    goto LABEL_33;
  }

  uint64_t v206 = v192;
  uint64_t v207 = v197;
  uint64_t v208 = v761;
  uint64_t v209 = v708;
  (*(void (**)(char *, uint64_t, uint64_t))(v761 + 32))(v708, v193, v191);
  uint64_t v210 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v211 = dispatch thunk of static Equatable.== infix(_:_:)(v207, v209, v191, v210);
  uint64_t v212 = *(void (**)(char *, uint64_t))(v208 + 8);
  v212(v209, v191);
  sub_1F6CC((uint64_t)v771, &qword_284DB0);
  sub_1F6CC((uint64_t)v773, &qword_284DB0);
  v212((char *)v207, v191);
  sub_1F6CC(v206, &qword_284DB0);
  sub_6C3C(v803);
  sub_157C4((uint64_t)v804, (uint64_t)v802);
  uint64_t v198 = (uint64_t)v711;
  uint64_t v196 = (uint64_t)v745;
  if ((v211 & 1) != 0) {
    goto LABEL_26;
  }
LABEL_33:
  sub_6EA8(v802, v802[3]);
  dispatch thunk of AudioIntent.verb.getter(v785, &protocol witness table for AudioUsoIntent);
  v679((os_log_s *)v196, enum case for CommonAudio.Verb.play(_:), v191);
  v680((os_log_s *)v196, 0LL, 1LL, v191);
  uint64_t v199 = v703;
  uint64_t v200 = v703 + *(int *)(v754 + 48);
  sub_FF10(v198, v703, &qword_284DB0);
  sub_FF10(v196, v200, &qword_284DB0);
  if (v194(v199, 1LL, v191) == 1)
  {
    sub_1F6CC(v196, &qword_284DB0);
    sub_1F6CC(v198, &qword_284DB0);
    int v201 = v194(v200, 1LL, v191);
    id v187 = v785;
    uint64_t v188 = v777;
    BOOL v202 = v779;
    uint64_t v203 = v739;
    if (v201 == 1)
    {
      sub_1F6CC(v199, &qword_284DB0);
      sub_157C4((uint64_t)v802, (uint64_t)v800);
      goto LABEL_43;
    }

    goto LABEL_38;
  }

  uint64_t v204 = v690;
  sub_FF10(v199, v690, &qword_284DB0);
  if (v194(v200, 1LL, v191) == 1)
  {
    sub_1F6CC(v196, &qword_284DB0);
    sub_1F6CC(v198, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v761 + 8))(v204, v191);
    id v187 = v785;
    uint64_t v188 = v777;
    BOOL v202 = v779;
    uint64_t v203 = v739;
LABEL_38:
    os_log_t v779 = v202;
    sub_1F6CC(v199, &qword_284DA8);
    sub_157C4((uint64_t)v802, (uint64_t)v800);
LABEL_39:
    sub_6C3C(v800);
    sub_6C3C(v802);
    os_log_t v189 = v766;
    uint64_t v205 = v732;
    goto LABEL_45;
  }

  uint64_t v213 = v761;
  uint64_t v214 = v708;
  (*(void (**)(char *, uint64_t, uint64_t))(v761 + 32))(v708, v200, v191);
  uint64_t v215 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v216 = dispatch thunk of static Equatable.== infix(_:_:)(v204, v214, v191, v215);
  uint64_t v217 = v198;
  unint64_t v218 = *(void (**)(char *, uint64_t))(v213 + 8);
  v218(v214, v191);
  sub_1F6CC(v196, &qword_284DB0);
  sub_1F6CC(v217, &qword_284DB0);
  v218((char *)v204, v191);
  sub_1F6CC(v199, &qword_284DB0);
  sub_157C4((uint64_t)v802, (uint64_t)v800);
  id v187 = v785;
  uint64_t v188 = v777;
  uint64_t v203 = v739;
  if ((v216 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_43:
  sub_6EA8(v800, v801);
  uint64_t v219 = dispatch thunk of AudioIntent.modifiers.getter(v187, &protocol witness table for AudioUsoIntent);
  uint64_t v221 = (uint64_t)v685;
  uint64_t v220 = v686;
  uint64_t v222 = v687;
  (*(void (**)(char *, void, uint64_t))(v686 + 104))( v685,  enum case for CommonAudio.Modifier.moreOf(_:),  v687);
  char v223 = sub_14263C(v221, v219);
  swift_bridgeObjectRelease(v219);
  uint64_t v224 = *(void (**)(uint64_t, uint64_t))(v220 + 8);
  uint64_t v203 = v739;
  v224(v221, v222);
  sub_6C3C(v800);
  sub_6C3C(v802);
  os_log_t v189 = v766;
  uint64_t v205 = v732;
  if ((v223 & 1) == 0)
  {
LABEL_45:
    uint64_t v732 = v205;
    uint64_t v226 = v768;
    os_log_t v227 = v772;
    ((void (*)(char *, void, os_log_t))v767)(v768, enum case for CommonAudio.Attribute.discovery(_:), v772);
    char v228 = AudioIntent.hasAttribute(_:)(v226, v187, &protocol witness table for AudioUsoIntent);
    (*((void (**)(char *, os_log_t))v784 + 1))(v226, v227);
    if ((v228 & 1) != 0) {
      uint64_t v225 = 1LL;
    }
    else {
      uint64_t v225 = (uint64_t)v203;
    }
    goto LABEL_48;
  }

  uint64_t v225 = 8LL;
LABEL_48:
  v745 = (char *)v225;
LABEL_49:
  uint64_t v229 = v768;
  os_log_t v230 = v772;
  ((void (*)(char *, void, os_log_t))v767)( v768,  enum case for CommonAudio.Attribute.addToUnspecifiedPlaylist(_:),  v772);
  char v231 = AudioIntent.hasAttribute(_:)(v229, v187, &protocol witness table for AudioUsoIntent);
  os_log_type_t v739 = (void (*)(void, void))*((void *)v784 + 1);
  v739(v229, v230);
  if ((v231 & 1) != 0) {
    uint64_t v232 = 0LL;
  }
  else {
    uint64_t v232 = (uint64_t)v189;
  }
  uint64_t v755 = v232;
  uint64_t v233 = (void *)dispatch thunk of AudioIntent.appShowTitles.getter(v187, &protocol witness table for AudioUsoIntent);
  uint64_t v234 = sub_7245C(v233);
  unint64_t v236 = v235;
  uint64_t v238 = v237;
  uint64_t v240 = v239;
  swift_bridgeObjectRelease(v233);
  os_log_type_t v241 = (void (*)(void, void, void, void))v774;
  if (v236)
  {
    swift_bridgeObjectRetain(v236);
    v771 = (os_log_s *)sub_A86F8(v234, v236);
    uint64_t v243 = v242;
    swift_bridgeObjectRelease(v236);
    if (v243)
    {
      swift_bridgeObjectRelease(v236);
      swift_bridgeObjectRelease(v776);
      v776 = (os_log_s *)v240;
      id v244 = v785;
      goto LABEL_57;
    }

    sub_16474(v234, v236, v238, v240);
  }

  id v244 = v785;
  uint64_t v245 = (void *)dispatch thunk of AudioIntent.entities.getter(v785, &protocol witness table for AudioUsoIntent);
  v771 = (os_log_s *)sub_7241C(v245);
  uint64_t v243 = v246;
  swift_bridgeObjectRelease(0LL);
  swift_bridgeObjectRelease(v245);
  uint64_t v238 = v727;
LABEL_57:
  uint64_t v247 = (void *)dispatch thunk of AudioIntent.musicTitles.getter(v244, &protocol witness table for AudioUsoIntent);
  uint64_t v248 = sub_7241C(v247);
  uint64_t v250 = v249;
  swift_bridgeObjectRelease(v247);
  if (v250)
  {
    swift_bridgeObjectRelease(v779);
    uint64_t v773 = (_BYTE *)(&dword_0 + 1);
    os_log_t v756 = (os_log_t)v248;
    os_log_t v251 = v783;
    uint64_t v252 = (void (*)(void, void, void))v775;
  }

  else
  {
    uint64_t v773 = 0LL;
    os_log_t v251 = v783;
    uint64_t v252 = (void (*)(void, void, void))v775;
    uint64_t v250 = v779;
  }

  os_log_t v779 = v250;
  os_log_t v766 = (os_log_t)v238;
  if (!v243)
  {
    uint64_t v259 = v765;
    uint64_t v258 = (uint64_t)v735;
    goto LABEL_69;
  }

  swift_bridgeObjectRetain(v243);
  dispatch thunk of AudioIntent.mediaType.getter(v244, &protocol witness table for AudioUsoIntent);
  uint64_t v253 = v778;
  (*(void (**)(void (*)(void, void, void, void), void, uint64_t))(v778 + 104))( v241,  enum case for CommonAudio.MediaType.news(_:),  v188);
  (*(void (**)(void, void, uint64_t, uint64_t))(v253 + 56))(v241, 0LL, 1LL, v188);
  uint64_t v254 = (uint64_t)v251 + *(int *)(v782 + 48);
  sub_FF10((uint64_t)v252, (uint64_t)v251, &qword_284DC8);
  sub_FF10((uint64_t)v241, v254, &qword_284DC8);
  uint64_t v255 = (uint64_t)v252;
  uint64_t v256 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v780;
  if (((unsigned int (*)(os_log_t, uint64_t, uint64_t))v780)(v251, 1LL, v188) == 1)
  {
    sub_1F6CC((uint64_t)v241, &qword_284DC8);
    sub_1F6CC(v255, &qword_284DC8);
    int v257 = v256(v254, 1LL, v188);
    uint64_t v258 = (uint64_t)v735;
    if (v257 == 1)
    {
      sub_1F6CC((uint64_t)v783, &qword_284DC8);
      swift_bridgeObjectRelease(v779);
      os_log_t v756 = v771;
      os_log_t v779 = v243;
      uint64_t v259 = v765;
      goto LABEL_69;
    }

    goto LABEL_67;
  }

  uint64_t v260 = v704;
  sub_FF10((uint64_t)v251, v704, &qword_284DC8);
  if (v256(v254, 1LL, v188) == 1)
  {
    sub_1F6CC((uint64_t)v774, &qword_284DC8);
    sub_1F6CC((uint64_t)v775, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v260, v188);
    uint64_t v258 = (uint64_t)v735;
LABEL_67:
    sub_1F6CC((uint64_t)v783, &qword_284DA0);
    uint64_t v259 = v765;
LABEL_68:
    swift_bridgeObjectRelease(v243);
    goto LABEL_69;
  }

  uint64_t v277 = v778;
  uint64_t v278 = v757;
  (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v254, v188);
  uint64_t v279 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  char v280 = dispatch thunk of static Equatable.== infix(_:_:)(v260, v278, v188, v279);
  os_log_type_t v281 = *(void (**)(char *, uint64_t))(v277 + 8);
  uint64_t v282 = v278;
  id v244 = v785;
  v281(v282, v188);
  sub_1F6CC((uint64_t)v774, &qword_284DC8);
  sub_1F6CC((uint64_t)v775, &qword_284DC8);
  v281((char *)v260, v188);
  sub_1F6CC((uint64_t)v251, &qword_284DC8);
  uint64_t v259 = v765;
  uint64_t v258 = (uint64_t)v735;
  if ((v280 & 1) == 0) {
    goto LABEL_68;
  }
  swift_bridgeObjectRelease(v779);
  os_log_t v756 = v771;
  os_log_t v779 = v243;
LABEL_69:
  uint64_t v261 = (void *)dispatch thunk of AudioIntent.playlistTitles.getter(v244, &protocol witness table for AudioUsoIntent);
  os_log_t v262 = (os_log_t)sub_7241C(v261);
  unint64_t v264 = v263;
  swift_bridgeObjectRelease(v261);
  uint64_t v784 = v243;
  if (v264)
  {
    os_log_t v783 = (os_log_t)sub_A86F8((uint64_t)v262, v264);
    uint64_t v266 = v265;
    swift_bridgeObjectRelease(v264);
    if (v266) {
      goto LABEL_81;
    }
  }

  else
  {
    os_log_t v783 = v262;
  }

  char v267 = (void *)dispatch thunk of AudioIntent.appPlaylistTitles.getter( v244,  &protocol witness table for AudioUsoIntent);
  uint64_t v268 = sub_7245C(v267);
  unint64_t v270 = v269;
  uint64_t v272 = v271;
  uint64_t v274 = v273;
  swift_bridgeObjectRelease(v267);
  if (v270)
  {
    swift_bridgeObjectRetain(v270);
    os_log_t v275 = (os_log_t)sub_A86F8(v268, v270);
    uint64_t v266 = v276;
    swift_bridgeObjectRelease(v270);
    if (v266)
    {
      swift_bridgeObjectRelease(v270);
      swift_bridgeObjectRelease(0LL);
      swift_bridgeObjectRelease(v776);
      os_log_t v766 = (os_log_t)v272;
      v776 = (os_log_s *)v274;
      os_log_t v783 = v275;
    }

    else
    {
      sub_16474(v268, v270, v272, v274);
    }
  }

  else
  {
    uint64_t v266 = 0LL;
  }

  id v244 = v785;
  uint64_t v259 = v765;
LABEL_81:
  uint64_t v283 = (uint64_t)v734;
  dispatch thunk of AudioIntent.mediaType.getter(v244, &protocol witness table for AudioUsoIntent);
  uint64_t v284 = v778;
  uint64_t v285 = v777;
  uint64_t v775 = *(void (***)(os_log_s *, void, uint64_t))(v778 + 104);
  ((void (*)(uint64_t, void, uint64_t))v775)(v259, enum case for CommonAudio.MediaType.playlist(_:), v777);
  v774 = *(void (***)(os_log_s *, void, uint64_t))(v284 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v774)(v259, 0LL, 1LL, v285);
  uint64_t v286 = v258 + *(int *)(v782 + 48);
  sub_FF10(v283, v258, &qword_284DC8);
  sub_FF10(v259, v286, &qword_284DC8);
  uint64_t v287 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v780;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v780)(v258, 1LL, v285) == 1)
  {
    sub_1F6CC(v259, &qword_284DC8);
    sub_1F6CC(v283, &qword_284DC8);
    if (v287(v286, 1LL, v285) == 1)
    {
      sub_1F6CC(v258, &qword_284DC8);
      sub_157C4((uint64_t)v804, (uint64_t)v800);
      uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
      goto LABEL_94;
    }

    goto LABEL_86;
  }

  uint64_t v289 = v719;
  sub_FF10(v258, v719, &qword_284DC8);
  if (v287(v286, 1LL, v285) == 1)
  {
    sub_1F6CC(v765, &qword_284DC8);
    sub_1F6CC(v283, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v289, v285);
LABEL_86:
    sub_1F6CC(v258, &qword_284DA0);
    sub_157C4((uint64_t)v804, (uint64_t)v800);
    uint64_t v290 = (uint64_t)v781;
    uint64_t v291 = v752;
    uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
    goto LABEL_87;
  }

  uint64_t v299 = v778;
  unint64_t v300 = v757;
  (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v286, v285);
  uint64_t v301 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  char v302 = dispatch thunk of static Equatable.== infix(_:_:)(v289, v300, v285, v301);
  uint64_t v303 = v289;
  uint64_t v304 = *(void (**)(char *, uint64_t))(v299 + 8);
  uint64_t v305 = v300;
  id v244 = v785;
  v304(v305, v285);
  sub_1F6CC(v765, &qword_284DC8);
  sub_1F6CC(v283, &qword_284DC8);
  v304((char *)v303, v285);
  sub_1F6CC(v258, &qword_284DC8);
  sub_157C4((uint64_t)v804, (uint64_t)v800);
  uint64_t v290 = (uint64_t)v781;
  uint64_t v291 = v752;
  uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
  if ((v302 & 1) == 0)
  {
LABEL_87:
    sub_6EA8(v800, v801);
    uint64_t v292 = v733;
    dispatch thunk of AudioIntent.mediaType.getter(v244, &protocol witness table for AudioUsoIntent);
    ((void (*)(uint64_t, void, uint64_t))v775)( v291,  enum case for CommonAudio.MediaType.musicPlaylist(_:),  v285);
    v288(v291, 0LL, 1LL, v285);
    uint64_t v293 = v290 + *(int *)(v782 + 48);
    sub_FF10(v292, (uint64_t)v781, &qword_284DC8);
    uint64_t v294 = (uint64_t)v781;
    sub_FF10(v291, v293, &qword_284DC8);
    uint64_t v295 = v291;
    uint64_t v296 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v780;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v780)(v294, 1LL, v285) == 1)
    {
      sub_1F6CC(v295, &qword_284DC8);
      uint64_t v294 = (uint64_t)v781;
      sub_1F6CC(v292, &qword_284DC8);
      int v297 = v296(v293, 1LL, v285);
      uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
      if (v297 == 1)
      {
        sub_1F6CC(v294, &qword_284DC8);
        goto LABEL_94;
      }
    }

    else
    {
      uint64_t v298 = v705;
      sub_FF10(v294, v705, &qword_284DC8);
      if (v296(v293, 1LL, v285) != 1)
      {
        uint64_t v308 = v778;
        uint64_t v309 = v757;
        (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v293, v285);
        uint64_t v310 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        char v311 = dispatch thunk of static Equatable.== infix(_:_:)(v298, v309, v285, v310);
        unint64_t v312 = *(void (**)(char *, uint64_t))(v308 + 8);
        v312(v309, v285);
        sub_1F6CC(v752, &qword_284DC8);
        sub_1F6CC(v733, &qword_284DC8);
        v312((char *)v298, v285);
        sub_1F6CC(v294, &qword_284DC8);
        sub_6C3C(v800);
        BOOL v313 = v266 != 0 || (v311 & 1) == 0;
        Class v314 = v783;
        if (v266 == 0 && (v311 & 1) != 0) {
          Class v314 = v771;
        }
        os_log_t v783 = v314;
        if (v266 == 0 && (v311 & 1) != 0) {
          uint64_t v266 = 0LL;
        }
        uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
        if (!v313)
        {
          id v244 = v785;
          uint64_t v307 = v779;
          if (!v784) {
            goto LABEL_108;
          }
          goto LABEL_105;
        }

        id v244 = v785;
LABEL_107:
        uint64_t v307 = v779;
        goto LABEL_108;
      }

      sub_1F6CC(v752, &qword_284DC8);
      sub_1F6CC(v733, &qword_284DC8);
      (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v298, v285);
      uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
    }

    sub_1F6CC(v294, &qword_284DA0);
    sub_6C3C(v800);
    goto LABEL_107;
  }

LABEL_94:
  sub_6C3C(v800);
  uint64_t v306 = v783;
  if (!v266) {
    uint64_t v306 = v771;
  }
  os_log_t v783 = v306;
  if (!v784) {
    goto LABEL_107;
  }
  uint64_t v307 = v779;
  if (!v266)
  {
LABEL_105:
    os_log_t v783 = (os_log_t)sub_A86F8((uint64_t)v771, (unint64_t)v784);
    uint64_t v266 = v315;
  }

    uint64_t v113 = String.lowercased()();
    swift_bridgeObjectRelease(v70);
    uint64_t v114 = String.lowercased()();
    uint64_t v115 = v114._object;
    if (v113._object)
    {
      if (v113._countAndFlagsBits == v114._countAndFlagsBits && v113._object == v114._object)
      {
        swift_bridgeObjectRelease_n(v113._object, 2LL);
        uint64_t v116 = 1;
      }

      else
      {
        uint64_t v116 = _stringCompareWithSmolCheck(_:_:expecting:)(v113._countAndFlagsBits, v113._object);
        swift_bridgeObjectRelease(v113._object);
        swift_bridgeObjectRelease(v114._object);
      }

      goto LABEL_101;
    }

  char v223 = v414;
  if ((sub_3042C() & 1) != 0)
  {
    uint64_t v224 = v210;
    swift_bridgeObjectRelease(v210);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v408);
    uint64_t v225 = v389;
    uint64_t v226 = v396;
    os_log_t v227 = v410(v389, v409, v396);
    char v228 = (os_log_s *)Logger.logObject.getter(v227);
    uint64_t v229 = static os_log_type_t.info.getter(v228);
    if (os_log_type_enabled(v228, v229))
    {
      os_log_t v230 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_t v230 = 0;
      _os_log_impl(&dword_0, v228, v229, "PlayMediaDialogProvider going to makeNewsPodcast for news request", v230, 2u);
      swift_slowDealloc(v230, -1LL, -1LL);
    }

    v153(v225, v226);
    sub_15FFAC(v413, v414, (uint64_t)sub_16F208, v152);
LABEL_111:
    swift_release(v152);
    return swift_bridgeObjectRelease(v224);
  }

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v223,  (uint64_t)&off_26AFE0) & 1) != 0 && v407 == 6)
  {
    uint64_t v224 = v210;
    swift_bridgeObjectRelease(v210);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v408);
    char v231 = v387;
    uint64_t v232 = v396;
    uint64_t v233 = v410(v387, v409, v396);
    uint64_t v234 = (os_log_s *)Logger.logObject.getter(v233);
    unint64_t v235 = static os_log_type_t.info.getter(v234);
    if (os_log_type_enabled(v234, v235))
    {
      unint64_t v236 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v236 = 0;
      _os_log_impl(&dword_0, v234, v235, "PlayMediaDialogProvider going to makeNewsPodcast for news request", v236, 2u);
      swift_slowDealloc(v236, -1LL, -1LL);
    }

    v153(v231, v232);
    sub_16016C(v413, v414, (uint64_t)sub_16F208, v152);
    goto LABEL_111;
  }

  if ((sub_88294(v407, (uint64_t)&off_26B010) & 1) != 0)
  {
    uint64_t v224 = v210;
    swift_bridgeObjectRelease(v210);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v408);
    uint64_t v243 = v386;
    id v244 = v396;
    uint64_t v245 = v410(v386, v409, v396);
    uint64_t v246 = (os_log_s *)Logger.logObject.getter(v245);
    uint64_t v247 = static os_log_type_t.info.getter(v246);
    if (os_log_type_enabled(v246, v247))
    {
      uint64_t v248 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v248 = 0;
      _os_log_impl(&dword_0, v246, v247, "PlayMediaDialogProvider going to makePodcast", v248, 2u);
      swift_slowDealloc(v248, -1LL, -1LL);
    }

    v153(v243, v244);
    sub_160734(v413, v414, (uint64_t)sub_16F208, v152);
    goto LABEL_111;
  }

  uint64_t v404 = (unint64_t)v208;
  uint64_t v405 = v210;
  uint64_t v74 = v414;
  sub_15DCC8((uint64_t)&off_26B050, v74);
  uint64_t v250 = v249;

  uint64_t v69 = (os_log_s *)&type metadata for String;
  swift_arrayDestroy(&unk_26B070, 1LL, &type metadata for String);
  if ((v250 & 1) != 0)
  {
    os_log_t v251 = [v74 mediaSearch];
    if (!v251
      || (v252 = v251, uint64_t v253 = (char *)[v251 sortOrder], v252, v253 != (_BYTE *)&dword_0 + 1))
    {
      swift_bridgeObjectRelease(v73);
      swift_bridgeObjectRelease(v408);
      swift_bridgeObjectRelease(v405);
      unint64_t v263 = v385;
      unint64_t v264 = v396;
      uint64_t v265 = v410(v385, v409, v396);
      uint64_t v266 = (os_log_s *)Logger.logObject.getter(v265);
      char v267 = static os_log_type_t.info.getter(v266);
      if (os_log_type_enabled(v266, v267))
      {
        uint64_t v268 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v268 = 0;
        _os_log_impl( &dword_0,  v266,  v267,  "PlayMediaDialogProvider going to makePlaySomething for play some music request",  v268,  2u);
        swift_slowDealloc(v268, -1LL, -1LL);
      }

      v153(v263, v264);
      unint64_t v269 = (uint64_t)v411;
      sub_15FBCC(v413, v74, (uint64_t)sub_16F208, (uint64_t)v411);
      goto LABEL_122;
    }
  }

  sub_180AC8();
  if ((v254 & 1) != 0)
  {
    swift_bridgeObjectRelease(v405);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v408);
    uint64_t v255 = v384;
    uint64_t v256 = v410(v384, v409, v396);
    int v257 = (os_log_s *)Logger.logObject.getter(v256);
    uint64_t v258 = static os_log_type_t.info.getter(v257);
    uint64_t v259 = os_log_type_enabled(v257, v258);
    uint64_t v260 = (uint64_t)v411;
    if (v259)
    {
      uint64_t v261 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v261 = 0;
      _os_log_impl( &dword_0,  v257,  v258,  "PlayMediaDialogProvider going to makePlaySomethingNew for play some new music request",  v261,  2u);
      swift_slowDealloc(v261, -1LL, -1LL);
    }

    v153(v255, v396);
    sub_160B80(v413, v74, (uint64_t)sub_16F208, v260);
    os_log_t v262 = v260;
    goto LABEL_123;
  }

  if (!INPlayMediaIntent.isCreateRadioFromCurrentlyPlaying()() && !v211)
  {
    unint64_t v403 = (void *)v161;
    swift_bridgeObjectRelease(v408);
    uint64_t v276 = [v74 mediaSearch];
    if (v276)
    {
      uint64_t v277 = v276;
      uint64_t v278 = (int *)[v276 sortOrder];

      if (v278 == &dword_8)
      {
        uint64_t v279 = [v74 mediaSearch];
        if (v279)
        {
          char v280 = v279;
          os_log_type_t v281 = [v279 mediaName];

          if (v281)
          {

            uint64_t v282 = [v74 mediaSearch];
            if (!v282
              || (uint64_t v283 = v282,
                  uint64_t v284 = (char *)[v282 reference],
                  v283,
                  v284 != (_BYTE *)&dword_0 + 1))
            {
              swift_bridgeObjectRelease(v405);
              swift_bridgeObjectRelease(v73);
              uint64_t v327 = v410(v378, v409, v396);
              unint64_t v328 = (os_log_s *)Logger.logObject.getter(v327);
              unint64_t v329 = static os_log_type_t.info.getter(v328);
              if (os_log_type_enabled(v328, v329))
              {
                os_log_t v330 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)os_log_t v330 = 0;
                _os_log_impl(&dword_0, v328, v329, "PlayMediaDialogProvider going to makePlayMusicLikeArtist", v330, 2u);
                swift_slowDealloc(v330, -1LL, -1LL);
              }

              ((void (*)(_BYTE *, uint64_t))v376)(v378, v396);
              unint64_t v269 = (uint64_t)v411;
              sub_162DE8(v413, v74, (uint64_t)sub_16F208, (uint64_t)v411);
              goto LABEL_122;
            }
          }
        }
      }
    }

    LOBYTE(v6sub_6C3C(v0 + 2) = sub_88294(v407, (uint64_t)&off_26B080);
    uint64_t v80 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
    uint64_t v285 = [v74 mediaSearch];
    if (v285)
    {
      uint64_t v286 = v285;
      uint64_t v287 = (char *)[v285 sortOrder];

      if (v287 == (_BYTE *)&dword_0 + 3)
      {
        goto LABEL_142;
      }
    }

  uint64_t v219 = v402;
  if ((sub_3042C() & 1) != 0)
  {
    uint64_t v220 = v206;
    swift_bridgeObjectRelease(v206);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v103);
    uint64_t v221 = v385;
    uint64_t v222 = v405;
    char v223 = v404(v385, v403, v405);
    uint64_t v224 = (os_log_s *)Logger.logObject.getter(v223);
    uint64_t v225 = static os_log_type_t.info.getter(v224);
    if (os_log_type_enabled(v224, v225))
    {
      uint64_t v226 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v226 = 0;
      _os_log_impl(&dword_0, v224, v225, "PlayMediaDialogProvider going to makeNewsPodcast for news request", v226, 2u);
      swift_slowDealloc(v226, -1LL, -1LL);
    }

    v401(v221, v222);
    sub_15FFAC(v407, v402, (uint64_t)sub_16F138, v81);
LABEL_111:
    swift_release(v81);
    return swift_bridgeObjectRelease(v220);
  }

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v219,  (uint64_t)&off_26B180) & 1) != 0 && v400 == 6)
  {
    uint64_t v220 = v206;
    swift_bridgeObjectRelease(v206);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v103);
    os_log_t v227 = v383;
    char v228 = v405;
    uint64_t v229 = v404(v383, v403, v405);
    os_log_t v230 = (os_log_s *)Logger.logObject.getter(v229);
    char v231 = static os_log_type_t.info.getter(v230);
    if (os_log_type_enabled(v230, v231))
    {
      uint64_t v232 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v232 = 0;
      _os_log_impl(&dword_0, v230, v231, "PlayMediaDialogProvider going to makeNewsPodcast for news request", v232, 2u);
      swift_slowDealloc(v232, -1LL, -1LL);
    }

    v401(v227, v228);
    sub_16016C(v407, v402, (uint64_t)sub_16F138, v81);
    goto LABEL_111;
  }

  if ((sub_88294(v400, (uint64_t)&off_26B1B0) & 1) != 0)
  {
    uint64_t v220 = v206;
    swift_bridgeObjectRelease(v206);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v103);
    uint64_t v239 = v382;
    uint64_t v240 = v405;
    os_log_type_t v241 = v404(v382, v403, v405);
    uint64_t v242 = (os_log_s *)Logger.logObject.getter(v241);
    uint64_t v243 = static os_log_type_t.info.getter(v242);
    if (os_log_type_enabled(v242, v243))
    {
      id v244 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v244 = 0;
      _os_log_impl(&dword_0, v242, v243, "PlayMediaDialogProvider going to makePodcast", v244, 2u);
      swift_slowDealloc(v244, -1LL, -1LL);
    }

    v401(v239, v240);
    sub_160734(v407, v402, (uint64_t)sub_16F138, v81);
    goto LABEL_111;
  }

  uint64_t v397 = v204;
  uint64_t v398 = v206;
  uint64_t v82 = v402;
  sub_15DCC8((uint64_t)&off_26B1F0, v82);
  uint64_t v246 = v245;

  uint64_t v72 = (uint8_t *)&type metadata for String;
  swift_arrayDestroy(&unk_26B210, 1LL, &type metadata for String);
  if ((v246 & 1) != 0)
  {
    uint64_t v247 = [v82 mediaSearch];
    if (!v247
      || (v248 = v247, uint64_t v249 = (char *)[v247 sortOrder], v248, v249 != (_BYTE *)&dword_0 + 1))
    {
      swift_bridgeObjectRelease(v73);
      swift_bridgeObjectRelease(v103);
      swift_bridgeObjectRelease(v398);
      uint64_t v259 = v381;
      uint64_t v260 = v405;
      uint64_t v261 = v404(v381, v403, v405);
      os_log_t v262 = (os_log_s *)Logger.logObject.getter(v261);
      unint64_t v263 = static os_log_type_t.info.getter(v262);
      if (os_log_type_enabled(v262, v263))
      {
        unint64_t v264 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v264 = 0;
        _os_log_impl( &dword_0,  v262,  v263,  "PlayMediaDialogProvider going to makePlaySomething for play some music request",  v264,  2u);
        swift_slowDealloc(v264, -1LL, -1LL);
      }

      v401(v259, v260);
      uint64_t v265 = (uint64_t)v406;
      sub_15FBCC(v407, v82, (uint64_t)sub_16F138, (uint64_t)v406);
      goto LABEL_122;
    }
  }

  sub_180AC8();
  if ((v250 & 1) != 0)
  {
    swift_bridgeObjectRelease(v398);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v103);
    os_log_t v251 = v380;
    uint64_t v252 = v404(v380, v403, v405);
    uint64_t v253 = (os_log_s *)Logger.logObject.getter(v252);
    uint64_t v254 = static os_log_type_t.info.getter(v253);
    uint64_t v255 = os_log_type_enabled(v253, v254);
    uint64_t v256 = (uint64_t)v406;
    if (v255)
    {
      int v257 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v257 = 0;
      _os_log_impl( &dword_0,  v253,  v254,  "PlayMediaDialogProvider going to makePlaySomethingNew for play some new music request",  v257,  2u);
      swift_slowDealloc(v257, -1LL, -1LL);
    }

    v401(v251, v405);
    sub_160B80(v407, v82, (uint64_t)sub_16F138, v256);
    uint64_t v258 = v256;
    goto LABEL_123;
  }

  if (!INPlayMediaIntent.isCreateRadioFromCurrentlyPlaying()() && !v207)
  {
    uint64_t v396 = v196;
    swift_bridgeObjectRelease(v103);
    uint64_t v273 = [v82 mediaSearch];
    uint64_t v83 = (__int128 *)&selRef_serviceGroups;
    if (v273)
    {
      uint64_t v274 = v273;
      os_log_t v275 = (int *)[v273 sortOrder];

      if (v275 == &dword_8)
      {
        uint64_t v276 = [v82 mediaSearch];
        if (v276)
        {
          uint64_t v277 = v276;
          uint64_t v278 = [v276 mediaName];

          if (v278)
          {

            uint64_t v279 = [v82 mediaSearch];
            if (!v279
              || (char v280 = v279,
                  os_log_type_t v281 = (char *)[v279 reference],
                  v280,
                  v281 != (_BYTE *)&dword_0 + 1))
            {
              swift_bridgeObjectRelease(v398);
              swift_bridgeObjectRelease(v73);
              uint64_t v321 = v404(v374, v403, v405);
              uint64_t v322 = (os_log_s *)Logger.logObject.getter(v321);
              uint64_t v323 = static os_log_type_t.info.getter(v322);
              if (os_log_type_enabled(v322, v323))
              {
                unsigned int v324 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)unsigned int v324 = 0;
                _os_log_impl(&dword_0, v322, v323, "PlayMediaDialogProvider going to makePlayMusicLikeArtist", v324, 2u);
                swift_slowDealloc(v324, -1LL, -1LL);
              }

              v401(v374, v405);
              uint64_t v265 = (uint64_t)v406;
              sub_162DE8(v407, v82, (uint64_t)sub_16F138, (uint64_t)v406);
              goto LABEL_122;
            }
          }
        }
      }
    }

    LOBYTE(v6sub_6C3C(v0 + 2) = sub_88294(v400, (uint64_t)&off_26B220);
    uint64_t v90 = (uint64_t)&OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
    uint64_t v282 = [v82 mediaSearch];
    if (v282)
    {
      uint64_t v283 = v282;
      uint64_t v284 = (char *)[v282 sortOrder];

      if (v284 == (_BYTE *)&dword_0 + 3)
      {
        goto LABEL_142;
      }
    }

LABEL_108:
  int v316 = AudioIntent.isAddToUpNext()();
  if (!v266)
  {
    os_log_t v783 = v756;
    goto LABEL_120;
  }

  sub_157C4((uint64_t)v804, (uint64_t)v798);
  if ((v316 & 1) != 0)
  {
    swift_bridgeObjectRetain(v266);
    swift_bridgeObjectRelease(v307);
    sub_6C3C(v798);
LABEL_119:
    uint64_t v773 = (_BYTE *)(&dword_4 + 1);
    uint64_t v307 = (os_log_s *)v266;
    goto LABEL_120;
  }

  LODWORD(v781) = v316;
  os_log_t v779 = v307;
  sub_6EA8(v798, v799);
  swift_bridgeObjectRetain(v266);
  uint64_t v317 = v714;
  dispatch thunk of AudioIntent.verb.getter(v244, &protocol witness table for AudioUsoIntent);
  uint64_t v318 = v761;
  uint64_t v319 = v713;
  uint64_t v320 = v760;
  (*(void (**)(uint64_t, void, uint64_t))(v761 + 104))(v713, enum case for CommonAudio.Verb.update(_:), v760);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v318 + 56))(v319, 0LL, 1LL, v320);
  uint64_t v321 = v706;
  uint64_t v322 = v706 + *(int *)(v754 + 48);
  sub_FF10(v317, v706, &qword_284DB0);
  sub_FF10(v319, v322, &qword_284DB0);
  uint64_t v323 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v318 + 48);
  if (v323(v321, 1LL, v320) != 1)
  {
    uint64_t v325 = v691;
    sub_FF10(v321, v691, &qword_284DB0);
    if (v323(v322, 1LL, v320) != 1)
    {
      uint64_t v370 = v761;
      uint64_t v371 = v321;
      uint64_t v372 = v708;
      (*(void (**)(char *, uint64_t, uint64_t))(v761 + 32))(v708, v322, v320);
      uint64_t v373 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      char v374 = dispatch thunk of static Equatable.== infix(_:_:)(v325, v372, v320, v373);
      uint64_t v375 = *(void (**)(char *, uint64_t))(v370 + 8);
      v375(v372, v320);
      sub_1F6CC(v713, &qword_284DB0);
      sub_1F6CC(v714, &qword_284DB0);
      v375((char *)v325, v320);
      sub_1F6CC(v371, &qword_284DB0);
      sub_6C3C(v798);
      id v244 = v785;
      if ((v374 & 1) != 0) {
        goto LABEL_152;
      }
LABEL_118:
      swift_bridgeObjectRelease(v779);
      uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
      LOBYTE(v3sub_6C3C(v0 + 16) = (_BYTE)v781;
      goto LABEL_119;
    }

    sub_1F6CC(v713, &qword_284DB0);
    sub_1F6CC(v714, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v761 + 8))(v325, v320);
    id v244 = v785;
LABEL_117:
    sub_1F6CC(v321, &qword_284DA8);
    sub_6C3C(v798);
    goto LABEL_118;
  }

  sub_1F6CC(v319, &qword_284DB0);
  sub_1F6CC(v317, &qword_284DB0);
  unsigned int v324 = v323(v322, 1LL, v320);
  id v244 = v785;
  if (v324 != 1) {
    goto LABEL_117;
  }
  sub_1F6CC(v321, &qword_284DB0);
  sub_6C3C(v798);
LABEL_152:
  swift_bridgeObjectRelease(v266);
  os_log_t v783 = v756;
  uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
  uint64_t v307 = v779;
  LOBYTE(v3sub_6C3C(v0 + 16) = (_BYTE)v781;
LABEL_120:
  uint64_t v326 = (void *)dispatch thunk of AudioIntent.applePlaylistTitles.getter( v244,  &protocol witness table for AudioUsoIntent);
  uint64_t v327 = sub_7241C(v326);
  unint64_t v329 = v328;
  swift_bridgeObjectRelease(v326);
  uint64_t v765 = v266;
  if (!v329)
  {
    os_log_t v332 = v307;
    uint64_t v333 = v762;
    uint64_t v334 = (uint64_t)v736;
    goto LABEL_134;
  }

  os_log_t v330 = (os_log_t)sub_A86F8(v327, v329);
  os_log_t v332 = v331;
  swift_bridgeObjectRelease(v329);
  uint64_t v333 = v762;
  if (!v332)
  {
    os_log_t v332 = v307;
    uint64_t v334 = (uint64_t)v736;
    goto LABEL_134;
  }

  sub_157C4((uint64_t)v804, (uint64_t)v798);
  if ((v316 & 1) != 0)
  {
    swift_bridgeObjectRelease(v307);
    sub_6C3C(v798);
    uint64_t v334 = (uint64_t)v736;
LABEL_133:
    os_log_t v783 = v330;
    goto LABEL_134;
  }

  os_log_t v756 = v330;
  uint64_t v781 = v332;
  os_log_t v779 = v307;
  sub_6EA8(v798, v799);
  uint64_t v335 = v701;
  dispatch thunk of AudioIntent.verb.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v336 = v761;
  uint64_t v337 = v700;
  uint64_t v338 = v760;
  (*(void (**)(uint64_t, void, uint64_t))(v761 + 104))(v700, enum case for CommonAudio.Verb.update(_:), v760);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v336 + 56))(v337, 0LL, 1LL, v338);
  uint64_t v339 = v696;
  uint64_t v340 = v696 + *(int *)(v754 + 48);
  sub_FF10(v335, v696, &qword_284DB0);
  sub_FF10(v337, v340, &qword_284DB0);
  uint64_t v341 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v336 + 48);
  if (v341(v339, 1LL, v338) != 1)
  {
    uint64_t v343 = v684;
    sub_FF10(v339, v684, &qword_284DB0);
    int v344 = v341(v340, 1LL, v338);
    os_log_t v332 = v781;
    if (v344 != 1)
    {
      uint64_t v376 = v761;
      uint64_t v377 = v708;
      (*(void (**)(char *, uint64_t, uint64_t))(v761 + 32))(v708, v340, v338);
      uint64_t v378 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      char v379 = dispatch thunk of static Equatable.== infix(_:_:)(v343, v377, v338, v378);
      uint64_t v380 = *(void (**)(char *, uint64_t))(v376 + 8);
      v380(v377, v338);
      sub_1F6CC(v700, &qword_284DB0);
      sub_1F6CC(v701, &qword_284DB0);
      v380((char *)v343, v338);
      sub_1F6CC(v696, &qword_284DB0);
      sub_6C3C(v798);
      uint64_t v333 = v762;
      uint64_t v334 = (uint64_t)v736;
      if ((v379 & 1) != 0) {
        goto LABEL_154;
      }
LABEL_132:
      swift_bridgeObjectRelease(v779);
      uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
      os_log_t v330 = v756;
      goto LABEL_133;
    }

    sub_1F6CC(v700, &qword_284DB0);
    sub_1F6CC(v701, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v761 + 8))(v343, v338);
    uint64_t v333 = v762;
    uint64_t v334 = (uint64_t)v736;
LABEL_131:
    sub_1F6CC(v339, &qword_284DA8);
    sub_6C3C(v798);
    goto LABEL_132;
  }

  sub_1F6CC(v337, &qword_284DB0);
  sub_1F6CC(v335, &qword_284DB0);
  int v342 = v341(v340, 1LL, v338);
  uint64_t v333 = v762;
  uint64_t v334 = (uint64_t)v736;
  os_log_t v332 = v781;
  if (v342 != 1) {
    goto LABEL_131;
  }
  sub_1F6CC(v339, &qword_284DB0);
  sub_6C3C(v798);
LABEL_154:
  swift_bridgeObjectRelease(v332);
  os_log_t v332 = v779;
  uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
LABEL_134:
  uint64_t v345 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v780;
  uint64_t v346 = v770;
  dispatch thunk of AudioIntent.radioType.getter(v785, &protocol witness table for AudioUsoIntent);
  sub_FF10(v346, v334, &qword_284D98);
  sub_157C4((uint64_t)v804, (uint64_t)v798);
  if (v332)
  {
    sub_6C3C(v798);
    sub_1F6CC(v334, &qword_284D98);
    sub_157C4((uint64_t)v804, (uint64_t)&v795);
LABEL_163:
    sub_6C3C(&v795);
    goto LABEL_164;
  }

  os_log_type_t v347 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v731 + 48);
  uint64_t v348 = v724;
  int v349 = v347(v334, 1LL, v724);
  sub_157C4((uint64_t)v798, (uint64_t)&v795);
  if (v349 != 1)
  {
    sub_6C3C(&v795);
    sub_157C4((uint64_t)v798, (uint64_t)v793);
    goto LABEL_141;
  }

  sub_6EA8(&v795, v797);
  dispatch thunk of AudioIntent.frequency.getter(v785, &protocol witness table for AudioUsoIntent);
  char v351 = v350;
  sub_6C3C(&v795);
  sub_157C4((uint64_t)v798, (uint64_t)v793);
  if ((v351 & 1) == 0)
  {
LABEL_141:
    sub_6C3C(v798);
    sub_6C3C(v793);
    sub_1F6CC(v334, &qword_284D98);
    goto LABEL_142;
  }

  sub_6EA8(v793, v794);
  __n128 v352 = (void *)dispatch thunk of AudioIntent.radioStationNames.getter( v785,  &protocol witness table for AudioUsoIntent);
  sub_7241C(v352);
  uint64_t v354 = v353;
  swift_bridgeObjectRelease(v352);
  sub_6C3C(v798);
  swift_bridgeObjectRelease(v354);
  sub_6C3C(v793);
  sub_1F6CC(v334, &qword_284D98);
  if (!v354)
  {
    sub_157C4((uint64_t)v804, (uint64_t)&v795);
    uint64_t v355 = (uint64_t)v712;
    goto LABEL_198;
  }

LABEL_142:
  os_log_t v795 = 0LL;
  unint64_t v796 = 0xE000000000000000LL;
  os_log_type_t v356 = (void *)dispatch thunk of AudioIntent.radioStationNames.getter( v785,  &protocol witness table for AudioUsoIntent);
  uint64_t v357 = sub_7241C(v356);
  uint64_t v359 = v358;
  swift_bridgeObjectRelease(v356);
  if (v359)
  {
    v360._countAndFlagsBits = v357;
    v360._object = v359;
    String.append(_:)(v360);
    swift_bridgeObjectRelease(v359);
  }

  uint64_t v361 = dispatch thunk of AudioIntent.frequency.getter(v785, &protocol witness table for AudioUsoIntent);
  if ((v362 & 1) == 0)
  {
    double v363 = *(double *)&v361;
    uint64_t v364 = v731;
    uint64_t v365 = v698;
    (*(void (**)(uint64_t, void, uint64_t))(v731 + 104))( v698,  enum case for CommonAudio.RadioType.am(_:),  v348);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v364 + 56))(v365, 0LL, 1LL, v348);
    uint64_t v366 = v695;
    uint64_t v367 = v695 + *(int *)(v692 + 48);
    sub_FF10(v770, v695, &qword_284D98);
    uint64_t v348 = v724;
    sub_FF10(v365, v367, &qword_284D98);
    if (v347(v366, 1LL, v348) == 1)
    {
      sub_1F6CC(v365, &qword_284D98);
      if (v347(v367, 1LL, v348) == 1)
      {
        sub_1F6CC(v366, &qword_284D98);
        uint64_t v345 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v780;
LABEL_156:
        uint64_t v388 = sub_6C5C((uint64_t *)&unk_289320);
        uint64_t v389 = swift_allocObject(v388, 72LL, 7LL);
        uint64_t v390 = sub_142CE0(v389, 1LL);
        *((void *)v391 + sub_6C3C(v0 + 3) = &type metadata for Double;
        *((void *)v391 + sub_6C3C(v0 + 4) = &protocol witness table for Double;
        *uint64_t v391 = v363;
        uint64_t v392 = WHAError.rawValue.getter(v390);
        v393._countAndFlagsBits = String.init(format:_:)(1714433573LL, 0xE400000000000000LL, v392);
LABEL_158:
        object = v393._object;
        sub_A8748(v393);
        swift_bridgeObjectRelease(object);
        goto LABEL_159;
      }
    }

    else
    {
      uint64_t v368 = v683;
      sub_FF10(v366, v683, &qword_284D98);
      if (v347(v367, 1LL, v348) != 1)
      {
        uint64_t v381 = v731;
        uint64_t v382 = v368;
        uint64_t v383 = v682;
        (*(void (**)(char *, uint64_t, uint64_t))(v731 + 32))(v682, v367, v348);
        uint64_t v384 = sub_10430( &qword_284E00,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.RadioType,  (uint64_t)&protocol conformance descriptor for CommonAudio.RadioType);
        char v385 = dispatch thunk of static Equatable.== infix(_:_:)(v382, v383, v348, v384);
        uint64_t v386 = *(void (**)(char *, uint64_t))(v381 + 8);
        v386(v383, v348);
        sub_1F6CC(v698, &qword_284D98);
        uint64_t v387 = v382;
        uint64_t v288 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
        v386((char *)v387, v348);
        uint64_t v333 = v762;
        uint64_t v369 = sub_1F6CC(v695, &qword_284D98);
        uint64_t v345 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v780;
        if ((v385 & 1) != 0) {
          goto LABEL_156;
        }
LABEL_157:
        v393._countAndFlagsBits = Double.description.getter(v369, v363);
        goto LABEL_158;
      }

      sub_1F6CC(v698, &qword_284D98);
      (*(void (**)(uint64_t, uint64_t))(v731 + 8))(v368, v348);
    }

    uint64_t v369 = sub_1F6CC(v366, &qword_284D90);
    uint64_t v345 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v780;
    goto LABEL_157;
  }

    swift_bridgeObjectRelease(v405);
    swift_bridgeObjectRelease(v73);
    uint64_t v291 = v410(v382, v409, v396);
    uint64_t v292 = (os_log_s *)Logger.logObject.getter(v291);
    uint64_t v293 = static os_log_type_t.info.getter(v292);
    if (os_log_type_enabled(v292, v293))
    {
      uint64_t v294 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v294 = 0;
      _os_log_impl( &dword_0,  v292,  v293,  "PlayMediaDialogProvider going to makeBestWorst for non-empty best or worst",  v294,  2u);
      swift_slowDealloc(v294, -1LL, -1LL);
    }

    ((void (*)(_BYTE *, uint64_t))v376)(v382, v396);
    unint64_t v269 = (uint64_t)v411;
    sub_16156C(v413, v74, (uint64_t)sub_16F208, (uint64_t)v411);
    goto LABEL_122;
  }

  swift_bridgeObjectRelease(v405);
  unint64_t v270 = v383;
  uint64_t v271 = v410(v383, v409, v396);
  uint64_t v272 = (os_log_s *)Logger.logObject.getter(v271);
  uint64_t v273 = static os_log_type_t.info.getter(v272);
  if (os_log_type_enabled(v272, v273))
  {
    uint64_t v274 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v274 = 0;
    _os_log_impl(&dword_0, v272, v273, "PlayMediaDialogProvider going to makeCreateRadio", v274, 2u);
    swift_slowDealloc(v274, -1LL, -1LL);
  }

  v153(v270, v396);
  os_log_t v275 = (uint64_t)v411;
  sub_161008(v413, v88, v73, v74, (uint64_t)sub_16F208, (uint64_t)v411);
  swift_release(v275);
  swift_bridgeObjectRelease(v405);
  swift_bridgeObjectRelease(v408);
  return swift_bridgeObjectRelease(v73);
}

    swift_bridgeObjectRelease(v398);
    swift_bridgeObjectRelease(v73);
    uint64_t v288 = v404(v378, v403, v405);
    uint64_t v289 = (os_log_s *)Logger.logObject.getter(v288);
    uint64_t v290 = static os_log_type_t.info.getter(v289);
    if (os_log_type_enabled(v289, v290))
    {
      uint64_t v291 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v291 = 0;
      _os_log_impl( &dword_0,  v289,  v290,  "PlayMediaDialogProvider going to makeBestWorst for non-empty best or worst",  v291,  2u);
      swift_slowDealloc(v291, -1LL, -1LL);
    }

    v401(v378, v405);
    uint64_t v265 = (uint64_t)v406;
    sub_16156C(v407, v82, (uint64_t)sub_16F138, (uint64_t)v406);
    goto LABEL_122;
  }

  uint64_t v266 = v82;
  swift_bridgeObjectRelease(v398);
  char v267 = v379;
  uint64_t v268 = v404(v379, v403, v405);
  unint64_t v269 = (os_log_s *)Logger.logObject.getter(v268);
  unint64_t v270 = static os_log_type_t.info.getter(v269);
  if (os_log_type_enabled(v269, v270))
  {
    uint64_t v271 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v271 = 0;
    _os_log_impl(&dword_0, v269, v270, "PlayMediaDialogProvider going to makeCreateRadio", v271, 2u);
    swift_slowDealloc(v271, -1LL, -1LL);
  }

  v401(v267, v405);
  uint64_t v272 = (uint64_t)v406;
  sub_161008(v407, v196, v73, v266, (uint64_t)sub_16F138, (uint64_t)v406);
  swift_release(v272);
  swift_bridgeObjectRelease(v398);
  swift_bridgeObjectRelease(v103);
  return swift_bridgeObjectRelease(v73);
}

LABEL_159:
  uint64_t v395 = v709;
  sub_FF10(v770, v709, &qword_284D98);
  if (v347(v395, 1LL, v348) == 1)
  {
    sub_1F6CC(v395, &qword_284D98);
  }

  else
  {
    uint64_t v396 = v731;
    uint64_t v397 = v693;
    uint64_t v398 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v731 + 32))(v693, v395, v348);
    v805._countAndFlagsBits = CommonAudio.RadioType.rawValue.getter(v398);
    os_log_type_t v399 = v805._object;
    sub_A8748(v805);
    swift_bridgeObjectRelease(v399);
    (*(void (**)(char *, uint64_t))(v396 + 8))(v397, v348);
  }

  uint64_t v355 = (uint64_t)v712;
  os_log_t v783 = v795;
  os_log_t v332 = (os_log_t)v796;
  sub_157C4((uint64_t)v804, (uint64_t)&v795);
  uint64_t v755 = 16LL;
  if (v332) {
    goto LABEL_163;
  }
LABEL_198:
  sub_6EA8(&v795, v797);
  dispatch thunk of AudioIntent.mediaType.getter(v785, &protocol witness table for AudioUsoIntent);
  if (v345(v355, 1LL, v285) == 1)
  {
    sub_1F6CC(v355, &qword_284DC8);
    sub_6C3C(&v795);
    os_log_t v332 = 0LL;
  }

  else
  {
    Swift::Bool v466 = CommonAudio.MediaType.isStation()();
    unint64_t v467 = *(void (**)(uint64_t, uint64_t))(v778 + 8);
    v467(v355, v285);
    sub_6C3C(&v795);
    if (v466)
    {
      if (v784 && (os_log_t v468 = (os_log_t)sub_A86F8((uint64_t)v771, (unint64_t)v784), v469))
      {
        os_log_t v332 = v469;
        os_log_t v783 = v468;
      }

      else
      {
        id v670 = v785;
        uint64_t v671 = (void *)dispatch thunk of AudioIntent.artists.getter(v785, &protocol witness table for AudioUsoIntent);
        os_log_t v672 = (os_log_t)sub_7241C(v671);
        os_log_t v332 = v673;
        swift_bridgeObjectRelease(v671);
        if (!v332)
        {
          uint64_t v674 = (void *)dispatch thunk of AudioIntent.albums.getter(v670, &protocol witness table for AudioUsoIntent);
          os_log_t v672 = (os_log_t)sub_7241C(v674);
          os_log_t v332 = v675;
          swift_bridgeObjectRelease(v674);
          if (!v332)
          {
            uint64_t v676 = (void *)dispatch thunk of AudioIntent.musicTitles.getter( v670,  &protocol witness table for AudioUsoIntent);
            os_log_t v672 = (os_log_t)sub_7241C(v676);
            os_log_t v332 = v677;
            swift_bridgeObjectRelease(v676);
            if (!v332) {
              goto LABEL_164;
            }
          }
        }

        os_log_t v783 = v672;
      }

      uint64_t v678 = (uint64_t)v681;
      dispatch thunk of AudioIntent.mediaType.getter(v785, &protocol witness table for AudioUsoIntent);
      if (v345(v678, 1LL, v285) == 1)
      {
        sub_1F6CC(v678, &qword_284DC8);
        uint64_t v773 = 0LL;
      }

      else
      {
        uint64_t v773 = (char *)sub_201914();
        v467(v678, v285);
      }
    }

    else
    {
      os_log_t v332 = 0LL;
    }
  }

  uint64_t v406 = v786;
  uint64_t v407 = v845[0];
  uint64_t v408 = sub_7241C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_podcastTitles));
  if (v409)
  {
    char v410 = v409;
    uint64_t v799 = sub_A86F8(v408, v409);
    unint64_t v412 = v411;
    swift_bridgeObjectRelease(v410);
  }

  else
  {
    uint64_t v799 = v408;
    unint64_t v412 = 0LL;
  }

  uint64_t v413 = v407 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v407 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType, &v831, 0LL, 0LL);
  os_log_t v414 = (uint64_t)v787;
  sub_FF10(v413, (uint64_t)v787, &qword_284DC8);
  LODWORD(v78sub_6C3C(v0 + 9) = enum case for CommonAudio.MediaType.podcast(_:);
  uint64_t v415 = v814;
  ((void (*)(uint64_t))v803)(v406);
  ((void (*)(uint64_t, void, uint64_t, id))v804)(v406, 0LL, 1LL, v415);
  uint64_t v416 = v354 + *(int *)(v357 + 48);
  sub_FF10(v414, v354, &qword_284DC8);
  sub_FF10(v406, v416, &qword_284DC8);
  uint64_t v417 = v809;
  if (((unsigned int (*)(uint64_t, uint64_t, id))v809)(v354, 1LL, v415) != 1)
  {
    uint64_t v421 = v750;
    sub_FF10(v354, v750, &qword_284DC8);
    if (((unsigned int (*)(uint64_t, uint64_t, id))v417)(v416, 1LL, v814) != 1)
    {
      uint64_t v429 = v805;
      unint64_t v430 = v784;
      unint64_t v431 = v814;
      (*(void (**)(char *, uint64_t, id))(v805 + 32))(v784, v416, v814);
      uint64_t v432 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
      os_log_t v433 = dispatch thunk of static Equatable.== infix(_:_:)(v421, v430, v431, v432);
      os_log_type_t v434 = *(void (**)(char *, id))(v429 + 8);
      uint64_t v435 = v430;
      id v420 = v809;
      v434(v435, v431);
      sub_1F6CC(v786, &qword_284DC8);
      sub_1F6CC((uint64_t)v787, &qword_284DC8);
      uint64_t v436 = v431;
      uint64_t v357 = v802;
      v434((char *)v421, v436);
      sub_1F6CC(v354, &qword_284DC8);
      sub_157C4((uint64_t)v845, (uint64_t)v829);
      uint64_t v419 = v780;
      if ((v433 & 1) != 0) {
        goto LABEL_175;
      }
LABEL_168:
      uint64_t v422 = *sub_6EA8(v829, v830) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
      swift_beginAccess(v422, &v828, 0LL, 0LL);
      sub_FF10(v422, v419, &qword_284DC8);
      uint64_t v423 = v420;
      uint64_t v424 = v762;
      char v425 = v814;
      ((void (*)(void))v803)();
      ((void (*)(uint64_t, void, uint64_t, id))v804)(v424, 0LL, 1LL, v425);
      uint64_t v426 = v763;
      BOOL v427 = v763 + *(int *)(v357 + 48);
      sub_FF10(v419, v763, &qword_284DC8);
      sub_FF10(v424, v427, &qword_284DC8);
      if (((unsigned int (*)(uint64_t, uint64_t, id))v423)(v426, 1LL, v425) == 1)
      {
        sub_1F6CC(v424, &qword_284DC8);
        uint64_t v426 = v763;
        sub_1F6CC(v419, &qword_284DC8);
        id v420 = v423;
        if (((unsigned int (*)(uint64_t, uint64_t, id))v423)(v427, 1LL, v814) == 1)
        {
          sub_1F6CC(v426, &qword_284DC8);
          goto LABEL_175;
        }
      }

      else
      {
        uint64_t v428 = v734;
        sub_FF10(v426, v734, &qword_284DC8);
        if (((unsigned int (*)(uint64_t, uint64_t, id))v423)(v427, 1LL, v814) != 1)
        {
          uint64_t v439 = v426;
          uint64_t v440 = v805;
          uint64_t v441 = v784;
          uint64_t v442 = v814;
          (*(void (**)(char *, uint64_t, id))(v805 + 32))(v784, v427, v814);
          v443 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
          unsigned int v444 = dispatch thunk of static Equatable.== infix(_:_:)(v428, v441, v442, v443);
          uint64_t v445 = v428;
          uint64_t v446 = *(void (**)(char *, id))(v440 + 8);
          uint64_t v447 = v441;
          uint64_t v357 = v802;
          v446(v447, v442);
          sub_1F6CC(v762, &qword_284DC8);
          sub_1F6CC(v780, &qword_284DC8);
          uint64_t v448 = v442;
          id v420 = v809;
          v446((char *)v445, v448);
          sub_1F6CC(v439, &qword_284DC8);
          sub_6C3C(v829);
          if ((v444 & 1) == 0) {
            goto LABEL_181;
          }
          goto LABEL_176;
        }

        id v420 = v423;
        sub_1F6CC(v762, &qword_284DC8);
        sub_1F6CC(v780, &qword_284DC8);
        (*(void (**)(uint64_t, id))(v805 + 8))(v428, v814);
      }

      sub_1F6CC(v426, &qword_284DA0);
      sub_6C3C(v829);
      goto LABEL_181;
    }

    id v420 = v417;
    sub_1F6CC(v786, &qword_284DC8);
    sub_1F6CC((uint64_t)v787, &qword_284DC8);
    (*(void (**)(uint64_t, id))(v805 + 8))(v421, v814);
    uint64_t v419 = v780;
LABEL_167:
    sub_1F6CC(v354, &qword_284DA0);
    sub_157C4((uint64_t)v845, (uint64_t)v829);
    goto LABEL_168;
  }

  sub_1F6CC(v406, &qword_284DC8);
  sub_1F6CC(v414, &qword_284DC8);
  os_log_t v418 = ((uint64_t (*)(uint64_t, uint64_t, id))v417)(v416, 1LL, v814);
  uint64_t v419 = v780;
  id v420 = v417;
  if (v418 != 1) {
    goto LABEL_167;
  }
  sub_1F6CC(v354, &qword_284DC8);
  sub_157C4((uint64_t)v845, (uint64_t)v829);
LABEL_175:
  sub_6C3C(v829);
LABEL_176:
  if (v412)
  {
LABEL_182:
    swift_bridgeObjectRelease(v810);
    uint64_t v812 = 6LL;
    uint64_t v811 = v799;
    v810 = (uint64_t *)v412;
    goto LABEL_183;
  }

  unint64_t v412 = v813;
  swift_bridgeObjectRetain(v813);
  uint64_t v799 = v801;
LABEL_181:
  if (v412) {
    goto LABEL_182;
  }
LABEL_183:
  os_log_t v449 = (uint64_t)v768;
  os_log_t v450 = v845[0];
  uint64_t v451 = sub_7241C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePodcastTitles));
  if (!v452 || (v453 = v452, v454 = sub_A86F8(v451, v452), id v456 = v455, swift_bridgeObjectRelease(v453), !v456))
  {
    uint64_t v465 = (uint64_t)v777;
    goto LABEL_212;
  }

  uint64_t v811 = v454;
  swift_bridgeObjectRelease(v810);
  BOOL v457 = v450 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v450 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType, &v819, 0LL, 0LL);
  uint64_t v458 = v757;
  sub_FF10(v457, v757, &qword_284DC8);
  unsigned int v459 = v814;
  ((void (*)(uint64_t, void, id))v803)(v449, v789, v814);
  ((void (*)(uint64_t, void, uint64_t, id))v804)(v449, 0LL, 1LL, v459);
  uint64_t v460 = v741;
  uint64_t v461 = v741 + *(int *)(v357 + 48);
  sub_FF10(v458, v741, &qword_284DC8);
  uint64_t v462 = v460;
  sub_FF10(v449, v461, &qword_284DC8);
  if (((unsigned int (*)(uint64_t, uint64_t, id))v420)(v460, 1LL, v459) == 1)
  {
    sub_1F6CC(v449, &qword_284DC8);
    sub_1F6CC(v458, &qword_284DC8);
    char v463 = ((uint64_t (*)(uint64_t, uint64_t, id))v420)(v461, 1LL, v814);
    uint64_t v464 = v805;
    uint64_t v465 = (uint64_t)v777;
    if (v463 == 1)
    {
      sub_1F6CC(v462, &qword_284DC8);
      sub_157C4((uint64_t)v845, (uint64_t)&v824);
LABEL_199:
      sub_6C3C(&v824);
      uint64_t v812 = 6LL;
      id v420 = v809;
      goto LABEL_200;
    }

    goto LABEL_191;
  }

  Swift::Bool v466 = v726;
  sub_FF10(v460, v726, &qword_284DC8);
  unint64_t v467 = ((uint64_t (*)(uint64_t, uint64_t, id))v420)(v461, 1LL, v814);
  uint64_t v464 = v805;
  if (v467 == 1)
  {
    sub_1F6CC(v449, &qword_284DC8);
    sub_1F6CC(v757, &qword_284DC8);
    (*(void (**)(uint64_t, id))(v464 + 8))(v466, v814);
LABEL_191:
    sub_1F6CC(v462, &qword_284DA0);
    sub_157C4((uint64_t)v845, (uint64_t)&v824);
    os_log_t v468 = v742;
    goto LABEL_192;
  }

  id v481 = v784;
  uint64_t v482 = v814;
  (*(void (**)(char *, uint64_t, id))(v805 + 32))(v784, v461, v814);
  uint64_t v483 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  uint64_t v484 = dispatch thunk of static Equatable.== infix(_:_:)(v466, v481, v482, v483);
  uint64_t v485 = v462;
  uint64_t v486 = *(void (**)(char *, id))(v464 + 8);
  v486(v481, v482);
  sub_1F6CC(v449, &qword_284DC8);
  sub_1F6CC(v757, &qword_284DC8);
  uint64_t v487 = v482;
  uint64_t v357 = v802;
  v486((char *)v466, v487);
  sub_1F6CC(v485, &qword_284DC8);
  sub_157C4((uint64_t)v845, (uint64_t)&v824);
  uint64_t v465 = (uint64_t)v777;
  os_log_t v468 = v742;
  if ((v484 & 1) != 0) {
    goto LABEL_199;
  }
LABEL_192:
  v469 = *sub_6EA8(&v824, v826) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v469, &v818, 0LL, 0LL);
  sub_FF10(v469, v468, &qword_284DC8);
  uint64_t v470 = v738;
  uint64_t v471 = v814;
  ((void (*)(uint64_t, void, id))v803)(v738, enum case for CommonAudio.MediaType.episode(_:), v814);
  ((void (*)(uint64_t, void, uint64_t, id))v804)(v470, 0LL, 1LL, v471);
  char v472 = v357;
  uint64_t v473 = *(int *)(v357 + 48);
  unint64_t v474 = v470;
  uint64_t v475 = v739;
  uint64_t v476 = v739 + v473;
  sub_FF10(v468, v739, &qword_284DC8);
  uint64_t v477 = v475;
  sub_FF10(v474, v476, &qword_284DC8);
  unint64_t v478 = v475;
  id v420 = v809;
  if (((unsigned int (*)(uint64_t, uint64_t, id))v809)(v478, 1LL, v471) == 1)
  {
    sub_1F6CC(v474, &qword_284DC8);
    uint64_t v477 = v739;
    sub_1F6CC(v468, &qword_284DC8);
    if (((unsigned int (*)(uint64_t, uint64_t, id))v420)(v476, 1LL, v814) == 1)
    {
      sub_1F6CC(v477, &qword_284DC8);
      sub_6C3C(&v824);
      uint64_t v465 = (uint64_t)v777;
      uint64_t v357 = v472;
      unint64_t v479 = v811;
      goto LABEL_210;
    }
  }

  else
  {
    uint64_t v480 = v717;
    sub_FF10(v477, v717, &qword_284DC8);
    if (((unsigned int (*)(uint64_t, uint64_t, id))v420)(v476, 1LL, v814) != 1)
    {
      uint64_t v499 = v477;
      id v500 = v784;
      uint64_t v501 = v814;
      (*(void (**)(char *, uint64_t, id))(v464 + 32))(v784, v476, v814);
      uint64_t v502 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
      uint64_t v503 = dispatch thunk of static Equatable.== infix(_:_:)(v480, v500, v501, v502);
      Swift::Bool v504 = v480;
      Swift::Bool v505 = *(void (**)(char *, id))(v464 + 8);
      v505(v500, v501);
      sub_1F6CC(v738, &qword_284DC8);
      sub_1F6CC(v742, &qword_284DC8);
      uint64_t v506 = v501;
      uint64_t v357 = v802;
      v505((char *)v504, v506);
      id v420 = v809;
      sub_1F6CC(v499, &qword_284DC8);
      sub_6C3C(&v824);
      uint64_t v465 = (uint64_t)v777;
      unint64_t v479 = v811;
      if ((v503 & 1) == 0) {
        goto LABEL_211;
      }
LABEL_210:
      uint64_t v812 = 6LL;
      goto LABEL_211;
    }

    sub_1F6CC(v738, &qword_284DC8);
    sub_1F6CC(v742, &qword_284DC8);
    (*(void (**)(uint64_t, id))(v464 + 8))(v480, v814);
  }

  sub_1F6CC(v477, &qword_284DA0);
  sub_6C3C(&v824);
  uint64_t v465 = (uint64_t)v777;
  uint64_t v357 = v472;
LABEL_200:
  unint64_t v479 = v811;
LABEL_211:
  uint64_t v811 = v479;
  v810 = (uint64_t *)v456;
LABEL_212:
  uint64_t v507 = v845[0];
  id v508 = sub_7245C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookTitles));
  uint64_t v510 = v509;
  uint64_t v787 = (uint64_t *)v511;
  v788 = v512;
  uint64_t v789 = v508;
  if (v509)
  {
    uint64_t v513 = v508;
    swift_bridgeObjectRetain(v509);
    uint64_t v786 = sub_A86F8(v513, v510);
    uint64_t v799 = v514;
    swift_bridgeObjectRelease(v510);
  }

  else
  {
    uint64_t v786 = 0LL;
    uint64_t v799 = 0LL;
  }

  uint64_t v515 = v507 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v515, &v827, 0LL, 0LL);
  sub_FF10(v515, v465, &qword_284DC8);
  uint64_t v516 = v779;
  uint64_t v517 = v814;
  ((void (*)(uint64_t, void, id))v803)(v779, enum case for CommonAudio.MediaType.audioBook(_:), v814);
  ((void (*)(uint64_t, void, uint64_t, id))v804)(v516, 0LL, 1LL, v517);
  uint64_t v518 = v770;
  uint64_t v519 = v770 + *(int *)(v357 + 48);
  sub_FF10(v465, v770, &qword_284DC8);
  sub_FF10(v516, v519, &qword_284DC8);
  if (((unsigned int (*)(uint64_t, uint64_t, id))v420)(v518, 1LL, v517) == 1)
  {
    sub_1F6CC(v516, &qword_284DC8);
    sub_1F6CC(v465, &qword_284DC8);
    uint64_t v520 = ((uint64_t (*)(uint64_t, uint64_t, id))v420)(v519, 1LL, v814);
    uint64_t v521 = v789;
    if (v520 == 1)
    {
      sub_1F6CC(v518, &qword_284DC8);
      uint64_t v522 = v799;
      goto LABEL_225;
    }

    goto LABEL_220;
  }

  uint64_t v523 = v751;
  sub_FF10(v518, v751, &qword_284DC8);
  if (((unsigned int (*)(uint64_t, uint64_t, id))v420)(v519, 1LL, v814) == 1)
  {
    sub_1F6CC(v516, &qword_284DC8);
    sub_1F6CC(v465, &qword_284DC8);
    (*(void (**)(uint64_t, id))(v805 + 8))(v523, v814);
    uint64_t v521 = v789;
LABEL_220:
    sub_1F6CC(v518, &qword_284DA0);
    uint64_t v522 = v799;
LABEL_221:
    if (v522)
    {
LABEL_226:
      swift_bridgeObjectRelease(v806);
      if (v510)
      {
        swift_bridgeObjectRelease(v510);
        uint64_t v524 = (uint64_t)v774;
        uint64_t v525 = (uint64_t)v773;
        uint64_t v534 = v788;
        uint64_t v535 = (void (*)(uint64_t, void, uint64_t, uint64_t))v787;
      }

      else
      {
        uint64_t v534 = 0LL;
        uint64_t v535 = 0LL;
        uint64_t v524 = (uint64_t)v774;
        uint64_t v525 = (uint64_t)v773;
      }

      uint64_t v536 = v786;
      goto LABEL_232;
    }

    sub_16474(v521, v510, (uint64_t)v787, v788);
LABEL_223:
    uint64_t v524 = (uint64_t)v774;
    uint64_t v525 = (uint64_t)v773;
    goto LABEL_233;
  }

  uint64_t v526 = v805;
  uint64_t v527 = v784;
  uint64_t v528 = v519;
  uint64_t v529 = v814;
  (*(void (**)(char *, uint64_t, id))(v805 + 32))(v784, v528, v814);
  uint64_t v530 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  uint64_t v531 = dispatch thunk of static Equatable.== infix(_:_:)(v523, v527, v529, v530);
  uint64_t v532 = v518;
  uint64_t v533 = *(void (**)(char *, id))(v526 + 8);
  v533(v527, v529);
  sub_1F6CC(v779, &qword_284DC8);
  sub_1F6CC(v465, &qword_284DC8);
  v533((char *)v523, v529);
  sub_1F6CC(v532, &qword_284DC8);
  uint64_t v522 = v799;
  uint64_t v521 = v789;
  if ((v531 & 1) == 0) {
    goto LABEL_221;
  }
LABEL_225:
  if (v522) {
    goto LABEL_226;
  }
  sub_16474(v521, v510, (uint64_t)v787, v788);
  uint64_t v537 = swift_bridgeObjectRetain(v813);
  if (!v537)
  {
    uint64_t v522 = 0LL;
    goto LABEL_223;
  }

  uint64_t v522 = v537;
  uint64_t v536 = v801;
  uint64_t v534 = (uint64_t)v806;
  uint64_t v535 = v797;
  uint64_t v524 = (uint64_t)v774;
  uint64_t v525 = (uint64_t)v773;
LABEL_232:
  swift_bridgeObjectRetain(v522);
  swift_bridgeObjectRelease(v810);
  uint64_t v812 = 10LL;
  uint64_t v797 = v535;
  uint64_t v806 = (os_log_s *)v534;
  uint64_t v811 = v536;
  v810 = (uint64_t *)v522;
LABEL_233:
  uint64_t v538 = v845[0];
  uint64_t v539 = *(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_resolvedReference);
  uint64_t v799 = v522;
  if (v539)
  {
    swift_retain(v539);
    uint64_t v540 = AudioIntent.hasResolvedReference()();
    sub_157C4((uint64_t)v845, (uint64_t)&v824);
    if (v540)
    {
      sub_6C3C(&v824);
      goto LABEL_237;
    }

    sub_6EA8(&v824, v826);
    uint64_t v541 = AudioIntent.isReferringToCurrentlyPlayingForAdd()();
    sub_6C3C(&v824);
    if (v541)
    {
LABEL_237:
      uint64_t v543 = v745;
      uint64_t v542 = v746;
      unint64_t v544 = v747;
      (*(void (**)(char *, void, uint64_t))(v746 + 104))( v745,  enum case for AudioUsoIntent.UsoNamespace.identifier(_:),  v747);
      type metadata accessor for AudioUsoIntent(0LL);
      unint64_t v545 = static AudioUsoIntent.pegasusAppBundle.getter();
      uint64_t v547 = v546;
      v809 = (os_log_s *)UsoEntity_common_MediaItem.identifiers(forNamespace:appBundleId:)(v543, v545, v546);
      swift_bridgeObjectRelease(v547);
      (*(void (**)(char *, uint64_t))(v542 + 8))(v543, v544);
      uint64_t v548 = sub_6C5C(&qword_284DF0);
      v804 = (char *)v548;
      uint64_t v549 = type metadata accessor for AudioUsoIntent.IterationOptions(0LL);
      os_log_t v550 = *(void *)(v549 - 8);
      uint64_t v551 = *(unsigned __int8 *)(v550 + 80);
      uint64_t v552 = ((v551 + 32) & ~v551) + *(void *)(v550 + 72);
      unint64_t v553 = v551 | 7;
      unint64_t v554 = swift_allocObject(v548, v552, v551 | 7);
      uint64_t v555 = sub_142CFC(v554, 1LL);
      uint64_t v556 = enum case for AudioUsoIntent.IterationOptions.includeResolvedReferences(_:);
      uint64_t v557 = *(void (**)(uint64_t, void, uint64_t))(v550 + 104);
      v557(v558, enum case for AudioUsoIntent.IterationOptions.includeResolvedReferences(_:), v549);
      uint64_t v559 = v539;
      uint64_t v560 = WHAError.rawValue.getter(v555);
      BOOL v814 = (id)UsoEntity_common_MediaItem.findFirst(options:with:)(v560, sub_142944, 0LL);
      swift_bridgeObjectRelease(v560);
      unint64_t v561 = v804;
      unint64_t v562 = swift_allocObject(v804, v552, v553);
      uint64_t v563 = sub_142CFC(v562, 1LL);
      v557(v564, v556, v549);
      uint64_t v565 = WHAError.rawValue.getter(v563);
      Swift::String v805 = UsoEntity_common_MediaItem.findFirst(options:with:)(v565, sub_142950, 0LL);
      swift_bridgeObjectRelease(v565);
      uint64_t v566 = swift_allocObject(v561, v552, v553);
      uint64_t v567 = sub_142CFC(v566, 1LL);
      v557(v568, v556, v549);
      unint64_t v569 = WHAError.rawValue.getter(v567);
      uint64_t v803 = v559;
      unint64_t v570 = UsoEntity_common_MediaItem.findFirst(options:with:)(v569, sub_142C78, 0LL);
      swift_bridgeObjectRelease(v569);
      os_log_t v571 = v748;
      uint64_t v572 = v809;
      sub_724C0((uint64_t)v809, v748);
      swift_bridgeObjectRelease(v572);
      uint64_t v573 = type metadata accessor for UsoIdentifier(0LL);
      uint64_t v574 = *(void *)(v573 - 8);
      uint64_t v575 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v574 + 48))(v571, 1LL, v573);
      if ((_DWORD)v575 == 1)
      {
        sub_1F6CC(v571, &qword_284900);
        uint64_t v576 = v813;
      }

      else
      {
        uint64_t v577 = UsoIdentifier.value.getter(v575);
        uint64_t v579 = v578;
        (*(void (**)(uint64_t, uint64_t))(v574 + 8))(v571, v573);
        uint64_t v580 = (void (*)(uint64_t, void, uint64_t, uint64_t))sub_A86F8(v577, v579);
        uint64_t v582 = v581;
        swift_bridgeObjectRelease(v579);
        uint64_t v576 = v813;
        if (v582)
        {
          swift_bridgeObjectRelease(v806);
          uint64_t v797 = v580;
          uint64_t v806 = v582;
        }
      }

      char v583 = v814;
      uint64_t v584 = v805;
      if (v814
        && (uint64_t v585 = swift_retain(v814),
            uint64_t v586 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v585),
            os_log_t v588 = v587,
            swift_release(v583),
            v588))
      {
        char v589 = sub_A86F8(v586, v588);
        uint64_t v591 = v590;
        swift_bridgeObjectRelease(v588);
        if (v591) {
          uint64_t v592 = v589;
        }
        else {
          uint64_t v592 = 0LL;
        }
        if (!v584) {
          goto LABEL_254;
        }
      }

      else
      {
        uint64_t v592 = 0LL;
        uint64_t v591 = 0LL;
        if (!v584) {
          goto LABEL_254;
        }
      }

      unint64_t v593 = swift_retain(v584);
      unint64_t v594 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v593);
      uint64_t v596 = v595;
      swift_release(v584);
      if (v596)
      {
        uint64_t v597 = sub_A86F8(v594, v596);
        uint64_t v599 = v598;
        swift_bridgeObjectRelease(v596);
        if (v599) {
          unint64_t v600 = (char *)v597;
        }
        else {
          unint64_t v600 = 0LL;
        }
        v804 = v600;
LABEL_255:
        v809 = v599;
        BOOL v814 = v591;
        Swift::String v805 = v592;
        if (v570)
        {
          uint64_t v601 = swift_retain(v570);
          os_log_t v602 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v601);
          uint64_t v604 = v603;
          swift_release_n(v570, 2LL);
          swift_release(v803);
          swift_release(v584);
          swift_release(v583);
          if (v604)
          {
            uint64_t v605 = sub_A86F8(v602, v604);
            unint64_t v607 = v606;
            swift_bridgeObjectRelease(v604);
            unint64_t v608 = (void (*)(uint64_t, uint64_t))v769;
            uint64_t v609 = (uint64_t)v810;
            if (v607)
            {
              swift_bridgeObjectRelease(v810);
              uint64_t v811 = v605;
              uint64_t v609 = v607;
            }

            goto LABEL_261;
          }
        }

        else
        {
          swift_release(v803);
          swift_release(v583);
          swift_release(v584);
        }

        unint64_t v608 = (void (*)(uint64_t, uint64_t))v769;
        uint64_t v609 = (uint64_t)v810;
LABEL_261:
        uint64_t v610 = 1LL;
LABEL_271:
        uint64_t v617 = v771;
        goto LABEL_272;
      }

LABEL_164:
  Class v400 = (void *)dispatch thunk of AudioIntent.podcastTitles.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v401 = (os_log_s *)sub_7241C(v400);
  unint64_t v403 = v402;
  swift_bridgeObjectRelease(v400);
  uint64_t v781 = v332;
  if (v403)
  {
    os_log_t v779 = (os_log_t)sub_A86F8((uint64_t)v401, v403);
    uint64_t v405 = v404;
    swift_bridgeObjectRelease(v403);
  }

  else
  {
    os_log_t v779 = v401;
    uint64_t v405 = 0LL;
  }

  uint64_t v406 = (uint64_t)v737;
  dispatch thunk of AudioIntent.mediaType.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v407 = v758;
  LODWORD(v761) = enum case for CommonAudio.MediaType.podcast(_:);
  ((void (*)(uint64_t))v775)(v758);
  v288(v407, 0LL, 1LL, v285);
  uint64_t v408 = v738;
  uint64_t v409 = v738 + *(int *)(v782 + 48);
  sub_FF10(v333, v738, &qword_284DC8);
  sub_FF10(v407, v409, &qword_284DC8);
  char v410 = (unsigned int (*)(void, void, void))v780;
  int v411 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v780)(v408, 1LL, v285);
  unint64_t v412 = (unint64_t)v784;
  if (v411 != 1)
  {
    uint64_t v413 = v720;
    sub_FF10(v408, v720, &qword_284DC8);
    if (v410(v409, 1LL, v285) != 1)
    {
      uint64_t v422 = v778;
      uint64_t v423 = v757;
      (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v409, v777);
      uint64_t v424 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
      char v425 = dispatch thunk of static Equatable.== infix(_:_:)(v413, v423, v777, v424);
      uint64_t v426 = *(void (**)(char *, uint64_t))(v422 + 8);
      BOOL v427 = v423;
      uint64_t v285 = v777;
      v426(v427, v777);
      sub_1F6CC(v758, &qword_284DC8);
      sub_1F6CC(v762, &qword_284DC8);
      v426((char *)v413, v285);
      unint64_t v412 = (unint64_t)v784;
      sub_1F6CC(v408, &qword_284DC8);
      sub_157C4((uint64_t)v804, (uint64_t)v793);
      os_log_t v414 = v769;
      if ((v425 & 1) != 0) {
        goto LABEL_182;
      }
LABEL_173:
      sub_6EA8(v793, v794);
      uint64_t v415 = v410;
      uint64_t v416 = (uint64_t)v728;
      dispatch thunk of AudioIntent.mediaType.getter(v785, &protocol witness table for AudioUsoIntent);
      ((void (*)(uint64_t, void, uint64_t))v775)(v406, enum case for CommonAudio.MediaType.episode(_:), v285);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v774)(v406, 0LL, 1LL, v285);
      uint64_t v417 = (uint64_t)v414 + *(int *)(v782 + 48);
      sub_FF10(v416, (uint64_t)v769, &qword_284DC8);
      os_log_t v418 = v769;
      sub_FF10(v406, v417, &qword_284DC8);
      if (v415(v418, 1LL, v285) == 1)
      {
        sub_1F6CC(v406, &qword_284DC8);
        os_log_t v418 = v769;
        sub_1F6CC(v416, &qword_284DC8);
        char v410 = v415;
        if (v415(v417, 1LL, v285) == 1)
        {
          sub_1F6CC((uint64_t)v418, &qword_284DC8);
          goto LABEL_182;
        }
      }

      else
      {
        uint64_t v419 = v707;
        sub_FF10((uint64_t)v418, v707, &qword_284DC8);
        if (v415(v417, 1LL, v285) != 1)
        {
          uint64_t v451 = v778;
          uint64_t v452 = v757;
          (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v417, v777);
          uint64_t v453 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
          char v454 = dispatch thunk of static Equatable.== infix(_:_:)(v419, v452, v777, v453);
          uint64_t v455 = v419;
          id v456 = *(void (**)(char *, uint64_t))(v451 + 8);
          BOOL v457 = v452;
          uint64_t v285 = v777;
          v456(v457, v777);
          sub_1F6CC(v406, &qword_284DC8);
          sub_1F6CC(v416, &qword_284DC8);
          v456((char *)v455, v285);
          unint64_t v412 = (unint64_t)v784;
          sub_1F6CC((uint64_t)v418, &qword_284DC8);
          sub_6C3C(v793);
          char v410 = (unsigned int (*)(void, void, void))v780;
          if ((v454 & 1) != 0) {
            goto LABEL_183;
          }
LABEL_179:
          id v420 = v785;
          uint64_t v421 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
          if (!v405) {
            goto LABEL_186;
          }
          goto LABEL_185;
        }

        sub_1F6CC(v406, &qword_284DC8);
        sub_1F6CC(v416, &qword_284DC8);
        (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v419, v285);
        char v410 = (unsigned int (*)(void, void, void))v780;
      }

      sub_1F6CC((uint64_t)v418, &qword_284DA0);
      sub_6C3C(v793);
      goto LABEL_179;
    }

    sub_1F6CC(v758, &qword_284DC8);
    sub_1F6CC(v762, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v413, v285);
LABEL_172:
    sub_1F6CC(v408, &qword_284DA0);
    sub_157C4((uint64_t)v804, (uint64_t)v793);
    os_log_t v414 = v769;
    goto LABEL_173;
  }

  sub_1F6CC(v407, &qword_284DC8);
  char v410 = (unsigned int (*)(void, void, void))v780;
  sub_1F6CC(v333, &qword_284DC8);
  if (v410(v409, 1LL, v285) != 1) {
    goto LABEL_172;
  }
  sub_1F6CC(v408, &qword_284DC8);
  sub_157C4((uint64_t)v804, (uint64_t)v793);
LABEL_182:
  sub_6C3C(v793);
LABEL_183:
  id v420 = v785;
  uint64_t v421 = (void (*)(uint64_t, void, uint64_t, uint64_t))v774;
  if (v405 || (swift_bridgeObjectRetain(v412), v779 = v771, (uint64_t v405 = v412) != 0))
  {
LABEL_185:
    swift_bridgeObjectRelease(v781);
    uint64_t v773 = (_BYTE *)(&dword_4 + 2);
    os_log_t v783 = v779;
    uint64_t v781 = (os_log_s *)v405;
  }

LABEL_186:
  uint64_t v428 = (void *)dispatch thunk of AudioIntent.applePodcastTitles.getter( v420,  &protocol witness table for AudioUsoIntent);
  uint64_t v429 = sub_7241C(v428);
  unint64_t v431 = v430;
  swift_bridgeObjectRelease(v428);
  uint64_t v432 = (uint64_t)v742;
  if (!v431 || (os_log_t v433 = (os_log_t)sub_A86F8(v429, v431), v435 = v434, swift_bridgeObjectRelease(v431), !v435))
  {
    uint64_t v441 = (uint64_t)v741;
    goto LABEL_215;
  }

  os_log_t v779 = v435;
  os_log_t v783 = v433;
  swift_bridgeObjectRelease(v781);
  uint64_t v436 = v726;
  dispatch thunk of AudioIntent.mediaType.getter(v420, &protocol witness table for AudioUsoIntent);
  uint64_t v437 = v725;
  ((void (*)(uint64_t, void, uint64_t))v775)(v725, v761, v285);
  v421(v437, 0LL, 1LL, v285);
  uint64_t v438 = v410;
  uint64_t v439 = v729;
  uint64_t v440 = v729 + *(int *)(v782 + 48);
  sub_FF10(v436, v729, &qword_284DC8);
  sub_FF10(v437, v440, &qword_284DC8);
  if (v438(v439, 1LL, v285) == 1)
  {
    sub_1F6CC(v437, &qword_284DC8);
    sub_1F6CC(v436, &qword_284DC8);
    char v410 = v438;
    if (v438(v440, 1LL, v285) == 1)
    {
      sub_1F6CC(v729, &qword_284DC8);
      sub_157C4((uint64_t)v804, (uint64_t)&v790);
LABEL_206:
      sub_6C3C(&v790);
      uint64_t v773 = (_BYTE *)(&dword_4 + 2);
      goto LABEL_207;
    }

    goto LABEL_194;
  }

  uint64_t v442 = v694;
  sub_FF10(v439, v694, &qword_284DC8);
  v443 = v438;
  unsigned int v444 = v438(v440, 1LL, v285);
  uint64_t v445 = v778;
  if (v444 == 1)
  {
    sub_1F6CC(v725, &qword_284DC8);
    sub_1F6CC(v726, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v445 + 8))(v442, v285);
    char v410 = v438;
LABEL_194:
    sub_1F6CC(v729, &qword_284DA0);
    sub_157C4((uint64_t)v804, (uint64_t)&v790);
    uint64_t v446 = (uint64_t)v702;
    goto LABEL_195;
  }

  uint64_t v461 = v757;
  (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v440, v777);
  uint64_t v462 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  char v463 = dispatch thunk of static Equatable.== infix(_:_:)(v442, v461, v777, v462);
  uint64_t v464 = *(void (**)(char *, uint64_t))(v445 + 8);
  uint64_t v465 = v461;
  uint64_t v285 = v777;
  v464(v465, v777);
  sub_1F6CC(v725, &qword_284DC8);
  sub_1F6CC(v726, &qword_284DC8);
  v464((char *)v442, v285);
  sub_1F6CC(v439, &qword_284DC8);
  sub_157C4((uint64_t)v804, (uint64_t)&v790);
  char v410 = v443;
  uint64_t v446 = (uint64_t)v702;
  if ((v463 & 1) != 0) {
    goto LABEL_206;
  }
LABEL_195:
  sub_6EA8(&v790, v792);
  dispatch thunk of AudioIntent.mediaType.getter(v785, &protocol witness table for AudioUsoIntent);
  uint64_t v447 = v710;
  ((void (*)(uint64_t, void, uint64_t))v775)(v710, enum case for CommonAudio.MediaType.episode(_:), v285);
  v421(v447, 0LL, 1LL, v285);
  uint64_t v448 = v432 + *(int *)(v782 + 48);
  sub_FF10(v446, v432, &qword_284DC8);
  sub_FF10(v447, v448, &qword_284DC8);
  if (v410(v432, 1LL, v285) == 1)
  {
    sub_1F6CC(v447, &qword_284DC8);
    sub_1F6CC(v446, &qword_284DC8);
    if (v410(v448, 1LL, v285) == 1)
    {
      sub_1F6CC(v432, &qword_284DC8);
      sub_6C3C(&v790);
      uint64_t v441 = (uint64_t)v741;
      id v420 = v785;
      os_log_t v449 = v783;
      os_log_t v450 = v779;
      goto LABEL_213;
    }
  }

  else
  {
    uint64_t v458 = v688;
    sub_FF10(v432, v688, &qword_284DC8);
    unsigned int v459 = v410(v448, 1LL, v285);
    uint64_t v460 = v778;
    if (v459 != 1)
    {
      uint64_t v470 = v757;
      (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v448, v777);
      uint64_t v471 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
      char v472 = dispatch thunk of static Equatable.== infix(_:_:)(v458, v470, v777, v471);
      uint64_t v473 = v446;
      unint64_t v474 = *(void (**)(char *, uint64_t))(v460 + 8);
      uint64_t v475 = v470;
      uint64_t v285 = v777;
      v474(v475, v777);
      sub_1F6CC(v710, &qword_284DC8);
      sub_1F6CC(v473, &qword_284DC8);
      v474((char *)v458, v285);
      sub_1F6CC(v432, &qword_284DC8);
      sub_6C3C(&v790);
      uint64_t v441 = (uint64_t)v741;
      id v420 = v785;
      os_log_t v449 = v783;
      os_log_t v450 = v779;
      if ((v472 & 1) == 0) {
        goto LABEL_214;
      }
LABEL_213:
      uint64_t v773 = (_BYTE *)(&dword_4 + 2);
      goto LABEL_214;
    }

    sub_1F6CC(v710, &qword_284DC8);
    sub_1F6CC(v446, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v460 + 8))(v458, v285);
  }

  sub_1F6CC(v432, &qword_284DA0);
  sub_6C3C(&v790);
LABEL_207:
  uint64_t v441 = (uint64_t)v741;
  id v420 = v785;
  os_log_t v449 = v783;
  os_log_t v450 = v779;
LABEL_214:
  os_log_t v783 = v449;
  uint64_t v781 = v450;
LABEL_215:
  uint64_t v476 = (void *)dispatch thunk of AudioIntent.appAudiobookTitles.getter( v420,  &protocol witness table for AudioUsoIntent);
  uint64_t v477 = sub_7245C(v476);
  unint64_t v479 = v478;
  uint64_t v777 = v480;
  os_log_t v779 = v481;
  swift_bridgeObjectRelease(v476);
  uint64_t v482 = (uint64_t)v740;
  uint64_t v762 = v477;
  if (v479)
  {
    swift_bridgeObjectRetain(v479);
    os_log_t v769 = (os_log_t)sub_A86F8(v477, v479);
    uint64_t v484 = v483;
    swift_bridgeObjectRelease(v479);
  }

  else
  {
    os_log_t v769 = 0LL;
    uint64_t v484 = 0LL;
  }

  dispatch thunk of AudioIntent.mediaType.getter(v785, &protocol witness table for AudioUsoIntent);
  ((void (*)(uint64_t, void, uint64_t))v775)(v482, enum case for CommonAudio.MediaType.audioBook(_:), v285);
  v421(v482, 0LL, 1LL, v285);
  uint64_t v485 = v285;
  uint64_t v486 = v743;
  uint64_t v487 = v743 + *(int *)(v782 + 48);
  sub_FF10(v441, v743, &qword_284DC8);
  sub_FF10(v482, v487, &qword_284DC8);
  if (v410(v486, 1LL, v485) == 1)
  {
    sub_1F6CC(v482, &qword_284DC8);
    sub_1F6CC(v441, &qword_284DC8);
    if (v410(v487, 1LL, v485) == 1)
    {
      sub_1F6CC(v486, &qword_284DC8);
      os_log_t v488 = v779;
      uint64_t v489 = v777;
      goto LABEL_228;
    }

    goto LABEL_223;
  }

  uint64_t v782 = v484;
  uint64_t v490 = v721;
  sub_FF10(v486, v721, &qword_284DC8);
  if (v410(v487, 1LL, v485) == 1)
  {
    sub_1F6CC(v482, &qword_284DC8);
    sub_1F6CC(v441, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v490, v485);
    uint64_t v484 = v782;
LABEL_223:
    sub_1F6CC(v486, &qword_284DA0);
    os_log_t v488 = v779;
    uint64_t v489 = v777;
LABEL_224:
    if (v484) {
      goto LABEL_229;
    }
    sub_16474(v762, v479, v489, (uint64_t)v488);
LABEL_226:
    id v491 = v785;
    uint64_t v492 = v748;
    uint64_t v493 = (uint64_t)v747;
    uint64_t v494 = (uint64_t)v746;
    uint64_t v495 = v753;
    goto LABEL_235;
  }

  uint64_t v496 = v778;
  uint64_t v497 = v757;
  (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v757, v487, v485);
  uint64_t v498 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  LODWORD(v780) = dispatch thunk of static Equatable.== infix(_:_:)(v490, v497, v485, v498);
  uint64_t v499 = v486;
  id v500 = *(void (**)(char *, uint64_t))(v496 + 8);
  v500(v497, v485);
  sub_1F6CC(v482, &qword_284DC8);
  sub_1F6CC(v441, &qword_284DC8);
  v500((char *)v490, v485);
  sub_1F6CC(v499, &qword_284DC8);
  uint64_t v484 = v782;
  os_log_t v488 = v779;
  uint64_t v489 = v777;
  if ((v780 & 1) == 0) {
    goto LABEL_224;
  }
LABEL_228:
  if (v484)
  {
LABEL_229:
    swift_bridgeObjectRelease(v776);
    if (v479)
    {
      swift_bridgeObjectRelease(v479);
    }

    else
    {
      os_log_t v488 = 0LL;
      uint64_t v489 = 0LL;
    }

    goto LABEL_234;
  }

  sub_16474(v762, v479, v489, (uint64_t)v488);
  uint64_t v501 = swift_bridgeObjectRetain(v784);
  if (!v501)
  {
    uint64_t v484 = 0LL;
    goto LABEL_226;
  }

  uint64_t v484 = v501;
  os_log_t v769 = v771;
  os_log_t v488 = v776;
  uint64_t v489 = (uint64_t)v766;
LABEL_234:
  id v491 = v785;
  uint64_t v492 = v748;
  uint64_t v493 = (uint64_t)v747;
  uint64_t v494 = (uint64_t)v746;
  uint64_t v495 = v753;
  swift_bridgeObjectRetain(v484);
  swift_bridgeObjectRelease(v781);
  uint64_t v773 = (_BYTE *)(&dword_8 + 2);
  os_log_t v766 = (os_log_t)v489;
  v776 = v488;
  os_log_t v783 = v769;
  uint64_t v781 = (os_log_s *)v484;
LABEL_235:
  uint64_t v502 = dispatch thunk of AudioIntent.resolvedReference.getter(v491, &protocol witness table for AudioUsoIntent);
  uint64_t v782 = v484;
  if (v502)
  {
    uint64_t v503 = (void (**)(os_log_s *, void, uint64_t))v502;
    Swift::Bool v504 = AudioIntent.hasResolvedReference()();
    sub_157C4((uint64_t)v804, (uint64_t)&v790);
    if (v504)
    {
      sub_6C3C(&v790);
      goto LABEL_239;
    }

    sub_6EA8(&v790, v792);
    Swift::Bool v505 = AudioIntent.isReferringToCurrentlyPlayingForAdd()();
    sub_6C3C(&v790);
    if (v505)
    {
LABEL_239:
      uint64_t v507 = v715;
      uint64_t v506 = v716;
      id v508 = v503;
      uint64_t v509 = v717;
      uint64_t v510 = (*(uint64_t (**)(char *, void, uint64_t))(v716 + 104))( v715,  enum case for AudioUsoIntent.UsoNamespace.identifier(_:),  v717);
      uint64_t v511 = static AudioUsoIntent.pegasusAppBundle.getter(v510);
      uint64_t v513 = v512;
      uint64_t v780 = UsoEntity_common_MediaItem.identifiers(forNamespace:appBundleId:)(v507, v511, v512);
      swift_bridgeObjectRelease(v513);
      (*(void (**)(char *, uint64_t))(v506 + 8))(v507, v509);
      unsigned __int8 v514 = (void (**)(os_log_s *, void, uint64_t))sub_6C5C(&qword_284DF0);
      uint64_t v515 = type metadata accessor for AudioUsoIntent.IterationOptions(0LL);
      uint64_t v516 = *(void *)(v515 - 8);
      uint64_t v517 = *(unsigned __int8 *)(v516 + 80);
      uint64_t v778 = ((v517 + 32) & ~v517) + *(void *)(v516 + 72);
      uint64_t v518 = v517 | 7;
      uint64_t v775 = v514;
      uint64_t v519 = swift_allocObject(v514, v778, v517 | 7);
      uint64_t v520 = sub_142CFC(v519, 1LL);
      uint64_t v521 = enum case for AudioUsoIntent.IterationOptions.includeResolvedReferences(_:);
      uint64_t v522 = *(void (**)(uint64_t, void, uint64_t))(v516 + 104);
      v522(v523, enum case for AudioUsoIntent.IterationOptions.includeResolvedReferences(_:), v515);
      uint64_t v524 = WHAError.rawValue.getter(v520);
      uint64_t v777 = UsoEntity_common_MediaItem.findFirst(options:with:)(v524, sub_142944, 0LL);
      swift_bridgeObjectRelease(v524);
      uint64_t v525 = (void (*)(void, void, void))v514;
      uint64_t v526 = v778;
      uint64_t v527 = swift_allocObject(v525, v778, v518);
      uint64_t v528 = sub_142CFC(v527, 1LL);
      v522(v529, v521, v515);
      uint64_t v530 = WHAError.rawValue.getter(v528);
      os_log_t v779 = (os_log_t)UsoEntity_common_MediaItem.findFirst(options:with:)(v530, sub_142950, 0LL);
      swift_bridgeObjectRelease(v530);
      uint64_t v531 = swift_allocObject(v775, v526, v518);
      uint64_t v532 = sub_142CFC(v531, 1LL);
      v522(v533, v521, v515);
      uint64_t v534 = WHAError.rawValue.getter(v532);
      uint64_t v775 = v508;
      uint64_t v535 = UsoEntity_common_MediaItem.findFirst(options:with:)(v534, sub_142C78, 0LL);
      swift_bridgeObjectRelease(v534);
      uint64_t v536 = v718;
      uint64_t v537 = v780;
      sub_724C0(v780, v718);
      swift_bridgeObjectRelease(v537);
      uint64_t v538 = type metadata accessor for UsoIdentifier(0LL);
      uint64_t v539 = *(void *)(v538 - 8);
      uint64_t v540 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v539 + 48))(v536, 1LL, v538);
      if ((_DWORD)v540 == 1)
      {
        sub_1F6CC(v536, &qword_284900);
        id v491 = v785;
        uint64_t v541 = v744;
        uint64_t v542 = (void (*)(uint64_t, os_log_t))v739;
      }

      else
      {
        uint64_t v543 = UsoIdentifier.value.getter(v540);
        unint64_t v545 = v544;
        (*(void (**)(uint64_t, uint64_t))(v539 + 8))(v536, v538);
        uint64_t v546 = sub_A86F8(v543, v545);
        uint64_t v548 = v547;
        swift_bridgeObjectRelease(v545);
        uint64_t v541 = v744;
        uint64_t v542 = (void (*)(uint64_t, os_log_t))v739;
        if (v548)
        {
          swift_bridgeObjectRelease(v776);
          os_log_t v766 = (os_log_t)v546;
          v776 = v548;
        }

        id v491 = v785;
      }

      uint64_t v549 = v777;
      os_log_t v550 = v779;
      if (v777
        && (uint64_t v551 = swift_retain(v777),
            uint64_t v552 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v551),
            unint64_t v554 = v553,
            swift_release(v549),
            v554))
      {
        uint64_t v555 = sub_A86F8(v552, v554);
        uint64_t v557 = v556;
        swift_bridgeObjectRelease(v554);
        if (v557) {
          uint64_t v558 = (os_log_s *)v555;
        }
        else {
          uint64_t v558 = 0LL;
        }
        os_log_t v779 = v558;
        if (!v550) {
          goto LABEL_258;
        }
      }

      else
      {
        os_log_t v779 = 0LL;
        uint64_t v557 = 0LL;
        if (!v550) {
          goto LABEL_258;
        }
      }

      uint64_t v559 = swift_retain(v550);
      uint64_t v560 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v559);
      unint64_t v562 = v561;
      swift_release(v550);
      if (v562)
      {
        uint64_t v563 = sub_A86F8(v560, v562);
        uint64_t v565 = v564;
        swift_bridgeObjectRelease(v562);
        if (v565) {
          uint64_t v566 = v563;
        }
        else {
          uint64_t v566 = 0LL;
        }
        uint64_t v778 = v566;
        uint64_t v780 = v565;
        if (v535)
        {
LABEL_259:
          uint64_t v567 = swift_retain(v535);
          uint64_t v568 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v567);
          unint64_t v570 = v569;
          swift_release_n(v535, 2LL);
          swift_release(v775);
          swift_release(v550);
          swift_release(v777);
          if (v570)
          {
            os_log_t v571 = (os_log_t)sub_A86F8(v568, v570);
            uint64_t v573 = v572;
            swift_bridgeObjectRelease(v570);
            if (v573)
            {
              swift_bridgeObjectRelease(v781);
              os_log_t v783 = v571;
              uint64_t v781 = (os_log_s *)v573;
            }
          }

          goto LABEL_262;
        }

      uint64_t v336 = INPlayMediaIntent.firstMediaItemType()(v318);
      uint64_t v337 = (int)v414;
      if (v336 != 5)
      {
        uint64_t v336 = INPlayMediaIntent.firstMediaItemType()(v336);
        if (v336 == 19) {
          uint64_t v337 = (int)v414;
        }
        else {
          uint64_t v337 = 0;
        }
      }

      if (INPlayMediaIntent.firstMediaItemType()(v336) == 16)
      {
      }

      else if (v337)
      {
LABEL_197:
        swift_bridgeObjectRelease(v405);
        swift_bridgeObjectRelease(v73);
        uint64_t v341 = v410(v380, v409, v396);
        int v342 = (os_log_s *)Logger.logObject.getter(v341);
        uint64_t v343 = static os_log_type_t.info.getter(v342);
        if (os_log_type_enabled(v342, v343))
        {
          int v344 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)int v344 = 0;
          _os_log_impl( &dword_0,  v342,  v343,  "PlayMediaDialogProvider going to makeEditorialPlaylist for playlist/radio",  v344,  2u);
          swift_slowDealloc(v344, -1LL, -1LL);
        }

        ((void (*)(_BYTE *, uint64_t))v376)(v380, v396);
        unint64_t v269 = (uint64_t)v411;
        sub_161D90(v413, v74, (uint64_t)sub_16F208, (uint64_t)v411);
        goto LABEL_122;
      }

      if (v320)
      {
        uint64_t v338 = [v74 *(SEL *)&v80[392]];
        if (v338)
        {
          uint64_t v339 = v338;
          uint64_t v340 = (char *)[v338 sortOrder];

          if (v340 == (_BYTE *)&dword_4 + 1) {
            goto LABEL_197;
          }
        }
      }

      LOBYTE(v20sub_6C3C(v0 + 4) = v414 ^ 1;
      if (v407 != 3)
      {
        uint64_t v346 = v405;
LABEL_208:
        swift_bridgeObjectRelease(v346);
LABEL_211:
        os_log_type_t v347 = sub_6C5C(&qword_2844D0);
        uint64_t v348 = swift_initStackObject(v347, &v416);
        int v349 = v348;
        *(_OWORD *)(v348 + sub_6C3C(v0 + 16) = xmmword_219330;
        *(void *)(v348 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
        *(void *)(v348 + 40) = 0xE500000000000000LL;
        if (v73) {
          char v350 = v88;
        }
        else {
          char v350 = 0LL;
        }
        char v351 = 0xE000000000000000LL;
        if (v73) {
          __n128 v352 = v73;
        }
        else {
          __n128 v352 = 0xE000000000000000LL;
        }
        *(void *)(v348 + 4sub_6C3C(v0 + 8) = v350;
        *(void *)(v348 + 56) = v352;
        *(void *)(v348 + 7sub_6C3C(v0 + 2) = v69;
        *(void *)(v348 + 80) = 0x747369747261LL;
        uint64_t v354 = v404;
        uint64_t v353 = v405;
        if (v405) {
          char v351 = v405;
        }
        else {
          uint64_t v354 = 0LL;
        }
        *(void *)(v349 + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
        *(void *)(v349 + 96) = v354;
        *(void *)(v349 + 10sub_6C3C(v0 + 4) = v351;
        *(void *)(v349 + 120) = v69;
        *(void *)(v349 + 12sub_6C3C(v0 + 8) = 0x61526576694C7369LL;
        *(void *)(v349 + 136) = 0xEB000000006F6964LL;
        *(_BYTE *)(v349 + 1sub_6C3C(v0 + 44) = v204;
        *(void *)(v349 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
        *(void *)(v349 + 176) = 0xD00000000000001BLL;
        *(void *)(v349 + 18sub_6C3C(v0 + 4) = 0x8000000000221920LL;
        swift_bridgeObjectRetain(v353);
        *(_BYTE *)(v349 + 19sub_6C3C(v0 + 2) = [v74 playbackQueueLocation] == (char *)&dword_0 + 2;
        *(void *)(v349 + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
        *(void *)(v349 + 2sub_6C3C(v0 + 24) = 0xD00000000000001CLL;
        *(void *)(v349 + 23sub_6C3C(v0 + 2) = 0x8000000000221940LL;
        *(_BYTE *)(v349 + 240) = [v74 playbackQueueLocation] == (char *)&dword_0 + 3;
        *(void *)(v349 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
        *(void *)(v349 + 27sub_6C3C(v0 + 2) = 0x667568536E4F7369LL;
        *(void *)(v349 + 280) = 0xEB00000000656C66LL;
        uint64_t v355 = [v74 backingStore];
        os_log_type_t v356 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        uint64_t v357 = (void *)swift_dynamicCastObjCClass(v355, v356);
        if (v357)
        {
          os_log_t v358 = [v357 playShuffled];

          uint64_t v359 = v358 & v414;
        }

        else
        {

          uint64_t v359 = 0;
        }

        *(_BYTE *)(v349 + 28sub_6C3C(v0 + 8) = v359;
        *(void *)(v349 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
        *(void *)(v349 + 320) = 0x657065526E4F7369LL;
        *(void *)(v349 + 32sub_6C3C(v0 + 8) = 0xEA00000000007461LL;
        Swift::String v360 = [v74 playbackRepeatMode] == (char *)&dword_0 + 2
            || [v74 playbackRepeatMode] == (char *)&dword_0 + 3;
        *(_BYTE *)(v349 + 336) = v360;
        *(void *)(v349 + 360) = &type metadata for Bool;
        strcpy((char *)(v349 + 368), "isAppSpecified");
        *(_BYTE *)(v349 + 38sub_6C3C(v0 + 3) = -18;
        type metadata accessor for AppSelectionContext(0LL);
        uint64_t v361 = static AppSelectionContext.shared.getter();
        if (v361)
        {
          char v362 = v361;
          dispatch thunk of AppSelectionContext.report.getter();
          swift_release(v362);
        }

        else
        {
          double v363 = type metadata accessor for AppSelectionReport(0LL);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v363 - 8) + 56LL))( v379,  1LL,  1LL,  v363);
        }

        uint64_t v364 = v379;
        uint64_t v365 = sub_15F0C0(v413, (uint64_t)v74, (uint64_t (*)(char *, uint64_t))(v412 + 128), (uint64_t)v379);
        sub_1F6CC((uint64_t)v364, &qword_285470);
        *(_BYTE *)(v349 + 38sub_6C3C(v0 + 4) = v365 & 1;
        *(void *)(v349 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
        strcpy((char *)(v349 + 416), "isPersonalized");
        *(_BYTE *)(v349 + 4sub_6C3C(v0 + 31) = -18;
        uint64_t v366 = [v74 privatePlayMediaIntentData];
        uint64_t v367 = [v366 isPersonalizedRequest];

        v368.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
        if (v367)
        {
          uint64_t v369 = v367;
          uint64_t v370 = static NSObject.== infix(_:_:)(v369, v368.super.super.isa);
        }

        else
        {
          uint64_t v370 = 0;
        }

        *(void *)(v349 + 456) = &type metadata for Bool;
        *(_BYTE *)(v349 + 43sub_6C3C(v0 + 2) = v370 & 1;
        uint64_t v371 = sub_74D54(v349);
        *((void *)&v424 + 1) = v406;
        *(void *)&char v425 = &off_272BD0;
        *(void *)&uint64_t v423 = v74;
        uint64_t v372 = v74;
        uint64_t v373 = (uint64_t)v411;
        sub_1CFB48(v371, v413, (uint64_t)&v423, (uint64_t)sub_16F208, (uint64_t)v411);
        swift_bridgeObjectRelease(v371);
        swift_bridgeObjectRelease(v405);
        sub_1F6CC((uint64_t)&v423, &qword_283FE8);
        uint64_t v132 = v373;
        return swift_release(v132);
      }

      if (v405)
      {
        if ((v405 & 0x2000000000000000LL) != 0) {
          uint64_t v345 = HIBYTE(v405) & 0xF;
        }
        else {
          uint64_t v345 = v404 & 0xFFFFFFFFFFFFLL;
        }
        swift_bridgeObjectRelease(v405);
        if (!v345) {
          goto LABEL_211;
        }
        uint64_t v346 = v73;
        uint64_t v88 = v404;
        uint64_t v73 = v405;
        uint64_t v404 = 0LL;
        uint64_t v405 = 0xE000000000000000LL;
        goto LABEL_208;
      }

      uint64_t v318 = INPlayMediaIntent.firstMediaItemType()(v302);
      uint64_t v319 = (int)v64;
      if (v318 != 5)
      {
        uint64_t v318 = INPlayMediaIntent.firstMediaItemType()(v318);
        if (v318 == 19) {
          uint64_t v319 = (int)v64;
        }
        else {
          uint64_t v319 = 0;
        }
      }

      if (INPlayMediaIntent.firstMediaItemType()(v318) == 16)
      {
      }

      else if (v319)
      {
LABEL_197:
        swift_bridgeObjectRelease(v390);
        swift_bridgeObjectRelease(v19);
        uint64_t v323 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v361, v391, v382);
        unsigned int v324 = (os_log_s *)Logger.logObject.getter(v323);
        uint64_t v325 = static os_log_type_t.info.getter(v324);
        if (os_log_type_enabled(v324, v325))
        {
          uint64_t v326 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v326 = 0;
          _os_log_impl( &dword_0,  v324,  v325,  "PlayMediaDialogProvider going to makeEditorialPlaylist for playlist/radio",  v326,  2u);
          swift_slowDealloc(v326, -1LL, -1LL);
        }

        v388(v361, v382);
        uint64_t v279 = (uint64_t)v373;
        sub_161D90(v392, (void *)v67, (uint64_t)sub_16B694, (uint64_t)v373);
        goto LABEL_200;
      }

      if (v300)
      {
        uint64_t v320 = [(id)v67 *(SEL *)&v271[392]];
        if (v320)
        {
          uint64_t v321 = v320;
          uint64_t v322 = (char *)[v320 sortOrder];

          if (v322 == (_BYTE *)&dword_4 + 1) {
            goto LABEL_197;
          }
        }
      }

      LOBYTE(v18sub_6C3C(v0 + 7) = v64 ^ 1;
      if (v387 != (uint64_t (*)(uint64_t))((char *)&dword_0 + 3))
      {
        unint64_t v328 = v390;
LABEL_209:
        swift_bridgeObjectRelease(v328);
LABEL_212:
        unint64_t v329 = sub_6C5C(&qword_2844D0);
        os_log_t v330 = swift_initStackObject(v329, &v394);
        uint64_t v331 = v330;
        *(_OWORD *)(v330 + sub_6C3C(v0 + 16) = xmmword_219330;
        *(void *)(v330 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
        *(void *)(v330 + 40) = 0xE500000000000000LL;
        os_log_t v332 = v385;
        if (!v19) {
          os_log_t v332 = 0LL;
        }
        uint64_t v333 = 0xE000000000000000LL;
        if (v19) {
          uint64_t v334 = (unint64_t)v19;
        }
        else {
          uint64_t v334 = 0xE000000000000000LL;
        }
        *(void *)(v330 + 4sub_6C3C(v0 + 8) = v332;
        *(void *)(v330 + 56) = v334;
        *(void *)(v330 + 7sub_6C3C(v0 + 2) = &type metadata for String;
        *(void *)(v330 + 80) = 0x747369747261LL;
        uint64_t v335 = v390;
        uint64_t v336 = v383;
        if (v390) {
          uint64_t v333 = v390;
        }
        else {
          uint64_t v336 = 0LL;
        }
        *(void *)(v331 + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
        *(void *)(v331 + 96) = v336;
        *(void *)(v331 + 10sub_6C3C(v0 + 4) = v333;
        *(void *)(v331 + 120) = &type metadata for String;
        *(void *)(v331 + 12sub_6C3C(v0 + 8) = 0x61526576694C7369LL;
        *(void *)(v331 + 136) = 0xEB000000006F6964LL;
        *(_BYTE *)(v331 + 1sub_6C3C(v0 + 44) = v187;
        *(void *)(v331 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
        *(void *)(v331 + 176) = 0xD00000000000001BLL;
        *(void *)(v331 + 18sub_6C3C(v0 + 4) = 0x8000000000221920LL;
        swift_bridgeObjectRetain(v335);
        *(_BYTE *)(v331 + 19sub_6C3C(v0 + 2) = [(id)v67 playbackQueueLocation] == (char *)&dword_0 + 2;
        *(void *)(v331 + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
        *(void *)(v331 + 2sub_6C3C(v0 + 24) = 0xD00000000000001CLL;
        *(void *)(v331 + 23sub_6C3C(v0 + 2) = 0x8000000000221940LL;
        *(_BYTE *)(v331 + 240) = [(id)v67 playbackQueueLocation] == (char *)&dword_0 + 3;
        *(void *)(v331 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
        *(void *)(v331 + 27sub_6C3C(v0 + 2) = 0x667568536E4F7369LL;
        *(void *)(v331 + 280) = 0xEB00000000656C66LL;
        uint64_t v337 = [(id)v67 backingStore];
        uint64_t v338 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        uint64_t v339 = (void *)swift_dynamicCastObjCClass(v337, v338);
        if (v339)
        {
          uint64_t v340 = [v339 playShuffled];

          uint64_t v341 = v340 & v64;
        }

        else
        {

          uint64_t v341 = 0;
        }

        *(_BYTE *)(v331 + 28sub_6C3C(v0 + 8) = v341;
        *(void *)(v331 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
        *(void *)(v331 + 320) = 0x657065526E4F7369LL;
        *(void *)(v331 + 32sub_6C3C(v0 + 8) = 0xEA00000000007461LL;
        int v342 = [(id)v67 playbackRepeatMode] == (char *)&dword_0 + 2
            || [(id)v67 playbackRepeatMode] == (char *)&dword_0 + 3;
        *(_BYTE *)(v331 + 336) = v342;
        *(void *)(v331 + 360) = &type metadata for Bool;
        strcpy((char *)(v331 + 368), "isAppSpecified");
        *(_BYTE *)(v331 + 38sub_6C3C(v0 + 3) = -18;
        type metadata accessor for AppSelectionContext(0LL);
        uint64_t v343 = static AppSelectionContext.shared.getter();
        if (v343)
        {
          int v344 = v343;
          dispatch thunk of AppSelectionContext.report.getter();
          swift_release(v344);
        }

        else
        {
          uint64_t v345 = type metadata accessor for AppSelectionReport(0LL);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v345 - 8) + 56LL))( v360,  1LL,  1LL,  v345);
        }

        uint64_t v346 = v360;
        os_log_type_t v347 = sub_15F0C0(v392, v67, (uint64_t (*)(char *, uint64_t))(v384 + 128), v360);
        sub_1F6CC(v346, &qword_285470);
        *(_BYTE *)(v331 + 38sub_6C3C(v0 + 4) = v347 & 1;
        *(void *)(v331 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
        strcpy((char *)(v331 + 416), "isPersonalized");
        *(_BYTE *)(v331 + 4sub_6C3C(v0 + 31) = -18;
        uint64_t v348 = [(id)v67 privatePlayMediaIntentData];
        int v349 = [v348 isPersonalizedRequest];

        v350.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
        if (v349)
        {
          char v351 = v349;
          __n128 v352 = static NSObject.== infix(_:_:)(v351, v350.super.super.isa);
        }

        else
        {
          __n128 v352 = 0;
        }

        *(void *)(v331 + 456) = &type metadata for Bool;
        *(_BYTE *)(v331 + 43sub_6C3C(v0 + 2) = v352 & 1;
        uint64_t v353 = sub_74D54(v331);
        *((void *)&v402 + 1) = v386;
        *(void *)&unint64_t v403 = &off_272BD0;
        *(void *)&uint64_t v401 = v67;
        uint64_t v354 = (id)v67;
        uint64_t v355 = (uint64_t)v373;
        sub_1CFB48(v353, v392, (uint64_t)&v401, (uint64_t)sub_16B694, (uint64_t)v373);
        swift_bridgeObjectRelease(v353);
        swift_bridgeObjectRelease(v390);
        sub_1F6CC((uint64_t)&v401, &qword_283FE8);
        uint64_t v131 = (void *)v355;
        return swift_release(v131);
      }

      if (v390)
      {
        if ((v390 & 0x2000000000000000LL) != 0) {
          uint64_t v327 = HIBYTE(v390) & 0xF;
        }
        else {
          uint64_t v327 = v383 & 0xFFFFFFFFFFFFLL;
        }
        swift_bridgeObjectRelease(v390);
        if (!v327) {
          goto LABEL_212;
        }
        char v385 = v383;
        unint64_t v328 = (unint64_t)v19;
        uint64_t v19 = (Class)v390;
        uint64_t v383 = 0LL;
        uint64_t v390 = 0xE000000000000000LL;
        goto LABEL_209;
      }

      os_log_t v330 = INPlayMediaIntent.firstMediaItemType()(v313);
      uint64_t v331 = v200;
      if (v330 != 5)
      {
        os_log_t v330 = INPlayMediaIntent.firstMediaItemType()(v330);
        if (v330 == 19) {
          uint64_t v331 = v200;
        }
        else {
          uint64_t v331 = 0;
        }
      }

      if (INPlayMediaIntent.firstMediaItemType()(v330) == 16)
      {
      }

      else if (v331)
      {
LABEL_197:
        swift_bridgeObjectRelease(v398);
        swift_bridgeObjectRelease(v73);
        uint64_t v335 = v404(v376, v403, v405);
        uint64_t v336 = (os_log_s *)Logger.logObject.getter(v335);
        uint64_t v337 = static os_log_type_t.info.getter(v336);
        if (os_log_type_enabled(v336, v337))
        {
          uint64_t v338 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v338 = 0;
          _os_log_impl( &dword_0,  v336,  v337,  "PlayMediaDialogProvider going to makeEditorialPlaylist for playlist/radio",  v338,  2u);
          swift_slowDealloc(v338, -1LL, -1LL);
        }

        v401(v376, v405);
        uint64_t v265 = (uint64_t)v406;
        sub_161D90(v407, v402, (uint64_t)sub_16F138, (uint64_t)v406);
        goto LABEL_122;
      }

      if (v314)
      {
        os_log_t v332 = [v402 *(SEL *)(v90 + 3136)];
        if (v332)
        {
          uint64_t v333 = v332;
          uint64_t v334 = (char *)[v332 sortOrder];

          if (v334 == (_BYTE *)&dword_4 + 1) {
            goto LABEL_197;
          }
        }
      }

      LOBYTE(v19sub_6C3C(v0 + 9) = v200 ^ 1;
      if (v400 != 3)
      {
        uint64_t v340 = v398;
LABEL_208:
        swift_bridgeObjectRelease(v340);
LABEL_211:
        uint64_t v341 = sub_6C5C(&qword_2844D0);
        int v342 = swift_initStackObject(v341, &v410);
        uint64_t v343 = v342;
        *(_OWORD *)(v342 + sub_6C3C(v0 + 16) = xmmword_219330;
        *(void *)(v342 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
        *(void *)(v342 + 40) = 0xE500000000000000LL;
        int v344 = v396;
        if (!v73) {
          int v344 = 0LL;
        }
        uint64_t v345 = 0xE000000000000000LL;
        if (v73) {
          uint64_t v346 = v73;
        }
        else {
          uint64_t v346 = 0xE000000000000000LL;
        }
        *(void *)(v342 + 4sub_6C3C(v0 + 8) = v344;
        *(void *)(v342 + 56) = v346;
        *(void *)(v342 + 7sub_6C3C(v0 + 2) = v72;
        *(void *)(v342 + 80) = 0x747369747261LL;
        uint64_t v348 = v397;
        os_log_type_t v347 = v398;
        if (v398) {
          uint64_t v345 = v398;
        }
        else {
          uint64_t v348 = 0LL;
        }
        *(void *)(v343 + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
        *(void *)(v343 + 96) = v348;
        *(void *)(v343 + 10sub_6C3C(v0 + 4) = v345;
        *(void *)(v343 + 120) = v72;
        *(void *)(v343 + 12sub_6C3C(v0 + 8) = 0x61526576694C7369LL;
        *(void *)(v343 + 136) = 0xEB000000006F6964LL;
        *(_BYTE *)(v343 + 1sub_6C3C(v0 + 44) = v199;
        *(void *)(v343 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
        *(void *)(v343 + 176) = 0xD00000000000001BLL;
        *(void *)(v343 + 18sub_6C3C(v0 + 4) = 0x8000000000221920LL;
        swift_bridgeObjectRetain(v347);
        int v349 = v402;
        *(_BYTE *)(v343 + 19sub_6C3C(v0 + 2) = [v402 playbackQueueLocation] == (char *)&dword_0 + 2;
        *(void *)(v343 + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
        *(void *)(v343 + 2sub_6C3C(v0 + 24) = 0xD00000000000001CLL;
        *(void *)(v343 + 23sub_6C3C(v0 + 2) = 0x8000000000221940LL;
        *(_BYTE *)(v343 + 240) = [v349 playbackQueueLocation] == (char *)&dword_0 + 3;
        *(void *)(v343 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
        *(void *)(v343 + 27sub_6C3C(v0 + 2) = 0x667568536E4F7369LL;
        *(void *)(v343 + 280) = 0xEB00000000656C66LL;
        char v350 = [v349 backingStore];
        char v351 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        __n128 v352 = (void *)swift_dynamicCastObjCClass(v350, v351);
        if (v352)
        {
          uint64_t v353 = [v352 playShuffled];

          uint64_t v354 = v353 & v200;
        }

        else
        {

          uint64_t v354 = 0;
        }

        *(_BYTE *)(v343 + 28sub_6C3C(v0 + 8) = v354;
        *(void *)(v343 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
        *(void *)(v343 + 320) = 0x657065526E4F7369LL;
        *(void *)(v343 + 32sub_6C3C(v0 + 8) = 0xEA00000000007461LL;
        uint64_t v355 = [v402 playbackRepeatMode] == (char *)&dword_0 + 2
            || [v402 playbackRepeatMode] == (char *)&dword_0 + 3;
        *(_BYTE *)(v343 + 336) = v355;
        *(void *)(v343 + 360) = &type metadata for Bool;
        strcpy((char *)(v343 + 368), "isAppSpecified");
        *(_BYTE *)(v343 + 38sub_6C3C(v0 + 3) = -18;
        type metadata accessor for AppSelectionContext(0LL);
        os_log_type_t v356 = static AppSelectionContext.shared.getter();
        if (v356)
        {
          uint64_t v357 = v356;
          dispatch thunk of AppSelectionContext.report.getter();
          swift_release(v357);
        }

        else
        {
          os_log_t v358 = type metadata accessor for AppSelectionReport(0LL);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v358 - 8) + 56LL))( v375,  1LL,  1LL,  v358);
        }

        uint64_t v359 = v402;
        Swift::String v360 = v375;
        uint64_t v361 = sub_15F0C0(v407, (uint64_t)v402, (uint64_t (*)(char *, uint64_t))(v408 + 128), v375);
        sub_1F6CC(v360, &qword_285470);
        *(_BYTE *)(v343 + 38sub_6C3C(v0 + 4) = v361 & 1;
        *(void *)(v343 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
        strcpy((char *)(v343 + 416), "isPersonalized");
        *(_BYTE *)(v343 + 4sub_6C3C(v0 + 31) = -18;
        char v362 = [v359 privatePlayMediaIntentData];
        double v363 = [v362 isPersonalizedRequest];

        v364.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
        if (v363)
        {
          uint64_t v365 = v363;
          uint64_t v366 = static NSObject.== infix(_:_:)(v365, v364.super.super.isa);
        }

        else
        {
          uint64_t v366 = 0;
        }

        *(void *)(v343 + 456) = &type metadata for Bool;
        *(_BYTE *)(v343 + 43sub_6C3C(v0 + 2) = v366 & 1;
        uint64_t v367 = sub_74D54(v343);
        *((void *)&v418 + 1) = v399;
        *(void *)&uint64_t v419 = &off_272BD0;
        *(void *)&uint64_t v417 = v402;
        uint64_t v368 = v402;
        uint64_t v369 = (uint64_t)v406;
        sub_1CFB48(v367, v407, (uint64_t)&v417, (uint64_t)sub_16F138, (uint64_t)v406);
        swift_bridgeObjectRelease(v367);
        swift_bridgeObjectRelease(v398);
        sub_1F6CC((uint64_t)&v417, &qword_283FE8);
        uint64_t v132 = v369;
        return swift_release(v132);
      }

      if (v398)
      {
        if ((v398 & 0x2000000000000000LL) != 0) {
          uint64_t v339 = HIBYTE(v398) & 0xF;
        }
        else {
          uint64_t v339 = v397 & 0xFFFFFFFFFFFFLL;
        }
        swift_bridgeObjectRelease(v398);
        if (!v339) {
          goto LABEL_211;
        }
        uint64_t v396 = v397;
        uint64_t v397 = 0LL;
        uint64_t v340 = v73;
        uint64_t v73 = v398;
        uint64_t v398 = 0xE000000000000000LL;
        goto LABEL_208;
      }

LABEL_257:
        swift_release(v775);
        swift_release(v777);
        swift_release(v550);
LABEL_262:
        uint64_t v574 = 1LL;
        goto LABEL_273;
      }

LABEL_258:
      uint64_t v778 = 0LL;
      uint64_t v780 = 0LL;
      if (v535) {
        goto LABEL_259;
      }
      goto LABEL_257;
    }

    swift_release(v503);
  }

  dispatch thunk of AudioIntent.noun.getter(v491, &protocol witness table for AudioUsoIntent);
  uint64_t v575 = v730;
  (*(void (**)(uint64_t, void, uint64_t))(v730 + 104))( v495,  enum case for CommonAudio.Noun.library(_:),  v492);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v575 + 56))(v495, 0LL, 1LL, v492);
  uint64_t v576 = v493 + *(int *)(v723 + 48);
  sub_FF10(v494, v493, &qword_284D88);
  sub_FF10(v495, v576, &qword_284D88);
  uint64_t v577 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v575 + 48);
  if (v577(v493, 1LL, v492) == 1)
  {
    sub_1F6CC(v495, &qword_284D88);
    sub_1F6CC(v494, &qword_284D88);
    if (v577(v576, 1LL, v492) == 1)
    {
      sub_1F6CC(v493, &qword_284D88);
      uint64_t v541 = v744;
      uint64_t v542 = (void (*)(uint64_t, os_log_t))v739;
LABEL_271:
      uint64_t v778 = 0LL;
      uint64_t v780 = 0LL;
      os_log_t v779 = 0LL;
      uint64_t v557 = 0LL;
      uint64_t v574 = 2LL;
      goto LABEL_273;
    }

LABEL_269:
    sub_1F6CC(v493, &qword_284D80);
    uint64_t v778 = 0LL;
    uint64_t v780 = 0LL;
    os_log_t v779 = 0LL;
    uint64_t v557 = 0LL;
    uint64_t v541 = v744;
    uint64_t v574 = v732;
    uint64_t v542 = (void (*)(uint64_t, os_log_t))v739;
    goto LABEL_273;
  }

  uint64_t v578 = v699;
  sub_FF10(v493, v699, &qword_284D88);
  if (v577(v576, 1LL, v492) == 1)
  {
    sub_1F6CC(v495, &qword_284D88);
    sub_1F6CC(v494, &qword_284D88);
    (*(void (**)(uint64_t, uint64_t))(v730 + 8))(v578, v492);
    goto LABEL_269;
  }

  uint64_t v579 = v578;
  uint64_t v580 = v730;
  uint64_t v581 = v689;
  (*(void (**)(char *, uint64_t, uint64_t))(v730 + 32))(v689, v576, v492);
  uint64_t v582 = sub_10430( &qword_284DE8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Noun,  (uint64_t)&protocol conformance descriptor for CommonAudio.Noun);
  char v583 = dispatch thunk of static Equatable.== infix(_:_:)(v579, v581, v492, v582);
  uint64_t v584 = *(void (**)(char *, uint64_t))(v580 + 8);
  v584(v581, v492);
  sub_1F6CC(v753, &qword_284D88);
  sub_1F6CC(v494, &qword_284D88);
  v584((char *)v579, v492);
  sub_1F6CC(v493, &qword_284D88);
  uint64_t v541 = v744;
  uint64_t v542 = (void (*)(uint64_t, os_log_t))v739;
  if ((v583 & 1) != 0) {
    goto LABEL_271;
  }
  uint64_t v778 = 0LL;
  uint64_t v780 = 0LL;
  os_log_t v779 = 0LL;
  uint64_t v557 = 0LL;
  uint64_t v574 = v732;
LABEL_273:
  uint64_t v585 = dispatch thunk of AudioIntent.attributes.getter(v491, &protocol witness table for AudioUsoIntent);
  uint64_t v586 = (uint64_t)v768;
  uint64_t v587 = v541;
  os_log_t v588 = v772;
  ((void (*)(char *, uint64_t, os_log_t))v767)(v768, v587, v772);
  char v589 = sub_1427C0(v586, v585);
  swift_bridgeObjectRelease(v585);
  v542(v586, v588);
  if ((v589 & 1) != 0) {
    uint64_t v590 = (void (**)(os_log_s *, void, uint64_t))(&dword_0 + 2);
  }
  else {
    uint64_t v590 = (void (**)(os_log_s *, void, uint64_t))v574;
  }
  uint64_t v591 = (void *)dispatch thunk of AudioIntent.albums.getter(v491, &protocol witness table for AudioUsoIntent);
  uint64_t v592 = sub_7241C(v591);
  unint64_t v594 = v593;
  swift_bridgeObjectRelease(v591);
  v774 = v590;
  if (!v594)
  {
    os_log_t v772 = v783;
    uint64_t v597 = (uint64_t)v781;
    uint64_t v598 = v755;
    goto LABEL_296;
  }

  uint64_t v595 = sub_A86F8(v592, v594);
  uint64_t v597 = v596;
  swift_bridgeObjectRelease(v594);
  uint64_t v598 = v755;
  uint64_t v599 = (uint64_t)v781;
  if (v784)
  {
    if (v597)
    {
      if (sub_142520(v755, 2LL))
      {
        unint64_t v600 = (unint64_t)v784;
        swift_bridgeObjectRetain(v784);
        swift_bridgeObjectRelease(v780);
        uint64_t v598 = 0LL;
        uint64_t v773 = 0LL;
        uint64_t v601 = v599;
        os_log_t v602 = v771;
        uint64_t v599 = v600;
LABEL_294:
        swift_bridgeObjectRelease(v601);
        uint64_t v778 = v595;
        uint64_t v780 = v597;
        os_log_t v772 = v602;
        goto LABEL_295;
      }

LABEL_283:
      if (sub_142520(v598, 0LL))
      {
        uint64_t v601 = v780;
        if (v599)
        {
          os_log_t v602 = v783;
          goto LABEL_294;
        }

      if (v800) {
        goto LABEL_284;
      }
      uint64_t v631 = 0LL;
      goto LABEL_341;
    }

LABEL_289:
        os_log_t v772 = (os_log_t)v595;
        uint64_t v773 = (_BYTE *)(&dword_0 + 2);
        goto LABEL_296;
      }

      BOOL v603 = sub_142520(v598, 2LL);
      if (!v599)
      {
        if (v603) {
          goto LABEL_289;
        }
        uint64_t v599 = 0LL;
      }

      os_log_t v602 = v783;
      uint64_t v601 = v780;
      goto LABEL_294;
    }
  }

  else if (v597)
  {
    goto LABEL_283;
  }

  os_log_t v772 = v783;
LABEL_295:
  uint64_t v597 = v599;
LABEL_296:
  uint64_t v604 = v557;
  uint64_t v605 = (void *)dispatch thunk of AudioIntent.artists.getter(v491, &protocol witness table for AudioUsoIntent);
  uint64_t v606 = (os_log_s *)sub_7241C(v605);
  unint64_t v608 = v607;
  swift_bridgeObjectRelease(v605);
  if (v608)
  {
    uint64_t v606 = (os_log_s *)sub_A86F8((uint64_t)v606, v608);
    uint64_t v610 = v609;
    swift_bridgeObjectRelease(v608);
  }

  else
  {
    uint64_t v610 = 0LL;
  }

  id v611 = v785;
  v612 = (void *)dispatch thunk of AudioIntent.appMusicArtistNames.getter( v785,  &protocol witness table for AudioUsoIntent);
  v613 = (void (**)(os_log_s *, void, uint64_t))sub_7245C(v612);
  unint64_t v615 = v614;
  os_log_t v783 = v616;
  uint64_t v781 = (os_log_s *)v617;
  swift_bridgeObjectRelease(v612);
  sub_157C4((uint64_t)v804, (uint64_t)&v790);
  if (v615)
  {
    sub_6C3C(&v790);
  }

  else
  {
    sub_6EA8(&v790, v792);
    v618 = (void *)dispatch thunk of AudioIntent.appAudiobookAuthors.getter( v611,  &protocol witness table for AudioUsoIntent);
    v613 = (void (**)(os_log_s *, void, uint64_t))sub_7245C(v618);
    unint64_t v615 = v619;
    os_log_t v783 = v620;
    uint64_t v781 = (os_log_s *)v621;
    swift_bridgeObjectRelease(v618);
    sub_6C3C(&v790);
    if (!v615)
    {
      uint64_t v775 = v613;
      uint64_t v777 = 0LL;
      char v626 = 1;
      goto LABEL_306;
    }
  }

  uint64_t v775 = v613;
  uint64_t v777 = v615;
  uint64_t v622 = sub_A86F8((uint64_t)v613, v615);
  if (v623)
  {
    v624 = (os_log_s *)v622;
    uint64_t v625 = v623;
    swift_bridgeObjectRelease(v610);
    char v626 = 0;
    uint64_t v606 = v624;
    uint64_t v627 = (uint64_t)v773;
    goto LABEL_307;
  }

  char v626 = 0;
LABEL_306:
  uint64_t v627 = (uint64_t)v773;
  uint64_t v625 = v610;
LABEL_307:
  uint64_t v628 = v604;
  if (!v784)
  {
    uint64_t v629 = v772;
    if (v625) {
      goto LABEL_312;
    }
LABEL_326:
    uint64_t v606 = v629;
    goto LABEL_327;
  }

  uint64_t v629 = v772;
  if (!v625) {
    goto LABEL_326;
  }
  if (sub_142520(v598, 3LL))
  {
    unint64_t v630 = (unint64_t)v784;
    swift_bridgeObjectRetain(v784);
    swift_bridgeObjectRelease(v628);
    uint64_t v598 = 0LL;
    uint64_t v631 = v597;
    os_log_t v779 = v606;
    uint64_t v628 = v625;
    uint64_t v629 = v771;
    uint64_t v597 = v630;
    uint64_t v627 = 0LL;
LABEL_325:
    swift_bridgeObjectRelease(v631);
    goto LABEL_326;
  }

LABEL_312:
  if (!sub_142520(v598, 0LL))
  {
    BOOL v633 = v784 != 0LL;
    BOOL v634 = sub_142520(v598, 3LL);
    BOOL v635 = sub_142520(v598, 0LL);
    if (v597)
    {
      uint64_t v631 = v628;
      os_log_t v779 = v606;
      uint64_t v628 = v625;
    }

    else
    {
      if (v634)
      {
        uint64_t v627 = (uint64_t)v773;
        if (v633 && v635) {
          goto LABEL_318;
        }
        goto LABEL_321;
      }

      uint64_t v631 = v628;
      os_log_t v779 = v606;
      uint64_t v628 = v625;
      uint64_t v597 = 0LL;
    }

    uint64_t v627 = (uint64_t)v773;
    goto LABEL_325;
  }

  BOOL v632 = sub_142520(v598, 0LL);
  if (v597)
  {
    uint64_t v631 = v628;
    os_log_t v779 = v606;
    uint64_t v628 = v625;
    goto LABEL_325;
  }

  if (v784 != 0LL && v632)
  {
LABEL_318:
    uint64_t v631 = v628;
    os_log_t v779 = v606;
    uint64_t v628 = v625;
    uint64_t v597 = 0LL;
    goto LABEL_325;
  }

LABEL_321:
  uint64_t v597 = v625;
  if ((v626 & 1) == 0)
  {
    uint64_t v668 = v777;
    swift_bridgeObjectRetain(v777);
    uint64_t v669 = (uint64_t)v781;
    swift_bridgeObjectRetain(v781);
    swift_bridgeObjectRelease(v668);
    uint64_t v627 = 3LL;
    uint64_t v631 = (uint64_t)v776;
    os_log_t v766 = v783;
    v776 = (os_log_s *)v669;
    uint64_t v629 = v606;
    goto LABEL_325;
  }

  uint64_t v627 = 3LL;
LABEL_327:
  unsigned int v636 = v751;
  v637 = (void *)v749;
  uint64_t v638 = v745;
  BOOL v639 = sub_142520(v627, 0LL);
  uint64_t v640 = v763;
  if (!v639 && sub_142520(v598, 0LL)) {
    goto LABEL_332;
  }
  if (sub_142520(v598, 18LL))
  {
    if (!sub_142520(v627, 5LL)) {
      uint64_t v627 = v598;
    }
LABEL_332:
    if (v784) {
      goto LABEL_333;
    }
LABEL_336:
    uint64_t v641 = v627;
    goto LABEL_339;
  }

  uint64_t v627 = v598;
  if (!v784) {
    goto LABEL_336;
  }
LABEL_333:
  uint64_t v641 = v627;
  if (sub_142520(v627, 0LL))
  {
    unint64_t v642 = (unint64_t)v784;
    swift_bridgeObjectRetain(v784);
    swift_bridgeObjectRelease(v597);
    uint64_t v606 = v771;
    uint64_t v597 = v642;
  }

  else if (!v597)
  {
    uint64_t v597 = (uint64_t)v784;
    swift_bridgeObjectRetain(v784);
    uint64_t v606 = v771;
  }

LABEL_339:
  if (AudioIntent.isBeats1Only()())
  {
    uint64_t v606 = (os_log_s *)static CommonAudio.beatsOne.getter();
    uint64_t v644 = v643;
    swift_bridgeObjectRelease(v597);
    uint64_t v597 = v644;
  }

  sub_1641C(0LL, &qword_284DD8, &OBJC_CLASS___INMediaSearch_ptr);
  uint64_t v773 = v637;
  swift_bridgeObjectRetain(v597);
  os_log_type_t v645 = (void *)INMediaSearch.init(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( v641,  v638,  v606,  v597,  v779,  v628,  v778,  v780,  v636,  v750,  v637,  v774,  v766,  v776);
  uint64_t v646 = sub_FAF8();
  uint64_t v647 = v759;
  (*(void (**)(char *, uint64_t, uint64_t))(v640 + 16))(v759, v646, v764);
  uint64_t v648 = swift_allocObject(&unk_26C458, 24LL, 7LL);
  *(void *)(v648 + sub_6C3C(v0 + 16) = v645;
  id v785 = v645;
  uint64_t v649 = (void *)Logger.logObject.getter(v785);
  int v650 = static os_log_type_t.default.getter();
  uint64_t v651 = swift_allocObject(&unk_26C480, 17LL, 7LL);
  *(_BYTE *)(v651 + sub_6C3C(v0 + 16) = 32;
  uint64_t v652 = swift_allocObject(&unk_26C4A8, 17LL, 7LL);
  *(_BYTE *)(v652 + sub_6C3C(v0 + 16) = 8;
  uint64_t v653 = swift_allocObject(&unk_26C4D0, 32LL, 7LL);
  *(void *)(v653 + sub_6C3C(v0 + 16) = sub_64E04;
  *(void *)(v653 + sub_6C3C(v0 + 24) = v648;
  uint64_t v654 = swift_allocObject(&unk_26C4F8, 32LL, 7LL);
  *(void *)(v654 + sub_6C3C(v0 + 16) = sub_1646C;
  *(void *)(v654 + sub_6C3C(v0 + 24) = v653;
  uint64_t v655 = sub_6C5C(&qword_284DE0);
  uint64_t inited = swift_initStackObject(v655, &v789);
  uint64_t v657 = sub_14816C(inited, 3LL);
  void *v658 = sub_16464;
  v658[1] = v651;
  v658[2] = sub_64F90;
  v658[3] = v652;
  v658[4] = sub_16454;
  v658[5] = v654;
  swift_retain(v651);
  swift_retain(v652);
  swift_retain(v654);
  swift_bridgeObjectRelease(v657);
  LODWORD(v780) = v650;
  if (!os_log_type_enabled((os_log_t)v649, (os_log_type_t)v650))
  {
    swift_bridgeObjectRelease(v597);

    swift_release(v651);
    swift_release(v652);
    swift_release(v654);

    (*(void (**)(char *, uint64_t))(v763 + 8))(v647, v764);
    swift_bridgeObjectRelease(v782);
    sub_1F6CC(v770, &qword_284D98);
    swift_bridgeObjectRelease(v765);
    unint64_t v663 = (unint64_t)v784;
    uint64_t v664 = (void (*)(void, void, void))v775;
    uint64_t v665 = v777;
    goto LABEL_345;
  }

  os_log_t v779 = (os_log_t)v649;
  os_log_type_t v659 = (uint8_t *)sub_55F20(12LL);
  uint64_t v660 = swift_slowAlloc(32LL, -1LL);
  uint64_t v787 = 0LL;
  uint64_t v786 = v660;
  *(_WORD *)os_log_type_t v659 = 258;
  v788 = v659 + 2;
  uint64_t v790 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_16464;
  uint64_t v791 = v651;
  uint64_t v661 = v722;
  sub_FB40(&v790, (uint64_t)&v788, (uint64_t)&v787, (uint64_t)&v786);
  if (!v661)
  {
    swift_release(v651);
    uint64_t v790 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_64F90;
    uint64_t v791 = v652;
    sub_FB40(&v790, (uint64_t)&v788, (uint64_t)&v787, (uint64_t)&v786);
    swift_release(v652);
    uint64_t v790 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_16454;
    uint64_t v791 = v654;
    sub_FB40(&v790, (uint64_t)&v788, (uint64_t)&v787, (uint64_t)&v786);
    uint64_t v662 = v759;
    unint64_t v663 = (unint64_t)v784;
    uint64_t v664 = (void (*)(void, void, void))v775;
    uint64_t v665 = v777;
    swift_release(v654);
    os_log_t v666 = v779;
    _os_log_impl(&dword_0, v779, (os_log_type_t)v780, "ConverterHelpers#convertMediaSearch mediaSearch: %s", v659, 0xCu);
    swift_arrayDestroy(v660, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v660, -1LL, -1LL);
    sub_101D4((uint64_t)v659);
    swift_bridgeObjectRelease(v597);

    (*(void (**)(char *, uint64_t))(v763 + 8))(v662, v764);
    swift_bridgeObjectRelease(v782);
    sub_1F6CC(v770, &qword_284D98);
    swift_bridgeObjectRelease(v765);
LABEL_345:
    sub_16474((uint64_t)v664, v665, (uint64_t)v783, (uint64_t)v781);
    swift_bridgeObjectRelease(v663);
    sub_6C3C(v804);
    return (uint64_t)v785;
  }

  swift_bridgeObjectRelease(v597);
  uint64_t result = swift_errorRelease(v661);
  __break(1u);
  return result;
}

uint64_t sub_5FDD4( uint64_t a1, void (*a2)(uint64_t), void (*a3)(uint64_t, void, uint64_t, uint64_t))
{
  uint64_t v797 = a3;
  uint64_t v794 = a2;
  uint64_t v4 = type metadata accessor for CommonAudio.Modifier(0LL);
  uint64_t v715 = *(void *)(v4 - 8);
  uint64_t v716 = v4;
  __chkstk_darwin(v4);
  uint64_t v714 = (char *)&v708 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v789 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v788 = *(void *)(v789 - 8);
  __chkstk_darwin(v789);
  v735 = (char *)&v708 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v756 = type metadata accessor for CommonAudio.Noun(0LL);
  uint64_t v754 = *(void *)(v756 - 8);
  __chkstk_darwin(v756);
  uint64_t v718 = (char *)&v708 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v753 = sub_6C5C(&qword_284D80);
  __chkstk_darwin(v753);
  uint64_t v755 = (uint64_t)&v708 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_284D88);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v729 = (uint64_t)&v708 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v773 = (char *)&v708 - v13;
  __chkstk_darwin(v12);
  v774 = (char *)&v708 - v14;
  uint64_t v792 = type metadata accessor for Logger(0LL);
  uint64_t v791 = *(void *)(v792 - 8);
  __chkstk_darwin(v792);
  uint64_t v790 = (char *)&v708 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v16);
  uint64_t v748 = (uint64_t)&v708 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AudioUsoIntent.UsoNamespace(0LL);
  uint64_t v746 = *(void *)(v18 - 8);
  uint64_t v747 = v18;
  __chkstk_darwin(v18);
  v745 = (char *)&v708 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v740 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v759 = *(void *)(v740 - 8);
  uint64_t v20 = __chkstk_darwin(v740);
  uint64_t v724 = (char *)&v708 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v711 = (char *)&v708 - v22;
  uint64_t v722 = sub_6C5C(&qword_284D90);
  __chkstk_darwin(v722);
  uint64_t v723 = (uint64_t)&v708 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_284D98);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v737 = (uint64_t)&v708 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v712 = (uint64_t)&v708 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v728 = (uint64_t)&v708 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v766 = (uint64_t)&v708 - v32;
  __chkstk_darwin(v31);
  uint64_t v796 = (uint64_t)&v708 - v33;
  uint64_t v34 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v784 = (char *)&v708 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v802 = sub_6C5C(&qword_284DA0);
  uint64_t v37 = __chkstk_darwin(v802);
  uint64_t v770 = (uint64_t)&v708 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v739 = (uint64_t)&v708 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v741 = (uint64_t)&v708 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v763 = (uint64_t)&v708 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v767 = (char *)&v708 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v764 = (char *)&v708 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v799 = (uint64_t)&v708 - v50;
  __chkstk_darwin(v49);
  uint64_t v811 = (uint64_t)&v708 - v51;
  uint64_t v800 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v812 = *(void *)(v800 - 8);
  __chkstk_darwin(v800);
  os_log_t v795 = (char *)&v708 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v781 = sub_6C5C(&qword_284DA8);
  uint64_t v53 = __chkstk_darwin(v781);
  uint64_t v725 = (uint64_t)&v708 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v765 = (char *)&v708 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v772 = (uint64_t)&v708 - v58;
  __chkstk_darwin(v57);
  v810 = (uint64_t *)((char *)&v708 - v59);
  uint64_t v60 = sub_6C5C(&qword_284DB0);
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v727 = (uint64_t)&v708 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = __chkstk_darwin(v61);
  uint64_t v719 = (uint64_t)&v708 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v720 = (uint64_t)&v708 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v713 = (uint64_t)&v708 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v730 = (uint64_t)&v708 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v783 = (uint64_t)&v708 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v743 = (uint64_t)&v708 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v744 = (uint64_t)&v708 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v731 = (char *)&v708 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  os_log_t v769 = (uint64_t *)((char *)&v708 - v80);
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v798 = (uint64_t)&v708 - v82;
  __chkstk_darwin(v81);
  unint64_t v813 = (unint64_t)&v708 - v83;
  uint64_t v84 = sub_6C5C(&qword_284DB8);
  __chkstk_darwin(v84);
  uint64_t v86 = (char *)&v708 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = sub_6C5C(&qword_284DC0);
  __chkstk_darwin(v87);
  uint64_t v89 = (char *)&v708 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = sub_6C5C(&qword_284DC8);
  uint64_t v91 = __chkstk_darwin(v90);
  uint64_t v733 = (uint64_t)&v708 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v734 = (uint64_t)&v708 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  uint64_t v717 = (uint64_t)&v708 - v96;
  uint64_t v97 = __chkstk_darwin(v95);
  uint64_t v751 = (uint64_t)&v708 - v98;
  uint64_t v99 = __chkstk_darwin(v97);
  uint64_t v779 = (uint64_t)&v708 - v100;
  uint64_t v101 = __chkstk_darwin(v99);
  uint64_t v777 = (char *)&v708 - v102;
  uint64_t v103 = __chkstk_darwin(v101);
  uint64_t v738 = (uint64_t)&v708 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  uint64_t v742 = (uint64_t)&v708 - v106;
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v726 = (uint64_t)&v708 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v768 = (char *)&v708 - v110;
  uint64_t v111 = __chkstk_darwin(v109);
  uint64_t v757 = (uint64_t)&v708 - v112;
  uint64_t v113 = __chkstk_darwin(v111);
  uint64_t v762 = (uint64_t)&v708 - v114;
  uint64_t v115 = __chkstk_darwin(v113);
  uint64_t v780 = (uint64_t)&v708 - v116;
  uint64_t v117 = __chkstk_darwin(v115);
  uint64_t v750 = (uint64_t)&v708 - v118;
  uint64_t v119 = __chkstk_darwin(v117);
  uint64_t v786 = (uint64_t)&v708 - v120;
  uint64_t v121 = __chkstk_darwin(v119);
  uint64_t v787 = (uint64_t *)((char *)&v708 - v122);
  uint64_t v123 = __chkstk_darwin(v121);
  uint64_t v710 = (uint64_t)&v708 - v124;
  uint64_t v125 = __chkstk_darwin(v123);
  uint64_t v721 = (uint64_t)&v708 - v126;
  uint64_t v127 = __chkstk_darwin(v125);
  uint64_t v760 = (uint64_t)&v708 - v128;
  uint64_t v129 = __chkstk_darwin(v127);
  uint64_t v761 = (uint64_t)&v708 - v130;
  uint64_t v131 = __chkstk_darwin(v129);
  uint64_t v749 = (uint64_t)&v708 - v132;
  uint64_t v133 = __chkstk_darwin(v131);
  uint64_t v785 = (uint64_t)&v708 - v134;
  uint64_t v135 = __chkstk_darwin(v133);
  uint64_t v793 = (uint64_t)&v708 - v136;
  uint64_t v137 = __chkstk_darwin(v135);
  uint64_t v732 = (uint64_t)&v708 - v138;
  uint64_t v139 = __chkstk_darwin(v137);
  uint64_t v803 = (uint64_t *)((char *)&v708 - v140);
  uint64_t v141 = __chkstk_darwin(v139);
  v804 = (char *)&v708 - v142;
  uint64_t v143 = __chkstk_darwin(v141);
  os_log_type_t v145 = (char *)&v708 - v144;
  __chkstk_darwin(v143);
  uint64_t v147 = (char *)&v708 - v146;
  id v808 = (id)type metadata accessor for NowPlayingIntent(0LL);
  v845[3] = v808;
  uint64_t v807 = sub_10430(&qword_284E28, type metadata accessor for NowPlayingIntent, (uint64_t)&unk_216B50);
  v845[4] = v807;
  v845[0] = a1;
  uint64_t v148 = *(os_log_s **)(a1 + 40);
  uint64_t v758 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(a1 + 32);
  sub_FF10( a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_targetMediaType,  (uint64_t)v147,  &qword_284DC8);
  char v149 = *(os_log_s **)(v35 + 48);
  id v814 = (id)v34;
  LODWORD(vsub_6C3C(v0 + 34) = ((uint64_t (*)(char *, uint64_t, uint64_t))v149)(v147, 1LL, v34);
  uint64_t v806 = v148;
  swift_bridgeObjectRetain(v148);
  swift_retain(a1);
  uint64_t v805 = v35;
  v809 = v149;
  if ((_DWORD)v34 == 1)
  {
    sub_1F6CC((uint64_t)v147, &qword_284DC8);
    uint64_t v150 = v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
    swift_beginAccess(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType, v844, 0LL, 0LL);
    sub_FF10(v150, (uint64_t)v145, &qword_284DC8);
    if (((unsigned int (*)(char *, uint64_t, id))v149)(v145, 1LL, v814) == 1)
    {
      sub_1F6CC((uint64_t)v145, &qword_284DC8);
      uint64_t v151 = 0LL;
    }

    else
    {
      uint64_t v151 = sub_20154C();
      (*(void (**)(char *, id))(v805 + 8))(v145, v814);
    }
  }

  else
  {
    uint64_t v151 = sub_20154C();
    (*(void (**)(char *, id))(v35 + 8))(v147, v814);
  }

  uint64_t v152 = v812;
  uint64_t v153 = (uint64_t)v810;
  sub_FF10(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_sort, (uint64_t)v89, &qword_284DC0);
  uint64_t v154 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v155 = *(void *)(v154 - 8);
  int v156 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48))(v89, 1LL, v154);
  uint64_t v801 = v151;
  if (v156 == 1)
  {
    sub_1F6CC((uint64_t)v89, &qword_284DC0);
    uint64_t v157 = 0LL;
  }

  else
  {
    uint64_t v157 = sub_201568();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v89, v154);
  }

  uint64_t v158 = v845[0];
  uint64_t v159 = *(void *)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_genres);
  uint64_t v160 = swift_bridgeObjectRetain(v159);
  v776 = sub_14252C(v160);
  swift_bridgeObjectRelease(v159);
  uint64_t v161 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_moods);
  uint64_t v162 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_activities);
  swift_bridgeObjectRetain(v161);
  swift_bridgeObjectRetain(v162);
  uint64_t v163 = sub_1C75B0(v161, v162);
  swift_bridgeObjectRelease(v161);
  swift_bridgeObjectRelease(v162);
  uint64_t v164 = sub_14252C(v163);
  swift_bridgeObjectRelease(v163);
  uint64_t v778 = v164;
  uint64_t v165 = sub_F8628((uint64_t)v164);
  uint64_t v752 = 0LL;
  if (v165 == 1)
  {
    uint64_t v166 = static BundleIdentifiers.soundscapes.getter();
    uint64_t v168 = v167;
    if (v797)
    {
      if ((void (*)(uint64_t))v166 == v794 && v167 == v797)
      {
        swift_bridgeObjectRelease(v167);
LABEL_16:
        uint64_t v782 = sub_7241C(v778);
        v810 = (uint64_t *)v170;
        goto LABEL_18;
      }

      char v169 = _stringCompareWithSmolCheck(_:_:expecting:)(v794, v797);
      swift_bridgeObjectRelease(v168);
      if ((v169 & 1) != 0) {
        goto LABEL_16;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v167);
    }
  }

  uint64_t v782 = 0LL;
  v810 = 0LL;
LABEL_18:
  id v775 = (id)sub_64A64(v158);
  uint64_t v171 = v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_reference;
  swift_beginAccess(v171, v843, 0LL, 0LL);
  sub_FF10(v171, (uint64_t)v86, &qword_284DB8);
  uint64_t v172 = type metadata accessor for CommonAudio.Reference(0LL);
  uint64_t v173 = *(void *)(v172 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v86, 1LL, v172) == 1)
  {
    sub_1F6CC((uint64_t)v86, &qword_284DB8);
    uint64_t v736 = 0LL;
  }

  else
  {
    uint64_t v736 = sub_20184C();
    (*(void (**)(char *, uint64_t))(v173 + 8))(v86, v172);
  }

  uint64_t v174 = sub_6C5C(&qword_284DD0);
  uint64_t v175 = *(void *)(v152 + 72);
  uint64_t v176 = swift_allocObject( v174,  ((*(unsigned __int8 *)(v152 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80)) + 2 * v175,  *(unsigned __int8 *)(v152 + 80) | 7LL);
  uint64_t v177 = sub_142CF0(v176, 2LL);
  uint64_t v179 = v178;
  uint64_t v180 = *(void (**)(uint64_t))(v152 + 104);
  unsigned int v771 = enum case for CommonAudio.Attribute.affinity(_:);
  uint64_t v181 = v800;
  v180(v178);
  uint64_t v794 = v180;
  ((void (*)(uint64_t, void, uint64_t))v180)( v179 + v175,  enum case for CommonAudio.Attribute.recommended(_:),  v181);
  uint64_t v182 = WHAError.rawValue.getter(v177);
  uint64_t v183 = sub_F8628(v182);
  id v184 = v808;
  uint64_t v185 = v807;
  if (v183) {
    char v186 = sub_147908(v182);
  }
  else {
    char v186 = &_swiftEmptySetSingleton;
  }
  uint64_t v187 = v813;
  swift_bridgeObjectRelease(v182);
  char v188 = AudioIntent.hasAnyAttribute(_:)(v186, v184, v185);
  swift_bridgeObjectRelease(v186);
  sub_157C4((uint64_t)v845, (uint64_t)v842);
  if ((v188 & 1) != 0)
  {
    sub_6C3C(v842);
    os_log_t v189 = (void (*)(void, void, void))v803;
LABEL_26:
    sub_157C4((uint64_t)v845, (uint64_t)v841);
LABEL_27:
    sub_6C3C(v841);
    uint64_t v772 = 8LL;
    id v190 = v808;
    uint64_t v191 = v807;
    goto LABEL_49;
  }

  uint64_t v709 = v157;
  uint64_t v192 = sub_6EA8(v842, v842[3]);
  sub_FF10(*v192 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb, v187, &qword_284DB0);
  uint64_t v193 = v788;
  uint64_t v194 = *(void (**)(uint64_t, void, uint64_t))(v788 + 104);
  uint64_t v195 = v798;
  uint64_t v196 = v789;
  v194(v798, enum case for CommonAudio.Verb.start(_:), v789);
  uint64_t v797 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v193 + 56);
  v797(v195, 0LL, 1LL, v196);
  uint64_t v197 = v153 + *(int *)(v781 + 48);
  sub_FF10(v187, v153, &qword_284DB0);
  sub_FF10(v195, v197, &qword_284DB0);
  uint64_t v198 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v193 + 48);
  if (v198(v153, 1LL, v196) == 1)
  {
    sub_1F6CC(v195, &qword_284DB0);
    sub_1F6CC(v187, &qword_284DB0);
    int v199 = v198(v197, 1LL, v196);
    os_log_t v189 = (void (*)(void, void, void))v803;
    if (v199 == 1)
    {
      sub_1F6CC(v153, &qword_284DB0);
      sub_6C3C(v842);
      goto LABEL_26;
    }

    goto LABEL_33;
  }

  uint64_t v200 = v727;
  sub_FF10(v153, v727, &qword_284DB0);
  if (v198(v197, 1LL, v196) == 1)
  {
    sub_1F6CC(v798, &qword_284DB0);
    sub_1F6CC(v813, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v788 + 8))(v200, v196);
    os_log_t v189 = (void (*)(void, void, void))v803;
LABEL_33:
    sub_1F6CC(v153, &qword_284DA8);
    sub_6C3C(v842);
    sub_157C4((uint64_t)v845, (uint64_t)v841);
    goto LABEL_34;
  }

  uint64_t v210 = v788;
  char v211 = v735;
  (*(void (**)(char *, uint64_t, uint64_t))(v788 + 32))(v735, v197, v196);
  uint64_t v212 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v213 = dispatch thunk of static Equatable.== infix(_:_:)(v200, v211, v196, v212);
  uint64_t v214 = *(void (**)(char *, uint64_t))(v210 + 8);
  uint64_t v215 = v211;
  uint64_t v152 = v812;
  v214(v215, v196);
  sub_1F6CC(v798, &qword_284DB0);
  sub_1F6CC(v813, &qword_284DB0);
  v214((char *)v200, v196);
  sub_1F6CC(v153, &qword_284DB0);
  sub_6C3C(v842);
  sub_157C4((uint64_t)v845, (uint64_t)v841);
  os_log_t v189 = (void (*)(void, void, void))v803;
  if ((v213 & 1) != 0) {
    goto LABEL_27;
  }
LABEL_34:
  int v201 = sub_6EA8(v841, v841[3]);
  BOOL v202 = (void (*)(void, void))v769;
  sub_FF10(*v201 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb, (uint64_t)v769, &qword_284DB0);
  uint64_t v203 = v731;
  uint64_t v204 = v789;
  v194((uint64_t)v731, enum case for CommonAudio.Verb.play(_:), v789);
  uint64_t v205 = (uint64_t)v203;
  v797((uint64_t)v203, 0LL, 1LL, v204);
  uint64_t v206 = v772;
  uint64_t v207 = v772 + *(int *)(v781 + 48);
  sub_FF10((uint64_t)v202, v772, &qword_284DB0);
  sub_FF10(v205, v207, &qword_284DB0);
  if (v198(v206, 1LL, v204) == 1)
  {
    sub_1F6CC(v205, &qword_284DB0);
    sub_1F6CC((uint64_t)v202, &qword_284DB0);
    int v208 = v198(v207, 1LL, v204);
    id v190 = v808;
    uint64_t v191 = v807;
    if (v208 == 1)
    {
      sub_1F6CC(v206, &qword_284DB0);
      sub_157C4((uint64_t)v841, (uint64_t)v839);
      goto LABEL_44;
    }

    goto LABEL_39;
  }

  uint64_t v209 = v719;
  sub_FF10(v206, v719, &qword_284DB0);
  if (v198(v207, 1LL, v204) == 1)
  {
    sub_1F6CC(v205, &qword_284DB0);
    sub_1F6CC((uint64_t)v202, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v788 + 8))(v209, v204);
    id v190 = v808;
    uint64_t v191 = v807;
LABEL_39:
    sub_1F6CC(v206, &qword_284DA8);
    sub_157C4((uint64_t)v841, (uint64_t)v839);
LABEL_40:
    sub_6C3C(v839);
    sub_6C3C(v841);
    goto LABEL_46;
  }

  uint64_t v216 = v205;
  uint64_t v217 = v209;
  uint64_t v218 = v788;
  uint64_t v219 = v735;
  (*(void (**)(char *, uint64_t, uint64_t))(v788 + 32))(v735, v207, v204);
  uint64_t v220 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v221 = dispatch thunk of static Equatable.== infix(_:_:)(v217, v219, v204, v220);
  uint64_t v222 = *(void (**)(char *, uint64_t))(v218 + 8);
  v222(v219, v204);
  sub_1F6CC(v216, &qword_284DB0);
  sub_1F6CC((uint64_t)v769, &qword_284DB0);
  v222((char *)v217, v204);
  sub_1F6CC(v772, &qword_284DB0);
  sub_157C4((uint64_t)v841, (uint64_t)v839);
  id v190 = v808;
  uint64_t v191 = v807;
  if ((v221 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_44:
  uint64_t v223 = *(void *)(*sub_6EA8(v839, v840) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_modifiers);
  uint64_t v225 = (uint64_t)v714;
  uint64_t v224 = v715;
  uint64_t v226 = v716;
  (*(void (**)(char *, void, uint64_t))(v715 + 104))( v714,  enum case for CommonAudio.Modifier.moreOf(_:),  v716);
  swift_bridgeObjectRetain(v223);
  char v227 = sub_14263C(v225, v223);
  swift_bridgeObjectRelease(v223);
  (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v225, v226);
  sub_6C3C(v839);
  sub_6C3C(v841);
  if ((v227 & 1) == 0)
  {
LABEL_46:
    uint64_t v229 = v795;
    uint64_t v230 = v800;
    ((void (*)(char *, void, uint64_t))v794)(v795, enum case for CommonAudio.Attribute.discovery(_:), v800);
    char v231 = AudioIntent.hasAttribute(_:)(v229, v190, v191);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v229, v230);
    uint64_t v228 = v709;
    if ((v231 & 1) != 0) {
      uint64_t v228 = 1LL;
    }
    goto LABEL_48;
  }

  uint64_t v228 = 8LL;
LABEL_48:
  uint64_t v772 = v228;
LABEL_49:
  uint64_t v232 = v801;
  uint64_t v233 = v795;
  uint64_t v234 = v800;
  ((void (*)(char *, void, uint64_t))v794)( v795,  enum case for CommonAudio.Attribute.addToUnspecifiedPlaylist(_:),  v800);
  char v235 = AudioIntent.hasAttribute(_:)(v233, v190, v191);
  os_log_t v769 = *(uint64_t **)(v152 + 8);
  ((void (*)(char *, uint64_t))v769)(v233, v234);
  if ((v235 & 1) != 0) {
    uint64_t v236 = 0LL;
  }
  else {
    uint64_t v236 = v232;
  }
  uint64_t v798 = v236;
  uint64_t v237 = v845[0];
  uint64_t v238 = sub_7245C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appShowTitles));
  uint64_t v242 = (uint64_t)v804;
  if (v239)
  {
    uint64_t v243 = v238;
    unint64_t v244 = v239;
    uint64_t v245 = v241;
    uint64_t v797 = v240;
    swift_bridgeObjectRetain(v239);
    uint64_t v801 = sub_A86F8(v243, v244);
    unint64_t v247 = v246;
    swift_bridgeObjectRelease(v244);
    unint64_t v813 = v247;
    if (v247)
    {
      swift_bridgeObjectRelease(v244);
      swift_bridgeObjectRelease(v806);
      uint64_t v806 = (os_log_s *)v245;
      goto LABEL_57;
    }

    sub_16474(v243, v244, (uint64_t)v797, v245);
  }

  uint64_t v801 = sub_7241C(*(void **)(v237 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_entities));
  unint64_t v813 = v248;
  swift_bridgeObjectRelease(0LL);
  uint64_t v797 = v758;
LABEL_57:
  uint64_t v249 = sub_7241C(*(void **)(v237 + 48));
  uint64_t v251 = v811;
  if (v250)
  {
    uint64_t v252 = v249;
    unint64_t v253 = v250;
    swift_bridgeObjectRelease(v810);
    uint64_t v812 = 1LL;
    uint64_t v782 = v252;
    if (v813) {
      goto LABEL_59;
    }
LABEL_63:
    uint64_t v260 = v802;
    goto LABEL_68;
  }

  uint64_t v812 = 0LL;
  unint64_t v253 = (unint64_t)v810;
  if (!v813) {
    goto LABEL_63;
  }
LABEL_59:
  uint64_t v254 = v237 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v237 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType, &v815, 0LL, 0LL);
  sub_FF10(v254, v242, &qword_284DC8);
  uint64_t v255 = v805;
  id v256 = v814;
  (*(void (**)(void, void, id))(v805 + 104))(v189, enum case for CommonAudio.MediaType.news(_:), v814);
  (*(void (**)(void (*)(void, void, void), void, uint64_t, id))(v255 + 56))( v189,  0LL,  1LL,  v256);
  uint64_t v257 = v251 + *(int *)(v802 + 48);
  sub_FF10(v242, v251, &qword_284DC8);
  sub_FF10((uint64_t)v189, v257, &qword_284DC8);
  id v258 = v256;
  os_log_t v259 = v809;
  if (((unsigned int (*)(uint64_t, uint64_t, id))v809)(v251, 1LL, v258) == 1)
  {
    swift_bridgeObjectRetain(v813);
    sub_1F6CC((uint64_t)v189, &qword_284DC8);
    sub_1F6CC(v242, &qword_284DC8);
    if (((unsigned int (*)(uint64_t, uint64_t, id))v259)(v257, 1LL, v814) == 1)
    {
      sub_1F6CC(v251, &qword_284DC8);
      swift_bridgeObjectRelease(v253);
      uint64_t v782 = v801;
      unint64_t v253 = v813;
      uint64_t v260 = v802;
      goto LABEL_68;
    }

    goto LABEL_66;
  }

  uint64_t v261 = v732;
  sub_FF10(v251, v732, &qword_284DC8);
  if (((unsigned int (*)(uint64_t, uint64_t, id))v259)(v257, 1LL, v814) == 1)
  {
    swift_bridgeObjectRetain(v813);
    sub_1F6CC((uint64_t)v189, &qword_284DC8);
    sub_1F6CC(v242, &qword_284DC8);
    (*(void (**)(uint64_t, id))(v805 + 8))(v261, v814);
LABEL_66:
    sub_1F6CC(v251, &qword_284DA0);
    uint64_t v260 = v802;
LABEL_67:
    swift_bridgeObjectRelease(v813);
    goto LABEL_68;
  }

  uint64_t v280 = v805;
  os_log_type_t v281 = v784;
  id v282 = v814;
  (*(void (**)(char *, uint64_t, id))(v805 + 32))(v784, v257, v814);
  uint64_t v283 = (uint64_t)v189;
  uint64_t v284 = v261;
  uint64_t v285 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  swift_bridgeObjectRetain(v813);
  char v286 = dispatch thunk of static Equatable.== infix(_:_:)(v284, v281, v282, v285);
  uint64_t v287 = *(void (**)(char *, id))(v280 + 8);
  v287(v281, v282);
  sub_1F6CC(v283, &qword_284DC8);
  sub_1F6CC(v242, &qword_284DC8);
  v287((char *)v284, v282);
  sub_1F6CC(v811, &qword_284DC8);
  uint64_t v260 = v802;
  if ((v286 & 1) == 0) {
    goto LABEL_67;
  }
  swift_bridgeObjectRelease(v253);
  uint64_t v782 = v801;
  unint64_t v253 = v813;
LABEL_68:
  uint64_t v262 = v845[0];
  uint64_t v263 = sub_7241C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_playlistTitles));
  v810 = (uint64_t *)v253;
  if (v264)
  {
    unint64_t v265 = v264;
    uint64_t v811 = sub_A86F8(v263, v264);
    uint64_t v267 = v266;
    swift_bridgeObjectRelease(v265);
    if (v267)
    {
      uint64_t v268 = v805;
      goto LABEL_80;
    }
  }

  else
  {
    uint64_t v811 = v263;
  }

  uint64_t v269 = sub_7245C(*(void **)(v262 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appPlaylistTitles));
  if (v270)
  {
    uint64_t v273 = v269;
    unint64_t v274 = v270;
    os_log_t v275 = v271;
    uint64_t v276 = v272;
    swift_bridgeObjectRetain(v270);
    uint64_t v277 = sub_A86F8(v273, v274);
    uint64_t v279 = v278;
    swift_bridgeObjectRelease(v274);
    if (v279)
    {
      swift_bridgeObjectRelease(v274);
      swift_bridgeObjectRelease(0LL);
      swift_bridgeObjectRelease(v806);
      uint64_t v797 = v275;
      uint64_t v806 = (os_log_s *)v276;
      uint64_t v811 = v277;
      uint64_t v267 = v279;
    }

    else
    {
      sub_16474(v273, v274, (uint64_t)v275, v276);
      uint64_t v267 = 0LL;
    }

    uint64_t v268 = v805;
    uint64_t v260 = v802;
  }

  else
  {
    uint64_t v267 = 0LL;
    uint64_t v268 = v805;
  }

LABEL_80:
  uint64_t v288 = v262 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v262 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType, &v838, 0LL, 0LL);
  uint64_t v289 = v793;
  sub_FF10(v288, v793, &qword_284DC8);
  uint64_t v290 = v785;
  id v291 = v814;
  uint64_t v803 = *(void **)(v268 + 104);
  ((void (*)(uint64_t, void, id))v803)(v785, enum case for CommonAudio.MediaType.playlist(_:), v814);
  v804 = *(char **)(v268 + 56);
  ((void (*)(uint64_t, void, uint64_t, id))v804)(v290, 0LL, 1LL, v291);
  uint64_t v292 = v799;
  uint64_t v293 = v799 + *(int *)(v260 + 48);
  sub_FF10(v289, v799, &qword_284DC8);
  sub_FF10(v290, v293, &qword_284DC8);
  id v294 = v291;
  os_log_t v295 = v809;
  if (((unsigned int (*)(uint64_t, uint64_t, id))v809)(v292, 1LL, v294) == 1)
  {
    sub_1F6CC(v290, &qword_284DC8);
    sub_1F6CC(v289, &qword_284DC8);
    int v296 = ((uint64_t (*)(uint64_t, uint64_t, id))v295)(v293, 1LL, v814);
    uint64_t v297 = (uint64_t)v764;
    if (v296 == 1)
    {
      sub_1F6CC(v799, &qword_284DC8);
      sub_157C4((uint64_t)v845, (uint64_t)v839);
      goto LABEL_93;
    }

    goto LABEL_85;
  }

  uint64_t v298 = v749;
  sub_FF10(v799, v749, &qword_284DC8);
  int v299 = ((uint64_t (*)(uint64_t, uint64_t, id))v295)(v293, 1LL, v814);
  uint64_t v297 = (uint64_t)v764;
  if (v299 == 1)
  {
    sub_1F6CC(v785, &qword_284DC8);
    sub_1F6CC(v793, &qword_284DC8);
    (*(void (**)(uint64_t, id))(v268 + 8))(v298, v814);
LABEL_85:
    sub_1F6CC(v799, &qword_284DA0);
    sub_157C4((uint64_t)v845, (uint64_t)v839);
    goto LABEL_86;
  }

  uint64_t v313 = v298;
  Class v314 = v784;
  id v315 = v814;
  (*(void (**)(char *, uint64_t, id))(v268 + 32))(v784, v293, v814);
  uint64_t v316 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  char v317 = dispatch thunk of static Equatable.== infix(_:_:)(v313, v314, v315, v316);
  uint64_t v318 = *(void (**)(char *, id))(v268 + 8);
  v318(v314, v315);
  sub_1F6CC(v785, &qword_284DC8);
  sub_1F6CC(v793, &qword_284DC8);
  uint64_t v319 = v313;
  uint64_t v260 = v802;
  v318((char *)v319, v315);
  sub_1F6CC(v799, &qword_284DC8);
  sub_157C4((uint64_t)v845, (uint64_t)v839);
  if ((v317 & 1) == 0)
  {
LABEL_86:
    uint64_t v793 = v267;
    uint64_t v300 = *sub_6EA8(v839, v840) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
    swift_beginAccess(v300, &v837, 0LL, 0LL);
    uint64_t v301 = v761;
    sub_FF10(v300, v761, &qword_284DC8);
    uint64_t v302 = v760;
    id v303 = v814;
    ((void (*)(uint64_t, void, id))v803)(v760, enum case for CommonAudio.MediaType.musicPlaylist(_:), v814);
    ((void (*)(uint64_t, void, uint64_t, id))v804)(v302, 0LL, 1LL, v303);
    uint64_t v304 = v297 + *(int *)(v260 + 48);
    sub_FF10(v301, v297, &qword_284DC8);
    sub_FF10(v302, v304, &qword_284DC8);
    id v305 = v303;
    os_log_t v306 = v809;
    if (((unsigned int (*)(uint64_t, uint64_t, id))v809)(v297, 1LL, v305) == 1)
    {
      sub_1F6CC(v302, &qword_284DC8);
      sub_1F6CC(v301, &qword_284DC8);
      int v307 = ((uint64_t (*)(uint64_t, uint64_t, id))v306)(v304, 1LL, v814);
      uint64_t v267 = v793;
      if (v307 == 1)
      {
        sub_1F6CC(v297, &qword_284DC8);
        goto LABEL_93;
      }
    }

    else
    {
      uint64_t v308 = v733;
      sub_FF10(v297, v733, &qword_284DC8);
      if (((unsigned int (*)(uint64_t, uint64_t, id))v306)(v304, 1LL, v814) != 1)
      {
        uint64_t v321 = v784;
        id v322 = v814;
        (*(void (**)(char *, uint64_t, id))(v268 + 32))(v784, v304, v814);
        uint64_t v323 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        char v324 = dispatch thunk of static Equatable.== infix(_:_:)(v308, v321, v322, v323);
        uint64_t v325 = *(void (**)(char *, id))(v268 + 8);
        v325(v321, v322);
        sub_1F6CC(v760, &qword_284DC8);
        sub_1F6CC(v761, &qword_284DC8);
        v325((char *)v308, v322);
        sub_1F6CC(v297, &qword_284DC8);
        sub_6C3C(v839);
        uint64_t v267 = v793;
        BOOL v326 = v793 != 0 || (v324 & 1) == 0;
        uint64_t v327 = v811;
        uint64_t v312 = v801;
        if (!v326) {
          uint64_t v327 = v801;
        }
        uint64_t v811 = v327;
        if (!v326)
        {
          uint64_t v267 = 0LL;
          uint64_t v309 = v783;
          uint64_t v310 = (uint64_t)v765;
          uint64_t v311 = (uint64_t)v810;
          if (!v813) {
            goto LABEL_104;
          }
          goto LABEL_102;
        }

  uint64_t v293 = (uint64_t)v751;
  dispatch thunk of AudioIntent.mediaType.getter(v280, v808);
  id v294 = v806;
  uint64_t v796 = *(void **)(v281 + 104);
  ((void (*)(uint64_t, void, uint64_t))v796)(v273, enum case for CommonAudio.MediaType.playlist(_:), v806);
  uint64_t v797 = *(void (***)(uint64_t, void, uint64_t))(v281 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v273, 0LL, 1LL, v294);
  os_log_t v295 = v780;
  int v296 = v780 + *(int *)(v801 + 48);
  sub_FF10(v293, v780, &qword_284DC8);
  uint64_t v297 = v295;
  sub_FF10(v273, v296, &qword_284DC8);
  uint64_t v298 = v294;
  int v299 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v802;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v295, 1LL, v298) == 1)
  {
    sub_1F6CC(v273, &qword_284DC8);
    uint64_t v297 = v780;
    sub_1F6CC(v293, &qword_284DC8);
    uint64_t v300 = v299(v296, 1LL, v806);
    uint64_t v301 = v777;
    id v303 = (uint64_t)v752;
    uint64_t v302 = (uint64_t)v753;
    if (v300 == 1)
    {
      sub_1F6CC(v297, &qword_284DC8);
      sub_157C4((uint64_t)v827, (uint64_t)v823);
      goto LABEL_93;
    }

    goto LABEL_85;
  }

  uint64_t v304 = v737;
  sub_FF10(v295, v737, &qword_284DC8);
  id v305 = v299(v296, 1LL, v806);
  id v303 = (uint64_t)v752;
  if (v305 == 1)
  {
    sub_1F6CC(v776, &qword_284DC8);
    sub_1F6CC(v293, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v304, v806);
    uint64_t v302 = (uint64_t)v753;
LABEL_85:
    sub_1F6CC(v297, &qword_284DA0);
    sub_157C4((uint64_t)v827, (uint64_t)v823);
    os_log_t v306 = v788;
    goto LABEL_86;
  }

  uint64_t v316 = v799;
  char v317 = v280;
  uint64_t v318 = v293;
  uint64_t v319 = v304;
  uint64_t v320 = v775;
  uint64_t v321 = v806;
  (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v296, v806);
  id v322 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  uint64_t v323 = dispatch thunk of static Equatable.== infix(_:_:)(v319, v320, v321, v322);
  char v324 = *(void (**)(char *, uint64_t))(v316 + 8);
  v324(v320, v321);
  sub_1F6CC(v776, &qword_284DC8);
  uint64_t v325 = v318;
  uint64_t v280 = v317;
  sub_1F6CC(v325, &qword_284DC8);
  v324((char *)v319, v321);
  sub_1F6CC(v780, &qword_284DC8);
  sub_157C4((uint64_t)v827, (uint64_t)v823);
  uint64_t v301 = v777;
  os_log_t v306 = v788;
  uint64_t v302 = (uint64_t)v753;
  if ((v323 & 1) == 0)
  {
LABEL_86:
    sub_6EA8(v823, v824);
    dispatch thunk of AudioIntent.mediaType.getter(v280, v808);
    int v307 = v750;
    uint64_t v308 = v806;
    ((void (*)(uint64_t, void, uint64_t))v796)( v750,  enum case for CommonAudio.MediaType.musicPlaylist(_:),  v806);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v307, 0LL, 1LL, v308);
    uint64_t v309 = v306 + *(int *)(v801 + 48);
    sub_FF10(v303, v788, &qword_284DC8);
    uint64_t v310 = v788;
    sub_FF10(v307, v309, &qword_284DC8);
    uint64_t v311 = v308;
    uint64_t v312 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v802;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v310, 1LL, v311) == 1)
    {
      sub_1F6CC(v307, &qword_284DC8);
      uint64_t v310 = v788;
      sub_1F6CC(v303, &qword_284DC8);
      uint64_t v313 = v312(v309, 1LL, v806);
      uint64_t v301 = v777;
      if (v313 == 1)
      {
        sub_1F6CC(v310, &qword_284DC8);
        goto LABEL_93;
      }
    }

    else
    {
      sub_FF10(v310, v302, &qword_284DC8);
      if (v312(v309, 1LL, v806) != 1)
      {
        uint64_t v327 = v799;
        uint64_t v328 = v775;
        Swift::Bool v329 = v806;
        (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v309, v806);
        uint64_t v330 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        uint64_t v331 = dispatch thunk of static Equatable.== infix(_:_:)(v302, v328, v329, v330);
        uint64_t v332 = *(void (**)(char *, uint64_t))(v327 + 8);
        v332(v328, v329);
        sub_1F6CC(v750, &qword_284DC8);
        sub_1F6CC(v303, &qword_284DC8);
        v332((char *)v302, v329);
        sub_1F6CC(v310, &qword_284DC8);
        sub_6C3C(v823);
        Class v314 = v791;
        uint64_t v333 = v804;
        if (v791 == 0 && (v331 & 1) != 0) {
          uint64_t v333 = v790;
        }
        v804 = v333;
        if (v791 != 0 || (v331 & 1) == 0)
        {
          uint64_t v301 = v777;
          id v315 = v800;
          goto LABEL_103;
        }

        Class v314 = 0LL;
        uint64_t v301 = v777;
        id v315 = v800;
        if (!v803) {
          goto LABEL_103;
        }
LABEL_102:
        v804 = sub_A86F8(v790, v803);
        Class v314 = v334;
        goto LABEL_103;
      }

      sub_1F6CC(v750, &qword_284DC8);
      sub_1F6CC(v303, &qword_284DC8);
      (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v302, v806);
      uint64_t v301 = v777;
    }

    sub_1F6CC(v310, &qword_284DA0);
    sub_6C3C(v823);
    Class v314 = v791;
    id v315 = v800;
    goto LABEL_103;
  }

LABEL_103:
        uint64_t v309 = v783;
        uint64_t v310 = (uint64_t)v765;
        uint64_t v311 = (uint64_t)v810;
        goto LABEL_104;
      }

      sub_1F6CC(v760, &qword_284DC8);
      sub_1F6CC(v761, &qword_284DC8);
      (*(void (**)(uint64_t, id))(v268 + 8))(v308, v814);
      uint64_t v267 = v793;
    }

    sub_1F6CC(v297, &qword_284DA0);
    sub_6C3C(v839);
    uint64_t v309 = v783;
    uint64_t v310 = (uint64_t)v765;
    uint64_t v311 = (uint64_t)v810;
    uint64_t v312 = v801;
    goto LABEL_104;
  }

LABEL_93:
  sub_6C3C(v839);
  uint64_t v320 = v811;
  uint64_t v312 = v801;
  if (!v267) {
    uint64_t v320 = v801;
  }
  uint64_t v811 = v320;
  if (!v813) {
    goto LABEL_103;
  }
  uint64_t v309 = v783;
  uint64_t v310 = (uint64_t)v765;
  uint64_t v311 = (uint64_t)v810;
  if (!v267)
  {
LABEL_102:
    uint64_t v811 = sub_A86F8(v312, v813);
    uint64_t v267 = v328;
  }

  sub_6C3C(v823);
  Class v314 = v791;
  BOOL v326 = v804;
  if (!v791) {
    BOOL v326 = v790;
  }
  v804 = v326;
  id v315 = v800;
  if (v803 && !v791) {
    goto LABEL_102;
  }
LABEL_103:
  uint64_t v335 = AudioIntent.isAddToUpNext()();
  if (!v314)
  {
LABEL_116:
    v804 = v774;
    goto LABEL_117;
  }

  sub_157C4((uint64_t)v827, (uint64_t)v821);
  if (!v335)
  {
    uint64_t v800 = v315;
    sub_6EA8(v821, v822);
    swift_bridgeObjectRetain(v314);
    uint64_t v336 = v280;
    uint64_t v337 = v732;
    dispatch thunk of AudioIntent.verb.getter(v336, v808);
    uint64_t v338 = v778;
    unint64_t v339 = v794;
    (*(void (**)(uint64_t, void, uint64_t))(v778 + 104))( v301,  enum case for CommonAudio.Verb.update(_:),  v794);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v338 + 56))(v301, 0LL, 1LL, v339);
    unint64_t v340 = v725;
    uint64_t v341 = v725 + *(int *)(v772 + 48);
    sub_FF10(v337, v725, &qword_284DB0);
    sub_FF10(v301, v341, &qword_284DB0);
    uint64_t v342 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v338 + 48);
    if (v342(v340, 1LL, v339) == 1)
    {
      sub_1F6CC(v301, &qword_284DB0);
      sub_1F6CC(v337, &qword_284DB0);
      uint64_t v343 = v342(v341, 1LL, v794);
      uint64_t v280 = v807;
      id v315 = v800;
      if (v343 == 1)
      {
        sub_1F6CC(v340, &qword_284DB0);
        sub_6C3C(v821);
LABEL_115:
        swift_bridgeObjectRelease(v314);
        goto LABEL_116;
      }
    }

    else
    {
      os_log_t v344 = v712;
      sub_FF10(v340, v712, &qword_284DB0);
      if (v342(v341, 1LL, v794) != 1)
      {
        uint64_t v345 = v794;
        uint64_t v346 = v344;
        uint64_t v347 = v778;
        uint64_t v348 = v727;
        (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v727, v341, v794);
        uint64_t v349 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        char v350 = dispatch thunk of static Equatable.== infix(_:_:)(v346, v348, v345, v349);
        int v351 = *(void (**)(char *, uint64_t))(v347 + 8);
        v351(v348, v345);
        sub_1F6CC(v777, &qword_284DB0);
        sub_1F6CC(v732, &qword_284DB0);
        uint64_t v352 = v345;
        id v315 = v800;
        v351((char *)v346, v352);
        sub_1F6CC(v340, &qword_284DB0);
        sub_6C3C(v821);
        uint64_t v280 = v807;
        if ((v350 & 1) != 0) {
          goto LABEL_115;
        }
LABEL_112:
        swift_bridgeObjectRelease(v315);
        goto LABEL_113;
      }

      sub_1F6CC(v777, &qword_284DB0);
      sub_1F6CC(v337, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v344, v794);
      uint64_t v280 = v807;
      id v315 = v800;
    }

    sub_1F6CC(v340, &qword_284DA8);
    sub_6C3C(v821);
    goto LABEL_112;
  }

  swift_bridgeObjectRetain(v314);
  swift_bridgeObjectRelease(v315);
  sub_6C3C(v821);
LABEL_113:
  os_log_t v795 = 5LL;
  id v315 = v314;
LABEL_117:
  uint64_t v791 = v314;
  int v353 = (void *)dispatch thunk of AudioIntent.applePlaylistTitles.getter(v280, v808);
  uint64_t v354 = sub_7241C(v353);
  uint64_t v356 = v355;
  swift_bridgeObjectRelease(v353);
  if (!v356 || (v357 = sub_A86F8(v354, v356), uint64_t v359 = v358, swift_bridgeObjectRelease(v356), !v359))
  {
    uint64_t v359 = v315;
    goto LABEL_130;
  }

  sub_157C4((uint64_t)v827, (uint64_t)v821);
  if (v335)
  {
    swift_bridgeObjectRelease(v315);
    sub_6C3C(v821);
LABEL_129:
    v804 = v357;
    goto LABEL_130;
  }

  int v360 = v315;
  uint64_t v800 = v359;
  sub_6EA8(v821, v822);
  char v361 = v280;
  char v362 = (uint64_t)v716;
  dispatch thunk of AudioIntent.verb.getter(v361, v808);
  uint64_t v363 = v778;
  uint64_t v364 = v722;
  uint64_t v365 = v794;
  (*(void (**)(uint64_t, void, uint64_t))(v778 + 104))(v722, enum case for CommonAudio.Verb.update(_:), v794);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v363 + 56))(v364, 0LL, 1LL, v365);
  uint64_t v366 = v730;
  uint64_t v367 = v730 + *(int *)(v772 + 48);
  sub_FF10(v362, v730, &qword_284DB0);
  uint64_t v368 = v366;
  sub_FF10(v364, v367, &qword_284DB0);
  double v369 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v363 + 48);
  if (v369(v366, 1LL, v365) != 1)
  {
    uint64_t v371 = v705;
    sub_FF10(v366, v705, &qword_284DB0);
    if (v369(v367, 1LL, v794) != 1)
    {
      Swift::String v398 = v778;
      os_log_type_t v399 = v727;
      uint64_t v400 = v794;
      (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v727, v367, v794);
      uint64_t v401 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      unint64_t v402 = dispatch thunk of static Equatable.== infix(_:_:)(v371, v399, v400, v401);
      uint64_t v403 = *(void (**)(char *, uint64_t))(v398 + 8);
      v403(v399, v400);
      sub_1F6CC(v722, &qword_284DB0);
      sub_1F6CC(v362, &qword_284DB0);
      v403((char *)v371, v400);
      sub_1F6CC(v730, &qword_284DB0);
      sub_6C3C(v821);
      uint64_t v280 = v807;
      uint64_t v359 = v800;
      uint64_t v370 = v360;
      if ((v402 & 1) != 0) {
        goto LABEL_148;
      }
LABEL_128:
      swift_bridgeObjectRelease(v370);
      goto LABEL_129;
    }

    sub_1F6CC(v722, &qword_284DB0);
    sub_1F6CC(v362, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v371, v794);
    uint64_t v370 = v360;
LABEL_127:
    sub_1F6CC(v368, &qword_284DA8);
    sub_6C3C(v821);
    uint64_t v280 = v807;
    uint64_t v359 = v800;
    goto LABEL_128;
  }

  sub_1F6CC(v364, &qword_284DB0);
  uint64_t v368 = v730;
  sub_1F6CC(v362, &qword_284DB0);
  uint64_t v370 = v360;
  if (v369(v367, 1LL, v794) != 1) {
    goto LABEL_127;
  }
  sub_1F6CC(v368, &qword_284DB0);
  sub_6C3C(v821);
  uint64_t v280 = v807;
  uint64_t v359 = v800;
LABEL_148:
  swift_bridgeObjectRelease(v359);
  uint64_t v359 = v370;
LABEL_130:
  uint64_t v372 = v789;
  dispatch thunk of AudioIntent.radioType.getter(v280, v808);
  uint64_t v373 = v754;
  sub_FF10(v372, v754, &qword_284D98);
  sub_157C4((uint64_t)v827, (uint64_t)v821);
  uint64_t v374 = v779;
  if (v359)
  {
    sub_6C3C(v821);
    sub_1F6CC(v373, &qword_284D98);
    sub_157C4((uint64_t)v827, (uint64_t)&v818);
LABEL_157:
    sub_6C3C(&v818);
LABEL_158:
    os_log_t v420 = (uint64_t)v755;
    goto LABEL_159;
  }

  uint64_t v375 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v748 + 48);
  uint64_t v376 = v741;
  uint64_t v377 = v375(v373, 1LL, v741);
  sub_157C4((uint64_t)v821, (uint64_t)&v818);
  if (v377 != 1)
  {
    sub_6C3C(&v818);
    sub_157C4((uint64_t)v821, (uint64_t)v816);
    goto LABEL_137;
  }

  sub_6EA8(&v818, v820);
  dispatch thunk of AudioIntent.frequency.getter(v280, v808);
  char v379 = v378;
  sub_6C3C(&v818);
  sub_157C4((uint64_t)v821, (uint64_t)v816);
  if ((v379 & 1) == 0)
  {
LABEL_137:
    sub_6C3C(v821);
    sub_6C3C(v816);
    sub_1F6CC(v373, &qword_284D98);
    goto LABEL_138;
  }

  sub_6EA8(v816, v817);
  uint64_t v380 = (void *)dispatch thunk of AudioIntent.radioStationNames.getter(v280, v808);
  sub_7241C(v380);
  uint64_t v382 = v381;
  swift_bridgeObjectRelease(v380);
  sub_6C3C(v821);
  swift_bridgeObjectRelease(v382);
  sub_6C3C(v816);
  sub_1F6CC(v373, &qword_284D98);
  if (!v382)
  {
    sub_157C4((uint64_t)v827, (uint64_t)&v818);
    uint64_t v383 = (uint64_t)v731;
    goto LABEL_194;
  }

LABEL_104:
  uint64_t v801 = v312;
  Swift::Bool v329 = AudioIntent.isAddToUpNext()();
  if (v267)
  {
    sub_157C4((uint64_t)v845, (uint64_t)v835);
    uint64_t v330 = v789;
    if (v329)
    {
      swift_bridgeObjectRetain(v267);
      swift_bridgeObjectRelease(v311);
      sub_6C3C(v835);
LABEL_115:
      uint64_t v812 = 5LL;
      uint64_t v311 = v267;
      goto LABEL_116;
    }

    uint64_t v331 = sub_6EA8(v835, v836);
    uint64_t v332 = v744;
    sub_FF10(*v331 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb, v744, &qword_284DB0);
    uint64_t v333 = v788;
    uint64_t v334 = v743;
    (*(void (**)(uint64_t, void, uint64_t))(v788 + 104))( v743,  enum case for CommonAudio.Verb.update(_:),  v330);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v333 + 56))(v334, 0LL, 1LL, v330);
    uint64_t v335 = v310 + *(int *)(v781 + 48);
    sub_FF10(v332, v310, &qword_284DB0);
    sub_FF10(v334, v335, &qword_284DB0);
    uint64_t v336 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v333 + 48);
    if (v336(v310, 1LL, v330) == 1)
    {
      swift_bridgeObjectRetain(v267);
      sub_1F6CC(v334, &qword_284DB0);
      sub_1F6CC(v332, &qword_284DB0);
      if (v336(v335, 1LL, v330) == 1)
      {
        sub_1F6CC(v310, &qword_284DB0);
        sub_6C3C(v835);
        uint64_t v311 = (uint64_t)v810;
        uint64_t v309 = v783;
LABEL_147:
        swift_bridgeObjectRelease(v267);
        uint64_t v811 = v782;
        goto LABEL_116;
      }
    }

    else
    {
      uint64_t v337 = v720;
      sub_FF10(v310, v720, &qword_284DB0);
      if (v336(v335, 1LL, v330) != 1)
      {
        uint64_t v376 = v788;
        uint64_t v377 = v735;
        (*(void (**)(char *, uint64_t, uint64_t))(v788 + 32))(v735, v335, v330);
        uint64_t v378 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        swift_bridgeObjectRetain(v267);
        char v379 = dispatch thunk of static Equatable.== infix(_:_:)(v337, v377, v330, v378);
        uint64_t v380 = *(void (**)(char *, uint64_t))(v376 + 8);
        uint64_t v381 = v377;
        uint64_t v309 = v783;
        v380(v381, v330);
        sub_1F6CC(v743, &qword_284DB0);
        sub_1F6CC(v744, &qword_284DB0);
        v380((char *)v337, v330);
        sub_1F6CC(v310, &qword_284DB0);
        sub_6C3C(v835);
        uint64_t v311 = (uint64_t)v810;
        if ((v379 & 1) != 0) {
          goto LABEL_147;
        }
LABEL_114:
        swift_bridgeObjectRelease(v311);
        goto LABEL_115;
      }

      swift_bridgeObjectRetain(v267);
      sub_1F6CC(v743, &qword_284DB0);
      sub_1F6CC(v744, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v788 + 8))(v337, v330);
    }

    sub_1F6CC(v310, &qword_284DA8);
    sub_6C3C(v835);
    uint64_t v311 = (uint64_t)v810;
    uint64_t v309 = v783;
    goto LABEL_114;
  }

  uint64_t v811 = v782;
  uint64_t v330 = v789;
LABEL_116:
  uint64_t v338 = sub_7241C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_applePlaylistTitles));
  uint64_t v793 = v267;
  if (!v339 || (unint64_t v340 = v339, v341 = sub_A86F8(v338, v339), v343 = v342, swift_bridgeObjectRelease(v340), !v343))
  {
    uint64_t v343 = v311;
    os_log_t v344 = v809;
    goto LABEL_129;
  }

  sub_157C4((uint64_t)v845, (uint64_t)v835);
  if (v329)
  {
    swift_bridgeObjectRelease(v311);
    sub_6C3C(v835);
    os_log_t v344 = v809;
LABEL_128:
    uint64_t v811 = v341;
    goto LABEL_129;
  }

  v810 = (uint64_t *)v343;
  uint64_t v345 = sub_6EA8(v835, v836);
  sub_FF10(*v345 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_verb, v309, &qword_284DB0);
  uint64_t v346 = v788;
  uint64_t v347 = v730;
  (*(void (**)(uint64_t, void, uint64_t))(v788 + 104))(v730, enum case for CommonAudio.Verb.update(_:), v330);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v346 + 56))(v347, 0LL, 1LL, v330);
  uint64_t v348 = v725;
  uint64_t v349 = v725 + *(int *)(v781 + 48);
  sub_FF10(v309, v725, &qword_284DB0);
  sub_FF10(v347, v349, &qword_284DB0);
  char v350 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v346 + 48);
  if (v350(v348, 1LL, v330) != 1)
  {
    uint64_t v352 = v713;
    sub_FF10(v348, v713, &qword_284DB0);
    int v353 = v350(v349, 1LL, v330);
    uint64_t v343 = (uint64_t)v810;
    if (v353 != 1)
    {
      uint64_t v382 = v788;
      uint64_t v383 = v352;
      uint64_t v384 = v735;
      (*(void (**)(char *, uint64_t, uint64_t))(v788 + 32))(v735, v349, v330);
      uint64_t v385 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      char v386 = dispatch thunk of static Equatable.== infix(_:_:)(v383, v384, v330, v385);
      uint64_t v387 = *(void (**)(char *, uint64_t))(v382 + 8);
      v387(v384, v330);
      sub_1F6CC(v730, &qword_284DB0);
      sub_1F6CC(v783, &qword_284DB0);
      v387((char *)v383, v330);
      sub_1F6CC(v348, &qword_284DB0);
      sub_6C3C(v835);
      os_log_t v344 = v809;
      if ((v386 & 1) != 0) {
        goto LABEL_149;
      }
LABEL_127:
      swift_bridgeObjectRelease(v311);
      goto LABEL_128;
    }

    sub_1F6CC(v730, &qword_284DB0);
    sub_1F6CC(v309, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v788 + 8))(v352, v330);
LABEL_126:
    sub_1F6CC(v348, &qword_284DA8);
    sub_6C3C(v835);
    os_log_t v344 = v809;
    goto LABEL_127;
  }

  sub_1F6CC(v347, &qword_284DB0);
  sub_1F6CC(v309, &qword_284DB0);
  int v351 = v350(v349, 1LL, v330);
  uint64_t v343 = (uint64_t)v810;
  if (v351 != 1) {
    goto LABEL_126;
  }
  sub_1F6CC(v348, &qword_284DB0);
  sub_6C3C(v835);
  os_log_t v344 = v809;
LABEL_149:
  swift_bridgeObjectRelease(v343);
  uint64_t v343 = v311;
LABEL_129:
  uint64_t v354 = (uint64_t)v767;
  uint64_t v355 = v796;
  sub_FF10(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioType, v796, &qword_284D98);
  uint64_t v356 = v766;
  sub_FF10(v355, v766, &qword_284D98);
  sub_157C4((uint64_t)v845, (uint64_t)v835);
  if (v343)
  {
    v810 = (uint64_t *)v343;
    sub_6C3C(v835);
    sub_1F6CC(v356, &qword_284D98);
    sub_157C4((uint64_t)v845, (uint64_t)&v832);
    uint64_t v357 = v802;
LABEL_158:
    sub_6C3C(&v832);
    goto LABEL_159;
  }

  os_log_t v358 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v759 + 48);
  uint64_t v359 = v740;
  int v360 = v358(v356, 1LL, v740);
  sub_157C4((uint64_t)v835, (uint64_t)&v832);
  if (v360 != 1)
  {
    sub_6C3C(&v832);
    sub_157C4((uint64_t)v835, (uint64_t)v829);
    goto LABEL_136;
  }

  char v361 = *(_BYTE *)(*sub_6EA8(&v832, v834) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_frequency + 8);
  sub_6C3C(&v832);
  sub_157C4((uint64_t)v835, (uint64_t)v829);
  if ((v361 & 1) == 0)
  {
LABEL_136:
    sub_6C3C(v835);
    sub_6C3C(v829);
    sub_1F6CC(v356, &qword_284D98);
    goto LABEL_137;
  }

  char v362 = sub_6EA8(v829, v830);
  sub_7241C(*(void **)(*v362 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioStationNames));
  uint64_t v364 = v363;
  sub_6C3C(v835);
  swift_bridgeObjectRelease(v364);
  sub_6C3C(v829);
  sub_1F6CC(v356, &qword_284D98);
  if (!v364)
  {
    sub_157C4((uint64_t)v845, (uint64_t)&v832);
    uint64_t v357 = v802;
    goto LABEL_178;
  }

LABEL_137:
  uint64_t v832 = 0LL;
  unint64_t v833 = 0xE000000000000000LL;
  uint64_t v365 = v845[0];
  uint64_t v366 = sub_7241C(*(void **)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_radioStationNames));
  if (v367)
  {
    uint64_t v368 = v367;
    String.append(_:)(*(Swift::String *)&v366);
    swift_bridgeObjectRelease(v368);
  }

  if ((*(_BYTE *)(v365 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_frequency + 8) & 1) == 0)
  {
    double v369 = *(double *)(v365 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_frequency);
    uint64_t v370 = v759;
    uint64_t v371 = v728;
    (*(void (**)(uint64_t, void, uint64_t))(v759 + 104))( v728,  enum case for CommonAudio.RadioType.am(_:),  v359);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v370 + 56))(v371, 0LL, 1LL, v359);
    uint64_t v372 = v723;
    uint64_t v373 = v723 + *(int *)(v722 + 48);
    sub_FF10(v796, v723, &qword_284D98);
    sub_FF10(v371, v373, &qword_284D98);
    if (v358(v372, 1LL, v359) == 1)
    {
      sub_1F6CC(v371, &qword_284D98);
      if (v358(v373, 1LL, v359) == 1)
      {
        sub_1F6CC(v372, &qword_284D98);
LABEL_151:
        uint64_t v393 = sub_6C5C((uint64_t *)&unk_289320);
        uint64_t v394 = swift_allocObject(v393, 72LL, 7LL);
        uint64_t v395 = sub_142CE0(v394, 1LL);
        *((void *)v396 + sub_6C3C(v0 + 3) = &type metadata for Double;
        *((void *)v396 + sub_6C3C(v0 + 4) = &protocol witness table for Double;
        *uint64_t v396 = v369;
        uint64_t v397 = WHAError.rawValue.getter(v395);
        v398._countAndFlagsBits = String.init(format:_:)(1714433573LL, 0xE400000000000000LL, v397);
LABEL_153:
        object = v398._object;
        sub_A8748(v398);
        swift_bridgeObjectRelease(object);
        goto LABEL_154;
      }
    }

    else
    {
      uint64_t v374 = v712;
      sub_FF10(v372, v712, &qword_284D98);
      if (v358(v373, 1LL, v359) != 1)
      {
        uint64_t v388 = v759;
        uint64_t v389 = v711;
        (*(void (**)(char *, uint64_t, uint64_t))(v759 + 32))(v711, v373, v359);
        uint64_t v390 = sub_10430( &qword_284E00,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.RadioType,  (uint64_t)&protocol conformance descriptor for CommonAudio.RadioType);
        LODWORD(v811) = dispatch thunk of static Equatable.== infix(_:_:)(v374, v389, v359, v390);
        uint64_t v391 = v374;
        uint64_t v392 = *(void (**)(char *, uint64_t))(v388 + 8);
        v392(v389, v359);
        sub_1F6CC(v728, &qword_284D98);
        v392((char *)v391, v359);
        uint64_t v375 = sub_1F6CC(v372, &qword_284D98);
        if ((v811 & 1) != 0) {
          goto LABEL_151;
        }
LABEL_152:
        v398._countAndFlagsBits = Double.description.getter(v375, v369);
        goto LABEL_153;
      }

      sub_1F6CC(v728, &qword_284D98);
      (*(void (**)(uint64_t, uint64_t))(v759 + 8))(v374, v359);
    }

    uint64_t v375 = sub_1F6CC(v372, &qword_284D90);
    goto LABEL_152;
  }

                    swift_once(&qword_283888, sub_BFC5C);
                    goto LABEL_109;
                  }

                  uint64_t v95 = v149;
                  uint64_t v34 = v161;
                  uint64_t v133 = v154;
                  uint64_t v35 = v155;
                  uint64_t v6 = v153;
LABEL_107:
                  ((void (*)(char *, unint64_t))v44)(v133, v95);
                  goto LABEL_108;
                }

                goto LABEL_133;
              }

              uint64_t v133 = v154;
              uint64_t v134 = v156;
LABEL_105:
              ((void (*)(char *, unint64_t))v44)(v134, v95);
LABEL_106:
              ((void (*)(char *, __objc2_ivar_list *, unint64_t))v39)(v133, v35, v95);
              goto LABEL_107;
            }

            goto LABEL_129;
          }

          uint64_t v133 = v154;
LABEL_103:
          ((void (*)(char *, unint64_t))v44)(v111, v95);
LABEL_104:
          uint64_t v134 = v156;
          ((void (*)(char *, __objc2_ivar_list *, unint64_t))v39)(v156, v35, v95);
          goto LABEL_105;
        }

        uint64_t v95 = v33;
      }

      else
      {
        uint64_t v44 = *(__objc2_ivar_list **)(v105 + 8);
        ((void (*)(char *, unint64_t))v44)(v94, v95);
      }

      uint64_t v133 = v154;
      uint64_t v111 = v152;
      ((void (*)(char *, const char *, unint64_t))v39)(v152, v34, v95);
      goto LABEL_103;
    }
  }

  uint64_t v75 = (uint64_t)v162;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v163 + 56))(v162, 1LL, 1LL, v149);
LABEL_69:
  uint64_t v86 = v75;
LABEL_70:
  sub_181EFC(v86);
  return 0LL;
}

LABEL_154:
  uint64_t v400 = v737;
  sub_FF10(v796, v737, &qword_284D98);
  if (v358(v400, 1LL, v359) == 1)
  {
    sub_1F6CC(v400, &qword_284D98);
  }

  else
  {
    uint64_t v401 = v759;
    unint64_t v402 = v724;
    uint64_t v403 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v759 + 32))(v724, v400, v359);
    v846._countAndFlagsBits = CommonAudio.RadioType.rawValue.getter(v403);
    uint64_t v404 = v846._object;
    sub_A8748(v846);
    swift_bridgeObjectRelease(v404);
    (*(void (**)(char *, uint64_t))(v401 + 8))(v402, v359);
  }

  uint64_t v357 = v802;
  uint64_t v811 = v832;
  uint64_t v405 = v833;
  sub_157C4((uint64_t)v845, (uint64_t)&v832);
  uint64_t v798 = 16LL;
  v810 = (uint64_t *)v405;
  if (v405) {
    goto LABEL_158;
  }
LABEL_178:
  uint64_t v437 = *sub_6EA8(&v832, v834) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
  swift_beginAccess(v437, &v817, 0LL, 0LL);
  uint64_t v438 = v721;
  sub_FF10(v437, v721, &qword_284DC8);
  if (((unsigned int (*)(uint64_t, uint64_t, id))v344)(v438, 1LL, v814) == 1)
  {
    sub_1F6CC(v438, &qword_284DC8);
    sub_6C3C(&v832);
    v810 = 0LL;
  }

  else
  {
    Swift::Bool v488 = CommonAudio.MediaType.isStation()();
    uint64_t v489 = *(void (**)(uint64_t, id))(v805 + 8);
    v489(v438, v814);
    sub_6C3C(&v832);
    if (!v488) {
      goto LABEL_290;
    }
    if (v813)
    {
      uint64_t v490 = sub_A86F8(v801, v813);
      v810 = (uint64_t *)v491;
      if (v491) {
        goto LABEL_207;
      }
    }

    uint64_t v492 = v845[0];
    uint64_t v490 = sub_7241C(*(void **)(v845[0] + 24LL));
    v810 = (uint64_t *)v493;
    if (v493
      || (uint64_t v490 = sub_7241C(*(void **)(v492 + 16)), (v810 = (uint64_t *)v494) != 0LL)
      || (uint64_t v490 = sub_7241C(*(void **)(v492 + 48)), (v810 = (uint64_t *)v495) != 0LL))
    {
LABEL_207:
      uint64_t v811 = v490;
      uint64_t v496 = v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType;
      swift_beginAccess( v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_mediaType,  &v816,  0LL,  0LL);
      uint64_t v497 = v496;
      uint64_t v498 = v710;
      sub_FF10(v497, v710, &qword_284DC8);
      if (((unsigned int (*)(uint64_t, uint64_t, id))v344)(v498, 1LL, v814) == 1)
      {
        sub_1F6CC(v498, &qword_284DC8);
        uint64_t v812 = 0LL;
      }

      else
      {
        uint64_t v812 = sub_201914();
        v489(v498, v814);
      }
    }

    else
    {
LABEL_290:
      v810 = 0LL;
    }
  }

LABEL_254:
      v804 = 0LL;
      uint64_t v599 = 0LL;
      goto LABEL_255;
    }

    swift_release(v539);
    uint64_t v538 = v845[0];
  }

  sub_FF10(v538 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_noun, v524, &qword_284D88);
  uint64_t v611 = v754;
  uint64_t v612 = v756;
  (*(void (**)(uint64_t, void, uint64_t))(v754 + 104))( v525,  enum case for CommonAudio.Noun.library(_:),  v756);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v611 + 56))(v525, 0LL, 1LL, v612);
  uint64_t v613 = v755;
  uint64_t v614 = v755 + *(int *)(v753 + 48);
  sub_FF10(v524, v755, &qword_284D88);
  sub_FF10(v525, v614, &qword_284D88);
  unint64_t v615 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v611 + 48);
  if (v615(v613, 1LL, v612) == 1)
  {
    sub_1F6CC(v525, &qword_284D88);
    sub_1F6CC(v524, &qword_284D88);
    if (v615(v614, 1LL, v612) == 1)
    {
      sub_1F6CC(v613, &qword_284D88);
      unint64_t v576 = v813;
      unint64_t v608 = (void (*)(uint64_t, uint64_t))v769;
      uint64_t v609 = (uint64_t)v810;
LABEL_270:
      v804 = 0LL;
      v809 = 0LL;
      uint64_t v805 = 0LL;
      id v814 = 0LL;
      uint64_t v610 = 2LL;
      goto LABEL_271;
    }

      uint64_t v799 = 0LL;
      *(void *)&uint64_t v802 = 0LL;
      if (v562) {
        goto LABEL_255;
      }
      goto LABEL_253;
    }

    swift_release(v806);
  }

  dispatch thunk of AudioIntent.noun.getter(v537, v527);
  uint64_t v606 = v747;
  (*(void (**)(uint64_t, void, uint64_t))(v747 + 104))( v540,  enum case for CommonAudio.Noun.library(_:),  v522);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v606 + 56))(v540, 0LL, 1LL, v522);
  uint64_t v607 = v523 + *(int *)(v744 + 48);
  sub_FF10(v539, v523, &qword_284D88);
  sub_FF10(v540, v607, &qword_284D88);
  unint64_t v608 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v606 + 48);
  if (v608(v523, 1LL, v522) != 1)
  {
    uint64_t v611 = v721;
    sub_FF10(v523, v721, &qword_284D88);
    if (v608(v607, 1LL, v522) != 1)
    {
      uint64_t v612 = v747;
      uint64_t v613 = v710;
      (*(void (**)(char *, uint64_t, uint64_t))(v747 + 32))(v710, v607, v522);
      uint64_t v614 = sub_10430( &qword_284DE8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Noun,  (uint64_t)&protocol conformance descriptor for CommonAudio.Noun);
      unint64_t v615 = dispatch thunk of static Equatable.== infix(_:_:)(v611, v613, v522, v614);
      uint64_t v616 = *(void (**)(char *, uint64_t))(v612 + 8);
      v616(v613, v522);
      sub_1F6CC(v771, &qword_284D88);
      sub_1F6CC(v770, &qword_284D88);
      v616((char *)v611, v522);
      sub_1F6CC(v523, &qword_284D88);
      uint64_t v610 = v785;
      uint64_t v569 = v762;
      uint64_t v605 = v808;
      if ((v615 & 1) != 0) {
        goto LABEL_268;
      }
LABEL_266:
      uint64_t v799 = 0LL;
      *(void *)&uint64_t v802 = 0LL;
      uint64_t v788 = 0LL;
      uint64_t v796 = 0LL;
      unint64_t v604 = v728;
      goto LABEL_269;
    }

    sub_1F6CC(v771, &qword_284D88);
    sub_1F6CC(v539, &qword_284D88);
    (*(void (**)(uint64_t, uint64_t))(v747 + 8))(v611, v522);
    uint64_t v610 = v785;
    uint64_t v569 = v762;
    uint64_t v605 = v808;
LABEL_265:
    uint64_t v785 = v610;
    sub_1F6CC(v523, &qword_284D80);
    goto LABEL_266;
  }

  sub_1F6CC(v540, &qword_284D88);
  sub_1F6CC(v539, &qword_284D88);
  uint64_t v609 = v608(v607, 1LL, v522);
  uint64_t v610 = v785;
  uint64_t v569 = v762;
  uint64_t v605 = v808;
  if (v609 != 1) {
    goto LABEL_265;
  }
  sub_1F6CC(v523, &qword_284D88);
LABEL_268:
  uint64_t v785 = v610;
  uint64_t v799 = 0LL;
  *(void *)&uint64_t v802 = 0LL;
  uint64_t v788 = 0LL;
  uint64_t v796 = 0LL;
  unint64_t v604 = 2LL;
LABEL_269:
  uint64_t v617 = dispatch thunk of AudioIntent.attributes.getter(v537, v605);
  v618 = (uint64_t)v787;
  uint64_t v619 = v569;
  char v620 = v605;
  uint64_t v621 = v793;
  ((void (*)(char *, uint64_t, uint64_t))v786)(v787, v619, v793);
  uint64_t v622 = sub_1427C0(v618, v617);
  swift_bridgeObjectRelease(v617);
  v759(v618, v621);
  uint64_t v623 = 2LL;
  if ((v622 & 1) == 0) {
    uint64_t v623 = v604;
  }
  uint64_t v794 = v623;
  uint64_t v624 = (void *)dispatch thunk of AudioIntent.albums.getter(v537, v620);
  char v625 = sub_7241C(v624);
  uint64_t v627 = v626;
  swift_bridgeObjectRelease(v624);
  if (!v627)
  {
    uint64_t v628 = v804;
    unint64_t v630 = v800;
    uint64_t v631 = v773;
    BOOL v634 = v808;
    goto LABEL_286;
  }

  uint64_t v628 = sub_A86F8(v625, v627);
  unint64_t v630 = v629;
  swift_bridgeObjectRelease(v627);
  uint64_t v631 = v773;
  BOOL v632 = v800;
  if (v803)
  {
    BOOL v633 = v804;
    BOOL v634 = v808;
    if (v630)
    {
      if (v773)
      {
        if (v773 == 2)
        {
          uint64_t v635 = v803;
          swift_bridgeObjectRetain(v803);
          swift_bridgeObjectRelease(v802);
          uint64_t v631 = 0LL;
          os_log_t v795 = 0LL;
          *(void *)&uint64_t v802 = v632;
          BOOL v632 = v635;
          BOOL v633 = v790;
LABEL_284:
          swift_bridgeObjectRelease(v802);
          uint64_t v799 = v628;
          *(void *)&uint64_t v802 = v630;
          goto LABEL_285;
        }

        goto LABEL_280;
      }

LABEL_268:
    sub_1F6CC(v613, &qword_284D80);
    v804 = 0LL;
    v809 = 0LL;
    uint64_t v805 = 0LL;
    id v814 = 0LL;
    unint64_t v576 = v813;
    uint64_t v617 = v771;
    uint64_t v610 = v736;
    unint64_t v608 = (void (*)(uint64_t, uint64_t))v769;
    uint64_t v609 = (uint64_t)v810;
    goto LABEL_272;
  }

  uint64_t v616 = v729;
  sub_FF10(v613, v729, &qword_284D88);
  if (v615(v614, 1LL, v612) == 1)
  {
    sub_1F6CC(v525, &qword_284D88);
    sub_1F6CC(v524, &qword_284D88);
    (*(void (**)(uint64_t, uint64_t))(v611 + 8))(v616, v612);
    goto LABEL_268;
  }

  v618 = v718;
  (*(void (**)(char *, uint64_t, uint64_t))(v611 + 32))(v718, v614, v612);
  uint64_t v619 = sub_10430( &qword_284DE8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Noun,  (uint64_t)&protocol conformance descriptor for CommonAudio.Noun);
  char v620 = dispatch thunk of static Equatable.== infix(_:_:)(v616, v618, v612, v619);
  uint64_t v621 = *(void (**)(char *, uint64_t))(v611 + 8);
  v621(v618, v612);
  sub_1F6CC(v525, &qword_284D88);
  sub_1F6CC(v524, &qword_284D88);
  v621((char *)v616, v612);
  sub_1F6CC(v613, &qword_284D88);
  unint64_t v576 = v813;
  unint64_t v608 = (void (*)(uint64_t, uint64_t))v769;
  uint64_t v609 = (uint64_t)v810;
  if ((v620 & 1) != 0) {
    goto LABEL_270;
  }
  v804 = 0LL;
  v809 = 0LL;
  uint64_t v805 = 0LL;
  id v814 = 0LL;
  uint64_t v617 = v771;
  uint64_t v610 = v736;
LABEL_272:
  uint64_t v622 = *(void *)(v845[0] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_attributes);
  uint64_t v623 = (uint64_t)v795;
  uint64_t v624 = v800;
  ((void (*)(char *, uint64_t, uint64_t))v794)(v795, v617, v800);
  swift_bridgeObjectRetain(v622);
  char v625 = sub_1427C0(v623, v622);
  swift_bridgeObjectRelease(v622);
  v608(v623, v624);
  if ((v625 & 1) != 0) {
    uint64_t v626 = 2LL;
  }
  else {
    uint64_t v626 = v610;
  }
  uint64_t v627 = v845[0];
  uint64_t v628 = sub_7241C(*(void **)(v845[0] + 16LL));
  uint64_t v800 = v626;
  if (v629)
  {
    unint64_t v630 = v629;
    uint64_t v631 = sub_A86F8(v628, v629);
    BOOL v633 = v632;
    swift_bridgeObjectRelease(v630);
    if (v576)
    {
      if (v633)
      {
        if (sub_142520(v798, 2LL))
        {
          swift_bridgeObjectRetain(v576);
          swift_bridgeObjectRelease(v809);
          uint64_t v798 = 0LL;
          uint64_t v812 = 0LL;
          BOOL v634 = (unsigned int (*)(void, void, void))v609;
          uint64_t v635 = v801;
          uint64_t v609 = v576;
LABEL_293:
          swift_bridgeObjectRelease(v634);
          v804 = (char *)v631;
          v809 = v633;
          uint64_t v631 = v635;
          goto LABEL_294;
        }

LABEL_281:
        uint64_t v636 = v798;
        if (sub_142520(v798, 0LL))
        {
          BOOL v634 = (unsigned int (*)(void, void, void))v809;
          if (v609)
          {
            uint64_t v635 = v811;
            goto LABEL_293;
          }

LABEL_287:
          uint64_t v812 = 2LL;
          goto LABEL_295;
        }

        BOOL v637 = sub_142520(v636, 2LL);
        if (!v609)
        {
          if (v637) {
            goto LABEL_287;
          }
          uint64_t v609 = 0LL;
        }

        uint64_t v635 = v811;
        BOOL v634 = (unsigned int (*)(void, void, void))v809;
        goto LABEL_293;
      }
    }

    else if (v633)
    {
      goto LABEL_281;
    }
  }

  uint64_t v631 = v811;
LABEL_294:
  BOOL v633 = (os_log_s *)v609;
LABEL_295:
  uint64_t v638 = sub_7241C(*(void **)(v627 + 24));
  uint64_t v640 = v638;
  if (v639)
  {
    unint64_t v641 = v639;
    uint64_t v640 = sub_A86F8(v638, v639);
    uint64_t v643 = v642;
    swift_bridgeObjectRelease(v641);
  }

  else
  {
    uint64_t v643 = 0LL;
  }

  uint64_t v644 = sub_7245C(*(void **)(v627 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appMusicArtistNames));
  unint64_t v646 = v645;
  uint64_t v648 = v647;
  int v650 = v649;
  sub_157C4((uint64_t)v845, (uint64_t)&v824);
  if (v646)
  {
    sub_6C3C(&v824);
  }

  else
  {
    uint64_t v651 = sub_6EA8(&v824, v826);
    uint64_t v644 = sub_7245C(*(void **)(*v651 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_appAudiobookAuthors));
    unint64_t v646 = v652;
    uint64_t v648 = v653;
    int v650 = v654;
    sub_6C3C(&v824);
    if (!v646)
    {
      uint64_t v803 = v650;
      v810 = (uint64_t *)v648;
      uint64_t v802 = v644;
      uint64_t v811 = 0LL;
      char v659 = 1;
      if (!v576) {
        goto LABEL_307;
      }
      goto LABEL_303;
    }
  }

  uint64_t v803 = v650;
  v810 = (uint64_t *)v648;
  uint64_t v802 = v644;
  uint64_t v811 = v646;
  uint64_t v655 = sub_A86F8(v644, v646);
  if (v656)
  {
    uint64_t v657 = v655;
    v658 = v656;
    swift_bridgeObjectRelease(v643);
    char v659 = 0;
    uint64_t v640 = v657;
    uint64_t v643 = v658;
    if (v576) {
      goto LABEL_303;
    }
LABEL_307:
    if (v643) {
      goto LABEL_308;
    }
    goto LABEL_311;
  }

  char v659 = 0;
  if (!v576) {
    goto LABEL_307;
  }
LABEL_303:
  if (v643)
  {
    if (sub_142520(v798, 3LL))
    {
      swift_bridgeObjectRetain(v576);
      swift_bridgeObjectRelease(v814);
      uint64_t v798 = 0LL;
      uint64_t v812 = 0LL;
      uint64_t v660 = v633;
      uint64_t v805 = v640;
      id v814 = v643;
      uint64_t v631 = v801;
      uint64_t v643 = (void *)v576;
LABEL_314:
      uint64_t v664 = v792;
      os_log_t v666 = v790;
      uint64_t v667 = v776;
      goto LABEL_315;
    }

LABEL_308:
    uint64_t v661 = v798;
    if (sub_142520(v798, 0LL))
    {
      BOOL v662 = sub_142520(v661, 0LL);
      if (!v633)
      {
        BOOL v663 = v576 != 0 && v662;
        goto LABEL_341;
      }
    }

    else
    {
      BOOL v668 = sub_142520(v661, 3LL);
      BOOL v669 = sub_142520(v661, 0LL);
      if (!v633)
      {
        if (!v668)
        {
          uint64_t v660 = (os_log_s *)v814;
          uint64_t v805 = v640;
          id v814 = v643;
          uint64_t v643 = 0LL;
          goto LABEL_314;
        }

        BOOL v663 = v576 != 0 && v669;
LABEL_341:
        uint64_t v664 = v792;
        os_log_t v666 = v790;
        uint64_t v667 = v776;
        if (v663)
        {
          uint64_t v660 = (os_log_s *)v814;
          uint64_t v805 = v640;
          id v814 = v643;
          uint64_t v643 = 0LL;
        }

        else
        {
          if ((v659 & 1) != 0)
          {
            uint64_t v812 = 3LL;
            goto LABEL_316;
          }

          uint64_t v705 = v811;
          swift_bridgeObjectRetain(v811);
          uint64_t v706 = v664;
          uint64_t v707 = (os_log_s *)v803;
          swift_bridgeObjectRetain(v803);
          swift_bridgeObjectRelease(v705);
          uint64_t v812 = 3LL;
          uint64_t v660 = v806;
          uint64_t v797 = (void (*)(uint64_t, void, uint64_t, uint64_t))v810;
          uint64_t v806 = v707;
          uint64_t v664 = v706;
          uint64_t v631 = v640;
        }

LABEL_315:
        swift_bridgeObjectRelease(v660);
        uint64_t v640 = v631;
LABEL_316:
        uint64_t v665 = v791;
        goto LABEL_317;
      }
    }

    uint64_t v660 = (os_log_s *)v814;
    uint64_t v805 = v640;
    id v814 = v643;
    uint64_t v643 = v633;
    goto LABEL_314;
  }

LABEL_311:
  uint64_t v640 = v631;
  uint64_t v643 = v633;
  uint64_t v664 = v792;
  uint64_t v665 = v791;
  os_log_t v666 = v790;
  uint64_t v667 = v776;
LABEL_317:
  id v670 = v778;
  BOOL v671 = sub_142520(v812, 0LL);
  uint64_t v672 = v798;
  if (v671 || !sub_142520(v798, 0LL))
  {
    if (sub_142520(v672, 18LL))
    {
      os_log_t v795 = (char *)v640;
      uint64_t v673 = v665;
      uint64_t v674 = v643;
      v675 = v666;
      uint64_t v676 = v670;
      uint64_t v677 = v667;
      unint64_t v678 = v576;
      uint64_t v679 = v664;
      uint64_t v680 = v672;
      uint64_t v672 = v812;
      if (!sub_142520(v812, 5LL)) {
        uint64_t v672 = v680;
      }
      uint64_t v664 = v679;
      unint64_t v576 = v678;
      uint64_t v667 = v677;
      id v670 = v676;
      os_log_t v666 = v675;
      uint64_t v643 = v674;
      uint64_t v665 = v673;
      uint64_t v640 = (uint64_t)v795;
    }

    uint64_t v812 = v672;
  }

  if (v576)
  {
    if (sub_142520(v812, 0LL))
    {
      swift_bridgeObjectRetain(v576);
      swift_bridgeObjectRelease(v643);
    }

    else
    {
      if (v643) {
        goto LABEL_330;
      }
      swift_bridgeObjectRetain(v576);
    }

    uint64_t v640 = v801;
    uint64_t v643 = (void *)v576;
  }

uint64_t sub_64828(uint64_t a1)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v2 = sub_6C5C(&qword_284E10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_284E18);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = a1;
  uint64_t v9 = type metadata accessor for AudioUsoIntent(0LL);
  swift_retain(a1);
  dispatch thunk of AudioIntent.decade.getter(v9, &protocol witness table for AudioUsoIntent);
  uint64_t v10 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1LL, v10) == 1)
  {
    sub_1F6CC((uint64_t)v8, &qword_284E18);
  }

  else
  {
    uint64_t v12 = sub_201990();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    if (v12) {
      goto LABEL_7;
    }
  }

  uint64_t v13 = dispatch thunk of AudioIntent.dateTime.getter(v9, &protocol witness table for AudioUsoIntent);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = type metadata accessor for DateTime(0LL);
    uint64_t v16 = sub_1641C(0LL, (unint64_t *)&qword_284E20, &OBJC_CLASS___INDateComponentsRange_ptr);
    Transformer.init(transform:)(sub_204098, 0LL, v15, v16);
    uint64_t v17 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter(v2);
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v20 = UsoEntity_common_DateTime.toDateTime(recurrencePattern:)(0LL);
    uint64_t v24 = v20;
    v17(&v23, &v24);
    swift_release(v20);
    swift_release(v19);
    swift_release(v14);
    uint64_t v12 = v23;
  }

  else
  {
    uint64_t v12 = 0LL;
  }

uint64_t sub_64A64(uint64_t a1)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v2 = sub_6C5C(&qword_284E10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = sub_6C5C(&qword_284E18);
  __chkstk_darwin(v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_FF10(a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_decade, (uint64_t)v8, &qword_284E18);
  uint64_t v9 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9);
  swift_retain(a1);
  if (v11 == 1)
  {
    sub_1F6CC((uint64_t)v8, &qword_284E18);
  }

  else
  {
    uint64_t v12 = sub_201990();
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v8, v9);
    if (v12)
    {
      swift_release(a1);
      return v12;
    }
  }

  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin16NowPlayingIntent_dateTime);
  if (v13)
  {
    uint64_t v14 = type metadata accessor for DateTime(0LL);
    uint64_t v15 = sub_1641C(0LL, (unint64_t *)&qword_284E20, &OBJC_CLASS___INDateComponentsRange_ptr);
    swift_retain(v13);
    Transformer.init(transform:)(sub_204098, 0LL, v14, v15);
    uint64_t v16 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter(v2);
    uint64_t v18 = v17;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v19 = UsoEntity_common_DateTime.toDateTime(recurrencePattern:)(0LL);
    uint64_t v23 = v19;
    v16(&v22, &v23);
    swift_release(a1);
    swift_release(v19);
    swift_release(v18);
    swift_release(v13);
    return v22;
  }

  else
  {
    swift_release(a1);
    return 0LL;
  }

uint64_t sub_64CB8( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  v24[3] = a7;
  v24[4] = a8;
  uint64_t v15 = sub_10974(v24);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16LL))(v15, a1, a7);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  sub_6EA8(a2, v16);
  sub_157C4(a3, (uint64_t)v23);
  sub_157C4((uint64_t)a2, (uint64_t)v22);
  sub_157C4((uint64_t)v24, (uint64_t)v21);
  uint64_t v18 = (void *)swift_allocObject(&unk_26C5E8, 160LL, 7LL);
  _OWORD v18[2] = a4;
  v18[3] = a5;
  sub_FF54(v23, (uint64_t)(v18 + 4));
  sub_FF54(v22, (uint64_t)(v18 + 9));
  sub_FF54(v21, (uint64_t)(v18 + 14));
  v18[19] = a6;
  swift_retain(a5);
  id v19 = a6;
  dispatch thunk of NowPlayingProviding.app(completion:)(sub_64EB4, v18, v16, v17);
  swift_release(v18);
  return sub_6C3C(v24);
}

uint64_t sub_64DE0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_64E04()
{
  return sub_142C84(*(void **)(v0 + 16));
}

uint64_t sub_64E0C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_64E1C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_64E2C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_64E50()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_64E60()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_64E70()
{
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_64EB4( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  return sub_5A874( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(uint64_t (**)(void))(v7 + 16),  *(void *)(v7 + 24),  (void *)(v7 + 32),  (void *)(v7 + 72),  v7 + 112,  *(void **)(v7 + 152));
}

uint64_t sub_64EF0()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 88));
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_64F2C(uint64_t a1)
{
  return sub_5ACF4( a1,  *(void (**)(void))(v1 + 16),  *(void *)(v1 + 24),  (void *)(v1 + 32),  *(void **)(v1 + 72),  *(void (**)(char *, uint64_t))(v1 + 80),  *(void *)(v1 + 88));
}

uint64_t sub_64F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284DC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_64FAC()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - v5;
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v7 = CATDefaultMode;
  uint64_t v8 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v9 = static MorphunProvider.shared.getter(v8);
  uint64_t v10 = static AceService.current.getter(v17);
  static FeatureFlagProvider.shared.getter(v10);
  uint64_t v11 = type metadata accessor for CatService();
  uint64_t v12 = swift_allocObject(v11, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v16);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_retain(v9);
  uint64_t v13 = sub_10FF64(v16, v7, v9, v17, (uint64_t)v4, v12);
  swift_release(v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  swift_release(v9);
  return v13;
}

uint64_t PlayMedia.ChildFlowFactory.deinit()
{
  return v0;
}

uint64_t type metadata accessor for UpdateMediaAffinity.ChildFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin19UpdateMediaAffinity16ChildFlowFactory);
}

uint64_t sub_65140(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v7 = *(void *)(v55 - 8);
  uint64_t v8 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = v21;
  v61[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v61[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v61[0] = a3;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v23 = (void *)swift_allocObject(updated, 56LL, 7LL);
  __int128 v23[2] = 0xD000000000000011LL;
  v23[3] = 0x800000000021D860LL;
  v23[5] = 0xD000000000000019LL;
  v23[6] = 0x800000000021E0C0LL;
  v23[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)v60);
  uint64_t v24 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v21, 1LL, 1LL, v24);
  unint64_t v51 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v25 = a1;
  swift_retain_n(a1, 2LL);
  uint64_t v26 = swift_retain(v23);
  uint64_t v27 = v18;
  uint64_t v50 = v18;
  uint64_t v28 = static FeatureFlagProvider.shared.getter(v26);
  uint64_t v29 = v11;
  static StringsFileResolver.shared.getter(v28);
  uint64_t v30 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v31 = swift_allocObject(v30, 168LL, 7LL);
  uint64_t v32 = v13;
  uint64_t v33 = v27;
  uint64_t v34 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v33, v12);
  uint64_t v35 = v7;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v37 = v53;
  uint64_t v38 = v29;
  uint64_t v39 = v29;
  uint64_t v40 = v55;
  v36(v53, v38, v55);
  uint64_t v41 = sub_EE3F0(v23, v25, v51, v60, v52, v16, v37, v31);
  swift_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v50, v34);
  sub_157C4((uint64_t)v61, (uint64_t)v60);
  uint64_t v58 = v34;
  uint64_t v59 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  sub_10974(&v57);
  uint64_t v42 = swift_retain(v41);
  static FeatureFlagProvider.shared.getter(v42);
  uint64_t v43 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v44 = swift_allocObject(v43, 56LL, 7LL);
  sub_FF54(&v57, v44 + 16);
  uint64_t v58 = v43;
  uint64_t v59 = &off_272868;
  swift_release(v23);
  swift_release(v41);
  swift_release(v25);
  *(void *)&__int128 v57 = v44;
  sub_6C3C(v61);
  sub_6C3C(v54);
  uint64_t v45 = v56;
  uint64_t v46 = v56 + qword_28E118;
  uint64_t v47 = type metadata accessor for ConfirmationResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  *(void *)(v45 + sub_6C3C(v0 + 16) = v41;
  sub_FF54(v60, v45 + 24);
  sub_FF54(&v57, v45 + 64);
  return v45;
}

uint64_t sub_654FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 56) = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  *(void *)(a6 + 6sub_6C3C(v0 + 4) = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)(a6 + 3sub_6C3C(v0 + 2) = a3;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  *(void *)(a6 + 96) = v12;
  *(void *)(a6 + 10sub_6C3C(v0 + 4) = &protocol witness table for FeatureFlagProvider;
  uint64_t v13 = sub_10974((void *)(a6 + 72));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v13, a4, v12);
  uint64_t v14 = type metadata accessor for StringsFileResolver(0LL);
  *(void *)(a6 + 1sub_6C3C(v0 + 44) = v14;
  *(void *)(a6 + 15sub_6C3C(v0 + 2) = &protocol witness table for StringsFileResolver;
  uint64_t v15 = sub_10974((void *)(a6 + 120));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v15, a5, v14);
  *(void *)(a6 + 11sub_6C3C(v0 + 2) = &off_26A070;
  strcpy((char *)(a6 + 160), "MediaItemType");
  *(_WORD *)(a6 + 17sub_6C3C(v0 + 4) = -4864;
  *(void *)(a6 + sub_6C3C(v0 + 16) = a1;
  *(void *)(a6 + sub_6C3C(v0 + 24) = a2;
  return a6;
}

uint64_t sub_65604(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v44 = a3;
  uint64_t v9 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = v23;
  uint64_t v54 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v55 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v53 = a2;
  uint64_t v51 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v52 = &off_272868;
  *(void *)&__int128 v50 = a4;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v25 = (void *)swift_allocObject(updated, 56LL, 7LL);
  v25[2] = 0xD000000000000011LL;
  void v25[3] = 0x800000000021D860LL;
  v25[5] = 0xD000000000000019LL;
  v25[6] = 0x800000000021E0C0LL;
  v25[4] = a1;
  sub_157C4((uint64_t)a3, (uint64_t)v49);
  uint64_t v26 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v23, 1LL, 1LL, v26);
  unint64_t v42 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v27 = a1;
  uint64_t v28 = swift_retain(a1);
  uint64_t v29 = v20;
  uint64_t v41 = v20;
  uint64_t v30 = static FeatureFlagProvider.shared.getter(v28);
  static StringsFileResolver.shared.getter(v30);
  uint64_t v31 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v32 = swift_allocObject(v31, 168LL, 7LL);
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v29, v14);
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v13, v47);
  uint64_t v38 = sub_EE3F0(v25, v27, v42, v49, v43, v18, v36, v32);
  swift_release(v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v34);
  sub_6C3C(v44);
  uint64_t v39 = v48;
  *(void *)(v48 + sub_6C3C(v0 + 16) = v38;
  sub_FF54(&v53, v39 + 24);
  sub_FF54(&v50, v39 + 64);
  return v39;
}

uint64_t sub_6590C( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v50 = a7;
  uint64_t v49 = a6;
  unint64_t v51 = a5;
  uint64_t v48 = a3;
  uint64_t v56 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v11 = *(void *)(v56 - 8);
  uint64_t v12 = __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = v18;
  uint64_t v19 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v52 = v19;
  uint64_t v21 = __chkstk_darwin(v19);
  __int128 v53 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v46 - v24;
  __chkstk_darwin(v23);
  uint64_t v54 = (char *)&v46 - v26;
  (*(void (**)(void))(v20 + 32))();
  uint64_t v65 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v66 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v64 = a4;
  uint64_t v62 = type metadata accessor for AppIntentInvoker(0LL);
  uint64_t v63 = &protocol witness table for AppIntentInvoker;
  *(void *)&__int128 v61 = v49;
  uint64_t v59 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v60 = &off_272868;
  *(void *)&__int128 v58 = v51;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v28 = (void *)swift_allocObject(updated, 56LL, 7LL);
  __int128 v28[2] = 0xD000000000000011LL;
  v28[3] = 0x800000000021D860LL;
  v28[5] = 0xD000000000000019LL;
  v28[6] = 0x800000000021E0C0LL;
  v28[4] = a1;
  *(void *)(a7 + sub_6C3C(v0 + 16) = v28;
  sub_157C4((uint64_t)a3, (uint64_t)v57);
  uint64_t v29 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v18, 1LL, 1LL, v29);
  unint64_t v51 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v30 = a1;
  swift_retain(a1);
  uint64_t v31 = swift_retain(v28);
  uint64_t v46 = v15;
  uint64_t v32 = static FeatureFlagProvider.shared.getter(v31);
  static StringsFileResolver.shared.getter(v32);
  uint64_t v33 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v34 = swift_allocObject(v33, 168LL, 7LL);
  uint64_t v35 = v11;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v37 = v55;
  uint64_t v38 = v15;
  uint64_t v39 = v56;
  v36(v55, v38, v56);
  uint64_t v40 = v53;
  uint64_t v41 = v52;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v53, v25, v52);
  uint64_t v42 = sub_EE3F0(v28, v30, v51, v57, v47, v37, v40, v34);
  swift_release(v28);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v20 + 8);
  v43(v25, v41);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v46, v39);
  sub_6C3C(v48);
  v43(v54, v41);
  uint64_t v44 = v50;
  *(void *)(v50 + 10sub_6C3C(v0 + 4) = v42;
  sub_FF54(&v64, v44 + 24);
  sub_FF54(&v58, v44 + 64);
  sub_FF54(&v61, v44 + 112);
  return v44;
}

uint64_t sub_65CDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v44 = a2;
  uint64_t v9 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = v23;
  uint64_t v54 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v55 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v53 = a3;
  uint64_t v51 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v52 = &off_272868;
  *(void *)&__int128 v50 = a4;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v25 = (void *)swift_allocObject(updated, 56LL, 7LL);
  v25[2] = 0xD000000000000011LL;
  void v25[3] = 0x800000000021D860LL;
  v25[5] = 0xD000000000000019LL;
  v25[6] = 0x800000000021E0C0LL;
  v25[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)v49);
  uint64_t v26 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v23, 1LL, 1LL, v26);
  unint64_t v42 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v27 = a1;
  uint64_t v28 = swift_retain(a1);
  uint64_t v29 = v20;
  uint64_t v41 = v20;
  uint64_t v30 = static FeatureFlagProvider.shared.getter(v28);
  static StringsFileResolver.shared.getter(v30);
  uint64_t v31 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v32 = swift_allocObject(v31, 168LL, 7LL);
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v29, v14);
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  uint64_t v37 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v13, v47);
  uint64_t v38 = sub_EE3F0(v25, v27, v42, v49, v43, v18, v36, v32);
  swift_release(v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v34);
  sub_6C3C(v44);
  uint64_t v39 = v48;
  *(void *)(v48 + sub_6C3C(v0 + 16) = v38;
  sub_FF54(&v53, v39 + 24);
  sub_FF54(&v50, v39 + 64);
  return v39;
}

uint64_t sub_65FE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v54 = a2;
  uint64_t v6 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  __int128 v58 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v11;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = v21;
  uint64_t updated = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v23 = (void *)swift_allocObject(updated, 56LL, 7LL);
  __int128 v23[2] = 0xD000000000000011LL;
  v23[3] = 0x800000000021D860LL;
  v23[5] = 0xD000000000000019LL;
  v23[6] = 0x800000000021E0C0LL;
  uint64_t v57 = a1;
  v23[4] = a1;
  sub_157C4((uint64_t)a2, (uint64_t)v59);
  uint64_t v24 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v21, 1LL, 1LL, v24);
  unint64_t v47 = sub_7F548(&_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v25 = swift_retain(v23);
  uint64_t v46 = v18;
  uint64_t v26 = static FeatureFlagProvider.shared.getter(v25);
  static StringsFileResolver.shared.getter(v26);
  uint64_t v27 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v28 = swift_allocObject(v27, 168LL, 7LL);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v48 = v16;
  uint64_t v29 = v13;
  v51(v16, v18, v13);
  uint64_t v30 = v52;
  uint64_t v31 = v53;
  __int128 v50 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v32 = v58;
  v50(v58, v10, v53);
  uint64_t v33 = sub_EE3F0(v23, v57, v47, v59, v49, v16, v32, v28);
  swift_release(v23);
  uint64_t v52 = *(void *)(v30 + 8);
  ((void (*)(char *, uint64_t))v52)(v10, v31);
  uint64_t v49 = *(char **)(v12 + 8);
  uint64_t v34 = v46;
  uint64_t v35 = v29;
  ((void (*)(char *, uint64_t))v49)(v46, v29);
  uint64_t v36 = type metadata accessor for UpdateMediaAffinityViewProvider(0LL);
  uint64_t v37 = swift_allocObject(v36, 64LL, 7LL);
  swift_retain(v33);
  sub_1B8F7C((uint64_t *)(v37 + 24));
  *(void *)(v37 + sub_6C3C(v0 + 16) = v33;
  swift_retain(v33);
  uint64_t v38 = swift_retain(v37);
  uint64_t v39 = static FeatureFlagProvider.shared.getter(v38);
  uint64_t v40 = v10;
  static StringsFileResolver.shared.getter(v39);
  uint64_t v41 = (uint64_t)v48;
  v51(v48, v34, v35);
  uint64_t v42 = (uint64_t)v58;
  v50(v58, v40, v31);
  uint64_t v43 = v55;
  uint64_t v44 = sub_654FC(v37, v33, v55, v41, v42, v56);
  swift_retain(v43);
  ((void (*)(char *, uint64_t))v52)(v40, v31);
  ((void (*)(char *, uint64_t))v49)(v34, v35);
  swift_release(v23);
  swift_release(v33);
  swift_release(v37);
  swift_release(v57);
  sub_6C3C(v54);
  return v44;
}

uint64_t sub_6638C()
{
  uint64_t v0 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v0);
  uint64_t v174 = (char *)&v165 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = (ValueMetadata *)v2;
  uint64_t v185 = (ValueMetadata *)v2;
  uint64_t v171 = v3;
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v172 = (char *)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v173 = (char *)&v165 - v7;
  uint64_t v182 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v170 = *(void *)(v182 - 8);
  uint64_t v8 = __chkstk_darwin(v182);
  uint64_t v181 = (char *)&v165 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  char v169 = (char *)&v165 - v10;
  uint64_t v11 = sub_6C5C(&qword_284ED8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v187 = v11;
  uint64_t v180 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v179 = (char *)&v165 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v165 - v15;
  uint64_t v17 = sub_1641C(0LL, (unint64_t *)&qword_284CA8, &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr);
  uint64_t v177 = sub_1641C(0LL, &qword_284EE0, &OBJC_CLASS___INUpdateMediaAffinityIntentResponse_ptr);
  RCHChildFlowProducers.init()(v17);
  uint64_t v18 = sub_64FAC();
  static AceService.current.getter(&v193);
  uint64_t v19 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v20 = static SiriKitTaskLoggingProvider.shared.getter(v19);
  uint64_t v21 = _s11descr26E191V27NeedsDisambiguationStrategyCMa(0LL);
  uint64_t v22 = swift_allocObject(v21, 176LL, 7LL);
  uint64_t v23 = sub_65FE4(v18, &v193, v20, v22);
  swift_release(v20);
  *(void *)&__int128 v193 = v23;
  uint64_t v24 = sub_10430( &qword_284EE8,  _s11descr26E191V27NeedsDisambiguationStrategyCMa,  (uint64_t)&protocol conformance descriptor for MediaItemDisambiguationStrategy<A>);
  uint64_t v25 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(&v193, v21, v24);
  uint64_t v27 = v26;
  swift_release(v23);
  RCHChildFlowProducers.needsDisambiguationFlowCompletion.setter(v25, v27, v11);
  uint64_t v28 = sub_64FAC();
  uint64_t v29 = static SiriKitTaskLoggingProvider.shared.getter(v28);
  static AceService.current.getter(&v193);
  uint64_t v197 = v4;
  uint64_t v198 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v30 = sub_10974(&v196);
  static FeatureFlagProvider.shared.getter(v30);
  uint64_t v31 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v32 = swift_allocObject(v31, 56LL, 7LL);
  sub_FF54(&v196, v32 + 16);
  uint64_t v197 = (ValueMetadata *)v31;
  uint64_t v198 = &off_272868;
  *(void *)&__int128 v196 = v32;
  uint64_t v33 = _s11descr26C169V18NeedsValueStrategyCMa();
  uint64_t v34 = swift_allocObject(v33, 104LL, 7LL);
  uint64_t v35 = sub_1094C((uint64_t)&v196, v31);
  uint64_t v36 = *(void *)(*(void *)(v31 - 8) + 64LL);
  __chkstk_darwin(v35);
  unint64_t v183 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  uint64_t v37 = (uint64_t *)((char *)&v165 - v183);
  id v184 = *(void (**)(char *))(v38 + 16);
  v184((char *)&v165 - v183);
  uint64_t v39 = *v37;
  swift_retain(v32);
  uint64_t v40 = sub_65604(v28, v29, &v193, v39, v34);
  sub_6C3C(&v196);
  swift_release(v32);
  *(void *)&__int128 v193 = v40;
  uint64_t v41 = sub_10430( &qword_284EF0,  (uint64_t (*)(uint64_t))_s11descr26C169V18NeedsValueStrategyCMa,  (uint64_t)&unk_2150FC);
  uint64_t v42 = static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)(&v193, v33, v41);
  uint64_t v44 = v43;
  swift_release(v40);
  uint64_t v45 = v187;
  RCHChildFlowProducers.needsValueFlowCompletion.setter(v42, v44, v187);
  uint64_t v46 = sub_64FAC();
  static AceService.current.getter(&v193);
  uint64_t v47 = _s11descr26E2C1V25NeedsConfirmationStrategyCMa(0LL);
  swift_allocObject(v47, 216LL, 7LL);
  uint64_t v48 = sub_C01B0(v46, &v193);
  *(void *)&__int128 v193 = v48;
  uint64_t v49 = sub_10430(&qword_284EF8, _s11descr26E2C1V25NeedsConfirmationStrategyCMa, (uint64_t)&unk_21B258);
  uint64_t v50 = static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(&v193, v47, v49);
  uint64_t v52 = v51;
  swift_release(v48);
  char v186 = v16;
  RCHChildFlowProducers.needsConfirmationFlowCompletion.setter(v50, v52, v45);
  uint64_t v53 = sub_64FAC();
  uint64_t v54 = static AceService.current.getter(&v193);
  uint64_t v55 = static SiriKitTaskLoggingProvider.shared.getter(v54);
  uint64_t v56 = _s11descr275961V21ConfirmIntentStrategyCMa(0LL);
  uint64_t v57 = swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  uint64_t v58 = sub_65140(v53, &v193, v55, v57);
  *(void *)&__int128 v193 = v58;
  uint64_t v59 = sub_10430(&qword_284F00, _s11descr275961V21ConfirmIntentStrategyCMa, (uint64_t)&unk_21B870);
  uint64_t v60 = static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)( &v193,  sub_231E4,  0LL,  v56,  v59);
  uint64_t v62 = v61;
  swift_release(v58);
  RCHChildFlowProducers.confirmIntentFlowCompletion.setter(v60, v62, v45);
  uint64_t v167 = (void (*)(char *, uint64_t))sub_64FAC();
  uint64_t v63 = v169;
  static StringsFileResolver.shared.getter(v167);
  __int128 v64 = static AceService.current.getter(&v193);
  uint64_t v178 = v19;
  uint64_t v65 = static SiriKitTaskLoggingProvider.shared.getter(v64);
  uint64_t v197 = v185;
  uint64_t v198 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v66 = sub_10974(&v196);
  static FeatureFlagProvider.shared.getter(v66);
  uint64_t v67 = swift_allocObject(v31, 56LL, 7LL);
  sub_FF54(&v196, v67 + 16);
  uint64_t v68 = type metadata accessor for AppIntentInvoker(0LL);
  swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
  uint64_t v69 = AppIntentInvoker.init()();
  uint64_t v197 = (ValueMetadata *)v31;
  uint64_t v198 = &off_272868;
  *(void *)&__int128 v196 = v67;
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  uint64_t v71 = swift_allocObject(updated, 152LL, 7LL);
  uint64_t v72 = sub_1094C((uint64_t)&v196, v31);
  uint64_t v175 = v36;
  __chkstk_darwin(v72);
  uint64_t v73 = (unint64_t *)((char *)&v165 - v183);
  uint64_t v176 = v31;
  v184((char *)&v165 - v183);
  unint64_t v74 = *v73;
  uint64_t v75 = v170;
  uint64_t v76 = (uint64_t)v181;
  uint64_t v77 = v182;
  uint64_t v168 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
  v168(v181, v63, v182);
  swift_retain(v67);
  uint64_t v78 = sub_6590C((uint64_t)v167, v76, &v193, v65, v74, v69, v71);
  uint64_t v79 = v63;
  uint64_t v167 = *(void (**)(char *, uint64_t))(v75 + 8);
  v167(v63, v77);
  sub_6C3C(&v196);
  swift_release(v67);
  *(void *)&__int128 v193 = v78;
  uint64_t v80 = sub_10430( &qword_284F08,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinity.HandleIntentStrategy);
  uint64_t v81 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(&v193, updated, v80);
  uint64_t v83 = v82;
  swift_release(v78);
  RCHChildFlowProducers.handleIntentFlowCompletion.setter(v81, v83, v187);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v84 = CATDefaultMode;
  uint64_t v85 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v86 = static MorphunProvider.shared.getter(v85);
  uint64_t v87 = static AceService.current.getter(&v196);
  uint64_t v88 = v173;
  static FeatureFlagProvider.shared.getter(v87);
  uint64_t v89 = type metadata accessor for CatService();
  uint64_t v90 = swift_allocObject(v89, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v193);
  uint64_t v91 = v171;
  uint64_t v92 = *(void (**)(char *, char *, ValueMetadata *))(v171 + 16);
  uint64_t v93 = (uint64_t)v172;
  uint64_t v94 = v185;
  v92(v172, v88, v185);
  swift_retain(v86);
  uint64_t v95 = sub_10FF64(&v193, v84, v86, &v196, v93, v90);
  swift_release(v86);
  uint64_t v171 = *(void *)(v91 + 8);
  uint64_t v96 = v94;
  ((void (*)(char *, ValueMetadata *))v171)(v88, v94);
  swift_release(v86);
  uint64_t v97 = type metadata accessor for UpdateMediaAffinityCatDialogService();
  uint64_t v98 = (void *)swift_allocObject(v97, 56LL, 7LL);
  v98[2] = 0xD000000000000011LL;
  void v98[3] = 0x800000000021D860LL;
  v98[5] = 0xD000000000000019LL;
  v98[6] = 0x800000000021E0C0LL;
  v98[4] = v95;
  uint64_t v99 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v100 = v174;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56LL))(v174, 1LL, 1LL, v99);
  unint64_t v166 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v170 = v95;
  swift_retain_n(v95, 2LL);
  uint64_t v101 = static AceService.current.getter(&v193);
  uint64_t v102 = static FeatureFlagProvider.shared.getter(v101);
  static StringsFileResolver.shared.getter(v102);
  uint64_t v103 = type metadata accessor for UpdateMediaAffinityDialogProvider(0LL);
  uint64_t v104 = swift_allocObject(v103, 168LL, 7LL);
  v92((char *)v93, v88, v94);
  uint64_t v105 = v181;
  uint64_t v106 = v182;
  v168(v181, v79, v182);
  uint64_t v107 = sub_EE3F0(v98, v95, v166, &v193, v100, v93, v105, v104);
  swift_release(v98);
  v167(v79, v106);
  ((void (*)(char *, ValueMetadata *))v171)(v88, v96);
  uint64_t v108 = type metadata accessor for UpdateMediaAffinityViewProvider(0LL);
  uint64_t v109 = swift_allocObject(v108, 64LL, 7LL);
  swift_retain_n(v107, 2LL);
  sub_1B8F7C((uint64_t *)(v109 + 24));
  *(void *)(v109 + sub_6C3C(v0 + 16) = v107;
  uint64_t v194 = &type metadata for StringsBackedAppNameResolver;
  unint64_t v110 = sub_15780();
  unint64_t v195 = v110;
  *(void *)&__int128 v193 = swift_allocObject(&unk_26C638, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v193 + 16);
  uint64_t v197 = (ValueMetadata *)type metadata accessor for DeviceProvider(0LL);
  uint64_t v198 = (_UNKNOWN **)&protocol witness table for DeviceProvider;
  sub_10974(&v196);
  static DeviceProvider.shared.getter();
  uint64_t v191 = v96;
  uint64_t v111 = v96;
  uint64_t v192 = &protocol witness table for FeatureFlagProvider;
  uint64_t v112 = sub_10974(&v190);
  static FeatureFlagProvider.shared.getter(v112);
  v189[3] = type metadata accessor for UserPreferenceProvider(0LL);
  v189[4] = &protocol witness table for UserPreferenceProvider;
  uint64_t v113 = sub_10974(v189);
  static UserPreferenceProvider.shared.getter(v113);
  v188[3] = type metadata accessor for InstalledAppProvider(0LL);
  v188[4] = &protocol witness table for InstalledAppProvider;
  uint64_t v114 = sub_10974(v188);
  static InstalledAppProvider.shared.getter(v114);
  uint64_t v115 = sub_6C5C(&qword_284F18);
  uint64_t v116 = (void *)swift_allocObject(v115, *(unsigned int *)(v115 + 48), *(unsigned __int16 *)(v115 + 52));
  uint64_t v117 = class metadata base offset for CommonAppResolver;
  uint64_t v118 = (char *)v116 + *(void *)(class metadata base offset for CommonAppResolver + *v116 + 8);
  strcpy(v118, "resolutionType");
  v118[15] = -18;
  sub_157C4((uint64_t)&v193, (uint64_t)v116 + *(void *)(v117 + *v116 + 16));
  sub_157C4((uint64_t)&v196, (uint64_t)v116 + *(void *)(class metadata base offset for CommonAppResolver + *v116 + 24));
  sub_157C4((uint64_t)&v190, (uint64_t)v116 + *(void *)(class metadata base offset for CommonAppResolver + *v116 + 32));
  sub_157C4((uint64_t)v189, (uint64_t)v116 + *(void *)(class metadata base offset for CommonAppResolver + *v116 + 40));
  uint64_t v119 = sub_157C4( (uint64_t)v188,  (uint64_t)v116 + *(void *)(class metadata base offset for CommonAppResolver + *v116 + 48));
  uint64_t v120 = InstrumentedAppResolutionService.init()(v119);
  sub_6C3C(v188);
  sub_6C3C(v189);
  sub_6C3C(&v190);
  sub_6C3C(&v196);
  sub_6C3C(&v193);
  static AceService.current.getter(&v193);
  uint64_t v197 = &type metadata for StringsBackedAppNameResolver;
  uint64_t v198 = (_UNKNOWN **)v110;
  *(void *)&__int128 v196 = swift_allocObject(&unk_26C638, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v196 + 16);
  uint64_t v191 = v96;
  uint64_t v192 = &protocol witness table for FeatureFlagProvider;
  uint64_t v121 = sub_10974(&v190);
  static FeatureFlagProvider.shared.getter(v121);
  swift_setDeallocating(v109);
  swift_release(*(void *)(v109 + 16));
  sub_6C3C((void *)(v109 + 24));
  swift_deallocClassInstance(v109, 64LL, 7LL);
  uint64_t v122 = sub_6C5C(&qword_284F20);
  uint64_t v123 = (void *)swift_allocObject(v122, 176LL, 7LL);
  v123[21] = 0LL;
  v123[2] = v120;
  v123[3] = v107;
  void v123[4] = sub_ED690;
  v123[5] = 0LL;
  sub_FF54(&v193, (uint64_t)(v123 + 6));
  sub_FF54(&v196, (uint64_t)(v123 + 11));
  sub_FF54(&v190, (uint64_t)(v123 + 16));
  *(void *)&__int128 v193 = v123;
  uint64_t v124 = sub_21318(&qword_284F28, &qword_284F20, (uint64_t)&unk_21ACA4);
  uint64_t v125 = v177;
  uint64_t v126 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(strategy:)(&v193, v122, v177, v124);
  uint64_t v128 = v127;
  swift_release(v123);
  uint64_t v129 = v187;
  uint64_t v130 = v186;
  RCHChildFlowProducers.appResolutionFlowCompletion.setter(v126, v128, v187);
  uint64_t v181 = (char *)v107;
  uint64_t v131 = swift_retain(v107);
  uint64_t v132 = sub_1B8CC8(v131);
  *(void *)&__int128 v193 = v132;
  uint64_t v133 = sub_6C5C(&qword_284F30);
  uint64_t v134 = sub_21318(&qword_284F38, &qword_284F30, (uint64_t)&unk_216828);
  uint64_t v135 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(&v193, v133, v125, v134);
  uint64_t v137 = v136;
  swift_release(v132);
  RCHChildFlowProducers.requestTCCAcceptanceFlowCompletion.setter(v135, v137, v129);
  uint64_t v138 = sub_64FAC();
  uint64_t v139 = static AceService.current.getter(&v193);
  uint64_t v140 = static SiriKitTaskLoggingProvider.shared.getter(v139);
  uint64_t v197 = v111;
  uint64_t v198 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v141 = sub_10974(&v196);
  static FeatureFlagProvider.shared.getter(v141);
  uint64_t v142 = v176;
  uint64_t v143 = swift_allocObject(v176, 56LL, 7LL);
  sub_FF54(&v196, v143 + 16);
  uint64_t v197 = (ValueMetadata *)v142;
  uint64_t v198 = &off_272868;
  *(void *)&__int128 v196 = v143;
  uint64_t v144 = type metadata accessor for UpdateMediaAffinity.UnsupportedValueStrategy();
  uint64_t v145 = swift_allocObject(v144, 104LL, 7LL);
  uint64_t v146 = sub_1094C((uint64_t)&v196, v142);
  __chkstk_darwin(v146);
  uint64_t v147 = (uint64_t *)((char *)&v165 - v183);
  v184((char *)&v165 - v183);
  uint64_t v148 = *v147;
  swift_retain(v143);
  uint64_t v149 = sub_65CDC(v138, &v193, v140, v148, v145);
  sub_6C3C(&v196);
  swift_release(v143);
  *(void *)&__int128 v193 = v149;
  uint64_t v150 = sub_10430( (unint64_t *)&qword_284F40,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinity.UnsupportedValueStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinity.UnsupportedValueStrategy);
  uint64_t v151 = static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)(&v193, v144, v150);
  uint64_t v153 = v152;
  swift_release(v149);
  RCHChildFlowProducers.unsupportedValueFlowCompletion.setter(v151, v153, v129);
  uint64_t v154 = sub_6C5C(&qword_284F48);
  uint64_t v155 = swift_allocObject(v154, 16LL, 7LL);
  *(void *)&__int128 v193 = v155;
  uint64_t v156 = sub_21318(&qword_284F50, &qword_284F48, (uint64_t)&unk_217468);
  uint64_t v157 = static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithDialogProducer<A>(strategy:)(&v193, v154, v156);
  uint64_t v159 = v158;
  swift_release(v155);
  RCHChildFlowProducers.continueInAppFlowCompletion.setter(v157, v159, v129);
  uint64_t v160 = v180;
  uint64_t v161 = v179;
  (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v179, v130, v129);
  uint64_t v162 = sub_6C5C(&qword_284F58);
  swift_allocObject(v162, *(unsigned int *)(v162 + 48), *(unsigned __int16 *)(v162 + 52));
  uint64_t v163 = RCHChildFlowFactory.init(producers:)(v161);
  swift_release(v170);
  swift_release(v181);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v130, v129);
  return v163;
}

uint64_t sub_673FC()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_67428(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_67458 + 4 * aP[a1]))( 0x747369747261LL,  0xE600000000000000LL);
}

uint64_t sub_67458()
{
  return 0x6D656D20646E6162LL;
}

uint64_t sub_67478()
{
  return 0x656D757274736E69LL;
}

uint64_t sub_67494()
{
  return 0x6F746375646E6F63LL;
}

uint64_t sub_674B0()
{
  return 0x736C61636F76LL;
}

unint64_t sub_674C0()
{
  return 0xD000000000000010LL;
}

uint64_t sub_67520()
{
  return 0x7265736F706D6F63LL;
}

uint64_t sub_67538()
{
  return 0x726574697277LL;
}

uint64_t sub_67548()
{
  return 0x6E6520646E756F73LL;
}

uint64_t sub_6756C()
{
  return 0x72656375646F7270LL;
}

uint64_t sub_67584()
{
  return 0x726567616E616DLL;
}

uint64_t sub_6759C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_67428(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_67428(v2) && v5 == v6)
  {
    char v9 = 1;
    uint64_t v8 = v5;
  }

  else
  {
    uint64_t v8 = v6;
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v8);
  return v9 & 1;
}

Swift::Int sub_67624()
{
  unsigned __int8 v1 = *v0;
  Hasher.init(_seed:)(v6, 0LL);
  uint64_t v2 = sub_67428(v1);
  uint64_t v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_67684(uint64_t a1)
{
  uint64_t v3 = sub_67428(*v1);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_676C4(uint64_t a1)
{
  unsigned __int8 v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  uint64_t v3 = sub_67428(v2);
  uint64_t v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_67720@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_67A8C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_6774C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_67428(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for MediaPlayerPersonRole(_BYTE *result, _BYTE *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediaPlayerPersonRole(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }

uint64_t storeEnumTagSinglePayload for MediaPlayerPersonRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    LODWORD(vsub_6C3C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_6C3C(v0 + 4) = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF2) {
    return ((uint64_t (*)(void))((char *)&loc_67860 + 4 * byte_215343[v4]))();
  }
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_67894 + 4 * byte_21533E[v4]))();
}

uint64_t sub_67894(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_6789C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x678A4LL);
  }
  return result;
}

uint64_t sub_678B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x678B8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 13;
  return result;
}

uint64_t sub_678BC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_678C4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_678D0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_678DC(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerPersonRole()
{
  return &type metadata for MediaPlayerPersonRole;
}

unint64_t sub_678F8()
{
  unint64_t result = qword_284F60;
  if (!qword_284F60)
  {
    unint64_t result = swift_getWitnessTable(&unk_215460, &type metadata for MediaPlayerPersonRole);
    atomic_store(result, (unint64_t *)&qword_284F60);
  }

  return result;
}

void sub_6793C(void *a1@<X8>)
{
  *a1 = &off_26A210;
}

uint64_t sub_6794C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_67AD4();
  unint64_t v5 = sub_67B18();
  unint64_t v6 = sub_67B5C();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_679B0()
{
  unint64_t result = qword_284F68;
  if (!qword_284F68)
  {
    uint64_t v1 = sub_45D50(&qword_284F70);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_284F68);
  }

  return result;
}

unint64_t sub_67A00()
{
  unint64_t result = qword_284F78;
  if (!qword_284F78)
  {
    unint64_t result = swift_getWitnessTable(&unk_215388, &type metadata for MediaPlayerPersonRole);
    atomic_store(result, (unint64_t *)&qword_284F78);
  }

  return result;
}

unint64_t sub_67A48()
{
  unint64_t result = qword_284F80;
  if (!qword_284F80)
  {
    unint64_t result = swift_getWitnessTable(&unk_2154A0, &type metadata for MediaPlayerPersonRole);
    atomic_store(result, (unint64_t *)&qword_284F80);
  }

  return result;
}

unint64_t sub_67A8C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26A0A0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xE) {
    return 14LL;
  }
  else {
    return v3;
  }
}

unint64_t sub_67AD4()
{
  unint64_t result = qword_284F88;
  if (!qword_284F88)
  {
    unint64_t result = swift_getWitnessTable(&unk_2153F0, &type metadata for MediaPlayerPersonRole);
    atomic_store(result, (unint64_t *)&qword_284F88);
  }

  return result;
}

unint64_t sub_67B18()
{
  unint64_t result = qword_284F90;
  if (!qword_284F90)
  {
    unint64_t result = swift_getWitnessTable(&unk_2153B8, &type metadata for MediaPlayerPersonRole);
    atomic_store(result, (unint64_t *)&qword_284F90);
  }

  return result;
}

unint64_t sub_67B5C()
{
  unint64_t result = qword_284F98;
  if (!qword_284F98)
  {
    unint64_t result = swift_getWitnessTable(&unk_215428, &type metadata for MediaPlayerPersonRole);
    atomic_store(result, (unint64_t *)&qword_284F98);
  }

  return result;
}

void *sub_67BA0()
{
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_destinationDeviceId
                                      + 8));
  sub_1F6CC( (uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_deviceType,  &qword_285138);
  sub_1F6CC( (uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_placeHint,  &qword_285130);
  sub_1F6CC( (uint64_t)v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_reference,  &qword_285128);
  return v0;
}

uint64_t sub_67C60()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_67C84()
{
  return type metadata accessor for FakeHomeAutomationEntityProvider(0LL);
}

uint64_t type metadata accessor for FakeHomeAutomationEntityProvider(uint64_t a1)
{
  uint64_t result = qword_284FC8;
  if (!qword_284FC8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FakeHomeAutomationEntityProvider);
  }
  return result;
}

void sub_67CC8(uint64_t a1)
{
  v10[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v10[1] = &unk_215558;
  __int128 v10[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v10[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v10[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v10[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v10[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_67DE8(319LL, &qword_284FD8, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceQuantifier);
  if (v3 <= 0x3F)
  {
    v10[7] = *(void *)(v2 - 8) + 64LL;
    v10[8] = &unk_215558;
    sub_67DE8(319LL, &qword_284FE0, (uint64_t (*)(uint64_t))&type metadata accessor for DeviceType);
    if (v5 <= 0x3F)
    {
      v10[9] = *(void *)(v4 - 8) + 64LL;
      sub_67DE8(319LL, &qword_284FE8, (uint64_t (*)(uint64_t))&type metadata accessor for PlaceHint);
      if (v7 <= 0x3F)
      {
        v10[10] = *(void *)(v6 - 8) + 64LL;
        sub_67DE8( 319LL,  (unint64_t *)&unk_284FF0,  (uint64_t (*)(uint64_t))&type metadata accessor for Reference);
        if (v9 <= 0x3F)
        {
          v10[11] = *(void *)(v8 - 8) + 64LL;
          swift_updateClassMetadata2(a1, 256LL, 12LL, v10, a1 + 80);
        }
      }
    }
  }

void sub_67DE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = a3(255LL);
    unint64_t v6 = type metadata accessor for Optional(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

uint64_t sub_67E34()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 16LL));
}

uint64_t sub_67E40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24LL);
  swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 32LL));
  return v1;
}

uint64_t sub_67E70()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 40LL));
}

uint64_t sub_67E7C()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 48LL));
}

uint64_t sub_67E88()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 56LL));
}

uint64_t sub_67E94()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 64LL));
}

uint64_t sub_67EA0()
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 72LL));
}

uint64_t sub_67EAC@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10( *v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_deviceQuantifier,  a1,  &qword_285140);
}

uint64_t sub_67EDC()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_destinationDeviceId);
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_67F18@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10( *v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_deviceType,  a1,  &qword_285138);
}

uint64_t sub_67F48@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10( *v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_placeHint,  a1,  &qword_285130);
}

uint64_t sub_67F78@<X0>(uint64_t a1@<X8>)
{
  return sub_FF10( *v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin32FakeHomeAutomationEntityProvider_reference,  a1,  &qword_285128);
}

void sub_67FA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_2845D8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = [v2 backingStore];
  uint64_t v7 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
  uint64_t v8 = swift_dynamicCastObjCClass(v15, v7);
  if (v8)
  {
    unint64_t v9 = (void *)v8;
    sub_680FC(a1, (uint64_t)v6);
    uint64_t v10 = type metadata accessor for INMediaDestination(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    Class isa = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1LL, v10) != 1)
    {
      Class isa = INMediaDestination._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
    }

    id v13 = (id)INIntentSlotValueTransformToMediaDestination(isa);

    [v9 setMediaDestination:v13];
  }

  else
  {
  }

uint64_t sub_680FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_2845D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_68144(uint64_t a1)
{
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  if (swift_dynamicCastObjCClass(v1, v3))
  {
    id v14 = [v1 backingStore];
    uint64_t v4 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
    uint64_t v5 = swift_dynamicCastObjCClass(v14, v4);
    if (v5)
    {
LABEL_12:
      uint64_t v12 = (void *)v5;
      id v13 = (id)INIntentSlotValueTransformToMediaSearch(a1);
      [v12 setMediaSearch:v13];

      return;
    }
  }

  else
  {
    uint64_t v6 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
    if (swift_dynamicCastObjCClass(v1, v6))
    {
      id v14 = [v1 backingStore];
      uint64_t v7 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
      uint64_t v5 = swift_dynamicCastObjCClass(v14, v7);
      if (v5) {
        goto LABEL_12;
      }
    }

    else
    {
      uint64_t v8 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
      if (swift_dynamicCastObjCClass(v1, v8))
      {
        id v14 = [v1 backingStore];
        uint64_t v9 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
        uint64_t v5 = swift_dynamicCastObjCClass(v14, v9);
        if (v5) {
          goto LABEL_12;
        }
      }

      else
      {
        uint64_t v10 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
        if (!swift_dynamicCastObjCClass(v1, v10)) {
          return;
        }
        id v14 = [v1 backingStore];
        uint64_t v11 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
        uint64_t v5 = swift_dynamicCastObjCClass(v14, v11);
        if (v5) {
          goto LABEL_12;
        }
      }
    }
  }
}

id sub_68344()
{
  uint64_t v1 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  id result = (id)swift_dynamicCastObjCClass(v0, v1);
  if (result) {
    return [result mediaSearch];
  }
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  id result = (id)swift_dynamicCastObjCClass(v0, v3);
  if (result) {
    return [result mediaSearch];
  }
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
  id result = (id)swift_dynamicCastObjCClass(v0, v4);
  if (result) {
    return [result mediaSearch];
  }
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
  id result = (id)swift_dynamicCastObjCClass(v0, v5);
  if (result) {
    return [result mediaSearch];
  }
  return result;
}

void sub_683D8(uint64_t a1, char a2)
{
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  if (swift_dynamicCastObjCClass(v2, v4))
  {
    id v5 = [v2 backingStore];
    uint64_t v6 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
    uint64_t v7 = swift_dynamicCastObjCClass(v5, v6);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      sub_687D0();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v10 = (id)INIntentSlotValueTransformToMediaItemValues();

      [v8 setMediaItems:v10];
      id v5 = v10;
    }

    if ((a2 & 1) == 0) {
      return;
    }
    id v40 = [v2 backingStore];
    uint64_t v11 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
    uint64_t v12 = (void *)swift_dynamicCastObjCClass(v40, v11);
    if (v12)
    {
      id v13 = [v12 privatePlayMediaIntentData];
      goto LABEL_13;
    }

    goto LABEL_25;
  }

  uint64_t v14 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  if (swift_dynamicCastObjCClass(v2, v14))
  {
    id v15 = [v2 backingStore];
    uint64_t v16 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
    uint64_t v17 = swift_dynamicCastObjCClass(v15, v16);
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      sub_687D0();
      Class v19 = Array._bridgeToObjectiveC()().super.isa;
      id v20 = (id)INIntentSlotValueTransformToMediaItemValues();

      [v18 setMediaItems:v20];
      id v15 = v20;
    }

    if ((a2 & 1) == 0) {
      return;
    }
    id v40 = [v2 backingStore];
    uint64_t v21 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
    uint64_t v22 = (void *)swift_dynamicCastObjCClass(v40, v21);
    if (!v22) {
      goto LABEL_25;
    }
    id v13 = [v22 privateAddMediaIntentData];
  }

  else
  {
    uint64_t v25 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
    if (swift_dynamicCastObjCClass(v2, v25))
    {
      id v40 = [v2 backingStore];
      uint64_t v26 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
      uint64_t v27 = swift_dynamicCastObjCClass(v40, v26);
      if (v27)
      {
        uint64_t v28 = (void *)v27;
        sub_687D0();
        Class v29 = Array._bridgeToObjectiveC()().super.isa;
        id v30 = (id)INIntentSlotValueTransformToMediaItemValues();

        [v28 setMediaItems:v30];
        uint64_t v24 = v30;
        goto LABEL_26;
      }

      goto LABEL_25;
    }

    uint64_t v31 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
    if (!swift_dynamicCastObjCClass(v2, v31)) {
      return;
    }
    id v32 = [v2 backingStore];
    uint64_t v33 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
    uint64_t v34 = swift_dynamicCastObjCClass(v32, v33);
    if (v34)
    {
      uint64_t v35 = (void *)v34;
      sub_687D0();
      Class v36 = Array._bridgeToObjectiveC()().super.isa;
      id v37 = (id)INIntentSlotValueTransformToMediaItemValues();

      [v35 setMediaItems:v37];
      id v32 = v37;
    }

    if ((a2 & 1) == 0) {
      return;
    }
    id v40 = [v2 backingStore];
    uint64_t v38 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
    uint64_t v39 = (void *)swift_dynamicCastObjCClass(v40, v38);
    if (!v39)
    {
LABEL_25:
      uint64_t v24 = v40;
      goto LABEL_26;
    }

    id v13 = [v39 privateSearchForMediaIntentData];
  }

unint64_t sub_687D0()
{
  unint64_t result = qword_289310;
  if (!qword_289310)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___INMediaItem);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_289310);
  }

  return result;
}

uint64_t type metadata accessor for SearchForMediaViewProvider(uint64_t a1)
{
  uint64_t result = qword_285170;
  if (!qword_285170) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchForMediaViewProvider);
  }
  return result;
}

uint64_t sub_68848(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 144);
}

uint64_t sub_6887C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v91 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v83 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = sub_6C5C(&qword_2848D8);
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_284630);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v85 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v92 = (uint64_t)&v82 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v82 - v10;
  uint64_t v12 = type metadata accessor for Parse(0LL);
  id v13 = *(uint64_t (***)(char *, uint64_t))(v12 - 8);
  uint64_t v95 = v12;
  uint64_t v96 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v93 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v82 - v16;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v86 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v87 = (char *)&v82 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  int v84 = (char *)&v82 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v82 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v18, (uint64_t)qword_2969C8);
  Class v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v30 = v29(v27, v28, v18);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v82 = a1;
    uint64_t v34 = v28;
    uint64_t v35 = v29;
    uint64_t v36 = v18;
    id v37 = v11;
    uint64_t v38 = v33;
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "PlayMediaNeedsValueStrategy#actionForInput...", v33, 2u);
    uint64_t v39 = v38;
    uint64_t v11 = v37;
    uint64_t v18 = v36;
    Class v29 = v35;
    uint64_t v28 = v34;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  id v40 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v41 = v40(v27, v18);
  Input.parse.getter(v41);
  uint64_t v43 = v95;
  uint64_t v42 = v96;
  int v44 = v96[11](v17, v95);
  if (v44 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    v42[12](v17, v43);
    uint64_t v45 = sub_6C5C(&qword_284618);
    swift_release(*(void *)&v17[*(int *)(v45 + 48)]);
    uint64_t v46 = type metadata accessor for NLIntent(0LL);
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8LL))(v17, v46);
  }

  else
  {
    int v48 = v44;
    int v49 = enum case for Parse.pommesResponse(_:);
    uint64_t v47 = v96[1](v17, v43);
    BOOL v50 = v48 == v49;
    uint64_t v42 = v96;
    if (!v50)
    {
      __int128 v64 = v86;
      uint64_t v65 = v29(v86, v28, v18);
      uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
      os_log_type_t v67 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v66, v67)) {
        goto LABEL_18;
      }
      uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v62 = 0;
      uint64_t v63 = "PlayMediaNeedsValueStrategy#actionForInput parse not of right type";
      goto LABEL_17;
    }
  }

  uint64_t v51 = v93;
  Input.parse.getter(v47);
  double v52 = sub_B7C84(v51, (uint64_t)&v97);
  ((void (*)(char *, uint64_t, double))v42[1])(v51, v43, v52);
  if (!v98)
  {
    sub_1F6CC((uint64_t)&v97, &qword_2848C0);
    __int128 v64 = v87;
    uint64_t v61 = v29(v87, v28, v18);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v67 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v66, v67))
    {
LABEL_18:

      uint64_t v69 = v40(v64, v18);
      return static ActionForInput.ignore()(v69);
    }

    uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v62 = 0;
    uint64_t v63 = "PlayMediaNeedsValueStrategy#actionForInput received invalid NL intent";
LABEL_17:
    _os_log_impl(&dword_0, v66, v67, v63, v62, 2u);
    swift_slowDealloc(v62, -1LL, -1LL);
    goto LABEL_18;
  }

  uint64_t v95 = v28;
  uint64_t v96 = (uint64_t (**)(char *, uint64_t))v29;
  sub_49B60(&v97, &v99);
  uint64_t v53 = v100;
  uint64_t v54 = v101;
  sub_6EA8(&v99, v100);
  dispatch thunk of ConfirmableIntent.confirmationState.getter(v53, *(void *)(v54 + 8));
  uint64_t v55 = v89;
  uint64_t v56 = v91;
  uint64_t v57 = v92;
  (*(void (**)(uint64_t, void, uint64_t))(v89 + 104))( v92,  enum case for CommonAudio.Confirmation.cancel(_:),  v91);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v57, 0LL, 1LL, v56);
  uint64_t v58 = v90;
  uint64_t v59 = v90 + *(int *)(v88 + 48);
  sub_FF10((uint64_t)v11, v90, &qword_284630);
  sub_FF10(v57, v59, &qword_284630);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v60(v58, 1LL, v56) == 1)
  {
    sub_1F6CC(v57, &qword_284630);
    sub_1F6CC((uint64_t)v11, &qword_284630);
    if (v60(v59, 1LL, v56) == 1)
    {
      sub_1F6CC(v58, &qword_284630);
LABEL_24:
      uint64_t v76 = v84;
      uint64_t v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(v84, v95, v18);
      uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
      os_log_type_t v79 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v80 = 0;
        _os_log_impl(&dword_0, v78, v79, "PlayMediaNeedsValueStrategy#actionForInput User asked to cancel", v80, 2u);
        swift_slowDealloc(v80, -1LL, -1LL);
      }

      uint64_t v81 = v40(v76, v18);
      static ActionForInput.cancel()(v81);
      return sub_6C3C(&v99);
    }

    goto LABEL_21;
  }

  uint64_t v71 = v85;
  sub_FF10(v58, v85, &qword_284630);
  if (v60(v59, 1LL, v56) == 1)
  {
    sub_1F6CC(v57, &qword_284630);
    sub_1F6CC((uint64_t)v11, &qword_284630);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v71, v56);
LABEL_21:
    uint64_t v72 = sub_1F6CC(v58, &qword_2848D8);
    goto LABEL_22;
  }

  uint64_t v73 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v83, v59, v56);
  uint64_t v74 = sub_6DF0( &qword_2848E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
  LODWORD(v9sub_6C3C(v0 + 3) = dispatch thunk of static Equatable.== infix(_:_:)(v71, v73, v56, v74);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v55 + 8);
  v75(v73, v56);
  sub_1F6CC(v92, &qword_284630);
  sub_1F6CC((uint64_t)v11, &qword_284630);
  v75((char *)v71, v56);
  uint64_t v72 = sub_1F6CC(v58, &qword_284630);
LABEL_22:
  static ActionForInput.handle()(v72);
  return sub_6C3C(&v99);
}

uint64_t sub_69088(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  int v49 = a5;
  uint64_t v51 = a2;
  uint64_t v52 = a7;
  uint64_t v48 = a6;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v46 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v53 = (uint64_t)&v42 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v19 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v11;
    uint64_t v25 = v24;
    uint64_t v55 = v24;
    uint64_t v43 = v15;
    *(_DWORD *)uint64_t v23 = 136446210;
    swift_bridgeObjectRetain(a4);
    uint64_t v54 = sub_6978(a3, a4, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease_n(a4, 3LL);
    _os_log_impl(&dword_0, v20, v21, "PlayMediaNeedsValueStrategy#makePromptForValue parameter: %{public}s", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v25;
    uint64_t v11 = v44;
    swift_slowDealloc(v26, -1LL, -1LL);
    a1 = v45;
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v14);
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  uint64_t v27 = v53;
  uint64_t v28 = v51;
  uint64_t v29 = a3;
  uint64_t v30 = v49;
  sub_17A5D8(v51, a3, a4, v49);
  uint64_t v31 = v50;
  uint64_t v45 = *(void *)(v50 + 16);
  uint64_t v32 = v27;
  uint64_t v33 = v47;
  sub_FF10(v32, v47, (uint64_t *)&unk_286C50);
  uint64_t v34 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v35 = (v34 + 80) & ~v34;
  uint64_t v36 = (void *)swift_allocObject(&unk_26C828, v35 + v11, v34 | 7);
  void v36[2] = v29;
  v36[3] = a4;
  v36[4] = v30;
  void v36[5] = v31;
  v36[6] = a1;
  v36[7] = v28;
  uint64_t v37 = a4;
  uint64_t v38 = v52;
  v36[8] = v48;
  v36[9] = v38;
  sub_45F6C(v33, (uint64_t)v36 + v35, (uint64_t *)&unk_286C50);
  swift_bridgeObjectRetain(v37);
  id v39 = v30;
  swift_retain(v31);
  swift_retain(a1);
  id v40 = v28;
  swift_retain(v38);
  sub_159E80(a1, v29, v37, v40, (uint64_t)sub_6C05C, (uint64_t)v36);
  swift_release(v36);
  return sub_1F6CC(v53, (uint64_t *)&unk_286C50);
}

uint64_t sub_69418( uint64_t (*a1)(char *, uint64_t *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(__int128 *), uint64_t a9, uint64_t a10)
{
  uint64_t v111 = a8;
  uint64_t v108 = a6;
  uint64_t v109 = a7;
  uint64_t v102 = a4;
  uint64_t v103 = a5;
  uint64_t v101 = a3;
  uint64_t v100 = a2;
  uint64_t v98 = a1;
  uint64_t v110 = a9;
  uint64_t v93 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = type metadata accessor for AceOutput(0LL);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v104 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v99 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v99);
  uint64_t v94 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v95 = (char *)&v88 - v15;
  uint64_t v16 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v16);
  uint64_t v107 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v18);
  uint64_t v106 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v20);
  uint64_t v105 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v98, (uint64_t)v32, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v33 = *v32;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))( v29,  enum case for AdditionalMetricsDescription.ModuleName.pmnvs(_:),  v26);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v22);
    swift_getErrorValue(v33, v113, v112);
    uint64_t v34 = Error.localizedDescription.getter(v112[1], v112[2]);
    uint64_t v36 = v35;
    uint64_t v104 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v29,  v25,  v100,  v101,  v34,  v35,  v102,  0LL,  1);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    uint64_t v40 = v103[6];
    uint64_t v39 = v103[7];
    uint64_t v103 = sub_6EA8(v103 + 3, v40);
    uint64_t v41 = enum case for ActivityType.failed(_:);
    uint64_t v42 = type metadata accessor for ActivityType(0LL);
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v105, v41, v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v44, 0LL, 1LL, v42);
    uint64_t v45 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v46 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v106, 1LL, 1LL, v45);
    uint64_t v47 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v48 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v107, v47, v48);
    uint64_t v51 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0LL, 1LL, v48);
    uint64_t v52 = v109;
    uint64_t v53 = INPlayMediaIntent.firstMediaItemType()(v51);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v108,  v52,  v44,  v46,  v50,  v104,  v38,  v53,  0,  v40,  v39);
    swift_bridgeObjectRelease(v38);
    sub_1F6CC(v50, &qword_2845A0);
    sub_1F6CC(v46, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v44, &qword_2845A8);
    *(void *)&__int128 v114 = v33;
    char v117 = 1;
    swift_errorRetain(v33);
    v111(&v114);
    swift_errorRelease(v33);
  }

  else
  {
    uint64_t v89 = a10;
    uint64_t v54 = *(int *)(v99 + 48);
    uint64_t v55 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v90 = *(void *)(v55 - 8);
    uint64_t v88 = v23;
    uint64_t v98 = *(uint64_t (**)(char *, uint64_t *, uint64_t))(v90 + 32);
    uint64_t v56 = v95;
    uint64_t v57 = v98(v95, v32, v55);
    uint64_t v91 = v54;
    *(void *)&v56[v54] = *(uint64_t *)((char *)v32 + v54);
    char v58 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v57);
    uint64_t v116 = 0LL;
    __int128 v114 = 0u;
    __int128 v115 = 0u;
    static AceOutputHelper.makeConfirmationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v56,  v58 & 1,  _swiftEmptyArrayStorage,  1LL,  1LL,  v89,  _swiftEmptyArrayStorage,  &v114);
    sub_1F6CC((uint64_t)&v114, &qword_2845C8);
    (*(void (**)(char *, void, uint64_t))(v27 + 104))( v29,  enum case for AdditionalMetricsDescription.ModuleName.pmnvs(_:),  v26);
    uint64_t v89 = v26;
    uint64_t v59 = v88;
    (*(void (**)(char *, void, uint64_t))(v88 + 104))( v25,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v22);
    uint64_t v60 = v92;
    uint64_t v61 = v93;
    (*(void (**)(char *, void, uint64_t))(v92 + 104))( v11,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v93);
    uint64_t v102 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v29,  v25,  v100,  v101,  v11,  v102,  0LL,  1LL);
    uint64_t v101 = v62;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v22);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v89);
    uint64_t v64 = v103[6];
    uint64_t v63 = v103[7];
    sub_6EA8(v103 + 3, v64);
    uint64_t v65 = enum case for ActivityType.resolveSlotNeedsValue(_:);
    uint64_t v66 = type metadata accessor for ActivityType(0LL);
    uint64_t v67 = *(void *)(v66 - 8);
    uint64_t v68 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 104))(v105, v65, v66);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v68, 0LL, 1LL, v66);
    uint64_t v69 = *(int *)(v99 + 48);
    uint64_t v70 = v90;
    uint64_t v71 = v94;
    uint64_t v72 = (uint64_t)v56;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v94, v56, v55);
    *(void *)&v71[v69] = *(void *)&v56[v91];
    uint64_t v73 = (uint64_t)v106;
    v98(v106, (uint64_t *)v71, v55);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v73, 0LL, 1LL, v55);
    uint64_t v74 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v75 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 104))(v107, v74, v75);
    uint64_t v78 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(v77, 0LL, 1LL, v75);
    uint64_t v79 = v109;
    uint64_t v80 = INPlayMediaIntent.firstMediaItemType()(v78);
    uint64_t v87 = v63;
    uint64_t v81 = v101;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v108,  v79,  v68,  v73,  v77,  v102,  v101,  v80,  0,  v64,  v87);
    swift_bridgeObjectRelease(v81);
    sub_1F6CC(v77, &qword_2845A0);
    sub_1F6CC(v73, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v68, &qword_2845A8);
    uint64_t v82 = v97;
    *((void *)&v115 + 1) = v97;
    uint64_t v116 = &protocol witness table for AceOutput;
    uint64_t v83 = sub_10974(&v114);
    uint64_t v84 = v96;
    uint64_t v85 = v104;
    (*(void (**)(void *, char *, uint64_t))(v96 + 16))(v83, v104, v82);
    char v117 = 0;
    v111(&v114);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v82);
    sub_1F6CC(v72, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v114, (uint64_t *)&unk_286C60);
}

uint64_t _s18NeedsValueStrategyCMa_0()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin9PlayMedia18NeedsValueStrategy);
}

uint64_t sub_69D20@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return sub_6887C(a1, a2);
}

void sub_69D34( uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
}

uint64_t sub_69D50(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return sub_69088(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_69D70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa_0();
  return NeedsValueFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_69DF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa_0();
  return NeedsValueFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_69E70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = _s18NeedsValueStrategyCMa_0();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_69EE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa_0();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_69F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + sub_6C3C(v0 + 16) = v14;
  uint64_t v15 = _s18NeedsValueStrategyCMa_0();
  *uint64_t v14 = v7;
  v14[1] = sub_11C64;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_69FFC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v8 + sub_6C3C(v0 + 16) = v16;
  uint64_t v17 = _s18NeedsValueStrategyCMa_0();
  *uint64_t v16 = v8;
  v16[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v17, a8);
}

uint64_t sub_6A0A8(uint64_t a1, uint64_t a2)
{
  return sub_6DF0(&qword_285310, a2, (uint64_t (*)(uint64_t))_s18NeedsValueStrategyCMa_0, (uint64_t)&unk_215664);
}

void sub_6A0D4(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v261 = a6;
  id v258 = a5;
  uint64_t v265 = a4;
  uint64_t v260 = a2;
  uint64_t v262 = a1;
  uint64_t v257 = sub_6C5C(&qword_285318);
  __chkstk_darwin(v257);
  os_log_t v259 = (uint64_t *)((char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v266 = (void *)type metadata accessor for Parse(0LL);
  uint64_t v268 = (void (**)(void **, void *))*(v266 - 1);
  uint64_t v11 = __chkstk_darwin(v266);
  uint64_t v252 = (char *)&v243 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v255 = (char *)&v243 - v14;
  __chkstk_darwin(v13);
  uint64_t v267 = (void **)((char *)&v243 - v15);
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v246 = (char *)&v243 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v243 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v243 = (char *)&v243 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v251 = (char *)&v243 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v243 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v245 = (char *)&v243 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v244 = (char *)&v243 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  unint64_t v248 = (char *)&v243 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v243 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  unint64_t v247 = (char *)&v243 - v40;
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v243 - v41;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  unint64_t v250 = v29;
  uint64_t v254 = v22;
  uint64_t v43 = sub_6960(v16, (uint64_t)qword_2969C8);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v263 = v43;
  unint64_t v264 = v44;
  ((void (*)(char *))v44)(v42);
  uint64_t v45 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.default.getter();
  BOOL v48 = os_log_type_enabled(v46, v47);
  id v269 = a3;
  id v256 = v10;
  if (v48)
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v276 = v50;
    uint64_t v249 = v16;
    *(_DWORD *)uint64_t v49 = 136446210;
    swift_bridgeObjectRetain(v269);
    *(void *)&__int128 v273 = sub_6978(v260, (unint64_t)v269, (uint64_t *)&v276);
    uint64_t v51 = v249;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, (char *)&v273 + 8);
    swift_bridgeObjectRelease_n(v269, 3LL);
    _os_log_impl(&dword_0, v46, v47, "PlayMediaNeedsValueStrategy#parseResponseValue parameter: %{public}s", v49, 0xCu);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);

    uint64_t v52 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v53 = v51;
    v52(v42, v51);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v53 = v16;
    v52(v42, v16);
  }

  id v54 = [v262 copy];
  _bridgeAnyObjectToAny(_:)(&v276, v54);
  swift_unknownObjectRelease(v54);
  uint64_t v253 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v55 = swift_dynamicCast(&v279, &v276, (char *)&type metadata for Any + 8, v253, 6LL);
  uint64_t v57 = (char *)v267;
  uint64_t v56 = v268;
  if ((v55 & 1) == 0) {
    id v279 = 0LL;
  }
  Input.parse.getter(v55);
  char v58 = v56[11];
  uint64_t v59 = v266;
  uint64_t v60 = ((uint64_t (*)(char *, void *))v58)(v57, v266);
  int v61 = enum case for Parse.NLv3IntentPlusServerConversion(_:);
  if ((_DWORD)v60 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    int v92 = enum case for Parse.pommesResponse(_:);
    if ((_DWORD)v60 == enum case for Parse.pommesResponse(_:))
    {
      uint64_t v93 = v267;
      uint64_t v94 = v268;
      v268[12](v267, v59);
      uint64_t v95 = *v93;
      uint64_t v96 = sub_10470();
      uint64_t v77 = v53;
      if (!v96)
      {
        uint64_t v160 = v245;
        uint64_t v161 = v264(v245, v263, v53);
        uint64_t v162 = (os_log_s *)Logger.logObject.getter(v161);
        os_log_type_t v163 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v162, v163))
        {
          uint64_t v164 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v164 = 0;
          _os_log_impl( &dword_0,  v162,  v163,  "PlayMediaNeedsValueStrategy#parseResponseValue pommesResponse contains no AudioExperience",  v164,  2u);
          swift_slowDealloc(v164, -1LL, -1LL);
        }

        v52(v160, v53);
        uint64_t v165 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v166 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v167 = swift_allocError(v165, v166, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v165 - 8) + 104LL))( v168,  enum case for PlaybackCode.ceGE69(_:),  v165);
        char v169 = v259;
        uint64_t *v259 = v167;
        swift_storeEnumTagMultiPayload(v169, v257, 1LL);
        v258(v169);

        goto LABEL_79;
      }

      uint64_t v97 = (char *)v96;
      id v256 = v38;
      uint64_t v98 = v255;
      Input.parse.getter(v96);
      double v99 = sub_B7C84(v98, (uint64_t)&v273);
      ((void (*)(char *, void *, double))v94[1])(v98, v59, v99);
      if (!*((void *)&v274 + 1))
      {
        sub_1F6CC((uint64_t)&v273, &qword_2848C0);
        uint64_t v170 = v244;
        uint64_t v171 = v264(v244, v263, v53);
        uint64_t v172 = (os_log_s *)Logger.logObject.getter(v171);
        os_log_type_t v173 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v172, v173))
        {
          uint64_t v174 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v174 = 0;
          _os_log_impl( &dword_0,  v172,  v173,  "PlayMediaNeedsValueStrategy#parseResponseValue received invalid NL intent",  v174,  2u);
          swift_slowDealloc(v174, -1LL, -1LL);
        }

        v52(v170, v53);
        uint64_t v175 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v176 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v177 = swift_allocError(v175, v176, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v175 - 8) + 104LL))( v178,  enum case for PlaybackCode.ceGE70(_:),  v175);
        char v169 = v259;
        uint64_t *v259 = v177;
        swift_storeEnumTagMultiPayload(v169, v257, 1LL);
        v258(v169);

        goto LABEL_79;
      }

      uint64_t v268 = (void (**)(void **, void *))v52;
      sub_49B60(&v273, &v276);
      uint64_t v100 = v277;
      uint64_t v101 = v278;
      uint64_t v102 = sub_6EA8(&v276, (uint64_t)v277);
      *((void *)&v274 + 1) = v100;
      os_log_t v275 = v101;
      uint64_t v103 = sub_10974(&v273);
      uint64_t v267 = (void **)v97;
      uint64_t v104 = (uint64_t)v103;
      (*(void (**)(void *, void *, void *))(*(v100 - 1) + 16LL))(v103, v102, v100);
      id v105 = sub_142D4C(v104, 0LL, 0LL, v100, v101);
      sub_6C3C(&v273);
      type metadata accessor for AudioPluginProcessor(0LL);
      uint64_t v106 = AudioPluginProcessor.__allocating_init()();
      uint64_t v266 = v95;
      uint64_t v107 = dispatch thunk of PommesResponse.clientResults.getter();
      uint64_t v108 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v267, v107);
      swift_release(v106);
      swift_bridgeObjectRelease(v107);
      id v109 = sub_1672C(v267);
      uint64_t v110 = (uint64_t)v256;
      v264(v256, v263, v53);
      id v111 = v109;
      uint64_t v112 = (os_log_s *)Logger.logObject.getter(v111);
      os_log_type_t v113 = static os_log_type_t.debug.getter();
      BOOL v114 = os_log_type_enabled(v112, v113);
      uint64_t v249 = v77;
      uint64_t v265 = v108;
      if (v114)
      {
        __int128 v115 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v116 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)__int128 v115 = 138412290;
        *(void *)&__int128 v273 = v111;
        id v117 = v111;
        uint64_t v77 = v249;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, (char *)&v273 + 8);
        *uint64_t v116 = v111;

        _os_log_impl( &dword_0,  v112,  v113,  "PlayMediaNeedsValueStrategy#parseResponseValue Updating privatePlayMediaIntentData with: %@",  v115,  0xCu);
        uint64_t v118 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v116, 1LL, v118);
        uint64_t v110 = (uint64_t)v256;
        swift_slowDealloc(v116, -1LL, -1LL);
        swift_slowDealloc(v115, -1LL, -1LL);
      }

      else
      {

        uint64_t v112 = (os_log_s *)v111;
      }

      uint64_t v76 = (void (*)(uint64_t, uint64_t))v268;

      v76(v110, v77);
      if (v279)
      {
        id v179 = v279;
        id v180 = [v179 backingStore];
        uint64_t v181 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        uint64_t v182 = swift_dynamicCastObjCClass(v180, v181);
        if (v182)
        {
          unint64_t v183 = (void *)v182;
          id v184 = (id)INIntentSlotValueTransformToPrivatePlayMediaIntentData(v111);
          [v183 setPrivatePlayMediaIntentData:v184];

          id v179 = v180;
          id v180 = v184;
        }
      }

      v264(v248, v263, v77);
      id v185 = v105;
      char v186 = (os_log_s *)Logger.logObject.getter(v185);
      os_log_type_t v187 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v186, v187))
      {
        char v188 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        os_log_t v189 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)char v188 = 138412290;
        *(void *)&__int128 v273 = v185;
        id v190 = v185;
        uint64_t v77 = v249;
        uint64_t v76 = (void (*)(uint64_t, uint64_t))v268;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, (char *)&v273 + 8);
        *os_log_t v189 = v185;

        _os_log_impl( &dword_0,  v186,  v187,  "PlayMediaNeedsValueStrategy#parseResponseValue Updating media search with: %@",  v188,  0xCu);
        uint64_t v191 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v189, 1LL, v191);
        swift_slowDealloc(v189, -1LL, -1LL);
        swift_slowDealloc(v188, -1LL, -1LL);
      }

      else
      {

        char v186 = (os_log_s *)v185;
      }

      id v75 = v269;

      v76((uint64_t)v248, v77);
      id v192 = v279;
      if (!v279)
      {

        swift_release(v265);
        goto LABEL_75;
      }

      uint64_t v193 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      if (swift_dynamicCastObjCClass(v192, v193))
      {
        uint64_t v194 = v77;
        id v195 = v185;
        id v196 = v192;
        id v197 = [v196 backingStore];
        uint64_t v198 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        uint64_t v199 = swift_dynamicCastObjCClass(v197, v198);
        if (v199) {
          goto LABEL_70;
        }
      }

      else
      {
        uint64_t v200 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
        if (swift_dynamicCastObjCClass(v192, v200))
        {
          uint64_t v194 = v77;
          id v195 = v185;
          id v196 = v192;
          id v197 = [v196 backingStore];
          uint64_t v201 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
          uint64_t v199 = swift_dynamicCastObjCClass(v197, v201);
          if (v199) {
            goto LABEL_70;
          }
        }

        else
        {
          uint64_t v204 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
          if (swift_dynamicCastObjCClass(v192, v204))
          {
            uint64_t v194 = v77;
            id v195 = v185;
            id v196 = v192;
            id v197 = [v196 backingStore];
            uint64_t v205 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
            uint64_t v199 = swift_dynamicCastObjCClass(v197, v205);
            if (v199)
            {
LABEL_70:
              uint64_t v206 = (void *)v199;
              id v207 = (id)INIntentSlotValueTransformToMediaSearch(v195);
              [v206 setMediaSearch:v207];
LABEL_71:

              swift_release(v265);
              uint64_t v77 = v194;
LABEL_74:
              id v75 = v269;
LABEL_75:
              sub_6C3C(&v276);
              id v78 = v279;
              if (v279)
              {
LABEL_11:
                if (v260 == 0xD000000000000012LL && v75 == (id)0x800000000021CD90LL
                  || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x800000000021CD90LL) & 1) != 0)
                {
                  id v79 = [v78 playbackRepeatMode];
                  type metadata accessor for INPlaybackRepeatMode(0LL);
                }

                else
                {
                  if ((v260 != 0xD000000000000015LL || v75 != (id)0x800000000021CDC0LL)
                    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015LL, 0x800000000021CDC0LL) & 1) == 0)
                  {
                    if (v260 == 0x6675685379616C70LL && v75 == (id)0xEC00000064656C66LL
                      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6675685379616C70LL, 0xEC00000064656C66LL) & 1) != 0)
                    {
                      id v202 = v78;
                      char v203 = INPlayMediaIntent.playShuffled.getter();
                    }

                    else
                    {
                      if ((v260 != 0x6C50656D75736572LL || v75 != (id)0xEE006B6361627961LL)
                        && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C50656D75736572LL, 0xEE006B6361627961LL) & 1) == 0)
                      {
                        if (v260 == 0x657449616964656DLL && v75 == (id)0xEA0000000000736DLL
                          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
                        {
                          id v225 = [v78 mediaItems];
                          if (v225)
                          {
                            uint64_t v226 = v225;
                            uint64_t v227 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
                            uint64_t v228 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v226, v227);

                            *((void *)&v274 + 1) = sub_6C5C(&qword_2848D0);
                            *(void *)&__int128 v273 = v228;
                          }

                          else
                          {
                            __int128 v273 = 0u;
                            __int128 v274 = 0u;
                          }
                        }

                        else
                        {
                          if ((v260 != 0x6B63616279616C70LL || v75 != (id)0xED00006465657053LL)
                            && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6B63616279616C70LL, 0xED00006465657053LL) & 1) == 0)
                          {
                            uint64_t v232 = v77;
                            uint64_t v233 = v243;
                            v264(v243, v263, v77);
                            swift_bridgeObjectRetain_n(v75, 2LL);
                            id v269 = v78;
                            uint64_t v234 = (os_log_s *)Logger.logObject.getter(v269);
                            os_log_type_t v235 = static os_log_type_t.error.getter();
                            if (os_log_type_enabled(v234, v235))
                            {
                              uint64_t v236 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                              uint64_t v237 = swift_slowAlloc(32LL, -1LL);
                              *(void *)&__int128 v273 = v237;
                              *(_DWORD *)uint64_t v236 = 136315138;
                              swift_bridgeObjectRetain(v75);
                              uint64_t v270 = sub_6978(v260, (unint64_t)v75, (uint64_t *)&v273);
                              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v270, v271);
                              swift_bridgeObjectRelease_n(v75, 3LL);
                              _os_log_impl( &dword_0,  v234,  v235,  "PlayMediaNeedsValueStrategy#parseResponseValue Unexpected parameter:%s",  v236,  0xCu);
                              swift_arrayDestroy(v237, 1LL, (char *)&type metadata for Any + 8);
                              swift_slowDealloc(v237, -1LL, -1LL);
                              swift_slowDealloc(v236, -1LL, -1LL);
                            }

                            else
                            {

                              swift_bridgeObjectRelease_n(v75, 2LL);
                            }

                            v76((uint64_t)v233, v232);
                            uint64_t v238 = type metadata accessor for PlaybackCode(0LL);
                            uint64_t v239 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
                            uint64_t v240 = swift_allocError(v238, v239, 0LL, 0LL);
                            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v238 - 8) + 104LL))( v241,  enum case for PlaybackCode.ceGE73(_:),  v238);
                            uint64_t v242 = v259;
                            uint64_t *v259 = v240;
                            swift_storeEnumTagMultiPayload(v242, v257, 1LL);
                            v258(v242);

                            uint64_t v145 = &qword_285318;
                            uint64_t v144 = v242;
                            goto LABEL_80;
                          }

                          id v229 = v78;
                          uint64_t v230 = INPlayMediaIntent.playbackSpeed.getter();
                          if ((v231 & 1) != 0)
                          {
                            uint64_t v230 = 0LL;
                            *((void *)&v273 + 1) = 0LL;
                            __int128 v274 = 0uLL;
                          }

                          else
                          {
                            *((void *)&v274 + 1) = &type metadata for Double;
                          }

                          *(void *)&__int128 v273 = v230;
                        }

                        sub_45F6C((uint64_t)&v273, (uint64_t)&v276, &qword_284028);
                        goto LABEL_16;
                      }

                      id v218 = v78;
                      char v203 = INPlayMediaIntent.resumePlayback.getter();
                    }

                    *((void *)&v274 + 1) = &type metadata for Bool;
                    LOBYTE(v27sub_6C3C(v0 + 3) = v203 & 1;
                    sub_45F6C((uint64_t)&v273, (uint64_t)&v276, &qword_284028);
LABEL_16:
                    sub_189A6C(v262);
                    uint64_t v81 = v254;
                    v264(v254, v263, v77);
                    uint64_t v82 = sub_FF10((uint64_t)&v276, (uint64_t)&v273, &qword_284028);
                    uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
                    os_log_type_t v84 = static os_log_type_t.default.getter();
                    if (os_log_type_enabled(v83, v84))
                    {
                      id v269 = v78;
                      uint64_t v85 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                      uint64_t v86 = swift_slowAlloc(32LL, -1LL);
                      uint64_t v272 = v86;
                      uint64_t v268 = (void (**)(void **, void *))v76;
                      *(_DWORD *)uint64_t v85 = 136446210;
                      sub_FF10((uint64_t)&v273, (uint64_t)&v270, &qword_284028);
                      uint64_t v87 = sub_6C5C(&qword_284028);
                      uint64_t v88 = String.init<A>(describing:)(&v270, v87);
                      unint64_t v90 = v89;
                      uint64_t v270 = sub_6978(v88, v89, &v272);
                      uint64_t v91 = v257;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v270, v271);
                      swift_bridgeObjectRelease(v90);
                      sub_1F6CC((uint64_t)&v273, &qword_284028);
                      _os_log_impl( &dword_0,  v83,  v84,  "PlayMediaNeedsValueStrategy#parseResponseValue returning with: %{public}s",  v85,  0xCu);
                      swift_arrayDestroy(v86, 1LL, (char *)&type metadata for Any + 8);
                      id v78 = v269;
                      swift_slowDealloc(v86, -1LL, -1LL);
                      swift_slowDealloc(v85, -1LL, -1LL);

                      ((void (*)(char *, uint64_t))v268)(v81, v77);
                    }

                    else
                    {
                      sub_1F6CC((uint64_t)&v273, &qword_284028);

                      v76((uint64_t)v81, v77);
                      uint64_t v91 = v257;
                    }

                    uint64_t v140 = v253;
                    sub_FF10((uint64_t)&v276, (uint64_t)&v273, &qword_284028);
                    id v141 = v78;
                    uint64_t v142 = (uint64_t)v259;
                    IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v273, v141, v140);
                    uint64_t v143 = sub_6C5C(&qword_285328);
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56LL))( v142,  0LL,  1LL,  v143);
                    swift_storeEnumTagMultiPayload(v142, v91, 0LL);
                    v258((uint64_t *)v142);

                    sub_1F6CC(v142, &qword_285318);
                    uint64_t v144 = (uint64_t *)&v276;
                    uint64_t v145 = &qword_284028;
                    goto LABEL_80;
                  }

                  id v79 = [v78 playbackQueueLocation];
                  type metadata accessor for INPlaybackQueueLocation(0LL);
                }

                uint64_t v277 = (void *)v80;
                *(void *)&__int128 v276 = v79;
                goto LABEL_16;
              }

              goto LABEL_76;
            }
          }

          else
          {
            uint64_t v219 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
            uint64_t v220 = swift_dynamicCastObjCClass(v192, v219);
            id v195 = v185;
            id v221 = v192;
            if (!v220) {
              goto LABEL_73;
            }
            id v196 = v221;
            uint64_t v194 = v77;
            id v197 = [v221 backingStore];
            uint64_t v222 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
            uint64_t v223 = swift_dynamicCastObjCClass(v197, v222);
            if (v223)
            {
              uint64_t v224 = (void *)v223;
              id v207 = (id)INIntentSlotValueTransformToMediaSearch(v195);
              [v224 setMediaSearch:v207];
              goto LABEL_71;
            }
          }
        }
      }

      id v195 = v111;
      id v111 = v197;
      uint64_t v77 = v194;
LABEL_73:
      uint64_t v208 = v265;

      swift_release(v208);
      goto LABEL_74;
    }

    uint64_t v119 = v252;
    Input.parse.getter(v60);
    uint64_t v120 = v266;
    int v121 = ((uint64_t (*)(char *, void *))v58)(v119, v266);
    uint64_t v122 = v53;
    if (v121 == v61)
    {
      v268[12]((void **)v119, v120);
      uint64_t v123 = sub_6C5C(&qword_284618);
      swift_release(*(void *)&v119[*(int *)(v123 + 48)]);
      uint64_t v124 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v124 - 8) + 8LL))(v119, v124);
      uint64_t v125 = (char *)v267;
      uint64_t v126 = v251;
      uint64_t v127 = v250;
    }

    else
    {
      int v146 = v121;
      v268[1]((void **)v119, v120);
      uint64_t v125 = (char *)v267;
      uint64_t v126 = v251;
      uint64_t v127 = v250;
      if (v146 != v92)
      {
LABEL_34:
        uint64_t v151 = v264(v126, v263, v122);
        uint64_t v152 = (os_log_s *)Logger.logObject.getter(v151);
        os_log_type_t v153 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v152, v153))
        {
          uint64_t v154 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v154 = 0;
          _os_log_impl( &dword_0,  v152,  v153,  "PlayMediaNeedsValueStrategy#parseResponseValue intent not of right type",  v154,  2u);
          swift_slowDealloc(v154, -1LL, -1LL);
        }

        v52(v126, v122);
        type metadata accessor for ErrorFilingProvider(0LL);
        static ErrorFilingProvider.generateABCSnapshot(errorToReport:errorDomain:errorType:)( 0xD000000000000044LL,  0x800000000021E250LL,  0xD000000000000016LL,  0x800000000021E2A0LL,  0xD000000000000011LL,  0x800000000021E2C0LL);
        uint64_t v155 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v156 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v157 = swift_allocError(v155, v156, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v155 - 8) + 104LL))( v158,  enum case for PlaybackCode.ceGE71(_:),  v155);
        uint64_t v159 = (uint64_t)v259;
        uint64_t *v259 = v157;
        swift_storeEnumTagMultiPayload(v159, v257, 1LL);
        v258((uint64_t *)v159);
        sub_1F6CC(v159, &qword_285318);
        v268[1]((void **)v125, v266);
        goto LABEL_81;
      }
    }

    uint64_t v147 = v264(v127, v263, v122);
    uint64_t v148 = (os_log_s *)Logger.logObject.getter(v147);
    os_log_type_t v149 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v148, v149))
    {
      uint64_t v150 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v150 = 0;
      _os_log_impl( &dword_0,  v148,  v149,  "PlayMediaNeedsValueStrategy#parseResponseValue and PlayMediaNeedsValueStrategy#actionForInput parse handling nee d to be the same!",  v150,  2u);
      swift_slowDealloc(v150, -1LL, -1LL);
    }

    v52(v127, v122);
    goto LABEL_34;
  }

  uint64_t v62 = (void (*)(uint64_t, uint64_t))v52;
  v56[12]((void **)v57, v59);
  uint64_t v63 = sub_6C5C(&qword_284618);
  uint64_t v64 = *(void *)&v57[*(int *)(v63 + 48)];
  uint64_t v65 = v255;
  Input.parse.getter(v63);
  uint64_t v66 = (uint64_t)v256;
  uint64_t v67 = sub_206FC0(v65, (uint64_t)v256);
  uint64_t v68 = (void *)Parse.ServerConversion.siriKitIntent.getter(v67);
  uint64_t v69 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v70 = swift_dynamicCastObjCClass(v68, v69);
  uint64_t v71 = v57;
  if (v70)
  {
    uint64_t v72 = (void *)v70;
    sub_1F6CC(v66, &qword_284CA0);
    swift_release(v64);
    id v73 = v279;
    id v279 = v72;

    uint64_t v74 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v74 - 8) + 8LL))(v57, v74);
    id v75 = v269;
    uint64_t v76 = v62;
    uint64_t v77 = v53;
    id v78 = v279;
    if (v279) {
      goto LABEL_11;
    }
LABEL_76:
    uint64_t v209 = v246;
    uint64_t v210 = v264(v246, v263, v77);
    char v211 = (os_log_s *)Logger.logObject.getter(v210);
    os_log_type_t v212 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v211, v212))
    {
      char v213 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v213 = 0;
      _os_log_impl(&dword_0, v211, v212, "PlayMediaNeedsValueStrategy#parseResponseValue updatedIntent nil", v213, 2u);
      swift_slowDealloc(v213, -1LL, -1LL);
    }

    v76((uint64_t)v209, v77);
    uint64_t v214 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v215 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v216 = swift_allocError(v214, v215, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v214 - 8) + 104LL))( v217,  enum case for PlaybackCode.ceGE72(_:),  v214);
    char v169 = v259;
    uint64_t *v259 = v216;
    swift_storeEnumTagMultiPayload(v169, v257, 1LL);
    v258(v169);
LABEL_79:
    uint64_t v145 = &qword_285318;
    uint64_t v144 = v169;
LABEL_80:
    sub_1F6CC((uint64_t)v144, v145);
    goto LABEL_81;
  }

  uint64_t v128 = v247;
  uint64_t v129 = v264(v247, v263, v53);
  uint64_t v130 = (os_log_s *)Logger.logObject.getter(v129);
  os_log_type_t v131 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v132 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v132 = 0;
    _os_log_impl( &dword_0,  v130,  v131,  "PlayMediaNeedsValueStrategy#parseResponseValue Ignorning non-server-conversion parse",  v132,  2u);
    uint64_t v133 = v132;
    uint64_t v71 = (char *)v267;
    swift_slowDealloc(v133, -1LL, -1LL);
  }

  v62((uint64_t)v128, v53);
  uint64_t v134 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v135 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v136 = swift_allocError(v134, v135, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v134 - 8) + 104LL))( v137,  enum case for PlaybackCode.ceGE68(_:),  v134);
  uint64_t v138 = (uint64_t)v259;
  uint64_t *v259 = v136;
  swift_storeEnumTagMultiPayload(v138, v257, 1LL);
  v258((uint64_t *)v138);
  swift_release(v64);
  sub_1F6CC(v138, &qword_285318);
  sub_1F6CC((uint64_t)v256, &qword_284CA0);
  uint64_t v139 = type metadata accessor for NLIntent(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v139 - 8) + 8LL))(v71, v139);
LABEL_81:
}

uint64_t sub_6BF94()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 80) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 72));
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_6C05C(uint64_t (*a1)(char *, uint64_t *, uint64_t))
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  return sub_69418( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void (**)(__int128 *))(v1 + 64),  *(void *)(v1 + 72),  v1 + ((v3 + 80) & ~v3));
}

uint64_t PlayMedia.UnsupportedValueStrategy.makeUnsupportedValueOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_70CB4(a1, a2, a3, a4, a6, a7, a8);
}

uint64_t sub_6C0CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v101 = a4;
  uint64_t v117 = a3;
  uint64_t v109 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v115 = *(void *)(v5 - 8);
  uint64_t v116 = v5;
  __chkstk_darwin(v5);
  BOOL v114 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v112 = *(void *)(v7 - 8);
  uint64_t v113 = v7;
  __chkstk_darwin(v7);
  id v111 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v118 = (char *)type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v100 = *((void *)v118 - 1);
  __chkstk_darwin(v118);
  uint64_t v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for CoreAnalyticsResponses.FabricatedPlayCodes(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_285470);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v110 = (uint64_t)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v108 = (uint64_t)&v100 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v107 = (char *)&v100 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v104 = (char *)&v100 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v103 = (uint64_t)&v100 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v100 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v100 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v100 - v36;
  uint64_t v105 = v39;
  uint64_t v106 = v38;
  uint64_t v102 = v40;
  if (a1)
  {
    dispatch thunk of AppSelectionContext.report.getter(v35);
  }

  else
  {
    uint64_t v41 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v37, 1LL, 1LL, v41);
  }

  uint64_t v42 = (*(uint64_t (**)(char *, void, uint64_t))(v12 + 104))( v14,  enum case for CoreAnalyticsResponses.FabricatedPlayCodes.mediaItemsUnsupportedResponse(_:),  v11);
  uint64_t v43 = CoreAnalyticsResponses.FabricatedPlayCodes.rawValue.getter(v42);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v44 = sub_6C5C(&qword_285478);
  uint64_t inited = swift_initStackObject(v44, &v122);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_215760;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6449707061LL;
  *(void *)(inited + 40) = 0xE500000000000000LL;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = String._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 1701080931LL;
  *(void *)(inited + 6sub_6C3C(v0 + 4) = 0xE400000000000000LL;
  uint64_t v109 = v43;
  *(NSNumber *)(inited + 7sub_6C3C(v0 + 2) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0x70616C45656D6974LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xEB00000000646573LL;
  sub_FF10((uint64_t)v37, (uint64_t)v34, &qword_285470);
  uint64_t v46 = type metadata accessor for AppSelectionReport(0LL);
  uint64_t v47 = *(void *)(v46 - 8);
  BOOL v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(v34, 1LL, v46);
  uint64_t v117 = v47;
  if (v49 == 1)
  {
    sub_1F6CC((uint64_t)v34, &qword_285470);
  }

  else
  {
    AppSelectionReport.timeElapsed.getter();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v46);
  }

  v50.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  *(NSNumber *)(inited + 96) = v50;
  *(void *)(inited + 10sub_6C3C(v0 + 4) = 0x65636E6174736E69LL;
  *(void *)(inited + 11sub_6C3C(v0 + 2) = 0xE800000000000000LL;
  uint64_t v51 = static FeatureFlagProvider.shared.getter(v50.super.super.isa);
  FeatureFlagProvider.appSelectionUsageCounter.getter(v51);
  (*(void (**)(char *, char *))(v100 + 8))(v10, v118);
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x756F43736D657469LL;
  *(void *)(inited + 136) = 0xEA0000000000746ELL;
  id v52 = [v101 mediaItems];
  uint64_t v53 = v102;
  uint64_t v118 = v37;
  if (v52)
  {
    uint64_t v54 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v54);

    if ((unint64_t)v55 >> 62)
    {
      if (v55 < 0) {
        uint64_t v99 = v55;
      }
      else {
        uint64_t v99 = v55 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v55);
      _CocoaArrayWrapper.endIndex.getter(v99);
      swift_bridgeObjectRelease(v55);
    }

    uint64_t v56 = (uint64_t)v31;
    swift_bridgeObjectRelease(v55);
  }

  else
  {
    uint64_t v56 = (uint64_t)v31;
  }

  v57.super.super.Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  *(NSNumber *)(inited + 1sub_6C3C(v0 + 44) = v57;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = 0x7265666E49707061LL;
  *(void *)(inited + 160) = 0xEB00000000646572LL;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = [objc_allocWithZone(NSNumber) initWithBool:INPlayMediaIntent.appInferred.getter(v57.super.super.isa) & 1];
  *(void *)(inited + 176) = 0x706D657474417361LL;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0xEB00000000646574LL;
  uint64_t v58 = (uint64_t)v118;
  *(void *)(inited + 19sub_6C3C(v0 + 2) = objc_msgSend( objc_allocWithZone(NSNumber),  "initWithBool:",  v48(v118, 1, v46) != 1);
  *(void *)(inited + 200) = 0x646573557361LL;
  *(void *)(inited + 20sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  sub_FF10(v58, v56, &qword_285470);
  uint64_t v59 = v48((char *)v56, 1LL, v46);
  if ((_DWORD)v59 == 1)
  {
    sub_1F6CC(v56, &qword_285470);
    char v60 = 0;
  }

  else
  {
    char v60 = AppSelectionReport.appSelectionUsed.getter(v59);
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v56, v46);
  }

  *(void *)(inited + 2sub_6C3C(v0 + 16) = [objc_allocWithZone(NSNumber) initWithBool:v60 & 1];
  strcpy((char *)(inited + 224), "asExperimentId");
  *(_BYTE *)(inited + 2sub_6C3C(v0 + 39) = -18;
  uint64_t v61 = (uint64_t)v118;
  sub_FF10((uint64_t)v118, v53, &qword_285470);
  if (v48((char *)v53, 1LL, v46) == 1)
  {
    sub_1F6CC(v53, &qword_285470);
    unint64_t v62 = 0xE000000000000000LL;
    uint64_t v63 = v117;
  }

  else
  {
    AppSelectionReport.experimentId.getter();
    unint64_t v62 = v64;
    uint64_t v63 = v117;
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v53, v46);
  }

  NSString v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v62);
  *(void *)(inited + 240) = v65;
  strcpy((char *)(inited + 248), "asTreatmentId");
  *(_WORD *)(inited + 26sub_6C3C(v0 + 2) = -4864;
  uint64_t v66 = v103;
  sub_FF10(v61, v103, &qword_285470);
  if (v48((char *)v66, 1LL, v46) == 1)
  {
    sub_1F6CC(v66, &qword_285470);
    unint64_t v67 = 0xE000000000000000LL;
  }

  else
  {
    AppSelectionReport.treatmentId.getter();
    unint64_t v67 = v68;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v66, v46);
  }

  uint64_t v69 = (uint64_t)v104;
  NSString v70 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v67);
  *(void *)(inited + 26sub_6C3C(v0 + 4) = v70;
  *(void *)(inited + 27sub_6C3C(v0 + 2) = 0x756F6C6C6F527361LL;
  *(void *)(inited + 280) = 0xEB00000000644974LL;
  sub_FF10(v61, v69, &qword_285470);
  if (v48((char *)v69, 1LL, v46) == 1)
  {
    sub_1F6CC(v69, &qword_285470);
    unint64_t v71 = 0xE000000000000000LL;
  }

  else
  {
    AppSelectionReport.rolloutId.getter();
    unint64_t v71 = v72;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v69, v46);
  }

  NSString v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v71);
  *(void *)(inited + 28sub_6C3C(v0 + 8) = v73;
  *(void *)(inited + 296) = 0x6469666E6F437361LL;
  *(void *)(inited + 30sub_6C3C(v0 + 4) = 0xEF73624165636E65LL;
  uint64_t v74 = v105;
  sub_FF10(v61, v105, &qword_285470);
  if (v48((char *)v74, 1LL, v46) == 1)
  {
    sub_1F6CC(v74, &qword_285470);
  }

  else
  {
    AppSelectionReport.confidenceAbs.getter();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v74, v46);
  }

  uint64_t v75 = v106;
  *(NSNumber *)(inited + 31sub_6C3C(v0 + 2) = Double._bridgeToObjectiveC()();
  *(void *)(inited + 320) = 0xD000000000000010LL;
  *(void *)(inited + 32sub_6C3C(v0 + 8) = 0x800000000021E380LL;
  sub_FF10(v61, v75, &qword_285470);
  if (v48((char *)v75, 1LL, v46) == 1)
  {
    sub_1F6CC(v75, &qword_285470);
  }

  else
  {
    AppSelectionReport.confidenceOddsRatio.getter();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v75, v46);
  }

  uint64_t v76 = (uint64_t)v107;
  *(NSNumber *)(inited + 336) = Double._bridgeToObjectiveC()();
  *(void *)(inited + 3sub_6C3C(v0 + 44) = 0x64497070417361LL;
  *(void *)(inited + 35sub_6C3C(v0 + 2) = 0xE700000000000000LL;
  sub_FF10(v61, v76, &qword_285470);
  if (v48((char *)v76, 1LL, v46) == 1)
  {
    sub_1F6CC(v76, &qword_285470);
    unint64_t v77 = 0xE000000000000000LL;
  }

  else
  {
    AppSelectionReport.bundleIdentifier.getter();
    unint64_t v77 = v78;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v76, v46);
  }

  NSString v79 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v77);
  *(void *)(inited + 360) = v79;
  *(void *)(inited + 36sub_6C3C(v0 + 8) = 0x7265735577656ELL;
  *(void *)(inited + 376) = 0xE700000000000000LL;
  uint64_t v80 = v108;
  sub_FF10(v61, v108, &qword_285470);
  if (v48((char *)v80, 1LL, v46) == 1)
  {
    sub_1F6CC(v80, &qword_285470);
    char v81 = 0;
  }

  else
  {
    char v81 = AppSelectionReport.newUser.getter();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v80, v46);
  }

  *(void *)(inited + 38sub_6C3C(v0 + 4) = [objc_allocWithZone(NSNumber) initWithBool:v81 & 1];
  strcpy((char *)(inited + 392), "successCount");
  *(_BYTE *)(inited + 40sub_6C3C(v0 + 5) = 0;
  *(_WORD *)(inited + 406) = -5120;
  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  *(NSNumber *)(inited + 40sub_6C3C(v0 + 8) = NSNumber.init(integerLiteral:)(0LL);
  *(void *)(inited + 4sub_6C3C(v0 + 16) = 0xD000000000000010LL;
  *(void *)(inited + 4sub_6C3C(v0 + 24) = 0x800000000021E3A0LL;
  Swift::Int v82 = v48((char *)v61, 1LL, v46) != 1;
  *(NSNumber *)(inited + 43sub_6C3C(v0 + 2) = NSNumber.init(integerLiteral:)(v82);
  *(void *)(inited + 440) = 0x6F43646573557361LL;
  *(void *)(inited + 44sub_6C3C(v0 + 8) = 0xEB00000000746E75LL;
  uint64_t v83 = v110;
  sub_FF10(v61, v110, &qword_285470);
  uint64_t v84 = v48((char *)v83, 1LL, v46);
  if ((_DWORD)v84 == 1)
  {
    sub_1F6CC(v83, &qword_285470);
LABEL_39:
    Swift::Int v86 = 0LL;
    goto LABEL_40;
  }

  char v85 = AppSelectionReport.appSelectionUsed.getter(v84);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v83, v46);
  if ((v85 & 1) == 0) {
    goto LABEL_39;
  }
  Swift::Int v86 = 1LL;
LABEL_40:
  *(NSNumber *)(inited + 456) = NSNumber.init(integerLiteral:)(v86);
  strcpy((char *)(inited + 464), "responseCode");
  *(_BYTE *)(inited + 47sub_6C3C(v0 + 7) = 0;
  *(_WORD *)(inited + 47sub_6C3C(v0 + 8) = -5120;
  v120[0] = v109;
  dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  uint64_t v88 = v87;
  NSString v89 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v88);
  *(void *)(inited + 480) = v89;
  unint64_t v90 = sub_75420(inited);
  uint64_t v91 = (void *)static DispatchQueues.analytics.getter(v90);
  uint64_t v92 = swift_allocObject(&unk_26C990, 24LL, 7LL);
  *(void *)(v92 + sub_6C3C(v0 + 16) = v90;
  v120[4] = sub_7154C;
  uint64_t v121 = v92;
  v120[0] = _NSConcreteStackBlock;
  v120[1] = 1107296256LL;
  uint64_t v120[2] = sub_6E7C;
  v120[3] = &unk_26C9A8;
  uint64_t v93 = _Block_copy(v120);
  uint64_t v94 = v111;
  static DispatchQoS.unspecified.getter(v93);
  uint64_t v119 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v95 = sub_6C5C(&qword_285480);
  sub_21358();
  uint64_t v96 = v114;
  uint64_t v97 = v116;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v119, v95);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v94, v96, v93);
  _Block_release(v93);

  (*(void (**)(char *, uint64_t))(v115 + 8))(v96, v97);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v94, v113);
  sub_1F6CC(v61, &qword_285470);
  return swift_release(v121);
}

void sub_6CE58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = v3;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    aBlock[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    v22[1] = v11 + 4;
    uint64_t v13 = sub_1641C(0LL, &qword_285488, &OBJC_CLASS___NSObject_ptr);
    uint64_t v14 = swift_bridgeObjectRetain(a1);
    uint64_t v15 = Dictionary.description.getter(v14, &type metadata for String, v13, &protocol witness table for String);
    unint64_t v17 = v16;
    swift_bridgeObjectRelease(a1);
    uint64_t v24 = sub_6978(v15, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, aBlock);
    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease(v17);
    _os_log_impl( &dword_0,  v8,  v9,  "UnsupportedValueStrategy#logCoreAnalytics recording result analytics data due to unsupported result: %s",  v11,  0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  }

  else
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

  NSString v18 = String._bridgeToObjectiveC()();
  uint64_t v19 = swift_allocObject(&unk_26C9E0, 24LL, 7LL);
  *(void *)(v19 + sub_6C3C(v0 + 16) = a1;
  aBlock[4] = (uint64_t)CommonFlowStrategy.makeParameterMetadata(intent:);
  uint64_t v26 = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_2DABC;
  aBlock[3] = (uint64_t)&unk_26C9F8;
  uint64_t v20 = _Block_copy(aBlock);
  uint64_t v21 = v26;
  swift_bridgeObjectRetain(a1);
  swift_release(v21);
  AnalyticsSendEventLazy(v18, v20);
  _Block_release(v20);
}

uint64_t sub_6D150(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a5;
  uint64_t v38 = a4;
  uint64_t v42 = a3;
  uint64_t v39 = type metadata accessor for Logger(0LL);
  uint64_t v41 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v11 = (void (*)(char *, uint64_t, id))((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v18);
  uint64_t v20 = (id *)((char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v20, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    v43[0] = *v20;
    uint64_t v21 = v43[0];
    char v44 = 1;
    swift_errorRetain(v43[0]);
    a2(v43);
    swift_errorRelease(v21);
    return sub_1F6CC((uint64_t)v43, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v37 = v12;
    uint64_t v23 = *(int *)(v12 + 48);
    uint64_t v24 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v36 = *(void *)(v24 - 8);
    (*(void (**)(char *, void *, uint64_t))(v36 + 32))(v17, v20, v24);
    uint64_t v25 = *(void **)((char *)v20 + v23);
    *(void *)&v17[v23] = v25;
    id v35 = v25;
    sub_93088(v38, (uint64_t)v11);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v26 = v39;
    uint64_t v27 = sub_6960(v39, (uint64_t)qword_2969C8);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v8, v27, v26);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl( &dword_0,  v29,  v30,  "UnsupportedValueStrategy#makeUnsupportedValueOutput successfully created dialog / punchout for unsafeSelfHarm",  v31,  2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v26);
    uint64_t v32 = v36;
    uint64_t v33 = *(int *)(v37 + 48);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v17, v24);
    uint64_t v34 = v35;
    *(void *)&v15[v33] = v35;
    sub_71554((uint64_t)v15, v34, v11, (void (*)(void))a2, v42);

    sub_1F6CC((uint64_t)v11, (uint64_t *)&unk_286C50);
    sub_1F6CC((uint64_t)v17, &qword_289340);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v15, v24);
  }

uint64_t sub_6D4A8( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, void (*a8)(void *), uint64_t a9, char *a10)
{
  uint64_t v127 = a6;
  uint64_t v128 = a8;
  uint64_t v124 = a7;
  uint64_t v130 = a5;
  uint64_t v119 = a4;
  uint64_t v118 = a3;
  uint64_t v117 = a2;
  uint64_t v116 = a1;
  uint64_t v129 = a9;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v10);
  uint64_t v126 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v121 = *(v12 - 1);
  uint64_t v122 = v12;
  __chkstk_darwin(v12);
  uint64_t v120 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = sub_6C5C(&qword_289340);
  uint64_t v111 = *(void *)(v108 - 8);
  uint64_t v14 = __chkstk_darwin(v108);
  BOOL v114 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v125 = (uint64_t)&v108 - v17;
  uint64_t v112 = v18;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v108 - v19;
  uint64_t v21 = sub_6C5C(&qword_2845A0);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v123 = (uint64_t)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v113 = (char *)&v108 - v24;
  uint64_t v25 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v25);
  uint64_t v110 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v108 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t *)((char *)&v108 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v116, (uint64_t)v39, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v39, v37) == 1)
  {
    uint64_t v40 = *v39;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))( v36,  enum case for AdditionalMetricsDescription.ModuleName.pmuvs(_:),  v33);
    (*(void (**)(char *, void, uint64_t))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v29);
    swift_getErrorValue(v40, v134, v133);
    uint64_t v41 = Error.localizedDescription.getter(v133[1], v133[2]);
    uint64_t v43 = v42;
    uint64_t v126 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v36,  v32,  v117,  v118,  v41,  v42,  v119,  0LL,  1);
    uint64_t v45 = v44;
    swift_bridgeObjectRelease(v43);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    uint64_t v46 = v130[18];
    uint64_t v125 = v130[19];
    uint64_t v130 = sub_6EA8(v130 + 15, v46);
    uint64_t v47 = enum case for ActivityType.failed(_:);
    uint64_t v48 = type metadata accessor for ActivityType(0LL);
    uint64_t v49 = *(void *)(v48 - 8);
    NSNumber v50 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v109, v47, v48);
    uint64_t v51 = (uint64_t)v50;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v50, 0LL, 1LL, v48);
    uint64_t v52 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v53 = (uint64_t)v110;
    (*(void (**)(void))(*(void *)(v52 - 8) + 56LL))();
    uint64_t v54 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v55 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v56 = *(void *)(v55 - 8);
    NSNumber v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104);
    uint64_t v58 = v123;
    v57(v123, v54, v55);
    uint64_t v59 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);
    v59(v58, 0LL, 1LL, v55);
    char v60 = v124;
    if (INPlayMediaIntent.hasAMPError()())
    {
      uint64_t v61 = (uint64_t)v113;
      v57((uint64_t)v113, enum case for SiriKitReliabilityCodes.ampServerError(_:), v55);
      v59(v61, 0LL, 1LL, v55);
      uint64_t v62 = v123;
    }

    else
    {
      uint64_t v105 = v123;
      uint64_t v61 = (uint64_t)v113;
      sub_FF10(v123, (uint64_t)v113, &qword_2845A0);
      uint64_t v62 = v105;
    }

    uint64_t v106 = sub_1F6CC(v62, &qword_2845A0);
    uint64_t v107 = INPlayMediaIntent.firstMediaItemType()(v106);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v127,  v60,  v51,  v53,  v61,  v126,  v45,  v107,  0,  v46,  v125);
    swift_bridgeObjectRelease(v45);
    sub_1F6CC(v61, &qword_2845A0);
    sub_1F6CC(v53, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v51, &qword_2845A8);
    v131[0] = v40;
    char v132 = 1;
    swift_errorRetain(v40);
    v128(v131);
    swift_errorRelease(v40);
    return sub_1F6CC((uint64_t)v131, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v63 = v118;
    unint64_t v64 = v130;
    uint64_t v65 = v108;
    uint64_t v66 = *(int *)(v108 + 48);
    uint64_t v67 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v116 = *(void *)(v67 - 8);
    unint64_t v68 = *(void (**)(char *, uint64_t *))(v116 + 32);
    uint64_t v123 = v67;
    v68(v20, v39);
    uint64_t v69 = *(void **)((char *)v39 + v66);
    *(void *)&v20[v66] = v69;
    uint64_t v70 = qword_283888;
    uint64_t v113 = v69;
    if (v70 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v115 = v20;
    uint64_t v110 = a10;
    unint64_t v71 = v122;
    uint64_t v72 = sub_6960((uint64_t)v122, (uint64_t)qword_2969C8);
    uint64_t v73 = (*(uint64_t (**)(char *, uint64_t, void *))(v121 + 16))(v120, v72, v71);
    uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v75 = static os_log_type_t.default.getter();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v77 = v117;
    if (v76)
    {
      unint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v78 = 0;
      _os_log_impl( &dword_0,  v74,  v75,  "UnsupportedValueStrategy#makeUnsupportedValueOutput successfully created dialog / punchout for GDPR",  v78,  2u);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    (*(void (**)(char *, void *))(v121 + 8))(v120, v122);
    uint64_t v122 = sub_6EA8(v64 + 20, v64[23]);
    uint64_t v79 = *(int *)(v65 + 48);
    uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v116 + 16);
    uint64_t v81 = v65;
    uint64_t v82 = v125;
    uint64_t v83 = (uint64_t)v115;
    uint64_t v84 = v123;
    v80(v125, v115, v123);
    id v85 = v113;
    *(void *)(v82 + v7sub_6C3C(v0 + 9) = v113;
    uint64_t v86 = type metadata accessor for NLContextUpdate(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56LL))(v126, 1LL, 1LL, v86);
    uint64_t v87 = *(int *)(v81 + 48);
    uint64_t v88 = (uint64_t)v114;
    v80((uint64_t)v114, (char *)v83, v84);
    *(void *)(v88 + v8sub_6C3C(v0 + 7) = v85;
    uint64_t v89 = *(unsigned __int8 *)(v111 + 80);
    uint64_t v90 = (v89 + 80) & ~v89;
    unint64_t v91 = (v112 + v90 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v92 = (void *)swift_allocObject(&unk_26CA58, v91 + 8, v89 | 7);
    v92[2] = v77;
    v92[3] = v63;
    uint64_t v93 = v119;
    v92[4] = v119;
    uint64_t v92[5] = v64;
    uint64_t v94 = v63;
    uint64_t v96 = v127;
    uint64_t v95 = (void (*)(void))v128;
    uint64_t v97 = v124;
    v92[6] = v127;
    v92[7] = v97;
    uint64_t v98 = v129;
    v92[8] = v95;
    v92[9] = v98;
    sub_712A0(v88, (uint64_t)v92 + v90);
    *(void *)((char *)v92 + v91) = v110;
    id v99 = v85;
    swift_bridgeObjectRetain(v94);
    id v100 = v93;
    swift_retain(v130);
    swift_retain(v96);
    id v101 = v97;
    swift_retain(v98);
    uint64_t v102 = v125;
    uint64_t v103 = v126;
    sub_177784(v125, v99, v126, (void (*)(uint64_t *))sub_72330, (uint64_t)v92);

    swift_release(v92);
    sub_1F6CC(v103, (uint64_t *)&unk_286C50);
    sub_1F6CC((uint64_t)v115, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v102, v123);
  }

uint64_t sub_6DDB0( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10)
{
  uint64_t v137 = a8;
  uint64_t v134 = a7;
  uint64_t v135 = a6;
  uint64_t v130 = a4;
  uint64_t v129 = a3;
  uint64_t v128 = a2;
  uint64_t v136 = a9;
  uint64_t v133 = sub_6C5C(&qword_289340);
  uint64_t v12 = __chkstk_darwin(v133);
  uint64_t v127 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v124 = (char *)&v119 - v14;
  uint64_t v121 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v120 = *(v121 - 1);
  __chkstk_darwin(v121);
  uint64_t v119 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2845A0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v132 = (uint64_t)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v126 = (uint64_t)&v119 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v123 = (char *)&v119 - v22;
  __chkstk_darwin(v21);
  uint64_t v125 = (char *)&v119 - v23;
  uint64_t v24 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v122 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v119 - v27;
  uint64_t v29 = sub_6C5C(&qword_2845A8);
  uint64_t v30 = __chkstk_darwin(v29);
  os_log_type_t v131 = (char *)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v119 - v32;
  uint64_t v34 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v119 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v119 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)&v142, (uint64_t *)&unk_286C60);
  if (v143 == 1)
  {
    uint64_t v42 = v142;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))( v41,  enum case for AdditionalMetricsDescription.ModuleName.pmuvs(_:),  v38);
    (*(void (**)(char *, void, uint64_t))(v35 + 104))( v37,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v34);
    uint64_t v133 = v42;
    swift_getErrorValue(v42, v141, v140);
    uint64_t v43 = Error.localizedDescription.getter(v140[1], v140[2]);
    uint64_t v45 = v44;
    os_log_type_t v131 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v41,  v37,  v128,  v129,  v43,  v44,  v130,  0LL,  1);
    uint64_t v132 = v46;
    swift_bridgeObjectRelease(v45);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
    uint64_t v47 = a5[18];
    uint64_t v48 = a5[19];
    uint64_t v130 = sub_6EA8(a5 + 15, v47);
    uint64_t v49 = enum case for ActivityType.failed(_:);
    uint64_t v50 = type metadata accessor for ActivityType(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 104))(v33, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v33, 0LL, 1LL, v50);
    uint64_t v52 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v53 = v28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v28, 1LL, 1LL, v52);
    uint64_t v54 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v55 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v56 = *(void *)(v55 - 8);
    NSNumber v57 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 104);
    uint64_t v58 = (uint64_t)v123;
    v57(v123, v54, v55);
    uint64_t v59 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);
    v59(v58, 0LL, 1LL, v55);
    uint64_t v60 = v134;
    if (INPlayMediaIntent.hasAMPError()())
    {
      uint64_t v61 = (uint64_t)v125;
      v57(v125, enum case for SiriKitReliabilityCodes.ampServerError(_:), v55);
      v59(v61, 0LL, 1LL, v55);
    }

    else
    {
      uint64_t v61 = (uint64_t)v125;
      sub_FF10(v58, (uint64_t)v125, &qword_2845A0);
    }

    uint64_t v92 = sub_1F6CC(v58, &qword_2845A0);
    uint64_t v93 = INPlayMediaIntent.firstMediaItemType()(v92);
    uint64_t v117 = v47;
    uint64_t v94 = (uint64_t)v53;
    uint64_t v95 = v53;
    uint64_t v96 = v132;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v135,  v60,  v33,  v95,  v61,  v131,  v132,  v93,  0,  v117,  v48);
    swift_bridgeObjectRelease(v96);
    sub_1F6CC(v61, &qword_2845A0);
    sub_1F6CC(v94, (uint64_t *)&unk_286BD0);
    sub_1F6CC((uint64_t)v33, &qword_2845A8);
    uint64_t v97 = v133;
    v138[0] = v133;
    char v139 = 1;
    swift_errorRetain(v133);
    v137(v138);
    swift_errorRelease(v97);
    return sub_1F6CC((uint64_t)v138, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v125 = (char *)a10;
    sub_FF54(&v142, (uint64_t)v138);
    uint64_t v63 = a5[28];
    uint64_t v62 = a5[29];
    sub_6EA8(a5 + 25, v63);
    swift_retain(a5);
    dispatch thunk of OutputPublisher.publish(output:_:)(v138, sub_723A8, a5, v63, v62);
    swift_release(a5);
    (*(void (**)(char *, void, uint64_t))(v39 + 104))( v41,  enum case for AdditionalMetricsDescription.ModuleName.pmuvs(_:),  v38);
    (*(void (**)(char *, void, uint64_t))(v35 + 104))( v37,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v34);
    uint64_t v64 = v120;
    uint64_t v65 = v119;
    uint64_t v66 = v121;
    (*(void (**)(char *, void, void *))(v120 + 104))( v119,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v121);
    uint64_t v128 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v41,  v37,  v128,  v129,  v65,  v130,  0LL,  1LL);
    uint64_t v129 = v67;
    (*(void (**)(char *, void *))(v64 + 8))(v65, v66);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
    unint64_t v68 = a5 + 15;
    uint64_t v130 = a5;
    uint64_t v69 = a5[18];
    uint64_t v120 = a5[19];
    uint64_t v70 = v69;
    uint64_t v121 = sub_6EA8(v68, v69);
    uint64_t v71 = enum case for ActivityType.termConditionCheck(_:);
    uint64_t v72 = type metadata accessor for ActivityType(0LL);
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 104))(v131, v71, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v74, 0LL, 1LL, v72);
    uint64_t v75 = *(int *)(v133 + 48);
    uint64_t v76 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v77 = *(void *)(v76 - 8);
    unint64_t v78 = v124;
    uint64_t v79 = (uint64_t)v125;
    uint64_t v123 = *(char **)(v77 + 16);
    ((void (*)(char *, char *, uint64_t))v123)(v124, v125, v76);
    *(void *)&v78[v75] = *(void *)(v79 + v75);
    uint64_t v80 = v122;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v122, v78, v76);
    uint64_t v81 = (uint64_t)v80;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v80, 0LL, 1LL, v76);
    uint64_t v82 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v83 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    id v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 104);
    uint64_t v86 = v132;
    v85(v132, v82, v83);
    uint64_t v87 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56);
    v87(v86, 0LL, 1LL, v83);
    uint64_t v88 = v134;
    if (INPlayMediaIntent.hasAMPError()())
    {
      uint64_t v89 = v126;
      v85(v126, enum case for SiriKitReliabilityCodes.ampServerError(_:), v83);
      uint64_t v90 = v89;
      v87(v89, 0LL, 1LL, v83);
      uint64_t v91 = v132;
    }

    else
    {
      uint64_t v99 = v132;
      uint64_t v90 = v126;
      sub_FF10(v132, v126, &qword_2845A0);
      uint64_t v91 = v99;
    }

    uint64_t v100 = sub_1F6CC(v91, &qword_2845A0);
    uint64_t v101 = INPlayMediaIntent.firstMediaItemType()(v100);
    uint64_t v118 = v70;
    uint64_t v102 = (uint64_t)v131;
    uint64_t v103 = v81;
    uint64_t v104 = v81;
    uint64_t v105 = v129;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v135,  v88,  v131,  v104,  v90,  v128,  v129,  v101,  0,  v118,  v120);
    swift_bridgeObjectRelease(v105);
    sub_1F6CC(v90, &qword_2845A0);
    sub_1F6CC(v103, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v102, &qword_2845A8);
    uint64_t v106 = sub_6EA8(v130 + 20, v130[23]);
    uint64_t v107 = *(int *)(v133 + 48);
    uint64_t v108 = v127;
    uint64_t v109 = (uint64_t)v125;
    ((void (*)(char *, char *, uint64_t))v123)(v127, v125, v76);
    uint64_t v110 = *(void **)(v109 + v75);
    *(void *)&v108[v107] = v110;
    id v111 = [v110 catId];
    uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
    uint64_t v114 = v113;

    uint64_t v115 = (void *)*v106;
    uint64_t v116 = v136;
    swift_retain(v136);
    sub_178E6C(v112, v114, v115, v137, v116);
    swift_bridgeObjectRelease(v114);
    swift_release(v116);
    sub_6C3C(v138);
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v108, v76);
  }

uint64_t sub_6E81C(char a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v10 = 67109120;
    int v13 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    _os_log_impl( &dword_0,  v8,  v9,  "UnsupportedValueStrategy#makeUnsupportedValueOutput result of call to requestCapabilities %{BOOL}d",  v10,  8u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_6E984( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v169 = a8;
  uint64_t v167 = a7;
  char v186 = a5;
  uint64_t v187 = a6;
  uint64_t v193 = a4;
  id v190 = a2;
  uint64_t v191 = a3;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v10);
  uint64_t v174 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v166 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (char *)&v160 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v189 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v189);
  uint64_t v15 = (char *)&v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  id v184 = (char *)&v160 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  id v185 = (char *)&v160 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v168 = (char *)&v160 - v21;
  __chkstk_darwin(v20);
  id v192 = (char *)&v160 - v22;
  uint64_t v23 = sub_6C5C(&qword_2845A0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v170 = (char *)&v160 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v171 = (uint64_t)&v160 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v172 = (char *)&v160 - v29;
  __chkstk_darwin(v28);
  os_log_type_t v173 = (char *)&v160 - v30;
  uint64_t v31 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v176 = (char *)&v160 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  unint64_t v183 = (uint64_t *)((char *)&v160 - v34);
  uint64_t v35 = sub_6C5C(&qword_2845A8);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v175 = (char *)&v160 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v36);
  uint64_t v182 = (char *)&v160 - v38;
  uint64_t v181 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v179 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v178 = (char *)&v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v180 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  char v188 = *(void **)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v177 = (char *)&v160 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v41);
  uint64_t v43 = (uint64_t *)((char *)&v160 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v44 = type metadata accessor for Logger(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v160 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v160 - v49;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v51 = sub_6960(v44, (uint64_t)qword_2969C8);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  uint64_t v162 = v51;
  os_log_type_t v163 = v52;
  uint64_t v53 = ((uint64_t (*)(char *))v52)(v50);
  uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v161 = v41;
    NSNumber v57 = v48;
    uint64_t v58 = v44;
    uint64_t v59 = a1;
    uint64_t v60 = v15;
    uint64_t v61 = v56;
    *(_WORD *)uint64_t v56 = 0;
    _os_log_impl(&dword_0, v54, v55, "UnsupportedValueStrategy#makeUnsupportedValueOutput...", v56, 2u);
    uint64_t v62 = v61;
    uint64_t v15 = v60;
    a1 = v59;
    uint64_t v44 = v58;
    uint64_t v48 = v57;
    uint64_t v41 = v161;
    swift_slowDealloc(v62, -1LL, -1LL);
  }

  uint64_t v63 = *(void (**)(char *, uint64_t))(v45 + 8);
  v63(v50, v44);
  sub_FF10(a1, (uint64_t)v43, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v43, v41) == 1)
  {
    uint64_t v64 = *v43;
    v163(v48, v162, v44);
    swift_errorRetain(v64);
    uint64_t v65 = swift_errorRetain(v64);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v67 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v66, v67))
    {
      id v192 = v48;
      unint64_t v68 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      uint64_t v194 = v64;
      uint64_t v195 = v69;
      *(_DWORD *)unint64_t v68 = 136446210;
      uint64_t v189 = (uint64_t)(v68 + 4);
      swift_errorRetain(v64);
      uint64_t v70 = sub_6C5C(&qword_284010);
      uint64_t v71 = String.init<A>(describing:)(&v194, v70);
      unint64_t v73 = v72;
      uint64_t v194 = sub_6978(v71, v72, &v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, &v195);
      swift_bridgeObjectRelease(v73);
      swift_errorRelease(v64);
      swift_errorRelease(v64);
      _os_log_impl( &dword_0,  v66,  v67,  "UnsupportedValueStrategy#makeUnsupportedValueOutput makeUnsupportedDialog failed with error: %{public}s",  v68,  0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v68, -1LL, -1LL);

      uint64_t v74 = (uint64_t)v192;
    }

    else
    {
      swift_errorRelease(v64);
      swift_errorRelease(v64);

      uint64_t v74 = (uint64_t)v48;
    }

    v63((char *)v74, v44);
    uint64_t v109 = v188;
    uint64_t v110 = v177;
    uint64_t v111 = v180;
    ((void (*)(char *, void, uint64_t))v188[13])( v177,  enum case for AdditionalMetricsDescription.ModuleName.pmuvs(_:),  v180);
    uint64_t v112 = v179;
    uint64_t v113 = v178;
    uint64_t v114 = v181;
    (*(void (**)(char *, void, uint64_t))(v179 + 104))( v178,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v181);
    swift_getErrorValue(v64, v198, v197);
    uint64_t v115 = Error.localizedDescription.getter(v197[1], v197[2]);
    uint64_t v117 = v116;
    id v192 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v110,  v113,  v115,  v116,  0LL,  1LL);
    uint64_t v119 = v118;
    swift_bridgeObjectRelease(v117);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
    ((void (*)(char *, uint64_t))v109[1])(v110, v111);
    uint64_t v120 = v190[18];
    uint64_t v121 = v190[19];
    sub_6EA8(v190 + 15, v120);
    uint64_t v122 = enum case for ActivityType.failed(_:);
    uint64_t v123 = type metadata accessor for ActivityType(0LL);
    uint64_t v124 = *(void *)(v123 - 8);
    uint64_t v125 = v182;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 104))(v182, v122, v123);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v125, 0LL, 1LL, v123);
    uint64_t v126 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56LL))(v183, 1LL, 1LL, v126);
    uint64_t v127 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v128 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v129 = *(void *)(v128 - 8);
    uint64_t v130 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 104);
    uint64_t v131 = (uint64_t)v172;
    v130(v172, v127, v128);
    uint64_t v132 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56);
    v132(v131, 0LL, 1LL, v128);
    if (INPlayMediaIntent.hasAMPError()())
    {
      uint64_t v133 = (uint64_t)v173;
      v130(v173, enum case for SiriKitReliabilityCodes.ampServerError(_:), v128);
      uint64_t v134 = v133;
      v132(v133, 0LL, 1LL, v128);
    }

    else
    {
      uint64_t v134 = (uint64_t)v173;
      sub_FF10(v131, (uint64_t)v173, &qword_2845A0);
    }

    uint64_t v151 = sub_1F6CC(v131, &qword_2845A0);
    uint64_t v152 = v193;
    uint64_t v153 = INPlayMediaIntent.firstMediaItemType()(v151);
    uint64_t v159 = v120;
    uint64_t v154 = (uint64_t)v182;
    uint64_t v155 = (uint64_t)v183;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v191,  v152,  v182,  v183,  v134,  v192,  v119,  v153,  0,  v159,  v121);
    swift_bridgeObjectRelease(v119);
    sub_1F6CC(v134, &qword_2845A0);
    sub_1F6CC(v155, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v154, &qword_2845A8);
    uint64_t v195 = v64;
    char v196 = 1;
    swift_errorRetain(v64);
    v186(&v195);
    swift_errorRelease(v64);
    return sub_1F6CC((uint64_t)&v195, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v182 = v15;
    os_log_type_t v173 = (char *)a9;
    uint64_t v75 = *(int *)(v189 + 48);
    uint64_t v76 = type metadata accessor for TemplatingResult(0LL);
    unint64_t v183 = *(void **)(v76 - 8);
    os_log_type_t v163 = (void (*)(char *, uint64_t, uint64_t))v183[4];
    uint64_t v77 = (uint64_t)v192;
    v163(v192, (uint64_t)v43, v76);
    unint64_t v78 = *(void **)((char *)v43 + v75);
    *(void *)(v77 + v7sub_6C3C(v0 + 5) = v78;
    uint64_t v79 = v177;
    uint64_t v80 = v180;
    ((void (*)(char *, void, uint64_t))v188[13])( v177,  enum case for AdditionalMetricsDescription.ModuleName.pmuvs(_:),  v180);
    uint64_t v81 = v179;
    uint64_t v82 = v178;
    uint64_t v83 = v181;
    (*(void (**)(char *, void, uint64_t))(v179 + 104))( v178,  enum case for AdditionalMetricsDescription.SourceFunction.uvo(_:),  v181);
    uint64_t v84 = v165;
    id v85 = v164;
    uint64_t v86 = v166;
    (*(void (**)(char *, void, uint64_t))(v165 + 104))( v164,  enum case for AdditionalMetricsDescription.StatusReason.slotResolve(_:),  v166);
    id v87 = v78;
    uint64_t v172 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v79,  v82,  v167,  v169,  v85,  v173,  0LL,  1LL);
    os_log_type_t v173 = (char *)v88;
    uint64_t v89 = v85;
    uint64_t v90 = v76;
    uint64_t v91 = v86;
    uint64_t v92 = v87;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v89, v91);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
    ((void (*)(char *, uint64_t))v188[1])(v79, v80);
    uint64_t v93 = v190[18];
    uint64_t v181 = v190[19];
    char v188 = sub_6EA8(v190 + 15, v93);
    uint64_t v94 = enum case for ActivityType.resolveSlotUnsupported(_:);
    uint64_t v95 = type metadata accessor for ActivityType(0LL);
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t v97 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 104))(v175, v94, v95);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v97, 0LL, 1LL, v95);
    uint64_t v98 = *(int *)(v189 + 48);
    uint64_t v99 = v183;
    uint64_t v100 = (void (*)(char *, char *, uint64_t))v183[2];
    uint64_t v101 = v168;
    v100(v168, v192, v90);
    *(void *)&v101[v98] = v92;
    uint64_t v102 = v176;
    v163(v176, (uint64_t)v101, v90);
    ((void (*)(char *, void, uint64_t, uint64_t))v99[7])(v102, 0LL, 1LL, v90);
    uint64_t v103 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v104 = *(void *)(v103 - 8);
    uint64_t v105 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56);
    uint64_t v106 = (uint64_t)v170;
    v105(v170, 1LL, 1LL, v103);
    if (INPlayMediaIntent.hasAMPError()())
    {
      uint64_t v107 = *(void (**)(uint64_t, void, uint64_t))(v104 + 104);
      uint64_t v108 = v171;
      v107(v171, enum case for SiriKitReliabilityCodes.ampServerError(_:), v103);
      v105((char *)v108, 0LL, 1LL, v103);
    }

    else
    {
      uint64_t v108 = v171;
      sub_FF10(v106, v171, &qword_2845A0);
    }

    uint64_t v135 = sub_1F6CC(v106, &qword_2845A0);
    uint64_t v136 = v193;
    uint64_t v137 = INPlayMediaIntent.firstMediaItemType()(v135);
    uint64_t v158 = v93;
    uint64_t v138 = (uint64_t)v175;
    uint64_t v139 = (uint64_t)v176;
    uint64_t v140 = (uint64_t)v173;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v191,  v136,  v175,  v176,  v108,  v172,  v173,  v137,  0,  v158,  v181);
    swift_bridgeObjectRelease(v140);
    sub_1F6CC(v108, &qword_2845A0);
    sub_1F6CC(v139, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v138, &qword_2845A8);
    uint64_t v141 = v189;
    uint64_t v142 = *(int *)(v189 + 48);
    char v143 = v185;
    v100(v185, v192, v90);
    *(void *)&v143[v142] = v92;
    uint64_t v144 = (uint64_t)v184;
    v100(v184, v143, v90);
    *(void *)(v144 + *(int *)(v141 + 48)) = v92;
    id v145 = v92;
    int v146 = v174;
    uint64_t v147 = sub_93088((uint64_t)v136, (uint64_t)v174);
    LOBYTE(v14sub_6C3C(v0 + 3) = FeatureFlagProvider.isResponseFrameworkEnabled.getter(v147);
    uint64_t v148 = *(int *)(v141 + 48);
    uint64_t v149 = (uint64_t)v182;
    v100(v182, (char *)v144, v90);
    *(void *)(v149 + v14sub_6C3C(v0 + 8) = v145;
    id v150 = v145;
    else {
      sub_70774(v149, v150, v191, v136, (uint64_t)v146, v186, v187);
    }

    sub_1F6CC((uint64_t)v146, (uint64_t *)&unk_286C50);
    sub_1F6CC((uint64_t)v184, &qword_289340);
    uint64_t v157 = (void (*)(uint64_t, uint64_t))v183[1];
    v157(v149, v90);

    sub_1F6CC((uint64_t)v192, &qword_289340);
    return ((uint64_t (*)(char *, uint64_t))v157)(v185, v90);
  }

uint64_t sub_6F824( uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  id v132 = a5;
  uint64_t v136 = a6;
  uint64_t v137 = a7;
  uint64_t v127 = a3;
  uint64_t v128 = a4;
  uint64_t v9 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v9);
  uint64_t v130 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v134 = *(void *)(v139 - 8);
  uint64_t v11 = __chkstk_darwin(v139);
  uint64_t v118 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = v12;
  __chkstk_darwin(v11);
  uint64_t v133 = (char *)&v108 - v13;
  uint64_t v14 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v14);
  uint64_t v124 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v140 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v135 = *(void *)(v140 - 8);
  uint64_t v16 = __chkstk_darwin(v140);
  uint64_t v116 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v108 - v18;
  uint64_t v111 = type metadata accessor for ResponseMode(0LL);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v122 = (char *)&v108 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v108 - v25;
  uint64_t v27 = sub_6C5C(&qword_289340);
  uint64_t v113 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v129 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v123 = (char *)&v108 - v31;
  uint64_t v114 = v32;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v108 - v33;
  uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v112 = *(void *)(v35 - 8);
  uint64_t v141 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
  v141(v34, a1, v35);
  uint64_t v125 = v27;
  uint64_t v36 = *(int *)(v27 + 48);
  uint64_t v138 = v34;
  *(void *)&v34[v36] = a2;
  uint64_t v37 = qword_283888;
  id v121 = a2;
  if (v37 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v38 = sub_6960(v21, (uint64_t)qword_2969C8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v119 = v38;
  uint64_t v120 = v39;
  uint64_t v40 = ((uint64_t (*)(char *))v39)(v26);
  uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.default.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v142 = v19;
  uint64_t v126 = v35;
  if (v43)
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = swift_slowAlloc(32LL, -1LL);
    uint64_t v144 = v45;
    *(_DWORD *)uint64_t v44 = 136446210;
    uint64_t v46 = static Insights.responseFramework.getter(v45);
    unint64_t v48 = v47;
    uint64_t v143 = sub_6978(v46, v47, &v144);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    swift_bridgeObjectRelease(v48);
    _os_log_impl(&dword_0, v41, v42, "UnsupportedValueStrategy#createOutput... %{public}s", v44, 0xCu);
    swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  uint64_t v49 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
  uint64_t v50 = v49(v26, v21);
  uint64_t v51 = static SiriEnvironmentWrapper.retrieve()(v50);
  uint64_t v52 = v122;
  if (!v51)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v51 = static SiriEnvironment.default.getter();
  }

  uint64_t v53 = v51;
  v120(v52, v119, v21);
  uint64_t v54 = swift_retain_n(v53, 2LL);
  os_log_type_t v55 = (os_log_s *)Logger.logObject.getter(v54);
  os_log_type_t v56 = static os_log_type_t.info.getter(v55);
  if (os_log_type_enabled(v55, v56))
  {
    NSNumber v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v58 = swift_slowAlloc(32LL, -1LL);
    uint64_t v144 = v58;
    uint64_t v120 = (void (*)(char *, uint64_t, uint64_t))v49;
    *(_DWORD *)NSNumber v57 = 136315138;
    uint64_t v108 = v57 + 4;
    uint64_t v59 = SiriEnvironment.currentRequest.getter(v58);
    uint64_t v60 = v109;
    CurrentRequest.responseMode.getter(v59);
    uint64_t v61 = swift_release(v59);
    uint64_t v62 = ResponseMode.description.getter(v61);
    uint64_t v119 = v21;
    uint64_t v63 = v53;
    unint64_t v65 = v64;
    (*(void (**)(char *, uint64_t))(v110 + 8))(v60, v111);
    uint64_t v143 = sub_6978(v62, v65, &v144);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
    swift_release_n(v63, 2LL);
    unint64_t v66 = v65;
    uint64_t v53 = v63;
    swift_bridgeObjectRelease(v66);
    _os_log_impl(&dword_0, v55, v56, "UnsupportedValueStrategy#createOutput with responseMode = %s", v57, 0xCu);
    swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1LL, -1LL);
    swift_slowDealloc(v57, -1LL, -1LL);

    uint64_t v67 = ((uint64_t (*)(char *, uint64_t))v120)(v52, v119);
  }

  else
  {

    swift_release_n(v53, 2LL);
    uint64_t v67 = v49(v52, v21);
  }

  uint64_t v68 = (uint64_t)v132;
  uint64_t v70 = v124;
  uint64_t v69 = v125;
  uint64_t v71 = (uint64_t (*)(char *, char *, uint64_t))v141;
  static DialogPhase.confirmation.getter(v67);
  uint64_t v72 = *(int *)(v69 + 48);
  uint64_t v73 = (uint64_t)v123;
  uint64_t v74 = (uint64_t)v138;
  uint64_t v75 = v126;
  uint64_t v76 = v71(v123, v138, v126);
  *(void *)(v73 + v7sub_6C3C(v0 + 2) = v121;
  __chkstk_darwin(v76);
  *(&v108 - sub_6C3C(v0 + 4) = (uint8_t *)v68;
  *(&v108 - sub_6C3C(v0 + 3) = (uint8_t *)v53;
  *(&v108 - sub_6C3C(v0 + 2) = (uint8_t *)v73;
  id v132 = v77;
  OutputGenerationManifest.init(dialogPhase:_:)(v70, sub_71280, &v108 - 6);
  sub_1F6CC(v73, &qword_289340);
  unint64_t v78 = v131;
  sub_6EA8( &v131[OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_snippetProvider],  *(void *)&v131[OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_snippetProvider + 24]);
  uint64_t v79 = v130;
  sub_D4E24(v127, v128, v130);
  uint64_t v80 = (void (*)(char *, uint64_t, uint64_t))v53;
  uint64_t v81 = v134;
  uint64_t v82 = v139;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v79, 1LL, v139) == 1)
  {
    sub_1F6CC(v79, &qword_284170);
    sub_6EA8((void *)v78 + 20, *((void *)v78 + 23));
    uint64_t v83 = *(int *)(v69 + 48);
    uint64_t v84 = (uint64_t)v129;
    v141(v129, v74, v75);
    id v85 = v132;
    *(void *)(v84 + v8sub_6C3C(v0 + 3) = v132;
    id v86 = v85;
    sub_175200(v84, v86, v68, (uint64_t)_swiftEmptyArrayStorage, v136, v137);
    swift_release(v80);

    (*(void (**)(char *, uint64_t))(v135 + 8))(v142, v140);
    sub_1F6CC(v74, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v84, v75);
  }

  else
  {
    uint64_t v131 = *(char **)(v81 + 32);
    uint64_t v88 = v133;
    ((void (*)(char *, uint64_t, uint64_t))v131)(v133, v79, v82);
    uint64_t v89 = v118;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v118, v88, v82);
    uint64_t v90 = *(int *)(v69 + 48);
    uint64_t v91 = (uint64_t)v129;
    v141(v129, v74, v75);
    uint64_t v92 = v132;
    *(void *)(v91 + v90) = v132;
    uint64_t v141 = v80;
    uint64_t v93 = v135;
    uint64_t v94 = v116;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v116, v142, v140);
    uint64_t v95 = *(unsigned __int8 *)(v81 + 80);
    uint64_t v96 = (v95 + 16) & ~v95;
    uint64_t v97 = *(unsigned __int8 *)(v113 + 80);
    uint64_t v98 = (v117 + v97 + v96) & ~v97;
    uint64_t v99 = *(unsigned __int8 *)(v93 + 80);
    uint64_t v100 = (v114 + v99 + v98) & ~v99;
    uint64_t v101 = swift_allocObject(&unk_26C8C8, v100 + v115, v95 | v99 | v97 | 7);
    uint64_t v102 = v101 + v96;
    uint64_t v103 = v139;
    ((void (*)(uint64_t, char *, uint64_t))v131)(v102, v89, v139);
    sub_712A0(v91, v101 + v98);
    uint64_t v104 = v94;
    uint64_t v105 = v140;
    (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v101 + v100, v104, v140);
    id v106 = v92;
    uint64_t v107 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v136, v137, &unk_285468, v101, v107);
    swift_release(v141);
    swift_release(v101);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v133, v103);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v142, v105);
    return sub_1F6CC((uint64_t)v138, &qword_289340);
  }

uint64_t sub_701D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_6C5C(&qword_289340);
  v4[11] = v5;
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_7023C, 0LL, 0LL);
}

uint64_t sub_7023C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v0[13] = ResponseFactory.init()();
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v6;
  v0[6] = sub_10430( (unint64_t *)&qword_286CA0,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v7 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v7, v4, v6);
  uint64_t v8 = sub_6C5C(&qword_287980);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + sub_6C3C(v0 + 16) = xmmword_214980;
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v3, v11);
  uint64_t v14 = *(void **)(v3 + v10);
  *(void *)(v1 + v10) = v14;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v14;
  specialized Array._endMutation()(v13);
  v0[14] = v9;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  id v16 = v14;
  v15(v1, v11);
  v0[15] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_41B78;
  return ((uint64_t (*)(void, void *, uint64_t, void))v19)(v0[7], v0 + 2, v9, v0[10]);
}

uint64_t sub_703CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a2, (uint64_t)v14, (uint64_t *)&unk_286C50);
  uint64_t v15 = OutputGenerationManifest.nlContextUpdate.setter(v14);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v18);
}

uint64_t sub_70580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_6C5C(&qword_289340);
  v4[11] = v5;
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_705E4, 0LL, 0LL);
}

uint64_t sub_705E4()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v0[13] = ResponseFactory.init()();
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v6;
  v0[6] = sub_10430( (unint64_t *)&qword_286CA0,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v7 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v7, v4, v6);
  uint64_t v8 = sub_6C5C(&qword_287980);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + sub_6C3C(v0 + 16) = xmmword_214980;
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v3, v11);
  uint64_t v14 = *(void **)(v3 + v10);
  *(void *)(v1 + v10) = v14;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v14;
  specialized Array._endMutation()(v13);
  v0[14] = v9;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  id v16 = v14;
  v15(v1, v11);
  v0[15] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_72404;
  return ((uint64_t (*)(void, void *, uint64_t, void))v19)(v0[7], v0 + 2, v9, v0[10]);
}

uint64_t sub_70774( uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v45 = a7;
  uint64_t v46 = a6;
  uint64_t v43 = a3;
  uint64_t v44 = a5;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  id v16 = (char *)&v41 - v15;
  uint64_t v17 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16LL))(v19, a1, v20);
  *(void *)&v19[*(int *)(v17 + 48)] = a2;
  uint64_t v21 = qword_283888;
  id v22 = a2;
  if (v21 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v23 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v42 = v11;
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v25 = v24(v16, v23, v10);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v41 = a4;
    uint64_t v29 = v28;
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "UnsupportedValueStrategy#createOutputLegacy...", v28, 2u);
    a4 = v41;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  uint64_t v30 = *(void (**)(char *, uint64_t))(v42 + 8);
  v30(v16, v10);
  sub_1009BC(v43, a4);
  uint64_t v32 = v31;
  uint64_t v33 = v24(v14, v23, v10);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl(&dword_0, v34, v35, "UnsupportedValueStrategy#createOutputLegacy completed successfully", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  uint64_t v37 = ((uint64_t (*)(char *, uint64_t))v30)(v14, v10);
  char v38 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v37);
  uint64_t v39 = type metadata accessor for AceOutput(0LL);
  memset(v47, 0, sizeof(v47));
  uint64_t v48 = 0LL;
  v49[3] = v39;
  v49[4] = &protocol witness table for AceOutput;
  sub_10974(v49);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v19,  v38 & 1,  v32,  0LL,  1LL,  v44,  _swiftEmptyArrayStorage,  v47);
  swift_bridgeObjectRelease(v32);
  sub_1F6CC((uint64_t)v47, &qword_2845C8);
  char v50 = 0;
  v46(v49);
  sub_1F6CC((uint64_t)v19, &qword_289340);
  return sub_1F6CC((uint64_t)v49, (uint64_t *)&unk_286C60);
}

void *PlayMedia.UnsupportedValueStrategy.deinit()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_featureFlagProvider;
  uint64_t v2 = type metadata accessor for FeatureFlagProvider(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_6C3C((void *)((char *)v0
                    + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_snippetProvider));
  return v0;
}

uint64_t PlayMedia.UnsupportedValueStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_70B78( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  return sub_70CB4(a1, a2, a3, a4, a6, a7, a8);
}

uint64_t sub_70BA4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for PlayMedia.UnsupportedValueStrategy(0LL);
  return UnsupportedValueFlowStrategy.makeUpdatedIntentForUnsupportedValue(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_70C2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = type metadata accessor for PlayMedia.UnsupportedValueStrategy(0LL);
  return UnsupportedValueFlowStrategy.makeLaunchAppWithIntentOutput(app:intent:parameterName:multicardinalValueIndex:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v19,  a10);
}

uint64_t sub_70CB4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v61 = *v7;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v60 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v64 = a3;
  if (a3 == 0x657449616964656DLL && a4 == 0xEA0000000000736DLL
    || (uint64_t v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, a4), (v17 & 1) != 0))
  {
    uint64_t v20 = App.appIdentifier.getter(v17);
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v58 = v20;
      uint64_t v59 = a4;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v23 = sub_6960(v13, (uint64_t)qword_2969C8);
      uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v23, v13);
      uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v26 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v27 = 0;
        _os_log_impl( &dword_0,  v25,  v26,  "UnsupportedValueStrategy#makeUnsupportedValueOutput logCoreAnalytics...",  v27,  2u);
        swift_slowDealloc(v27, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      type metadata accessor for AppSelectionContext(0LL);
      static ExecutorProvider.shared.getter(v66);
      uint64_t v28 = v67;
      uint64_t v29 = v68;
      sub_6EA8(v66, v67);
      uint64_t v30 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v28, v29);
      uint64_t v32 = v31;
      uint64_t v33 = (void *)swift_allocObject(&unk_26C968, 40LL, 7LL);
      _OWORD v33[2] = v58;
      v33[3] = v22;
      v33[4] = a2;
      id v34 = a2;
      static AppSelectionContext.shared(refId:completion:)(v30, v32, sub_7151C, v33);
      swift_release(v33);
      swift_bridgeObjectRelease(v32);
      sub_6C3C(v66);
      a4 = v59;
    }
  }

  if (INPlayMediaIntent.isUnsafeSelfHarm()())
  {
    uint64_t v35 = swift_allocObject(&unk_26C940, 56LL, 7LL);
    uint64_t v36 = v65;
    *(void *)(v35 + sub_6C3C(v0 + 16) = v63;
    *(void *)(v35 + sub_6C3C(v0 + 24) = v36;
    *(void *)(v35 + 3sub_6C3C(v0 + 2) = a2;
    *(void *)(v35 + 40) = v8;
    *(void *)(v35 + 4sub_6C3C(v0 + 8) = a1;
    id v37 = a2;
    swift_retain(v36);
    swift_retain(v8);
    uint64_t v38 = swift_retain(a1);
    sub_15C184(v38, v37, (uint64_t)sub_714E0, v35);
  }

  else if (INPlayMediaIntent.gdprIsNeeded()())
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = sub_6960(v13, (uint64_t)qword_2969C8);
    uint64_t v40 = v60;
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v60, v39, v13);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl( &dword_0,  v42,  v43,  "UnsupportedValueStrategy#makeUnsupportedValueOutput We need to prompt the user to sign GDPR",  v44,  2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v40, v13);
    uint64_t v35 = swift_allocObject(&unk_26C918, 88LL, 7LL);
    uint64_t v45 = v65;
    *(void *)(v35 + sub_6C3C(v0 + 16) = v64;
    *(void *)(v35 + sub_6C3C(v0 + 24) = a4;
    unint64_t v47 = v62;
    uint64_t v46 = v63;
    *(void *)(v35 + 3sub_6C3C(v0 + 2) = v62;
    *(void *)(v35 + 40) = v8;
    *(void *)(v35 + 4sub_6C3C(v0 + 8) = a1;
    *(void *)(v35 + 56) = a2;
    *(void *)(v35 + 6sub_6C3C(v0 + 4) = v46;
    *(void *)(v35 + 7sub_6C3C(v0 + 2) = v45;
    *(void *)(v35 + 80) = v61;
    id v48 = a2;
    swift_retain(v45);
    swift_retain(v8);
    swift_retain(a1);
    swift_bridgeObjectRetain(a4);
    id v49 = v47;
    sub_15BFC4(a1, v48, (uint64_t)sub_71460, v35);
  }

  else
  {
    uint64_t v35 = swift_allocObject(&unk_26C8F0, 88LL, 7LL);
    *(void *)(v35 + sub_6C3C(v0 + 16) = v8;
    *(void *)(v35 + sub_6C3C(v0 + 24) = a1;
    uint64_t v50 = v63;
    uint64_t v51 = v64;
    *(void *)(v35 + 3sub_6C3C(v0 + 2) = a2;
    *(void *)(v35 + 40) = v50;
    uint64_t v52 = v65;
    *(void *)(v35 + 4sub_6C3C(v0 + 8) = v65;
    *(void *)(v35 + 56) = v51;
    uint64_t v53 = v61;
    uint64_t v54 = v62;
    *(void *)(v35 + 6sub_6C3C(v0 + 4) = a4;
    *(void *)(v35 + 7sub_6C3C(v0 + 2) = v54;
    *(void *)(v35 + 80) = v53;
    id v55 = a2;
    swift_retain(v52);
    swift_retain(v8);
    swift_retain(a1);
    swift_bridgeObjectRetain(a4);
    sub_15C384( a1,  v51,  a4,  v54,  (uint64_t)v55,  (void (*)(uint64_t (*)(), uint64_t))sub_71408,  (char **)v35);
  }

  return swift_release(v35);
}

uint64_t sub_711AC()
{
  return type metadata accessor for PlayMedia.UnsupportedValueStrategy(0LL);
}

uint64_t type metadata accessor for PlayMedia.UnsupportedValueStrategy(uint64_t a1)
{
  uint64_t result = qword_285368;
  if (!qword_285368) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayMedia.UnsupportedValueStrategy);
  }
  return result;
}

uint64_t sub_711F0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  _BYTE v4[2] = "(";
  void v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = "(";
  v4[5] = "(";
  v4[6] = "(";
  v4[7] = "(";
  uint64_t result = type metadata accessor for FeatureFlagProvider(319LL);
  if (v3 <= 0x3F)
  {
    v4[8] = *(void *)(result - 8) + 64LL;
    void v4[9] = "(";
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 10LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_71280(uint64_t a1)
{
  return sub_703CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_712A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_289340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_712E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_285464);
  *(void *)(v2 + sub_6C3C(v0 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_11C64;
  return sub_701D8(a1, v12, v13, v14);
}

uint64_t sub_713BC()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));

  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t sub_71408(uint64_t a1)
{
  return sub_7146C( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_6E984);
}

uint64_t sub_71414()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 72));
  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t sub_71460(uint64_t a1)
{
  return sub_7146C( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_6D4A8);
}

uint64_t sub_7146C( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_714A4()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_714E0(uint64_t a1)
{
  return sub_6D150( a1,  *(void (**)(void *))(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_714F0()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_7151C(uint64_t a1)
{
  return sub_6C0CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_71528()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_7154C()
{
}

uint64_t sub_71554( uint64_t a1, void *a2, void (*a3)(char *, uint64_t, id), void (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v151 = a4;
  uint64_t v152 = a5;
  uint64_t v162 = a3;
  uint64_t v9 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v9);
  uint64_t v146 = (uint64_t)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v160 = *(void *)(v11 - 8);
  id v161 = (id)v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v141 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = v13;
  __chkstk_darwin(v12);
  uint64_t v147 = (char *)&v132 - v14;
  uint64_t v15 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v15);
  uint64_t v144 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v163 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v150 = *(void *)(v163 - 8);
  uint64_t v17 = __chkstk_darwin(v163);
  uint64_t v137 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v136 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v132 - v19;
  uint64_t v133 = type metadata accessor for ResponseMode(0LL);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v22 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v139 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v154 = (char *)&v132 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v132 - v29;
  uint64_t v31 = sub_6C5C(&qword_289340);
  uint64_t v134 = *(void *)(v31 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v148 = (char *)&v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v142 = (char *)&v132 - v35;
  uint64_t v135 = v36;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v132 - v37;
  uint64_t v39 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v140 = *(void *)(v39 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + 16);
  uint64_t v153 = v39;
  uint64_t v158 = v40;
  ((void (*)(char *, uint64_t))v40)(v38, a1);
  uint64_t v165 = v31;
  uint64_t v166 = v38;
  *(void *)&v38[*(int *)(v31 + 48)] = a2;
  uint64_t v41 = qword_283888;
  id v143 = a2;
  if (v41 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v42 = sub_6960(v23, (uint64_t)qword_2969C8);
  os_log_type_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v155 = v42;
  uint64_t v156 = v43;
  uint64_t v44 = ((uint64_t (*)(char *))v43)(v30);
  uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.default.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v159 = v23;
  uint64_t v164 = v20;
  uint64_t v149 = v6;
  if (v47)
  {
    id v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    uint64_t v168 = v49;
    *(_DWORD *)id v48 = 136446210;
    uint64_t v50 = static Insights.responseFramework.getter(v49);
    unint64_t v52 = v51;
    uint64_t v167 = sub_6978(v50, v51, &v168);
    uint64_t v23 = v159;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168);
    swift_bridgeObjectRelease(v52);
    _os_log_impl(&dword_0, v45, v46, "UnsupportedValueStrategy#createSafetySelfHarmOutput... %{public}s", v48, 0xCu);
    swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v49, -1LL, -1LL);
    swift_slowDealloc(v48, -1LL, -1LL);
  }

  uint64_t v157 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
  uint64_t v53 = v157(v30, v23);
  uint64_t v54 = static SiriEnvironmentWrapper.retrieve()(v53);
  id v55 = v154;
  if (!v54)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v54 = static SiriEnvironment.default.getter();
  }

  uint64_t v56 = v54;
  v156(v55, v155, v23);
  uint64_t v57 = swift_retain_n(v56, 2LL);
  uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
  os_log_type_t v59 = static os_log_type_t.info.getter(v58);
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v61 = v56;
    uint64_t v62 = swift_slowAlloc(32LL, -1LL);
    uint64_t v168 = v62;
    *(_DWORD *)uint64_t v60 = 136315138;
    uint64_t v63 = SiriEnvironment.currentRequest.getter(v62);
    CurrentRequest.responseMode.getter(v63);
    uint64_t v64 = swift_release(v63);
    uint64_t v65 = ResponseMode.description.getter(v64);
    unint64_t v67 = v66;
    (*(void (**)(char *, uint64_t))(v132 + 8))(v22, v133);
    uint64_t v167 = sub_6978(v65, v67, &v168);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168);
    swift_release_n(v61, 2LL);
    swift_bridgeObjectRelease(v67);
    _os_log_impl( &dword_0,  v58,  v59,  "UnsupportedValueStrategy#createSafetySelfHarmOutput with responseMode = %s",  v60,  0xCu);
    swift_arrayDestroy(v62, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v68 = v62;
    uint64_t v56 = v61;
    swift_slowDealloc(v68, -1LL, -1LL);
    swift_slowDealloc(v60, -1LL, -1LL);

    uint64_t v69 = v154;
    uint64_t v70 = v159;
  }

  else
  {

    swift_release_n(v56, 2LL);
    uint64_t v69 = v55;
    uint64_t v70 = v23;
  }

  uint64_t v71 = v157(v69, v70);
  uint64_t v73 = v164;
  uint64_t v72 = v165;
  uint64_t v74 = (uint64_t)v166;
  uint64_t v75 = v149;
  uint64_t v76 = v158;
  id v77 = v144;
  static DialogPhase.confirmation.getter(v71);
  uint64_t v78 = *(int *)(v72 + 48);
  uint64_t v79 = (uint64_t)v142;
  uint64_t v80 = v153;
  uint64_t v81 = v76(v142, v74, v153);
  *(void *)(v79 + v7sub_6C3C(v0 + 8) = v143;
  __chkstk_darwin(v81);
  *(&v132 - sub_6C3C(v0 + 4) = (uint64_t)v162;
  *(&v132 - sub_6C3C(v0 + 3) = v56;
  *(&v132 - sub_6C3C(v0 + 2) = v79;
  id v83 = v82;
  OutputGenerationManifest.init(dialogPhase:_:)(v77, sub_723F4, &v132 - 6);
  sub_1F6CC(v79, &qword_289340);
  sub_6EA8( (void *)(v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_snippetProvider),  *(void *)(v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_snippetProvider + 24));
  uint64_t v84 = v146;
  sub_D5B88(v146);
  id v85 = (void (*)(char *, char *, uint64_t))v76;
  uint64_t v86 = v160;
  uint64_t v87 = v56;
  id v88 = v161;
  int v89 = (*(uint64_t (**)(uint64_t, uint64_t, id))(v160 + 48))(v84, 1LL, v161);
  uint64_t v145 = v87;
  if (v89 == 1)
  {
    uint64_t v90 = v75;
    uint64_t v91 = v165;
    id v161 = v83;
    sub_1F6CC(v84, &qword_284170);
    uint64_t v92 = v139;
    uint64_t v93 = v159;
    uint64_t v94 = ((uint64_t (*)(char *, uint64_t, uint64_t))v156)(v139, v155, v159);
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    os_log_type_t v96 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v98 = swift_slowAlloc(32LL, -1LL);
      uint64_t v168 = v98;
      *(_DWORD *)uint64_t v97 = 136446210;
      uint64_t v99 = static Insights.responseFramework.getter(v98);
      uint64_t v100 = v90;
      unint64_t v102 = v101;
      uint64_t v167 = sub_6978(v99, v101, &v168);
      uint64_t v103 = v165;
      uint64_t v104 = v153;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168);
      unint64_t v105 = v102;
      uint64_t v90 = v100;
      swift_bridgeObjectRelease(v105);
      _os_log_impl( &dword_0,  v95,  v96,  "UnsupportedValueStrategy#createSafetySelfHarmOutput snippet generation failed! %{public}s",  v97,  0xCu);
      swift_arrayDestroy(v98, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v106 = v98;
      uint64_t v107 = (uint64_t)v166;
      swift_slowDealloc(v106, -1LL, -1LL);
      swift_slowDealloc(v97, -1LL, -1LL);

      v157(v92, v93);
      uint64_t v108 = v164;
      uint64_t v109 = v161;
    }

    else
    {

      v157(v92, v93);
      uint64_t v108 = v164;
      uint64_t v109 = v161;
      uint64_t v104 = v80;
      uint64_t v103 = v91;
      uint64_t v107 = (uint64_t)v166;
    }

    sub_6EA8((void *)(v90 + 160), *(void *)(v90 + 184));
    uint64_t v129 = *(int *)(v103 + 48);
    uint64_t v130 = (uint64_t)v148;
    v158(v148, v107, v104);
    *(void *)(v130 + v1sub_6C3C(v0 + 29) = v109;
    id v131 = v109;
    sub_175200(v130, v131, (uint64_t)v162, (uint64_t)_swiftEmptyArrayStorage, v151, v152);
    swift_release(v145);

    (*(void (**)(char *, uint64_t))(v150 + 8))(v108, v163);
    sub_1F6CC(v107, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v140 + 8))(v130, v104);
  }

  else
  {
    uint64_t v162 = *(void (**)(char *, uint64_t, id))(v86 + 32);
    uint64_t v110 = v147;
    v162(v147, v84, v88);
    uint64_t v111 = v141;
    (*(void (**)(char *, char *, id))(v86 + 16))(v141, v110, v88);
    uint64_t v112 = *(int *)(v165 + 48);
    uint64_t v113 = (uint64_t)v148;
    v85(v148, v166, v80);
    uint64_t v114 = v83;
    *(void *)(v113 + v11sub_6C3C(v0 + 2) = v83;
    uint64_t v115 = v150;
    uint64_t v116 = v137;
    (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v137, v73, v163);
    uint64_t v117 = *(unsigned __int8 *)(v86 + 80);
    uint64_t v118 = (v117 + 16) & ~v117;
    uint64_t v119 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v120 = (v138 + v119 + v118) & ~v119;
    uint64_t v121 = *(unsigned __int8 *)(v115 + 80);
    uint64_t v122 = (v135 + v121 + v120) & ~v121;
    uint64_t v123 = swift_allocObject(&unk_26CA30, v122 + v136, v117 | v121 | v119 | 7);
    id v124 = v161;
    v162((char *)(v123 + v118), (uint64_t)v111, v161);
    sub_712A0(v113, v123 + v120);
    uint64_t v125 = v163;
    (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v123 + v122, v116, v163);
    id v126 = v114;
    uint64_t v127 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v151, v152, &unk_285498, v123, v127);
    swift_release(v145);
    swift_release(v123);
    (*(void (**)(char *, id))(v160 + 8))(v147, v124);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v164, v125);
    return sub_1F6CC((uint64_t)v166, &qword_289340);
  }

uint64_t sub_72078()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v17 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v8, v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return swift_deallocObject(v0, v17, v14);
}

uint64_t sub_72194(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_285494);
  *(void *)(v2 + sub_6C3C(v0 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_3B08C;
  return sub_70580(a1, v12, v13, v14);
}

uint64_t sub_72268()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 72));
  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);

  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_72330(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_6C5C(&qword_289340) - 8);
  return sub_6DDB0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void (**)(uint64_t *))(v1 + 64),  *(void *)(v1 + 72),  v1 + ((*(unsigned __int8 *)(v3 + 80) + 80LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_723A8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  sub_6EA8(v0 + 10, v1);
  return dispatch thunk of AccountProviding.gdprPopIfNeeded(completion:)(sub_6E81C, 0LL, v1, v2);
}

uint64_t sub_72408(uint64_t a1)
{
  return sub_7256C(a1, (uint64_t (*)(void))sub_7319C, (uint64_t (*)(void))sub_732C4);
}

uint64_t sub_7241C(void *a1)
{
  if (!a1[2]) {
    return 0LL;
  }
  uint64_t v1 = a1[4];
  swift_bridgeObjectRetain(a1[5]);
  return v1;
}

uint64_t sub_7245C(void *a1)
{
  if (!a1[2]) {
    return 0LL;
  }
  uint64_t v1 = a1[4];
  uint64_t v2 = a1[7];
  swift_bridgeObjectRetain(a1[5]);
  swift_bridgeObjectRetain(v2);
  return v1;
}

uint64_t sub_724C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))( a2,  a1 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)),  v5);
    uint64_t v7 = 0LL;
  }

  else
  {
    uint64_t v7 = 1LL;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v7, 1LL, v5);
}

uint64_t sub_72544(uint64_t a1)
{
  return sub_7256C(a1, (uint64_t (*)(void))sub_73224, (uint64_t (*)(void))sub_7331C);
}

uint64_t sub_72558(uint64_t a1)
{
  return sub_7256C(a1, (uint64_t (*)(void))sub_264C0, (uint64_t (*)(void))sub_73374);
}

uint64_t sub_7256C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t result = a2();
  if ((v7 & 1) != 0) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }

  if (result == 1LL << *(_BYTE *)(a1 + 32)) {
    return 0LL;
  }
  uint64_t v8 = a3();
  swift_bridgeObjectRetain(v9);
  return v8;
}

char *ShazamKitMatch.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static ShazamKitMatch.supportsSecureCoding;
}

uint64_t static ShazamKitMatch.supportsSecureCoding.getter()
{
  return static ShazamKitMatch.supportsSecureCoding;
}

uint64_t static ShazamKitMatch.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess(&static ShazamKitMatch.supportsSecureCoding, v3, 1LL, 0LL);
  static ShazamKitMatch.supportsSecureCoding = a1;
  return result;
}

void *static ShazamKitMatch.supportsSecureCoding.modify(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t ShazamKitMatch.description.getter()
{
  uint64_t v1 = swift_retain(v0);
  uint64_t v2 = ShazamKitMatch.description.getter(v1);
  swift_release(v0);
  return v2;
}

uint64_t ShazamKitMatch.skId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain(*(void *)(v0 + 24));
  return v1;
}

uint64_t ShazamKitMatch.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain(*(void *)(v0 + 40));
  return v1;
}

uint64_t ShazamKitMatch.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain(*(void *)(v0 + 56));
  return v1;
}

uint64_t ShazamKitMatch.artist.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain(*(void *)(v0 + 72));
  return v1;
}

uint64_t ShazamKitMatch.appleMusicID.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain(*(void *)(v0 + 88));
  return v1;
}

uint64_t ShazamKitMatch.lyricsSnippet.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain(*(void *)(v0 + 104));
  return v1;
}

uint64_t ShazamKitMatch.genre.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain(*(void *)(v0 + 120));
  return v1;
}

uint64_t ShazamKitMatch.webURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_72FE8(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_webURL, a1);
}

uint64_t ShazamKitMatch.artworkURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_72FE8(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_artworkURL, a1);
}

uint64_t ShazamKitMatch.videoURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_72FE8(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_videoURL, a1);
}

uint64_t ShazamKitMatch.appleMusicURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_72FE8(v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_appleMusicURL, a1);
}

uint64_t ShazamKitMatch.explicitContent.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_explicitContent);
}

uint64_t ShazamKitMatch.isrc.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc);
  swift_bridgeObjectRetain(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc + 8));
  return v1;
}

void *ShazamKitMatch.__allocating_init(matchedSong:)(void *a1)
{
  return ShazamKitMatch.init(matchedSong:)(a1);
}

void *ShazamKitMatch.init(matchedSong:)(void *a1)
{
  uint64_t v3 = sub_6C5C(&qword_284628);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v86 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v86 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v86 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v86 - v17;
  __chkstk_darwin(v16);
  uint64_t v23 = (char *)&v86 - v22;
  if (a1)
  {
    uint64_t v87 = v21;
    uint64_t v88 = v20;
    uint64_t v89 = v19;
    id v24 = [a1 shazamID];
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      uint64_t v28 = v27;
    }

    else
    {
      uint64_t v26 = 0LL;
      uint64_t v28 = 0LL;
    }

    v1[2] = v26;
    v1[3] = v28;
    id v30 = [a1 title];
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      uint64_t v34 = v33;
    }

    else
    {
      uint64_t v32 = 0LL;
      uint64_t v34 = 0LL;
    }

    v1[4] = v32;
    v1[5] = v34;
    id v35 = [a1 subtitle];
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      uint64_t v39 = v38;
    }

    else
    {
      uint64_t v37 = 0LL;
      uint64_t v39 = 0LL;
    }

    v1[6] = v37;
    v1[7] = v39;
    id v40 = [a1 artist];
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      uint64_t v44 = v43;
    }

    else
    {
      uint64_t v42 = 0LL;
      uint64_t v44 = 0LL;
    }

    v1[8] = v42;
    v1[9] = v44;
    id v45 = [a1 appleMusicID];
    if (v45)
    {
      os_log_type_t v46 = v45;
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      uint64_t v49 = v48;
    }

    else
    {
      uint64_t v47 = 0LL;
      uint64_t v49 = 0LL;
    }

    v1[10] = v47;
    v1[11] = v49;
    id v50 = [a1 lyricsSnippet];
    if (v50)
    {
      unint64_t v51 = v50;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      uint64_t v54 = v53;
    }

    else
    {
      uint64_t v52 = 0LL;
      uint64_t v54 = 0LL;
    }

    v1[12] = v52;
    v1[13] = v54;
    id v55 = [a1 genres];
    uint64_t v56 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, &type metadata for String);

    if (v56[2])
    {
      uint64_t v58 = v56[4];
      uint64_t v57 = v56[5];
      swift_bridgeObjectRetain(v57);
    }

    else
    {
      uint64_t v58 = 0LL;
      uint64_t v57 = 0LL;
    }

    swift_bridgeObjectRelease(v56);
    v1[14] = v58;
    v1[15] = v57;
    id v59 = [a1 webURL];
    if (v59)
    {
      uint64_t v60 = v59;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v59);

      uint64_t v61 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v18, 0LL, 1LL, v61);
    }

    else
    {
      uint64_t v62 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v18, 1LL, 1LL, v62);
    }

    uint64_t v63 = v88;
    sub_2646C((uint64_t)v18, (uint64_t)v23);
    sub_2646C((uint64_t)v23, (uint64_t)v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_webURL);
    id v64 = [a1 artworkURL];
    if (v64)
    {
      uint64_t v65 = v64;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v64);

      uint64_t v66 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56LL))(v12, 0LL, 1LL, v66);
    }

    else
    {
      uint64_t v67 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56LL))(v12, 1LL, 1LL, v67);
    }

    sub_2646C((uint64_t)v12, (uint64_t)v15);
    sub_2646C((uint64_t)v15, (uint64_t)v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_artworkURL);
    id v68 = [a1 videoURL];
    if (v68)
    {
      uint64_t v69 = v68;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v68);

      uint64_t v70 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))(v8, 0LL, 1LL, v70);
    }

    else
    {
      uint64_t v71 = type metadata accessor for URL(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56LL))(v8, 1LL, 1LL, v71);
    }

    uint64_t v72 = v87;
    sub_2646C((uint64_t)v8, v87);
    sub_2646C(v72, (uint64_t)v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_videoURL);
    id v73 = [a1 appleMusicURL];
    if (v73)
    {
      uint64_t v74 = v73;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v73);

      uint64_t v75 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v63, 0LL, 1LL, v75);
    }

    else
    {
      uint64_t v76 = type metadata accessor for URL(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56LL))(v63, 1LL, 1LL, v76);
    }

    uint64_t v77 = v89;
    sub_2646C(v63, v89);
    sub_2646C(v77, (uint64_t)v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_appleMusicURL);
    unsigned __int8 v78 = [a1 explicitContent];
    *((_BYTE *)v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_explicitContent) = v78;
    id v79 = [a1 isrc];
    if (v79)
    {
      uint64_t v80 = v79;
      uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
      uint64_t v83 = v82;
    }

    else
    {

      uint64_t v81 = 0LL;
      uint64_t v83 = 0LL;
    }

    uint64_t v84 = (void *)((char *)v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc);
    *uint64_t v84 = v81;
    v84[1] = v83;
  }

  else
  {
    uint64_t v29 = type metadata accessor for ShazamKitMatch(0LL);
    swift_deallocPartialClassInstance(v1, v29, *(unsigned int *)(*v1 + 48LL), *(unsigned __int16 *)(*v1 + 52LL));
    return 0LL;
  }

  return v1;
}

void *ShazamKitMatch.deinit()
{
  return v0;
}

uint64_t ShazamKitMatch.__deallocating_deinit()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_72FC8()
{
  return ShazamKitMatch.description.getter();
}

uint64_t sub_72FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ShazamKitMatch(uint64_t a1)
{
  uint64_t result = qword_2854D0;
  if (!qword_2854D0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShazamKitMatch);
  }
  return result;
}

uint64_t sub_7306C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284628);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_730AC()
{
  return type metadata accessor for ShazamKitMatch(0LL);
}

void sub_730B4(uint64_t a1)
{
  v4[0] = &unk_2158E8;
  v4[1] = &unk_2158E8;
  _BYTE v4[2] = &unk_2158E8;
  void v4[3] = &unk_2158E8;
  v4[4] = &unk_2158E8;
  v4[5] = &unk_2158E8;
  v4[6] = &unk_2158E8;
  sub_73148(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    uint64_t v7 = v5;
    uint64_t v8 = v5;
    uint64_t v9 = &unk_215900;
    uint64_t v10 = &unk_2158E8;
    swift_updateClassMetadata2(a1, 256LL, 13LL, v4, a1 + 80);
  }

void sub_73148(uint64_t a1)
{
  if (!qword_2854E0)
  {
    uint64_t v2 = type metadata accessor for URL(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_2854E0);
    }
  }

uint64_t sub_7319C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2LL;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_73224(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3LL;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_732C4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 56) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_7331C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_73374(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_733CC()
{
  return swift_deallocClassInstance(v0, 176LL, 7LL);
}

uint64_t _s27NeedsDisambiguationStrategyCMa_0(uint64_t a1)
{
  uint64_t result = qword_2855F0;
  if (!qword_2855F0) {
    return swift_getSingletonMetadata(a1, &_s27NeedsDisambiguationStrategyCMn_0);
  }
  return result;
}

uint64_t sub_7345C(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 240);
}

void static AudioAceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:disableDeviceRacing:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)( uint64_t a1, char a2, uint64_t a3, char a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((sub_73FF0() & 1) != 0)
  {
    if ((unint64_t)a3 >> 62)
    {
      if (a3 < 0) {
        uint64_t v25 = a3;
      }
      else {
        uint64_t v25 = a3 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a3);
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(a3);
    }

    else
    {
      uint64_t v18 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
    }

    int v19 = a5 & 1;
    if (v18)
    {
      uint64_t v20 = sub_252A8(a1, v19);
      uint64_t v21 = sub_26CE0((uint64_t)v20, a3, a4 & 1);
      swift_bridgeObjectRelease(v20);
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIDialogPhaseCompletionValue);
      uint64_t v24 = v23;
      id v26 = sub_2744C(v22, v23, v21, (uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v24);
      static AceOutputHelper.makeAceOutput(addViews:nlContextUpdate:additionalCommands:flowActivity:)(v26, a7, a8, a9);
    }

    else
    {
      id v26 = sub_24FF8(a1, v19, a4 & 1, a10);
      static AceOutputHelper.makeAceOutput(addDialogs:nlContextUpdate:additionalCommands:flowActivity:)(v26, a7, a8, a9);
    }
  }

  else
  {
    sub_73640(a1, a2 & 1, a3, a4 & 1, a5 & 1, a6 & 1, a7, a8, a9);
  }

void sub_73640( uint64_t a1, char a2, uint64_t a3, char a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = TemplatingResult.print.getter(a1);
  specialized ContiguousArray.reserveCapacity(_:)(0LL);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v39 = v13;
  swift_bridgeObjectRetain(v13);
  if (v14)
  {
    uint64_t v15 = 0LL;
    uint64_t v16 = (uint64_t *)(v13 + 40);
    int v17 = a5 & 1;
    int v18 = a6 & 1;
    int v19 = a2 & 1;
    int v20 = a4 & 1;
    do
    {
      uint64_t v22 = *(v16 - 1);
      uint64_t v21 = *v16;
      swift_bridgeObjectRetain(*v16);
      uint64_t v23 = sub_73B84(v15, v22, v21, a1, v17, v18, v19, v20);
      uint64_t v24 = swift_bridgeObjectRelease(v21);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      uint64_t v25 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
      uint64_t v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized ContiguousArray._endMutation()(v26);
      v16 += 2;
      ++v15;
    }

    while (v14 != v15);
  }

  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v39);
  static String._unconditionallyBridgeFromObjectiveC(_:)(SAUIDialogPhaseCompletionValue);
  uint64_t v28 = v27;
  id v41 = [objc_allocWithZone(SAUIAddViews) init];
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000LL) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000LL) != 0)
  {
    uint64_t v34 = sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
    uint64_t v35 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    id v30 = (void *)_bridgeCocoaArray<A>(_:)(v35, v34);
    swift_release(_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v29 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    id v30 = _swiftEmptyArrayStorage;
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v29);
    sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
  }

  uint64_t v31 = swift_bridgeObjectRetain(a3);
  sub_97EC0(v31);
  sub_97EC0((uint64_t)_swiftEmptyArrayStorage);
  sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  [v41 setViews:isa];

  NSString v33 = String._bridgeToObjectiveC()();
  [v41 setDialogPhase:v33];
  swift_release(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v28);

  static AceOutputHelper.makeAceOutput(addViews:nlContextUpdate:additionalCommands:flowActivity:)(v41, a7, a8, a9);
}

void sub_738F4(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = a2;
  unint64_t v9 = *a1;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      uint64_t v18 = a2;
    }
    else {
      uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
    unint64_t v10 = (void *)_CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v7);
    if ((uint64_t)v9 < (uint64_t)v10)
    {
LABEL_3:
      unint64_t v11 = v7 & 0xC000000000000001LL;
      if ((v7 & 0xC000000000000001LL) == 0)
      {
        if ((v9 & 0x8000000000000000LL) != 0)
        {
          __break(1u);
        }

        else if (v9 < *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v12 = *(id *)(v7 + 8 * v9 + 32);
          goto LABEL_7;
        }

        __break(1u);
        goto LABEL_30;
      }

      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
LABEL_7:
      unint64_t v10 = v12;
      if ((a3 & 0xC000000000000001LL) == 0)
      {
        if ((v9 & 0x8000000000000000LL) != 0)
        {
          __break(1u);
        }

        else if (v9 < *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v13 = *(id *)(a3 + 8 * v9 + 32);
LABEL_11:
          uint64_t v14 = v13;
          [v10 setDialog:v13];

          if (v11) {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          }
          else {
            id v15 = *(id *)(v7 + 8 * v9 + 32);
          }
          uint64_t v16 = v15;
          sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
          Class isa = NSNumber.init(integerLiteral:)(a4 & 1).super.super.isa;
          [v16 setListenAfterSpeaking:isa];

          if (v11) {
            uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          }
          else {
            uint64_t v7 = (uint64_t)*(id *)(v7 + 8 * v9 + 32);
          }
          goto LABEL_26;
        }

        __break(1u);
        goto LABEL_33;
      }

uint64_t sub_73B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v57 = a8;
  int v62 = a6;
  int v63 = a7;
  int v61 = a5;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v64 = a1;
  uint64_t v56 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  id v55 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  id v15 = (char *)&v54 - v14;
  uint64_t v16 = type metadata accessor for UUID(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v20 = [objc_allocWithZone(SAUIAssistantUtteranceView) init];
  uint64_t v21 = UUID.init()();
  UUID.uuidString.getter(v21);
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v25 = a4;
  v24(v19, v16);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  [v20 setAceId:v26];

  TemplatingResult.templateIdentifier.getter();
  uint64_t v28 = v27;
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  [v20 setDialogIdentifier:v29];

  NSString v30 = String._bridgeToObjectiveC()();
  [v20 setText:v30];

  [v20 setCanUseServerTTS:v61 & 1];
  [v20 setDisableDeviceRacing:v62 & 1];
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v32 = v31(v15, a4, v10);
  if ((v63 & 1) == 0)
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    v35(v15, v10);
    unint64_t v36 = v64;
    goto LABEL_7;
  }

  uint64_t v33 = TemplatingResult.speak.getter(v32);
  uint64_t v34 = *(void *)(v33 + 16);
  swift_bridgeObjectRelease(v33);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v15, v10);
  unint64_t v36 = v64;
  if (v34 > v64)
  {
    id v37 = v20;
    uint64_t result = TemplatingResult.speak.getter(v37);
    if ((v36 & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else
    {
      uint64_t v39 = result;
      if (*(void *)(result + 16) > v36)
      {
        uint64_t v40 = *(void *)(result + 16 * v36 + 40);
        swift_bridgeObjectRetain(v40);
        swift_bridgeObjectRelease(v39);
        NSString v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v40);
        [v37 setSpeakableText:v41];

        goto LABEL_7;
      }
    }

    __break(1u);
    return result;
  }

uint64_t sub_73FF0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v2);
  unsigned int v6 = &v28[-v5];
  uint64_t v7 = sub_6C5C(&qword_285720);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = static SiriEnvironmentWrapper.retrieve()(v8);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = SiriEnvironment.currentDevice.getter(v11);
    uint64_t v14 = swift_release(v12);
    dispatch thunk of CurrentDevice.personalDomainsAuthenticationMode.getter(v14);
    swift_release(v13);
    uint64_t v15 = type metadata accessor for PersonalDomainsAuthenticationMode(0LL);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48LL))(v10, 1LL, v15) != 1)
    {
      sub_1F6CC((uint64_t)v10, &qword_285720);
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v16 = sub_6960(v0, (uint64_t)qword_2969C8);
      uint64_t v17 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v4, v16, v0);
      uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
      os_log_type_t v19 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v18, v19))
      {
        char v21 = 0;
        goto LABEL_19;
      }

      id v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v20 = 0;
      _os_log_impl( &dword_0,  v18,  v19,  "AceOutputHelper found a setting for personalDomainsAuthenticationMode. Assuming companion mode and not generatin g Modes compatible output.",  v20,  2u);
      char v21 = 0;
      goto LABEL_16;
    }
  }

  else
  {
    uint64_t v22 = ((uint64_t (*)(void))type metadata accessor for PersonalDomainsAuthenticationMode)();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v10, 1LL, 1LL, v22);
  }

  uint64_t v23 = sub_1F6CC((uint64_t)v10, &qword_285720);
  if ((static SiriAudioEnvironment.isPhone.getter(v23) & 1) != 0
    || (static SiriAudioEnvironment.isPad.getter() & 1) != 0
    || (static SiriAudioEnvironment.isPod.getter() & 1) != 0)
  {
    char v21 = 1;
  }

  else
  {
    char v21 = static SiriAudioEnvironment.isCarPlay.getter();
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v0, (uint64_t)qword_2969C8);
  uint64_t v25 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v6, v24, v0);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v18, v26))
  {
    uint64_t v4 = v6;
    goto LABEL_19;
  }

  id v20 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
  *(_DWORD *)id v20 = 67109120;
  int v29 = v21 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30);
  _os_log_impl(&dword_0, v18, v26, "AceOutputHelper will use Modes compatible output: %{BOOL}d", v20, 8u);
  uint64_t v4 = v6;
LABEL_16:
  swift_slowDealloc(v20, -1LL, -1LL);
LABEL_19:

  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
  return v21 & 1;
}

id sub_74334(uint64_t a1, int a2)
{
  LODWORD(v6sub_6C3C(v0 + 4) = a2;
  uint64_t v2 = sub_6C5C(&qword_285718);
  __chkstk_darwin(v2);
  int v63 = (void (*)(char *, uint64_t))((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = type metadata accessor for TemplatingText(0LL);
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  int v62 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v61 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v16 = [objc_allocWithZone(SADialog) init];
  uint64_t v17 = UUID.init()();
  UUID.uuidString.getter(v17);
  uint64_t v19 = v18;
  id v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  [v16 setAceId:v21];

  TemplatingSection.id.getter();
  uint64_t v23 = v22;
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  [v16 setDialogIdentifier:v24];

  [v16 setSpokenOnly:TemplatingSection.spokenOnly.getter() & 1];
  [v16 setCanUseServerTTS:v64 & 1];
  id v25 = [objc_allocWithZone(SADialogText) init];
  uint64_t v26 = UUID.init()();
  UUID.uuidString.getter(v26);
  uint64_t v28 = v27;
  uint64_t v64 = v12;
  uint64_t v29 = v12;
  uint64_t v30 = v65;
  int v61 = v20;
  v20(v15, v29);
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  [v25 setAceId:v31];

  uint64_t v32 = TemplatingSection.content.getter();
  TemplatingText.text.getter(v32);
  uint64_t v34 = v33;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  unint64_t v36 = v11;
  uint64_t v37 = v66;
  v35(v36, v66);
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  [v25 setText:v38];

  uint64_t v39 = v37;
  uint64_t v40 = TemplatingSection.content.getter();
  TemplatingText.speakableTextOverride.getter(v40);
  uint64_t v42 = v41;
  v35(v9, v39);
  if (v42)
  {
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42);
  }

  else
  {
    NSString v43 = 0LL;
  }

  uint64_t v44 = (uint64_t)v63;
  [v25 setSpeakableTextOverride:v43];

  TemplatingSection.caption.getter([v16 setContent:v25]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v44, 1LL, v39) == 1)
  {

    sub_1F6CC(v44, &qword_285718);
  }

  else
  {
    int v63 = v35;
    uint64_t v45 = v62;
    uint64_t v46 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v62, v44, v39);
    id v47 = [objc_allocWithZone(SADialogText) init];
    uint64_t v48 = UUID.init()();
    UUID.uuidString.getter(v48);
    uint64_t v50 = v49;
    v61(v15, v64);
    NSString v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v50);
    [v47 setAceId:v51];

    TemplatingText.text.getter(v52);
    uint64_t v54 = v53;
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v54);
    [v47 setText:v55];

    TemplatingText.speakableTextOverride.getter(v56);
    if (v57)
    {
      uint64_t v58 = v57;
      NSString v59 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v58);
    }

    else
    {
      NSString v59 = 0LL;
    }

    [v47 setSpeakableTextOverride:v59];

    [v16 setCaption:v47];
    v63(v45, v46);
  }

  return v16;
}

void *sub_74828(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = a2 - (void)result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_19;
  }
  uint64_t v7 = v5;
  uint64_t v8 = result;
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)(v6);
    if (v6 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }

    else {
      uint64_t v11 = (void *)a2;
    }
    char v12 = a5 & 1;
    unint64_t v13 = (unint64_t)v8;
    while (a2 != v13)
    {
      unint64_t v20 = v13;
      sub_738F4(&v20, a3, a4, v12, &v21);
      if (v7) {
        return (void *)swift_release(v22);
      }
      uint64_t v7 = 0LL;
      uint64_t v15 = v21;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      uint64_t v16 = v22[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      uint64_t v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
      uint64_t result = (void *)specialized ContiguousArray._endMutation()(v17);
      if (v11 == (void *)v13) {
        goto LABEL_18;
      }
      if (a2 == ++v13) {
        return v22;
      }
    }

    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  return result;
}

ValueMetadata *type metadata accessor for AudioAceOutputHelper()
{
  return &type metadata for AudioAceOutputHelper;
}

id sub_74970(uint64_t a1)
{
  uint64_t v3 = sub_6C5C(&qword_285728);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = objc_allocWithZone(v1);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 initWithIdentifier:0 displayString:v7];

  id v9 = v8;
  NowPlayingInfo.title.getter(v9);
  if (v10)
  {
    uint64_t v12 = v10;
    NSString v13 = String._bridgeToObjectiveC()();
    *(void *)&double v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }

  else
  {
    NSString v13 = 0LL;
  }

  objc_msgSend(v9, "setTitle:", v13, v11);

  NowPlayingInfo.trackArtist.getter(v14);
  if (v15)
  {
    uint64_t v17 = v15;
    NSString v18 = String._bridgeToObjectiveC()();
    *(void *)&double v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }

  else
  {
    NSString v18 = 0LL;
  }

  objc_msgSend(v9, "setTrackArtist:", v18, v16);

  NowPlayingInfo.albumArtist.getter();
  if (v19)
  {
    uint64_t v21 = v19;
    NSString v22 = String._bridgeToObjectiveC()();
    *(void *)&double v20 = swift_bridgeObjectRelease(v21).n128_u64[0];
  }

  else
  {
    NSString v22 = 0LL;
  }

  objc_msgSend(v9, "setAlbumArtist:", v22, v20);

  NowPlayingInfo.album.getter(v23);
  if (v24)
  {
    uint64_t v26 = v24;
    NSString v27 = String._bridgeToObjectiveC()();
    *(void *)&double v25 = swift_bridgeObjectRelease(v26).n128_u64[0];
  }

  else
  {
    NSString v27 = 0LL;
  }

  objc_msgSend(v9, "setAlbum:", v27, v25);

  NowPlayingInfo.contentId.getter(v28);
  if (v29)
  {
    uint64_t v31 = v29;
    NSString v32 = String._bridgeToObjectiveC()();
    *(void *)&double v30 = swift_bridgeObjectRelease(v31).n128_u64[0];
  }

  else
  {
    NSString v32 = 0LL;
  }

  objc_msgSend(v9, "setContentId:", v32, v30);

  else {
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  }
  [v9 setLyricsAvailable:isa];

  double v34 = COERCE_DOUBLE(NowPlayingInfo.duration.getter());
  if ((v35 & 1) != 0) {
    double v34 = 0.0;
  }
  NowPlayingInfo.releaseDate.getter([v9 setDuration:v34]);
  uint64_t v36 = type metadata accessor for Date(0LL);
  uint64_t v37 = *(void *)(v36 - 8);
  Class v38 = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v5, 1LL, v36) != 1)
  {
    Class v38 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v36);
  }

  [v9 setReleaseDate:v38];

  else {
    Class v39 = Bool._bridgeToObjectiveC()().super.super.isa;
  }
  [v9 setIsLoading:v39];

  NowPlayingInfo.playlistTitle.getter();
  if (v40)
  {
    uint64_t v42 = v40;
    NSString v43 = String._bridgeToObjectiveC()();
    *(void *)&double v41 = swift_bridgeObjectRelease(v42).n128_u64[0];
  }

  else
  {
    NSString v43 = 0LL;
  }

  objc_msgSend(v9, "setPlaylistTitle:", v43, v41);

  NowPlayingInfo.stationTitle.getter();
  if (v44)
  {
    uint64_t v46 = v44;
    NSString v47 = String._bridgeToObjectiveC()();
    *(void *)&double v45 = swift_bridgeObjectRelease(v46).n128_u64[0];
  }

  else
  {
    NSString v47 = 0LL;
  }

  objc_msgSend(v9, "setStationTitle:", v47, v45);

  else {
    Class v48 = Bool._bridgeToObjectiveC()().super.super.isa;
  }
  [v9 setNoAppProvidedData:v48];

  uint64_t v49 = type metadata accessor for NowPlayingInfo(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8LL))(a1, v49);
  return v9;
}

unint64_t sub_74D54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_6C5C(&qword_2858E8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_FF10(v7, (uint64_t)&v16, &qword_2858F0);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_9A744(v16, v17);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_21964(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _BYTE v4[2] = v15;
    v7 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_74E88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_6C5C(&qword_2858B8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *((void *)v6 - 2);
    uint64_t v8 = *((void *)v6 - 1);
    char v9 = *v6;
    swift_bridgeObjectRetain(v8);
    unint64_t result = sub_9A744(v7, v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 24;
    _BYTE v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_74F98(uint64_t a1)
{
  return sub_74FE0( a1,  &qword_285858,  &qword_285860,  (uint64_t (*)(char *))sub_9A830,  (uint64_t (*)(void))&type metadata accessor for CommonAudio.MediaType);
}

unint64_t sub_74FBC(uint64_t a1)
{
  return sub_74FE0( a1,  &qword_285868,  &qword_285870,  (uint64_t (*)(char *))sub_9A8C8,  (uint64_t (*)(void))&type metadata accessor for CommonAudio.Sort);
}

unint64_t sub_74FE0( uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v33 = a5;
  double v34 = a4;
  uint64_t v8 = sub_6C5C(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
    BOOL v14 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v14;
  }

  sub_6C5C(a3);
  uint64_t v13 = static _DictionaryStorage.allocate(capacity:)(v12);
  BOOL v14 = (void *)v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    goto LABEL_9;
  }
  uint64_t v16 = *(int *)(v8 + 48);
  uint64_t v17 = a1;
  uint64_t v18 = v13 + 64;
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v32 = v17;
  uint64_t v20 = v17 + v19;
  uint64_t v21 = *(void *)(v9 + 72);
  swift_retain(v13);
  while (1)
  {
    sub_FF10(v20, (uint64_t)v11, a2);
    unint64_t result = v34(v11);
    if ((v23 & 1) != 0) {
      break;
    }
    unint64_t v24 = result;
    *(void *)(v18 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v25 = v14[6];
    uint64_t v26 = v33(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 32LL))( v25 + *(void *)(*(void *)(v26 - 8) + 72LL) * v24,  v11,  v26);
    *(void *)(v14[7] + 8 * vsub_6C3C(v0 + 24) = *(void *)&v11[v16];
    uint64_t v27 = v14[2];
    BOOL v28 = __OFADD__(v27, 1LL);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_12;
    }
    _BYTE v14[2] = v29;
    v20 += v21;
    if (!--v15)
    {
      swift_release(v14);
      uint64_t v30 = v32;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_7517C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_285878);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }

  sub_6C5C(&qword_285880);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v25 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_FF10(v13, (uint64_t)v5, &qword_285878);
    unint64_t result = sub_9A960((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for CommonAudio.Decade(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    *(void *)(v8[7] + 8 * v1sub_6C3C(v0 + 7) = *(void *)&v5[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1LL);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_12;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v23 = v25;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_75310(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_6C5C(&qword_285898);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    unint64_t result = sub_9A744(v7, v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    unint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 3;
    _BYTE v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_75420(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_6C5C(&qword_2858B0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 2);
    uint64_t v8 = (uint64_t)*(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    id v10 = v9;
    unint64_t result = sub_9A744(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    *(void *)(v4[7] + 8 * result) = v10;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    _BYTE v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_75538(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_6C5C(&qword_2858D8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_FF10(v7, (uint64_t)v16, &qword_2858E0);
    unint64_t result = sub_9A7A8((uint64_t)v16);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v10 = v4[6] + 40 * result;
    __int128 v11 = v16[0];
    __int128 v12 = v16[1];
    *(void *)(v10 + 3sub_6C3C(v0 + 2) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + sub_6C3C(v0 + 16) = v12;
    unint64_t result = (unint64_t)sub_21964(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _BYTE v4[2] = v15;
    v7 += 72LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_75678(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_6C5C(&qword_2858A8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v10 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    unint64_t result = sub_9A744(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    BOOL v14 = (void *)(v4[7] + 16 * result);
    *BOOL v14 = v10;
    v14[1] = v9;
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, 1LL);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v6 += 4;
    _BYTE v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_75798(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_285888);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }

  sub_6C5C(&qword_285890);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v25 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_FF10(v13, (uint64_t)v5, &qword_285888);
    unint64_t result = sub_9AAB8((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for DateTime.DateTimeRange.DefinedDateTimeRange(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    *(void *)(v8[7] + 8 * v1sub_6C3C(v0 + 7) = *(void *)&v5[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1LL);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_12;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v23 = v25;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t _s23AudioFlowDelegatePlugin8AddMediaO20HandleIntentStrategyC011makeSiriKitH7Handler3app6intent0klB00klhM0VSg0K13AppResolution0P0C_So05INAddfH0CtF_0@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  sub_6EA8(v26, v27);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v26);
  uint64_t v27 = v11;
  BOOL v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v12;
  void v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v25);
  static DeviceProvider.shared.getter(v13);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  static ExecutorProvider.shared.getter(v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_6EA8(v19, v20);
  dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v17 = v16;
  sub_6C3C(v19);
  sub_7AE30( a1,  a2,  (uint64_t)v25,  &qword_2858D0,  a3,  &OBJC_CLASS___INAddMediaIntent_ptr,  (uint64_t)&protocol witness table for INAddMediaIntent,  (uint64_t (*)(uint64_t))sub_1F5C38,  &qword_283858,  (id *)&static AddMedia.intentHandler,  (uint64_t)sub_3D240);
  swift_bridgeObjectRelease(v17);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

uint64_t _s23AudioFlowDelegatePlugin14SearchForMediaO20HandleIntentStrategyC011makeSiriKitI7Handler3app6intent0lmB00lmiN0VSg0L13AppResolution0Q0C_So08INSearchfgI0CtF_0@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  sub_6EA8(v26, v27);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v26);
  uint64_t v27 = v11;
  BOOL v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v12;
  void v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v25);
  static DeviceProvider.shared.getter(v13);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  static ExecutorProvider.shared.getter(v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_6EA8(v19, v20);
  dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v17 = v16;
  sub_6C3C(v19);
  sub_7AE30( a1,  a2,  (uint64_t)v25,  &qword_2844C8,  a3,  &OBJC_CLASS___INSearchForMediaIntent_ptr,  (uint64_t)&protocol witness table for INSearchForMediaIntent,  (uint64_t (*)(uint64_t))sub_1F5C38,  &qword_283940,  (id *)&static SearchForMedia.intentHandler,  (uint64_t)sub_18334C);
  swift_bridgeObjectRelease(v17);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

uint64_t _s23AudioFlowDelegatePlugin019UpdateMediaAffinityB8StrategyC24makeSiriKitIntentHandler3app6intent0jkB00jklM0VSg0J13AppResolution0P0C_So08INUpdatefgL0CtF_0@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  sub_6EA8(v26, v27);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v26);
  uint64_t v27 = v11;
  BOOL v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v12;
  void v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v25);
  static DeviceProvider.shared.getter(v13);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  static ExecutorProvider.shared.getter(v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_6EA8(v19, v20);
  dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v17 = v16;
  sub_6C3C(v19);
  sub_7AE30( a1,  a2,  (uint64_t)v25,  (unint64_t *)&qword_284CA8,  a3,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr,  (uint64_t)&protocol witness table for INUpdateMediaAffinityIntent,  sub_1F5C38,  &qword_2838E8,  (id *)&static UpdateMediaAffinity.intentHandler,  (uint64_t)sub_1482E8);
  swift_bridgeObjectRelease(v17);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

uint64_t _s23AudioFlowDelegatePlugin9PlayMediaO20HandleIntentStrategyC011makeSiriKitH7Handler3app6intent0klB00klhM0VSg0K13AppResolution0P0C_So06INPlayfH0CtF_0@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v28;
  uint64_t v7 = v29;
  sub_6EA8(v27, v28);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v27);
  uint64_t v28 = v11;
  uint64_t v29 = &protocol witness table for AirPlayRouteProvider;
  v27[0] = v12;
  void v26[3] = type metadata accessor for DeviceProvider(0LL);
  v26[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v26);
  static DeviceProvider.shared.getter(v13);
  uint64_t v24 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v25 = &protocol witness table for MediaRemoteAPIProvider;
  v23[0] = static MediaRemoteAPIProvider.shared.getter(v24);
  static ExecutorProvider.shared.getter(v20);
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  sub_6EA8(v20, v21);
  uint64_t v16 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v18 = v17;
  sub_6C3C(v20);
  sub_7B84C(a1, a2, v27, (uint64_t)v26, (uint64_t)v23, v16, v18, a3);
  swift_bridgeObjectRelease(v18);
  sub_6C3C(v23);
  sub_6C3C(v26);
  return sub_6C3C(v27);
}

uint64_t sub_75FF0(uint64_t a1, uint64_t a2)
{
  return sub_76008( a1,  a2,  (void (*)(uint64_t, uint64_t, void *, void *, void *, uint64_t, uint64_t))sub_7D098);
}

uint64_t sub_75FFC(uint64_t a1, uint64_t a2)
{
  return sub_76008( a1,  a2,  (void (*)(uint64_t, uint64_t, void *, void *, void *, uint64_t, uint64_t))sub_7E8FC);
}

uint64_t sub_76008( uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, void *, void *, void *, uint64_t, uint64_t))
{
  uint64_t v6 = v28;
  uint64_t v7 = v29;
  sub_6EA8(v27, v28);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v27);
  uint64_t v28 = v11;
  uint64_t v29 = &protocol witness table for AirPlayRouteProvider;
  v27[0] = v12;
  void v26[3] = type metadata accessor for DeviceProvider(0LL);
  v26[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v26);
  static DeviceProvider.shared.getter(v13);
  uint64_t v24 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v25 = &protocol witness table for MediaRemoteAPIProvider;
  v23[0] = static MediaRemoteAPIProvider.shared.getter(v24);
  static ExecutorProvider.shared.getter(v20);
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  sub_6EA8(v20, v21);
  uint64_t v16 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v18 = v17;
  sub_6C3C(v20);
  a3(a1, a2, v27, v26, v23, v16, v18);
  swift_bridgeObjectRelease(v18);
  sub_6C3C(v23);
  sub_6C3C(v26);
  return sub_6C3C(v27);
}

uint64_t sub_76194@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  sub_6EA8(v26, v27);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v26);
  uint64_t v27 = v11;
  uint64_t v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v12;
  void v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v25);
  static DeviceProvider.shared.getter(v13);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  static ExecutorProvider.shared.getter(v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_6EA8(v19, v20);
  dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v17 = v16;
  sub_6C3C(v19);
  sub_7AE30( a1,  a2,  (uint64_t)v25,  (unint64_t *)&qword_284CA8,  a3,  &OBJC_CLASS___INUpdateMediaAffinityIntent_ptr,  (uint64_t)&protocol witness table for INUpdateMediaAffinityIntent,  sub_1F5C38,  &qword_2838E8,  (id *)&static UpdateMediaAffinity.intentHandler,  (uint64_t)sub_1482E8);
  swift_bridgeObjectRelease(v17);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

uint64_t sub_76360@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  sub_6EA8(v26, v27);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v26);
  uint64_t v27 = v11;
  uint64_t v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v12;
  void v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v25);
  static DeviceProvider.shared.getter(v13);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  static ExecutorProvider.shared.getter(v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_6EA8(v19, v20);
  dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v17 = v16;
  sub_6C3C(v19);
  sub_7AE30( a1,  a2,  (uint64_t)v25,  &qword_2844C8,  a3,  &OBJC_CLASS___INSearchForMediaIntent_ptr,  (uint64_t)&protocol witness table for INSearchForMediaIntent,  sub_1F5C38,  &qword_283940,  (id *)&static SearchForMedia.intentHandler,  (uint64_t)sub_18334C);
  swift_bridgeObjectRelease(v17);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

uint64_t sub_7652C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  sub_6EA8(v26, v27);
  uint64_t v8 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for AirPlayRouteProvider(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = AirPlayRouteProvider.init(refId:)(v8, v10);
  sub_6C3C(v26);
  uint64_t v27 = v11;
  uint64_t v28 = &protocol witness table for AirPlayRouteProvider;
  v26[0] = v12;
  void v25[3] = type metadata accessor for DeviceProvider(0LL);
  v25[4] = &protocol witness table for DeviceProvider;
  uint64_t v13 = sub_10974(v25);
  static DeviceProvider.shared.getter(v13);
  uint64_t v23 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v24 = &protocol witness table for MediaRemoteAPIProvider;
  v22[0] = static MediaRemoteAPIProvider.shared.getter(v23);
  static ExecutorProvider.shared.getter(v19);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_6EA8(v19, v20);
  dispatch thunk of ExecutorProviding.currentRequestId.getter(v14, v15);
  uint64_t v17 = v16;
  sub_6C3C(v19);
  sub_7AE30( a1,  a2,  (uint64_t)v25,  &qword_2858D0,  a3,  &OBJC_CLASS___INAddMediaIntent_ptr,  (uint64_t)&protocol witness table for INAddMediaIntent,  sub_1F5C38,  &qword_283858,  (id *)&static AddMedia.intentHandler,  (uint64_t)sub_3D240);
  swift_bridgeObjectRelease(v17);
  sub_6C3C(v22);
  sub_6C3C(v25);
  return sub_6C3C(v26);
}

void AddMedia.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5[6];
  uint64_t v12 = v5[7];
  sub_6EA8(v5 + 3, v11);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v11, v12) & 1) != 0) {
    sub_767B4(a1, a2, a3, a4, a5);
  }
  else {
    sub_787D4(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_767B4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v44 = a3;
  uint64_t v45 = a5;
  uint64_t v43 = a4;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v14 = swift_retain_n(a1, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v42 = a2;
    uint64_t v18 = v17;
    uint64_t v40 = swift_slowAlloc(64LL, -1LL);
    uint64_t v46 = a1;
    uint64_t v47 = v40;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v19 = type metadata accessor for App(0LL);
    uint64_t v41 = v10;
    uint64_t v20 = v19;
    uint64_t v21 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter(v20, v21);
    unint64_t v24 = v23;
    uint64_t v46 = sub_6978(v22, v23, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_release_n(a1, 2LL);
    uint64_t v25 = swift_bridgeObjectRelease(v24);
    *(_WORD *)(v18 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v26 = static Insights.responseFramework.getter(v25);
    unint64_t v28 = v27;
    uint64_t v46 = sub_6978(v26, v27, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    swift_bridgeObjectRelease(v28);
    _os_log_impl( &dword_0,  v15,  v16,  "HandleIntentStrategy#makeIntentHandledResponseUsingRF for app: %s using RF 2.0 %{public}s",  (uint8_t *)v18,  0x16u);
    uint64_t v29 = v40;
    swift_arrayDestroy(v40, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1LL, -1LL);
    uint64_t v30 = v18;
    a2 = v42;
    swift_slowDealloc(v30, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v9);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  uint64_t v31 = v6[26];
  uint64_t v32 = v6[27];
  sub_6EA8(v6 + 23, v31);
  uint64_t v33 = (void *)swift_allocObject(&unk_26CB78, 64LL, 7LL);
  uint64_t v34 = v43;
  char v35 = v44;
  _OWORD v33[2] = v6;
  v33[3] = v35;
  uint64_t v36 = v45;
  v33[4] = v34;
  v33[5] = v36;
  v33[6] = a1;
  v33[7] = a2;
  swift_retain(a1);
  swift_retain(v6);
  id v37 = v35;
  swift_retain(v36);
  id v38 = a2;
  dispatch thunk of NowPlayingProviding.app(completion:)(sub_7F6B0, v33, v31, v32);
  return swift_release(v33);
}

uint64_t sub_76AC4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void (*a10)(void), uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v94 = a10;
  uint64_t v95 = a11;
  id v93 = a9;
  uint64_t v16 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v16);
  uint64_t v91 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v18);
  uint64_t v90 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v20);
  uint64_t v89 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v92 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v87 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v85 = *(void *)(v23 - 8);
  uint64_t v86 = v23;
  __chkstk_darwin(v23);
  uint64_t v84 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v82 = *(void *)(v25 - 8);
  uint64_t v83 = v25;
  __chkstk_darwin(v25);
  uint64_t v81 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  unint64_t v28 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for Logger(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v77 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a4) {
    goto LABEL_14;
  }
  uint64_t v34 = static BundleIdentifiers.tvAppBundleId.getter(v31);
  uint64_t v36 = v35;
  if (v34 == a3 && v35 == a4)
  {
    swift_bridgeObjectRelease(v35);
  }

  else
  {
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4);
    swift_bridgeObjectRelease(v36);
    if ((v37 & 1) == 0)
    {
LABEL_14:
      uint64_t v71 = (void *)swift_allocObject(&unk_26CBA0, 64LL, 7LL);
      uint64_t v71[2] = a8;
      void v71[3] = a13;
      uint64_t v72 = v94;
      uint64_t v73 = v95;
      v71[4] = a12;
      void v71[5] = v72;
      id v74 = v93;
      v71[6] = v73;
      v71[7] = v74;
      swift_retain(a8);
      id v75 = a13;
      swift_retain(a12);
      swift_retain(v73);
      id v76 = v74;
      sub_B67F4(a12, v75, (uint64_t)sub_7F728, (uint64_t)v71);
      return swift_release(v71);
    }
  }

  uint64_t v38 = a8[6];
  uint64_t v39 = a8[7];
  sub_6EA8(a8 + 3, v38);
  if ((dispatch thunk of FeatureFlagProviding.isCapellaSupportedAndEnabled.getter(v38, v39) & 1) == 0) {
    goto LABEL_14;
  }
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v40 = sub_6960(v29, (uint64_t)qword_2969C8);
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v40, v29);
  uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_0, v42, v43, "#capella supressing siri response", v44, 2u);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
  uint64_t v45 = v79;
  uint64_t v46 = v80;
  (*(void (**)(char *, void, uint64_t))(v79 + 104))( v28,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v80);
  Class v48 = v81;
  uint64_t v47 = v82;
  uint64_t v49 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))( v81,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v83);
  uint64_t v50 = (char *)[v93 code];
  uint64_t v51 = (unsigned int *)&enum case for AdditionalMetricsDescription.StatusReason.success(_:);
  if (v50 != (_BYTE *)&dword_0 + 3) {
    uint64_t v51 = (unsigned int *)&enum case for AdditionalMetricsDescription.StatusReason.unknown(_:);
  }
  uint64_t v53 = v84;
  uint64_t v52 = v85;
  uint64_t v54 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, *v51, v86);
  id v93 = (id)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v28,  v48,  v53,  0LL,  1LL);
  uint64_t v78 = v55;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v46);
  uint64_t v56 = a8[11];
  uint64_t v86 = a8[12];
  sub_6EA8(a8 + 8, v56);
  uint64_t v58 = v87;
  uint64_t v57 = v88;
  (*(void (**)(char *, void, uint64_t))(v92 + 104))( v87,  enum case for TypeOfIntent.capellaAddMedia(_:),  v88);
  uint64_t v59 = enum case for ActivityType.completed(_:);
  uint64_t v60 = type metadata accessor for ActivityType(0LL);
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 104))(v89, v59, v60);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v62, 0LL, 1LL, v60);
  uint64_t v63 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v64 = (uint64_t)v90;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56LL))(v90, 1LL, 1LL, v63);
  uint64_t v65 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v66 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v68 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 104))(v91, v65, v66);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v68, 0LL, 1LL, v66);
  uint64_t v69 = v78;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v58,  v62,  v64,  v68,  v93,  v78,  v56,  v86);
  swift_bridgeObjectRelease(v69);
  sub_1F6CC(v68, &qword_2845A0);
  sub_1F6CC(v64, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v62, &qword_2845A8);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v57);
  type metadata accessor for EmptyOutput(0LL);
  static EmptyOutput.instance.getter(v96);
  char v97 = 0;
  v94(v96);
  return sub_1F6CC((uint64_t)v96, (uint64_t *)&unk_286C60);
}

uint64_t sub_77170( void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6, void *a7)
{
  uint64_t v55 = a7;
  uint64_t v61 = a6;
  uint64_t v62 = (void *)a4;
  uint64_t v58 = a5;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v57 = a1;
  uint64_t v7 = sub_6C5C(&qword_289340);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v53 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v56 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v52 = (char *)&v51 - v10;
  uint64_t v54 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v57, (uint64_t)v20, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    uint64_t v21 = *v20;
    uint64_t v22 = v14;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))( v17,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v14);
    uint64_t v23 = v11;
    uint64_t v24 = v54;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v54);
    swift_getErrorValue(v21, v64, v63);
    uint64_t v25 = Error.localizedDescription.getter(v63[1], v63[2]);
    uint64_t v27 = v26;
    uint64_t v28 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v17,  v13,  v25,  v26,  1LL,  0LL);
    uint64_t v30 = v29;
    swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
    sub_78238(v21, v28, v30, v60, (uint64_t)v62, v58, v61);
    swift_bridgeObjectRelease(v30);
    return swift_errorRelease(v21);
  }

  else
  {
    uint64_t v32 = *(int *)(v7 + 48);
    uint64_t v33 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t *, uint64_t))(v34 + 32))(v52, v20, v33);
    uint64_t v36 = *(void **)((char *)v20 + v32);
    *(void *)(v35 + v3sub_6C3C(v0 + 2) = v36;
    uint64_t v37 = v59;
    uint64_t v57 = sub_6EA8((void *)(v59 + 144), *(void *)(v59 + 168));
    uint64_t v38 = *(int *)(v7 + 48);
    uint64_t v39 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v56, v35, v33);
    *(void *)(v39 + v3sub_6C3C(v0 + 8) = v36;
    uint64_t v40 = *(unsigned __int8 *)(v53 + 80);
    uint64_t v41 = (v40 + 64) & ~v40;
    uint64_t v42 = (void *)swift_allocObject(&unk_26CBC8, v41 + v8, v40 | 7);
    uint64_t v44 = v60;
    uint64_t v43 = v61;
    v42[2] = v37;
    v42[3] = v44;
    uint64_t v45 = v62;
    uint64_t v46 = v58;
    v42[4] = v62;
    v42[5] = v46;
    uint64_t v47 = v55;
    v42[6] = v43;
    v42[7] = v47;
    sub_45F6C(v39, (uint64_t)v42 + v41, &qword_289340);
    id v48 = v36;
    swift_retain(v37);
    id v49 = v44;
    swift_retain(v45);
    swift_retain(v43);
    id v50 = v47;
    sub_E1188(v45, (void (*)(char *))sub_7F7FC, (uint64_t)v42);
    swift_release(v42);
    return sub_1F6CC(v35, &qword_289340);
  }

void sub_774FC( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v96 = a8;
  uint64_t v97 = a4;
  uint64_t v91 = a7;
  unint64_t v102 = (char *)a1;
  uint64_t v103 = a6;
  uint64_t v98 = a5;
  uint64_t v100 = a2;
  unint64_t v101 = a3;
  uint64_t v8 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v8);
  uint64_t v94 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v95);
  uint64_t v87 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  id v93 = (char *)&v85 - v12;
  uint64_t v13 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v13);
  uint64_t v92 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v89 = *(void *)(v15 - 8);
  uint64_t v90 = v15;
  __chkstk_darwin(v15);
  uint64_t v88 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v99 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v23 = *(v99 - 1);
  __chkstk_darwin(v99);
  uint64_t v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_6C5C(&qword_2858F8);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v102, (uint64_t)v32, &qword_2858F8);
  if (swift_getEnumCaseMultiPayload(v32, v30) == 1)
  {
    uint64_t v33 = *v32;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))( v29,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v26);
    uint64_t v34 = v99;
    (*(void (**)(char *, void, void *))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v99);
    swift_getErrorValue(v33, v105, v104);
    uint64_t v35 = Error.localizedDescription.getter(v104[1], v104[2]);
    uint64_t v37 = v36;
    uint64_t v38 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v29,  v25,  v35,  v36,  2LL,  0LL);
    uint64_t v40 = v39;
    swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, void *))(v23 + 8))(v25, v34);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    sub_78238(v33, v38, v40, v101, v97, v98, v103);
    swift_bridgeObjectRelease(v40);
    swift_errorRelease(v33);
    return;
  }

  uint64_t v86 = v22;
  sub_45F6C((uint64_t)v32, (uint64_t)v22, &qword_284170);
  unint64_t v102 = v19;
  uint64_t v41 = v101;
  sub_1F4EFC((uint64_t)v101, (uint64_t)v19);
  (*(void (**)(char *, void, uint64_t))(v27 + 104))( v29,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v26);
  uint64_t v42 = v99;
  (*(void (**)(char *, void, void *))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v99);
  uint64_t v44 = v88;
  uint64_t v43 = v89;
  uint64_t v45 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))( v88,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v90);
  uint64_t v85 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v29, v25, v44, 0LL, 1LL);
  uint64_t v91 = v46;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  (*(void (**)(char *, void *))(v23 + 8))(v25, v42);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  uint64_t v47 = *(void *)(v100 + 88);
  uint64_t v90 = *(void *)(v100 + 96);
  uint64_t v99 = sub_6EA8((void *)(v100 + 64), v47);
  uint64_t v48 = enum case for ActivityType.completed(_:);
  uint64_t v49 = type metadata accessor for ActivityType(0LL);
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v92, v48, v49);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0LL, 1LL, v49);
  uint64_t v52 = *(int *)(v95 + 48);
  uint64_t v53 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = v93;
  uint64_t v56 = v96;
  uint64_t v100 = *(void *)(v54 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v100)(v93, v96, v53);
  uint64_t v57 = *(void **)(v56 + v52);
  *(void *)&v55[v52] = v57;
  uint64_t v58 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v59 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v94, v58, v59);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v61, 0LL, 1LL, v59);
  id v62 = v57;
  id v63 = [v41 mediaItems];
  if (!v63)
  {
    id v70 = 0LL;
    uint64_t v67 = v103;
    goto LABEL_16;
  }

  uint64_t v64 = v63;
  uint64_t v65 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

  uint64_t v67 = v103;
  if ((unint64_t)v66 >> 62)
  {
    if (v66 < 0) {
      uint64_t v71 = v66;
    }
    else {
      uint64_t v71 = v66 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v66);
    uint64_t v67 = v103;
    uint64_t v72 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v66);
    if (v72) {
      goto LABEL_6;
    }
LABEL_15:
    swift_bridgeObjectRelease(v66);
    id v70 = 0LL;
    goto LABEL_16;
  }

LABEL_6:
  if ((v66 & 0xC000000000000001LL) != 0)
  {
    id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v66);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v66 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return;
    }

    id v68 = *(id *)(v66 + 32);
  }

  uint64_t v69 = v68;
  swift_bridgeObjectRelease(v66);
  id v70 = [v69 type];

LABEL_16:
  uint64_t v73 = v41;
  uint64_t v74 = v91;
  uint64_t v75 = (uint64_t)v92;
  uint64_t v76 = (uint64_t)v94;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:dialogResult:statusReason:description:mediaItemType:)( v97,  v73,  v92,  v62,  v94,  v85,  v91,  v70,  0,  v47,  v90);

  swift_bridgeObjectRelease(v74);
  sub_1F6CC(v76, &qword_2845A0);
  sub_1F6CC(v75, &qword_2845A8);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v54 + 8);
  v77(v93, v53);
  uint64_t v78 = v96;
  uint64_t v79 = *(int *)(v95 + 48);
  uint64_t v80 = (uint64_t)v87;
  ((void (*)(char *, uint64_t, uint64_t))v100)(v87, v96, v53);
  uint64_t v81 = *(void **)(v78 + v52);
  *(void *)(v80 + v7sub_6C3C(v0 + 9) = v81;
  id v82 = v81;
  uint64_t v83 = (uint64_t)v86;
  uint64_t v84 = (uint64_t)v102;
  sub_7F848((uint64_t)v86, v80, v82, (uint64_t)v102, (uint64_t)v98, v67);

  sub_1F6CC(v84, (uint64_t *)&unk_286C50);
  sub_1F6CC(v83, &qword_284170);
  v77((char *)v80, v53);
}

  uint64_t v58 = (uint64_t)v45;
  if ((v54 & 0xC000000000000001LL) != 0)
  {
    uint64_t v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v54);
    uint64_t v59 = (uint64_t)v75;
    goto LABEL_9;
  }

  uint64_t v59 = (uint64_t)v75;
  if (*(void *)((char *)&dword_10 + (v54 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v60 = *(id *)(v54 + 32);
LABEL_9:
    swift_bridgeObjectRelease(v54);
    uint64_t v61 = [v60 type];

LABEL_17:
    uint64_t v64 = v70;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v56,  v50,  v59,  v58,  v57,  v69,  v70,  v61,  0,  v39,  v67);
    swift_bridgeObjectRelease(v64);
    sub_1F6CC(v57, &qword_2845A0);
    sub_1F6CC(v58, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v59, &qword_2845A8);
    uint64_t v65 = v71;
    v79[0] = v71;
    uint64_t v80 = 1;
    swift_errorRetain(v71);
    v55(v79);
    sub_25404(v65, 1);
    sub_1F6CC((uint64_t)v79, (uint64_t *)&unk_286C60);
    return;
  }

  __break(1u);
}

  swift_bridgeObjectRetain(a6);
  sub_A7108(a1, a5, a6);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease(a6);
  if ((v24 & 1) == 0)
  {
    uint64_t v48 = (void *)(a7 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_installedAppProvider);
    uint64_t v49 = *(void *)(a7 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18SiriForAirPlayFlow_installedAppProvider + 24);
    uint64_t v50 = v48[4];
    sub_6EA8(v48, v49);
    uint64_t v51 = (void *)swift_allocObject(&unk_26D7A8, 48LL, 7LL);
    uint64_t v52 = a3;
    uint64_t v53 = v51;
    v51[2] = a5;
    v51[3] = a6;
    uint64_t v54 = v61;
    v51[4] = v52;
    v51[5] = v54;
    swift_bridgeObjectRetain(a6);
    swift_retain(v54);
    InstalledAppProviding.installedApps(for:sharedUserId:useCache:completion:)( 0LL,  0LL,  0LL,  1LL,  sub_A7604,  v53,  v49,  v50);
    return swift_release(v53);
  }

  uint64_t v60 = (void (*)(uint64_t, char *))a3;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = sub_6960(v15, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v21, v25, v15);
  swift_bridgeObjectRetain_n(a6, 2LL);
  uint64_t v26 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  uint64_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc(22LL, -1LL);
    uint64_t v59 = v16;
    uint64_t v30 = v29;
    uint64_t v58 = swift_slowAlloc(64LL, -1LL);
    v63[0] = v58;
    *(_DWORD *)uint64_t v30 = 136315394;
    swift_bridgeObjectRetain(a6);
    id v62 = sub_6978(a5, a6, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63);
    swift_bridgeObjectRelease_n(a6, 3LL);
    *(_WORD *)(v30 + 1sub_6C3C(v0 + 2) = 2080;
    uint64_t v57 = v30 + 14;
    uint64_t v31 = sub_1641C(0LL, &qword_286648, &OBJC_CLASS___MSServiceAppInfo_ptr);
    uint64_t v32 = sub_A70B0();
    uint64_t v33 = swift_bridgeObjectRetain(a1);
    uint64_t v34 = Set.description.getter(v33, v31, v32);
    uint64_t v36 = v35;
    swift_bridgeObjectRelease(a1);
    id v62 = sub_6978(v34, v36, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63);
    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease(v36);
    _os_log_impl( &dword_0,  v27,  v28,  "SiriForAirPlayFlow#execute This request is for an app supporting Bolt, routing to local execution. BundleIdentifie r: %s, full list of services: %s",  (uint8_t *)v30,  0x16u);
    uint64_t v37 = v58;
    swift_arrayDestroy(v58, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v30, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v21, v15);
  }

  else
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease_n(a6, 2LL);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }

  uint64_t v56 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56LL))(v14, 1LL, 1LL, v56);
  v60(1LL, v14);
  return sub_1F6CC((uint64_t)v14, &qword_286620);
}

    if ((v13 & 0xC000000000000001LL) != 0)
    {
      uint64_t v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v13);
    }

    else
    {
      uint64_t v14 = *(id *)(v13 + 32);
    }

    uint64_t v15 = v14;
    swift_bridgeObjectRelease(v13);
    uint64_t v16 = [v15 privateMediaItemValueData];

    if (!v16) {
      goto LABEL_27;
    }
    uint64_t v17 = [v16 internalSignals];

    if (!v17) {
      goto LABEL_27;
    }
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String);

    uint64_t v18 = *(void *)(v13 + 16);
    if (!v18) {
      goto LABEL_32;
    }
    uint64_t v19 = *(void *)(v13 + 32);
    uint64_t v20 = *(void *)(v13 + 40);
    uint64_t v21 = v19 == v9 && v20 == v8;
    if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20) & 1) != 0)
    {
LABEL_38:
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v13);
LABEL_39:
      swift_bridgeObjectRelease(a1);
      return;
    }

    if (v18 != 1) {
      break;
    }
LABEL_26:
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v13);
    uint64_t v4 = v31;
    a2 = v32;
    uint64_t v6 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
LABEL_34:
    if (++v5 == v2) {
      goto LABEL_39;
    }
  }

  uint64_t v22 = (uint64_t *)(v13 + 56);
  uint64_t v23 = 1LL;
  while (1)
  {
    uint64_t v24 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    uint64_t v25 = *(v22 - 1);
    uint64_t v26 = *v22;
    uint64_t v27 = v25 == v9 && v26 == v8;
    if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v26) & 1) != 0) {
      goto LABEL_38;
    }
    v22 += 2;
    ++v23;
    if (v24 == v18) {
      goto LABEL_26;
    }
  }

  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_77C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a2, (uint64_t)v14, (uint64_t *)&unk_286C50);
  uint64_t v15 = OutputGenerationManifest.nlContextUpdate.setter(v14);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  return OutputGenerationManifest.preserveResultSpaceIfPossible.setter(1LL);
}

uint64_t sub_77E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[9] = a3;
  void v4[10] = a4;
  void v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_6C5C(&qword_289340);
  v4[11] = v5;
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_77E9C, 0LL, 0LL);
}

uint64_t sub_77E9C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v0[13] = ResponseFactory.init()();
  uint64_t v6 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v6;
  v0[6] = sub_6DF0( (unint64_t *)&qword_286CA0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v7 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(v7, v4, v6);
  uint64_t v8 = sub_6C5C(&qword_287980);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + sub_6C3C(v0 + 16) = xmmword_214980;
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v3, v11);
  uint64_t v14 = *(void **)(v3 + v10);
  *(void *)(v1 + vsub_6C3C(v0 + 10) = v14;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v14;
  specialized Array._endMutation()(v13);
  v0[14] = v9;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  id v16 = v14;
  v15(v1, v11);
  v0[15] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_41B78;
  return ((uint64_t (*)(void, void *, uint64_t, void))v19)(v0[7], v0 + 2, v9, v0[10]);
}

uint64_t sub_78030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_6C5C(&qword_289340);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_78094, 0LL, 0LL);
}

uint64_t sub_78094()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v0[7] = ResponseFactory.init()();
  uint64_t v5 = sub_6C5C(&qword_287980);
  uint64_t v6 = swift_allocObject(v5, 40LL, 7LL);
  *(_OWORD *)(v6 + sub_6C3C(v0 + 16) = xmmword_214980;
  uint64_t v7 = *(int *)(v2 + 48);
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v1, v3, v8);
  uint64_t v11 = *(void **)(v3 + v7);
  *(void *)(v1 + vsub_6C3C(v0 + 7) = v11;
  *(void *)(v6 + 3sub_6C3C(v0 + 2) = v11;
  specialized Array._endMutation()(v10);
  v0[8] = v6;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  id v13 = v11;
  v12(v1, v8);
  v0[9] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_781C8;
  return ((uint64_t (*)(void, uint64_t, void))v16)(v0[2], v6, v0[4]);
}

uint64_t sub_781C8()
{
  uint64_t v1 = *(void *)(*v0 + 64);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v5 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 72));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_78238( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v67 = a7;
  uint64_t v63 = a5;
  uint64_t v64 = a2;
  id v69 = a4;
  uint64_t v65 = a3;
  uint64_t v11 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v11);
  id v68 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v13);
  uint64_t v71 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v15);
  id v70 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v17, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, v17);
  swift_errorRetain(a1);
  uint64_t v22 = swift_errorRetain(a1);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.error.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v66 = a1;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc(22LL, -1LL);
    uint64_t v27 = swift_slowAlloc(64LL, -1LL);
    id v62 = a6;
    uint64_t v60 = v27;
    v75[0] = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v61 = v7;
    swift_getErrorValue(a1, v74, v73);
    uint64_t v28 = Error.localizedDescription.getter(v73[1], v73[2]);
    unint64_t v30 = v29;
    uint64_t v72 = sub_6978(v28, v29, v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(a1);
    uint64_t v31 = swift_errorRelease(a1);
    *(_WORD *)(v26 + 1sub_6C3C(v0 + 2) = 2082;
    uint64_t v32 = static Insights.responseFramework.getter(v31);
    unint64_t v34 = v33;
    uint64_t v72 = sub_6978(v32, v33, v75);
    uint64_t v8 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
    swift_bridgeObjectRelease(v34);
    _os_log_impl( &dword_0,  v23,  v24,  "AddMedia+HandleIntentStrategy#handleFailure with error: %s %{public}s",  (uint8_t *)v26,  0x16u);
    uint64_t v35 = v60;
    swift_arrayDestroy(v60, 2LL, (char *)&type metadata for Any + 8);
    a6 = v62;
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v36 = v8[11];
  uint64_t v37 = v8[12];
  sub_6EA8(v8 + 8, v36);
  uint64_t v38 = enum case for ActivityType.failed(_:);
  uint64_t v39 = type metadata accessor for ActivityType(0LL);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v70, v38, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v41, 0LL, 1LL, v39);
  uint64_t v42 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v71, 1LL, 1LL, v42);
  uint64_t v43 = enum case for SiriKitReliabilityCodes.renderingError(_:);
  uint64_t v44 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v68, v43, v44);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0LL, 1LL, v44);
  id v47 = v69;
  id v48 = [v69 mediaItems];
  if (!v48) {
    goto LABEL_18;
  }
  uint64_t v49 = v48;
  uint64_t v50 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

  if (!((unint64_t)v51 >> 62))
  {
    goto LABEL_17;
  }

  if (v51 < 0) {
    uint64_t v55 = v51;
  }
  else {
    uint64_t v55 = v51 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v51);
  uint64_t v56 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease(v51);
  if (!v56)
  {
LABEL_17:
    swift_bridgeObjectRelease(v51);
LABEL_18:
    id v54 = 0LL;
    goto LABEL_19;
  }

void sub_787D4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v37 = a2;
  uint64_t v38 = a4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v15 = swift_retain_n(a1, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = v11;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v5;
    uint64_t v33 = v20;
    uint64_t v39 = a1;
    uint64_t v40 = v20;
    uint64_t v36 = a5;
    *(_DWORD *)uint64_t v19 = 136315138;
    v32[1] = v19 + 4;
    uint64_t v21 = a3;
    uint64_t v22 = type metadata accessor for App(0LL);
    uint64_t v23 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v24 = v22;
    a3 = v21;
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v24, v23);
    unint64_t v27 = v26;
    uint64_t v39 = sub_6978(v25, v26, &v40);
    a5 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v16,  v17,  "AddMedia+HandleIntentStrategy#makeIntentHandledResponseUsingDialogProvider for app: %s",  v19,  0xCu);
    uint64_t v28 = v33;
    swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v6 = v35;
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }

  uint64_t v29 = *(void *)(v6 + 264);
  swift_retain(a1);
  swift_retain(v6);
  id v30 = v37;
  swift_retain(a5);
  id v31 = a3;
  sub_2037AC(a1, v29, v6, a1, v30, v38, a5, v31);
  swift_release(v6);
  swift_release(a1);

  swift_release(a5);
}

void sub_78AB4( uint64_t a1, char a2, void *a3, uint64_t a4, void *a5, void (*a6)(void), uint64_t a7, void *a8)
{
  uint64_t v72 = a8;
  uint64_t v77 = a6;
  uint64_t v78 = a7;
  id v76 = a5;
  uint64_t v12 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v12);
  uint64_t v74 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v14);
  uint64_t v73 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v16);
  uint64_t v75 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a2 & 1) == 0)
  {
    unint64_t v26 = (void *)swift_allocObject(&unk_26CC40, 72LL, 7LL);
    v26[2] = a3;
    void v26[3] = a4;
    id v28 = v76;
    unint64_t v27 = v77;
    v26[4] = v76;
    void v26[5] = v27;
    uint64_t v29 = v78;
    id v30 = v72;
    v26[6] = v78;
    v26[7] = v30;
    v26[8] = a1;
    sub_24FEC(a1, 0);
    swift_retain(a3);
    swift_retain(a4);
    id v31 = v28;
    swift_retain(v29);
    id v32 = v30;
    sub_B67F4(a4, v31, (uint64_t)sub_809F0, (uint64_t)v26);
    swift_release(v26);
    return;
  }

  uint64_t v72 = (void *)a4;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))( v25,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v22);
  (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for AdditionalMetricsDescription.SourceFunction.dlgProvHandled(_:),  v18);
  swift_getErrorValue(a1, v82, v81);
  uint64_t v33 = v81[1];
  uint64_t v34 = v81[2];
  uint64_t v71 = a1;
  swift_errorRetain(a1);
  uint64_t v35 = Error.localizedDescription.getter(v33, v34);
  uint64_t v37 = v36;
  uint64_t v69 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v25,  v21,  v35,  v36,  1LL,  0LL);
  uint64_t v70 = v38;
  swift_bridgeObjectRelease(v37);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v39 = a3[11];
  uint64_t v67 = a3[12];
  id v68 = sub_6EA8(a3 + 8, v39);
  uint64_t v40 = enum case for ActivityType.failed(_:);
  uint64_t v41 = type metadata accessor for ActivityType(0LL);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v75, v40, v41);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0LL, 1LL, v41);
  uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v45 = v73;
  (*(void (**)(void))(*(void *)(v44 - 8) + 56LL))();
  uint64_t v46 = enum case for SiriKitReliabilityCodes.renderingError(_:);
  uint64_t v47 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v74, v46, v47);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v49, 0LL, 1LL, v47);
  id v50 = v76;
  id v51 = [v76 mediaItems];
  if (!v51)
  {
    id v61 = 0LL;
    uint64_t v55 = (void (*)(void *))v77;
    uint64_t v56 = v72;
    uint64_t v57 = (uint64_t)v49;
LABEL_16:
    uint64_t v58 = (uint64_t)v45;
    uint64_t v59 = (uint64_t)v75;
    goto LABEL_17;
  }

  id v52 = v51;
  uint64_t v53 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v52, v53);

  uint64_t v55 = (void (*)(void *))v77;
  uint64_t v56 = v72;
  if (!((unint64_t)v54 >> 62))
  {
    uint64_t v57 = (uint64_t)v49;
    goto LABEL_15;
  }

  if (v54 < 0) {
    uint64_t v62 = v54;
  }
  else {
    uint64_t v62 = v54 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v54);
  uint64_t v63 = _CocoaArrayWrapper.endIndex.getter(v62);
  swift_bridgeObjectRelease(v54);
  uint64_t v57 = (uint64_t)v49;
  if (!v63)
  {
LABEL_15:
    swift_bridgeObjectRelease(v54);
    id v61 = 0LL;
    goto LABEL_16;
  }

void sub_79060( void (*a1)(char *, uint64_t, uint64_t), void *a2, uint64_t a3, void *a4, void (*a5)(__int128 *), uint64_t a6, void *a7, char *a8)
{
  id v126 = a8;
  uint64_t v127 = a7;
  uint64_t v133 = a6;
  uint64_t v134 = a5;
  uint64_t v139 = a1;
  id v140 = a4;
  uint64_t v132 = a3;
  uint64_t v138 = a2;
  uint64_t v122 = type metadata accessor for AceOutput(0LL);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v135 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = sub_6C5C(&qword_289340);
  uint64_t v12 = __chkstk_darwin(v137);
  uint64_t v129 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v128 = (char *)&v119 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  uint64_t v16 = __chkstk_darwin(v15);
  id v131 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v125 = (char *)&v119 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v130 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v123 = (char *)&v119 - v22;
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  uint64_t v24 = __chkstk_darwin(v23);
  id v124 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v119 - v26;
  uint64_t v136 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v28 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  id v30 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t)&v119 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10((uint64_t)v139, v37, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v37, v35) != 1)
  {
    id v68 = (char *)*(int *)(v137 + 48);
    uint64_t v69 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v125 = *(char **)(v69 - 8);
    uint64_t v139 = (void (*)(char *, uint64_t, uint64_t))*((void *)v125 + 4);
    uint64_t v70 = (uint64_t)v128;
    v139(v128, v37, v69);
    uint64_t v123 = v68;
    *(void *)&v68[v70] = *(void *)&v68[v37];
    uint64_t v71 = v127;
    sub_1F4EFC((uint64_t)v140, (uint64_t)v11);
    char v73 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v72);
    uint64_t v145 = 0LL;
    __int128 v143 = 0u;
    __int128 v144 = 0u;
    uint64_t v74 = v126;
    id v126 = v11;
    static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v70,  v73 & 1,  v74,  0LL,  1LL,  v11,  _swiftEmptyArrayStorage,  &v143);
    sub_1F6CC((uint64_t)&v143, &qword_2845C8);
    (*(void (**)(char *, void, uint64_t))(v32 + 104))( v34,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v31);
    uint64_t v75 = v136;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.dlgProvHandled(_:),  v136);
    *(void *)&__int128 v143 = [v71 code];
    uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v78 = v77;
    uint64_t v120 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v34,  v30,  v76,  v77,  0LL,  1LL);
    uint64_t v127 = v79;
    swift_bridgeObjectRelease(v78);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v75);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    char v80 = (void (*)(char *, uint64_t, uint64_t))v138[11];
    uint64_t v136 = v138[12];
    uint64_t v138 = sub_6EA8(v138 + 8, (uint64_t)v80);
    uint64_t v81 = enum case for ActivityType.completed(_:);
    uint64_t v82 = type metadata accessor for ActivityType(0LL);
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 104))(v124, v81, v82);
    uint64_t v85 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
    uint64_t v86 = (uint64_t)v84;
    v85(v84, 0LL, 1LL, v82);
    uint64_t v87 = *(int *)(v137 + 48);
    uint64_t v88 = v125;
    uint64_t v89 = v129;
    (*((void (**)(char *, uint64_t, uint64_t))v125 + 2))(v129, v70, v69);
    uint64_t v90 = v70;
    *(void *)&v89[v87] = *(void *)&v123[v70];
    uint64_t v91 = (uint64_t)v130;
    v139(v130, (uint64_t)v89, v69);
    (*((void (**)(uint64_t, void, uint64_t, uint64_t))v88 + 7))(v91, 0LL, 1LL, v69);
    uint64_t v92 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v93 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v94 = *(void *)(v93 - 8);
    uint64_t v95 = (uint64_t)v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 104))(v131, v92, v93);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v95, 0LL, 1LL, v93);
    id v96 = v140;
    id v97 = [v140 mediaItems];
    if (v97)
    {
      uint64_t v98 = v97;
      uint64_t v139 = v80;
      uint64_t v99 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v100 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, v99);

      if ((unint64_t)v100 >> 62)
      {
        if (v100 < 0) {
          uint64_t v118 = v100;
        }
        else {
          uint64_t v118 = v100 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v100);
        uint64_t v101 = _CocoaArrayWrapper.endIndex.getter(v118);
        swift_bridgeObjectRelease(v100);
      }

      else
      {
        uint64_t v101 = *(void *)((char *)&dword_10 + (v100 & 0xFFFFFFFFFFFFF8LL));
      }

      unint64_t v102 = v135;
      uint64_t v103 = (uint64_t)v126;
      if (v101)
      {
        if ((v100 & 0xC000000000000001LL) != 0)
        {
          id v104 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v100);
        }

        else
        {
          id v104 = *(id *)(v100 + 32);
        }

        unint64_t v105 = v104;
        swift_bridgeObjectRelease(v100);
        id v106 = [v105 type];
      }

      else
      {
        swift_bridgeObjectRelease(v100);
        id v106 = 0LL;
      }

      uint64_t v108 = v90;
      uint64_t v107 = v103;
      char v80 = v139;
    }

    else
    {
      id v106 = 0LL;
      unint64_t v102 = v135;
      uint64_t v107 = (uint64_t)v126;
      uint64_t v108 = v90;
    }

    id v110 = v96;
    uint64_t v111 = v127;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v132,  v110,  v86,  v91,  v95,  v120,  v127,  v106,  0,  v80,  v136);
    swift_bridgeObjectRelease(v111);
    sub_1F6CC(v95, &qword_2845A0);
    sub_1F6CC(v91, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v86, &qword_2845A8);
    uint64_t v112 = v122;
    *((void *)&v144 + 1) = v122;
    uint64_t v145 = &protocol witness table for AceOutput;
    uint64_t v113 = sub_10974(&v143);
    uint64_t v114 = v121;
    (*(void (**)(void *, char *, uint64_t))(v121 + 16))(v113, v102, v112);
    char v146 = 0;
    v134(&v143);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v102, v112);
    sub_1F6CC(v107, (uint64_t *)&unk_286C50);
    sub_1F6CC(v108, &qword_289340);
    goto LABEL_25;
  }

  uint64_t v38 = *(void *)v37;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))( v34,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v31);
  uint64_t v39 = v136;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.dlgProvHandled(_:),  v136);
  swift_getErrorValue(v38, v142, v141);
  uint64_t v40 = Error.localizedDescription.getter(v141[1], v141[2]);
  uint64_t v42 = v41;
  uint64_t v137 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v34,  v30,  v40,  v41,  2LL,  0LL);
  uint64_t v139 = v43;
  swift_bridgeObjectRelease(v42);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v39);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  uint64_t v44 = v138[11];
  uint64_t v45 = v138[12];
  uint64_t v138 = sub_6EA8(v138 + 8, v44);
  uint64_t v46 = enum case for ActivityType.failed(_:);
  uint64_t v47 = type metadata accessor for ActivityType(0LL);
  uint64_t v48 = *(void *)(v47 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v27, v46, v47);
  uint64_t v49 = v27;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v27, 0LL, 1LL, v47);
  uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
  id v51 = v123;
  (*(void (**)(void))(*(void *)(v50 - 8) + 56LL))();
  uint64_t v52 = enum case for SiriKitReliabilityCodes.renderingError(_:);
  uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v125, v52, v53);
  uint64_t v56 = (uint64_t)v55;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
  id v57 = v140;
  id v58 = [v140 mediaItems];
  if (!v58)
  {
    id v67 = 0LL;
    uint64_t v63 = (uint64_t)v51;
    uint64_t v64 = (uint64_t)v49;
    goto LABEL_21;
  }

  uint64_t v59 = v58;
  uint64_t v60 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v60);

  if ((unint64_t)v61 >> 62)
  {
    id v115 = v57;
    if (v61 < 0) {
      uint64_t v116 = v61;
    }
    else {
      uint64_t v116 = v61 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v61);
    uint64_t v117 = v116;
    id v57 = v115;
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter(v117);
    swift_bridgeObjectRelease(v61);
  }

  else
  {
    uint64_t v62 = *(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8LL));
  }

  uint64_t v63 = (uint64_t)v51;
  uint64_t v64 = (uint64_t)v49;
  if (!v62)
  {
    swift_bridgeObjectRelease(v61);
    id v67 = 0LL;
    goto LABEL_21;
  }

  if ((v61 & 0xC000000000000001LL) != 0)
  {
    id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v61);
    goto LABEL_9;
  }

  if (*(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v65 = *(id *)(v61 + 32);
LABEL_9:
    uint64_t v66 = v65;
    swift_bridgeObjectRelease(v61);
    id v67 = [v66 type];

LABEL_21:
    uint64_t v109 = v139;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v132,  v57,  v64,  v63,  v56,  v137,  v139,  v67,  0,  v44,  v45);
    swift_bridgeObjectRelease(v109);
    sub_1F6CC(v56, &qword_2845A0);
    sub_1F6CC(v63, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v64, &qword_2845A8);
    *(void *)&__int128 v143 = v38;
    char v146 = 1;
    swift_errorRetain(v38);
    v134(&v143);
    swift_errorRelease(v38);
LABEL_25:
    sub_1F6CC((uint64_t)&v143, (uint64_t *)&unk_286C60);
    return;
  }

  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t AddMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v12);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "AddMedia+HandleIntentStrategy#makeFailureHandlingIntentResponse", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v40 = *(void *)(v6 + 272);
  uint64_t v20 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v20, v46);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 5) = 0;
  *(_WORD *)(inited + 46) = -5120;
  uint64_t v22 = (void *)0xE000000000000000LL;
  unint64_t v44 = 0LL;
  unint64_t v45 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(39LL);
  swift_bridgeObjectRelease(v45);
  unint64_t v44 = 0xD000000000000022LL;
  unint64_t v45 = 0x800000000021E500LL;
  id v23 = [a3 userActivity];
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = [v23 activityType];

    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v22 = v27;
  }

  else
  {
    uint64_t v26 = 0LL;
  }

  v28._countAndFlagsBits = v26;
  v28._object = v22;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v22);
  v29._countAndFlagsBits = 95LL;
  v29._object = (void *)0xE100000000000000LL;
  String.append(_:)(v29);
  id v43 = [a3 code];
  v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v30._object;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(object);
  unint64_t v32 = v44;
  unint64_t v33 = v45;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v32;
  *(void *)(inited + 56) = v33;
  unint64_t v34 = sub_74D54(inited);
  uint64_t v35 = (void *)swift_allocObject(&unk_26CB00, 64LL, 7LL);
  void v35[2] = v6;
  v35[3] = a1;
  uint64_t v36 = v41;
  uint64_t v37 = v42;
  v35[4] = a2;
  _OWORD v35[5] = v36;
  v35[6] = v37;
  v35[7] = a3;
  swift_retain(v6);
  swift_retain(a1);
  id v38 = a2;
  swift_retain(v37);
  sub_B3B64(v34, a1, v38, a3, (uint64_t)sub_7F4F0, (uint64_t)v35);
  swift_bridgeObjectRelease(v34);
  return swift_release(v35);
}

void sub_79F00( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6, void *a7)
{
  id v124 = a7;
  uint64_t v129 = a5;
  uint64_t v130 = a6;
  uint64_t v135 = a2;
  id v136 = a4;
  uint64_t v128 = a3;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v122 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v134);
  uint64_t v121 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  id v126 = (char *)&v117 - v13;
  __chkstk_darwin(v12);
  uint64_t v137 = (char *)&v117 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v127 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v125 = (char *)&v117 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v132 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v123 = (void (*)(void))((char *)&v117 - v22);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  uint64_t v24 = __chkstk_darwin(v23);
  id v131 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  unint64_t v27 = (char *)&v117 - v26;
  uint64_t v133 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v28 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  Swift::String v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  unint64_t v34 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t *)((char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v37, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v37, v35) == 1)
  {
    uint64_t v38 = *v37;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))( v34,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v31);
    uint64_t v39 = v133;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v133);
    swift_getErrorValue(v38, v141, v140);
    uint64_t v40 = Error.localizedDescription.getter(v140[1], v140[2]);
    uint64_t v42 = v41;
    uint64_t v134 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v34,  v30,  v40,  v41,  1LL,  0LL);
    uint64_t v137 = v43;
    swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v39);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    uint64_t v44 = v135[11];
    uint64_t v133 = v135[12];
    uint64_t v135 = sub_6EA8(v135 + 8, v44);
    uint64_t v45 = enum case for ActivityType.failed(_:);
    uint64_t v46 = type metadata accessor for ActivityType(0LL);
    uint64_t v47 = *(void *)(v46 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v27, v45, v46);
    uint64_t v48 = v27;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v27, 0LL, 1LL, v46);
    uint64_t v49 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v50 = (uint64_t)v123;
    (*(void (**)(void))(*(void *)(v49 - 8) + 56LL))();
    uint64_t v51 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v52 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v125, v51, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v54, 0LL, 1LL, v52);
    id v55 = v136;
    id v56 = [v136 mediaItems];
    if (v56)
    {
      id v57 = v56;
      uint64_t v58 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, v58);

      if ((unint64_t)v59 >> 62)
      {
        if (v59 < 0) {
          uint64_t v100 = v59;
        }
        else {
          uint64_t v100 = v59 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v59);
        uint64_t v101 = _CocoaArrayWrapper.endIndex.getter(v100);
        swift_bridgeObjectRelease(v59);
        uint64_t v60 = (uint64_t)v54;
        if (v101) {
          goto LABEL_5;
        }
      }

      else
      {
        uint64_t v60 = (uint64_t)v54;
        if (*(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFF8LL)))
        {
LABEL_5:
          if ((v59 & 0xC000000000000001LL) != 0)
          {
            id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v59);
            uint64_t v61 = (uint64_t)v48;
            goto LABEL_8;
          }

          if (*(void *)((char *)&dword_10 + (v59 & 0xFFFFFFFFFFFFF8LL)))
          {
            uint64_t v61 = (uint64_t)v48;
            id v62 = *(id *)(v59 + 32);
LABEL_8:
            swift_bridgeObjectRelease(v59);
            id v63 = [v62 type];

LABEL_24:
            unint64_t v102 = v137;
            dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v128,  v55,  v61,  v50,  v60,  v134,  v137,  v63,  0,  v44,  v133);
            swift_bridgeObjectRelease(v102);
            sub_1F6CC(v60, &qword_2845A0);
            sub_1F6CC(v50, (uint64_t *)&unk_286BD0);
            sub_1F6CC(v61, &qword_2845A8);
            v138[0] = v38;
            char v139 = 1;
            swift_errorRetain(v38);
            v129(v138);
            swift_errorRelease(v38);
            sub_1F6CC((uint64_t)v138, (uint64_t *)&unk_286C60);
            return;
          }

          __break(1u);
          goto LABEL_36;
        }
      }

      swift_bridgeObjectRelease(v59);
      id v63 = 0LL;
    }

    else
    {
      id v63 = 0LL;
      uint64_t v60 = (uint64_t)v54;
    }

    uint64_t v61 = (uint64_t)v48;
    goto LABEL_24;
  }

  uint64_t v64 = *(int *)(v134 + 48);
  uint64_t v65 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v123 = *(void (**)(void))(v66 + 32);
  id v67 = v137;
  v123();
  id v68 = *(void **)((char *)v37 + v64);
  *(void *)&v67[v64] = v68;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))( v34,  enum case for AdditionalMetricsDescription.ModuleName.amhis(_:),  v31);
  uint64_t v69 = v133;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))( v30,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v133);
  uint64_t v125 = v68;
  v138[0] = [v124 code];
  uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v72 = v71;
  uint64_t v120 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v34,  v30,  v70,  v71,  2LL,  0LL);
  id v124 = v73;
  swift_bridgeObjectRelease(v72);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v69);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  uint64_t v74 = v135;
  uint64_t v75 = v135[11];
  uint64_t v118 = v135[12];
  uint64_t v119 = sub_6EA8(v135 + 8, v75);
  uint64_t v76 = enum case for ActivityType.failed(_:);
  uint64_t v77 = type metadata accessor for ActivityType(0LL);
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 104))(v131, v76, v77);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v79, 0LL, 1LL, v77);
  uint64_t v80 = v134;
  uint64_t v81 = *(int *)(v134 + 48);
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  uint64_t v83 = v126;
  v82(v126, v137, v65);
  *(void *)&v83[v81] = v125;
  uint64_t v84 = v132;
  ((void (*)(char *, char *, uint64_t))v123)(v132, v83, v65);
  uint64_t v133 = v66;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v84, 0LL, 1LL, v65);
  uint64_t v85 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v86 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v88 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v127, v85, v86);
  uint64_t v89 = (uint64_t)v88;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v88, 0LL, 1LL, v86);
  id v90 = v136;
  id v91 = [v136 mediaItems];
  if (!v91)
  {
    uint64_t v95 = v82;
    uint64_t v98 = v80;
LABEL_30:
    id v99 = 0LL;
    goto LABEL_31;
  }

  uint64_t v92 = v91;
  uint64_t v93 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v94 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v92, v93);

  if ((unint64_t)v94 >> 62)
  {
    if (v94 < 0) {
      uint64_t v103 = v94;
    }
    else {
      uint64_t v103 = v94 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v94);
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease(v94);
    if (v104) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }

  if (!*(void *)((char *)&dword_10 + (v94 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_29:
    uint64_t v95 = v82;
    uint64_t v98 = v80;
    swift_bridgeObjectRelease(v94);
    goto LABEL_30;
  }

void *AddMedia.HandleIntentStrategy.deinit()
{
  return v0;
}

uint64_t AddMedia.HandleIntentStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 280LL, 7LL);
}

uint64_t sub_7AA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_7AAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_7AB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

void sub_7ABBC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)*v5;
  static SiriEnvironmentWrapper.store()(a1);
  uint64_t v12 = v11[6];
  uint64_t v13 = v11[7];
  sub_6EA8(v11 + 3, v12);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v12, v13) & 1) != 0) {
    sub_767B4(a1, a2, a3, a4, a5);
  }
  else {
    sub_787D4(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_7AC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_7ACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_7AD40(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return AddMedia.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_7AD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_7AD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_7ADD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for AddMedia.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_7AE30@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, unint64_t *a4@<X7>, uint64_t a5@<X8>, void *a6, uint64_t a7, uint64_t (*a8)(uint64_t), void *a9, id *a10, uint64_t a11)
{
  uint64_t v126 = a5;
  uint64_t v125 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v125 - 8);
  uint64_t v16 = __chkstk_darwin(v125);
  uint64_t v123 = (void *)((char *)v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v18 = __chkstk_darwin(v16);
  id v124 = (os_log_s *)((char *)v115 - v19);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v115 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v115 - v23;
  uint64_t v25 = sub_1641C(0LL, a4, a6);
  uint64_t v133 = v25;
  uint64_t v134 = a7;
  uint64_t v131 = (uint64_t)a2;
  sub_6EA8(&v131, v25);
  id v26 = a2;
  if (CommonIntentSignals.userAcceptedSiriForAirPlayTCCPrompt()())
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v27 = v125;
    uint64_t v28 = sub_6960(v125, (uint64_t)qword_2969C8);
    uint64_t v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v24, v28, v27);
    Swift::String v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( &dword_0,  v30,  v31,  "CommonMedia#makeSiriKitIntentHandler User just accepted TCC initiated from the HomePod for an SFA request. Using the dialog producing intent handler",  v32,  2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v27);
    id v33 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
    uint64_t v34 = a1;
    swift_retain(a1);
    id v35 = [v33 init];
    id v36 = v26;
    uint64_t v37 = v126;
    SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v34, v35, v36, v25);
    uint64_t v38 = type metadata accessor for SiriKitIntentHandler(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v37, 0LL, 1LL, v38);
    return sub_6C3C(&v131);
  }

  else
  {
    sub_6C3C(&v131);
    char v40 = a8(a1);
    sub_157C4(a3, (uint64_t)&v131);
    uint64_t v41 = a1;
    if ((v40 & 1) != 0)
    {
      uint64_t v42 = v133;
      uint64_t v43 = v134;
      sub_6EA8(&v131, v133);
      LOBYTE(v4sub_6C3C(v0 + 2) = dispatch thunk of DeviceProviding.isPhone.getter(v42, v43);
      sub_157C4((uint64_t)&v131, (uint64_t)v128);
      if ((v42 & 1) == 0)
      {
        uint64_t v44 = v129;
        uint64_t v45 = v130;
        sub_6EA8(v128, v129);
        dispatch thunk of DeviceProviding.isIPad.getter(v44, v45);
      }

      sub_6C3C(v128);
      uint64_t v41 = a1;
    }

    sub_6C3C(&v131);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v46 = v125;
    uint64_t v47 = sub_6960(v125, (uint64_t)qword_2969C8);
    uint64_t v48 = *(void (**)(char *))(v15 + 16);
    uint64_t v122 = v47;
    v48(v22);
    id v49 = v26;
    uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
    os_log_type_t v51 = static os_log_type_t.default.getter();
    int v52 = v51;
    BOOL v53 = os_log_type_enabled(v50, v51);
    uint64_t v54 = v126;
    if (v53)
    {
      uint64_t v55 = swift_slowAlloc(12LL, -1LL);
      LODWORD(v11sub_6C3C(v0 + 8) = v52;
      id v56 = (uint8_t *)v55;
      uint64_t v119 = (void (*)(char *, uint64_t))swift_slowAlloc(32LL, -1LL);
      v128[0] = (uint64_t)v119;
      uint64_t v121 = v41;
      uint64_t v116 = v56;
      *(_DWORD *)id v56 = 136315138;
      v115[1] = v56 + 4;
      id v57 = v49;
      uint64_t v58 = v48;
      id v59 = v49;
      id v60 = [v57 description];
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
      uint64_t v117 = (void *)v15;
      uint64_t v62 = v61;
      uint64_t v120 = v25;
      unint64_t v64 = v63;

      id v49 = v59;
      uint64_t v48 = v58;
      uint64_t ObjectType = sub_6978(v62, v64, v128);
      uint64_t v41 = v121;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, v128);

      uint64_t v54 = v126;
      unint64_t v65 = v64;
      uint64_t v25 = v120;
      swift_bridgeObjectRelease(v65);
      uint64_t v66 = v116;
      _os_log_impl( &dword_0,  v50,  (os_log_type_t)v118,  "CommonMedia#makeSiriKitIntentHandler for intent: %s",  v116,  0xCu);
      id v67 = v119;
      swift_arrayDestroy(v119, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1LL, -1LL);
      swift_slowDealloc(v66, -1LL, -1LL);

      id v68 = (void (*)(char *, uint64_t))v117[1];
    }

    else
    {

      id v68 = *(void (**)(char *, uint64_t))(v15 + 8);
    }

    v68(v22, v46);
    uint64_t v69 = v124;
    if ((sub_7F354() & 1) != 0)
    {
      uint64_t v70 = a11;
      uint64_t v118 = a10;
      uint64_t v119 = v68;
      uint64_t v71 = ((uint64_t (*)(os_log_s *, uint64_t, uint64_t))v48)(v69, v122, v46);
      uint64_t v72 = (os_log_s *)Logger.logObject.getter(v71);
      os_log_type_t v73 = static os_log_type_t.debug.getter();
      BOOL v74 = os_log_type_enabled(v72, v73);
      uint64_t v123 = a9;
      if (v74)
      {
        uint64_t v122 = a11;
        uint64_t v117 = v49;
        uint64_t v120 = v25;
        uint64_t v121 = v41;
        uint64_t v75 = v54;
        uint64_t v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v77 = swift_slowAlloc(32LL, -1LL);
        uint64_t v131 = v77;
        *(_DWORD *)uint64_t v76 = 136315138;
        if (*a9 != -1LL) {
          swift_once(v123, v122);
        }
        uint64_t v78 = v118;
        swift_beginAccess(v118, v128, 0LL, 0LL);
        uint64_t ObjectType = swift_getObjectType(*v78);
        uint64_t v79 = sub_6C5C((uint64_t *)&unk_2875F0);
        uint64_t v80 = String.init<A>(describing:)(&ObjectType, v79);
        unint64_t v82 = v81;
        uint64_t ObjectType = sub_6978(v80, v81, &v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, v128);
        swift_bridgeObjectRelease(v82);
        _os_log_impl( &dword_0,  v72,  v73,  "CommonMedia#makeSiriKitIntentHandler IS for 1p music or podcasts, returning embedded handler: %s",  v76,  0xCu);
        swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v77, -1LL, -1LL);
        swift_slowDealloc(v76, -1LL, -1LL);

        v119((char *)v124, v46);
        uint64_t v54 = v75;
        uint64_t v25 = v120;
        uint64_t v41 = v121;
        id v49 = v117;
        uint64_t v70 = v122;
      }

      else
      {

        v119((char *)v69, v46);
        uint64_t v78 = v118;
      }

      unint64_t v102 = v123;
      uint64_t v103 = *v123;
      swift_retain(v41);
      if (v103 != -1) {
        swift_once(v102, v70);
      }
      swift_beginAccess(v78, &v131, 0LL, 0LL);
      SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v41, *v78, v49, v25);
      uint64_t v104 = type metadata accessor for SiriKitIntentHandler(0LL);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56LL))( v54,  0LL,  1LL,  v104);
    }

    else
    {
      ((void (*)(void *, uint64_t, uint64_t))v48)(v123, v122, v46);
      id v83 = v49;
      swift_retain_n(v41, 2LL);
      id v84 = v83;
      uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
      os_log_type_t v86 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v87 = swift_slowAlloc(22LL, -1LL);
        uint64_t v88 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
        *(_DWORD *)uint64_t v87 = 138412546;
        uint64_t v89 = App.appIdentifier.getter(v88);
        uint64_t v91 = v90;
        if (v90)
        {
          uint64_t v92 = String.debugDescription.getter(v89, v90);
          id v124 = v85;
          os_log_type_t v93 = v86;
          uint64_t v94 = v88;
          uint64_t v95 = v68;
          uint64_t v96 = v41;
          uint64_t v98 = v97;
          swift_bridgeObjectRelease(v91);
          unint64_t v99 = sub_6C9C();
          uint64_t v100 = swift_allocError(&type metadata for String, v99, 0LL, 0LL);
          *uint64_t v101 = v92;
          v101[1] = v98;
          uint64_t v41 = v96;
          id v68 = v95;
          uint64_t v88 = v94;
          os_log_type_t v86 = v93;
          uint64_t v85 = v124;
          uint64_t v91 = _swift_stdlib_bridgeErrorToNSError(v100);
          uint64_t v131 = v91;
        }

        else
        {
          uint64_t v131 = 0LL;
        }

        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
        *uint64_t v88 = v91;
        swift_release_n(v41, 2LL);
        *(_WORD *)(v87 + 1sub_6C3C(v0 + 2) = 2112;
        id v105 = [v84 launchId];
        uint64_t v106 = v105;
        if (v105)
        {
          uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
          uint64_t v109 = v108;

          unint64_t v110 = sub_6C9C();
          uint64_t v111 = swift_allocError(&type metadata for String, v110, 0LL, 0LL);
          *uint64_t v112 = v107;
          v112[1] = v109;
          uint64_t v106 = (void *)_swift_stdlib_bridgeErrorToNSError(v111);
          uint64_t v131 = (uint64_t)v106;
        }

        else
        {
          uint64_t v131 = 0LL;
        }

        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
        uint64_t v54 = v126;
        v88[1] = (uint64_t)v106;

        _os_log_impl( &dword_0,  v85,  v86,  "CommonMedia#makeSiriKitIntentHandler not for 1p music or podcasts (or radio on watch). Bundle: %@, intent launchId: %@",  (uint8_t *)v87,  0x16u);
        uint64_t v113 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v88, 2LL, v113);
        swift_slowDealloc(v88, -1LL, -1LL);
        swift_slowDealloc(v87, -1LL, -1LL);
      }

      else
      {

        swift_release_n(v41, 2LL);
      }

      v68((char *)v123, v125);
      uint64_t v114 = type metadata accessor for SiriKitIntentHandler(0LL);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56LL))( v54,  1LL,  1LL,  v114);
    }
  }

uint64_t sub_7B84C@<X0>( uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v245 = a5;
  unint64_t v246 = a3;
  uint64_t v256 = a8;
  unint64_t v250 = (void *)type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v249 = *(v250 - 1);
  uint64_t v13 = __chkstk_darwin(v250);
  unint64_t v244 = &v231[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v13);
  unint64_t v248 = &v231[-v15];
  uint64_t v258 = type metadata accessor for Logger(0LL);
  uint64_t v257 = *(void *)(v258 - 8);
  uint64_t v16 = __chkstk_darwin(v258);
  uint64_t v252 = &v231[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v253 = &v231[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v254 = &v231[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v242 = &v231[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v241 = &v231[-v25];
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v243 = &v231[-v27];
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v247 = &v231[-v29];
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = &v231[-v31];
  __chkstk_darwin(v30);
  uint64_t v34 = &v231[-v33];
  uint64_t v35 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v266 = v35;
  uint64_t v267 = &protocol witness table for INPlayMediaIntent;
  uint64_t v264 = (uint64_t)a2;
  sub_6EA8(&v264, v35);
  id v36 = a2;
  uint64_t v255 = v35;
  if (CommonIntentSignals.userAcceptedSiriForAirPlayTCCPrompt()())
  {
    uint64_t v37 = v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = v258;
    uint64_t v39 = sub_6960(v258, (uint64_t)qword_2969C8);
    uint64_t v40 = v257;
    uint64_t v41 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v257 + 16))(v34, v39, v38);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.default.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl( &dword_0,  v42,  v43,  "CommonMedia#makeSiriKitIntentHandler User just accepted TCC initiated from the HomePod for an SFA request. Using the dialog producing intent handler",  v44,  2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v34, v38);
    id v45 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
    swift_retain(a1);
    id v46 = [v45 init];
    id v47 = v37;
    uint64_t v48 = v256;
    SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(a1, v46, v47, v255);
    uint64_t v49 = type metadata accessor for SiriKitIntentHandler(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v48, 0LL, 1LL, v49);
    uint64_t v50 = &v264;
    return sub_6C3C(v50);
  }

  sub_6C3C(&v264);
  uint64_t v251 = a1;
  char v52 = sub_1F5C38(a1);
  sub_157C4(a4, (uint64_t)&v264);
  if ((v52 & 1) != 0)
  {
    id v240 = v36;
    uint64_t v53 = v266;
    uint64_t v54 = v267;
    sub_6EA8(&v264, v266);
    LOBYTE(v5sub_6C3C(v0 + 3) = dispatch thunk of DeviceProviding.isPhone.getter(v53, v54);
    sub_157C4((uint64_t)&v264, (uint64_t)&v261);
    uint64_t v55 = v257;
    if ((v53 & 1) != 0)
    {
      sub_6C3C(&v261);
      sub_6C3C(&v264);
      id v36 = v240;
    }

    else
    {
      uint64_t v56 = v262;
      uint64_t v57 = v263;
      sub_6EA8(&v261, v262);
      LOBYTE(v56) = dispatch thunk of DeviceProviding.isIPad.getter(v56, v57);
      sub_6C3C(&v261);
      sub_6C3C(&v264);
      id v36 = v240;
      if ((v56 & 1) == 0) {
        goto LABEL_25;
      }
    }

    uint64_t v58 = type metadata accessor for AirPlayRouteSetupContext(0LL);
    id v59 = v36;
    uint64_t v60 = static AirPlayRouteSetupContext.shared(refId:)(a6, a7);
    if (v60)
    {
      uint64_t v61 = v60;
      uint64_t v236 = v58;
      uint64_t v235 = a4;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v62 = v258;
      uint64_t v63 = sub_6960(v258, (uint64_t)qword_2969C8);
      uint64_t v237 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v55 + 16);
      v237(v32, v63, v62);
      id v64 = v59;
      swift_retain_n(v61, 2LL);
      id v65 = v64;
      uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
      os_log_type_t v67 = static os_log_type_t.debug.getter();
      int v68 = v67;
      BOOL v69 = os_log_type_enabled(v66, v67);
      id v238 = v65;
      if (v69)
      {
        uint64_t v70 = swift_slowAlloc(22LL, -1LL);
        uint64_t v239 = v61;
        uint64_t v71 = v70;
        uint64_t v234 = swift_slowAlloc(64LL, -1LL);
        *(void *)&__int128 v261 = v234;
        *(_DWORD *)uint64_t v71 = 136315394;
        os_log_t v233 = v66;
        *(void *)&__int128 v260 = v239;
        uint64_t v72 = sub_6DF0( &qword_2858C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
        int v232 = v68;
        uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter(v236, v72);
        unint64_t v75 = v74;
        *(void *)&__int128 v260 = sub_6978(v73, v74, (uint64_t *)&v261);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);
        swift_release_n(v239, 2LL);
        *(void *)&double v76 = swift_bridgeObjectRelease(v75).n128_u64[0];
        *(_WORD *)(v71 + 1sub_6C3C(v0 + 2) = 2080;
        id v77 = objc_msgSend(v65, "debugDescription", v76, v71 + 14);
        uint64_t v78 = v55;
        uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
        unint64_t v81 = v80;

        uint64_t v82 = v79;
        uint64_t v55 = v78;
        *(void *)&__int128 v260 = sub_6978(v82, v81, (uint64_t *)&v261);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);

        swift_bridgeObjectRelease(v81);
        os_log_t v83 = v233;
        _os_log_impl( &dword_0,  v233,  (os_log_type_t)v232,  "CommonMedia#makeSiriKitIntentHandler Handling AirPlay Route setup for 3p app on iOS. Context: %s Intent: %s",  (uint8_t *)v71,  0x16u);
        uint64_t v84 = v234;
        swift_arrayDestroy(v234, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v84, -1LL, -1LL);
        uint64_t v85 = v71;
        uint64_t v61 = v239;
        swift_slowDealloc(v85, -1LL, -1LL);

        os_log_type_t v86 = *(uint64_t (**)(_BYTE *, uint64_t))(v78 + 8);
      }

      else
      {

        swift_release_n(v61, 2LL);
        os_log_type_t v86 = *(uint64_t (**)(_BYTE *, uint64_t))(v55 + 8);
      }

      uint64_t v87 = v86(v32, v62);
      uint64_t v88 = v62;
      uint64_t v89 = v248;
      dispatch thunk of AirPlayRouteSetupContext.state.getter(v87);
      uint64_t v90 = v249;
      uint64_t v91 = v250;
      int v92 = (*(uint64_t (**)(_BYTE *, void *))(v249 + 88))(v89, v250);
      if (v92 == enum case for AirPlayRouteSetupState.none(_:))
      {
        uint64_t v93 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v237)(v247, v63, v88);
        uint64_t v94 = (os_log_s *)Logger.logObject.getter(v93);
        os_log_type_t v95 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v96 = 0;
          _os_log_impl( &dword_0,  v94,  v95,  "CommonMedia#makeSiriKitIntentHandler Suppressing common WHA routes",  v96,  2u);
          swift_slowDealloc(v96, -1LL, -1LL);
        }

        v86(v247, v88);
        id v97 = v238;
        INPlayMediaIntent.setShouldSuppressCommonWholeHouseAudioRoutes()();
        uint64_t v98 = v244;
        (*(void (**)(_BYTE *, void, void *))(v90 + 104))( v244,  enum case for AirPlayRouteSetupState.suppressedCommonRouteSetup(_:),  v91);
        dispatch thunk of AirPlayRouteSetupContext.state.setter(v98);
        unint64_t v99 = v246;
        uint64_t v100 = v246[3];
        uint64_t v101 = v246[4];
        sub_6EA8(v246, v100);
        sub_157C4((uint64_t)v99, (uint64_t)&v261);
        sub_157C4(v235, (uint64_t)&v260);
        sub_157C4(v245, (uint64_t)v259);
        uint64_t v102 = swift_allocObject(&unk_26CB50, 136LL, 7LL);
        sub_FF54(&v261, v102 + 16);
        sub_FF54(&v260, v102 + 56);
        sub_FF54(v259, v102 + 96);
        dispatch thunk of AirPlayRouteProviding.getRouteIdsFrom(intent:completion:)(v97, sub_80A04, v102, v100, v101);
        swift_release(v102);

        swift_release(v61);
LABEL_24:
        id v36 = v240;
        goto LABEL_25;
      }

      if (v92 == enum case for AirPlayRouteSetupState.startedDeviceSearch(_:))
      {
        sub_157C4((uint64_t)v246, (uint64_t)&v261);
        uint64_t v159 = v262;
        uint64_t v160 = v263;
        sub_6EA8(&v261, v262);
        dispatch thunk of AirPlayRouteProviding.waitForDeviceDiscovery()(v159, v160);
        uint64_t v161 = v262;
        uint64_t v162 = v263;
        sub_6EA8(&v261, v262);
        dispatch thunk of AirPlayRouteProviding.setOutputDevices(_:)(v245, v161, v162);
      }

      else
      {
        if (v92 == enum case for AirPlayRouteSetupState.startedDeviceSearchWithRouteSetup(_:))
        {
          sub_157C4((uint64_t)v246, (uint64_t)&v261);
          uint64_t v172 = v262;
          uint64_t v173 = v263;
          sub_6EA8(&v261, v262);
          dispatch thunk of AirPlayRouteProviding.waitForDeviceDiscovery()(v172, v173);
        }

        else
        {
          if (v92 != enum case for AirPlayRouteSetupState.startedRouteSetup(_:))
          {
            if (v92 == enum case for AirPlayRouteSetupState.complete(_:))
            {
              uint64_t v239 = v61;
              uint64_t v177 = v63;
              uint64_t v178 = v243;
              v237(v243, v177, v88);
              id v179 = v238;
              uint64_t v180 = (os_log_s *)Logger.logObject.getter(v179);
              os_log_type_t v181 = static os_log_type_t.info.getter(v180);
              if (os_log_type_enabled(v180, v181))
              {
                uint64_t v182 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                uint64_t v183 = swift_slowAlloc(32LL, -1LL);
                *(void *)&__int128 v261 = v183;
                *(_DWORD *)uint64_t v182 = 136315138;
                unint64_t v250 = v182 + 4;
                id v184 = [v179 debugDescription];
                uint64_t v185 = static String._unconditionallyBridgeFromObjectiveC(_:)(v184);
                unint64_t v187 = v186;

                uint64_t v188 = v185;
                uint64_t v55 = v257;
                *(void *)&__int128 v260 = sub_6978(v188, v187, (uint64_t *)&v261);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);

                swift_bridgeObjectRelease(v187);
                _os_log_impl( &dword_0,  v180,  v181,  "CommonMedia#makeSiriKitIntentHandler AirPlay route setup is complete, no need to wait before executing Handle, intent: %s",  v182,  0xCu);
                swift_arrayDestroy(v183, 1LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v183, -1LL, -1LL);
                swift_slowDealloc(v182, -1LL, -1LL);
                swift_release(v239);

                v86(v243, v258);
              }

              else
              {

                swift_release(v239);
                v86(v178, v88);
              }
            }

            else
            {
              if (v92 == enum case for AirPlayRouteSetupState.error(_:))
              {
                uint64_t v189 = v241;
                v237(v241, v63, v88);
                uint64_t v190 = swift_retain_n(v61, 2LL);
                uint64_t v191 = (os_log_s *)Logger.logObject.getter(v190);
                os_log_type_t v192 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v191, v192))
                {
                  uint64_t v193 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                  uint64_t v194 = v61;
                  uint64_t v195 = swift_slowAlloc(32LL, -1LL);
                  *(void *)&__int128 v261 = v195;
                  *(_DWORD *)uint64_t v193 = 136315138;
                  *(void *)&__int128 v260 = v194;
                  uint64_t v196 = sub_6DF0( &qword_2858C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupContext,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupContext);
                  uint64_t v197 = dispatch thunk of CustomStringConvertible.description.getter(v236, v196);
                  unint64_t v199 = v198;
                  *(void *)&__int128 v260 = sub_6978(v197, v198, (uint64_t *)&v261);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);
                  swift_release_n(v194, 2LL);
                  swift_bridgeObjectRelease(v199);
                  _os_log_impl( &dword_0,  v191,  v192,  "CommonMedia#makeSiriKitIntentHandler Something went wrong setting up AirPlay routes %s. Nothing to d o here, will create error dialog in makePreHandleIntentOutput or makeIntentHandledResponse",  v193,  0xCu);
                  swift_arrayDestroy(v195, 1LL, (char *)&type metadata for Any + 8);
                  uint64_t v200 = v195;
                  uint64_t v61 = v194;
                  swift_slowDealloc(v200, -1LL, -1LL);
                  swift_slowDealloc(v193, -1LL, -1LL);

                  uint64_t v201 = v241;
                  uint64_t v202 = v258;
                }

                else
                {

                  swift_release_n(v61, 2LL);
                  uint64_t v201 = v189;
                  uint64_t v202 = v88;
                }

                v86(v201, v202);
                id v226 = objc_allocWithZone((Class)type metadata accessor for DialogProducingIntentHandler());
                uint64_t v227 = v251;
                swift_retain(v251);
                id v228 = [v226 init];
                id v229 = v238;
                uint64_t v230 = v256;
                SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(v227, v228, v229, v255);

                swift_release(v61);
                uint64_t v155 = type metadata accessor for SiriKitIntentHandler(0LL);
                uint64_t v156 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56LL);
                uint64_t v157 = v230;
                goto LABEL_42;
              }

              char v203 = v242;
              v237(v242, v63, v88);
              id v204 = v238;
              swift_retain_n(v61, 2LL);
              id v205 = v204;
              uint64_t v206 = (os_log_s *)Logger.logObject.getter(v205);
              os_log_type_t v207 = static os_log_type_t.info.getter(v206);
              int v208 = v207;
              if (os_log_type_enabled(v206, v207))
              {
                uint64_t v209 = v61;
                uint64_t v210 = swift_slowAlloc(22LL, -1LL);
                uint64_t v211 = swift_slowAlloc(64LL, -1LL);
                unint64_t v247 = (_BYTE *)v211;
                *(void *)&__int128 v261 = v211;
                *(_DWORD *)uint64_t v210 = 136315394;
                LODWORD(v246) = v208;
                os_log_type_t v212 = v244;
                dispatch thunk of AirPlayRouteSetupContext.state.getter(v211);
                uint64_t v213 = String.init<A>(describing:)(v212, v250);
                unint64_t v215 = v214;
                *(void *)&__int128 v260 = sub_6978(v213, v214, (uint64_t *)&v261);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);
                swift_release_n(v209, 2LL);
                *(void *)&double v216 = swift_bridgeObjectRelease(v215).n128_u64[0];
                *(_WORD *)(v210 + 1sub_6C3C(v0 + 2) = 2080;
                id v217 = objc_msgSend(v205, "debugDescription", v216);
                uint64_t v218 = static String._unconditionallyBridgeFromObjectiveC(_:)(v217);
                unint64_t v220 = v219;

                uint64_t v221 = v218;
                uint64_t v55 = v257;
                *(void *)&__int128 v260 = sub_6978(v221, v220, (uint64_t *)&v261);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v260, (char *)&v260 + 8);

                swift_bridgeObjectRelease(v220);
                _os_log_impl( &dword_0,  v206,  (os_log_type_t)v246,  "CommonMedia#makeSiriKitIntentHandler Unexpected state of AirPlay route setup: %s, intent: %s",  (uint8_t *)v210,  0x16u);
                uint64_t v222 = v247;
                swift_arrayDestroy(v247, 2LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v222, -1LL, -1LL);
                swift_slowDealloc(v210, -1LL, -1LL);
                uint64_t v223 = v209;
                uint64_t v91 = v250;
                swift_release(v223);

                uint64_t v224 = v242;
                uint64_t v225 = v258;
              }

              else
              {

                swift_release_n(v61, 3LL);
                uint64_t v224 = v203;
                uint64_t v225 = v88;
              }

              v86(v224, v225);
              (*(void (**)(_BYTE *, void *))(v249 + 8))(v248, v91);
            }

            goto LABEL_24;
          }

          sub_157C4((uint64_t)v246, (uint64_t)&v261);
        }

        uint64_t v174 = v262;
        uint64_t v175 = v263;
        sub_6EA8(&v261, v262);
        dispatch thunk of AirPlayRouteProviding.waitForSetOutputDevices()(v174, v175);
      }

      id v176 = v238;
      _s23AudioFlowDelegatePlugin9PlayMediaO20HandleIntentStrategyC011makeSiriKitH7Handler3app6intent0klB00klhM0VSg0K13AppResolution0P0C_So06INPlayfH0CtF_0( v251,  v238);

      swift_release(v61);
      uint64_t v50 = (uint64_t *)&v261;
      return sub_6C3C(v50);
    }
  }

  else
  {
    sub_6C3C(&v264);
    uint64_t v55 = v257;
  }