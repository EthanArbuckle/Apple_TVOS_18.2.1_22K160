uint64_t sub_10C15C@<X0>(void (*a1)(uint64_t, void, uint64_t, uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  os_log_s *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v51;
  uint64_t v52;
  os_log_s *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  void (*v86)(uint64_t, void, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, void, uint64_t, uint64_t);
  void v107[3];
  uint64_t v108;
  uint64_t v109;
  void v110[3];
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  v106 = a1;
  v105 = a2;
  v90 = type metadata accessor for CommonAudio.Attribute(0LL);
  v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v103 = type metadata accessor for CommonAudio.Verb(0LL);
  v104 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  v91 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v102 = sub_6C5C(&qword_284DA8);
  v4 = __chkstk_darwin(v102);
  v94 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  v96 = (uint64_t)&v86 - v6;
  v7 = sub_6C5C(&qword_284DB0);
  v8 = __chkstk_darwin(v7);
  v87 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v10 = __chkstk_darwin(v8);
  v95 = (uint64_t)&v86 - v11;
  v12 = __chkstk_darwin(v10);
  v93 = (char *)&v86 - v13;
  v14 = __chkstk_darwin(v12);
  v92 = (uint64_t)&v86 - v15;
  v16 = __chkstk_darwin(v14);
  v100 = (uint64_t)&v86 - v17;
  v18 = __chkstk_darwin(v16);
  v101 = (uint64_t)&v86 - v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v86 - v20;
  v22 = type metadata accessor for Parse(0LL);
  v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v26 = type metadata accessor for Logger(0LL);
  v27 = *(void *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v99 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v28);
  v31 = (char *)&v86 - v30;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  v32 = sub_6960(v26, (uint64_t)qword_2969C8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v97 = v32;
  v34 = v26;
  v98 = v33;
  v35 = ((uint64_t (*)(char *))v33)(v31);
  v36 = (os_log_s *)Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_0, v36, v37, "PlayMediaFlowStrategy#actionForInput", v38, 2u);
    swift_slowDealloc(v38, -1LL, -1LL);
  }

  v39 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
  v40 = v34;
  v41 = v39(v31, v34);
  Input.parse.getter(v41);
  v42 = sub_B7C84(v25, (uint64_t)&v113);
  (*(void (**)(char *, uint64_t, double))(v23 + 8))(v25, v22, v42);
  if (!v114)
  {
    sub_1F6CC((uint64_t)&v113, &qword_2848C0);
    goto LABEL_12;
  }

  sub_49B60(&v113, &v116);
  v43 = v117;
  v44 = v118;
  sub_6EA8(&v116, v117);
  dispatch thunk of AudioIntent.verb.getter(v43, v44);
  v45 = v104;
  v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  v47 = v103;
  v48 = v46(v21, 1LL, v103);
  sub_1F6CC((uint64_t)v21, &qword_284DB0);
  sub_874C4((uint64_t)&v116, (uint64_t)&v113);
  if (v48 == 1)
  {
LABEL_7:
    sub_6C3C(&v113);
    sub_874C4((uint64_t)&v116, (uint64_t)v110);
LABEL_8:
    sub_6C3C(v110);
    sub_874C4((uint64_t)&v116, (uint64_t)v107);
LABEL_9:
    v49 = sub_6C3C(v107);
LABEL_10:
    static ActionForInput.handle()(v49);
    return sub_6C3C(&v116);
  }

  v57 = v114;
  v58 = v115;
  sub_6EA8(&v113, v114);
  v59 = v101;
  dispatch thunk of AudioIntent.verb.getter(v57, v58);
  v60 = v100;
  v86 = *(void (**)(uint64_t, void, uint64_t))(v45 + 104);
  v86(v100, enum case for CommonAudio.Verb.play(_:), v47);
  v106 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56);
  v106(v60, 0LL, 1LL, v47);
  v61 = v96;
  v62 = v96 + *(int *)(v102 + 48);
  sub_D8208(v59, v96);
  sub_D8208(v60, v62);
  if (v46((char *)v61, 1LL, v47) == 1)
  {
    sub_1F6CC(v60, &qword_284DB0);
    sub_1F6CC(v59, &qword_284DB0);
    if (v46((char *)v62, 1LL, v47) == 1)
    {
      sub_1F6CC(v61, &qword_284DB0);
      goto LABEL_7;
    }

    goto LABEL_20;
  }

  v63 = v92;
  sub_D8208(v61, v92);
  if (v46((char *)v62, 1LL, v47) == 1)
  {
    sub_1F6CC(v100, &qword_284DB0);
    sub_1F6CC(v101, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v63, v47);
LABEL_20:
    sub_1F6CC(v61, &qword_284DA8);
    sub_6C3C(&v113);
    sub_874C4((uint64_t)&v116, (uint64_t)v110);
    goto LABEL_21;
  }

  v77 = v61;
  v78 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v91, v62, v47);
  v79 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  v80 = dispatch thunk of static Equatable.== infix(_:_:)(v63, v78, v47, v79);
  v81 = *(void (**)(char *, uint64_t))(v104 + 8);
  v81(v78, v47);
  sub_1F6CC(v100, &qword_284DB0);
  sub_1F6CC(v101, &qword_284DB0);
  v81((char *)v63, v47);
  v45 = v104;
  sub_1F6CC(v77, &qword_284DB0);
  sub_6C3C(&v113);
  sub_874C4((uint64_t)&v116, (uint64_t)v110);
  if ((v80 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_21:
  v64 = v111;
  v65 = v112;
  sub_6EA8(v110, v111);
  v66 = v65;
  v67 = (uint64_t)v93;
  dispatch thunk of AudioIntent.verb.getter(v64, v66);
  v68 = v95;
  v86(v95, enum case for CommonAudio.Verb.start(_:), v47);
  v106(v68, 0LL, 1LL, v47);
  v69 = v94;
  v70 = v94 + *(int *)(v102 + 48);
  sub_D8208(v67, v94);
  sub_D8208(v68, v70);
  if (v46((char *)v69, 1LL, v47) == 1)
  {
    sub_1F6CC(v68, &qword_284DB0);
    sub_1F6CC(v67, &qword_284DB0);
    if (v46((char *)v70, 1LL, v47) == 1)
    {
      sub_1F6CC(v69, &qword_284DB0);
      goto LABEL_8;
    }
  }

  else
  {
    v71 = v87;
    sub_D8208(v69, v87);
    if (v46((char *)v70, 1LL, v47) != 1)
    {
      v82 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v91, v70, v47);
      v83 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
      LODWORD(v106) = dispatch thunk of static Equatable.== infix(_:_:)(v71, v82, v47, v83);
      v84 = v67;
      v85 = *(void (**)(char *, uint64_t))(v45 + 8);
      v85(v82, v47);
      sub_1F6CC(v95, &qword_284DB0);
      sub_1F6CC(v84, &qword_284DB0);
      v85((char *)v71, v47);
      sub_1F6CC(v69, &qword_284DB0);
      sub_6C3C(v110);
      sub_874C4((uint64_t)&v116, (uint64_t)v107);
      goto LABEL_27;
    }

    sub_1F6CC(v68, &qword_284DB0);
    sub_1F6CC(v67, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v71, v47);
  }

  sub_1F6CC(v69, &qword_284DA8);
  sub_6C3C(v110);
  sub_874C4((uint64_t)&v116, (uint64_t)v107);
LABEL_27:
  v72 = v108;
  v73 = v109;
  sub_6EA8(v107, v108);
  v74 = v89;
  v75 = v88;
  v76 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))( v88,  enum case for CommonAudio.Attribute.playNext(_:),  v90);
  LOBYTE(v72) = AudioIntent.hasAttribute(_:)(v75, v72, v73);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
  v49 = sub_6C3C(v107);
  if ((v72 & 1) != 0) {
    goto LABEL_10;
  }
  sub_6C3C(&v116);
LABEL_12:
  v51 = v99;
  v52 = v98(v99, v97, v40);
  v53 = (os_log_s *)Logger.logObject.getter(v52);
  v54 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v55 = 0;
    _os_log_impl( &dword_0,  v53,  v54,  "PlayMediaFlowStrategy#actionForInput received unsupported pommesResponse",  v55,  2u);
    swift_slowDealloc(v55, -1LL, -1LL);
  }

  v56 = v39(v51, v40);
  return static ActionForInput.ignore()(v56);
}

uint64_t type metadata accessor for PlayMediaFlowStrategy(uint64_t a1)
{
  uint64_t result = qword_289AE0;
  if (!qword_289AE0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlayMediaFlowStrategy);
  }
  return result;
}

void sub_10CC6C(void *a1, void (*a2)(id, void), uint64_t a3)
{
  uint64_t v59 = a3;
  v60 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  v58 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v55 - v11;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v4, (uint64_t)qword_2969C8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = v14(v12, v13, v4);
  v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "PlayMediaFlowStrategy#makeIntentFrom", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v12, v4);
  uint64_t v20 = sub_10470();
  if (v20)
  {
    v21 = (void *)v20;
    id v22 = [objc_allocWithZone(INPlayMediaIntent) init];
    uint64_t v23 = dispatch thunk of PommesResponse.clientResults.getter();
    id v24 = sub_170254(v21, v23);

    swift_bridgeObjectRelease(v23);
    v25 = v58;
    v14(v58, v13, v4);
    id v26 = v24;
    v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v62 = v56;
      *(_DWORD *)v29 = 136315138;
      v55 = v29 + 4;
      id v30 = v26;
      id v31 = [v30 description];
      v57 = v19;
      id v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      unint64_t v35 = v34;

      uint64_t v61 = sub_6978(v33, v35, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

      swift_bridgeObjectRelease(v35);
      _os_log_impl( &dword_0,  v27,  v28,  "PlayMediaFlowStrategy#makeIntentFromParse converted pommesResponse to intent: %s",  v29,  0xCu);
      uint64_t v36 = v56;
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);

      v57(v58, v4);
    }

    else
    {

      v19(v25, v4);
    }

    v48 = v60;
    id v49 = v26;
    v48(v26, 0LL);
  }

  else
  {
    v14(v8, v13, v4);
    id v37 = a1;
    v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      v58 = (char *)v41;
      uint64_t v62 = v41;
      *(_DWORD *)v40 = 136315138;
      uint64_t v56 = (uint64_t)(v40 + 4);
      uint64_t v42 = dispatch thunk of PommesResponse.experiences.getter(v41);
      uint64_t v43 = type metadata accessor for Experience(0LL);
      uint64_t v44 = Array.description.getter(v42, v43);
      v57 = v19;
      unint64_t v46 = v45;
      swift_bridgeObjectRelease(v42);
      uint64_t v61 = sub_6978(v44, v46, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

      swift_bridgeObjectRelease(v46);
      _os_log_impl( &dword_0,  v38,  v39,  "PlayMediaFlowStrategy#makeIntentFromParse pommesResponse doesn't contain audioExperience %s",  v40,  0xCu);
      v47 = v58;
      swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      v57(v8, v4);
    }

    else
    {

      v19(v8, v4);
    }

    v50 = (void (*)(uint64_t, uint64_t))v60;
    uint64_t v51 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v52 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v53 = swift_allocError(v51, v52, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104LL))( v54,  enum case for PlaybackCode.ceGE75(_:),  v51);
    v50(v53, 1LL);
    swift_errorRelease(v53);
  }

uint64_t sub_10D1F0(uint64_t a1)
{
  uint64_t v3 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DirectInvocationIntent_confirmationState;
  uint64_t v5 = type metadata accessor for CommonAudio.Confirmation(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  sub_45D94(a1, (uint64_t)v7);
  if (v7[56] == 2) {
    __asm { BR              X10 }
  }

  sub_10D5EC(a1);
  swift_release(v1);
  return 0LL;
}

uint64_t sub_10D364()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10D394()
{
  return type metadata accessor for DirectInvocationIntent(0LL);
}

uint64_t type metadata accessor for DirectInvocationIntent(uint64_t a1)
{
  uint64_t result = qword_289C50;
  if (!qword_289C50) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DirectInvocationIntent);
  }
  return result;
}

void sub_10D3D8(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

void sub_10D444(uint64_t a1)
{
  if (!qword_287068)
  {
    uint64_t v2 = type metadata accessor for CommonAudio.Confirmation(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_287068);
    }
  }

uint64_t sub_10D498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22DirectInvocationIntent_confirmationState;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10D564(v3, a1);
}

uint64_t sub_10D4EC()
{
  return 0LL;
}

uint64_t sub_10D4F8@<X0>(uint64_t a1@<X8>)
{
  return sub_10D528((uint64_t (*)(void))&type metadata accessor for DeviceQuantifier, a1);
}

uint64_t sub_10D504@<X0>(uint64_t a1@<X8>)
{
  return sub_10D528((uint64_t (*)(void))&type metadata accessor for DeviceType, a1);
}

uint64_t sub_10D510@<X0>(uint64_t a1@<X8>)
{
  return sub_10D528((uint64_t (*)(void))&type metadata accessor for PlaceHint, a1);
}

uint64_t sub_10D51C@<X0>(uint64_t a1@<X8>)
{
  return sub_10D528((uint64_t (*)(void))&type metadata accessor for Reference, a1);
}

uint64_t sub_10D528@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))(a2, 1LL, 1LL, v3);
}

uint64_t sub_10D564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10D5AC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_284630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10D5EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10D624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_284630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10D66C()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - v5;
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  static AceService.current.getter(v16);
  int v7 = CATDefaultMode;
  uint64_t v8 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v9 = static MorphunProvider.shared.getter(v8);
  static FeatureFlagProvider.shared.getter(v9);
  uint64_t v10 = type metadata accessor for CatService();
  uint64_t v11 = swift_allocObject(v10, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v15);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_retain(v9);
  uint64_t v12 = sub_10FF64(v15, v7, v9, v16, (uint64_t)v4, v11);
  swift_release(v9);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  swift_release(v9);
  return v12;
}

uint64_t sub_10D7D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AcousticIDFlow.State(0LL);
  return swift_storeEnumTagMultiPayload(a1, v2, 2LL);
}

uint64_t sub_10D808@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v12 - v8;
  static NowPlayingProvider.shared.getter(v7);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
  id v10 = sub_10EAE0((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  uint64_t result = type metadata accessor for ShazamKitRecognizer(0LL);
  a1[3] = result;
  a1[4] = (char *)&_s11descr26E191VMn.NumFields + 3;
  *a1 = v10;
  return result;
}

uint64_t sub_10D8DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10D91C( (uint64_t (*)(void))&type metadata accessor for ShazamSessionManager,  (uint64_t (*)(void))&static ShazamSessionManager.shared.getter,  (uint64_t)&protocol witness table for ShazamSessionManager,  a1);
}

uint64_t sub_10D900@<X0>(uint64_t *a1@<X8>)
{
  return sub_10D91C( (uint64_t (*)(void))&type metadata accessor for SiriKitTaskLoggingProvider,  (uint64_t (*)(void))&static SiriKitTaskLoggingProvider.shared.getter,  (uint64_t)&protocol witness table for SiriKitTaskLoggingProvider,  a1);
}

uint64_t sub_10D91C@<X0>( uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a1(0LL);
  uint64_t result = a2();
  a4[3] = v7;
  a4[4] = a3;
  *a4 = result;
  return result;
}

uint64_t sub_10D964@<X0>(void *a1@<X8>)
{
  return sub_10D99C( (uint64_t (*)(void))&type metadata accessor for SubscriptionProvider,  (uint64_t)&protocol witness table for SubscriptionProvider,  (uint64_t (*)(void))&static SubscriptionProvider.shared.getter,  a1);
}

uint64_t sub_10D980@<X0>(void *a1@<X8>)
{
  return sub_10D99C( (uint64_t (*)(void))&type metadata accessor for FeatureFlagProvider,  (uint64_t)&protocol witness table for FeatureFlagProvider,  (uint64_t (*)(void))&static FeatureFlagProvider.shared.getter,  a1);
}

uint64_t sub_10D99C@<X0>( uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  a4[3] = a1(0LL);
  a4[4] = a2;
  sub_10974(a4);
  return a3();
}

uint64_t sub_10D9E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v7 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v8 = &protocol witness table for FeatureFlagProvider;
  uint64_t v2 = sub_10974(&v6);
  static FeatureFlagProvider.shared.getter(v2);
  uint64_t v3 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v4 = swift_allocObject(v3, 56LL, 7LL);
  uint64_t result = sub_FF54(&v6, v4 + 16);
  a1[3] = v3;
  a1[4] = (uint64_t)&off_272868;
  *a1 = v4;
  return result;
}

uint64_t sub_10DA70(_OWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v31[3] = &type metadata for StringsBackedAppNameResolver;
  v31[4] = sub_15780();
  uint64_t v14 = (_OWORD *)swift_allocObject(&unk_270000, 96LL, 7LL);
  v31[0] = v14;
  __int128 v15 = a1[3];
  v14[3] = a1[2];
  v14[4] = v15;
  v14[5] = a1[4];
  __int128 v16 = a1[1];
  v14[1] = *a1;
  v14[2] = v16;
  v30[3] = type metadata accessor for MorphunProvider(0LL);
  v30[4] = &protocol witness table for MorphunProvider;
  v30[0] = a2;
  v29[3] = type metadata accessor for MultiUserConnectionProvider(0LL);
  v29[4] = &protocol witness table for MultiUserConnectionProvider;
  v29[0] = a4;
  uint64_t v17 = type metadata accessor for DeviceProvider(0LL);
  v28[3] = v17;
  v28[4] = &protocol witness table for DeviceProvider;
  v18 = sub_10974(v28);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32LL))(v18, a6, v17);
  sub_157C4((uint64_t)v31, a7 + 16);
  sub_157C4((uint64_t)v30, a7 + 216);
  sub_157C4((uint64_t)a3, a7 + 56);
  sub_157C4((uint64_t)v29, a7 + 96);
  sub_157C4((uint64_t)v28, a7 + 176);
  sub_FF10(a5, (uint64_t)&v23, &qword_289E78);
  sub_157C4((uint64_t)a3, (uint64_t)v22);
  if (v24)
  {
    sub_6C3C(v28);
    sub_1F6CC(a5, &qword_289E78);
    sub_6C3C(v29);
    sub_6C3C(a3);
    sub_6C3C(v30);
    sub_6C3C(v31);
    sub_6C3C(v22);
    sub_FF54(&v23, (uint64_t)&v25);
  }

  else
  {
    sub_157C4((uint64_t)v22, (uint64_t)&v25);
    uint64_t v19 = type metadata accessor for ContactsManager(0LL);
    swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    uint64_t v20 = ContactsManager.init(aceService:)(&v25);
    uint64_t v26 = v19;
    v27 = &protocol witness table for ContactsManager;
    *(void *)&__int128 v25 = v20;
    sub_6C3C(v28);
    sub_1F6CC(a5, &qword_289E78);
    sub_6C3C(v29);
    sub_6C3C(a3);
    sub_6C3C(v30);
    sub_6C3C(v31);
    sub_6C3C(v22);
    sub_1F6CC((uint64_t)&v23, &qword_289E78);
  }

  sub_FF54(&v25, a7 + 136);
  return a7;
}

uint64_t sub_10DCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v102 = a1;
  uint64_t v97 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v8 = __chkstk_darwin(v94);
  v92 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  v100 = (char *)&v85 - v10;
  uint64_t v11 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v90 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v85 - v18;
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  __int128 v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v108 = &protocol witness table for SiriKitTaskLoggingProvider;
  uint64_t v91 = v107;
  uint64_t v106 = a3;
  Date.init()(v107);
  uint64_t v101 = a4;
  uint64_t v24 = a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_result;
  uint64_t v25 = sub_6C5C(&qword_289EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v24, 1LL, 1LL, v25);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v20, (uint64_t)qword_2969C8);
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v26, v20);
  os_log_type_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    v99 = v17;
    id v31 = v19;
    id v32 = v13;
    uint64_t v33 = v14;
    uint64_t v34 = a2;
    unint64_t v35 = v30;
    *(_WORD *)id v30 = 0;
    _os_log_impl(&dword_0, v28, v29, "PlayMediaRCHFlowWrapper#init", v30, 2u);
    uint64_t v36 = v35;
    a2 = v34;
    uint64_t v14 = v33;
    uint64_t v13 = v32;
    uint64_t v19 = v31;
    uint64_t v17 = v99;
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v37 = v101;
  sub_FF10(v102, v101 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_input, &qword_285BD0);
  if (a2)
  {
    uint64_t v38 = a2;
  }

  else
  {
    sub_6C5C(&qword_288AF8);
    if (qword_283988 != -1) {
      swift_once(&qword_283988, sub_1E4118);
    }
    *(void *)&v104[0] = static PlayMedia.flowStrategy;
    uint64_t v39 = qword_283990;
    swift_retain(static PlayMedia.flowStrategy);
    if (v39 != -1) {
      swift_once(&qword_283990, sub_1E4264);
    }
    uint64_t v40 = static PlayMedia.childFlowFactory;
    swift_retain(static PlayMedia.childFlowFactory);
    uint64_t v38 = RCHFlow.__allocating_init(strategy:childFlowFactory:)(v104, v40);
  }

  v99 = v13;
  *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playMediaFlow) = v38;
  sub_157C4( (uint64_t)&v106,  v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_siriKitTaskLoggingProvider);
  uint64_t v41 = qword_2838F0;
  uint64_t v98 = a2;
  swift_retain(a2);
  if (v41 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v42 = CATDefaultMode;
  uint64_t v43 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v44 = static MorphunProvider.shared.getter(v43);
  unint64_t v45 = static AceService.current.getter(&v105);
  static FeatureFlagProvider.shared.getter(v45);
  uint64_t v46 = type metadata accessor for CatService();
  uint64_t v47 = swift_allocObject(v46, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v104);
  uint64_t v48 = v90;
  id v49 = *(void (**)(void, void, void))(v90 + 16);
  v49(v17, v19, v14);
  swift_retain(v44);
  uint64_t v50 = sub_10FF64(v104, v42, v44, &v105, (uint64_t)v17, v47);
  swift_release(v44);
  v89 = *(void (**)(void, void))(v48 + 8);
  v89(v19, v14);
  swift_release(v44);
  uint64_t v51 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v52 = (void *)swift_allocObject(v51, 56LL, 7LL);
  v52[6] = 0xEF746E65746E4961LL;
  v52[2] = 0xD000000000000011LL;
  v52[3] = 0x800000000021D860LL;
  v52[4] = v50;
  v52[5] = 0x6964654D79616C50LL;
  *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playDialogService) = v52;
  uint64_t v53 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v99, 1LL, 1LL, v53);
  unint64_t v88 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v90 = v50;
  swift_retain_n(v50, 2LL);
  swift_retain(v52);
  uint64_t v54 = static AceService.current.getter(v104);
  uint64_t v55 = static FeatureFlagProvider.shared.getter(v54);
  uint64_t v56 = static StringsFileResolver.shared.getter(v55);
  uint64_t v91 = static SiriKitTaskLoggingProvider.shared.getter(v56);
  v57 = v19;
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v58 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(&v105);
  uint64_t v59 = type metadata accessor for DialogHistoryProvider();
  v103[4] = &off_275B30;
  v103[3] = v59;
  v103[0] = v58;
  uint64_t v60 = type metadata accessor for PlayMediaDialogProvider(0LL);
  v86 = (void *)swift_allocObject(v60, 288LL, 7LL);
  uint64_t v61 = sub_1094C((uint64_t)v103, v59);
  v87 = &v85;
  __chkstk_darwin(v61);
  v63 = (uint64_t *)((char *)&v85 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v64 + 16))(v63);
  uint64_t v65 = *v63;
  v49(v17, v57, v14);
  uint64_t v66 = v93;
  v67 = *(void (**)(void, void, void))(v93 + 16);
  uint64_t v85 = v14;
  uint64_t v68 = (uint64_t)v92;
  v69 = v100;
  uint64_t v70 = v94;
  v67(v92, v100, v94);
  swift_retain(v58);
  uint64_t v71 = v91;
  swift_retain(v91);
  uint64_t v83 = v65;
  uint64_t v72 = v90;
  v73 = sub_EE5CC((uint64_t)v52, v90, v88, v104, (uint64_t)v99, (uint64_t)v17, v68, v71, v83, &v105, v86);
  swift_release(v52);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v70);
  v89(v57, v85);
  swift_release(v71);
  sub_6C3C(v103);
  swift_release(v58);
  uint64_t v74 = v101;
  *(void *)(v101 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_playMediaDialogProvider) = v73;
  uint64_t v75 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
  *(void *)(v74 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_viewFactory) = ViewFactory.init(ttsEnabled:)(1LL);
  uint64_t v76 = type metadata accessor for PSESignalsStitcher(0LL);
  swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
  *(void *)(v74 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_pseSignalsStitcher) = PSESignalsStitcher.init()();
  type metadata accessor for MediaPlaybackLite(0LL);
  uint64_t v77 = static MediaPlaybackLite.shared.getter();
  dispatch thunk of MediaPlaybackLite.originDeviceId.setter(0LL, 0LL);
  swift_release(v77);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  id v78 = (id)qword_296AA0;
  v79 = v95;
  OSSignpostID.init(log:)(v78);
  uint64_t v80 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v96 + 32))( v74 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_signpost,  v79,  v97);
  uint64_t v81 = static os_signpost_type_t.begin.getter(v80);
  LOBYTE(v84) = 2;
  os_signpost(_:dso:log:name:signpostID:_:_:)( v81,  &dword_0,  qword_296AA0,  "playFlowFrameWrapperTotal",  25LL,  2LL,  v74 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin23PlayMediaRCHFlowWrapper_signpost,  " enableTelemetry=YES ",  21LL,  v84,  _swiftEmptyArrayStorage);
  swift_release(v72);
  swift_release(v98);
  sub_6C3C(&v106);
  sub_1F6CC(v102, &qword_285BD0);
  return v74;
}

void *sub_10E67C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _OWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v47 = a8;
  uint64_t v48 = a3;
  uint64_t v55 = a5;
  uint64_t v50 = a1;
  uint64_t v54 = a12;
  uint64_t v53 = a11;
  uint64_t v52 = a10;
  uint64_t v46 = a9;
  uint64_t v17 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v51 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = type metadata accessor for ControlsFlowProvider(0LL);
  v72[3] = v23;
  v72[4] = &protocol witness table for ControlsFlowProvider;
  uint64_t v24 = sub_10974(v72);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32LL))(v24, a2, v23);
  v71[3] = type metadata accessor for NetworkStatusProvider(0LL);
  v71[4] = &protocol witness table for NetworkStatusProvider;
  v71[0] = a4;
  v70[3] = &type metadata for StringsBackedAppNameResolver;
  v70[4] = sub_15780();
  uint64_t v25 = (_OWORD *)swift_allocObject(&unk_270000, 96LL, 7LL);
  v70[0] = v25;
  id v49 = v25 + 1;
  __int128 v26 = a6[3];
  v25[3] = a6[2];
  v25[4] = v26;
  v25[5] = a6[4];
  __int128 v27 = a6[1];
  v25[1] = *a6;
  v25[2] = v27;
  uint64_t v68 = type metadata accessor for SEDeviceProvider(0LL);
  v69 = &protocol witness table for SEDeviceProvider;
  *(void *)&__int128 v67 = a7;
  uint64_t v65 = v17;
  uint64_t v66 = &protocol witness table for FeatureFlagProvider;
  os_log_type_t v28 = sub_10974(&v64);
  (*(void (**)(void *, uint64_t, uint64_t))(v18 + 32))(v28, v47, v17);
  uint64_t v62 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v63 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v61 = v46;
  uint64_t v59 = type metadata accessor for AudioFlowProvider();
  uint64_t v60 = &off_26FF60;
  *(void *)&__int128 v58 = v48;
  uint64_t v29 = (uint64_t)a13 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_input;
  uint64_t v30 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v29, 1LL, 1LL, v30);
  *((_BYTE *)a13 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_state) = 0;
  *(void *)((char *)a13 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_shimAudioExperience) = 0LL;
  id v31 = (void *)((char *)a13 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17AmbiguousPlayFlow_shimError);
  *id v31 = 0LL;
  v31[1] = 0LL;
  swift_beginAccess(v29, v56, 33LL, 0LL);
  uint64_t v32 = v50;
  sub_11C1C(v50, v29);
  swift_endAccess(v56);
  sub_157C4((uint64_t)v72, (uint64_t)(a13 + 2));
  sub_157C4((uint64_t)v71, (uint64_t)(a13 + 7));
  uint64_t v33 = v55;
  sub_157C4((uint64_t)v55, (uint64_t)(a13 + 14));
  sub_157C4((uint64_t)v70, (uint64_t)(a13 + 19));
  sub_157C4((uint64_t)v33, (uint64_t)v57);
  LODWORD(v23) = CATDefaultMode;
  type metadata accessor for MorphunProvider(0LL);
  uint64_t v34 = static MorphunProvider.shared.getter();
  static FeatureFlagProvider.shared.getter(v34);
  uint64_t v35 = type metadata accessor for CatService();
  uint64_t v36 = swift_allocObject(v35, 300LL, 7LL);
  sub_156E8((uint64_t)v49, (uint64_t)v56);
  uint64_t v37 = (uint64_t)v51;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v51, v22, v17);
  swift_retain(v34);
  uint64_t v38 = sub_10FF64(v56, v23, v34, v57, v37, v36);
  swift_release(v34);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
  swift_release(v34);
  uint64_t v39 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v40 = (void *)swift_allocObject(v39, 56LL, 7LL);
  v40[6] = 0xEF746E65746E4961LL;
  v40[2] = 0xD000000000000011LL;
  v40[3] = 0x800000000021D860LL;
  v40[4] = v38;
  v40[5] = 0x6964654D79616C50LL;
  a13[12] = v40;
  uint64_t v41 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  uint64_t v42 = ViewFactory.init(ttsEnabled:)(1LL);
  sub_6C3C(v70);
  sub_6C3C(v55);
  sub_6C3C(v71);
  sub_6C3C(v72);
  sub_1F6CC(v32, &qword_285BD0);
  a13[13] = v42;
  sub_FF54(&v67, (uint64_t)(a13 + 24));
  sub_FF54(&v64, (uint64_t)(a13 + 29));
  sub_FF54(&v58, (uint64_t)(a13 + 34));
  sub_FF54(&v61, (uint64_t)(a13 + 39));
  sub_FF54(v52, (uint64_t)(a13 + 44));
  uint64_t v43 = v54;
  a13[49] = v53;
  a13[50] = v43;
  return a13;
}

id sub_10EAE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NowPlayingProvider(0LL);
  v14[3] = v2;
  v14[4] = &protocol witness table for NowPlayingProvider;
  uint64_t v3 = sub_10974(v14);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32LL))(v3, a1, v2);
  uint64_t v4 = (objc_class *)type metadata accessor for ShazamKitRecognizer(0LL);
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  __int128 v6 = &v5[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result];
  *(void *)&v5[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_result] = 0LL;
  uint64_t v7 = sub_6C5C(&qword_287930);
  swift_storeEnumTagMultiPayload(v6, v7, 0LL);
  sub_157C4( (uint64_t)v14,  (uint64_t)&v5[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_nowPlayingProvider]);
  id v8 = objc_allocWithZone(&OBJC_CLASS___SHManagedSession);
  uint64_t v9 = v5;
  id v10 = [v8 init];
  *(void *)&v9[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_managedSession] = v10;
  *(void *)&v9[OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShazamKitRecognizer_dispatchGroup] = dispatch_group_create();

  v13.receiver = v9;
  v13.super_class = v4;
  id v11 = objc_msgSendSuper2(&v13, "init");
  sub_6C3C(v14);
  return v11;
}

uint64_t sub_10EC08( uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, __int128 *a7, void *a8, void *a9, void *a10, uint64_t a11)
{
  uint64_t v63 = a6;
  __int128 v64 = a7;
  uint64_t v61 = a2;
  uint64_t v62 = a5;
  uint64_t v60 = a1;
  uint64_t v66 = type metadata accessor for SiriAudioOutputProvider();
  __int128 v67 = &off_272868;
  v65[0] = a11;
  uint64_t v14 = type metadata accessor for AcousticIDFlow(0LL);
  uint64_t v58 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  uint64_t v15 = sub_1094C((uint64_t)v65, v66);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v57 = *v17;
  uint64_t v59 = a3;
  uint64_t v19 = a3[3];
  uint64_t v55 = a3[4];
  uint64_t v20 = sub_1094C((uint64_t)a3, v19);
  __chkstk_darwin(v20);
  uint64_t v54 = (uint64_t)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(void))(v22 + 16))();
  uint64_t v56 = a4;
  uint64_t v23 = a4[3];
  uint64_t v52 = a4[4];
  uint64_t v24 = sub_1094C((uint64_t)a4, v23);
  __chkstk_darwin(v24);
  __int128 v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v27 + 16))(v26);
  uint64_t v28 = (uint64_t)a8;
  uint64_t v53 = a8;
  uint64_t v29 = a8[3];
  uint64_t v51 = *(void *)(v28 + 32);
  uint64_t v30 = sub_1094C(v28, v29);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v33 + 16))(v32);
  uint64_t v34 = a9[3];
  uint64_t v49 = a9[4];
  uint64_t v50 = a9;
  uint64_t v35 = sub_1094C((uint64_t)a9, v34);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v47 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v38 + 16))(v37);
  uint64_t v48 = a10;
  uint64_t v39 = a10[3];
  uint64_t v40 = a10[4];
  uint64_t v41 = sub_1094C((uint64_t)a10, v39);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v47 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v44 + 16))(v43);
  uint64_t v45 = sub_131E08( v60,  v61,  v54,  (uint64_t)v26,  v62,  v63,  v64,  (uint64_t)v32,  (uint64_t)v37,  (uint64_t)v43,  v57,  v58,  v29,  v19,  v39,  v34,  v23,  v51,  v55,  v40,  v49,  v52);
  sub_6C3C(v48);
  sub_6C3C(v50);
  sub_6C3C(v53);
  sub_6C3C(v56);
  sub_6C3C(v59);
  sub_6C3C(v65);
  return v45;
}

uint64_t sub_10EF4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  v45[3] = type metadata accessor for ShazamKitRecognizer(0LL);
  v45[4] = (char *)&_s11descr26E191VMn.NumFields + 3;
  v45[0] = a3;
  v44[3] = type metadata accessor for ShazamSessionManager(0LL);
  v44[4] = &protocol witness table for ShazamSessionManager;
  v44[0] = a4;
  uint64_t v42 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v43 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v41 = a8;
  uint64_t v18 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v39 = v18;
  uint64_t v40 = &protocol witness table for SubscriptionProvider;
  uint64_t v19 = sub_10974(&v38);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a9, v18);
  uint64_t v20 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v36 = v20;
  uint64_t v37 = &protocol witness table for FeatureFlagProvider;
  uint64_t v21 = sub_10974(&v35);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v21, a10, v20);
  uint64_t v33 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v34 = &off_272868;
  *(void *)&__int128 v32 = a11;
  uint64_t v22 = a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_input;
  uint64_t v23 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  *(_BYTE *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_enableLiveActivity) = 0;
  *(_BYTE *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_isInAmbient) = 0;
  swift_beginAccess(v22, v31, 33LL, 0LL);
  sub_11C1C(a1, v22);
  swift_endAccess(v31);
  sub_157C4((uint64_t)v45, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer);
  sub_157C4((uint64_t)v44, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamSessionManager);
  uint64_t v24 = type metadata accessor for AcousticIdCatDialogService();
  uint64_t v25 = (void *)swift_allocObject(v24, 56LL, 7LL);
  v25[5] = 0xD000000000000010LL;
  v25[6] = 0x8000000000220D20LL;
  v25[2] = 0xD000000000000011LL;
  v25[3] = 0x800000000021D860LL;
  v25[4] = a6;
  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService) = v25;
  sub_157C4((uint64_t)a5, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_aceServiceInvokerAsync);
  uint64_t v26 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  uint64_t v27 = ViewFactory.init(ttsEnabled:)(1LL);
  sub_6C3C(a5);
  sub_6C3C(v44);
  sub_6C3C(v45);
  sub_1F6CC(a1, &qword_285BD0);
  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_viewFactory) = v27;
  sub_112780(a2, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state);
  sub_FF54(a7, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher);
  sub_FF54(&v41, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider);
  sub_FF54(&v38, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider);
  sub_FF54(&v35, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider);
  sub_FF54(&v32, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_outputProvider);
  return a12;
}

void *sub_10F250( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v17 = type metadata accessor for NowPlayingProvider(0LL);
  v40[3] = v17;
  v40[4] = &protocol witness table for NowPlayingProvider;
  uint64_t v18 = sub_10974(v40);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32LL))(v18, a3, v17);
  v39[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v39[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v39[0] = a6;
  uint64_t v37 = type metadata accessor for AppIntentInvoker(0LL);
  __int128 v38 = &protocol witness table for AppIntentInvoker;
  *(void *)&__int128 v36 = a8;
  uint64_t v19 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v34 = v19;
  __int128 v35 = &protocol witness table for FeatureFlagProvider;
  uint64_t v20 = sub_10974(&v33);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32LL))(v20, a9, v19);
  v32[3] = type metadata accessor for AudioFlowProvider();
  v32[4] = &off_26FF60;
  v32[0] = a2;
  uint64_t v21 = (uint64_t)a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input;
  uint64_t v22 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v21, 1LL, 1LL, v22);
  swift_beginAccess(v21, v31, 33LL, 0LL);
  sub_11C1C(a1, v21);
  swift_endAccess(v31);
  sub_157C4((uint64_t)v32, (uint64_t)(a10 + 2));
  sub_157C4((uint64_t)v40, (uint64_t)(a10 + 7));
  a10[12] = a5;
  sub_157C4((uint64_t)v39, (uint64_t)(a10 + 13));
  uint64_t v23 = type metadata accessor for DetermineCatDialogService();
  uint64_t v24 = (void *)swift_allocObject(v23, 56LL, 7LL);
  v24[6] = 0xEF746E65746E4965LL;
  v24[2] = 0xD000000000000011LL;
  v24[3] = 0x800000000021D860LL;
  v24[4] = a4;
  v24[5] = 0x6E696D7265746544LL;
  a10[18] = v24;
  uint64_t v25 = type metadata accessor for CommonMediaIntentCatDialogService();
  uint64_t v26 = (void *)swift_allocObject(v25, 40LL, 7LL);
  v26[2] = 0xD000000000000011LL;
  v26[3] = 0x800000000021D860LL;
  v26[4] = a4;
  a10[19] = v26;
  sub_157C4((uint64_t)a7, (uint64_t)(a10 + 20));
  uint64_t v27 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  swift_retain(a4);
  uint64_t v28 = ViewFactory.init(ttsEnabled:)(1LL);
  sub_6C3C(a7);
  sub_6C3C(v39);
  sub_6C3C(v40);
  sub_6C3C(v32);
  sub_1F6CC(a1, &qword_285BD0);
  a10[25] = v28;
  sub_FF54(&v36, (uint64_t)(a10 + 26));
  sub_FF54(&v33, (uint64_t)(a10 + 31));
  return a10;
}

uint64_t sub_10F4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a5;
  uint64_t v46 = (void *)a4;
  uint64_t v10 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v43 = (char *)&v42 - v14;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for ControlsFlowProvider(0LL);
  v51[3] = v19;
  v51[4] = &protocol witness table for ControlsFlowProvider;
  uint64_t v20 = sub_10974(v51);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32LL))(v20, a1, v19);
  v50[3] = v10;
  v50[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v21 = sub_10974(v50);
  uint64_t v44 = v11;
  (*(void (**)(void *, uint64_t, uint64_t))(v11 + 32))(v21, a3, v10);
  v49[3] = type metadata accessor for AudioFlowProvider();
  v49[4] = &off_26FF60;
  v49[0] = a2;
  uint64_t v22 = a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_input;
  uint64_t v23 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  *(void *)(a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_pommesResponse) = 0LL;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v24, v15);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "PommesResponseFlow#init", v28, 2u);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_157C4((uint64_t)v51, a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_controlsFlowProvider);
  sub_157C4((uint64_t)v49, a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_audioFlowProvider);
  sub_157C4((uint64_t)v50, a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_featureFlagProvider);
  uint64_t v29 = v46;
  sub_157C4((uint64_t)v46, a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_aceServiceInvoker);
  uint64_t v30 = v45;
  if (!v45)
  {
    if (qword_2838F0 != -1) {
      swift_once(&qword_2838F0, sub_14EB48);
    }
    int v31 = CATDefaultMode;
    type metadata accessor for MorphunProvider(0LL);
    uint64_t v32 = static MorphunProvider.shared.getter();
    __int128 v33 = static AceService.current.getter(v48);
    uint64_t v34 = v43;
    static FeatureFlagProvider.shared.getter(v33);
    uint64_t v35 = type metadata accessor for CatService();
    uint64_t v36 = swift_allocObject(v35, 300LL, 7LL);
    sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v47);
    uint64_t v37 = v44;
    uint64_t v38 = (uint64_t)v42;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v42, v34, v10);
    swift_retain(v32);
    uint64_t v30 = sub_10FF64(v47, v31, v32, v48, v38, v36);
    swift_release(v32);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v10);
    swift_release(v32);
  }

  uint64_t v39 = type metadata accessor for CommonMediaIntentCatDialogService();
  uint64_t v40 = (void *)swift_allocObject(v39, 40LL, 7LL);
  v40[2] = 0xD000000000000011LL;
  v40[3] = 0x800000000021D860LL;
  v40[4] = v30;
  sub_6C3C(v29);
  sub_6C3C(v50);
  sub_6C3C(v49);
  sub_6C3C(v51);
  *(void *)(a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin18PommesResponseFlow_commonMediaIntentCatDialogService) = v40;
  return a6;
}

uint64_t sub_10F930( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  v37[3] = type metadata accessor for AppleMediaServicesProvider(0LL);
  v37[4] = &protocol witness table for AppleMediaServicesProvider;
  v37[0] = a4;
  uint64_t v35 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v36 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v34 = a7;
  uint64_t v18 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v32 = v18;
  __int128 v33 = &protocol witness table for FeatureFlagProvider;
  uint64_t v19 = sub_10974(&v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a8, v18);
  v30[3] = type metadata accessor for AudioFlowProvider();
  v30[4] = &off_26FF60;
  v30[0] = a3;
  uint64_t v20 = a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input;
  uint64_t v21 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  uint64_t v22 = a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse;
  uint64_t v23 = type metadata accessor for Parse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  uint64_t v24 = (void *)(a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId);
  *uint64_t v24 = 0LL;
  v24[1] = 0LL;
  uint64_t v25 = (void *)(a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier);
  void *v25 = 0LL;
  v25[1] = 0LL;
  swift_beginAccess(v20, v29, 33LL, 0LL);
  sub_11C1C(a1, v20);
  swift_endAccess(v29);
  *(void *)(a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_networkAvailabilityProvider) = a2;
  sub_157C4( (uint64_t)v30,  a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_audioFlowProvider);
  sub_157C4( (uint64_t)v37,  a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_appleMediaServicesProvider);
  uint64_t v26 = type metadata accessor for PlayMediaCatDialogService();
  os_log_type_t v27 = (void *)swift_allocObject(v26, 56LL, 7LL);
  v27[6] = 0xEF746E65746E4961LL;
  v27[2] = 0xD000000000000011LL;
  v27[3] = 0x800000000021D860LL;
  v27[4] = a5;
  v27[5] = 0x6964654D79616C50LL;
  sub_6C3C(v37);
  sub_6C3C(v30);
  sub_1F6CC(a1, &qword_285BD0);
  *(void *)(a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_playMediaCatDialogService) = v27;
  sub_FF54(a6, a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_publisher);
  sub_FF54( &v34,  a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
  sub_FF54(&v31, a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_featureFlagProvider);
  *(_BYTE *)(a10 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_httpCallAttemptState) = a9 & 1;
  return a10;
}

uint64_t sub_10FBD8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _OWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = type metadata accessor for DeviceResolutionProvider(0LL);
  v46[3] = v17;
  v46[4] = &protocol witness table for DeviceResolutionProvider;
  uint64_t v18 = sub_10974(v46);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32LL))(v18, a3, v17);
  uint64_t v19 = type metadata accessor for EncryptionProvider(0LL);
  v45[3] = v19;
  v45[4] = &protocol witness table for EncryptionProvider;
  uint64_t v20 = sub_10974(v45);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32LL))(v20, a4, v19);
  v44[3] = type metadata accessor for SharedContextProvider(0LL);
  v44[4] = &protocol witness table for SharedContextProvider;
  v44[0] = a5;
  v43[3] = &type metadata for StringsBackedAppNameResolver;
  v43[4] = sub_15780();
  uint64_t v21 = (_OWORD *)swift_allocObject(&unk_270000, 96LL, 7LL);
  v43[0] = v21;
  __int128 v22 = a7[3];
  v21[3] = a7[2];
  v21[4] = v22;
  v21[5] = a7[4];
  __int128 v23 = a7[1];
  v21[1] = *a7;
  v21[2] = v23;
  uint64_t v41 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v42 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v40 = a9;
  uint64_t v24 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v38 = v24;
  uint64_t v39 = &protocol witness table for NowPlayingProvider;
  uint64_t v25 = sub_10974(&v37);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32LL))(v25, a10, v24);
  v36[3] = type metadata accessor for AudioFlowProvider();
  v36[4] = &off_26FF60;
  v36[0] = a2;
  uint64_t v26 = a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_input;
  uint64_t v27 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v26, 1LL, 1LL, v27);
  swift_beginAccess(v26, v35, 33LL, 0LL);
  sub_11C1C(a1, v26);
  swift_endAccess(v35);
  sub_157C4((uint64_t)v36, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_audioFlowProvider);
  sub_157C4((uint64_t)v46, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_deviceResolutionProvider);
  sub_157C4((uint64_t)v45, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_encryptionProvider);
  sub_157C4((uint64_t)v44, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_sharedContextProvider);
  sub_157C4((uint64_t)a6, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_aceServiceInvoker);
  sub_157C4((uint64_t)v43, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_appNameResolver);
  uint64_t v28 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v29 = (void *)swift_allocObject(v28, 56LL, 7LL);
  v29[6] = 0xEF746E65746E4961LL;
  v29[2] = 0xD000000000000011LL;
  v29[3] = 0x800000000021D860LL;
  void v29[5] = 0x6964654D79616C50LL;
  v29[4] = a8;
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_playMediaCatDialogService) = v29;
  uint64_t v30 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  uint64_t v31 = ViewFactory.init(ttsEnabled:)(1LL);
  sub_6C3C(v43);
  sub_6C3C(a6);
  sub_6C3C(v44);
  sub_6C3C(v45);
  sub_6C3C(v46);
  sub_6C3C(v36);
  sub_1F6CC(a1, &qword_285BD0);
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_viewFactory) = v31;
  sub_FF54(&v40, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_siriKitTaskLoggingProvider);
  sub_FF54(&v37, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin19ShuffleOnDeviceFlow_nowPlayingProvider);
  return a11;
}

uint64_t sub_10FF64(_OWORD *a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a3;
  uint64_t v11 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v26 - v16;
  __int128 v18 = a1[3];
  v33[2] = a1[2];
  v33[3] = v18;
  v33[4] = a1[4];
  __int128 v19 = a1[1];
  v33[0] = *a1;
  v33[1] = v19;
  uint64_t v20 = type metadata accessor for FeatureFlagProvider(0LL);
  v32[3] = v20;
  v32[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v21 = sub_10974(v32);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v21, a5, v20);
  *(_DWORD *)(a6 + 296) = a2;
  sub_157C4((uint64_t)v32, a6 + 256);
  sub_157C4((uint64_t)a4, (uint64_t)v31);
  type metadata accessor for MultiUserConnectionProvider(0LL);
  memset(v29, 0, sizeof(v29));
  uint64_t v30 = 0LL;
  uint64_t v22 = static MultiUserConnectionProvider.shared.getter();
  static DeviceProvider.shared.getter();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  sub_156E8((uint64_t)v33, (uint64_t)v28);
  uint64_t v23 = v27;
  swift_retain(v27);
  swift_retain(v22);
  uint64_t v24 = sub_10DA70(v28, v23, v31, v22, (uint64_t)v29, (uint64_t)v15, a6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  swift_release(v22);
  sub_6C3C(v32);
  sub_6C3C(a4);
  sub_15858(v33);
  return v24;
}

uint64_t sub_110130(uint64_t a1)
{
  uint64_t v75 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v2 = __chkstk_darwin(v75);
  uint64_t v71 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v70 = (char *)&v61 - v4;
  uint64_t v73 = type metadata accessor for ControlsFlowProvider(0LL);
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v5 = __chkstk_darwin(v73);
  v69 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  id v8 = (char *)&v61 - v7;
  uint64_t v9 = sub_6C5C(&qword_285BD0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  __int128 v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v15, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  uint64_t v20 = sub_FF10(a1, (uint64_t)v14, &qword_285BD0);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v76 = v8;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc(12LL, -1LL);
    uint64_t v68 = a1;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc(32LL, -1LL);
    uint64_t v66 = (uint64_t *)v16;
    uint64_t v27 = (uint64_t)v12;
    uint64_t v28 = v26;
    v77[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v65 = (uint64_t)(v25 + 4);
    sub_FF10((uint64_t)v14, v27, &qword_285BD0);
    uint64_t v29 = String.init<A>(describing:)(v27, v9);
    unint64_t v31 = v30;
    *(void *)&__int128 v80 = sub_6978(v29, v30, v77);
    id v8 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, (char *)&v80 + 8);
    swift_bridgeObjectRelease(v31);
    sub_1F6CC((uint64_t)v14, &qword_285BD0);
    _os_log_impl(&dword_0, v21, v22, "Returning ambiguousPlayFlow with %s", v25, 0xCu);
    swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v32 = v28;
    uint64_t v12 = (char *)v27;
    swift_slowDealloc(v32, -1LL, -1LL);
    __int128 v33 = v25;
    a1 = v68;
    swift_slowDealloc(v33, -1LL, -1LL);

    ((void (*)(char *, uint64_t))v66[1])(v18, v15);
  }

  else
  {
    sub_1F6CC((uint64_t)v14, &qword_285BD0);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }

  __int128 v67 = v12;
  uint64_t v34 = sub_FF10(a1, (uint64_t)v12, &qword_285BD0);
  uint64_t v35 = static OutputPublisherFactory.makeOutputPublisher()(&v80, v34);
  ControlsFlowProvider.init()(v35);
  uint64_t v36 = type metadata accessor for AudioFlowProvider();
  uint64_t v37 = swift_allocObject(v36, 16LL, 7LL);
  uint64_t v38 = type metadata accessor for NetworkStatusProvider(0LL);
  swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  uint64_t v68 = NetworkStatusProvider.init()();
  static AceService.current.getter(&v79);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  type metadata accessor for SEDeviceProvider(0LL);
  uint64_t v65 = static SEDeviceProvider.shared.getter();
  uint64_t v39 = v70;
  static FeatureFlagProvider.shared.getter(v65);
  uint64_t v40 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v64 = static SiriKitTaskLoggingProvider.shared.getter(v40);
  v78[3] = v36;
  v78[4] = &off_26FF60;
  v78[0] = v37;
  uint64_t v41 = type metadata accessor for AmbiguousPlayFlow(0LL);
  uint64_t v62 = v37;
  uint64_t v42 = v41;
  uint64_t v63 = (void *)swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  uint64_t v43 = sub_1094C((uint64_t)v78, v36);
  uint64_t v66 = &v61;
  __chkstk_darwin(v43);
  uint64_t v45 = (uint64_t *)((char *)&v61 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v46 + 16))(v45);
  uint64_t v61 = *v45;
  uint64_t v47 = v72;
  uint64_t v48 = v69;
  uint64_t v49 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v8, v73);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v77);
  uint64_t v50 = v74;
  uint64_t v51 = (uint64_t)v71;
  uint64_t v52 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v39, v75);
  swift_retain(v37);
  uint64_t v53 = v68;
  swift_retain(v68);
  uint64_t v54 = v65;
  swift_retain(v65);
  uint64_t v55 = (uint64_t)v48;
  uint64_t v56 = v54;
  uint64_t v57 = sub_10E67C((uint64_t)v67, v55, v61, v53, &v79, v77, v54, v51, v64, &v80, (uint64_t)sub_1AF868, 0LL, v63);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v52);
  swift_release(v53);
  swift_release(v56);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v76, v49);
  sub_6C3C(v78);
  swift_release(v62);
  v77[0] = (uint64_t)v57;
  uint64_t v58 = sub_10430(&qword_289E70, type metadata accessor for AmbiguousPlayFlow, (uint64_t)&unk_21A7BC);
  uint64_t v59 = Flow.eraseToAnyFlow()(v42, v58);
  swift_release(v57);
  return v59;
}

uint64_t sub_1107C8()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_1107F4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Input(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    unint64_t v30 = v7;
    uint64_t v17 = v5;
    uint64_t v18 = v4;
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    uint64_t v21 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "Initializing Determine Strategy", v16, 2u);
    os_log_type_t v22 = v21;
    a1 = v20;
    a2 = v19;
    uint64_t v4 = v18;
    uint64_t v5 = v17;
    uint64_t v7 = v30;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_2838A8 != -1) {
    swift_once(&qword_2838A8, sub_F3660);
  }
  uint64_t v23 = qword_296A68;
  if (qword_2838B0 != -1) {
    swift_once(&qword_2838B0, sub_F36FC);
  }
  uint64_t v24 = qword_296A70;
  uint64_t v25 = sub_6C5C(&qword_289EB0);
  uint64_t v31 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  swift_retain(v23);
  swift_retain(v24);
  uint64_t v26 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v31, v24, v7, a1);
  uint64_t v31 = v26;
  uint64_t v27 = sub_112740(&qword_289EB8, &qword_289EB0);
  uint64_t v28 = Flow.eraseToAnyFlow()(v25, v27);
  swift_release(v26);
  return v28;
}

uint64_t sub_110A8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v81 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v79 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v85 = (char *)&v68 - v5;
  uint64_t v78 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v6 = __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v84 = (char *)&v68 - v8;
  uint64_t v9 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v68 - v14;
  uint64_t v75 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v75);
  uint64_t v83 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v17);
  uint64_t v82 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v23 = sub_6960(v19, (uint64_t)qword_2969C8);
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v74 = v15;
    uint64_t v28 = v13;
    uint64_t v29 = v10;
    uint64_t v30 = v9;
    uint64_t v31 = a1;
    uint64_t v32 = v27;
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_0, v25, v26, "Initializing AcousticIDFlow", v27, 2u);
    __int128 v33 = v32;
    a1 = v31;
    uint64_t v9 = v30;
    uint64_t v10 = v29;
    uint64_t v13 = v28;
    os_log_type_t v15 = v74;
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_FF10(a1, v82, &qword_285BD0);
  uint64_t v34 = swift_storeEnumTagMultiPayload(v83, v75, 2LL);
  static NowPlayingProvider.shared.getter(v34);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  uint64_t v74 = (char *)sub_10EAE0((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  type metadata accessor for ShazamSessionManager(0LL);
  uint64_t v73 = static ShazamSessionManager.shared.getter();
  static AceService.currentAsync.getter(v90);
  uint64_t v75 = sub_64FAC();
  static OutputPublisherFactory.makeOutputPublisher()(v89, v75);
  uint64_t v35 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v71 = static SiriKitTaskLoggingProvider.shared.getter(v35);
  uint64_t v36 = v84;
  uint64_t v37 = static SubscriptionProvider.shared.getter();
  uint64_t v38 = v85;
  static FeatureFlagProvider.shared.getter(v37);
  uint64_t v39 = v81;
  uint64_t v87 = v81;
  unint64_t v88 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v40 = sub_10974(&v86);
  static FeatureFlagProvider.shared.getter(v40);
  uint64_t v41 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v42 = swift_allocObject(v41, 56LL, 7LL);
  sub_FF54(&v86, v42 + 16);
  uint64_t v87 = v41;
  unint64_t v88 = &off_272868;
  *(void *)&__int128 v86 = v42;
  uint64_t v69 = v42;
  uint64_t v72 = type metadata accessor for AcousticIDFlow(0LL);
  uint64_t v68 = swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
  uint64_t v43 = sub_1094C((uint64_t)&v86, v41);
  uint64_t v70 = &v68;
  __chkstk_darwin(v43);
  uint64_t v45 = (uint64_t *)((char *)&v68 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v46 + 16))(v45);
  uint64_t v47 = *v45;
  uint64_t v48 = v77;
  uint64_t v49 = (uint64_t)v76;
  uint64_t v50 = v36;
  uint64_t v51 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v76, v50, v78);
  uint64_t v52 = v80;
  uint64_t v53 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v79, v38, v39);
  swift_retain(v42);
  uint64_t v54 = v74;
  uint64_t v55 = v73;
  swift_retain(v73);
  uint64_t v56 = v71;
  swift_retain(v71);
  uint64_t v57 = sub_10EF4C(v82, v83, (uint64_t)v54, v55, v90, v75, v89, v56, v49, v53, v47, v68);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v85, v39);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v84, v51);

  swift_release(v55);
  swift_release(v56);
  sub_6C3C(&v86);
  swift_release(v69);
  v90[0] = v57;
  uint64_t v58 = sub_10430(&qword_289EC0, type metadata accessor for AcousticIDFlow, (uint64_t)&unk_218768);
  uint64_t v59 = Flow.eraseToAnyFlow()(v72, v58);
  swift_release(v57);
  uint64_t v60 = sub_6C5C(&qword_289E98);
  uint64_t v61 = type metadata accessor for CommonFlowGuard(0LL);
  uint64_t v62 = swift_allocObject( v60,  ((*(unsigned __int8 *)(*(void *)(v61 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v61 - 8) + 80LL))
        + *(void *)(*(void *)(v61 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v61 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v62 + 16) = xmmword_214510;
  static CommonFlowGuard.ensuringNoActiveCall.getter();
  uint64_t v63 = type metadata accessor for GuardedFlow();
  uint64_t v64 = swift_allocObject(v63, 40LL, 7LL);
  *(void *)(v64 + 16) = v59;
  *(_BYTE *)(v64 + 24) = 0;
  *(void *)(v64 + 32) = v62;
  v90[0] = v64;
  uint64_t v65 = sub_10430( (unint64_t *)&qword_289EA0,  (uint64_t (*)(uint64_t))type metadata accessor for GuardedFlow,  (uint64_t)&protocol conformance descriptor for GuardedFlow);
  swift_retain(v59);
  swift_bridgeObjectRetain(v62);
  uint64_t v66 = Flow.eraseToAnyFlow()(v63, v65);
  swift_release(v59);
  swift_bridgeObjectRelease(v62);
  swift_release(v64);
  return v66;
}

uint64_t sub_111180(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Input(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_6C5C(&qword_288AF8);
  if (qword_283988 != -1) {
    swift_once(&qword_283988, sub_1E4118);
  }
  uint64_t v24 = static PlayMedia.flowStrategy;
  uint64_t v11 = qword_283990;
  swift_retain(static PlayMedia.flowStrategy);
  if (v11 != -1) {
    swift_once(&qword_283990, sub_1E4264);
  }
  uint64_t v12 = static PlayMedia.childFlowFactory;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v13(v10, a1, v7);
  swift_retain(v12);
  uint64_t v14 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v24, v12, v10, a2);
  v13(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0LL, 1LL, v7);
  type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v15 = swift_retain(v14);
  uint64_t v16 = static SiriKitTaskLoggingProvider.shared.getter(v15);
  uint64_t v17 = type metadata accessor for PlayMediaRCHFlowWrapper(0LL);
  uint64_t v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v19 = sub_10DCC0((uint64_t)v6, v14, v16, v18);
  uint64_t v24 = v19;
  uint64_t v20 = sub_10430(&qword_288AF0, type metadata accessor for PlayMediaRCHFlowWrapper, (uint64_t)&unk_21B3D0);
  uint64_t v21 = Flow.eraseToAnyFlow()(v17, v20);
  swift_release(v19);
  swift_release(v14);
  return v21;
}

uint64_t sub_1113B4(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Input(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289E88);
  if (qword_283848 != -1) {
    swift_once(&qword_283848, sub_3D0F4);
  }
  uint64_t v23 = qword_296830;
  uint64_t v9 = qword_283850;
  swift_retain(qword_296830);
  if (v9 != -1) {
    swift_once(&qword_283850, sub_3D224);
  }
  uint64_t v10 = qword_296838;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain(v10);
  uint64_t v11 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v23, v10, v7, a2);
  uint64_t v23 = v11;
  uint64_t v12 = sub_112740(&qword_289E90, &qword_289E88);
  uint64_t v13 = Flow.eraseToAnyFlow()(v8, v12);
  uint64_t v14 = sub_6C5C(&qword_289E98);
  uint64_t v15 = type metadata accessor for CommonFlowGuard(0LL);
  uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
        + *(void *)(*(void *)(v15 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v16 + 16) = xmmword_214510;
  static CommonFlowGuard.disallowInSharingMode.getter();
  uint64_t v17 = type metadata accessor for GuardedFlow();
  uint64_t v18 = swift_allocObject(v17, 40LL, 7LL);
  *(void *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 24) = 0;
  *(void *)(v18 + 32) = v16;
  uint64_t v23 = v18;
  uint64_t v19 = sub_10430( (unint64_t *)&qword_289EA0,  (uint64_t (*)(uint64_t))type metadata accessor for GuardedFlow,  (uint64_t)&protocol conformance descriptor for GuardedFlow);
  swift_retain(v13);
  swift_bridgeObjectRetain(v16);
  uint64_t v20 = Flow.eraseToAnyFlow()(v17, v19);
  swift_release(v11);
  swift_release(v13);
  swift_bridgeObjectRelease(v16);
  swift_release(v18);
  return v20;
}

uint64_t sub_1115F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, _OWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a3;
  uint64_t v45 = a8;
  uint64_t v50 = a5;
  uint64_t v51 = a1;
  uint64_t v47 = a4;
  uint64_t v48 = (void *)a9;
  uint64_t v14 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v49 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v46 = (char *)&v43 - v18;
  uint64_t v20 = type metadata accessor for ControlsFlowProvider(0LL);
  v58[3] = v20;
  v58[4] = &protocol witness table for ControlsFlowProvider;
  uint64_t v21 = sub_10974(v58);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v21, a2, v20);
  v57[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v57[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v57[0] = a6;
  v56[3] = &type metadata for StringsBackedAppNameResolver;
  v56[4] = sub_15780();
  uint64_t v22 = (_OWORD *)swift_allocObject(&unk_270000, 96LL, 7LL);
  uint64_t v23 = (uint64_t)(v22 + 1);
  v56[0] = v22;
  __int128 v24 = a7[3];
  v22[3] = a7[2];
  v22[4] = v24;
  void v22[5] = a7[4];
  __int128 v25 = a7[1];
  v22[1] = *a7;
  v22[2] = v25;
  uint64_t v26 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v19, a10, v14);
  v55[3] = type metadata accessor for AudioFlowProvider();
  v55[4] = &off_26FF60;
  v55[0] = v44;
  v54[3] = type metadata accessor for SiriAudioOutputProvider();
  v54[4] = &off_272868;
  v54[0] = v45;
  uint64_t v27 = a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_input;
  uint64_t v28 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56LL))(v27, 1LL, 1LL, v28);
  swift_beginAccess(v27, v52, 33LL, 0LL);
  sub_11C1C(v51, v27);
  swift_endAccess(v52);
  sub_157C4((uint64_t)v58, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_controlsFlowProvider);
  sub_157C4((uint64_t)v55, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_audioFlowProvider);
  uint64_t v29 = v47;
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_fallbackFlow) = v47;
  sub_157C4((uint64_t)v50, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_publisher);
  sub_157C4( (uint64_t)v57,  a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_siriKitTaskLoggingProvider);
  sub_157C4((uint64_t)v56, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_appNameResolver);
  sub_157C4((uint64_t)v54, a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_outputProvider);
  uint64_t v30 = v48;
  sub_157C4((uint64_t)v48, (uint64_t)v53);
  LODWORD(a2) = CATDefaultMode;
  type metadata accessor for MorphunProvider(0LL);
  uint64_t v31 = swift_retain(v29);
  uint64_t v32 = static MorphunProvider.shared.getter(v31);
  uint64_t v33 = type metadata accessor for CatService();
  uint64_t v34 = swift_allocObject(v33, 300LL, 7LL);
  sub_156E8(v23, (uint64_t)v52);
  uint64_t v35 = v15;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v37 = (uint64_t)v49;
  uint64_t v38 = v46;
  v36(v49, v46, v26);
  uint64_t v39 = sub_10FF64(v52, a2, v32, v53, v37, v34);
  swift_release(v32);
  uint64_t v40 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v41 = (void *)swift_allocObject(v40, 56LL, 7LL);
  v41[5] = 0x6964654D79616C50LL;
  v41[6] = 0xEF746E65746E4961LL;
  v41[2] = 0xD000000000000011LL;
  v41[3] = 0x800000000021D860LL;
  v41[4] = v39;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v26);
  sub_6C3C(v30);
  sub_6C3C(v54);
  sub_6C3C(v56);
  sub_6C3C(v57);
  sub_6C3C(v50);
  sub_6C3C(v55);
  sub_6C3C(v58);
  sub_1F6CC(v51, &qword_285BD0);
  *(void *)(a11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin20AmbiguousShuffleFlow_playMediaCatDialogService) = v41;
  return a11;
}

uint64_t sub_1119EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, _OWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v55 = a6;
  uint64_t v59 = a5;
  uint64_t v58 = a4;
  uint64_t v57 = a1;
  uint64_t v56 = a9;
  uint64_t v53 = a10;
  uint64_t v54 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v14 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for ControlsFlowProvider(0LL);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v50 - v21;
  __int128 v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
  uint64_t v25 = v23;
  uint64_t v51 = v23;
  v24((char *)&v50 - v21, a2, v17);
  __int128 v26 = a7[3];
  v65[2] = a7[2];
  void v65[3] = v26;
  v65[4] = a7[4];
  __int128 v27 = a7[1];
  v65[0] = *a7;
  v65[1] = v27;
  uint64_t v28 = type metadata accessor for AudioFlowProvider();
  v64[3] = v28;
  v64[4] = &off_26FF60;
  v64[0] = a3;
  uint64_t v62 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v63 = &off_272868;
  v61[0] = a8;
  uint64_t v29 = type metadata accessor for AmbiguousShuffleFlow(0LL);
  uint64_t v52 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  uint64_t v30 = sub_1094C((uint64_t)v64, v28);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&v50 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  uint64_t v34 = sub_1094C((uint64_t)v61, v62);
  __chkstk_darwin(v34);
  uint64_t v36 = (uint64_t *)((char *)&v50 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v37 + 16))(v36);
  uint64_t v38 = *v32;
  uint64_t v39 = *v36;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v41 = (uint64_t)v20;
  uint64_t v42 = v17;
  v40(v20, v22, v17);
  sub_156E8((uint64_t)v65, (uint64_t)v60);
  uint64_t v43 = v14;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v45 = v53;
  uint64_t v46 = v54;
  v44(v16, v53, v54);
  uint64_t v47 = v55;
  swift_retain(v55);
  uint64_t v48 = sub_1115F8(v57, v41, v38, v58, v59, v47, v60, v39, v56, (uint64_t)v16, v52);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v46);
  sub_15858(v65);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v42);
  sub_6C3C(v61);
  sub_6C3C(v64);
  return v48;
}

uint64_t sub_111D28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = type metadata accessor for ControlsFlowProvider(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Input(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v17, 1LL, 1LL, v18);
  uint64_t v39 = a1;
  uint64_t v19 = swift_retain(a1);
  ControlsFlowProvider.init()(v19);
  uint64_t v20 = type metadata accessor for AudioFlowProvider();
  uint64_t v37 = swift_allocObject(v20, 16LL, 7LL);
  static OutputPublisherFactory.makeOutputPublisher()(v44, v37);
  uint64_t v21 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v22 = static SiriKitTaskLoggingProvider.shared.getter(v21);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v41 = v2;
  uint64_t v42 = &protocol witness table for FeatureFlagProvider;
  uint64_t v23 = sub_10974(&v40);
  static FeatureFlagProvider.shared.getter(v23);
  uint64_t v24 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v25 = swift_allocObject(v24, 56LL, 7LL);
  sub_FF54(&v40, v25 + 16);
  __int128 v26 = static AceService.current.getter(v43);
  static FeatureFlagProvider.shared.getter(v26);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v40);
  uint64_t v36 = v8;
  uint64_t v27 = v38;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v5, v7, v2);
  swift_retain(v22);
  uint64_t v34 = (uint64_t)v5;
  uint64_t v28 = v39;
  uint64_t v29 = sub_1119EC((uint64_t)v17, (uint64_t)v12, v37, v39, v44, v22, &v40, v25, (uint64_t)v43, v34);
  swift_release(v28);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v2);
  swift_release(v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v36);
  *(void *)&__int128 v40 = v29;
  uint64_t v30 = type metadata accessor for AmbiguousShuffleFlow(0LL);
  uint64_t v31 = sub_10430(&qword_289ED8, type metadata accessor for AmbiguousShuffleFlow, (uint64_t)&unk_216670);
  uint64_t v32 = Flow.eraseToAnyFlow()(v30, v31);
  swift_release(v29);
  return v32;
}

uint64_t sub_112050()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v51 = *(void *)(v0 - 8);
  uint64_t v52 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v50 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v40 - v3;
  uint64_t v49 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v5 = *(void *)(v49 - 8);
  uint64_t v6 = __chkstk_darwin(v49);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = v13;
  uint64_t v14 = type metadata accessor for Input(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  uint64_t v15 = type metadata accessor for AudioFlowProvider();
  uint64_t v16 = swift_allocObject(v15, 16LL, 7LL);
  uint64_t v42 = v10;
  static NowPlayingProvider.shared.getter(v16);
  uint64_t v47 = sub_64FAC();
  uint64_t v57 = type metadata accessor for DeviceResolutionProvider(0LL);
  uint64_t v58 = &protocol witness table for DeviceResolutionProvider;
  sub_10974(&v56);
  static DeviceResolutionProvider.current.getter();
  uint64_t v17 = type metadata accessor for SharedContextProvider(0LL);
  uint64_t v18 = static SharedContextProvider.shared.getter();
  uint64_t v54 = v17;
  uint64_t v55 = (_UNKNOWN **)&protocol witness table for SharedContextProvider;
  *(void *)&__int128 v53 = v18;
  uint64_t v19 = type metadata accessor for DetermineFlowStrategy();
  uint64_t v20 = swift_allocObject(v19, 96LL, 7LL);
  uint64_t v46 = v20;
  sub_FF54(&v56, v20 + 16);
  sub_FF54(&v53, v20 + 56);
  uint64_t v21 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v45 = static SiriKitTaskLoggingProvider.shared.getter(v21);
  static AceService.currentAsync.getter(&v56);
  uint64_t v22 = type metadata accessor for AppIntentInvoker(0LL);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  uint64_t v44 = AppIntentInvoker.init()();
  static FeatureFlagProvider.shared.getter(v44);
  uint64_t v54 = v15;
  uint64_t v55 = &off_26FF60;
  *(void *)&__int128 v53 = v16;
  uint64_t v23 = v16;
  uint64_t v41 = v16;
  uint64_t v24 = type metadata accessor for AmbiguousDetermineFlow(0LL);
  uint64_t v43 = (void *)swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v25 = sub_1094C((uint64_t)&v53, v15);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v40 = *v27;
  uint64_t v29 = (uint64_t)v8;
  uint64_t v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v49);
  uint64_t v31 = (uint64_t)v50;
  uint64_t v32 = v51;
  uint64_t v33 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v50, v4, v52);
  swift_retain(v23);
  uint64_t v34 = v45;
  swift_retain(v45);
  uint64_t v35 = v44;
  swift_retain(v44);
  uint64_t v36 = sub_10F250((uint64_t)v48, v40, v29, v47, v46, v34, &v56, v35, v31, v43);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v33);
  swift_release(v34);
  swift_release(v35);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v42, v30);
  sub_6C3C(&v53);
  swift_release(v41);
  *(void *)&__int128 v56 = v36;
  uint64_t v37 = sub_10430(&qword_289ED0, type metadata accessor for AmbiguousDetermineFlow, (uint64_t)&unk_21A210);
  uint64_t v38 = Flow.eraseToAnyFlow()(v24, v37);
  swift_release(v36);
  return v38;
}

uint64_t sub_112424(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v35 - v6;
  uint64_t v8 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_FF10(a1, v38, &qword_285BD0);
  uint64_t v11 = static SiriEnvironmentWrapper.retrieve()(v10);
  if (!v11)
  {
    type metadata accessor for SiriEnvironment();
    uint64_t v11 = static SiriEnvironment.default.getter();
  }

  uint64_t v12 = v11;
  uint64_t v37 = SiriEnvironment.networkAvailability.getter();
  swift_release(v12);
  uint64_t v13 = type metadata accessor for AudioFlowProvider();
  uint64_t v14 = swift_allocObject(v13, 16LL, 7LL);
  uint64_t v44 = v2;
  uint64_t v45 = &protocol witness table for FeatureFlagProvider;
  uint64_t v15 = sub_10974(&v43);
  static FeatureFlagProvider.shared.getter(v15);
  uint64_t v16 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v17 = static SiriKitTaskLoggingProvider.shared.getter(v16);
  uint64_t v41 = v16;
  uint64_t v42 = (_UNKNOWN **)&protocol witness table for SiriKitTaskLoggingProvider;
  v40[0] = v17;
  uint64_t v18 = type metadata accessor for AppleMediaServicesProvider(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v19 = AppleMediaServicesProvider.init(featureFlagProvider:siriKitTaskLoggingProvider:)(&v43, v40);
  uint64_t v36 = sub_64FAC();
  uint64_t v20 = static OutputPublisherFactory.makeOutputPublisher()(&v43, v36);
  uint64_t v21 = static SiriKitTaskLoggingProvider.shared.getter(v20);
  static FeatureFlagProvider.shared.getter(v21);
  uint64_t v41 = v13;
  uint64_t v42 = &off_26FF60;
  v40[0] = v14;
  uint64_t v22 = type metadata accessor for SwitchNewsSourcePreferenceFlow(0LL);
  uint64_t v23 = v2;
  uint64_t v24 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  uint64_t v25 = sub_1094C((uint64_t)v40, v13);
  v35[1] = v35;
  __chkstk_darwin(v25);
  uint64_t v27 = (void *)((char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = *v27;
  uint64_t v30 = v39;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v5, v7, v23);
  swift_retain(v14);
  swift_retain(v19);
  swift_retain(v21);
  uint64_t v31 = sub_10F930(v38, v37, v29, v19, v36, &v43, v21, (uint64_t)v5, 0, v24);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v23);
  swift_release(v19);
  swift_release(v21);
  sub_6C3C(v40);
  swift_release(v14);
  *(void *)&__int128 v43 = v31;
  uint64_t v32 = sub_10430(&qword_289E80, type metadata accessor for SwitchNewsSourcePreferenceFlow, (uint64_t)&unk_21A390);
  uint64_t v33 = Flow.eraseToAnyFlow()(v22, v32);
  swift_release(v31);
  return v33;
}

uint64_t sub_112740(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_45D50(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for RCHFlow<A>, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_112780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AcousticIDFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1127C4()
{
  uint64_t v56 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v55 = *(void *)(v56 - 8);
  uint64_t v0 = __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v41 - v2;
  uint64_t v59 = type metadata accessor for EncryptionProvider(0LL);
  uint64_t v58 = *(void *)(v59 - 8);
  uint64_t v4 = __chkstk_darwin(v59);
  __int128 v53 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = type metadata accessor for DeviceResolutionProvider(0LL);
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Input(0LL);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL);
  uint64_t v51 = v16;
  v18(v16, 1LL, 1LL, v17);
  uint64_t v19 = type metadata accessor for AudioFlowProvider();
  uint64_t v20 = swift_allocObject(v19, 16LL, 7LL);
  uint64_t v21 = v13;
  uint64_t v22 = static DeviceResolutionProvider.current.getter();
  uint64_t v57 = v7;
  EncryptionProvider.init()(v22);
  type metadata accessor for SharedContextProvider(0LL);
  uint64_t v50 = static SharedContextProvider.shared.getter();
  static AceService.current.getter(&v62);
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v48 = sub_10D66C();
  uint64_t v23 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v46 = static SiriKitTaskLoggingProvider.shared.getter(v23);
  static NowPlayingProvider.shared.getter(v46);
  void v61[3] = v19;
  v61[4] = &off_26FF60;
  v61[0] = v20;
  uint64_t v49 = type metadata accessor for ShuffleOnDeviceFlow(0LL);
  uint64_t v45 = swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  uint64_t v24 = sub_1094C((uint64_t)v61, v19);
  uint64_t v47 = &v41;
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  uint64_t v42 = *v26;
  uint64_t v28 = v52;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v30 = (uint64_t)v11;
  uint64_t v44 = v8;
  v29(v11, v21, v8);
  uint64_t v43 = v20;
  uint64_t v31 = (uint64_t)v53;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v53, v57, v59);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v60);
  uint64_t v32 = v55;
  uint64_t v33 = (uint64_t)v54;
  uint64_t v34 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v3, v56);
  swift_retain(v20);
  uint64_t v35 = v50;
  swift_retain(v50);
  uint64_t v36 = v46;
  swift_retain(v46);
  uint64_t v37 = sub_10FBD8((uint64_t)v51, v42, v30, v31, v35, &v62, v60, v48, v36, v33, v45);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v34);
  swift_release(v35);
  swift_release(v36);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v44);
  sub_6C3C(v61);
  swift_release(v43);
  *(void *)&v60[0] = v37;
  uint64_t v38 = sub_10430(&qword_289EC8, type metadata accessor for ShuffleOnDeviceFlow, (uint64_t)&unk_217550);
  uint64_t v39 = Flow.eraseToAnyFlow()(v49, v38);
  swift_release(v37);
  return v39;
}

void Determine.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v42 = a2;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  uint64_t v17 = swift_retain_n(a1, 2LL);
  uint64_t v41 = v12;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc(12LL, -1LL);
    uint64_t v39 = a5;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v40 = v6;
    uint64_t v38 = v22;
    uint64_t v37 = a1;
    *(_DWORD *)uint64_t v21 = 136315138;
    v36[1] = v21 + 4;
    uint64_t v43 = a1;
    uint64_t v44 = v22;
    uint64_t v23 = a3;
    uint64_t v24 = a4;
    uint64_t v25 = type metadata accessor for App(0LL);
    uint64_t v26 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v27 = v25;
    a4 = v24;
    a3 = v23;
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v27, v26);
    unint64_t v30 = v29;
    uint64_t v43 = sub_6978(v28, v29, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    a1 = v37;
    swift_release_n(v37, 2LL);
    swift_bridgeObjectRelease(v30);
    _os_log_impl(&dword_0, v18, v19, "Determine+HandleIntentStrategy#makeIntentHandledResponse for app: %s", v21, 0xCu);
    uint64_t v31 = v38;
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v6 = v40;
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v21;
    a5 = v39;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v11);
  uint64_t v33 = a1;
  uint64_t v34 = v6[18];
  uint64_t v35 = v6[19];
  sub_6EA8(v6 + 15, v34);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v34, v35) & 1) != 0) {
    Determine.HandleIntentStrategy.makeIntentHandledResponseWithRF(app:intent:intentResponse:_:)(v33, v42, a3, a4, a5);
  }
  else {
    Determine.HandleIntentStrategy.makeIntentHandledResponseLegacy(app:intent:intentResponse:_:)(v33, v42, a3, a4, a5);
  }
}

void Determine.HandleIntentStrategy.makeIntentHandledResponseLegacy(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v17 = swift_retain_n(a1, 2LL);
  uint64_t v44 = v13;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    int v40 = v20;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v45 = a1;
    uint64_t v46 = v41;
    uint64_t v43 = v6;
    *(_DWORD *)uint64_t v22 = 136315138;
    v38[1] = v22 + 4;
    uint64_t v39 = v22;
    uint64_t v23 = type metadata accessor for App(0LL);
    uint64_t v42 = v12;
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    uint64_t v26 = a4;
    uint64_t v27 = a5;
    uint64_t v28 = v23;
    uint64_t v29 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v30 = v28;
    a5 = v27;
    a4 = v26;
    a3 = v25;
    a2 = v24;
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v30, v29);
    unint64_t v33 = v32;
    uint64_t v45 = sub_6978(v31, v32, &v46);
    uint64_t v6 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v33);
    uint64_t v34 = v39;
    _os_log_impl( &dword_0,  v18,  (os_log_type_t)v40,  "Determine+HandleIntentStrategy#makeIntentHandledResponse for app: %s",  v39,  0xCu);
    uint64_t v35 = v41;
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v34, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v42);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v12);
  }

  swift_retain(a1);
  swift_retain(v6);
  swift_retain(a5);
  id v36 = a2;
  id v37 = a3;
  sub_BFD90(v36, v6, a4, a5, a1, v36, v37);
  swift_release(v6);
  swift_release(a5);
  swift_release(a1);
}

uint64_t sub_113278( void (*a1)(uint64_t, uint64_t *, uint64_t), void *a2, void (*a3)(__int128 *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v92 = a7;
  uint64_t v91 = a6;
  uint64_t v90 = a5;
  uint64_t v109 = a4;
  v110 = a3;
  uint64_t v101 = a2;
  v99 = a1;
  v95 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v94 = *(v95 - 1);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v98 = type metadata accessor for AceOutput(0LL);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  v104 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v102 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v100 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v100);
  uint64_t v96 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v111 = (uint64_t)&v87 - v13;
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  v108 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  uint64_t v107 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v105 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v112 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  v103 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v29);
  uint64_t v31 = (uint64_t *)((char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v99, (uint64_t)v31, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v31, v29) == 1)
  {
    uint64_t v111 = *v31;
    uint64_t v32 = v111;
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.ModuleName.dhis(_:),  v25);
    (*(void (**)(char *, void, uint64_t))(v22 + 104))( v24,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v21);
    swift_getErrorValue(v32, v114, v113);
    uint64_t v33 = Error.localizedDescription.getter(v113[1], v113[2]);
    uint64_t v35 = v34;
    v104 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v28,  v24,  v33,  v34,  2LL,  0LL);
    uint64_t v102 = v36;
    __n128 v37 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v24, v21, v37);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    uint64_t v38 = v101 + 3;
    uint64_t v39 = v101[6];
    uint64_t v101 = (void *)v101[7];
    sub_6EA8(v38, v39);
    int v40 = v103;
    uint64_t v41 = v106;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v103, enum case for TypeOfIntent.determine(_:), v106);
    uint64_t v42 = enum case for ActivityType.failed(_:);
    uint64_t v43 = type metadata accessor for ActivityType(0LL);
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 104))(v105, v42, v43);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v45, 0LL, 1LL, v43);
    uint64_t v46 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v47 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))(v107, 1LL, 1LL, v46);
    uint64_t v48 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v49 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = (uint64_t)v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v108, v48, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0LL, 1LL, v49);
    uint64_t v52 = v102;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v40,  v45,  v47,  v51,  v104,  v102,  v39,  v101);
    swift_bridgeObjectRelease(v52);
    sub_1F6CC(v51, &qword_2845A0);
    sub_1F6CC(v47, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v45, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v40, v41);
    uint64_t v53 = v111;
    *(void *)&__int128 v115 = v111;
    char v118 = 1;
    swift_errorRetain(v111);
    v110(&v115);
    swift_errorRelease(v53);
  }

  else
  {
    uint64_t v54 = *(int *)(v100 + 48);
    uint64_t v55 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v89 = *(void *)(v55 - 8);
    v99 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v89 + 32);
    uint64_t v56 = v111;
    v99(v111, v31, v55);
    uint64_t v88 = v54;
    *(void *)(v56 + v54) = *(uint64_t *)((char *)v31 + v54);
    uint64_t v57 = v102;
    sub_1F55A4(v90, v102);
    char v59 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v58);
    v117 = 0LL;
    __int128 v115 = 0u;
    __int128 v116 = 0u;
    static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v56,  v59 & 1,  v92,  0LL,  1LL,  v57,  _swiftEmptyArrayStorage,  &v115);
    sub_1F6CC((uint64_t)&v115, &qword_2845C8);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))( v28,  enum case for AdditionalMetricsDescription.ModuleName.dhis(_:),  v25);
    (*(void (**)(char *, void, uint64_t))(v22 + 104))( v24,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v21);
    uint64_t v60 = v94;
    uint64_t v61 = v93;
    uint64_t v62 = v95;
    (*(void (**)(char *, void, void *))(v94 + 104))( v93,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v95);
    uint64_t v92 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v28, v24, v61, 0LL, 1LL);
    uint64_t v91 = v63;
    (*(void (**)(char *, void *))(v60 + 8))(v61, v62);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    uint64_t v64 = v101 + 3;
    uint64_t v65 = v101[6];
    uint64_t v101 = (void *)v101[7];
    v95 = sub_6EA8(v64, v65);
    uint64_t v66 = v103;
    uint64_t v67 = v106;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v103, enum case for TypeOfIntent.determine(_:), v106);
    uint64_t v68 = enum case for ActivityType.completed(_:);
    uint64_t v69 = type metadata accessor for ActivityType(0LL);
    uint64_t v70 = *(void *)(v69 - 8);
    uint64_t v71 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v105, v68, v69);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v71, 0LL, 1LL, v69);
    uint64_t v72 = *(int *)(v100 + 48);
    uint64_t v73 = v89;
    uint64_t v74 = v96;
    uint64_t v75 = v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v96, v111, v55);
    *(void *)&v74[v72] = *(void *)(v75 + v88);
    uint64_t v76 = (uint64_t)v107;
    v99((uint64_t)v107, (uint64_t *)v74, v55);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v76, 0LL, 1LL, v55);
    uint64_t v77 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v78 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = (uint64_t)v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v108, v77, v78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0LL, 1LL, v78);
    uint64_t v81 = v91;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v66,  v71,  v76,  v80,  v92,  v91,  v65,  v101);
    swift_bridgeObjectRelease(v81);
    sub_1F6CC(v80, &qword_2845A0);
    sub_1F6CC(v76, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v71, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v66, v67);
    uint64_t v82 = v98;
    *((void *)&v116 + 1) = v98;
    v117 = &protocol witness table for AceOutput;
    uint64_t v83 = sub_10974(&v115);
    uint64_t v84 = v97;
    uint64_t v85 = v104;
    (*(void (**)(void *, char *, uint64_t))(v97 + 16))(v83, v104, v82);
    char v118 = 0;
    v110(&v115);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v82);
    sub_1F6CC(v102, (uint64_t *)&unk_286C50);
    sub_1F6CC(v111, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v115, (uint64_t *)&unk_286C60);
}

uint64_t Determine.HandleIntentStrategy.makeIntentHandledResponseWithRF(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v39 = a3;
  uint64_t v40 = a4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v15 = swift_retain_n(a1, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc(22LL, -1LL);
    uint64_t v37 = v5;
    uint64_t v19 = v18;
    uint64_t v35 = swift_slowAlloc(64LL, -1LL);
    uint64_t v41 = a1;
    uint64_t v42 = v35;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v36 = a2;
    uint64_t v20 = type metadata accessor for App(0LL);
    uint64_t v38 = a5;
    uint64_t v21 = v20;
    uint64_t v22 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter(v21, v22);
    unint64_t v25 = v24;
    uint64_t v41 = sub_6978(v23, v24, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v27 = static Insights.responseFramework.getter(v26);
    unint64_t v29 = v28;
    uint64_t v41 = sub_6978(v27, v28, &v42);
    a5 = v38;
    a2 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_bridgeObjectRelease(v29);
    _os_log_impl( &dword_0,  v16,  v17,  "Determine+HandleIntentStrategy#makeIntentHandledResponseWithRF for app: %s %{public}s",  (uint8_t *)v19,  0x16u);
    uint64_t v30 = v35;
    swift_arrayDestroy(v35, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    uint64_t v31 = v19;
    uint64_t v6 = v37;
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_retain(a1);
  swift_retain(v6);
  id v32 = a2;
  id v33 = v39;
  swift_retain(a5);
  sub_11ED2C(v32, v6, a1, v32, v33, v40, a5);
  swift_release(v6);
  swift_release(a1);

  return swift_release(a5);
}

uint64_t sub_113F50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a3;
  uint64_t v13 = sub_6C5C(&qword_284170);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v26 = *(void *)(a2 + 72);
  sub_FF10(a1, (uint64_t)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL), &qword_284170);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 56) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(&unk_270050, v17 + v15, v16 | 7);
  v18[2] = a2;
  v18[3] = a6;
  v18[4] = a7;
  v18[5] = a4;
  v18[6] = a5;
  sub_45F6C((uint64_t)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t)v18 + v17, &qword_284170);
  swift_retain(a2);
  swift_retain(a7);
  id v19 = a4;
  id v20 = a5;
  id v21 = [v19 targetDeviceIds];
  if (v21
    && (uint64_t v22 = v21,
        uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String),
        v22,
        uint64_t v24 = *(void *)(v23 + 16),
        swift_bridgeObjectRelease(v23),
        v24))
  {
    sub_4EB44(v27, v19, (uint64_t)sub_1177A8, (uint64_t)v18);
  }

  else
  {
    sub_4B40C(v27, v19, (uint64_t)sub_1177A8, (uint64_t)v18);
  }

  return swift_release(v18);
}

uint64_t sub_1140DC( id a1, void *a2, void (*a3)(uint64_t *), void (*a4)(uint64_t *), char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v146 = a7;
  uint64_t v136 = a6;
  v153 = a5;
  v159 = a4;
  v158 = a3;
  v163 = a2;
  id v151 = a1;
  uint64_t v7 = sub_6C5C(&qword_284170);
  uint64_t v147 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v148 = v8;
  uint64_t v149 = (uint64_t)v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (uint64_t)v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v143 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v145 = (uint64_t)v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = v12;
  __chkstk_darwin(v11);
  uint64_t v161 = (uint64_t)v132 - v13;
  uint64_t v152 = sub_6C5C(&qword_289340);
  uint64_t v140 = *(void *)(v152 - 8);
  uint64_t v14 = __chkstk_darwin(v152);
  v142 = (char *)v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v141 = v15;
  __chkstk_darwin(v14);
  v160 = (void *)((char *)v132 - v16);
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v17);
  v157 = (char *)v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v19);
  v156 = (char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v21);
  v155 = (char *)v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v164 = (void *)type metadata accessor for TypeOfIntent(0LL);
  uint64_t v162 = *(v164 - 1);
  __chkstk_darwin(v164);
  v154 = (char *)v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v150 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v135 = *(v150 - 1);
  __chkstk_darwin(v150);
  id v33 = (char *)v132 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v34);
  uint64_t v36 = (void *)((char *)v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v151, (uint64_t)v36, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v36, v34) == 1)
  {
    v160 = (uint64_t *)v31;
    uint64_t v161 = v29;
    v153 = v27;
    uint64_t v37 = v25;
    id v38 = (id)v28;
    uint64_t v39 = *v36;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v40 = (void (*)(void, void, void))v150;
    uint64_t v41 = sub_6960((uint64_t)v150, (uint64_t)qword_2969C8);
    uint64_t v42 = v135;
    (*(void (**)(char *, uint64_t, void))(v135 + 16))(v33, v41, v40);
    swift_errorRetain(v39);
    uint64_t v43 = swift_errorRetain(v39);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.error.getter();
    int v46 = v45;
    BOOL v47 = os_log_type_enabled(v44, v45);
    uint64_t v152 = v24;
    id v151 = v38;
    uint64_t v48 = v37;
    if (v47)
    {
      uint64_t v49 = swift_slowAlloc(22LL, -1LL);
      uint64_t v148 = swift_slowAlloc(64LL, -1LL);
      uint64_t v168 = v148;
      *(_DWORD *)uint64_t v49 = 136315394;
      swift_getErrorValue(v39, v167, v166);
      LODWORD(v147) = v46;
      uint64_t v50 = Error.localizedDescription.getter(v166[1], v166[2]);
      unint64_t v52 = v51;
      uint64_t v165 = sub_6978(v50, v51, &v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166);
      swift_bridgeObjectRelease(v52);
      swift_errorRelease(v39);
      uint64_t v53 = swift_errorRelease(v39);
      *(_WORD *)(v49 + 12) = 2082;
      uint64_t v54 = static Insights.responseFramework.getter(v53);
      uint64_t v55 = v33;
      uint64_t v56 = v39;
      unint64_t v58 = v57;
      uint64_t v165 = sub_6978(v54, v57, &v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166);
      swift_bridgeObjectRelease(v58);
      _os_log_impl( &dword_0,  v44,  (os_log_type_t)v147,  "Determine+HandleIntentStrategy#makeIntentHandledResponseWithRF failed building dialog with error: %s %{public}s",  (uint8_t *)v49,  0x16u);
      uint64_t v59 = v148;
      swift_arrayDestroy(v148, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      (*(void (**)(char *, void *))(v42 + 8))(v55, v150);
    }

    else
    {
      swift_errorRelease(v39);
      swift_errorRelease(v39);

      (*(void (**)(char *, void (*)(void, void, void)))(v42 + 8))(v33, v40);
      uint64_t v56 = v39;
    }

    uint64_t v101 = v163;
    uint64_t v102 = v164;
    v103 = v153;
    v104 = v160;
    uint64_t v105 = v161;
    id v106 = v151;
    (*(void (**)(uint64_t *, void, id))(v161 + 104))( v160,  enum case for AdditionalMetricsDescription.ModuleName.dhis(_:),  v151);
    uint64_t v107 = *(void (**)(char *, void, uint64_t))(v48 + 104);
    uint64_t v108 = v48;
    uint64_t v109 = v152;
    v107(v103, enum case for AdditionalMetricsDescription.SourceFunction.handled(_:), v152);
    uint64_t v149 = v56;
    swift_getErrorValue(v56, v171, v170);
    uint64_t v110 = Error.localizedDescription.getter(v170[1], v170[2]);
    uint64_t v112 = v111;
    uint64_t v113 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v104,  v103,  v110,  v111,  2LL,  0LL);
    v160 = v114;
    uint64_t v161 = v113;
    __n128 v115 = swift_bridgeObjectRelease(v112);
    (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v103, v109, v115);
    (*(void (**)(uint64_t *, id))(v105 + 8))(v104, v106);
    uint64_t v116 = v101[6];
    v163 = (void *)v101[7];
    sub_6EA8(v101 + 3, v116);
    uint64_t v117 = v162;
    char v118 = v154;
    (*(void (**)(char *, void, void *))(v162 + 104))( v154,  enum case for TypeOfIntent.determine(_:),  v102);
    uint64_t v119 = enum case for ActivityType.failed(_:);
    uint64_t v120 = type metadata accessor for ActivityType(0LL);
    uint64_t v121 = *(void *)(v120 - 8);
    uint64_t v122 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 104))(v155, v119, v120);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v122, 0LL, 1LL, v120);
    uint64_t v123 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v124 = (uint64_t)v156;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56LL))(v156, 1LL, 1LL, v123);
    uint64_t v125 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v126 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v127 = *(void *)(v126 - 8);
    uint64_t v128 = (uint64_t)v157;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 104))(v157, v125, v126);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v128, 0LL, 1LL, v126);
    v129 = v160;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v118,  v122,  v124,  v128,  v161,  v160,  v116,  v163);
    swift_bridgeObjectRelease(v129);
    sub_1F6CC(v128, &qword_2845A0);
    sub_1F6CC(v124, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v122, &qword_2845A8);
    (*(void (**)(char *, void *))(v117 + 8))(v118, v164);
    uint64_t v130 = v149;
    uint64_t v168 = v149;
    char v169 = 1;
    swift_errorRetain(v149);
    v158(&v168);
    swift_errorRelease(v130);
    uint64_t v100 = (uint64_t *)&unk_286C60;
    v99 = &v168;
  }

  else
  {
    uint64_t v60 = *(int *)(v152 + 48);
    uint64_t v135 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v134 = *(void *)(v135 - 8);
    v150 = *(void **)(v134 + 32);
    uint64_t v61 = v160;
    ((void (*)(uint64_t *, uint64_t *, uint64_t))v150)(v160, v36, v135);
    uint64_t v62 = *(void **)((char *)v36 + v60);
    *(uint64_t *)((char *)v61 + v60) = (uint64_t)v62;
    id v151 = v62;
    sub_1F55A4((uint64_t)v153, v161);
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.dhis(_:),  v28);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v24);
    uint64_t v63 = v138;
    uint64_t v64 = v137;
    uint64_t v65 = v139;
    (*(void (**)(uint64_t, void, uint64_t))(v138 + 104))( v137,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v139);
    uint64_t v136 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v31,  v27,  v64,  0LL,  1LL);
    uint64_t v133 = v66;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    uint64_t v67 = v163[7];
    uint64_t v137 = v163[6];
    uint64_t v139 = v67;
    v132[1] = sub_6EA8(v163 + 3, v137);
    uint64_t v68 = v154;
    (*(void (**)(char *, void, void *))(v162 + 104))( v154,  enum case for TypeOfIntent.determine(_:),  v164);
    uint64_t v69 = enum case for ActivityType.completed(_:);
    uint64_t v70 = type metadata accessor for ActivityType(0LL);
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v155, v69, v70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v72, 0LL, 1LL, v70);
    uint64_t v73 = v152;
    uint64_t v74 = *(int *)(v152 + 48);
    uint64_t v75 = v134;
    uint64_t v138 = *(void *)(v134 + 16);
    uint64_t v76 = (uint64_t)v142;
    uint64_t v77 = v61;
    uint64_t v78 = v135;
    ((void (*)(char *, uint64_t *, uint64_t))v138)(v142, v77, v135);
    *(void *)(v76 + v74) = v151;
    uint64_t v79 = (uint64_t)v156;
    ((void (*)(char *, uint64_t, uint64_t))v150)(v156, v76, v78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v79, 0LL, 1LL, v78);
    uint64_t v80 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v81 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v82 = *(void *)(v81 - 8);
    uint64_t v83 = (uint64_t)v157;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 104))(v157, v80, v81);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v83, 0LL, 1LL, v81);
    uint64_t v84 = v133;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v68,  v72,  v79,  v83,  v136,  v133,  v137,  v139);
    swift_bridgeObjectRelease(v84);
    sub_1F6CC(v83, &qword_2845A0);
    sub_1F6CC(v79, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v72, &qword_2845A8);
    (*(void (**)(char *, void *))(v162 + 8))(v68, v164);
    uint64_t v85 = v163;
    v164 = sub_6EA8(v163 + 25, v163[28]);
    uint64_t v86 = *(int *)(v73 + 48);
    ((void (*)(uint64_t, uint64_t *, uint64_t))v138)(v76, v160, v78);
    *(void *)(v76 + v86) = v151;
    uint64_t v87 = v145;
    sub_FF10(v161, v145, (uint64_t *)&unk_286C50);
    uint64_t v88 = v149;
    sub_FF10(v146, v149, &qword_284170);
    uint64_t v89 = *(unsigned __int8 *)(v140 + 80);
    uint64_t v90 = (v89 + 24) & ~v89;
    uint64_t v91 = *(unsigned __int8 *)(v143 + 80);
    uint64_t v92 = (v141 + v91 + v90) & ~v91;
    uint64_t v93 = *(unsigned __int8 *)(v147 + 80);
    uint64_t v94 = (v144 + v93 + v92) & ~v93;
    unint64_t v95 = (v148 + v94 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v96 = swift_allocObject(&unk_270078, v95 + 16, v89 | v91 | v93 | 7);
    *(void *)(v96 + 16) = v85;
    sub_45F6C(v76, v96 + v90, &qword_289340);
    sub_45F6C(v87, v96 + v92, (uint64_t *)&unk_286C50);
    sub_45F6C(v88, v96 + v94, &qword_284170);
    uint64_t v97 = (void (**)(uint64_t *))(v96 + v95);
    uint64_t v98 = v159;
    *uint64_t v97 = v158;
    v97[1] = v98;
    swift_retain(v85);
    swift_retain(v98);
    sub_1A95A0(v153, (uint64_t)sub_117978, v96);
    swift_release(v96);
    sub_1F6CC(v161, (uint64_t *)&unk_286C50);
    v99 = v160;
    uint64_t v100 = &qword_289340;
  }

  return sub_1F6CC((uint64_t)v99, v100);
}

uint64_t sub_114EB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a8;
  uint64_t v14 = sub_6C5C(&qword_289340);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = *(int *)(v15 + 48);
  uint64_t v19 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v17, a4, v19);
  uint64_t v21 = *(void **)(a4 + v18);
  *(void *)&v17[v18] = v21;
  id v22 = v21;
  sub_116984((uint64_t)v17, v22, a5, a1, a2, a6, a7, v25);

  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v17, v19);
}

uint64_t sub_114FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v31[1] = a5;
  uint64_t v10 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a2, (uint64_t)v18, (uint64_t *)&unk_286C50);
  OutputGenerationManifest.nlContextUpdate.setter(v18);
  __n128 v19 = swift_bridgeObjectRetain(a4);
  uint64_t v20 = OutputGenerationManifest.applicationSessionID.setter(a3, a4, v19);
  uint64_t v21 = SiriEnvironment.currentRequest.getter(v20);
  CurrentRequest.responseMode.getter(v21);
  swift_release(v21);
  OutputGenerationManifest.responseMode.setter(v15);
  OutputGenerationManifest.printSupportingDialogInDisplayModes.setter(1LL);
  uint64_t v22 = *(int *)(v10 + 48);
  uint64_t v23 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v12, a6, v23);
  uint64_t v25 = *(void **)(a6 + v22);
  *(void *)&v12[v22] = v25;
  id v26 = [v25 catId];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  uint64_t v29 = v28;

  OutputGenerationManifest.responseViewId.setter(v27, v29);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v23);
  return OutputGenerationManifest.preserveResultSpaceIfPossible.setter(1LL);
}

uint64_t sub_1151A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_6C5C(&qword_289340);
  v4[12] = v5;
  v4[13] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v4[14] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[15] = v7;
  v4[16] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_11522C, 0LL, 0LL);
}

uint64_t sub_11522C()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[14];
  if (v8)
  {
    uint64_t v36 = v0[16];
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v14 = static Insights.responseFramework.getter(v13);
    unint64_t v16 = v15;
    v0[7] = sub_6978(v14, v15, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 7, v0 + 8);
    swift_bridgeObjectRelease(v16);
    _os_log_impl( &dword_0,  v6,  v7,  "Determine+HandleIntentStrategy#intentHandledResponse returning output with snippet %{public}s",  v12,  0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v36, v11);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  }

  uint64_t v18 = v0[12];
  uint64_t v17 = v0[13];
  uint64_t v20 = v0[9];
  uint64_t v19 = v0[10];
  uint64_t v21 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v0[17] = ResponseFactory.init()();
  uint64_t v22 = type metadata accessor for SiriAudioSnippets(0LL);
  v0[5] = v22;
  v0[6] = sub_6DF0( (unint64_t *)&qword_286CA0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriAudioSnippets,  (uint64_t)&protocol conformance descriptor for SiriAudioSnippets);
  uint64_t v23 = sub_10974(v0 + 2);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16LL))(v23, v20, v22);
  uint64_t v24 = sub_6C5C(&qword_287980);
  uint64_t v25 = swift_allocObject(v24, 40LL, 7LL);
  *(_OWORD *)(v25 + 16) = xmmword_214980;
  uint64_t v26 = *(int *)(v18 + 48);
  uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v17, v19, v27);
  uint64_t v30 = *(void **)(v19 + v26);
  *(void *)(v17 + v26) = v30;
  *(void *)(v25 + 32) = v30;
  uint64_t v38 = v25;
  specialized Array._endMutation()(v29);
  uint64_t v31 = v38;
  v0[18] = v38;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  id v33 = v30;
  v32(v17, v27);
  v0[19] = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_55820;
  return ((uint64_t (*)(void, void *, uint64_t, void))v37)(v0[8], v0 + 2, v31, v0[11]);
}

uint64_t sub_115534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_6C5C(&qword_289340);
  v3[6] = v4;
  v3[7] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  v3[10] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1155C0, 0LL, 0LL);
}

uint64_t sub_1155C0()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[9];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[8];
  if (v8)
  {
    uint64_t v33 = v0[10];
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v14 = static Insights.responseFramework.getter(v13);
    unint64_t v16 = v15;
    v0[2] = sub_6978(v14, v15, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
    swift_bridgeObjectRelease(v16);
    _os_log_impl( &dword_0,  v6,  v7,  "Determine+HandleIntentStrategy#intentHandledResponse returning output with dialog only %{public}s",  v12,  0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v33, v11);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  }

  uint64_t v18 = v0[6];
  uint64_t v17 = v0[7];
  uint64_t v19 = v0[4];
  uint64_t v20 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v0[11] = ResponseFactory.init()();
  uint64_t v21 = sub_6C5C(&qword_287980);
  uint64_t v22 = swift_allocObject(v21, 40LL, 7LL);
  *(_OWORD *)(v22 + 16) = xmmword_214980;
  uint64_t v23 = *(int *)(v18 + 48);
  uint64_t v24 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v17, v19, v24);
  uint64_t v27 = *(void **)(v19 + v23);
  *(void *)(v17 + v23) = v27;
  *(void *)(v22 + 32) = v27;
  uint64_t v35 = v22;
  specialized Array._endMutation()(v26);
  uint64_t v28 = v35;
  v0[12] = v35;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  id v30 = v27;
  v29(v17, v24);
  v0[13] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_115870;
  return ((uint64_t (*)(void, uint64_t, void))v34)(v0[3], v28, v0[5]);
}

uint64_t sub_115870()
{
  uint64_t v1 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 80);
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v4 = *(void *)(*v0 + 56);
  uint64_t v6 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 104));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t Determine.HandleIntentStrategy.makeSiriKitIntentHandler(app:intent:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_retain_n(a1, 2LL);
  id v11 = a2;
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc(22LL, -1LL);
    uint64_t v39 = a3;
    uint64_t v16 = v15;
    uint64_t v36 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v40 = a1;
    v41[0] = v17;
    uint64_t v18 = type metadata accessor for App(0LL);
    int v35 = v14;
    uint64_t v19 = v18;
    uint64_t v20 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v37 = v7;
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v19, v20);
    unint64_t v23 = v22;
    uint64_t v40 = sub_6978(v21, v22, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v23);
    *(_WORD *)(v16 + 12) = 2112;
    uint64_t v40 = (uint64_t)v11;
    id v24 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41);
    uint64_t v25 = v36;
    *uint64_t v36 = v11;

    _os_log_impl( &dword_0,  v12,  (os_log_type_t)v35,  "Determine+HandleIntentStrategy#makeSiriKitIntentHandler called with app: %s and intent: %@",  (uint8_t *)v16,  0x16u);
    uint64_t v26 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v25, 1LL, v26);
    swift_slowDealloc(v25, -1LL, -1LL);
    uint64_t v27 = v38;
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    uint64_t v28 = v16;
    a3 = v39;
    swift_slowDealloc(v28, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v6);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  uint64_t v29 = qword_2838B8;
  swift_retain(a1);
  if (v29 != -1) {
    swift_once(&qword_2838B8, sub_F3718);
  }
  swift_beginAccess(&static Determine.intentHandler, v41, 0LL, 0LL);
  id v30 = (void *)static Determine.intentHandler;
  uint64_t v31 = type metadata accessor for DetermineIntent();
  SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(a1, v30, v11, v31);
  uint64_t v32 = type metadata accessor for SiriKitIntentHandler(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(a3, 0LL, 1LL, v32);
}

uint64_t Determine.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  return sub_11738C(a1, a3, a4, a5);
}

uint64_t sub_115C88(id a1, void *a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  uint64_t v91 = a5;
  uint64_t v100 = a3;
  uint64_t v101 = a4;
  uint64_t v96 = a2;
  id v94 = a1;
  uint64_t v5 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v5);
  uint64_t v93 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = sub_6C5C(&qword_289340);
  uint64_t v7 = __chkstk_darwin(v102);
  uint64_t v92 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  v103 = (char *)&v84 - v9;
  uint64_t v10 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v10);
  v99 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v98 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v97 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v104 = v16;
  uint64_t v105 = v17;
  __chkstk_darwin(v16);
  unint64_t v95 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char **)((char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10((uint64_t)v94, (uint64_t)v29, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v29, v27) == 1)
  {
    id v30 = *v29;
    v103 = v30;
    (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.dhis(_:),  v23);
    (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v19);
    swift_getErrorValue(v30, v109, v108);
    uint64_t v31 = Error.localizedDescription.getter(v108[1], v108[2]);
    uint64_t v33 = v32;
    uint64_t v102 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v26,  v22,  v31,  v32,  1LL,  0LL);
    id v94 = v34;
    __n128 v35 = swift_bridgeObjectRelease(v33);
    (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v35);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    uint64_t v36 = v96 + 3;
    uint64_t v37 = v96[6];
    uint64_t v96 = (void *)v96[7];
    sub_6EA8(v36, v37);
    uint64_t v38 = v104;
    uint64_t v39 = v95;
    (*(void (**)(char *, void, uint64_t))(v105 + 104))(v95, enum case for TypeOfIntent.determine(_:), v104);
    uint64_t v40 = enum case for ActivityType.failed(_:);
    uint64_t v41 = type metadata accessor for ActivityType(0LL);
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v43 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v97, v40, v41);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v43, 0LL, 1LL, v41);
    uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v45 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))(v98, 1LL, 1LL, v44);
    uint64_t v46 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v47 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v99, v46, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0LL, 1LL, v47);
    id v50 = v94;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v39,  v43,  v45,  v49,  v102,  v94,  v37,  v96);
    swift_bridgeObjectRelease(v50);
    sub_1F6CC(v49, &qword_2845A0);
    sub_1F6CC(v45, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v43, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v39, v38);
    unint64_t v51 = v103;
    v106[0] = v103;
    char v107 = 1;
    swift_errorRetain(v103);
    v100(v106);
    swift_errorRelease(v51);
    return sub_1F6CC((uint64_t)v106, (uint64_t *)&unk_286C60);
  }

  else
  {
    uint64_t v53 = *(int *)(v102 + 48);
    uint64_t v89 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v90 = *(void *)(v89 - 8);
    uint64_t v88 = *(void (**)(char *, char **, uint64_t))(v90 + 32);
    uint64_t v54 = v103;
    v88(v103, v29, v89);
    uint64_t v55 = *(char **)((char *)v29 + v53);
    *(void *)&v54[v53] = v55;
    (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.dhis(_:),  v23);
    (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v19);
    uint64_t v56 = (uint64_t *)(v91 + OBJC_IVAR___DetermineIntentResponse_code);
    swift_beginAccess(v91 + OBJC_IVAR___DetermineIntentResponse_code, v106, 0LL, 0LL);
    uint64_t v110 = *v56;
    id v94 = v55;
    uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    uint64_t v59 = v58;
    uint64_t v91 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v26,  v22,  v57,  v58,  2LL,  0LL);
    uint64_t v87 = v60;
    __n128 v61 = swift_bridgeObjectRelease(v59);
    (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v61);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    uint64_t v62 = v96;
    uint64_t v84 = v96[6];
    uint64_t v86 = v96[7];
    sub_6EA8(v96 + 3, v84);
    uint64_t v63 = v95;
    (*(void (**)(char *, void, uint64_t))(v105 + 104))(v95, enum case for TypeOfIntent.determine(_:), v104);
    uint64_t v64 = enum case for ActivityType.failed(_:);
    uint64_t v65 = type metadata accessor for ActivityType(0LL);
    uint64_t v66 = *(void *)(v65 - 8);
    uint64_t v67 = (uint64_t)v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 104))(v97, v64, v65);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v67, 0LL, 1LL, v65);
    uint64_t v68 = *(int *)(v102 + 48);
    uint64_t v69 = v90;
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    uint64_t v70 = (uint64_t)v92;
    uint64_t v71 = v89;
    v85(v92, v103, v89);
    *(void *)(v70 + v68) = v94;
    uint64_t v72 = (uint64_t)v98;
    v88(v98, (char **)v70, v71);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v72, 0LL, 1LL, v71);
    uint64_t v73 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
    uint64_t v74 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v75 = *(void *)(v74 - 8);
    uint64_t v76 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v99, v73, v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0LL, 1LL, v74);
    uint64_t v77 = v87;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v63,  v67,  v72,  v76,  v91,  v87,  v84,  v86);
    swift_bridgeObjectRelease(v77);
    sub_1F6CC(v76, &qword_2845A0);
    sub_1F6CC(v72, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v67, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v63, v104);
    sub_6EA8(v62 + 10, v62[13]);
    uint64_t v78 = (uint64_t)v103;
    uint64_t v79 = *(int *)(v102 + 48);
    uint64_t v80 = v89;
    v85((char *)v70, v103, v89);
    id v81 = v94;
    *(void *)(v70 + v79) = v94;
    uint64_t v82 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v83 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56LL))(v93, 1LL, 1LL, v82);
    sub_175200(v70, v81, v83, (uint64_t)_swiftEmptyArrayStorage, (void (*)(void))v100, v101);

    sub_1F6CC(v83, (uint64_t *)&unk_286C50);
    sub_1F6CC(v78, &qword_289340);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v70, v80);
  }

void *Determine.HandleIntentStrategy.deinit()
{
  return v0;
}

uint64_t Determine.HandleIntentStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 240LL, 7LL);
}

uint64_t sub_11664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Determine.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_1166B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Determine.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_11671C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Determine.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

void sub_116784(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1167A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Determine.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_11680C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for Determine.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_116874(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  return sub_11738C(a1, a3, a4, a5);
}

uint64_t sub_1168A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Determine.HandleIntentStrategy();
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_1168D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return Determine.HandleIntentStrategy.makeSiriKitIntentHandler(app:intent:)(a1, a2, a3);
}

uint64_t sub_1168EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Determine.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_11692C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for Determine.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_116984( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v151 = a7;
  uint64_t v152 = a8;
  uint64_t v143 = a6;
  uint64_t v140 = a4;
  uint64_t v141 = a5;
  uint64_t v139 = a3;
  uint64_t v10 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v10);
  uint64_t v144 = (uint64_t)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v155 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v148 = *(void *)(v155 - 8);
  uint64_t v12 = __chkstk_darwin(v155);
  uint64_t v128 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = v13;
  __chkstk_darwin(v12);
  uint64_t v147 = (char *)&v123 - v14;
  uint64_t v15 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v15);
  uint64_t v136 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v145 = v20;
  uint64_t v146 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v123 - v21;
  uint64_t v126 = type metadata accessor for ResponseMode(0LL);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  v153 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v123 - v28;
  uint64_t v30 = sub_6C5C(&qword_289340);
  uint64_t v137 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  v142 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __chkstk_darwin(v31);
  v132 = (char *)&v123 - v34;
  uint64_t v138 = v35;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v123 - v36;
  uint64_t v38 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v39 = *(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16LL);
  uint64_t v134 = v38;
  uint64_t v133 = v39;
  ((void (*)(char *, uint64_t))v39)(v37, a1);
  uint64_t v135 = v30;
  uint64_t v40 = *(int *)(v30 + 48);
  v154 = v37;
  *(void *)&v37[v40] = a2;
  uint64_t v41 = qword_283888;
  id v131 = a2;
  if (v41 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v42 = sub_6960(v24, (uint64_t)qword_2969C8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v129 = v42;
  uint64_t v130 = v43;
  uint64_t v44 = ((uint64_t (*)(char *))v43)(v29);
  uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v48 = v24;
  uint64_t v149 = v18;
  uint64_t v150 = v17;
  v157 = v22;
  if (v47)
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    uint64_t v159 = v50;
    *(_DWORD *)uint64_t v49 = 136446210;
    uint64_t v51 = static Insights.responseFramework.getter(v50);
    unint64_t v53 = v52;
    uint64_t v158 = sub_6978(v51, v52, &v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, &v159);
    swift_bridgeObjectRelease(v53);
    _os_log_impl(&dword_0, v45, v46, "Determine+HandleIntentStrategy#intentHandledResponse... %{public}s", v49, 0xCu);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v25 + 8);
  uint64_t v55 = v54(v29, v24);
  uint64_t v56 = v153;
  uint64_t v57 = static SiriEnvironmentWrapper.retrieve()(v55);
  if (!v57)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v57 = static SiriEnvironment.default.getter();
  }

  uint64_t v58 = v57;
  v130(v56, v129, v24);
  uint64_t v59 = swift_retain_n(v58, 2LL);
  uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
  os_log_type_t v61 = static os_log_type_t.info.getter(v60);
  BOOL v62 = os_log_type_enabled(v60, v61);
  uint64_t v156 = v58;
  if (v62)
  {
    uint64_t v63 = swift_slowAlloc(12LL, -1LL);
    uint64_t v130 = (void (*)(char *, uint64_t, uint64_t))v54;
    uint64_t v64 = (uint8_t *)v63;
    uint64_t v65 = swift_slowAlloc(32LL, -1LL);
    uint64_t v159 = v65;
    *(_DWORD *)uint64_t v64 = 136315138;
    uint64_t v66 = SiriEnvironment.currentRequest.getter(v65);
    uint64_t v67 = v124;
    CurrentRequest.responseMode.getter(v66);
    uint64_t v68 = swift_release(v66);
    uint64_t v69 = ResponseMode.description.getter(v68);
    uint64_t v129 = v48;
    unint64_t v71 = v70;
    (*(void (**)(char *, uint64_t))(v125 + 8))(v67, v126);
    uint64_t v158 = sub_6978(v69, v71, &v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, &v159);
    swift_release_n(v58, 2LL);
    swift_bridgeObjectRelease(v71);
    _os_log_impl( &dword_0,  v60,  v61,  "Determine+HandleIntentStrategy#intentHandledResponse with responseMode = %s",  v64,  0xCu);
    swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1LL, -1LL);
    swift_slowDealloc(v64, -1LL, -1LL);

    uint64_t v72 = ((uint64_t (*)(char *, uint64_t))v130)(v153, v129);
  }

  else
  {

    swift_release_n(v58, 2LL);
    uint64_t v72 = v54(v56, v24);
  }

  uint64_t v73 = v135;
  uint64_t v74 = v133;
  uint64_t v75 = v136;
  static DialogPhase.completion.getter(v72);
  uint64_t v76 = *(int *)(v73 + 48);
  uint64_t v77 = (uint64_t)v132;
  uint64_t v78 = (uint64_t)v154;
  uint64_t v79 = v134;
  uint64_t v80 = v74(v132, v154, v134);
  *(void *)(v77 + v76) = v131;
  __chkstk_darwin(v80);
  uint64_t v81 = v140;
  *(&v123 - 6) = v139;
  *(&v123 - 5) = v81;
  uint64_t v82 = v156;
  *(&v123 - 4) = v141;
  *(&v123 - sub_6C3C(v0 + 3) = v82;
  *(&v123 - 2) = v77;
  uint64_t v84 = (char *)v83;
  OutputGenerationManifest.init(dialogPhase:_:)(v75, sub_117A3C, &v123 - 8);
  sub_1F6CC(v77, &qword_289340);
  uint64_t v85 = v144;
  sub_FF10((uint64_t)v143, v144, &qword_284170);
  uint64_t v86 = v148;
  uint64_t v87 = v155;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v85, 1LL, v155) == 1)
  {
    sub_1F6CC(v85, &qword_284170);
    uint64_t v88 = *(int *)(v73 + 48);
    uint64_t v89 = (uint64_t)v142;
    v74(v142, (char *)v78, v79);
    *(void *)(v89 + v88) = v84;
    uint64_t v91 = v149;
    uint64_t v90 = v150;
    uint64_t v92 = v146;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v146, v157, v150);
    uint64_t v93 = *(unsigned __int8 *)(v137 + 80);
    uint64_t v94 = (v93 + 16) & ~v93;
    uint64_t v95 = *(unsigned __int8 *)(v91 + 80);
    uint64_t v96 = (v138 + v95 + v94) & ~v95;
    uint64_t v97 = swift_allocObject(&unk_2700A0, v96 + v145, v93 | v95 | 7);
    sub_45F6C(v89, v97 + v94, &qword_289340);
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v97 + v96, v92, v90);
    uint64_t v98 = v84;
    uint64_t v99 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v151, v152, &unk_28A000, v97, v99);
    swift_release(v156);
    swift_release(v97);
  }

  else
  {
    uint64_t v143 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 32);
    uint64_t v100 = v147;
    v143(v147, v85, v87);
    uint64_t v101 = v128;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v128, v100, v87);
    uint64_t v102 = *(int *)(v73 + 48);
    v103 = (void (*)(char *, uint64_t, uint64_t))v74;
    uint64_t v104 = v142;
    v103(v142, v78, v79);
    v153 = v84;
    *(void *)&v104[v102] = v84;
    uint64_t v106 = v149;
    uint64_t v105 = v150;
    char v107 = v146;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v146, v157, v150);
    uint64_t v108 = *(unsigned __int8 *)(v86 + 80);
    uint64_t v109 = (v108 + 16) & ~v108;
    uint64_t v110 = *(unsigned __int8 *)(v137 + 80);
    uint64_t v111 = (v127 + v110 + v109) & ~v110;
    uint64_t v112 = *(unsigned __int8 *)(v106 + 80);
    uint64_t v113 = (v138 + v112 + v111) & ~v112;
    uint64_t v114 = swift_allocObject(&unk_2700C8, v113 + v145, v108 | v112 | v110 | 7);
    __n128 v115 = v101;
    uint64_t v116 = v155;
    v143((char *)(v114 + v109), (uint64_t)v115, v155);
    uint64_t v117 = v114 + v111;
    uint64_t v78 = (uint64_t)v154;
    uint64_t v118 = (uint64_t)v104;
    uint64_t v91 = v106;
    sub_45F6C(v118, v117, &qword_289340);
    uint64_t v119 = v114 + v113;
    uint64_t v90 = v105;
    (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v119, v107, v105);
    uint64_t v120 = v153;
    uint64_t v121 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v151, v152, &unk_28A010, v114, v121);
    swift_release(v156);
    swift_release(v114);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v147, v116);
  }

  (*(void (**)(char *, uint64_t))(v91 + 8))(v157, v90);
  return sub_1F6CC(v78, &qword_289340);
}

uint64_t sub_11738C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v12);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v38 = v5;
    uint64_t v20 = a2;
    uint64_t v21 = a4;
    uint64_t v22 = a3;
    uint64_t v23 = a1;
    uint64_t v24 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "Determine+HandleIntentStrategy#makeFailureHandlingIntentResponse", v19, 2u);
    uint64_t v25 = v24;
    a1 = v23;
    a3 = v22;
    a4 = v21;
    a2 = v20;
    uint64_t v5 = v38;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v26 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v26, v44);
  *(_OWORD *)(inited + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  uint64_t v40 = 0LL;
  unint64_t v41 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(37LL);
  swift_bridgeObjectRelease(v41);
  unint64_t v42 = 0xD000000000000023LL;
  unint64_t v43 = 0x8000000000220D80LL;
  uint64_t v28 = &a2[OBJC_IVAR___DetermineIntentResponse_code];
  swift_beginAccess(&a2[OBJC_IVAR___DetermineIntentResponse_code], &v40, 0LL, 0LL);
  uint64_t v39 = *(void *)v28;
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(object);
  unint64_t v31 = v42;
  unint64_t v32 = v43;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v31;
  *(void *)(inited + 56) = v32;
  unint64_t v33 = sub_74D54(inited);
  uint64_t v34 = (void *)swift_allocObject(&unk_270028, 48LL, 7LL);
  v34[2] = v5;
  v34[3] = a3;
  v34[4] = a4;
  v34[5] = a2;
  swift_retain(v5);
  swift_retain(a4);
  uint64_t v35 = a2;
  sub_C4E64(v33, a1, (uint64_t)sub_1176E4, (uint64_t)v34);
  swift_bridgeObjectRelease(v33);
  return swift_release(v34);
}

uint64_t sub_117664(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_289EE8,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for Determine.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for Determine.HandleIntentStrategy);
}

uint64_t type metadata accessor for Determine.HandleIntentStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin9Determine20HandleIntentStrategy);
}

uint64_t sub_1176B0()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1176E4(void *a1)
{
  return sub_115C88( a1,  *(void **)(v1 + 16),  *(void (**)(void *))(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_1176F0()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_284170) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));

  uint64_t v5 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1177A8(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_284170) - 8) + 80LL);
  return sub_1140DC( a1,  *(void **)(v1 + 16),  *(void (**)(uint64_t *))(v1 + 24),  *(void (**)(uint64_t *))(v1 + 32),  *(char **)(v1 + 40),  *(void *)(v1 + 48),  v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_1177F4()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = *(void *)(sub_6C5C(&qword_284170) - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  swift_release(*(void *)(v0 + 16));
  uint64_t v14 = v0 + v4;
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v14, v15);

  uint64_t v16 = v0 + v8;
  uint64_t v17 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (v13 + v12 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v22 = v21 + 16;
  swift_release(*(void *)(v0 + v21 + 8));
  return swift_deallocObject(v0, v22, v3 | v7 | v11 | 7);
}

uint64_t sub_117978(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_6C5C(&qword_284170) - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (uint64_t *)(v2 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_114EB8( a1,  a2,  *(void *)(v2 + 16),  v2 + v6,  v2 + v9,  (void (*)(char *, uint64_t, uint64_t))(v2 + v12),  *v13,  v13[1]);
}

uint64_t sub_117A3C(uint64_t a1)
{
  return sub_114FBC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_117A4C()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  uint64_t v12 = v0 + v4;
  uint64_t v13 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_117B18(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + (v8 & ~v7);
  uint64_t v11 = (void *)swift_task_alloc(dword_289FFC);
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_3B08C;
  return sub_115534(a1, v9, v10);
}

uint64_t sub_117BBC()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v17 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v8, v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return swift_deallocObject(v0, v17, v14);
}

uint64_t sub_117CD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_28A00C);
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_11C64;
  return sub_1151A0(a1, v12, v13, v14);
}

uint64_t sub_117DAC(uint64_t a1)
{
  uint64_t v122 = a1;
  uint64_t v1 = sub_6C5C(&qword_285BD0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v108 = (uint64_t)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  char v107 = (char *)&v104 - v4;
  uint64_t v115 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v113 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v105 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v111 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v111);
  uint64_t v114 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_284DB0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v109 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v118 = (uint64_t)&v104 - v11;
  __chkstk_darwin(v10);
  uint64_t v112 = (char *)&v104 - v12;
  uint64_t v13 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v13);
  uint64_t v119 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Parse(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (void **)((char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v106 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v104 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v117 = (char *)&v104 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v116 = (char *)&v104 - v29;
  __chkstk_darwin(v28);
  unint64_t v31 = (char *)&v104 - v30;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v32 = sub_6960(v19, (uint64_t)qword_2969C8);
  unint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v120 = v32;
  uint64_t v121 = v33;
  uint64_t v34 = v19;
  uint64_t v35 = ((uint64_t (*)(char *))v33)(v31);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl(&dword_0, v36, v37, "OpenMediaItemFlow#on validating input...", v38, 2u);
    swift_slowDealloc(v38, -1LL, -1LL);
  }

  uint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v40 = v34;
  uint64_t v41 = v39(v31, v34);
  Input.parse.getter(v41);
  if ((*(unsigned int (**)(void **, uint64_t))(v16 + 88))(v18, v15) != enum case for Parse.pommesResponse(_:))
  {
    uint64_t v58 = v121(v25, v120, v34);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v61 = 0;
      _os_log_impl(&dword_0, v59, v60, "OpenMediaItemFlow#on unexpected parse type, rejecting", v61, 2u);
      swift_slowDealloc(v61, -1LL, -1LL);
    }

    v39(v25, v40);
    (*(void (**)(void **, uint64_t))(v16 + 8))(v18, v15);
    return 0LL;
  }

  (*(void (**)(void **, uint64_t))(v16 + 96))(v18, v15);
  unint64_t v42 = (char *)*v18;
  uint64_t v43 = sub_10470();
  if (!v43)
  {
    BOOL v62 = v117;
    v121(v117, v120, v34);
    uint64_t v63 = v42;
    uint64_t v64 = v40;
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      uint64_t v122 = v64;
      v123[0] = v68;
      uint64_t v69 = v68;
      *(_DWORD *)uint64_t v67 = 136315138;
      uint64_t v121 = (uint64_t (*)(char *, uint64_t, uint64_t))(v67 + 4);
      uint64_t v70 = dispatch thunk of PommesResponse.experiences.getter(v68);
      uint64_t v71 = type metadata accessor for Experience(0LL);
      uint64_t v72 = Array.description.getter(v70, v71);
      unint64_t v74 = v73;
      swift_bridgeObjectRelease(v70);
      uint64_t v124 = sub_6978(v72, v74, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, &v125);

      swift_bridgeObjectRelease(v74);
      _os_log_impl( &dword_0,  v65,  v66,  "OpenMediaItemFlow#on pommesResponse doesn't contain audioExperience %s",  v67,  0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);

      uint64_t v75 = v117;
      uint64_t v76 = v122;
    }

    else
    {

      uint64_t v75 = v62;
      uint64_t v76 = v64;
    }

uint64_t sub_118848(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v3 = sub_6C5C(&qword_284DC8);
  v2[22] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_2845D0);
  v2[23] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_2845A0);
  v2[24] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_2845A8);
  v2[25] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TypeOfIntent(0LL);
  v2[26] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[27] = v8;
  v2[28] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  v2[29] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[30] = v10;
  v2[31] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  v2[32] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v2[33] = v12;
  v2[34] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  v2[35] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v2[36] = v14;
  v2[37] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for PlaybackItem.Identifier(0LL);
  v2[38] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v2[39] = v16;
  v2[40] = swift_task_alloc((*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for CommonAudio.MediaType(0LL);
  v2[41] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v2[42] = v18;
  unint64_t v19 = (*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[43] = swift_task_alloc(v19);
  v2[44] = swift_task_alloc(v19);
  v2[45] = swift_task_alloc(v19);
  uint64_t v20 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioItem(0LL);
  v2[46] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v2[47] = v21;
  v2[48] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AudioMediaItem(0LL);
  v2[49] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v2[50] = v23;
  unint64_t v24 = (*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[51] = swift_task_alloc(v24);
  v2[52] = swift_task_alloc(v24);
  v2[53] = swift_task_alloc(v24);
  uint64_t v25 = type metadata accessor for Input(0LL);
  v2[54] = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  v2[55] = v26;
  v2[56] = swift_task_alloc((*(void *)(v26 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C(&qword_285BD0);
  v2[57] = swift_task_alloc((*(void *)(*(void *)(v27 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for Parse(0LL);
  v2[58] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v2[59] = v29;
  v2[60] = swift_task_alloc((*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for Logger(0LL);
  v2[61] = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  v2[62] = v31;
  unint64_t v32 = (*(void *)(v31 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[63] = swift_task_alloc(v32);
  v2[64] = swift_task_alloc(v32);
  v2[65] = swift_task_alloc(v32);
  v2[66] = swift_task_alloc(v32);
  v2[67] = swift_task_alloc(v32);
  v2[68] = swift_task_alloc(v32);
  v2[69] = swift_task_alloc(v32);
  v2[70] = swift_task_alloc(v32);
  v2[71] = swift_task_alloc(v32);
  v2[72] = swift_task_alloc(v32);
  v2[73] = swift_task_alloc(v32);
  v2[74] = swift_task_alloc(v32);
  v2[75] = swift_task_alloc(v32);
  return swift_task_switch(sub_118BB8, 0LL, 0LL);
}

uint64_t sub_118BB8()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[62];
  uint64_t v3 = sub_6960(v0[61], (uint64_t)qword_2969C8);
  v0[76] = v3;
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 16);
  v0[77] = v4;
  uint64_t v223 = v3;
  v227 = v4;
  uint64_t v5 = ((uint64_t (*)(uint64_t))v4)(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "OpenMediaItemFlow#execute", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v9 = v0[75];
  uint64_t v10 = v0[61];
  uint64_t v11 = v0[62];
  uint64_t v12 = v0[57];
  uint64_t v13 = v0[54];
  uint64_t v14 = v0[55];
  uint64_t v15 = v0[21];

  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[78] = v16;
  v16(v9, v10);
  uint64_t v17 = v15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_input;
  swift_beginAccess(v15 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_input, v0 + 2, 0LL, 0LL);
  sub_FF10(v17, v12, &qword_285BD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13))
  {
    sub_1F6CC(v0[57], &qword_285BD0);
  }

  else
  {
    uint64_t v18 = v16;
    uint64_t v19 = v0[59];
    uint64_t v20 = v0[60];
    uint64_t v21 = v0[57];
    uint64_t v22 = v0[58];
    uint64_t v24 = v0[55];
    uint64_t v23 = v0[56];
    uint64_t v25 = v0[54];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v21, v25);
    uint64_t v26 = sub_1F6CC(v21, &qword_285BD0);
    Input.parse.getter(v26);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    int v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v20, v22);
    uint64_t v28 = v0[59];
    uint64_t v29 = (void *)v0[60];
    uint64_t v30 = v0[58];
    if (v27 == enum case for Parse.pommesResponse(_:))
    {
      uint64_t v31 = v0[21];
      (*(void (**)(void, uint64_t))(v28 + 96))(v0[60], v30);
      unint64_t v32 = *(void **)(v31 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_pommesResponse);
      *(void *)(v31 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_pommesResponse) = *v29;
    }

    else
    {
      (*(void (**)(void, uint64_t))(v28 + 8))(v0[60], v30);
    }

    uint64_t v16 = v18;
  }

  unint64_t v33 = *(void **)(v0[21] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_pommesResponse);
  v0[79] = v33;
  if (!v33) {
    goto LABEL_27;
  }
  id v34 = v33;
  uint64_t v35 = sub_10470();
  v0[80] = v35;
  if (!v35)
  {

LABEL_27:
    uint64_t v95 = ((uint64_t (*)(void, uint64_t, void))v227)(v0[65], v223, v0[61]);
    uint64_t v96 = (os_log_s *)Logger.logObject.getter(v95);
    os_log_type_t v97 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v98 = 0;
      _os_log_impl(&dword_0, v96, v97, "OpenMediaItemFlow#execute missing pommesResponse or audioExperience", v98, 2u);
      swift_slowDealloc(v98, -1LL, -1LL);
    }

    uint64_t v99 = v0[65];
    uint64_t v100 = v0[61];
    uint64_t v102 = v0[30];
    uint64_t v101 = v0[31];
    uint64_t v103 = v0[29];

    v16(v99, v100);
    (*(void (**)(uint64_t, void, uint64_t))(v102 + 104))( v101,  enum case for AdditionalMetricsDescription.StatusReason.missingPommesResponse(_:),  v103);
    uint64_t v104 = (void *)swift_task_alloc(dword_28A07C);
    v0[100] = v104;
    uint64_t v105 = sub_11B57C;
    goto LABEL_30;
  }

  uint64_t v36 = (void *)v35;
  type metadata accessor for AudioPluginProcessor(0LL);
  uint64_t v37 = AudioPluginProcessor.__allocating_init()();
  uint64_t v38 = dispatch thunk of PommesResponse.clientResults.getter();
  v0[81] = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v36, v38);
  swift_bridgeObjectRelease(v38);
  uint64_t v39 = swift_release(v37);
  uint64_t v40 = PommesAudioPluginResults.audioResults.getter(v39);
  uint64_t v41 = v40;
  if (!((unint64_t)v40 >> 62))
  {
    uint64_t result = *(void *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFF8LL));
    if (result) {
      goto LABEL_15;
    }
LABEL_63:
    uint64_t v191 = v0[66];
    uint64_t v192 = v0[61];
    __n128 v193 = swift_bridgeObjectRelease(v41);
    uint64_t v194 = v227(v191, v223, v192, v193);
    v195 = (os_log_s *)Logger.logObject.getter(v194);
    os_log_type_t v196 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v195, v196))
    {
      v197 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v197 = 0;
      _os_log_impl( &dword_0,  v195,  v196,  "OpenMediaItemFlow#execute failed to get audioItem from ranked results",  v197,  2u);
      swift_slowDealloc(v197, -1LL, -1LL);
    }

    uint64_t v198 = v0[66];
    uint64_t v199 = v0[61];
    uint64_t v200 = v0[23];

    v16(v198, v199);
    type metadata accessor for AudioUsoIntent(0LL);
    id v201 = v36;
    Experience.userDialogAct.getter(v201);

    uint64_t v202 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v202 - 8) + 56LL))(v200, 0LL, 1LL, v202);
    uint64_t v203 = AudioUsoIntent.__allocating_init(userDialogAct:)(v200);
    v0[97] = v203;
    uint64_t v204 = v0[41];
    uint64_t v205 = v0[42];
    uint64_t v206 = v0[22];
    if (v203)
    {
      dispatch thunk of AudioUsoIntent.mediaType.getter(v203);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48))(v206, 1LL, v204) != 1)
      {
        (*(void (**)(void, void, void))(v0[42] + 32LL))(v0[43], v0[22], v0[41]);
LABEL_70:
        uint64_t v209 = v0[42];
        uint64_t v208 = v0[43];
        uint64_t v210 = v0[41];
        Swift::Bool v211 = CommonAudio.MediaType.isPodcastType()();
        uint64_t v212 = (*(uint64_t (**)(uint64_t, uint64_t))(v209 + 8))(v208, v210);
        if (v211) {
          uint64_t v213 = static BundleIdentifiers.podcasts.getter(v212);
        }
        else {
          uint64_t v213 = static BundleIdentifiers.music.getter(v212);
        }
        uint64_t v215 = v213;
        uint64_t v216 = v214;
        type metadata accessor for App(0LL);
        uint64_t v217 = App.__allocating_init(appIdentifier:)(v215, v216);
        v0[98] = v217;
        v218 = (void *)swift_task_alloc(dword_28A084);
        v0[99] = v218;
        void *v218 = v0;
        v218[1] = sub_11B2FC;
        return sub_11D384(v217);
      }
    }

    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v205 + 56))(v0[22], 1LL, 1LL, v0[41]);
    }

    uint64_t v207 = v0[22];
    (*(void (**)(void, void, void))(v0[42] + 104LL))( v0[43],  enum case for CommonAudio.MediaType.unknown(_:),  v0[41]);
    sub_1F6CC(v207, &qword_284DC8);
    goto LABEL_70;
  }

  if (v40 >= 0) {
    v40 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v40);
  if (!result) {
    goto LABEL_63;
  }
LABEL_15:
  v222 = v16;
  if ((v41 & 0xC000000000000001LL) != 0)
  {
    uint64_t v43 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v41);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return result;
    }

    uint64_t v43 = *(void *)(v41 + 32);
    swift_retain(v43);
  }

  uint64_t v45 = (uint8_t *)v0[52];
  uint64_t v44 = v0[53];
  uint64_t v47 = v0[49];
  uint64_t v46 = v0[50];
  uint64_t v49 = v0[47];
  uint64_t v48 = v0[48];
  uint64_t v50 = v0[46];
  swift_bridgeObjectRelease(v41);
  AudioResult.audioItem.getter(v51);
  swift_release(v43);
  sub_203C38(v45);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  uint64_t v52 = (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t))(v46 + 32))(v44, v45, v47);
  uint64_t v53 = AudioMediaItem.identifier.getter(v52);
  if (!v54
    || (uint64_t v55 = v53,
        uint64_t v56 = v54,
        uint64_t v57 = type metadata accessor for PlaybackItem(0LL),
        swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52)),
        uint64_t v58 = PlaybackItem.init(_:assetInfo:)(v55, v56, 0LL, 0LL),
        (v0[82] = v58) == 0LL))
  {
    uint64_t v106 = v0[53];
    uint64_t v107 = v0[50];
    uint64_t v108 = v0[51];
    uint64_t v109 = v0[49];
    ((void (*)(void, uint64_t, void))v227)(v0[67], v223, v0[61]);
    uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v108, v106, v109);
    uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
    os_log_type_t v112 = static os_log_type_t.error.getter();
    BOOL v113 = os_log_type_enabled(v111, v112);
    uint64_t v114 = v0[67];
    uint64_t v115 = v0[61];
    uint64_t v117 = v0[50];
    uint64_t v116 = v0[51];
    if (v113)
    {
      uint64_t v221 = v0[49];
      uint64_t v229 = v0[67];
      uint64_t v118 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v119 = swift_slowAlloc(32LL, -1LL);
      uint64_t v233 = v119;
      *(_DWORD *)uint64_t v118 = 136315138;
      uint64_t v120 = AudioMediaItem.identifier.getter(v119);
      if (v121)
      {
        unint64_t v122 = v121;
      }

      else
      {
        uint64_t v120 = 0x3E6C696E3CLL;
        unint64_t v122 = 0xE500000000000000LL;
      }

      v0[15] = sub_6978(v120, v122, &v233);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 15, v0 + 16);
      __n128 v123 = swift_bridgeObjectRelease(v122);
      uint64_t v124 = *(void (**)(uint64_t, uint64_t, __n128))(v117 + 8);
      v124(v116, v221, v123);
      _os_log_impl(&dword_0, v111, v112, "OpenMediaItemFlow#execute failed to convert identifier: %s", v118, 0xCu);
      swift_arrayDestroy(v119, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v119, -1LL, -1LL);
      swift_slowDealloc(v118, -1LL, -1LL);

      uint64_t v126 = v115;
      uint64_t v125 = v229;
    }

    else
    {
      uint64_t v124 = *(void (**)(uint64_t, uint64_t, __n128))(v117 + 8);
      ((void (*)(void, void))v124)(v0[51], v0[49]);

      uint64_t v125 = v114;
      uint64_t v126 = v115;
    }

    v222(v125, v126);
    v0[95] = v124;
    (*(void (**)(void, void, void))(v0[30] + 104LL))( v0[31],  enum case for AdditionalMetricsDescription.StatusReason.failedToConvertPlaybackIdentifier(_:),  v0[29]);
    uint64_t v104 = (void *)swift_task_alloc(dword_28A07C);
    v0[96] = v104;
    uint64_t v105 = sub_11B05C;
    goto LABEL_30;
  }

  uint64_t v59 = v0[45];
  uint64_t v61 = v0[41];
  uint64_t v60 = v0[42];
  ((void (*)(void))AudioMediaItem.type.getter)();
  Swift::Bool v62 = CommonAudio.MediaType.isPodcastType()();
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v0[83] = v63;
  v63(v59, v61);
  uint64_t v64 = v0[61];
  if (!v62)
  {
    uint64_t v127 = ((uint64_t (*)(void, uint64_t, uint64_t))v227)(v0[70], v223, v64);
    uint64_t v128 = (os_log_s *)Logger.logObject.getter(v127);
    os_log_type_t v129 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v128, v129))
    {
      uint64_t v130 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v130 = 0;
      _os_log_impl(&dword_0, v128, v129, "OpenMediaItemFlow#execute using Music open intent", v130, 2u);
      swift_slowDealloc(v130, -1LL, -1LL);
    }

    uint64_t v131 = v0[70];
    uint64_t v132 = v0[61];
    uint64_t v133 = v0[39];
    uint64_t v134 = v0[40];
    uint64_t v135 = v0[38];

    uint64_t v136 = ((uint64_t (*)(uint64_t, uint64_t))v222)(v131, v132);
    PlaybackItem.identifier.getter(v136);
    Swift::String_optional v137 = PlaybackItem.Identifier.toMusicSiriRepresentation()();
    v0[91] = v137.value._object;
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v134, v135);
    uint64_t v138 = v0[61];
    if (v137.value._object)
    {
      ((void (*)(void, uint64_t, uint64_t))v227)(v0[69], v223, v138);
      uint64_t v139 = swift_bridgeObjectRetain_n(v137.value._object, 2LL);
      uint64_t v140 = (os_log_s *)Logger.logObject.getter(v139);
      os_log_type_t v141 = static os_log_type_t.debug.getter();
      BOOL v142 = os_log_type_enabled(v140, v141);
      uint64_t v143 = v0[69];
      uint64_t v144 = v0[61];
      if (v142)
      {
        uint64_t v230 = v0[69];
        uint64_t v224 = v0[61];
        uint64_t v145 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v146 = swift_slowAlloc(32LL, -1LL);
        uint64_t v233 = v146;
        *(_DWORD *)uint64_t v145 = 136315138;
        swift_bridgeObjectRetain(v137.value._object);
        v0[13] = sub_6978(v137.value._countAndFlagsBits, (unint64_t)v137.value._object, &v233);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 13, v0 + 14);
        swift_bridgeObjectRelease_n(v137.value._object, 3LL);
        _os_log_impl( &dword_0,  v140,  v141,  "OpenMediaItemFlow#execute invoking OpenMusicItemIntent with identifier: %s",  v145,  0xCu);
        swift_arrayDestroy(v146, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v146, -1LL, -1LL);
        swift_slowDealloc(v145, -1LL, -1LL);

        v222(v230, v224);
      }

      else
      {
        swift_bridgeObjectRelease_n(v137.value._object, 2LL);

        v222(v143, v144);
      }

      v167 = (void *)(v0[21] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_appIntentInvoker);
      uint64_t v169 = v167[3];
      uint64_t v168 = v167[4];
      sub_6EA8(v167, v169);
      v170 = (void *)swift_task_alloc(async function pointer to AppIntentInvoking.invokeOpenMusicItemIntent(musicItemIdentifier:)[1]);
      v0[92] = v170;
      void *v170 = v0;
      v170[1] = sub_11A8D0;
      return AppIntentInvoking.invokeOpenMusicItemIntent(musicItemIdentifier:)( v137.value._countAndFlagsBits,  v137.value._object,  v169,  v168);
    }

    uint64_t v158 = ((uint64_t (*)(void, uint64_t, uint64_t))v227)(v0[68], v223, v138);
    uint64_t v159 = (os_log_s *)Logger.logObject.getter(v158);
    os_log_type_t v160 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v159, v160))
    {
      uint64_t v161 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v161 = 0;
      _os_log_impl( &dword_0,  v159,  v160,  "OpenMediaItemFlow#execute failed to convert PlaybackItem.identifier to MusicSiriRepresentation",  v161,  2u);
      swift_slowDealloc(v161, -1LL, -1LL);
    }

    uint64_t v162 = v0[68];
    uint64_t v163 = v0[61];
    uint64_t v165 = v0[30];
    uint64_t v164 = v0[31];
    uint64_t v166 = v0[29];

    v222(v162, v163);
    (*(void (**)(uint64_t, void, uint64_t))(v165 + 104))( v164,  enum case for AdditionalMetricsDescription.StatusReason.failedToConvertMusicSiriRepresentation(_:),  v166);
    uint64_t v104 = (void *)swift_task_alloc(dword_28A07C);
    v0[94] = v104;
    uint64_t v105 = sub_11ADB0;
LABEL_30:
    void *v104 = v0;
    v104[1] = v105;
    return sub_11C630(v0[31]);
  }

  v219 = v0 + 19;
  uint64_t v65 = ((uint64_t (*)(void, uint64_t, uint64_t))v227)(v0[74], v223, v64);
  os_log_type_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  os_log_type_t v67 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl( &dword_0,  v66,  v67,  "OpenMediaItemFlow#execute mediaItem is Podcasts type, using Podcasts open intent",  v68,  2u);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  uint64_t v69 = v0[74];
  uint64_t v70 = v0[61];
  uint64_t v71 = v0[44];
  uint64_t v72 = v0[42];
  uint64_t v220 = v0[41];
  uint64_t v74 = v0[39];
  uint64_t v73 = v0[40];
  uint64_t v75 = v0[38];

  uint64_t v76 = ((uint64_t (*)(uint64_t, uint64_t))v222)(v69, v70);
  uint64_t v77 = PlaybackItem.identifier.getter(v76);
  uint64_t v78 = PlaybackItem.Identifier.identifier.getter(v77);
  unint64_t v80 = v79;
  v0[84] = v79;
  uint64_t v81 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
  AudioMediaItem.type.getter(v81);
  int v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 88))(v71, v220);
  uint64_t v83 = v0[61];
  if (v82 == enum case for CommonAudio.MediaType.podcast(_:))
  {
    uint64_t v84 = v78;
    ((void (*)(void, uint64_t, uint64_t))v227)(v0[73], v223, v83);
    uint64_t v85 = swift_bridgeObjectRetain_n(v80, 2LL);
    uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
    os_log_type_t v87 = static os_log_type_t.debug.getter();
    BOOL v88 = os_log_type_enabled(v86, v87);
    uint64_t v89 = v0[73];
    uint64_t v90 = v0[61];
    if (v88)
    {
      uint64_t v228 = v0[61];
      uint64_t v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v92 = swift_slowAlloc(32LL, -1LL);
      uint64_t v233 = v92;
      *(_DWORD *)uint64_t v91 = 136315138;
      swift_bridgeObjectRetain(v80);
      v0[19] = sub_6978(v84, v80, &v233);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v219, v0 + 20);
      swift_bridgeObjectRelease_n(v80, 3LL);
      _os_log_impl( &dword_0,  v86,  v87,  "OpenMediaItemFlow#execute invoking OpenPodcastShowAppIntent with identifier: %s",  v91,  0xCu);
      swift_arrayDestroy(v92, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v92, -1LL, -1LL);
      swift_slowDealloc(v91, -1LL, -1LL);

      uint64_t v93 = v89;
      uint64_t v94 = v228;
    }

    else
    {
      swift_bridgeObjectRelease_n(v80, 2LL);

      uint64_t v93 = v89;
      uint64_t v94 = v90;
    }

    v222(v93, v94);
    v171 = (void *)(v0[21] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_appIntentInvoker);
    uint64_t v172 = v171[3];
    uint64_t v173 = v171[4];
    sub_6EA8(v171, v172);
    v174 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AppIntentInvoking.invokeOpenPodcastShowAppIntent(showIdentifier:)[1]);
    v0[85] = v174;
    v175 = sub_119E88;
LABEL_59:
    void *v174 = v0;
    v174[1] = v175;
    return dispatch thunk of AppIntentInvoking.invokeOpenPodcastShowAppIntent(showIdentifier:)(v84, v80, v172, v173);
  }

  if (v82 != enum case for CommonAudio.MediaType.episode(_:))
  {
    uint64_t v84 = v78;
    ((void (*)(void, uint64_t, uint64_t))v227)(v0[71], v223, v83);
    uint64_t v176 = swift_bridgeObjectRetain_n(v80, 2LL);
    v177 = (os_log_s *)Logger.logObject.getter(v176);
    os_log_type_t v178 = static os_log_type_t.debug.getter();
    BOOL v179 = os_log_type_enabled(v177, v178);
    uint64_t v180 = v0[71];
    uint64_t v181 = v0[61];
    if (v179)
    {
      uint64_t v232 = v0[61];
      uint64_t v226 = v0[71];
      v182 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v183 = swift_slowAlloc(32LL, -1LL);
      uint64_t v233 = v183;
      *(_DWORD *)v182 = 136315138;
      swift_bridgeObjectRetain(v80);
      v0[17] = sub_6978(v84, v80, &v233);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 17, v0 + 18);
      swift_bridgeObjectRelease_n(v80, 3LL);
      _os_log_impl( &dword_0,  v177,  v178,  "OpenMediaItemFlow#execute mediaType is not podcastShow or podcastEpisode, defaulting to invoke OpenPodcastShowAp pIntent with identifier: %s",  v182,  0xCu);
      swift_arrayDestroy(v183, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v183, -1LL, -1LL);
      swift_slowDealloc(v182, -1LL, -1LL);

      uint64_t v184 = v226;
      uint64_t v185 = v232;
    }

    else
    {
      swift_bridgeObjectRelease_n(v80, 2LL);

      uint64_t v184 = v180;
      uint64_t v185 = v181;
    }

    v222(v184, v185);
    v190 = (void *)(v0[21] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_appIntentInvoker);
    uint64_t v172 = v190[3];
    uint64_t v173 = v190[4];
    sub_6EA8(v190, v172);
    v174 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AppIntentInvoking.invokeOpenPodcastShowAppIntent(showIdentifier:)[1]);
    v0[89] = v174;
    v175 = sub_11A3DC;
    goto LABEL_59;
  }

  uint64_t v147 = v78;
  ((void (*)(void, uint64_t, uint64_t))v227)(v0[72], v223, v83);
  uint64_t v148 = swift_bridgeObjectRetain_n(v80, 2LL);
  uint64_t v149 = (os_log_s *)Logger.logObject.getter(v148);
  os_log_type_t v150 = static os_log_type_t.debug.getter();
  BOOL v151 = os_log_type_enabled(v149, v150);
  uint64_t v152 = v0[72];
  uint64_t v153 = v0[61];
  if (v151)
  {
    uint64_t v231 = v0[72];
    v154 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v225 = v153;
    uint64_t v155 = swift_slowAlloc(32LL, -1LL);
    uint64_t v233 = v155;
    *(_DWORD *)v154 = 136315138;
    swift_bridgeObjectRetain(v80);
    v0[18] = sub_6978(v147, v80, &v233);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v219);
    swift_bridgeObjectRelease_n(v80, 3LL);
    _os_log_impl( &dword_0,  v149,  v150,  "OpenMediaItemFlow#execute invoking OpenPodcastEpisodeAppIntent with identifier: %s",  v154,  0xCu);
    swift_arrayDestroy(v155, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v155, -1LL, -1LL);
    swift_slowDealloc(v154, -1LL, -1LL);

    uint64_t v157 = v225;
    uint64_t v156 = v231;
  }

  else
  {
    swift_bridgeObjectRelease_n(v80, 2LL);

    uint64_t v156 = v152;
    uint64_t v157 = v153;
  }

  v222(v156, v157);
  v186 = (void *)(v0[21] + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_appIntentInvoker);
  uint64_t v187 = v186[3];
  uint64_t v188 = v186[4];
  sub_6EA8(v186, v187);
  v189 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AppIntentInvoking.invokeOpenPodcastEpisodeAppIntent(episodeIdentifier:)[1]);
  v0[87] = v189;
  void *v189 = v0;
  v189[1] = sub_11A36C;
  return dispatch thunk of AppIntentInvoking.invokeOpenPodcastEpisodeAppIntent(episodeIdentifier:)( v147,  v80,  v187,  v188);
}

uint64_t sub_119E88()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 680LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 672LL);
  *(void *)(*(void *)v1 + 688LL) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0) {
    uint64_t v4 = sub_11BAA0;
  }
  else {
    uint64_t v4 = sub_119EF8;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_119EF8()
{
  uint64_t v57 = *(void *)(v0 + 656);
  uint64_t v59 = *(void *)(v0 + 648);
  uint64_t v63 = *(void **)(v0 + 640);
  uint64_t v55 = *(void **)(v0 + 632);
  uint64_t v61 = *(void *)(v0 + 400);
  uint64_t v65 = *(void *)(v0 + 392);
  uint64_t v67 = *(void *)(v0 + 424);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v40 = *(void *)(v0 + 216);
  uint64_t v42 = *(void *)(v0 + 224);
  uint64_t v44 = *(void *)(v0 + 208);
  uint64_t v46 = *(void *)(v0 + 200);
  uint64_t v37 = *(void *)(v0 + 168);
  uint64_t v52 = *(void *)(v0 + 192);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))( v2,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v4);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))( v3,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v5);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v8,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v9);
  uint64_t v10 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v2, v3, v8, 0LL, 1LL);
  uint64_t v48 = v11;
  uint64_t v50 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  uint64_t v12 = (void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider);
  uint64_t v13 = *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v38 = *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8(v12, v13);
  (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v42, enum case for TypeOfIntent.openMediaItem(_:), v44);
  uint64_t v14 = enum case for ActivityType.completed(_:);
  uint64_t v15 = type metadata accessor for ActivityType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v46, v14, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v46, 0LL, 1LL, v15);
  uint64_t v17 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v18 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(v52, v17, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v52, 0LL, 1LL, v18);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v42,  v46,  0LL,  v52,  v50,  v48,  v13,  v38);
  swift_bridgeObjectRelease(v48);
  sub_1F6CC(v52, &qword_2845A0);
  sub_1F6CC(v46, &qword_2845A8);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v42, v44);
  static ExecuteResponse.complete()(v20);

  swift_release(v57);
  swift_release(v59);

  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v67, v65);
  uint64_t v21 = *(void *)(v0 + 592);
  uint64_t v22 = *(void *)(v0 + 584);
  uint64_t v23 = *(void *)(v0 + 576);
  uint64_t v24 = *(void *)(v0 + 568);
  uint64_t v25 = *(void *)(v0 + 560);
  uint64_t v26 = *(void *)(v0 + 552);
  uint64_t v27 = *(void *)(v0 + 544);
  uint64_t v28 = *(void *)(v0 + 536);
  uint64_t v29 = *(void *)(v0 + 528);
  uint64_t v31 = *(void *)(v0 + 520);
  uint64_t v32 = *(void *)(v0 + 512);
  uint64_t v33 = *(void *)(v0 + 504);
  uint64_t v34 = *(void *)(v0 + 480);
  uint64_t v35 = *(void *)(v0 + 456);
  uint64_t v36 = *(void *)(v0 + 448);
  uint64_t v39 = *(void *)(v0 + 424);
  uint64_t v41 = *(void *)(v0 + 416);
  uint64_t v43 = *(void *)(v0 + 408);
  uint64_t v45 = *(void *)(v0 + 384);
  uint64_t v47 = *(void *)(v0 + 360);
  uint64_t v49 = *(void *)(v0 + 352);
  uint64_t v51 = *(void *)(v0 + 344);
  uint64_t v53 = *(void *)(v0 + 320);
  uint64_t v54 = *(void *)(v0 + 296);
  uint64_t v56 = *(void *)(v0 + 272);
  uint64_t v58 = *(void *)(v0 + 248);
  uint64_t v60 = *(void *)(v0 + 224);
  uint64_t v62 = *(void *)(v0 + 200);
  uint64_t v64 = *(void *)(v0 + 192);
  uint64_t v66 = *(void *)(v0 + 184);
  uint64_t v68 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11A36C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 696LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 672LL);
  *(void *)(*(void *)v1 + 704LL) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0) {
    uint64_t v4 = sub_11BCCC;
  }
  else {
    uint64_t v4 = sub_11E5C4;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_11A3DC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 712LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 672LL);
  *(void *)(*(void *)v1 + 720LL) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0) {
    uint64_t v4 = sub_11BEF8;
  }
  else {
    uint64_t v4 = sub_11A44C;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_11A44C()
{
  uint64_t v57 = *(void *)(v0 + 656);
  uint64_t v59 = *(void *)(v0 + 648);
  uint64_t v63 = *(void **)(v0 + 640);
  uint64_t v55 = *(void **)(v0 + 632);
  uint64_t v61 = *(void *)(v0 + 400);
  uint64_t v65 = *(void *)(v0 + 392);
  uint64_t v67 = *(void *)(v0 + 424);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v40 = *(void *)(v0 + 216);
  uint64_t v42 = *(void *)(v0 + 224);
  uint64_t v44 = *(void *)(v0 + 208);
  uint64_t v46 = *(void *)(v0 + 200);
  uint64_t v37 = *(void *)(v0 + 168);
  uint64_t v52 = *(void *)(v0 + 192);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))( v2,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v4);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))( v3,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v5);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v8,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v9);
  uint64_t v10 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v2, v3, v8, 0LL, 1LL);
  uint64_t v48 = v11;
  uint64_t v50 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  uint64_t v12 = (void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider);
  uint64_t v13 = *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v38 = *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8(v12, v13);
  (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v42, enum case for TypeOfIntent.openMediaItem(_:), v44);
  uint64_t v14 = enum case for ActivityType.completed(_:);
  uint64_t v15 = type metadata accessor for ActivityType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v46, v14, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v46, 0LL, 1LL, v15);
  uint64_t v17 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v18 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(v52, v17, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v52, 0LL, 1LL, v18);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v42,  v46,  0LL,  v52,  v50,  v48,  v13,  v38);
  swift_bridgeObjectRelease(v48);
  sub_1F6CC(v52, &qword_2845A0);
  sub_1F6CC(v46, &qword_2845A8);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v42, v44);
  static ExecuteResponse.complete()(v20);

  swift_release(v57);
  swift_release(v59);

  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v67, v65);
  uint64_t v21 = *(void *)(v0 + 592);
  uint64_t v22 = *(void *)(v0 + 584);
  uint64_t v23 = *(void *)(v0 + 576);
  uint64_t v24 = *(void *)(v0 + 568);
  uint64_t v25 = *(void *)(v0 + 560);
  uint64_t v26 = *(void *)(v0 + 552);
  uint64_t v27 = *(void *)(v0 + 544);
  uint64_t v28 = *(void *)(v0 + 536);
  uint64_t v29 = *(void *)(v0 + 528);
  uint64_t v31 = *(void *)(v0 + 520);
  uint64_t v32 = *(void *)(v0 + 512);
  uint64_t v33 = *(void *)(v0 + 504);
  uint64_t v34 = *(void *)(v0 + 480);
  uint64_t v35 = *(void *)(v0 + 456);
  uint64_t v36 = *(void *)(v0 + 448);
  uint64_t v39 = *(void *)(v0 + 424);
  uint64_t v41 = *(void *)(v0 + 416);
  uint64_t v43 = *(void *)(v0 + 408);
  uint64_t v45 = *(void *)(v0 + 384);
  uint64_t v47 = *(void *)(v0 + 360);
  uint64_t v49 = *(void *)(v0 + 352);
  uint64_t v51 = *(void *)(v0 + 344);
  uint64_t v53 = *(void *)(v0 + 320);
  uint64_t v54 = *(void *)(v0 + 296);
  uint64_t v56 = *(void *)(v0 + 272);
  uint64_t v58 = *(void *)(v0 + 248);
  uint64_t v60 = *(void *)(v0 + 224);
  uint64_t v62 = *(void *)(v0 + 200);
  uint64_t v64 = *(void *)(v0 + 192);
  uint64_t v66 = *(void *)(v0 + 184);
  uint64_t v68 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11A8D0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 736LL);
  *(void *)(*(void *)v1 + 744LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_11C134;
  }
  else {
    uint64_t v3 = sub_11A934;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_11A934()
{
  uint64_t v58 = *(void *)(v0 + 656);
  uint64_t v60 = *(void *)(v0 + 648);
  uint64_t v64 = *(void **)(v0 + 640);
  uint64_t v56 = *(void **)(v0 + 632);
  uint64_t v62 = *(void *)(v0 + 400);
  uint64_t v66 = *(void *)(v0 + 392);
  uint64_t v68 = *(void *)(v0 + 424);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v41 = *(void *)(v0 + 216);
  uint64_t v43 = *(void *)(v0 + 224);
  uint64_t v45 = *(void *)(v0 + 208);
  uint64_t v51 = *(void *)(v0 + 200);
  uint64_t v53 = *(void *)(v0 + 192);
  uint64_t v38 = *(void *)(v0 + 168);
  __n128 v10 = swift_bridgeObjectRelease(*(void *)(v0 + 728));
  (*(void (**)(uint64_t, void, uint64_t, __n128))(v1 + 104))( v2,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v3,  v10);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))( v4,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v5);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v8,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v9);
  uint64_t v11 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v2, v4, v8, 0LL, 1LL);
  uint64_t v47 = v12;
  uint64_t v49 = v11;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  uint64_t v13 = (void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider);
  uint64_t v14 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v39 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8(v13, v14);
  (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v43, enum case for TypeOfIntent.openMediaItem(_:), v45);
  uint64_t v15 = enum case for ActivityType.completed(_:);
  uint64_t v16 = type metadata accessor for ActivityType(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(v51, v15, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v51, 0LL, 1LL, v16);
  uint64_t v18 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v19 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104))(v53, v18, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v53, 0LL, 1LL, v19);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v43,  v51,  0LL,  v53,  v49,  v47,  v14,  v39);
  swift_bridgeObjectRelease(v47);
  sub_1F6CC(v53, &qword_2845A0);
  sub_1F6CC(v51, &qword_2845A8);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v43, v45);
  static ExecuteResponse.complete()(v21);

  swift_release(v58);
  swift_release(v60);

  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v68, v66);
  uint64_t v22 = *(void *)(v0 + 592);
  uint64_t v23 = *(void *)(v0 + 584);
  uint64_t v24 = *(void *)(v0 + 576);
  uint64_t v25 = *(void *)(v0 + 568);
  uint64_t v26 = *(void *)(v0 + 560);
  uint64_t v27 = *(void *)(v0 + 552);
  uint64_t v28 = *(void *)(v0 + 544);
  uint64_t v29 = *(void *)(v0 + 536);
  uint64_t v30 = *(void *)(v0 + 528);
  uint64_t v32 = *(void *)(v0 + 520);
  uint64_t v33 = *(void *)(v0 + 512);
  uint64_t v34 = *(void *)(v0 + 504);
  uint64_t v35 = *(void *)(v0 + 480);
  uint64_t v36 = *(void *)(v0 + 456);
  uint64_t v37 = *(void *)(v0 + 448);
  uint64_t v40 = *(void *)(v0 + 424);
  uint64_t v42 = *(void *)(v0 + 416);
  uint64_t v44 = *(void *)(v0 + 408);
  uint64_t v46 = *(void *)(v0 + 384);
  uint64_t v48 = *(void *)(v0 + 360);
  uint64_t v50 = *(void *)(v0 + 352);
  uint64_t v52 = *(void *)(v0 + 344);
  uint64_t v54 = *(void *)(v0 + 320);
  uint64_t v55 = *(void *)(v0 + 296);
  uint64_t v57 = *(void *)(v0 + 272);
  uint64_t v59 = *(void *)(v0 + 248);
  uint64_t v61 = *(void *)(v0 + 224);
  uint64_t v63 = *(void *)(v0 + 200);
  uint64_t v65 = *(void *)(v0 + 192);
  uint64_t v67 = *(void *)(v0 + 184);
  uint64_t v69 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11ADB0()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 240LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 752LL));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_11AE24, 0LL, 0LL);
}

uint64_t sub_11AE24()
{
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(void *)(v0 + 648);
  uint64_t v3 = *(void **)(v0 + 640);
  uint64_t v4 = *(void **)(v0 + 632);
  uint64_t v5 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 400);
  static ExecuteResponse.complete()();

  swift_release(v1);
  swift_release(v2);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  uint64_t v8 = *(void *)(v0 + 592);
  uint64_t v9 = *(void *)(v0 + 584);
  uint64_t v10 = *(void *)(v0 + 576);
  uint64_t v11 = *(void *)(v0 + 568);
  uint64_t v12 = *(void *)(v0 + 560);
  uint64_t v13 = *(void *)(v0 + 552);
  uint64_t v14 = *(void *)(v0 + 544);
  uint64_t v15 = *(void *)(v0 + 536);
  uint64_t v16 = *(void *)(v0 + 528);
  uint64_t v18 = *(void *)(v0 + 520);
  uint64_t v19 = *(void *)(v0 + 512);
  uint64_t v20 = *(void *)(v0 + 504);
  uint64_t v21 = *(void *)(v0 + 480);
  uint64_t v22 = *(void *)(v0 + 456);
  uint64_t v23 = *(void *)(v0 + 448);
  uint64_t v24 = *(void *)(v0 + 424);
  uint64_t v25 = *(void *)(v0 + 416);
  uint64_t v26 = *(void *)(v0 + 408);
  uint64_t v27 = *(void *)(v0 + 384);
  uint64_t v28 = *(void *)(v0 + 360);
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v30 = *(void *)(v0 + 344);
  uint64_t v31 = *(void *)(v0 + 320);
  uint64_t v32 = *(void *)(v0 + 296);
  uint64_t v33 = *(void *)(v0 + 272);
  uint64_t v34 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 224);
  uint64_t v36 = *(void *)(v0 + 200);
  uint64_t v37 = *(void *)(v0 + 192);
  uint64_t v38 = *(void *)(v0 + 184);
  uint64_t v39 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11B05C()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 240LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 768LL));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_11B0D0, 0LL, 0LL);
}

uint64_t sub_11B0D0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
  uint64_t v2 = *(void *)(v0 + 648);
  uint64_t v3 = *(void **)(v0 + 640);
  uint64_t v4 = *(void **)(v0 + 632);
  uint64_t v5 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 392);
  static ExecuteResponse.complete()();

  swift_release(v2);
  v1(v5, v6);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 576);
  uint64_t v10 = *(void *)(v0 + 568);
  uint64_t v11 = *(void *)(v0 + 560);
  uint64_t v12 = *(void *)(v0 + 552);
  uint64_t v13 = *(void *)(v0 + 544);
  uint64_t v14 = *(void *)(v0 + 536);
  uint64_t v15 = *(void *)(v0 + 528);
  uint64_t v17 = *(void *)(v0 + 520);
  uint64_t v18 = *(void *)(v0 + 512);
  uint64_t v19 = *(void *)(v0 + 504);
  uint64_t v20 = *(void *)(v0 + 480);
  uint64_t v21 = *(void *)(v0 + 456);
  uint64_t v22 = *(void *)(v0 + 448);
  uint64_t v23 = *(void *)(v0 + 424);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 384);
  uint64_t v27 = *(void *)(v0 + 360);
  uint64_t v28 = *(void *)(v0 + 352);
  uint64_t v29 = *(void *)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 320);
  uint64_t v31 = *(void *)(v0 + 296);
  uint64_t v32 = *(void *)(v0 + 272);
  uint64_t v33 = *(void *)(v0 + 248);
  uint64_t v34 = *(void *)(v0 + 224);
  uint64_t v35 = *(void *)(v0 + 200);
  uint64_t v36 = *(void *)(v0 + 192);
  uint64_t v37 = *(void *)(v0 + 184);
  uint64_t v38 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11B2FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 784LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 792LL));
  swift_release(v1);
  return swift_task_switch(sub_11B35C, 0LL, 0LL);
}

uint64_t sub_11B35C()
{
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 648);
  uint64_t v3 = *(void **)(v0 + 640);
  uint64_t v4 = *(void **)(v0 + 632);
  static ExecuteResponse.complete()();

  swift_release(v2);
  swift_release(v1);
  uint64_t v5 = *(void *)(v0 + 592);
  uint64_t v6 = *(void *)(v0 + 584);
  uint64_t v7 = *(void *)(v0 + 576);
  uint64_t v8 = *(void *)(v0 + 568);
  uint64_t v9 = *(void *)(v0 + 560);
  uint64_t v10 = *(void *)(v0 + 552);
  uint64_t v11 = *(void *)(v0 + 544);
  uint64_t v12 = *(void *)(v0 + 536);
  uint64_t v13 = *(void *)(v0 + 528);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 512);
  uint64_t v17 = *(void *)(v0 + 504);
  uint64_t v18 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 448);
  uint64_t v21 = *(void *)(v0 + 424);
  uint64_t v22 = *(void *)(v0 + 416);
  uint64_t v23 = *(void *)(v0 + 408);
  uint64_t v24 = *(void *)(v0 + 384);
  uint64_t v25 = *(void *)(v0 + 360);
  uint64_t v26 = *(void *)(v0 + 352);
  uint64_t v27 = *(void *)(v0 + 344);
  uint64_t v28 = *(void *)(v0 + 320);
  uint64_t v29 = *(void *)(v0 + 296);
  uint64_t v30 = *(void *)(v0 + 272);
  uint64_t v31 = *(void *)(v0 + 248);
  uint64_t v32 = *(void *)(v0 + 224);
  uint64_t v33 = *(void *)(v0 + 200);
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 184);
  uint64_t v36 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11B57C()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 240LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 800LL));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_11B5F0, 0LL, 0LL);
}

uint64_t sub_11B5F0()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 576);
  uint64_t v4 = *(void *)(v0 + 568);
  uint64_t v5 = *(void *)(v0 + 560);
  uint64_t v6 = *(void *)(v0 + 552);
  uint64_t v7 = *(void *)(v0 + 544);
  uint64_t v8 = *(void *)(v0 + 536);
  uint64_t v9 = *(void *)(v0 + 528);
  uint64_t v11 = *(void *)(v0 + 520);
  uint64_t v12 = *(void *)(v0 + 512);
  uint64_t v13 = *(void *)(v0 + 504);
  uint64_t v14 = *(void *)(v0 + 480);
  uint64_t v15 = *(void *)(v0 + 456);
  uint64_t v16 = *(void *)(v0 + 448);
  uint64_t v17 = *(void *)(v0 + 424);
  uint64_t v18 = *(void *)(v0 + 416);
  uint64_t v19 = *(void *)(v0 + 408);
  uint64_t v20 = *(void *)(v0 + 384);
  uint64_t v21 = *(void *)(v0 + 360);
  uint64_t v22 = *(void *)(v0 + 352);
  uint64_t v23 = *(void *)(v0 + 344);
  uint64_t v24 = *(void *)(v0 + 320);
  uint64_t v25 = *(void *)(v0 + 296);
  uint64_t v26 = *(void *)(v0 + 272);
  uint64_t v27 = *(void *)(v0 + 248);
  uint64_t v28 = *(void *)(v0 + 224);
  uint64_t v29 = *(void *)(v0 + 200);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11B7E8()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 240LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 816LL));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_11B85C, 0LL, 0LL);
}

uint64_t sub_11B85C()
{
  uint64_t v1 = *(void *)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 648);
  uint64_t v4 = *(void **)(v0 + 640);
  uint64_t v5 = *(void **)(v0 + 632);
  uint64_t v6 = *(void *)(v0 + 424);
  uint64_t v7 = *(void *)(v0 + 392);
  uint64_t v8 = *(void *)(v0 + 400);
  static ExecuteResponse.complete()();

  swift_release(v2);
  swift_release(v3);
  swift_errorRelease(v1);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  uint64_t v9 = *(void *)(v0 + 592);
  uint64_t v10 = *(void *)(v0 + 584);
  uint64_t v11 = *(void *)(v0 + 576);
  uint64_t v12 = *(void *)(v0 + 568);
  uint64_t v13 = *(void *)(v0 + 560);
  uint64_t v14 = *(void *)(v0 + 552);
  uint64_t v15 = *(void *)(v0 + 544);
  uint64_t v16 = *(void *)(v0 + 536);
  uint64_t v17 = *(void *)(v0 + 528);
  uint64_t v19 = *(void *)(v0 + 520);
  uint64_t v20 = *(void *)(v0 + 512);
  uint64_t v21 = *(void *)(v0 + 504);
  uint64_t v22 = *(void *)(v0 + 480);
  uint64_t v23 = *(void *)(v0 + 456);
  uint64_t v24 = *(void *)(v0 + 448);
  uint64_t v25 = *(void *)(v0 + 424);
  uint64_t v26 = *(void *)(v0 + 416);
  uint64_t v27 = *(void *)(v0 + 408);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 360);
  uint64_t v30 = *(void *)(v0 + 352);
  uint64_t v31 = *(void *)(v0 + 344);
  uint64_t v32 = *(void *)(v0 + 320);
  uint64_t v33 = *(void *)(v0 + 296);
  uint64_t v34 = *(void *)(v0 + 272);
  uint64_t v35 = *(void *)(v0 + 248);
  uint64_t v36 = *(void *)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 200);
  uint64_t v38 = *(void *)(v0 + 192);
  uint64_t v39 = *(void *)(v0 + 184);
  uint64_t v40 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11BAA0()
{
  uint64_t v1 = *(void *)(v0 + 688);
  *(void *)(v0 + 808) = v1;
  (*(void (**)(void, void, void))(v0 + 616))( *(void *)(v0 + 512),  *(void *)(v0 + 608),  *(void *)(v0 + 488));
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v16 = *(void *)(v0 + 512);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v15 = *(void *)(v0 + 488);
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue(v1, v0 + 112, v0 + 40);
    uint64_t v7 = Error.localizedDescription.getter(*(void *)(v0 + 48), *(void *)(v0 + 56));
    unint64_t v9 = v8;
    *(void *)(v0 + 128) = sub_6978(v7, v8, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl( &dword_0,  v3,  v4,  "OpenMediaItemFlow#execute threw an error when trying to invoke open intent: %s",  v5,  0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);

    v17(v16, v15);
  }

  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v11 = *(void *)(v0 + 512);
    uint64_t v12 = *(void *)(v0 + 488);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    v10(v11, v12);
  }

  (*(void (**)(void, void, void))(*(void *)(v0 + 240) + 104LL))( *(void *)(v0 + 248),  enum case for AdditionalMetricsDescription.StatusReason.appIntentInvokerFailurePodcasts(_:),  *(void *)(v0 + 232));
  uint64_t v13 = (void *)swift_task_alloc(dword_28A07C);
  *(void *)(v0 + 816) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_11B7E8;
  return sub_11C630(*(void *)(v0 + 248));
}

uint64_t sub_11BCCC()
{
  uint64_t v1 = *(void *)(v0 + 704);
  *(void *)(v0 + 808) = v1;
  (*(void (**)(void, void, void))(v0 + 616))( *(void *)(v0 + 512),  *(void *)(v0 + 608),  *(void *)(v0 + 488));
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v16 = *(void *)(v0 + 512);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v15 = *(void *)(v0 + 488);
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue(v1, v0 + 112, v0 + 40);
    uint64_t v7 = Error.localizedDescription.getter(*(void *)(v0 + 48), *(void *)(v0 + 56));
    unint64_t v9 = v8;
    *(void *)(v0 + 128) = sub_6978(v7, v8, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl( &dword_0,  v3,  v4,  "OpenMediaItemFlow#execute threw an error when trying to invoke open intent: %s",  v5,  0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);

    v17(v16, v15);
  }

  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v11 = *(void *)(v0 + 512);
    uint64_t v12 = *(void *)(v0 + 488);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    v10(v11, v12);
  }

  (*(void (**)(void, void, void))(*(void *)(v0 + 240) + 104LL))( *(void *)(v0 + 248),  enum case for AdditionalMetricsDescription.StatusReason.appIntentInvokerFailurePodcasts(_:),  *(void *)(v0 + 232));
  uint64_t v13 = (void *)swift_task_alloc(dword_28A07C);
  *(void *)(v0 + 816) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_11B7E8;
  return sub_11C630(*(void *)(v0 + 248));
}

uint64_t sub_11BEF8()
{
  uint64_t v1 = *(void *)(v0 + 720);
  *(void *)(v0 + 808) = v1;
  (*(void (**)(void, void, void))(v0 + 616))( *(void *)(v0 + 512),  *(void *)(v0 + 608),  *(void *)(v0 + 488));
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v16 = *(void *)(v0 + 512);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v15 = *(void *)(v0 + 488);
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue(v1, v0 + 112, v0 + 40);
    uint64_t v7 = Error.localizedDescription.getter(*(void *)(v0 + 48), *(void *)(v0 + 56));
    unint64_t v9 = v8;
    *(void *)(v0 + 128) = sub_6978(v7, v8, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl( &dword_0,  v3,  v4,  "OpenMediaItemFlow#execute threw an error when trying to invoke open intent: %s",  v5,  0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);

    v17(v16, v15);
  }

  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v11 = *(void *)(v0 + 512);
    uint64_t v12 = *(void *)(v0 + 488);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

    v10(v11, v12);
  }

  (*(void (**)(void, void, void))(*(void *)(v0 + 240) + 104LL))( *(void *)(v0 + 248),  enum case for AdditionalMetricsDescription.StatusReason.appIntentInvokerFailurePodcasts(_:),  *(void *)(v0 + 232));
  uint64_t v13 = (void *)swift_task_alloc(dword_28A07C);
  *(void *)(v0 + 816) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_11B7E8;
  return sub_11C630(*(void *)(v0 + 248));
}

uint64_t sub_11C134()
{
  uint64_t v1 = v0[93];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))v0[77];
  uint64_t v3 = v0[76];
  uint64_t v4 = v0[63];
  uint64_t v5 = v0[61];
  __n128 v6 = swift_bridgeObjectRelease(v0[91]);
  v2(v4, v3, v5, v6);
  swift_errorRetain(v1);
  uint64_t v7 = swift_errorRetain(v1);
  unint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[93];
    uint64_t v23 = v0[63];
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[78];
    uint64_t v22 = v0[61];
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    uint64_t v25 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_getErrorValue(v10, v0 + 11, v0 + 8);
    uint64_t v13 = Error.localizedDescription.getter(v0[9], v0[10]);
    unint64_t v15 = v14;
    v0[12] = sub_6978(v13, v14, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 12, v0 + 13);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl( &dword_0,  v8,  v9,  "OpenMediaItemFlow#execute threw an error when trying to invoke OpenMusicItemIntent: %s",  v11,  0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);

    v24(v23, v22);
  }

  else
  {
    uint64_t v16 = v0[93];
    uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[78];
    uint64_t v18 = v0[63];
    uint64_t v19 = v0[61];
    swift_errorRelease(v16);
    swift_errorRelease(v16);

    v17(v18, v19);
  }

  (*(void (**)(void, void, void))(v0[30] + 104LL))( v0[31],  enum case for AdditionalMetricsDescription.StatusReason.appIntentInvokerFailureMusic(_:),  v0[29]);
  uint64_t v20 = (void *)swift_task_alloc(dword_28A07C);
  v0[103] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_11C378;
  return sub_11C630(v0[31]);
}

uint64_t sub_11C378()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 240LL);
  uint64_t v1 = *(void *)(*(void *)v0 + 248LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 824LL));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_11C3EC, 0LL, 0LL);
}

uint64_t sub_11C3EC()
{
  uint64_t v1 = *(void *)(v0 + 744);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 648);
  uint64_t v4 = *(void **)(v0 + 640);
  uint64_t v5 = *(void **)(v0 + 632);
  uint64_t v6 = *(void *)(v0 + 424);
  uint64_t v7 = *(void *)(v0 + 392);
  uint64_t v8 = *(void *)(v0 + 400);
  static ExecuteResponse.complete()();

  swift_release(v2);
  swift_release(v3);
  swift_errorRelease(v1);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  uint64_t v9 = *(void *)(v0 + 592);
  uint64_t v10 = *(void *)(v0 + 584);
  uint64_t v11 = *(void *)(v0 + 576);
  uint64_t v12 = *(void *)(v0 + 568);
  uint64_t v13 = *(void *)(v0 + 560);
  uint64_t v14 = *(void *)(v0 + 552);
  uint64_t v15 = *(void *)(v0 + 544);
  uint64_t v16 = *(void *)(v0 + 536);
  uint64_t v17 = *(void *)(v0 + 528);
  uint64_t v19 = *(void *)(v0 + 520);
  uint64_t v20 = *(void *)(v0 + 512);
  uint64_t v21 = *(void *)(v0 + 504);
  uint64_t v22 = *(void *)(v0 + 480);
  uint64_t v23 = *(void *)(v0 + 456);
  uint64_t v24 = *(void *)(v0 + 448);
  uint64_t v25 = *(void *)(v0 + 424);
  uint64_t v26 = *(void *)(v0 + 416);
  uint64_t v27 = *(void *)(v0 + 408);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 360);
  uint64_t v30 = *(void *)(v0 + 352);
  uint64_t v31 = *(void *)(v0 + 344);
  uint64_t v32 = *(void *)(v0 + 320);
  uint64_t v33 = *(void *)(v0 + 296);
  uint64_t v34 = *(void *)(v0 + 272);
  uint64_t v35 = *(void *)(v0 + 248);
  uint64_t v36 = *(void *)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 200);
  uint64_t v38 = *(void *)(v0 + 192);
  uint64_t v39 = *(void *)(v0 + 184);
  uint64_t v40 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 600));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11C630(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = sub_6C5C(&qword_2845A0);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_2845A8);
  v2[15] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TypeOfIntent(0LL);
  v2[16] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  v2[19] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[20] = v8;
  v2[21] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  v2[22] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[23] = v10;
  v2[24] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DialogPhase(0LL);
  v2[25] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[26] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v2[27] = v13;
  v2[28] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_11C770, 0LL, 0LL);
}

uint64_t sub_11C770(uint64_t a1)
{
  uint64_t v2 = static SiriEnvironmentWrapper.retrieve()(a1);
  if (!v2)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v2 = static SiriEnvironment.default.getter();
  }

  *(void *)(v1 + 232) = v2;
  uint64_t v3 = *(void *)(*(void *)(v1 + 104)
                 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_openMediaItemCatDialogService);
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0LL;
  *(_OWORD *)(v1 + 16) = 0u;
  unint64_t v6 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v1 + 240) = v6;
  uint64_t v7 = (void *)swift_task_alloc(dword_283E94);
  *(void *)(v1 + 248) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_11C854;
  return CatService.executeDialogResult(_:_:for:parameters:bundle:intentDialogContext:)( v4,  v5,  0x45636972656E6547LL,  0xEC000000726F7272LL,  0LL,  v6,  0LL,  v1 + 16);
}

uint64_t sub_11C854(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  uint64_t v6 = *(void *)(*v2 + 240);
  uint64_t v5 = *(void *)(*v2 + 248);
  *(void *)(v3 + 256) = a1;
  *(_BYTE *)(v3 + 304) = a2;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v6);
  sub_1F6CC(v4, &qword_283FE8);
  return swift_task_switch(sub_11C8D0, 0LL, 0LL);
}

uint64_t sub_11C8D0()
{
  if ((*(_BYTE *)(v0 + 304) & 1) != 0)
  {
    uint64_t v44 = *(void *)(v0 + 232);
    uint64_t v46 = *(void **)(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v37 = *(void *)(v0 + 128);
    uint64_t v38 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 112);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v39 = *(void *)(v0 + 104);
    uint64_t v41 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))( v13,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v14);
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))( v15,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v16);
    uint64_t v21 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v13, v15, v20, 0LL, 1LL);
    uint64_t v42 = v22;
    uint64_t v43 = v21;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    uint64_t v23 = (void *)(v39 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider);
    uint64_t v24 = *(void *)(v39 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
    uint64_t v40 = *(void *)(v39 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
    sub_6EA8(v23, v24);
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))( v38,  enum case for TypeOfIntent.openMediaItem(_:),  v37);
    uint64_t v25 = enum case for ActivityType.dialogFailed(_:);
    uint64_t v26 = type metadata accessor for ActivityType(0LL);
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 104))(v41, v25, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v41, 0LL, 1LL, v26);
    uint64_t v28 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v29 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v30 = *(void *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v19, v28, v29);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v19, 0LL, 1LL, v29);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v38,  v41,  0LL,  v19,  v43,  v42,  v24,  v40);
    swift_release(v44);
    swift_bridgeObjectRelease(v42);
    sub_87F78(v46, 1);
    sub_1F6CC(v19, &qword_2845A0);
    sub_1F6CC(v41, &qword_2845A8);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v38, v37);
    uint64_t v31 = *(void *)(v0 + 192);
    uint64_t v32 = *(void *)(v0 + 200);
    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 144);
    uint64_t v36 = *(void *)(v0 + 112);
    uint64_t v35 = *(void *)(v0 + 120);
    swift_task_dealloc(*(void *)(v0 + 224));
    swift_task_dealloc(v32);
    swift_task_dealloc(v31);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v1 = *(void *)(v0 + 232);
    uint64_t v2 = *(void *)(v0 + 200);
    id v3 = *(id *)(v0 + 256);
    static DialogPhase.error.getter();
    uint64_t v4 = swift_task_alloc(32LL);
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_11E5C0, v4);
    swift_task_dealloc(v4);
    uint64_t v5 = type metadata accessor for ResponseFactory(0LL);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    *(void *)(v0 + 264) = ResponseFactory.init()();
    uint64_t v6 = sub_6C5C(&qword_287980);
    uint64_t v7 = swift_allocObject(v6, 40LL, 7LL);
    *(_OWORD *)(v7 + 16) = xmmword_214980;
    *(void *)(v7 + 32) = v3;
    uint64_t v47 = v7;
    specialized Array._endMutation()(v7);
    *(void *)(v0 + 272) = v47;
    id v9 = v3;
    uint64_t v10 = (void *)swift_task_alloc(v8);
    *(void *)(v0 + 280) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_11CC7C;
    return ((uint64_t (*)(uint64_t, uint64_t, void))v45)(v0 + 56, v47, *(void *)(v0 + 224));
  }

uint64_t sub_11CC7C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 272LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 264LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 280LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_11CCE4, 0LL, 0LL);
}

uint64_t sub_11CCE4()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 104) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_outputPublisher);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_6EA8(v1, v2);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  *(void *)(v0 + 288) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_11CD68;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 56, v2, v3);
}

uint64_t sub_11CD68()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 288LL);
  *(void *)(*(void *)v1 + 296LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_11D0A0;
  }
  else {
    uint64_t v3 = sub_11CDCC;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_11CDCC()
{
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v41 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 136);
  uint64_t v35 = *(void *)(v0 + 144);
  uint64_t v36 = *(void *)(v0 + 128);
  uint64_t v37 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v40 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))( v2,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v4);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v5,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v6);
  uint64_t v39 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v2, v5, v9, 0LL, 1LL);
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v12 = *(void *)(v8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v38 = *(void *)(v8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8( (void *)(v8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider),  v12);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for TypeOfIntent.openMediaItem(_:), v36);
  uint64_t v13 = enum case for ActivityType.failed(_:);
  uint64_t v14 = type metadata accessor for ActivityType(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v37, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v37, 0LL, 1LL, v14);
  uint64_t v16 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v17 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v40, v16, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v40, 0LL, 1LL, v17);
  id v19 = v1;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v35,  v37,  v1,  v40,  v39,  v11,  v12,  v38);
  swift_release(v41);
  swift_bridgeObjectRelease(v11);
  sub_87F78(v1, 0);
  sub_87F78(v1, 0);

  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v20 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 128);
  sub_1F6CC(*(void *)(v0 + 112), &qword_2845A0);
  sub_1F6CC(v26, &qword_2845A8);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  sub_6C3C((void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  uint64_t v27 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 200);
  uint64_t v29 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 144);
  uint64_t v32 = *(void *)(v0 + 112);
  uint64_t v31 = *(void *)(v0 + 120);
  swift_task_dealloc(*(void *)(v0 + 224));
  swift_task_dealloc(v28);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11D0A0()
{
  uint64_t v42 = *(void *)(v0 + 296);
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v34 = *(void *)(v0 + 136);
  uint64_t v35 = *(void *)(v0 + 144);
  uint64_t v36 = *(void *)(v0 + 128);
  uint64_t v37 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v40 = *(void *)(v0 + 112);
  uint64_t v41 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))( v2,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v4);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v5,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v6);
  uint64_t v39 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v2, v5, v9, 0LL, 1LL);
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v12 = *(void *)(v8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v38 = *(void *)(v8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8( (void *)(v8 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider),  v12);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for TypeOfIntent.openMediaItem(_:), v36);
  uint64_t v13 = enum case for ActivityType.failed(_:);
  uint64_t v14 = type metadata accessor for ActivityType(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v37, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v37, 0LL, 1LL, v14);
  uint64_t v16 = enum case for SiriKitReliabilityCodes.renderingError(_:);
  uint64_t v17 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v40, v16, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v40, 0LL, 1LL, v17);
  id v19 = v1;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v35,  v37,  v1,  v40,  v39,  v11,  v12,  v38);
  swift_release(v41);
  swift_bridgeObjectRelease(v11);
  sub_87F78(v1, 0);
  swift_errorRelease(v42);
  sub_87F78(v1, 0);
  sub_87F78(v1, 0);
  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v20 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v26 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 128);
  sub_1F6CC(*(void *)(v0 + 112), &qword_2845A0);
  sub_1F6CC(v26, &qword_2845A8);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  sub_6C3C((void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  uint64_t v27 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 200);
  uint64_t v29 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 144);
  uint64_t v32 = *(void *)(v0 + 112);
  uint64_t v31 = *(void *)(v0 + 120);
  swift_task_dealloc(*(void *)(v0 + 224));
  swift_task_dealloc(v28);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11D384(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = sub_6C5C(&qword_2845A0);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_2845A8);
  v2[15] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TypeOfIntent(0LL);
  v2[16] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  v2[19] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[20] = v8;
  v2[21] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  v2[22] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[23] = v10;
  v2[24] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  v2[25] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v2[26] = v12;
  v2[27] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DialogPhase(0LL);
  v2[28] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for OutputGenerationManifest(0LL);
  v2[29] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v2[30] = v15;
  v2[31] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_11D4EC, 0LL, 0LL);
}

uint64_t sub_11D4EC(uint64_t a1)
{
  uint64_t v2 = static SiriEnvironmentWrapper.retrieve()(a1);
  if (!v2)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v2 = static SiriEnvironment.default.getter();
  }

  *(void *)(v1 + 256) = v2;
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(*(void *)(v1 + 104)
                 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_openMediaItemCatDialogService);
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 48);
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0LL;
  *(_OWORD *)(v1 + 16) = 0u;
  unint64_t v7 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v1 + 264) = v7;
  uint64_t v8 = (void *)swift_task_alloc(dword_283E94);
  *(void *)(v1 + 272) = v8;
  void *v8 = v1;
  v8[1] = sub_11D5CC;
  return CatService.executeDialogResult(_:_:for:parameters:bundle:intentDialogContext:)( v5,  v6,  0x746C757365526F4ELL,  0xE900000000000073LL,  v3,  v7,  0LL,  v1 + 16);
}

uint64_t sub_11D5CC(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  uint64_t v6 = *(void *)(*v2 + 264);
  uint64_t v5 = *(void *)(*v2 + 272);
  *(void *)(v3 + 280) = a1;
  *(_BYTE *)(v3 + 328) = a2;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v6);
  sub_1F6CC(v4, &qword_283FE8);
  return swift_task_switch(sub_11D648, 0LL, 0LL);
}

uint64_t sub_11D648()
{
  if ((*(_BYTE *)(v0 + 328) & 1) != 0)
  {
    uint64_t v47 = *(void *)(v0 + 256);
    uint64_t v49 = *(void **)(v0 + 280);
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 184);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v41 = *(void *)(v0 + 128);
    uint64_t v42 = *(void *)(v0 + 144);
    uint64_t v43 = *(void *)(v0 + 120);
    uint64_t v46 = *(void *)(v0 + 112);
    uint64_t v38 = *(void *)(v0 + 104);
    uint64_t v40 = *(void *)(v0 + 136);
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))( v12,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v15);
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))( v14,  enum case for AdditionalMetricsDescription.SourceFunction.noResultsDlg(_:),  v16);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))( v18,  enum case for AdditionalMetricsDescription.StatusReason.noSearchResults(_:),  v20);
    uint64_t v21 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v12, v14, v18, 0LL, 1LL);
    uint64_t v44 = v22;
    uint64_t v45 = v21;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    uint64_t v23 = (void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider);
    uint64_t v24 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
    uint64_t v39 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
    sub_6EA8(v23, v24);
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))( v42,  enum case for TypeOfIntent.openMediaItem(_:),  v41);
    uint64_t v25 = enum case for ActivityType.dialogFailed(_:);
    uint64_t v26 = type metadata accessor for ActivityType(0LL);
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 104))(v43, v25, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v43, 0LL, 1LL, v26);
    uint64_t v28 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v29 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v30 = *(void *)(v29 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v46, v28, v29);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v46, 0LL, 1LL, v29);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v42,  v43,  0LL,  v46,  v45,  v44,  v24,  v39);
    swift_release(v47);
    swift_bridgeObjectRelease(v44);
    sub_87F78(v49, 1);
    sub_1F6CC(v46, &qword_2845A0);
    sub_1F6CC(v43, &qword_2845A8);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
    uint64_t v31 = *(void *)(v0 + 216);
    uint64_t v32 = *(void *)(v0 + 224);
    uint64_t v33 = *(void *)(v0 + 192);
    uint64_t v34 = *(void *)(v0 + 168);
    uint64_t v35 = *(void *)(v0 + 144);
    uint64_t v37 = *(void *)(v0 + 112);
    uint64_t v36 = *(void *)(v0 + 120);
    swift_task_dealloc(*(void *)(v0 + 248));
    swift_task_dealloc(v32);
    swift_task_dealloc(v31);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v1 = *(void *)(v0 + 256);
    uint64_t v2 = *(void *)(v0 + 224);
    id v3 = *(id *)(v0 + 280);
    static DialogPhase.completion.getter(v3);
    uint64_t v4 = swift_task_alloc(32LL);
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v3;
    OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_11E560, v4);
    swift_task_dealloc(v4);
    uint64_t v5 = type metadata accessor for ResponseFactory(0LL);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    *(void *)(v0 + 288) = ResponseFactory.init()();
    uint64_t v6 = sub_6C5C(&qword_287980);
    uint64_t v7 = swift_allocObject(v6, 40LL, 7LL);
    *(_OWORD *)(v7 + 16) = xmmword_214980;
    *(void *)(v7 + 32) = v3;
    uint64_t v50 = v7;
    specialized Array._endMutation()(v7);
    *(void *)(v0 + 296) = v50;
    id v9 = v3;
    uint64_t v10 = (void *)swift_task_alloc(v8);
    *(void *)(v0 + 304) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_11DA44;
    return ((uint64_t (*)(uint64_t, uint64_t, void))v48)(v0 + 56, v50, *(void *)(v0 + 248));
  }

uint64_t sub_11DA44()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 296LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 288LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 304LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_11DAAC, 0LL, 0LL);
}

uint64_t sub_11DAAC()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 104) + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_outputPublisher);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_6EA8(v1, v2);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of OutputPublisherAsync.publish(output:)[1]);
  *(void *)(v0 + 312) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_11DB30;
  return dispatch thunk of OutputPublisherAsync.publish(output:)(v0 + 56, v2, v3);
}

uint64_t sub_11DB30()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 312LL);
  *(void *)(*(void *)v1 + 320LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_11DEA8;
  }
  else {
    uint64_t v3 = sub_11DB94;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_11DB94()
{
  uint64_t v44 = *(void **)(v0 + 280);
  uint64_t v45 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 168);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v37 = *(void *)(v0 + 136);
  uint64_t v38 = *(void *)(v0 + 144);
  uint64_t v39 = *(void *)(v0 + 128);
  uint64_t v40 = *(void *)(v0 + 120);
  uint64_t v43 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))( v1,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v3);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))( v4,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v6);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v8,  enum case for AdditionalMetricsDescription.StatusReason.noSearchResults(_:),  v9);
  uint64_t v10 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v1, v4, v8, 0LL, 1LL);
  uint64_t v41 = v11;
  uint64_t v42 = v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v12 = *(void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v13 = *(void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8( (void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider),  v12);
  (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v38, enum case for TypeOfIntent.openMediaItem(_:), v39);
  uint64_t v14 = enum case for ActivityType.failed(_:);
  uint64_t v15 = type metadata accessor for ActivityType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v40, v14, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v40, 0LL, 1LL, v15);
  uint64_t v17 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v18 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(v43, v17, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v43, 0LL, 1LL, v18);
  id v20 = v44;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v38,  v40,  v44,  v43,  v42,  v41,  v12,  v13);
  swift_release(v45);
  swift_bridgeObjectRelease(v41);
  sub_87F78(v44, 0);
  sub_87F78(v44, 0);

  uint64_t v22 = *(void *)(v0 + 240);
  uint64_t v21 = *(void *)(v0 + 248);
  uint64_t v23 = *(void *)(v0 + 232);
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v24 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 128);
  sub_1F6CC(*(void *)(v0 + 112), &qword_2845A0);
  sub_1F6CC(v27, &qword_2845A8);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  sub_6C3C((void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  uint64_t v28 = *(void *)(v0 + 216);
  uint64_t v29 = *(void *)(v0 + 224);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = *(void *)(v0 + 168);
  uint64_t v32 = *(void *)(v0 + 144);
  uint64_t v34 = *(void *)(v0 + 112);
  uint64_t v33 = *(void *)(v0 + 120);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11DEA8()
{
  uint64_t v46 = *(void *)(v0 + 320);
  uint64_t v44 = *(void **)(v0 + 280);
  uint64_t v45 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v37 = *(void *)(v0 + 136);
  uint64_t v38 = *(void *)(v0 + 144);
  uint64_t v39 = *(void *)(v0 + 128);
  uint64_t v40 = *(void *)(v0 + 120);
  uint64_t v43 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))( v1,  enum case for AdditionalMetricsDescription.ModuleName.omif (_:),  v3);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))( v4,  enum case for AdditionalMetricsDescription.SourceFunction.noResultsDlg(_:),  v6);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))( v7,  enum case for AdditionalMetricsDescription.StatusReason.noSearchResults(_:),  v9);
  uint64_t v10 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v1, v4, v7, 0LL, 1LL);
  uint64_t v41 = v11;
  uint64_t v42 = v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v12 = *(void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v13 = *(void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8( (void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider),  v12);
  (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v38, enum case for TypeOfIntent.openMediaItem(_:), v39);
  uint64_t v14 = enum case for ActivityType.failed(_:);
  uint64_t v15 = type metadata accessor for ActivityType(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(v40, v14, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v40, 0LL, 1LL, v15);
  uint64_t v17 = enum case for SiriKitReliabilityCodes.renderingError(_:);
  uint64_t v18 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(v43, v17, v18);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v43, 0LL, 1LL, v18);
  id v20 = v44;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:dialogResult:statusReason:description:)( v38,  v40,  v44,  v43,  v42,  v41,  v12,  v13);
  swift_release(v45);
  swift_bridgeObjectRelease(v41);
  sub_87F78(v44, 0);
  swift_errorRelease(v46);
  sub_87F78(v44, 0);
  sub_87F78(v44, 0);
  uint64_t v22 = *(void *)(v0 + 240);
  uint64_t v21 = *(void *)(v0 + 248);
  uint64_t v23 = *(void *)(v0 + 232);
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v24 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 128);
  sub_1F6CC(*(void *)(v0 + 112), &qword_2845A0);
  sub_1F6CC(v27, &qword_2845A8);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  sub_6C3C((void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  uint64_t v28 = *(void *)(v0 + 216);
  uint64_t v29 = *(void *)(v0 + 224);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v31 = *(void *)(v0 + 168);
  uint64_t v32 = *(void *)(v0 + 144);
  uint64_t v34 = *(void *)(v0 + 112);
  uint64_t v33 = *(void *)(v0 + 120);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11E1D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  uint64_t v11 = OutputGenerationManifest.nlContextUpdate.setter(v9);
  uint64_t v12 = SiriEnvironment.currentRequest.getter(v11);
  CurrentRequest.responseMode.getter(v12);
  swift_release(v12);
  OutputGenerationManifest.responseMode.setter(v6);
  id v13 = [a3 catId];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  return OutputGenerationManifest.responseViewId.setter(v14, v16);
}

uint64_t sub_11E308()
{
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_appIntentInvoker));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_openMediaItemCatDialogService));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_outputPublisher));
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin17OpenMediaItemFlow_siriKitTaskLoggingProvider));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_11E390()
{
  return type metadata accessor for OpenMediaItemFlow(0LL);
}

uint64_t type metadata accessor for OpenMediaItemFlow(uint64_t a1)
{
  uint64_t result = qword_28A060;
  if (!qword_28A060) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for OpenMediaItemFlow);
  }
  return result;
}

void sub_11E3D4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    v4[2] = &unk_218460;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = &unk_218460;
    v4[5] = &unk_218460;
    swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
  }

uint64_t sub_11E464(uint64_t a1)
{
  return sub_117DAC(a1) & 1;
}

uint64_t sub_11E488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for OpenMediaItemFlow(0LL);
  return Flow.deferToExecuteAsync(_:)(a1, a2, v7, a4);
}

uint64_t sub_11E4E4(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc(dword_28A074);
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_11C64;
  return sub_118848(a1);
}

uint64_t sub_11E538(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OpenMediaItemFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_11E560(uint64_t a1)
{
  return sub_11E1D0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_11E578()
{
  unint64_t result = qword_284E08;
  if (!qword_284E08)
  {
    uint64_t v1 = type metadata accessor for CommonAudio.Verb(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CommonAudio.Verb, v1);
    atomic_store(result, (unint64_t *)&qword_284E08);
  }

  return result;
}

BOOL sub_11E5C8()
{
  uint64_t v0 = type metadata accessor for InteractionType(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v70 - v5;
  uint64_t v7 = type metadata accessor for ResponseMode(0LL);
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v76 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)&v70 - v10;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v70 - v17;
  uint64_t v19 = static SiriEnvironmentWrapper.retrieve()(v16);
  if (v19)
  {
    uint64_t v20 = v19;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v21 = sub_6960(v11, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, v21, v11);
    uint64_t v22 = swift_retain_n(v20, 2LL);
    uint64_t v23 = v12;
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = v77;
    uint64_t v28 = v75;
    if (v26)
    {
      uint64_t v73 = v11;
      uint64_t v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v30 = swift_slowAlloc(32LL, -1LL);
      uint64_t v74 = v30;
      uint64_t v79 = v30;
      uint64_t v72 = v23;
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v71 = (uint64_t)(v29 + 4);
      uint64_t v31 = v29;
      uint64_t v32 = SiriEnvironment.currentRequest.getter(v30);
      CurrentRequest.responseMode.getter(v32);
      swift_release(v32);
      uint64_t v33 = sub_10430( &qword_28A2A8,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v7, v33);
      unint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v28, v7);
      uint64_t v78 = sub_6978(v34, v36, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
      swift_release_n(v20, 2LL);
      swift_bridgeObjectRelease(v36);
      _os_log_impl( &dword_0,  v24,  v25,  "AceServiceExecutorProviderWrapper#willSiriSpeak using SiriEnvironment, responseMode is %s",  v31,  0xCu);
      uint64_t v37 = v74;
      swift_arrayDestroy(v74, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      uint64_t v38 = v31;
      uint64_t v27 = v77;
      swift_slowDealloc(v38, -1LL, -1LL);

      uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v18, v73);
    }

    else
    {

      swift_release_n(v20, 2LL);
      uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    }

    uint64_t v59 = SiriEnvironment.currentRequest.getter(v39);
    CurrentRequest.responseMode.getter(v59);
    uint64_t v60 = swift_release(v59);
    uint64_t v61 = v76;
    static ResponseMode.displayOnly.getter(v60);
    uint64_t v62 = sub_10430( &qword_28A2A0,  (uint64_t (*)(uint64_t))&type metadata accessor for ResponseMode,  (uint64_t)&protocol conformance descriptor for ResponseMode);
    char v63 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v61, v7, v62);
    swift_release(v20);
    uint64_t v64 = *(void (**)(char *, uint64_t))(v27 + 8);
    v64(v61, v7);
    v64(v28, v7);
  }

  else
  {
    uint64_t v40 = v74;
    uint64_t v75 = v6;
    uint64_t v76 = v4;
    uint64_t v77 = v1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v41 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v42 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v41, v11);
    uint64_t v43 = v40;
    uint64_t v44 = swift_retain_n(v40, 2LL);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.debug.getter();
    uint64_t v47 = v0;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v71 = swift_slowAlloc(32LL, -1LL);
      uint64_t v78 = v71;
      uint64_t v73 = v11;
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v70 = v48 + 4;
      sub_22F8C((uint64_t)&v79);
      uint64_t v72 = v12;
      uint64_t v50 = v81;
      uint64_t v49 = v82;
      sub_6EA8(&v79, v81);
      uint64_t v51 = v50;
      uint64_t v52 = v75;
      dispatch thunk of DeviceState.interactionType.getter(v51, v49);
      uint64_t v53 = String.init<A>(describing:)(v52, v47);
      unint64_t v55 = v54;
      sub_6C3C(&v79);
      uint64_t v79 = sub_6978(v53, v55, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80);
      swift_release_n(v43, 2LL);
      swift_bridgeObjectRelease(v55);
      _os_log_impl( &dword_0,  v45,  v46,  "AceServiceExecutorProviderWrapper#willSiriSpeak using deviceState, interactionType is %s",  v48,  0xCu);
      uint64_t v56 = v71;
      swift_arrayDestroy(v71, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v73);
      uint64_t v58 = v76;
      uint64_t v57 = v77;
    }

    else
    {

      swift_release_n(v43, 2LL);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v42, v11);
      uint64_t v58 = v76;
      uint64_t v57 = v77;
      uint64_t v52 = v75;
    }

    sub_22F8C((uint64_t)&v79);
    uint64_t v65 = v81;
    uint64_t v66 = v82;
    sub_6EA8(&v79, v81);
    dispatch thunk of DeviceState.interactionType.getter(v65, v66);
    (*(void (**)(char *, void, uint64_t))(v57 + 104))( v58,  enum case for InteractionType.displayDriven(_:),  v47);
    uint64_t v67 = sub_10430( &qword_28A298,  (uint64_t (*)(uint64_t))&type metadata accessor for InteractionType,  (uint64_t)&protocol conformance descriptor for InteractionType);
    char v63 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v58, v47, v67);
    uint64_t v68 = *(void (**)(char *, uint64_t))(v57 + 8);
    v68(v58, v47);
    v68(v52, v47);
    sub_6C3C(&v79);
  }

  return (v63 & 1) == 0;
}

uint64_t sub_11EC7C()
{
  return swift_deallocClassInstance(v0, 128LL, 7LL);
}

uint64_t type metadata accessor for AceServiceExecutorProviderWrapper()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin33AceServiceExecutorProviderWrapper);
}

BOOL sub_11ECE8()
{
  return sub_11E5C8();
}

uint64_t type metadata accessor for DetermineSnippetProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin24DetermineSnippetProvider);
}

uint64_t sub_11ED2C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v56 = a6;
  uint64_t v57 = a7;
  unint64_t v54 = a4;
  unint64_t v55 = a5;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v8 = sub_6C5C(&qword_284170);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v46 - v15;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v49(v16, v17, v10);
  id v18 = a1;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v50 = v14;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc(22LL, -1LL);
    uint64_t v47 = swift_slowAlloc(64LL, -1LL);
    uint64_t v59 = v47;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t ObjectType = swift_getObjectType(v18);
    uint64_t v23 = sub_6C5C(&qword_287AD8);
    uint64_t v24 = String.init<A>(describing:)(&ObjectType, v23);
    uint64_t v48 = v17;
    unint64_t v26 = v25;
    uint64_t ObjectType = sub_6978(v24, v25, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v59);

    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v28 = static Insights.responseFramework.getter(v27);
    unint64_t v30 = v29;
    uint64_t ObjectType = sub_6978(v28, v29, &v59);
    uint64_t v17 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v59);
    swift_bridgeObjectRelease(v30);
    _os_log_impl( &dword_0,  v19,  v20,  "DetermineSnippetProvider#handleIntent called for Intent: %s %{public}s",  (uint8_t *)v22,  0x16u);
    uint64_t v31 = v47;
    swift_arrayDestroy(v47, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v22;
    uint64_t v14 = v50;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33(v16, v10);
  uint64_t v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v14, v17, v10);
  unint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v59 = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v39 = static Insights.responseFramework.getter(v38);
    unint64_t v41 = v40;
    uint64_t ObjectType = sub_6978(v39, v40, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v59);
    swift_bridgeObjectRelease(v41);
    _os_log_impl(&dword_0, v35, v36, "DetermineSnippetProvider#handleIntent no view for non-iOS %{public}s", v37, 0xCu);
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);

    uint64_t v42 = v50;
  }

  else
  {

    uint64_t v42 = v14;
  }

  v33(v42, v10);
  uint64_t v43 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v44 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v51, 1LL, 1LL, v43);
  sub_113F50(v44, v52, v53, v54, v55, v56, v57);
  return sub_3B4D0(v44);
}

uint64_t sub_11F154(uint64_t a1, void *a2, void *a3)
{
  uint64_t v69 = a3;
  uint64_t v72 = a2;
  uint64_t v3 = sub_6C5C(&qword_28A370);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = type metadata accessor for FilteringPredicate.Location(0LL);
  uint64_t v6 = *(void *)(v71 - 8);
  uint64_t v7 = __chkstk_darwin(v71);
  uint64_t v9 = (uint64_t *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v67 - v10;
  uint64_t v11 = sub_6C5C(&qword_28A378);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for FilteringPredicate(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  id v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Device.predicate.getter(v16);
  uint64_t v67 = v15;
  uint64_t v68 = v14;
  uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  uint64_t v21 = FilteringPredicate.deviceName.getter(v20);
  uint64_t v23 = v18;
  if (v22)
  {
    uint64_t v24 = v21;
    uint64_t v25 = v22;
    unint64_t v26 = v72;
    uint64_t v27 = (void *)*v72;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v72);
    *unint64_t v26 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v27 = sub_1FC6C(0LL, v27[2] + 1LL, 1, v27);
      *uint64_t v72 = v27;
    }

    unint64_t v30 = v27[2];
    unint64_t v29 = v27[3];
    if (v30 >= v29 >> 1)
    {
      uint64_t v27 = sub_1FC6C((void *)(v29 > 1), v30 + 1, 1, v27);
      *uint64_t v72 = v27;
    }

    v27[2] = v30 + 1;
    uint64_t v31 = &v27[2 * v30];
    v31[4] = v24;
    void v31[5] = v25;
    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v23, v68);
  }

  FilteringPredicate.room.getter(v21);
  uint64_t v32 = v71;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1LL, v71) == 1)
  {
    uint64_t v33 = sub_1F6CC((uint64_t)v5, &qword_28A370);
    uint64_t v34 = FilteringPredicate.serviceGroup.getter(v33);
    if (!v35) {
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v23, v68);
    }
    uint64_t v36 = v34;
    uint64_t v37 = v35;
    swift_bridgeObjectRetain(v35);
    uint64_t v39 = Device.roomName.getter(v38);
    if (v40)
    {
      uint64_t v41 = v40;
      if (v36 == v39 && v37 == v40)
      {
        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v41);
LABEL_25:
        unint64_t v55 = v69;
        uint64_t v56 = (void *)*v69;
        char v57 = swift_isUniquelyReferenced_nonNull_native(*v69);
        void *v55 = v56;
        if ((v57 & 1) == 0)
        {
          uint64_t v56 = sub_1FC6C(0LL, v56[2] + 1LL, 1, v56);
          void *v69 = v56;
        }

        unint64_t v59 = v56[2];
        unint64_t v58 = v56[3];
        unint64_t v60 = v59 + 1;
        if (v59 < v58 >> 1) {
          goto LABEL_32;
        }
        uint64_t v61 = sub_1FC6C((void *)(v58 > 1), v59 + 1, 1, v56);
        uint64_t v56 = v61;
        uint64_t v62 = v69;
LABEL_34:
        *uint64_t v62 = v61;
LABEL_32:
        v56[2] = v60;
        uint64_t v66 = &v56[2 * v59];
        v66[4] = v36;
        v66[5] = v37;
        return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v23, v68);
      }

      char v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v41);
      if ((v54 & 1) != 0) {
        goto LABEL_25;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v37);
    }

    char v63 = v72;
    uint64_t v56 = (void *)*v72;
    char v64 = swift_isUniquelyReferenced_nonNull_native(*v72);
    void *v63 = v56;
    if ((v64 & 1) == 0)
    {
      uint64_t v56 = sub_1FC6C(0LL, v56[2] + 1LL, 1, v56);
      *uint64_t v72 = v56;
    }

    unint64_t v59 = v56[2];
    unint64_t v65 = v56[3];
    unint64_t v60 = v59 + 1;
    if (v59 < v65 >> 1) {
      goto LABEL_32;
    }
    uint64_t v61 = sub_1FC6C((void *)(v65 > 1), v59 + 1, 1, v56);
    uint64_t v56 = v61;
    uint64_t v62 = v72;
    goto LABEL_34;
  }

  uint64_t v42 = v70;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v70, v5, v32);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v9, v42, v32);
  int v43 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v9, v32);
  uint64_t v44 = v68;
  if (v43 == enum case for FilteringPredicate.Location.named(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v9, v32);
    uint64_t v46 = *v9;
    uint64_t v45 = v9[1];
    uint64_t v47 = v69;
    uint64_t v48 = (void *)*v69;
    char v49 = swift_isUniquelyReferenced_nonNull_native(*v69);
    void *v47 = v48;
    if ((v49 & 1) == 0)
    {
      uint64_t v48 = sub_1FC6C(0LL, v48[2] + 1LL, 1, v48);
      void *v69 = v48;
    }

    unint64_t v51 = v48[2];
    unint64_t v50 = v48[3];
    if (v51 >= v50 >> 1)
    {
      uint64_t v48 = sub_1FC6C((void *)(v50 > 1), v51 + 1, 1, v48);
      void *v69 = v48;
    }

    v48[2] = v51 + 1;
    uint64_t v52 = &v48[2 * v51];
    v52[4] = v46;
    _OWORD v52[5] = v45;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v23, v68);
  }

  uint64_t v53 = *(void (**)(char *, uint64_t))(v6 + 8);
  v53(v42, v32);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v23, v44);
  return ((uint64_t (*)(uint64_t *, uint64_t))v53)(v9, v32);
}

uint64_t destroy for WholeHouseAudioDestination(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

uint64_t _s23AudioFlowDelegatePlugin26WholeHouseAudioDestinationVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for WholeHouseAudioDestination(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for WholeHouseAudioDestination(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for WholeHouseAudioDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WholeHouseAudioDestination(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WholeHouseAudioDestination(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for WholeHouseAudioDestination()
{
  return &type metadata for WholeHouseAudioDestination;
}

uint64_t storeEnumTagSinglePayload for WholeHouseAudioDestination.WholeHouseAudioDestinationType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_11F880 + 4 * byte_218605[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_11F8B4 + 4 * byte_218600[v4]))();
}

uint64_t sub_11F8B4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_11F8BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x11F8C4LL);
  }
  return result;
}

uint64_t sub_11F8D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x11F8D8LL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_11F8DC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_11F8E4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WholeHouseAudioDestination.WholeHouseAudioDestinationType()
{
  return &type metadata for WholeHouseAudioDestination.WholeHouseAudioDestinationType;
}

unint64_t sub_11F904()
{
  unint64_t result = qword_28A380;
  if (!qword_28A380)
  {
    unint64_t result = swift_getWitnessTable( &unk_2186B0,  &type metadata for WholeHouseAudioDestination.WholeHouseAudioDestinationType);
    atomic_store(result, (unint64_t *)&qword_28A380);
  }

  return result;
}

BOOL sub_11F948(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_11F960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v52 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_285F70);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_2860A0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for RREntity(0LL);
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v48 = v12;
  __chkstk_darwin(v12);
  uint64_t v45 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  __chkstk_darwin(v14);
  char v49 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = sub_6960(v16, (uint64_t)qword_2969C8);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v20, v16);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v44 = v5;
    uint64_t v25 = v3;
    unint64_t v26 = v8;
    uint64_t v27 = a2;
    uint64_t v28 = v24;
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl( &dword_0,  v22,  v23,  "AudioNLContextUpdateProvider#makeContextForSuccessfulShazamMatch clearing conversation state",  v24,  2u);
    unint64_t v29 = v28;
    a2 = v27;
    uint64_t v8 = v26;
    uint64_t v3 = v25;
    uint64_t v5 = v44;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v31 = v49;
  NLContextUpdate.init()(v30);
  ShazamKitMatch.toRREntity()((uint64_t)v11);
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v11, 1LL, v48) == 1)
  {
    sub_1F6CC((uint64_t)v11, &qword_2860A0);
  }

  else
  {
    uint64_t v34 = v45;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v45, v11, v32);
    uint64_t v35 = sub_6C5C(&qword_287DB0);
    uint64_t v36 = *(unsigned __int8 *)(v33 + 80);
    uint64_t v37 = (v36 + 32) & ~v36;
    uint64_t v38 = swift_allocObject(v35, v37 + *(void *)(v33 + 72), v36 | 7);
    *(_OWORD *)(v38 + 16) = xmmword_214510;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v38 + v37, v34, v32);
    NLContextUpdate.rrEntities.setter(v38);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  }

  (*(void (**)(char *, void, uint64_t))(v52 + 104))( v5,  enum case for PommesContext.Source.pluginDefined(_:),  v3);
  PommesContext.init(source:domain:listenAfterSpeaking:)(v5, 0x616964656DLL, 0xE500000000000000LL, 0LL);
  uint64_t v39 = type metadata accessor for PommesContext(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v8, 0LL, 1LL, v39);
  NLContextUpdate.pommesContext.setter(v8);
  uint64_t v41 = v50;
  uint64_t v40 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(a2, v31, v51);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(a2, 0LL, 1LL, v40);
}

void sub_11FD58(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  v12[0] = *(void *)(v3 - 8);
  v12[1] = v3;
  __chkstk_darwin(v3);
  uint64_t v4 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = v2;
  uint64_t v10 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, v16, 0LL, 0LL);
  sub_134620(v10, (uint64_t)v9);
  uint64_t v11 = (char *)sub_11FED0 + 4 * byte_2186E0[swift_getEnumCaseMultiPayload(v9, v7)];
  __asm { BR              X10 }

uint64_t sub_11FED0()
{
  return sub_1F6CC(v0, &qword_28A680);
}

uint64_t sub_1201A0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v39 = a1;
  uint64_t v42 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v42 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v42);
  uint64_t v5 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - v6;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969E0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AcousticIDFlow#triggerSmartStackMatch Reached Logic", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v38 = v7;
  uint64_t v18 = v42;
  v17(v5, v7, v42);
  uint64_t v19 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v20 = (v19 + 33) & ~v19;
  unint64_t v21 = (v3 + v20 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v22 = swift_allocObject(&unk_2707A0, v21 + 16, v19 | 7);
  *(void *)(v22 + 16) = "shazamKitPerformMatch";
  *(void *)(v22 + 24) = 21LL;
  *(_BYTE *)(v22 + 32) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v22 + v20, v5, v18);
  os_log_type_t v23 = (void *)(v22 + v21);
  uint64_t v24 = v40;
  *os_log_type_t v23 = v39;
  v23[1] = v24;
  uint64_t v25 = swift_retain(v24);
  uint64_t v26 = static os_signpost_type_t.begin.getter(v25);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v26,  &dword_0,  qword_296AA0,  "shazamKitPerformMatch",  21LL,  2LL,  v7,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v27 = swift_allocObject((char *)&_s11descr26E2C1VMF.NumFields + 3, 32LL, 7LL);
  *(void *)(v27 + 16) = sub_33CC0;
  *(void *)(v27 + 24) = v22;
  uint64_t v28 = v41;
  uint64_t v29 = *(void *)(v41 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v30 = *(void *)(v41 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8((void *)(v41 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider), v29);
  swift_retain(v22);
  uint64_t v31 = dispatch thunk of SiriKitTaskLoggingProviding.startExecution(for:)(1008LL, v29, v30);
  uint64_t v32 = *(void *)(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
  uint64_t v33 = *(void *)(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
  sub_6EA8((void *)(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v32);
  uint64_t v34 = (void *)swift_allocObject(&unk_2707F0, 48LL, 7LL);
  v34[2] = v28;
  v34[3] = sub_3A940;
  v34[4] = v27;
  v34[5] = v31;
  uint64_t v35 = *(void (**)(uint64_t (*)(char), void *, uint64_t, uint64_t))(v33 + 40);
  swift_retain(v31);
  swift_retain(v28);
  swift_retain(v27);
  v35(sub_1345C0, v34, v32, v33);
  swift_release(v22);
  swift_release(v27);
  swift_release(v31);
  swift_release(v34);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v38, v42);
}

uint64_t sub_12055C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a5;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969E0);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v17 = 67109120;
    int v28 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
    _os_log_impl(&dword_0, v15, v16, "AcousticIDFlow#triggerSmartStackMatch enableLiveActivity: %{BOOL}d", v17, 8u);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_enableLiveActivity) = a1 & 1;
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
  uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
  sub_6EA8((void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v18);
  uint64_t v20 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v20 + 16, a2);
  unint64_t v21 = (void *)swift_allocObject(&unk_270818, 40LL, 7LL);
  v21[2] = v20;
  v21[3] = a3;
  v21[4] = a4;
  uint64_t v22 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v22 + 16, a2);
  os_log_type_t v23 = (void *)swift_allocObject(&unk_270840, 48LL, 7LL);
  v23[2] = v22;
  uint64_t v24 = v27;
  v23[3] = v27;
  v23[4] = a3;
  v23[5] = a4;
  uint64_t v25 = *(void (**)(uint64_t (*)(), void *, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v19 + 8);
  swift_retain(v24);
  swift_retain_n(a4, 2LL);
  swift_retain(v20);
  swift_retain(v22);
  v25(sub_1345D0, v21, sub_134614, v23, v18, v19);
  swift_release(v20);
  swift_release(v21);
  swift_release(v22);
  return swift_release(v23);
}

uint64_t sub_120800(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a1 += 16LL;
  swift_beginAccess(a1, v24, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    uint64_t v11 = Strong;
    uint64_t v12 = (void *)swift_allocObject(&unk_270868, 40LL, 7LL);
    void v12[2] = v11;
    v12[3] = a2;
    v12[4] = a3;
    if ((*(_BYTE *)(v11 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_enableLiveActivity) & 1) != 0)
    {
      uint64_t v13 = swift_allocObject(&unk_270890, 32LL, 7LL);
      *(void *)(v13 + 16) = sub_134694;
      *(void *)(v13 + 24) = v12;
      uint64_t v14 = swift_allocObject(&unk_270390, 24LL, 7LL);
      swift_weakInit(v14 + 16, v11);
      swift_retain_n(v11, 2LL);
      swift_retain_n(a3, 2LL);
      swift_retain(v12);
      uint64_t v15 = sub_6C5C(&qword_284600);
      static Task<>.withCallback<A>(_:operation:)(sub_134484, v13, &unk_28A7D8, v14, v15);
      swift_release(a3);
      swift_release_n(v11, 2LL);
      swift_release(v12);
      swift_release(v13);
      os_log_type_t v16 = (void *)v14;
    }

    else
    {
      swift_retain_n(v11, 2LL);
      swift_retain_n(a3, 2LL);
      sub_120AAC(0LL, 0LL, 0, v11, a2, a3);
      swift_release(a3);
      swift_release_n(v11, 2LL);
      os_log_type_t v16 = v12;
    }

    return swift_release(v16);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v17 = sub_6960(v6, (uint64_t)qword_2969E0);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl( &dword_0,  v19,  v20,  "AcousticIDFlow#triggerSmartStackMatch self deallocated prematurely during performMatch start call",  v21,  2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

uint64_t sub_120AAC( uint64_t a1, unint64_t a2, char a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  *(void *)&__int128 v133 = a6;
  uint64_t v132 = a5;
  uint64_t v140 = a4;
  uint64_t v129 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v127 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for AceOutput(0LL);
  uint64_t v137 = *(void *)(v13 - 8);
  uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v13;
  __chkstk_darwin(v13);
  uint64_t v136 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v15);
  uint64_t v131 = (char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v139 = (id)type metadata accessor for AcousticIDFlow.State(0LL);
  uint64_t v17 = __chkstk_darwin(v139);
  uint64_t v19 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v127 - v21;
  __chkstk_darwin(v20);
  uint64_t v135 = (uint64_t)&v127 - v23;
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v141 = *(void *)(v24 - 8);
  uint64_t v142 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v134 = (char *)&v127 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v127 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v130 = (char *)&v127 - v34;
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v127 - v35;
  uint64_t v37 = sub_6C5C(&qword_28A7C8);
  if ((a3 & 1) != 0)
  {
    uint64_t v67 = v37;
    uint64_t v148 = a1;
    swift_errorRetain(a1);
    uint64_t v68 = sub_6C5C(&qword_284010);
    uint64_t v69 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(&v144, &v148, v68, v69, 0LL))
    {
      uint64_t v70 = v144;
      uint64_t v71 = v141;
      uint64_t v72 = v142;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v73 = sub_6960(v72, (uint64_t)qword_2969E0);
      uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      v74(v36, v73, v72);
      id v75 = v70;
      uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
      os_log_type_t v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v79 = swift_slowAlloc(32LL, -1LL);
        uint64_t v137 = v73;
        uint64_t v80 = v79;
        uint64_t v143 = v79;
        uint64_t v138 = v74;
        *(_DWORD *)uint64_t v78 = 136315138;
        uint64_t v136 = (char *)(v78 + 4);
        id v81 = [v75 localizedDescription];
        uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
        uint64_t v84 = v83;

        *(void *)&__int128 v145 = v82;
        *((void *)&v145 + 1) = v84;
        uint64_t v85 = String.init<A>(_:)( &v145,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v87 = v86;
        *(void *)&__int128 v145 = sub_6978(v85, v86, &v143);
        uint64_t v74 = v138;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, (char *)&v145 + 8);

        swift_bridgeObjectRelease(v87);
        _os_log_impl( &dword_0,  v76,  v77,  "AcousticIDFlow#triggerSmartStackMatch Error grabbing session ID %s, issuing error dialog",  v78,  0xCu);
        swift_arrayDestroy(v80, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v88 = v80;
        uint64_t v73 = v137;
        uint64_t v72 = v142;
        swift_slowDealloc(v88, -1LL, -1LL);
        swift_slowDealloc(v78, -1LL, -1LL);

        uint64_t v89 = *(void (**)(char *, uint64_t))(v141 + 8);
      }

      else
      {

        uint64_t v89 = *(void (**)(char *, uint64_t))(v71 + 8);
      }

      v89(v36, v72);
      uint64_t v90 = v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      swift_beginAccess(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v145, 0LL, 0LL);
      uint64_t v91 = v135;
      sub_134620(v90, v135);
      if (swift_getEnumCaseMultiPayload(v91, v139) == 5)
      {
        uint64_t v92 = v130;
        uint64_t v93 = ((uint64_t (*)(char *, uint64_t, uint64_t))v74)(v130, v73, v72);
        uint64_t v94 = (os_log_s *)Logger.logObject.getter(v93);
        os_log_type_t v95 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v96 = 0;
          _os_log_impl( &dword_0,  v94,  v95,  "AcousticIDFlow#triggerSmartStackMatch grabSessionID failed, but performMatch has already completed. Doing nothing.",  v96,  2u);
          swift_slowDealloc(v96, -1LL, -1LL);
          os_log_type_t v97 = (os_log_s *)v75;
        }

        else
        {
          os_log_type_t v97 = v94;
          uint64_t v94 = (os_log_s *)v75;
        }

        v89(v92, v72);
      }

      else
      {
        uint64_t v98 = type metadata accessor for PlaybackCodeAndDescription(0LL);
        uint64_t v99 = (uint64_t)v131;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56LL))(v131, 1LL, 1LL, v98);
        id v100 = [v75 localizedDescription];
        uint64_t v101 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
        uint64_t v103 = v102;

        sub_12B57C(v99, v101, v103, (uint64_t)v132, v133);
        swift_bridgeObjectRelease(v103);
        sub_1F6CC(v99, &qword_28A680);
        sub_132158(v91, type metadata accessor for AcousticIDFlow.State);
      }

      return swift_errorRelease(v148);
    }

    else
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v67, v67);
      __break(1u);
    }
  }

  else
  {
    uint64_t v135 = a1;
    if (a2)
    {
      unint64_t v38 = a2;
      id v39 = objc_msgSend( objc_allocWithZone(SAUIAddViews),  "init",  swift_bridgeObjectRetain(a2).n128_f64[0]);
      id v40 = [objc_allocWithZone(SAUIUserUtteranceView) init];
      NSString v41 = String._bridgeToObjectiveC()();
      [v40 setCorrespondingSessionID:v41];

      uint64_t v42 = sub_6C5C(&qword_287980);
      uint64_t v43 = swift_allocObject(v42, 40LL, 7LL);
      __int128 v133 = xmmword_214980;
      *(_OWORD *)(v43 + 16) = xmmword_214980;
      *(void *)(v43 + 32) = v40;
      *(void *)&__int128 v145 = v43;
      specialized Array._endMutation()(v43);
      uint64_t v44 = v145;
      sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
      id v139 = v40;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v39, "setViews:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

      uint64_t v46 = swift_allocObject(v42, 40LL, 7LL);
      *(_OWORD *)(v46 + 16) = v133;
      *(void *)(v46 + 32) = v39;
      *(void *)&__int128 v145 = v46;
      specialized Array._endMutation()(v46);
      uint64_t v47 = v145;
      uint64_t v48 = type metadata accessor for NLContextUpdate(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56LL))(v12, 1LL, 1LL, v48);
      uint64_t v147 = 0LL;
      __int128 v145 = 0u;
      __int128 v146 = 0u;
      *(void *)&__int128 v133 = v39;
      unint64_t v49 = v38;
      uint64_t v50 = v136;
      static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)( v47,  v12,  _swiftEmptyArrayStorage,  &v145);
      swift_bridgeObjectRelease(v47);
      sub_1F6CC((uint64_t)&v145, &qword_2845C8);
      sub_1F6CC((uint64_t)v12, (uint64_t *)&unk_286C50);
      uint64_t v51 = v140;
      uint64_t v52 = *(void *)(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 24);
      uint64_t v53 = *(void *)(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 32);
      sub_6EA8((void *)(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher), v52);
      char v54 = v138;
      *((void *)&v146 + 1) = v138;
      uint64_t v147 = &protocol witness table for AceOutput;
      unint64_t v55 = sub_10974(&v145);
      (*(void (**)(void *, char *, void))(v137 + 16))(v55, v50, v54);
      uint64_t v56 = swift_allocObject(&unk_270390, 24LL, 7LL);
      swift_weakInit(v56 + 16, v51);
      swift_retain(v56);
      dispatch thunk of OutputPublisher.publish(output:_:)(&v145, sub_134730, v56, v52, v53);
      swift_release_n(v56, 2LL);
      sub_6C3C(&v145);
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v57 = v142;
      uint64_t v58 = sub_6960(v142, (uint64_t)qword_2969E0);
      uint64_t v59 = v141;
      unint64_t v60 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v134, v58, v57);
      swift_bridgeObjectRetain(v49);
      uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        char v64 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v65 = swift_slowAlloc(32LL, -1LL);
        *(void *)&__int128 v145 = v65;
        *(_DWORD *)char v64 = 136315138;
        swift_bridgeObjectRetain(v49);
        uint64_t v66 = v135;
        uint64_t v148 = sub_6978(v135, v49, (uint64_t *)&v145);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v148, &v149);
        sub_13473C(v66, v49, 0);
        sub_13473C(v66, v49, 0);
        swift_bridgeObjectRelease(v49);
        _os_log_impl(&dword_0, v62, v63, "AcousticIDFlow#triggerSmartStackMatch Got sessionID: %s", v64, 0xCu);
        swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v65, -1LL, -1LL);
        swift_slowDealloc(v64, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v134, v57);
      }

      else
      {

        uint64_t v122 = v135;
        sub_13473C(v135, v49, 0);
        sub_13473C(v122, v49, 0);

        (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v57);
      }

      return (*(uint64_t (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v137 + 8))(v136, v138);
    }

    else
    {
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v104 = v142;
      uint64_t v105 = sub_6960(v142, (uint64_t)qword_2969E0);
      uint64_t v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 16);
      uint64_t v107 = v106(v32, v105, v104);
      uint64_t v108 = (os_log_s *)Logger.logObject.getter(v107);
      os_log_type_t v109 = static os_log_type_t.default.getter();
      BOOL v110 = os_log_type_enabled(v108, v109);
      id v111 = v139;
      if (v110)
      {
        os_log_type_t v112 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v112 = 0;
        _os_log_impl( &dword_0,  v108,  v109,  "AcousticIDFlow#triggerSmartStackMatch Nil sessionID was sent, retriggering logic and setting state to .session IDWasCheckedAndIsNilForSmartStack",  v112,  2u);
        swift_slowDealloc(v112, -1LL, -1LL);
      }

      uint64_t v113 = v142;
      uint64_t v114 = *(void (**)(char *, uint64_t))(v141 + 8);
      v114(v32, v142);
      uint64_t v115 = v140;
      uint64_t v116 = v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      swift_beginAccess(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v145, 0LL, 0LL);
      sub_134620(v116, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload(v22, v111) == 5)
      {
        uint64_t v117 = v106(v27, v105, v113);
        uint64_t v118 = (os_log_s *)Logger.logObject.getter(v117);
        os_log_type_t v119 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v118, v119))
        {
          uint64_t v120 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v120 = 0;
          _os_log_impl( &dword_0,  v118,  v119,  "AcousticIDFlow#triggerSmartStackMatch grabSessionID sessionID is nil, but performMatch has already completed . Doing nothing.",  v120,  2u);
          swift_slowDealloc(v120, -1LL, -1LL);
        }

        return ((uint64_t (*)(char *, uint64_t))v114)(v27, v113);
      }

      else
      {
        swift_storeEnumTagMultiPayload(v19, v111, 3LL);
        swift_beginAccess(v116, &v148, 33LL, 0LL);
        sub_133C88((uint64_t)v19, v116);
        swift_endAccess(&v148);
        __n128 v123 = (void *)(v115 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer);
        uint64_t v124 = *(void *)(v115 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
        uint64_t v125 = v123[4];
        sub_6EA8(v123, v124);
        (*(void (**)(uint64_t, uint64_t))(v125 + 32))(v124, v125);
        uint64_t v126 = v127;
        static ExecuteResponse.ongoing(requireInput:)(0LL);
        v132(v126);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v126, v129);
        return sub_132158((uint64_t)v22, type metadata accessor for AcousticIDFlow.State);
      }
    }
  }

  return result;
}

uint64_t sub_121828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v6);
  uint64_t v10 = &v25[-v9 - 8];
  a3 += 16LL;
  swift_beginAccess(a3, v25, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    uint64_t v12 = Strong;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v13 = sub_6960(v4, (uint64_t)qword_2969E0);
    uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, v4);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl( &dword_0,  v15,  v16,  "AcousticIDFlow#triggerSmartStackMatch Empty view successfully published",  v17,  2u);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    swift_release(v12);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v18 = sub_6960(v4, (uint64_t)qword_2969E0);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v18, v4);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl( &dword_0,  v20,  v21,  "AcousticIDFlow#triggerSmartStackMatch self deallocated prematurely during publishing",  v22,  2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    uint64_t v8 = v10;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_121A6C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v68 = a5;
  uint64_t v69 = a4;
  uint64_t v71 = a3;
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = type metadata accessor for AcousticIDFlow.State(0LL);
  uint64_t v9 = __chkstk_darwin(v70);
  char v64 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v13 = sub_6C5C(&qword_287930);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v72 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v64 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v64 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v64 - v26;
  a2 += 16LL;
  swift_beginAccess(a2, v75, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v29 = Strong;
    sub_FF10(a1, (uint64_t)v15, &qword_287930);
    if (swift_getEnumCaseMultiPayload(v15, v13) == 1)
    {
      sub_1F6CC((uint64_t)v15, &qword_287930);
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v30 = sub_6960(v16, (uint64_t)qword_2969E0);
      uint64_t v31 = v17;
      uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
      uint64_t v33 = v32(v22, v30, v16);
      uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl( &dword_0,  v34,  v35,  "AcousticIDFlow#triggerSmartStackMatch experienced an error during match",  v36,  2u);
        uint64_t v37 = v36;
        uint64_t v31 = v17;
        swift_slowDealloc(v37, -1LL, -1LL);
      }

      unint64_t v38 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
      uint64_t v39 = v38(v22, v16);
    }

    else
    {
      uint64_t v47 = *v15;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v48 = sub_6960(v16, (uint64_t)qword_2969E0);
      uint64_t v49 = v17;
      uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16);
      uint64_t v50 = v32(v25, v48, v16);
      uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl( &dword_0,  v51,  v52,  "AcousticIDFlow#triggerSmartStackMatch successfully completed match execution (may have found match)",  v53,  2u);
        char v54 = v53;
        uint64_t v49 = v17;
        swift_slowDealloc(v54, -1LL, -1LL);
      }

      swift_release(v47);
      unint64_t v38 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
      uint64_t v39 = v38(v25, v16);
    }

    uint64_t v55 = v70;
    if (v71) {
      dispatch thunk of SiriAudioDomainExecutionLogger.endDomainExecution()(v39);
    }
    uint64_t v56 = v29 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
    swift_beginAccess(v29 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, v74, 0LL, 0LL);
    sub_134620(v56, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload(v12, v55) == 2)
    {
      uint64_t v57 = (uint64_t)v64;
      swift_storeEnumTagMultiPayload(v64, v55, 5LL);
      swift_beginAccess(v56, v73, 33LL, 0LL);
      sub_133C88(v57, v56);
      swift_endAccess(v73);
      uint64_t v58 = v65;
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      v69(v58);
      swift_release(v29);
      return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v58, v67);
    }

    else
    {
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v59 = sub_6960(v16, (uint64_t)qword_2969E0);
      uint64_t v60 = v32(v72, v59, v16);
      uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
      os_log_type_t v62 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v61, v62))
      {
        os_log_type_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v63 = 0;
        _os_log_impl( &dword_0,  v61,  v62,  "AcousticIDFlow#triggerSmartStackMatch performMatch completed, but triggerSmartStackMatch has already returned comletion in grabSessionID. Doing nothing.",  v63,  2u);
        swift_slowDealloc(v63, -1LL, -1LL);
        swift_release(v29);
      }

      else
      {

        swift_release(v29);
      }

      v38(v72, v16);
      return sub_132158((uint64_t)v12, type metadata accessor for AcousticIDFlow.State);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v40 = sub_6960(v16, (uint64_t)qword_2969E0);
    uint64_t v41 = v17;
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 16))(v27, v40, v16);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl( &dword_0,  v43,  v44,  "AcousticIDFlow#triggerSmartStackMatch self deallocated prematurely during performMatch call",  v45,  2u);
      swift_slowDealloc(v45, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v27, v16);
  }

uint64_t sub_1220A8(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a2;
  uint64_t v48 = a1;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v47 = &v45[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v45[-v7];
  __chkstk_darwin(v6);
  uint64_t v10 = &v45[-v9];
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v11 = sub_6960(v2, (uint64_t)qword_2969E0);
  uint64_t v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v13 = v12(v10, v11, v2);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AcousticIDFlow#executeAtBeginning Reached Logic", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  uint64_t v17 = *(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8);
  uint64_t v18 = v17(v10, v2);
  uint64_t v19 = static SiriEnvironmentWrapper.retrieve()(v18);
  uint64_t v20 = v19;
  if (v19)
  {
    uint64_t v21 = swift_retain(v19);
    uint64_t v22 = SiriEnvironment.currentRequest.getter(v21);
    uint64_t v23 = swift_release(v20);
    int v24 = CurrentRequest.isInAmbient.getter(v23);
    swift_release(v22);
  }

  else
  {
    int v24 = 0;
  }

  int v46 = v24;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_isInAmbient) = v24 & 1;
  v12(v8, v11, v2);
  uint64_t v25 = swift_retain_n(v20, 2LL);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v29 = v28;
    *(_DWORD *)uint64_t v28 = 67109120;
    if (v20)
    {
      uint64_t v30 = SiriEnvironment.currentRequest.getter(v28);
      swift_release(v20);
      swift_release(v30);
      int v31 = 1;
    }

    else
    {
      int v31 = 0;
    }

    int v51 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
    swift_release(v20);
    _os_log_impl(&dword_0, v26, v27, "AcousticIDFlow#executeAtBeginning is currentRequest present: %{BOOL}d", v29, 8u);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v20, 2LL);
  }

  v17(v8, v2);
  uint64_t v32 = v47;
  uint64_t v33 = v12(v47, v11, v2);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v36 = 67109120;
    int v52 = v46 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    _os_log_impl(&dword_0, v34, v35, "AcousticIDFlow#executeAtBeginning isInAmbient: %{BOOL}d", v36, 8u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  v17(v32, v2);
  uint64_t v37 = v50;
  uint64_t v38 = *(void *)(v50 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
  uint64_t v39 = *(void *)(v50 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
  sub_6EA8((void *)(v50 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v38);
  uint64_t v40 = (void *)swift_allocObject(&unk_270778, 40LL, 7LL);
  uint64_t v41 = v48;
  uint64_t v42 = v49;
  v40[2] = v37;
  void v40[3] = v41;
  v40[4] = v42;
  uint64_t v43 = *(void (**)(uint64_t (*)(char), void *, uint64_t, uint64_t))(v39 + 40);
  swift_retain(v37);
  swift_retain(v42);
  v43(sub_13457C, v40, v38, v39);
  swift_release(v20);
  return swift_release(v40);
}

uint64_t sub_1224CC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969E0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v16 = 67109120;
    int v21 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    _os_log_impl(&dword_0, v14, v15, "AcousticIDFlow#executeAtBeginning enableLiveActivity: %{BOOL}d", v16, 8u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_enableLiveActivity) = a1 & 1;
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 24);
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 32);
  sub_6EA8((void *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider), v17);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v17, v18) & 1) != 0) {
    return sub_125090(a3, a4);
  }
  else {
    return sub_1237F0(a3, a4);
  }
}

uint64_t sub_1226A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = sub_6C5C(&qword_28A680);
  uint64_t v8 = __chkstk_darwin(v35);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v36 = a1;
  uint64_t v18 = sub_FF10(a1, (uint64_t)v12, &qword_28A680);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = a2;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = a3;
    uint64_t v24 = v23;
    uint64_t v38 = v23;
    uint64_t v34 = v4;
    *(_DWORD *)uint64_t v22 = 136315138;
    int v31 = v22 + 4;
    sub_FF10((uint64_t)v12, (uint64_t)v10, &qword_28A680);
    uint64_t v25 = String.init<A>(describing:)(v10, v35);
    unint64_t v27 = v26;
    uint64_t v37 = sub_6978(v25, v26, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease(v27);
    sub_1F6CC((uint64_t)v12, &qword_28A680);
    _os_log_impl(&dword_0, v19, v20, "AcousticIDFlow#executeIdentifyError With code: %s", v22, 0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v28 = v24;
    a3 = v33;
    swift_slowDealloc(v28, -1LL, -1LL);
    uint64_t v29 = v22;
    a2 = v32;
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {
    sub_1F6CC((uint64_t)v12, &qword_28A680);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return sub_12B57C(v36, 0LL, 0LL, a2, a3);
}

uint64_t sub_122964(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v45 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v43 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v14 = sub_6960(v4, (uint64_t)qword_2969E0);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v16 = v15(v13, v14, v4);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v43 = v11;
    os_log_type_t v20 = v8;
    uint64_t v21 = a1;
    uint64_t v22 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "AcousticIDFlow#executeIdentifyComplete Reached Logic", v19, 2u);
    uint64_t v23 = v22;
    a1 = v21;
    uint64_t v8 = v20;
    uint64_t v11 = v43;
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v13, v4);
  if (a1)
  {
    v15(v11, v14, v4);
    uint64_t v25 = a1;
    uint64_t v26 = swift_retain(a1);
    unint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v46;
    if (v29)
    {
      int v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v31 = 0;
      _os_log_impl( &dword_0,  v27,  v28,  "AcousticIDFlow#executeIdentifyComplete Found matched song from ShazamKit",  v31,  2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    v24(v11, v4);
    uint64_t v32 = *(void *)(v30 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 24);
    uint64_t v33 = *(void *)(v30 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 32);
    sub_6EA8((void *)(v30 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider), v32);
    if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v32, v33) & 1) != 0) {
      sub_129CDC(v25, v44, v45);
    }
    else {
      sub_128748(v25, v44, (uint64_t)v45);
    }
    return swift_release(v25);
  }

  else
  {
    uint64_t v34 = v15(v8, v14, v4);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = v46;
    if (v37)
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_0, v35, v36, "AcousticIDFlow#executeIdentifyComplete No matched song from ShazamKit", v39, 2u);
      swift_slowDealloc(v39, -1LL, -1LL);
    }

    v24(v8, v4);
    uint64_t v40 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 24);
    uint64_t v41 = *(void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 32);
    sub_6EA8((void *)(v38 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider), v40);
    if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v40, v41) & 1) != 0) {
      return sub_127708(v44, (uint64_t)v45);
    }
    else {
      return sub_12679C(v44, (uint64_t)v45);
    }
  }

uint64_t sub_122CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v28 = a1;
  uint64_t v31 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v31 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969E0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AcousticIDFlow#triggerMatch Reached Logic", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  uint64_t v17 = v31;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v31);
  uint64_t v18 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = (v18 + 33) & ~v18;
  unint64_t v20 = (v3 + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = swift_allocObject(&unk_270700, v20 + 16, v18 | 7);
  *(void *)(v21 + 16) = "shazamKitPerformMatch";
  *(void *)(v21 + 24) = 21LL;
  *(_BYTE *)(v21 + 32) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v21 + v19, v5, v17);
  uint64_t v22 = (void *)(v21 + v20);
  uint64_t v23 = v29;
  *uint64_t v22 = v28;
  v22[1] = v23;
  uint64_t v24 = swift_retain(v23);
  uint64_t v25 = static os_signpost_type_t.begin.getter(v24);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v25,  &dword_0,  qword_296AA0,  "shazamKitPerformMatch",  21LL,  2LL,  v7,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v26 = swift_allocObject(&unk_270728, 32LL, 7LL);
  *(void *)(v26 + 16) = sub_33CC0;
  *(void *)(v26 + 24) = v21;
  swift_retain(v21);
  sub_122FE4((uint64_t)sub_33CB0, v26, v30);
  swift_release(v21);
  swift_release(v26);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v17);
}

uint64_t sub_122FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v7 = *(void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
  sub_6EA8((void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider), v6);
  uint64_t v8 = dispatch thunk of SiriKitTaskLoggingProviding.startExecution(for:)(1008LL, v6, v7);
  uint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
  sub_6EA8((void *)(a3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v9);
  swift_weakInit(v15, a3);
  uint64_t v11 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v11 + 16, a3);
  uint64_t v12 = (void *)swift_allocObject(&unk_270750, 48LL, 7LL);
  void v12[2] = v11;
  v12[3] = v8;
  v12[4] = a1;
  v12[5] = a2;
  uint64_t v13 = *(void (**)(uint64_t (*)(), void, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v10 + 8);
  swift_retain(v8);
  swift_retain(a2);
  swift_retain(v11);
  v13(sub_123124, 0LL, sub_13456C, v12, v9, v10);
  swift_release(v8);
  swift_release(v12);
  swift_weakDestroy(v15);
  return swift_release(v11);
}

uint64_t sub_123124()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v4 = sub_6960(v0, (uint64_t)qword_2969E0);
  uint64_t v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "AcousticIDFlow#triggerMatch match was started", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_123250(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v68 = a5;
  uint64_t v69 = a4;
  uint64_t v64 = a3;
  uint64_t v59 = a1;
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v61 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v60 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = type metadata accessor for AcousticIDFlow.State(0LL);
  uint64_t v10 = __chkstk_darwin(v62);
  uint64_t v63 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = sub_6C5C(&qword_287930);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v58 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v58 - v25;
  a2 += 16LL;
  swift_beginAccess(a2, v71, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v28 = Strong;
    sub_FF10(v59, (uint64_t)v16, &qword_287930);
    if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
    {
      uint64_t v29 = *(void (**)(char *, uint64_t *, uint64_t))(v61 + 32);
      v29(v60, v16, v8);
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v30 = sub_6960(v17, (uint64_t)qword_2969E0);
      uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v30, v17);
      uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = v29;
        uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_0, v32, v33, "AcousticIDFlow#triggerMatch switching to .identifyError", v35, 2u);
        os_log_type_t v36 = v35;
        uint64_t v29 = v34;
        swift_slowDealloc(v36, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v37 = *(void *)(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
      uint64_t v38 = *(void *)(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
      sub_6EA8((void *)(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v37);
      (*(void (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
      v29(v13, (uint64_t *)v60, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v13, 0LL, 1LL, v8);
      uint64_t v39 = v13;
      uint64_t v40 = v62;
      uint64_t v41 = 0LL;
    }

    else
    {
      uint64_t v48 = *v16;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v49 = sub_6960(v17, (uint64_t)qword_2969E0);
      uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16))(v24, v49, v17);
      int v51 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl(&dword_0, v51, v52, "AcousticIDFlow#triggerMatch switching to .identifyComplete", v53, 2u);
        swift_slowDealloc(v53, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v17);
      *(void *)uint64_t v13 = v48;
      uint64_t v39 = v13;
      uint64_t v40 = v62;
      uint64_t v41 = 1LL;
    }

    swift_storeEnumTagMultiPayload(v39, v40, v41);
    uint64_t v54 = v63;
    sub_112780((uint64_t)v13, v63);
    uint64_t v55 = v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
    swift_beginAccess(v28 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, v70, 33LL, 0LL);
    sub_133C88(v54, v55);
    uint64_t v56 = swift_endAccess(v70);
    if (v64) {
      dispatch thunk of SiriAudioDomainExecutionLogger.endDomainExecution()(v56);
    }
    uint64_t v57 = v65;
    static ExecuteResponse.ongoing(requireInput:)(0LL);
    v69(v57);
    swift_release(v28);
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v57, v67);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v42 = sub_6960(v17, (uint64_t)qword_2969E0);
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16))(v26, v42, v17);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl( &dword_0,  v44,  v45,  "AcousticIDFlow#triggerMatch self deallocated prematurely during performMatch call",  v46,  2u);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v26, v17);
  }

uint64_t sub_1237F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  *((void *)&v27 + 1) = &type metadata for Bool;
  LOBYTE(v26) = 0;
  sub_21964(&v26, v30);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  unint64_t v29 = v6;
  sub_33808(v30, 0x636E7973417369LL, 0xE700000000000000LL, isUniquelyReferenced_nonNull_native);
  unint64_t v8 = v29;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  uint64_t v10 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v10 + 16, v3);
  uint64_t v11 = (void *)swift_allocObject(&unk_270660, 40LL, 7LL);
  v11[2] = v10;
  v11[3] = a1;
  v11[4] = a2;
  uint64_t v12 = v9[4];
  uint64_t v13 = v9[5];
  uint64_t v14 = v9[6];
  uint64_t v28 = 0LL;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  uint64_t v17 = v13;
  uint64_t v18 = v14;
  uint64_t v19 = 0x6E696E657473694CLL;
  unint64_t v20 = 0xE900000000000067LL;
  uint64_t v21 = v12;
  unint64_t v22 = v8;
  uint64_t v23 = 0LL;
  uint64_t v24 = &v26;
  uint64_t v25 = 0LL;
  swift_retain(v10);
  swift_retain(a2);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_134324,  (uint64_t)v11,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v13,  v14,  0x6E696E657473694CLL,  0xE900000000000067LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v16);
  sub_1F6CC((uint64_t)&v26, &qword_283FE8);
  swift_bridgeObjectRelease(v8);
  swift_release(v10);
  return swift_release(v11);
}

uint64_t sub_1239B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a1;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v50 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v46 - v18;
  a2 += 16LL;
  swift_beginAccess(a2, v51, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v21 = Strong;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v48 = a3;
    uint64_t v22 = sub_6960(v13, (uint64_t)qword_2969E0);
    uint64_t v47 = v14;
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v22, v13);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = a4;
      __int128 v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)__int128 v27 = 0;
      _os_log_impl(&dword_0, v24, v25, "AcousticIDFlow#listeningDialogAndViewLegacy", v27, 2u);
      uint64_t v28 = v27;
      a4 = v26;
      uint64_t v10 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v13);
    uint64_t v29 = swift_allocObject(&unk_2704D0, 24LL, 7LL);
    *(void *)(v29 + 16) = _swiftEmptyArrayStorage;
    sub_FF10(v49, (uint64_t)v12, (uint64_t *)&unk_286BB0);
    sub_FF10((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_286BB0);
    uint64_t v30 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v31 = (v30 + 32) & ~v30;
    unint64_t v32 = (v8 + v31 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v33 = swift_allocObject(&unk_270688, v32 + 16, v30 | 7);
    *(void *)(v33 + 16) = v21;
    *(void *)(v33 + 24) = v29;
    sub_45F6C((uint64_t)v12, v33 + v31, (uint64_t *)&unk_286BB0);
    uint64_t v34 = (uint64_t *)(v33 + v32);
    uint64_t v35 = v48;
    *uint64_t v34 = v48;
    v34[1] = a4;
    if (*(_BYTE *)(v21 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_enableLiveActivity) == 1)
    {
      uint64_t v36 = swift_allocObject(&unk_2706B0, 32LL, 7LL);
      *(void *)(v36 + 16) = sub_134410;
      *(void *)(v36 + 24) = v33;
      uint64_t v37 = swift_allocObject(&unk_270390, 24LL, 7LL);
      swift_weakInit(v37 + 16, v21);
      swift_retain_n(v21, 2LL);
      swift_retain_n(v29, 2LL);
      swift_retain_n(a4, 2LL);
      swift_retain(v33);
      uint64_t v38 = sub_6C5C(&qword_284600);
      static Task<>.withCallback<A>(_:operation:)(sub_134484, v36, &unk_28A7C0, v37, v38);
      swift_release(v29);
      swift_release(v33);
      swift_release_n(v21, 2LL);
      swift_release(v36);
      uint64_t v39 = v37;
    }

    else
    {
      swift_retain_n(v29, 2LL);
      swift_retain_n(a4, 2LL);
      swift_retain(v21);
      sub_123E84(0LL, 0LL, 0, v21, v29, v10, v35, a4);
      swift_release(v29);
      swift_release(v21);
      uint64_t v39 = v33;
    }

    swift_release(v39);
    sub_1F6CC((uint64_t)v10, (uint64_t *)&unk_286BB0);
    swift_release(v29);
    return swift_release(a4);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v40 = sub_6960(v13, (uint64_t)qword_2969E0);
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v40, v13);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl( &dword_0,  v42,  v43,  "AcousticIDFlow#listeningDialogAndViewLegacy self deallocated prematurely",  v44,  2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }

uint64_t sub_123E84(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v163 = a7;
  uint64_t v164 = a8;
  uint64_t v157 = a6;
  uint64_t v156 = a5;
  uint64_t v167 = a4;
  LODWORD(v162) = a3;
  os_log_type_t v160 = a2;
  uint64_t v9 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v9);
  uint64_t v161 = (char *)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v165 = *(void *)(v11 - 8);
  uint64_t v166 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v159 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v155 = (char *)&v140 - v14;
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v15);
  BOOL v151 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = type metadata accessor for AceOutput(0LL);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v152 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v18);
  os_log_type_t v150 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v20);
  uint64_t v149 = (char *)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v22);
  uint64_t v148 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v147 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  __int128 v145 = (char *)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v26 = (char *)&v140 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v142 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v28 = (char *)&v140 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  unint64_t v32 = (char *)&v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v33);
  uint64_t v158 = (char *)&v140 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t *)((char *)&v140 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v38 = sub_6C5C(&qword_28A7C8);
  if ((v162 & 1) != 0)
  {
    uint64_t v42 = v38;
    uint64_t v171 = a1;
    swift_errorRetain(a1);
    uint64_t v43 = sub_6C5C(&qword_284010);
    uint64_t v44 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if ((swift_dynamicCast(&v173, &v171, v43, v44, 0LL) & 1) != 0)
    {
      os_log_type_t v45 = v173;
      uint64_t v46 = v165;
      uint64_t v47 = v166;
      uint64_t v48 = v159;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v49 = sub_6960(v47, (uint64_t)qword_2969E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v48, v49, v47);
      id v50 = v45;
      int v51 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v52 = static os_log_type_t.error.getter();
      uint64_t v53 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v55 = swift_slowAlloc(32LL, -1LL);
        uint64_t v172 = v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        id v56 = [v50 localizedDescription];
        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        uint64_t v59 = v58;

        *(void *)&__int128 v168 = v57;
        *((void *)&v168 + 1) = v59;
        uint64_t v60 = String.init<A>(_:)( &v168,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v62 = v61;
        *(void *)&__int128 v168 = sub_6978(v60, v61, &v172);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 8);

        unint64_t v63 = v62;
        uint64_t v53 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
        swift_bridgeObjectRelease(v63);
        _os_log_impl( &dword_0,  v51,  v52,  "AcousticIDFlow#listeningDialogAndViewNonRF Error grabbing session ID %s, issuing error dialog",  v54,  0xCu);
        swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1LL, -1LL);
        swift_slowDealloc(v54, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v165 + 8))(v159, v166);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
      }

      uint64_t v64 = type metadata accessor for PlaybackCodeAndDescription(0LL);
      uint64_t v65 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56LL))(v161, 1LL, 1LL, v64);
      id v66 = [v50 *(SEL *)&v53[499]];
      goto LABEL_29;
    }

    _diagnoseUnexpectedEnumCase<A>(type:)(v42, v42);
    __break(1u);
    goto LABEL_31;
  }

  uint64_t v159 = (char *)v29;
  uint64_t v162 = (void *)(v156 + 16);
  id v39 = sub_1322E0();
  NSString v40 = v160;
  if (v39)
  {
    uint64_t v41 = v39;
    if ((*(_BYTE *)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_isInAmbient) & 1) != 0)
    {
    }

    else
    {
      if (v160)
      {
        id v67 = v39;
        NSString v40 = String._bridgeToObjectiveC()();
      }

      else
      {
        id v68 = v39;
      }

      [v41 setCorrespondingSessionID:v40];

      uint64_t v69 = v162;
      swift_beginAccess(v162, &v168, 33LL, 0LL);
      id v70 = v41;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
      uint64_t v71 = *v69 & 0xFFFFFFFFFFFFFF8LL;
      unint64_t v73 = *(void *)((char *)&dword_10 + v71);
      unint64_t v72 = *(void *)(v71 + 24);
      if (v73 >= v72 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1LL);
      }
      uint64_t v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v70);
      specialized Array._endMutation()(v74);
      swift_endAccess(&v168);
    }
  }

  sub_FF10((uint64_t)v157, (uint64_t)v37, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v37, v35) == 1)
  {
    uint64_t v171 = *v37;
    uint64_t v75 = sub_6C5C(&qword_284010);
    uint64_t v76 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(&v173, &v171, v75, v76, 0LL))
    {
      os_log_type_t v77 = v173;
      uint64_t v78 = v165;
      uint64_t v79 = v166;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v80 = sub_6960(v79, (uint64_t)qword_2969E0);
      id v81 = v155;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v155, v80, v79);
      id v50 = v77;
      uint64_t v82 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v83 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v85 = swift_slowAlloc(32LL, -1LL);
        uint64_t v172 = v85;
        *(_DWORD *)uint64_t v84 = 136315138;
        id v86 = [v50 localizedDescription];
        uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
        uint64_t v89 = v88;

        *(void *)&__int128 v168 = v87;
        *((void *)&v168 + 1) = v89;
        uint64_t v90 = String.init<A>(_:)( &v168,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v92 = v91;
        *(void *)&__int128 v168 = sub_6978(v90, v91, &v172);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, (char *)&v168 + 8);

        swift_bridgeObjectRelease(v92);
        _os_log_impl( &dword_0,  v82,  v83,  "AcousticIDFlow#listeningDialogAndViewLegacy Error creating dialog %s, issuing error dialog",  v84,  0xCu);
        swift_arrayDestroy(v85, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v85, -1LL, -1LL);
        swift_slowDealloc(v84, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v165 + 8))(v155, v166);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v79);
      }

      uint64_t v135 = type metadata accessor for PlaybackCodeAndDescription(0LL);
      uint64_t v65 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56LL))(v161, 1LL, 1LL, v135);
      id v66 = [v50 localizedDescription];
LABEL_29:
      id v136 = v66;
      uint64_t v137 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v136);
      uint64_t v139 = v138;

      sub_12B57C(v65, v137, v139, v163, v164);
      swift_bridgeObjectRelease(v139);
      sub_1F6CC(v65, &qword_28A680);
      return swift_errorRelease(v171);
    }

LABEL_31:
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v35, v35);
    __break(1u);
    return result;
  }

  uint64_t v93 = *(int *)(v33 + 48);
  uint64_t v94 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v166 = *(void *)(v94 - 8);
  os_log_type_t v95 = v158;
  (*(void (**)(char *, uint64_t *, uint64_t))(v166 + 32))(v158, v37, v94);
  *(void *)&v95[v93] = *(uint64_t *)((char *)v37 + v93);
  uint64_t v96 = v159;
  (*(void (**)(char *, void, char *))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v159);
  uint64_t v97 = v141;
  uint64_t v98 = v142;
  (*(void (**)(char *, void, uint64_t))(v141 + 104))( v28,  enum case for AdditionalMetricsDescription.SourceFunction.lstnDlgView(_:),  v142);
  uint64_t v99 = v143;
  uint64_t v100 = v144;
  (*(void (**)(char *, void, uint64_t))(v143 + 104))( v26,  enum case for AdditionalMetricsDescription.StatusReason.listening(_:),  v144);
  uint64_t v165 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v32, v28, v26, 0LL, 1LL);
  uint64_t v161 = v101;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v26, v100);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v28, v98);
  (*(void (**)(char *, char *))(v30 + 8))(v32, v96);
  uint64_t v102 = *(void *)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
  uint64_t v159 = *(char **)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
  uint64_t v157 = sub_6EA8( (void *)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v102);
  uint64_t v103 = v146;
  uint64_t v104 = v145;
  uint64_t v105 = v147;
  (*(void (**)(char *, void, uint64_t))(v146 + 104))(v145, enum case for TypeOfIntent.acousticID(_:), v147);
  uint64_t v106 = enum case for ActivityType.showInterstitial(_:);
  uint64_t v107 = type metadata accessor for ActivityType(0LL);
  uint64_t v108 = *(void *)(v107 - 8);
  uint64_t v109 = (uint64_t)v148;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 104))(v148, v106, v107);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v109, 0LL, 1LL, v107);
  uint64_t v110 = (uint64_t)v149;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v149, 1LL, 1LL, v94);
  uint64_t v111 = enum case for SiriKitReliabilityCodes.inProgress(_:);
  uint64_t v112 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v113 = *(void *)(v112 - 8);
  uint64_t v114 = (uint64_t)v150;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 104))(v150, v111, v112);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v114, 0LL, 1LL, v112);
  uint64_t v115 = v161;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v104,  v109,  v110,  v114,  v165,  v161,  v102,  v159);
  swift_bridgeObjectRelease(v115);
  sub_1F6CC(v114, &qword_2845A0);
  sub_1F6CC(v110, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v109, &qword_2845A8);
  uint64_t v116 = (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v104, v105);
  char v117 = 0;
  if (!v160) {
    char v117 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v116);
  }
  uint64_t v118 = v162;
  swift_beginAccess(v162, &v171, 0LL, 0LL);
  uint64_t v119 = *v118;
  uint64_t v120 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v121 = (uint64_t)v151;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56LL))(v151, 1LL, 1LL, v120);
  v170 = 0LL;
  __int128 v168 = 0u;
  __int128 v169 = 0u;
  swift_bridgeObjectRetain(v119);
  uint64_t v122 = v152;
  uint64_t v123 = (uint64_t)v158;
  static AceOutputHelper.makeConfirmationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v158,  v117 & 1,  v119,  0LL,  1LL,  v121,  _swiftEmptyArrayStorage,  &v168);
  swift_bridgeObjectRelease(v119);
  sub_1F6CC((uint64_t)&v168, &qword_2845C8);
  sub_1F6CC(v121, (uint64_t *)&unk_286C50);
  uint64_t v124 = v167;
  uint64_t v125 = *(void *)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 24);
  uint64_t v126 = *(void *)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 32);
  sub_6EA8((void *)(v167 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher), v125);
  uint64_t v127 = v154;
  *((void *)&v169 + 1) = v154;
  v170 = &protocol witness table for AceOutput;
  uint64_t v128 = sub_10974(&v168);
  uint64_t v129 = v153;
  (*(void (**)(void *, char *, uint64_t))(v153 + 16))(v128, v122, v127);
  uint64_t v130 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v130 + 16, v124);
  uint64_t v131 = (void *)swift_allocObject(&unk_2706D8, 40LL, 7LL);
  uint64_t v132 = v163;
  uint64_t v133 = v164;
  v131[2] = v130;
  v131[3] = v132;
  v131[4] = v133;
  swift_retain(v130);
  swift_retain(v133);
  dispatch thunk of OutputPublisher.publish(output:_:)(&v168, sub_1344EC, v131, v125, v126);
  swift_release(v131);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v122, v127);
  sub_1F6CC(v123, &qword_289340);
  swift_release(v130);
  return sub_6C3C(&v168);
}

  uint64_t v126 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v335,  (uint64_t)&off_26A240);
  uint64_t v127 = v329;
  uint64_t v128 = v314;
  uint64_t v129 = (uint64_t)v313;
  if ((v126 & 1) != 0)
  {
    uint64_t v130 = v308;
    uint64_t v131 = v326(v308, v325, v336);
    uint64_t v132 = (os_log_s *)Logger.logObject.getter(v131);
    uint64_t v133 = static os_log_type_t.info.getter(v132);
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v134 = 0;
      _os_log_impl( &dword_0,  v132,  v133,  "PlayeMediaDialogProvider#invalidTokensHelper sign into Music account required",  v134,  2u);
      swift_slowDealloc(v134, -1LL, -1LL);
    }

    v327(v130, v336);
    v341 = &type metadata for String;
    strcpy((char *)&v340, "NonSubscriber");
    HIWORD(v340) = -4864;
    uint64_t v135 = type metadata accessor for ErrorFilingProvider(0LL);
    id v136 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v135);
    uint64_t v138 = v137;
    uint64_t v139 = (char *)v328;
    uint64_t v140 = swift_isUniquelyReferenced_nonNull_native(v328);
    v339 = v139;
    sub_1E1E1C(&v340, v136, v138, v140, &v342);
    uint64_t v141 = v339;
    swift_bridgeObjectRelease(v138);
    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_1F6CC((uint64_t)&v342, &qword_284028);
    uint64_t v142 = *(void *)(v318 + 120);
    *((void *)&v343 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    v344 = &off_272BD0;
    *(void *)&v342 = v335;
    uint64_t v143 = *(void *)(v142 + 40);
    uint64_t v144 = *(char **)(v142 + 48);
    __chkstk_darwin(*((void *)&v343 + 1));
    __int128 v145 = &v296 - 12;
    *(&v296 - sub_6C3C(v0 + 10) = (char *)v143;
    *(&v296 - 9) = v144;
    uint64_t v146 = 0xD000000000000014LL;
    uint64_t v147 = 0x8000000000221D00LL;
    *(&v296 - 8) = (char *)0xD000000000000014LL;
    *(&v296 - 7) = (char *)0x8000000000221D00LL;
    v291 = v148;
    v292 = v141;
    v293[0] = v319;
    v293[1] = (uint64_t)&v342;
    v294 = 0LL;
    os_log_type_t v150 = v149;
LABEL_42:
    v294 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    v295 = v145;
    v293[0] = v146;
    v293[1] = v147;
    v291 = v143;
    v292 = v144;
    __int128 v169 = v320;
    v170 = v321;
LABEL_43:
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v169,  v170,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v291,  (uint64_t)v292,  v293[0],  v293[1],  v294,  (uint64_t)v295);
    swift_bridgeObjectRelease(v141);
LABEL_44:
    sub_1F6CC((uint64_t)v334, &qword_28B5E8);
    sub_1F6CC((uint64_t)&v342, &qword_283FE8);
    return;
  }

  BOOL v151 = static SiriAudioEnvironment.isHomePod.getter(v126);
  if ((v151 & 1) != 0)
  {
    sub_FF10((uint64_t)v43, v129, &qword_28B5E8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v129, 1LL, v116) == 1)
    {
      uint64_t v152 = sub_1F6CC(v129, &qword_28B5E8);
      if ((static SiriAudioEnvironment.isHomePod.getter(v152) & 1) == 0) {
        goto LABEL_65;
      }
    }

    else
    {
      uint64_t v171 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.dynamiteClientStateErrors.getter();
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v129, v116);
      uint64_t v172 = *(void *)(v171 + 16);
      if (v172)
      {
        v333 = v118;
        uint64_t v173 = v171 + ((*(unsigned __int8 *)(v338 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80));
        v174 = *(void *)(v338 + 72);
        v175 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v338 + 16);
        swift_bridgeObjectRetain(v171);
        while (1)
        {
          uint64_t v176 = v175(v128, v173, v4);
          v177 = Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors.tokenErrorCode.getter(v176);
          (*(void (**)(char *, uint64_t))(v338 + 8))(v128, v4);
          if (v316 == v177) {
            break;
          }
          v173 += v174;
          if (!--v172)
          {
            BOOL v151 = swift_bridgeObjectRelease_n(v171, 2LL);
            uint64_t v43 = v334;
            uint64_t v127 = v329;
            uint64_t v118 = v333;
            goto LABEL_50;
          }
        }

        swift_bridgeObjectRelease_n(v171, 2LL);
        v235 = v298;
        v236 = v336;
        v237 = v326(v298, v325, v336);
        v238 = (os_log_s *)Logger.logObject.getter(v237);
        v239 = static os_log_type_t.info.getter(v238);
        if (os_log_type_enabled(v238, v239))
        {
          v240 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)v240 = 0;
          _os_log_impl( &dword_0,  v238,  v239,  "PlayeMediaDialogProvider#invalidTokensHelper invalid user identity",  v240,  2u);
          swift_slowDealloc(v240, -1LL, -1LL);
        }

        v327(v235, v236);
        v341 = &type metadata for Int;
        *(void *)&v340 = v316;
        v241 = type metadata accessor for ErrorFilingProvider(0LL);
        v242 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v241);
        v244 = v243;
        v245 = (char *)v328;
        v246 = swift_isUniquelyReferenced_nonNull_native(v328);
        v339 = v245;
        sub_1E1E1C(&v340, v242, v244, v246, &v342);
        v247 = v339;
        swift_bridgeObjectRelease(v244);
        swift_bridgeObjectRelease(0x8000000000000000LL);
        sub_1F6CC((uint64_t)&v342, &qword_284028);
        swift_bridgeObjectRelease(v247);
        v248 = *(void *)(v318 + 120);
        *((void *)&v343 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
        v344 = &off_272BD0;
        *(void *)&v342 = v335;
        v249 = *(void *)(v248 + 40);
        v250 = *(void *)(v248 + 48);
        __chkstk_darwin(*((void *)&v343 + 1));
        *(&v296 - sub_6C3C(v0 + 10) = (char *)v249;
        *(&v296 - 9) = (char *)v250;
        *(&v296 - 8) = (char *)0xD000000000000013LL;
        *(&v296 - 7) = (char *)0x8000000000221CE0LL;
        v291 = v251;
        v292 = (char *)&_swiftEmptyDictionarySingleton;
        v293[0] = v319;
        v293[1] = (uint64_t)&v342;
        v294 = 0LL;
        v253 = v252;
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v320,  v321,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v249,  v250,  0xD000000000000013LL,  0x8000000000221CE0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v296 - 12));
        goto LABEL_44;
      }

      uint64_t v192 = swift_bridgeObjectRelease(v171);
      uint64_t v127 = v329;
      if ((static SiriAudioEnvironment.isHomePod.getter(v192) & 1) == 0) {
        goto LABEL_65;
      }
    }
  }

  else
  {
LABEL_50:
    if ((static SiriAudioEnvironment.isHomePod.getter(v151) & 1) == 0) {
      goto LABEL_65;
    }
  }

  os_log_type_t v178 = v303;
  sub_FF10((uint64_t)v43, v303, &qword_28B5E8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v178, 1LL, v116) == 1)
  {
    sub_1F6CC(v178, &qword_28B5E8);
    goto LABEL_65;
  }

  BOOL v179 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.dynamiteClientStateErrors.getter();
  uint64_t v180 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
  v180(v178, v116);
  uint64_t v181 = *(void *)(v179 + 16);
  if (v181)
  {
    v332 = v180;
    v331 = (*(unsigned __int8 *)(v338 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80);
    v182 = v179 + v331;
    v337 = *(void *)(v338 + 72);
    uint64_t v183 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v338 + 16);
    v333 = (char **)v179;
    swift_bridgeObjectRetain(v179);
    while (1)
    {
      uint64_t v184 = v330;
      uint64_t v185 = v183(v330, v182, v4);
      v186 = Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors.tokenErrorCode.getter(v185);
      uint64_t v187 = v183(v127, (unint64_t)v184, v4);
      if (v317 == v186)
      {
        uint64_t v188 = 1;
      }

      else
      {
        v189 = Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors.tokenErrorCode.getter(v187);
        uint64_t v188 = v309 == v189;
      }

      v190 = v127;
      uint64_t v191 = *(void (**)(char *, uint64_t))(v338 + 8);
      v191(v190, v4);
      v191(v330, v4);
      if (v188) {
        break;
      }
      v182 += v337;
      --v181;
      uint64_t v127 = v329;
      if (!v181)
      {
        swift_bridgeObjectRelease_n(v333, 2LL);
        goto LABEL_64;
      }
    }

    swift_bridgeObjectRelease_n(v333, 2LL);
    v254 = v296;
    v255 = v336;
    v256 = v326(v296, v325, v336);
    v257 = (os_log_s *)Logger.logObject.getter(v256);
    v258 = static os_log_type_t.info.getter(v257);
    if (os_log_type_enabled(v257, v258))
    {
      v259 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v259 = 0;
      _os_log_impl(&dword_0, v257, v258, "PlayeMediaDialogProvider#invalidTokensHelper auth issue", v259, 2u);
      v260 = v259;
      v255 = v336;
      swift_slowDealloc(v260, -1LL, -1LL);
    }

    v327(v254, v255);
    v261 = v297;
    sub_FF10((uint64_t)v334, v297, &qword_28B5E8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v261, 1LL, v116) == 1)
    {
      sub_1F6CC(v261, &qword_28B5E8);
      v262 = v321;
    }

    else
    {
      v263 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.dynamiteClientStateErrors.getter();
      v332(v261, v116);
      v264 = *(void *)(v263 + 16);
      v262 = v321;
      if (v264)
      {
        v265 = v321;
        v266 = v263 + v331;
        swift_bridgeObjectRetain(v263);
        v267 = v301;
        while (1)
        {
          v268 = v183(v267, v266, v4);
          v269 = Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors.tokenErrorCode.getter(v268);
          v191(v267, v4);
          if (v317 == v269) {
            break;
          }
          v266 += v337;
          if (!--v264)
          {
            swift_bridgeObjectRelease_n(v263, 2LL);
            v270 = v318;
            v271 = (char *)v328;
            v262 = v265;
            goto LABEL_95;
          }
        }

        swift_bridgeObjectRelease_n(v263, 2LL);
        v341 = &type metadata for Int;
        *(void *)&v340 = v317;
        v285 = type metadata accessor for ErrorFilingProvider(0LL);
        v286 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v285);
        v288 = v287;
        v289 = (char *)v328;
        v290 = swift_isUniquelyReferenced_nonNull_native(v328);
        v339 = v289;
        sub_1E1E1C(&v340, v286, v288, v290, &v342);
        uint64_t v141 = v339;
        swift_bridgeObjectRelease(v288);
        swift_bridgeObjectRelease(0x8000000000000000LL);
        sub_1F6CC((uint64_t)&v342, &qword_284028);
        v277 = v320;
        v278 = v319;
        v270 = v318;
        v262 = v265;
        goto LABEL_96;
      }

      swift_bridgeObjectRelease(v263);
    }

    v270 = v318;
    v271 = (char *)v328;
LABEL_95:
    v341 = &type metadata for Int;
    *(void *)&v340 = v309;
    v272 = type metadata accessor for ErrorFilingProvider(0LL);
    v273 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v272);
    v275 = v274;
    v276 = swift_isUniquelyReferenced_nonNull_native(v271);
    v339 = v271;
    sub_1E1E1C(&v340, v273, v275, v276, &v342);
    uint64_t v141 = v339;
    swift_bridgeObjectRelease(v275);
    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_1F6CC((uint64_t)&v342, &qword_284028);
    v277 = v320;
    v278 = v319;
LABEL_96:
    v279 = *(void *)(v270 + 120);
    *((void *)&v343 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    v344 = &off_272BD0;
    *(void *)&v342 = v335;
    v280 = *(void *)(v279 + 40);
    v281 = *(char **)(v279 + 48);
    __chkstk_darwin(*((void *)&v343 + 1));
    *(&v296 - sub_6C3C(v0 + 10) = (char *)v280;
    *(&v296 - 9) = v281;
    strcpy((char *)&v296 - 64, "ReLoginToMusic");
    *((_BYTE *)&v296 - 49) = -18;
    v291 = v282;
    v292 = v141;
    v293[0] = v278;
    v293[1] = (uint64_t)&v342;
    v294 = 0LL;
    v284 = v283;
    v294 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    v295 = &v296 - 12;
    strcpy((char *)v293, "ReLoginToMusic");
    HIBYTE(v293[1]) = -18;
    v291 = v280;
    v292 = v281;
    __int128 v169 = v277;
    v170 = v262;
    goto LABEL_43;
  }

  swift_bridgeObjectRelease(v179);
LABEL_64:
  uint64_t v43 = v334;
LABEL_65:
  __n128 v193 = v305;
  uint64_t v194 = v326(v305, v325, v336);
  v195 = (os_log_s *)Logger.logObject.getter(v194);
  os_log_type_t v196 = static os_log_type_t.info.getter(v195);
  if (os_log_type_enabled(v195, v196))
  {
    v197 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)v197 = 0;
    _os_log_impl(&dword_0, v195, v196, "PlayeMediaDialogProvider#invalidTokensHelper invalid token", v197, 2u);
    swift_slowDealloc(v197, -1LL, -1LL);
  }

  uint64_t v198 = ((uint64_t (*)(char *, uint64_t))v327)(v193, v336);
  uint64_t v199 = static AccountProvider.shared.getter(v198);
  found = dispatch thunk of AccountProvider.getMultiUserIdNotFoundError()();
  swift_release(v199);
  id v201 = v306;
  sub_FF10((uint64_t)v43, v306, &qword_28B5E8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v201, 1LL, v116) == 1)
  {
    uint64_t v202 = sub_1F6CC(v201, &qword_28B5E8);
  }

  else
  {
    uint64_t v203 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.dynamiteClientStateErrors.getter();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v201, v116);
    uint64_t v204 = *(void *)(v203 + 16);
    if (v204)
    {
      uint64_t v205 = v203 + ((*(unsigned __int8 *)(v338 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80));
      uint64_t v206 = *(void *)(v338 + 72);
      uint64_t v207 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v338 + 16);
      swift_bridgeObjectRetain(v203);
      uint64_t v208 = v321;
      uint64_t v209 = v300;
      while (1)
      {
        uint64_t v210 = v207(v209, v205, v4);
        Swift::Bool v211 = Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors.tokenErrorCode.getter(v210);
        (*(void (**)(char *, uint64_t))(v338 + 8))(v209, v4);
        if (found == v211) {
          break;
        }
        v205 += v206;
        if (!--v204)
        {
          uint64_t v202 = swift_bridgeObjectRelease_n(v203, 2LL);
          goto LABEL_76;
        }
      }

      swift_bridgeObjectRelease_n(v203, 2LL);
      uint64_t v221 = v299;
      v222 = v336;
      uint64_t v223 = v326(v299, v325, v336);
      uint64_t v224 = (os_log_s *)Logger.logObject.getter(v223);
      uint64_t v225 = static os_log_type_t.info.getter(v224);
      uint64_t v226 = os_log_type_enabled(v224, v225);
      uint64_t v212 = v320;
      uint64_t v213 = v318;
      if (v226)
      {
        v227 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)v227 = 0;
        _os_log_impl( &dword_0,  v224,  v225,  "PlayeMediaDialogProvider#invalidTokensHelper no special handling for multiUserIdNotFoundError",  v227,  2u);
        uint64_t v228 = v227;
        v222 = v336;
        swift_slowDealloc(v228, -1LL, -1LL);
      }

      v327(v221, v222);
      v341 = &type metadata for Int;
      *(void *)&v340 = found;
      uint64_t v229 = type metadata accessor for ErrorFilingProvider(0LL);
      uint64_t v230 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v229);
      uint64_t v232 = v231;
      uint64_t v233 = (char *)v328;
      v234 = swift_isUniquelyReferenced_nonNull_native(v328);
      v339 = v233;
      sub_1E1E1C(&v340, v230, v232, v234, &v342);
      v328 = v339;
      swift_bridgeObjectRelease(v232);
      swift_bridgeObjectRelease(0x8000000000000000LL);
      uint64_t v202 = sub_1F6CC((uint64_t)&v342, &qword_284028);
      goto LABEL_77;
    }

    uint64_t v202 = swift_bridgeObjectRelease(v203);
  }

  uint64_t v208 = v321;
LABEL_76:
  uint64_t v212 = v320;
  uint64_t v213 = v318;
LABEL_77:
  uint64_t v214 = *(void *)(v213 + 120);
  uint64_t v215 = *(void *)(v214 + 24);
  uint64_t v216 = *(void *)(v214 + 16);
  v344 = 0LL;
  v342 = 0u;
  v343 = 0u;
  __chkstk_darwin(v202);
  *(&v296 - sub_6C3C(v0 + 10) = (char *)v216;
  *(&v296 - 9) = (char *)v215;
  *(&v296 - 8) = (char *)0xD000000000000021LL;
  *(&v296 - 7) = (char *)0x8000000000221CB0LL;
  uint64_t v217 = v328;
  v291 = v218;
  v292 = (char *)v328;
  v293[0] = v219;
  v293[1] = (uint64_t)&v342;
  v294 = 0LL;
  uint64_t v220 = v335;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v212,  v208,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v216,  v215,  0xD000000000000021LL,  0x8000000000221CB0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v296 - 12));
  sub_1F6CC((uint64_t)&v342, &qword_283FE8);
  swift_bridgeObjectRelease(v217);
  sub_1F6CC((uint64_t)v334, &qword_28B5E8);
}

uint64_t sub_124D40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v39 = a5;
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v38 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - v17;
  swift_beginAccess(a3 + 16, v41, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a3 + 16);
  if (Strong)
  {
    uint64_t v20 = Strong;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969E0);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v21, v12);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v36 = a4;
      uint64_t v26 = v7;
      uint64_t v27 = v25;
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl( &dword_0,  v23,  v24,  "AcousticIDFlow#listeningDialogAndViewLegacy Dialog successfully generated, responding",  v25,  2u);
      uint64_t v28 = v27;
      uint64_t v7 = v26;
      a4 = v36;
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    swift_storeEnumTagMultiPayload(v11, v37, 4LL);
    uint64_t v29 = v20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
    swift_beginAccess(v20 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, v40, 33LL, 0LL);
    sub_133C88((uint64_t)v11, v29);
    swift_endAccess(v40);
    static ExecuteResponse.ongoing(requireInput:)(0LL);
    a4(v9);
    swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v9, v7);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v31 = sub_6960(v12, (uint64_t)qword_2969E0);
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v31, v12);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl( &dword_0,  v33,  v34,  "AcousticIDFlow#listeningDialogAndViewLegacy self deallocated prematurely during publishing",  v35,  2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }

uint64_t sub_125090(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v9 = sub_6960(v5, (uint64_t)qword_2969E0);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc(12LL, -1LL);
    uint64_t v31 = v3;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v34 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v32 = a1;
    uint64_t v16 = static Insights.responseFramework.getter(v15);
    unint64_t v18 = v17;
    *(void *)&v38[0] = sub_6978(v16, v17, (uint64_t *)&v34);
    a1 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v38, (char *)v38 + 8);
    swift_bridgeObjectRelease(v18);
    _os_log_impl(&dword_0, v11, v12, "AcousticIDFlow#listeningDialogAndViewWithRF Reached Logic %{public}s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    uint64_t v19 = v14;
    uint64_t v3 = v31;
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v20 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  *((void *)&v35 + 1) = &type metadata for Bool;
  LOBYTE(v34) = 0;
  sub_21964(&v34, v38);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
  unint64_t v37 = v20;
  sub_33808(v38, 0x636E7973417369LL, 0xE700000000000000LL, isUniquelyReferenced_nonNull_native);
  unint64_t v22 = v37;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  uint64_t v24 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v24 + 16, v3);
  uint64_t v25 = (void *)swift_allocObject(&unk_270638, 40LL, 7LL);
  v25[2] = v24;
  v25[3] = a1;
  uint64_t v26 = v33;
  v25[4] = v33;
  uint64_t v27 = *(void *)(v23 + 40);
  uint64_t v28 = *(void *)(v23 + 48);
  uint64_t v36 = 0LL;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __chkstk_darwin(v25);
  *(&v30 - sub_6C3C(v0 + 10) = v27;
  *(&v30 - 9) = v28;
  *(&v30 - 8) = 0x6E696E657473694CLL;
  *(&v30 - 7) = 0xE900000000000067LL;
  swift_retain(v24);
  swift_retain(v26);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_1342C0,  (uint64_t)v25,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v27,  v28,  0x6E696E657473694CLL,  0xE900000000000067LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v30 - 12));
  sub_1F6CC((uint64_t)&v34, &qword_283FE8);
  swift_bridgeObjectRelease(v22);
  swift_release(v24);
  return swift_release(v25);
}

uint64_t sub_125418(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = a4;
  uint64_t v59 = a1;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_289340);
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v54 = *(void *)(v21 - 8);
  unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v56 = v21;
  int v51 = v22;
  ((void (*)(char *, uint64_t))v22)(v20, a2);
  uint64_t v52 = v15;
  uint64_t v23 = *(int *)(v15 + 48);
  uint64_t v55 = v20;
  *(void *)&v20[v23] = a3;
  uint64_t v24 = qword_283890;
  id v53 = a3;
  if (v24 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v25 = sub_6960(v11, (uint64_t)qword_2969E0);
  uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v25, v11);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v49 = v11;
    uint64_t v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v48 = v12;
    uint64_t v31 = v30;
    uint64_t v61 = v30;
    id v50 = v10;
    *(_DWORD *)uint64_t v29 = 136446210;
    uint64_t v32 = static Insights.responseFramework.getter(v30);
    uint64_t v33 = v18;
    uint64_t v34 = a5;
    unint64_t v36 = v35;
    uint64_t v60 = sub_6978(v32, v35, &v61);
    uint64_t v10 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
    unint64_t v37 = v36;
    a5 = v34;
    unint64_t v18 = v33;
    swift_bridgeObjectRelease(v37);
    _os_log_impl(&dword_0, v27, v28, "AcousticIDFlow#publishShazam Reached Logic %{public}s", v29, 0xCu);
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v49);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  uint64_t v38 = *(int *)(v52 + 48);
  uint64_t v40 = (uint64_t)v55;
  uint64_t v39 = v56;
  v51(v18, v55, v56);
  uint64_t v41 = v53;
  *(void *)&v18[v38] = v53;
  uint64_t v42 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v10, 1LL, 1LL, v42);
  uint64_t v43 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v43 + 16, v57);
  uint64_t v44 = (void *)swift_allocObject(&unk_2705C0, 40LL, 7LL);
  uint64_t v45 = v58;
  v44[2] = v43;
  v44[3] = v45;
  v44[4] = a5;
  id v46 = v41;
  swift_retain(v43);
  swift_retain(a5);
  sub_132F44((uint64_t)v18, v46, v59, (uint64_t)v10, (uint64_t)sub_1340CC, (uint64_t)v44);

  swift_release(v44);
  sub_1F6CC((uint64_t)v10, (uint64_t *)&unk_286C50);
  sub_1F6CC(v40, &qword_289340);
  swift_release(v43);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v18, v39);
}

uint64_t sub_12580C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v8);
  uint64_t v10 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v66[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v66[-v16];
  a2 += 16LL;
  swift_beginAccess(a2, v79, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v19 = Strong;
    sub_FF10(a1, (uint64_t)v77, (uint64_t *)&unk_286C60);
    uint64_t v20 = sub_6C5C((uint64_t *)&unk_286C60);
    if ((v78 & 1) != 0)
    {
      uint64_t v21 = v20;
      uint64_t v76 = *(void *)&v77[0];
      uint64_t v22 = sub_6C5C(&qword_284010);
      uint64_t v23 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
      if (swift_dynamicCast(&v75, &v76, v22, v23, 0LL))
      {
        uint64_t v71 = a3;
        uint64_t v24 = v75;
        if (qword_283890 != -1) {
          swift_once(&qword_283890, sub_BFCDC);
        }
        uint64_t v25 = sub_6960(v11, (uint64_t)qword_2969E0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v15, v25, v11);
        id v26 = v24;
        uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
        os_log_type_t v28 = static os_log_type_t.error.getter();
        int v29 = v28;
        uint64_t v30 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v31 = swift_slowAlloc(22LL, -1LL);
          uint64_t v70 = a4;
          uint64_t v32 = v31;
          uint64_t v69 = swift_slowAlloc(64LL, -1LL);
          uint64_t v74 = v69;
          *(_DWORD *)uint64_t v32 = 136315394;
          id v33 = objc_msgSend(v26, "localizedDescription", v32 + 4);
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
          int v67 = v29;
          uint64_t v35 = v34;
          uint64_t v68 = v12;
          uint64_t v37 = v36;

          uint64_t v72 = v35;
          v73[0] = v37;
          uint64_t v38 = String.init<A>(_:)( &v72,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
          unint64_t v40 = v39;
          uint64_t v72 = sub_6978(v38, v39, &v74);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);

          swift_bridgeObjectRelease(v40);
          *(_WORD *)(v32 + 12) = 2082;
          uint64_t v42 = static Insights.responseFramework.getter(v41);
          unint64_t v44 = v43;
          uint64_t v72 = sub_6978(v42, v43, &v74);
          uint64_t v30 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
          swift_bridgeObjectRelease(v44);
          _os_log_impl( &dword_0,  v27,  (os_log_type_t)v67,  "AcousticIDFlow#publishShazam Error creating output %s %{public}s",  (uint8_t *)v32,  0x16u);
          uint64_t v45 = v69;
          swift_arrayDestroy(v69, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v45, -1LL, -1LL);
          uint64_t v46 = v32;
          a4 = v70;
          swift_slowDealloc(v46, -1LL, -1LL);

          (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v15, v11);
        }

        else
        {

          (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
        }

        uint64_t v61 = type metadata accessor for PlaybackCodeAndDescription(0LL);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v10, 1LL, 1LL, v61);
        id v62 = [v26 *(SEL *)&v30[499]];
        unint64_t v63 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
        uint64_t v65 = v64;

        sub_12B57C((uint64_t)v10, v63, v65, v71, a4);
        swift_bridgeObjectRelease(v65);
        swift_release(v19);
        sub_1F6CC((uint64_t)v10, &qword_28A680);
        return swift_errorRelease(v76);
      }

      else
      {
        uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v21, v21);
        __break(1u);
      }
    }

    else
    {
      sub_FF54(v77, (uint64_t)&v72);
      uint64_t v57 = *(void *)(v19 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 24);
      uint64_t v58 = *(void *)(v19 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 32);
      sub_6EA8((void *)(v19 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher), v57);
      uint64_t v59 = swift_allocObject(&unk_270390, 24LL, 7LL);
      swift_weakInit(v59 + 16, v19);
      uint64_t v60 = (void *)swift_allocObject(&unk_270610, 40LL, 7LL);
      v60[2] = v59;
      v60[3] = a3;
      v60[4] = a4;
      swift_retain(v59);
      swift_retain(a4);
      dispatch thunk of OutputPublisher.publish(output:_:)(&v72, sub_1342AC, v60, v57, v58);
      swift_release(v19);
      swift_release(v59);
      swift_release(v60);
      return sub_6C3C(&v72);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v47 = sub_6960(v11, (uint64_t)qword_2969E0);
    uint64_t v48 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v17, v47, v11);
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      int v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v77[0] = v52;
      *(_DWORD *)int v51 = 136446210;
      uint64_t v53 = static Insights.responseFramework.getter(v52);
      unint64_t v55 = v54;
      uint64_t v72 = sub_6978(v53, v54, (uint64_t *)v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
      swift_bridgeObjectRelease(v55);
      _os_log_impl( &dword_0,  v49,  v50,  "AcousticIDFlow#publishShazam self deallocated prematurely %{public}s",  v51,  0xCu);
      swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
  }

  return result;
}

uint64_t sub_125E6C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v8 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v47 - v17;
  a3 += 16LL;
  swift_beginAccess(a3, v56, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    uint64_t v20 = Strong;
    uint64_t v53 = v9;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v21 = sub_6960(v12, (uint64_t)qword_2969E0);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v21, v12);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v48 = v13;
      uint64_t v25 = swift_slowAlloc(12LL, -1LL);
      int v51 = a4;
      id v26 = (uint8_t *)v25;
      uint64_t v27 = swift_slowAlloc(32LL, -1LL);
      uint64_t v52 = v8;
      uint64_t v28 = v27;
      uint64_t v55 = v27;
      uint64_t v50 = a5;
      *(_DWORD *)id v26 = 136446210;
      uint64_t v29 = static Insights.responseFramework.getter(v27);
      uint64_t v49 = v20;
      unint64_t v31 = v30;
      uint64_t v54 = sub_6978(v29, v30, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
      unint64_t v32 = v31;
      uint64_t v20 = v49;
      swift_bridgeObjectRelease(v32);
      _os_log_impl(&dword_0, v23, v24, "AcousticIDFlow#publish dialog successfully generated %{public}s", v26, 0xCu);
      swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v33 = v28;
      uint64_t v8 = v52;
      swift_slowDealloc(v33, -1LL, -1LL);
      uint64_t v34 = v26;
      a4 = v51;
      swift_slowDealloc(v34, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v12);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }

    static ExecuteResponse.ongoing(requireInput:)(0LL);
    a4(v11);
    swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v11, v8);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v35 = sub_6960(v12, (uint64_t)qword_2969E0);
    uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v35, v12);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = v13;
      unint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      uint64_t v55 = v41;
      *(_DWORD *)unint64_t v40 = 136446210;
      uint64_t v42 = static Insights.responseFramework.getter(v41);
      unint64_t v44 = v43;
      uint64_t v54 = sub_6978(v42, v43, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
      swift_bridgeObjectRelease(v44);
      _os_log_impl( &dword_0,  v37,  v38,  "AcousticIDFlow#publish self deallocated prematurely during publishing %{public}s",  v40,  0xCu);
      swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      uint64_t v45 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
    }

    else
    {

      uint64_t v45 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
    }

    return v45(v18, v12);
  }

uint64_t sub_12627C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_289340);
  v4[10] = v7;
  v4[11] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[14] = v10;
  v4[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_126350, 0LL, 0LL);
}

uint64_t sub_126350(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  __int128 v45 = *(_OWORD *)(v1 + 32);
  static DialogPhase.completion.getter(a1);
  uint64_t v6 = *(int *)(v4 + 48);
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v46(v3, v5, v7);
  uint64_t v9 = *(void **)(v5 + v6);
  uint64_t v47 = v6;
  *(void *)(v3 + v6) = v9;
  uint64_t v10 = swift_task_alloc(48LL);
  *(_OWORD *)(v10 + 16) = v45;
  *(void *)(v10 + 32) = v3;
  id v11 = v9;
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_80638, v10);
  swift_task_dealloc(v10);
  sub_1F6CC(v3, &qword_289340);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v15 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v21 = *(void *)(v1 + 64);
  uint64_t v20 = *(void *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 56);
  if (v19)
  {
    uint64_t v43 = *(void *)(v1 + 56);
    uint64_t v42 = *(void *)(v1 + 72);
    uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = v4;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    uint64_t v25 = static Insights.responseFramework.getter(v24);
    unint64_t v27 = v26;
    *(void *)(v1 + 16) = sub_6978(v25, v26, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v17,  v18,  "SiriAudioOutputProvider#buildTraditionalRFShazamOutput returning old snippet. %{public}s",  v23,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v28 = v24;
    uint64_t v4 = v44;
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v42, v43);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }

  uint64_t v29 = *(void *)(v1 + 88);
  uint64_t v30 = *(void *)(v1 + 48);
  uint64_t v31 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  *(void *)(v1 + 128) = ResponseFactory.init()();
  uint64_t v32 = sub_6C5C(&qword_287980);
  uint64_t v33 = swift_allocObject(v32, 40LL, 7LL);
  *(_OWORD *)(v33 + 16) = xmmword_214980;
  uint64_t v34 = *(int *)(v4 + 48);
  uint64_t v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v29, v30, v7);
  uint64_t v36 = *(void **)(v5 + v47);
  *(void *)(v29 + v34) = v36;
  *(void *)(v33 + 32) = v36;
  uint64_t v49 = v33;
  specialized Array._endMutation()(v35);
  uint64_t v37 = v49;
  *(void *)(v1 + 136) = v49;
  os_log_type_t v38 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  id v39 = v36;
  v38(v29, v7);
  *(void *)(v1 + 144) = v40;
  void *v40 = v1;
  v40[1] = sub_1266C4;
  return ((uint64_t (*)(void, uint64_t, void))v48)(*(void *)(v1 + 24), v37, *(void *)(v1 + 120));
}

uint64_t sub_1266C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 128LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 144LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_12672C, 0LL, 0LL);
}

uint64_t sub_12672C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 112) + 8LL))(v1, *(void *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_12679C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  uint64_t v6 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v6 + 16, v2);
  uint64_t v7 = (void *)swift_allocObject(&unk_270570, 40LL, 7LL);
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = v5[4];
  uint64_t v9 = v5[5];
  uint64_t v10 = v5[6];
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  swift_retain(v6);
  swift_retain(a2);
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v14 = v9;
  uint64_t v15 = v10;
  strcpy((char *)v16, "NoMatchFound");
  HIBYTE(v16[6]) = 0;
  v16[7] = -5120;
  uint64_t v17 = v8;
  unint64_t v18 = v11;
  uint64_t v19 = 0LL;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_134044,  (uint64_t)v7,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v9,  v10,  0x46686374614D6F4ELL,  0xEC000000646E756FLL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v13);
  swift_bridgeObjectRelease(v11);
  sub_1F6CC((uint64_t)v22, &qword_283FE8);
  swift_release(v6);
  return swift_release(v7);
}

uint64_t sub_126904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v162 = a3;
  uint64_t v163 = a4;
  uint64_t v160 = a1;
  uint64_t v5 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v5);
  uint64_t v141 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  uint64_t v156 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AceOutput(0LL);
  uint64_t v143 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v144 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v11);
  uint64_t v155 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v13);
  uint64_t v154 = (char *)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v15);
  uint64_t v153 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v152 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  os_log_type_t v150 = (char *)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v149 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v148 = *(void **)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v147 = (char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v146 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v20 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v142 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v24);
  uint64_t v161 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v159 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v159);
  uint64_t v158 = (uint64_t *)((char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v164 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v164 - 8);
  uint64_t v28 = __chkstk_darwin(v164);
  uint64_t v157 = (char *)&v137 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v137 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v137 - v33;
  a2 += 16LL;
  swift_beginAccess(a2, v172, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v36 = Strong;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v37 = v164;
    uint64_t v38 = sub_6960(v164, (uint64_t)qword_2969C8);
    uint64_t v139 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 16);
    uint64_t v39 = v139(v32, v38, v37);
    unint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v138 = v22;
      uint64_t v43 = v24;
      uint64_t v44 = v21;
      __int128 v45 = v20;
      uint64_t v46 = v9;
      uint64_t v47 = v36;
      uint64_t v48 = v42;
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_0, v40, v41, "AcousticIDFlow#noMatchFoundDialogAndViewLegacy", v42, 2u);
      uint64_t v49 = v48;
      uint64_t v36 = v47;
      uint64_t v9 = v46;
      uint64_t v20 = v45;
      uint64_t v21 = v44;
      uint64_t v24 = v43;
      uint64_t v22 = v138;
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    uint64_t v50 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v51 = v164;
    v50(v32, v164);
    unint64_t v171 = (unint64_t)_swiftEmptyArrayStorage;
    id v52 = sub_1332BC();
    if (v52)
    {
      uint64_t v53 = v52;
      if ((*(_BYTE *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_isInAmbient) & 1) == 0)
      {
        uint64_t v138 = v24;
        uint64_t v54 = v50;
        id v55 = v52;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
        unint64_t v57 = *(void *)((char *)&dword_10 + (v171 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v56 = *(void *)((char *)&dword_18 + (v171 & 0xFFFFFFFFFFFFFF8LL));
        if (v57 >= v56 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1LL);
        }
        uint64_t v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
        specialized Array._endMutation()(v58);
        uint64_t v51 = v164;
        uint64_t v50 = v54;
        uint64_t v24 = v138;
      }
    }

    uint64_t v59 = v158;
    sub_FF10(v160, (uint64_t)v158, (uint64_t *)&unk_286BB0);
    uint64_t v60 = v159;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v59, v159);
    uint64_t v140 = v36;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v170 = *v59;
      uint64_t v62 = sub_6C5C(&qword_284010);
      uint64_t v63 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
      if (swift_dynamicCast(&v169, &v170, v62, v63, 0LL))
      {
        *(void *)&double v64 = swift_bridgeObjectRelease(v171).n128_u64[0];
        id v65 = v169;
        id v66 = objc_msgSend(v169, "localizedDescription", v64);
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
        uint64_t v69 = v68;

        *(void *)&__int128 v165 = v67;
        *((void *)&v165 + 1) = v69;
        uint64_t v70 = String.init<A>(_:)( &v165,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v72 = v71;
        unint64_t v73 = v157;
        if (qword_283890 != -1) {
          swift_once(&qword_283890, sub_BFCDC);
        }
        uint64_t v74 = sub_6960(v51, (uint64_t)qword_2969E0);
        v139(v73, v74, v51);
        swift_bridgeObjectRetain(v72);
        uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
        os_log_type_t v77 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v76, v77))
        {
          uint64_t v161 = (char *)v50;
          char v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v79 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v165 = v79;
          *(_DWORD *)char v78 = 136315138;
          swift_bridgeObjectRetain(v72);
          uint64_t v168 = sub_6978(v70, v72, (uint64_t *)&v165);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v168, &v169);
          swift_bridgeObjectRelease_n(v72, 3LL);
          _os_log_impl( &dword_0,  v76,  v77,  "AcousticIDFlow#noMatchFoundDialogAndViewLegacy Error creating dialog %s, issuing error dialog",  v78,  0xCu);
          swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v79, -1LL, -1LL);
          swift_slowDealloc(v78, -1LL, -1LL);

          ((void (*)(char *, uint64_t))v161)(v157, v164);
        }

        else
        {

          swift_bridgeObjectRelease_n(v72, 2LL);
          v50(v73, v51);
        }

        uint64_t v129 = v162;
        uint64_t v128 = v163;
        uint64_t v130 = type metadata accessor for PlaybackCodeAndDescription(0LL);
        uint64_t v131 = (uint64_t)v141;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56LL))(v141, 1LL, 1LL, v130);
        id v132 = [v65 localizedDescription];
        uint64_t v133 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
        uint64_t v135 = v134;

        uint64_t v136 = v140;
        sub_12B57C(v131, v133, v135, v129, v128);
        swift_release(v136);

        swift_bridgeObjectRelease(v135);
        sub_1F6CC(v131, &qword_28A680);
        return swift_errorRelease(v170);
      }

      else
      {
        uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v60, v60);
        __break(1u);
      }
    }

    else
    {
      uint64_t v164 = v9;
      uint64_t v87 = *(int *)(v24 + 48);
      uint64_t v88 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v159 = *(void *)(v88 - 8);
      uint64_t v160 = v88;
      uint64_t v89 = v161;
      (*(void (**)(char *, uint64_t *, uint64_t))(v159 + 32))(v161, v59, v88);
      *(void *)&v89[v87] = *(uint64_t *)((char *)v59 + v87);
      uint64_t v90 = v142;
      (*(void (**)(char *, void, uint64_t))(v22 + 104))( v142,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v21);
      uint64_t v91 = v21;
      uint64_t v92 = v145;
      uint64_t v93 = v146;
      (*(void (**)(char *, void, uint64_t))(v145 + 104))( v20,  enum case for AdditionalMetricsDescription.SourceFunction.noMatch(_:),  v146);
      uint64_t v94 = v148;
      os_log_type_t v95 = v147;
      uint64_t v96 = v149;
      ((void (*)(char *, void, uint64_t))v148[13])( v147,  enum case for AdditionalMetricsDescription.StatusReason.noMatchFound(_:),  v149);
      uint64_t v97 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v90,  v20,  v95,  0LL,  1LL);
      uint64_t v157 = v98;
      uint64_t v158 = (uint64_t *)v97;
      ((void (*)(char *, uint64_t))v94[1])(v95, v96);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v20, v93);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v90, v91);
      uint64_t v99 = *(void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v149 = *(void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      uint64_t v148 = sub_6EA8( (void *)(v36 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v99);
      uint64_t v100 = v151;
      uint64_t v101 = v150;
      uint64_t v102 = v152;
      (*(void (**)(char *, void, uint64_t))(v151 + 104))( v150,  enum case for TypeOfIntent.acousticID(_:),  v152);
      uint64_t v103 = enum case for ActivityType.failed(_:);
      uint64_t v104 = type metadata accessor for ActivityType(0LL);
      uint64_t v105 = *(void *)(v104 - 8);
      uint64_t v106 = (uint64_t)v153;
      (*(void (**)(char *, uint64_t, uint64_t))(v105 + 104))(v153, v103, v104);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v106, 0LL, 1LL, v104);
      uint64_t v107 = (uint64_t)v154;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v154, 1LL, 1LL, v160);
      uint64_t v108 = enum case for SiriKitReliabilityCodes.noReadableItems(_:);
      uint64_t v109 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v110 = *(void *)(v109 - 8);
      uint64_t v111 = (uint64_t)v155;
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 104))(v155, v108, v109);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v111, 0LL, 1LL, v109);
      uint64_t v112 = v157;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v101,  v106,  v107,  v111,  v158,  v157,  v99,  v149);
      swift_bridgeObjectRelease(v112);
      sub_1F6CC(v111, &qword_2845A0);
      sub_1F6CC(v107, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v106, &qword_2845A8);
      uint64_t v113 = (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v101, v102);
      LOBYTE(v99) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v113);
      unint64_t v114 = v171;
      uint64_t v115 = type metadata accessor for NLContextUpdate(0LL);
      uint64_t v116 = (uint64_t)v156;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v156, 1LL, 1LL, v115);
      uint64_t v167 = 0LL;
      __int128 v165 = 0u;
      __int128 v166 = 0u;
      char v117 = v144;
      uint64_t v118 = (uint64_t)v161;
      static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v161,  v99 & 1,  v114,  0LL,  1LL,  v116,  _swiftEmptyArrayStorage,  &v165);
      swift_bridgeObjectRelease(v114);
      sub_1F6CC((uint64_t)&v165, &qword_2845C8);
      sub_1F6CC(v116, (uint64_t *)&unk_286C50);
      uint64_t v119 = v140;
      uint64_t v120 = *(void *)(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 24);
      uint64_t v160 = *(void *)(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 32);
      sub_6EA8((void *)(v140 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher), v120);
      uint64_t v121 = v164;
      *((void *)&v166 + 1) = v164;
      uint64_t v167 = &protocol witness table for AceOutput;
      uint64_t v122 = sub_10974(&v165);
      uint64_t v123 = v143;
      (*(void (**)(void *, char *, uint64_t))(v143 + 16))(v122, v117, v121);
      uint64_t v124 = swift_allocObject(&unk_270390, 24LL, 7LL);
      swift_weakInit(v124 + 16, v119);
      uint64_t v125 = (void *)swift_allocObject(&unk_270598, 40LL, 7LL);
      uint64_t v126 = v162;
      uint64_t v127 = v163;
      v125[2] = v124;
      v125[3] = v126;
      v125[4] = v127;
      swift_retain(v124);
      swift_retain(v127);
      dispatch thunk of OutputPublisher.publish(output:_:)(&v165, sub_134054, v125, v120, v160);
      swift_release(v119);
      swift_release(v125);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v117, v121);
      sub_1F6CC(v118, &qword_289340);
      swift_release(v124);
      return sub_6C3C(&v165);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v80 = v164;
    uint64_t v81 = sub_6960(v164, (uint64_t)qword_2969E0);
    uint64_t v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 16))(v34, v81, v80);
    os_log_type_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v84 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v85 = 0;
      _os_log_impl( &dword_0,  v83,  v84,  "AcousticIDFlow#noMatchFoundDialogAndViewLegacy self deallocated prematurely",  v85,  2u);
      swift_slowDealloc(v85, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v34, v80);
  }

  return result;
}

uint64_t sub_127708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969E0);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = a2;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    uint64_t v30 = v3;
    uint64_t v17 = v16;
    *(void *)&v34[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v31 = a1;
    uint64_t v18 = static Insights.responseFramework.getter(v16);
    unint64_t v20 = v19;
    uint64_t v33 = sub_6978(v18, v19, (uint64_t *)v34);
    a1 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);
    swift_bridgeObjectRelease(v20);
    _os_log_impl(&dword_0, v12, v13, "AcousticIDFlow#noMatchFoundDialogAndViewWithRF... %{public}s", v15, 0xCu);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v21 = v17;
    uint64_t v3 = v30;
    swift_slowDealloc(v21, -1LL, -1LL);
    uint64_t v22 = v15;
    a2 = v32;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  uint64_t v24 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v24 + 16, v3);
  uint64_t v25 = (void *)swift_allocObject(&unk_270548, 40LL, 7LL);
  v25[2] = v24;
  v25[3] = a1;
  v25[4] = a2;
  uint64_t v26 = *(void *)(v23 + 40);
  uint64_t v27 = *(void *)(v23 + 48);
  uint64_t v35 = 0LL;
  memset(v34, 0, sizeof(v34));
  swift_retain(v24);
  swift_retain(a2);
  unint64_t v28 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  __chkstk_darwin(v28);
  *(&v30 - sub_6C3C(v0 + 10) = v26;
  *(&v30 - 9) = v27;
  strcpy((char *)&v30 - 64, "NoMatchFound");
  *((_BYTE *)&v30 - 51) = 0;
  *((_WORD *)&v30 - sub_6C3C(v0 + 25) = -5120;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_133FE0,  (uint64_t)v25,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v26,  v27,  0x46686374614D6F4ELL,  0xEC000000646E756FLL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v30 - 12));
  swift_bridgeObjectRelease(v28);
  sub_1F6CC((uint64_t)v34, &qword_283FE8);
  swift_release(v24);
  return swift_release(v25);
}

uint64_t sub_127A40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, int a6, unsigned int *a7, unsigned int *a8, unsigned int *a9, unsigned int *a10, const char *a11)
{
  uint64_t v148 = a8;
  uint64_t v146 = a7;
  LODWORD(v144) = a6;
  uint64_t v143 = a5;
  uint64_t v161 = a3;
  uint64_t v162 = a4;
  uint64_t v155 = a1;
  uint64_t v12 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v12);
  uint64_t v154 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v14);
  uint64_t v153 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v16);
  uint64_t v152 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v18);
  uint64_t v151 = (char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v159 = *(char **)(v20 - 8);
  uint64_t v160 = v20;
  __chkstk_darwin(v20);
  os_log_type_t v150 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v142 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v136 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v132 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v132);
  uint64_t v133 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for ShazamSnippetRole(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v149 = type metadata accessor for SiriAudioShazamSnippetModel(0LL);
  uint64_t v147 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v158 = (uint64_t)&v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = sub_6C5C(&qword_289340);
  uint64_t v31 = __chkstk_darwin(v156);
  uint64_t v145 = (char *)&v127 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  uint64_t v157 = (char *)&v127 - v33;
  uint64_t v34 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v34);
  uint64_t v36 = (uint64_t *)((char *)&v127 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v37 = type metadata accessor for Logger(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  os_log_type_t v41 = (char *)&v127 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v127 - v42;
  a2 += 16LL;
  swift_beginAccess(a2, v168, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v45 = Strong;
    sub_FF10(v155, (uint64_t)v36, (uint64_t *)&unk_286BB0);
    if (swift_getEnumCaseMultiPayload(v36, v34) == 1)
    {
      uint64_t v167 = *v36;
      uint64_t v46 = sub_6C5C(&qword_284010);
      uint64_t v47 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
      if (swift_dynamicCast(&v166, &v167, v46, v47, 0LL))
      {
        uint64_t v48 = v166;
        if (qword_283890 != -1) {
          swift_once(&qword_283890, sub_BFCDC);
        }
        uint64_t v49 = sub_6960(v37, (uint64_t)qword_2969E0);
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v41, v49, v37);
        id v50 = v48;
        uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
        os_log_type_t v52 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = swift_slowAlloc(22LL, -1LL);
          uint64_t v54 = swift_slowAlloc(64LL, -1LL);
          uint64_t v159 = v41;
          uint64_t v160 = v38;
          uint64_t v55 = v54;
          uint64_t v165 = v54;
          *(_DWORD *)uint64_t v53 = 136315394;
          id v56 = [v50 localizedDescription];
          uint64_t v158 = v37;
          uint64_t v131 = v45;
          id v57 = v56;
          uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
          uint64_t v60 = v59;

          uint64_t v163 = v58;
          uint64_t v164 = v60;
          uint64_t v61 = String.init<A>(_:)( &v163,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
          unint64_t v63 = v62;
          uint64_t v163 = sub_6978(v61, v62, &v165);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164);

          swift_bridgeObjectRelease(v63);
          *(_WORD *)(v53 + 12) = 2082;
          uint64_t v65 = static Insights.responseFramework.getter(v64);
          unint64_t v67 = v66;
          uint64_t v163 = sub_6978(v65, v66, &v165);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164);
          unint64_t v68 = v67;
          uint64_t v45 = v131;
          swift_bridgeObjectRelease(v68);
          _os_log_impl( &dword_0,  v51,  v52,  "AcousticIDFlow#listeningDialogAndViewWithRF Error creating dialog %s %{public}s",  (uint8_t *)v53,  0x16u);
          swift_arrayDestroy(v55, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v55, -1LL, -1LL);
          swift_slowDealloc(v53, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v158);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
        }

        uint64_t v120 = v161;
        uint64_t v119 = v162;
        uint64_t v121 = (uint64_t)v154;
        uint64_t v122 = type metadata accessor for PlaybackCodeAndDescription(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56LL))( v121,  1LL,  1LL,  v122);
        id v123 = [v50 localizedDescription];
        uint64_t v124 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
        uint64_t v126 = v125;

        sub_12B57C(v121, v124, v126, v120, v119);
        swift_release(v45);
        swift_bridgeObjectRelease(v126);
        sub_1F6CC(v121, &qword_28A680);
        return swift_errorRelease(v167);
      }

      else
      {
        uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v34, v34);
        __break(1u);
      }
    }

    else
    {
      uint64_t v130 = a10;
      uint64_t v129 = a9;
      uint64_t v79 = *(int *)(v156 + 48);
      uint64_t v155 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v128 = *(void *)(v155 - 8);
      uint64_t v80 = v157;
      (*(void (**)(char *, uint64_t *, uint64_t))(v128 + 32))(v157, v36, v155);
      uint64_t v81 = *(void **)((char *)v36 + v79);
      *(void *)&v80[v79] = v81;
      (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, *v143, v26);
      uint64_t v154 = v81;
      SiriAudioShazamSnippetModel.init(role:)(v29);
      uint64_t v82 = (uint64_t)v133;
      swift_storeEnumTagMultiPayload(v133, v132, v144);
      uint64_t v83 = v45 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      uint64_t v84 = v45;
      uint64_t v131 = v45;
      swift_beginAccess(v45 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v163, 33LL, 0LL);
      sub_133C88(v82, v83);
      swift_endAccess(&v163);
      uint64_t v85 = v135;
      id v86 = v134;
      uint64_t v87 = v136;
      (*(void (**)(char *, void, uint64_t))(v135 + 104))( v134,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v136);
      uint64_t v88 = v138;
      uint64_t v89 = v137;
      uint64_t v90 = v139;
      (*(void (**)(char *, void, uint64_t))(v138 + 104))(v137, *v146, v139);
      uint64_t v91 = v141;
      uint64_t v92 = v140;
      uint64_t v93 = v142;
      (*(void (**)(char *, void, uint64_t))(v141 + 104))(v140, *v148, v142);
      uint64_t v148 = (unsigned int *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v86,  v89,  v92,  0LL,  1LL);
      uint64_t v146 = v94;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v87);
      uint64_t v95 = *(void *)(v84 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v144 = *(void *)(v84 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      sub_6EA8( (void *)(v84 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v95);
      uint64_t v96 = v150;
      (*((void (**)(char *, void, uint64_t))v159 + 13))( v150,  enum case for TypeOfIntent.acousticID(_:),  v160);
      uint64_t v97 = *v129;
      uint64_t v98 = type metadata accessor for ActivityType(0LL);
      uint64_t v99 = *(void *)(v98 - 8);
      uint64_t v100 = (uint64_t)v151;
      (*(void (**)(char *, uint64_t, uint64_t))(v99 + 104))(v151, v97, v98);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v99 + 56))(v100, 0LL, 1LL, v98);
      uint64_t v101 = v128;
      uint64_t v102 = (uint64_t)v152;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v152, 1LL, 1LL, v155);
      uint64_t v103 = *v130;
      uint64_t v104 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v105 = *(void *)(v104 - 8);
      uint64_t v106 = (uint64_t)v153;
      (*(void (**)(char *, uint64_t, uint64_t))(v105 + 104))(v153, v103, v104);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v106, 0LL, 1LL, v104);
      uint64_t v107 = v146;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v96,  v100,  v102,  v106,  v148,  v146,  v95,  v144);
      swift_bridgeObjectRelease(v107);
      sub_1F6CC(v106, &qword_2845A0);
      sub_1F6CC(v102, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v100, &qword_2845A8);
      (*((void (**)(char *, uint64_t))v159 + 1))(v96, v160);
      uint64_t v108 = (uint64_t)v157;
      uint64_t v109 = *(int *)(v156 + 48);
      uint64_t v110 = v101;
      uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
      uint64_t v112 = (uint64_t)v145;
      uint64_t v113 = v155;
      v111(v145, v157, v155);
      unint64_t v114 = v154;
      *(void *)(v112 + v109) = v154;
      uint64_t v115 = v158;
      uint64_t v116 = v114;
      uint64_t v117 = v131;
      sub_125418(v158, v112, v114, v161, v162);
      swift_release(v117);

      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v115, v149);
      sub_1F6CC(v108, &qword_289340);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v112, v113);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v69 = sub_6960(v37, (uint64_t)qword_2969E0);
    uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 16))(v43, v69, v37);
    unint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
    os_log_type_t v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v160 = v38;
      unint64_t v73 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v74 = swift_slowAlloc(32LL, -1LL);
      uint64_t v163 = v74;
      *(_DWORD *)unint64_t v73 = 136446210;
      uint64_t v75 = static Insights.responseFramework.getter(v74);
      unint64_t v77 = v76;
      uint64_t v167 = sub_6978(v75, v76, &v163);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, v168);
      swift_bridgeObjectRelease(v77);
      _os_log_impl(&dword_0, v71, v72, a11, v73, 0xCu);
      swift_arrayDestroy(v74, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1LL, -1LL);
      swift_slowDealloc(v73, -1LL, -1LL);

      char v78 = *(uint64_t (**)(char *, uint64_t))(v160 + 8);
    }

    else
    {

      char v78 = *(uint64_t (**)(char *, uint64_t))(v38 + 8);
    }

    return v78(v43, v37);
  }

  return result;
}

uint64_t sub_128748(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v8 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v32 = v8;
  uint64_t v9 = a1[5];
  if (!v9)
  {
    sub_1CBFB0(0x656C746974LL, 0xE500000000000000LL, &v29);
    sub_1F6CC((uint64_t)&v29, &qword_284028);
    uint64_t v13 = a1[9];
    if (v13) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1CBFB0(0x747369747261LL, 0xE600000000000000LL, &v29);
    sub_1F6CC((uint64_t)&v29, &qword_284028);
    unint64_t v17 = v32;
    goto LABEL_6;
  }

  unint64_t v10 = v8;
  uint64_t v11 = a1[4];
  *((void *)&v30 + 1) = &type metadata for String;
  *(void *)&__int128 v29 = v11;
  *((void *)&v29 + 1) = v9;
  sub_21964(&v29, v28);
  swift_bridgeObjectRetain(v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
  unint64_t v27 = v10;
  sub_33808(v28, 0x656C746974LL, 0xE500000000000000LL, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = v10;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v13 = a1[9];
  if (!v13) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v14 = a1[8];
  *((void *)&v30 + 1) = &type metadata for String;
  *(void *)&__int128 v29 = v14;
  *((void *)&v29 + 1) = v13;
  sub_21964(&v29, v28);
  swift_bridgeObjectRetain(v13);
  unint64_t v15 = v32;
  char v16 = swift_isUniquelyReferenced_nonNull_native(v32);
  unint64_t v27 = v15;
  sub_33808(v28, 0x747369747261LL, 0xE600000000000000LL, v16);
  unint64_t v17 = v15;
  swift_bridgeObjectRelease(0x8000000000000000LL);
LABEL_6:
  uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  uint64_t v19 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v19 + 16, v4);
  uint64_t v20 = (void *)swift_allocObject(&unk_2704A8, 48LL, 7LL);
  uint64_t v26 = (uint64_t)&v26;
  v20[2] = v19;
  v20[3] = a1;
  v20[4] = a2;
  v20[5] = a3;
  uint64_t v21 = *(void *)(v18 + 40);
  uint64_t v22 = *(void *)(v18 + 48);
  uint64_t v31 = 0LL;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __chkstk_darwin(v20);
  v25[2] = v21;
  v25[3] = v22;
  v25[4] = 0x6673736563637553LL;
  v25[5] = 0xEF686374614D6C75LL;
  v25[6] = v23;
  v25[7] = v17;
  v25[8] = 0LL;
  v25[9] = &v29;
  v25[10] = 0LL;
  swift_retain(v19);
  swift_retain(a1);
  swift_retain(a3);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_133E20,  (uint64_t)v20,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v21,  v22,  0x6673736563637553LL,  0xEF686374614D6C75LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v25);
  sub_1F6CC((uint64_t)&v29, &qword_283FE8);
  swift_bridgeObjectRelease(v17);
  swift_release(v19);
  return swift_release(v20);
}

uint64_t sub_128A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a1;
  uint64_t v45 = a4;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v43 + 64);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v41 - v16;
  a2 += 16LL;
  swift_beginAccess(a2, v46, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v19 = Strong;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v42 = a5;
    uint64_t v20 = sub_6960(v11, (uint64_t)qword_2969C8);
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v20, v11);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = a3;
      uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v22, v23, "AcousticIDFlow#successfulMatchDialogAndViewLegacy", v25, 2u);
      uint64_t v26 = v25;
      a3 = v24;
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t v27 = swift_allocObject(&unk_2704D0, 24LL, 7LL);
    *(void *)(v27 + 16) = _swiftEmptyArrayStorage;
    sub_FF10(v44, (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t *)&unk_286BB0);
    uint64_t v28 = *(unsigned __int8 *)(v43 + 80);
    uint64_t v29 = (v28 + 32) & ~v28;
    unint64_t v30 = (v9 + v29 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v32 = swift_allocObject(&unk_2704F8, v31 + 16, v28 | 7);
    *(void *)(v32 + 16) = v19;
    *(void *)(v32 + 24) = v27;
    sub_45F6C((uint64_t)v10, v32 + v29, (uint64_t *)&unk_286BB0);
    *(void *)(v32 + v30) = a3;
    uint64_t v33 = (void *)(v32 + v31);
    uint64_t v34 = v42;
    *uint64_t v33 = v45;
    v33[1] = v34;
    swift_retain(v19);
    swift_retain(v27);
    swift_retain(a3);
    swift_retain(v34);
    sub_12F0F0(a3, (uint64_t)sub_133F40, v32);
    swift_release(v27);
    swift_release(v32);
    return swift_release(v19);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v36 = sub_6960(v11, (uint64_t)qword_2969E0);
    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v36, v11);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl( &dword_0,  v38,  v39,  "AcousticIDFlow#successfulMatchDialogAndViewLegacy self deallocated prematurely",  v40,  2u);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }

uint64_t sub_128DD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v138 = a6;
  uint64_t v139 = a7;
  uint64_t v120 = a5;
  uint64_t v134 = a4;
  uint64_t v10 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v10);
  uint64_t v127 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v132 = *(void *)(v12 - 8);
  uint64_t v133 = v12;
  __chkstk_darwin(v12);
  uint64_t v131 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v129 = type metadata accessor for AceOutput(0LL);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v126 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v15);
  uint64_t v125 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v17);
  uint64_t v124 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v19);
  id v123 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v122 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v135 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v121 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  os_log_type_t v23 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v25 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v26 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v28 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v29);
  uint64_t v137 = (uint8_t *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v31);
  uint64_t v136 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t *)((char *)&v114 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v36 = (void *)(a3 + 16);
  if (a1 && (*(_BYTE *)(a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_isInAmbient) & 1) == 0)
  {
    uint64_t v130 = a2;
    swift_beginAccess(v36, &v140, 33LL, 0LL);
    id v37 = a1;
    uint64_t v38 = v36;
    id v39 = v37;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
    unint64_t v41 = *(void *)((char *)&dword_10 + (*v38 & 0xFFFFFFFFFFFFFF8LL));
    unint64_t v40 = *(void *)((char *)&dword_18 + (*v38 & 0xFFFFFFFFFFFFFF8LL));
    if (v41 >= v40 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1LL);
    }
    uint64_t v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
    specialized Array._endMutation()(v42);
    swift_endAccess(&v140);
    a2 = v130;
    uint64_t v36 = v38;
  }

  sub_FF10(v134, (uint64_t)v35, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v35, v33) == 1)
  {
    uint64_t v143 = *v35;
    uint64_t v43 = sub_6C5C(&qword_284010);
    uint64_t v44 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(&v145, &v143, v43, v44, 0LL))
    {
      uint64_t v45 = v145;
      uint64_t v46 = v133;
      uint64_t v47 = v131;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v48 = sub_6960(v46, (uint64_t)qword_2969E0);
      uint64_t v49 = v132;
      (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v47, v48, v46);
      id v50 = v45;
      uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v52 = static os_log_type_t.error.getter();
      uint64_t v53 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v55 = swift_slowAlloc(32LL, -1LL);
        uint64_t v144 = v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        uint64_t v137 = v54 + 4;
        id v56 = [v50 localizedDescription];
        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        uint64_t v59 = v58;

        *(void *)&__int128 v140 = v57;
        *((void *)&v140 + 1) = v59;
        uint64_t v60 = String.init<A>(_:)( &v140,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v62 = v61;
        *(void *)&__int128 v140 = sub_6978(v60, v61, &v144);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v140, (char *)&v140 + 8);

        unint64_t v63 = v62;
        uint64_t v53 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
        swift_bridgeObjectRelease(v63);
        _os_log_impl( &dword_0,  v51,  v52,  "AcousticIDFlow#successfulMatchDialogAndViewLegacy Error creating dialog %s, issuing error dialog",  v54,  0xCu);
        swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1LL, -1LL);
        swift_slowDealloc(v54, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v132 + 8))(v131, v133);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v46);
      }

      uint64_t v108 = type metadata accessor for PlaybackCodeAndDescription(0LL);
      uint64_t v109 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56LL))(v127, 1LL, 1LL, v108);
      id v110 = [v50 *(SEL *)&v53[499]];
      uint64_t v111 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
      uint64_t v113 = v112;

      sub_12B57C(v109, v111, v113, v138, v139);
      swift_bridgeObjectRelease(v113);
      sub_1F6CC(v109, &qword_28A680);
      return swift_errorRelease(v143);
    }

    else
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v33, v33);
      __break(1u);
    }
  }

  else
  {
    uint64_t v64 = *(int *)(v31 + 48);
    uint64_t v65 = type metadata accessor for TemplatingResult(0LL);
    unint64_t v66 = v28;
    uint64_t v67 = a2;
    uint64_t v130 = a2;
    uint64_t v133 = *(void *)(v65 - 8);
    uint64_t v134 = v65;
    unint64_t v68 = v136;
    (*(void (**)(char *, uint64_t *, uint64_t))(v133 + 32))(v136, v35, v65);
    *(void *)&v68[v64] = *(uint64_t *)((char *)v35 + v64);
    sub_11F960(v120, (uint64_t)v137);
    uint64_t v127 = (char *)v36;
    uint64_t v69 = v23;
    uint64_t v70 = v26;
    unint64_t v71 = *(void (**)(char *, void, uint64_t))(v26 + 104);
    uint64_t v72 = v115;
    v71(v66, enum case for AdditionalMetricsDescription.ModuleName.aidf(_:), v115);
    uint64_t v73 = v116;
    uint64_t v74 = v117;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))( v25,  enum case for AdditionalMetricsDescription.SourceFunction.successfulMatch(_:),  v117);
    uint64_t v75 = v118;
    uint64_t v76 = v119;
    (*(void (**)(char *, void, uint64_t))(v118 + 104))( v69,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v119);
    uint64_t v77 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v66, v25, v69, 0LL, 1LL);
    uint64_t v131 = v78;
    uint64_t v132 = v77;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v69, v76);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v25, v74);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v66, v72);
    uint64_t v79 = *(void *)(v67 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
    uint64_t v120 = *(void *)(v67 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
    sub_6EA8( (void *)(v67 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v79);
    uint64_t v80 = v121;
    uint64_t v81 = v122;
    (*(void (**)(char *, void, uint64_t))(v135 + 104))( v121,  enum case for TypeOfIntent.acousticID(_:),  v122);
    uint64_t v82 = enum case for ActivityType.completed(_:);
    uint64_t v83 = type metadata accessor for ActivityType(0LL);
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v123, v82, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
    uint64_t v86 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v133 + 56))(v124, 1LL, 1LL, v134);
    uint64_t v87 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v88 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v89 = *(void *)(v88 - 8);
    uint64_t v90 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v125, v87, v88);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v90, 0LL, 1LL, v88);
    uint64_t v91 = v131;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v80,  v85,  v86,  v90,  v132,  v131,  v79,  v120);
    swift_bridgeObjectRelease(v91);
    sub_1F6CC(v90, &qword_2845A0);
    sub_1F6CC(v86, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v85, &qword_2845A8);
    uint64_t v92 = (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v80, v81);
    LOBYTE(v91) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v92);
    uint64_t v93 = v127;
    swift_beginAccess(v127, &v143, 0LL, 0LL);
    uint64_t v94 = *(void *)v93;
    uint64_t v142 = 0LL;
    __int128 v140 = 0u;
    __int128 v141 = 0u;
    swift_bridgeObjectRetain(v94);
    uint64_t v95 = v126;
    uint64_t v97 = (uint64_t)v136;
    uint64_t v96 = (uint64_t)v137;
    static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v136,  v91 & 1,  v94,  0LL,  1LL,  v137,  _swiftEmptyArrayStorage,  &v140);
    swift_bridgeObjectRelease(v94);
    sub_1F6CC((uint64_t)&v140, &qword_2845C8);
    uint64_t v98 = v130;
    uint64_t v99 = *(void *)(v130 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 24);
    uint64_t v135 = *(void *)(v130 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 32);
    sub_6EA8((void *)(v130 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher), v99);
    uint64_t v100 = v129;
    *((void *)&v141 + 1) = v129;
    uint64_t v142 = &protocol witness table for AceOutput;
    uint64_t v101 = sub_10974(&v140);
    uint64_t v102 = v128;
    (*(void (**)(void *, char *, uint64_t))(v128 + 16))(v101, v95, v100);
    uint64_t v103 = swift_allocObject(&unk_270390, 24LL, 7LL);
    swift_weakInit(v103 + 16, v98);
    uint64_t v104 = (void *)swift_allocObject(&unk_270520, 40LL, 7LL);
    uint64_t v105 = v138;
    uint64_t v106 = v139;
    v104[2] = v103;
    v104[3] = v105;
    _OWORD v104[4] = v106;
    swift_retain(v103);
    swift_retain(v106);
    dispatch thunk of OutputPublisher.publish(output:_:)(&v140, sub_133FAC, v104, v99, v135);
    swift_release(v104);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v95, v100);
    sub_1F6CC(v96, (uint64_t *)&unk_286C50);
    sub_1F6CC(v97, &qword_289340);
    swift_release(v103);
    return sub_6C3C(&v140);
  }

  return result;
}

uint64_t sub_129960( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, const char *a6, const char *a7)
{
  uint64_t v43 = a6;
  uint64_t v46 = a5;
  uint64_t v10 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v45 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v44);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v41 - v20;
  a3 += 16LL;
  swift_beginAccess(a3, v48, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    uint64_t v23 = Strong;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v24 = sub_6960(v15, (uint64_t)qword_2969E0);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v24, v15);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v42 = a4;
      uint64_t v29 = v10;
      uint64_t v30 = v28;
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_0, v26, v27, v43, v28, 2u);
      uint64_t v31 = v30;
      uint64_t v10 = v29;
      a4 = v42;
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    swift_storeEnumTagMultiPayload(v14, v44, 5LL);
    uint64_t v32 = v23 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
    swift_beginAccess(v23 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, v47, 33LL, 0LL);
    sub_133C88((uint64_t)v14, v32);
    swift_endAccess(v47);
    uint64_t v33 = *(void *)(v23 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
    uint64_t v34 = *(void *)(v23 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
    sub_6EA8((void *)(v23 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v33);
    (*(void (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
    static ExecuteResponse.ongoing(requireInput:)(0LL);
    a4(v12);
    swift_release(v23);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v12, v10);
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v36 = sub_6960(v15, (uint64_t)qword_2969E0);
    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))(v21, v36, v15);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v40 = 0;
      _os_log_impl(&dword_0, v38, v39, a7, v40, 2u);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }

uint64_t sub_129CDC(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969E0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = a3;
    uint64_t v45 = a2;
    uint64_t v19 = v18;
    *(void *)&__int128 v50 = v18;
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v20 = static Insights.responseFramework.getter(v18);
    uint64_t v44 = v4;
    unint64_t v22 = v21;
    *(void *)&v49[0] = sub_6978(v20, v21, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v49, (char *)v49 + 8);
    unint64_t v23 = v22;
    uint64_t v4 = v44;
    swift_bridgeObjectRelease(v23);
    _os_log_impl(&dword_0, v14, v15, "AcousticIDFlow#successfulMatchDialogAndViewWithRF... %{public}s", v17, 0xCu);
    swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v24 = v19;
    a2 = v45;
    a3 = v47;
    swift_slowDealloc(v24, -1LL, -1LL);
    uint64_t v25 = v17;
    a1 = v46;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  unint64_t v26 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v53 = v26;
  uint64_t v27 = a1[5];
  if (!v27)
  {
    sub_1CBFB0(0x656C746974LL, 0xE500000000000000LL, &v50);
    sub_1F6CC((uint64_t)&v50, &qword_284028);
    uint64_t v31 = a1[9];
    if (v31) {
      goto LABEL_7;
    }
LABEL_9:
    sub_1CBFB0(0x747369747261LL, 0xE600000000000000LL, &v50);
    sub_1F6CC((uint64_t)&v50, &qword_284028);
    unint64_t v35 = v53;
    goto LABEL_10;
  }

  unint64_t v28 = v26;
  uint64_t v29 = a1[4];
  *((void *)&v51 + 1) = &type metadata for String;
  *(void *)&__int128 v50 = v29;
  *((void *)&v50 + 1) = v27;
  sub_21964(&v50, v49);
  swift_bridgeObjectRetain(v27);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v28);
  unint64_t v48 = v28;
  sub_33808(v49, 0x656C746974LL, 0xE500000000000000LL, isUniquelyReferenced_nonNull_native);
  unint64_t v53 = v48;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v31 = a1[9];
  if (!v31) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v32 = a1[8];
  *((void *)&v51 + 1) = &type metadata for String;
  *(void *)&__int128 v50 = v32;
  *((void *)&v50 + 1) = v31;
  sub_21964(&v50, v49);
  swift_bridgeObjectRetain(v31);
  unint64_t v33 = v53;
  char v34 = swift_isUniquelyReferenced_nonNull_native(v53);
  unint64_t v48 = v33;
  sub_33808(v49, 0x747369747261LL, 0xE600000000000000LL, v34);
  unint64_t v35 = v48;
  swift_bridgeObjectRelease(0x8000000000000000LL);
LABEL_10:
  uint64_t v36 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  uint64_t v37 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v37 + 16, v4);
  uint64_t v38 = (void *)swift_allocObject(&unk_270480, 48LL, 7LL);
  uint64_t v47 = &v43;
  _OWORD v38[2] = v37;
  v38[3] = a1;
  v38[4] = a2;
  v38[5] = a3;
  os_log_type_t v39 = a1;
  uint64_t v40 = *(void *)(v36 + 40);
  uint64_t v41 = *(void *)(v36 + 48);
  uint64_t v52 = 0LL;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __chkstk_darwin(v38);
  *(&v43 - sub_6C3C(v0 + 10) = v40;
  *(&v43 - 9) = v41;
  *(&v43 - 8) = 0x6673736563637553LL;
  *(&v43 - 7) = 0xEF686374614D6C75LL;
  swift_retain(v37);
  swift_retain(v39);
  swift_retain(a3);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_133E10,  (uint64_t)v38,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v40,  v41,  0x6673736563637553LL,  0xEF686374614D6C75LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v43 - 12));
  sub_1F6CC((uint64_t)&v50, &qword_283FE8);
  swift_bridgeObjectRelease(v35);
  swift_release(v37);
  return swift_release(v38);
}

uint64_t sub_12A174(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v130 = a4;
  uint64_t v131 = a5;
  uint64_t v121 = a3;
  id v125 = a1;
  uint64_t v6 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v6);
  uint64_t v122 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v8);
  uint64_t v120 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v10);
  uint64_t v119 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v12);
  uint64_t v118 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v128 = *(void *)(v14 - 8);
  uint64_t v129 = v14;
  __chkstk_darwin(v14);
  uint64_t v117 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v17 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v113 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v19 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v23 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = sub_6C5C(&qword_289340);
  uint64_t v24 = __chkstk_darwin(v126);
  uint64_t v116 = (char *)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v127 = (char *)&v110 - v26;
  uint64_t v27 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v30 = type metadata accessor for Logger(0LL);
  uint64_t v132 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  id v123 = (char *)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  char v34 = (char *)&v110 - v33;
  a2 += 16LL;
  swift_beginAccess(a2, v138, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v36 = Strong;
    sub_FF10((uint64_t)v125, (uint64_t)v29, (uint64_t *)&unk_286BB0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v29, v27);
    uint64_t v124 = v36;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v137 = *v29;
      uint64_t v38 = sub_6C5C(&qword_284010);
      uint64_t v39 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
      if (swift_dynamicCast(&v136, &v137, v38, v39, 0LL))
      {
        uint64_t v40 = v136;
        if (qword_283890 != -1) {
          swift_once(&qword_283890, sub_BFCDC);
        }
        uint64_t v41 = sub_6960(v30, (uint64_t)qword_2969E0);
        uint64_t v42 = v132;
        uint64_t v43 = v123;
        (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v123, v41, v30);
        id v44 = v40;
        uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
        os_log_type_t v46 = static os_log_type_t.error.getter();
        uint64_t v47 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v48 = swift_slowAlloc(22LL, -1LL);
          uint64_t v49 = swift_slowAlloc(64LL, -1LL);
          uint64_t v135 = v49;
          *(_DWORD *)uint64_t v48 = 136315394;
          id v50 = [v44 localizedDescription];
          uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          uint64_t v52 = v30;
          uint64_t v54 = v53;

          uint64_t v133 = v51;
          uint64_t v134 = v54;
          uint64_t v55 = String.init<A>(_:)( &v133,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
          unint64_t v57 = v56;
          uint64_t v133 = sub_6978(v55, v56, &v135);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134);

          swift_bridgeObjectRelease(v57);
          *(_WORD *)(v48 + 12) = 2082;
          uint64_t v59 = static Insights.responseFramework.getter(v58);
          unint64_t v61 = v60;
          uint64_t v133 = sub_6978(v59, v60, &v135);
          uint64_t v47 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, &v134);
          swift_bridgeObjectRelease(v61);
          _os_log_impl( &dword_0,  v45,  v46,  "AcousticIDFlow#successfulMatchDialogAndViewWithRF Error creating dialog %s %{public}s",  (uint8_t *)v48,  0x16u);
          swift_arrayDestroy(v49, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v49, -1LL, -1LL);
          swift_slowDealloc(v48, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v132 + 8))(v123, v52);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v30);
        }

        uint64_t v102 = v130;
        uint64_t v101 = v131;
        uint64_t v103 = (uint64_t)v122;
        uint64_t v104 = type metadata accessor for PlaybackCodeAndDescription(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56LL))( v103,  1LL,  1LL,  v104);
        id v105 = [v44 *(SEL *)&v47[499]];
        uint64_t v106 = (uint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
        uint64_t v108 = v107;

        uint64_t v109 = v124;
        sub_12B57C(v103, v106, v108, v102, v101);

        swift_release(v109);
        swift_bridgeObjectRelease(v108);
        sub_1F6CC(v103, &qword_28A680);
        return swift_errorRelease(v137);
      }

      else
      {
        uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v27, v27);
        __break(1u);
      }
    }

    else
    {
      uint64_t v73 = *(int *)(v126 + 48);
      uint64_t v132 = type metadata accessor for TemplatingResult(0LL);
      id v123 = *(char **)(v132 - 8);
      uint64_t v74 = v127;
      (*((void (**)(char *, uint64_t *, uint64_t))v123 + 4))(v127, v29, v132);
      uint64_t v75 = *(void **)((char *)v29 + v73);
      *(void *)&v74[v73] = v75;
      (*(void (**)(char *, void, uint64_t))(v21 + 104))( v23,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v20);
      uint64_t v76 = v112;
      uint64_t v77 = v113;
      (*(void (**)(char *, void, uint64_t))(v112 + 104))( v19,  enum case for AdditionalMetricsDescription.SourceFunction.successfulMatch(_:),  v113);
      uint64_t v78 = v114;
      uint64_t v79 = v115;
      (*(void (**)(char *, void, uint64_t))(v114 + 104))( v17,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v115);
      id v125 = v75;
      uint64_t v122 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v23,  v19,  v17,  0LL,  1LL);
      uint64_t v111 = v80;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v79);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v19, v77);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      uint64_t v81 = *(void *)(v124 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v115 = *(void *)(v124 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      sub_6EA8( (void *)(v124 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v81);
      uint64_t v82 = v117;
      (*(void (**)(char *, void, uint64_t))(v128 + 104))( v117,  enum case for TypeOfIntent.acousticID(_:),  v129);
      uint64_t v83 = enum case for ActivityType.completed(_:);
      uint64_t v84 = type metadata accessor for ActivityType(0LL);
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v86 = (uint64_t)v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 104))(v118, v83, v84);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0LL, 1LL, v84);
      uint64_t v87 = v123;
      uint64_t v88 = (uint64_t)v119;
      (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v123 + 7))(v119, 1LL, 1LL, v132);
      uint64_t v89 = enum case for SiriKitReliabilityCodes.success(_:);
      uint64_t v90 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v91 = *(void *)(v90 - 8);
      uint64_t v92 = (uint64_t)v120;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v120, v89, v90);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v92, 0LL, 1LL, v90);
      uint64_t v93 = v111;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v82,  v86,  v88,  v92,  v122,  v111,  v81,  v115);
      swift_bridgeObjectRelease(v93);
      sub_1F6CC(v92, &qword_2845A0);
      sub_1F6CC(v88, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v86, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v82, v129);
      uint64_t v94 = (uint64_t)v127;
      uint64_t v95 = *(int *)(v126 + 48);
      uint64_t v96 = v116;
      uint64_t v97 = v132;
      (*((void (**)(char *, char *, uint64_t))v87 + 2))(v116, v127, v132);
      uint64_t v99 = v124;
      id v98 = v125;
      *(void *)&v96[v95] = v125;
      uint64_t v100 = v98;
      sub_12AC74(v121, v96, v98, v130, v131);
      swift_release(v99);

      sub_1F6CC(v94, &qword_289340);
      return (*((uint64_t (**)(char *, uint64_t))v87 + 1))(v96, v97);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v62 = sub_6960(v30, (uint64_t)qword_2969E0);
    uint64_t v63 = v132;
    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v132 + 16))(v34, v62, v30);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      uint64_t v133 = v68;
      *(_DWORD *)uint64_t v67 = 136446210;
      uint64_t v69 = static Insights.responseFramework.getter(v68);
      unint64_t v71 = v70;
      uint64_t v137 = sub_6978(v69, v70, &v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
      swift_bridgeObjectRelease(v71);
      _os_log_impl( &dword_0,  v65,  v66,  "AcousticIDFlow#successfulMatchDialogAndViewWithRF self deallocated prematurely  %{public}s",  v67,  0xCu);
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v68, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v34, v30);
  }

  return result;
}

uint64_t sub_12AC74(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a1;
  uint64_t v9 = sub_6C5C(&qword_289340);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL);
  v17(v15, a2, v16);
  *(void *)&v15[*(int *)(v9 + 48)] = a3;
  uint64_t v18 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v18 + 16, v6);
  uint64_t v19 = *(int *)(v9 + 48);
  v17(v13, v15, v16);
  *(void *)&v13[v19] = a3;
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = (v20 + 24) & ~v20;
  unint64_t v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v23 = swift_allocObject(&unk_270408, v22 + 16, v20 | 7);
  *(void *)(v23 + 16) = v18;
  sub_45F6C((uint64_t)v13, v23 + v21, &qword_289340);
  uint64_t v24 = (void *)(v23 + v22);
  uint64_t v25 = v34;
  *uint64_t v24 = v33;
  v24[1] = v25;
  uint64_t v26 = (void *)swift_allocObject(&unk_270430, 40LL, 7LL);
  v26[2] = sub_133D78;
  v26[3] = v23;
  uint64_t v27 = v35;
  v26[4] = v35;
  uint64_t v28 = *(void *)(v32 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider + 24);
  uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider + 32);
  sub_6EA8((void *)(v32 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider), v28);
  uint64_t v29 = swift_allocObject(&unk_270458, 32LL, 7LL);
  *(void *)(v29 + 16) = sub_133E00;
  *(void *)(v29 + 24) = v26;
  id v30 = a3;
  swift_retain(v18);
  swift_retain(v25);
  swift_retain(v23);
  swift_retain(v27);
  swift_retain(v26);
  dispatch thunk of SubscriptionProviding.status(bypassingCache:completion:)(0LL, sub_134760, v29, v28, v33);
  swift_release(v23);
  swift_release(v26);
  swift_release(v29);
  sub_1F6CC((uint64_t)v15, &qword_289340);
  return swift_release(v18);
}

uint64_t sub_12AED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v51 = a3;
  uint64_t v46 = a1;
  uint64_t v49 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v49);
  id v50 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ShazamSnippetRole(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SiriAudioShazamSnippetModel(0LL);
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v56, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v22 = Strong;
    uint64_t matched = type metadata accessor for ShazamSuccessfulMatchViewModel(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(matched - 8) + 16LL))(v13, v46, matched);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for ShazamSnippetRole.success(_:), v10);
    SiriAudioShazamSnippetModel.init(role:)(v13);
    swift_storeEnumTagMultiPayload(v9, v7, 5LL);
    uint64_t v24 = v22 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
    swift_beginAccess(v22 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, v54, 33LL, 0LL);
    sub_133C88((uint64_t)v9, v24);
    swift_endAccess(v54);
    uint64_t v25 = *(int *)(v49 + 48);
    uint64_t v26 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = (uint64_t)v50;
    uint64_t v29 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v50, v51, v26);
    id v30 = *(void **)(v29 + v25);
    *(void *)(v28 + vsub_6C3C(v0 + 25) = v30;
    id v31 = v30;
    sub_125418((uint64_t)v16, v28, v31, v52, v53);
    swift_release(v22);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  }

  else
  {
    uint64_t v33 = v18;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v34 = v17;
    uint64_t v35 = sub_6960(v17, (uint64_t)qword_2969E0);
    uint64_t v36 = v20;
    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v20, v35, v34);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      v54[0] = v41;
      *(_DWORD *)uint64_t v40 = 136446210;
      uint64_t v42 = static Insights.responseFramework.getter(v41);
      unint64_t v44 = v43;
      uint64_t v55 = sub_6978(v42, v43, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
      swift_bridgeObjectRelease(v44);
      _os_log_impl( &dword_0,  v38,  v39,  "AcousticIDFlow#publishSuccessfulResponse self deallocated prematurely  %{public}s",  v40,  0xCu);
      swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v36, v34);
  }

uint64_t sub_12B2D0(int a1, void (*a2)(char *), uint64_t a3, void *a4)
{
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  int v49 = a1;
  uint64_t v5 = sub_6C5C(&qword_284628);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = v8;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v36 = (char *)&v34 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v37 = (char *)&v34 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t matched = type metadata accessor for ShazamSuccessfulMatchViewModel(0LL);
  uint64_t v47 = *(void *)(matched - 8);
  uint64_t v48 = matched;
  __chkstk_darwin(matched);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = a4[2];
  uint64_t v21 = a4[3];
  uint64_t v22 = a4[5];
  uint64_t v45 = a4[4];
  uint64_t v46 = v20;
  uint64_t v23 = a4[6];
  uint64_t v24 = a4[7];
  uint64_t v43 = a4[8];
  uint64_t v44 = v23;
  uint64_t v25 = a4[14];
  uint64_t v26 = a4[15];
  uint64_t v38 = a4[9];
  uint64_t v39 = v26;
  uint64_t v41 = a4[10];
  uint64_t v42 = v25;
  uint64_t v40 = a4[11];
  sub_FF10( (uint64_t)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_appleMusicURL,  (uint64_t)v16,  &qword_284628);
  sub_FF10((uint64_t)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_webURL, (uint64_t)v14, &qword_284628);
  sub_FF10( (uint64_t)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_artworkURL,  (uint64_t)v11,  &qword_284628);
  sub_FF10((uint64_t)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_videoURL, (uint64_t)v8, &qword_284628);
  LOBYTE(v14) = *((_BYTE *)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_explicitContent);
  uint64_t v27 = *(void *)((char *)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc);
  uint64_t v28 = *(void *)((char *)a4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc + 8);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  uint64_t v29 = v38;
  swift_bridgeObjectRetain(v38);
  uint64_t v30 = v39;
  swift_bridgeObjectRetain(v39);
  __n128 v31 = swift_bridgeObjectRetain(v40);
  ShazamSuccessfulMatchViewModel.init(shazamID:title:subtitle:artist:genre:appleMusicID:appleMusicURL:webURL:artworkURL:videoURL:explicitContent:isrc:subscriptionStatus:)( v46,  v21,  v45,  v22,  v44,  v24,  v43,  v29,  v31,  v42,  v30,  v41,  v32,  v16,  v37,  v36,  v35,  (_BYTE)v14,  v27,  v28,  (_BYTE)v49);
  v51(v19);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v19, v48);
}

uint64_t sub_12B57C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v83 = a2;
  uint64_t v85 = a3;
  uint64_t v86 = a5;
  uint64_t v84 = a4;
  uint64_t v6 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_6C5C(&qword_28A680);
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v80 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v73 - v15;
  uint64_t v17 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v73 - v22;
  unint64_t v81 = a1;
  uint64_t v25 = v24;
  sub_FF10(a1, (uint64_t)v16, &qword_28A680);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1LL, v25) == 1)
  {
    sub_1F6CC((uint64_t)v16, &qword_28A680);
LABEL_8:
    uint64_t v57 = v82;
    uint64_t v58 = *(void *)(v82 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
    uint64_t v59 = swift_allocObject(&unk_270390, 24LL, 7LL);
    swift_weakInit(v59 + 16, v57);
    uint64_t v60 = v80;
    sub_FF10(v81, v80, &qword_28A680);
    uint64_t v61 = *(unsigned __int8 *)(v79 + 80);
    uint64_t v62 = (v61 + 40) & ~v61;
    unint64_t v63 = (v78 + v62 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v64 = (void *)swift_allocObject(&unk_2703B8, v63 + 16, v61 | 7);
    uint64_t v65 = v83;
    v64[2] = v59;
    v64[3] = v65;
    uint64_t v66 = v85;
    v64[4] = v85;
    sub_45F6C(v60, (uint64_t)v64 + v62, &qword_28A680);
    uint64_t v67 = (void *)((char *)v64 + v63);
    uint64_t v68 = v86;
    *uint64_t v67 = v84;
    v67[1] = v68;
    uint64_t v69 = *(void *)(v58 + 40);
    uint64_t v70 = *(void *)(v58 + 48);
    uint64_t v90 = 0LL;
    __int128 v88 = 0u;
    __int128 v89 = 0u;
    swift_bridgeObjectRetain(v66);
    swift_retain(v68);
    swift_retain(v59);
    unint64_t v71 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
    __chkstk_darwin(v71);
    *(&v73 - sub_6C3C(v0 + 10) = v69;
    *(&v73 - 9) = v70;
    strcpy((char *)&v73 - 64, "GenericError");
    *((_BYTE *)&v73 - 51) = 0;
    *((_WORD *)&v73 - sub_6C3C(v0 + 25) = -5120;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_133B30,  (uint64_t)v64,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v69,  v70,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v73 - 12));
    swift_bridgeObjectRelease(v71);
    sub_1F6CC((uint64_t)&v88, &qword_283FE8);
    swift_release(v59);
    unint64_t v56 = v64;
    return swift_release(v56);
  }

  uint64_t v73 = v19;
  uint64_t v74 = v18;
  uint64_t v26 = *(uint64_t (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v76 = v25;
  uint64_t v27 = v26(v23, v16, v25);
  uint64_t v75 = v23;
  PlaybackCodeAndDescription.playbackCode.getter(v27);
  uint64_t v28 = v77;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))( v9,  enum case for PlaybackCode.acousticIDPrivDiscAckNeeded(_:),  v6);
  uint64_t v29 = sub_10430( &qword_28A798,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  dispatch thunk of RawRepresentable.rawValue.getter(&v88, v6, v29);
  dispatch thunk of RawRepresentable.rawValue.getter(&v87, v6, v29);
  uint64_t v30 = *((void *)&v88 + 1);
  uint64_t v31 = *((void *)&v87 + 1);
  if (v88 == v87)
  {
    swift_bridgeObjectRelease_n(*((void *)&v88 + 1), 2LL);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v28 + 8);
    v32(v9, v6);
    v32(v11, v6);
  }

  else
  {
    char v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, *((void *)&v88 + 1));
    swift_bridgeObjectRelease(v30);
    __n128 v34 = swift_bridgeObjectRelease(v31);
    uint64_t v35 = *(void (**)(char *, uint64_t, __n128))(v28 + 8);
    v35(v9, v6, v34);
    ((void (*)(char *, uint64_t))v35)(v11, v6);
    if ((v33 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
      goto LABEL_8;
    }
  }

  uint64_t v36 = v82;
  uint64_t v37 = *(void *)(v82 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService);
  unint64_t v81 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for App(0LL);
  uint64_t v80 = App.__allocating_init(appIdentifier:)(0xD000000000000011LL, 0x8000000000221010LL);
  uint64_t v90 = 0LL;
  __int128 v88 = 0u;
  __int128 v89 = 0u;
  uint64_t v38 = swift_allocObject(&unk_270390, 24LL, 7LL);
  swift_weakInit(v38 + 16, v36);
  uint64_t v39 = v74;
  uint64_t v40 = v76;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v21, v75, v76);
  uint64_t v41 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v42 = (v41 + 40) & ~v41;
  unint64_t v43 = (v73 + v42 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v44 = (char *)swift_allocObject(&unk_2703E0, v43 + 16, v41 | 7);
  uint64_t v45 = v26;
  uint64_t v46 = (uint64_t)v44;
  uint64_t v47 = v83;
  *((void *)v44 + 2) = v38;
  *((void *)v44 + sub_6C3C(v0 + 3) = v47;
  uint64_t v48 = v85;
  *((void *)v44 + 4) = v85;
  uint64_t v49 = v45(&v44[v42], v21, v40);
  uint64_t v83 = &v73;
  uint64_t v50 = (void *)(v46 + v43);
  uint64_t v51 = v86;
  *uint64_t v50 = v84;
  v50[1] = v51;
  uint64_t v52 = *(void *)(v37 + 16);
  uint64_t v53 = *(void *)(v37 + 24);
  __chkstk_darwin(v49);
  *(&v73 - sub_6C3C(v0 + 10) = v52;
  *(&v73 - 9) = v53;
  *(&v73 - 8) = 0xD000000000000025LL;
  *(&v73 - 7) = 0x8000000000221030LL;
  uint64_t v54 = v80;
  unint64_t v55 = v81;
  swift_bridgeObjectRetain(v48);
  swift_retain(v51);
  swift_retain(v38);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_133C2C,  v46,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v52,  v53,  0xD000000000000025LL,  0x8000000000221030LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v73 - 12));
  swift_bridgeObjectRelease(v55);
  swift_release(v54);
  swift_release(v46);
  sub_1F6CC((uint64_t)&v88, &qword_283FE8);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
  unint64_t v56 = (void *)v38;
  return swift_release(v56);
}

uint64_t sub_12BC20( void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v194 = a7;
  os_log_type_t v196 = a6;
  uint64_t v174 = a5;
  uint64_t v178 = a4;
  uint64_t v175 = a3;
  v190 = a1;
  uint64_t v198 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v197 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  v195 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v192 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v192);
  __n128 v193 = (char *)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v10);
  v189 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v188 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v187 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v202 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v186 = (char *)&v170 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v173 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v172 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v19 = (char *)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v185 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v184 = *(v185 - 1);
  __chkstk_darwin(v185);
  v182 = (char *)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v199 = *(void **)(v21 - 8);
  uint64_t v200 = v21;
  __chkstk_darwin(v21);
  uint64_t v183 = (char *)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v191 = sub_6C5C(&qword_289340);
  uint64_t v23 = __chkstk_darwin(v191);
  BOOL v179 = (char *)&v170 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v201 = (uint64_t)&v170 - v25;
  uint64_t v26 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v170 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v29 = type metadata accessor for Logger(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  char v33 = (char *)&v170 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v180 = (char *)&v170 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v170 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v170 - v39;
  a2 += 16LL;
  swift_beginAccess(a2, v211, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v203 = Strong;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v42 = sub_6960(v29, (uint64_t)qword_2969E0);
    unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    uint64_t v176 = v42;
    v177 = v43;
    uint64_t v44 = ((uint64_t (*)(char *))v43)(v38);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v181 = v16;
    if (v47)
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl( &dword_0,  v45,  v46,  "AcousticIDFlow#errorDialog (privacy disclosure acknowledgement needed)",  v48,  2u);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    uint64_t v49 = *(void (**)(char *, uint64_t))(v30 + 8);
    v49(v38, v29);
    sub_FF10((uint64_t)v190, (uint64_t)v28, (uint64_t *)&unk_286BB0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v26);
    uint64_t v51 = v203;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v52 = *v28;
      v177(v33, v176, v29);
      swift_errorRetain(v52);
      uint64_t v201 = v52;
      uint64_t v53 = swift_errorRetain(v52);
      uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
      os_log_type_t v55 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v54, v55))
      {
        unint64_t v56 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v57 = swift_slowAlloc(32LL, -1LL);
        uint64_t v206 = v57;
        v190 = v49;
        *(_DWORD *)unint64_t v56 = 136315138;
        uint64_t v58 = v201;
        swift_getErrorValue(v201, v205, v204);
        uint64_t v209 = Error.localizedDescription.getter(v204[1], v204[2]);
        uint64_t v210 = v59;
        uint64_t v60 = String.init<A>(_:)( &v209,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v62 = v61;
        uint64_t v209 = sub_6978(v60, v61, &v206);
        uint64_t v51 = v203;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v209, &v210);
        swift_bridgeObjectRelease(v62);
        swift_errorRelease(v58);
        swift_errorRelease(v58);
        _os_log_impl( &dword_0,  v54,  v55,  "AcousticIDFlow#errorDialog Could not properly create dialog %s, silently failing (privacy disclosure acknowledgement needed)",  v56,  0xCu);
        swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1LL, -1LL);
        swift_slowDealloc(v56, -1LL, -1LL);

        v190(v33, v29);
      }

      else
      {
        uint64_t v103 = v201;
        swift_errorRelease(v201);
        swift_errorRelease(v103);

        v49(v33, v29);
      }

      uint64_t v104 = v186;
      uint64_t v105 = (uint64_t)v193;
      swift_storeEnumTagMultiPayload(v193, v192, 5LL);
      uint64_t v106 = v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      swift_beginAccess(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v209, 33LL, 0LL);
      sub_133C88(v105, v106);
      swift_endAccess(&v209);
      uint64_t v107 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
      uint64_t v108 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
      sub_6EA8((void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v107);
      (*(void (**)(uint64_t, uint64_t))(v108 + 24))(v107, v108);
      uint64_t v110 = v199;
      uint64_t v109 = v200;
      uint64_t v111 = v183;
      ((void (*)(char *, void, uint64_t))v199[13])( v183,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v200);
      uint64_t v112 = v184;
      uint64_t v113 = v182;
      uint64_t v114 = v185;
      (*(void (**)(char *, void, void *))(v184 + 104))( v182,  enum case for AdditionalMetricsDescription.SourceFunction.pdanDlg(_:),  v185);
      swift_getErrorValue(v201, v208, v207);
      uint64_t v115 = Error.localizedDescription.getter(v207[1], v207[2]);
      uint64_t v117 = v116;
      __n128 v193 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v111,  v113,  v115,  v116,  3LL,  0LL);
      uint64_t v192 = v118;
      __n128 v119 = swift_bridgeObjectRelease(v117);
      (*(void (**)(char *, void *, __n128))(v112 + 8))(v113, v114, v119);
      ((void (*)(char *, uint64_t))v110[1])(v111, v109);
      uint64_t v120 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v200 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      sub_6EA8( (void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v120);
      uint64_t v121 = v181;
      (*(void (**)(char *, void, uint64_t))(v202 + 104))( v104,  enum case for TypeOfIntent.acousticID(_:),  v181);
      uint64_t v122 = v104;
      uint64_t v123 = enum case for ActivityType.failed(_:);
      uint64_t v124 = type metadata accessor for ActivityType(0LL);
      uint64_t v125 = *(void *)(v124 - 8);
      uint64_t v126 = (uint64_t)v187;
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 104))(v187, v123, v124);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v125 + 56))(v126, 0LL, 1LL, v124);
      uint64_t v127 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v128 = (uint64_t)v188;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56LL))(v188, 1LL, 1LL, v127);
      uint64_t v129 = enum case for SiriKitReliabilityCodes.renderingError(_:);
      uint64_t v130 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v131 = *(void *)(v130 - 8);
      uint64_t v132 = (uint64_t)v189;
      (*(void (**)(char *, uint64_t, uint64_t))(v131 + 104))(v189, v129, v130);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v131 + 56))(v132, 0LL, 1LL, v130);
      uint64_t v133 = v192;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v122,  v126,  v128,  v132,  v193,  v192,  v120,  v200);
      swift_bridgeObjectRelease(v133);
      sub_1F6CC(v132, &qword_2845A0);
      sub_1F6CC(v128, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v126, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v122, v121);
      uint64_t v134 = v195;
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      v196(v134);
      swift_release(v203);
      swift_errorRelease(v201);
      return (*(uint64_t (**)(char *, uint64_t))(v197 + 8))(v134, v198);
    }

    else
    {
      v190 = v49;
      uint64_t v69 = *(int *)(v191 + 48);
      uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v171 = *(void *)(v70 - 8);
      uint64_t v71 = v201;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v171 + 32))(v201, v28, v70);
      uint64_t v72 = *(void **)((char *)v28 + v69);
      *(void *)(v71 + v69) = v72;
      uint64_t v73 = v178;
      if (v178)
      {
        uint64_t v75 = v199;
        uint64_t v74 = v200;
        uint64_t v76 = v183;
        ((void (*)(char *, void, uint64_t))v199[13])( v183,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v200);
        uint64_t v77 = v184;
        uint64_t v78 = v182;
        uint64_t v79 = v185;
        (*(void (**)(char *, void, void *))(v184 + 104))( v182,  enum case for AdditionalMetricsDescription.SourceFunction.pdanDlg(_:),  v185);
        id v80 = v72;
        uint64_t v178 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v76,  v78,  v175,  v73,  1LL,  0LL);
        uint64_t v175 = v81;
        (*(void (**)(char *, void *))(v77 + 8))(v78, v79);
        ((void (*)(char *, uint64_t))v75[1])(v76, v74);
        uint64_t v82 = *(void *)(v203
                        + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                        + 24);
        uint64_t v200 = *(void *)(v203
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                         + 32);
        uint64_t v199 = sub_6EA8( (void *)(v203 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v82);
        uint64_t v83 = v186;
        (*(void (**)(char *, void, uint64_t))(v202 + 104))( v186,  enum case for TypeOfIntent.acousticID(_:),  v181);
        uint64_t v84 = enum case for ActivityType.failed(_:);
        uint64_t v85 = type metadata accessor for ActivityType(0LL);
        uint64_t v86 = *(void *)(v85 - 8);
        uint64_t v87 = (uint64_t)v187;
        (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v187, v84, v85);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v87, 0LL, 1LL, v85);
        __int128 v88 = v188;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v188, 1LL, 1LL, v70);
        uint64_t v89 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v90 = *(void *)(v89 - 8);
        uint64_t v91 = (uint64_t)v189;
        (*(void (**)(void))(v90 + 104))();
        uint64_t v92 = v89;
        uint64_t v93 = (uint64_t)v88;
        uint64_t v94 = v83;
        uint64_t v95 = v175;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v91, 0LL, 1LL, v92);
        uint64_t v96 = v94;
        uint64_t v97 = v87;
        uint64_t v98 = v93;
        uint64_t v99 = v91;
        uint64_t v100 = v178;
        uint64_t v101 = v95;
        uint64_t v102 = (void *)v82;
      }

      else
      {
        uint64_t v135 = v183;
        ((void (*)(char *, void, uint64_t))v199[13])( v183,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v200);
        uint64_t v136 = v184;
        uint64_t v137 = v182;
        uint64_t v138 = v185;
        (*(void (**)(char *, void, void *))(v184 + 104))( v182,  enum case for AdditionalMetricsDescription.SourceFunction.pdanDlg(_:),  v185);
        uint64_t v139 = v173;
        (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v19, v174, v173);
        id v140 = v72;
        uint64_t v141 = String.init<A>(describing:)(v19, v139);
        uint64_t v143 = v142;
        uint64_t v178 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v135,  v137,  v141,  v142,  2LL,  0LL);
        uint64_t v95 = v144;
        __n128 v145 = swift_bridgeObjectRelease(v143);
        (*(void (**)(char *, void *, __n128))(v136 + 8))(v137, v138, v145);
        ((void (*)(char *, uint64_t))v199[1])(v135, v200);
        uint64_t v146 = *(void *)(v203
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                         + 32);
        uint64_t v199 = *(void **)(v203
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                          + 24);
        uint64_t v200 = v146;
        uint64_t v185 = sub_6EA8( (void *)(v203 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  (uint64_t)v199);
        uint64_t v147 = v186;
        (*(void (**)(char *, void, uint64_t))(v202 + 104))( v186,  enum case for TypeOfIntent.acousticID(_:),  v181);
        uint64_t v148 = enum case for ActivityType.failed(_:);
        uint64_t v149 = type metadata accessor for ActivityType(0LL);
        uint64_t v150 = *(void *)(v149 - 8);
        uint64_t v151 = v187;
        (*(void (**)(char *, uint64_t, uint64_t))(v150 + 104))(v187, v148, v149);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v151, 0LL, 1LL, v149);
        uint64_t v152 = v188;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v188, 1LL, 1LL, v70);
        uint64_t v153 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v154 = *(void *)(v153 - 8);
        uint64_t v91 = (uint64_t)v189;
        (*(void (**)(void))(v154 + 104))();
        uint64_t v155 = v153;
        uint64_t v93 = (uint64_t)v152;
        uint64_t v87 = (uint64_t)v151;
        uint64_t v94 = v147;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v154 + 56))(v91, 0LL, 1LL, v155);
        uint64_t v96 = v147;
        uint64_t v97 = v87;
        uint64_t v98 = v93;
        uint64_t v99 = v91;
        uint64_t v100 = v178;
        uint64_t v101 = v95;
        uint64_t v102 = v199;
      }

      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v96,  v97,  v98,  v99,  v100,  v101,  v102,  v200);
      swift_bridgeObjectRelease(v95);
      sub_1F6CC(v91, &qword_2845A0);
      sub_1F6CC(v93, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v87, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v94, v181);
      uint64_t v156 = *(int *)(v191 + 48);
      uint64_t v157 = v171;
      uint64_t v158 = (uint64_t)v179;
      (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v179, v201, v70);
      *(void *)(v158 + v156) = v72;
      uint64_t v159 = v203;
      sub_12E124(v158, v72);

      (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v158, v70);
      uint64_t v160 = v180;
      uint64_t v161 = ((uint64_t (*)(char *, uint64_t, uint64_t))v177)(v180, v176, v29);
      uint64_t v162 = (os_log_s *)Logger.logObject.getter(v161);
      os_log_type_t v163 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v162, v163))
      {
        uint64_t v164 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v164 = 0;
        _os_log_impl( &dword_0,  v162,  v163,  "AcousticIDFlow#errorDialog Dialog successfully generated, responding and exiting (privacy disclosure acknowledgement needed)",  v164,  2u);
        swift_slowDealloc(v164, -1LL, -1LL);
      }

      v190(v160, v29);
      uint64_t v165 = (uint64_t)v193;
      swift_storeEnumTagMultiPayload(v193, v192, 5LL);
      uint64_t v166 = v159 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      swift_beginAccess(v159 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v209, 33LL, 0LL);
      sub_133C88(v165, v166);
      swift_endAccess(&v209);
      uint64_t v167 = *(void *)(v159 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
      uint64_t v168 = *(void *)(v159 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
      sub_6EA8((void *)(v159 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v167);
      (*(void (**)(uint64_t, uint64_t))(v168 + 24))(v167, v168);
      id v169 = v195;
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      v196(v169);
      swift_release(v159);
      (*(void (**)(char *, uint64_t))(v197 + 8))(v169, v198);
      return sub_1F6CC(v201, &qword_289340);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v63 = sub_6960(v29, (uint64_t)qword_2969E0);
    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v40, v63, v29);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl( &dword_0,  v65,  v66,  "AcousticIDFlow#errorDialog self deallocated prematurely (privacy disclosure acknowledgement needed)",  v67,  2u);
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v40, v29);
  }

uint64_t sub_12CDE4( void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v191 = a7;
  __n128 v193 = a6;
  uint64_t v171 = a5;
  uint64_t v175 = a4;
  uint64_t v172 = a3;
  uint64_t v187 = a1;
  uint64_t v195 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v194 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v192 = (char *)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v189 = type metadata accessor for AcousticIDFlow.State(0LL);
  __chkstk_darwin(v189);
  v190 = (char *)&v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v10);
  v186 = (char *)&v169 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v185 = (char *)&v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v184 = (char *)&v169 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v199 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v183 = (char *)&v169 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v170 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v170);
  uint64_t v19 = (char *)&v169 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v182 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v181 = *(v182 - 1);
  __chkstk_darwin(v182);
  BOOL v179 = (char *)&v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  os_log_type_t v196 = *(void **)(v21 - 8);
  uint64_t v197 = v21;
  __chkstk_darwin(v21);
  uint64_t v180 = (char *)&v169 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v188 = sub_6C5C(&qword_289340);
  uint64_t v23 = __chkstk_darwin(v188);
  uint64_t v176 = (char *)&v169 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v198 = (uint64_t)&v169 - v25;
  uint64_t v26 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v169 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v29 = type metadata accessor for Logger(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  char v33 = (char *)&v169 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v31);
  v177 = (char *)&v169 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v169 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v169 - v39;
  a2 += 16LL;
  swift_beginAccess(a2, v208, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v200 = Strong;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v42 = sub_6960(v29, (uint64_t)qword_2969E0);
    unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    uint64_t v173 = v42;
    uint64_t v174 = v43;
    uint64_t v44 = ((uint64_t (*)(char *))v43)(v38);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v178 = v16;
    if (v47)
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_0, v45, v46, "AcousticIDFlow#errorDialog", v48, 2u);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    uint64_t v49 = *(void (**)(char *, uint64_t))(v30 + 8);
    v49(v38, v29);
    sub_FF10((uint64_t)v187, (uint64_t)v28, (uint64_t *)&unk_286BB0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v26);
    uint64_t v51 = v200;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v52 = *v28;
      v174(v33, v173, v29);
      swift_errorRetain(v52);
      uint64_t v198 = v52;
      uint64_t v53 = swift_errorRetain(v52);
      uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
      os_log_type_t v55 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v54, v55))
      {
        unint64_t v56 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v57 = swift_slowAlloc(32LL, -1LL);
        uint64_t v203 = v57;
        uint64_t v187 = v49;
        *(_DWORD *)unint64_t v56 = 136315138;
        uint64_t v58 = v198;
        swift_getErrorValue(v198, v202, v201);
        uint64_t v206 = Error.localizedDescription.getter(v201[1], v201[2]);
        uint64_t v207 = v59;
        uint64_t v60 = String.init<A>(_:)( &v206,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v62 = v61;
        uint64_t v206 = sub_6978(v60, v61, &v203);
        uint64_t v51 = v200;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v206, &v207);
        swift_bridgeObjectRelease(v62);
        swift_errorRelease(v58);
        swift_errorRelease(v58);
        _os_log_impl( &dword_0,  v54,  v55,  "AcousticIDFlow#errorDialog Could not properly create dialog %s, silently failing",  v56,  0xCu);
        swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1LL, -1LL);
        swift_slowDealloc(v56, -1LL, -1LL);

        v187(v33, v29);
      }

      else
      {
        uint64_t v103 = v198;
        swift_errorRelease(v198);
        swift_errorRelease(v103);

        v49(v33, v29);
      }

      uint64_t v104 = v183;
      uint64_t v105 = (uint64_t)v190;
      swift_storeEnumTagMultiPayload(v190, v189, 5LL);
      uint64_t v106 = v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      swift_beginAccess(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v206, 33LL, 0LL);
      sub_133C88(v105, v106);
      swift_endAccess(&v206);
      uint64_t v107 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
      uint64_t v108 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
      sub_6EA8((void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v107);
      (*(void (**)(uint64_t, uint64_t))(v108 + 24))(v107, v108);
      uint64_t v110 = v196;
      uint64_t v109 = v197;
      uint64_t v111 = v180;
      ((void (*)(char *, void, uint64_t))v196[13])( v180,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v197);
      uint64_t v112 = v181;
      uint64_t v113 = v179;
      uint64_t v114 = v182;
      (*(void (**)(char *, void, void *))(v181 + 104))( v179,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v182);
      swift_getErrorValue(v198, v205, v204);
      uint64_t v115 = Error.localizedDescription.getter(v204[1], v204[2]);
      uint64_t v117 = v116;
      v190 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v111,  v113,  v115,  v116,  3LL,  0LL);
      uint64_t v189 = v118;
      __n128 v119 = swift_bridgeObjectRelease(v117);
      (*(void (**)(char *, void *, __n128))(v112 + 8))(v113, v114, v119);
      ((void (*)(char *, uint64_t))v110[1])(v111, v109);
      uint64_t v120 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v197 = *(void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      sub_6EA8( (void *)(v51 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v120);
      uint64_t v121 = v178;
      (*(void (**)(char *, void, uint64_t))(v199 + 104))( v104,  enum case for TypeOfIntent.acousticID(_:),  v178);
      uint64_t v122 = v104;
      uint64_t v123 = enum case for ActivityType.failed(_:);
      uint64_t v124 = type metadata accessor for ActivityType(0LL);
      uint64_t v125 = *(void *)(v124 - 8);
      uint64_t v126 = (uint64_t)v184;
      (*(void (**)(char *, uint64_t, uint64_t))(v125 + 104))(v184, v123, v124);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v125 + 56))(v126, 0LL, 1LL, v124);
      uint64_t v127 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v128 = (uint64_t)v185;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56LL))(v185, 1LL, 1LL, v127);
      uint64_t v129 = enum case for SiriKitReliabilityCodes.renderingError(_:);
      uint64_t v130 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v131 = *(void *)(v130 - 8);
      uint64_t v132 = (uint64_t)v186;
      (*(void (**)(char *, uint64_t, uint64_t))(v131 + 104))(v186, v129, v130);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v131 + 56))(v132, 0LL, 1LL, v130);
      uint64_t v133 = v189;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v122,  v126,  v128,  v132,  v190,  v189,  v120,  v197);
      swift_bridgeObjectRelease(v133);
      sub_1F6CC(v132, &qword_2845A0);
      sub_1F6CC(v128, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v126, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v122, v121);
      uint64_t v134 = v192;
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      v193(v134);
      swift_release(v200);
      swift_errorRelease(v198);
      return (*(uint64_t (**)(char *, uint64_t))(v194 + 8))(v134, v195);
    }

    else
    {
      uint64_t v187 = v49;
      uint64_t v69 = *(int *)(v188 + 48);
      uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v169 = *(void *)(v70 - 8);
      uint64_t v71 = v198;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v169 + 32))(v198, v28, v70);
      uint64_t v72 = *(void **)((char *)v28 + v69);
      *(void *)(v71 + v69) = v72;
      uint64_t v73 = v175;
      if (v175)
      {
        uint64_t v75 = v196;
        uint64_t v74 = v197;
        uint64_t v76 = v180;
        ((void (*)(char *, void, uint64_t))v196[13])( v180,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v197);
        uint64_t v77 = v181;
        uint64_t v78 = v179;
        uint64_t v79 = v182;
        (*(void (**)(char *, void, void *))(v181 + 104))( v179,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v182);
        id v80 = v72;
        uint64_t v175 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v76,  v78,  v172,  v73,  1LL,  0LL);
        uint64_t v172 = v81;
        (*(void (**)(char *, void *))(v77 + 8))(v78, v79);
        ((void (*)(char *, uint64_t))v75[1])(v76, v74);
        uint64_t v82 = *(void *)(v200
                        + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                        + 24);
        uint64_t v197 = *(void *)(v200
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                         + 32);
        os_log_type_t v196 = sub_6EA8( (void *)(v200 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v82);
        uint64_t v83 = v183;
        (*(void (**)(char *, void, uint64_t))(v199 + 104))( v183,  enum case for TypeOfIntent.acousticID(_:),  v178);
        uint64_t v84 = enum case for ActivityType.failed(_:);
        uint64_t v85 = type metadata accessor for ActivityType(0LL);
        uint64_t v86 = *(void *)(v85 - 8);
        uint64_t v87 = (uint64_t)v184;
        (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v184, v84, v85);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v87, 0LL, 1LL, v85);
        __int128 v88 = v185;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v185, 1LL, 1LL, v70);
        uint64_t v89 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v90 = *(void *)(v89 - 8);
        uint64_t v91 = (uint64_t)v186;
        (*(void (**)(void))(v90 + 104))();
        uint64_t v92 = v89;
        uint64_t v93 = (uint64_t)v88;
        uint64_t v94 = v83;
        uint64_t v95 = v172;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v91, 0LL, 1LL, v92);
        uint64_t v96 = v94;
        uint64_t v97 = v87;
        uint64_t v98 = v93;
        uint64_t v99 = v91;
        uint64_t v100 = v175;
        uint64_t v101 = v95;
        uint64_t v102 = (void *)v82;
      }

      else
      {
        uint64_t v135 = v180;
        ((void (*)(char *, void, uint64_t))v196[13])( v180,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v197);
        uint64_t v136 = v181;
        uint64_t v137 = v179;
        uint64_t v138 = v182;
        (*(void (**)(char *, void, void *))(v181 + 104))( v179,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v182);
        sub_FF10(v171, (uint64_t)v19, &qword_28A680);
        id v139 = v72;
        uint64_t v140 = String.init<A>(describing:)(v19, v170);
        uint64_t v142 = v141;
        uint64_t v175 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v135,  v137,  v140,  v141,  2LL,  0LL);
        uint64_t v95 = v143;
        __n128 v144 = swift_bridgeObjectRelease(v142);
        (*(void (**)(char *, void *, __n128))(v136 + 8))(v137, v138, v144);
        ((void (*)(char *, uint64_t))v196[1])(v135, v197);
        uint64_t v145 = *(void *)(v200
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                         + 32);
        os_log_type_t v196 = *(void **)(v200
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider
                          + 24);
        uint64_t v197 = v145;
        v182 = sub_6EA8( (void *)(v200 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  (uint64_t)v196);
        uint64_t v146 = v183;
        (*(void (**)(char *, void, uint64_t))(v199 + 104))( v183,  enum case for TypeOfIntent.acousticID(_:),  v178);
        uint64_t v147 = enum case for ActivityType.failed(_:);
        uint64_t v148 = type metadata accessor for ActivityType(0LL);
        uint64_t v149 = *(void *)(v148 - 8);
        uint64_t v150 = v184;
        (*(void (**)(char *, uint64_t, uint64_t))(v149 + 104))(v184, v147, v148);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v150, 0LL, 1LL, v148);
        uint64_t v151 = v185;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v185, 1LL, 1LL, v70);
        uint64_t v152 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v153 = *(void *)(v152 - 8);
        uint64_t v91 = (uint64_t)v186;
        (*(void (**)(void))(v153 + 104))();
        uint64_t v154 = v152;
        uint64_t v93 = (uint64_t)v151;
        uint64_t v87 = (uint64_t)v150;
        uint64_t v94 = v146;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v91, 0LL, 1LL, v154);
        uint64_t v96 = v146;
        uint64_t v97 = v87;
        uint64_t v98 = v93;
        uint64_t v99 = v91;
        uint64_t v100 = v175;
        uint64_t v101 = v95;
        uint64_t v102 = v196;
      }

      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v96,  v97,  v98,  v99,  v100,  v101,  v102,  v197);
      swift_bridgeObjectRelease(v95);
      sub_1F6CC(v91, &qword_2845A0);
      sub_1F6CC(v93, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v87, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v94, v178);
      uint64_t v155 = *(int *)(v188 + 48);
      uint64_t v156 = v169;
      uint64_t v157 = (uint64_t)v176;
      (*(void (**)(char *, uint64_t, uint64_t))(v169 + 16))(v176, v198, v70);
      *(void *)(v157 + v155) = v72;
      uint64_t v158 = v200;
      sub_12E124(v157, v72);

      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v157, v70);
      uint64_t v159 = v177;
      uint64_t v160 = ((uint64_t (*)(char *, uint64_t, uint64_t))v174)(v177, v173, v29);
      uint64_t v161 = (os_log_s *)Logger.logObject.getter(v160);
      os_log_type_t v162 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v161, v162))
      {
        os_log_type_t v163 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v163 = 0;
        _os_log_impl( &dword_0,  v161,  v162,  "AcousticIDFlow#errorDialog Dialog successfully generated, responding and exiting",  v163,  2u);
        swift_slowDealloc(v163, -1LL, -1LL);
      }

      v187(v159, v29);
      uint64_t v164 = (uint64_t)v190;
      swift_storeEnumTagMultiPayload(v190, v189, 5LL);
      uint64_t v165 = v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state;
      swift_beginAccess(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state, &v206, 33LL, 0LL);
      sub_133C88(v164, v165);
      swift_endAccess(&v206);
      uint64_t v166 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 24);
      uint64_t v167 = *(void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer + 32);
      sub_6EA8((void *)(v158 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer), v166);
      (*(void (**)(uint64_t, uint64_t))(v167 + 24))(v166, v167);
      uint64_t v168 = v192;
      static ExecuteResponse.ongoing(requireInput:)(0LL);
      v193(v168);
      swift_release(v158);
      (*(void (**)(char *, uint64_t))(v194 + 8))(v168, v195);
      return sub_1F6CC(v198, &qword_289340);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v63 = sub_6960(v29, (uint64_t)qword_2969E0);
    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v40, v63, v29);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_0, v65, v66, "AcousticIDFlow#errorDialog self deallocated prematurely", v67, 2u);
      swift_slowDealloc(v67, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v40, v29);
  }

uint64_t sub_12DF98(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return swift_task_switch(sub_12DFB0, 0LL, 0LL);
}

uint64_t sub_12DFB0()
{
  uint64_t v1 = *(void *)(v0 + 88) + 16LL;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  uint64_t v3 = Strong;
  if (Strong)
  {
    sub_157C4(Strong + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamSessionManager, v0 + 16);
    swift_release(v3);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 48);
    sub_6EA8((void *)(v0 + 16), v4);
    uint64_t v6 = (void *)swift_task_alloc(async function pointer to dispatch thunk of ShazamSessionManaging.sessionIDString()[1]);
    *(void *)(v0 + 96) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_12E088;
    return dispatch thunk of ShazamSessionManaging.sessionIDString()(v4, v5);
  }

  else
  {
    uint64_t v8 = *(void **)(v0 + 80);
    void *v8 = 0LL;
    v8[1] = 0LL;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_12E088(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 96);
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_12E0E4, 0LL, 0LL);
}

uint64_t sub_12E0E4()
{
  *(_OWORD *)*(void *)(v0 + 80) = *(_OWORD *)(v0 + 104);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_12E124(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v49 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v47 = *(void *)(v14 - 8);
  os_log_type_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v46(v13, a1, v14);
  *(void *)&v13[*(int *)(v9 + 48)] = a2;
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 24);
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider + 32);
  sub_6EA8((void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider), v15);
  id v17 = a2;
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v15, v16) & 1) != 0)
  {
    uint64_t v44 = v2;
    id v45 = v17;
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v18 = sub_6960(v6, (uint64_t)qword_2969E0);
    uint64_t v19 = v49;
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 16))(v8, v18, v6);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v24 = swift_slowAlloc(32LL, -1LL);
      uint64_t v43 = v24;
      uint64_t v51 = v24;
      *(_DWORD *)uint64_t v23 = 136446210;
      uint64_t v42 = v23 + 4;
      uint64_t v25 = static Insights.responseFramework.getter(v24);
      unint64_t v27 = v26;
      uint64_t v50 = sub_6978(v25, v26, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
      swift_bridgeObjectRelease(v27);
      _os_log_impl(&dword_0, v21, v22, "AcousticIDFlow#publishCancelOutputWithRF... %{public}s", v23, 0xCu);
      uint64_t v28 = v43;
      swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v6);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
    }

    uint64_t v34 = v44;
    uint64_t v35 = sub_6EA8( (void *)(v44 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_outputProvider),  *(void *)(v44 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_outputProvider + 24));
    uint64_t v36 = *(int *)(v9 + 48);
    uint64_t v37 = (uint64_t)v48;
    v46(v48, (uint64_t)v13, v14);
    uint64_t v38 = v45;
    *(void *)(v37 + v36) = v45;
    uint64_t v39 = swift_allocObject(&unk_270390, 24LL, 7LL);
    swift_weakInit(v39 + 16, v34);
    uint64_t v40 = (void *)*v35;
    id v41 = v38;
    sub_179D28(v37, v41, v40, v39);

    sub_1F6CC((uint64_t)v13, &qword_289340);
    swift_release(v39);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v37, v14);
  }

  else
  {
    uint64_t v29 = (void *)dispatch thunk of ViewFactory.makeCancellationView(cancelTemplate:snippets:canUseServerTTS:)( v13,  _swiftEmptyArrayStorage,  0LL);
    uint64_t v30 = (void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_aceServiceInvokerAsync);
    uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_aceServiceInvokerAsync + 24);
    uint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_aceServiceInvokerAsync + 32);
    sub_6EA8(v30, v31);
    AceServiceInvokerAsync.submitAndForget(_:)(v29, v31, v32);

    return sub_1F6CC((uint64_t)v13, &qword_289340);
  }

uint64_t sub_12E500(uint64_t a1, uint64_t a2)
{
  uint64_t v110 = a1;
  uint64_t v3 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v3);
  __n128 v119 = (char *)v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v5);
  uint64_t v117 = (char *)v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v7);
  uint64_t v116 = (char *)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v118 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v120 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v115 = (char *)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v112 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v15 = (char *)v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v113 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v111 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  id v17 = (char *)v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  os_log_type_t v22 = (char *)v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v104 - v23;
  a2 += 16LL;
  swift_beginAccess(a2, v130, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v26 = Strong;
    sub_FF10(v110, (uint64_t)&v128, (uint64_t *)&unk_286C60);
    uint64_t v109 = v26;
    if ((v129 & 1) != 0)
    {
      uint64_t v27 = v128;
      if (qword_283890 != -1) {
        swift_once(&qword_283890, sub_BFCDC);
      }
      uint64_t v28 = sub_6960(v18, (uint64_t)qword_2969E0);
      uint64_t v29 = v19;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v28, v18);
      swift_errorRetain(v27);
      uint64_t v30 = swift_errorRetain(v27);
      uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.error.getter();
      int v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v34 = swift_slowAlloc(22LL, -1LL);
        uint64_t v108 = v29;
        uint64_t v35 = v34;
        uint64_t v107 = swift_slowAlloc(64LL, -1LL);
        uint64_t v125 = v107;
        *(_DWORD *)uint64_t v35 = 136315394;
        v104[1] = v35 + 4;
        swift_getErrorValue(v27, v124, v123);
        os_log_t v106 = v31;
        uint64_t v121 = Error.localizedDescription.getter(v123[1], v123[2]);
        v122[0] = v36;
        uint64_t v37 = v27;
        uint64_t v38 = String.init<A>(_:)( &v121,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v40 = v39;
        uint64_t v121 = sub_6978(v38, v39, &v125);
        int v105 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122);
        swift_bridgeObjectRelease(v40);
        swift_errorRelease(v27);
        uint64_t v41 = swift_errorRelease(v27);
        *(_WORD *)(v35 + 12) = 2082;
        uint64_t v42 = static Insights.responseFramework.getter(v41);
        unint64_t v44 = v43;
        uint64_t v121 = sub_6978(v42, v43, &v125);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122);
        unint64_t v45 = v44;
        uint64_t v27 = v37;
        swift_bridgeObjectRelease(v45);
        os_log_t v46 = v106;
        _os_log_impl( &dword_0,  v106,  (os_log_type_t)v105,  "AcousticIDFlow#publishCancelOutput failed to create output %s  %{public}s",  (uint8_t *)v35,  0x16u);
        uint64_t v47 = v107;
        swift_arrayDestroy(v107, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1LL, -1LL);
        swift_slowDealloc(v35, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v108 + 8))(v22, v18);
      }

      else
      {
        swift_errorRelease(v27);
        swift_errorRelease(v27);

        (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v18);
      }

      uint64_t v110 = v27;
      uint64_t v81 = v111;
      uint64_t v82 = v113;
      (*(void (**)(char *, void, uint64_t))(v111 + 104))( v17,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v113);
      uint64_t v83 = v112;
      uint64_t v84 = v114;
      (*(void (**)(char *, void, uint64_t))(v112 + 104))( v15,  enum case for AdditionalMetricsDescription.SourceFunction.pubCnclOutput(_:),  v114);
      swift_getErrorValue(v27, v127, v126);
      uint64_t v85 = Error.localizedDescription.getter(v126[1], v126[2]);
      uint64_t v87 = v86;
      uint64_t v108 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v17,  v15,  v85,  v86,  0LL,  1LL);
      uint64_t v107 = v88;
      __n128 v89 = swift_bridgeObjectRelease(v87);
      (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v15, v84, v89);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v17, v82);
      uint64_t v90 = *(void *)(v26 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v114 = *(void *)(v26 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      sub_6EA8( (void *)(v26 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v90);
      uint64_t v91 = v115;
      uint64_t v92 = v118;
      (*(void (**)(char *, void, uint64_t))(v120 + 104))( v115,  enum case for TypeOfIntent.acousticID(_:),  v118);
      uint64_t v93 = enum case for ActivityType.failed(_:);
      uint64_t v94 = type metadata accessor for ActivityType(0LL);
      uint64_t v95 = *(void *)(v94 - 8);
      uint64_t v96 = (uint64_t)v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v95 + 104))(v116, v93, v94);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v96, 0LL, 1LL, v94);
      uint64_t v97 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v98 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56LL))(v117, 1LL, 1LL, v97);
      uint64_t v99 = enum case for SiriKitReliabilityCodes.renderingError(_:);
      uint64_t v100 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v101 = *(void *)(v100 - 8);
      uint64_t v102 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 104))(v119, v99, v100);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v102, 0LL, 1LL, v100);
      uint64_t v103 = v107;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v91,  v96,  v98,  v102,  v108,  v107,  v90,  v114);
      swift_release(v109);
      swift_bridgeObjectRelease(v103);
      swift_errorRelease(v110);
      sub_1F6CC(v102, &qword_2845A0);
      sub_1F6CC(v98, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v96, &qword_2845A8);
      return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v91, v92);
    }

    else
    {
      sub_FF54(&v128, (uint64_t)&v121);
      uint64_t v59 = v111;
      uint64_t v60 = v113;
      (*(void (**)(char *, void, uint64_t))(v111 + 104))( v17,  enum case for AdditionalMetricsDescription.ModuleName.aidf(_:),  v113);
      uint64_t v61 = v112;
      uint64_t v62 = v114;
      (*(void (**)(char *, void, uint64_t))(v112 + 104))( v15,  enum case for AdditionalMetricsDescription.SourceFunction.pubCnclOutput(_:),  v114);
      (*(void (**)(char *, void, uint64_t))(v11 + 104))( v13,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v10);
      uint64_t v110 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v17,  v15,  v13,  0LL,  1LL);
      uint64_t v108 = v63;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v62);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
      uint64_t v64 = *(void *)(v26 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 24);
      uint64_t v114 = *(void *)(v26 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider + 32);
      sub_6EA8( (void *)(v26 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider),  v64);
      uint64_t v65 = v115;
      uint64_t v66 = v118;
      (*(void (**)(char *, void, uint64_t))(v120 + 104))( v115,  enum case for TypeOfIntent.acousticID(_:),  v118);
      uint64_t v67 = enum case for ActivityType.completed(_:);
      uint64_t v68 = type metadata accessor for ActivityType(0LL);
      uint64_t v69 = *(void *)(v68 - 8);
      uint64_t v70 = (uint64_t)v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 104))(v116, v67, v68);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v70, 0LL, 1LL, v68);
      uint64_t v71 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v72 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56LL))(v117, 1LL, 1LL, v71);
      uint64_t v73 = enum case for SiriKitReliabilityCodes.success(_:);
      uint64_t v74 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v75 = *(void *)(v74 - 8);
      uint64_t v76 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v119, v73, v74);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0LL, 1LL, v74);
      uint64_t v77 = v108;
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v65,  v70,  v72,  v76,  v110,  v108,  v64,  v114);
      swift_bridgeObjectRelease(v77);
      sub_1F6CC(v76, &qword_2845A0);
      sub_1F6CC(v72, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v70, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v120 + 8))(v65, v66);
      uint64_t v78 = v109;
      uint64_t v79 = *(void *)(v109 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 24);
      uint64_t v80 = *(void *)(v109 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher + 32);
      sub_6EA8((void *)(v109 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher), v79);
      dispatch thunk of OutputPublisher.publish(output:_:)(&v121, WHAError.rawValue.getter, 0LL, v79, v80);
      swift_release(v78);
      return sub_6C3C(&v121);
    }
  }

  else
  {
    if (qword_283890 != -1) {
      swift_once(&qword_283890, sub_BFCDC);
    }
    uint64_t v48 = sub_6960(v18, (uint64_t)qword_2969E0);
    uint64_t v49 = v19;
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v24, v48, v18);
    uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v54 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v128 = v54;
      *(_DWORD *)uint64_t v53 = 136446210;
      uint64_t v55 = static Insights.responseFramework.getter(v54);
      unint64_t v57 = v56;
      uint64_t v121 = sub_6978(v55, v56, (uint64_t *)&v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122);
      swift_bridgeObjectRelease(v57);
      _os_log_impl(&dword_0, v51, v52, "AcousticIDFlow#errorDialog self deallocated prematurely  %{public}s", v53, 0xCu);
      swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1LL, -1LL);
      swift_slowDealloc(v53, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v24, v18);
  }

uint64_t sub_12F0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969E0);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AcousticIDFlow#successfulMatchSnippet executing", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v17 = (void *)swift_allocObject(&unk_270340, 40LL, 7LL);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  uint64_t v18 = (void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider);
  uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider + 24);
  uint64_t v20 = v18[4];
  sub_6EA8(v18, v19);
  uint64_t v21 = swift_allocObject(&unk_270368, 32LL, 7LL);
  *(void *)(v21 + 16) = sub_132144;
  *(void *)(v21 + 24) = v17;
  swift_retain(a1);
  swift_retain(a3);
  swift_retain(v17);
  dispatch thunk of SubscriptionProviding.status(bypassingCache:completion:)(0LL, sub_132150, v21, v19, v20);
  swift_release(v17);
  return swift_release(v21);
}

uint64_t sub_12F2E0(int a1, void *a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v184 = a4;
  uint64_t v185 = a3;
  LODWORD(v18sub_6C3C(v0 + 3) = a1;
  uint64_t v177 = type metadata accessor for UUID(0LL);
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v175 = (char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_28A750);
  __chkstk_darwin(v6);
  uint64_t v174 = (char *)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v179 = type metadata accessor for Response(0LL);
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v180 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v171 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v171);
  uint64_t v164 = (uint64_t)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v192 = *(void *)(v10 - 8);
  uint64_t v193 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_type_t v162 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v172 = (char *)&v153 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v181 = (char *)&v153 - v16;
  __chkstk_darwin(v15);
  unint64_t v182 = (unint64_t)&v153 - v17;
  uint64_t matched = (int *)type metadata accessor for ShazamSuccessfulMatchModel(0LL);
  __chkstk_darwin(matched);
  uint64_t v20 = (uint64_t *)((char *)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = a2[2];
  uint64_t v22 = a2[3];
  uint64_t v24 = a2[4];
  uint64_t v23 = a2[5];
  uint64_t v25 = a2[7];
  uint64_t v26 = a2[8];
  uint64_t v186 = a2[6];
  uint64_t v187 = v26;
  uint64_t v27 = a2[14];
  uint64_t v188 = a2[9];
  uint64_t v189 = v27;
  uint64_t v28 = a2[10];
  uint64_t v190 = a2[15];
  uint64_t v191 = v28;
  uint64_t v194 = a2[11];
  *(void *)&__int128 v195 = v22;
  uint64_t v29 = (uint64_t)v20 + matched[10];
  uint64_t v165 = (uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_appleMusicURL;
  sub_FF10((uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_appleMusicURL, v29, &qword_284628);
  uint64_t v30 = (uint64_t)v20 + matched[11];
  uint64_t v166 = (uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_webURL;
  sub_FF10((uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_webURL, v30, &qword_284628);
  uint64_t v31 = (uint64_t)v20 + matched[12];
  uint64_t v167 = (uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_artworkURL;
  sub_FF10((uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_artworkURL, v31, &qword_284628);
  uint64_t v32 = (uint64_t)v20 + matched[13];
  uint64_t v168 = (uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_videoURL;
  sub_FF10((uint64_t)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_videoURL, v32, &qword_284628);
  int v33 = *((unsigned __int8 *)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_explicitContent);
  uint64_t v34 = *(void *)((char *)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc);
  uint64_t v35 = *(void *)((char *)a2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14ShazamKitMatch_isrc + 8);
  uint64_t v173 = v21;
  *uint64_t v20 = v21;
  v20[1] = v22;
  uint64_t v163 = v24;
  v20[2] = v24;
  v20[3] = v23;
  v20[4] = v186;
  v20[5] = v25;
  uint64_t v36 = v188;
  v20[6] = v187;
  v20[7] = v36;
  uint64_t v37 = v190;
  v20[8] = v189;
  v20[9] = v37;
  uint64_t v38 = v194;
  v20[10] = v191;
  v20[11] = v38;
  uint64_t v39 = matched[14];
  int v169 = v33;
  *((_BYTE *)v20 + v39) = v33;
  unint64_t v40 = (uint64_t *)((char *)v20 + matched[15]);
  uint64_t v170 = v34;
  uint64_t *v40 = v34;
  v40[1] = v35;
  *((_BYTE *)v20 + matched[16]) = v183;
  uint64_t v41 = type metadata accessor for JSONEncoder(0LL);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  uint64_t v183 = v35;
  swift_bridgeObjectRetain(v35);
  uint64_t v42 = v23;
  swift_bridgeObjectRetain(v195);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v37);
  __n128 v43 = swift_bridgeObjectRetain(v38);
  uint64_t v44 = JSONEncoder.init()(v43);
  uint64_t v45 = sub_10430( &qword_28A758,  type metadata accessor for ShazamSuccessfulMatchModel,  (uint64_t)&protocol conformance descriptor for ShazamSuccessfulMatchModel);
  uint64_t v46 = dispatch thunk of JSONEncoder.encode<A>(_:)(v20, matched, v45);
  uint64_t v158 = 0LL;
  uint64_t v47 = v195;
  uint64_t v156 = v42;
  uint64_t v157 = v25;
  uint64_t v48 = v194;
  uint64_t v49 = v181;
  uint64_t v161 = v46;
  unint64_t v182 = v50;
  swift_release(v44);
  sub_132158((uint64_t)v20, type metadata accessor for ShazamSuccessfulMatchModel);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v51 = v193;
  uint64_t v52 = sub_6960(v193, (uint64_t)qword_2969E0);
  uint64_t v53 = v192;
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v192 + 16);
  uint64_t v160 = v52;
  uint64_t v159 = v54;
  ((void (*)(char *))v54)(v49);
  uint64_t v55 = swift_retain_n(a2, 24LL);
  unint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
  os_log_type_t v57 = static os_log_type_t.default.getter();
  int v58 = v57;
  BOOL v59 = os_log_type_enabled(v56, v57);
  uint64_t v60 = v173;
  if (v59)
  {
    uint64_t v61 = swift_slowAlloc(122LL, -1LL);
    os_log_t v154 = v56;
    uint64_t v62 = v61;
    uint64_t v155 = swift_slowAlloc(384LL, -1LL);
    uint64_t v197 = v47;
    uint64_t v198 = v155;
    *(_DWORD *)uint64_t v62 = 136317954;
    uint64_t v196 = v60;
    swift_bridgeObjectRetain(v47);
    uint64_t v63 = sub_6C5C(&qword_284600);
    uint64_t v64 = String.init<A>(describing:)(&v196, v63);
    unint64_t v66 = v65;
    uint64_t v196 = sub_6978(v64, v65, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v66);
    *(_WORD *)(v62 + 12) = 2080;
    uint64_t v196 = v163;
    uint64_t v197 = v156;
    swift_bridgeObjectRetain(v156);
    uint64_t v67 = String.init<A>(describing:)(&v196, v63);
    LODWORD(v195) = v58;
    unint64_t v69 = v68;
    uint64_t v196 = sub_6978(v67, v68, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v69);
    *(_WORD *)(v62 + 22) = 2080;
    uint64_t v196 = v186;
    uint64_t v197 = v157;
    swift_bridgeObjectRetain(v157);
    uint64_t v70 = String.init<A>(describing:)(&v196, v63);
    unint64_t v72 = v71;
    uint64_t v196 = sub_6978(v70, v71, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v72);
    *(_WORD *)(v62 + 32) = 2080;
    uint64_t v196 = v187;
    uint64_t v197 = v188;
    swift_bridgeObjectRetain(v188);
    uint64_t v73 = String.init<A>(describing:)(&v196, v63);
    unint64_t v75 = v74;
    uint64_t v196 = sub_6978(v73, v74, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v75);
    *(_WORD *)(v62 + 42) = 2080;
    uint64_t v196 = v189;
    uint64_t v197 = v190;
    swift_bridgeObjectRetain(v190);
    uint64_t v76 = String.init<A>(describing:)(&v196, v63);
    unint64_t v78 = v77;
    uint64_t v196 = sub_6978(v76, v77, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v78);
    *(_WORD *)(v62 + 52) = 2080;
    uint64_t v196 = v191;
    uint64_t v197 = v48;
    swift_bridgeObjectRetain(v48);
    uint64_t v79 = String.init<A>(describing:)(&v196, v63);
    unint64_t v81 = v80;
    uint64_t v196 = sub_6978(v79, v80, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v81);
    *(_WORD *)(v62 + 62) = 2080;
    uint64_t v82 = v164;
    sub_FF10(v165, v164, &qword_284628);
    uint64_t v83 = v171;
    uint64_t v84 = String.init<A>(describing:)(v82, v171);
    unint64_t v86 = v85;
    uint64_t v196 = sub_6978(v84, v85, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v86);
    *(_WORD *)(v62 + 72) = 2080;
    sub_FF10(v166, v82, &qword_284628);
    uint64_t v87 = String.init<A>(describing:)(v82, v83);
    unint64_t v89 = v88;
    uint64_t v196 = sub_6978(v87, v88, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v89);
    *(_WORD *)(v62 + 82) = 2080;
    sub_FF10(v167, v82, &qword_284628);
    uint64_t v90 = String.init<A>(describing:)(v82, v83);
    unint64_t v92 = v91;
    uint64_t v196 = sub_6978(v90, v91, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v92);
    *(_WORD *)(v62 + 92) = 2080;
    sub_FF10(v168, v82, &qword_284628);
    uint64_t v93 = v82;
    uint64_t v51 = v193;
    uint64_t v94 = String.init<A>(describing:)(v93, v83);
    unint64_t v96 = v95;
    uint64_t v196 = sub_6978(v94, v95, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v96);
    *(_WORD *)(v62 + 102) = 2080;
    LOBYTE(v196) = v169;
    uint64_t v97 = sub_6C5C(&qword_28A778);
    uint64_t v98 = String.init<A>(describing:)(&v196, v97);
    unint64_t v100 = v99;
    uint64_t v196 = sub_6978(v98, v99, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v100);
    *(_WORD *)(v62 + 112) = 2080;
    uint64_t v196 = v170;
    uint64_t v197 = v183;
    swift_bridgeObjectRetain(v183);
    uint64_t v101 = String.init<A>(describing:)(&v196, v63);
    unint64_t v103 = v102;
    uint64_t v196 = sub_6978(v101, v102, &v198);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197);
    swift_release_n(a2, 2LL);
    swift_bridgeObjectRelease(v103);
    os_log_t v104 = v154;
    _os_log_impl( &dword_0,  v154,  (os_log_type_t)v195,  "AcousticIDFlow#successfulMatchSnippet Logs skID: %s title: %s subtitle: %s artist: %s genre: %s appleMusicID: %s a ppleMusicURL: %s webURL: %s artworkURL: %s videoURL: %s explicitContent: %s isrc: %s...",  (uint8_t *)v62,  0x7Au);
    uint64_t v105 = v155;
    swift_arrayDestroy(v155, 12LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v105, -1LL, -1LL);
    swift_slowDealloc(v62, -1LL, -1LL);

    os_log_t v106 = *(void (**)(char *, uint64_t))(v192 + 8);
    v106(v181, v51);
  }

  else
  {

    swift_release_n(a2, 24LL);
    os_log_t v106 = *(void (**)(char *, uint64_t))(v53 + 8);
    v106(v49, v51);
  }

  uint64_t v107 = v158;
  uint64_t v108 = sub_6C5C(&qword_28A760);
  uint64_t v109 = swift_allocObject(v108, 72LL, 7LL);
  __int128 v195 = xmmword_214510;
  *(_OWORD *)(v109 + 16) = xmmword_214510;
  uint64_t v110 = sub_6C5C(&qword_28A768);
  uint64_t v111 = swift_allocObject(v110, 72LL, 7LL);
  *(_OWORD *)(v111 + 16) = v195;
  *(void *)(v111 + 56) = type metadata accessor for CustomCanvas(0LL);
  *(void *)(v111 + 64) = &protocol witness table for CustomCanvas;
  sub_10974((void *)(v111 + 32));
  uint64_t v112 = v161;
  unint64_t v113 = v182;
  sub_92560(v161, v182);
  BYTE2(v152) = 0;
  LOWORD(v152) = 0;
  CustomCanvas.init(bundleName:viewId:viewData:componentName:safeForLogging:requestsKeyWindow:hideConversationKeyline:)( 0x49556D617A616853LL,  0xEE006E6967756C50LL,  0x6673736563637553LL,  0xEF686374614D6C75LL,  v112,  v113,  0LL,  0xE000000000000000LL,  v152);
  uint64_t v114 = type metadata accessor for Visibility(0LL);
  uint64_t v115 = v174;
  uint64_t v116 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56LL))( v174,  1LL,  1LL,  v114);
  uint64_t v117 = static _ProtoResponse.LevelOfDetail.allCases.getter(v116);
  uint64_t v118 = sub_132194(v117);
  __n128 v119 = swift_bridgeObjectRelease(v117);
  *(void *)(v109 + 56) = type metadata accessor for Section(0LL, v119);
  *(void *)(v109 + 64) = &protocol witness table for Section;
  sub_10974((void *)(v109 + 32));
  Section.init(_:levelOfDetail:_:)(v111, v118, v115);
  uint64_t v120 = v180;
  Response.init(_:backgrounds:ornaments:hideRedactedElements:)( v109,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  0LL);
  id v121 = [objc_allocWithZone(SAUIVisualResponseSnippet) init];
  uint64_t v122 = v175;
  uint64_t v123 = UUID.init()(v121);
  UUID.uuidString.getter(v123);
  uint64_t v125 = v124;
  (*(void (**)(char *, uint64_t))(v176 + 8))(v122, v177);
  NSString v126 = String._bridgeToObjectiveC()();
  objc_msgSend(v121, "setAceId:", v126, swift_bridgeObjectRelease(v125).n128_f64[0]);

  id v127 = v121;
  NSString v128 = String._bridgeToObjectiveC()();
  [v127 setViewId:v128];

  uint64_t v129 = sub_10430( &qword_28A770,  (uint64_t (*)(uint64_t))&type metadata accessor for Response,  (uint64_t)&protocol conformance descriptor for Response);
  uint64_t v130 = v179;
  uint64_t v131 = ProtobufBuilder.serializedData()(v179, v129);
  if (v107)
  {
    swift_errorRelease(v107);
    uint64_t v133 = v172;
    uint64_t v134 = v159(v172, v160, v51);
    uint64_t v135 = (os_log_s *)Logger.logObject.getter(v134);
    os_log_type_t v136 = static os_log_type_t.error.getter();
    BOOL v137 = os_log_type_enabled(v135, v136);
    uint64_t v138 = v178;
    if (v137)
    {
      id v139 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v139 = 0;
      _os_log_impl( &dword_0,  v135,  v136,  "AcousticIDFlow#successfulMatchSnippet Failed to generate modelData for View",  v139,  2u);
      uint64_t v140 = v139;
      uint64_t v133 = v172;
      swift_slowDealloc(v140, -1LL, -1LL);
    }

    v106(v133, v51);
    v185(0LL);

    sub_925A4(v161, v182);
    return (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v120, v130);
  }

  else
  {
    uint64_t v142 = v131;
    unint64_t v143 = v132;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v127 setModelData:isa];

    uint64_t v145 = v162;
    uint64_t v146 = v159(v162, v160, v51);
    uint64_t v147 = (os_log_s *)Logger.logObject.getter(v146);
    uint64_t v148 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v147, (os_log_type_t)v148))
    {
      uint64_t v149 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v149 = 0;
      _os_log_impl( &dword_0,  v147,  (os_log_type_t)v148,  "AcousticIDFlow#successfulMatchSnippet Successfully generate non-iOS view",  v149,  2u);
      uint64_t v150 = v149;
      uint64_t v120 = v180;
      swift_slowDealloc(v150, -1LL, -1LL);
    }

    v106(v145, v51);
    id v151 = v127;
    v185(v127);
    sub_925A4(v142, v143);

    sub_925A4(v161, v182);
    return (*(uint64_t (**)(char *, uint64_t))(v178 + 8))(v120, v130);
  }

uint64_t sub_130344(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MusicSubscriptionStatus(0LL);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v48 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = type metadata accessor for SubscriptionDetails(0LL);
  uint64_t v50 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 16);
  uint64_t v47 = a1;
  uint64_t v20 = v19(v13, a1, v11);
  uint64_t v21 = v15;
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v23 = static os_log_type_t.default.getter();
  uint64_t v46 = v11;
  os_log_type_t v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v43 = v21;
    uint64_t v25 = swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = a2;
    uint64_t v26 = (uint8_t *)v25;
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    uint64_t v42 = v27;
    uint64_t v52 = v27;
    uint64_t v44 = a3;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v41 = v26 + 4;
    SubscriptionDetails.musicSubscriptionStatus.getter(v27);
    uint64_t v28 = String.init<A>(describing:)(v10, v6);
    unint64_t v30 = v29;
    uint64_t v51 = sub_6978(v28, v29, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
    __n128 v31 = swift_bridgeObjectRelease(v30);
    (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v13, v46, v31);
    _os_log_impl(&dword_0, v22, v24, "AcousticIDFlow#checkSubscriptionStatus subscription status: %s", v26, 0xCu);
    uint64_t v32 = v42;
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    int v33 = v26;
    a2 = v45;
    swift_slowDealloc(v33, -1LL, -1LL);

    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v17, v14);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v46);

    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v17, v14);
  }

  SubscriptionDetails.musicSubscriptionStatus.getter(v34);
  uint64_t v36 = v48;
  uint64_t v35 = v49;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))( v48,  enum case for MusicSubscriptionStatus.subscribed(_:),  v6);
  uint64_t v37 = sub_10430( &qword_28A748,  (uint64_t (*)(uint64_t))&type metadata accessor for MusicSubscriptionStatus,  (uint64_t)&protocol conformance descriptor for MusicSubscriptionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v52, v6, v37);
  dispatch thunk of RawRepresentable.rawValue.getter(&v51, v6, v37);
  BOOL v38 = v52 == v51;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
  v39(v36, v6);
  v39(v10, v6);
  return a2(v38);
}

uint64_t sub_1306E8()
{
  return v0;
}

uint64_t sub_1307CC()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1307F0()
{
  return type metadata accessor for AcousticIDFlow(0LL);
}

uint64_t type metadata accessor for AcousticIDFlow(uint64_t a1)
{
  return sub_1E58C(a1, qword_28A420, (uint64_t)&nominal type descriptor for AcousticIDFlow);
}

void sub_13080C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4 = type metadata accessor for AcousticIDFlow.State(319LL);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      v6[2] = &unk_218718;
      v6[3] = &unk_218718;
      v6[4] = &unk_218730;
      v6[5] = &unk_218730;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[7] = &unk_218730;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[9] = &unk_218730;
      v6[10] = &unk_218730;
      v6[11] = &unk_218730;
      v6[12] = &unk_218730;
      v6[13] = &unk_218730;
      swift_updateClassMetadata2(a1, 256LL, 14LL, v6, a1 + 80);
    }
  }

uint64_t *sub_1308D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v12);
  }

  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      uint64_t v14 = a1;
      uint64_t v15 = a3;
      uint64_t v16 = 1LL;
LABEL_11:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    }

    if (!EnumCaseMultiPayload)
    {
      uint64_t v9 = type metadata accessor for PlaybackCodeAndDescription(0LL);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1LL, v9))
      {
        uint64_t v11 = sub_6C5C(&qword_28A680);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0LL, 1LL, v9);
      }

      uint64_t v14 = a1;
      uint64_t v15 = a3;
      uint64_t v16 = 0LL;
      goto LABEL_11;
    }

    memcpy(a1, a2, *(void *)(v5 + 64));
  }

  return a1;
}

uint64_t sub_130A08(void *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1) {
    return swift_release(*a1);
  }
  if (!(_DWORD)result)
  {
    uint64_t v3 = type metadata accessor for PlaybackCodeAndDescription(0LL);
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 48))(a1, 1LL, v3);
    if (!(_DWORD)result) {
      return (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(a1, v3);
    }
  }

  return result;
}

uint64_t *sub_130A94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    swift_retain(v10);
    uint64_t v11 = a1;
    uint64_t v12 = a3;
    uint64_t v13 = 1LL;
LABEL_9:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }

  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for PlaybackCodeAndDescription(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1LL, v7))
    {
      uint64_t v9 = sub_6C5C(&qword_28A680);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v11 = a1;
    uint64_t v12 = a3;
    uint64_t v13 = 0LL;
    goto LABEL_9;
  }

  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  return a1;
}

uint64_t *sub_130BA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_132158((uint64_t)a1, type metadata accessor for AcousticIDFlow.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *a2;
      *a1 = *a2;
      swift_retain(v10);
      uint64_t v11 = a1;
      uint64_t v12 = a3;
      uint64_t v13 = 1LL;
LABEL_10:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }

    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for PlaybackCodeAndDescription(0LL);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1LL, v7))
      {
        uint64_t v9 = sub_6C5C(&qword_28A680);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
      }

      uint64_t v11 = a1;
      uint64_t v12 = a3;
      uint64_t v13 = 0LL;
      goto LABEL_10;
    }

    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *sub_130CC4(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v6 = type metadata accessor for PlaybackCodeAndDescription(0LL);
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
    {
      uint64_t v8 = sub_6C5C(&qword_28A680);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
    }

    swift_storeEnumTagMultiPayload(a1, a3, 0LL);
  }

  return a1;
}

void *sub_130DAC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_132158((uint64_t)a1, type metadata accessor for AcousticIDFlow.State);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }

    else
    {
      uint64_t v6 = type metadata accessor for PlaybackCodeAndDescription(0LL);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
      {
        uint64_t v8 = sub_6C5C(&qword_28A680);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      }

      swift_storeEnumTagMultiPayload(a1, a3, 0LL);
    }
  }

  return a1;
}

uint64_t getEnumTagSinglePayload for BundleResolutionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t storeEnumTagSinglePayload for BundleResolutionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t sub_130EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

void sub_130ED8(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 256LL, 2LL, v4);
  }

uint64_t sub_130F54(uint64_t a1)
{
  uint64_t v3 = sub_6C5C(&qword_285BD0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v4);
  uint64_t v8 = &v15[-v7 - 8];
  uint64_t v9 = *v1;
  uint64_t v10 = type metadata accessor for Input(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v8, a1, v10);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  sub_45F6C((uint64_t)v8, (uint64_t)v6, &qword_285BD0);
  uint64_t v12 = v9 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_input;
  swift_beginAccess(v9 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_input, v15, 33LL, 0LL);
  sub_1B3B0((uint64_t)v6, v12);
  swift_endAccess(v15);
  return 1LL;
}

void sub_131070(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_131090(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AcousticIDFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_1310B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for _ProtoResponse.LevelOfDetail(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v3;
  uint64_t v11 = *(void *)(*v3 + 40LL);
  uint64_t v13 = sub_10430(&qword_28A780, v12, (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
  swift_bridgeObjectRetain(v10);
  uint64_t v37 = a2;
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  uint64_t v15 = -1LL << *(_BYTE *)(v10 + 32);
  unint64_t v16 = v14 & ~v15;
  uint64_t v17 = v10;
  uint64_t v18 = v10 + 56;
  if (((*(void *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
  {
    int v33 = v3;
    uint64_t v34 = a1;
    uint64_t v35 = ~v15;
    uint64_t v36 = v7;
    uint64_t v19 = *(void *)(v7 + 72);
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    while (1)
    {
      uint64_t v21 = v17;
      uint64_t v22 = v20;
      v20(v9, *(void *)(v17 + 48) + v19 * v16, v6);
      uint64_t v23 = sub_10430( &qword_28A788,  (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoResponse.LevelOfDetail,  (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v35;
      uint64_t v17 = v21;
      uint64_t v20 = v22;
      if (((*(void *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        uint64_t v3 = v33;
        a1 = v34;
        uint64_t v26 = v36;
        goto LABEL_7;
      }
    }

    __n128 v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(void *)(*v33 + 48LL) + v19 * v16, v6);
    return 0LL;
  }

  else
  {
    swift_bridgeObjectRelease(v10);
    uint64_t v20 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v26 = v7;
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v28 = v37;
    v20(v9, v37, v6);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000LL;
    sub_131314((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    uint64_t v29 = *v3;
    *uint64_t v3 = v38;
    __n128 v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1LL;
  }

uint64_t sub_131314(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  uint64_t v6 = type metadata accessor for _ProtoResponse.LevelOfDetail(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  if (v11 <= v10)
  {
    uint64_t v12 = v10 + 1;
    if ((a3 & 1) != 0) {
      sub_131A84(v12);
    }
    else {
      sub_131744(v12);
    }
    uint64_t v13 = *v3;
    uint64_t v14 = *(void *)(*v3 + 40);
    uint64_t v15 = sub_10430( &qword_28A780,  (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoResponse.LevelOfDetail,  (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
    uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
    uint64_t v17 = -1LL << *(_BYTE *)(v13 + 32);
    a2 = v16 & ~v17;
    if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
    {
      uint64_t v18 = ~v17;
      uint64_t v19 = *(void *)(v7 + 72);
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      do
      {
        v20(v9, *(void *)(v13 + 48) + v19 * a2, v6);
        uint64_t v21 = sub_10430( &qword_28A788,  (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoResponse.LevelOfDetail,  (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
        char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        if ((v22 & 1) != 0) {
          goto LABEL_14;
        }
        a2 = (a2 + 1) & v18;
      }

      while (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0);
    }
  }

  else if ((a3 & 1) == 0)
  {
    sub_131510();
  }

  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(*v29 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))( *(void *)(v24 + 48) + *(void *)(v7 + 72) * a2,  v23,  v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1LL);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }

  __break(1u);
LABEL_14:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void *sub_131510()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for _ProtoResponse.LevelOfDetail(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_6C5C(&qword_28A790);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)(*v0);
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release(v6);
LABEL_31:
    *uint64_t v1 = v8;
    return result;
  }

  uint64_t v25 = v1;
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1LL << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  int64_t v13 = 0LL;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1LL << *(_BYTE *)(v6 + 32);
  uint64_t v15 = -1LL;
  if (v14 < 64) {
    uint64_t v15 = ~(-1LL << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }

    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
      __break(1u);
      goto LABEL_33;
    }

    if (v21 >= v17) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_29;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_29;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v17) {
            goto LABEL_29;
          }
          unint64_t v22 = *(void *)(v10 + 8 * v13);
          if (!v22)
          {
            int64_t v13 = v21 + 4;
            if (v21 + 4 >= v17)
            {
LABEL_29:
              uint64_t result = (void *)swift_release(v6);
              uint64_t v1 = v25;
              goto LABEL_31;
            }

            unint64_t v22 = *(void *)(v10 + 8 * v13);
            int64_t v23 = v21 + 4;
            if (!v22) {
              break;
            }
          }
        }
      }
    }

uint64_t sub_131744(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for _ProtoResponse.LevelOfDetail(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_28A790);
  uint64_t v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0LL);
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = swift_release(v8);
LABEL_38:
    *uint64_t v2 = v10;
    return result;
  }

  uint64_t v11 = 1LL << *(_BYTE *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 56);
  uint64_t v35 = v2;
  uint64_t v36 = v8 + 56;
  if (v11 < 64) {
    uint64_t v13 = ~(-1LL << v11);
  }
  else {
    uint64_t v13 = -1LL;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 56;
  uint64_t result = swift_retain(v8);
  int64_t v17 = 0LL;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_27;
    }

    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v21 >= v37) {
      goto LABEL_36;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_36;
      }
      unint64_t v22 = *(void *)(v36 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v37) {
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v17);
        if (!v22)
        {
          int64_t v17 = v21 + 3;
          if (v21 + 3 >= v37) {
            goto LABEL_36;
          }
          unint64_t v22 = *(void *)(v36 + 8 * v17);
          if (!v22)
          {
            int64_t v17 = v21 + 4;
            if (v21 + 4 >= v37)
            {
LABEL_36:
              uint64_t result = swift_release_n(v8, 2LL);
              uint64_t v2 = v35;
              goto LABEL_38;
            }

            unint64_t v22 = *(void *)(v36 + 8 * v17);
            int64_t v23 = v21 + 4;
            if (!v22) {
              break;
            }
          }
        }
      }
    }

uint64_t sub_131A84(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for _ProtoResponse.LevelOfDetail(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_6C5C(&qword_28A790);
  uint64_t v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1LL);
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1LL << *(_BYTE *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v39 = (void *)(v7 + 56);
  if (v10 < 64) {
    uint64_t v12 = ~(-1LL << v10);
  }
  else {
    uint64_t v12 = -1LL;
  }
  unint64_t v13 = v12 & v11;
  int64_t v37 = v2;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v8 + 56;
  uint64_t result = swift_retain(v7);
  int64_t v16 = 0LL;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_27;
    }

    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1LL))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }

    if (v20 >= v38) {
      goto LABEL_36;
    }
    unint64_t v21 = v39[v20];
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v38) {
        goto LABEL_36;
      }
      unint64_t v21 = v39[v16];
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v38) {
          goto LABEL_36;
        }
        unint64_t v21 = v39[v16];
        if (!v21)
        {
          int64_t v16 = v20 + 3;
          if (v20 + 3 >= v38) {
            goto LABEL_36;
          }
          unint64_t v21 = v39[v16];
          if (!v21) {
            break;
          }
        }
      }
    }

uint64_t sub_131E08( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, __int128 *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  v56[3] = a14;
  v56[4] = a19;
  uint64_t v24 = sub_10974(v56);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32LL))(v24, a3, a14);
  v55[3] = a17;
  v55[4] = a22;
  uint64_t v25 = sub_10974(v55);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a17 - 8) + 32LL))(v25, a4, a17);
  uint64_t v53 = a13;
  uint64_t v54 = a18;
  uint64_t v26 = sub_10974(&v52);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32LL))(v26, a8, a13);
  uint64_t v50 = a16;
  uint64_t v51 = a21;
  uint64_t v27 = sub_10974(&v49);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a16 - 8) + 32LL))(v27, a9, a16);
  uint64_t v47 = a15;
  uint64_t v48 = a20;
  uint64_t v28 = sub_10974(&v46);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32LL))(v28, a10, a15);
  uint64_t v44 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v45 = &off_272868;
  *(void *)&__int128 v43 = a11;
  uint64_t v29 = a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_input;
  uint64_t v30 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v29, 1LL, 1LL, v30);
  *(_BYTE *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_enableLiveActivity) = 0;
  *(_BYTE *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_isInAmbient) = 0;
  swift_beginAccess(v29, v42, 33LL, 0LL);
  sub_11C1C(a1, v29);
  swift_endAccess(v42);
  sub_157C4((uint64_t)v56, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamKitRecognizer);
  sub_157C4((uint64_t)v55, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_shazamSessionManager);
  uint64_t v31 = type metadata accessor for AcousticIdCatDialogService();
  char v32 = (void *)swift_allocObject(v31, 56LL, 7LL);
  void v32[5] = 0xD000000000000010LL;
  v32[6] = 0x8000000000220D20LL;
  v32[2] = 0xD000000000000011LL;
  v32[3] = 0x800000000021D860LL;
  v32[4] = a6;
  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_acousticIdCatDialogService) = v32;
  sub_157C4((uint64_t)a5, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_aceServiceInvokerAsync);
  uint64_t v33 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  uint64_t v34 = ViewFactory.init(ttsEnabled:)(1LL);
  sub_6C3C(a5);
  sub_6C3C(v55);
  sub_6C3C(v56);
  sub_1F6CC(a1, &qword_285BD0);
  *(void *)(a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_viewFactory) = v34;
  sub_112780(a2, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_state);
  sub_FF54(a7, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_publisher);
  sub_FF54(&v52, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_siriKitTaskLoggingProvider);
  sub_FF54(&v49, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_subscriptionProvider);
  sub_FF54(&v46, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_featureFlagProvider);
  sub_FF54(&v43, a12 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin14AcousticIDFlow_outputProvider);
  return a12;
}

uint64_t sub_132144(int a1)
{
  return sub_12F2E0(a1, *(void **)(v1 + 16), *(void (**)(id))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_132150(uint64_t a1)
{
  return sub_130344(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_132158(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_132194(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _ProtoResponse.LevelOfDetail(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v11 = sub_10430(&qword_28A780, v10, (uint64_t)&protocol conformance descriptor for _ProtoResponse.LevelOfDetail);
  uint64_t result = Set.init(minimumCapacity:)(v9, v2, v11);
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v6, v13, v2);
      sub_1310B8((uint64_t)v8, (uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v14;
      --v9;
    }

    while (v9);
    return v17;
  }

  return result;
}

uint64_t sub_1322BC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_1322E0()
{
  uint64_t v0 = type metadata accessor for UUID(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v76 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_6C5C(&qword_28A750);
  __chkstk_darwin(v3);
  unint64_t v75 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for Response(0LL);
  uint64_t v74 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v77 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v72 = (char *)&v66 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v66 - v13);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v66 - v15;
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v17 = sub_6960(v6, (uint64_t)qword_2969E0);
  unint64_t v18 = *(uint64_t (**)(void))(v7 + 16);
  uint64_t v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v16, v17, v6);
  int64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    int64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    unint64_t v71 = v14;
    uint64_t v23 = v18;
    uint64_t v24 = v22;
    *(_WORD *)int64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "AcousticIDFlow#listeningSnippet executing", v22, 2u);
    uint64_t v25 = v24;
    unint64_t v18 = v23;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v16, v6);
  uint64_t v27 = type metadata accessor for JSONEncoder(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  uint64_t v28 = JSONEncoder.init()();
  unint64_t v29 = sub_1344FC();
  uint64_t v30 = dispatch thunk of JSONEncoder.encode<A>(_:)(v29, &type metadata for ShazamListeningModel, v29);
  unint64_t v32 = v31;
  uint64_t v67 = v18;
  unint64_t v69 = v26;
  uint64_t v33 = v30;
  swift_release(v28);
  uint64_t v34 = sub_6C5C(&qword_28A760);
  uint64_t v35 = swift_allocObject(v34, 72LL, 7LL);
  __int128 v70 = xmmword_214510;
  *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  unint64_t v71 = (void *)(v35 + 32);
  uint64_t v36 = sub_6C5C(&qword_28A768);
  uint64_t v37 = swift_allocObject(v36, 72LL, 7LL);
  *(_OWORD *)(v37 + swift_weakDestroy(v0 + 16) = v70;
  *(void *)(v37 + 56) = type metadata accessor for CustomCanvas(0LL);
  *(void *)(v37 + 64) = &protocol witness table for CustomCanvas;
  sub_10974((void *)(v37 + 32));
  sub_92560(v33, v32);
  BYTE2(v65) = 0;
  LOWORD(v65) = 0;
  uint64_t v68 = v33;
  *(void *)&__int128 v70 = v32;
  CustomCanvas.init(bundleName:viewId:viewData:componentName:safeForLogging:requestsKeyWindow:hideConversationKeyline:)( 0x49556D617A616853LL,  0xEE006E6967756C50LL,  0x6E696E657473694CLL,  0xE900000000000067LL,  v33,  v32,  0LL,  0xE000000000000000LL,  v65);
  uint64_t v38 = type metadata accessor for Visibility(0LL);
  uint64_t v39 = v75;
  uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v75, 1LL, 1LL, v38);
  uint64_t v41 = static _ProtoResponse.LevelOfDetail.allCases.getter(v40);
  uint64_t v42 = sub_132194(v41);
  __n128 v43 = swift_bridgeObjectRelease(v41);
  *(void *)(v35 + 56) = type metadata accessor for Section(0LL, v43);
  *(void *)(v35 + 64) = &protocol witness table for Section;
  sub_10974(v71);
  Section.init(_:levelOfDetail:_:)(v37, v42, v39);
  uint64_t v44 = v77;
  Response.init(_:backgrounds:ornaments:hideRedactedElements:)( v35,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  0LL);
  id v45 = [objc_allocWithZone(SAUIVisualResponseSnippet) init];
  __int128 v46 = v76;
  uint64_t v47 = UUID.init()(v45);
  UUID.uuidString.getter(v47);
  uint64_t v49 = v48;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v46, v0);
  NSString v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v45, "setAceId:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

  id v51 = v45;
  NSString v52 = String._bridgeToObjectiveC()();
  [v51 setViewId:v52];

  uint64_t v53 = sub_10430( &qword_28A770,  (uint64_t (*)(uint64_t))&type metadata accessor for Response,  (uint64_t)&protocol conformance descriptor for Response);
  uint64_t v54 = v78;
  uint64_t v56 = ProtobufBuilder.serializedData()(v78, v53);
  unint64_t v58 = v57;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v51 setModelData:isa];

  uint64_t v60 = v72;
  uint64_t v61 = v67();
  uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v64 = 0;
    _os_log_impl(&dword_0, v62, v63, "AcousticIDFlow#listeningSnippet Successfully generate non-iOS view", v64, 2u);
    swift_slowDealloc(v64, -1LL, -1LL);
  }

  sub_925A4(v56, v58);

  sub_925A4(v68, v70);
  v69(v60, v6);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v44, v54);
  return v51;
}

uint64_t sub_132A90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v74 = a4;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v75 = (uint64_t)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ResponseMode(0LL);
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  __chkstk_darwin(v11);
  int v65 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_289340);
  uint64_t v71 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v72 = v19;
  uint64_t v73 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  os_log_type_t v21 = (char *)v58 - v20;
  uint64_t v22 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v68 = *(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 16LL);
  uint64_t v69 = v22;
  v68(v21, a1);
  *(void *)&v21[*(int *)(v17 + 48)] = a2;
  id v70 = a2;
  uint64_t v23 = static SiriEnvironmentWrapper.retrieve()(v70);
  if (!v23)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v23 = static SiriEnvironment.default.getter();
  }

  uint64_t v24 = v23;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v25, v13);
  uint64_t v26 = swift_retain_n(v24, 2LL);
  uint64_t v27 = v14;
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v26);
  unint64_t v29 = v16;
  os_log_type_t v30 = static os_log_type_t.info.getter(v28);
  if (os_log_type_enabled(v28, v30))
  {
    uint64_t v62 = v27;
    uint64_t v31 = swift_slowAlloc(12LL, -1LL);
    uint64_t v63 = v17;
    unint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v64 = v10;
    uint64_t v60 = v33;
    v79[0] = v33;
    uint64_t v61 = v29;
    *(_DWORD *)unint64_t v32 = 136315138;
    v58[1] = v32 + 4;
    uint64_t v34 = SiriEnvironment.currentRequest.getter(v33);
    uint64_t v35 = v65;
    CurrentRequest.responseMode.getter(v34);
    uint64_t v36 = swift_release(v34);
    uint64_t v37 = ResponseMode.description.getter(v36);
    uint64_t v59 = v13;
    uint64_t v38 = v21;
    uint64_t v39 = v9;
    unint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v35, v67);
    uint64_t v78 = sub_6978(v37, v41, v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79);
    swift_release_n(v24, 2LL);
    unint64_t v42 = v41;
    uint64_t v9 = v39;
    os_log_type_t v21 = v38;
    swift_bridgeObjectRelease(v42);
    _os_log_impl(&dword_0, v28, v30, "AcousticIDFlow#buildTraditionalRFShazamOutput with responseMode = %s", v32, 0xCu);
    uint64_t v43 = v60;
    swift_arrayDestroy(v60, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v10 = v64;
    swift_slowDealloc(v43, -1LL, -1LL);
    uint64_t v44 = v32;
    uint64_t v17 = v63;
    swift_slowDealloc(v44, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v59);
  }

  else
  {

    swift_release_n(v24, 2LL);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v13);
  }

  uint64_t v45 = v75;
  sub_FF10(v74, v75, (uint64_t *)&unk_286C50);
  uint64_t v46 = *(int *)(v17 + 48);
  uint64_t v47 = (uint64_t)v73;
  ((void (*)(char *, char *, uint64_t))v68)(v73, v21, v69);
  uint64_t v48 = v70;
  *(void *)(v47 + v46) = v70;
  uint64_t v49 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v50 = (v49 + 16) & ~v49;
  unint64_t v51 = (v10 + v50 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v52 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v53 = (v52 + v51 + 8) & ~v52;
  uint64_t v54 = swift_allocObject(&unk_2705E8, v53 + v72, v49 | v52 | 7);
  sub_45F6C(v45, v54 + v50, (uint64_t *)&unk_286C50);
  *(void *)(v54 + v51) = v24;
  sub_45F6C(v47, v54 + v53, &qword_289340);
  id v55 = v48;
  swift_retain(v24);
  uint64_t v56 = sub_6C5C(&qword_2845C0);
  static Task<>.withCallback<A>(_:operation:)(v76, v77, &unk_28A7B0, v54, v56);
  swift_release(v24);
  swift_release(v54);
  return sub_1F6CC((uint64_t)v21, &qword_289340);
}

uint64_t sub_132F44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v53 = a6;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_289340);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  os_log_type_t v21 = (char *)&v44 - v20;
  uint64_t v22 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v52 = *(void *)(v22 - 8);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  v50(v21, a1, v22);
  uint64_t v51 = v16;
  *(void *)&v21[*(int *)(v16 + 48)] = a2;
  uint64_t v23 = qword_283888;
  id v24 = a2;
  if (v23 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = v55;
  uint64_t v26 = sub_6960(v55, (uint64_t)qword_2969C8);
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16))(v15, v26, v25);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v48 = a3;
    uint64_t v30 = swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = v22;
    uint64_t v31 = (uint8_t *)v30;
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = a5;
    uint64_t v33 = v32;
    uint64_t v57 = v32;
    id v45 = v24;
    *(_DWORD *)uint64_t v31 = 136446210;
    uint64_t v34 = static Insights.responseFramework.getter(v32);
    uint64_t v47 = v12;
    unint64_t v36 = v35;
    uint64_t v56 = sub_6978(v34, v35, &v57);
    a3 = v48;
    id v24 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);
    unint64_t v37 = v36;
    uint64_t v12 = v47;
    swift_bridgeObjectRelease(v37);
    _os_log_impl(&dword_0, v28, v29, "SiriAudioOutputProvider#buildShazamOutput...  %{public}s", v31, 0xCu);
    swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v38 = v33;
    a5 = v49;
    swift_slowDealloc(v38, -1LL, -1LL);
    uint64_t v39 = v31;
    uint64_t v22 = v46;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v55);
  uint64_t v40 = *(int *)(v51 + 48);
  v50(v19, (uint64_t)v21, v22);
  *(void *)&v19[v40] = v24;
  uint64_t v41 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v12, 1LL, 1LL, v41);
  id v42 = v24;
  sub_132A90((uint64_t)v19, v42, a3, (uint64_t)v12, a5, v53);

  sub_1F6CC((uint64_t)v12, (uint64_t *)&unk_286C50);
  sub_1F6CC((uint64_t)v21, &qword_289340);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v19, v22);
}

id sub_1332BC()
{
  uint64_t v0 = type metadata accessor for UUID(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v76 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_6C5C(&qword_28A750);
  __chkstk_darwin(v3);
  uint64_t v75 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for Response(0LL);
  uint64_t v74 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v72 = (char *)&v66 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v66 - v13);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v66 - v15;
  if (qword_283890 != -1) {
    swift_once(&qword_283890, sub_BFCDC);
  }
  uint64_t v17 = sub_6960(v6, (uint64_t)qword_2969E0);
  uint64_t v18 = *(uint64_t (**)(void))(v7 + 16);
  uint64_t v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v16, v17, v6);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v71 = v14;
    uint64_t v23 = v18;
    id v24 = v22;
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_0, v20, v21, "AcousticIDFlow#noMatchSnippet executing", v22, 2u);
    uint64_t v25 = v24;
    uint64_t v18 = v23;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v16, v6);
  uint64_t v27 = type metadata accessor for JSONEncoder(0LL);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  uint64_t v28 = JSONEncoder.init()();
  unint64_t v29 = sub_134084();
  uint64_t v30 = dispatch thunk of JSONEncoder.encode<A>(_:)(v29, &type metadata for ShazamNoMatchModel, v29);
  unint64_t v32 = v31;
  uint64_t v67 = v18;
  uint64_t v69 = v26;
  uint64_t v33 = v30;
  swift_release(v28);
  uint64_t v34 = sub_6C5C(&qword_28A760);
  uint64_t v35 = swift_allocObject(v34, 72LL, 7LL);
  __int128 v70 = xmmword_214510;
  *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  uint64_t v71 = (void *)(v35 + 32);
  uint64_t v36 = sub_6C5C(&qword_28A768);
  uint64_t v37 = swift_allocObject(v36, 72LL, 7LL);
  *(_OWORD *)(v37 + swift_weakDestroy(v0 + 16) = v70;
  *(void *)(v37 + 56) = type metadata accessor for CustomCanvas(0LL);
  *(void *)(v37 + 64) = &protocol witness table for CustomCanvas;
  sub_10974((void *)(v37 + 32));
  sub_92560(v33, v32);
  BYTE2(v65) = 0;
  LOWORD(v65) = 0;
  uint64_t v68 = v33;
  *(void *)&__int128 v70 = v32;
  CustomCanvas.init(bundleName:viewId:viewData:componentName:safeForLogging:requestsKeyWindow:hideConversationKeyline:)( 0x49556D617A616853LL,  0xEE006E6967756C50LL,  0x686374614D6F4ELL,  0xE700000000000000LL,  v33,  v32,  0LL,  0xE000000000000000LL,  v65);
  uint64_t v38 = type metadata accessor for Visibility(0LL);
  uint64_t v39 = v75;
  uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v75, 1LL, 1LL, v38);
  uint64_t v41 = static _ProtoResponse.LevelOfDetail.allCases.getter(v40);
  uint64_t v42 = sub_132194(v41);
  __n128 v43 = swift_bridgeObjectRelease(v41);
  *(void *)(v35 + 56) = type metadata accessor for Section(0LL, v43);
  *(void *)(v35 + 64) = &protocol witness table for Section;
  sub_10974(v71);
  Section.init(_:levelOfDetail:_:)(v37, v42, v39);
  uint64_t v44 = v77;
  Response.init(_:backgrounds:ornaments:hideRedactedElements:)( v35,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  0LL);
  id v45 = [objc_allocWithZone(SAUIVisualResponseSnippet) init];
  uint64_t v46 = v76;
  uint64_t v47 = UUID.init()(v45);
  UUID.uuidString.getter(v47);
  uint64_t v49 = v48;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v46, v0);
  NSString v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v45, "setAceId:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

  id v51 = v45;
  NSString v52 = String._bridgeToObjectiveC()();
  [v51 setViewId:v52];

  uint64_t v53 = sub_10430( &qword_28A770,  (uint64_t (*)(uint64_t))&type metadata accessor for Response,  (uint64_t)&protocol conformance descriptor for Response);
  uint64_t v54 = v78;
  uint64_t v56 = ProtobufBuilder.serializedData()(v78, v53);
  unint64_t v58 = v57;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v51 setModelData:isa];

  uint64_t v60 = v72;
  uint64_t v61 = v67();
  uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v64 = 0;
    _os_log_impl(&dword_0, v62, v63, "AcousticIDFlow#noMatchSnippet Successfully generate non-iOS view", v64, 2u);
    swift_slowDealloc(v64, -1LL, -1LL);
  }

  sub_925A4(v56, v58);

  sub_925A4(v68, v70);
  v69(v60, v6);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v44, v54);
  return v51;
}

uint64_t sub_133A68()
{
  uint64_t v1 = *(void *)(sub_6C5C(&qword_28A680) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release(*(void *)(v0 + 16));
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  uint64_t v5 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = v7 + 16;
  swift_release(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_133B30(void (*a1)(char *, uint64_t))
{
  uint64_t v3 = *(void *)(sub_6C5C(&qword_28A680) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_12CDE4(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(void (**)(char *))v5, *((void *)v5 + 1));
}

uint64_t sub_133B90()
{
  uint64_t v1 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_133C2C(void (*a1)(char *, uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for PlaybackCodeAndDescription(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_12BC20(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + v4, *(void (**)(char *))v5, *((void *)v5 + 1));
}

uint64_t sub_133C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AcousticIDFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_133CCC()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);

  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_133D78(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_12AED0(a1, *(void *)(v1 + 16), v1 + v4, *v5, v5[1]);
}

uint64_t sub_133DD4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_133E00(int a1)
{
  return sub_12B2D0(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_133E10(void *a1)
{
  return sub_12A174(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_133E20(uint64_t a1)
{
  return sub_128A38(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_133E2C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_133E50()
{
  uint64_t v1 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 24));
  unint64_t v6 = (void *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v0 + v4, v7);
  }

  unint64_t v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + v8));
  swift_release(*(void *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

uint64_t sub_133F40(void *a1)
{
  uint64_t v3 = *(void *)(sub_6C5C((uint64_t *)&unk_286BB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_128DD4( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  v1 + v4,  *(void *)(v1 + v5),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_133FAC(uint64_t a1, char a2)
{
  return sub_129960( a1,  a2 & 1,  *(void *)(v2 + 16),  *(void (**)(void))(v2 + 24),  *(void *)(v2 + 32),  "AcousticIDFlow#successfulMatchDialogAndViewLegacy Dialog successfully generated, responding and exiting",  "AcousticIDFlow#successfulMatchDialogAndViewLegacy self deallocated prematurely during publishing");
}

uint64_t sub_133FE0(uint64_t a1)
{
  return sub_127A40( a1,  v1[2],  v1[3],  v1[4],  &enum case for ShazamSnippetRole.noMatch(_:),  5,  (unsigned int *)&enum case for AdditionalMetricsDescription.SourceFunction.noMatch(_:),  (unsigned int *)&enum case for AdditionalMetricsDescription.StatusReason.noMatchFound(_:),  (unsigned int *)&enum case for ActivityType.failed(_:),  (unsigned int *)&enum case for SiriKitReliabilityCodes.noReadableItems(_:),  "AcousticIDFlow#listeningDialogAndViewWithRF self deallocated prematurely  %{public}s");
}

uint64_t sub_134044(uint64_t a1)
{
  return sub_126904(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_134054(uint64_t a1, char a2)
{
  return sub_129960( a1,  a2 & 1,  *(void *)(v2 + 16),  *(void (**)(void))(v2 + 24),  *(void *)(v2 + 32),  "AcousticIDFlow#noMatchFoundDialogAndViewLegacy Dialog successfully generated, responding and exiting",  "AcousticIDFlow#noMatchFoundDialogAndViewLegacy self deallocated prematurely during publishing");
}

unint64_t sub_134084()
{
  unint64_t result = qword_28A7A0;
  if (!qword_28A7A0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ShazamNoMatchModel,  &type metadata for ShazamNoMatchModel);
    atomic_store(result, &qword_28A7A0);
  }

  return result;
}

uint64_t sub_1340CC(uint64_t a1)
{
  return sub_12580C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1340D8()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v2 | v7 | 7;
  unint64_t v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v13 = (v12 + v7 + 8) & ~v7;
  uint64_t v14 = v13 + v8;
  swift_release(*(void *)(v0 + v12));
  uint64_t v15 = v0 + v13;
  uint64_t v16 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v15, v16);

  return swift_deallocObject(v0, v14, v11);
}

uint64_t sub_1341EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  unint64_t v12 = (void *)swift_task_alloc(dword_28A7AC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_3B08C;
  return sub_12627C(a1, v9, v10, v11);
}

uint64_t sub_1342AC(uint64_t a1, char a2)
{
  return sub_125E6C(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1342C0(uint64_t a1)
{
  return sub_127A40( a1,  v1[2],  v1[3],  v1[4],  &enum case for ShazamSnippetRole.listening(_:),  4,  (unsigned int *)&enum case for AdditionalMetricsDescription.SourceFunction.lstnDlgView(_:),  (unsigned int *)&enum case for AdditionalMetricsDescription.StatusReason.listening(_:),  (unsigned int *)&enum case for ActivityType.showInterstitial(_:),  (unsigned int *)&enum case for SiriKitReliabilityCodes.inProgress(_:),  "AcousticIDFlow#listeningDialogAndViewWithRF self deallocated prematurely %{public}s");
}

uint64_t sub_134324(uint64_t a1)
{
  return sub_1239B8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_134330()
{
  uint64_t v1 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 24));
  unint64_t v6 = (void *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }

  else
  {
    uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v0 + v4, v7);
  }

  unint64_t v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = v8 + 16;
  swift_release(*(void *)(v0 + v8 + 8));
  return swift_deallocObject(v0, v9, v3 | 7);
}

uint64_t sub_134410(uint64_t a1, void *a2, char a3)
{
  int v6 = a3 & 1;
  uint64_t v7 = *(void *)(sub_6C5C((uint64_t *)&unk_286BB0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (uint64_t *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_123E84(a1, a2, v6, *(void *)(v3 + 16), *(void *)(v3 + 24), (void *)(v3 + v8), *v9, v9[1]);
}

uint64_t sub_134488(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_28A7BC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_3B08C;
  v4[10] = a1;
  v4[11] = v1;
  return swift_task_switch(sub_12DFB0, 0LL, 0LL);
}

uint64_t sub_1344EC(uint64_t a1, char a2)
{
  return sub_124D40(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32));
}

unint64_t sub_1344FC()
{
  unint64_t result = qword_28A7D0;
  if (!qword_28A7D0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ShazamListeningModel,  &type metadata for ShazamListeningModel);
    atomic_store(result, (unint64_t *)&qword_28A7D0);
  }

  return result;
}

uint64_t sub_134544()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_13456C(uint64_t a1)
{
  return sub_123250( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void (**)(char *))(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_13457C(char a1)
{
  return sub_1224CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_13458C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1345C0(char a1)
{
  return sub_12055C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1345D0()
{
  return sub_120800(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1345E0()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_134614(uint64_t a1)
{
  return sub_121A6C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void (**)(char *))(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_134620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AcousticIDFlow.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_134668()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_134694(uint64_t a1, unint64_t a2, char a3)
{
  return sub_120AAC( a1,  a2,  a3 & 1,  *(void *)(v3 + 16),  *(void (**)(char *))(v3 + 24),  *(void *)(v3 + 32));
}

uint64_t sub_1346A4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))( *(void *)a1,  *(void *)(a1 + 8),  *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1346D0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_28A7BC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_11C64;
  v4[10] = a1;
  v4[11] = v1;
  return swift_task_switch(sub_12DFB0, 0LL, 0LL);
}

uint64_t sub_134730(uint64_t a1, char a2)
{
  return sub_121828(a1, a2 & 1, v2);
}

uint64_t sub_13473C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  else {
    return swift_bridgeObjectRelease(a2);
  }
}

uint64_t DetermineFlowStrategy.actionForInput(input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a1;
  uint64_t v105 = a2;
  uint64_t v2 = sub_6C5C(&qword_284630);
  __chkstk_darwin(v2);
  unint64_t v100 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v102 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v94 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v95 = (char *)&v93 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v98 = (char *)&v93 - v10;
  __chkstk_darwin(v9);
  unint64_t v96 = (char *)&v93 - v11;
  uint64_t v12 = type metadata accessor for Parse(0LL);
  uint64_t v106 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v93 - v16;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v99 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v93 = (char *)&v93 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v97 = (char *)&v93 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v93 - v29;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v18, (uint64_t)qword_2969C8);
  unint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v103 = v31;
  os_log_t v104 = v32;
  uint64_t v33 = v18;
  uint64_t v34 = ((uint64_t (*)(char *))v32)(v30);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl(&dword_0, v35, v36, "DetermineFlowStrategy#actionForInput called", v37, 2u);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  uint64_t v38 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v39 = v33;
  uint64_t v40 = v38(v30, v33);
  Input.parse.getter(v40);
  uint64_t v41 = v106;
  int v42 = (*(uint64_t (**)(char *, uint64_t))(v106 + 88))(v17, v12);
  if (v42 != enum case for Parse.NLv3IntentOnly(_:) && v42 != enum case for Parse.uso(_:))
  {
    uint64_t v43 = v104(v26, v103, v39);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl( &dword_0,  v44,  v45,  "DetermineFlowStrategy#actionForInput received non NLv3IntentOnly or Uso parse",  v46,  2u);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    uint64_t v47 = v38(v26, v39);
    static ActionForInput.ignore()(v47);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v17, v12);
  }

  uint64_t v49 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  uint64_t v50 = v49(v17, v12);
  Input.parse.getter(v50);
  double v51 = sub_B7C84(v15, (uint64_t)&v110);
  ((void (*)(char *, uint64_t, double))v49)(v15, v12, v51);
  uint64_t v52 = v112;
  uint64_t v53 = sub_1F6CC((uint64_t)&v110, &qword_2848C0);
  if (v52)
  {
    Input.parse.getter(v53);
    double v54 = sub_B7C84(v15, (uint64_t)&v110);
    ((void (*)(char *, uint64_t, double))v49)(v15, v12, v54);
    uint64_t v55 = v112;
    if (v112)
    {
      uint64_t v56 = v113;
      sub_6EA8(&v110, v112);
      uint64_t v57 = (uint64_t)v100;
      dispatch thunk of ConfirmableIntent.confirmationState.getter(v55, *(void *)(v56 + 8));
      sub_6C3C(&v110);
      uint64_t v58 = v101;
      uint64_t v59 = v102;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v57, 1LL, v102) != 1)
      {
        uint64_t v60 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v96, v57, v59);
        uint64_t v61 = *(void (**)(char *, void, uint64_t))(v58 + 104);
        v61(v98, enum case for CommonAudio.Confirmation.cancel(_:), v59);
        uint64_t v62 = sub_6DF0( qword_286CD0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
        dispatch thunk of RawRepresentable.rawValue.getter(&v110, v59, v62);
        dispatch thunk of RawRepresentable.rawValue.getter(&v108, v59, v62);
        uint64_t v63 = v111;
        uint64_t v64 = v109;
        if (v110 == v108 && v111 == v109)
        {
          char v65 = 1;
          uint64_t v64 = v111;
        }

        else
        {
          char v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, v111);
        }

        swift_bridgeObjectRelease(v63);
        __n128 v78 = swift_bridgeObjectRelease(v64);
        uint64_t v79 = v58;
        unint64_t v80 = *(void (**)(char *, uint64_t, __n128))(v58 + 8);
        v80(v98, v59, v78);
        unint64_t v81 = v95;
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v95, v60, v59);
        if ((v65 & 1) != 0) {
          goto LABEL_29;
        }
        v61(v94, enum case for CommonAudio.Confirmation.no(_:), v59);
        dispatch thunk of RawRepresentable.rawValue.getter(&v110, v59, v62);
        dispatch thunk of RawRepresentable.rawValue.getter(&v108, v59, v62);
        uint64_t v82 = v111;
        uint64_t v83 = v109;
        if (v110 == v108 && v111 == v109)
        {
          swift_bridgeObjectRelease_n(v111, 2LL);
          ((void (*)(char *, uint64_t))v80)(v94, v59);
LABEL_29:
          ((void (*)(char *, uint64_t))v80)(v81, v59);
LABEL_30:
          uint64_t v84 = v93;
          uint64_t v85 = v104(v93, v103, v39);
          unint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
          os_log_type_t v87 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v86, v87))
          {
            unint64_t v88 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)unint64_t v88 = 0;
            _os_log_impl( &dword_0,  v86,  v87,  "DetermineFlowStrategy#actionForInput found cancellation node - treating state as cancelled",  v88,  2u);
            swift_slowDealloc(v88, -1LL, -1LL);
          }

          uint64_t v89 = v38(v84, v39);
          static ActionForInput.cancel()(v89);
          return ((uint64_t (*)(char *, uint64_t))v80)(v60, v59);
        }

        uint64_t v90 = v81;
        char v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, v111);
        swift_bridgeObjectRelease(v82);
        __n128 v92 = swift_bridgeObjectRelease(v83);
        v80(v94, v59, v92);
        ((void (*)(char *, uint64_t))v80)(v90, v59);
        if ((v91 & 1) != 0) {
          goto LABEL_30;
        }
        ((void (*)(char *, uint64_t))v80)(v60, v59);
        goto LABEL_21;
      }
    }

    else
    {
      sub_1F6CC((uint64_t)&v110, &qword_2848C0);
      uint64_t v57 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v100, 1LL, 1LL, v102);
    }

    sub_1F6CC(v57, &qword_284630);
LABEL_21:
    uint64_t v72 = v99;
    uint64_t v73 = v104(v99, v103, v39);
    uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v75 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v76 = 0;
      _os_log_impl(&dword_0, v74, v75, "DetermineFlowStrategy#actionForInput handling", v76, 2u);
      swift_slowDealloc(v76, -1LL, -1LL);
    }

    uint64_t v77 = v38(v72, v39);
    return static ActionForInput.handle()(v77);
  }

  uint64_t v66 = v97;
  uint64_t v67 = v104(v97, v103, v39);
  uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
  os_log_type_t v69 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v68, v69))
  {
    __int128 v70 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)__int128 v70 = 0;
    _os_log_impl(&dword_0, v68, v69, "DetermineFlowStrategy#actionForInput received unsupported parse", v70, 2u);
    swift_slowDealloc(v70, -1LL, -1LL);
  }

  uint64_t v71 = v38(v66, v39);
  return static ActionForInput.ignore()(v71);
}

uint64_t DetermineFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)( char *a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  os_log_t v104 = a3;
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v91 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v91 - v15;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v109 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v107 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v98 = (char *)&v91 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v91 - v22;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v17, (uint64_t)qword_2969C8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 16);
  uint64_t v102 = v24;
  uint64_t v103 = v25;
  ((void (*)(char *))v25)(v23);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
  uint64_t v106 = a1;
  uint64_t v108 = v26;
  ((void (*)(char *, char *, uint64_t))v26)(v16, a1, v7);
  id v105 = a2;
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v105);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  int v101 = v28;
  BOOL v29 = os_log_type_enabled(v27, v28);
  unint64_t v99 = a2;
  if (v29)
  {
    uint64_t v92 = v8;
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    unint64_t v95 = v11;
    uint64_t v31 = v30;
    uint64_t v94 = swift_slowAlloc(96LL, -1LL);
    *(void *)&__int128 v113 = v94;
    *(_DWORD *)uint64_t v31 = 136446722;
    uint64_t v97 = a4;
    uint64_t v32 = static Insights.frameKit.getter();
    uint64_t v96 = v17;
    unint64_t v34 = v33;
    *(void *)&__int128 v110 = sub_6978(v32, v33, (uint64_t *)&v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8);
    __n128 v35 = swift_bridgeObjectRelease(v34);
    *(_WORD *)(v31 + 12) = 2080;
    v108(v14, v16, v7, v35);
    uint64_t v36 = String.init<A>(describing:)(v14, v7);
    unint64_t v38 = v37;
    *(void *)&__int128 v110 = sub_6978(v36, v37, (uint64_t *)&v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8);
    __n128 v39 = swift_bridgeObjectRelease(v38);
    uint64_t v40 = v92;
    uint64_t v93 = *(void (**)(char *, uint64_t, __n128))(v92 + 8);
    v93(v16, v7, v39);
    *(_WORD *)(v31 + 22) = 2080;
    *(void *)&__int128 v110 = a2;
    id v41 = v105;
    id v42 = v105;
    uint64_t v43 = sub_6C5C(&qword_28A7E0);
    uint64_t v44 = String.init<A>(describing:)(&v110, v43);
    unint64_t v46 = v45;
    *(void *)&__int128 v110 = sub_6978(v44, v45, (uint64_t *)&v113);
    uint64_t v17 = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8);

    unint64_t v47 = v46;
    a4 = v97;
    swift_bridgeObjectRelease(v47);
    _os_log_impl( &dword_0,  v27,  (os_log_type_t)v101,  "DetermineFlowStrategy#makeIntentFromParse %{public}s for parse:%s and previousIntent:%s",  (uint8_t *)v31,  0x20u);
    uint64_t v48 = v94;
    swift_arrayDestroy(v94, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    uint64_t v49 = v31;
    uint64_t v11 = v95;
    swift_slowDealloc(v49, -1LL, -1LL);

    uint64_t v50 = *(void (**)(char *, uint64_t))(v109 + 8);
    v50(v23, v17);
    id v51 = v41;
    uint64_t v52 = v40;
    uint64_t v53 = (void (*)(char *, uint64_t))v93;
  }

  else
  {
    uint64_t v53 = *(void (**)(char *, uint64_t))(v8 + 8);
    v53(v16, v7);

    id v51 = v105;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v109 + 8);
    v50(v23, v17);
    uint64_t v52 = v8;
  }

  double v54 = v106;
  ((void (*)(char *, char *, uint64_t))v108)(v11, v106, v7);
  int v55 = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v11, v7);
  if (v55 == enum case for Parse.NLv3IntentOnly(_:) || v55 == enum case for Parse.uso(_:))
  {
    v53(v11, v7);
    sub_B7C84(v54, (uint64_t)&v110);
    if (v111)
    {
      uint64_t v68 = a4;
      sub_49B60(&v110, &v113);
      id v69 = v51;
      if (!v99) {
        id v69 = [objc_allocWithZone((Class)type metadata accessor for DetermineIntent()) init];
      }
      uint64_t v70 = v114;
      uint64_t v71 = v115;
      uint64_t v72 = sub_6EA8(&v113, v114);
      uint64_t v111 = v70;
      uint64_t v112 = v71;
      uint64_t v73 = sub_10974(&v110);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16LL))(v73, v72, v70);
      uint64_t v74 = (void *)(v100 + 16);
      uint64_t v75 = v100 + 56;
      uint64_t v76 = (void *)swift_allocObject(&unk_2708F8, 40LL, 7LL);
      uint64_t v77 = v104;
      v76[2] = v69;
      v76[3] = v77;
      v76[4] = v68;
      id v78 = v51;
      id v79 = v69;
      swift_retain(v68);
      sub_1BB4C0((uint64_t)v73, v74, v75, (void (*)(void))sub_135FE4, (uint64_t)v76, v79, v70, v71);
      swift_release(v76);

      sub_6C3C(&v110);
      return sub_6C3C(&v113);
    }

    else
    {
      sub_1F6CC((uint64_t)&v110, &qword_2848C0);
      unint64_t v80 = v98;
      uint64_t v81 = v103(v98, v102, v17);
      uint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
      os_log_type_t v83 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = v17;
        uint64_t v85 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v85 = 0;
        _os_log_impl( &dword_0,  v82,  v83,  "DetermineFlowStrategy#makeIntentFromParse received unsupported NLv3IntentOnly parse",  v85,  2u);
        unint64_t v86 = v85;
        uint64_t v17 = v84;
        swift_slowDealloc(v86, -1LL, -1LL);
      }

      v50(v80, v17);
      uint64_t v87 = type metadata accessor for PlaybackCode(0LL);
      uint64_t v88 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
      uint64_t v89 = swift_allocError(v87, v88, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v87 - 8) + 104LL))( v90,  enum case for PlaybackCode.ceGE63(_:),  v87);
      v104(v89, 1LL);
      return swift_errorRelease(v89);
    }
  }

  else
  {
    uint64_t v56 = v11;
    uint64_t v57 = v103(v107, v102, v17);
    uint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = v17;
      uint64_t v61 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl( &dword_0,  v58,  v59,  "DetermineFlowStrategy#makeIntentFromParse received non NLv3IntentOnly or Uso parse",  v61,  2u);
      uint64_t v62 = v61;
      uint64_t v17 = v60;
      swift_slowDealloc(v62, -1LL, -1LL);
    }

    v50(v107, v17);
    uint64_t v63 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v64 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v65 = swift_allocError(v63, v64, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v63 - 8) + 104LL))( v66,  enum case for PlaybackCode.ceGE64(_:),  v63);
    v104(v65, 1LL);
    swift_errorRelease(v65);
    return ((uint64_t (*)(char *, uint64_t))v53)(v56, v7);
  }

uint64_t sub_135828(void *a1, uint64_t (*a2)(void, void))
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  id v9 = a1;
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v24 = a2;
    uint64_t v12 = swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = v5;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v21 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v13 = 138412290;
    id v25 = v9;
    id v14 = v9;
    uint64_t v23 = v4;
    id v15 = v14;
    a2 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    uint64_t v16 = v21;
    void *v21 = v9;

    uint64_t v4 = v23;
    _os_log_impl(&dword_0, v10, v11, "DetermineFlowStrategy#makeIntentFromParse returning intent: %@", v13, 0xCu);
    uint64_t v17 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v16, 1LL, v17);
    swift_slowDealloc(v16, -1LL, -1LL);
    uint64_t v18 = v13;
    uint64_t v5 = v22;
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2(v9, 0LL);
}

uint64_t DetermineFlowStrategy.makeSiriKitIntentHandler(app:intent:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "DetermineFlowStrategy#makeSiriKitIntentHandler reached here", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = qword_2838B8;
  swift_retain(a1);
  if (v15 != -1) {
    swift_once(&qword_2838B8, sub_F3718);
  }
  swift_beginAccess(&static Determine.intentHandler, v21, 0LL, 0LL);
  uint64_t v16 = (void *)static Determine.intentHandler;
  uint64_t v17 = type metadata accessor for DetermineIntent();
  SiriKitIntentHandler.init<A>(app:intentHandler:intent:)(a1, v16, a2, v17);
  uint64_t v18 = type metadata accessor for SiriKitIntentHandler(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(a3, 0LL, 1LL, v18);
}

uint64_t sub_135C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return DetermineFlowStrategy.actionForInput(input:)(a1, a2);
}

uint64_t sub_135C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for DetermineFlowStrategy();
  return RCHFlowStrategy.makeAnnotatedIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_135CA4(char *a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  return DetermineFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)(a1, a2, a3, a4);
}

uint64_t sub_135CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DetermineFlowStrategy();
  return RCHFlowStrategy.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_135CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for DetermineFlowStrategy();
  return ResolveConfirmFlowStrategy.makeAppDoesNotSupportIntentResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_135D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for DetermineFlowStrategy();
  return ResolveConfirmFlowStrategy.makeAppNotFoundOnDeviceResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_135DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for DetermineFlowStrategy();
  return ResolveConfirmFlowStrategy.makeDeviceIncompatibleResponse(app:intent:_:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_135E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for DetermineFlowStrategy();
  return RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  v13,  a7);
}

uint64_t sub_135E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DetermineFlowStrategy();
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, v5, a3);
}

uint64_t sub_135EA4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return DetermineFlowStrategy.makeSiriKitIntentHandler(app:intent:)(a1, a2, a3);
}

uint64_t sub_135EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DetermineFlowStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, v7, a4);
}

uint64_t sub_135EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for DetermineFlowStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_135F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for DetermineFlowStrategy();
  return IntentErrorHandling.makeErrorResponse(app:intent:error:_:)(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_135FB8()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_135FE4()
{
  return sub_135828(*(void **)(v0 + 16), *(uint64_t (**)(void, void))(v0 + 24));
}

uint64_t sub_135FF0(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_28A7E8,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for DetermineFlowStrategy,  (uint64_t)&protocol conformance descriptor for DetermineFlowStrategy);
}

uint64_t type metadata accessor for DetermineFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin21DetermineFlowStrategy);
}

uint64_t sub_13603C(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_28A7F0,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for DetermineFlowStrategy,  (uint64_t)&protocol conformance descriptor for DetermineFlowStrategy);
}

uint64_t sub_136068(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_28A7F8,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for DetermineFlowStrategy,  (uint64_t)&protocol conformance descriptor for DetermineFlowStrategy);
}

uint64_t sub_136094(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_28A800,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for DetermineFlowStrategy,  (uint64_t)&protocol conformance descriptor for DetermineFlowStrategy);
}

uint64_t type metadata accessor for PlayMediaAdditionalCommandsProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin35PlayMediaAdditionalCommandsProvider);
}

uint64_t sub_1360E4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v4 = sub_6960(v0, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v10 = static Insights.responseFramework.getter(v9);
    unint64_t v12 = v11;
    uint64_t v14 = sub_6978(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    swift_bridgeObjectRelease(v12);
    _os_log_impl(&dword_0, v6, v7, "PlayMediaAdditionalCommandsProvider#additionalCommands... %{public}s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0LL;
}

uint64_t sub_1362AC()
{
  uint64_t result = OS_os_log.init(subsystem:category:)( 0xD000000000000014LL,  0x800000000021FAC0LL,  0xD000000000000017LL,  0x8000000000221150LL);
  qword_296AA0 = result;
  return result;
}

unint64_t sub_136310()
{
  unint64_t result = qword_28A970;
  if (!qword_28A970)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_os_log);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_28A970);
  }

  return result;
}

void *sub_13634C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v6 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a3);
  while (v6)
  {
    unint64_t v23 = v5 & 0xC000000000000001LL;
    os_log_type_t v7 = _swiftEmptyArrayStorage;
    uint64_t v8 = 4LL;
    uint64_t v21 = v6;
    uint64_t v22 = v5;
    while (1)
    {
      uint64_t v10 = v8 - 4;
      if (!v23) {
        break;
      }
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v5);
      BOOL v12 = __OFADD__(v10, 1LL);
      uint64_t v13 = v8 - 3;
      if (v12) {
        goto LABEL_19;
      }
LABEL_11:
      uint64_t v36 = v11;
      a1(&v29, &v36);
      if (v4)
      {
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v5);
        swift_release(v11);
        return v7;
      }

      swift_release(v11);
      uint64_t v14 = v30;
      if (v30)
      {
        uint64_t v15 = v31;
        uint64_t v16 = v32;
        __int128 v27 = v34;
        __int128 v28 = v33;
        uint64_t v25 = v29;
        uint64_t v26 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0) {
          os_log_type_t v7 = sub_1FB44(0LL, v7[2] + 1LL, 1, v7);
        }
        unint64_t v18 = v7[2];
        unint64_t v17 = v7[3];
        if (v18 >= v17 >> 1) {
          os_log_type_t v7 = sub_1FB44((void *)(v17 > 1), v18 + 1, 1, v7);
        }
        v7[2] = v18 + 1;
        uint64_t v9 = &v7[9 * v18];
        v9[4] = v25;
        v9[5] = v14;
        v9[6] = v15;
        v9[7] = v16;
        *((_OWORD *)v9 + 4) = v28;
        *((_OWORD *)v9 + 5) = v27;
        v9[12] = v26;
        uint64_t v6 = v21;
        uint64_t v5 = v22;
      }

      ++v8;
      if (v13 == v6)
      {
        swift_bridgeObjectRelease(v5);
        return v7;
      }
    }

    uint64_t v11 = *(void *)(v5 + 8 * v8);
    swift_retain(v11);
    BOOL v12 = __OFADD__(v10, 1LL);
    uint64_t v13 = v8 - 3;
    if (!v12) {
      goto LABEL_11;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    if (v5 < 0) {
      uint64_t v19 = v5;
    }
    else {
      uint64_t v19 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v19);
  }

  swift_bridgeObjectRelease(v5);
  return _swiftEmptyArrayStorage;
}

void sub_136558(uint8_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v195 = a3;
  uint64_t v194 = a2;
  uint64_t v204 = a4;
  uint64_t v5 = type metadata accessor for Parse.DirectInvocation(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v193 = (char *)v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v198 = (char *)v185 - v10;
  __chkstk_darwin(v9);
  uint64_t v203 = (char *)v185 - v11;
  BOOL v12 = (void *)type metadata accessor for Parse(0LL);
  uint64_t v209 = (void *)*(v12 - 1);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v206 = (void **)((char *)v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)v185 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v185 - v18;
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v196 = (char *)v185 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v200 = (char *)v185 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v188 = (char *)v185 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v187 = (char *)v185 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v192 = (char *)v185 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v189 = (char *)v185 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v191 = (char *)v185 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v190 = (char *)v185 - v37;
  __chkstk_darwin(v36);
  __n128 v39 = (char *)v185 - v38;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v199 = v6;
  uint64_t v40 = sub_6960(v20, (uint64_t)qword_2969C8);
  id v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v201 = v40;
  uint64_t v202 = v41;
  ((void (*)(char *))v41)(v39);
  id v42 = (uint8_t *)v209[2];
  uint64_t v207 = a1;
  uint64_t v208 = v42;
  uint64_t v43 = ((uint64_t (*)(char *, uint8_t *, void *))v42)(v19, a1, v12);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.default.getter(v44);
  uint64_t v205 = v21;
  os_log_type_t v46 = v45;
  unint64_t v47 = v19;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v48 = swift_slowAlloc(12LL, -1LL);
    uint64_t v197 = v20;
    uint64_t v49 = (uint8_t *)v48;
    uint64_t v50 = (void *)swift_slowAlloc(32LL, -1LL);
    id v216 = v50;
    uint64_t v186 = v5;
    *(_DWORD *)uint64_t v49 = 136315138;
    v185[1] = v49 + 4;
    ((void (*)(char *, char *, void *))v208)(v17, v47, v12);
    uint64_t v51 = String.init<A>(describing:)(v17, v12);
    unint64_t v53 = v52;
    uint64_t v214 = sub_6978(v51, v52, (uint64_t *)&v216);
    uint64_t v5 = v186;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v214, &v215);
    __n128 v54 = swift_bridgeObjectRelease(v53);
    int v55 = v209;
    uint64_t v56 = v47;
    uint64_t v57 = (void (*)(char *, void *, __n128))v209[1];
    v57(v56, v12, v54);
    _os_log_impl(&dword_0, v44, v46, "AppResolutionCommonStrategy#makeAppResolutionStateFromParse %s", v49, 0xCu);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    uint64_t v58 = v49;
    uint64_t v20 = v197;
    swift_slowDealloc(v58, -1LL, -1LL);
  }

  else
  {
    int v55 = v209;
    uint64_t v57 = (void (*)(char *, void *, __n128))v209[1];
    ((void (*)(char *, void *))v57)(v19, v12);
  }

  os_log_type_t v59 = *(void (**)(char *, uint64_t))(v205 + 8);
  v59(v39, v20);
  uint64_t v60 = v206;
  ((void (*)(void **, uint8_t *, void *))v208)(v206, v207, v12);
  uint64_t v61 = ((uint64_t (*)(void **, void *))v55[11])(v60, v12);
  if ((_DWORD)v61 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v62 = v204;
    void v204[3] = (uint64_t)&type metadata for NilAppResolutionProvider;
    v62[4] = sub_1409F8();
    *((_BYTE *)v62 + 40) = 0;
    ((void (*)(void **, void *))v57)(v60, v12);
    return;
  }

  if ((_DWORD)v61 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    ((void (*)(void **, void *))v55[12])(v60, v12);
    uint64_t v63 = *(uint64_t *)((char *)v60 + *(int *)(sub_6C5C(&qword_284618) + 48));
    uint64_t v64 = v204;
    void v204[3] = (uint64_t)&type metadata for CustomAppResolutionProvider;
    v64[4] = sub_140A80();
    uint64_t v65 = swift_allocObject(&unk_270A80, 64LL, 7LL);
    *uint64_t v64 = v65;
    uint64_t v66 = Parse.ServerConversion.appResolutionStateProviding.getter();
    uint64_t v67 = Parse.ServerConversion.siriKitIntent.getter(v66);
    swift_release(v63);
    *(void *)(v65 + 56) = v67;
    *((_BYTE *)v64 + 40) = 0;
    uint64_t v68 = type metadata accessor for NLIntent(0LL);
    (*(void (**)(void **, uint64_t))(*(void *)(v68 - 8) + 8LL))(v60, v68);
    return;
  }

  if ((_DWORD)v61 == enum case for Parse.directInvocation(_:))
  {
    ((void (*)(void **, void *))v55[12])(v60, v12);
    uint64_t v69 = v199;
    uint64_t v70 = (uint64_t)v203;
    (*(void (**)(char *, void **, uint64_t))(v199 + 32))(v203, v60, v5);
    sub_1CF340(v70, (uint64_t)v212);
    sub_45F6C((uint64_t)v212, (uint64_t)v213, &qword_2845F0);
    uint64_t v71 = v198;
    uint64_t v72 = v200;
    if (v213[56] != 255)
    {
      sub_45D94((uint64_t)v213, (uint64_t)&v214);
      sub_45D94((uint64_t)&v214, (uint64_t)&v216);
      switch(v218)
      {
        case 0:
          uint64_t v115 = v5;
          uint64_t v116 = v217;
          if (v217)
          {
            id v117 = v216;
            uint64_t v118 = type metadata accessor for AppIdentifierAppResolutionProvider();
            uint64_t v119 = swift_allocObject(v118, 32LL, 7LL);
            *(void *)(v119 + swift_weakDestroy(v0 + 16) = v117;
            *(void *)(v119 + 24) = v116;
            uint64_t v120 = v204;
            void v204[3] = v118;
            v120[4] = sub_10430( &qword_28AA58,  (uint64_t (*)(uint64_t))type metadata accessor for AppIdentifierAppResolutionProvider,  (uint64_t)&unk_2171F4);
            swift_bridgeObjectRetain(v116);
            sub_45DD0((uint64_t)v212);
            *uint64_t v120 = v119;
            (*(void (**)(char *, uint64_t))(v199 + 8))(v203, v5);
            *((_BYTE *)v120 + 40) = 0;
            return;
          }

          uint64_t v167 = v187;
          uint64_t v168 = v202(v187, v201, v20);
          int v169 = (os_log_s *)Logger.logObject.getter(v168);
          os_log_type_t v170 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v169, v170))
          {
            uint64_t v171 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v171 = 0;
            _os_log_impl( &dword_0,  v169,  v170,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse Could not get app bundle id from .replayReques t direct invocation",  v171,  2u);
            swift_slowDealloc(v171, -1LL, -1LL);
          }

          v59(v167, v20);
          uint64_t v172 = type metadata accessor for PlaybackCode(0LL);
          uint64_t v173 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
          uint64_t v144 = swift_allocError(v172, v173, 0LL, 0LL);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v172 - 8) + 104LL))( v174,  enum case for PlaybackCode.ceGE20(_:),  v172);
          sub_45DD0((uint64_t)v212);
          (*(void (**)(char *, uint64_t))(v199 + 8))(v203, v115);
          goto LABEL_40;
        case 4:
          if (v216)
          {
            id v121 = v216;
            sub_13760C((uint64_t)v121, (uint64_t)v204);
            sub_45DD0((uint64_t)v212);

            (*(void (**)(char *, uint64_t))(v69 + 8))(v203, v5);
            return;
          }

          uint64_t v175 = v188;
          uint64_t v176 = v202(v188, v201, v20);
          uint64_t v177 = (os_log_s *)Logger.logObject.getter(v176);
          os_log_type_t v178 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v177, v178))
          {
            uint64_t v179 = v5;
            uint64_t v180 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v180 = 0;
            _os_log_impl( &dword_0,  v177,  v178,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse Could not unwrap audioExperience from .playMed iaShim direct invocation",  v180,  2u);
            uint64_t v181 = v180;
            uint64_t v5 = v179;
            swift_slowDealloc(v181, -1LL, -1LL);
          }

          v59(v175, v20);
          uint64_t v182 = type metadata accessor for PlaybackCode(0LL);
          uint64_t v183 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
          uint64_t v144 = swift_allocError(v182, v183, 0LL, 0LL);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v182 - 8) + 104LL))( v184,  enum case for PlaybackCode.ceGE95(_:),  v182);
          sub_45DD0((uint64_t)v212);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v203, v5);
          goto LABEL_40;
        case 3:
          id v73 = v216;
          uint64_t v74 = v217;
          uint64_t v75 = type metadata accessor for AppIdentifierAppResolutionProvider();
          uint64_t v76 = v69;
          uint64_t v77 = v5;
          uint64_t v78 = swift_allocObject(v75, 32LL, 7LL);
          *(void *)(v78 + swift_weakDestroy(v0 + 16) = v73;
          *(void *)(v78 + 24) = v74;
          id v79 = v204;
          void v204[3] = v75;
          v79[4] = sub_10430( &qword_28AA58,  (uint64_t (*)(uint64_t))type metadata accessor for AppIdentifierAppResolutionProvider,  (uint64_t)&unk_2171F4);
          uint64_t *v79 = v78;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v203, v77);
          *((_BYTE *)v79 + 40) = 0;
          return;
      }

      sub_45DD0((uint64_t)v212);
    }

    v202(v72, v201, v20);
    uint64_t v122 = v69;
    uint64_t v123 = *(uint64_t (**)(char *, char *, uint64_t))(v69 + 16);
    uint64_t v124 = v123(v71, v203, v5);
    uint64_t v125 = (void *)Logger.logObject.getter(v124);
    os_log_type_t v126 = static os_log_type_t.error.getter();
    uint64_t v209 = v125;
    if (os_log_type_enabled((os_log_t)v125, v126))
    {
      id v127 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v128 = swift_slowAlloc(32LL, -1LL);
      uint64_t v197 = v20;
      uint64_t v129 = v128;
      uint64_t v211 = v128;
      uint64_t v208 = v127;
      *(_DWORD *)id v127 = 136315138;
      uint64_t v207 = v127 + 4;
      uint64_t v130 = v193;
      v123(v193, v71, v5);
      uint64_t v131 = String.init<A>(describing:)(v130, v5);
      unint64_t v133 = v132;
      uint64_t v210 = sub_6978(v131, v132, &v211);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v210, &v211);
      __n128 v134 = swift_bridgeObjectRelease(v133);
      uint64_t v135 = *(void (**)(char *, uint64_t, __n128))(v122 + 8);
      v135(v71, v5, v134);
      id v136 = v209;
      os_log_type_t v137 = v126;
      uint64_t v138 = v208;
      _os_log_impl( &dword_0,  (os_log_t)v209,  v137,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse received unsupported directInvocation: %s",  v208,  0xCu);
      swift_arrayDestroy(v129, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v129, -1LL, -1LL);
      swift_slowDealloc(v138, -1LL, -1LL);

      id v139 = v200;
      uint64_t v140 = v197;
    }

    else
    {
      uint64_t v141 = v72;
      uint64_t v135 = *(void (**)(char *, uint64_t, __n128))(v122 + 8);
      ((void (*)(char *, uint64_t))v135)(v71, v5);

      id v139 = v141;
      uint64_t v140 = v20;
    }

    v59(v139, v140);
    uint64_t v142 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v143 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v144 = swift_allocError(v142, v143, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v142 - 8) + 104LL))( v145,  enum case for PlaybackCode.ceGE21(_:),  v142);
    ((void (*)(char *, uint64_t))v135)(v203, v5);
LABEL_40:
    uint64_t v114 = v204;
    *uint64_t v204 = v144;
LABEL_41:
    *((_BYTE *)v114 + 40) = 1;
    return;
  }

  if ((_DWORD)v61 == enum case for Parse.pommesResponse(_:))
  {
    ((void (*)(void **, void *))v55[12])(v60, v12);
    unint64_t v80 = *v60;
    uint64_t v81 = sub_10470();
    if (v81)
    {
      uint64_t v82 = (void *)v81;
      sub_13760C(v81, (uint64_t)v204);

      return;
    }

    uint64_t v103 = v192;
    uint64_t v104 = v202(v192, v201, v20);
    id v105 = (os_log_s *)Logger.logObject.getter(v104);
    os_log_type_t v106 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v107 = v20;
      uint64_t v108 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl( &dword_0,  v105,  v106,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse pommesResponse contains no AudioExperience",  v108,  2u);
      uint64_t v109 = v108;
      uint64_t v20 = v107;
      swift_slowDealloc(v109, -1LL, -1LL);
    }

    v59(v103, v20);
    uint64_t v110 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v111 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v112 = swift_allocError(v110, v111, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v110 - 8) + 104LL))( v113,  enum case for PlaybackCode.ceGE17(_:),  v110);

    uint64_t v114 = v204;
    *uint64_t v204 = v112;
    goto LABEL_41;
  }

  os_log_type_t v83 = (void (*)(void **, void *))v57;
  if ((_DWORD)v61 != enum case for Parse.uso(_:))
  {
    uint64_t v93 = v202(v196, v201, v20);
    uint64_t v94 = (os_log_s *)Logger.logObject.getter(v93);
    os_log_type_t v95 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v96 = 0;
      _os_log_impl( &dword_0,  v94,  v95,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse unsupported parse",  v96,  2u);
      swift_slowDealloc(v96, -1LL, -1LL);
    }

    v59(v196, v20);
    uint64_t v97 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v98 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v99 = swift_allocError(v97, v98, 0LL, 0LL);
    uint64_t v101 = v100;
    uint64_t v102 = (unsigned int *)&enum case for PlaybackCode.ceGE22(_:);
    goto LABEL_45;
  }

  uint64_t v84 = Parse.firstUsoTask()(v61);
  if (!v84)
  {
    uint64_t v146 = v189;
    uint64_t v147 = v202(v189, v201, v20);
    uint64_t v148 = (os_log_s *)Logger.logObject.getter(v147);
    os_log_type_t v149 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v148, v149))
    {
      uint64_t v150 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v150 = 0;
      _os_log_impl( &dword_0,  v148,  v149,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse Failed to get task from parse",  v150,  2u);
      id v151 = v150;
      uint64_t v146 = v189;
      swift_slowDealloc(v151, -1LL, -1LL);
    }

    v59(v146, v20);
    uint64_t v97 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v152 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v99 = swift_allocError(v97, v152, 0LL, 0LL);
    uint64_t v101 = v153;
    uint64_t v102 = (unsigned int *)&enum case for PlaybackCode.ceGE16(_:);
LABEL_45:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v97 - 8) + 104LL))(v101, *v102, v97);
    os_log_t v154 = v204;
    *uint64_t v204 = v99;
    *((_BYTE *)v154 + 40) = 1;
    goto LABEL_46;
  }

  uint64_t v85 = v84;
  if ((sub_2EAAC() & 1) == 0)
  {
    uint64_t v209 = v12;
    uint64_t v157 = type metadata accessor for AudioUsoIntent(0LL);
    swift_allocObject(v157, *(unsigned int *)(v157 + 48), *(unsigned __int16 *)(v157 + 52));
    uint64_t v158 = swift_retain(v85);
    uint64_t v159 = AudioUsoIntent.init(task:)(v158);
    uint64_t v160 = v20;
    uint64_t v161 = v202(v191, v201, v20);
    os_log_type_t v162 = (os_log_s *)Logger.logObject.getter(v161);
    os_log_type_t v163 = static os_log_type_t.default.getter(v162);
    if (os_log_type_enabled(v162, v163))
    {
      uint64_t v164 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v164 = 0;
      _os_log_impl( &dword_0,  v162,  v163,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse returning UsoAppResolutionProvider for uso parse",  v164,  2u);
      uint64_t v165 = v164;
      uint64_t v60 = v206;
      swift_slowDealloc(v165, -1LL, -1LL);
    }

    v59(v191, v160);
    uint64_t v166 = v204;
    void v204[3] = (uint64_t)&type metadata for UsoAppResolutionProvider;
    v166[4] = sub_140A3C();
    swift_release(v85);
    *uint64_t v166 = v159;
    *((_BYTE *)v166 + 40) = 0;
    uint64_t v155 = v60;
    uint64_t v156 = v209;
    goto LABEL_47;
  }

  uint64_t v86 = v202(v190, v201, v20);
  uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
  os_log_type_t v88 = static os_log_type_t.default.getter(v87);
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = v20;
    uint64_t v90 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v90 = 0;
    _os_log_impl( &dword_0,  v87,  v88,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse returning NilAppResolutionProvider for uso Affinity task",  v90,  2u);
    uint64_t v91 = v90;
    uint64_t v20 = v89;
    uint64_t v60 = v206;
    swift_slowDealloc(v91, -1LL, -1LL);
  }

  v59(v190, v20);
  uint64_t v92 = v204;
  void v204[3] = (uint64_t)&type metadata for NilAppResolutionProvider;
  v92[4] = sub_1409F8();
  swift_release(v85);
  *((_BYTE *)v92 + 40) = 0;
LABEL_46:
  uint64_t v155 = v60;
  uint64_t v156 = v12;
LABEL_47:
  v83(v155, v156);
}

uint64_t sub_13760C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AudioUsoIntent.UsoNamespace(0LL);
  uint64_t v189 = *(void *)(v4 - 8);
  uint64_t v190 = v4;
  __chkstk_darwin(v4);
  uint64_t v188 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UsoIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v191 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v192 = (char *)&v166 - v10;
  uint64_t v11 = sub_6C5C(&qword_284900);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v176 = (uint64_t)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v175 = (char *)&v166 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v15);
  uint64_t v183 = (char *)&v166 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v174 = (char *)&v166 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v177 = (char *)&v166 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  os_log_type_t v178 = (char *)&v166 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v173 = (char *)&v166 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v166 - v27;
  uint64_t v29 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v194 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v166 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v166 - v34;
  uint64_t v185 = a1;
  Experience.userDialogAct.getter(v33);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v36 = sub_6960(v17, (uint64_t)qword_2969C8);
  uint64_t v37 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))*((void *)v18 + 2);
  uint64_t v181 = v36;
  uint64_t v182 = v37;
  ((void (*)(char *))v37)(v28);
  uint64_t v38 = *(void (**)(void *, char *, uint64_t))(v194 + 16);
  uint64_t v186 = v35;
  uint64_t v187 = v38;
  uint64_t v39 = ((uint64_t (*)(char *, char *, uint64_t))v38)(v32, v35, v29);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  id v41 = v18;
  os_log_type_t v42 = static os_log_type_t.default.getter(v40);
  BOOL v43 = os_log_type_enabled(v40, v42);
  uint64_t v193 = v29;
  if (v43)
  {
    uint64_t v179 = v41;
    uint64_t v44 = swift_slowAlloc(12LL, -1LL);
    uint64_t v172 = a2;
    os_log_type_t v45 = (uint8_t *)v44;
    uint64_t v171 = swift_slowAlloc(32LL, -1LL);
    uint64_t v197 = v171;
    os_log_type_t v170 = v45;
    *(_DWORD *)os_log_type_t v45 = 136315138;
    uint64_t v180 = (void (*)(char *, uint64_t, __n128))(v45 + 4);
    type metadata accessor for SiriNLUTypesPrintUtils(0LL);
    v196[2] = v193;
    v196[3] = sub_10430( &qword_284610,  (uint64_t (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct,  (uint64_t)&protocol conformance descriptor for Siri_Nlu_External_UserDialogAct);
    os_log_type_t v46 = sub_10974(&v195);
    v187(v46, v32, v193);
    uint64_t v47 = static SiriNLUTypesPrintUtils.printableProtoObject(object:)(&v195);
    uint64_t v48 = v7;
    uint64_t v49 = v6;
    unint64_t v51 = v50;
    sub_6C3C(&v195);
    uint64_t v195 = sub_6978(v47, v51, &v197);
    uint64_t v29 = v193;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v195, v196);
    unint64_t v52 = v51;
    uint64_t v6 = v49;
    uint64_t v7 = v48;
    __n128 v53 = swift_bridgeObjectRelease(v52);
    uint64_t v180 = *(void (**)(char *, uint64_t, __n128))(v194 + 8);
    v180(v32, v29, v53);
    __n128 v54 = v170;
    _os_log_impl( &dword_0,  v40,  v42,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse userDialogAct: %s",  v170,  0xCu);
    uint64_t v55 = v171;
    swift_arrayDestroy(v171, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    a2 = v172;
    swift_slowDealloc(v54, -1LL, -1LL);

    uint64_t v56 = (void (*)(char *, uint64_t))*((void *)v179 + 1);
  }

  else
  {
    uint64_t v180 = *(void (**)(char *, uint64_t, __n128))(v194 + 8);
    ((void (*)(char *, uint64_t))v180)(v32, v29);

    uint64_t v56 = (void (*)(char *, uint64_t))*((void *)v41 + 1);
  }

  uint64_t v179 = v56;
  uint64_t v57 = ((uint64_t (*)(char *, uint64_t))v56)(v28, v17);
  uint64_t v58 = v17;
  os_log_type_t v59 = (uint8_t *)AudioExperience.launchID.getter(v57);
  unint64_t v61 = v60;
  uint64_t v62 = type metadata accessor for AudioUsoIntent(0LL);
  uint64_t v63 = v183;
  uint64_t v64 = v186;
  v187(v183, v186, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v63, 0LL, 1LL, v29);
  uint64_t v194 = v62;
  uint64_t v65 = AudioUsoIntent.__allocating_init(userDialogAct:)(v63);
  if (!v65)
  {
    __n128 v103 = swift_bridgeObjectRelease(v61);
    uint64_t v104 = v174;
    uint64_t v105 = v182(v174, v181, v58, v103);
    os_log_type_t v106 = (os_log_s *)Logger.logObject.getter(v105);
    os_log_type_t v107 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl( &dword_0,  v106,  v107,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse AudioUsoIntent failed to be constructed",  v108,  2u);
      swift_slowDealloc(v108, -1LL, -1LL);
    }

    v179(v104, v58);
    uint64_t v109 = type metadata accessor for AppIdentifierAppResolutionProvider();
    uint64_t v110 = swift_allocObject(v109, 32LL, 7LL);
    *(void *)(v110 + swift_weakDestroy(v0 + 16) = 0x6C7070612E6D6F63LL;
    *(void *)(v110 + 24) = 0xEF636973754D2E65LL;
    *(void *)(a2 + 24) = v109;
    *(void *)(a2 + 32) = sub_10430( &qword_28AA58,  (uint64_t (*)(uint64_t))type metadata accessor for AppIdentifierAppResolutionProvider,  (uint64_t)&unk_2171F4);
    *(void *)a2 = v110;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v180)(v64, v193);
LABEL_49:
    char v160 = 0;
    goto LABEL_50;
  }

  uint64_t v171 = v65;
  uint64_t v66 = dispatch thunk of AudioUsoIntent.apps.getter();
  uint64_t v67 = v66;
  if ((unint64_t)v66 >> 62)
  {
    if (v66 >= 0) {
      v66 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v66);
  }

  else
  {
    uint64_t result = *(void *)((char *)&dword_10 + (v66 & 0xFFFFFFFFFFFFF8LL));
  }

  os_log_type_t v170 = v59;
  if (!result)
  {
    __n128 v70 = swift_bridgeObjectRelease(v67);
    goto LABEL_32;
  }

  if ((v67 & 0xC000000000000001LL) != 0)
  {
    uint64_t v69 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v67);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v67 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      return result;
    }

    uint64_t v69 = *(void *)(v67 + 32);
    swift_retain(v69);
  }

  __n128 v70 = swift_bridgeObjectRelease(v67);
  if (!v69)
  {
LABEL_32:
    uint64_t v111 = (uint64_t)v175;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v175, 1LL, 1LL, v6, v70);
    uint64_t v69 = 0LL;
    goto LABEL_36;
  }

  uint64_t v71 = swift_retain(v69);
  uint64_t v72 = dispatch thunk of CodeGenBase.usoIdentifiers.getter(v71);
  swift_release(v69);
  uint64_t v73 = *(void *)(v72 + 16);
  if (!v73)
  {
LABEL_34:
    uint64_t v111 = (uint64_t)v175;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v175, 1LL, 1LL, v6);
    swift_bridgeObjectRelease(v72);
    goto LABEL_36;
  }

  unint64_t v168 = v61;
  uint64_t v174 = (char *)v69;
  uint64_t v169 = v58;
  uint64_t v172 = a2;
  unint64_t v74 = v72 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  LODWORD(v185) = enum case for AudioUsoIntent.UsoNamespace.appBundleId(_:);
  uint64_t v187 = *(void (**)(void *, char *, uint64_t))(v7 + 72);
  uint64_t v75 = *(char **)(v7 + 16);
  uint64_t v167 = v72;
  __n128 v76 = swift_bridgeObjectRetain(v72);
  uint64_t v78 = v191;
  uint64_t v77 = v192;
  uint64_t v183 = v75;
  uint64_t v184 = v6;
  while (1)
  {
    uint64_t v82 = ((uint64_t (*)(char *, unint64_t, uint64_t, __n128))v75)(v77, v74, v6, v76);
    uint64_t v83 = UsoIdentifier.appBundleId.getter(v82);
    uint64_t v85 = v84;
    uint64_t v86 = static AudioUsoIntent.pegasusAppBundle.getter(v83);
    uint64_t v88 = v87;
    if (v83 == v86 && v85 == v87)
    {
      swift_bridgeObjectRelease_n(v85, 2LL);
      uint64_t v89 = ((uint64_t (*)(char *, char *, uint64_t))v75)(v78, v77, v6);
    }

    else
    {
      char v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v83, v85);
      swift_bridgeObjectRelease(v85);
      __n128 v91 = swift_bridgeObjectRelease(v88);
      uint64_t v89 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v75)(v78, v77, v6, v91);
      if ((v90 & 1) == 0) {
        goto LABEL_27;
      }
    }

    uint64_t v92 = v7;
    uint64_t v93 = UsoIdentifier.namespace.getter(v89);
    uint64_t v95 = v94;
    uint64_t v96 = v188;
    uint64_t v97 = v189;
    uint64_t v98 = v190;
    uint64_t v99 = (*(uint64_t (**)(char *, void, uint64_t))(v189 + 104))(v188, v185, v190);
    uint64_t v100 = AudioUsoIntent.UsoNamespace.rawValue.getter(v99);
    uint64_t v102 = v101;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
    if (!v95)
    {
      swift_bridgeObjectRelease(v102);
      uint64_t v7 = v92;
      uint64_t v78 = v191;
      uint64_t v77 = v192;
      uint64_t v75 = v183;
      uint64_t v6 = v184;
LABEL_27:
      uint64_t v81 = *(void (**)(char *, uint64_t))(v7 + 8);
      v81(v78, v6);
      goto LABEL_17;
    }

    uint64_t v7 = v92;
    if (v93 == v100 && v95 == v102) {
      break;
    }
    char v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v93, v95);
    swift_bridgeObjectRelease(v95);
    __n128 v80 = swift_bridgeObjectRelease(v102);
    uint64_t v81 = *(void (**)(char *, uint64_t))(v92 + 8);
    uint64_t v78 = v191;
    uint64_t v6 = v184;
    ((void (*)(char *, uint64_t, __n128))v81)(v191, v184, v80);
    uint64_t v77 = v192;
    uint64_t v75 = v183;
    if ((v79 & 1) != 0) {
      goto LABEL_35;
    }
LABEL_17:
    v81(v77, v6);
    v74 += (unint64_t)v187;
    if (!--v73)
    {
      uint64_t v72 = v167;
      swift_bridgeObjectRelease(v167);
      a2 = v172;
      uint64_t v64 = v186;
      uint64_t v58 = v169;
      uint64_t v69 = (uint64_t)v174;
      unint64_t v61 = v168;
      goto LABEL_34;
    }
  }

  swift_bridgeObjectRelease(v95);
  __n128 v112 = swift_bridgeObjectRelease(v102);
  uint64_t v6 = v184;
  (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v191, v184, v112);
  uint64_t v77 = v192;
LABEL_35:
  uint64_t v113 = v167;
  __n128 v114 = swift_bridgeObjectRelease(v167);
  uint64_t v111 = (uint64_t)v175;
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 32))(v175, v77, v6, v114);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v111, 0LL, 1LL, v6);
  swift_bridgeObjectRelease(v113);
  a2 = v172;
  uint64_t v64 = v186;
  uint64_t v58 = v169;
  uint64_t v69 = (uint64_t)v174;
  unint64_t v61 = v168;
LABEL_36:
  uint64_t v174 = (char *)v69;
  uint64_t v115 = v176;
  sub_FF10(v111, v176, &qword_284900);
  int v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v115, 1LL, v6);
  id v117 = v177;
  uint64_t v118 = v178;
  if (v116 != 1)
  {
    swift_bridgeObjectRelease(v61);
    uint64_t v133 = UsoIdentifier.value.getter(v132);
    uint64_t v134 = v115;
    uint64_t v135 = v133;
    unint64_t v137 = v136;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v134, v6);
    uint64_t v138 = v173;
    ((void (*)(char *, uint64_t, uint64_t))v182)(v173, v181, v58);
    uint64_t v139 = swift_bridgeObjectRetain_n(v137, 2LL);
    uint64_t v140 = (os_log_s *)Logger.logObject.getter(v139);
    os_log_type_t v141 = static os_log_type_t.info.getter(v140);
    if (os_log_type_enabled(v140, v141))
    {
      uint64_t v142 = swift_slowAlloc(12LL, -1LL);
      uint64_t v169 = v58;
      uint64_t v143 = (uint8_t *)v142;
      uint64_t v144 = a2;
      uint64_t v145 = swift_slowAlloc(32LL, -1LL);
      uint64_t v195 = v145;
      *(_DWORD *)uint64_t v143 = 136315138;
      swift_bridgeObjectRetain(v137);
      uint64_t v197 = sub_6978(v135, v137, &v195);
      uint64_t v64 = v186;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, v198);
      swift_bridgeObjectRelease_n(v137, 3LL);
      _os_log_impl( &dword_0,  v140,  v141,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse resolving app from AudioIntent %s",  v143,  0xCu);
      swift_arrayDestroy(v145, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v146 = v145;
      a2 = v144;
      swift_slowDealloc(v146, -1LL, -1LL);
      swift_slowDealloc(v143, -1LL, -1LL);

      uint64_t v147 = v173;
      uint64_t v148 = v169;
    }

    else
    {

      swift_bridgeObjectRelease_n(v137, 2LL);
      uint64_t v147 = v138;
      uint64_t v148 = v58;
    }

    v179(v147, v148);
    os_log_type_t v149 = (uint64_t (*)(char *, uint64_t))v180;
    uint64_t v150 = type metadata accessor for AppIdentifierAppResolutionProvider();
    uint64_t v151 = swift_allocObject(v150, 32LL, 7LL);
    *(void *)(v151 + swift_weakDestroy(v0 + 16) = v135;
    *(void *)(v151 + 24) = v137;
LABEL_48:
    *(void *)(a2 + 24) = v150;
    *(void *)(a2 + 32) = sub_10430( &qword_28AA58,  (uint64_t (*)(uint64_t))type metadata accessor for AppIdentifierAppResolutionProvider,  (uint64_t)&unk_2171F4);
    swift_release(v174);
    swift_release(v171);
    *(void *)a2 = v151;
    sub_1F6CC(v111, &qword_284900);
    uint64_t result = v149(v64, v193);
    goto LABEL_49;
  }

  sub_1F6CC(v115, &qword_284900);
  uint64_t v119 = static BundleIdentifiers.extractAppInfoFromLaunchId(for:)(v170, v61);
  if (v120)
  {
    uint64_t v121 = v120;
    uint64_t v194 = v119;
    ((void (*)(char *, uint64_t, uint64_t))v182)(v118, v181, v58);
    swift_bridgeObjectRetain(v61);
    uint64_t v123 = (os_log_s *)Logger.logObject.getter(v122);
    os_log_type_t v124 = static os_log_type_t.info.getter(v123);
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v125 = swift_slowAlloc(12LL, -1LL);
      uint64_t v169 = v58;
      os_log_type_t v126 = (uint8_t *)v125;
      uint64_t v127 = a2;
      uint64_t v128 = swift_slowAlloc(32LL, -1LL);
      uint64_t v195 = v128;
      *(_DWORD *)os_log_type_t v126 = 136315138;
      swift_bridgeObjectRetain(v61);
      uint64_t v197 = sub_6978((uint64_t)v170, v61, &v195);
      uint64_t v64 = v186;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, v198);
      swift_bridgeObjectRelease_n(v61, 3LL);
      _os_log_impl( &dword_0,  v123,  v124,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse resolving app from launchID %s",  v126,  0xCu);
      swift_arrayDestroy(v128, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v129 = v128;
      a2 = v127;
      swift_slowDealloc(v129, -1LL, -1LL);
      swift_slowDealloc(v126, -1LL, -1LL);

      uint64_t v130 = v178;
      uint64_t v131 = v169;
    }

    else
    {

      swift_bridgeObjectRelease_n(v61, 2LL);
      uint64_t v130 = v118;
      uint64_t v131 = v58;
    }

    v179(v130, v131);
    os_log_type_t v149 = (uint64_t (*)(char *, uint64_t))v180;
    uint64_t v150 = type metadata accessor for AppIdentifierAppResolutionProvider();
    uint64_t v151 = swift_allocObject(v150, 32LL, 7LL);
    *(void *)(v151 + swift_weakDestroy(v0 + 16) = v194;
    *(void *)(v151 + 24) = v121;
    goto LABEL_48;
  }

  ((void (*)(char *, uint64_t, uint64_t))v182)(v117, v181, v58);
  swift_bridgeObjectRetain(v61);
  uint64_t v153 = (os_log_s *)Logger.logObject.getter(v152);
  os_log_type_t v154 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v153, v154))
  {
    uint64_t v155 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v156 = swift_slowAlloc(32LL, -1LL);
    uint64_t v169 = v58;
    uint64_t v157 = v156;
    uint64_t v195 = v156;
    *(_DWORD *)uint64_t v155 = 136315138;
    swift_bridgeObjectRetain(v61);
    uint64_t v197 = sub_6978((uint64_t)v170, v61, &v195);
    uint64_t v64 = v186;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, v198);
    swift_bridgeObjectRelease_n(v61, 3LL);
    _os_log_impl( &dword_0,  v153,  v154,  "AppResolutionCommonStrategy#makeAppResolutionStateFromParse pommesResponse contains invalid appBundleId in disambi guation response and invalid launchID %s",  v155,  0xCu);
    swift_arrayDestroy(v157, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v157, -1LL, -1LL);
    swift_slowDealloc(v155, -1LL, -1LL);

    uint64_t v158 = v117;
    uint64_t v159 = v169;
  }

  else
  {

    swift_bridgeObjectRelease_n(v61, 2LL);
    uint64_t v158 = v117;
    uint64_t v159 = v58;
  }

  v179(v158, v159);
  uint64_t v161 = (uint64_t (*)(char *, uint64_t))v180;
  uint64_t v162 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v163 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v164 = swift_allocError(v162, v163, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v162 - 8) + 104LL))( v165,  enum case for PlaybackCode.ceGE19(_:),  v162);
  swift_release(v174);
  swift_release(v171);
  sub_1F6CC(v111, &qword_284900);
  uint64_t result = v161(v64, v193);
  *(void *)a2 = v164;
  char v160 = 1;
LABEL_50:
  *(_BYTE *)(a2 + 40) = v160;
  return result;
}

uint64_t sub_1386D0( uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v62 = a7;
  uint64_t v63 = a5;
  uint64_t v56 = a4;
  uint64_t v65 = a3;
  uint64_t v60 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  uint64_t v57 = v10;
  uint64_t v64 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v61 = (void (*)(void))type metadata accessor for Logger(0LL);
  os_log_type_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))*((void *)v61 - 1);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_289340);
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v55 + 64);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - v19;
  sub_FF10(a1, (uint64_t)v14, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    sub_1F6CC((uint64_t)v14, (uint64_t *)&unk_286BB0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v21 = (uint64_t)v61;
    uint64_t v22 = sub_6960((uint64_t)v61, (uint64_t)qword_2969C8);
    uint64_t v24 = v58;
    uint64_t v23 = v59;
    uint64_t v25 = v59[2](v58, v22, v21);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl( &dword_0,  v26,  v27,  "AppResolutionCommonStrategy#makePromptForConfirmation missing confirmApp template",  v28,  2u);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v23[1])(v24, v21);
    uint64_t v29 = type metadata accessor for CommandFailure(0LL);
    swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    uint64_t v30 = CommandFailure.init(errorCode:reason:)(-1LL, 0xD00000000000001BLL, 0x8000000000221290LL);
    uint64_t v31 = sub_10430( &qword_287D90,  (uint64_t (*)(uint64_t))&type metadata accessor for CommandFailure,  (uint64_t)&protocol conformance descriptor for CommandFailure);
    uint64_t v32 = swift_allocError(v29, v31, 0LL, 0LL);
    *uint64_t v33 = v30;
    v66[0] = v32;
    char v67 = 1;
    a2(v66);
    uint64_t v34 = (uint64_t *)&unk_286C60;
    uint64_t v35 = (char *)v66;
  }

  else
  {
    uint64_t v36 = *(int *)(v15 + 48);
    uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v20, v14, v37);
    uint64_t v39 = *(void **)&v14[v36];
    *(void *)&v20[v36] = v39;
    unint64_t v61 = (void (*)(void))a2;
    uint64_t v40 = v62;
    id v41 = *(void (**)(uint64_t, uint64_t))(v62 + 48);
    os_log_type_t v59 = v39;
    uint64_t v42 = v56;
    v41(a6, v40);
    uint64_t v43 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v64, v42, a6);
    uint64_t v44 = *(int *)(v15 + 48);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v18, v20, v37);
    *(void *)&v18[v44] = v59;
    uint64_t v45 = *(unsigned __int8 *)(v43 + 80);
    uint64_t v46 = (v45 + 32) & ~v45;
    uint64_t v47 = *(unsigned __int8 *)(v55 + 80);
    uint64_t v48 = (v57 + v46 + v47) & ~v47;
    unint64_t v49 = (v16 + v48 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v50 = swift_allocObject(&unk_270A30, v49 + 16, v45 | v47 | 7);
    *(void *)(v50 + swift_weakDestroy(v0 + 16) = a6;
    *(void *)(v50 + 24) = v40;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v50 + v46, v64, a6);
    sub_45F6C((uint64_t)v18, v50 + v48, &qword_289340);
    unint64_t v51 = (void *)(v50 + v49);
    uint64_t v52 = v65;
    *unint64_t v51 = v61;
    v51[1] = v52;
    swift_getAssociatedTypeWitness(0LL);
    swift_getAssociatedTypeWitness(0LL);
    swift_retain(v52);
    sub_99AEC(v63, (void (*)(uint64_t))sub_14078C, v50);
    swift_release(v50);
    uint64_t v35 = v20;
    uint64_t v34 = &qword_289340;
  }

  return sub_1F6CC((uint64_t)v35, v34);
}

uint64_t sub_138B80( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v47 = a3;
  uint64_t v51 = a2;
  uint64_t v46 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v46);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v12 = __chkstk_darwin(v45);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v41 - v15;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v17, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, v17);
  uint64_t v48 = a1;
  uint64_t v22 = sub_FF10(a1, (uint64_t)v16, (uint64_t *)&unk_286C50);
  uint64_t v23 = v18;
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc(12LL, -1LL);
    uint64_t v42 = v23;
    os_log_type_t v27 = (uint8_t *)v26;
    uint64_t v28 = swift_slowAlloc(32LL, -1LL);
    uint64_t v43 = a6;
    uint64_t v29 = v28;
    uint64_t v53 = v28;
    uint64_t v44 = a7;
    *(_DWORD *)os_log_type_t v27 = 136315138;
    v41[1] = v27 + 4;
    sub_FF10((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_286C50);
    uint64_t v30 = String.init<A>(describing:)(v14, v45);
    unint64_t v32 = v31;
    uint64_t v52 = sub_6978(v30, v31, &v53);
    a7 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
    swift_bridgeObjectRelease(v32);
    sub_1F6CC((uint64_t)v16, (uint64_t *)&unk_286C50);
    _os_log_impl( &dword_0,  v24,  v25,  "AppResolutionCommonStrategy#makePromptForConfirmation makeNLContextProvider returned: %s",  v27,  0xCu);
    swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v33 = v29;
    a6 = v43;
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v27, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v17);
  }

  else
  {
    sub_1F6CC((uint64_t)v16, (uint64_t *)&unk_286C50);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v17);
  }

  uint64_t v34 = *(int *)(v46 + 48);
  uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v11, v47, v35);
  uint64_t v38 = *(void **)(v37 + v34);
  *(void *)&v11[v34] = v38;
  id v39 = v38;
  sub_138EE0((uint64_t)v11, v39, v48, v49, v50, a6, a7);

  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v35);
}

uint64_t sub_138EE0( uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v114 = a6;
  uint64_t v116 = a5;
  uint64_t v117 = a3;
  uint64_t v119 = a4;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v109 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v110 = v11;
  uint64_t v111 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = type metadata accessor for ResponseMode(0LL);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v113 = (char *)&v94 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v94 - v20;
  uint64_t v22 = sub_6C5C(&qword_289340);
  uint64_t v106 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v108 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v94 - v25;
  uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v28 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16LL);
  uint64_t v103 = v27;
  uint64_t v102 = v28;
  ((void (*)(char *, uint64_t))v28)(v26, a1);
  uint64_t v104 = v22;
  uint64_t v29 = *(int *)(v22 + 48);
  uint64_t v118 = (uint64_t *)v26;
  *(void *)&v26[v29] = a2;
  uint64_t v30 = qword_283888;
  id v105 = a2;
  if (v30 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v13, (uint64_t)qword_2969C8);
  unint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v33 = v32(v21, v31, v13);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v98 = v17;
    uint64_t v36 = swift_slowAlloc(12LL, -1LL);
    uint64_t v97 = a7;
    uint64_t v37 = (uint8_t *)v36;
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v112 = v13;
    uint64_t v39 = v38;
    v122[0] = v38;
    uint64_t v95 = v14;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v96 = v31;
    uint64_t v40 = static Insights.responseFramework.getter(v38);
    unint64_t v42 = v41;
    *(void *)&v120[0] = sub_6978(v40, v41, v122);
    uint64_t v31 = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, (char *)v120 + 8);
    unint64_t v43 = v42;
    uint64_t v17 = v98;
    swift_bridgeObjectRelease(v43);
    _os_log_impl(&dword_0, v34, v35, "AppResolutionCommonStrategy#confirmationViewOutput... %{public}s", v37, 0xCu);
    swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v44 = v39;
    uint64_t v13 = v112;
    swift_slowDealloc(v44, -1LL, -1LL);
    uint64_t v45 = v37;
    a7 = v97;
    swift_slowDealloc(v45, -1LL, -1LL);

    uint64_t v46 = *(void (**)(char *, uint64_t))(v95 + 8);
  }

  else
  {

    uint64_t v46 = *(void (**)(char *, uint64_t))(v14 + 8);
  }

  v46(v21, v13);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 40))(v122, v114, a7);
  uint64_t v47 = v123;
  uint64_t v48 = v124;
  sub_6EA8(v122, v123);
  LOBYTE(v47) = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v47, v48);
  uint64_t v49 = sub_6C3C(v122);
  if ((v47 & 1) != 0)
  {
    uint64_t v50 = static SiriEnvironmentWrapper.retrieve()(v49);
    if (!v50)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v50 = static SiriEnvironment.default.getter();
    }

    uint64_t v51 = v50;
    v32(v113, v31, v13);
    uint64_t v52 = swift_retain_n(v51, 2LL);
    uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.info.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v115 = v46;
      uint64_t v57 = v56;
      v122[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v112 = v13;
      uint64_t v58 = SiriEnvironment.currentRequest.getter(v56);
      os_log_type_t v59 = v99;
      CurrentRequest.responseMode.getter(v58);
      uint64_t v60 = swift_release(v58);
      uint64_t v61 = ResponseMode.description.getter(v60);
      unint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v59, v101);
      *(void *)&v120[0] = sub_6978(v61, v63, v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, (char *)v120 + 8);
      swift_release_n(v51, 2LL);
      swift_bridgeObjectRelease(v63);
      _os_log_impl( &dword_0,  v53,  v54,  "AppResolutionCommonStrategy#confirmationViewOutput with responseMode = %s",  v55,  0xCu);
      swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v55, -1LL, -1LL);

      v115(v113, v112);
    }

    else
    {

      swift_release_n(v51, 2LL);
      v46(v113, v13);
    }

    uint64_t v74 = v111;
    sub_FF10(v117, v111, (uint64_t *)&unk_286C50);
    uint64_t v75 = *(int *)(v104 + 48);
    uint64_t v76 = (uint64_t)v108;
    uint64_t v77 = v118;
    v102(v108, v118, v103);
    uint64_t v78 = v105;
    *(void *)(v76 + v75) = v105;
    uint64_t v79 = *(unsigned __int8 *)(v109 + 80);
    uint64_t v80 = (v79 + 16) & ~v79;
    unint64_t v81 = (v110 + v80 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v82 = *(unsigned __int8 *)(v106 + 80);
    uint64_t v83 = (v82 + v81 + 8) & ~v82;
    uint64_t v84 = swift_allocObject(&unk_270A58, v83 + v107, v79 | v82 | 7);
    sub_45F6C(v74, v84 + v80, (uint64_t *)&unk_286C50);
    *(void *)(v84 + v81) = v51;
    sub_45F6C(v76, v84 + v83, &qword_289340);
    id v85 = v78;
    swift_retain(v51);
    uint64_t v86 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v119, v116, &unk_28AA50, v84, v86);
    swift_release(v51);
    swift_release(v84);
    uint64_t v87 = v77;
    uint64_t v88 = &qword_289340;
  }

  else
  {
    uint64_t v64 = v32(v17, v31, v13);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.default.getter(v65);
    if (os_log_type_enabled(v65, v66))
    {
      char v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = v13;
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      v122[0] = v69;
      *(_DWORD *)char v67 = 136446210;
      uint64_t v70 = static Insights.responseFramework.getter(v69);
      unint64_t v72 = v71;
      *(void *)&v120[0] = sub_6978(v70, v71, v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, (char *)v120 + 8);
      swift_bridgeObjectRelease(v72);
      _os_log_impl( &dword_0,  v65,  v66,  "AppResolutionCommonStrategy#confirmationViewOutput creating confirmationViewOutput %{public}s",  v67,  0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);

      uint64_t v73 = ((uint64_t (*)(char *, uint64_t))v46)(v17, v68);
    }

    else
    {

      uint64_t v73 = ((uint64_t (*)(char *, uint64_t))v46)(v17, v13);
    }

    char v89 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v73);
    uint64_t v90 = type metadata accessor for AceOutput(0LL);
    memset(v120, 0, sizeof(v120));
    uint64_t v121 = 0LL;
    uint64_t v123 = v90;
    os_log_type_t v124 = &protocol witness table for AceOutput;
    sub_10974(v122);
    uint64_t v91 = v89 & 1;
    uint64_t v92 = (uint64_t)v118;
    static AceOutputHelper.makeConfirmationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v118,  v91,  _swiftEmptyArrayStorage,  1LL,  1LL,  v117,  _swiftEmptyArrayStorage,  v120);
    sub_1F6CC((uint64_t)v120, &qword_2845C8);
    char v125 = 0;
    v119(v122);
    sub_1F6CC(v92, &qword_289340);
    uint64_t v88 = (uint64_t *)&unk_286C60;
    uint64_t v87 = v122;
  }

  return sub_1F6CC((uint64_t)v87, v88);
}

uint64_t sub_1397A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[8] = v6;
  v4[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_289340);
  v4[10] = v7;
  v4[11] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[14] = v10;
  v4[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_13987C, 0LL, 0LL);
}

uint64_t sub_13987C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  __int128 v45 = *(_OWORD *)(v1 + 32);
  static DialogPhase.confirmation.getter(a1);
  uint64_t v6 = *(int *)(v4 + 48);
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v46(v3, v5, v7);
  uint64_t v9 = *(void **)(v5 + v6);
  uint64_t v47 = v6;
  *(void *)(v3 + v6) = v9;
  uint64_t v10 = swift_task_alloc(48LL);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = v45;
  *(void *)(v10 + 32) = v3;
  id v11 = v9;
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_1409EC, v10);
  swift_task_dealloc(v10);
  sub_1F6CC(v3, &qword_289340);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v15 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter(v17);
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v21 = *(void *)(v1 + 64);
  uint64_t v20 = *(void *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 56);
  if (v19)
  {
    uint64_t v43 = *(void *)(v1 + 56);
    uint64_t v42 = *(void *)(v1 + 72);
    uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = v4;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    uint64_t v25 = static Insights.responseFramework.getter(v24);
    unint64_t v27 = v26;
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = sub_6978(v25, v26, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v17,  v18,  "AppResolutionCommonStrategy#confirmationViewOutput creating confirmationViewOutput using RF 2.0 %{public}s",  v23,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v28 = v24;
    uint64_t v4 = v44;
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v42, v43);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }

  uint64_t v29 = *(void *)(v1 + 88);
  uint64_t v30 = *(void *)(v1 + 48);
  uint64_t v31 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  *(void *)(v1 + 128) = ResponseFactory.init()();
  uint64_t v32 = sub_6C5C(&qword_287980);
  uint64_t v33 = swift_allocObject(v32, 40LL, 7LL);
  *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v34 = *(int *)(v4 + 48);
  uint64_t v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v29, v30, v7);
  uint64_t v36 = *(void **)(v5 + v47);
  *(void *)(v29 + v34) = v36;
  *(void *)(v33 + 32) = v36;
  uint64_t v49 = v33;
  specialized Array._endMutation()(v35);
  uint64_t v37 = v49;
  *(void *)(v1 + 136) = v49;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  id v39 = v36;
  v38(v29, v7);
  *(void *)(v1 + 144) = v40;
  void *v40 = v1;
  v40[1] = sub_1266C4;
  return ((uint64_t (*)(void, uint64_t, void))v48)(*(void *)(v1 + 24), v37, *(void *)(v1 + 120));
}

uint64_t sub_139BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a2, (uint64_t)v14, (uint64_t *)&unk_286C50);
  OutputGenerationManifest.nlContextUpdate.setter(v14);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  uint64_t v15 = OutputGenerationManifest.canUseServerTTS.setter(1LL);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v18);
}

uint64_t sub_139DB4( void *a1, void *a2, void (*a3)(uint64_t *), void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  __int128 v45 = a1;
  uint64_t v9 = sub_6C5C(&qword_28AA80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v18 = (*(uint64_t (**)(char *, void *, uint64_t))(v10 + 16))(v12, a2, v9);
  uint64_t v42 = v16;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter(v19);
  int v41 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    os_log_t v39 = v19;
    id v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    v47[0] = v38;
    uint64_t v40 = v13;
    uint64_t v35 = v10;
    uint64_t v36 = v21;
    *(_DWORD *)id v21 = 136315138;
    uint64_t v34 = v21 + 4;
    uint64_t v22 = PaginatedItemContainer.items.getter(v9);
    uint64_t v23 = type metadata accessor for App(0LL);
    uint64_t v24 = Array.description.getter(v22, v23);
    uint64_t v37 = v14;
    unint64_t v26 = v25;
    swift_bridgeObjectRelease(v22);
    uint64_t v46 = sub_6978(v24, v26, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47);
    __n128 v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v12, v9, v27);
    os_log_t v28 = v39;
    uint64_t v29 = v36;
    _os_log_impl( &dword_0,  v39,  (os_log_type_t)v41,  "AppResolutionStrategy#makePromptForDisambiguation with apps: %s",  v36,  0xCu);
    uint64_t v30 = v38;
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v40);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
  }

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 40))(v47, a5, a6);
  uint64_t v31 = v48;
  uint64_t v32 = v49;
  sub_6EA8(v47, v48);
  LOBYTE(v31) = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v31, v32);
  sub_6C3C(v47);
  if ((v31 & 1) != 0) {
    return sub_13A114(v45, a2, (uint64_t)v43, (uint64_t)v44, a5, a6);
  }
  else {
    return sub_13A5F8(v45, (uint64_t)a2, v43, v44, a5, a6);
  }
}

uint64_t sub_13A114(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v68 = a4;
  uint64_t v69 = a1;
  uint64_t v66 = a3;
  uint64_t v71 = sub_6C5C(&qword_28AA80);
  uint64_t v67 = *(void *)(v71 - 8);
  uint64_t v9 = __chkstk_darwin(v71);
  uint64_t v63 = v10;
  uint64_t v70 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = *(void *)(a5 - 8);
  __chkstk_darwin(v9);
  uint64_t v61 = v11;
  uint64_t v64 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc(12LL, -1LL);
    uint64_t v60 = a5;
    id v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    v73[0] = v22;
    uint64_t v59 = a6;
    *(_DWORD *)id v21 = 136446210;
    uint64_t v23 = static Insights.responseFramework.getter(v22);
    uint64_t v58 = a2;
    unint64_t v25 = v24;
    uint64_t v72 = sub_6978(v23, v24, v73);
    a6 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, v73);
    unint64_t v26 = v25;
    a2 = v58;
    swift_bridgeObjectRelease(v26);
    _os_log_impl(&dword_0, v18, v19, "AppResolutionStrategy#promptForDisambiguationWithRF... %{public}s", v21, 0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    a5 = v60;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unint64_t v27 = PaginatedItemContainer.items.getter(v71);
  __chkstk_darwin(v27);
  *(&v56 - 4) = a5;
  *(&v56 - sub_6C3C(v0 + 3) = a6;
  uint64_t v28 = v62;
  *(&v56 - 2) = v62;
  uint64_t v29 = sub_13634C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_140DA8, (uint64_t)(&v56 - 6), v27);
  swift_bridgeObjectRelease(v27);
  v73[0] = (uint64_t)v29;
  swift_bridgeObjectRetain(v29);
  sub_13F3F0(v73);
  __n128 v30 = swift_bridgeObjectRelease(v29);
  uint64_t v31 = v73[0];
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a6 + 32))(a5, a6, v30);
  uint64_t v32 = *(void *)(v31 + 16);
  uint64_t v59 = v31;
  if (v32)
  {
    uint64_t v33 = a2;
    v73[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v32);
    uint64_t v34 = (uint64_t *)(v31 + 80);
    do
    {
      uint64_t v35 = *v34;
      v34 += 9;
      uint64_t v36 = swift_retain(v35);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      uint64_t v37 = *(void *)(v73[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v37);
      uint64_t v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
      specialized ContiguousArray._endMutation()(v38);
      --v32;
    }

    while (v32);
    uint64_t v58 = (void *)v73[0];
    a2 = v33;
  }

  else
  {
    uint64_t v58 = _swiftEmptyArrayStorage;
  }

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 40))(v73, a5, a6);
  uint64_t v39 = v74;
  uint64_t v40 = v75;
  sub_6EA8(v73, v74);
  uint64_t v57 = dispatch thunk of FeatureFlagProviding.appSelectionUsageCounter.getter(v39, v40);
  int v41 = v64;
  uint64_t v42 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v28, a5);
  uint64_t v43 = v67;
  uint64_t v44 = a6;
  uint64_t v45 = v71;
  (*(void (**)(char *, void *, uint64_t))(v67 + 16))(v70, a2, v71);
  uint64_t v46 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v47 = (v46 + 48) & ~v46;
  uint64_t v48 = a5;
  unint64_t v49 = (v61 + v47 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v50 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v51 = (v50 + v49 + 8) & ~v50;
  uint64_t v52 = (char *)swift_allocObject(&unk_270B20, v51 + v63, v46 | v50 | 7);
  *((void *)v52 + 2) = v48;
  *((void *)v52 + sub_6C3C(v0 + 3) = v44;
  uint64_t v53 = v68;
  *((void *)v52 + 4) = v66;
  *((void *)v52 + 5) = v53;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v52[v47], v41, v48);
  *(void *)&v52[v49] = v59;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v52[v51], v70, v45);
  swift_retain(v53);
  uint64_t v54 = v60;
  sub_1F4758(v69, v57, (uint64_t)sub_140E90, (uint64_t)v52);
  swift_release(v52);
  swift_release(v54);
  swift_bridgeObjectRelease(v58);
  return sub_6C3C(v73);
}

uint64_t sub_13A5F8( void *a1, uint64_t a2, void (*a3)(uint64_t *), void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  uint64_t v113 = a6;
  uint64_t v114 = a5;
  uint64_t v110 = a3;
  uint64_t v111 = a4;
  uint64_t v99 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v98 = v8;
  uint64_t v102 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AcceptedSpeakerIdConfidence(0LL);
  uint64_t v94 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v103 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_28AA80);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v106 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v88 - v16;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  os_log_type_t v19 = *(void **)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v109 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v88 - v22;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v18, (uint64_t)qword_2969C8);
  unint64_t v25 = (uint64_t (*)(char *, uint64_t, uint64_t))v19[2];
  uint64_t v107 = v24;
  uint64_t v108 = v25;
  ((void (*)(char *))v25)(v23);
  uint64_t v112 = v19;
  unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v96 = a2;
  v26(v17, a2, v12);
  id v27 = a1;
  uint64_t v28 = v18;
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v30 = static os_log_type_t.default.getter(v29);
  int v104 = v30;
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v95 = v12;
  uint64_t v91 = v26;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc(22LL, -1LL);
    uint64_t v105 = v13;
    uint64_t v33 = v32;
    uint64_t v88 = swift_slowAlloc(64LL, -1LL);
    v116[0] = v88;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v89 = v28;
    uint64_t v90 = v9;
    uint64_t v34 = v106;
    v26(v106, (uint64_t)v17, v12);
    uint64_t v35 = String.init<A>(describing:)(v34, v12);
    unint64_t v37 = v36;
    *(void *)&__int128 v120 = sub_6978(v35, v36, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 8);
    __n128 v38 = swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t, __n128))(v105 + 8))(v17, v12, v38);
    *(_WORD *)(v33 + 12) = 2080;
    *(void *)&__int128 v120 = a1;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(255LL);
    uint64_t v40 = type metadata accessor for Optional(0LL, AssociatedTypeWitness);
    uint64_t v41 = Optional.debugDescription.getter(v40);
    unint64_t v43 = v42;
    *(void *)&__int128 v120 = sub_6978(v41, v42, v116);
    uint64_t v9 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 8);

    swift_bridgeObjectRelease(v43);
    _os_log_impl( &dword_0,  v29,  (os_log_type_t)v104,  "AppResolutionCommonStrategy#promptForDisambiguation with apps: %s, intent: %s",  (uint8_t *)v33,  0x16u);
    uint64_t v44 = v88;
    swift_arrayDestroy(v88, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    uint64_t v45 = v33;
    uint64_t v13 = v105;
    swift_slowDealloc(v45, -1LL, -1LL);

    uint64_t v46 = (void (*)(char *, uint64_t))v112[1];
    uint64_t v47 = v89;
    v46(v23, v89);
    if (!a1) {
      goto LABEL_10;
    }
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);

    uint64_t v46 = (void (*)(char *, uint64_t))v112[1];
    v46(v23, v28);
    uint64_t v47 = v28;
    if (!a1)
    {
LABEL_10:
      uint64_t v122 = 0LL;
      __int128 v120 = 0u;
      __int128 v121 = 0u;
      goto LABEL_11;
    }
  }

  uint64_t v112 = a1;
  id v115 = v27;
  uint64_t v48 = swift_getAssociatedTypeWitness(0LL);
  unint64_t v49 = (char *)v27;
  uint64_t v50 = sub_6C5C(&qword_286638);
  if ((swift_dynamicCast(&v120, &v115, v48, v50, 6LL) & 1) == 0) {
    goto LABEL_10;
  }
  if (*((void *)&v121 + 1))
  {
    uint64_t v51 = sub_FF54(&v120, (uint64_t)v116);
    static InstalledAppProvider.shared.getter(v51);
    uint64_t v52 = v117;
    uint64_t v53 = v118;
    sub_6EA8(v116, v117);
    uint64_t v109 = v49;
    uint64_t v54 = v94;
    uint64_t v55 = v93;
    (*(void (**)(char *, void, uint64_t))(v94 + 104))( v93,  enum case for AcceptedSpeakerIdConfidence.executeOnCompanionConfidence(_:),  v9);
    uint64_t v56 = dispatch thunk of PrivateMediaIntentDataProviding.getSharedUserID(speakerConfidence:)(v55, v52, v53);
    uint64_t v107 = v57;
    uint64_t v108 = (uint64_t (*)(char *, uint64_t, uint64_t))v56;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v9);
    uint64_t v58 = v106;
    uint64_t v59 = v95;
    v91(v106, v96, v95);
    uint64_t v60 = v99;
    uint64_t v61 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v102, v97, v114);
    uint64_t v62 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v63 = (v62 + 32) & ~v62;
    uint64_t v64 = *(unsigned __int8 *)(v60 + 80);
    uint64_t v65 = (v92 + v64 + v63) & ~v64;
    uint64_t v66 = v13;
    unint64_t v67 = (v98 + v65 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v68 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v69 = swift_allocObject(&unk_270B70, v68 + 16, v62 | v64 | 7);
    uint64_t v70 = v113;
    *(void *)(v69 + swift_weakDestroy(v0 + 16) = v61;
    *(void *)(v69 + 24) = v70;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v69 + v63, v58, v59);
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v69 + v65, v102, v61);
    uint64_t v71 = v111;
    *(void *)(v69 + v67) = v112;
    uint64_t v72 = (void (**)(uint64_t *))(v69 + v68);
    *uint64_t v72 = v110;
    v72[1] = v71;
    uint64_t v73 = v109;
    swift_retain(v71);
    uint64_t v74 = v107;
    uint64_t v75 = v103;
    InstalledAppProvider.installedApps(for:sharedUserId:useCache:alwaysIncludeCompanionApps:completion:)( 0LL,  v108,  v107,  1LL,  1LL,  sub_141868,  v69);
    swift_release(v69);
    __n128 v76 = swift_bridgeObjectRelease(v74);
    (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v75, v101, v76);
    return sub_6C3C(v116);
  }

uint64_t sub_13AE3C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void (*v8)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  void v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[9];
  uint64_t v7 = (_OWORD *)*a1;
  uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 24);
  swift_retain(*a1);
  v8(v18, a2, a3);
  uint64_t v9 = type metadata accessor for AppInfoBuilder();
  uint64_t inited = swift_initStackObject(v9, v17);
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = sub_1094C((uint64_t)v18, v19);
  __chkstk_darwin(v13);
  (*(void (**)(_BYTE *))(v15 + 16))(&v17[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)]);
  swift_retain(inited);
  sub_149840(v7, inited, _swiftEmptyArrayStorage, v11, v12, v21);
  sub_6C3C(v18);
  return sub_45F6C((uint64_t)v21, a4, &qword_2860B8);
}

void sub_13AF58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v118 = a6;
  uint64_t v127 = a5;
  uint64_t v128 = a4;
  char v125 = (void (*)(uint64_t *))a2;
  uint64_t v126 = a3;
  uint64_t v11 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v120 = *(void *)(v11 - 8);
  uint64_t v121 = v11;
  __chkstk_darwin(v11);
  uint64_t v119 = (uint64_t)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v13 = __chkstk_darwin(v115);
  uint64_t v114 = (uint64_t)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v122 = (uint64_t)&v105 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (uint8_t *)&v105 - v17;
  os_log_type_t v19 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for Logger(0LL);
  uint64_t v129 = *((void *)v19 - 1);
  uint64_t v130 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v123 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v105 - v22;
  uint64_t v24 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v24);
  unint64_t v26 = (char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C(&qword_289340);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v117 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  os_log_type_t v124 = (char *)&v105 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v105 - v32;
  sub_FF10(a1, (uint64_t)v26, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v26, v24) != 1)
  {
    uint64_t v51 = *(int *)(v27 + 48);
    uint64_t v52 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v112 = *(void *)(v52 - 8);
    uint64_t v53 = *(void (**)(char *, char *))(v112 + 32);
    uint64_t v111 = v52;
    v53(v33, v26);
    uint64_t v54 = *(void **)&v26[v51];
    *(void *)&v33[v51] = v54;
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(a8 + 48);
    id v116 = v54;
    v55(a7, a8);
    swift_getAssociatedTypeWitness(0LL);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    sub_99100((uint64_t)v127, AssociatedTypeWitness, (uint64_t)v18);
    uint64_t v107 = a8;
    uint64_t v110 = v33;
    uint64_t v57 = v27;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v58 = v130;
    uint64_t v59 = sub_6960((uint64_t)v130, (uint64_t)qword_2969C8);
    uint64_t v60 = v129;
    uint64_t v61 = v123;
    (*(void (**)(char *, uint64_t, void (*)(void, void, void, __n128)))(v129 + 16))( v123,  v59,  (void (*)(void, void, void, __n128))v58);
    uint64_t v62 = v122;
    uint64_t v63 = sub_FF10((uint64_t)v18, v122, (uint64_t *)&unk_286C50);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.default.getter(v64);
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v109 = a7;
    uint64_t v108 = v18;
    uint64_t v113 = v57;
    if (v66)
    {
      uint64_t v67 = swift_slowAlloc(22LL, -1LL);
      uint64_t v106 = swift_slowAlloc(64LL, -1LL);
      v132[0] = v106;
      *(_DWORD *)uint64_t v67 = 136315394;
      uint64_t v68 = v114;
      sub_FF10(v62, v114, (uint64_t *)&unk_286C50);
      uint64_t v69 = String.init<A>(describing:)(v68, v115);
      unint64_t v71 = v70;
      uint64_t v131 = sub_6978(v69, v70, v132);
      uint64_t v72 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
      swift_bridgeObjectRelease(v71);
      uint64_t v73 = sub_1F6CC(v62, (uint64_t *)&unk_286C50);
      *(_WORD *)(v67 + 12) = 2082;
      uint64_t v74 = static Insights.responseFramework.getter(v73);
      unint64_t v76 = v75;
      uint64_t v131 = sub_6978(v74, v75, v132);
      uint64_t v77 = (uint64_t)v110;
      uint64_t v57 = v113;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
      swift_bridgeObjectRelease(v76);
      _os_log_impl( &dword_0,  v64,  v65,  "AppResolutionStrategy#makePromptForDisambiguation makeNLContextProvider returned: %s %{public}s",  (uint8_t *)v67,  0x16u);
      uint64_t v78 = v106;
      swift_arrayDestroy(v106, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);

      (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v129 + 8))(v61, v130);
    }

    else
    {
      sub_1F6CC(v62, (uint64_t *)&unk_286C50);

      (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v60 + 8))(v61, v58);
      uint64_t v72 = v111;
      uint64_t v77 = (uint64_t)v110;
    }

    uint64_t v79 = *(int *)(v57 + 48);
    uint64_t v80 = v112;
    os_log_type_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
    uint64_t v82 = v124;
    v81(v124, v77, v72);
    uint64_t v83 = v116;
    *(void *)&v82[v79] = v116;
    id v84 = [v83 dialog];
    uint64_t v85 = sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
    uint64_t v86 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v84, v85);

    if ((unint64_t)v86 >> 62)
    {
      if (v86 < 0) {
        uint64_t v94 = v86;
      }
      else {
        uint64_t v94 = v86 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v86);
      uint64_t v95 = _CocoaArrayWrapper.endIndex.getter(v94);
      swift_bridgeObjectRelease(v86);
      uint64_t v130 = v81;
      if (v95) {
        goto LABEL_14;
      }
    }

    else
    {
      uint64_t v87 = *(void *)((char *)&dword_10 + (v86 & 0xFFFFFFFFFFFFF8LL));
      uint64_t v130 = v81;
      if (v87)
      {
LABEL_14:
        if ((v86 & 0xC000000000000001LL) != 0)
        {
          id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v86);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v86 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            return;
          }

          id v88 = *(id *)(v86 + 32);
        }

        uint64_t v89 = v88;
        id v90 = objc_msgSend(v88, "fullPrint", swift_bridgeObjectRelease(v86).n128_f64[0]);

        uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        uint64_t v93 = v92;

LABEL_23:
        uint64_t v96 = *(void (**)(char *, uint64_t))(v80 + 8);
        v96(v82, v72);
        uint64_t v97 = sub_6C5C(&qword_28AA80);
        uint64_t v98 = PaginatedItemContainer.items.getter(v97);
        uint64_t v99 = v119;
        sub_13B914(v91, v93, v127, v119);
        swift_bridgeObjectRelease(v93);
        __n128 v100 = swift_bridgeObjectRelease(v98);
        uint64_t v101 = *(int *)(v113 + 48);
        uint64_t v102 = (uint64_t)v117;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v130)(v117, v77, v72, v100);
        uint64_t v103 = v116;
        *(void *)(v102 + v101) = v116;
        int v104 = v108;
        sub_140F1C(v99, v102, v103, v108, (uint64_t)v125, v126);

        (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v99, v121);
        sub_1F6CC((uint64_t)v104, (uint64_t *)&unk_286C50);
        sub_1F6CC(v77, &qword_289340);
        v96((char *)v102, v72);
        return;
      }
    }

    swift_bridgeObjectRelease(v86);
    uint64_t v91 = 0LL;
    uint64_t v93 = 0xE000000000000000LL;
    goto LABEL_23;
  }

  sub_1F6CC((uint64_t)v26, (uint64_t *)&unk_286BB0);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v34 = v130;
  uint64_t v35 = sub_6960((uint64_t)v130, (uint64_t)qword_2969C8);
  uint64_t v36 = v129;
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, void (*)(void, void, void, __n128)))(v129 + 16))( v23,  v35,  (void (*)(void, void, void, __n128))v34);
  __n128 v38 = (os_log_s *)Logger.logObject.getter(v37);
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    v132[0] = v41;
    *(_DWORD *)uint64_t v40 = 136446210;
    uint64_t v42 = static Insights.responseFramework.getter(v41);
    unint64_t v44 = v43;
    uint64_t v131 = sub_6978(v42, v43, v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132);
    swift_bridgeObjectRelease(v44);
    _os_log_impl( &dword_0,  v38,  v39,  "AppResolutionStrategy#promptForDisambiguationWithRF missing disambiguateApps dialog %{public}s",  v40,  0xCu);
    swift_arrayDestroy(v41, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v36 + 8))(v23, v34);
  uint64_t v45 = v125;
  uint64_t v46 = type metadata accessor for CommandFailure(0LL);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v47 = CommandFailure.init(errorCode:reason:)(-1LL, 0xD00000000000001FLL, 0x80000000002212B0LL);
  uint64_t v48 = sub_10430( &qword_287D90,  (uint64_t (*)(uint64_t))&type metadata accessor for CommandFailure,  (uint64_t)&protocol conformance descriptor for CommandFailure);
  uint64_t v49 = swift_allocError(v46, v48, 0LL, 0LL);
  *uint64_t v50 = v47;
  v132[0] = v49;
  char v133 = 1;
  v45(v132);
  sub_1F6CC((uint64_t)v132, (uint64_t *)&unk_286C60);
}

double sub_13B914@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v110 = a3;
  uint64_t v107 = a2;
  uint64_t v106 = a1;
  uint64_t v108 = a4;
  uint64_t v4 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v4);
  uint64_t v123 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v116 = type metadata accessor for SiriAudioDisambiguationItemModel(0LL);
  uint64_t v121 = *(void *)(v116 - 8);
  uint64_t v6 = __chkstk_darwin(v116);
  uint64_t v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v120 = (char *)&v103 - v9;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v122 = (char *)&v103 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v103 - v17;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v111 = *(uint64_t (**)(char *))(v11 + 16);
  uint64_t v112 = v19;
  uint64_t v20 = v111(v18);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v109 = v14;
  int v104 = v8;
  if (v23)
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    v127[0] = v25;
    *(_DWORD *)uint64_t v24 = 136446210;
    uint64_t v26 = static Insights.responseFramework.getter(v25);
    uint64_t v27 = v10;
    unint64_t v29 = v28;
    uint64_t v125 = sub_6978(v26, v28, v127);
    uint64_t v14 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, v126);
    unint64_t v30 = v29;
    uint64_t v10 = v27;
    swift_bridgeObjectRelease(v30);
    _os_log_impl(&dword_0, v21, v22, "MediaItemDisambiguationStrategy#disambiguationSnippet... %{public}s", v24, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);

    uint64_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v18;
    uint64_t v33 = v27;
  }

  else
  {

    uint64_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v18;
    uint64_t v33 = v10;
  }

  uint64_t v113 = v31;
  v31(v32, v33);
  v128[0] = _swiftEmptyArrayStorage;
  uint64_t v34 = v122;
  ((void (*)(char *, uint64_t, uint64_t))v111)(v122, v112, v10);
  uint64_t v35 = v110;
  uint64_t v36 = swift_bridgeObjectRetain_n(v110, 2LL);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = &loc_214000;
  uint64_t v105 = v10;
  if (!v39)
  {

    swift_bridgeObjectRelease_n(v35, 2LL);
    v113(v34, v10);
    uint64_t v50 = v35[2];
    if (!v50) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }

  uint64_t v41 = swift_slowAlloc(22LL, -1LL);
  uint64_t v119 = swift_slowAlloc(64LL, -1LL);
  v127[0] = v119;
  *(_DWORD *)uint64_t v41 = 136315394;
  uint64_t v42 = v35[2];
  if (v42)
  {
    swift_bridgeObjectRetain(v35);
    unint64_t v43 = v35 + 7;
    unint64_t v44 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v46 = *(v43 - 1);
      uint64_t v45 = *v43;
      swift_bridgeObjectRetain(*v43);
      if ((swift_isUniquelyReferenced_nonNull_native(v44) & 1) == 0) {
        unint64_t v44 = sub_1FC6C(0LL, v44[2] + 1LL, 1, v44);
      }
      unint64_t v48 = v44[2];
      unint64_t v47 = v44[3];
      if (v48 >= v47 >> 1) {
        unint64_t v44 = sub_1FC6C((void *)(v47 > 1), v48 + 1, 1, v44);
      }
      v44[2] = v48 + 1;
      uint64_t v49 = &v44[2 * v48];
      v49[4] = v46;
      void v49[5] = v45;
      v43 += 9;
      --v42;
    }

    while (v42);
    uint64_t v35 = v110;
    swift_bridgeObjectRelease(v110);
    uint64_t v10 = v105;
  }

  else
  {
    unint64_t v44 = _swiftEmptyArrayStorage;
  }

  uint64_t v51 = Array.description.getter(v44, &type metadata for String);
  unint64_t v53 = v52;
  swift_bridgeObjectRelease(v44);
  uint64_t v125 = sub_6978(v51, v53, v127);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, v126);
  swift_bridgeObjectRelease_n(v35, 2LL);
  swift_bridgeObjectRelease(v53);
  *(_WORD *)(v41 + 12) = 2082;
  uint64_t v55 = static Insights.responseFramework.getter(v54);
  unint64_t v57 = v56;
  uint64_t v125 = sub_6978(v55, v56, v127);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, v126);
  swift_bridgeObjectRelease(v57);
  _os_log_impl( &dword_0,  v37,  v38,  "AppResolutionStrategy#disambiguationSnippet ordered: %s %{public}s",  (uint8_t *)v41,  0x16u);
  uint64_t v58 = v119;
  swift_arrayDestroy(v119, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v58, -1LL, -1LL);
  swift_slowDealloc(v41, -1LL, -1LL);

  v113(v122, v10);
  uint64_t v14 = v109;
  uint64_t v40 = (void *)&loc_214000;
  uint64_t v50 = v35[2];
  if (v50)
  {
LABEL_19:
    uint64_t v59 = type metadata accessor for URL(0LL);
    uint64_t v114 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v59 - 8) + 56LL);
    uint64_t v115 = v59;
    __n128 v60 = swift_bridgeObjectRetain(v35);
    uint64_t v61 = (char **)(v35 + 6);
    uint64_t v62 = v116;
    uint64_t v63 = v120;
    uint64_t v64 = v121;
    os_log_type_t v65 = v104;
    do
    {
      BOOL v66 = *(v61 - 2);
      uint64_t v121 = v50;
      uint64_t v122 = v66;
      uint64_t v67 = *(v61 - 1);
      uint64_t v120 = *v61;
      uint64_t v68 = v61[1];
      uint64_t v70 = (uint64_t)v61[3];
      uint64_t v69 = v61[4];
      unint64_t v71 = v61[6];
      uint64_t v117 = v61[5];
      v114(v123, 1LL, 1LL, v115, v60);
      uint64_t v119 = v70;
      swift_bridgeObjectRetain(v70);
      uint64_t v118 = v69;
      uint64_t v72 = v69;
      uint64_t v73 = v71;
      swift_retain(v72);
      uint64_t v74 = v117;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRetain_n(v67, 2LL);
      swift_bridgeObjectRetain_n(v68, 2LL);
      unint64_t v75 = v122;
      uint64_t v122 = v67;
      unint64_t v76 = v120;
      uint64_t v120 = v68;
      SiriAudioDisambiguationItemModel.init(id:title:subtitle:imageURL:)(v75, v67, v76, v68, 0LL, 0LL, v123);
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v65, v63, v62);
      unint64_t v77 = v128[0];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v128[0]);
      uint64_t v117 = v74;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v77 = sub_C7044(0, *(void *)(v77 + 16) + 1LL, 1, v77);
      }
      unint64_t v80 = *(void *)(v77 + 16);
      unint64_t v79 = *(void *)(v77 + 24);
      uint64_t v81 = v121;
      if (v80 >= v79 >> 1) {
        unint64_t v77 = sub_C7044(v79 > 1, v80 + 1, 1, v77);
      }
      *(void *)(v77 + swift_weakDestroy(v0 + 16) = v80 + 1;
      uint64_t v62 = v116;
      (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))( v77 + ((*(unsigned __int8 *)(v64 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))
      + *(void *)(v64 + 72) * v80,
        v65,
        v116);
      swift_bridgeObjectRelease(v73);

      swift_release(v118);
      swift_bridgeObjectRelease(v119);
      swift_bridgeObjectRelease(v120);
      __n128 v82 = swift_bridgeObjectRelease(v122);
      v128[0] = v77;
      (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v63, v62, v82);
      v61 += 9;
      uint64_t v50 = v81 - 1;
    }

    while (v50);
    swift_bridgeObjectRelease(v110);
    uint64_t v10 = v105;
    uint64_t v14 = v109;
    uint64_t v40 = &loc_214000;
  }

uint64_t sub_13C2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a2, (uint64_t)v14, (uint64_t *)&unk_286C50);
  uint64_t v15 = OutputGenerationManifest.nlContextUpdate.setter(v14);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  return OutputGenerationManifest.canUseServerTTS.setter(1LL);
}

uint64_t sub_13C48C( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a7;
  uint64_t v84 = a5;
  uint64_t v14 = *(void *)(a7 - 8);
  __chkstk_darwin(a1);
  uint64_t v81 = v15;
  __n128 v82 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for Locale(0LL);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v76 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v87 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_28AA80);
  unint64_t v21 = PaginatedItemContainer.items.getter(v20);
  uint64_t v91 = v9;
  uint64_t v92 = a8;
  uint64_t v89 = a8;
  uint64_t v80 = a3;
  uint64_t v93 = a3;
  uint64_t v94 = a1;
  uint64_t v22 = sub_13634C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1418FC, (uint64_t)v90, v21);
  swift_bridgeObjectRelease(v21);
  v96[0] = (uint64_t)v22;
  swift_bridgeObjectRetain(v22);
  sub_13F3F0(v96);
  swift_bridgeObjectRelease(v22);
  uint64_t v23 = v96[0];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = v88;
  uint64_t v25 = sub_6960(v88, (uint64_t)qword_2969C8);
  uint64_t v26 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v19, v25, v24);
  uint64_t v27 = swift_retain_n(v23, 2LL);
  unint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  int v75 = static os_log_type_t.debug.getter();
  BOOL v29 = os_log_type_enabled(v28, (os_log_type_t)v75);
  uint64_t v85 = a6;
  uint64_t v86 = a4;
  uint64_t v83 = v14;
  if (v29)
  {
    unint64_t v30 = v28;
    uint64_t v74 = v9;
    uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = v32;
    v96[0] = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v34 = *(void *)(v23 + 16);
    if (v34)
    {
      uint64_t v72 = v32;
      uint64_t v73 = v31;
      swift_retain(v23);
      uint64_t v35 = (void *)(v23 + 56);
      uint64_t v36 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v37 = *(v35 - 1);
        uint64_t v38 = *v35;
        swift_bridgeObjectRetain(*v35);
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0) {
          uint64_t v36 = sub_1FC6C(0LL, v36[2] + 1LL, 1, v36);
        }
        unint64_t v40 = v36[2];
        unint64_t v39 = v36[3];
        if (v40 >= v39 >> 1) {
          uint64_t v36 = sub_1FC6C((void *)(v39 > 1), v40 + 1, 1, v36);
        }
        void v36[2] = v40 + 1;
        uint64_t v41 = &v36[2 * v40];
        v41[4] = v37;
        v41[5] = v38;
        v35 += 9;
        --v34;
      }

      while (v34);
      unint64_t v43 = v19;
      swift_release(v23);
      uint64_t v31 = v73;
      uint64_t v33 = v72;
    }

    else
    {
      uint64_t v36 = _swiftEmptyArrayStorage;
      unint64_t v43 = v19;
    }

    uint64_t v44 = Array.description.getter(v36, &type metadata for String);
    unint64_t v46 = v45;
    swift_bridgeObjectRelease(v36);
    uint64_t v95 = sub_6978(v44, v46, v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
    swift_release_n(v23, 2LL);
    swift_bridgeObjectRelease(v46);
    _os_log_impl( &dword_0,  v30,  (os_log_type_t)v75,  "AppResolutionCommonStrategy#promptForDisambiguation ordered: %s",  v31,  0xCu);
    swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);

    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v43, v88);
    uint64_t v9 = v74;
  }

  else
  {

    swift_release_n(v23, 2LL);
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v19, v24);
  }

  uint64_t v47 = v80;
  unint64_t v48 = v76;
  static SiriAudioEnvironment.siriLocale.getter(v42);
  uint64_t v88 = sub_141918(v23);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v78);
  uint64_t v87 = (*(uint64_t (**)(uint64_t))(v89 + 32))(v9);
  uint64_t v49 = *(void *)(v23 + 16);
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v79 = v23;
  if (v49)
  {
    v96[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v49);
    uint64_t v51 = (uint64_t *)(v23 + 80);
    do
    {
      uint64_t v52 = *v51;
      v51 += 9;
      uint64_t v53 = swift_retain(v52);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v53);
      uint64_t v54 = *(void *)(v96[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v54);
      uint64_t v55 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
      specialized ContiguousArray._endMutation()(v55);
      --v49;
    }

    while (v49);
    uint64_t v50 = (void *)v96[0];
  }

  uint64_t v56 = v89;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v89 + 40))(v96, v9, v89);
  uint64_t v57 = v97;
  uint64_t v58 = v98;
  sub_6EA8(v96, v97);
  uint64_t v59 = dispatch thunk of FeatureFlagProviding.appSelectionUsageCounter.getter(v57, v58);
  __n128 v60 = v82;
  uint64_t v61 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v47, v9);
  uint64_t v62 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v63 = (v62 + 48) & ~v62;
  unint64_t v64 = (v81 + v63 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  BOOL v66 = (char *)swift_allocObject(&unk_270B98, v65 + 8, v62 | 7);
  *((void *)v66 + 2) = v9;
  *((void *)v66 + sub_6C3C(v0 + 3) = v56;
  uint64_t v67 = v85;
  *((void *)v66 + 4) = v84;
  *((void *)v66 + 5) = v67;
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(&v66[v63], v60, v9);
  *(void *)&v66[v64] = v79;
  uint64_t v68 = v88;
  *(void *)&v66[v65] = v88;
  swift_retain(v67);
  swift_retain(v68);
  uint64_t v69 = v59;
  uint64_t v70 = v87;
  sub_1F4758(v86, v69, (uint64_t)sub_141C28, (uint64_t)v66);
  swift_release(v66);
  swift_release(v70);
  swift_bridgeObjectRelease(v50);
  swift_release(v68);
  return sub_6C3C(v96);
}

uint64_t sub_13CABC@<X0>(void *a1@<X0>, _OWORD *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  void (*v10)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  void v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[9];
  uint64_t v9 = (_OWORD *)*a1;
  uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 24);
  swift_retain(*a1);
  v10(v20, a3, a4);
  uint64_t v11 = type metadata accessor for AppInfoBuilder();
  uint64_t inited = swift_initStackObject(v11, v19);
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = sub_1094C((uint64_t)v20, v21);
  __chkstk_darwin(v15);
  (*(void (**)(_BYTE *))(v17 + 16))(&v19[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)]);
  swift_bridgeObjectRetain(a2);
  swift_retain(inited);
  sub_149840(v9, inited, a2, v13, v14, v23);
  sub_6C3C(v20);
  return sub_45F6C((uint64_t)v23, a5, &qword_2860B8);
}

uint64_t sub_13CBE0( uint64_t a1, void (*a2)(__int128 *), uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v115 = a6;
  uint64_t v116 = a5;
  uint64_t v123 = a4;
  uint64_t v125 = a3;
  uint64_t v126 = a2;
  uint64_t v11 = type metadata accessor for AceOutput(0LL);
  uint64_t v121 = *(void *)(v11 - 8);
  uint64_t v122 = v11;
  __chkstk_darwin(v11);
  uint64_t v120 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v13 = __chkstk_darwin(v114);
  uint64_t v113 = (uint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v117 = (uint64_t)&v107 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v107 - v17;
  uint64_t v127 = type metadata accessor for Logger(0LL);
  uint64_t v124 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v127 - 8);
  uint64_t v19 = __chkstk_darwin(v127);
  uint64_t v119 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v118 = (char *)&v107 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v107 - v23;
  uint64_t v25 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v28);
  unint64_t v30 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v27, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v27, v25) == 1)
  {
    sub_1F6CC((uint64_t)v27, (uint64_t *)&unk_286BB0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v31 = v127;
    uint64_t v32 = sub_6960(v127, (uint64_t)qword_2969C8);
    uint64_t v33 = v124;
    uint64_t v34 = v124[2](v24, v32, v31);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl( &dword_0,  v35,  v36,  "AppResolutionCommonStrategy#promptForDisambiguation missing disambiguateApps template",  v37,  2u);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    ((void (*)(char *, uint64_t))v33[1])(v24, v31);
    uint64_t v38 = type metadata accessor for CommandFailure(0LL);
    swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
    uint64_t v39 = CommandFailure.init(errorCode:reason:)(-1LL, 0xD000000000000021LL, 0x80000000002213A0LL);
    uint64_t v40 = sub_10430( &qword_287D90,  (uint64_t (*)(uint64_t))&type metadata accessor for CommandFailure,  (uint64_t)&protocol conformance descriptor for CommandFailure);
    uint64_t v41 = swift_allocError(v38, v40, 0LL, 0LL);
    *uint64_t v42 = v39;
    *(void *)&__int128 v129 = v41;
    char v132 = 1;
    v126(&v129);
  }

  else
  {
    uint64_t v43 = *(int *)(v28 + 48);
    uint64_t v44 = type metadata accessor for TemplatingResult(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32LL))(v30, v27, v44);
    *(void *)&v30[v43] = *(void *)&v27[v43];
    (*(void (**)(uint64_t, uint64_t))(a8 + 48))(a7, a8);
    swift_getAssociatedTypeWitness(0LL);
    uint64_t v110 = a8;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    sub_99100((uint64_t)v116, AssociatedTypeWitness, (uint64_t)v18);
    uint64_t v46 = (uint64_t)v30;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v47 = v127;
    uint64_t v48 = sub_6960(v127, (uint64_t)qword_2969C8);
    uint64_t v49 = v124;
    uint64_t v50 = v124[2];
    uint64_t v51 = v118;
    uint64_t v109 = v48;
    uint64_t v116 = v50;
    ((void (*)(char *))v50)(v118);
    uint64_t v52 = v117;
    uint64_t v53 = sub_FF10((uint64_t)v18, v117, (uint64_t *)&unk_286C50);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.default.getter(v54);
    BOOL v56 = os_log_type_enabled(v54, v55);
    uint64_t v112 = v18;
    uint64_t v111 = v46;
    if (v56)
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v58 = swift_slowAlloc(32LL, -1LL);
      uint64_t v108 = a7;
      uint64_t v59 = v58;
      *(void *)&__int128 v129 = v58;
      *(_DWORD *)uint64_t v57 = 136315138;
      uint64_t v60 = v113;
      sub_FF10(v52, v113, (uint64_t *)&unk_286C50);
      uint64_t v61 = String.init<A>(describing:)(v60, v114);
      unint64_t v63 = v62;
      uint64_t v128 = sub_6978(v61, v62, (uint64_t *)&v129);
      uint64_t v46 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
      swift_bridgeObjectRelease(v63);
      sub_1F6CC(v52, (uint64_t *)&unk_286C50);
      _os_log_impl( &dword_0,  v54,  v55,  "AppResolutionCommonStrategy#promptForDisambiguation makeNLContextProvider returned: %s",  v57,  0xCu);
      swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v64 = v59;
      a7 = v108;
      swift_slowDealloc(v64, -1LL, -1LL);
      unint64_t v65 = v57;
      uint64_t v47 = v127;
      swift_slowDealloc(v65, -1LL, -1LL);
    }

    else
    {
      sub_1F6CC(v52, (uint64_t *)&unk_286C50);
    }

    BOOL v66 = (uint64_t (**)(char *, uint64_t, uint64_t))v49[1];
    ((void (*)(char *, uint64_t))v66)(v51, v47);
    uint64_t v67 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t))(v110 + 56))(a7);
    uint64_t v69 = v68;
    uint64_t v70 = v67();
    swift_release(v69);
    uint64_t v71 = dispatch thunk of ViewFactory.makeUtteranceViews(template:listenAfterSpeaking:canUseServerTTS:)(v46, 1LL, 1LL);
    uint64_t v72 = swift_release(v70);
    uint64_t v73 = static SiriAudioEnvironment.isHomePod.getter(v72);
    if ((v73 & 1) != 0)
    {
      if ((unint64_t)v71 >> 62)
      {
        if (v71 < 0) {
          uint64_t v104 = v71;
        }
        else {
          uint64_t v104 = v71 & 0xFFFFFFFFFFFFFF8LL;
        }
        uint64_t v105 = sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
        swift_bridgeObjectRetain(v71);
        uint64_t v106 = _bridgeCocoaArray<A>(_:)(v104, v105);
        swift_bridgeObjectRelease_n(v71, 2LL);
        uint64_t v71 = v106;
      }

      else
      {
        swift_bridgeObjectRetain(v71);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v74);
        sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
        __n128 v75 = swift_bridgeObjectRelease(v71);
      }
    }

    else
    {
      uint64_t v76 = SiriKitDisambiguationList.disambiguationItems.getter(v73);
      uint64_t v77 = (void *)static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForAppleTV(disambiguationItems:)();
      swift_bridgeObjectRelease(v76);
      type metadata accessor for SiriKitAceViewBuilder(0LL);
      uint64_t v78 = type metadata accessor for SiriEnvironmentBackedDeviceState(0LL);
      swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
      uint64_t v79 = SiriEnvironmentBackedDeviceState.init()();
      *((void *)&v130 + 1) = v78;
      uint64_t v131 = (void *)sub_10430( (unint64_t *)&qword_289348,  (uint64_t (*)(uint64_t))&type metadata accessor for SiriEnvironmentBackedDeviceState,  (uint64_t)&protocol conformance descriptor for SiriEnvironmentBackedDeviceState);
      *(void *)&__int128 v129 = v79;
      uint64_t v80 = dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)(&v129);
      sub_6C3C(&v129);
      uint64_t v81 = dispatch thunk of SiriKitAceViewBuilder.withDisambiguationList(disambiguationList:)(v77);
      swift_release(v80);
      uint64_t v82 = dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)(v71);
      swift_release(v81);
      swift_bridgeObjectRelease(v71);
      uint64_t v71 = dispatch thunk of SiriKitAceViewBuilder.build()(v83);
      swift_release(v82);
    }

    uint64_t v84 = v119;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v116)(v119, v109, v47, v75);
    uint64_t v85 = swift_bridgeObjectRetain_n(v71, 2LL);
    uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
    os_log_type_t v87 = static os_log_type_t.default.getter(v86);
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = v84;
      uint64_t v89 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v90 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v129 = v90;
      *(_DWORD *)uint64_t v89 = 136315138;
      uint64_t v91 = sub_1641C(0LL, (unint64_t *)&qword_284648, &OBJC_CLASS___SAAceView_ptr);
      uint64_t v124 = v66;
      uint64_t v92 = v91;
      swift_bridgeObjectRetain(v71);
      uint64_t v94 = Array.description.getter(v93, v92);
      unint64_t v96 = v95;
      swift_bridgeObjectRelease(v71);
      uint64_t v128 = sub_6978(v94, v96, (uint64_t *)&v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
      swift_bridgeObjectRelease_n(v71, 2LL);
      swift_bridgeObjectRelease(v96);
      _os_log_impl(&dword_0, v86, v87, "AppResolutionCommonStrategy#promptForDisambiguation views: %s", v89, 0xCu);
      swift_arrayDestroy(v90, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v90, -1LL, -1LL);
      swift_slowDealloc(v89, -1LL, -1LL);

      uint64_t v97 = v88;
      uint64_t v46 = v111;
      ((void (*)(char *, uint64_t))v124)(v97, v127);
    }

    else
    {

      swift_bridgeObjectRelease_n(v71, 2LL);
      ((void (*)(char *, uint64_t))v66)(v84, v47);
    }

    uint64_t v98 = (uint64_t)v112;
    uint64_t v131 = 0LL;
    __int128 v129 = 0u;
    __int128 v130 = 0u;
    uint64_t v99 = v120;
    static AceOutputHelper.makeClarificationViewOutput(aceViews:nlContextUpdate:additionalCommands:flowActivity:)( v71,  v112,  _swiftEmptyArrayStorage,  &v129);
    swift_bridgeObjectRelease(v71);
    sub_1F6CC((uint64_t)&v129, &qword_2845C8);
    uint64_t v100 = v122;
    *((void *)&v130 + 1) = v122;
    uint64_t v131 = &protocol witness table for AceOutput;
    uint64_t v101 = sub_10974(&v129);
    uint64_t v102 = v121;
    (*(void (**)(void *, char *, uint64_t))(v121 + 16))(v101, v99, v100);
    char v132 = 0;
    v126(&v129);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v99, v100);
    sub_1F6CC(v98, (uint64_t *)&unk_286C50);
    sub_1F6CC(v46, &qword_289340);
  }

  return sub_1F6CC((uint64_t)&v129, (uint64_t *)&unk_286C60);
}

uint64_t sub_13D64C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v212 = a6;
  uint64_t v211 = a5;
  uint64_t v192 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v191 = v10;
  uint64_t v193 = (char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v194 = (char **)((char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v200 = (char *)&v189 - v16;
  uint64_t v199 = v17;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v189 - v18;
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v198 = (char *)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v190 = (char *)&v189 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v195 = (char *)&v189 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v196 = (char *)&v189 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v189 - v30;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v32 = sub_6960(v20, (uint64_t)qword_2969C8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, unint64_t))(v21 + 16);
  uint64_t v204 = v32;
  uint64_t v205 = v33;
  ((void (*)(char *))v33)(v31);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v209 = a2;
  uint64_t v201 = v34;
  v34(v19, a2, v11);
  id v35 = a1;
  unint64_t v213 = v20;
  uint64_t v208 = v21;
  id v36 = v35;
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v38 = static os_log_type_t.default.getter(v37);
  int v39 = v38;
  BOOL v40 = os_log_type_enabled(v37, v38);
  uint64_t v206 = a3;
  uint64_t v207 = a4;
  uint64_t v202 = v11;
  uint64_t v210 = v12;
  if (v40)
  {
    uint64_t v41 = swift_slowAlloc(22LL, -1LL);
    uint64_t v197 = swift_slowAlloc(64LL, -1LL);
    v218[0] = v197;
    *(_DWORD *)uint64_t v41 = 136315394;
    LODWORD(v189) = v39;
    *(void *)&__int128 v215 = v36;
    uint64_t v42 = v211;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL);
    uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, AssociatedTypeWitness);
    uint64_t v45 = sub_BBD38((uint64_t)&v215, AssociatedTypeWitness, WitnessTable);
    unint64_t v47 = v46;
    *(void *)&__int128 v215 = sub_6978(v45, v46, v218);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v215, (char *)&v215 + 8);

    swift_bridgeObjectRelease(v47);
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v48 = sub_10430( (unint64_t *)&unk_283AA0,  (uint64_t (*)(uint64_t))&type metadata accessor for AppResolutionResult.AppResolutionResultError,  (uint64_t)&protocol conformance descriptor for AppResolutionResult.AppResolutionResultError);
    uint64_t v49 = Error.localizedDescription.getter(v11, v48);
    unint64_t v51 = v50;
    *(void *)&__int128 v215 = sub_6978(v49, v50, v218);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v215, (char *)&v215 + 8);
    unint64_t v52 = v51;
    uint64_t v53 = v212;
    __n128 v54 = swift_bridgeObjectRelease(v52);
    os_log_type_t v55 = *(void (**)(char *, uint64_t, __n128))(v210 + 8);
    v55(v19, v11, v54);
    _os_log_impl( &dword_0,  v37,  (os_log_type_t)v189,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse intent: %s, reason:%s",  (uint8_t *)v41,  0x16u);
    uint64_t v56 = v197;
    swift_arrayDestroy(v197, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);

    uint64_t v208 = *(void *)(v208 + 8);
    ((void (*)(char *, unint64_t))v208)(v31, v213);
  }

  else
  {

    os_log_type_t v55 = *(void (**)(char *, uint64_t, __n128))(v12 + 8);
    ((void (*)(char *, uint64_t))v55)(v19, v11);

    uint64_t v208 = *(void *)(v208 + 8);
    ((void (*)(char *, unint64_t))v208)(v31, v213);
    uint64_t v42 = v211;
    uint64_t v53 = v212;
  }

  uint64_t v57 = type metadata accessor for InternalRenderingFlowStrategy();
  uint64_t v58 = swift_allocObject(v57, 16LL, 7LL);
  id v214 = v36;
  uint64_t v59 = swift_getAssociatedTypeWitness(0LL);
  id v60 = v36;
  uint64_t v61 = sub_6C5C((uint64_t *)&unk_286C70);
  uint64_t v62 = v42;
  if ((swift_dynamicCast(&v215, &v214, v59, v61, 6LL) & 1) == 0)
  {
    uint64_t v217 = 0LL;
    __int128 v215 = 0u;
    __int128 v216 = 0u;
    sub_1F6CC((uint64_t)&v215, &qword_2858C8);
    goto LABEL_12;
  }

  uint64_t v63 = v53;
  sub_FF54(&v215, (uint64_t)v218);
  sub_6EA8(v218, v218[3]);
  if (!CommonIntentSignals.handledBySiriForAirPlay()())
  {
    sub_6C3C(v218);
LABEL_12:
    uint64_t v68 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v69 = swift_dynamicCastObjCClass(v60, v68);
    if (!v69) {
      goto LABEL_66;
    }
    uint64_t v70 = (void *)v69;
    uint64_t v197 = v58;
    id v71 = v60;
    uint64_t v196 = (char *)0xD000000000000019LL;
    id v72 = objc_msgSend(v70, "mediaItems", swift_bridgeObjectRetain("er").n128_f64[0]);
    if (!v72) {
      goto LABEL_26;
    }
    uint64_t v73 = v72;
    uint64_t v74 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v73, v74);

    if ((unint64_t)v75 >> 62)
    {
      if (v75 < 0) {
        uint64_t v123 = v75;
      }
      else {
        uint64_t v123 = v75 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v75);
      uint64_t v124 = _CocoaArrayWrapper.endIndex.getter(v123);
      swift_bridgeObjectRelease(v75);
      if (v124)
      {
LABEL_16:
        if ((v75 & 0xC000000000000001LL) != 0)
        {
          id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v75);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v75 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            goto LABEL_75;
          }

          id v76 = *(id *)(v75 + 32);
        }

        uint64_t v77 = v76;
        id v78 = objc_msgSend(v76, "privateMediaItemValueData", swift_bridgeObjectRelease(v75).n128_f64[0]);

        if (v78)
        {
          id v79 = [v78 internalSignals];

          if (v79)
          {
            uint64_t v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v79, &type metadata for String);

            uint64_t v189 = *(void *)(v75 + 16);
            if (v189)
            {
              uint64_t v80 = *(char **)(v75 + 32);
              uint64_t v81 = *(char **)(v75 + 40);
              if (v80 == v196 && v81 == "er" || (_stringCompareWithSmolCheck(_:_:expecting:)(v80, v81) & 1) != 0)
              {
LABEL_25:
                swift_bridgeObjectRelease("er");
                swift_bridgeObjectRelease(v75);
                swift_arrayDestroy(&qword_26AF40, 1LL, &type metadata for String);
                uint64_t v62 = v211;
LABEL_54:
                uint64_t v125 = v195;
                unint64_t v126 = v213;
                uint64_t v127 = v205(v195, v204, v213);
                uint64_t v128 = (os_log_s *)Logger.logObject.getter(v127);
                os_log_type_t v129 = static os_log_type_t.default.getter(v128);
                if (os_log_type_enabled(v128, v129))
                {
                  __int128 v130 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                  *(_WORD *)__int128 v130 = 0;
                  _os_log_impl( &dword_0,  v128,  v129,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse Intent is PodcastPromotion.",  v130,  2u);
                  swift_slowDealloc(v130, -1LL, -1LL);
                }

                ((void (*)(char *, unint64_t))v208)(v125, v126);
                uint64_t v131 = v212;
                uint64_t v132 = (*(uint64_t (**)(uint64_t, uint64_t))(v212 + 32))(v62, v212);
                char v133 = v200;
                uint64_t v134 = v202;
                v201(v200, v209, v202);
                uint64_t v135 = v210;
                uint64_t v136 = *(unsigned __int8 *)(v210 + 80);
                uint64_t v137 = (v136 + 48) & ~v136;
                unint64_t v138 = (v199 + v137 + 7) & 0xFFFFFFFFFFFFFFF8LL;
                uint64_t v139 = (char *)swift_allocObject(&unk_270AD0, v138 + 16, v136 | 7);
                *((void *)v139 + 2) = v62;
                *((void *)v139 + sub_6C3C(v0 + 3) = v131;
                uint64_t v140 = v197;
                *((void *)v139 + 4) = v197;
                *((void *)v139 + 5) = v71;
                (*(void (**)(char *, char *, uint64_t))(v135 + 32))(&v139[v137], v133, v134);
                os_log_type_t v141 = &v139[v138];
                uint64_t v142 = v207;
                *(void *)os_log_type_t v141 = v206;
                *((void *)v141 + 1) = v142;
                id v143 = v71;
                swift_retain(v140);
                swift_retain(v142);
                sub_1F2118(v143, (void (*)(uint64_t *))sub_140C94, (uint64_t)v139);
                swift_release(v139);

                swift_release(v132);
                uint64_t v144 = v140;
                return swift_release(v144);
              }

              if (v189 != 1)
              {
                uint64_t v117 = (char **)(v75 + 56);
                uint64_t v118 = 1LL;
                while (1)
                {
                  uint64_t v119 = v118 + 1;
                  if (__OFADD__(v118, 1LL)) {
                    break;
                  }
                  uint64_t v120 = *(v117 - 1);
                  uint64_t v121 = *v117;
                  BOOL v122 = v120 == v196 && v121 == "er";
                  if (v122 || (_stringCompareWithSmolCheck(_:_:expecting:)(v120, v121) & 1) != 0) {
                    goto LABEL_25;
                  }
                  v117 += 2;
                  ++v118;
                  if (v119 == v189) {
                    goto LABEL_46;
                  }
                }

LABEL_46:
              swift_bridgeObjectRelease("er");
              swift_bridgeObjectRelease(v75);
              uint64_t v62 = v211;
              goto LABEL_53;
            }

            goto LABEL_51;
          }
        }

        swift_once(&qword_283888, sub_BFC5C);
        goto LABEL_11;
      }

      goto LABEL_19;
    }

    uint64_t v17 = (id)swift_bridgeObjectRelease(v20);
  }

                            id v185 = v346;
                            uint64_t v186 = v385;
                            uint64_t v187 = ((uint64_t (*)(char *, uint64_t, uint64_t))v345)(v346, v327, v385);
                            unint64_t v188 = (os_log_s *)Logger.logObject.getter(v187);
                            uint64_t v189 = static os_log_type_t.debug.getter();
                            if (os_log_type_enabled(v188, v189))
                            {
                              uint64_t v190 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                              *(_WORD *)uint64_t v190 = 0;
                              _os_log_impl( &dword_0,  v188,  v189,  "AmbiguousDetermineFlow#execute previous/next request so playback state of current item d oesn't matter, triggering Determine strategy",  v190,  2u);
                              uint64_t v191 = v190;
                              uint64_t v183 = v368;
                              swift_slowDealloc(v191, -1LL, -1LL);
                            }

                            ((void (*)(char *, uint64_t))v376)(v185, v186);
                            uint64_t v192 = v364;
                            uint64_t v193 = v354;
                            (*(void (**)(char *, void, uint64_t))(v364 + 104))( v354,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v184);
                            uint64_t v194 = v353;
                            uint64_t v195 = v355;
                            (*(void (**)(char *, void, uint64_t))(v183 + 104))( v353,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v355);
                            uint64_t v196 = v184;
                            uint64_t v198 = v347;
                            uint64_t v197 = v348;
                            uint64_t v199 = v349;
                            (*(void (**)(char *, void, uint64_t))(v348 + 104))( v347,  enum case for AdditionalMetricsDescription.StatusReason.hasPrevNext(_:),  v349);
                            uint64_t v200 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v193,  v194,  v198,  1LL,  0LL);
                            v384 = v201;
                            v385 = v200;
                            (*(void (**)(char *, uint64_t))(v197 + 8))(v198, v199);
                            (*(void (**)(char *, uint64_t))(v183 + 8))(v194, v195);
                            (*(void (**)(char *, uint64_t))(v192 + 8))(v193, v196);
                            uint64_t v202 = v359[16];
                            v381 = v359[17];
                            v380 = sub_6EA8(v359 + 13, v202);
                            uint64_t v203 = v370;
                            (*(void (**)(char *, void, uint64_t))(v372 + 104))( v370,  enum case for TypeOfIntent.determine(_:),  v373);
                            goto LABEL_49;
                          }

uint64_t sub_13E838( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  unint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v44 = a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for AceOutput(0LL);
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v41 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, (uint64_t)v18, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v18, v16) == 1)
  {
    uint64_t v23 = v47;
    uint64_t v22 = v48;
    sub_1F6CC((uint64_t)v18, (uint64_t *)&unk_286BB0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v24 = sub_6960(v13, (uint64_t)qword_2969C8);
    uint64_t v25 = v41;
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 16))(v15, v24, v13);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    uint64_t v29 = v22;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl( &dword_0,  v27,  v28,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse error evaluating failure template",  v30,  2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v13);
    *(void *)&__int128 v49 = v44;
    uint64_t v31 = type metadata accessor for InternalRenderingFlowStrategy();
    uint64_t v32 = sub_10430( &qword_28AA78,  (uint64_t (*)(uint64_t))type metadata accessor for InternalRenderingFlowStrategy,  (uint64_t)&unk_218A90);
    return AppResolutionFlowStrategy.makeAppResolutionUnsuccessfulResponse(intent:reason:completion:)( v45,  v46,  v23,  v29,  v31,  v32);
  }

  else
  {
    uint64_t v34 = *(int *)(v19 + 48);
    uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v36 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32LL))(v21, v18, v35);
    *(void *)&v21[v34] = *(void *)&v18[v34];
    LOBYTE(v34) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v36);
    uint64_t v37 = type metadata accessor for NLContextUpdate(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v9, 1LL, 1LL, v37);
    unint64_t v51 = 0LL;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    static AceOutputHelper.makeErrorOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v21,  v34 & 1,  _swiftEmptyArrayStorage,  1LL,  1LL,  v9,  _swiftEmptyArrayStorage,  &v49);
    sub_1F6CC((uint64_t)&v49, &qword_2845C8);
    sub_1F6CC((uint64_t)v9, (uint64_t *)&unk_286C50);
    uint64_t v38 = v43;
    *((void *)&v50 + 1) = v43;
    unint64_t v51 = &protocol witness table for AceOutput;
    int v39 = sub_10974(&v49);
    uint64_t v40 = v42;
    (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v39, v12, v38);
    char v52 = 0;
    v47(&v49);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v38);
    sub_1F6CC((uint64_t)v21, &qword_289340);
    return sub_1F6CC((uint64_t)&v49, (uint64_t *)&unk_286C60);
  }

uint64_t sub_13EC28( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v54 = a2;
  uint64_t v7 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v7);
  unint64_t v51 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = type metadata accessor for AceOutput(0LL);
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  char v52 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v50 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_289340);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v50 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v50 - v23;
  sub_FF10(a1, (uint64_t)v15, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v15, v13) == 1)
  {
    uint64_t v26 = v58;
    uint64_t v25 = v59;
    sub_1F6CC((uint64_t)v15, (uint64_t *)&unk_286BB0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v27 = sub_6960(v10, (uint64_t)qword_2969C8);
    uint64_t v28 = v50;
    uint64_t v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 16))(v12, v27, v10);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( &dword_0,  v30,  v31,  "AppResolutionCommonStrategy#makeAppResolutionUnsuccessfulResponse error evaluating failure template",  v32,  2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
    *(void *)&__int128 v60 = v54;
    uint64_t v33 = type metadata accessor for InternalRenderingFlowStrategy();
    uint64_t v34 = sub_10430( &qword_28AA78,  (uint64_t (*)(uint64_t))type metadata accessor for InternalRenderingFlowStrategy,  (uint64_t)&unk_218A90);
    return AppResolutionFlowStrategy.makeAppResolutionUnsuccessfulResponse(intent:reason:completion:)( v56,  v57,  v26,  v25,  v33,  v34);
  }

  else
  {
    uint64_t v36 = *(int *)(v16 + 48);
    uint64_t v37 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v24, v15, v37);
    int v39 = *(void **)&v15[v36];
    *(void *)&v24[v36] = v39;
    uint64_t v40 = *(int *)(v16 + 48);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v22, v24, v37);
    *(void *)&v22[v40] = v39;
    sub_45F6C((uint64_t)v22, (uint64_t)v19, &qword_289340);
    id v41 = v39;
    uint64_t v42 = v59;
    uint64_t v43 = swift_retain(v59);
    LOBYTE(v40) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v43);
    uint64_t v44 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v45 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))(v51, 1LL, 1LL, v44);
    uint64_t v62 = 0LL;
    __int128 v60 = 0u;
    __int128 v61 = 0u;
    uint64_t v46 = v52;
    static AceOutputHelper.makeErrorOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v19,  v40 & 1,  _swiftEmptyArrayStorage,  1LL,  1LL,  v45,  _swiftEmptyArrayStorage,  &v60);
    sub_1F6CC((uint64_t)&v60, &qword_2845C8);
    sub_1F6CC(v45, (uint64_t *)&unk_286C50);
    uint64_t v47 = v55;
    *((void *)&v61 + 1) = v55;
    uint64_t v62 = &protocol witness table for AceOutput;
    uint64_t v48 = sub_10974(&v60);
    uint64_t v49 = v53;
    (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v48, v46, v47);
    char v63 = 0;
    v58(&v60);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v47);
    sub_1F6CC((uint64_t)&v60, (uint64_t *)&unk_286C60);
    sub_1F6CC((uint64_t)v19, &qword_289340);
    swift_release(v42);
    return sub_1F6CC((uint64_t)v24, &qword_289340);
  }

uint64_t type metadata accessor for InternalRenderingFlowStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePluginP33_6C20A760FD36F944A8750A31376512C229InternalRenderingFlowStrategy);
}

unint64_t sub_13F0D8()
{
  unint64_t result = qword_28AA38;
  if (!qword_28AA38)
  {
    uint64_t v1 = sub_45D50(&qword_28AA40);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AppResolutionService<A>, v1);
    atomic_store(result, (unint64_t *)&qword_28AA38);
  }

  return result;
}

void sub_13F124()
{
}

void sub_13F17C()
{
}

void sub_13F1D4()
{
}

void sub_13F22C()
{
}

void sub_13F284()
{
}

uint64_t sub_13F2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for InternalRenderingFlowStrategy();
  return AppResolutionFlowStrategy.makeAppResolutionSuccessfulResponse(app:intent:completion:)(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_13F338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for InternalRenderingFlowStrategy();
  return AppResolutionFlowStrategy.makeAppResolutionUnsuccessfulResponse(intent:reason:completion:)( a1,  a2,  a3,  a4,  v11,  a6);
}

uint64_t sub_13F394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for InternalRenderingFlowStrategy();
  return AppResolutionFlowStrategy.makeErrorOutput(intent:error:completion:)(a1, a2, a3, a4, v11, a6);
}

void sub_13F3F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v2 = sub_14038C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_13F458(v4);
  *a1 = v2;
}

void sub_13F458(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_136;
    }
    if (v4) {
      sub_13FE58(0LL, v4, 1LL, a1);
    }
    return;
  }

  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_144;
  }
  Swift::Int v138 = v5;
  uint64_t v135 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    os_log_type_t v160 = (char *)&_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_100:
      uint64_t v137 = v9;
      if (v13 >= 2)
      {
        uint64_t v125 = *v135;
        do
        {
          unint64_t v126 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v125) {
            goto LABEL_143;
          }
          uint64_t v116 = v12;
          uint64_t v127 = v12 + 32;
          uint64_t v128 = *(void *)&v12[16 * v126 + 32];
          uint64_t v129 = *(void *)&v12[16 * v13 + 24];
          sub_13FF80( (char *)(v125 + 72 * v128),  (char *)(v125 + 72LL * *(void *)&v127[16 * v13 - 16]),  v125 + 72 * v129,  v160);
          if (v2) {
            goto LABEL_98;
          }
          if (v129 < v128) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) == 0) {
            uint64_t v116 = sub_140364((uint64_t)v116);
          }
          if (v126 >= *((void *)v116 + 2)) {
            goto LABEL_133;
          }
          __int128 v130 = v116;
          uint64_t v131 = v116 + 32;
          uint64_t v132 = &v116[16 * v126 + 32];
          *(void *)uint64_t v132 = v128;
          *((void *)v132 + 1) = v129;
          unint64_t v133 = *((void *)v116 + 2);
          if (v13 > v133) {
            goto LABEL_134;
          }
          uint64_t v12 = v130;
          memmove(&v131[16 * v13 - 16], &v131[16 * v13], 16 * (v133 - v13));
          *((void *)v12 + 2) = v133 - 1;
          unint64_t v13 = v133 - 1;
        }

        while (v133 > 2);
      }

      swift_bridgeObjectRelease(v12);
      uint64_t v124 = v137;
      v137[2] = 0LL;
LABEL_112:
      swift_bridgeObjectRelease(v124);
      return;
    }

    uint64_t v137 = _swiftEmptyArrayStorage;
    uint64_t v166 = v1;
  }

  else
  {
    uint64_t v166 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6 >> 1, &type metadata for DisplayApp);
    *(void *)(v8 + swift_weakDestroy(v0 + 16) = v7;
    uint64_t v137 = (void *)v8;
    os_log_type_t v160 = (char *)(v8 + 32);
  }

  Swift::Int v10 = 0LL;
  uint64_t v11 = *a1;
  uint64_t v136 = *a1 + 112;
  uint64_t v134 = *a1 + 64;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v142 = v4;
  uint64_t v161 = *a1;
  while (1)
  {
    Swift::Int v14 = v10++;
    uint64_t v139 = v12;
    Swift::Int v143 = v14;
    if (v10 < v4)
    {
      uint64_t v15 = (void *)(v11 + 72 * v10);
      uint64_t v17 = v15[1];
      uint64_t v16 = v15[2];
      uint64_t v18 = v15[3];
      uint64_t v19 = v15[5];
      uint64_t v20 = v15[6];
      uint64_t v21 = v11;
      uint64_t v23 = (void *)v15[7];
      uint64_t v22 = v15[8];
      uint64_t v24 = (void *)(v21 + 72 * v14);
      uint64_t v144 = v24[1];
      uint64_t v25 = v24[2];
      uint64_t v26 = v24[3];
      uint64_t v146 = v24[5];
      uint64_t v148 = v24[6];
      uint64_t v27 = v24[8];
      uint64_t v150 = (void *)v24[7];
      uint64_t v164 = v16;
      uint64_t v165 = v18;
      uint64_t v28 = v18;
      uint64_t v156 = v18;
      uint64_t v162 = v25;
      uint64_t v163 = v26;
      unint64_t v29 = sub_6D68();
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v19);
      swift_retain(v20);
      id v152 = v23;
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v144);
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v146);
      swift_retain(v148);
      id v30 = v150;
      swift_bridgeObjectRetain(v27);
      unint64_t v140 = v29;
      Swift::Int v14 = v143;
      uint64_t v141 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( &v162,  &type metadata for String,  &type metadata for String,  v29,  v29);
      swift_bridgeObjectRelease(v27);

      swift_release(v148);
      swift_bridgeObjectRelease(v146);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v144);
      swift_bridgeObjectRelease(v22);

      swift_release(v20);
      swift_bridgeObjectRelease(v19);
      Swift::Int v4 = v142;
      swift_bridgeObjectRelease(v156);
      swift_bridgeObjectRelease(v17);
      Swift::Int v10 = v143 + 2;
      if (v143 + 2 < v142)
      {
        os_log_type_t v31 = (uint64_t *)(v136 + 72 * v143);
        while (1)
        {
          uint64_t v32 = v31[5];
          uint64_t v33 = v31[7];
          uint64_t v34 = v31[10];
          uint64_t v145 = v31[9];
          uint64_t v147 = (void *)v31[11];
          uint64_t v149 = v31[12];
          uint64_t v151 = v32;
          uint64_t v36 = *(v31 - 4);
          uint64_t v35 = *(v31 - 3);
          uint64_t v37 = *(v31 - 2);
          uint64_t v38 = *v31;
          uint64_t v39 = v31[1];
          uint64_t v157 = *v31;
          uint64_t v154 = v39;
          uint64_t v40 = (void *)v31[2];
          uint64_t v41 = v31[3];
          uint64_t v164 = v31[6];
          uint64_t v165 = v33;
          uint64_t v162 = v35;
          uint64_t v163 = v37;
          swift_bridgeObjectRetain(v38);
          swift_retain(v39);
          id v153 = v40;
          swift_bridgeObjectRetain(v41);
          swift_bridgeObjectRetain(v32);
          swift_bridgeObjectRetain(v33);
          swift_bridgeObjectRetain(v145);
          swift_retain(v34);
          id v42 = v147;
          swift_bridgeObjectRetain(v149);
          swift_bridgeObjectRetain(v36);
          swift_bridgeObjectRetain(v37);
          uint64_t v43 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( &v162,  &type metadata for String,  &type metadata for String,  v140,  v140);
          swift_bridgeObjectRelease(v149);

          swift_release(v34);
          swift_bridgeObjectRelease(v145);
          swift_bridgeObjectRelease(v33);
          swift_bridgeObjectRelease(v151);
          swift_bridgeObjectRelease(v41);

          swift_release(v154);
          swift_bridgeObjectRelease(v157);
          swift_bridgeObjectRelease(v37);
          swift_bridgeObjectRelease(v36);
          if ((v141 != -1) == (v43 == -1)) {
            break;
          }
          ++v10;
          v31 += 9;
          Swift::Int v4 = v142;
          if (v142 == v10)
          {
            Swift::Int v10 = v142;
            goto LABEL_23;
          }
        }

        Swift::Int v4 = v142;
LABEL_23:
        Swift::Int v14 = v143;
      }

      uint64_t v12 = v139;
      uint64_t v11 = v161;
      if (v141 == -1)
      {
        if (v10 < v14) {
          goto LABEL_139;
        }
        if (v14 < v10)
        {
          uint64_t v44 = 72 * v10;
          Swift::Int v45 = v14;
          uint64_t v46 = 72 * v14;
          Swift::Int v47 = v10;
          do
          {
            if (v45 != --v47)
            {
              if (!v11) {
                goto LABEL_142;
              }
              uint64_t v48 = v11 + v46;
              uint64_t v49 = v11 + v44;
              uint64_t v50 = (const void *)(v11 + v44 - 72);
              __int128 v159 = *(_OWORD *)(v11 + v46);
              uint64_t v51 = *(void *)(v11 + v46 + 16);
              uint64_t v52 = *(void *)(v11 + v46 + 24);
              uint64_t v53 = *(void *)(v48 + 64);
              __int128 v155 = *(_OWORD *)(v48 + 32);
              __int128 v158 = *(_OWORD *)(v48 + 48);
              memmove((void *)v48, v50, 0x48uLL);
              *(_OWORD *)(v49 - 72) = v159;
              *(void *)(v49 - 56) = v51;
              *(void *)(v49 - 48) = v52;
              uint64_t v11 = v161;
              *(_OWORD *)(v49 - 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v155;
              *(_OWORD *)(v49 - 24) = v158;
              *(void *)(v49 - 8) = v53;
              uint64_t v12 = v139;
            }

            ++v45;
            v44 -= 72LL;
            v46 += 72LL;
          }

          while (v45 < v47);
          Swift::Int v4 = v142;
          Swift::Int v14 = v143;
        }
      }
    }

    if (v10 >= v4) {
      goto LABEL_51;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v138) {
      goto LABEL_51;
    }
    if (__OFADD__(v14, v138)) {
      goto LABEL_137;
    }
    Swift::Int v54 = v14 + v138 >= v4 ? v4 : v14 + v138;
    if (v54 < v14) {
      break;
    }
    if (v10 != v54)
    {
      unint64_t v55 = sub_6D68();
      uint64_t v56 = (void *)(v134 + 72 * v10);
      do
      {
        uint64_t v57 = v11 + 72 * v10;
        uint64_t v58 = *(void *)(v57 + 16);
        uint64_t v59 = *(void *)(v57 + 24);
        Swift::Int v60 = v14;
        __int128 v61 = v56;
        do
        {
          uint64_t v62 = *(v61 - 15);
          uint64_t v63 = *(v61 - 14);
          uint64_t v164 = v58;
          uint64_t v165 = v59;
          uint64_t v162 = v62;
          uint64_t v163 = v63;
          if (StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( &v162,  &type metadata for String,  &type metadata for String,  v55,  v55) != -1) {
            break;
          }
          if (!v11) {
            goto LABEL_140;
          }
          id v64 = v61 - 8;
          uint64_t v65 = *(v61 - 8);
          uint64_t v66 = *(v61 - 7);
          uint64_t v58 = *(v61 - 6);
          uint64_t v59 = *(v61 - 5);
          uint64_t v67 = *v61;
          __int128 v69 = *((_OWORD *)v61 - 2);
          __int128 v68 = *((_OWORD *)v61 - 1);
          __int128 v70 = *(_OWORD *)(v61 - 11);
          v64[2] = *(_OWORD *)(v61 - 13);
          v64[3] = v70;
          *__int128 v61 = *(v61 - 9);
          __int128 v71 = *(_OWORD *)(v61 - 15);
          *id v64 = *(_OWORD *)(v61 - 17);
          v64[1] = v71;
          *(v61 - 9) = v67;
          v61 -= 9;
          *(v61 - 8) = v65;
          *(v61 - 7) = v66;
          *(v61 - 6) = v58;
          *(v61 - 5) = v59;
          ++v60;
          *((_OWORD *)v61 - 2) = v69;
          *((_OWORD *)v61 - 1) = v68;
        }

        while (v10 != v60);
        ++v10;
        v56 += 9;
        Swift::Int v14 = v143;
      }

      while (v10 != v54);
      Swift::Int v10 = v54;
      uint64_t v12 = v139;
    }

LABEL_82:
        if ((v99 & 1) != 0) {
          goto LABEL_123;
        }
        unint64_t v107 = &v74[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_126;
        }
        if (v110 < v98) {
          goto LABEL_15;
        }
LABEL_90:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }

        if (!v11) {
          goto LABEL_141;
        }
        uint64_t v116 = v12;
        uint64_t v117 = v11;
        uint64_t v118 = &v74[16 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = &v74[16 * v76];
        uint64_t v121 = *((void *)v120 + 1);
        uint64_t v122 = v166;
        sub_13FF80( (char *)(v117 + 72LL * *(void *)v118),  (char *)(v117 + 72LL * *(void *)v120),  v117 + 72 * v121,  v160);
        uint64_t v166 = v122;
        if (v122)
        {
LABEL_98:
          swift_bridgeObjectRelease(v116);
          v137[2] = 0LL;
          uint64_t v124 = v137;
          goto LABEL_112;
        }

        if (v121 < v119) {
          goto LABEL_116;
        }
        if (v76 > *((void *)v116 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v118 = v119;
        *(void *)&v74[16 * v115 + 8] = v121;
        unint64_t v123 = *((void *)v116 + 2);
        if (v76 >= v123) {
          goto LABEL_118;
        }
        uint64_t v12 = v116;
        unint64_t v13 = v123 - 1;
        memmove(&v74[16 * v76], v120 + 16, 16 * (v123 - 1 - v76));
        *((void *)v116 + 2) = v123 - 1;
        uint64_t v11 = v161;
        if (v123 <= 2) {
          goto LABEL_15;
        }
      }
    }

    unint64_t v13 = 1LL;
LABEL_15:
    Swift::Int v4 = v142;
    if (v10 >= v142)
    {
      uint64_t v2 = v166;
      uint64_t v9 = v137;
      goto LABEL_100;
    }
  }

LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
  __break(1u);
}

  v818 = 0LL;
  v819 = 0xE000000000000000LL;
  v384 = (void *)dispatch thunk of AudioIntent.radioStationNames.getter(v280, v808);
  v385 = sub_7241C(v384);
  v387 = v386;
  swift_bridgeObjectRelease(v384);
  if (v387)
  {
    v388._countAndFlagsBits = v385;
    v388._object = v387;
    String.append(_:)(v388);
    swift_bridgeObjectRelease(v387);
  }

  v389 = dispatch thunk of AudioIntent.frequency.getter(v280, v808);
  if ((v390 & 1) == 0)
  {
    v391 = *(double *)&v389;
    v392 = v748;
    v393 = v718;
    (*(void (**)(uint64_t, void, uint64_t))(v748 + 104))( v718,  enum case for CommonAudio.RadioType.am(_:),  v376);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v392 + 56))(v393, 0LL, 1LL, v376);
    v394 = v714;
    v395 = v714 + *(int *)(v713 + 48);
    sub_FF10(v789, v714, &qword_284D98);
    sub_FF10(v393, v395, &qword_284D98);
    if (v375(v394, 1LL, v376) == 1)
    {
      sub_1F6CC(v393, &qword_284D98);
      if (v375(v395, 1LL, v376) == 1)
      {
        sub_1F6CC(v394, &qword_284D98);
LABEL_150:
        v410 = sub_6C5C((uint64_t *)&unk_289320);
        v411 = swift_allocObject(v410, 72LL, 7LL);
        *(_OWORD *)(v411 + swift_weakDestroy(v0 + 16) = xmmword_214510;
        *(void *)(v411 + 56) = &type metadata for Double;
        *(void *)(v411 + 64) = &protocol witness table for Double;
        *(double *)(v411 + 32) = v391;
        v412._countAndFlagsBits = String.init(format:_:)(1714433573LL, 0xE400000000000000LL, v411);
LABEL_152:
        object = v412._object;
        sub_A8748(v412);
        swift_bridgeObjectRelease(object);
        goto LABEL_153;
      }
    }

    else
    {
      v396 = v704;
      sub_FF10(v394, v704, &qword_284D98);
      if (v375(v395, 1LL, v376) != 1)
      {
        v404 = v748;
        v405 = v703;
        (*(void (**)(char *, uint64_t, uint64_t))(v748 + 32))(v703, v395, v376);
        v406 = sub_10430( &qword_284E00,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.RadioType,  (uint64_t)&protocol conformance descriptor for CommonAudio.RadioType);
        v407 = dispatch thunk of static Equatable.== infix(_:_:)(v396, v405, v376, v406);
        v408 = *(void (**)(char *, uint64_t))(v404 + 8);
        v409 = v807;
        v408(v405, v741);
        sub_1F6CC(v718, &qword_284D98);
        v408((char *)v396, v741);
        v280 = v409;
        v376 = v741;
        v397 = sub_1F6CC(v394, &qword_284D98);
        if ((v407 & 1) != 0) {
          goto LABEL_150;
        }
LABEL_151:
        v412._countAndFlagsBits = Double.description.getter(v397, v391);
        goto LABEL_152;
      }

      sub_1F6CC(v393, &qword_284D98);
      (*(void (**)(uint64_t, uint64_t))(v748 + 8))(v396, v376);
    }

    v397 = sub_1F6CC(v394, &qword_284D90);
    goto LABEL_151;
  }

uint64_t sub_13FE58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    unint64_t v7 = sub_6D68();
    uint64_t v8 = v6 + 72 * v4 + 64;
LABEL_5:
    uint64_t v9 = v6 + 72 * v4;
    uint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v12 = v25;
    unint64_t v13 = (void *)v8;
    while (1)
    {
      uint64_t v14 = *(v13 - 15);
      uint64_t v15 = *(v13 - 14);
      v24[2] = v10;
      v24[3] = v11;
      v24[0] = v14;
      v24[1] = v15;
      unint64_t result = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( v24,  &type metadata for String,  &type metadata for String,  v7,  v7);
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v8 += 72LL;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }

      if (!v6) {
        break;
      }
      uint64_t v16 = v13 - 8;
      uint64_t v17 = *(v13 - 8);
      uint64_t v18 = *(v13 - 7);
      uint64_t v10 = *(v13 - 6);
      uint64_t v11 = *(v13 - 5);
      uint64_t v19 = *v13;
      __int128 v21 = *((_OWORD *)v13 - 2);
      __int128 v20 = *((_OWORD *)v13 - 1);
      __int128 v22 = *(_OWORD *)(v13 - 11);
      v16[2] = *(_OWORD *)(v13 - 13);
      v16[3] = v22;
      *unint64_t v13 = *(v13 - 9);
      __int128 v23 = *(_OWORD *)(v13 - 15);
      _OWORD *v16 = *(_OWORD *)(v13 - 17);
      v16[1] = v23;
      *(v13 - 9) = v19;
      v13 -= 9;
      *(v13 - 8) = v17;
      *(v13 - 7) = v18;
      *(v13 - 6) = v10;
      *(v13 - 5) = v11;
      ++v12;
      *((_OWORD *)v13 - 2) = v21;
      *((_OWORD *)v13 - 1) = v20;
      if (v4 == v12) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_13FF80(char *__src, char *a2, unint64_t a3, char *a4)
{
  Swift::Int v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 72;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 72;
  uint64_t v36 = __src;
  uint64_t v35 = a4;
  if (v8 >= v10)
  {
    if (v9 >= -71)
    {
      if (a4 != a2 || &a2[72 * v10] <= a4) {
        memmove(a4, a2, 72 * v10);
      }
      __int128 v20 = &a4[72 * v10];
      uint64_t v34 = v20;
      uint64_t v36 = v5;
      if (v6 < v5 && v9 >= 72)
      {
        unint64_t v21 = sub_6D68();
        __int128 v22 = (char *)(a3 - 72);
        do
        {
          __int128 v23 = v22 + 72;
          uint64_t v24 = *((void *)v20 - 6);
          uint64_t v25 = *((void *)v5 - 7);
          uint64_t v26 = *((void *)v5 - 6);
          uint64_t v32 = *((void *)v20 - 7);
          uint64_t v33 = v24;
          uint64_t v30 = v25;
          uint64_t v31 = v26;
          if (StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( &v30,  &type metadata for String,  &type metadata for String,  v21,  v21) == -1)
          {
            uint64_t v27 = v5 - 72;
            if (v23 != v5 || v22 >= v5) {
              memmove(v22, v5 - 72, 0x48uLL);
            }
            uint64_t v36 = v5 - 72;
          }

          else
          {
            uint64_t v34 = v20 - 72;
            if (v23 < v20 || v22 >= v20 || v23 != v20) {
              memmove(v22, v20 - 72, 0x48uLL);
            }
            uint64_t v27 = v5;
            v20 -= 72;
          }

          if (v27 <= v6) {
            break;
          }
          v22 -= 72;
          Swift::Int v5 = v27;
        }

        while (v20 > a4);
      }

char *sub_1402A4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -72)
  {
    char v7 = 2;
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v7,  1046LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6]) {
      return (char *)memmove(result, v3, 72 * v6);
    }
  }

  return result;
}

char *sub_140364(uint64_t a1)
{
  return sub_1FD78(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_140378(uint64_t a1)
{
  return sub_C73E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_14038C(uint64_t a1)
{
  return sub_C7550(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1403A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a5;
  uint64_t v35 = a3;
  uint64_t v33 = a2;
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(a1);
  uint64_t v32 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = v6;
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v15, v16, "AppResolutionCommonStrategy#makePromptForConfirmation...", v18, 2u);
    uint64_t v19 = v18;
    uint64_t v6 = v17;
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = v34;
  uint64_t v21 = v31[1];
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 32))(a4, v34);
  __int128 v23 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v32, v21, a4);
  uint64_t v24 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v25 = (v24 + 48) & ~v24;
  unint64_t v26 = (v8 + v25 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v27 = (char *)swift_allocObject(&unk_270A08, v26 + 8, v24 | 7);
  *((void *)v27 + 2) = a4;
  *((void *)v27 + sub_6C3C(v0 + 3) = v20;
  uint64_t v28 = v35;
  *((void *)v27 + 4) = v33;
  *((void *)v27 + 5) = v28;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v27[v25], v23, a4);
  *(void *)&v27[v26] = v6;
  swift_retain(v28);
  uint64_t v29 = swift_retain(v6);
  sub_1F1CA0(v29, (uint64_t)sub_140674, (uint64_t)v27);
  swift_release(v27);
  return swift_release(v22);
}

uint64_t sub_1405EC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_140674(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1386D0( a1,  *(void (**)(void *))(v1 + 32),  *(void *)(v1 + 40),  v1 + v4,  *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)),  v2,  *(void *)(v1 + 24));
}

uint64_t sub_1406A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_6C5C(&qword_289340);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v12 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v0 + v9, v12);

  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v10);
}

uint64_t sub_14078C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v3 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_138B80(a1, v1 + v6, v1 + v9, *(void (**)(uint64_t *))v10, *(void *)(v10 + 8), v3, v4);
}

uint64_t sub_14081C()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v2 | v7 | 7;
  unint64_t v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v13 = (v12 + v7 + 8) & ~v7;
  uint64_t v14 = v13 + v8;
  swift_release(*(void *)(v0 + v12));
  uint64_t v15 = v0 + v13;
  uint64_t v16 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v15, v16);

  return swift_deallocObject(v0, v14, v11);
}

uint64_t sub_140930(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  unint64_t v12 = (void *)swift_task_alloc(dword_28AA4C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_3B08C;
  return sub_1397A8(a1, v9, v10, v11);
}

uint64_t sub_1409EC(uint64_t a1)
{
  return sub_139BF0(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1409F8()
{
  unint64_t result = qword_28AA60;
  if (!qword_28AA60)
  {
    unint64_t result = swift_getWitnessTable(&unk_21BF3C, &type metadata for NilAppResolutionProvider);
    atomic_store(result, (unint64_t *)&qword_28AA60);
  }

  return result;
}

unint64_t sub_140A3C()
{
  unint64_t result = qword_28AA68;
  if (!qword_28AA68)
  {
    unint64_t result = swift_getWitnessTable(&unk_219BAC, &type metadata for UsoAppResolutionProvider);
    atomic_store(result, (unint64_t *)&qword_28AA68);
  }

  return result;
}

unint64_t sub_140A80()
{
  unint64_t result = qword_28AA70;
  if (!qword_28AA70)
  {
    unint64_t result = swift_getWitnessTable(&unk_21B50C, &type metadata for CustomAppResolutionProvider);
    atomic_store(result, (unint64_t *)&qword_28AA70);
  }

  return result;
}

uint64_t sub_140AC4()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_140AF0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 48) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + v6 + 16) & ~v8;
  uint64_t v12 = v4 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  swift_release(*(void *)(v0 + v6 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v12);
}

uint64_t sub_140BE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_13EC28( a1,  *(void *)(v1 + 32),  *(void *)(v1 + 40),  v1 + v4,  *(void (**)(void))(v1 + v5),  *(void *)(v1 + v5 + 8));
}

uint64_t sub_140C9C()
{
  uint64_t v1 = type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_140D38(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_13E838( a1,  *(void *)(v1 + 32),  *(void *)(v1 + 40),  v1 + v4,  *(void (**)(void))v5,  *(void *)(v5 + 8));
}

uint64_t sub_140DA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_13AE3C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_140DC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = sub_6C5C(&qword_28AA80);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __n128 v12 = swift_bridgeObjectRelease(*(void *)(v0 + v5));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v6, v12);
  return swift_deallocObject(v0, v10, v11);
}

void sub_140E90(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(v3 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_28AA80) - 8) + 80LL);
  sub_13AF58( a1,  v1[4],  v1[5],  (uint64_t)v1 + v6,  *(void **)((char *)v1 + v7),  (uint64_t)v1 + ((v7 + v8 + 8) & ~v8),  v3,  v4);
}

uint64_t sub_140F1C(uint64_t a1, uint64_t a2, void *a3, uint8_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v101 = a5;
  uint64_t v102 = a6;
  uint64_t v86 = a4;
  uint64_t v93 = a1;
  uint64_t v8 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v97 = *(void *)(v8 - 8);
  uint64_t v98 = v8;
  __chkstk_darwin(v8);
  uint64_t v96 = v9;
  BOOL v104 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DialogPhase(0LL);
  __chkstk_darwin(v10);
  __n128 v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v99 = *(void *)(v13 - 8);
  uint64_t v100 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v94 = v15;
  uint64_t v95 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v105 = (char *)&v77 - v16;
  uint64_t v83 = type metadata accessor for ResponseMode(0LL);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_6C5C(&qword_289340);
  uint64_t v90 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v91 = v24;
  uint64_t v92 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v77 - v25;
  uint64_t v27 = type metadata accessor for TemplatingResult(0LL);
  BOOL v87 = *(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 16LL);
  uint64_t v88 = v27;
  v87(v26, a2);
  uint64_t v89 = v22;
  uint64_t v28 = *(int *)(v22 + 48);
  uint64_t v103 = v26;
  *(void *)&v26[v28] = a3;
  id v85 = a3;
  uint64_t v29 = static SiriEnvironmentWrapper.retrieve()(v85);
  if (!v29)
  {
    type metadata accessor for SiriEnvironment(0LL);
    uint64_t v29 = static SiriEnvironment.default.getter();
  }

  uint64_t v30 = v29;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v18, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v31, v18);
  uint64_t v32 = swift_retain_n(v30, 2LL);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.info.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc(12LL, -1LL);
    char v80 = v12;
    uint64_t v36 = (uint8_t *)v35;
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    v107[0] = v37;
    uint64_t v78 = v19;
    uint64_t v79 = v18;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v77 = v36 + 4;
    uint64_t v38 = SiriEnvironment.currentRequest.getter(v37);
    uint64_t v39 = v81;
    CurrentRequest.responseMode.getter(v38);
    uint64_t v40 = swift_release(v38);
    uint64_t v41 = ResponseMode.description.getter(v40);
    unint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v39, v83);
    uint64_t v44 = v41;
    Swift::Int v45 = v21;
    uint64_t v46 = (uint8_t *)v30;
    uint64_t v106 = sub_6978(v44, v43, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107);
    swift_release_n(v30, 2LL);
    swift_bridgeObjectRelease(v43);
    _os_log_impl( &dword_0,  v33,  v34,  "AppResolutionCommonStrategy#clarificationOutput with responseMode = %s",  v36,  0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    Swift::Int v47 = v36;
    __n128 v12 = v80;
    swift_slowDealloc(v47, -1LL, -1LL);

    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v45, v79);
  }

  else
  {

    swift_release_n(v30, 2LL);
    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t v46 = (uint8_t *)v30;
  }

  uint64_t v84 = v46;
  uint64_t v49 = v12;
  static DialogPhase.clarification.getter(v48);
  uint64_t v51 = v88;
  uint64_t v50 = v89;
  uint64_t v52 = *(int *)(v89 + 48);
  uint64_t v53 = (uint64_t)v92;
  uint64_t v54 = (uint64_t)v103;
  unint64_t v55 = (void (*)(uint64_t, uint64_t, uint64_t))v87;
  uint64_t v56 = ((uint64_t (*)(char *, char *, uint64_t))v87)(v92, v103, v88);
  *(void *)(v53 + v52) = v85;
  __chkstk_darwin(v56);
  *(&v77 - 4) = v86;
  *(&v77 - sub_6C3C(v0 + 3) = v46;
  *(&v77 - 2) = (uint8_t *)v53;
  uint64_t v58 = (uint8_t *)v57;
  uint64_t v86 = v58;
  uint64_t v59 = v105;
  OutputGenerationManifest.init(dialogPhase:_:)(v49, sub_1415A0, &v77 - 6);
  sub_1F6CC(v53, &qword_289340);
  uint64_t v61 = v97;
  uint64_t v60 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v104, v93, v98);
  uint64_t v62 = *(int *)(v50 + 48);
  v55(v53, v54, v51);
  *(void *)(v53 + v62) = v58;
  uint64_t v63 = v99;
  id v64 = v95;
  uint64_t v65 = v59;
  uint64_t v66 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v95, v65, v100);
  uint64_t v67 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v68 = (v67 + 16) & ~v67;
  uint64_t v69 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v70 = (v96 + v69 + v68) & ~v69;
  uint64_t v71 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v72 = (v91 + v71 + v70) & ~v71;
  uint64_t v73 = swift_allocObject(&unk_270B48, v72 + v94, v67 | v71 | v69 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v73 + v68, v104, v60);
  sub_45F6C(v53, v73 + v70, &qword_289340);
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v73 + v72, v64, v66);
  uint64_t v74 = v86;
  uint64_t v75 = sub_6C5C(&qword_2845C0);
  static Task<>.withCallback<A>(_:operation:)(v101, v102, &unk_28AA90, v73, v75);
  swift_release(v84);
  swift_release(v73);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v105, v66);
  return sub_1F6CC((uint64_t)v103, &qword_289340);
}

uint64_t sub_1415A0(uint64_t a1)
{
  return sub_13C2C8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1415AC()
{
  uint64_t v1 = type metadata accessor for SiriAudioSnippets(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v17 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v8, v15);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return swift_deallocObject(v0, v17, v14);
}

uint64_t sub_1416C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SiriAudioSnippets(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_6C5C(&qword_289340) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OutputGenerationManifest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + v5;
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc(dword_28AA8C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_11C64;
  return sub_41984(a1, v12, v13, v14);
}

uint64_t sub_14179C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_6C5C(&qword_28AA80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v4 | v7 | 7;
  unint64_t v10 = (*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);

  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, v11 + 16, v9);
}

uint64_t sub_141868(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(sub_6C5C(&qword_28AA80) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 - 8);
  unint64_t v8 = (v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_13C48C( a1,  v1 + v6,  v1 + v8,  *(void **)(v1 + v9),  *(void *)(v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8),  v3,  v4);
}

uint64_t sub_1418FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_13CABC(a1, *(_OWORD **)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_141918(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = _swiftEmptyArrayStorage;
  unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    type metadata accessor for SiriKitDisambiguationItemComponent(0LL);
    swift_bridgeObjectRetain(v1);
    uint64_t v31 = v1;
    uint64_t v4 = (uint64_t *)(v1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      unint64_t v9 = v2;
      unint64_t v33 = (unint64_t)v2;
      uint64_t v10 = dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)(v7, v8);
      uint64_t v11 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.showOnLockScreen()();
      uint64_t v12 = swift_release(v10);
      uint64_t v13 = dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()(v12);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      unint64_t v15 = *(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v14 = *(void *)((char *)&dword_18 + (v33 & 0xFFFFFFFFFFFFFF8LL));
      if (v15 >= v14 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1LL);
      }
      uint64_t v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized Array._endMutation()(v16);
      uint64_t v17 = sub_6C5C(&qword_2844D0);
      uint64_t inited = swift_initStackObject(v17, v32);
      *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(inited + 32) = 0x64496D657469LL;
      *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE600000000000000LL;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = v5;
      *(void *)(inited + 56) = v6;
      swift_bridgeObjectRetain(v6);
      unint64_t v19 = sub_74D54(inited);
      id v20 = sub_1CDDB8(0xD000000000000034LL, 0x800000000021D8A0LL, v19);
      swift_bridgeObjectRelease(v19);
      unint64_t v21 = v33;
      uint64_t v22 = type metadata accessor for SiriKitDisambiguationItem(0LL);
      swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      uint64_t v23 = SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)(v21, v20, 0LL);
      swift_release(v11);
      uint64_t v24 = swift_retain(v23);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      unint64_t v26 = *(void *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v25 = *(void *)((char *)&dword_18 + (v34 & 0xFFFFFFFFFFFFFF8LL));
      if (v26 >= v25 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1LL);
      }
      v4 += 9;
      uint64_t v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
      specialized Array._endMutation()(v27);
      swift_release(v23);
      --v3;
      uint64_t v2 = v9;
    }

    while (v3);
    uint64_t v1 = v31;
    swift_bridgeObjectRelease(v31);
    uint64_t v2 = (void *)v34;
  }

  uint64_t v28 = sub_3FE94(v1);
  uint64_t v29 = type metadata accessor for SiriKitDisambiguationList(0LL);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  return SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)( v28,  v2,  1LL,  0LL);
}

uint64_t sub_141B90()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6));
  swift_release(*(void *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_141C28(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_13CBE0( a1,  *(void (**)(__int128 *))(v1 + 32),  *(void *)(v1 + 40),  v1 + v4,  *(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + v5),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8LL)),  v2,  *(void *)(v1 + 24));
}

uint64_t storeEnumTagSinglePayload for AppResolutionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_141CB4 + 4 * byte_218A0A[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_141CE8 + 4 * byte_218A05[v4]))();
}

uint64_t sub_141CE8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_141CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x141CF8LL);
  }
  return result;
}

uint64_t sub_141D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x141D0CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_141D10(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_141D18(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppResolutionError()
{
  return &type metadata for AppResolutionError;
}

unint64_t sub_141D38()
{
  unint64_t result = qword_28AAA0;
  if (!qword_28AAA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_218B64, &type metadata for AppResolutionError);
    atomic_store(result, (unint64_t *)&qword_28AAA0);
  }

  return result;
}

void sub_141D7C(char a1)
{
  __asm { BR              X10 }

uint64_t sub_141DC4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_141E18 + 4 * byte_218BD0[a2]))(7628147LL);
}

uint64_t sub_141E18(uint64_t a1)
{
  if (a1 == 7628147 && v1 == 0xE300000000000000LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE300000000000000LL);
  return v2 & 1;
}

void sub_141EB0(char a1)
{
  __asm { BR              X10 }

uint64_t sub_141EF0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_141F48 + 4 * byte_218BD8[a2]))(28526LL);
}

uint64_t sub_141F48(uint64_t a1)
{
  if (a1 == 28526 && v1 == 0xE200000000000000LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE200000000000000LL);
  return v2 & 1;
}

void sub_141FE4(char a1)
{
  __asm { BR              X10 }

uint64_t sub_142034(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_142090 + 4 * byte_218BE0[a2]))(0x7463656A6572LL);
}

uint64_t sub_142090(uint64_t a1)
{
  if (a1 == 0x7463656A6572LL && v1 == 0xE600000000000000LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000LL);
  return v2 & 1;
}

void sub_142130(char a1)
{
  __asm { BR              X10 }

uint64_t sub_14218C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_142244 + 4 * byte_218BEC[a2]))(0x4C676E6979616C70LL);
}

uint64_t sub_142244(uint64_t a1)
{
  if (a1 == 0x4C676E6979616C70LL && v1 == 0xEB00000000747361LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEB00000000747361LL);
  return v2 & 1;
}

uint64_t sub_142360(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 6647407LL;
  }
  else {
    uint64_t v3 = 1936287860LL;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000LL;
  }
  else {
    unint64_t v4 = 0xE300000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 6647407LL;
  }
  else {
    uint64_t v5 = 1936287860LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE300000000000000LL;
  }
  else {
    unint64_t v6 = 0xE400000000000000LL;
  }
  if (v3 == v5 && v4 == v6)
  {
    char v7 = 1;
    unint64_t v6 = v4;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4);
  }

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1423F4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000010LL;
  unint64_t v3 = 0x800000000021CFF0LL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x456F547964616572LL;
    }
    else {
      unint64_t v5 = 0x6574656C706D6F63LL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEE00657475636578LL;
    }
    else {
      unint64_t v6 = 0xE900000000000064LL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }

  unint64_t v5 = 0xD000000000000010LL;
  unint64_t v6 = 0x800000000021CFF0LL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x456F547964616572LL;
    }
    else {
      unint64_t v2 = 0x6574656C706D6F63LL;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xEE00657475636578LL;
    }
    else {
      unint64_t v3 = 0xE900000000000064LL;
    }
  }

BOOL sub_142520(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void *sub_14252C(uint64_t a1)
{
  return sub_142540(a1);
}

void *sub_142540(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_C70BC(0, v1, 0);
    unint64_t v3 = sub_6D68();
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v5 = StringProtocol.capitalized.getter(&type metadata for String, v3);
      uint64_t v7 = v6;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_C70BC(v8 > 1, v9 + 1, 1);
      }
      v4 += 16LL;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v5;
      v10[5] = v7;
      --v1;
    }

    while (v1);
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_14263C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommonAudio.Modifier(0LL);
  uint64_t v19 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)(a2 + 16)
    && (uint64_t v7 = *(void *)(a2 + 40),
        v8 = sub_10430( &qword_28AAA8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Modifier,  (uint64_t)&protocol conformance descriptor for CommonAudio.Modifier),  uint64_t v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8),  v10 = -1LL << *(_BYTE *)(a2 + 32),  v11 = v9 & ~v10,  ((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) != 0))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v19 + 72);
    unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(void *)(a2 + 48) + v13 * v11, v4);
      uint64_t v15 = sub_10430( &qword_28AAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Modifier,  (uint64_t)&protocol conformance descriptor for CommonAudio.Modifier);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
    }

    while (((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) != 0);
  }

  else
  {
    char v16 = 0;
  }

  return v16 & 1;
}

uint64_t sub_1427C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v19 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (*(void *)(a2 + 16)
    && (uint64_t v7 = *(void *)(a2 + 40),
        v8 = sub_10430( &qword_287DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Attribute,  (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute),  uint64_t v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8),  v10 = -1LL << *(_BYTE *)(a2 + 32),  v11 = v9 & ~v10,  ((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) != 0))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v19 + 72);
    unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(void *)(a2 + 48) + v13 * v11, v4);
      uint64_t v15 = sub_10430( &qword_287DD8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Attribute,  (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
    }

    while (((*(void *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v11) & 1) != 0);
  }

  else
  {
    char v16 = 0;
  }

  return v16 & 1;
}

uint64_t sub_142944(uint64_t a1)
{
  return sub_14295C( a1,  (unsigned int *)&enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Artist(_:));
}

uint64_t sub_142950(uint64_t a1)
{
  return sub_14295C(a1, &enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Album(_:));
}

uint64_t sub_14295C(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_284908);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2848E8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  char v16 = (char *)&v30 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = dispatch thunk of UsoEntity_common_MediaItem.mediaItemType.getter(v17);
  if (v20)
  {
    uint64_t v21 = v20;
    dispatch thunk of UsoEntity_common_MediaItemType.definedValue.getter(v20);
    swift_release(v21);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v19, 1LL, 1LL, v3);
  }

  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v16, *a2, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v16, 0LL, 1LL, v3);
  uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_FF10((uint64_t)v19, (uint64_t)v9, &qword_2848E8);
  sub_FF10((uint64_t)v16, v22, &qword_2848E8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v23((uint64_t)v9, 1LL, v3) == 1)
  {
    sub_1F6CC((uint64_t)v16, &qword_2848E8);
    sub_1F6CC((uint64_t)v19, &qword_2848E8);
    int v24 = v23(v22, 1LL, v3);
    if (v24 == 1) {
      unint64_t v25 = &qword_2848E8;
    }
    else {
      unint64_t v25 = &qword_284908;
    }
    if (v24 == 1) {
      char v26 = -1;
    }
    else {
      char v26 = 0;
    }
  }

  else
  {
    sub_FF10((uint64_t)v9, (uint64_t)v13, &qword_2848E8);
    if (v23(v22, 1LL, v3) == 1)
    {
      sub_1F6CC((uint64_t)v16, &qword_2848E8);
      sub_1F6CC((uint64_t)v19, &qword_2848E8);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
      char v26 = 0;
      unint64_t v25 = &qword_284908;
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v22, v3);
      uint64_t v27 = sub_10430( &qword_2848F8,  (uint64_t (*)(uint64_t))&type metadata accessor for UsoEntity_common_MediaItemType.DefinedValues,  (uint64_t)&protocol conformance descriptor for UsoEntity_common_MediaItemType.DefinedValues);
      char v26 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v6, v3, v27);
      uint64_t v28 = *(void (**)(char *, uint64_t))(v4 + 8);
      v28(v6, v3);
      unint64_t v25 = &qword_2848E8;
      sub_1F6CC((uint64_t)v16, &qword_2848E8);
      sub_1F6CC((uint64_t)v19, &qword_2848E8);
      v28(v13, v3);
    }
  }

  sub_1F6CC((uint64_t)v9, v25);
  return v26 & 1;
}

uint64_t sub_142C78(uint64_t a1)
{
  return sub_14295C( a1,  (unsigned int *)&enum case for UsoEntity_common_MediaItemType.DefinedValues.common_MediaItemType_Song(_:));
}

uint64_t sub_142C84(void *a1)
{
  id v1 = a1;
  id v2 = [v1 description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_142CE0(uint64_t result, uint64_t a2)
{
  *(void *)(result + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_142CF0(uint64_t a1, uint64_t a2)
{
  return sub_142D08(a1, a2, (void (*)(void))&type metadata accessor for CommonAudio.Attribute);
}

uint64_t sub_142CFC(uint64_t a1, uint64_t a2)
{
  return sub_142D08(a1, a2, (void (*)(void))&type metadata accessor for AudioUsoIntent.IterationOptions);
}

uint64_t sub_142D08(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  a3(0LL);
  return a1;
}

id sub_142D4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v800 = a3;
  uint64_t v795 = a2;
  uint64_t v8 = type metadata accessor for CommonAudio.Modifier(0LL);
  uint64_t v707 = *(void *)(v8 - 8);
  uint64_t v708 = v8;
  __chkstk_darwin(v8);
  v706 = (char *)&v700 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v794 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v778 = *(void *)(v794 - 8);
  __chkstk_darwin(v794);
  v727 = (char *)&v700 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v764 = type metadata accessor for CommonAudio.Noun(0LL);
  uint64_t v747 = *(void *)(v764 - 8);
  __chkstk_darwin(v764);
  v710 = (char *)&v700 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v744 = sub_6C5C(&qword_284D80);
  __chkstk_darwin(v744);
  v763 = (char *)&v700 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_284D88);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v721 = (uint64_t)&v700 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v771 = (uint64_t)&v700 - v17;
  __chkstk_darwin(v16);
  uint64_t v770 = (uint64_t)&v700 - v18;
  uint64_t v784 = type metadata accessor for Logger(0LL);
  uint64_t v783 = *(void *)(v784 - 8);
  __chkstk_darwin(v784);
  v782 = (char *)&v700 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C(&qword_284900);
  __chkstk_darwin(v20);
  uint64_t v736 = (uint64_t)&v700 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for AudioUsoIntent.UsoNamespace(0LL);
  uint64_t v734 = *(void *)(v22 - 8);
  uint64_t v735 = v22;
  __chkstk_darwin(v22);
  v733 = (char *)&v700 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v741 = type metadata accessor for CommonAudio.RadioType(0LL);
  uint64_t v748 = *(void *)(v741 - 8);
  uint64_t v24 = __chkstk_darwin(v741);
  v715 = (char *)&v700 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  v703 = (char *)&v700 - v26;
  uint64_t v713 = sub_6C5C(&qword_284D90);
  __chkstk_darwin(v713);
  uint64_t v714 = (uint64_t)&v700 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_6C5C(&qword_284D98);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v729 = (uint64_t)&v700 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v704 = (uint64_t)&v700 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v718 = (uint64_t)&v700 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v754 = (uint64_t)&v700 - v36;
  __chkstk_darwin(v35);
  uint64_t v789 = (uint64_t)&v700 - v37;
  uint64_t v806 = type metadata accessor for CommonAudio.MediaType(0LL);
  uint64_t v38 = *(void *)(v806 - 8);
  __chkstk_darwin(v806);
  v775 = (char *)&v700 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v801 = sub_6C5C(&qword_284DA0);
  uint64_t v40 = __chkstk_darwin(v801);
  uint64_t v781 = (uint64_t)&v700 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v749 = (uint64_t)&v700 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v745 = (uint64_t)&v700 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v746 = (char *)&v700 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v757 = (uint64_t)&v700 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v788 = (uint64_t)&v700 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v780 = (uint64_t)&v700 - v53;
  __chkstk_darwin(v52);
  uint64_t v791 = (uint64_t)&v700 - v54;
  uint64_t v793 = type metadata accessor for CommonAudio.Attribute(0LL);
  v796 = *(void **)(v793 - 8);
  __chkstk_darwin(v793);
  v787 = (char *)&v700 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v772 = sub_6C5C(&qword_284DA8);
  uint64_t v56 = __chkstk_darwin(v772);
  uint64_t v730 = (uint64_t)&v700 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v725 = (uint64_t)&v700 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v723 = (uint64_t)&v700 - v61;
  __chkstk_darwin(v60);
  uint64_t v773 = (uint64_t)&v700 - v62;
  uint64_t v63 = sub_6C5C(&qword_284DB0);
  uint64_t v64 = __chkstk_darwin(v63);
  uint64_t v719 = (uint64_t)&v700 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v711 = (uint64_t)&v700 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v712 = (uint64_t)&v700 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v705 = (uint64_t)&v700 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v722 = (uint64_t)&v700 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  v716 = (char *)&v700 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v777 = (uint64_t)&v700 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v732 = (uint64_t)&v700 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  v759 = (void (*)(void, void))((char *)&v700 - v81);
  uint64_t v82 = __chkstk_darwin(v80);
  v785 = (char *)&v700 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v792 = (uint64_t)&v700 - v85;
  __chkstk_darwin(v84);
  unint64_t v803 = (unint64_t)&v700 - v86;
  uint64_t v87 = sub_6C5C(&qword_284DB8);
  __chkstk_darwin(v87);
  uint64_t v89 = (char *)&v700 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = sub_6C5C(&qword_284DC0);
  __chkstk_darwin(v90);
  uint64_t v92 = (char *)&v700 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = sub_6C5C(&qword_284DC8);
  uint64_t v94 = __chkstk_darwin(v93);
  v753 = (char *)&v700 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = __chkstk_darwin(v94);
  uint64_t v726 = (uint64_t)&v700 - v97;
  uint64_t v98 = __chkstk_darwin(v96);
  uint64_t v709 = (uint64_t)&v700 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  uint64_t v739 = (uint64_t)&v700 - v101;
  uint64_t v102 = __chkstk_darwin(v100);
  v760 = (char *)&v700 - v103;
  uint64_t v104 = __chkstk_darwin(v102);
  v761 = (char *)&v700 - v105;
  uint64_t v106 = __chkstk_darwin(v104);
  uint64_t v742 = (uint64_t)&v700 - v107;
  uint64_t v108 = __chkstk_darwin(v106);
  uint64_t v743 = (uint64_t)&v700 - v109;
  uint64_t v110 = __chkstk_darwin(v108);
  uint64_t v717 = (uint64_t)&v700 - v111;
  uint64_t v112 = __chkstk_darwin(v110);
  uint64_t v769 = (uint64_t)&v700 - v113;
  uint64_t v114 = __chkstk_darwin(v112);
  v758 = (char *)&v700 - v115;
  uint64_t v116 = __chkstk_darwin(v114);
  uint64_t v768 = (uint64_t)&v700 - v117;
  uint64_t v118 = __chkstk_darwin(v116);
  v756 = (char *)&v700 - v119;
  uint64_t v120 = __chkstk_darwin(v118);
  uint64_t v738 = (uint64_t)&v700 - v121;
  uint64_t v122 = __chkstk_darwin(v120);
  v755 = (char *)&v700 - v123;
  uint64_t v124 = __chkstk_darwin(v122);
  uint64_t v779 = (uint64_t)&v700 - v125;
  uint64_t v126 = __chkstk_darwin(v124);
  v702 = (char *)&v700 - v127;
  uint64_t v128 = __chkstk_darwin(v126);
  v731 = (char *)&v700 - v129;
  uint64_t v130 = __chkstk_darwin(v128);
  uint64_t v750 = (uint64_t)&v700 - v131;
  uint64_t v132 = __chkstk_darwin(v130);
  v752 = (char *)&v700 - v133;
  uint64_t v134 = __chkstk_darwin(v132);
  uint64_t v737 = (uint64_t)&v700 - v135;
  uint64_t v136 = __chkstk_darwin(v134);
  uint64_t v776 = (uint64_t)&v700 - v137;
  uint64_t v138 = __chkstk_darwin(v136);
  v751 = (char *)&v700 - v139;
  uint64_t v140 = __chkstk_darwin(v138);
  uint64_t v724 = (uint64_t)&v700 - v141;
  uint64_t v142 = __chkstk_darwin(v140);
  uint64_t v804 = (uint64_t)&v700 - v143;
  uint64_t v144 = __chkstk_darwin(v142);
  v797 = (void (**)(uint64_t, void, uint64_t))((char *)&v700 - v145);
  uint64_t v146 = __chkstk_darwin(v144);
  uint64_t v148 = (char *)&v700 - v147;
  __chkstk_darwin(v146);
  uint64_t v150 = (char *)&v700 - v149;
  v827[3] = a4;
  v827[4] = a5;
  uint64_t v151 = sub_10974(v827);
  (*(void (**)(void *, uint64_t, void *))(*(a4 - 1) + 16LL))(v151, a1, a4);
  uint64_t v790 = dispatch thunk of AudioIntent.mediaIdentifier.getter(a4, a5);
  uint64_t v798 = v152;
  id v153 = a5;
  dispatch thunk of AudioIntent.targetMediaType.getter(a4, a5);
  uint64_t v154 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v155 = v154(v150, 1LL, v806);
  id v808 = v153;
  id v807 = a4;
  v805 = v151;
  uint64_t v799 = v38;
  *(void *)&__int128 v802 = v154;
  if (v155 == 1)
  {
    sub_1F6CC((uint64_t)v150, &qword_284DC8);
    dispatch thunk of AudioIntent.mediaType.getter(a4, v153);
    if (v154(v148, 1LL, v806) == 1)
    {
      sub_1F6CC((uint64_t)v148, &qword_284DC8);
      uint64_t v156 = 0LL;
    }

    else
    {
      uint64_t v156 = sub_20154C();
      (*(void (**)(char *, uint64_t))(v799 + 8))(v148, v806);
    }
  }

  else
  {
    uint64_t v156 = sub_20154C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v150, v806);
  }

  dispatch thunk of AudioIntent.sort.getter(v807, v808);
  uint64_t v157 = type metadata accessor for CommonAudio.Sort(0LL);
  uint64_t v158 = *(void *)(v157 - 8);
  int v159 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 48))(v92, 1LL, v157);
  os_log_type_t v160 = v796;
  if (v159 == 1)
  {
    sub_1F6CC((uint64_t)v92, &qword_284DC0);
    uint64_t v720 = 0LL;
  }

  else
  {
    uint64_t v720 = sub_201568();
    (*(void (**)(char *, uint64_t))(v158 + 8))(v92, v157);
  }

  id v161 = v807;
  id v162 = v808;
  uint64_t v163 = dispatch thunk of AudioIntent.genres.getter(v807, v808);
  v767 = sub_142540(v163);
  swift_bridgeObjectRelease(v163);
  uint64_t v164 = dispatch thunk of AudioIntent.moods.getter(v161, v162);
  uint64_t v165 = dispatch thunk of AudioIntent.activities.getter(v161, v162);
  uint64_t v166 = sub_1C75B0(v164, v165);
  swift_bridgeObjectRelease(v164);
  swift_bridgeObjectRelease(v165);
  os_log_type_t v167 = sub_142540(v166);
  swift_bridgeObjectRelease(v166);
  uint64_t v168 = sub_F8628((uint64_t)v167);
  uint64_t v740 = 0LL;
  v766 = v167;
  if (v168 == 1)
  {
    uint64_t v169 = static BundleIdentifiers.soundscapes.getter(1LL);
    uint64_t v171 = v170;
    if (v800)
    {
      if (v169 == v795 && v170 == v800)
      {
        swift_bridgeObjectRelease(v170);
LABEL_16:
        uint64_t v774 = sub_7241C(v167);
        uint64_t v800 = v173;
        goto LABEL_18;
      }

      char v172 = _stringCompareWithSmolCheck(_:_:expecting:)(v795, v800);
      swift_bridgeObjectRelease(v171);
      if ((v172 & 1) != 0) {
        goto LABEL_16;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v170);
    }
  }

  uint64_t v774 = 0LL;
  uint64_t v800 = 0LL;
LABEL_18:
  id v174 = v807;
  id v175 = v808;
  uint64_t v765 = sub_14768C((uint64_t)v805, (uint64_t)v807, (uint64_t)v808);
  dispatch thunk of AudioIntent.reference.getter(v174, v175);
  uint64_t v176 = type metadata accessor for CommonAudio.Reference(0LL);
  uint64_t v177 = *(void *)(v176 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v89, 1LL, v176) == 1)
  {
    sub_1F6CC((uint64_t)v89, &qword_284DB8);
    uint64_t v728 = 0LL;
  }

  else
  {
    uint64_t v728 = sub_20184C();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v89, v176);
  }

  unint64_t v178 = v803;
  uint64_t v179 = sub_6C5C(&qword_284DD0);
  uint64_t v180 = v160[9];
  uint64_t v181 = *((unsigned __int8 *)v160 + 80);
  uint64_t v182 = (v181 + 32) & ~v181;
  uint64_t v183 = swift_allocObject(v179, v182 + 2 * v180, v181 | 7);
  *(_OWORD *)(v183 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  uint64_t v184 = v183 + v182;
  id v185 = (void (*)(uint64_t))v160[13];
  unsigned int v762 = enum case for CommonAudio.Attribute.affinity(_:);
  uint64_t v186 = v793;
  v185(v184);
  v786 = v185;
  ((void (*)(uint64_t, void, uint64_t))v185)( v184 + v180,  enum case for CommonAudio.Attribute.recommended(_:),  v186);
  if (*(void *)(v183 + 16)) {
    uint64_t v187 = sub_147908(v183);
  }
  else {
    uint64_t v187 = &_swiftEmptySetSingleton;
  }
  uint64_t v795 = v156;
  swift_bridgeObjectRelease(v183);
  id v188 = v807;
  char v189 = AudioIntent.hasAnyAttribute(_:)(v187, v807, v808);
  swift_bridgeObjectRelease(v187);
  sub_157C4((uint64_t)v827, (uint64_t)v826);
  if ((v189 & 1) != 0) {
    goto LABEL_25;
  }
  sub_6EA8(v826, v826[3]);
  dispatch thunk of AudioIntent.verb.getter(v188, v808);
  uint64_t v191 = v178;
  uint64_t v192 = v778;
  uint64_t v193 = v792;
  uint64_t v194 = v794;
  v700 = *(void (**)(uint64_t, void, uint64_t))(v778 + 104);
  v700(v792, enum case for CommonAudio.Verb.start(_:), v794);
  v701 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v192 + 56);
  v701(v193, 0LL, 1LL, v194);
  uint64_t v195 = v773;
  uint64_t v196 = v773 + *(int *)(v772 + 48);
  sub_FF10(v191, v773, &qword_284DB0);
  sub_FF10(v193, v196, &qword_284DB0);
  uint64_t v197 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v192 + 48);
  uint64_t v198 = v195;
  if (v197(v195, 1LL, v194) == 1)
  {
    sub_1F6CC(v193, &qword_284DB0);
    sub_1F6CC(v191, &qword_284DB0);
    int v199 = v197(v196, 1LL, v794);
    uint64_t v200 = (uint64_t)v785;
    if (v199 == 1)
    {
      sub_1F6CC(v195, &qword_284DB0);
LABEL_25:
      sub_6C3C(v826);
      sub_157C4((uint64_t)v827, (uint64_t)v825);
LABEL_26:
      sub_6C3C(v825);
      v785 = (char *)&dword_8;
      uint64_t v190 = v795;
      goto LABEL_48;
    }

    goto LABEL_32;
  }

  uint64_t v201 = v195;
  uint64_t v202 = v719;
  sub_FF10(v201, v719, &qword_284DB0);
  if (v197(v196, 1LL, v794) == 1)
  {
    sub_1F6CC(v792, &qword_284DB0);
    sub_1F6CC(v803, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v202, v794);
    uint64_t v200 = (uint64_t)v785;
LABEL_32:
    sub_1F6CC(v198, &qword_284DA8);
    sub_6C3C(v826);
    sub_157C4((uint64_t)v827, (uint64_t)v825);
    goto LABEL_33;
  }

  uint64_t v208 = v778;
  uint64_t v209 = v198;
  uint64_t v210 = v727;
  uint64_t v211 = v794;
  (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v727, v196, v794);
  uint64_t v212 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v213 = dispatch thunk of static Equatable.== infix(_:_:)(v202, v210, v211, v212);
  id v214 = *(void (**)(char *, uint64_t))(v208 + 8);
  v214(v210, v211);
  sub_1F6CC(v792, &qword_284DB0);
  sub_1F6CC(v803, &qword_284DB0);
  v214((char *)v202, v211);
  os_log_type_t v160 = v796;
  sub_1F6CC(v209, &qword_284DB0);
  sub_6C3C(v826);
  sub_157C4((uint64_t)v827, (uint64_t)v825);
  uint64_t v200 = (uint64_t)v785;
  if ((v213 & 1) != 0) {
    goto LABEL_26;
  }
LABEL_33:
  sub_6EA8(v825, v825[3]);
  dispatch thunk of AudioIntent.verb.getter(v807, v808);
  uint64_t v203 = v759;
  uint64_t v204 = v794;
  v700((uint64_t)v759, enum case for CommonAudio.Verb.play(_:), v794);
  v701((uint64_t)v203, 0LL, 1LL, v204);
  uint64_t v205 = v723;
  uint64_t v206 = v723 + *(int *)(v772 + 48);
  sub_FF10(v200, v723, &qword_284DB0);
  sub_FF10((uint64_t)v203, v206, &qword_284DB0);
  if (v197(v205, 1LL, v204) == 1)
  {
    sub_1F6CC((uint64_t)v203, &qword_284DB0);
    sub_1F6CC(v200, &qword_284DB0);
    if (v197(v206, 1LL, v794) == 1)
    {
      sub_1F6CC(v205, &qword_284DB0);
      sub_157C4((uint64_t)v825, (uint64_t)v823);
      uint64_t v190 = v795;
      goto LABEL_43;
    }

    goto LABEL_38;
  }

  uint64_t v207 = v711;
  sub_FF10(v205, v711, &qword_284DB0);
  if (v197(v206, 1LL, v794) == 1)
  {
    sub_1F6CC((uint64_t)v759, &qword_284DB0);
    sub_1F6CC(v200, &qword_284DB0);
    (*(void (**)(uint64_t, uint64_t))(v778 + 8))(v207, v794);
LABEL_38:
    sub_1F6CC(v205, &qword_284DA8);
    sub_157C4((uint64_t)v825, (uint64_t)v823);
    uint64_t v190 = v795;
LABEL_39:
    sub_6C3C(v823);
    sub_6C3C(v825);
    goto LABEL_45;
  }

  uint64_t v215 = v778;
  __int128 v216 = v727;
  uint64_t v217 = v200;
  uint64_t v218 = v794;
  (*(void (**)(char *, uint64_t, uint64_t))(v778 + 32))(v727, v206, v794);
  uint64_t v219 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
  char v220 = dispatch thunk of static Equatable.== infix(_:_:)(v207, v216, v218, v219);
  uint64_t v221 = *(void (**)(char *, uint64_t))(v215 + 8);
  v221(v216, v218);
  sub_1F6CC((uint64_t)v759, &qword_284DB0);
  sub_1F6CC(v217, &qword_284DB0);
  v221((char *)v207, v218);
  sub_1F6CC(v205, &qword_284DB0);
  sub_157C4((uint64_t)v825, (uint64_t)v823);
  uint64_t v190 = v795;
  if ((v220 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_43:
  sub_6EA8(v823, v824);
  uint64_t v222 = dispatch thunk of AudioIntent.modifiers.getter(v807, v808);
  uint64_t v224 = (uint64_t)v706;
  uint64_t v223 = v707;
  uint64_t v225 = v708;
  (*(void (**)(char *, void, uint64_t))(v707 + 104))( v706,  enum case for CommonAudio.Modifier.moreOf(_:),  v708);
  char v226 = sub_14263C(v224, v222);
  swift_bridgeObjectRelease(v222);
  (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v224, v225);
  sub_6C3C(v823);
  sub_6C3C(v825);
  if ((v226 & 1) == 0)
  {
LABEL_45:
    uint64_t v228 = v787;
    uint64_t v229 = v793;
    ((void (*)(char *, void, uint64_t))v786)(v787, enum case for CommonAudio.Attribute.discovery(_:), v793);
    char v230 = AudioIntent.hasAttribute(_:)(v228, v807, v808);
    ((void (*)(char *, uint64_t))v160[1])(v228, v229);
    uint64_t v227 = v720;
    if ((v230 & 1) != 0) {
      uint64_t v227 = 1LL;
    }
    goto LABEL_47;
  }

  uint64_t v227 = 8LL;
LABEL_47:
  v785 = (char *)v227;
LABEL_48:
  uint64_t v231 = v787;
  uint64_t v232 = v793;
  ((void (*)(char *, void, uint64_t))v786)( v787,  enum case for CommonAudio.Attribute.addToUnspecifiedPlaylist(_:),  v793);
  id v233 = v807;
  id v234 = v808;
  char v235 = AudioIntent.hasAttribute(_:)(v231, v807, v808);
  v759 = (void (*)(void, void))v160[1];
  v759(v231, v232);
  if ((v235 & 1) != 0) {
    uint64_t v236 = 0LL;
  }
  else {
    uint64_t v236 = v190;
  }
  uint64_t v773 = v236;
  v237 = (void *)dispatch thunk of AudioIntent.appShowTitles.getter(v233, v234);
  uint64_t v238 = sub_7245C(v237);
  unint64_t v240 = v239;
  uint64_t v242 = v241;
  uint64_t v244 = v243;
  swift_bridgeObjectRelease(v237);
  uint64_t v245 = v800;
  v246 = (void (*)(void, void, void, void))v797;
  if (v240)
  {
    swift_bridgeObjectRetain(v240);
    uint64_t v247 = sub_A86F8(v238, v240);
    unint64_t v249 = v248;
    swift_bridgeObjectRelease(v240);
    if (v249)
    {
      swift_bridgeObjectRelease(v240);
      swift_bridgeObjectRelease(v798);
      uint64_t v798 = v244;
      id v250 = v807;
      goto LABEL_56;
    }

    sub_16474(v238, v240, v242, v244);
  }

  id v250 = v807;
  v251 = (void *)dispatch thunk of AudioIntent.entities.getter(v807, v808);
  uint64_t v247 = sub_7241C(v251);
  unint64_t v249 = v252;
  swift_bridgeObjectRelease(0LL);
  swift_bridgeObjectRelease(v251);
  uint64_t v242 = v790;
LABEL_56:
  v253 = (void *)dispatch thunk of AudioIntent.musicTitles.getter(v250, v808);
  uint64_t v254 = sub_7241C(v253);
  uint64_t v256 = v255;
  swift_bridgeObjectRelease(v253);
  if (v256)
  {
    swift_bridgeObjectRelease(v245);
    uint64_t v795 = 1LL;
    uint64_t v774 = v254;
    uint64_t v245 = v256;
  }

  else
  {
    uint64_t v795 = 0LL;
  }

  uint64_t v257 = v804;
  uint64_t v800 = v245;
  uint64_t v790 = v247;
  if (v249)
  {
    swift_bridgeObjectRetain(v249);
    dispatch thunk of AudioIntent.mediaType.getter(v807, v808);
    uint64_t v258 = v799;
    uint64_t v259 = v806;
    (*(void (**)(uint64_t, void, uint64_t))(v799 + 104))( v257,  enum case for CommonAudio.MediaType.news(_:),  v806);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v258 + 56))(v257, 0LL, 1LL, v259);
    uint64_t v260 = v791;
    uint64_t v261 = v791 + *(int *)(v801 + 48);
    sub_FF10((uint64_t)v246, v791, &qword_284DC8);
    sub_FF10(v257, v261, &qword_284DC8);
    uint64_t v262 = v259;
    v263 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v802;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v260, 1LL, v262) == 1)
    {
      sub_1F6CC(v257, &qword_284DC8);
      sub_1F6CC((uint64_t)v246, &qword_284DC8);
      if (v263(v261, 1LL, v806) == 1)
      {
        sub_1F6CC(v791, &qword_284DC8);
        swift_bridgeObjectRelease(v800);
        uint64_t v264 = v790;
LABEL_69:
        uint64_t v774 = v264;
        uint64_t v800 = v249;
        goto LABEL_70;
      }
    }

    else
    {
      uint64_t v265 = v724;
      sub_FF10(v260, v724, &qword_284DC8);
      if (v263(v261, 1LL, v806) != 1)
      {
        uint64_t v266 = v799;
        uint64_t v267 = v265;
        v268 = v775;
        uint64_t v269 = v806;
        (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v261, v806);
        uint64_t v270 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        char v271 = dispatch thunk of static Equatable.== infix(_:_:)(v267, v268, v269, v270);
        v272 = *(void (**)(char *, uint64_t))(v266 + 8);
        v272(v268, v269);
        sub_1F6CC(v804, &qword_284DC8);
        sub_1F6CC((uint64_t)v797, &qword_284DC8);
        v272((char *)v267, v269);
        sub_1F6CC(v260, &qword_284DC8);
        uint64_t v264 = v790;
        if ((v271 & 1) != 0)
        {
          swift_bridgeObjectRelease(v800);
          goto LABEL_69;
        }

LABEL_66:
        swift_bridgeObjectRelease(v249);
        goto LABEL_70;
      }

      sub_1F6CC(v804, &qword_284DC8);
      sub_1F6CC((uint64_t)v246, &qword_284DC8);
      (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v265, v806);
    }

    sub_1F6CC(v791, &qword_284DA0);
    goto LABEL_66;
  }

    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v34);
    uint64_t v3 = v150;
LABEL_119:
    swift_arrayDestroy(&qword_26AD60, 1LL, &type metadata for String);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v142 = sub_6960((uint64_t)v2, (uint64_t)qword_2969C8);
    uint64_t v143 = (*(uint64_t (**)(char *, uint64_t, const char **))(v3 + 16))(v9, v142, v2);
    uint64_t v144 = (os_log_s *)Logger.logObject.getter(v143);
    uint64_t v145 = static os_log_type_t.info.getter(v144);
    if (os_log_type_enabled(v144, v145))
    {
      uint64_t v146 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v146 = 0;
      _os_log_impl( &dword_0,  v144,  v145,  "INPlayMediaIntent#isQueryStationDecade not returning false with internal signal QueryStationEditorial",  v146,  2u);
      swift_slowDealloc(v146, -1LL, -1LL);
    }

    (*(void (**)(char *, const char **))(v3 + 8))(v9, v2);
    return 0LL;
  }

LABEL_70:
  uint64_t v273 = v776;
  v274 = (void *)dispatch thunk of AudioIntent.playlistTitles.getter(v807, v808);
  uint64_t v275 = sub_7241C(v274);
  unint64_t v277 = v276;
  swift_bridgeObjectRelease(v274);
  unint64_t v803 = v249;
  uint64_t v792 = v242;
  if (v277)
  {
    uint64_t v804 = sub_A86F8(v275, v277);
    uint64_t v279 = v278;
    swift_bridgeObjectRelease(v277);
    if (v279)
    {
      uint64_t v791 = v279;
      id v280 = v807;
      uint64_t v281 = v799;
      goto LABEL_80;
    }
  }

  else
  {
    uint64_t v804 = v275;
  }

  id v280 = v807;
  v282 = (void *)dispatch thunk of AudioIntent.appPlaylistTitles.getter(v807, v808);
  uint64_t v283 = sub_7245C(v282);
  unint64_t v285 = v284;
  uint64_t v287 = v286;
  uint64_t v289 = v288;
  swift_bridgeObjectRelease(v282);
  if (v285)
  {
    swift_bridgeObjectRetain(v285);
    uint64_t v290 = sub_A86F8(v283, v285);
    uint64_t v292 = v291;
    swift_bridgeObjectRelease(v285);
    if (v292)
    {
      swift_bridgeObjectRelease(v285);
      swift_bridgeObjectRelease(0LL);
      swift_bridgeObjectRelease(v798);
      uint64_t v792 = v287;
      uint64_t v798 = v289;
      uint64_t v804 = v290;
      uint64_t v791 = v292;
    }

    else
    {
      sub_16474(v283, v285, v287, v289);
      uint64_t v791 = 0LL;
    }

    uint64_t v281 = v799;
    id v280 = v807;
  }

  else
  {
    uint64_t v791 = 0LL;
    uint64_t v281 = v799;
  }

LABEL_153:
  uint64_t v414 = v729;
  sub_FF10(v789, v729, &qword_284D98);
  int v415 = v375(v414, 1LL, v376);
  uint64_t v374 = v779;
  if (v415 == 1)
  {
    sub_1F6CC(v414, &qword_284D98);
  }

  else
  {
    uint64_t v416 = v748;
    v417 = v715;
    uint64_t v418 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v748 + 32))(v715, v414, v376);
    v828._countAndFlagsBits = CommonAudio.RadioType.rawValue.getter(v418);
    v419 = v828._object;
    sub_A8748(v828);
    swift_bridgeObjectRelease(v419);
    (*(void (**)(char *, uint64_t))(v416 + 8))(v417, v376);
  }

  uint64_t v383 = (uint64_t)v731;
  uint64_t v804 = v818;
  uint64_t v359 = v819;
  sub_157C4((uint64_t)v827, (uint64_t)&v818);
  uint64_t v773 = 16LL;
  if (v359) {
    goto LABEL_157;
  }
LABEL_194:
  sub_6EA8(&v818, v820);
  dispatch thunk of AudioIntent.mediaType.getter(v280, v808);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v383, 1LL, v806) == 1)
  {
    sub_1F6CC(v383, &qword_284DC8);
    sub_6C3C(&v818);
    uint64_t v359 = 0LL;
    goto LABEL_158;
  }

  Swift::Bool v495 = CommonAudio.MediaType.isStation()();
  v496 = *(void (**)(uint64_t, uint64_t))(v799 + 8);
  v496(v383, v806);
  sub_6C3C(&v818);
  if (!v495)
  {
    uint64_t v359 = 0LL;
    uint64_t v374 = v779;
    goto LABEL_158;
  }

  uint64_t v420 = (uint64_t)v755;
  if (v803 && (uint64_t v497 = sub_A86F8(v790, v803), v498))
  {
    uint64_t v359 = v498;
    uint64_t v804 = v497;
  }

  else
  {
    v692 = (void *)dispatch thunk of AudioIntent.artists.getter(v280, v808);
    uint64_t v693 = sub_7241C(v692);
    uint64_t v359 = v694;
    swift_bridgeObjectRelease(v692);
    if (!v359)
    {
      v695 = (void *)dispatch thunk of AudioIntent.albums.getter(v280, v808);
      uint64_t v693 = sub_7241C(v695);
      uint64_t v359 = v696;
      swift_bridgeObjectRelease(v695);
      if (!v359)
      {
        v697 = (void *)dispatch thunk of AudioIntent.musicTitles.getter(v280, v808);
        uint64_t v693 = sub_7241C(v697);
        uint64_t v359 = v698;
        swift_bridgeObjectRelease(v697);
        if (!v359) {
          goto LABEL_352;
        }
      }
    }

    uint64_t v804 = v693;
  }

  uint64_t v699 = (uint64_t)v702;
  dispatch thunk of AudioIntent.mediaType.getter(v280, v808);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v699, 1LL, v806) == 1)
  {
    sub_1F6CC(v699, &qword_284DC8);
    uint64_t v795 = 0LL;
  }

  else
  {
    uint64_t v795 = sub_201914();
    v496(v699, v806);
  }

LABEL_352:
  uint64_t v374 = v779;
LABEL_159:
  v421 = (void *)dispatch thunk of AudioIntent.podcastTitles.getter(v280, v808);
  uint64_t v422 = sub_7241C(v421);
  unint64_t v424 = v423;
  swift_bridgeObjectRelease(v421);
  uint64_t v800 = v359;
  if (v424)
  {
    uint64_t v788 = sub_A86F8(v422, v424);
    uint64_t v794 = v425;
    swift_bridgeObjectRelease(v424);
  }

  else
  {
    uint64_t v788 = v422;
    uint64_t v794 = 0LL;
  }

  uint64_t v426 = (uint64_t)v756;
  dispatch thunk of AudioIntent.mediaType.getter(v807, v808);
  uint64_t v427 = enum case for CommonAudio.MediaType.podcast(_:);
  uint64_t v428 = v806;
  ((void (*)(uint64_t, void, uint64_t))v796)(v420, enum case for CommonAudio.MediaType.podcast(_:), v806);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v420, 0LL, 1LL, v428);
  uint64_t v429 = v757;
  uint64_t v430 = v757 + *(int *)(v801 + 48);
  sub_FF10(v374, v757, &qword_284DC8);
  sub_FF10(v420, v430, &qword_284DC8);
  v431 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v802;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v429, 1LL, v428) == 1)
  {
    sub_1F6CC(v420, &qword_284DC8);
    sub_1F6CC(v374, &qword_284DC8);
    uint64_t v432 = v429;
    if (v431(v430, 1LL, v806) == 1)
    {
      sub_1F6CC(v429, &qword_284DC8);
      sub_157C4((uint64_t)v827, (uint64_t)v816);
LABEL_177:
      sub_6C3C(v816);
LABEL_178:
      uint64_t v440 = (uint64_t)v758;
      uint64_t v441 = v769;
      uint64_t v442 = v800;
      uint64_t v443 = v794;
      if (v794) {
        goto LABEL_180;
      }
      uint64_t v452 = swift_bridgeObjectRetain(v803);
      uint64_t v788 = v790;
      uint64_t v443 = v452;
      if (v452) {
        goto LABEL_180;
      }
      goto LABEL_181;
    }

    goto LABEL_167;
  }

  uint64_t v433 = v738;
  sub_FF10(v429, v738, &qword_284DC8);
  uint64_t v432 = v429;
  if (v431(v430, 1LL, v806) == 1)
  {
    sub_1F6CC(v420, &qword_284DC8);
    sub_1F6CC(v374, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v433, v806);
LABEL_167:
    sub_1F6CC(v432, &qword_284DA0);
    sub_157C4((uint64_t)v827, (uint64_t)v816);
    uint64_t v434 = (uint64_t)v746;
    uint64_t v435 = v768;
    goto LABEL_168;
  }

  uint64_t v444 = v433;
  uint64_t v445 = v799;
  v446 = v775;
  uint64_t v447 = v430;
  uint64_t v448 = v806;
  (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v447, v806);
  uint64_t v449 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  LODWORD(v78_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = dispatch thunk of static Equatable.== infix(_:_:)(v444, v446, v448, v449);
  uint64_t v450 = v427;
  v451 = *(void (**)(char *, uint64_t))(v445 + 8);
  v451(v446, v448);
  sub_1F6CC(v420, &qword_284DC8);
  sub_1F6CC(v779, &qword_284DC8);
  v451((char *)v444, v448);
  uint64_t v427 = v450;
  sub_1F6CC(v432, &qword_284DC8);
  sub_157C4((uint64_t)v827, (uint64_t)v816);
  uint64_t v434 = (uint64_t)v746;
  uint64_t v435 = v768;
  if ((v780 & 1) != 0) {
    goto LABEL_177;
  }
LABEL_168:
  sub_6EA8(v816, v817);
  dispatch thunk of AudioIntent.mediaType.getter(v807, v808);
  uint64_t v436 = v806;
  ((void (*)(uint64_t, void, uint64_t))v796)(v435, enum case for CommonAudio.MediaType.episode(_:), v806);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v435, 0LL, 1LL, v436);
  uint64_t v437 = v434 + *(int *)(v801 + 48);
  sub_FF10(v426, v434, &qword_284DC8);
  sub_FF10(v435, v437, &qword_284DC8);
  v438 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v802;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v434, 1LL, v436) == 1)
  {
    sub_1F6CC(v435, &qword_284DC8);
    sub_1F6CC(v426, &qword_284DC8);
    if (v438(v437, 1LL, v806) == 1)
    {
      sub_1F6CC(v434, &qword_284DC8);
      goto LABEL_177;
    }

    goto LABEL_173;
  }

  uint64_t v439 = v726;
  sub_FF10(v434, v726, &qword_284DC8);
  if (v438(v437, 1LL, v806) == 1)
  {
    sub_1F6CC(v768, &qword_284DC8);
    sub_1F6CC(v426, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v439, v806);
LABEL_173:
    sub_1F6CC(v434, &qword_284DA0);
    sub_6C3C(v816);
    goto LABEL_174;
  }

  uint64_t v475 = v426;
  uint64_t v476 = v439;
  uint64_t v477 = v799;
  uint64_t v478 = v806;
  v479 = v775;
  (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v437, v806);
  uint64_t v480 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  char v481 = dispatch thunk of static Equatable.== infix(_:_:)(v476, v479, v478, v480);
  uint64_t v482 = v427;
  v483 = *(void (**)(char *, uint64_t))(v477 + 8);
  v483(v479, v478);
  sub_1F6CC(v768, &qword_284DC8);
  sub_1F6CC(v475, &qword_284DC8);
  v483((char *)v476, v478);
  uint64_t v427 = v482;
  sub_1F6CC(v434, &qword_284DC8);
  sub_6C3C(v816);
  if ((v481 & 1) != 0) {
    goto LABEL_178;
  }
LABEL_174:
  uint64_t v440 = (uint64_t)v758;
  uint64_t v441 = v769;
  uint64_t v442 = v800;
  uint64_t v443 = v794;
  if (v794)
  {
LABEL_180:
    swift_bridgeObjectRelease(v442);
    uint64_t v795 = 6LL;
    uint64_t v804 = v788;
    uint64_t v442 = v443;
  }

LABEL_181:
  id v453 = v807;
  v454 = (void *)dispatch thunk of AudioIntent.applePodcastTitles.getter(v807, v808);
  uint64_t v455 = sub_7241C(v454);
  unint64_t v457 = v456;
  swift_bridgeObjectRelease(v454);
  if (v457)
  {
    uint64_t v458 = sub_A86F8(v455, v457);
    uint64_t v460 = v459;
    swift_bridgeObjectRelease(v457);
    if (!v460)
    {
      id v453 = v807;
      goto LABEL_211;
    }

    uint64_t v804 = v458;
    swift_bridgeObjectRelease(v442);
    dispatch thunk of AudioIntent.mediaType.getter(v807, v808);
    uint64_t v461 = v806;
    ((void (*)(uint64_t, uint64_t, uint64_t))v796)(v441, v427, v806);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v441, 0LL, 1LL, v461);
    uint64_t v462 = v745;
    uint64_t v463 = v745 + *(int *)(v801 + 48);
    sub_FF10(v440, v745, &qword_284DC8);
    uint64_t v464 = v462;
    v465 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v802;
    sub_FF10(v441, v463, &qword_284DC8);
    if (v465(v464, 1LL, v461) == 1)
    {
      sub_1F6CC(v441, &qword_284DC8);
      uint64_t v464 = v745;
      sub_1F6CC(v440, &qword_284DC8);
      int v466 = v465(v463, 1LL, v806);
      uint64_t v468 = v742;
      uint64_t v467 = v743;
      if (v466 == 1)
      {
        sub_1F6CC(v464, &qword_284DC8);
        sub_157C4((uint64_t)v827, (uint64_t)&v813);
LABEL_202:
        sub_6C3C(&v813);
        uint64_t v795 = 6LL;
        goto LABEL_203;
      }
    }

    else
    {
      uint64_t v469 = v717;
      sub_FF10(v464, v717, &qword_284DC8);
      if (v465(v463, 1LL, v806) != 1)
      {
        uint64_t v485 = v440;
        uint64_t v486 = v469;
        uint64_t v487 = v464;
        uint64_t v488 = v799;
        v489 = v775;
        uint64_t v490 = v806;
        (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v463, v806);
        uint64_t v491 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
        char v492 = dispatch thunk of static Equatable.== infix(_:_:)(v486, v489, v490, v491);
        v493 = *(void (**)(char *, uint64_t))(v488 + 8);
        v494 = v489;
        v465 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v802;
        v493(v494, v490);
        sub_1F6CC(v769, &qword_284DC8);
        sub_1F6CC(v485, &qword_284DC8);
        v493((char *)v486, v490);
        sub_1F6CC(v487, &qword_284DC8);
        sub_157C4((uint64_t)v827, (uint64_t)&v813);
        uint64_t v470 = v749;
        uint64_t v468 = v742;
        uint64_t v467 = v743;
        if ((v492 & 1) != 0) {
          goto LABEL_202;
        }
LABEL_191:
        sub_6EA8(&v813, v815);
        dispatch thunk of AudioIntent.mediaType.getter(v807, v808);
        uint64_t v471 = v806;
        ((void (*)(uint64_t, void, uint64_t))v796)( v468,  enum case for CommonAudio.MediaType.episode(_:),  v806);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v468, 0LL, 1LL, v471);
        uint64_t v472 = v470 + *(int *)(v801 + 48);
        sub_FF10(v467, v749, &qword_284DC8);
        uint64_t v473 = v749;
        sub_FF10(v468, v472, &qword_284DC8);
        if (v465(v473, 1LL, v471) == 1)
        {
          sub_1F6CC(v468, &qword_284DC8);
          uint64_t v473 = v749;
          sub_1F6CC(v467, &qword_284DC8);
          if (v465(v472, 1LL, v806) == 1)
          {
            sub_1F6CC(v473, &qword_284DC8);
            sub_6C3C(&v813);
            uint64_t v474 = v804;
            goto LABEL_209;
          }
        }

        else
        {
          uint64_t v484 = v709;
          sub_FF10(v473, v709, &qword_284DC8);
          if (v465(v472, 1LL, v806) != 1)
          {
            uint64_t v499 = v473;
            uint64_t v500 = v799;
            uint64_t v501 = v806;
            v502 = v775;
            (*(void (**)(char *, uint64_t, uint64_t))(v799 + 32))(v775, v472, v806);
            uint64_t v503 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
            char v504 = dispatch thunk of static Equatable.== infix(_:_:)(v484, v502, v501, v503);
            v505 = *(void (**)(char *, uint64_t))(v500 + 8);
            v505(v502, v501);
            sub_1F6CC(v742, &qword_284DC8);
            sub_1F6CC(v743, &qword_284DC8);
            v505((char *)v484, v501);
            sub_1F6CC(v499, &qword_284DC8);
            sub_6C3C(&v813);
            uint64_t v474 = v804;
            if ((v504 & 1) == 0) {
              goto LABEL_210;
            }
LABEL_209:
            uint64_t v795 = 6LL;
            goto LABEL_210;
          }

          sub_1F6CC(v742, &qword_284DC8);
          sub_1F6CC(v743, &qword_284DC8);
          (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v484, v806);
        }

        sub_1F6CC(v473, &qword_284DA0);
        sub_6C3C(&v813);
LABEL_203:
        uint64_t v474 = v804;
LABEL_210:
        uint64_t v804 = v474;
        uint64_t v442 = v460;
        id v453 = v807;
        goto LABEL_211;
      }

      sub_1F6CC(v441, &qword_284DC8);
      sub_1F6CC(v440, &qword_284DC8);
      (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v469, v806);
      uint64_t v468 = v742;
      uint64_t v467 = v743;
    }

    sub_1F6CC(v464, &qword_284DA0);
    sub_157C4((uint64_t)v827, (uint64_t)&v813);
    uint64_t v470 = v749;
    goto LABEL_191;
  }

LABEL_211:
  uint64_t v506 = (uint64_t)v761;
  v507 = (void *)dispatch thunk of AudioIntent.appAudiobookTitles.getter(v453, v808);
  uint64_t v508 = sub_7245C(v507);
  unint64_t v510 = v509;
  uint64_t v788 = v511;
  uint64_t v794 = v512;
  swift_bridgeObjectRelease(v507);
  uint64_t v513 = (uint64_t)v760;
  uint64_t v800 = v442;
  if (v510)
  {
    swift_bridgeObjectRetain(v510);
    uint64_t v780 = sub_A86F8(v508, v510);
    uint64_t v515 = v514;
    swift_bridgeObjectRelease(v510);
  }

  else
  {
    uint64_t v780 = 0LL;
    uint64_t v515 = 0LL;
  }

  uint64_t v779 = v508;
  dispatch thunk of AudioIntent.mediaType.getter(v807, v808);
  uint64_t v516 = v806;
  ((void (*)(uint64_t, void, uint64_t))v796)(v513, enum case for CommonAudio.MediaType.audioBook(_:), v806);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v797)(v513, 0LL, 1LL, v516);
  uint64_t v517 = v781;
  uint64_t v518 = v781 + *(int *)(v801 + 48);
  sub_FF10(v506, v781, &qword_284DC8);
  sub_FF10(v513, v518, &qword_284DC8);
  uint64_t v519 = v516;
  v520 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v802;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v802)(v517, 1LL, v519) == 1)
  {
    sub_1F6CC(v513, &qword_284DC8);
    sub_1F6CC(v506, &qword_284DC8);
    int v521 = v520(v518, 1LL, v806);
    uint64_t v523 = (uint64_t)v763;
    uint64_t v522 = v764;
    if (v521 == 1)
    {
      sub_1F6CC(v781, &qword_284DC8);
      uint64_t v524 = v794;
      uint64_t v525 = v788;
      goto LABEL_224;
    }

    goto LABEL_219;
  }

  uint64_t v526 = v739;
  sub_FF10(v517, v739, &qword_284DC8);
  if (v520(v518, 1LL, v806) == 1)
  {
    sub_1F6CC(v513, &qword_284DC8);
    sub_1F6CC(v506, &qword_284DC8);
    (*(void (**)(uint64_t, uint64_t))(v799 + 8))(v526, v806);
    uint64_t v523 = (uint64_t)v763;
    uint64_t v522 = v764;
LABEL_219:
    sub_1F6CC(v781, &qword_284DA0);
    uint64_t v524 = v794;
    uint64_t v525 = v788;
LABEL_220:
    if (v515) {
      goto LABEL_225;
    }
    sub_16474(v779, v510, v525, v524);
LABEL_222:
    id v527 = v808;
    goto LABEL_231;
  }

  uint64_t v528 = v799;
  v529 = *(void (**)(char *, uint64_t, uint64_t))(v799 + 32);
  uint64_t v530 = v806;
  uint64_t v801 = v515;
  v531 = v775;
  v529(v775, v518, v806);
  uint64_t v532 = sub_10430( &qword_284DF8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.MediaType,  (uint64_t)&protocol conformance descriptor for CommonAudio.MediaType);
  LODWORD(v802) = dispatch thunk of static Equatable.== infix(_:_:)(v526, v531, v530, v532);
  uint64_t v533 = v526;
  v534 = *(void (**)(char *, uint64_t))(v528 + 8);
  v535 = v531;
  uint64_t v515 = v801;
  v534(v535, v530);
  sub_1F6CC(v513, &qword_284DC8);
  sub_1F6CC(v506, &qword_284DC8);
  v534((char *)v533, v530);
  sub_1F6CC(v517, &qword_284DC8);
  uint64_t v523 = (uint64_t)v763;
  uint64_t v522 = v764;
  uint64_t v524 = v794;
  uint64_t v525 = v788;
  if ((v802 & 1) == 0) {
    goto LABEL_220;
  }
LABEL_224:
  if (v515)
  {
LABEL_225:
    swift_bridgeObjectRelease(v798);
    if (v510)
    {
      swift_bridgeObjectRelease(v510);
    }

    else
    {
      uint64_t v524 = 0LL;
      uint64_t v525 = 0LL;
    }

    goto LABEL_230;
  }

  sub_16474(v779, v510, v525, v524);
  uint64_t v536 = swift_bridgeObjectRetain(v803);
  if (!v536)
  {
    uint64_t v515 = 0LL;
    goto LABEL_222;
  }

  uint64_t v515 = v536;
  uint64_t v780 = v790;
  uint64_t v524 = v798;
  uint64_t v525 = v792;
LABEL_230:
  id v527 = v808;
  swift_bridgeObjectRetain(v515);
  swift_bridgeObjectRelease(v800);
  uint64_t v795 = 10LL;
  uint64_t v792 = v525;
  uint64_t v798 = v524;
  uint64_t v804 = v780;
  uint64_t v800 = v515;
LABEL_231:
  id v537 = v807;
  uint64_t v538 = dispatch thunk of AudioIntent.resolvedReference.getter(v807, v527);
  uint64_t v539 = v770;
  uint64_t v540 = v771;
  uint64_t v806 = v538;
  uint64_t v801 = v515;
  if (v538)
  {
    Swift::Bool v541 = AudioIntent.hasResolvedReference()();
    sub_157C4((uint64_t)v827, (uint64_t)&v813);
    if (v541)
    {
      sub_6C3C(&v813);
      goto LABEL_235;
    }

    sub_6EA8(&v813, v815);
    Swift::Bool v542 = AudioIntent.isReferringToCurrentlyPlayingForAdd()();
    sub_6C3C(&v813);
    if (v542)
    {
LABEL_235:
      v544 = v733;
      uint64_t v543 = v734;
      uint64_t v545 = v735;
      (*(void (**)(char *, void, uint64_t))(v734 + 104))( v733,  enum case for AudioUsoIntent.UsoNamespace.identifier(_:),  v735);
      uint64_t v546 = type metadata accessor for AudioUsoIntent(0LL);
      uint64_t v547 = static AudioUsoIntent.pegasusAppBundle.getter(v546);
      uint64_t v549 = v548;
      v796 = (void *)UsoEntity_common_MediaItem.identifiers(forNamespace:appBundleId:)(v544, v547, v548);
      swift_bridgeObjectRelease(v549);
      (*(void (**)(char *, uint64_t))(v543 + 8))(v544, v545);
      uint64_t v550 = sub_6C5C(&qword_284DF0);
      uint64_t v551 = type metadata accessor for AudioUsoIntent.IterationOptions(0LL);
      uint64_t v552 = *(void *)(v551 - 8);
      uint64_t v553 = *(unsigned __int8 *)(v552 + 80);
      uint64_t v554 = (v553 + 32) & ~v553;
      uint64_t v555 = v554 + *(void *)(v552 + 72);
      uint64_t v556 = v553 | 7;
      uint64_t v557 = swift_allocObject(v550, v555, v553 | 7);
      __int128 v802 = xmmword_214510;
      *(_OWORD *)(v557 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      uint64_t v558 = enum case for AudioUsoIntent.IterationOptions.includeResolvedReferences(_:);
      v559 = *(void (**)(uint64_t, void, uint64_t))(v552 + 104);
      v559(v557 + v554, enum case for AudioUsoIntent.IterationOptions.includeResolvedReferences(_:), v551);
      uint64_t v799 = UsoEntity_common_MediaItem.findFirst(options:with:)(v557, sub_142944, 0LL);
      swift_bridgeObjectRelease(v557);
      uint64_t v560 = swift_allocObject(v550, v555, v556);
      *(_OWORD *)(v560 + swift_weakDestroy(v0 + 16) = v802;
      v559(v560 + v554, v558, v551);
      v797 = (void (**)(uint64_t, void, uint64_t))UsoEntity_common_MediaItem.findFirst(options:with:)( v560,  sub_142950,  0LL);
      swift_bridgeObjectRelease(v560);
      uint64_t v561 = swift_allocObject(v550, v555, v556);
      *(_OWORD *)(v561 + swift_weakDestroy(v0 + 16) = v802;
      v559(v561 + v554, v558, v551);
      uint64_t v562 = UsoEntity_common_MediaItem.findFirst(options:with:)(v561, sub_142C78, 0LL);
      swift_bridgeObjectRelease(v561);
      uint64_t v563 = v736;
      v564 = (void (*)(void, void, void))v796;
      sub_724C0((uint64_t)v796, v736);
      swift_bridgeObjectRelease(v564);
      uint64_t v565 = type metadata accessor for UsoIdentifier(0LL);
      uint64_t v566 = *(void *)(v565 - 8);
      uint64_t v567 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v566 + 48))(v563, 1LL, v565);
      if ((_DWORD)v567 == 1)
      {
        sub_1F6CC(v563, &qword_284900);
        id v568 = v808;
        id v537 = v807;
        uint64_t v569 = v762;
        uint64_t v570 = v792;
      }

      else
      {
        uint64_t v571 = UsoIdentifier.value.getter(v567);
        unint64_t v573 = v572;
        (*(void (**)(uint64_t, uint64_t))(v566 + 8))(v563, v565);
        uint64_t v574 = sub_A86F8(v571, v573);
        uint64_t v576 = v575;
        swift_bridgeObjectRelease(v573);
        uint64_t v569 = v762;
        uint64_t v570 = v792;
        if (v576)
        {
          swift_bridgeObjectRelease(v798);
          uint64_t v570 = v574;
          uint64_t v798 = v576;
        }

        id v568 = v808;
        id v537 = v807;
      }

      uint64_t v577 = v800;
      uint64_t v578 = v799;
      v579 = (void (*)(void, void, void, void))v797;
      uint64_t v792 = v570;
      if (v799
        && (uint64_t v580 = swift_retain(v799),
            uint64_t v581 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v580),
            unint64_t v583 = v582,
            swift_release(v578),
            v583))
      {
        uint64_t v584 = sub_A86F8(v581, v583);
        v586 = v585;
        swift_bridgeObjectRelease(v583);
        v796 = v586;
        BOOL v587 = v586 == 0LL;
        v579 = (void (*)(void, void, void, void))v797;
        if (v587) {
          uint64_t v588 = 0LL;
        }
        else {
          uint64_t v588 = v584;
        }
        uint64_t v788 = v588;
        if (!v797) {
          goto LABEL_254;
        }
      }

      else
      {
        v796 = 0LL;
        uint64_t v788 = 0LL;
        if (!v579) {
          goto LABEL_254;
        }
      }

      uint64_t v589 = swift_retain(v579);
      uint64_t v590 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v589);
      unint64_t v592 = v591;
      swift_release(v579);
      if (v592)
      {
        uint64_t v593 = sub_A86F8(v590, v592);
        uint64_t v595 = v594;
        swift_bridgeObjectRelease(v592);
        *(void *)&__int128 v802 = v595;
        BOOL v587 = v595 == 0;
        v579 = (void (*)(void, void, void, void))v797;
        if (v587) {
          uint64_t v596 = 0LL;
        }
        else {
          uint64_t v596 = v593;
        }
        uint64_t v799 = v596;
        if (v562)
        {
LABEL_255:
          uint64_t v597 = swift_retain(v562);
          uint64_t v598 = dispatch thunk of UsoEntity_common_MediaItem.name.getter(v597);
          unint64_t v600 = v599;
          swift_release_n(v562, 2LL);
          swift_release(v806);
          swift_release(v579);
          swift_release(v578);
          if (v600)
          {
            uint64_t v601 = sub_A86F8(v598, v600);
            uint64_t v603 = v602;
            swift_bridgeObjectRelease(v600);
            if (v603)
            {
              swift_bridgeObjectRelease(v577);
              uint64_t v804 = v601;
              uint64_t v800 = v603;
            }
          }

          goto LABEL_258;
        }

      char v390 = 0LL;
      goto LABEL_212;
    }

LABEL_253:
        swift_release(v806);
        swift_release(v578);
        swift_release(v579);
LABEL_258:
        uint64_t v604 = 1LL;
        id v605 = v568;
        goto LABEL_269;
      }

LABEL_285:
    uint64_t v628 = v633;
    uint64_t v630 = v632;
    goto LABEL_286;
  }

  uint64_t v633 = v804;
  id v634 = v808;
  if (!v630) {
    goto LABEL_285;
  }
  if (!v773) {
    goto LABEL_283;
  }
LABEL_280:
  if (v800) {
    goto LABEL_284;
  }
  if (v773 != 2)
  {
    uint64_t v632 = 0LL;
    goto LABEL_284;
  }

LABEL_341:
  uint64_t v795 = 2LL;
LABEL_286:
  v636 = (void *)dispatch thunk of AudioIntent.artists.getter(v807, v634);
  uint64_t v637 = sub_7241C(v636);
  unint64_t v639 = v638;
  swift_bridgeObjectRelease(v636);
  if (v639)
  {
    uint64_t v806 = sub_A86F8(v637, v639);
    v641 = v640;
    swift_bridgeObjectRelease(v639);
  }

  else
  {
    uint64_t v806 = v637;
    v641 = 0LL;
  }

  id v642 = v807;
  id v643 = v808;
  v644 = (void *)dispatch thunk of AudioIntent.appMusicArtistNames.getter(v807, v808);
  v645 = (void (**)(uint64_t, void, uint64_t))sub_7245C(v644);
  unint64_t v647 = v646;
  uint64_t v804 = v648;
  uint64_t v800 = v649;
  swift_bridgeObjectRelease(v644);
  sub_157C4((uint64_t)v827, (uint64_t)&v813);
  if (v647)
  {
    sub_6C3C(&v813);
  }

  else
  {
    sub_6EA8(&v813, v815);
    v650 = (void *)dispatch thunk of AudioIntent.appAudiobookAuthors.getter(v642, v643);
    v645 = (void (**)(uint64_t, void, uint64_t))sub_7245C(v650);
    unint64_t v647 = v651;
    uint64_t v804 = v652;
    uint64_t v800 = v653;
    swift_bridgeObjectRelease(v650);
    sub_6C3C(&v813);
    if (!v647)
    {
      v797 = v645;
      uint64_t v658 = v630;
      char v659 = 1;
      goto LABEL_296;
    }
  }

  v797 = v645;
  uint64_t v654 = sub_A86F8((uint64_t)v645, v647);
  if (v655)
  {
    uint64_t v656 = v654;
    v657 = v655;
    uint64_t v658 = v630;
    swift_bridgeObjectRelease(v641);
    char v659 = 0;
    uint64_t v806 = v656;
    v660 = (void (*)(void, void, void))v796;
    goto LABEL_297;
  }

  uint64_t v658 = v630;
  char v659 = 0;
LABEL_296:
  v660 = (void (*)(void, void, void))v796;
  v657 = v641;
LABEL_297:
  uint64_t v661 = v795;
  v796 = (void *)v647;
  if (v803)
  {
    if (v657)
    {
      if (v631)
      {
        if (v631 == 3)
        {
          uint64_t v795 = (uint64_t)v657;
          unint64_t v662 = v803;
          swift_bridgeObjectRetain(v803);
          swift_bridgeObjectRelease(v660);
          swift_bridgeObjectRelease(v658);
          uint64_t v658 = v662;
LABEL_323:
          swift_bridgeObjectRetain(v662);
          swift_bridgeObjectRelease(v658);
          uint64_t v664 = 0LL;
          unint64_t v803 = v662;
          uint64_t v658 = v662;
          goto LABEL_327;
        }

LABEL_304:
        if (v658) {
          goto LABEL_313;
        }
        if (v631 != 3)
        {
          uint64_t v658 = 0LL;
          goto LABEL_313;
        }

LABEL_335:
        if ((v659 & 1) != 0)
        {
          uint64_t v661 = 3LL;
          uint64_t v658 = (uint64_t)v657;
          uint64_t v628 = v806;
        }

        else
        {
          swift_bridgeObjectRetain(v647);
          uint64_t v691 = v800;
          swift_bridgeObjectRetain(v800);
          swift_bridgeObjectRelease(v647);
          swift_bridgeObjectRelease(v798);
          uint64_t v661 = 3LL;
          uint64_t v658 = (uint64_t)v657;
          uint64_t v628 = v806;
          uint64_t v798 = v691;
          uint64_t v792 = v804;
        }

        uint64_t v663 = v788;
LABEL_315:
        v657 = v660;
        uint64_t v806 = v663;
        unint64_t v662 = v803;
        if (!v631) {
          goto LABEL_319;
        }
        goto LABEL_316;
      }

      if (!v658) {
        uint64_t v631 = 0LL;
      }
LABEL_313:
      swift_bridgeObjectRelease(v660);
      unint64_t v662 = v803;
      if (v661) {
        goto LABEL_314;
      }
      goto LABEL_316;
    }
  }

  else if (v657)
  {
    if (v631) {
      goto LABEL_304;
    }
    if (!v658) {
      goto LABEL_335;
    }
    goto LABEL_313;
  }

  uint64_t v806 = v788;
  v657 = v660;
  unint64_t v662 = v803;
  if (v795)
  {
LABEL_314:
    v660 = v657;
    uint64_t v663 = v806;
    goto LABEL_315;
  }

LABEL_316:
  if (v631 != 18)
  {
    uint64_t v661 = v631;
    uint64_t v795 = (uint64_t)v657;
    if (v662) {
      goto LABEL_320;
    }
LABEL_325:
    uint64_t v664 = v661;
    goto LABEL_326;
  }

  if (v661 != 5) {
    uint64_t v661 = 18LL;
  }
LABEL_319:
  uint64_t v795 = (uint64_t)v657;
  if (!v662) {
    goto LABEL_325;
  }
LABEL_320:
  if (!v661) {
    goto LABEL_323;
  }
  uint64_t v664 = v661;
  if (!v658)
  {
    swift_bridgeObjectRetain(v662);
    uint64_t v658 = v662;
    goto LABEL_327;
  }

LABEL_326:
  uint64_t v790 = v628;
LABEL_327:
  uint64_t v665 = v783;
  v666 = v782;
  v667 = v767;
  v668 = (void *)v765;
  if (AudioIntent.isBeats1Only()())
  {
    uint64_t v669 = static CommonAudio.beatsOne.getter();
    uint64_t v671 = v670;
    swift_bridgeObjectRelease(v658);
  }

  else
  {
    uint64_t v669 = v790;
    uint64_t v671 = v658;
  }

  sub_1641C(0LL, &qword_284DD8, &OBJC_CLASS___INMediaSearch_ptr);
  id v807 = v668;
  swift_bridgeObjectRetain(v671);
  v672 = (void *)INMediaSearch.init(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( v664,  v785,  v669,  v671,  v806,  v795,  v799,  v802,  v667,  v766,  v668,  v794,  v792,  v798);
  uint64_t v673 = sub_FAF8();
  (*(void (**)(char *, uint64_t, uint64_t))(v665 + 16))(v666, v673, v784);
  uint64_t v674 = swift_allocObject(&unk_270D10, 24LL, 7LL);
  *(void *)(v674 + swift_weakDestroy(v0 + 16) = v672;
  id v808 = v672;
  v675 = (os_log_s *)Logger.logObject.getter(v808);
  LODWORD(v672) = static os_log_type_t.default.getter();
  uint64_t v676 = swift_allocObject(&unk_270D38, 17LL, 7LL);
  *(_BYTE *)(v676 + swift_weakDestroy(v0 + 16) = 32;
  uint64_t v677 = swift_allocObject((char *)&_s11descr26FCD9VMF.Kind + 1, 17LL, 7LL);
  *(_BYTE *)(v677 + swift_weakDestroy(v0 + 16) = 8;
  uint64_t v678 = swift_allocObject(&unk_270D88, 32LL, 7LL);
  *(void *)(v678 + swift_weakDestroy(v0 + 16) = sub_64E04;
  *(void *)(v678 + 24) = v674;
  uint64_t v679 = swift_allocObject(&unk_270DB0, 32LL, 7LL);
  *(void *)(v679 + swift_weakDestroy(v0 + 16) = sub_1646C;
  *(void *)(v679 + 24) = v678;
  uint64_t v680 = sub_6C5C(&qword_284DE0);
  uint64_t inited = swift_initStackObject(v680, &v812);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
  *(void *)(inited + 32) = sub_16464;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v676;
  *(void *)(inited + 48) = sub_64F90;
  *(void *)(inited + 56) = v677;
  *(void *)(inited + 64) = sub_16454;
  *(void *)(inited + 72) = v679;
  swift_retain(v676);
  swift_retain(v677);
  swift_retain(v679);
  swift_bridgeObjectRelease(inited);
  LODWORD(v806) = (_DWORD)v672;
  os_log_type_t v682 = v672;
  v683 = v675;
  if (!os_log_type_enabled(v675, v682))
  {
    swift_bridgeObjectRelease(v671);

    swift_release(v676);
    swift_release(v677);
    swift_release(v679);

    (*(void (**)(char *, uint64_t))(v783 + 8))(v782, v784);
    swift_bridgeObjectRelease(v801);
    sub_1F6CC(v789, &qword_284D98);
    swift_bridgeObjectRelease(v791);
    unint64_t v688 = v803;
    v689 = (void (*)(void, void, void))v796;
    goto LABEL_334;
  }

  v805 = (void *)v671;
  v684 = (uint8_t *)sub_55F20(12LL);
  uint64_t v685 = swift_slowAlloc(32LL, -1LL);
  uint64_t v810 = 0LL;
  uint64_t v809 = v685;
  *(_WORD *)v684 = 258;
  v811 = v684 + 2;
  v813 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_16464;
  uint64_t v814 = v676;
  uint64_t v686 = v740;
  sub_FB40(&v813, (uint64_t)&v811, (uint64_t)&v810, (uint64_t)&v809);
  if (!v686)
  {
    swift_release(v676);
    v813 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_64F90;
    uint64_t v814 = v677;
    sub_FB40(&v813, (uint64_t)&v811, (uint64_t)&v810, (uint64_t)&v809);
    id v687 = v807;
    swift_release(v677);
    v813 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_16454;
    uint64_t v814 = v679;
    sub_FB40(&v813, (uint64_t)&v811, (uint64_t)&v810, (uint64_t)&v809);
    unint64_t v688 = v803;
    v689 = (void (*)(void, void, void))v796;
    swift_release(v679);
    _os_log_impl(&dword_0, v683, (os_log_type_t)v806, "ConverterHelpers#convertMediaSearch mediaSearch: %s", v684, 0xCu);
    swift_arrayDestroy(v685, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v685, -1LL, -1LL);
    sub_101D4((uint64_t)v684);
    swift_bridgeObjectRelease(v805);

    (*(void (**)(char *, uint64_t))(v783 + 8))(v782, v784);
    swift_bridgeObjectRelease(v801);
    sub_1F6CC(v789, &qword_284D98);
    swift_bridgeObjectRelease(v791);
LABEL_334:
    sub_16474((uint64_t)v797, (uint64_t)v689, v804, v800);
    swift_bridgeObjectRelease(v688);
    sub_6C3C(v827);
    return v808;
  }

  swift_bridgeObjectRelease(v805);
  id result = (id)swift_errorRelease(v686);
  __break(1u);
  return result;
}

uint64_t sub_14768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v23)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v6 = sub_6C5C(&qword_284E10);
  v28[0] = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_284E18);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = *(void *)(a2 - 8);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a2);
  dispatch thunk of AudioIntent.decade.getter(a2, a3);
  uint64_t v16 = type metadata accessor for CommonAudio.Decade(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1LL, v16) == 1)
  {
    sub_1F6CC((uint64_t)v12, &qword_284E18);
  }

  else
  {
    uint64_t v18 = sub_201990();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
    if (v18) {
      goto LABEL_7;
    }
  }

  uint64_t v19 = dispatch thunk of AudioIntent.dateTime.getter(a2, a3);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = type metadata accessor for DateTime(0LL);
    uint64_t v22 = sub_1641C(0LL, (unint64_t *)&qword_284E20, &OBJC_CLASS___INDateComponentsRange_ptr);
    Transformer.init(transform:)(sub_204098, 0LL, v21, v22);
    uint64_t v23 = (void (*)(uint64_t *__return_ptr, uint64_t *))Transformer.transform.getter(v6);
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v28[0] + 8LL))(v8, v6);
    uint64_t v26 = UsoEntity_common_DateTime.toDateTime(recurrencePattern:)(0LL);
    uint64_t v30 = v26;
    v23(&v29, &v30);
    swift_release(v26);
    swift_release(v25);
    swift_release(v20);
    uint64_t v18 = v29;
  }

  else
  {
    uint64_t v18 = 0LL;
  }

void *sub_147908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    sub_6C5C(&qword_287DE0);
    uint64_t v10 = static _SetStorage.allocate(capacity:)(v9);
    uint64_t v11 = 0LL;
    uint64_t v12 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v31 = v9;
    uint64_t v32 = a1 + ((v12 + 32) & ~v12);
    uint64_t v13 = *(void *)(v3 + 72);
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v35 = v10 + 56;
    while (1)
    {
      uint64_t v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      uint64_t v14 = *(void *)(v10 + 40);
      uint64_t v15 = sub_10430( &qword_287DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Attribute,  (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      uint64_t v17 = ~(-1LL << *(_BYTE *)(v10 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v35 + 8 * v19);
      uint64_t v21 = 1LL << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(void *)(v10 + 48) + v18 * v13, v2);
          uint64_t v22 = sub_10430( &qword_287DD8,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Attribute,  (uint64_t)&protocol conformance descriptor for CommonAudio.Attribute);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          uint64_t v24 = v3;
          uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            uint64_t v3 = v24;
            uint64_t v9 = v31;
            goto LABEL_4;
          }

          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v35 + 8 * (v18 >> 6));
          uint64_t v21 = 1LL << v18;
          uint64_t v3 = v24;
        }

        while ((v20 & (1LL << v18)) != 0);
        uint64_t v9 = v31;
      }

      *(void *)(v35 + 8 * v19) = v21 | v20;
      id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))( *(void *)(v10 + 48) + v18 * v13,  v8,  v2);
      uint64_t v27 = *(void *)(v10 + 16);
      BOOL v28 = __OFADD__(v27, 1LL);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v10 + swift_weakDestroy(v0 + 16) = v29;
LABEL_4:
      uint64_t v11 = v33 + 1;
      if (v33 + 1 == v9) {
        return (void *)v10;
      }
    }

    __break(1u);
  }

  else
  {
    return &_swiftEmptySetSingleton;
  }

  return result;
}

uint64_t sub_147B70()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_147B94()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_147BA4()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_147BB4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

Class sub_147BD8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1641C(0LL, &qword_284DD8, &OBJC_CLASS___INMediaSearch_ptr);
  id v8 = (id)INMediaSearch.init(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( 0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
  id v9 = [a2 identifier];
  uint64_t v63 = v7;
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    uint64_t v13 = v12;
  }

  else
  {
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
  }

  uint64_t v14 = (void *)INMediaSearch.with(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( 0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  0LL,  0LL,  v11,  v13);

  swift_bridgeObjectRelease(v13);
  id v15 = v14;
  uint64_t v16 = swift_retain(a1);
  uint64_t v17 = (void *)sub_5B3C8(v16, 0LL, 0LL);
  swift_release(a1);
  Class isa = INMediaSearch.with(other:)((INMediaSearch)v17).super.isa;

  Class v66 = isa;
  unint64_t v19 = isa;
  id v20 = -[objc_class artistName](v19, "artistName");
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    unint64_t v24 = v23;

    swift_bridgeObjectRelease(v24);
    uint64_t v25 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000LL) == 0) {
      uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
    }
    if (v25) {
      goto LABEL_11;
    }
  }

  id v26 = [a2 artist];
  if (!v26)
  {
LABEL_11:
  }

  else
  {

    id v27 = [a2 artist];
    if (v27)
    {
      BOOL v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v31 = v30;
    }

    else
    {
      uint64_t v29 = 0LL;
      uint64_t v31 = 0LL;
    }

    uint64_t v32 = (objc_class *)INMediaSearch.with(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( 0LL,  0LL,  0LL,  0LL,  v29,  v31,  0LL,  0LL,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  0LL,  0LL,  0LL,  0LL);

    swift_bridgeObjectRelease(v31);
    Class v66 = v32;
    unint64_t v19 = v32;
  }

  id v33 = -[objc_class mediaName](v19, "mediaName");
  if (!v33) {
    goto LABEL_18;
  }
  uint64_t v34 = v33;
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  unint64_t v37 = v36;

  swift_bridgeObjectRelease(v37);
  uint64_t v38 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000LL) == 0) {
    uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
  }
  if (!v38)
  {
LABEL_18:
    id v39 = [a2 title];
    if (v39)
    {

      uint64_t v40 = v19;
      id v41 = [a2 title];
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        uint64_t v45 = v44;
      }

      else
      {
        uint64_t v43 = 0LL;
        uint64_t v45 = 0LL;
      }

      uint64_t v46 = (objc_class *)INMediaSearch.with(mediaType:sortOrder:mediaName:artistName:albumName:genreNames:moodNames:releaseDate:reference:mediaIdentifier:)( 0LL,  0LL,  0LL,  0LL,  v43,  v45,  0LL,  0LL,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  0LL,  0LL,  0LL,  0LL);

      swift_bridgeObjectRelease(v45);
      Class v66 = v46;
    }
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v47 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v48 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v63, v47, v4);
  uint64_t v49 = v66;
  uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v53 = swift_slowAlloc(32LL, -1LL);
    v65[0] = v53;
    *(_DWORD *)uint64_t v52 = 136315138;
    uint64_t v62 = v4;
    uint64_t v54 = v49;
    id v55 = -[objc_class description](v54, "description");
    uint64_t v61 = v5;
    id v56 = v55;
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    unint64_t v59 = v58;

    uint64_t v64 = sub_6978(v57, v59, v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65);

    swift_bridgeObjectRelease(v59);
    _os_log_impl( &dword_0,  v50,  v51,  "ConverterHelpers#convertDisambiguatedMediaSearch updatedMediaSearch: %s",  v52,  0xCu);
    swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1LL, -1LL);
    swift_slowDealloc(v52, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v48, v4);
  }

  swift_beginAccess(&v66, v65, 0LL, 0LL);
  return v66;
}

uint64_t sub_148170()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  uint64_t v15 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v16 = &protocol witness table for NowPlayingProvider;
  uint64_t v6 = sub_10974(&v14);
  static NowPlayingProvider.shared.getter(v6);
  uint64_t v12 = v0;
  uint64_t v13 = &protocol witness table for FeatureFlagProvider;
  uint64_t v7 = sub_10974(&v11);
  static FeatureFlagProvider.shared.getter(v7);
  uint64_t updated = type metadata accessor for UpdateMediaAffinityFlowStrategy();
  uint64_t v9 = swift_allocObject(updated, 96LL, 7LL);
  sub_FF54(&v14, v9 + 16);
  uint64_t result = sub_FF54(&v11, v9 + 56);
  qword_296AA8 = v9;
  return result;
}

uint64_t sub_148264()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  uint64_t result = sub_6638C();
  qword_296AB0 = result;
  return result;
}

uint64_t sub_1482E8()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  FeatureFlagProvider.isModernConcurrencyEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  type metadata accessor for INUpdateMediaAffinityIntentHandler(0LL);
  uint64_t result = INUpdateMediaAffinityIntentHandler.__allocating_init()();
  static UpdateMediaAffinity.intentHandler = result;
  return result;
}

uint64_t *UpdateMediaAffinity.intentHandler.unsafeMutableAddressor()
{
  if (qword_2838E8 != -1) {
    swift_once(&qword_2838E8, sub_1482E8);
  }
  return &static UpdateMediaAffinity.intentHandler;
}

id static UpdateMediaAffinity.intentHandler.getter()
{
  if (qword_2838E8 != -1) {
    swift_once(&qword_2838E8, sub_1482E8);
  }
  swift_beginAccess(&static UpdateMediaAffinity.intentHandler, v1, 0LL, 0LL);
  return (id)static UpdateMediaAffinity.intentHandler;
}

void static UpdateMediaAffinity.intentHandler.setter(uint64_t a1)
{
  if (qword_2838E8 != -1) {
    swift_once(&qword_2838E8, sub_1482E8);
  }
  swift_beginAccess(&static UpdateMediaAffinity.intentHandler, v3, 1LL, 0LL);
  uint64_t v2 = (void *)static UpdateMediaAffinity.intentHandler;
  static UpdateMediaAffinity.intentHandler = a1;
}

uint64_t (*static UpdateMediaAffinity.intentHandler.modify(uint64_t a1))(void)
{
  if (qword_2838E8 != -1) {
    swift_once(&qword_2838E8, sub_1482E8);
  }
  swift_beginAccess(&static UpdateMediaAffinity.intentHandler, a1, 33LL, 0LL);
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for UpdateMediaAffinity()
{
  return &type metadata for UpdateMediaAffinity;
}

uint64_t sub_148514()
{
  return v0;
}

void *sub_148570(uint64_t a1, void *a2)
{
  uint64_t v57 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v4 = __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  id v8 = (char *)&v55 - v7;
  uint64_t v9 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v58 = v18;
  uint64_t v19 = type metadata accessor for AddMediaCatDialogService();
  uint64_t v20 = swift_allocObject(v19, 56LL, 7LL);
  *(_BYTE *)(v20 + 55) = -18;
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = 0xD000000000000011LL;
  *(void *)(v20 + 24) = 0x800000000021D860LL;
  *(void *)(v20 + 32) = a1;
  strcpy((char *)(v20 + 40), "AddMediaIntent");
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  sub_157C4((uint64_t)a2, (uint64_t)&v65);
  uint64_t v21 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v18, 1LL, 1LL, v21);
  unint64_t v56 = sub_7F548(&_swiftEmptyArrayStorage);
  swift_retain_n(a1, 2LL);
  uint64_t v22 = swift_retain(v20);
  id v55 = v15;
  uint64_t v23 = static FeatureFlagProvider.shared.getter(v22);
  static StringsFileResolver.shared.getter(v23);
  uint64_t v24 = type metadata accessor for AddMediaDialogProvider(0LL);
  uint64_t v25 = swift_allocObject(v24, 168LL, 7LL);
  uint64_t v26 = v10;
  id v27 = v15;
  uint64_t v28 = v9;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v60(v13, v27, v9);
  uint64_t v29 = v59;
  uint64_t v30 = v6;
  uint64_t v31 = v6;
  uint64_t v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v31, v8, v57);
  id v33 = v58;
  unint64_t v58 = v13;
  uint64_t v34 = sub_EE3F0(v20, v63, v56, &v65, v33, v13, v30, v25);
  swift_release(v20);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  unint64_t v36 = v55;
  v35(v8, v32);
  uint64_t v59 = *(void *)(v26 + 8);
  ((void (*)(char *, uint64_t))v59)(v36, v28);
  uint64_t v66 = v32;
  uint64_t v67 = &protocol witness table for StringsFileResolver;
  sub_10974(&v65);
  uint64_t v37 = swift_retain(v34);
  static StringsFileResolver.shared.getter(v37);
  uint64_t v38 = sub_6C5C(&qword_28AC30);
  uint64_t v39 = swift_allocObject(v38, 64LL, 7LL);
  sub_FF54(&v65, v39 + 16);
  *(void *)(v39 + 56) = v34;
  uint64_t v66 = v28;
  uint64_t v67 = &protocol witness table for FeatureFlagProvider;
  sub_10974(&v65);
  uint64_t v40 = swift_retain(v34);
  static FeatureFlagProvider.shared.getter(v40);
  uint64_t v41 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v42 = swift_allocObject(v41, 56LL, 7LL);
  sub_FF54(&v65, v42 + 16);
  uint64_t v57 = v28;
  uint64_t v66 = v28;
  uint64_t v67 = &protocol witness table for FeatureFlagProvider;
  uint64_t v43 = sub_10974(&v65);
  static FeatureFlagProvider.shared.getter(v43);
  uint64_t v44 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v45 = static SiriKitTaskLoggingProvider.shared.getter(v44);
  v64[3] = v44;
  v64[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v64[0] = v45;
  uint64_t v46 = type metadata accessor for AppleMediaServicesProvider(0LL);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  uint64_t v47 = AppleMediaServicesProvider.init(featureFlagProvider:siriKitTaskLoggingProvider:)(&v65, v64);
  uint64_t v48 = static FeatureFlagProvider.shared.getter(v47);
  uint64_t v49 = static SiriKitTaskLoggingProvider.shared.getter(v48);
  if (qword_2838C0 != -1) {
    swift_once(&qword_2838C0, sub_F5CB0);
  }
  uint64_t v50 = qword_296A80;
  swift_retain(qword_296A80);
  static AceService.current.getter(&v65);
  uint64_t v52 = v57;
  uint64_t v51 = (uint64_t)v58;
  v60(v58, v36, v57);
  swift_retain(v47);
  uint64_t v53 = sub_C06D8(v34, v47, v51, v49, v50, &v65, v42, v39, v61);
  ((void (*)(char *, uint64_t))v59)(v36, v52);
  swift_release(v20);
  swift_release(v34);
  swift_release(v63);
  swift_release(v47);
  sub_6C3C(v62);
  return v53;
}

uint64_t sub_148A18()
{
  uint64_t v0 = sub_148514();
  return swift_deallocClassInstance(v0, 216LL, 7LL);
}

uint64_t _s25NeedsConfirmationStrategyCMa_1(uint64_t a1)
{
  uint64_t result = qword_28AB08;
  if (!qword_28AB08) {
    return swift_getSingletonMetadata(a1, &_s25NeedsConfirmationStrategyCMn_1);
  }
  return result;
}

uint64_t sub_148A70( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v100 = a8;
  uint64_t v101 = a7;
  uint64_t v82 = a6;
  uint64_t v96 = a5;
  uint64_t v89 = a4;
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v99 = a1;
  uint64_t v81 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v81);
  uint64_t v83 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v97);
  uint64_t v98 = (uint64_t *)((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v93 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v91 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v84 = *(void *)(v16 - 8);
  uint64_t v85 = v16;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v79 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v80 = (char *)&v79 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v79 - v29;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v23, (uint64_t)qword_2969C8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v90 = v31;
  uint64_t v33 = v23;
  uint64_t v92 = v32;
  uint64_t v34 = ((uint64_t (*)(char *))v32)(v30);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl(&dword_0, v35, v36, "FlowResponseUtils#submitGenericError Handling dialog Result...", v37, 2u);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  uint64_t v38 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v88 = v33;
  uint64_t v95 = v38;
  v38(v30, v33);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.ModuleName.fru(_:),  v19);
  uint64_t v40 = v84;
  uint64_t v39 = v85;
  (*(void (**)(char *, void, uint64_t))(v84 + 104))( v18,  enum case for AdditionalMetricsDescription.SourceFunction.errDlg(_:),  v85);
  uint64_t v87 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v22,  v18,  v86,  v87,  0LL,  1LL);
  uint64_t v42 = v41;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v39);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v44 = v89[3];
  uint64_t v43 = v89[4];
  uint64_t v89 = sub_6EA8(v89, v44);
  uint64_t v45 = enum case for ActivityType.failed(_:);
  uint64_t v46 = type metadata accessor for ActivityType(0LL);
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v91, v45, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0LL, 1LL, v46);
  uint64_t v49 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v86 = *(void *)(v49 - 8);
  uint64_t v50 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v93, 1LL, 1LL, v49);
  uint64_t v51 = enum case for SiriKitReliabilityCodes.genericError(_:);
  uint64_t v52 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v94, v51, v52);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v54, 0LL, 1LL, v52);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v96,  0LL,  v48,  v50,  v54,  v87,  v42,  0LL,  1,  v44,  v43);
  swift_bridgeObjectRelease(v42);
  sub_1F6CC(v54, &qword_2845A0);
  sub_1F6CC(v50, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v48, &qword_2845A8);
  id v55 = v98;
  sub_3B040(v99, (uint64_t)v98);
  if (swift_getEnumCaseMultiPayload(v55, v97) == 1)
  {
    uint64_t v56 = *v55;
    uint64_t v57 = v79;
    uint64_t v58 = v88;
    uint64_t v59 = v92(v79, v90, v88);
    uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
    os_log_type_t v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_0, v60, v61, "FlowResponseUtils#submitGenericError Could not properly create dialog", v62, 2u);
      swift_slowDealloc(v62, -1LL, -1LL);
    }

    v95(v57, v58);
    swift_errorRetain(v56);
    v101(v56);
    swift_errorRelease(v56);
    return swift_errorRelease(v56);
  }

  else
  {
    uint64_t v64 = *(int *)(v81 + 48);
    uint64_t v65 = (uint64_t)v83;
    uint64_t v66 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v86 + 32))(v83, v55, v49);
    *(void *)(v65 + v64) = *(uint64_t *)((char *)v55 + v64);
    char v67 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v66);
    uint64_t v68 = type metadata accessor for ViewFactory(0LL);
    swift_allocObject(v68, *(unsigned int *)(v68 + 48), *(unsigned __int16 *)(v68 + 52));
    uint64_t v69 = ViewFactory.init(ttsEnabled:)(v67 & 1);
    uint64_t v70 = (void *)dispatch thunk of ViewFactory.makeCompletionView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v65,  _swiftEmptyArrayStorage,  0LL,  1LL);
    uint64_t v71 = v82[3];
    uint64_t v72 = v82[4];
    sub_6EA8(v82, v71);
    dispatch thunk of AceServiceInvoker.submitAndForget(_:)(v70, v71, v72);
    uint64_t v73 = v80;
    uint64_t v74 = v88;
    uint64_t v75 = v92(v80, v90, v88);
    uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
    os_log_type_t v77 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_0, v76, v77, "FlowResponseUtils#submitGenericError Dialog successfully generated", v78, 2u);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    v95(v73, v74);
    v101(0LL);

    swift_release(v69);
    return sub_1F6CC(v65, &qword_289340);
  }

uint64_t type metadata accessor for FlowResponseUtils()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin17FlowResponseUtils);
}

Swift::Int sub_149204( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v37 = a8;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v18 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000LL) == 0) {
      uint64_t v18 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v18 && (a1 != a4 || a5 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2) & 1) == 0)
    {
      uint64_t v19 = v37 + 16;
      uint64_t v20 = qword_283888;
      swift_bridgeObjectRetain(a2);
      if (v20 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v21 = sub_6960(v14, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
      swift_bridgeObjectRetain_n(a2, 2LL);
      uint64_t v22 = swift_bridgeObjectRetain_n(a7, 2LL);
      uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.debug.getter();
      int v36 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc(22LL, -1LL);
        os_log_t v33 = v23;
        uint64_t v26 = v25;
        uint64_t v34 = swift_slowAlloc(64LL, -1LL);
        v39[0] = v34;
        *(_DWORD *)uint64_t v26 = 136315394;
        uint64_t v32 = v26 + 4;
        swift_bridgeObjectRetain(a2);
        uint64_t v38 = sub_6978(a1, a2, v39);
        uint64_t v35 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39);
        swift_bridgeObjectRelease_n(a2, 3LL);
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v32 = v26 + 14;
        swift_bridgeObjectRetain(a7);
        uint64_t v38 = sub_6978(a6, a7, v39);
        uint64_t v19 = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39);
        swift_bridgeObjectRelease_n(a7, 3LL);
        os_log_t v27 = v33;
        _os_log_impl( &dword_0,  v33,  (os_log_type_t)v36,  "DisplayApp#init found override display name: %s for bundle: %s",  (uint8_t *)v26,  0x16u);
        uint64_t v28 = v34;
        swift_arrayDestroy(v34, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v28, -1LL, -1LL);
        swift_slowDealloc(v26, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a7, 2LL);
        swift_bridgeObjectRelease_n(a2, 2LL);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      swift_beginAccess(v19, v39, 1LL, 0LL);
      uint64_t v29 = v37;
      uint64_t v30 = *(void *)(v37 + 24);
      *(void *)(v37 + swift_weakDestroy(v0 + 16) = a1;
      *(void *)(v29 + 24) = a2;
      swift_bridgeObjectRelease(v30);
    }
  }

  return OS_dispatch_semaphore.signal()();
}

BOOL sub_14950C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  v7[2] = *(void *)(a1 + 16);
  v7[3] = v2;
  v7[0] = v3;
  v7[1] = v4;
  unint64_t v5 = sub_6D68();
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( v7,  &type metadata for String,  &type metadata for String,  v5,  v5) == -1;
}

BOOL sub_149568(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  v7[2] = *(void *)(a2 + 16);
  v7[3] = v4;
  v7[0] = v2;
  v7[1] = v3;
  unint64_t v5 = sub_6D68();
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( v7,  &type metadata for String,  &type metadata for String,  v5,  v5) != -1;
}

BOOL sub_1495C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  v7[2] = *(void *)(a1 + 16);
  v7[3] = v2;
  v7[0] = v3;
  v7[1] = v4;
  unint64_t v5 = sub_6D68();
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( v7,  &type metadata for String,  &type metadata for String,  v5,  v5) != -1;
}

BOOL sub_149620(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  v7[2] = *(void *)(a2 + 16);
  v7[3] = v4;
  v7[0] = v2;
  v7[1] = v3;
  unint64_t v5 = sub_6D68();
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)( v7,  &type metadata for String,  &type metadata for String,  v5,  v5) == -1;
}

uint64_t sub_14967C(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  __int128 v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  __int128 v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_14B674((uint64_t *)v7, v9) & 1;
}

uint64_t sub_1496D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstalledApp(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v18 = 1;
    }

    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v23 = *(void *)(v8 + 72);
      uint64_t v24 = v8;
      uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v14 = v11 - 1;
      do
      {
        uint64_t v15 = a1;
        v13(v10, a1 + v12, v4);
        uint64_t v16 = a2;
        v13(v7, a2 + v12, v4);
        unint64_t v17 = sub_14B7AC();
        char v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
        uint64_t v19 = *(void (**)(char *, uint64_t))(v24 + 8);
        v19(v7, v4);
        v19(v10, v4);
        BOOL v21 = v14-- != 0;
        if ((v18 & 1) == 0) {
          break;
        }
        v12 += v23;
        a2 = v16;
        a1 = v15;
      }

      while (v21);
    }
  }

  else
  {
    char v18 = 0;
  }

  return v18 & 1;
}

void sub_149840( _OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v230 = a5;
  unint64_t v252 = a3;
  uint64_t v245 = a2;
  v246 = a6;
  uint64_t v237 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v235 = *(void *)(v237 - 8);
  __chkstk_darwin(v237);
  id v234 = (uint8_t **)((char *)&v218 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v236 = type metadata accessor for DispatchTime(0LL);
  uint64_t v233 = *(void *)(v236 - 8);
  uint64_t v9 = __chkstk_darwin(v236);
  uint64_t v231 = (char *)&v218 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v232 = (char *)&v218 - v11;
  uint64_t v243 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for InstalledApp(0LL);
  uint64_t v242 = *((void *)v243 - 1);
  uint64_t v12 = __chkstk_darwin(v243);
  uint64_t v14 = (char *)&v218 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v227 = (uint64_t)&v218 - v16;
  __chkstk_darwin(v15);
  uint64_t v229 = (char *)&v218 - v17;
  uint64_t v249 = type metadata accessor for Logger(0LL);
  v251 = *(void (***)(char *, uint64_t, uint64_t))(v249 - 8);
  uint64_t v18 = __chkstk_darwin(v249);
  uint64_t v20 = (char *)&v218 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v238 = (char *)&v218 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v240 = (char *)&v218 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v239 = (char *)&v218 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v241 = (dispatch_semaphore_s *)((char *)&v218 - v28);
  uint64_t v29 = __chkstk_darwin(v27);
  char v226 = (char *)&v218 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  os_log_t v33 = (char *)&v218 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v228 = (char *)&v218 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v218 - v36;
  uint64_t v38 = type metadata accessor for Locale(0LL);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v218 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v218 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v244 = v45;
  uint64_t v46 = *(uint64_t (**)(void))(v45 + 32);
  uint64_t v247 = v44;
  uint64_t v248 = a4;
  uint64_t v47 = v46();
  v253 = a1;
  uint64_t v48 = App.appIdentifier.getter(v47);
  if (!v49) {
    goto LABEL_6;
  }
  a1 = v49;
  uint64_t v250 = v48;
  uint64_t v50 = v253;
  uint64_t v51 = static SAAppInfoFactory.createAppInfo(app:)(v253);
  if (!v51)
  {
    swift_bridgeObjectRelease(a1);
LABEL_6:
    uint64_t v60 = v252;
    swift_bridgeObjectRelease(v252);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v61 = v249;
    uint64_t v62 = sub_6960(v249, (uint64_t)qword_2969C8);
    uint64_t v63 = v251;
    v251[2](v20, v62, v61);
    uint64_t v64 = v253;
    uint64_t v65 = swift_retain_n(v253, 2LL);
    id v66 = v20;
    char v67 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v70 = swift_slowAlloc(32LL, -1LL);
      uint64_t v257 = v70;
      *(_DWORD *)uint64_t v69 = 136446210;
      *(void *)&v259[0] = App.appIdentifier.getter(v70);
      *((void *)&v259[0] + 1) = v71;
      uint64_t v72 = sub_6C5C(&qword_284600);
      a1 = v259;
      uint64_t v73 = String.init<A>(describing:)(v259, v72);
      id v66 = (id)v74;
      *(void *)&v259[0] = sub_6978(v73, v74, &v257);
      uint64_t v64 = v253;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v259, (char *)v259 + 8);
      swift_release_n(v64, 2LL);
      swift_bridgeObjectRelease(v66);
      _os_log_impl(&dword_0, v67, v68, "DisplayApp#init could not build display app for bundle: %{public}s", v69, 0xCu);
      swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1LL, -1LL);
      uint64_t v75 = v69;
      uint64_t v60 = v252;
      swift_slowDealloc(v75, -1LL, -1LL);

      swift_release(v64);
      ((void (*)(char *, uint64_t))v251[1])(v20, v61);
    }

    else
    {

      swift_release_n(v64, 3LL);
      ((void (*)(char *, uint64_t))v63[1])(v20, v61);
    }

    int v76 = 0;
    goto LABEL_12;
  }

  uint64_t v52 = (void *)v51;
  swift_retain(v50);
  swift_bridgeObjectRetain(v252);
  uint64_t v224 = (uint64_t)v52;
  id v53 = v52;
  swift_bridgeObjectRetain(a1);
  static SiriAudioEnvironment.siriLocale.getter(v54);
  id v225 = v53;
  uint64_t v55 = (uint64_t)sub_9A3B4((uint64_t)v42);
  unint64_t v57 = v56;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v39 + 8);
  v58(v42, v38);
  if (!v57)
  {
    uint64_t v223 = v58;
    uint64_t v59 = v249;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v87 = sub_6960(v59, (uint64_t)qword_2969C8);
    uint64_t v88 = v251;
    uint64_t v89 = v251[2];
    uint64_t v221 = (uint8_t *)v87;
    uint64_t v222 = v89;
    ((void (*)(char *))v89)(v37);
    uint64_t v90 = swift_bridgeObjectRetain_n(a1, 2LL);
    uint64_t v91 = (os_log_s *)Logger.logObject.getter(v90);
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v220 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v259[0] = v220;
      os_log_t v219 = v91;
      *(_DWORD *)uint64_t v93 = 136315138;
      uint64_t v218 = v93 + 4;
      swift_bridgeObjectRetain(a1);
      uint64_t v257 = sub_6978(v250, (unint64_t)a1, (uint64_t *)v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
      swift_bridgeObjectRelease_n(a1, 3LL);
      os_log_t v94 = v219;
      _os_log_impl( &dword_0,  v219,  v92,  "DisplayApp#init couldn't find localized name for app info: %s, trying app name...",  v93,  0xCu);
      uint64_t v95 = v220;
      swift_arrayDestroy(v220, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1LL, -1LL);
      uint64_t v96 = v93;
      uint64_t v59 = v249;
      swift_slowDealloc(v96, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a1, 2LL);
    }

    uint64_t v97 = (void (**)(char *, uint64_t, uint64_t))v88[1];
    ((void (*)(char *, uint64_t))v97)(v37, v59);
    uint64_t v98 = type metadata accessor for AppInformationResolver(0LL);
    swift_allocObject(v98, *(unsigned int *)(v98 + 48), *(unsigned __int16 *)(v98 + 52));
    uint64_t v99 = swift_retain(v253);
    uint64_t v100 = AppInformationResolver.init(app:)(v99);
    static SiriAudioEnvironment.siriLocale.getter(v100);
    uint64_t v55 = dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)(v42);
    unint64_t v57 = v101;
    swift_release(v100);
    v223(v42, v38);
    if (v57) {
      goto LABEL_21;
    }
    v251 = v97;
    uint64_t v60 = v252;
    __n128 v192 = swift_bridgeObjectRelease(v252);
    uint64_t v193 = v228;
    ((void (*)(char *, uint8_t *, uint64_t, __n128))v222)(v228, v221, v59, v192);
    swift_bridgeObjectRetain(a1);
    uint64_t v195 = (os_log_s *)Logger.logObject.getter(v194);
    uint64_t v196 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v195, (os_log_type_t)v196))
    {
      uint64_t v197 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v198 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v259[0] = v198;
      *(_DWORD *)uint64_t v197 = 136315138;
      swift_bridgeObjectRetain(a1);
      uint64_t v257 = sub_6978(v250, (unint64_t)a1, (uint64_t *)v259);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v257, v258);
      swift_bridgeObjectRelease_n(a1, 3LL);
      _os_log_impl( &dword_0,  v195,  (os_log_type_t)v196,  "DisplayApp#init couldn't find localized name for app: %s",  v197,  0xCu);
      int v76 = 1;
      swift_arrayDestroy(v198, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v199 = v198;
      uint64_t v60 = v252;
      swift_slowDealloc(v199, -1LL, -1LL);
      swift_slowDealloc(v197, -1LL, -1LL);
      id v66 = v225;

      uint64_t v64 = v253;
      swift_release(v253);
      ((void (*)(char *, uint64_t))v251)(v193, v59);
    }

    else
    {

      id v66 = v225;
      uint64_t v64 = v253;
      swift_release(v253);
      swift_bridgeObjectRelease_n(a1, 2LL);
      ((void (*)(char *, uint64_t))v251)(v193, v59);
      int v76 = 1;
    }

uint64_t sub_14B2AC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_14B2D0()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_14B30C(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_2860C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t destroy for DisplayApp(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 64));
}

void *initializeWithCopy for DisplayApp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[6];
  uint64_t v7 = (void *)a2[7];
  a1[6] = v6;
  a1[7] = v7;
  uint64_t v8 = a2[8];
  a1[8] = v8;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  id v9 = v7;
  swift_bridgeObjectRetain(v8);
  return a1;
}

void *assignWithCopy for DisplayApp(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a2[6];
  uint64_t v11 = a1[6];
  a1[6] = v10;
  swift_retain(v10);
  swift_release(v11);
  uint64_t v12 = (void *)a2[7];
  uint64_t v13 = (void *)a1[7];
  a1[7] = v12;
  id v14 = v12;

  uint64_t v15 = a2[8];
  uint64_t v16 = a1[8];
  a1[8] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

__n128 initializeWithTake for DisplayApp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + swift_weakDestroy(v0 + 16) = result;
  return result;
}

uint64_t assignWithTake for DisplayApp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease(*(void *)(a1 + 40));
  uint64_t v8 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = *(_OWORD *)(a2 + 40);
  swift_release(v8);

  uint64_t v9 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayApp(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayApp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for DisplayApp()
{
  return &type metadata for DisplayApp;
}

unint64_t sub_14B630()
{
  unint64_t result = qword_28ACD0;
  if (!qword_28ACD0)
  {
    unint64_t result = swift_getWitnessTable(&unk_218CD4, &type metadata for DisplayApp);
    atomic_store(result, (unint64_t *)&qword_28ACD0);
  }

  return result;
}

uint64_t sub_14B674(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  BOOL v6 = v4 == *a2 && v5 == a2[1];
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5) & 1) == 0) {
    return 0LL;
  }
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  BOOL v9 = v7 == a2[2] && v8 == a2[3];
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v8) & 1) == 0) {
    return 0LL;
  }
  uint64_t v10 = a1[5];
  uint64_t v11 = a2[5];
  if (v10)
  {
    if (!v11) {
      return 0LL;
    }
    uint64_t v12 = a1[4];
    if ((v12 != a2[4] || v10 != v11) && (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v10) & 1) == 0) {
      return 0LL;
    }
  }

  else if (v11)
  {
    return 0LL;
  }

  type metadata accessor for App(0LL);
  if ((static App.== infix(_:_:)(a1[6], a2[6]) & 1) != 0)
  {
    sub_14B770();
    if ((static NSObject.== infix(_:_:)(a1[7], a2[7]) & 1) != 0) {
      return sub_1496D4(a1[8], a2[8]);
    }
  }

  return 0LL;
}

unint64_t sub_14B770()
{
  unint64_t result = qword_285488;
  if (!qword_285488)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSObject);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_285488);
  }

  return result;
}

unint64_t sub_14B7AC()
{
  unint64_t result = qword_28ACD8;
  if (!qword_28ACD8)
  {
    uint64_t v1 = type metadata accessor for InstalledApp(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for InstalledApp, v1);
    atomic_store(result, (unint64_t *)&qword_28ACD8);
  }

  return result;
}

uint64_t sub_14B7F4()
{
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t _s21ConfirmIntentStrategyCMa(uint64_t a1)
{
  uint64_t result = qword_28AD08;
  if (!qword_28AD08) {
    return swift_getSingletonMetadata(a1, &_s21ConfirmIntentStrategyCMn);
  }
  return result;
}

uint64_t sub_14B878(uint64_t a1)
{
  return swift_initClassMetadata2(a1, 256LL, 0LL, v2, a1 + 200);
}

uint64_t sub_14B8AC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C((uint64_t *)&unk_286CC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t ShazamListeningModel.serializedData.getter()
{
  return sub_14BA14((uint64_t (*)(void))sub_1344FC, (uint64_t)&type metadata for ShazamListeningModel);
}

uint64_t ShazamSuccessfulMatchModel.serializedData.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JSONEncoder(0LL);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  uint64_t v4 = JSONEncoder.init()(v3);
  uint64_t matched = type metadata accessor for ShazamSuccessfulMatchModel(0LL);
  uint64_t v6 = sub_10430( &qword_28A758,  type metadata accessor for ShazamSuccessfulMatchModel,  (uint64_t)&protocol conformance descriptor for ShazamSuccessfulMatchModel);
  uint64_t v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(v1, matched, v6);
  swift_release(v4);
  return v7;
}

uint64_t type metadata accessor for ShazamSuccessfulMatchModel(uint64_t a1)
{
  uint64_t result = qword_28AEB8;
  if (!qword_28AEB8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShazamSuccessfulMatchModel);
  }
  return result;
}

uint64_t ShazamNoMatchModel.serializedData.getter()
{
  return sub_14BA14((uint64_t (*)(void))sub_134084, (uint64_t)&type metadata for ShazamNoMatchModel);
}

uint64_t sub_14BA14(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSONEncoder(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v5 = JSONEncoder.init()();
  uint64_t v6 = a1();
  uint64_t v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(v6, a2, v6);
  swift_release(v5);
  return v7;
}

uint64_t sub_14BA94()
{
  return 0LL;
}

uint64_t sub_14BAA0()
{
  return 0LL;
}

void sub_14BAAC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_14BAB8(uint64_t a1)
{
  unint64_t v2 = sub_14BB34();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14BAE0(uint64_t a1)
{
  unint64_t v2 = sub_14BB34();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShazamListeningModel.encode(to:)(void *a1)
{
  return sub_14BCD8( a1,  &qword_28AE00,  (uint64_t (*)(void))sub_14BB34,  (uint64_t)&type metadata for ShazamListeningModel.CodingKeys);
}

unint64_t sub_14BB34()
{
  unint64_t result = qword_28AE08;
  if (!qword_28AE08)
  {
    unint64_t result = swift_getWitnessTable(&unk_219134, &type metadata for ShazamListeningModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AE08);
  }

  return result;
}

uint64_t ShazamListeningModel.init(from:)(void *a1)
{
  return sub_6C3C(a1);
}

uint64_t sub_14BB9C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_14BE18( a1,  a2,  a3,  &qword_28AE00,  (uint64_t (*)(void))sub_14BB34,  (uint64_t)&type metadata for ShazamListeningModel.CodingKeys);
}

uint64_t ShazamListeningModel.init(_:)(uint64_t a1, unint64_t a2)
{
  return sub_14BF0C(a1, a2, (uint64_t (*)(void))sub_14BBEC, (uint64_t)&type metadata for ShazamListeningModel);
}

unint64_t sub_14BBEC()
{
  unint64_t result = qword_28AE10;
  if (!qword_28AE10)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ShazamListeningModel,  &type metadata for ShazamListeningModel);
    atomic_store(result, (unint64_t *)&qword_28AE10);
  }

  return result;
}

uint64_t sub_14BC30@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_14BC5C(uint64_t a1)
{
  unint64_t v2 = sub_14BDA8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14BC84(uint64_t a1)
{
  unint64_t v2 = sub_14BDA8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShazamNoMatchModel.encode(to:)(void *a1)
{
  return sub_14BCD8( a1,  &qword_28AE18,  (uint64_t (*)(void))sub_14BDA8,  (uint64_t)&type metadata for ShazamNoMatchModel.CodingKeys);
}

uint64_t sub_14BCD8(void *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7 = sub_6C5C(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_6EA8(a1, v11);
  uint64_t v13 = a3();
  dispatch thunk of Encoder.container<A>(keyedBy:)(a4, a4, v13, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_14BDA8()
{
  unint64_t result = qword_28AE20;
  if (!qword_28AE20)
  {
    unint64_t result = swift_getWitnessTable(&unk_2190E4, &type metadata for ShazamNoMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AE20);
  }

  return result;
}

uint64_t sub_14BDEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_14BE18( a1,  a2,  a3,  &qword_28AE18,  (uint64_t (*)(void))sub_14BDA8,  (uint64_t)&type metadata for ShazamNoMatchModel.CodingKeys);
}

uint64_t sub_14BE18(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v9 = sub_6C5C(a4);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_6EA8(a1, v13);
  uint64_t v15 = a5();
  dispatch thunk of Encoder.container<A>(keyedBy:)(a6, a6, v15, v13, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t ShazamNoMatchModel.init(_:)(uint64_t a1, unint64_t a2)
{
  return sub_14BF0C(a1, a2, (uint64_t (*)(void))sub_14BFA4, (uint64_t)&type metadata for ShazamNoMatchModel);
}

uint64_t sub_14BF0C(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for JSONDecoder(0LL);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  uint64_t v9 = JSONDecoder.init()();
  uint64_t v10 = a3();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(a4, a1, a2, a4, v10);
  sub_925A4(a1, a2);
  return swift_release(v9);
}

unint64_t sub_14BFA4()
{
  unint64_t result = qword_28AE28;
  if (!qword_28AE28)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ShazamNoMatchModel,  &type metadata for ShazamNoMatchModel);
    atomic_store(result, (unint64_t *)&qword_28AE28);
  }

  return result;
}

uint64_t sub_14BFE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_14C01C + 4 * aE[a1]))( 0x44496D617A616873LL,  0xE800000000000000LL);
}

uint64_t sub_14C01C()
{
  return 0x656C746974LL;
}

uint64_t sub_14C030()
{
  return 0x656C746974627573LL;
}

uint64_t sub_14C044()
{
  return 0x747369747261LL;
}

uint64_t sub_14C058()
{
  return 0x65726E6567LL;
}

uint64_t sub_14C06C()
{
  return 0x73754D656C707061LL;
}

uint64_t sub_14C0A0()
{
  return 0x4C5255626577LL;
}

uint64_t sub_14C0B4()
{
  return 0x556B726F77747261LL;
}

uint64_t sub_14C0D0()
{
  return 0x4C52556F65646976LL;
}

uint64_t sub_14C0E4()
{
  return 0x746963696C707865LL;
}

uint64_t sub_14C108()
{
  return 1668445033LL;
}

unint64_t sub_14C118()
{
  return 0xD000000000000012LL;
}

uint64_t sub_14C134()
{
  return sub_14BFE8(*v0);
}

uint64_t sub_14C13C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_14E438(a1, a2);
  *a3 = result;
  return result;
}

void sub_14C160(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_14C16C(uint64_t a1)
{
  unint64_t v2 = sub_14C50C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14C194(uint64_t a1)
{
  unint64_t v2 = sub_14C50C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShazamSuccessfulMatchModel.encode(to:)(void *a1)
{
  __n128 v3 = v1;
  uint64_t v5 = sub_6C5C(&qword_28AE30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_6EA8(a1, v9);
  unint64_t v11 = sub_14C50C();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for ShazamSuccessfulMatchModel.CodingKeys,  &type metadata for ShazamSuccessfulMatchModel.CodingKeys,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  uint64_t v13 = v3[1];
  char v50 = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, &v50, v5);
  if (!v2)
  {
    uint64_t v14 = v3[2];
    uint64_t v15 = v3[3];
    char v49 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v14, v15, &v49, v5);
    uint64_t v16 = v3[4];
    uint64_t v17 = v3[5];
    char v48 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v48, v5);
    uint64_t v18 = v3[6];
    uint64_t v19 = v3[7];
    char v47 = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v18, v19, &v47, v5);
    uint64_t v20 = v3[8];
    uint64_t v21 = v3[9];
    char v46 = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v20, v21, &v46, v5);
    uint64_t v22 = v3[10];
    uint64_t v23 = v3[11];
    char v45 = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v22, v23, &v45, v5);
    uint64_t matched = (int *)type metadata accessor for ShazamSuccessfulMatchModel(0LL);
    uint64_t v25 = (char *)v3 + matched[10];
    char v44 = 6;
    uint64_t v26 = type metadata accessor for URL(0LL);
    uint64_t v27 = sub_10430( &qword_28AE40,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v25, &v44, v5, v26, v27);
    uint64_t v28 = (char *)v3 + matched[11];
    char v43 = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v28, &v43, v5, v26, v27);
    uint64_t v29 = (char *)v3 + matched[12];
    char v42 = 8;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v29, &v42, v5, v26, v27);
    uint64_t v30 = (char *)v3 + matched[13];
    char v41 = 9;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v41, v5, v26, v27);
    uint64_t v31 = *((unsigned __int8 *)v3 + matched[14]);
    char v40 = 10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v31, &v40, v5);
    uint64_t v32 = (uint64_t *)((char *)v3 + matched[15]);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    char v39 = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v33, v34, &v39, v5);
    uint64_t v35 = *((unsigned __int8 *)v3 + matched[16]);
    char v38 = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v35, &v38, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_14C50C()
{
  unint64_t result = qword_28AE38;
  if (!qword_28AE38)
  {
    unint64_t result = swift_getWitnessTable(&unk_219094, &type metadata for ShazamSuccessfulMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AE38);
  }

  return result;
}

void ShazamSuccessfulMatchModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_6C5C(&qword_284628);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v46 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v50 = sub_6C5C(&qword_28AE48);
  uint64_t v15 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t matched = (int *)type metadata accessor for ShazamSuccessfulMatchModel(0LL);
  __chkstk_darwin(matched);
  uint64_t v54 = (uint64_t *)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v52 = a1;
  sub_6EA8(a1, v20);
  unint64_t v21 = sub_14C50C();
  char v49 = v17;
  uint64_t v22 = v53;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for ShazamSuccessfulMatchModel.CodingKeys,  &type metadata for ShazamSuccessfulMatchModel.CodingKeys,  v21,  v20,  v19);
  if (v22)
  {
    sub_6C3C(v52);
  }

  else
  {
    uint64_t v23 = v14;
    id v53 = v12;
    char v46 = v6;
    char v47 = v9;
    uint64_t v24 = v15;
    char v67 = 0;
    uint64_t v25 = v50;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v67, v50);
    uint64_t v27 = v54;
    *uint64_t v54 = v26;
    v27[1] = v28;
    char v66 = 1;
    v27[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v66, v25);
    v27[3] = v29;
    char v65 = 2;
    v27[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v65, v25);
    v27[5] = v30;
    char v64 = 3;
    v27[6] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v64, v25);
    v27[7] = v31;
    char v63 = 4;
    v27[8] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v25);
    v27[9] = v32;
    char v62 = 5;
    v27[10] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v62, v25);
    v27[11] = v33;
    uint64_t v34 = type metadata accessor for URL(0LL);
    char v61 = 6;
    uint64_t v35 = (uint64_t)v23;
    uint64_t v36 = sub_10430( &qword_28AE50,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v34, &v61, v25, v34, v36);
    sub_2646C(v35, (uint64_t)v27 + matched[10]);
    char v60 = 7;
    uint64_t v37 = (uint64_t)v53;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v34, &v60, v25, v34, v36);
    sub_2646C(v37, (uint64_t)v27 + matched[11]);
    char v59 = 8;
    uint64_t v38 = (uint64_t)v47;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v34, &v59, v25, v34, v36);
    sub_2646C(v38, (uint64_t)v27 + matched[12]);
    char v58 = 9;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v34, &v58, v25, v34, v36);
    sub_2646C((uint64_t)v46, (uint64_t)v54 + matched[13]);
    char v57 = 10;
    char v39 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v57, v50);
    uint64_t v40 = v50;
    *((_BYTE *)v54 + matched[14]) = v39;
    char v56 = 11;
    uint64_t v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v56, v40);
    char v42 = (uint64_t *)((char *)v54 + matched[15]);
    *char v42 = v41;
    v42[1] = v43;
    char v55 = 12;
    char v44 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v55, v50);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v49, v50);
    uint64_t v45 = (uint64_t)v54;
    *((_BYTE *)v54 + matched[16]) = v44;
    sub_14CC70(v45, v48);
    sub_6C3C(v52);
    sub_14CCB4(v45);
  }

uint64_t sub_14CC70(uint64_t a1, uint64_t a2)
{
  uint64_t matched = type metadata accessor for ShazamSuccessfulMatchModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(matched - 8) + 16LL))(a2, a1, matched);
  return a2;
}

uint64_t sub_14CCB4(uint64_t a1)
{
  uint64_t matched = type metadata accessor for ShazamSuccessfulMatchModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(matched - 8) + 8LL))(a1, matched);
  return a1;
}

void sub_14CCF0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_14CD04(void *a1)
{
  return ShazamSuccessfulMatchModel.encode(to:)(a1);
}

uint64_t ShazamSuccessfulMatchModel.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSONDecoder(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v5 = JSONDecoder.init()();
  uint64_t matched = type metadata accessor for ShazamSuccessfulMatchModel(0LL);
  uint64_t v7 = sub_10430( &qword_28AE58,  type metadata accessor for ShazamSuccessfulMatchModel,  (uint64_t)&protocol conformance descriptor for ShazamSuccessfulMatchModel);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(matched, a1, a2, matched, v7);
  sub_925A4(a1, a2);
  return swift_release(v5);
}

ValueMetadata *type metadata accessor for ShazamListeningModel()
{
  return &type metadata for ShazamListeningModel;
}

ValueMetadata *type metadata accessor for ShazamNoMatchModel()
{
  return &type metadata for ShazamNoMatchModel;
}

void *initializeBufferWithCopyOfBuffer for ShazamSuccessfulMatchModel(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v18);
  }

  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[11];
    uint64_t v12 = a3[10];
    __dst = (char *)a1 + v12;
    uint64_t v36 = (char *)a2 + v12;
    a1[10] = a2[10];
    a1[11] = v11;
    uint64_t v13 = type metadata accessor for URL(0LL);
    uint64_t v37 = *(void *)(v13 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v37 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    __n128 v15 = swift_bridgeObjectRetain(v11);
    if (v14(v36, 1LL, v13, v15))
    {
      uint64_t v16 = sub_6C5C(&qword_284628);
      memcpy(__dst, v36, *(void *)(*(void *)(v16 - 8) + 64LL));
      uint64_t v17 = v37;
    }

    else
    {
      uint64_t v17 = v37;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v36, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0LL, 1LL, v13);
    }

    uint64_t v19 = a3[11];
    uint64_t v20 = (char *)v4 + v19;
    unint64_t v21 = (char *)a2 + v19;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v14)((char *)a2 + v19, 1LL, v13))
    {
      uint64_t v22 = sub_6C5C(&qword_284628);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0LL, 1LL, v13);
    }

    uint64_t v23 = a3[12];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v14)((char *)a2 + v23, 1LL, v13))
    {
      uint64_t v26 = sub_6C5C(&qword_284628);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v24, v25, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v24, 0LL, 1LL, v13);
    }

    uint64_t v27 = a3[13];
    uint64_t v28 = (char *)v4 + v27;
    uint64_t v29 = (char *)a2 + v27;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v14)((char *)a2 + v27, 1LL, v13))
    {
      uint64_t v30 = sub_6C5C(&qword_284628);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v28, v29, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v28, 0LL, 1LL, v13);
    }

    uint64_t v31 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    uint64_t v32 = (void *)((char *)v4 + v31);
    uint64_t v33 = (void *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    swift_bridgeObjectRetain(v34);
  }

  return v4;
}

uint64_t destroy for ShazamSuccessfulMatchModel(void *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[10];
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (char *)a1 + a2[11];
  if (!v7(v8, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = (char *)a1 + a2[12];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = (char *)a1 + a2[13];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  return swift_bridgeObjectRelease(*(void *)((char *)a1 + a2[15] + 8));
}

void *initializeWithCopy for ShazamSuccessfulMatchModel(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[11];
  uint64_t v11 = a3[10];
  __dst = (char *)a1 + v11;
  uint64_t v34 = (char *)a2 + v11;
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v12 = type metadata accessor for URL(0LL);
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  __n128 v14 = swift_bridgeObjectRetain(v10);
  if (v13(v34, 1LL, v12, v14))
  {
    uint64_t v15 = sub_6C5C(&qword_284628);
    memcpy(__dst, v34, *(void *)(*(void *)(v15 - 8) + 64LL));
    uint64_t v16 = v35;
  }

  else
  {
    uint64_t v16 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v34, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0LL, 1LL, v12);
  }

  uint64_t v17 = a3[11];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)a2 + v17, 1LL, v12))
  {
    uint64_t v20 = sub_6C5C(&qword_284628);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v19, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0LL, 1LL, v12);
  }

  uint64_t v21 = a3[12];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)a2 + v21, 1LL, v12))
  {
    uint64_t v24 = sub_6C5C(&qword_284628);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v23, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0LL, 1LL, v12);
  }

  uint64_t v25 = a3[13];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)a2 + v25, 1LL, v12))
  {
    uint64_t v28 = sub_6C5C(&qword_284628);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v26, v27, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v26, 0LL, 1LL, v12);
  }

  uint64_t v29 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  swift_bridgeObjectRetain(v32);
  return a1;
}

char *assignWithCopy for ShazamSuccessfulMatchModel(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((void *)a1 + 1);
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((void *)a1 + 2) = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((void *)a1 + 3);
  *((void *)a1 + sub_6C3C(v0 + 3) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((void *)a1 + 4) = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = *((void *)a1 + 5);
  *((void *)a1 + 5) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *((void *)a1 + 6) = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = *((void *)a1 + 7);
  *((void *)a1 + 7) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *((void *)a1 + sub_6C3C(v0 + 8) = a2[8];
  uint64_t v14 = a2[9];
  uint64_t v15 = *((void *)a1 + 9);
  *((void *)a1 + 9) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *((void *)a1 + sub_6C3C(v0 + 10) = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = *((void *)a1 + 11);
  *((void *)a1 + 11) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for URL(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1LL, v21);
  int v25 = v23(v20, 1LL, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0LL, 1LL, v21);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_6:
    uint64_t v26 = sub_6C5C(&qword_284628);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_7:
  uint64_t v27 = a3[11];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (char *)a2 + v27;
  int v30 = v23(&a1[v27], 1LL, v21);
  int v31 = v23(v29, 1LL, v21);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v28, v29, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v28, 0LL, 1LL, v21);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
LABEL_12:
    uint64_t v32 = sub_6C5C(&qword_284628);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v28, v29, v21);
LABEL_13:
  uint64_t v33 = a3[12];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  int v36 = v23(&a1[v33], 1LL, v21);
  int v37 = v23(v35, 1LL, v21);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v34, v35, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v34, 0LL, 1LL, v21);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v34, v21);
LABEL_18:
    uint64_t v38 = sub_6C5C(&qword_284628);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v34, v35, v21);
LABEL_19:
  uint64_t v39 = a3[13];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = (char *)a2 + v39;
  int v42 = v23(&a1[v39], 1LL, v21);
  int v43 = v23(v41, 1LL, v21);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v40, v41, v21);
      goto LABEL_25;
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v40, v21);
    goto LABEL_24;
  }

  if (v43)
  {
LABEL_24:
    uint64_t v44 = sub_6C5C(&qword_284628);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v40, v41, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v40, 0LL, 1LL, v21);
LABEL_25:
  a1[a3[14]] = *((_BYTE *)a2 + a3[14]);
  uint64_t v45 = a3[15];
  char v46 = &a1[v45];
  char v47 = (void *)((char *)a2 + v45);
  *(void *)char v46 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v49 = *((void *)v46 + 1);
  *((void *)v46 + 1) = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  a1[a3[16]] = *((_BYTE *)a2 + a3[16]);
  return a1;
}

_OWORD *initializeWithTake for ShazamSuccessfulMatchModel(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  __int128 v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  __int128 v8 = *((_OWORD *)a2 + 5);
  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for URL(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1LL, v12))
  {
    uint64_t v15 = sub_6C5C(&qword_284628);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
  }

  uint64_t v16 = a3[11];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  if (v14(&a2[v16], 1LL, v12))
  {
    uint64_t v19 = sub_6C5C(&qword_284628);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0LL, 1LL, v12);
  }

  uint64_t v20 = a3[12];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = &a2[v20];
  if (v14(&a2[v20], 1LL, v12))
  {
    uint64_t v23 = sub_6C5C(&qword_284628);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v22, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0LL, 1LL, v12);
  }

  uint64_t v24 = a3[13];
  int v25 = (char *)a1 + v24;
  uint64_t v26 = &a2[v24];
  if (v14(&a2[v24], 1LL, v12))
  {
    uint64_t v27 = sub_6C5C(&qword_284628);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v26, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0LL, 1LL, v12);
  }

  uint64_t v28 = a3[15];
  *((_BYTE *)a1 + a3[14]) = a2[a3[14]];
  *(_OWORD *)((char *)a1 + v2sub_6C3C(v0 + 8) = *(_OWORD *)&a2[v28];
  *((_BYTE *)a1 + a3[16]) = a2[a3[16]];
  return a1;
}

char *assignWithTake for ShazamSuccessfulMatchModel(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = *((void *)a1 + 1);
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = *((void *)a1 + 3);
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + sub_6C3C(v0 + 3) = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a2[5];
  uint64_t v11 = *((void *)a1 + 5);
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v10;
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = a2[7];
  uint64_t v13 = *((void *)a1 + 7);
  *((void *)a1 + 6) = a2[6];
  *((void *)a1 + 7) = v12;
  swift_bridgeObjectRelease(v13);
  uint64_t v14 = a2[9];
  uint64_t v15 = *((void *)a1 + 9);
  *((void *)a1 + sub_6C3C(v0 + 8) = a2[8];
  *((void *)a1 + 9) = v14;
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = a2[11];
  uint64_t v17 = *((void *)a1 + 11);
  *((void *)a1 + sub_6C3C(v0 + 10) = a2[10];
  *((void *)a1 + 11) = v16;
  swift_bridgeObjectRelease(v17);
  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for URL(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1LL, v21);
  int v25 = v23(v20, 1LL, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0LL, 1LL, v21);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_6:
    uint64_t v26 = sub_6C5C(&qword_284628);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_7:
  uint64_t v27 = a3[11];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (char *)a2 + v27;
  int v30 = v23(&a1[v27], 1LL, v21);
  int v31 = v23(v29, 1LL, v21);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v29, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v28, 0LL, 1LL, v21);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
LABEL_12:
    uint64_t v32 = sub_6C5C(&qword_284628);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v28, v29, v21);
LABEL_13:
  uint64_t v33 = a3[12];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  int v36 = v23(&a1[v33], 1LL, v21);
  int v37 = v23(v35, 1LL, v21);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v34, v35, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v34, 0LL, 1LL, v21);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v34, v21);
LABEL_18:
    uint64_t v38 = sub_6C5C(&qword_284628);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v34, v35, v21);
LABEL_19:
  uint64_t v39 = a3[13];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = (char *)a2 + v39;
  int v42 = v23(&a1[v39], 1LL, v21);
  int v43 = v23(v41, 1LL, v21);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v40, v41, v21);
      goto LABEL_25;
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v40, v21);
    goto LABEL_24;
  }

  if (v43)
  {
LABEL_24:
    uint64_t v44 = sub_6C5C(&qword_284628);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v40, v41, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v40, 0LL, 1LL, v21);
LABEL_25:
  uint64_t v45 = a3[15];
  a1[a3[14]] = *((_BYTE *)a2 + a3[14]);
  char v46 = &a1[v45];
  char v47 = (void *)((char *)a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v50 = *((void *)v46 + 1);
  *(void *)char v46 = v49;
  *((void *)v46 + 1) = v48;
  swift_bridgeObjectRelease(v50);
  a1[a3[16]] = *((_BYTE *)a2 + a3[16]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamSuccessfulMatchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_14DF24);
}

uint64_t sub_14DF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = sub_6C5C(&qword_284628);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))( a1 + *(int *)(a3 + 40),  a2,  v9);
  }

uint64_t storeEnumTagSinglePayload for ShazamSuccessfulMatchModel( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_14DFBC);
}

uint64_t sub_14DFBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + sub_6C3C(v0 + 8) = a2;
  }

  else
  {
    uint64_t v7 = sub_6C5C(&qword_284628);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 40),  a2,  a2,  v7);
  }

  return result;
}

void sub_14E034(uint64_t a1)
{
  v4[0] = &unk_218F00;
  v4[1] = &unk_218F00;
  uint64_t v4[2] = &unk_218F00;
  v4[3] = &unk_218F00;
  v4[4] = &unk_218F00;
  v4[5] = &unk_218F00;
  sub_73148(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = v5;
    uint64_t v7 = v5;
    uint64_t v8 = v5;
    uint64_t v9 = &unk_218F18;
    uint64_t v10 = &unk_218F00;
    uint64_t v11 = &unk_218F18;
    swift_initStructMetadata(a1, 256LL, 13LL, v4, a1 + 16);
  }

uint64_t getEnumTagSinglePayload for ShazamSuccessfulMatchModel.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }

uint64_t storeEnumTagSinglePayload for ShazamSuccessfulMatchModel.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF3) {
    return ((uint64_t (*)(void))((char *)&loc_14E1A0 + 4 * byte_218D82[v4]))();
  }
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_14E1D4 + 4 * byte_218D7D[v4]))();
}

uint64_t sub_14E1D4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_14E1DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x14E1E4LL);
  }
  return result;
}

uint64_t sub_14E1F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x14E1F8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 12;
  return result;
}

uint64_t sub_14E1FC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_14E204(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShazamSuccessfulMatchModel.CodingKeys()
{
  return &type metadata for ShazamSuccessfulMatchModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamNoMatchModel.CodingKeys()
{
  return &type metadata for ShazamNoMatchModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamListeningModel.CodingKeys()
{
  return &type metadata for ShazamListeningModel.CodingKeys;
}

unint64_t sub_14E244()
{
  unint64_t result = qword_28AF20;
  if (!qword_28AF20)
  {
    unint64_t result = swift_getWitnessTable(&unk_21906C, &type metadata for ShazamSuccessfulMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF20);
  }

  return result;
}

unint64_t sub_14E28C()
{
  unint64_t result = qword_28AF28;
  if (!qword_28AF28)
  {
    unint64_t result = swift_getWitnessTable(&unk_218FDC, &type metadata for ShazamSuccessfulMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF28);
  }

  return result;
}

unint64_t sub_14E2D4()
{
  unint64_t result = qword_28AF30;
  if (!qword_28AF30)
  {
    unint64_t result = swift_getWitnessTable(&unk_219004, &type metadata for ShazamSuccessfulMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF30);
  }

  return result;
}

unint64_t sub_14E31C()
{
  unint64_t result = qword_28AF38;
  if (!qword_28AF38)
  {
    unint64_t result = swift_getWitnessTable(&unk_218F8C, &type metadata for ShazamNoMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF38);
  }

  return result;
}

unint64_t sub_14E364()
{
  unint64_t result = qword_28AF40;
  if (!qword_28AF40)
  {
    unint64_t result = swift_getWitnessTable(&unk_218FB4, &type metadata for ShazamNoMatchModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF40);
  }

  return result;
}

unint64_t sub_14E3AC()
{
  unint64_t result = qword_28AF48;
  if (!qword_28AF48)
  {
    unint64_t result = swift_getWitnessTable(&unk_218F3C, &type metadata for ShazamListeningModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF48);
  }

  return result;
}

unint64_t sub_14E3F4()
{
  unint64_t result = qword_28AF50;
  if (!qword_28AF50)
  {
    unint64_t result = swift_getWitnessTable(&unk_218F64, &type metadata for ShazamListeningModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_28AF50);
  }

  return result;
}

uint64_t sub_14E438(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x44496D617A616873LL && a2 == 0xE800000000000000LL)
  {
    unint64_t v5 = 0xE800000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x44496D617A616873LL, 0xE800000000000000LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x656C746974LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v7 = 0xE500000000000000LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974LL, 0xE500000000000000LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x656C746974627573LL && a2 == 0xE800000000000000LL)
  {
    unint64_t v8 = 0xE800000000000000LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573LL, 0xE800000000000000LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x747369747261LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v9 = 0xE600000000000000LL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x747369747261LL, 0xE600000000000000LL) & 1) != 0)
  {
    unint64_t v9 = a2;
    goto LABEL_26;
  }

  if (a1 == 0x65726E6567LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v10 = 0xE500000000000000LL;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65726E6567LL, 0xE500000000000000LL) & 1) != 0)
  {
    unint64_t v10 = a2;
    goto LABEL_32;
  }

  if (a1 == 0x73754D656C707061LL && a2 == 0xEC00000044496369LL)
  {
    unint64_t v11 = 0xEC00000044496369LL;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73754D656C707061LL, 0xEC00000044496369LL) & 1) != 0)
  {
    unint64_t v11 = a2;
    goto LABEL_38;
  }

  if (a1 == 0x73754D656C707061LL && a2 == 0xED00004C52556369LL)
  {
    unint64_t v12 = 0xED00004C52556369LL;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73754D656C707061LL, 0xED00004C52556369LL) & 1) != 0)
  {
    unint64_t v12 = a2;
    goto LABEL_44;
  }

  if (a1 == 0x4C5255626577LL && a2 == 0xE600000000000000LL)
  {
    unint64_t v13 = 0xE600000000000000LL;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C5255626577LL, 0xE600000000000000LL) & 1) != 0)
  {
    unint64_t v13 = a2;
    goto LABEL_50;
  }

  if (a1 == 0x556B726F77747261LL && a2 == 0xEA00000000004C52LL)
  {
    unint64_t v14 = 0xEA00000000004C52LL;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x556B726F77747261LL, 0xEA00000000004C52LL) & 1) != 0)
  {
    unint64_t v14 = a2;
    goto LABEL_56;
  }

  if (a1 == 0x4C52556F65646976LL && a2 == 0xE800000000000000LL)
  {
    unint64_t v15 = 0xE800000000000000LL;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4C52556F65646976LL, 0xE800000000000000LL) & 1) != 0)
  {
    unint64_t v15 = a2;
    goto LABEL_62;
  }

  if (a1 == 0x746963696C707865LL && a2 == 0xEF746E65746E6F43LL)
  {
    unint64_t v16 = 0xEF746E65746E6F43LL;
LABEL_68:
    swift_bridgeObjectRelease(v16);
    return 10LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865LL, 0xEF746E65746E6F43LL) & 1) != 0)
  {
    unint64_t v16 = a2;
    goto LABEL_68;
  }

  if (a1 == 1668445033 && a2 == 0xE400000000000000LL)
  {
    unint64_t v17 = 0xE400000000000000LL;
LABEL_74:
    swift_bridgeObjectRelease(v17);
    return 11LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1668445033LL, 0xE400000000000000LL) & 1) != 0)
  {
    unint64_t v17 = a2;
    goto LABEL_74;
  }

  if (a1 == 0xD000000000000012LL && a2 == 0x80000000002214A0LL)
  {
    swift_bridgeObjectRelease(0x80000000002214A0LL);
    return 12LL;
  }

  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012LL, 0x80000000002214A0LL);
    swift_bridgeObjectRelease(a2);
    if ((v18 & 1) != 0) {
      return 12LL;
    }
    else {
      return 13LL;
    }
  }

id sub_14E9A8()
{
  id v0 = [objc_allocWithZone(INPlayMediaIntent) init];
  id v1 = objc_allocWithZone(&OBJC_CLASS___INSpeakerIDInfo);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 initWithSharedUserID:v2 speakerIDConfidence:3];

  id v4 = [objc_allocWithZone(INPrivateMediaIntentData) initWithSpeakerIDInfo:v3 proxiedThirdPartyAppInfo:0 isAppAttributionRequired:0 useDialogMemoryForAttribution:0 isAppCorr ection:0 fallbackUsername:0 wholeHouseAudioMetadata:0 nlConfidenceScore:0 nlConfidenceLevel:0 asrConfidenceScore:0 asrConfi denceLevel:0 resolvedSharedUserID:0];
  id v5 = objc_allocWithZone(&OBJC_CLASS___INPrivatePlayMediaIntentData);
  id v6 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v8 = [v5 initWithAppSelectionEnabled:0 appInferred:0 audioSearchResults:0 privateMediaIntentData:v6 appSelectionSignalsEnabled:0 ap pSelectionSignalsFrequencyDenominator:0 shouldSuppressCommonWholeHouseAudioRoutes:0 immediatelyStartPlayback:0 isAmbi guousPlay:0 isPersonalizedRequest:0 internalSignals:isa entityConfidenceSignalsEnabled:0 entityConfidenceSignalsFrequency DenominatorInternal:0 entityConfidenceSignalsFrequencyDenominatorProd:0 entityConfidenceSignalsMaxItemsToDisambiguate:0];

  [v0 setPrivatePlayMediaIntentData:v8];
  return v0;
}

void *StringsBackedAppNameResolver.shared.unsafeMutableAddressor()
{
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  return &static StringsBackedAppNameResolver.shared;
}

uint64_t sub_14EB48()
{
  uint64_t v5 = type metadata accessor for AppNameResolver(0LL);
  id v6 = &protocol witness table for AppNameResolver;
  sub_10974(&v4);
  static AppNameResolver.shared.getter();
  uint64_t v2 = type metadata accessor for StringsFileResolver(0LL);
  id v3 = &protocol witness table for StringsFileResolver;
  sub_10974(&v1);
  static StringsFileResolver.shared.getter();
  sub_FF54(&v4, (uint64_t)&static StringsBackedAppNameResolver.shared);
  return sub_FF54(&v1, (uint64_t)&unk_296AE8);
}

uint64_t StringsBackedAppNameResolver.init(coreAppNameResolver:stringsFileResolver:)@<X0>( __int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_FF54(a2, a3 + 40);
}

uint64_t static StringsBackedAppNameResolver.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  return sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, a1);
}

uint64_t sub_14EC50()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_14EC74(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

void *assignWithCopy for StringsBackedAppNameResolver(void *a1, void *a2)
{
  return a1;
}

void *sub_14ECD4(void *result, void *a2)
{
  if (result != a2)
  {
    id v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        unint64_t result = (void *)swift_release(v11);
        *id v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          *id v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          *id v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

__n128 initializeWithTake for StringsBackedAppNameResolver(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 4sub_6C3C(v0 + 8) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + swift_weakDestroy(v0 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for StringsBackedAppNameResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_6C3C((void *)(a1 + 40));
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for StringsBackedAppNameResolver(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StringsBackedAppNameResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0LL;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + sub_6C3C(v0 + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for StringsBackedAppNameResolver()
{
  return &type metadata for StringsBackedAppNameResolver;
}

uint64_t sub_14EF60()
{
  if (v0[19]) {
    sub_6C3C(v0 + 16);
  }
  return swift_deallocObject(v0, 168LL, 7LL);
}

uint64_t sub_14EFB4( void *a1, char a2, char *a3, unint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v41 = a6;
  int v42 = a5;
  uint64_t v38 = a3;
  unint64_t v39 = a4;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v40 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Locale(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = a1[8];
  uint64_t v15 = a1[9];
  int v37 = sub_6EA8(a1 + 5, v16);
  if ((a2 & 1) != 0) {
    unint64_t v17 = 0xD000000000000016LL;
  }
  else {
    unint64_t v17 = 0xD000000000000013LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v18 = 0x80000000002214F0LL;
  }
  else {
    unint64_t v18 = 0x800000000021FF10LL;
  }
  uint64_t v19 = type metadata accessor for AudioFlowDelegatePlugin();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v19);
  id v21 = [(id)objc_opt_self(NSBundle) bundleForClass:ObjCClassFromMetadata];
  static SiriAudioEnvironment.siriLocale.getter(v21);
  unint64_t v36 = v17;
  uint64_t v22 = dispatch thunk of StringsFileResolving.value(for:table:bundle:locale:defaultValue:)( v17,  v18,  0x656D614E707041LL,  0xE700000000000000LL,  v21,  v14,  v38,  v39,  v16,  v15);
  unint64_t v24 = v23;
  unint64_t v39 = v18;
  swift_bridgeObjectRelease(v18);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v26 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v10, v25, v8);
  uint64_t v27 = swift_bridgeObjectRetain_n(v24, 2LL);
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc(22LL, -1LL);
    uint64_t v38 = v10;
    uint64_t v31 = v30;
    uint64_t v32 = swift_slowAlloc(64LL, -1LL);
    int v37 = (void *)v8;
    uint64_t v33 = v32;
    v44[0] = v32;
    *(_DWORD *)uint64_t v31 = 136315394;
    unint64_t v34 = v39;
    uint64_t v43 = sub_6978(v36, v39, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain(v24);
    uint64_t v43 = sub_6978(v22, v24, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44);
    swift_bridgeObjectRelease_n(v24, 3LL);
    _os_log_impl( &dword_0,  v28,  v29,  "StringsBackedAppNameResolver: for input: %s found localized: %s",  (uint8_t *)v31,  0x16u);
    swift_arrayDestroy(v33, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);

    (*(void (**)(char *, void *))(v26 + 8))(v38, v37);
  }

  else
  {

    swift_bridgeObjectRelease_n(v24, 2LL);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  }

  v44[0] = v22;
  v44[1] = v24;
  v42(v44);
  return swift_bridgeObjectRelease(v24);
}

uint64_t _s21ConfirmIntentStrategyCMa_0(uint64_t a1)
{
  uint64_t result = qword_28AF80;
  if (!qword_28AF80) {
    return swift_getSingletonMetadata(a1, &_s21ConfirmIntentStrategyCMn_0);
  }
  return result;
}

void sub_14F3A0()
{
  NSString v0 = String._bridgeToObjectiveC()();
  int v1 = MGGetSInt32Answer(v0, 0xFFFFFFFFLL);

  byte_296B10 = v1 == 7;
}

uint64_t sub_14F3F8(uint64_t a1)
{
  return sub_BC830(a1, 0xD00000000000001ELL, 0x80000000002218A0LL, &qword_28B078);
}

uint64_t sub_14F41C(uint64_t a1)
{
  return sub_BC830(a1, 0xD000000000000030LL, 0x8000000000221820LL, &qword_28B080);
}

uint64_t sub_14F440(uint64_t a1)
{
  return sub_BC830(a1, 0xD000000000000030LL, 0x8000000000221860LL, &qword_28B088);
}

uint64_t sub_14F464(uint64_t a1)
{
  return sub_BC830(a1, 0xD00000000000002BLL, 0x80000000002217D0LL, &qword_28B090);
}

uint64_t sub_14F488(uint64_t a1)
{
  return sub_BC830(a1, 0xD00000000000002ALL, 0x8000000000221770LL, &qword_28B098);
}

uint64_t sub_14F4AC()
{
  uint64_t result = static Locks.named(_:)(0xD00000000000001ELL, 0x80000000002218A0LL);
  qword_28B0A0 = result;
  return result;
}

uint64_t sub_14F4E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v2 + 152, v19, 0LL, 0LL);
  sub_FF10(v2 + 152, (uint64_t)&v17, &qword_28B220);
  if (v18) {
    return sub_FF54(&v17, a1);
  }
  sub_1F6CC((uint64_t)&v17, &qword_28B220);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v9 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl( &dword_0,  v11,  v12,  "AudioFlowDelegatePlugin#controlsProvider initializing ControlsFlowProvider...",  v13,  2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v14 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(uint64_t))(v2 + 136))(v14);
  sub_157C4(a1, (uint64_t)&v17);
  swift_beginAccess(v2 + 152, v16, 33LL, 0LL);
  sub_155450((uint64_t)&v17, v2 + 152);
  return swift_endAccess(v16);
}

uint64_t sub_14F6C4@<X0>(void *a1@<X8>)
{
  a1[3] = type metadata accessor for ControlsFlowProvider(0LL);
  a1[4] = &protocol witness table for ControlsFlowProvider;
  uint64_t v2 = sub_10974(a1);
  return ControlsFlowProvider.init()(v2);
}

uint64_t sub_14F704(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v107 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v107 - 8);
  uint64_t v7 = __chkstk_darwin(v107);
  uint64_t v96 = v8;
  uint64_t v97 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v106 = (char *)&v95 - v9;
  uint64_t v102 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v10 = *(void *)(v102 - 8);
  uint64_t v11 = __chkstk_darwin(v102);
  uint64_t v98 = v12;
  uint64_t v99 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v101 = (char *)&v95 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v108 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v104 = (char *)&v95 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v113 = (char *)&v95 - v21;
  __chkstk_darwin(v20);
  unint64_t v23 = (char *)&v95 - v22;
  uint64_t v24 = sub_6C5C(&qword_28A680);
  uint64_t v109 = swift_allocBox(v24);
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v26, 1LL, 1LL, v27);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v14, (uint64_t)qword_2969C8);
  os_log_type_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v110 = v28;
  os_log_type_t v111 = v29;
  ((void (*)(char *))v29)(v23);
  uint64_t v30 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  uint64_t v32 = v15;
  os_log_type_t v33 = static os_log_type_t.default.getter();
  BOOL v34 = os_log_type_enabled(v31, v33);
  uint64_t v103 = v6;
  uint64_t v105 = v5;
  uint64_t v100 = v10;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc(22LL, -1LL);
    uint64_t v112 = a1;
    uint64_t v36 = v35;
    uint64_t v37 = swift_slowAlloc(64LL, -1LL);
    uint64_t v95 = v32;
    uint64_t v38 = v37;
    v115[0] = v37;
    *(_DWORD *)uint64_t v36 = 136446466;
    uint64_t v39 = static Insights.frameKit.getter();
    unint64_t v41 = v40;
    uint64_t v114 = sub_6978(v39, v40, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
    swift_bridgeObjectRelease(v41);
    *(_WORD *)(v36 + 12) = 2080;
    swift_bridgeObjectRetain(a2);
    uint64_t v114 = sub_6978(v112, a2, v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl(&dword_0, v31, v33, "AudioFlowDelegatePlugin#warmup %{public}s for refId: %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy(v38, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    uint64_t v42 = v36;
    a1 = v112;
    swift_slowDealloc(v42, -1LL, -1LL);

    uint64_t v43 = *(void (**)(char *, uint64_t))(v95 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v32 + 8);
  }

  v43(v23, v14);
  uint64_t v44 = v113;
  if (qword_28B0B0
    && (qword_28B0A8 == a1 && qword_28B0B0 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2) & 1) != 0))
  {
    uint64_t v45 = v108;
    v111(v108, v110, v14);
    uint64_t v46 = swift_bridgeObjectRetain_n(a2, 2LL);
    char v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v50 = swift_slowAlloc(32LL, -1LL);
      v115[0] = v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v114 = sub_6978(a1, a2, v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v47,  v48,  "AudioFlowDelegatePlugin#warmup we have already done warmup for refId: %s",  v49,  0xCu);
      swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      uint64_t v51 = v108;
LABEL_20:
      v43(v51, v14);
      uint64_t v63 = v109;
      return swift_release(v63);
    }

    goto LABEL_19;
  }

  if (qword_283928 != -1) {
    swift_once(&qword_283928, sub_14F4AC);
  }
  if (![(id)qword_28B0A0 tryLock])
  {
    uint64_t v45 = v104;
    v111(v104, v110, v14);
    uint64_t v59 = swift_bridgeObjectRetain_n(a2, 2LL);
    char v47 = (os_log_s *)Logger.logObject.getter(v59);
    os_log_type_t v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v60))
    {
      char v61 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      v115[0] = v62;
      *(_DWORD *)char v61 = 136315138;
      swift_bridgeObjectRetain(a2);
      uint64_t v114 = sub_6978(a1, a2, v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, v115);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( &dword_0,  v47,  v60,  "AudioFlowDelegatePlugin#warmup already in warmup. Rejecting warmup request for: %s",  v61,  0xCu);
      swift_arrayDestroy(v62, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      uint64_t v51 = v104;
      goto LABEL_20;
    }

id sub_150224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v48 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v47 = sub_6C5C(&qword_28A680);
  uint64_t v10 = __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v19 = sub_6960(v15, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  sub_FF10(a1, (uint64_t)v14, &qword_28A680);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, a2, v4);
  uint64_t v21 = v5;
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v23 = static os_log_type_t.default.getter();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    uint64_t v46 = v16;
    uint64_t v26 = v25;
    uint64_t v45 = swift_slowAlloc(64LL, -1LL);
    uint64_t v50 = v45;
    *(_DWORD *)uint64_t v26 = 136446722;
    int v44 = v24;
    uint64_t v27 = static Insights.frameKit.getter();
    uint64_t v43 = v4;
    unint64_t v29 = v28;
    uint64_t v49 = sub_6978(v27, v28, &v50);
    uint64_t v42 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v26 + 12) = 2080;
    sub_FF10((uint64_t)v14, (uint64_t)v12, &qword_28A680);
    uint64_t v30 = String.init<A>(describing:)(v12, v47);
    unint64_t v32 = v31;
    uint64_t v49 = sub_6978(v30, v31, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
    swift_bridgeObjectRelease(v32);
    uint64_t v33 = sub_1F6CC((uint64_t)v14, &qword_28A680);
    *(_WORD *)(v26 + 22) = 2048;
    BOOL v34 = v48;
    Date.init()(v33);
    double v35 = Date.timeIntervalSince(_:)(v9);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v42 + 8);
    uint64_t v37 = v34;
    uint64_t v38 = v43;
    v36(v37, v43);
    uint64_t v49 = *(void *)&v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50);
    v36(v9, v38);
    _os_log_impl( &dword_0,  v22,  (os_log_type_t)v44,  "AudioFlowDelegatePlugin#warmup %{public}s complete with code:%s in %f seconds",  (uint8_t *)v26,  0x20u);
    uint64_t v39 = v45;
    swift_arrayDestroy(v45, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    swift_slowDealloc(v26, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v15);
  }

  else
  {
    sub_1F6CC((uint64_t)v14, &qword_28A680);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v4);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }

  if (qword_283928 != -1) {
    swift_once(&qword_283928, sub_14F4AC);
  }
  return [(id)qword_28B0A0 unlock];
}

uint64_t sub_150620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v25 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v15 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283900 != -1) {
    swift_once(&qword_283900, sub_14F3F8);
  }
  uint64_t v23 = qword_28B078;
  uint64_t v18 = (void *)swift_allocObject(&unk_271FC8, 64LL, 7LL);
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = a1;
  v18[6] = a2;
  v18[7] = a6;
  aBlock[4] = sub_15530C;
  unint64_t v28 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_6E7C;
  aBlock[3] = &unk_271FE0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a4);
  swift_retain(a5);
  uint64_t v20 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v20);
  uint64_t v26 = &_swiftEmptyArrayStorage;
  sub_6DF0( (unint64_t *)&qword_287940,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v21 = sub_6C5C(&qword_285480);
  sub_21318((unint64_t *)&qword_287950, &qword_285480, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
  return swift_release(v28);
}

uint64_t sub_15086C( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v86 = a6;
  uint64_t v113 = a5;
  uint64_t v114 = a4;
  uint64_t v99 = a2;
  uint64_t v98 = a1;
  uint64_t v93 = type metadata accessor for DomainCode(0LL);
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v89 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v90 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v9);
  uint64_t v112 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = type metadata accessor for Completions.TimeoutMillis(0LL);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v102 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v109 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v105 = (uint64_t *)((char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v110 = type metadata accessor for DispatchTime(0LL);
  uint64_t v104 = *(void *)(v110 - 8);
  uint64_t v13 = __chkstk_darwin(v110);
  unint64_t v101 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v103 = (char *)&v85 - v15;
  uint64_t v111 = type metadata accessor for Logger(0LL);
  uint64_t v120 = *(void *)(v111 - 8);
  uint64_t v16 = __chkstk_darwin(v111);
  uint64_t v87 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v97 = (char *)&v85 - v18;
  uint64_t v96 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v119 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v94 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v100 = a3;
  uint64_t v85 = swift_projectBox(a3);
  uint64_t v27 = dispatch_group_create();
  dispatch_group_enter(v27);
  if (qword_283910 != -1) {
    swift_once(&qword_283910, sub_14F440);
  }
  uint64_t v115 = (void (*)(char *, uint64_t))qword_28B088;
  uint64_t v28 = swift_allocObject(&unk_272018, 24LL, 7LL);
  *(void *)(v28 + swift_weakDestroy(v0 + 16) = v27;
  uint64_t v126 = sub_155340;
  uint64_t v127 = (void *)v28;
  aBlock = _NSConcreteStackBlock;
  uint64_t v123 = 1107296256LL;
  uint64_t v124 = sub_6E7C;
  uint64_t v125 = &unk_272030;
  unint64_t v29 = _Block_copy(&aBlock);
  uint64_t v30 = v27;
  ((void (*)(void))static DispatchQoS.unspecified.getter)();
  uint64_t v121 = &_swiftEmptyArrayStorage;
  uint64_t v31 = sub_6DF0( (unint64_t *)&qword_287940,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v32 = sub_6C5C(&qword_285480);
  uint64_t v116 = sub_21318((unint64_t *)&qword_287950, &qword_285480, (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v117 = v32;
  uint64_t v118 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v32);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v23, v29);
  _Block_release(v29);
  uint64_t v115 = *(void (**)(char *, uint64_t))(v119 + 8);
  v115(v23, v21);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v94 + 8);
  uint64_t v119 = v24;
  BOOL v34 = v33;
  v33(v26, v24);
  uint64_t v35 = swift_release(v127);
  uint64_t v36 = static FeatureFlagProvider.shared.getter(v35);
  char v37 = FeatureFlagProvider.isAppSelectionEnabled.getter(v36);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v20, v96);
  if ((v37 & 1) != 0)
  {
    dispatch_group_enter(v30);
    uint64_t v38 = v111;
    uint64_t v39 = v30;
    if (qword_283920 != -1) {
      swift_once(&qword_283920, sub_14F488);
    }
    uint64_t v40 = swift_allocObject(&unk_272108, 24LL, 7LL);
    *(void *)(v40 + swift_weakDestroy(v0 + 16) = v30;
    uint64_t v126 = sub_1553B4;
    uint64_t v127 = (void *)v40;
    aBlock = _NSConcreteStackBlock;
    uint64_t v123 = 1107296256LL;
    uint64_t v124 = sub_6E7C;
    uint64_t v125 = &unk_272120;
    uint64_t v41 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v30);
    uint64_t v121 = &_swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v117);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v23, v41);
    _Block_release(v41);
    v115(v23, v21);
    uint64_t v42 = v34;
    v34(v26, v119);
    swift_release(v127);
  }

  else
  {
    uint64_t v38 = v111;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v43 = sub_6960(v38, (uint64_t)qword_2969C8);
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 16))(v97, v43, v38);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.debug.getter();
    uint64_t v39 = v30;
    uint64_t v42 = v34;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl( &dword_0,  v45,  v46,  "AudioFlowDelegatePlugin#warmup skipping app selection warmup on disabled platform",  v47,  2u);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v120 + 8))(v97, v38);
  }

  uint64_t v48 = v38;
  dispatch_group_enter(v39);
  if (qword_283908 != -1) {
    swift_once(&qword_283908, sub_14F41C);
  }
  uint64_t v49 = (void *)swift_allocObject(&unk_272068, 48LL, 7LL);
  uint64_t v50 = v99;
  _OWORD v49[2] = v98;
  v49[3] = v50;
  uint64_t v51 = v100;
  v49[4] = v100;
  void v49[5] = v39;
  uint64_t v126 = sub_15537C;
  uint64_t v127 = v49;
  aBlock = _NSConcreteStackBlock;
  uint64_t v123 = 1107296256LL;
  uint64_t v124 = sub_6E7C;
  uint64_t v125 = &unk_272080;
  uint64_t v52 = _Block_copy(&aBlock);
  id v53 = v39;
  swift_bridgeObjectRetain(v50);
  uint64_t v54 = swift_retain(v51);
  static DispatchQoS.unspecified.getter(v54);
  uint64_t v121 = &_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v117);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v23, v52);
  _Block_release(v52);
  v115(v23, v21);
  v42(v26, v119);
  uint64_t v55 = swift_release(v127);
  if (qword_2838F8 != -1) {
    uint64_t v55 = swift_once(&qword_2838F8, sub_14F3A0);
  }
  if (byte_296B10 == 1)
  {
    dispatch_group_enter(v53);
    if (qword_283918 != -1) {
      swift_once(&qword_283918, sub_14F464);
    }
    uint64_t v56 = swift_allocObject(&unk_2720B8, 32LL, 7LL);
    uint64_t v57 = v86;
    *(void *)(v56 + swift_weakDestroy(v0 + 16) = v53;
    *(void *)(v56 + 2sub_6C3C(v0 + 4) = v57;
    uint64_t v126 = sub_1553AC;
    uint64_t v127 = (void *)v56;
    aBlock = _NSConcreteStackBlock;
    uint64_t v123 = 1107296256LL;
    uint64_t v124 = sub_6E7C;
    uint64_t v125 = &unk_2720D0;
    uint64_t v58 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter(v53);
    uint64_t v121 = &_swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v121, v117);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v23, v58);
    _Block_release(v58);
    v115(v23, v21);
    v42(v26, v119);
    uint64_t v55 = swift_release(v127);
  }

  uint64_t v59 = v101;
  static DispatchTime.now()(v55);
  uint64_t v60 = v106;
  char v61 = v102;
  uint64_t v62 = v107;
  uint64_t v63 = (*(uint64_t (**)(char *, void, uint64_t))(v106 + 104))( v102,  enum case for Completions.TimeoutMillis.audioFlowDelegatePluginWarmup(_:),  v107);
  uint64_t v64 = Completions.TimeoutMillis.rawValue.getter(v63);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  uint64_t v65 = v105;
  *uint64_t v105 = v64;
  uint64_t v66 = v108;
  uint64_t v67 = v109;
  (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))( v65,  enum case for DispatchTimeInterval.milliseconds(_:),  v109);
  uint64_t v68 = v103;
  + infix(_:_:)(v59, v65);
  (*(void (**)(uint64_t *, uint64_t))(v66 + 8))(v65, v67);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v104 + 8);
  uint64_t v70 = v110;
  v69(v59, v110);
  uint64_t v71 = OS_dispatch_group.wait(timeout:)(v68) & 1;
  v69(v68, v70);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v71, 0LL) & 1) != 0)
  {
    uint64_t v72 = v85;
    swift_beginAccess(v85, &aBlock, 0LL, 0LL);
    uint64_t v73 = v72;
    uint64_t v74 = v112;
    sub_FF10(v73, v112, &qword_28A680);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v75 = sub_6960(v48, (uint64_t)qword_2969C8);
    uint64_t v76 = v87;
    uint64_t v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 16))(v87, v75, v48);
    uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
    os_log_type_t v79 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl(&dword_0, v78, v79, "AudioFlowDelegatePlugin#warmup timed out", v80, 2u);
      swift_slowDealloc(v80, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v120 + 8))(v76, v48);
    unint64_t v81 = v90;
    (*(void (**)(char *, void, uint64_t))(v88 + 104))(v90, enum case for PlaybackCode.unknown(_:), v89);
    uint64_t v82 = v92;
    (*(void (**)(char *, void, uint64_t))(v91 + 104))(v92, enum case for DomainCode.audioFlow(_:), v93);
    uint64_t v74 = v112;
    PlaybackCodeAndDescription.init(playbackCode:domainCode:errorDescription:)( v81,  v82,  0x695470756D726157LL,  0xED000074756F656DLL);
    uint64_t v83 = type metadata accessor for PlaybackCodeAndDescription(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56LL))(v74, 0LL, 1LL, v83);
  }

  v114(v74);

  return sub_1F6CC(v74, &qword_28A680);
}

uint64_t sub_151510(void *a1)
{
  uint64_t v2 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "AudioFlowDelegatePlugin#warmup InstalledAppProvider apps...", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static InstalledAppProvider.shared.getter(v15);
  uint64_t v16 = swift_allocObject(&unk_2721F8, 24LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = a1;
  id v17 = a1;
  InstalledAppProvider.installedApps(for:sharedUserId:useCache:alwaysIncludeCompanionApps:completion:)( 0LL,  0LL,  0LL,  0LL,  0LL,  sub_155448,  v16);
  swift_release(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1516F0(uint64_t a1, dispatch_group_s *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = swift_bridgeObjectRetain(a1);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v12 = 134217984;
    uint64_t v14 = *(void *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    swift_bridgeObjectRelease(a1);
    _os_log_impl(&dword_0, v10, v11, "AudioFlowDelegatePlugin#warmup InstalledAppProvider apps:%ld", v12, 0xCu);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease(a1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  dispatch_group_leave(a2);
}

uint64_t sub_15188C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_0, v8, v9, "AudioFlowDelegatePlugin#warmup PlayMediaAppSelector...", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for PlayMediaAppSelector(0LL);
  uint64_t v11 = swift_allocObject(&unk_272158, 24LL, 7LL);
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = a1;
  id v12 = a1;
  static PlayMediaAppSelector.warm(caller:completion:)(1LL, sub_1553BC, v11);
  return swift_release(v11);
}

void sub_151A0C(char a1, dispatch_group_s *a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v12 = 67109120;
    int v14 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    _os_log_impl(&dword_0, v10, v11, "AudioFlowDelegatePlugin#warmup PlayMediaAppSelector success?:%{BOOL}d", v12, 8u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  dispatch_group_leave(a2);
}

uint64_t sub_151B88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  int v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "AudioFlowDelegatePlugin#warmup MediaPlaybackLite#warm starting...", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for MediaPlaybackLite(0LL);
  uint64_t v17 = static MediaPlaybackLite.shared.getter();
  uint64_t v18 = swift_allocObject(&unk_2721D0, 32LL, 7LL);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v18 + 2sub_6C3C(v0 + 4) = a4;
  swift_retain(a3);
  id v19 = a4;
  dispatch thunk of MediaPlaybackLite.warm(refId:completion:)(a1, a2, sub_1553F8, v18);
  swift_release(v17);
  return swift_release(v18);
}

void sub_151D38(uint64_t a1, uint64_t a2, dispatch_group_s *a3)
{
  uint64_t v34 = sub_6C5C(&qword_28A680);
  uint64_t v6 = __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = swift_projectBox(a2);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  uint64_t v17 = sub_FF10(a1, (uint64_t)v10, &qword_28A680);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v31 = v15;
    uint64_t v20 = swift_slowAlloc(12LL, -1LL);
    uint64_t v32 = a1;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = a3;
    uint64_t v23 = v22;
    v36[0] = v22;
    uint64_t v30 = v12;
    *(_DWORD *)uint64_t v21 = 136446210;
    sub_FF10((uint64_t)v10, (uint64_t)v8, &qword_28A680);
    uint64_t v24 = String.init<A>(describing:)(v8, v34);
    unint64_t v26 = v25;
    uint64_t v35 = sub_6978(v24, v25, v36);
    uint64_t v15 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    swift_bridgeObjectRelease(v26);
    sub_1F6CC((uint64_t)v10, &qword_28A680);
    _os_log_impl( &dword_0,  v18,  v19,  "AudioFlowDelegatePlugin#warmup MediaPlaybackLite#warm complete with code:%{public}s",  v21,  0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v27 = v23;
    a3 = v33;
    swift_slowDealloc(v27, -1LL, -1LL);
    uint64_t v28 = v21;
    a1 = v32;
    swift_slowDealloc(v28, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v11);
  }

  else
  {
    sub_1F6CC((uint64_t)v10, &qword_28A680);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  swift_beginAccess(v15, v36, 1LL, 0LL);
  sub_155400(a1, v15);
  dispatch_group_leave(a3);
}

void sub_152010(dispatch_group_s *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v41 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - v10;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = sub_6960(v2, (uint64_t)qword_2969C8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v14 = v13(v11, v12, v2);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v42 = v2;
    uint64_t v18 = v12;
    os_log_type_t v19 = v13;
    uint64_t v20 = v6;
    uint64_t v21 = v9;
    uint64_t v22 = a1;
    uint64_t v23 = v17;
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_0, v15, v16, "AudioFlowDelegatePlugin#warmup UserPreferenceProvider warmup...", v17, 2u);
    uint64_t v24 = v23;
    a1 = v22;
    uint64_t v9 = v21;
    uint64_t v6 = v20;
    uint64_t v13 = v19;
    uint64_t v12 = v18;
    uint64_t v2 = v42;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  unint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v11, v2);
  if (qword_283918 != -1) {
    swift_once(&qword_283918, sub_14F464);
  }
  id v26 = [objc_allocWithZone(MediaServiceConfiguration) initWithQueue:qword_28B090];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = v13(v6, v12, v2);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl( &dword_0,  v29,  v30,  "AudioFlowDelegatePlugin#warmup UserPreferenceProvider warmup received MediaServiceConfiguration",  v31,  2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    v25(v6, v2);
    id v32 = [objc_allocWithZone(INPlayMediaIntent) init];
    uint64_t v33 = swift_allocObject(&unk_272180, 24LL, 7LL);
    *(void *)(v33 + swift_weakDestroy(v0 + 16) = a1;
    aBlock[4] = sub_1553C4;
    uint64_t v44 = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_152528;
    aBlock[3] = &unk_272198;
    uint64_t v34 = _Block_copy(aBlock);
    uint64_t v35 = v44;
    uint64_t v36 = a1;
    swift_release(v35);
    [v27 getResolvedServiceInfo:v32 completion:v34];
    _Block_release(v34);
  }

  else
  {
    uint64_t v37 = v13(v9, v12, v2);
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl( &dword_0,  v38,  v39,  "AudioFlowDelegatePlugin#warmup Skipping UserPreferenceProvider warmup as mediaServiceConfig=nil",  v40,  2u);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    v25(v9, v2);
    dispatch_group_leave(a1);
  }

void sub_1523E8(uint64_t a1, uint64_t a2, dispatch_group_s *a3)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v8 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "AudioFlowDelegatePlugin#warmup UserPreferenceProvider warmup complete", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  dispatch_group_leave(a3);
}

void sub_152528(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void (**)(void *, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  id v8 = a2;
  id v7 = a3;
  v6(a2, a3);
  swift_release(v5);
}

uint64_t sub_15259C(uint64_t a1, SEL *a2)
{
  uint64_t v3 = (void *)Parse.ServerConversion.siriKitIntent.getter(a1);
  id v4 = [v3 *a2];

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    uint64_t v7 = v6;
  }

  else
  {
    uint64_t v5 = 0LL;
    uint64_t v7 = 0LL;
  }

  v10[0] = v5;
  v10[1] = v7;
  uint64_t v8 = sub_6C5C(&qword_284600);
  return String.init<A>(describing:)(v10, v8);
}

uint64_t sub_15262C(uint64_t a1)
{
  uint64_t v1 = (void *)Parse.ServerConversion.siriKitIntent.getter(a1);
  uint64_t v2 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  if (swift_dynamicCastObjCClass(v1, v2))
  {
    uint64_t v3 = INPlayMediaIntent.slimDescription.getter();
    uint64_t v5 = v4;
  }

  else
  {

    uint64_t v3 = 0LL;
    uint64_t v5 = 0LL;
  }

  v8[0] = v3;
  v8[1] = v5;
  uint64_t v6 = sub_6C5C(&qword_284600);
  return String.init<A>(describing:)(v8, v6);
}

uint64_t sub_1526BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Parse(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Input(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289E88);
  if (qword_283848 != -1) {
    swift_once(&qword_283848, sub_3D0F4);
  }
  uint64_t v28 = qword_296830;
  uint64_t v10 = qword_283850;
  swift_retain(qword_296830);
  if (v10 != -1) {
    swift_once(&qword_283850, sub_3D224);
  }
  uint64_t v11 = qword_296838;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_retain(v11);
  uint64_t v12 = Input.init(parse:)(v5);
  uint64_t v13 = Parse.ServerConversion.siriKitIntent.getter(v12);
  uint64_t v14 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
  uint64_t v15 = swift_dynamicCastObjCClassUnconditional(v13, v14, 0LL, 0LL, 0LL);
  uint64_t v16 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v28, v11, v8, v15);
  uint64_t v28 = v16;
  uint64_t v17 = sub_21318(&qword_289E90, &qword_289E88, (uint64_t)&protocol conformance descriptor for RCHFlow<A>);
  uint64_t v18 = Flow.eraseToAnyFlow()(v9, v17);
  swift_release(v16);
  uint64_t v19 = sub_6C5C(&qword_289E98);
  uint64_t v20 = type metadata accessor for CommonFlowGuard(0LL);
  uint64_t v21 = swift_allocObject( v19,  ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL))
        + *(void *)(*(void *)(v20 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v21 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  static CommonFlowGuard.disallowInSharingMode.getter();
  uint64_t v22 = type metadata accessor for GuardedFlow();
  uint64_t v23 = swift_allocObject(v22, 40LL, 7LL);
  *(void *)(v23 + swift_weakDestroy(v0 + 16) = v18;
  *(_BYTE *)(v23 + 2sub_6C3C(v0 + 4) = 0;
  *(void *)(v23 + 32) = v21;
  uint64_t v28 = v23;
  uint64_t v24 = sub_6DF0( (unint64_t *)&qword_289EA0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for GuardedFlow,  (uint64_t)&protocol conformance descriptor for GuardedFlow);
  swift_retain(v18);
  swift_bridgeObjectRetain(v21);
  uint64_t v25 = Flow.eraseToAnyFlow()(v22, v24);
  swift_release(v18);
  swift_bridgeObjectRelease(v21);
  swift_release(v23);
  return v25;
}

uint64_t sub_152974(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Parse(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Input(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_28B1E8);
  if (qword_2838D8 != -1) {
    swift_once(&qword_2838D8, sub_148170);
  }
  uint64_t v28 = qword_296AA8;
  uint64_t v10 = qword_2838E0;
  swift_retain(qword_296AA8);
  if (v10 != -1) {
    swift_once(&qword_2838E0, sub_148264);
  }
  uint64_t v11 = qword_296AB0;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_retain(v11);
  uint64_t v12 = Input.init(parse:)(v5);
  uint64_t v13 = Parse.ServerConversion.siriKitIntent.getter(v12);
  uint64_t v14 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
  uint64_t v15 = swift_dynamicCastObjCClassUnconditional(v13, v14, 0LL, 0LL, 0LL);
  uint64_t v16 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v28, v11, v8, v15);
  uint64_t v28 = v16;
  uint64_t v17 = sub_21318(&qword_28B1F0, &qword_28B1E8, (uint64_t)&protocol conformance descriptor for RCHFlow<A>);
  uint64_t v18 = Flow.eraseToAnyFlow()(v9, v17);
  swift_release(v16);
  uint64_t v19 = sub_6C5C(&qword_289E98);
  uint64_t v20 = type metadata accessor for CommonFlowGuard(0LL);
  uint64_t v21 = swift_allocObject( v19,  ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL))
        + *(void *)(*(void *)(v20 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v21 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  static CommonFlowGuard.disallowInSharingMode.getter();
  uint64_t v22 = type metadata accessor for GuardedFlow();
  uint64_t v23 = swift_allocObject(v22, 40LL, 7LL);
  *(void *)(v23 + swift_weakDestroy(v0 + 16) = v18;
  *(_BYTE *)(v23 + 2sub_6C3C(v0 + 4) = 0;
  *(void *)(v23 + 32) = v21;
  uint64_t v28 = v23;
  uint64_t v24 = sub_6DF0( (unint64_t *)&qword_289EA0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for GuardedFlow,  (uint64_t)&protocol conformance descriptor for GuardedFlow);
  swift_retain(v18);
  swift_bridgeObjectRetain(v21);
  uint64_t v25 = Flow.eraseToAnyFlow()(v22, v24);
  swift_release(v18);
  swift_bridgeObjectRelease(v21);
  swift_release(v23);
  return v25;
}

uint64_t sub_152C2C()
{
  uint64_t v0 = dispatch thunk of PommesResponse.experiences.getter();
  uint64_t v1 = type metadata accessor for Experience(0LL);
  uint64_t v2 = Array.description.getter(v0, v1);
  swift_bridgeObjectRelease(v0);
  return v2;
}

uint64_t sub_152C84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AudioFlowProvider();
  uint64_t result = swift_allocObject(v2, 16LL, 7LL);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_26FF60;
  *a1 = result;
  return result;
}

uint64_t sub_152CC8()
{
  uint64_t v0 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v38 = *(void *)(v0 - 8);
  uint64_t v39 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v32 - v4;
  uint64_t v6 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v36 = sub_64FAC();
  uint64_t v13 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v37 = static SiriKitTaskLoggingProvider.shared.getter(v13);
  uint64_t v14 = static AceService.current.getter(v41);
  uint64_t v15 = static FeatureFlagProvider.shared.getter(v14);
  static StringsFileResolver.shared.getter(v15);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v16 = qword_296C50;
  uint64_t v17 = type metadata accessor for DialogHistoryProvider();
  void v40[3] = v17;
  v40[4] = &off_275B30;
  v40[0] = v16;
  uint64_t v33 = v16;
  uint64_t v18 = _s18NeedsValueStrategyCMa_0();
  uint64_t v34 = swift_allocObject(v18, 64LL, 7LL);
  uint64_t v19 = sub_1094C((uint64_t)v40, v17);
  uint64_t v35 = &v32;
  __chkstk_darwin(v19);
  uint64_t v21 = (unint64_t *)((char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(unint64_t *))(v22 + 16))(v21);
  unint64_t v23 = *v21;
  (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  uint64_t v24 = v6;
  uint64_t v25 = v38;
  uint64_t v26 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v3, v5, v39);
  swift_retain_n(v16, 2LL);
  uint64_t v27 = v12;
  uint64_t v28 = v5;
  uint64_t v29 = v37;
  swift_retain(v37);
  uint64_t v30 = sub_153A2C(v36, v29, v41, v10, (uint64_t)v3, v23, v34);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v26);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v24);
  swift_release(v29);
  sub_6C3C(v40);
  swift_release(v33);
  return v30;
}

uint64_t sub_152F60(char *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Parse(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = swift_allocObject(&unk_271370, 25LL, 7LL);
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(v11 + 2sub_6C3C(v0 + 4) = -1;
  uint64_t v12 = dispatch_group_create();
  dispatch_group_enter(v12);
  if (qword_2838D8 != -1) {
    swift_once(&qword_2838D8, sub_148170);
  }
  uint64_t v13 = qword_296AA8;
  swift_retain(v11);
  uint64_t v14 = v12;
  sub_F1E5C(a1, 0LL, v13, v11, v14);
  swift_release(v11);

  OS_dispatch_group.wait()();
  swift_beginAccess(v11 + 16, v35, 0LL, 0LL);
  unsigned __int8 v15 = *(_BYTE *)(v11 + 24);
  if ((v15 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v20 = v33;
    uint64_t v21 = sub_6960(v33, (uint64_t)qword_2969C8);
    unint64_t v23 = v31;
    uint64_t v22 = v32;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v21, v20);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "AudioFlowDelegatePlugin#makeFlow makeIntentFromParse for UpdateMediaAffinity intent returned failure to construct intent",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
      uint64_t v28 = (os_log_s *)v14;
    }

    else
    {
      uint64_t v28 = v25;
      uint64_t v25 = (os_log_s *)v14;
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v20);
    swift_release(v11);
    return 0LL;
  }

  else
  {
    uint64_t v16 = *(void **)(v11 + 16);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, a1, v4);
    sub_154DA0(v16, 0);
    Input.init(parse:)(v7);
    uint64_t v17 = type metadata accessor for Input(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v10, 0LL, 1LL, v17);
    sub_154DA0(v16, 0);
    uint64_t v18 = sub_15335C((uint64_t)a1, v16);
    static OutputPublisherFactory.makeOutputPublisher()(v34, v18);
    uint64_t v19 = sub_153610((uint64_t)v10, (uint64_t)v34, v16, v18);
    swift_release(v18);
    sub_87F60(v16, v15);
    sub_87F60(v16, v15);

    sub_6C3C(v34);
    sub_1F6CC((uint64_t)v10, &qword_285BD0);
    swift_release(v11);
  }

  return v19;
}

void sub_1532E4(void *a1, char a2, uint64_t a3, dispatch_group_s *a4)
{
  uint64_t v8 = *(void **)(a3 + 16);
  *(void *)(a3 + swift_weakDestroy(v0 + 16) = a1;
  unsigned __int8 v9 = *(_BYTE *)(a3 + 24);
  a2 &= 1u;
  *(_BYTE *)(a3 + 2sub_6C3C(v0 + 4) = a2;
  sub_87F60(v8, v9);
  sub_154DA0(a1, a2);
  dispatch_group_leave(a4);
}

uint64_t sub_15335C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Parse(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Input(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_28B1E8);
  if (qword_2838D8 != -1) {
    swift_once(&qword_2838D8, sub_148170);
  }
  uint64_t v28 = qword_296AA8;
  uint64_t v12 = qword_2838E0;
  swift_retain(qword_296AA8);
  if (v12 != -1) {
    swift_once(&qword_2838E0, sub_148264);
  }
  uint64_t v13 = qword_296AB0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain(v13);
  Input.init(parse:)(v7);
  uint64_t v14 = RCHFlow.__allocating_init(strategy:childFlowFactory:input:intent:)(&v28, v13, v10, a2);
  uint64_t v28 = v14;
  uint64_t v15 = sub_21318(&qword_28B1F0, &qword_28B1E8, (uint64_t)&protocol conformance descriptor for RCHFlow<A>);
  uint64_t v16 = Flow.eraseToAnyFlow()(v11, v15);
  swift_release(v14);
  uint64_t v17 = sub_6C5C(&qword_289E98);
  uint64_t v18 = type metadata accessor for CommonFlowGuard(0LL);
  uint64_t v19 = swift_allocObject( v17,  ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL))
        + *(void *)(*(void *)(v18 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  static CommonFlowGuard.disallowInSharingMode.getter();
  uint64_t v20 = type metadata accessor for GuardedFlow();
  uint64_t v21 = swift_allocObject(v20, 40LL, 7LL);
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = v16;
  *(_BYTE *)(v21 + 2sub_6C3C(v0 + 4) = 0;
  *(void *)(v21 + 32) = v19;
  uint64_t v28 = v21;
  uint64_t v22 = sub_6DF0( (unint64_t *)&qword_289EA0,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for GuardedFlow,  (uint64_t)&protocol conformance descriptor for GuardedFlow);
  swift_retain(v16);
  swift_bridgeObjectRetain(v19);
  uint64_t v23 = Flow.eraseToAnyFlow()(v20, v22);
  swift_release(v16);
  swift_bridgeObjectRelease(v19);
  swift_release(v21);
  uint64_t v28 = v23;
  uint64_t v24 = type metadata accessor for AnyFlow(0LL);
  uint64_t v25 = Flow.eraseToAnyFlow()(v24, &protocol witness table for AnyFlow);
  swift_release(v23);
  return v25;
}

uint64_t sub_153610(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v49 = *v4;
  uint64_t v50 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v9 = __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v13 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v20);
  uint64_t v46 = (uint64_t)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, v46, &qword_285BD0);
  sub_157C4(a2, (uint64_t)v53);
  uint64_t v22 = (uint64_t *)swift_allocObject(&unk_271348, 32LL, 7LL);
  uint64_t v45 = v22;
  uint64_t v23 = (uint64_t)v49;
  _OWORD v22[2] = a4;
  v22[3] = v23;
  uint64_t v24 = qword_2838F0;
  uint64_t v49 = a3;
  id v44 = a3;
  swift_retain(a4);
  if (v24 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v25 = static AceService.current.getter(v52);
  uint64_t v26 = static FeatureFlagProvider.shared.getter(v25);
  static NowPlayingProvider.shared.getter(v26);
  uint64_t v27 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v43 = static SiriKitTaskLoggingProvider.shared.getter(v27);
  uint64_t v28 = type metadata accessor for AudioAppResolutionFlow(0LL);
  uint64_t v29 = swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v51);
  uint64_t v30 = v19;
  uint64_t v31 = v14;
  uint64_t v32 = (uint64_t)v17;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v30, v13);
  uint64_t v33 = v48;
  uint64_t v34 = (uint64_t)v47;
  uint64_t v35 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v12, v50);
  uint64_t v41 = v29;
  uint64_t v36 = v45;
  uint64_t v37 = sub_1B6E94( v46,  v49,  v51,  v52,  v53,  0LL,  v32,  v34,  v43,  (uint64_t *)sub_1547C0,  v45,  (uint64_t)sub_E8BEC,  0LL,  0LL,  v41);

  swift_release(v36);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v35);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v13);
  *(void *)&v51[0] = v37;
  uint64_t v38 = sub_6DF0( (unint64_t *)&qword_28B1E0,  255LL,  type metadata accessor for AudioAppResolutionFlow,  (uint64_t)&unk_217860);
  uint64_t v39 = Flow.eraseToAnyFlow()(v28, v38);
  swift_release(v37);
  return v39;
}

uint64_t sub_153980()
{
  return swift_deallocClassInstance(v0, 192LL, 7LL);
}

uint64_t sub_1539CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_154580();
  *a1 = result;
  return result;
}

uint64_t sub_153A00(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_28B1D0,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for AudioFlowDelegatePlugin,  (uint64_t)&unk_219278);
}

uint64_t sub_153A2C( uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v67 = a7;
  unint64_t v57 = a6;
  uint64_t v56 = a5;
  uint64_t v55 = a4;
  uint64_t v64 = a3;
  uint64_t v68 = a1;
  uint64_t v9 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = v11;
  uint64_t v12 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  uint64_t v60 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v63 = (char *)&v54 - v16;
  uint64_t v18 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  uint64_t v20 = v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v65 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v54 - v23;
  uint64_t v62 = (char *)&v54 - v23;
  uint64_t v75 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v76 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v74 = a2;
  (*(void (**)(char *, void *, uint64_t))(v20 + 32))(v24, v55, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v17, v56, v12);
  uint64_t v25 = type metadata accessor for DialogHistoryProvider();
  uint64_t v73[3] = v25;
  void v73[4] = &off_275B30;
  v73[0] = v57;
  uint64_t v26 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v27 = (void *)swift_allocObject(v26, 56LL, 7LL);
  v27[6] = 0xEF746E65746E4961LL;
  v27[2] = 0xD000000000000011LL;
  v27[3] = 0x800000000021D860LL;
  v27[5] = 0x6964654D79616C50LL;
  uint64_t v28 = v68;
  v27[4] = v68;
  sub_157C4((uint64_t)a3, (uint64_t)v72);
  uint64_t v29 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v11, 1LL, 1LL, v29);
  sub_157C4((uint64_t)v73, (uint64_t)v71);
  unint64_t v57 = sub_7F548(&_swiftEmptyArrayStorage);
  uint64_t v30 = swift_retain(v28);
  uint64_t v56 = static SiriKitTaskLoggingProvider.shared.getter(v30);
  static ExecutorProvider.shared.getter(v70);
  uint64_t v31 = sub_1094C((uint64_t)v71, v71[3]);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)((char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  uint64_t v35 = *v33;
  v69[4] = &off_275B30;
  v69[3] = v25;
  v69[0] = v35;
  uint64_t v36 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v55 = (void *)swift_allocObject(v36, 288LL, 7LL);
  uint64_t v37 = sub_1094C((uint64_t)v69, v25);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t *)((char *)&v54 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v40 + 16))(v39);
  uint64_t v41 = *v39;
  uint64_t v42 = v20;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v44 = (uint64_t)v65;
  uint64_t v45 = v62;
  uint64_t v46 = v59;
  v43(v65, v62, v59);
  uint64_t v47 = v60;
  uint64_t v48 = (uint64_t)v66;
  uint64_t v49 = v63;
  uint64_t v50 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v66, v63, v61);
  uint64_t v51 = sub_EE5CC((uint64_t)v27, v68, v57, v72, (uint64_t)v58, v44, v48, v56, v41, v70, v55);
  swift_release(v27);
  sub_6C3C(v69);
  sub_6C3C(v71);
  sub_6C3C(v73);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v46);
  sub_6C3C(v64);
  uint64_t v52 = v67;
  *(void *)(v67 + swift_weakDestroy(v0 + 16) = v51;
  sub_FF54(&v74, v52 + 24);
  return v52;
}

uint64_t sub_153F04(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v38 = a2;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = type metadata accessor for AudioFlowProvider();
  uint64_t v46 = &off_26FF60;
  *(void *)&__int128 v44 = a3;
  *(_OWORD *)(a6 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v37 = a6 + 16;
  *(_OWORD *)(a6 + 3sub_6C3C(v0 + 2) = 0u;
  *(_OWORD *)(a6 + 4sub_6C3C(v0 + 8) = 0u;
  *(void *)(a6 + 6sub_6C3C(v0 + 4) = 0LL;
  *(_BYTE *)(a6 + 7sub_6C3C(v0 + 2) = -1;
  uint64_t v13 = a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_input;
  uint64_t v14 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  *(void *)(a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playMediaIntent) = 0LL;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
  sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_155190);
  uint64_t v16 = sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_155190);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v36 = v10;
    uint64_t v21 = v20;
    uint64_t v43 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    v35[1] = v19 + 4;
    sub_8747C(a1, (uint64_t)&v41);
    sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_155190);
    uint64_t v22 = sub_6C5C(&qword_2845F0);
    uint64_t v23 = String.init<A>(describing:)(&v41, v22);
    unint64_t v25 = v24;
    uint64_t v41 = sub_6978(v23, v24, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_bridgeObjectRelease(v25);
    sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_45E08);
    sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_45E08);
    _os_log_impl(&dword_0, v17, v18, "DirectActionAudioSearchFlowFrame#init with useCase: %s", v19, 0xCu);
    swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v9);
  }

  else
  {
    sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_45E08);
    sub_B89C4(a1, (void (*)(void, void, void, void, void, void, void, void))sub_45E08);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  uint64_t v26 = *(void **)(a6 + 16);
  uint64_t v27 = *(void *)(a6 + 24);
  uint64_t v28 = *(void **)(a6 + 32);
  uint64_t v29 = *(void *)(a6 + 40);
  uint64_t v30 = *(void *)(a6 + 48);
  uint64_t v31 = *(void *)(a6 + 56);
  uint64_t v32 = *(void *)(a6 + 64);
  char v33 = *(_BYTE *)(a6 + 72);
  sub_8747C(a1, v37);
  sub_45E08(v26, v27, v28, v29, v30, v31, v32, v33);
  sub_FF54(v38, a6 + 80);
  *(_BYTE *)(a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_state) = 0;
  sub_FF54(&v44, a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_audioFlowProvider);
  *(void *)(a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playFlowStrategy) = v39;
  *(void *)(a6 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_needsValueStrategy) = v40;
  return a6;
}

uint64_t sub_15428C(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = type metadata accessor for AudioFlowProvider();
  uint64_t v21 = &off_26FF60;
  v19[0] = a3;
  uint64_t v10 = type metadata accessor for DirectActionAudioSearchFlow(0LL);
  uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  uint64_t v12 = sub_1094C((uint64_t)v19, v20);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  uint64_t v16 = sub_153F04(a1, a2, *v14, a4, a5, v11);
  sub_6C3C(v19);
  return v16;
}

uint64_t sub_154384( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v30[3] = type metadata accessor for AppleMediaServicesProvider(0LL);
  v30[4] = &protocol witness table for AppleMediaServicesProvider;
  v30[0] = a8;
  uint64_t v18 = type metadata accessor for FeatureFlagProvider(0LL);
  v29[3] = v18;
  v29[4] = &protocol witness table for FeatureFlagProvider;
  uint64_t v19 = sub_10974(v29);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a9, v18);
  v28[3] = type metadata accessor for AudioFlowProvider();
  v28[4] = &off_26FF60;
  v28[0] = a5;
  *(_OWORD *)(a10 + 15sub_6C3C(v0 + 2) = 0u;
  *(_OWORD *)(a10 + 16sub_6C3C(v0 + 8) = 0u;
  *(void *)(a10 + 18sub_6C3C(v0 + 4) = 0LL;
  uint64_t v20 = type metadata accessor for AceServiceExecutorProviderWrapper();
  uint64_t v21 = swift_allocObject(v20, 128LL, 7LL);
  *(_OWORD *)(v21 + 3sub_6C3C(v0 + 2) = 0u;
  *(_OWORD *)(v21 + 4sub_6C3C(v0 + 8) = 0u;
  *(_OWORD *)(v21 + 8sub_6C3C(v0 + 8) = 0u;
  *(_OWORD *)(v21 + 10sub_6C3C(v0 + 4) = 0u;
  *(void *)(v21 + 1sub_6C3C(v0 + 20) = 0LL;
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v21 + 2sub_6C3C(v0 + 4) = a2;
  *(void *)(v21 + 6sub_6C3C(v0 + 4) = 0LL;
  *(void *)(v21 + 7sub_6C3C(v0 + 2) = a3;
  *(void *)(v21 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = a4;
  v27[3] = v20;
  v27[4] = sub_6DF0( &qword_28B1D8,  255LL,  (uint64_t (*)(uint64_t))type metadata accessor for AceServiceExecutorProviderWrapper,  (uint64_t)&unk_218534);
  v27[0] = v21;
  swift_retain(a2);
  swift_retain(a4);
  static ExecutorProvider.shared.setter(v27);
  sub_157C4((uint64_t)v28, a10 + 16);
  *(void *)(a10 + 136) = a6;
  *(void *)(a10 + 14sub_6C3C(v0 + 4) = a7;
  sub_157C4((uint64_t)v30, a10 + 56);
  sub_157C4((uint64_t)v29, a10 + 96);
  type metadata accessor for CATExecutor(0LL);
  uint64_t v22 = type metadata accessor for AudioFlowDelegatePlugin();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
  unint64_t v24 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  swift_retain(a7);
  id v25 = [v24 bundleForClass:ObjCClassFromMetadata];
  static CATExecutor.registerBundle(bundle:)();

  sub_6C3C(v29);
  sub_6C3C(v30);
  sub_6C3C(v28);
  return a10;
}

uint64_t sub_154580()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v23 - v5;
  uint64_t v7 = type metadata accessor for AudioFlowProvider();
  uint64_t v8 = swift_allocObject(v7, 16LL, 7LL);
  uint64_t v25 = v0;
  uint64_t v26 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v9 = sub_10974(v24);
  static FeatureFlagProvider.shared.getter(v9);
  uint64_t v10 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v11 = static SiriKitTaskLoggingProvider.shared.getter(v10);
  v23[3] = v10;
  v23[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v23[0] = v11;
  uint64_t v12 = type metadata accessor for AppleMediaServicesProvider(0LL);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  uint64_t v13 = AppleMediaServicesProvider.init(featureFlagProvider:siriKitTaskLoggingProvider:)(v24, v23);
  static FeatureFlagProvider.shared.getter(v13);
  uint64_t v25 = v7;
  uint64_t v26 = &off_26FF60;
  v24[0] = v8;
  uint64_t v14 = type metadata accessor for AudioFlowDelegatePlugin();
  uint64_t v15 = swift_allocObject(v14, 192LL, 7LL);
  uint64_t v16 = sub_1094C((uint64_t)v24, v7);
  __chkstk_darwin(v16);
  uint64_t v18 = (void *)((char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = *v18;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_retain(v8);
  swift_retain(v13);
  uint64_t v21 = sub_154384( (uint64_t)j___s11SiriKitFlow10AceServiceO7currentAA0dE7Invoker_pvgZ,  0LL,  (uint64_t)j___s11SiriKitFlow6DeviceO7currentAA0D5State_pvgZ,  0LL,  v20,  (uint64_t)sub_14F6C4,  0LL,  v13,  (uint64_t)v4,  v15);
  sub_6C3C(v24);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  swift_release(v8);
  swift_release(v13);
  return v21;
}

uint64_t sub_15479C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1547C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1547C8(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1547C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v64 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v63 = *(void *)(v64 - 8);
  uint64_t v10 = __chkstk_darwin(v64);
  uint64_t v62 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v51 - v12;
  uint64_t v71 = type metadata accessor for VoiceProfileProvider(0LL);
  uint64_t v14 = *(void *)(v71 - 8);
  uint64_t v15 = __chkstk_darwin(v71);
  uint64_t v61 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v68 = (char *)&v51 - v17;
  uint64_t v73 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v18 = __chkstk_darwin(v73);
  uint64_t v60 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v70 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v69 = *(void *)(v70 - 8);
  uint64_t v22 = __chkstk_darwin(v70);
  uint64_t v59 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v26 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v26);
  uint64_t v58 = (uint64_t)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_FF10(a1, v58, &qword_285BD0);
  sub_157C4(a4, (uint64_t)&v78);
  uint64_t v28 = qword_2838F0;
  uint64_t v65 = a2;
  id v29 = a2;
  uint64_t v67 = a3;
  swift_retain(a3);
  uint64_t v66 = a5;
  swift_retain(a5);
  if (v28 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v30 = static AceService.current.getter(&v77);
  uint64_t v31 = v25;
  uint64_t v55 = v25;
  uint64_t v32 = static FeatureFlagProvider.shared.getter(v30);
  uint64_t v54 = v21;
  static NowPlayingProvider.shared.getter(v32);
  uint64_t v33 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v56 = static SiriKitTaskLoggingProvider.shared.getter(v33);
  uint64_t v34 = type metadata accessor for MultiUserConnectionProvider(0LL);
  uint64_t v35 = static MultiUserConnectionProvider.shared.getter();
  uint64_t v75 = v34;
  uint64_t v76 = &protocol witness table for MultiUserConnectionProvider;
  *(void *)&__int128 v74 = v35;
  uint64_t v36 = type metadata accessor for CompanionDeviceProvider(0LL);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  uint64_t v53 = CompanionDeviceProvider.init(multiUserConnectionProvider:)(&v74);
  uint64_t v37 = v68;
  static VoiceProfileProvider.shared.getter();
  type metadata accessor for ResolvedAppHistoryProvider(0LL);
  uint64_t v38 = static ResolvedAppHistoryProvider.shared.getter();
  static InstalledAppProvider.shared.getter(v38);
  uint64_t v57 = type metadata accessor for SiriForAirPlayFlow(0LL);
  uint64_t v51 = swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)&v74);
  uint64_t v39 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v59, v31, v70);
  uint64_t v40 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v60, v21, v73);
  uint64_t v41 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v61, v37, v71);
  uint64_t v52 = v14;
  uint64_t v42 = v63;
  uint64_t v43 = (uint64_t)v62;
  uint64_t v44 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v13, v64);
  uint64_t v45 = v56;
  swift_retain(v56);
  uint64_t v46 = v53;
  swift_retain(v53);
  swift_retain(v38);
  uint64_t v47 = sub_EDB78( v58,  v65,  v67,  &v78,  &v74,  &v77,  0LL,  v39,  (uint64_t)sub_154D64,  v66,  (uint64_t)sub_A01C8,  0LL,  0LL,  v40,  v45,  v46,  v41,  v38,  v43,  v51);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v44);
  swift_release(v38);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v68, v71);
  swift_release(v45);
  swift_release(v46);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v54, v73);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v70);
  *(void *)&__int128 v74 = v47;
  uint64_t v48 = sub_6DF0(&qword_288D68, 255LL, type metadata accessor for SiriForAirPlayFlow, (uint64_t)&unk_2163D8);
  uint64_t v49 = Flow.eraseToAnyFlow()(v57, v48);
  swift_release(v47);
  return v49;
}

uint64_t sub_154D64()
{
  return swift_retain(v0);
}

uint64_t sub_154D6C()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255) {
    sub_87F78(*(void **)(v0 + 16), v1 & 1);
  }
  return swift_deallocObject(v0, 25LL, 7LL);
}

id sub_154DA0(void *a1, char a2)
{
  if ((a2 & 1) != 0) {
    return (id)swift_errorRetain(a1);
  }
  else {
    return a1;
  }
}

uint64_t sub_154DAC()
{
  return sub_154E88((uint64_t (*)(void))&type metadata accessor for Parse);
}

uint64_t sub_154DB8()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154DC8()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154DD8()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154DE8()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154DF8()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154E08()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154E18()
{
  return sub_154E88((uint64_t (*)(void))&type metadata accessor for Parse.DirectInvocation);
}

uint64_t sub_154E24()
{
  return sub_1010C((uint64_t (*)(void))&type metadata accessor for Parse.DirectInvocation);
}

uint64_t sub_154E30()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154E40()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154E50()
{
  return sub_154E88((uint64_t (*)(void))&type metadata accessor for Parse.DirectInvocation);
}

uint64_t sub_154E5C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154E6C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154E7C()
{
  return sub_154E88((uint64_t (*)(void))&type metadata accessor for Parse.DirectInvocation);
}

uint64_t sub_154E88(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_154EEC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154EFC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154F0C()
{
  return sub_152C2C();
}

uint64_t sub_154F14()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154F24()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154F34()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_154F5C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154F6C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154F7C()
{
  return sub_881CC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_154F84()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154F94()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154FA4()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154FB4()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154FC4()
{
  return sub_15262C(v0);
}

uint64_t sub_154FCC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154FDC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154FEC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_154FFC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15500C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15501C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15502C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15503C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15504C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15505C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15506C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15507C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15508C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_15509C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1550AC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1550D0()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1550E0()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1550F0()
{
  return sub_15259C(v0, (SEL *)&selRef_identifier);
}

uint64_t sub_155110()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_155120()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_155130()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_155140()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_155150()
{
  return sub_15259C(v0, (SEL *)&selRef_intentId);
}

uint64_t sub_155170()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_155180()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_155190( uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 != -1) {
    return sub_45EC0(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1551A4()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

id sub_155210(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Date(0LL) - 8) + 80LL);
  return sub_150224(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_155260()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1552D8()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_15530C()
{
  return sub_15086C( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void (**)(uint64_t))(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 56));
}

uint64_t sub_15531C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_155340()
{
  return sub_151510(*(void **)(v0 + 16));
}

uint64_t sub_155348()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_15537C()
{
  return sub_151B88(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_155388()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1553AC()
{
}

uint64_t sub_1553B4()
{
  return sub_15188C(*(void **)(v0 + 16));
}

void sub_1553BC(char a1)
{
}

void sub_1553C4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1553CC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1553F8(uint64_t a1)
{
}

uint64_t sub_155400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28A680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24LL))(a2, a1, v4);
  return a2;
}

void sub_155448(uint64_t a1)
{
}

uint64_t sub_155450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28B220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_15554C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

id sub_155584()
{
  uint64_t v0 = type metadata accessor for BehaviorAfterSpeaking(0LL);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void))(v3 + 104))(v2, enum case for BehaviorAfterSpeaking.defaultBehavior(_:));
  TemplatingResult.init(templateIdentifier:speak:print:behaviorAfterSpeaking:dialogIdentifier:)( 0xD00000000000001ALL,  0x800000000021CF80LL,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage,  v2,  &off_26AE20);
  id v4 = [objc_allocWithZone(DialogExecutionResult) init];
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setCatId:v5];

  id v6 = [objc_allocWithZone(DialogElement) init];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setId:v7];

  uint64_t v8 = sub_6C5C(&qword_287980);
  uint64_t v9 = swift_allocObject(v8, 40LL, 7LL);
  *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v6;
  uint64_t v15 = v9;
  specialized Array._endMutation()(v9);
  uint64_t v10 = v15;
  sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
  id v11 = v6;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  [v4 setDialog:isa];

  return v4;
}

uint64_t sub_15575C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(v5 + 120);
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  v27[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v27[4] = &off_272BD0;
  v27[0] = a2;
  uint64_t v12 = v10[4];
  uint64_t v13 = v10[5];
  uint64_t v14 = v10[6];
  uint64_t v18 = v13;
  uint64_t v19 = v14;
  unint64_t v20 = 0xD000000000000018LL;
  unint64_t v21 = 0x800000000021D800LL;
  uint64_t v22 = v12;
  unint64_t v23 = v11;
  uint64_t v24 = a1;
  uint64_t v25 = v27;
  uint64_t v26 = 0LL;
  id v15 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v13,  v14,  0xD000000000000018LL,  0x800000000021D800LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v17);
  swift_bridgeObjectRelease(v11);
  return sub_1F6CC((uint64_t)v27, &qword_283FE8);
}

uint64_t sub_155880(unint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v119 = type metadata accessor for Logger(0LL);
  uint64_t v121 = *(void *)(v119 - 8);
  uint64_t v14 = __chkstk_darwin(v119);
  uint64_t v113 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v120 = (char *)&v107 - v16;
  uint64_t v117 = type metadata accessor for AirPlayRouteSetupState(0LL);
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_2876D8);
  __chkstk_darwin(v18);
  uint64_t v116 = (uint64_t)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_6C5C((uint64_t *)&unk_2876E0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v118 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v107 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v107 - v26;
  id v114 = a3;
  BOOL v28 = INPlayMediaIntent.isNewsPodcastRequest()();
  if (!v28)
  {
    unint64_t v110 = a1;
    uint64_t v111 = v7;
    uint64_t v35 = sub_165C6C(a2, a4);
    if ((v35 & 1) != 0)
    {
      uint64_t v127 = 0LL;
      __int128 v125 = 0u;
      __int128 v126 = 0u;
      __chkstk_darwin(v35);
      uint64_t v31 = &v107 - 12;
      *(&v107 - sub_6C3C(v0 + 10) = v30;
      *(&v107 - sub_6C3C(v0 + 9) = v29;
      uint64_t v32 = 0xD000000000000016LL;
      uint64_t v33 = 0x8000000000221FD0LL;
      *(&v107 - sub_6C3C(v0 + 8) = 0xD000000000000016LL;
      *(&v107 - sub_6C3C(v0 + 7) = 0x8000000000221FD0LL;
      uint64_t v102 = v36;
      unint64_t v103 = v110;
      uint64_t v104 = a2;
      uint64_t v105 = &v125;
      uint64_t v106 = 0LL;
      goto LABEL_5;
    }

    uint64_t v37 = a4;
    uint64_t v109 = a5;
    uint64_t v108 = a2;
    uint64_t v38 = App.appIdentifier.getter(v35);
    if (v39)
    {
      unint64_t v40 = v39;
    }

    else
    {
      uint64_t v38 = 0LL;
      unint64_t v40 = 0xE000000000000000LL;
    }

    char v41 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v38, v40);
    swift_bridgeObjectRelease(v40);
    if ((v41 & 1) != 0) {
      goto LABEL_25;
    }
    uint64_t v107 = a6;
    type metadata accessor for AirPlayRouteSetupContext(0LL);
    static ExecutorProvider.shared.getter(&v125);
    uint64_t v43 = *((void *)&v126 + 1);
    uint64_t v42 = v127;
    sub_6EA8(&v125, *((uint64_t *)&v126 + 1));
    uint64_t v44 = dispatch thunk of ExecutorProviding.currentRequestId.getter(v43, v42);
    uint64_t v46 = v45;
    sub_6C3C(&v125);
    uint64_t v47 = static AirPlayRouteSetupContext.shared(refId:)(v44, v46);
    uint64_t v48 = swift_bridgeObjectRelease(v46);
    if (v47)
    {
      dispatch thunk of AirPlayRouteSetupContext.state.getter(v48);
      swift_release(v47);
      uint64_t v49 = v115;
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
      uint64_t v51 = v27;
      uint64_t v52 = 0LL;
    }

    else
    {
      uint64_t v49 = v115;
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
      uint64_t v51 = v27;
      uint64_t v52 = 1LL;
    }

    uint64_t v53 = v117;
    v50(v51, v52, 1LL, v117);
    uint64_t v54 = (uint64_t)v118;
    (*(void (**)(char *, void, uint64_t))(v49 + 104))( v25,  enum case for AirPlayRouteSetupState.error(_:),  v53);
    v50(v25, 0LL, 1LL, v53);
    uint64_t v55 = *(int *)(v18 + 48);
    uint64_t v56 = v116;
    uint64_t v57 = v116 + v55;
    sub_FF10((uint64_t)v27, v116, (uint64_t *)&unk_2876E0);
    sub_FF10((uint64_t)v25, v57, (uint64_t *)&unk_2876E0);
    uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    int v59 = v58(v56, 1LL, v53);
    a6 = v107;
    if (v59 == 1)
    {
      sub_1F6CC((uint64_t)v25, (uint64_t *)&unk_2876E0);
      sub_1F6CC((uint64_t)v27, (uint64_t *)&unk_2876E0);
      if (v58(v57, 1LL, v53) == 1)
      {
        sub_1F6CC(v56, (uint64_t *)&unk_2876E0);
LABEL_20:
        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v65 = v119;
        uint64_t v66 = sub_6960(v119, (uint64_t)qword_2969C8);
        uint64_t v67 = v121;
        uint64_t v68 = v113;
        uint64_t v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 16))(v113, v66, v65);
        uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
        os_log_type_t v71 = static os_log_type_t.debug.getter();
        BOOL v72 = os_log_type_enabled(v70, v71);
        uint64_t v73 = v109;
        if (v72)
        {
          __int128 v74 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)__int128 v74 = 0;
          _os_log_impl( &dword_0,  v70,  v71,  "PlayMediaDialogProvider#makeFailureHandlingIntentDialog returning AirPlay error for SFA request",  v74,  2u);
          swift_slowDealloc(v74, -1LL, -1LL);
        }

        (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v65);
        unint64_t v75 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        *((void *)&v126 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
        uint64_t v127 = &off_272BD0;
        *(void *)&__int128 v125 = v114;
        id v76 = v114;
        sub_1D0BA0(v75, v108, (uint64_t)&v125, v73, a6);
LABEL_34:
        swift_bridgeObjectRelease(v75);
        return sub_1F6CC((uint64_t)&v125, &qword_283FE8);
      }
    }

    else
    {
      sub_FF10(v56, v54, (uint64_t *)&unk_2876E0);
      if (v58(v57, 1LL, v53) != 1)
      {
        uint64_t v60 = v54;
        uint64_t v61 = v112;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v112, v57, v53);
        uint64_t v62 = sub_10430( (unint64_t *)&unk_2876F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AirPlayRouteSetupState,  (uint64_t)&protocol conformance descriptor for AirPlayRouteSetupState);
        char v63 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v61, v53, v62);
        uint64_t v64 = *(void (**)(char *, uint64_t))(v49 + 8);
        v64(v61, v53);
        sub_1F6CC((uint64_t)v25, (uint64_t *)&unk_2876E0);
        sub_1F6CC((uint64_t)v27, (uint64_t *)&unk_2876E0);
        v64(v118, v53);
        sub_1F6CC(v56, (uint64_t *)&unk_2876E0);
        if ((v63 & 1) != 0) {
          goto LABEL_20;
        }
LABEL_25:
        id v77 = (id)INPlayMediaIntentResponseCodeGetName([v37 code]);
        uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
        unint64_t v80 = v79;

        if (qword_283888 != -1) {
          swift_once(&qword_283888, sub_BFC5C);
        }
        uint64_t v81 = v119;
        uint64_t v82 = sub_6960(v119, (uint64_t)qword_2969C8);
        uint64_t v83 = v120;
        uint64_t v84 = v121;
        (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v120, v82, v81);
        uint64_t v85 = swift_bridgeObjectRetain_n(v80, 2LL);
        uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
        os_log_type_t v87 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v88 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v89 = v78;
          uint64_t v90 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v125 = v90;
          *(_DWORD *)uint64_t v88 = 136315138;
          swift_bridgeObjectRetain(v80);
          *(void *)&__int128 v123 = sub_6978(v89, v80, (uint64_t *)&v125);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, (char *)&v123 + 8);
          swift_bridgeObjectRelease_n(v80, 3LL);
          _os_log_impl( &dword_0,  v86,  v87,  "PlayMediaDialogProvider#makeFailureHandlingIntentDialog with code: %s",  v88,  0xCu);
          swift_arrayDestroy(v90, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v91 = v90;
          uint64_t v78 = v89;
          swift_slowDealloc(v91, -1LL, -1LL);
          swift_slowDealloc(v88, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v81);
        }

        else
        {

          swift_bridgeObjectRelease_n(v80, 2LL);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v81);
        }

        uint64_t v92 = v109;
        unint64_t v93 = v110;
        uint64_t v124 = &type metadata for String;
        *(void *)&__int128 v123 = v78;
        *((void *)&v123 + 1) = v80;
        uint64_t v94 = swift_bridgeObjectRetain(v110);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v94);
        unint64_t v122 = v93;
        sub_1E1E1C(&v123, 1701080931LL, 0xE400000000000000LL, isUniquelyReferenced_nonNull_native, &v125);
        unint64_t v96 = v122;
        swift_bridgeObjectRelease(0x8000000000000000LL);
        uint64_t v97 = sub_1F6CC((uint64_t)&v125, &qword_284028);
        uint64_t v98 = static SiriAudioEnvironment.isCarPlay.getter(v97);
        if ((v98 & 1) != 0) {
          char v99 = 1;
        }
        else {
          char v99 = static SiriAudioEnvironment.isHomePod.getter(v98);
        }
        uint64_t v124 = &type metadata for Bool;
        LOBYTE(v12sub_6C3C(v0 + 3) = v99 & 1;
        char v100 = swift_isUniquelyReferenced_nonNull_native(v96);
        unint64_t v122 = v96;
        sub_1E1E1C(&v123, 0xD000000000000010LL, 0x8000000000221FB0LL, v100, &v125);
        unint64_t v75 = v122;
        swift_bridgeObjectRelease(0x8000000000000000LL);
        sub_1F6CC((uint64_t)&v125, &qword_284028);
        uint64_t v127 = 0LL;
        __int128 v125 = 0u;
        __int128 v126 = 0u;
        sub_1D01B4(v75, v108, (uint64_t)&v125, v92, a6);
        goto LABEL_34;
      }

      sub_1F6CC((uint64_t)v25, (uint64_t *)&unk_2876E0);
      sub_1F6CC((uint64_t)v27, (uint64_t *)&unk_2876E0);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v54, v53);
    }

    sub_1F6CC(v56, &qword_2876D8);
    goto LABEL_25;
  }

  uint64_t v127 = 0LL;
  __int128 v125 = 0u;
  __int128 v126 = 0u;
  __chkstk_darwin(v28);
  uint64_t v31 = &v107 - 12;
  *(&v107 - sub_6C3C(v0 + 10) = v30;
  *(&v107 - sub_6C3C(v0 + 9) = v29;
  uint64_t v32 = 0x45636972656E6547LL;
  uint64_t v33 = 0xEC000000726F7272LL;
  strcpy((char *)&v107 - 64, "GenericError");
  *((_BYTE *)&v107 - 51) = 0;
  *((_WORD *)&v107 - sub_6C3C(v0 + 25) = -5120;
  uint64_t v102 = v34;
  unint64_t v103 = a1;
  uint64_t v104 = a2;
  uint64_t v105 = &v125;
  uint64_t v106 = 0LL;
LABEL_5:
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a5,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v30,  v29,  v32,  v33,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v31);
  return sub_1F6CC((uint64_t)&v125, &qword_283FE8);
}

uint64_t sub_1562B8( void (*a1)(char *, id), void *a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v11 = *v5;
  swift_retain(v5);
  swift_retain(a1);
  uint64_t v12 = a2;
  swift_retain(a5);
  return sub_156354(0, (uint64_t)a1, v12, a3, (uint64_t)v5, (uint64_t)v5, a1, v12, a4, a5, v11);
}

uint64_t sub_156354( int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, id), void *a8, void (*a9)(void *), uint64_t a10, uint64_t a11)
{
  return swift_release(a10);
}

uint64_t sub_1563C0(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, v32);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x79616C507369LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE600000000000000LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = a1;
  unint64_t v13 = sub_74D54(inited);
  uint64_t v14 = *(void *)(v5 + 120);
  v31[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v31[4] = &off_272BD0;
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v18 = v14 + 24;
  uint64_t v17 = *(void *)(v14 + 24);
  uint64_t v16 = *(void *)(v18 + 8);
  uint64_t v22 = v15;
  uint64_t v23 = v17;
  unint64_t v24 = 0xD00000000000001CLL;
  unint64_t v25 = 0x800000000021D590LL;
  uint64_t v26 = v16;
  unint64_t v27 = v13;
  uint64_t v28 = a2;
  uint64_t v29 = v31;
  uint64_t v30 = 0LL;
  v31[0] = a3;
  id v19 = a3;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a4,  a5,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v15,  v17,  0xD00000000000001CLL,  0x800000000021D590LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v21);
  swift_bridgeObjectRelease(v13);
  return sub_1F6CC((uint64_t)v31, &qword_283FE8);
}

uint64_t sub_156520(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v30 = a4;
  uint64_t v9 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v9, v34);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
  strcpy((char *)(inited + 32), "isPersonalized");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  id v11 = [a2 privatePlayMediaIntentData];
  id v12 = [v11 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v13.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v12)
  {
    id v14 = v12;
    char v15 = static NSObject.== infix(_:_:)();
  }

  else
  {
    char v15 = 0;
  }

  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v15 & 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xD000000000000021LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000221F80LL;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 1;
  unint64_t v16 = sub_74D54(inited);
  uint64_t v17 = *(void *)(v5 + 120);
  uint64_t v32 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v33 = &off_272BD0;
  v31[0] = a2;
  uint64_t v18 = *(void *)(v17 + 40);
  uint64_t v19 = *(void *)(v17 + 48);
  __chkstk_darwin(v32);
  v23[2] = v18;
  v23[3] = v19;
  strcpy(v24, "FollowUpFailed");
  v24[15] = -18;
  uint64_t v25 = v20;
  unint64_t v26 = v16;
  uint64_t v27 = a1;
  uint64_t v28 = v31;
  uint64_t v29 = 0LL;
  id v21 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  v30,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0x7055776F6C6C6F46LL,  0xEE0064656C696146LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v23);
  swift_bridgeObjectRelease(v16);
  return sub_1F6CC((uint64_t)v31, &qword_283FE8);
}

uint64_t sub_15678C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1567DC( a1,  a2,  a3,  a4,  0x65566576694C6F6ELL,  0xED00006E6F697372LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_1567B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1567DC( a1,  a2,  a3,  a4,  0xD000000000000011LL,  0x8000000000221F60LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_1567DC( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t (*)(), uint64_t))
{
  uint64_t v35 = a7;
  uint64_t v36 = a3;
  uint64_t v34 = a1;
  uint64_t v37 = a4;
  uint64_t v10 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v10, &v39);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
  strcpy((char *)(inited + 32), "isPersonalized");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  id v12 = [a2 privatePlayMediaIntentData];
  id v13 = [v12 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v14.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v13)
  {
    id v15 = v13;
    char v16 = static NSObject.== infix(_:_:)();
  }

  else
  {
    char v16 = 0;
  }

  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v16 & 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x676E6F537369LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  uint64_t v17 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  *(_BYTE *)(inited + 96) = MediaIntentCommons.getMediaType()(v17, &protocol witness table for INPlayMediaIntent) == 1;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x6D75626C417369LL;
  *(void *)(inited + 136) = 0xE700000000000000LL;
  v38[0] = a2;
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 4) = MediaIntentCommons.getMediaType()(v17, &protocol witness table for INPlayMediaIntent) == 2;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = a5;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = a6;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = 1;
  unint64_t v18 = sub_74D54(inited);
  uint64_t v19 = *(void *)(v33 + 120);
  v38[3] = v17;
  v38[4] = &off_272BD0;
  v38[0] = a2;
  uint64_t v20 = *(void *)(v19 + 40);
  uint64_t v21 = *(void *)(v19 + 48);
  uint64_t v22 = __chkstk_darwin(v18);
  v26[2] = v20;
  v26[3] = v21;
  strcpy(v27, "FollowUpFailed");
  v27[15] = -18;
  uint64_t v28 = v23;
  uint64_t v29 = v22;
  uint64_t v30 = v34;
  uint64_t v31 = v38;
  uint64_t v32 = 0LL;
  id v24 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v36,  v37,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v20,  v21,  0x7055776F6C6C6F46LL,  0xEE0064656C696146LL,  v35,  (uint64_t)v26);
  swift_bridgeObjectRelease(v18);
  return sub_1F6CC((uint64_t)v38, &qword_283FE8);
}

uint64_t sub_156AB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_156B00( a1,  a2,  a3,  a4,  0xD000000000000018LL,  0x8000000000221F40LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_156AD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_156B00( a1,  a2,  a3,  a4,  0x655265726F4D6F6ELL,  0xED000073746C7573LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_156B00( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t (*)(), uint64_t))
{
  uint64_t v42 = a7;
  uint64_t v43 = a3;
  uint64_t v41 = a1;
  uint64_t v44 = a4;
  uint64_t v10 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v10, &v46);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_219300;
  strcpy((char *)(inited + 32), "isPersonalized");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  id v12 = [a2 privatePlayMediaIntentData];
  id v13 = [v12 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v14.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v13)
  {
    id v15 = v13;
    char v16 = static NSObject.== infix(_:_:)();
  }

  else
  {
    char v16 = 0;
  }

  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v16 & 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x676E6F537369LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  uint64_t v17 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  *(_BYTE *)(inited + 96) = MediaIntentCommons.getMediaType()(v17, &protocol witness table for INPlayMediaIntent) == 1;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x6D75626C417369LL;
  *(void *)(inited + 136) = 0xE700000000000000LL;
  v45[0] = a2;
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 4) = MediaIntentCommons.getMediaType()(v17, &protocol witness table for INPlayMediaIntent) == 2;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0x747369747261LL;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0xE600000000000000LL;
  id v18 = [a2 mediaSearch];
  if (!v18
    || (v19 = v18, id v20 = [v18 artistName], v19, !v20))
  {
    id v24 = (uint64_t *)(inited + 192);
    *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for String;
    goto LABEL_9;
  }

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  unint64_t v23 = v22;

  id v24 = (uint64_t *)(inited + 192);
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for String;
  if (!v23)
  {
LABEL_9:
    *id v24 = 0LL;
    unint64_t v23 = 0xE000000000000000LL;
    goto LABEL_10;
  }

  *id v24 = v21;
LABEL_10:
  *(void *)(inited + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v23;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = a5;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = a6;
  *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 1;
  unint64_t v25 = sub_74D54(inited);
  uint64_t v26 = *(void *)(v40 + 120);
  v45[3] = v17;
  _BYTE v45[4] = &off_272BD0;
  v45[0] = a2;
  uint64_t v27 = *(void *)(v26 + 40);
  uint64_t v28 = *(void *)(v26 + 48);
  uint64_t v29 = __chkstk_darwin(v25);
  v33[2] = v27;
  v33[3] = v28;
  strcpy(v34, "FollowUpFailed");
  v34[15] = -18;
  uint64_t v35 = v30;
  uint64_t v36 = v29;
  uint64_t v37 = v41;
  uint64_t v38 = v45;
  uint64_t v39 = 0LL;
  id v31 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v43,  v44,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v27,  v28,  0x7055776F6C6C6F46LL,  0xEE0064656C696146LL,  v42,  (uint64_t)v33);
  swift_bridgeObjectRelease(v25);
  return sub_1F6CC((uint64_t)v45, &qword_283FE8);
}

uint64_t sub_156E70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_156EB8( a1,  a2,  a3,  a4,  0xD00000000000001ELL,  0x8000000000221F20LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_156E94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_156EB8( a1,  a2,  a3,  a4,  0xD000000000000012LL,  0x8000000000221F00LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_156EB8( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t (*)(), uint64_t))
{
  uint64_t v15 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v15, v34);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = a5;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = a6;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = 1;
  unint64_t v17 = sub_74D54(inited);
  id v18 = *(void **)(v7 + 120);
  v33[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  void v33[4] = &off_272BD0;
  v33[0] = a2;
  uint64_t v19 = v18[4];
  uint64_t v20 = v18[5];
  uint64_t v21 = v18[6];
  uint64_t v25 = v20;
  uint64_t v26 = v21;
  strcpy(v27, "FollowUpFailed");
  v27[15] = -18;
  uint64_t v28 = v19;
  unint64_t v29 = v17;
  uint64_t v30 = a1;
  id v31 = v33;
  uint64_t v32 = 0LL;
  id v22 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v20,  v21,  0x7055776F6C6C6F46LL,  0xEE0064656C696146LL,  a7,  (uint64_t)v24);
  swift_bridgeObjectRelease(v17);
  return sub_1F6CC((uint64_t)v33, &qword_283FE8);
}

uint64_t sub_157018(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_156EB8( a1,  a2,  a3,  a4,  0xD000000000000018LL,  0x8000000000221EE0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4);
}

uint64_t sub_15703C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v8 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v8, &v35);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
  strcpy((char *)(inited + 32), "isPersonalized");
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 7) = -18;
  id v10 = [a2 privatePlayMediaIntentData];
  id v11 = [v10 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v12.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v11)
  {
    id v13 = v11;
    char v14 = static NSObject.== infix(_:_:)(v13, v12.super.super.isa);
  }

  else
  {
    char v14 = 0;
  }

  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v14 & 1;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 1448375145LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE400000000000000LL;
  uint64_t v15 = static SiriAudioEnvironment.isAppleTV.getter();
  *(_BYTE *)(inited + 96) = v15 & 1;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x6F50656D6F487369LL;
  *(void *)(inited + 136) = 0xE900000000000064LL;
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 4) = static SiriAudioEnvironment.isHomePod.getter(v15) & 1;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  strcpy((char *)(inited + 176), "nothingPlaying");
  *(_BYTE *)(inited + 191) = -18;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = 1;
  unint64_t v16 = sub_74D54(inited);
  uint64_t v17 = *(void *)(v5 + 120);
  uint64_t v33 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v34 = &off_272BD0;
  v32[0] = a2;
  uint64_t v18 = *(void *)(v17 + 40);
  uint64_t v19 = *(void *)(v17 + 48);
  __chkstk_darwin(v33);
  v23[2] = v18;
  v23[3] = v19;
  strcpy(v24, "FollowUpFailed");
  v24[15] = -18;
  uint64_t v25 = v20;
  unint64_t v26 = v16;
  uint64_t v27 = a1;
  uint64_t v28 = v32;
  uint64_t v29 = 0LL;
  id v21 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v30,  v31,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0x7055776F6C6C6F46LL,  0xEE0064656C696146LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v23);
  swift_bridgeObjectRelease(v16);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

uint64_t sub_1572F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v13, v33);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE900000000000072LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain(a3);
  unint64_t v15 = sub_74D54(inited);
  unint64_t v16 = *(void **)(v6 + 120);
  void v32[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v32[4] = &off_272BD0;
  uint64_t v17 = v16[4];
  uint64_t v18 = v16[5];
  uint64_t v19 = v16[6];
  uint64_t v23 = v18;
  uint64_t v24 = v19;
  unint64_t v25 = 0xD00000000000001ALL;
  unint64_t v26 = 0x800000000021D7C0LL;
  uint64_t v27 = v17;
  unint64_t v28 = v15;
  uint64_t v29 = a1;
  uint64_t v30 = v32;
  uint64_t v31 = 0LL;
  v32[0] = a4;
  id v20 = a4;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a5,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD00000000000001ALL,  0x800000000021D7C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v22);
  swift_bridgeObjectRelease(v15);
  return sub_1F6CC((uint64_t)v32, &qword_283FE8);
}

uint64_t sub_15746C( void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t (*)(), uint64_t), uint64_t a7)
{
  uint64_t v344 = a2;
  uint64_t v13 = sub_6C5C(&qword_28B618);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v323 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v333 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v332 = *(void *)(v333 - 8);
  __chkstk_darwin(v333);
  uint64_t v329 = (uint64_t)&v323 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  v328 = (char *)&v323 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v330 = (char *)&v323 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v325 = (char *)&v323 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v326 = (char *)&v323 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v334 = (uint64_t)&v323 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v323 - v29;
  char v331 = a1;
  int v343 = (uint64_t *)[a1 unsupportedReason];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v31 = sub_6960(v17, (uint64_t)qword_2969C8);
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v18 + 2);
  uint64_t v335 = v31;
  id v336 = v32;
  ((void (*)(char *))v32)(v30);
  uint64_t v33 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  uint64_t v340 = v18;
  os_log_type_t v36 = v35;
  BOOL v37 = os_log_type_enabled(v34, v35);
  v342 = (uint64_t *)a7;
  uint64_t v339 = v17;
  uint64_t v327 = v15;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc(22LL, -1LL);
    uint64_t v39 = swift_slowAlloc(32LL, -1LL);
    uint64_t v337 = a5;
    uint64_t v40 = v39;
    *(void *)&__int128 v347 = v39;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v41 = String.debugDescription.getter(a3, a4);
    uint64_t v338 = a6;
    unint64_t v43 = v42;
    uint64_t ObjectType = sub_6978(v41, v42, (uint64_t *)&v347);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v347);
    swift_bridgeObjectRelease_n(a4, 2LL);
    unint64_t v44 = v43;
    a6 = v338;
    swift_bridgeObjectRelease(v44);
    *(_WORD *)(v38 + 1sub_6C3C(v0 + 2) = 2048;
    uint64_t ObjectType = (uint64_t)v343;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v347);
    _os_log_impl( &dword_0,  v34,  v36,  "PlayeMediaDialogProvider#chooseUnsupportedReason for parameterName %s and reason %ld",  (uint8_t *)v38,  0x16u);
    swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v45 = v40;
    a5 = v337;
    a7 = (uint64_t)v342;
    swift_slowDealloc(v45, -1LL, -1LL);
    swift_slowDealloc(v38, -1LL, -1LL);

    uint64_t v46 = (void (*)(uint64_t, uint64_t))*((void *)v340 + 1);
    uint64_t v47 = v30;
    uint64_t v48 = v339;
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
    uint64_t v46 = (void (*)(uint64_t, uint64_t))*((void *)v340 + 1);
    uint64_t v47 = v30;
    uint64_t v48 = v17;
  }

  uint64_t v340 = v46;
  v46((uint64_t)v47, v48);
  unint64_t v49 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v49);
  sub_30240();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_30600();
  if (v53 | v55)
  {
    char v63 = v54;
    id v64 = (id)v55;
  }

  else
  {
    uint64_t v56 = a6;
    uint64_t v57 = a3;
    uint64_t v58 = a5;
    id v59 = [v344 mediaSearch];
    if (v59
      && (v60 = v59, id v61 = [v59 mediaName], v60, v61))
    {
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      uint64_t v53 = v62;
    }

    else
    {
      uint64_t v51 = 0LL;
      uint64_t v53 = 0LL;
    }

    id v65 = [v344 mediaSearch];
    char v63 = v65;
    if (v65)
    {
      id v64 = [v65 artistName];

      if (v64)
      {
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
        uint64_t v68 = v67;

        id v64 = v68;
        char v63 = (void *)v66;
      }

      else
      {
        char v63 = 0LL;
      }
    }

    else
    {
      id v64 = 0LL;
    }

    a5 = v58;
    a3 = v57;
    a6 = v56;
  }

  if ((a3 != 0x657449616964656DLL || a4 != 0xEA0000000000736DLL)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) == 0)
  {
    uint64_t v74 = sub_6C5C(&qword_2844D0);
    uint64_t v75 = swift_allocObject(v74, 224LL, 7LL);
    uint64_t v76 = a4;
    uint64_t v77 = v75;
    *(_OWORD *)(v75 + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
    *(void *)(v75 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
    *(void *)(v75 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
    if (v53) {
      uint64_t v78 = v51;
    }
    else {
      uint64_t v78 = 0LL;
    }
    unint64_t v79 = 0xE000000000000000LL;
    if (v53) {
      unint64_t v80 = v53;
    }
    else {
      unint64_t v80 = 0xE000000000000000LL;
    }
    *(void *)(v75 + 4sub_6C3C(v0 + 8) = v78;
    *(void *)(v75 + 56) = v80;
    *(void *)(v75 + 7sub_6C3C(v0 + 2) = &type metadata for String;
    *(void *)(v75 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
    if (v64) {
      uint64_t v81 = v63;
    }
    else {
      uint64_t v81 = 0LL;
    }
    if (v64) {
      unint64_t v79 = (unint64_t)v64;
    }
    *(void *)(v75 + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
    *(void *)(v75 + 96) = v81;
    *(void *)(v75 + 10sub_6C3C(v0 + 4) = v79;
    *(void *)(v75 + 1sub_6C3C(v0 + 20) = &type metadata for String;
    *(void *)(v75 + 12sub_6C3C(v0 + 8) = 0x6574656D61726170LL;
    *(void *)(v75 + 136) = 0xE900000000000072LL;
    *(void *)(v75 + 14sub_6C3C(v0 + 4) = a3;
    *(void *)(v75 + 15sub_6C3C(v0 + 2) = v76;
    *(void *)(v75 + 16sub_6C3C(v0 + 8) = &type metadata for String;
    strcpy((char *)(v75 + 176), "isPersonalized");
    *(_BYTE *)(v75 + 191) = -18;
    swift_bridgeObjectRetain(v76);
    swift_bridgeObjectRetain(v64);
    id v82 = [v344 privatePlayMediaIntentData];
    id v83 = [v82 isPersonalizedRequest];

    sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
    v84.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
    uint64_t v85 = (uint64_t)v64;
    if (v83)
    {
      id v86 = v83;
      char v87 = static NSObject.== infix(_:_:)(v86, v84.super.super.isa);
    }

    else
    {
      char v87 = 0;
    }

    *(void *)(v77 + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
    *(_BYTE *)(v77 + 19sub_6C3C(v0 + 2) = v87 & 1;
    unint64_t v88 = sub_74D54(v77);
    uint64_t v89 = *(void *)(v341 + 120);
    *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v349 = &off_272BD0;
    *(void *)&__int128 v347 = v344;
    uint64_t v90 = *(void *)(v89 + 40);
    uint64_t v91 = *(void *)(v89 + 48);
    __chkstk_darwin(*((void *)&v348 + 1));
    uint64_t v92 = &v323 - 12;
    *(&v323 - sub_6C3C(v0 + 10) = v90;
    *(&v323 - sub_6C3C(v0 + 9) = v91;
    unint64_t v93 = 0xD000000000000019LL;
    unint64_t v94 = 0x800000000021D4F0LL;
    *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000019LL;
    *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D4F0LL;
    uint64_t v317 = v95;
    uint64_t v318 = v88;
    uint64_t v319 = a5;
    v320 = &v347;
    uint64_t v321 = 0LL;
    id v97 = v96;
LABEL_74:
    uint64_t v321 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
    uint64_t v322 = v92;
    uint64_t v319 = v93;
    v320 = (__int128 *)v94;
    uint64_t v317 = v90;
    uint64_t v318 = v91;
    id v185 = a6;
    uint64_t v186 = (uint64_t)v342;
LABEL_75:
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v185,  v186,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v317,  v318,  v319,  (uint64_t)v320,  v321,  (uint64_t)v322);
    swift_bridgeObjectRelease(v88);
    uint64_t v180 = v85;
    goto LABEL_76;
  }

  switch((unint64_t)v343)
  {
    case 1uLL:
      swift_bridgeObjectRelease(v53);
      BOOL v69 = INPlayMediaIntent.hasInvalidAMPToken()();
      if (v69)
      {
        uint64_t v70 = App.appIdentifier.getter(v69);
        if (v71)
        {
          unint64_t v72 = v71;
        }

        else
        {
          uint64_t v70 = 0LL;
          unint64_t v72 = 0xE000000000000000LL;
        }

        char v73 = static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v70, v72);
        swift_bridgeObjectRelease(v72);
        if ((v73 & 1) != 0)
        {
          sub_15A0A8(a5, v344, (uint64_t)a6, a7);
          return swift_bridgeObjectRelease(v64);
        }
      }

      uint64_t v172 = *(void *)(v341 + 120);
      unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      uint64_t v90 = *(void *)(v172 + 16);
      uint64_t v91 = *(void *)(v172 + 24);
      __chkstk_darwin(*((void *)&v348 + 1));
      uint64_t v85 = (uint64_t)v64;
      uint64_t v92 = &v323 - 12;
      *(&v323 - sub_6C3C(v0 + 10) = v90;
      *(&v323 - sub_6C3C(v0 + 9) = v91;
      unint64_t v93 = 0xD000000000000022LL;
      unint64_t v94 = 0x800000000021D760LL;
      *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000022LL;
      *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D760LL;
      uint64_t v317 = v173;
      uint64_t v318 = v88;
      uint64_t v319 = a5;
      v320 = &v347;
      uint64_t v321 = 0LL;
      id v175 = v174;
      goto LABEL_74;
    case 2uLL:
      int v343 = (uint64_t *)v63;
      uint64_t v107 = v51;
      unint64_t v108 = (unint64_t)v64;
      uint64_t v109 = a4;
      *(void *)&__int128 v347 = v344;
      uint64_t v110 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      unint64_t v111 = MediaIntentCommons.getMediaType()(v110, &protocol witness table for INPlayMediaIntent);
      if (v111 <= 0xF && ((1LL << v111) & 0x81C0) != 0)
      {
        swift_bridgeObjectRelease(v53);
        uint64_t v112 = sub_6C5C(&qword_2844D0);
        uint64_t v113 = swift_allocObject(v112, 80LL, 7LL);
        uint64_t v338 = a6;
        id v114 = (void *)v113;
        *(_OWORD *)(v113 + swift_weakDestroy(v0 + 16) = xmmword_214510;
        *(void *)(v113 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
        *(void *)(v113 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
        uint64_t v115 = v344;
        sub_30240();
        v114[9] = &type metadata for String;
        if (v117) {
          uint64_t v118 = v116;
        }
        else {
          uint64_t v118 = 0LL;
        }
        unint64_t v119 = 0xE000000000000000LL;
        if (v117) {
          unint64_t v119 = v117;
        }
        v114[6] = v118;
        v114[7] = v119;
        unint64_t v120 = sub_74D54((uint64_t)v114);
        uint64_t v121 = *(void *)(v341 + 120);
        *((void *)&v348 + 1) = v110;
        uint64_t v349 = &off_272BD0;
        *(void *)&__int128 v347 = v115;
        uint64_t v122 = *(void *)(v121 + 40);
        uint64_t v123 = *(void *)(v121 + 48);
        uint64_t v124 = __chkstk_darwin(v120);
        *(&v323 - sub_6C3C(v0 + 10) = v122;
        *(&v323 - sub_6C3C(v0 + 9) = v123;
        unint64_t v125 = v108;
        *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000026LL;
        *(&v323 - sub_6C3C(v0 + 7) = 0x8000000000221EB0LL;
        uint64_t v317 = v126;
        uint64_t v318 = v124;
        uint64_t v319 = a5;
        v320 = &v347;
        uint64_t v321 = 0LL;
        id v127 = v115;
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v338,  (uint64_t)v342,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v122,  v123,  0xD000000000000026LL,  0x8000000000221EB0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v323 - 12));
        unint64_t v128 = v120;
      }

      else
      {
        if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v344,  (uint64_t)&off_26A270) & 1) != 0)
        {
          uint64_t v192 = sub_6C5C(&qword_2844D0);
          uint64_t v193 = swift_allocObject(v192, 224LL, 7LL);
          uint64_t v194 = v193;
          *(_OWORD *)(v193 + swift_weakDestroy(v0 + 16) = xmmword_214FF0;
          *(void *)(v193 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
          *(void *)(v193 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
          if (v53) {
            uint64_t v195 = v107;
          }
          else {
            uint64_t v195 = 0LL;
          }
          unint64_t v196 = 0xE000000000000000LL;
          if (v53) {
            unint64_t v197 = v53;
          }
          else {
            unint64_t v197 = 0xE000000000000000LL;
          }
          *(void *)(v193 + 4sub_6C3C(v0 + 8) = v195;
          *(void *)(v193 + 56) = v197;
          *(void *)(v193 + 7sub_6C3C(v0 + 2) = &type metadata for String;
          *(void *)(v193 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
          uint64_t v198 = (uint64_t)v343;
          if (v108) {
            unint64_t v196 = v108;
          }
          else {
            uint64_t v198 = 0LL;
          }
          *(void *)(v193 + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
          *(void *)(v193 + 96) = v198;
          *(void *)(v193 + 10sub_6C3C(v0 + 4) = v196;
          *(void *)(v193 + 1sub_6C3C(v0 + 20) = &type metadata for String;
          *(void *)(v193 + 12sub_6C3C(v0 + 8) = 0x6574656D61726170LL;
          *(void *)(v193 + 136) = 0xE900000000000072LL;
          *(void *)(v193 + 14sub_6C3C(v0 + 4) = a3;
          *(void *)(v193 + 15sub_6C3C(v0 + 2) = v109;
          *(void *)(v193 + 16sub_6C3C(v0 + 8) = &type metadata for String;
          strcpy((char *)(v193 + 176), "isPersonalized");
          *(_BYTE *)(v193 + 191) = -18;
          swift_bridgeObjectRetain(v109);
          swift_bridgeObjectRetain(v108);
          id v199 = [v344 privatePlayMediaIntentData];
          id v200 = [v199 isPersonalizedRequest];

          sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
          v201.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
          unint64_t v125 = v108;
          if (v200)
          {
            id v202 = v200;
            char v203 = static NSObject.== infix(_:_:)(v202, v201.super.super.isa);
          }

          else
          {
            char v203 = 0;
          }

          *(void *)(v194 + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
          *(_BYTE *)(v194 + 19sub_6C3C(v0 + 2) = v203 & 1;
          unint64_t v209 = sub_74D54(v194);
          uint64_t v229 = *(void *)(v341 + 120);
          *((void *)&v348 + 1) = v110;
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v210 = *(void *)(v229 + 40);
          uint64_t v211 = *(void *)(v229 + 48);
          uint64_t v230 = __chkstk_darwin(v209);
          char v213 = &v323 - 12;
          *(&v323 - sub_6C3C(v0 + 10) = v210;
          *(&v323 - sub_6C3C(v0 + 9) = v211;
          uint64_t v214 = 0xD000000000000019LL;
          uint64_t v215 = 0x800000000021D4F0LL;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000019LL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D4F0LL;
          uint64_t v317 = v231;
          uint64_t v318 = v230;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v233 = v232;
        }

        else
        {
          swift_bridgeObjectRelease(v53);
          uint64_t v208 = *(void *)(v341 + 120);
          unint64_t v209 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          *((void *)&v348 + 1) = v110;
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v210 = *(void *)(v208 + 16);
          uint64_t v211 = *(void *)(v208 + 24);
          uint64_t v212 = __chkstk_darwin(v209);
          char v213 = &v323 - 12;
          *(&v323 - sub_6C3C(v0 + 10) = v210;
          *(&v323 - sub_6C3C(v0 + 9) = v211;
          unint64_t v125 = v108;
          uint64_t v214 = 0xD000000000000029LL;
          uint64_t v215 = 0x800000000021D700LL;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000029LL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D700LL;
          uint64_t v317 = v216;
          uint64_t v318 = v212;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v218 = v217;
        }

        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)a6,  (uint64_t)v342,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v210,  v211,  v214,  v215,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v213);
        unint64_t v128 = v209;
      }

      swift_bridgeObjectRelease(v128);
      swift_bridgeObjectRelease(v125);
      return sub_1F6CC((uint64_t)&v347, &qword_283FE8);
    case 3uLL:
      swift_bridgeObjectRelease(v53);
      uint64_t v129 = sub_6C5C(&qword_2844D0);
      uint64_t v130 = swift_allocObject(v129, 80LL, 7LL);
      *(_OWORD *)(v130 + swift_weakDestroy(v0 + 16) = xmmword_214510;
      *(void *)(v130 + 3sub_6C3C(v0 + 2) = 0x707954616964656DLL;
      *(void *)(v130 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE900000000000065LL;
      uint64_t v131 = INPlayMediaIntent.firstMediaItemType()(v130);
      id v132 = (id)INMediaItemTypeGetName(v131);
      if (v132)
      {
        uint64_t v133 = v132;
        uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
        unint64_t v136 = v135;

        unint64_t v137 = (uint64_t *)(v130 + 48);
        *(void *)(v130 + 7sub_6C3C(v0 + 2) = &type metadata for String;
        uint64_t v85 = (uint64_t)v64;
        if (v136)
        {
          *unint64_t v137 = v134;
          goto LABEL_73;
        }
      }

      else
      {
        uint64_t v85 = (uint64_t)v64;
        unint64_t v137 = (uint64_t *)(v130 + 48);
        *(void *)(v130 + 7sub_6C3C(v0 + 2) = &type metadata for String;
      }

      *unint64_t v137 = 0LL;
      unint64_t v136 = 0xE000000000000000LL;
LABEL_73:
      *(void *)(v130 + 56) = v136;
      unint64_t v88 = sub_74D54(v130);
      uint64_t v181 = *(void *)(v341 + 120);
      *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      uint64_t v90 = *(void *)(v181 + 40);
      uint64_t v91 = *(void *)(v181 + 48);
      __chkstk_darwin(*((void *)&v348 + 1));
      uint64_t v92 = &v323 - 12;
      *(&v323 - sub_6C3C(v0 + 10) = v90;
      *(&v323 - sub_6C3C(v0 + 9) = v91;
      unint64_t v93 = 0xD000000000000029LL;
      unint64_t v94 = 0x800000000021D6D0LL;
      *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000029LL;
      *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D6D0LL;
      uint64_t v317 = v182;
      uint64_t v318 = v88;
      uint64_t v319 = a5;
      v320 = &v347;
      uint64_t v321 = 0LL;
      id v184 = v183;
      goto LABEL_74;
    case 4uLL:
      swift_bridgeObjectRelease(v53);
      uint64_t v138 = *(void *)(v341 + 120);
      unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      uint64_t v90 = *(void *)(v138 + 16);
      uint64_t v91 = *(void *)(v138 + 24);
      __chkstk_darwin(*((void *)&v348 + 1));
      uint64_t v85 = (uint64_t)v64;
      uint64_t v92 = &v323 - 12;
      *(&v323 - sub_6C3C(v0 + 10) = v90;
      *(&v323 - sub_6C3C(v0 + 9) = v91;
      unint64_t v93 = 0xD00000000000002CLL;
      unint64_t v94 = 0x800000000021D790LL;
      *(&v323 - sub_6C3C(v0 + 8) = 0xD00000000000002CLL;
      *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D790LL;
      uint64_t v317 = v139;
      uint64_t v318 = v88;
      uint64_t v319 = a5;
      v320 = &v347;
      uint64_t v321 = 0LL;
      id v141 = v140;
      goto LABEL_74;
    case 5uLL:
      swift_bridgeObjectRelease(v53);
      unint64_t v142 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      id v143 = v344;
      sub_45FD4(v142, a5, (uint64_t)&v347, (uint64_t)a6, a7);
      swift_bridgeObjectRelease(v142);
      swift_bridgeObjectRelease(v64);
      return sub_1F6CC((uint64_t)&v347, &qword_283FE8);
    case 6uLL:
      swift_bridgeObjectRelease(v53);
      type metadata accessor for ErrorFilingProvider(0LL);
      uint64_t v144 = static ErrorFilingProvider.getErrorFilingInfo()();
      uint64_t v145 = *(void *)(v341 + 120);
      uint64_t v146 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      int v343 = &v323;
      *((void *)&v348 + 1) = v146;
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      uint64_t v147 = *(void *)(v145 + 40);
      uint64_t v148 = *(void *)(v145 + 48);
      __chkstk_darwin(v146);
      uint64_t v149 = a5;
      uint64_t v151 = v150;
      *(&v323 - sub_6C3C(v0 + 10) = v147;
      *(&v323 - sub_6C3C(v0 + 9) = v148;
      *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000026LL;
      *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D730LL;
      uint64_t v317 = v152;
      uint64_t v318 = v144;
      uint64_t v319 = v149;
      v320 = &v347;
      uint64_t v321 = 0LL;
      id v154 = v153;
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)a6,  a7,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v147,  v148,  0xD000000000000026LL,  0x800000000021D730LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v323 - 12));
      swift_bridgeObjectRelease(v144);
      uint64_t v155 = sub_1F6CC((uint64_t)&v347, &qword_283FE8);
      static ErrorFilingProvider.clearErrorFilingInfo()(v155);
      return swift_bridgeObjectRelease(v151);
    case 7uLL:
      uint64_t v157 = a7;
      uint64_t v324 = (uint64_t)v64;
      swift_bridgeObjectRelease(v53);
      Swift::Bool v158 = INPlayMediaIntent.hasAMPError()();
      uint64_t v159 = *(void *)(v341 + 120);
      unint64_t v160 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      uint64_t v161 = *(void *)(v159 + 16);
      uint64_t v162 = *(void *)(v159 + 24);
      __chkstk_darwin(*((void *)&v348 + 1));
      *(&v323 - sub_6C3C(v0 + 10) = v161;
      *(&v323 - sub_6C3C(v0 + 9) = v162;
      if (v158)
      {
        unint64_t v165 = 0x726F727245706D41LL;
        unint64_t v166 = 0xE800000000000000LL;
        *(&v323 - sub_6C3C(v0 + 8) = 0x726F727245706D41LL;
        *(&v323 - sub_6C3C(v0 + 7) = 0xE800000000000000LL;
      }

      else
      {
        unint64_t v165 = 0xD000000000000027LL;
        unint64_t v166 = 0x800000000021D6A0LL;
        *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000027LL;
        *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D6A0LL;
      }

      uint64_t v317 = v163;
      uint64_t v318 = v160;
      uint64_t v319 = a5;
      v320 = &v347;
      uint64_t v321 = 0LL;
      id v167 = v164;
      uint64_t v321 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
      uint64_t v322 = &v323 - 12;
      uint64_t v319 = v165;
      v320 = (__int128 *)v166;
      uint64_t v317 = v161;
      uint64_t v318 = v162;
      uint64_t v178 = a6;
      uint64_t v179 = v157;
      goto LABEL_70;
    case 8uLL:
      swift_bridgeObjectRelease(v53);
      uint64_t v168 = *(void *)(v341 + 120);
      unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
      *((void *)&v348 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v349 = &off_272BD0;
      *(void *)&__int128 v347 = v344;
      uint64_t v90 = *(void *)(v168 + 16);
      uint64_t v91 = *(void *)(v168 + 24);
      __chkstk_darwin(*((void *)&v348 + 1));
      uint64_t v85 = (uint64_t)v64;
      uint64_t v92 = &v323 - 12;
      *(&v323 - sub_6C3C(v0 + 10) = v90;
      *(&v323 - sub_6C3C(v0 + 9) = v91;
      unint64_t v93 = 0xD000000000000026LL;
      unint64_t v94 = 0x800000000021D670LL;
      *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000026LL;
      *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D670LL;
      uint64_t v317 = v169;
      uint64_t v318 = v88;
      uint64_t v319 = a5;
      v320 = &v347;
      uint64_t v321 = 0LL;
      id v171 = v170;
      goto LABEL_74;
    default:
      if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonAppNotAvailable == v343)
      {
        swift_bridgeObjectRelease(v53);
        uint64_t v98 = a7;
        unint64_t v99 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v349 = 0LL;
        __int128 v347 = 0u;
        __int128 v348 = 0u;
        uint64_t v100 = __chkstk_darwin(v99);
        unint64_t v103 = &v323 - 12;
        *(&v323 - sub_6C3C(v0 + 10) = v101;
        *(&v323 - sub_6C3C(v0 + 9) = v102;
        unint64_t v104 = 0xD000000000000024LL;
        unint64_t v105 = 0x800000000021D640LL;
        *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000024LL;
        *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D640LL;
        uint64_t v317 = v106;
        uint64_t v318 = v100;
        uint64_t v319 = a5;
        v320 = &v347;
        uint64_t v321 = 0LL;
LABEL_65:
        uint64_t v321 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
        uint64_t v322 = v103;
        uint64_t v319 = v104;
        v320 = (__int128 *)v105;
        uint64_t v317 = v101;
        uint64_t v318 = v102;
        goto LABEL_66;
      }

      if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonAppNotConfigured == v343)
      {
        swift_bridgeObjectRelease(v53);
        uint64_t v98 = a7;
        unint64_t v99 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v349 = 0LL;
        __int128 v347 = 0u;
        __int128 v348 = 0u;
        uint64_t v176 = __chkstk_darwin(v99);
        unint64_t v103 = &v323 - 12;
        *(&v323 - sub_6C3C(v0 + 10) = v101;
        *(&v323 - sub_6C3C(v0 + 9) = v102;
        unint64_t v104 = 0xD000000000000025LL;
        unint64_t v105 = 0x800000000021D610LL;
        *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000025LL;
        *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D610LL;
        uint64_t v317 = v177;
        uint64_t v318 = v176;
        uint64_t v319 = a5;
        v320 = &v347;
        uint64_t v321 = 0LL;
        goto LABEL_65;
      }

      if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonAppAccountFailure != v343)
      {
        if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonAppDoesntSupportIntent == v343)
        {
          swift_bridgeObjectRelease(v53);
          uint64_t v204 = *(void *)(v341 + 120);
          unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          *((void *)&v348 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_285320,  &OBJC_CLASS___INPlayMediaIntent_ptr);
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v90 = *(void *)(v204 + 16);
          uint64_t v91 = *(void *)(v204 + 24);
          __chkstk_darwin(*((void *)&v348 + 1));
          uint64_t v85 = (uint64_t)v64;
          uint64_t v92 = &v323 - 12;
          *(&v323 - sub_6C3C(v0 + 10) = v90;
          *(&v323 - sub_6C3C(v0 + 9) = v91;
          unint64_t v93 = 0xD00000000000002BLL;
          unint64_t v94 = 0x800000000021D5B0LL;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD00000000000002BLL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D5B0LL;
          uint64_t v317 = v205;
          uint64_t v318 = v88;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v207 = v206;
          goto LABEL_74;
        }

        uint64_t v338 = a6;
        if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonPlaybackDeviceNotFound == v343)
        {
          swift_bridgeObjectRelease(v53);
          uint64_t v219 = a7;
          uint64_t v220 = *(void *)(v341 + 120);
          unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          *((void *)&v348 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_285320,  &OBJC_CLASS___INPlayMediaIntent_ptr);
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v221 = *(void *)(v220 + 40);
          uint64_t v222 = *(void *)(v220 + 48);
          __chkstk_darwin(*((void *)&v348 + 1));
          uint64_t v85 = (uint64_t)v64;
          uint64_t v223 = &v323 - 12;
          *(&v323 - sub_6C3C(v0 + 10) = v221;
          *(&v323 - sub_6C3C(v0 + 9) = v222;
          unint64_t v224 = 0xD00000000000002BLL;
          unint64_t v225 = 0x8000000000221E60LL;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD00000000000002BLL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x8000000000221E60LL;
          uint64_t v317 = v226;
          uint64_t v318 = v88;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v228 = v227;
LABEL_98:
          uint64_t v321 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
          uint64_t v322 = v223;
          uint64_t v319 = v224;
          v320 = (__int128 *)v225;
          uint64_t v317 = v221;
          uint64_t v318 = v222;
          id v185 = v338;
          uint64_t v186 = v219;
          goto LABEL_75;
        }

        if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonEmptyLibrary == v343)
        {
          swift_bridgeObjectRelease(v53);
          uint64_t v234 = sub_6C5C(&qword_2844D0);
          uint64_t v235 = swift_allocObject(v234, 128LL, 7LL);
          *(_OWORD *)(v235 + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
          *(void *)(v235 + 3sub_6C3C(v0 + 2) = 0x736163646F507369LL;
          *(void *)(v235 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE900000000000074LL;
          uint64_t v236 = v344;
          *(void *)&__int128 v347 = v344;
          uint64_t v237 = a7;
          uint64_t v238 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
          unint64_t v239 = MediaIntentCommons.getMediaType()(v238, &protocol witness table for INPlayMediaIntent);
          *(_BYTE *)(v235 + 4sub_6C3C(v0 + 8) = (v239 < 0x10) & (0x81C0u >> v239);
          *(void *)(v235 + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
          *(void *)(v235 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x656C746974LL;
          *(void *)(v235 + 8sub_6C3C(v0 + 8) = 0xE500000000000000LL;
          sub_30240();
          *(void *)(v235 + 1sub_6C3C(v0 + 20) = &type metadata for String;
          if (v241) {
            uint64_t v242 = v240;
          }
          else {
            uint64_t v242 = 0LL;
          }
          unint64_t v243 = 0xE000000000000000LL;
          if (v241) {
            unint64_t v243 = v241;
          }
          *(void *)(v235 + 96) = v242;
          *(void *)(v235 + 10sub_6C3C(v0 + 4) = v243;
          unint64_t v244 = sub_74D54(v235);
          uint64_t v245 = *(void *)(v341 + 120);
          *((void *)&v348 + 1) = v238;
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v236;
          uint64_t v246 = *(void *)(v245 + 40);
          uint64_t v247 = *(void *)(v245 + 48);
          uint64_t v248 = __chkstk_darwin(v244);
          uint64_t v249 = a5;
          uint64_t v251 = v250;
          *(&v323 - sub_6C3C(v0 + 10) = v246;
          *(&v323 - sub_6C3C(v0 + 9) = v247;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000021LL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x8000000000221E30LL;
          uint64_t v317 = v252;
          uint64_t v318 = v248;
          uint64_t v319 = v249;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v253 = v236;
          sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v338,  v237,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ ena bleTelemetry=YES ",  125LL,  2,  v246,  v247,  0xD000000000000021LL,  0x8000000000221E30LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v323 - 12));
          swift_bridgeObjectRelease(v244);
          uint64_t v180 = v251;
LABEL_76:
          swift_bridgeObjectRelease(v180);
          return sub_1F6CC((uint64_t)&v347, &qword_283FE8);
        }

        if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonCreateRadioFailed == v343)
        {
          swift_bridgeObjectRelease(v53);
          uint64_t v219 = a7;
          uint64_t v254 = *(void *)(v341 + 120);
          unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          *((void *)&v348 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_285320,  &OBJC_CLASS___INPlayMediaIntent_ptr);
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v221 = *(void *)(v254 + 40);
          uint64_t v222 = *(void *)(v254 + 48);
          __chkstk_darwin(*((void *)&v348 + 1));
          uint64_t v85 = (uint64_t)v64;
          uint64_t v223 = &v323 - 12;
          *(&v323 - sub_6C3C(v0 + 10) = v221;
          *(&v323 - sub_6C3C(v0 + 9) = v222;
          unint64_t v224 = 0xD000000000000026LL;
          unint64_t v225 = 0x8000000000221E00LL;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000026LL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x8000000000221E00LL;
          uint64_t v317 = v255;
          uint64_t v318 = v88;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v257 = v256;
          goto LABEL_98;
        }

        if ((uint64_t *)_INPlayMediaMediaItemUnsupportedReasonUnsupportedPlaybackQueueLocation == v343)
        {
          swift_bridgeObjectRelease(v53);
          uint64_t v219 = a7;
          uint64_t v258 = *(void *)(v341 + 120);
          unint64_t v88 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          *((void *)&v348 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_285320,  &OBJC_CLASS___INPlayMediaIntent_ptr);
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v221 = *(void *)(v258 + 40);
          uint64_t v222 = *(void *)(v258 + 48);
          __chkstk_darwin(*((void *)&v348 + 1));
          uint64_t v85 = (uint64_t)v64;
          uint64_t v223 = &v323 - 12;
          *(&v323 - sub_6C3C(v0 + 10) = v221;
          *(&v323 - sub_6C3C(v0 + 9) = v222;
          unint64_t v224 = 0xD000000000000035LL;
          unint64_t v225 = 0x8000000000221DC0LL;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000035LL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x8000000000221DC0LL;
          uint64_t v317 = v259;
          uint64_t v318 = v88;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v261 = v260;
          goto LABEL_98;
        }

        int v343 = (uint64_t *)v63;
        BOOL v262 = INPlayMediaIntent.isSkipWholeLibraryFallbackForPlayThis()();
        uint64_t v324 = (uint64_t)v64;
        if (v262)
        {
          uint64_t v263 = a7;
          swift_bridgeObjectRelease(v53);
          uint64_t v264 = v334;
          uint64_t v265 = v339;
          uint64_t v266 = v336(v334, v335, v339);
          uint64_t v267 = (os_log_s *)Logger.logObject.getter(v266);
          os_log_type_t v268 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v267, v268))
          {
            uint64_t v269 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v269 = 0;
            _os_log_impl( &dword_0,  v267,  v268,  "Overriding not-found dialog for play this. Returning special dialog",  v269,  2u);
            swift_slowDealloc(v269, -1LL, -1LL);
          }

          v340(v264, v265);
          uint64_t v270 = *(void *)(v341 + 120);
          unint64_t v160 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
          *((void *)&v348 + 1) = sub_1641C( 0LL,  (unint64_t *)&qword_285320,  &OBJC_CLASS___INPlayMediaIntent_ptr);
          uint64_t v349 = &off_272BD0;
          *(void *)&__int128 v347 = v344;
          uint64_t v271 = *(void *)(v270 + 40);
          uint64_t v272 = *(void *)(v270 + 48);
          __chkstk_darwin(*((void *)&v348 + 1));
          *(&v323 - sub_6C3C(v0 + 10) = v271;
          *(&v323 - sub_6C3C(v0 + 9) = v272;
          *(&v323 - sub_6C3C(v0 + 8) = 0xD00000000000002BLL;
          *(&v323 - sub_6C3C(v0 + 7) = 0x8000000000221D90LL;
          uint64_t v317 = v273;
          uint64_t v318 = v160;
          uint64_t v319 = a5;
          v320 = &v347;
          uint64_t v321 = 0LL;
          id v275 = v274;
          uint64_t v321 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
          uint64_t v322 = &v323 - 12;
          uint64_t v319 = 0xD00000000000002BLL;
          v320 = (__int128 *)0x8000000000221D90LL;
          uint64_t v317 = v271;
          uint64_t v318 = v272;
          uint64_t v178 = v338;
          uint64_t v179 = v263;
LABEL_70:
          sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v178,  v179,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ ena bleTelemetry=YES ",  125LL,  2,  v317,  v318,  v319,  (uint64_t)v320,  v321,  (uint64_t)v322);
          swift_bridgeObjectRelease(v160);
          uint64_t v180 = v324;
          goto LABEL_76;
        }

        uint64_t v334 = v51;
        uint64_t v276 = App.appIdentifier.getter(v262);
        uint64_t v278 = v277;
        uint64_t v279 = static BundleIdentifiers.music.getter(v276);
        uint64_t v281 = v280;
        uint64_t v337 = a5;
        uint64_t v323 = a4;
        if (v278)
        {
          if (v276 == v279 && v278 == v280)
          {
            swift_bridgeObjectRelease(v278);
            swift_bridgeObjectRelease(v281);
          }

          else
          {
            char v282 = _stringCompareWithSmolCheck(_:_:expecting:)(v276, v278);
            swift_bridgeObjectRelease(v278);
            swift_bridgeObjectRelease(v281);
            if ((v282 & 1) == 0) {
              goto LABEL_128;
            }
          }

          if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v344,  (uint64_t)&off_26A2A0) & 1) != 0)
          {
            uint64_t v283 = v344;
            uint64_t v284 = v336((uint64_t)v326, v335, v339);
            unint64_t v285 = (os_log_s *)Logger.logObject.getter(v284);
            os_log_type_t v286 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v285, v286))
            {
              uint64_t v287 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v287 = 0;
              _os_log_impl(&dword_0, v285, v286, "Overriding not-found dialog for non subscriber", v287, 2u);
              swift_slowDealloc(v287, -1LL, -1LL);
            }

            v340((uint64_t)v326, v339);
            uint64_t v288 = 0xD000000000000012LL;
            uint64_t v322 = v342;
            uint64_t v321 = v338;
            uint64_t v289 = 0x8000000000221D70LL;
            uint64_t v290 = v337;
            uint64_t v291 = v283;
            goto LABEL_142;
          }
        }

        else
        {
          swift_bridgeObjectRelease(v280);
        }

LABEL_128:
        uint64_t v292 = objc_opt_self(&OBJC_CLASS___INPlayMediaMediaItemResolutionResult);
        uint64_t v293 = v331;
        if (swift_dynamicCastObjCClass(v331, v292))
        {
          uint64_t v294 = v344;
          id v295 = v293;
          Swift::String v296 = INPlayMediaMediaItemResolutionResult.getAndClearExtraErrorInfo()();
          uint64_t v297 = (uint64_t)v327;
          PlaybackCode.init(rawValue:)(v296._countAndFlagsBits, v296._object);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v332 + 48))(v297, 1LL, v333) == 1)
          {
            sub_1F6CC(v297, &qword_28B618);
          }

          else
          {
            uint64_t v307 = v329;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v332 + 32))(v329, v297, v333);
            type metadata accessor for PFSQHandler(0LL);
            if ((static PFSQHandler.isPFSQTerminatingError(playbackCode:)(v307) & 1) != 0)
            {
              uint64_t v308 = *(void **)(v341 + 120);
              uint64_t v309 = (void *)sub_74D54((uint64_t)_swiftEmptyArrayStorage);
              sub_1E1F70(v309, v308, v329, v337, v294, (uint64_t)v338, (uint64_t)v342);
              (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v329, v333);

              swift_bridgeObjectRelease(v309);
              uint64_t v316 = v324;
LABEL_143:
              swift_bridgeObjectRelease(v316);
              return swift_bridgeObjectRelease(v53);
            }

            (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v329, v333);
          }

          uint64_t v311 = v336((uint64_t)v330, v335, v339);
          v312 = (os_log_s *)Logger.logObject.getter(v311);
          os_log_type_t v313 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v312, v313))
          {
            uint64_t v314 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v314 = 0;
            _os_log_impl( &dword_0,  v312,  v313,  "PlayeMediaDialogProvider#chooseUnsupportedReason result is not PFSQ terminating...",  v314,  2u);
            swift_slowDealloc(v314, -1LL, -1LL);
          }

          uint64_t v310 = &v350;
        }

        else
        {
          uint64_t v294 = v344;
          v336((uint64_t)v328, v335, v339);
          id v298 = v293;
          v299 = (os_log_s *)Logger.logObject.getter(v298);
          os_log_type_t v300 = static os_log_type_t.info.getter(v299);
          if (os_log_type_enabled(v299, v300))
          {
            uint64_t v301 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v302 = swift_slowAlloc(32LL, -1LL);
            *(void *)&__int128 v347 = v302;
            *(_DWORD *)uint64_t v301 = 136315138;
            id v336 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v301 + 4);
            uint64_t ObjectType = swift_getObjectType(v298);
            uint64_t v303 = sub_6C5C(&qword_28B628);
            uint64_t v304 = String.init<A>(describing:)(&ObjectType, v303);
            unint64_t v306 = v305;
            uint64_t ObjectType = sub_6978(v304, v305, (uint64_t *)&v347);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v347);

            swift_bridgeObjectRelease(v306);
            _os_log_impl( &dword_0,  v299,  v300,  "PlayeMediaDialogProvider#chooseUnsupportedReason intentResolutionResult type not being handled (yet) today: %s",  v301,  0xCu);
            swift_arrayDestroy(v302, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v302, -1LL, -1LL);
            swift_slowDealloc(v301, -1LL, -1LL);
          }

          else
          {
          }

          uint64_t v310 = (char *)&v348 + 8;
        }

        v340(*((void *)v310 - 32), v339);
        uint64_t v322 = v342;
        uint64_t v321 = v338;
        uint64_t v290 = v337;
        uint64_t v291 = v294;
        uint64_t v288 = a3;
        uint64_t v289 = v323;
LABEL_142:
        uint64_t v315 = v324;
        sub_1599B4(v290, v291, v288, v289, v334, v53, (uint64_t)v343, v324, (uint64_t)v321, (uint64_t)v322);
        uint64_t v316 = v315;
        goto LABEL_143;
      }

      swift_bridgeObjectRelease(v53);
      uint64_t v187 = sub_6C5C(&qword_2844D0);
      uint64_t inited = swift_initStackObject(v187, v345);
      *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
      uint64_t v98 = a7;
      *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD000000000000013LL;
      *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x8000000000221E90LL;
      unsigned __int8 v189 = sub_181DE4();
      *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
      *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v189 & 1;
      unint64_t v99 = sub_74D54(inited);
      uint64_t v349 = 0LL;
      __int128 v347 = 0u;
      __int128 v348 = 0u;
      __chkstk_darwin(v99);
      *(&v323 - sub_6C3C(v0 + 10) = v191;
      *(&v323 - sub_6C3C(v0 + 9) = v190;
      *(&v323 - sub_6C3C(v0 + 8) = 0xD000000000000026LL;
      *(&v323 - sub_6C3C(v0 + 7) = 0x800000000021D5E0LL;
      uint64_t v321 = (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4;
      uint64_t v322 = &v323 - 12;
      uint64_t v319 = 0xD000000000000026LL;
      v320 = (__int128 *)0x800000000021D5E0LL;
      uint64_t v317 = v191;
      uint64_t v318 = v190;
LABEL_66:
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)a6,  v98,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v317,  v318,  v319,  (uint64_t)v320,  v321,  (uint64_t)v322);
      sub_1F6CC((uint64_t)&v347, &qword_283FE8);
      swift_bridgeObjectRelease(v99);
      return swift_bridgeObjectRelease(v64);
  }

uint64_t sub_1599B4( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a1;
  uint64_t v37 = a10;
  uint64_t v36 = a9;
  uint64_t v15 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v15, &v41);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_219310;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  uint64_t v17 = sub_6C5C(&qword_284600);
  uint64_t v18 = ((uint64_t (*)(void))Optional._bridgeToObjectiveC())();
  uint64_t ObjectType = swift_getObjectType();
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v18;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = ObjectType;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  v38[0] = a7;
  v38[1] = a8;
  uint64_t v20 = Optional._bridgeToObjectiveC()(v17);
  uint64_t v21 = swift_getObjectType();
  *(void *)(inited + 96) = v20;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = v21;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x6574656D61726170LL;
  *(void *)(inited + 136) = 0xE900000000000072LL;
  *(void *)(inited + 14sub_6C3C(v0 + 4) = a3;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = a4;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  strcpy((char *)(inited + 176), "isPersonalized");
  *(_BYTE *)(inited + 191) = -18;
  swift_bridgeObjectRetain(a4);
  id v22 = [a2 privatePlayMediaIntentData];
  id v23 = [v22 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v24.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v23)
  {
    id v25 = v23;
    char v26 = static NSObject.== infix(_:_:)(v25, v24.super.super.isa);
  }

  else
  {
    char v26 = 0;
  }

  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v26 & 1;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = 0x6563617073LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE500000000000000LL;
  *(void *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 32LL;
  *(void *)(inited + 24sub_6C3C(v0 + 8) = 0xE100000000000000LL;
  *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for String;
  *(void *)(inited + 27sub_6C3C(v0 + 2) = 0x77745F6563617073LL;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE90000000000006FLL;
  *(void *)(inited + 28sub_6C3C(v0 + 8) = 32LL;
  *(void *)(inited + 296) = 0xE100000000000000LL;
  unint64_t v27 = sub_74D54(inited);
  uint64_t v28 = *(void *)(v34[12] + 120LL);
  uint64_t v39 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v40 = &off_272BD0;
  v38[0] = a2;
  uint64_t v29 = *(void *)(v28 + 40);
  uint64_t v30 = *(void *)(v28 + 48);
  __chkstk_darwin(v39);
  _OWORD v34[2] = v29;
  v34[3] = v30;
  v34[4] = 0xD000000000000019LL;
  void v34[5] = 0x800000000021D4F0LL;
  v34[6] = v31;
  v34[7] = v27;
  v34[8] = v35;
  v34[9] = v38;
  v34[10] = 0LL;
  id v32 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v36,  v37,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v29,  v30,  0xD000000000000019LL,  0x800000000021D4F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v34);
  swift_bridgeObjectRelease(v27);
  return sub_1F6CC((uint64_t)v38, &qword_283FE8);
}

uint64_t sub_159D00( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t (*)(), uint64_t), char **a9)
{
  return sub_15C384(a1, a2, a3, a4, a5, a8, a9);
}

uint64_t sub_159D0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v9, v30);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6F50656D6F487369LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE900000000000064LL;
  char v11 = static SiriAudioEnvironment.isHomePod.getter(inited);
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v11 & 1;
  unint64_t v12 = sub_74D54(inited);
  uint64_t v13 = *(void **)(v4 + 120);
  v29[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v29[4] = &off_272BD0;
  uint64_t v14 = v13[4];
  uint64_t v15 = v13[5];
  uint64_t v16 = v13[6];
  uint64_t v20 = v15;
  uint64_t v21 = v16;
  unint64_t v22 = 0xD000000000000043LL;
  unint64_t v23 = 0x8000000000221D20LL;
  uint64_t v24 = v14;
  unint64_t v25 = v12;
  uint64_t v26 = a1;
  unint64_t v27 = v29;
  uint64_t v28 = 0LL;
  v29[0] = a2;
  id v17 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v15,  v16,  0xD000000000000043LL,  0x8000000000221D20LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v19);
  swift_bridgeObjectRelease(v12);
  return sub_1F6CC((uint64_t)v29, &qword_283FE8);
}

id sub_159E80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  v32[0] = a4;
  uint64_t v14 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v15 = MediaIntentCommons.getMediaType()(v14, &protocol witness table for INPlayMediaIntent);
  uint64_t v31 = a5;
  if (!v15)
  {
    uint64_t v18 = 0LL;
    unint64_t v20 = 0xE000000000000000LL;
    goto LABEL_5;
  }

  id result = (id)INMediaItemTypeGetName(v15);
  if (result)
  {
    id v17 = result;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    unint64_t v20 = v19;

LABEL_5:
    uint64_t v21 = sub_6C5C(&qword_2844D0);
    uint64_t inited = swift_initStackObject(v21, v33);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_2160E0;
    *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6574656D61726170LL;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE900000000000072LL;
    *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
    *(void *)(inited + 56) = a3;
    *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
    *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x707954616964656DLL;
    *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for String;
    *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE900000000000065LL;
    *(void *)(inited + 96) = v18;
    *(void *)(inited + 10sub_6C3C(v0 + 4) = v20;
    swift_bridgeObjectRetain(a3);
    unint64_t v23 = sub_74D54(inited);
    uint64_t v24 = *(void *)(v7 + 120);
    void v32[3] = v14;
    v32[4] = &off_272BD0;
    v32[0] = a4;
    uint64_t v25 = *(void *)(v24 + 40);
    uint64_t v26 = *(void *)(v24 + 48);
    uint64_t v27 = __chkstk_darwin(v23);
    _OWORD v30[2] = v25;
    v30[3] = v26;
    v30[4] = 0xD000000000000012LL;
    void v30[5] = 0x800000000021D7E0LL;
    void v30[6] = v28;
    v30[7] = v27;
    v30[8] = a1;
    v30[9] = v32;
    v30[10] = 0LL;
    id v29 = a4;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v31,  a6,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v25,  v26,  0xD000000000000012LL,  0x800000000021D7E0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v30);
    swift_bridgeObjectRelease(v23);
    return (id)sub_1F6CC((uint64_t)v32, &qword_283FE8);
  }

  __break(1u);
  return result;
}

void sub_15A0A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v321 = a4;
  uint64_t v320 = a3;
  uint64_t v335 = a2;
  uint64_t v319 = a1;
  uint64_t v4 = type metadata accessor for Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors(0LL);
  uint64_t v338 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  os_log_type_t v300 = (char *)&v296 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v301 = (char *)&v296 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v329 = (char *)&v296 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v330 = (char *)&v296 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v314 = (char *)&v296 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v296 - v15;
  uint64_t v17 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v332 = *(void (**)(uint64_t, uint64_t))(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v307 = (char *)&v296 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v324 = sub_6C5C(&qword_28B610);
  __chkstk_darwin(v324);
  uint64_t v333 = (char **)((char *)&v296 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v323 = type metadata accessor for PlaybackCodeAndDescription(0LL);
  uint64_t v322 = *(void *)(v323 - 8);
  __chkstk_darwin(v323);
  uint64_t v310 = (char *)&v296 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_6C5C(&qword_28A680);
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v296 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_28B618);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v312 = (uint64_t)&v296 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  id v29 = (char *)&v296 - v28;
  __chkstk_darwin(v27);
  unint64_t v331 = (unint64_t)&v296 - v30;
  uint64_t v31 = sub_6C5C(&qword_28B5E8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v306 = (uint64_t)&v296 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v297 = (uint64_t)&v296 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v303 = (uint64_t)&v296 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  os_log_type_t v313 = (char *)&v296 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v315 = (uint64_t)&v296 - v41;
  __chkstk_darwin(v40);
  unint64_t v43 = (char *)&v296 - v42;
  uint64_t v44 = type metadata accessor for Logger(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = __chkstk_darwin(v44);
  v299 = (char *)&v296 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = __chkstk_darwin(v46);
  unint64_t v305 = (char *)&v296 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  Swift::String v296 = (char *)&v296 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  id v298 = (char *)&v296 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v308 = (char *)&v296 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v302 = (char *)&v296 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v311 = (char *)&v296 - v59;
  __chkstk_darwin(v58);
  id v61 = (char *)&v296 - v60;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v62 = sub_6960(v44, (uint64_t)qword_2969C8);
  char v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 16);
  uint64_t v325 = v62;
  uint64_t v336 = v44;
  uint64_t v326 = v63;
  uint64_t v64 = ((uint64_t (*)(char *))v63)(v61);
  id v65 = (os_log_s *)Logger.logObject.getter(v64);
  os_log_type_t v66 = static os_log_type_t.debug.getter();
  BOOL v67 = os_log_type_enabled(v65, v66);
  uint64_t v334 = v43;
  if (v67)
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_0, v65, v66, "PlayeMediaDialogProvider#invalidTokensHelper", v68, 2u);
    BOOL v69 = v68;
    unint64_t v43 = v334;
    swift_slowDealloc(v69, -1LL, -1LL);
  }

  uint64_t v327 = *(void (**)(char *, uint64_t))(v45 + 8);
  v327(v61, v336);
  uint64_t v70 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v70, v345);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x6F50656D6F487369LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE900000000000064LL;
  char v72 = static SiriAudioEnvironment.isHomePod.getter(inited);
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v72 & 1;
  v328 = (void *)sub_74D54(inited);
  uint64_t v73 = type metadata accessor for AccountProvider(0LL);
  uint64_t v74 = ((uint64_t (*)(void))static AccountProvider.shared.getter)();
  uint64_t v337 = dispatch thunk of AccountProvider.getPrivacyAckRequiredError()();
  uint64_t v75 = swift_release(v74);
  uint64_t v76 = static AccountProvider.shared.getter(v75);
  uint64_t v316 = dispatch thunk of AccountProvider.getInvalidUserIdentityError()();
  uint64_t v77 = swift_release(v76);
  uint64_t v304 = v73;
  uint64_t v78 = static AccountProvider.shared.getter(v77);
  uint64_t v317 = dispatch thunk of AccountProvider.getSomeAuthIssueOccurredErrors()();
  uint64_t v309 = v79;
  swift_release(v78);
  id v80 = [v335 privatePlayMediaIntentData];
  uint64_t v81 = v80;
  if (v80)
  {
    id v82 = [v80 pegasusMetaData];

    uint64_t v83 = v322;
    if (v82)
    {
      uint64_t v81 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v82);
      unint64_t v85 = v84;
    }

    else
    {
      uint64_t v81 = 0LL;
      unint64_t v85 = 0xF000000000000000LL;
    }
  }

  else
  {
    unint64_t v85 = 0xF000000000000000LL;
    uint64_t v83 = v322;
  }

  sub_1C75F0((uint64_t)v81, v85, (uint64_t)v43);
  sub_16B6A0((uint64_t)v81, v85);
  type metadata accessor for PFSQHandler(0LL);
  static PFSQHandler.latestPFSQError.getter();
  uint64_t v86 = v323;
  int v87 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48))(v23, 1LL, v323);
  uint64_t v88 = v331;
  if (v87)
  {
    sub_1F6CC((uint64_t)v23, &qword_28A680);
    uint64_t v89 = v332;
    uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v332 + 7);
    v90(v88, 1LL, 1LL, v17);
  }

  else
  {
    uint64_t v91 = v310;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v310, v23, v86);
    uint64_t v92 = sub_1F6CC((uint64_t)v23, &qword_28A680);
    PlaybackCodeAndDescription.playbackCode.getter(v92);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v91, v86);
    uint64_t v89 = v332;
    uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v332 + 7);
    v90(v88, 0LL, 1LL, v17);
  }

  ((void (*)(char *, void, uint64_t))v89[13])(v29, enum case for PlaybackCode.gdprNeededInGroup(_:), v17);
  v90((uint64_t)v29, 0LL, 1LL, v17);
  uint64_t v93 = (uint64_t)v333;
  uint64_t v94 = (uint64_t)v333 + *(int *)(v324 + 48);
  sub_FF10(v88, (uint64_t)v333, &qword_28B618);
  uint64_t v95 = v93;
  sub_FF10((uint64_t)v29, v94, &qword_28B618);
  id v96 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v89[6];
  if (v96(v95, 1LL, v17) == 1)
  {
    sub_1F6CC((uint64_t)v29, &qword_28B618);
    uint64_t v95 = (uint64_t)v333;
    sub_1F6CC(v88, &qword_28B618);
    if (v96(v94, 1LL, v17) == 1)
    {
      sub_1F6CC(v95, &qword_28B618);
LABEL_20:
      unint64_t v103 = v311;
      uint64_t v104 = v326(v311, v325, v336);
      unint64_t v105 = (os_log_s *)Logger.logObject.getter(v104);
      os_log_type_t v106 = static os_log_type_t.info.getter(v105);
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v107 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v107 = 0;
        _os_log_impl( &dword_0,  v105,  v106,  "PlayeMediaDialogProvider#invalidTokensHelper PFSQ gdprNeededInGroup",  v107,  2u);
        swift_slowDealloc(v107, -1LL, -1LL);
      }

      v327(v103, v336);
      uint64_t v108 = *(void *)(v318 + 120);
      *((void *)&v343 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v344 = &off_272BD0;
      *(void *)&__int128 v342 = v335;
      uint64_t v109 = *(void *)(v108 + 16);
      uint64_t v110 = *(void *)(v108 + 24);
      __chkstk_darwin(*((void *)&v343 + 1));
      *(&v296 - sub_6C3C(v0 + 10) = (char *)v109;
      *(&v296 - sub_6C3C(v0 + 9) = (char *)v110;
      strcpy((char *)&v296 - 64, "PrivacyAckReqd");
      *((_BYTE *)&v296 - 4sub_6C3C(v0 + 9) = -18;
      uint64_t v291 = v111;
      uint64_t v112 = v328;
      uint64_t v292 = (char *)v328;
      v293[0] = v319;
      v293[1] = (uint64_t)&v342;
      uint64_t v294 = 0LL;
      id v114 = v113;
      sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  v320,  v321,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v109,  v110,  0x4179636176697250LL,  0xEE00647165526B63LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v296 - 12));
      swift_bridgeObjectRelease(v112);
      goto LABEL_44;
    }

    goto LABEL_18;
  }

  uint64_t v97 = v312;
  sub_FF10(v95, v312, &qword_28B618);
  if (v96(v94, 1LL, v17) == 1)
  {
    sub_1F6CC((uint64_t)v29, &qword_28B618);
    sub_1F6CC(v88, &qword_28B618);
    (*((void (**)(uint64_t, uint64_t))v332 + 1))(v97, v17);
LABEL_18:
    sub_1F6CC(v95, &qword_28B610);
    goto LABEL_23;
  }

  uint64_t v98 = v332;
  unint64_t v99 = v307;
  (*((void (**)(char *, uint64_t, uint64_t))v332 + 4))(v307, v94, v17);
  uint64_t v100 = sub_10430( &qword_28B620,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  char v101 = dispatch thunk of static Equatable.== infix(_:_:)(v97, v99, v17, v100);
  uint64_t v102 = (void (*)(char *, uint64_t))v98[1];
  v102(v99, v17);
  sub_1F6CC((uint64_t)v29, &qword_28B618);
  sub_1F6CC(v331, &qword_28B618);
  v102((char *)v97, v17);
  unint64_t v43 = v334;
  sub_1F6CC(v95, &qword_28B618);
  if ((v101 & 1) != 0) {
    goto LABEL_20;
  }
LABEL_23:
  uint64_t v115 = v315;
  sub_FF10((uint64_t)v43, v315, &qword_28B5E8);
  uint64_t v116 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioIntentDetails(0LL);
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v118 = *(char ***)(v117 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v115, 1LL, v116) == 1)
  {
    sub_1F6CC(v115, &qword_28B5E8);
  }

  else
  {
    uint64_t v119 = Apple_Parsec_Siri_V2alpha_AudioIntentDetails.dynamiteClientStateErrors.getter();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v115, v116);
    uint64_t v120 = *(void *)(v119 + 16);
    if (v120)
    {
      uint64_t v333 = v118;
      unint64_t v121 = v119 + ((*(unsigned __int8 *)(v338 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80));
      uint64_t v122 = *(void *)(v338 + 72);
      uint64_t v123 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v338 + 16);
      swift_bridgeObjectRetain(v119);
      while (1)
      {
        uint64_t v124 = v123(v16, v121, v4);
        int v125 = Apple_Parsec_Siri_V2alpha_DynamiteClientStateErrors.tokenErrorCode.getter(v124);
        (*(void (**)(char *, uint64_t))(v338 + 8))(v16, v4);
        if (v337 == v125) {
          break;
        }
        v121 += v122;
        if (!--v120)
        {
          swift_bridgeObjectRelease_n(v119, 2LL);
          unint64_t v43 = v334;
          uint64_t v118 = v333;
          goto LABEL_31;
        }
      }

      swift_bridgeObjectRelease_n(v119, 2LL);
      id v153 = v302;
      uint64_t v154 = v336;
      uint64_t v155 = v326(v302, v325, v336);
      uint64_t v156 = (os_log_s *)Logger.logObject.getter(v155);
      os_log_type_t v157 = static os_log_type_t.info.getter(v156);
      if (os_log_type_enabled(v156, v157))
      {
        Swift::Bool v158 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)Swift::Bool v158 = 0;
        _os_log_impl(&dword_0, v156, v157, "PlayeMediaDialogProvider#invalidTokensHelper GDPR required", v158, 2u);
        swift_slowDealloc(v158, -1LL, -1LL);
      }

      v327(v153, v154);
      uint64_t v341 = &type metadata for Int;
      *(void *)&__int128 v340 = v337;
      uint64_t v159 = type metadata accessor for ErrorFilingProvider(0LL);
      uint64_t v160 = static ErrorFilingProvider.errorInfoForParamsKey.getter(v159);
      uint64_t v162 = v161;
      uint64_t v163 = (char *)v328;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v328);
      uint64_t v339 = v163;
      sub_1E1E1C(&v340, v160, v162, isUniquelyReferenced_nonNull_native, &v342);
      id v141 = v339;
      swift_bridgeObjectRelease(v162);
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1F6CC((uint64_t)&v342, &qword_284028);
      uint64_t v165 = *(void *)(v318 + 120);
      *((void *)&v343 + 1) = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
      uint64_t v344 = &off_272BD0;
      *(void *)&__int128 v342 = v335;
      uint64_t v143 = *(void *)(v165 + 40);
      uint64_t v144 = *(char **)(v165 + 48);
      __chkstk_darwin(*((void *)&v343 + 1));
      uint64_t v145 = &v296 - 12;
      *(&v296 - sub_6C3C(v0 + 10) = (char *)v143;
      *(&v296 - sub_6C3C(v0 + 9) = v144;
      uint64_t v146 = 0xD000000000000011LL;
      uint64_t v147 = 0x8000000000221C90LL;
      *(&v296 - sub_6C3C(v0 + 8) = (char *)0xD000000000000011LL;
      *(&v296 - sub_6C3C(v0 + 7) = (char *)0x8000000000221C90LL;
      uint64_t v291 = v166;
      uint64_t v292 = v141;
      v293[0] = v319;
      v293[1] = (uint64_t)&v342;
      uint64_t v294 = 0LL;
      id v168 = v167;
      goto LABEL_42;
    }

    swift_bridgeObjectRelease(v119);
  }

uint64_t sub_15BFC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a4;
  uint64_t v8 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v8, v25);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x61667275536E6163LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xEF7055706F506563LL;
  uint64_t v10 = static SiriAudioEnvironment.isPhone.getter(inited);
  if ((v10 & 1) != 0 || (uint64_t v11 = static SiriAudioEnvironment.isPad.getter(v10), (v11 & 1) != 0)) {
    char v12 = 1;
  }
  else {
    char v12 = static SiriAudioEnvironment.isAppleTV.getter(v11);
  }
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v12 & 1;
  unint64_t v13 = sub_74D54(inited);
  uint64_t v14 = *(void *)(v4 + 120);
  uint64_t v23 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v24 = &off_272BD0;
  v22[0] = a2;
  uint64_t v15 = *(void *)(v14 + 40);
  uint64_t v16 = *(void *)(v14 + 48);
  __chkstk_darwin(v23);
  v20[2] = v15;
  v20[3] = v16;
  v20[4] = 0xD000000000000011LL;
  v20[5] = 0x8000000000221C90LL;
  v20[6] = v17;
  v20[7] = v13;
  v20[8] = a1;
  v20[9] = v22;
  v20[10] = 0LL;
  id v18 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  v21,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v15,  v16,  0xD000000000000011LL,  0x8000000000221C90LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v20);
  swift_bridgeObjectRelease(v13);
  return sub_1F6CC((uint64_t)v22, &qword_283FE8);
}

uint64_t sub_15C184(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = *(void **)(v4 + 120);
  v25[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v25[4] = &off_272BD0;
  v25[0] = a2;
  uint64_t v11 = v10[4];
  uint64_t v12 = v10[5];
  uint64_t v13 = v10[6];
  uint64_t v17 = v12;
  uint64_t v18 = v13;
  strcpy(v19, "SafetySelfHarm");
  v19[15] = -18;
  uint64_t v20 = v11;
  unint64_t v21 = v9;
  uint64_t v22 = a1;
  uint64_t v23 = v25;
  uint64_t v24 = 0LL;
  id v14 = a2;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  a3,  a4,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v12,  v13,  0x6553797465666153LL,  0xEE006D726148666CLL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v16);
  swift_bridgeObjectRelease(v9);
  return sub_1F6CC((uint64_t)v25, &qword_283FE8);
}

uint64_t sub_15C2B0()
{
  return sub_6C3C(v0 + 31);
}

uint64_t sub_15C2E4(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = "(";
  v2[2] = "(";
  v2[3] = "(";
  v2[4] = "(";
  return swift_initClassMetadata2(a1, 256LL, 5LL, v2, a1 + 520);
}

uint64_t sub_15C338(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_15C35C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_15C384( uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t (*)(), uint64_t), char **a7)
{
  uint64_t v8 = v7;
  uint64_t v207 = a1;
  uint64_t v208 = a6;
  uint64_t v191 = a4;
  uint64_t v192 = a2;
  uint64_t v193 = a3;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v209 = (char *)v11;
  uint64_t v210 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v189 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v189 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v204 = (char *)&v189 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v203 = (char *)&v189 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v202 = (char *)&v189 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v201 = (char *)&v189 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  id v200 = (char *)&v189 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v199 = (char *)&v189 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v198 = (char *)&v189 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  unint64_t v197 = (char *)&v189 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  os_log_type_t v196 = (char *)&v189 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v194 = (char *)&v189 - v41;
  __chkstk_darwin(v40);
  uint64_t v195 = (char *)&v189 - v42;
  unint64_t v43 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v43);
  uint64_t v44 = "er";
  swift_bridgeObjectRetain("er");
  id v45 = [(id)a5 mediaItems];
  if (!v45)
  {
    swift_bridgeObjectRelease("er");
    goto LABEL_32;
  }

  uint64_t v46 = v45;
  uint64_t v205 = a5;
  uint64_t v47 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  a5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0) {
      uint64_t v60 = a5;
    }
    else {
      uint64_t v60 = a5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a5);
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(a5);
    if (!v61) {
      goto LABEL_30;
    }
  }

  else if (!*(void *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8LL)))
  {
    goto LABEL_30;
  }

  if ((a5 & 0xC000000000000001LL) != 0)
  {
    id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a5);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      goto LABEL_158;
    }

    id v48 = *(id *)(a5 + 32);
  }

  uint64_t v49 = v48;
  swift_bridgeObjectRelease(a5);
  id v50 = [v49 privateMediaItemValueData];

  if (!v50 || (id v51 = [v50 internalSignals], v50, !v51))
  {
    uint64_t v54 = "er";
LABEL_31:
    swift_bridgeObjectRelease(v54);
    a5 = v205;
    goto LABEL_32;
  }

  a5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, &type metadata for String);

  uint64_t v190 = *(void *)(a5 + 16);
  if (!v190)
  {
LABEL_30:
    swift_bridgeObjectRelease("er");
    uint64_t v54 = (char *)a5;
    goto LABEL_31;
  }

  uint64_t v189 = v8;
  uint64_t v206 = a7;
  uint64_t v52 = *(void *)(a5 + 32);
  uint64_t v53 = *(char **)(a5 + 40);
  if (v52 == 0xD000000000000019LL && v53 == "er" || (_stringCompareWithSmolCheck(_:_:expecting:)(v52, v53) & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease("er");
    swift_bridgeObjectRelease(a5);
    swift_arrayDestroy(&qword_26A2F0, 1LL, &type metadata for String);
    a5 = v205;
    a7 = v206;
    uint64_t v8 = v189;
    uint64_t v44 = v209;
    goto LABEL_33;
  }

  if (v190 != 1)
  {
    a7 = (char **)(a5 + 56);
    uint64_t v55 = 1LL;
    while (1)
    {
      uint64_t v56 = v55 + 1;
      if (__OFADD__(v55, 1LL)) {
        break;
      }
      uint64_t v57 = (uint64_t)*(a7 - 1);
      uint64_t v58 = *a7;
      BOOL v59 = v57 == 0xD000000000000019LL && v58 == "er";
      if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v58) & 1) != 0) {
        goto LABEL_13;
      }
      a7 += 2;
      ++v55;
      if (v56 == v190) {
        goto LABEL_25;
      }
    }

    __break(1u);
    goto LABEL_166;
  }

LABEL_100:
    swift_bridgeObjectRelease(v115);
    char v116 = 0;
LABEL_101:
    *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
    *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v116 & 1;
    unint64_t v117 = sub_74D54(inited);
    uint64_t v118 = *(void *)(v8 + 120);
    uint64_t v212 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    uint64_t v213 = &off_272BD0;
    v211[0] = a5;
    uint64_t v119 = *(void *)(v118 + 40);
    uint64_t v120 = *(void *)(v118 + 48);
    __chkstk_darwin(v212);
    *(&v189 - sub_6C3C(v0 + 10) = v119;
    *(&v189 - sub_6C3C(v0 + 9) = v120;
    *(&v189 - sub_6C3C(v0 + 8) = 0xD000000000000013LL;
    *(&v189 - sub_6C3C(v0 + 7) = 0x8000000000221C70LL;
    uint64_t v184 = v121;
    unint64_t v185 = v117;
    uint64_t v186 = v207;
    uint64_t v187 = v211;
    uint64_t v188 = 0LL;
    id v123 = v122;
    sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)v208,  (uint64_t)v206,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v119,  v120,  0xD000000000000013LL,  0x8000000000221C70LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v189 - 12));
    swift_bridgeObjectRelease(v117);
    return sub_1F6CC((uint64_t)v211, &qword_283FE8);
  }

  if (INPlayMediaIntent.hasQueueTokenRestrictedContent()())
  {
    if (qword_283888 == -1)
    {
LABEL_44:
      uint64_t v78 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
      uint64_t v79 = v210;
      uint64_t v80 = (*(uint64_t (**)(char *, uint64_t, char *))(v210 + 16))(v18, v78, v44);
      uint64_t v81 = (os_log_s *)Logger.logObject.getter(v80);
      os_log_type_t v82 = static os_log_type_t.info.getter(v81);
      if (os_log_type_enabled(v81, v82))
      {
        uint64_t v83 = a7;
        unint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v84 = 0;
        _os_log_impl( &dword_0,  v81,  v82,  "PlayMediaDialogProvider going to makePlaybackQueueTokenRestrictedContent",  v84,  2u);
        unint64_t v85 = v84;
        a7 = v83;
        swift_slowDealloc(v85, -1LL, -1LL);
      }

      (*(void (**)(char *, char *))(v79 + 8))(v18, v44);
      return sub_159D0C(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
    }

LABEL_158:
    swift_once(&qword_283888, sub_BFC5C);
    goto LABEL_44;
  }

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A330) & 1) != 0)
  {
    if (qword_283888 == -1)
    {
LABEL_49:
      uint64_t v87 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
      uint64_t v88 = (*(uint64_t (**)(char *, uint64_t, char *))(v210 + 16))(v21, v87, v44);
      uint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
      os_log_type_t v90 = static os_log_type_t.info.getter(v89);
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v91 = 0;
        _os_log_impl( &dword_0,  v89,  v90,  "PlayMediaDialogProvider going to not found for Acoustic ID follow up when entity not found in AMP catalog",  v91,  2u);
        swift_slowDealloc(v91, -1LL, -1LL);
      }

      (*(void (**)(char *, char *))(v210 + 8))(v21, v44);
      char v92 = 0;
      return sub_1563C0(v92, v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
    }

LABEL_166:
    swift_once(&qword_283888, sub_BFC5C);
    goto LABEL_49;
  }

  char v94 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A360);
  uint64_t v95 = v210;
  if ((v94 & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v96 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    uint64_t v97 = v204;
    uint64_t v98 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v204, v96, v44);
    unint64_t v99 = (os_log_s *)Logger.logObject.getter(v98);
    os_log_type_t v100 = static os_log_type_t.info.getter(v99);
    if (os_log_type_enabled(v99, v100))
    {
      char v101 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v101 = 0;
      _os_log_impl( &dword_0,  v99,  v100,  "PlayMediaDialogProvider going to Non-subscriber dialog for Acoustic ID follow up",  v101,  2u);
      swift_slowDealloc(v101, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v97, v44);
    goto LABEL_62;
  }

  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A390) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v124 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    int v125 = v203;
    uint64_t v126 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v203, v124, v44);
    id v127 = (os_log_s *)Logger.logObject.getter(v126);
    os_log_type_t v128 = static os_log_type_t.info.getter(v127);
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl( &dword_0,  v127,  v128,  "PlayMediaDialogProvider going to CannotReferencePodcastsAudiobooks for related follow up",  v129,  2u);
      swift_slowDealloc(v129, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v125, v44);
    return sub_156520(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A3C0) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v130 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    uint64_t v131 = v202;
    uint64_t v132 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v202, v130, v44);
    os_log_type_t v133 = (os_log_s *)Logger.logObject.getter(v132);
    os_log_type_t v134 = static os_log_type_t.info.getter(v133);
    if (os_log_type_enabled(v133, v134))
    {
      uint64_t v135 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v135 = 0;
      _os_log_impl( &dword_0,  v133,  v134,  "PlayMediaDialogProvider going to NoLiveVersion for related follow up",  v135,  2u);
      swift_slowDealloc(v135, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v131, v44);
    return sub_15678C(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A3F0) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v136 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    uint64_t v137 = v201;
    uint64_t v138 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v201, v136, v44);
    uint64_t v139 = (os_log_s *)Logger.logObject.getter(v138);
    os_log_type_t v140 = static os_log_type_t.info.getter(v139);
    if (os_log_type_enabled(v139, v140))
    {
      id v141 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v141 = 0;
      _os_log_impl( &dword_0,  v139,  v140,  "PlayMediaDialogProvider going to NoAcousticVersion for related follow up",  v141,  2u);
      swift_slowDealloc(v141, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v137, v44);
    return sub_1567B8(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A420) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v142 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    uint64_t v143 = v200;
    uint64_t v144 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v200, v142, v44);
    uint64_t v145 = (os_log_s *)Logger.logObject.getter(v144);
    os_log_type_t v146 = static os_log_type_t.info.getter(v145);
    if (os_log_type_enabled(v145, v146))
    {
      uint64_t v147 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v147 = 0;
      _os_log_impl( &dword_0,  v145,  v146,  "PlayMediaDialogProvider going to NoAlternateArtistVersion for related follow up",  v147,  2u);
      swift_slowDealloc(v147, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v143, v44);
    return sub_156AB0(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A450) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v148 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    id v149 = v199;
    uint64_t v150 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v199, v148, v44);
    uint64_t v151 = (os_log_s *)Logger.logObject.getter(v150);
    os_log_type_t v152 = static os_log_type_t.info.getter(v151);
    if (os_log_type_enabled(v151, v152))
    {
      id v153 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v153 = 0;
      _os_log_impl( &dword_0,  v151,  v152,  "PlayMediaDialogProvider going to NoMoreResults for related follow up",  v153,  2u);
      swift_slowDealloc(v153, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v149, v44);
    return sub_156AD4(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A480) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v154 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    uint64_t v155 = v198;
    uint64_t v156 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v198, v154, v44);
    os_log_type_t v157 = (os_log_s *)Logger.logObject.getter(v156);
    os_log_type_t v158 = static os_log_type_t.info.getter(v157);
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v159 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v159 = 0;
      _os_log_impl( &dword_0,  v157,  v158,  "PlayMediaDialogProvider going to ReferencedMediaMissingMetadata for related follow up",  v159,  2u);
      swift_slowDealloc(v159, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v155, v44);
    return sub_156E70(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A4B0) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v160 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    uint64_t v161 = v197;
    uint64_t v162 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v197, v160, v44);
    uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
    os_log_type_t v164 = static os_log_type_t.info.getter(v163);
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v165 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v165 = 0;
      _os_log_impl( &dword_0,  v163,  v164,  "PlayMediaDialogProvider going to ExceptionSearching for related follow up",  v165,  2u);
      swift_slowDealloc(v165, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v161, v44);
    return sub_156E94(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A4E0) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v166 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    id v167 = v196;
    uint64_t v168 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v196, v166, v44);
    uint64_t v169 = (os_log_s *)Logger.logObject.getter(v168);
    os_log_type_t v170 = static os_log_type_t.info.getter(v169);
    if (os_log_type_enabled(v169, v170))
    {
      uint64_t v171 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v171 = 0;
      _os_log_impl( &dword_0,  v169,  v170,  "PlayMediaDialogProvider going to DidntFindSpecificVersion for related follow up",  v171,  2u);
      swift_slowDealloc(v171, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v167, v44);
    return sub_157018(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

  else
  {
    if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A510) & 1) == 0)
    {
      if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)a5,  (uint64_t)&off_26A540) & 1) == 0) {
        return sub_15746C(v191, (void *)a5, v192, v193, v207, v208, (uint64_t)a7);
      }
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v178 = (uint64_t)v209;
      uint64_t v179 = sub_6960((uint64_t)v209, (uint64_t)qword_2969C8);
      uint64_t v180 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v210 + 16))(v195, v179, v178);
      uint64_t v181 = (os_log_s *)Logger.logObject.getter(v180);
      os_log_type_t v182 = static os_log_type_t.info.getter(v181);
      if (os_log_type_enabled(v181, v182))
      {
        id v183 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v183 = 0;
        _os_log_impl( &dword_0,  v181,  v182,  "PlayMediaDialogProvider showing not found for request for different related version follow up",  v183,  2u);
        swift_slowDealloc(v183, -1LL, -1LL);
      }

      (*(void (**)(char *, char *))(v210 + 8))(v195, v209);
LABEL_62:
      char v92 = 1;
      return sub_1563C0(v92, v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v172 = sub_6960((uint64_t)v44, (uint64_t)qword_2969C8);
    unint64_t v173 = v194;
    uint64_t v174 = (*(uint64_t (**)(char *, uint64_t, char *))(v95 + 16))(v194, v172, v44);
    id v175 = (os_log_s *)Logger.logObject.getter(v174);
    os_log_type_t v176 = static os_log_type_t.info.getter(v175);
    if (os_log_type_enabled(v175, v176))
    {
      int v177 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v177 = 0;
      _os_log_impl( &dword_0,  v175,  v176,  "PlayMediaDialogProvider going to NothingPlaying for related follow up",  v177,  2u);
      swift_slowDealloc(v177, -1LL, -1LL);
    }

    (*(void (**)(char *, char *))(v95 + 8))(v173, v44);
    return sub_15703C(v207, (void *)a5, (uint64_t)v208, (uint64_t)a7);
  }

void sub_15DCC8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  uint64_t v4 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  uint64_t v5 = 0LL;
  uint64_t v6 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
  uint64_t v31 = v4;
  uint64_t v32 = a2;
  while (1)
  {
    uint64_t v7 = (uint64_t *)(v4 + 16 * v5);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    swift_bridgeObjectRetain(v8);
    id v10 = [a2 *(SEL *)&v6[336]];
    if (!v10)
    {
LABEL_27:
      uint64_t v28 = v8;
      goto LABEL_33;
    }

    uint64_t v11 = v10;
    uint64_t v12 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0) {
        uint64_t v29 = v13;
      }
      else {
        uint64_t v29 = v13 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v13);
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v13);
      if (v30) {
        goto LABEL_6;
      }
LABEL_32:
      swift_bridgeObjectRelease(v8);
      uint64_t v28 = v13;
LABEL_33:
      swift_bridgeObjectRelease(v28);
      goto LABEL_34;
    }

void sub_15DF60(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v30 = a1;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  id v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    BOOL v27 = a3;
    uint64_t v19 = swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = a4;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    uint64_t v29 = a5;
    uint64_t v22 = v21;
    uint64_t v32 = v21;
    uint64_t v26 = v6;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v31 = sub_6978(0xD00000000000001ALL, 0x800000000021D140LL, &v32);
    uint64_t v6 = v26;
    a3 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    _os_log_impl(&dword_0, v17, v18, "DialogMemoryUseCase#%s#execute Executing...", v20, 0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v23 = v22;
    a5 = v29;
    swift_slowDealloc(v23, -1LL, -1LL);
    uint64_t v24 = v20;
    a4 = v28;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1EF9CC(v30, a2, a3, a4, a5);
  sub_6EA8((void *)(v6 + 8), *(void *)(v6 + 32));
  sub_1EFF70();
}

uint64_t sub_15E198(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v9, v39);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_2160E0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  sub_30240();
  if (v12) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = 0LL;
  }
  if (v12) {
    unint64_t v14 = v12;
  }
  else {
    unint64_t v14 = 0xE000000000000000LL;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v13;
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  sub_30600();
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for String;
  if (v16) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = 0LL;
  }
  if (v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE000000000000000LL;
  }
  *(void *)(inited + 96) = v17;
  *(void *)(inited + 10sub_6C3C(v0 + 4) = v18;
  unint64_t v19 = sub_74D54(inited);
  uint64_t v20 = *(void **)(v5 + 120);
  void v38[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v38[4] = &off_272BD0;
  v38[0] = a2;
  uint64_t v21 = v20[4];
  uint64_t v22 = v20[5];
  uint64_t v23 = v20[6];
  uint64_t v24 = swift_allocObject(&unk_2722A8, 32LL, 7LL);
  *(void *)(v24 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v24 + 2sub_6C3C(v0 + 4) = a4;
  uint64_t v29 = v22;
  uint64_t v30 = v23;
  unint64_t v31 = 0xD000000000000010LL;
  unint64_t v32 = 0x8000000000221960LL;
  uint64_t v33 = v21;
  unint64_t v34 = v19;
  uint64_t v35 = a1;
  uint64_t v36 = v38;
  uint64_t v37 = 0LL;
  id v25 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v24,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v22,  v23,  0xD000000000000010LL,  0x8000000000221960LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v28);
  swift_bridgeObjectRelease(v19);
  swift_release(v24);
  return sub_1F6CC((uint64_t)v38, &qword_283FE8);
}

uint64_t sub_15E380(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  BOOL v9 = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  BOOL v10 = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, v32);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD00000000000001BLL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x8000000000221920LL;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v9;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xD00000000000001CLL;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_2160E0;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000221940LL;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = v10;
  unint64_t v13 = sub_74D54(inited);
  unint64_t v14 = *(void **)(v4 + 120);
  void v31[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v31[4] = &off_272BD0;
  v31[0] = a2;
  uint64_t v15 = v14[4];
  uint64_t v16 = v14[5];
  uint64_t v17 = v14[6];
  uint64_t v18 = swift_allocObject(&unk_2724D8, 32LL, 7LL);
  *(void *)(v18 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v18 + 2sub_6C3C(v0 + 4) = a4;
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  unint64_t v24 = 0xD000000000000013LL;
  unint64_t v25 = 0x8000000000221C30LL;
  uint64_t v26 = v15;
  unint64_t v27 = v13;
  uint64_t v28 = a1;
  uint64_t v29 = v31;
  uint64_t v30 = 0LL;
  id v19 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v18,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v16,  v17,  0xD000000000000013LL,  0x8000000000221C30LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v21);
  swift_bridgeObjectRelease(v13);
  swift_release(v18);
  return sub_1F6CC((uint64_t)v31, &qword_283FE8);
}

uint64_t sub_15E560(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v102 = a4;
  uint64_t v99 = a1;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  __chkstk_darwin(v6);
  uint64_t v96 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Calendar.Component(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Calendar(0LL);
  uint64_t v92 = *(void *)(v12 - 8);
  uint64_t v93 = v12;
  __chkstk_darwin(v12);
  os_log_type_t v100 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Date(0LL);
  uint64_t v90 = *(void *)(v14 - 8);
  uint64_t v91 = v14;
  __chkstk_darwin(v14);
  uint64_t v98 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v89 = (unint64_t)sub_30544();
  uint64_t v17 = v16;
  sub_30240();
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  id v101 = a2;
  sub_30600();
  unint64_t v24 = v23;
  if (!v21 && !v23 && !v17) {
    return sub_15E380(v99, v101, a3, v102);
  }
  uint64_t v86 = v22;
  uint64_t v87 = a3;
  uint64_t v26 = v98;
  uint64_t v27 = Date.init()(v22);
  static Calendar.current.getter(v27);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Calendar.Component.hour(_:), v8);
  uint64_t v88 = Calendar.component(_:from:)(v11, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v28 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v28, &v105);
  uint64_t v30 = inited;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219320;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  if (v21) {
    uint64_t v31 = v19;
  }
  else {
    uint64_t v31 = 0LL;
  }
  unint64_t v32 = 0xE000000000000000LL;
  if (v21) {
    unint64_t v33 = v21;
  }
  else {
    unint64_t v33 = 0xE000000000000000LL;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v31;
  *(void *)(inited + 56) = v33;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
  uint64_t v34 = v86;
  if (v24) {
    unint64_t v32 = v24;
  }
  else {
    uint64_t v34 = 0LL;
  }
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  *(void *)(inited + 96) = v34;
  *(void *)(inited + 10sub_6C3C(v0 + 4) = v32;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for String;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000016LL;
  *(void *)(inited + 136) = 0x8000000000221980LL;
  if (v17)
  {
    Swift::String v35 = String.lowercased()();
    Swift::String v36 = String.lowercased()();
    object = v36._object;
    if (v35._object)
    {
      if (v35._countAndFlagsBits == v36._countAndFlagsBits && v35._object == v36._object)
      {
        swift_bridgeObjectRelease_n(v35._object, 2LL);
        char v38 = 1;
      }

      else
      {
        char v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v35._countAndFlagsBits, v35._object);
        swift_bridgeObjectRelease(v35._object);
        swift_bridgeObjectRelease(v36._object);
      }

      *(_BYTE *)(v30 + 14sub_6C3C(v0 + 4) = v38 & 1;
      *(void *)(v30 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
      strcpy((char *)(v30 + 176), "isStoryTelling");
      *(_BYTE *)(v30 + 191) = -18;
      goto LABEL_24;
    }
  }

  else
  {
    object = String.lowercased()()._object;
  }

  swift_bridgeObjectRelease(object);
  *(_BYTE *)(v30 + 14sub_6C3C(v0 + 4) = 0;
  *(void *)(v30 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  strcpy((char *)(v30 + 176), "isStoryTelling");
  *(_BYTE *)(v30 + 191) = -18;
  if (!v17)
  {
    uint64_t v39 = String.lowercased()()._object;
    goto LABEL_28;
  }

LABEL_44:
  swift_bridgeObjectRelease(v47);
  *(_BYTE *)(v30 + 28sub_6C3C(v0 + 8) = 0;
  *(void *)(v30 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  strcpy((char *)(v30 + 320), "isWordOfTheDay");
  *(_BYTE *)(v30 + 335) = -18;
  id v51 = v96;
  if (!v17)
  {
    uint64_t v52 = String.lowercased()()._object;
    goto LABEL_52;
  }

LABEL_48:
  Swift::String v53 = String.lowercased()();
  swift_bridgeObjectRelease(v17);
  Swift::String v54 = String.lowercased()();
  uint64_t v52 = v54._object;
  if (v53._object)
  {
    if (v53._countAndFlagsBits == v54._countAndFlagsBits && v53._object == v54._object)
    {
      swift_bridgeObjectRelease_n(v53._object, 2LL);
      char v55 = 1;
    }

    else
    {
      char v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v53._countAndFlagsBits, v53._object);
      swift_bridgeObjectRelease(v53._object);
      swift_bridgeObjectRelease(v54._object);
    }

    goto LABEL_54;
  }

LABEL_52:
  swift_bridgeObjectRelease(v52);
  char v55 = 0;
LABEL_54:
  uint64_t v57 = v94;
  uint64_t v56 = v95;
  *(_BYTE *)(v30 + 336) = v55 & 1;
  *(void *)(v30 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &type metadata for Bool;
  *(void *)(v30 + 36sub_6C3C(v0 + 8) = 0x746867694E7369LL;
  *(void *)(v30 + 376) = 0xE700000000000000LL;
  uint64_t v58 = v87;
  BOOL v59 = (unint64_t)(v88 - 20) < 0xFFFFFFFFFFFFFFF1LL;
  *(void *)(v30 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(v30 + 38sub_6C3C(v0 + 4) = v59;
  unint64_t v60 = sub_74D54(v30);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v61 = sub_6960(v56, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v51, v61, v56);
  uint64_t v62 = swift_bridgeObjectRetain_n(v60, 2LL);
  uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
  os_log_type_t v64 = static os_log_type_t.info.getter(v63);
  BOOL v65 = os_log_type_enabled(v63, v64);
  unint64_t v89 = v60;
  if (v65)
  {
    uint64_t v66 = swift_slowAlloc(22LL, -1LL);
    uint64_t v67 = swift_slowAlloc(32LL, -1LL);
    v104[0] = v67;
    *(_DWORD *)uint64_t v66 = 136315394;
    uint64_t v68 = swift_bridgeObjectRetain(v60);
    uint64_t v69 = Dictionary.description.getter( v68,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    unint64_t v71 = v70;
    swift_bridgeObjectRelease(v60);
    uint64_t v103 = sub_6978(v69, v71, v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104);
    swift_bridgeObjectRelease_n(v60, 2LL);
    swift_bridgeObjectRelease(v71);
    *(_WORD *)(v66 + 1sub_6C3C(v0 + 2) = 2048;
    uint64_t v103 = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, v104);
    _os_log_impl( &dword_0,  v63,  v64,  "PlayMediaDialogProvider#makePodcastPromotion Dialog params for podcastPromotion: %s, current time hour: %ld",  (uint8_t *)v66,  0x16u);
    uint64_t v58 = v87;
    swift_arrayDestroy(v67, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1LL, -1LL);
    swift_slowDealloc(v66, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v95);
  }

  else
  {

    swift_bridgeObjectRelease_n(v60, 2LL);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v56);
  }

  char v72 = (void *)v97[15];
  v104[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  _OWORD v104[4] = (uint64_t)&off_272BD0;
  id v73 = v101;
  v104[0] = (uint64_t)v101;
  uint64_t v74 = v72[4];
  uint64_t v75 = v72[5];
  uint64_t v76 = v72[6];
  uint64_t v77 = swift_allocObject(&unk_2722D0, 32LL, 7LL);
  uint64_t v97 = &v86;
  uint64_t v78 = v102;
  *(void *)(v77 + sub_6C3C(v0 + 16) = v58;
  *(void *)(v77 + 2sub_6C3C(v0 + 4) = v78;
  __chkstk_darwin(v77);
  *(&v86 - sub_6C3C(v0 + 10) = v75;
  *(&v86 - sub_6C3C(v0 + 9) = v76;
  *(&v86 - sub_6C3C(v0 + 8) = 0xD000000000000014LL;
  *(&v86 - sub_6C3C(v0 + 7) = 0x80000000002219C0LL;
  uint64_t v81 = v74;
  unint64_t v79 = v89;
  unint64_t v82 = v89;
  uint64_t v83 = v99;
  unint64_t v84 = v104;
  uint64_t v85 = 0LL;
  id v80 = v73;
  swift_retain(v78);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v77,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v75,  v76,  0xD000000000000014LL,  0x80000000002219C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v86 - 12));
  swift_bridgeObjectRelease(v79);
  swift_release(v77);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v100, v93);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v98, v91);
  return sub_1F6CC((uint64_t)v104, &qword_283FE8);
}

    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v53);
    return v57;
  }

uint64_t sub_15F0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, uint64_t), uint64_t a4)
{
  Swift::String v114 = a3;
  uint64_t v5 = sub_6C5C(&qword_285728);
  __chkstk_darwin(v5);
  uint64_t v111 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v116 = type metadata accessor for Date(0LL);
  uint64_t v109 = *(void *)(v116 - 8);
  uint64_t v7 = __chkstk_darwin(v116);
  Swift::String v110 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v102 - v10;
  __chkstk_darwin(v9);
  Swift::String v113 = (char *)&v102 - v12;
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v115 = (char *)&v102 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  char v112 = (char *)&v102 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v102 - v25;
  uint64_t v27 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for AppSelectionReport(0LL);
  uint64_t v118 = *(void *)(v30 - 8);
  uint64_t v119 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  unint64_t v117 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = INPlayMediaIntent.appInferred.getter(v31);
  if ((v33 & 1) != 0 && (uint64_t v34 = App.appIdentifier.getter(v33), v35))
  {
    Swift::String v36 = (void (*)(char *, uint64_t))v34;
    unint64_t v37 = v35;
    sub_FF10(a4, (uint64_t)v29, &qword_285470);
    uint64_t v39 = v118;
    uint64_t v38 = v119;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v29, 1LL, v119) == 1)
    {
      swift_bridgeObjectRelease(v37);
      sub_1F6CC((uint64_t)v29, &qword_285470);
LABEL_16:
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v53 = sub_6960(v13, (uint64_t)qword_2969C8);
      uint64_t v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v53, v13);
      char v55 = (os_log_s *)Logger.logObject.getter(v54);
      os_log_type_t v56 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v57 = 0;
        _os_log_impl( &dword_0,  v55,  v56,  "PlayMediaDialogProvider#appSpecified false as no app selection report, or it wasn't used",  v57,  2u);
        swift_slowDealloc(v57, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      char v45 = 0;
      return v45 & 1;
    }

    char v108 = v36;
    char v46 = v117;
    uint64_t v47 = (*(uint64_t (**)(void))(v39 + 32))();
    if ((AppSelectionReport.appSelectionUsed.getter(v47) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v46, v38);
      swift_bridgeObjectRelease(v37);
      goto LABEL_16;
    }

    uint64_t v48 = *((void *)v114 + 3);
    uint64_t v49 = *((void *)v114 + 4);
    sub_6EA8(v114, v48);
    uint64_t v51 = dispatch thunk of FeatureFlagProviding.lastBundleIdentifier.getter(v48, v49);
    uint64_t v52 = v50;
    if (v50)
    {
      else {
        int v105 = _stringCompareWithSmolCheck(_:_:expecting:)(v108, v37);
      }
    }

    else
    {
      int v105 = 0;
    }

    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v58 = sub_6960(v13, (uint64_t)qword_2969C8);
    BOOL v59 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v106 = v58;
    uint64_t v107 = v59;
    ((void (*)(char *))v59)(v26);
    swift_bridgeObjectRetain(v52);
    uint64_t v60 = swift_bridgeObjectRetain(v37);
    uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
    os_log_type_t v62 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc(28LL, -1LL);
      uint64_t v103 = (void *)v51;
      uint64_t v64 = v63;
      uint64_t v104 = swift_slowAlloc(64LL, -1LL);
      double v122 = *(double *)&v104;
      *(_DWORD *)uint64_t v64 = 67109634;
      LODWORD(v1sub_6C3C(v0 + 20) = v105 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 4);
      *(_WORD *)(v64 + sub_6C3C(v0 + 8) = 2080;
      swift_bridgeObjectRetain(v37);
      uint64_t v120 = (void *)sub_6978((uint64_t)v108, v37, (uint64_t *)&v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121);
      swift_bridgeObjectRelease_n(v37, 3LL);
      *(_WORD *)(v64 + 1sub_6C3C(v0 + 8) = 2080;
      uint64_t v120 = v103;
      uint64_t v121 = v52;
      swift_bridgeObjectRetain(v52);
      uint64_t v65 = sub_6C5C(&qword_284600);
      uint64_t v66 = String.init<A>(describing:)(&v120, v65);
      unint64_t v68 = v67;
      uint64_t v120 = (void *)sub_6978(v66, v67, (uint64_t *)&v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121);
      swift_bridgeObjectRelease_n(v52, 2LL);
      swift_bridgeObjectRelease(v68);
      _os_log_impl( &dword_0,  v61,  v62,  "PlayMediaDialogProvider#appSpecified sameBundlePass:%{BOOL}d -- current:%s, previous: %s",  (uint8_t *)v64,  0x1Cu);
      uint64_t v69 = v104;
      swift_arrayDestroy(v104, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v64, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v52, 2LL);
      swift_bridgeObjectRelease_n(v37, 2LL);
    }

    char v108 = *(void (**)(char *, uint64_t))(v14 + 8);
    v108(v26, v13);
    unint64_t v70 = v113;
    uint64_t v71 = (uint64_t)v111;
    uint64_t v72 = *((void *)v114 + 3);
    uint64_t v73 = *((void *)v114 + 4);
    sub_6EA8(v114, v72);
    dispatch thunk of FeatureFlagProviding.appSelectionLastUsed.getter(v72, v73);
    uint64_t v74 = v109;
    uint64_t v75 = v116;
    int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v71, 1LL, v116);
    uint64_t v77 = v110;
    if (v76 == 1)
    {
      Date.init(timeIntervalSince1970:)(0.0);
      uint64_t v78 = sub_1F6CC(v71, &qword_285728);
    }

    else
    {
      uint64_t v78 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 32))(v70, v71, v75);
    }

    Date.init()(v78);
    double v79 = Date.timeIntervalSince(_:)(v70);
    id v80 = *(uint64_t (**)(char *, uint64_t))(v74 + 8);
    uint64_t v81 = v80(v11, v75);
    double v82 = static Time.secondsIn1Day.getter(v81);
    uint64_t v83 = v112;
    v107(v112, v106, v13);
    uint64_t v84 = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 16))(v77, v70, v75);
    uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc(38LL, -1LL);
      Swift::String v114 = (uint64_t (*)(char *, uint64_t))swift_slowAlloc(32LL, -1LL);
      uint64_t v120 = v114;
      *(_DWORD *)uint64_t v87 = 67109890;
      LODWORD(v12sub_6C3C(v0 + 2) = v79 < v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
      *(_WORD *)(v87 + sub_6C3C(v0 + 8) = 2080;
      uint64_t v88 = sub_10430( &qword_28B608,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
      uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter(v75, v88);
      unint64_t v91 = v90;
      double v122 = COERCE_DOUBLE(sub_6978(v89, v90, (uint64_t *)&v120));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);
      swift_bridgeObjectRelease(v91);
      unint64_t v70 = v113;
      v80(v77, v75);
      *(_WORD *)(v87 + 1sub_6C3C(v0 + 8) = 2048;
      double v122 = v79;
      uint64_t v92 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);
      *(_WORD *)(v87 + 2sub_6C3C(v0 + 8) = 2048;
      double v122 = static Time.secondsIn1Day.getter(v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);
      _os_log_impl( &dword_0,  v85,  v86,  "PlayMediaDialogProvider#appSpecified appSelectionUseIntervalPass:%{BOOL}d -- last:%s, interval:%fs, window:%fs",  (uint8_t *)v87,  0x26u);
      uint64_t v93 = v114;
      swift_arrayDestroy(v114, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v93, -1LL, -1LL);
      swift_slowDealloc(v87, -1LL, -1LL);

      uint64_t v94 = v112;
    }

    else
    {
      v80(v77, v75);

      uint64_t v94 = v83;
    }

    v108(v94, v13);
    char v95 = v105;
    uint64_t v96 = (void (*)(char *, uint64_t))v80;
    char v45 = v105 ^ 1 | (v79 >= v82);
    uint64_t v97 = ((uint64_t (*)(char *, uint64_t, uint64_t))v107)(v115, v106, v13);
    uint64_t v98 = (os_log_s *)Logger.logObject.getter(v97);
    os_log_type_t v99 = static os_log_type_t.info.getter(v98);
    if (os_log_type_enabled(v98, v99))
    {
      Swift::String v114 = v80;
      uint64_t v100 = swift_slowAlloc(20LL, -1LL);
      *(_DWORD *)uint64_t v100 = 67109632;
      LODWORD(v1sub_6C3C(v0 + 20) = v45 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 4);
      *(_WORD *)(v100 + sub_6C3C(v0 + 8) = 1024;
      LODWORD(v1sub_6C3C(v0 + 20) = v95 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 4);
      *(_WORD *)(v100 + 1sub_6C3C(v0 + 4) = 1024;
      LODWORD(v1sub_6C3C(v0 + 20) = v79 < v82;
      uint64_t v96 = (void (*)(char *, uint64_t))v114;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 4);
      _os_log_impl( &dword_0,  v98,  v99,  "PlayMediaDialogProvider#appSpecified %{BOOL}d as sameBundlePass:%{BOOL}d, appSelectionUseIntervalPass:%{BOOL}d",  (uint8_t *)v100,  0x14u);
      swift_slowDealloc(v100, -1LL, -1LL);
    }

    v108(v115, v13);
    v96(v70, v116);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v117, v119);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v40 = sub_6960(v13, (uint64_t)qword_2969C8);
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v40, v13);
    char v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      Swift::String v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)Swift::String v44 = 0;
      _os_log_impl(&dword_0, v42, v43, "PlayMediaDialogProvider#appSpecified true as reflecting specified app", v44, 2u);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    char v45 = 1;
  }

  return v45 & 1;
}

uint64_t sub_15FBCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v43 = a3;
  uint64_t v9 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v12 = static AppSelectionContext.shared.getter();
  if (v12)
  {
    uint64_t v13 = v12;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v13);
  }

  else
  {
    uint64_t v14 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v11, 1LL, 1LL, v14);
  }

  char v15 = sub_15F0C0(a1, (uint64_t)a2, (uint64_t (*)(char *, uint64_t))(v5 + 128), (uint64_t)v11);
  sub_1F6CC((uint64_t)v11, &qword_285470);
  sub_30240();
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  uint64_t v20 = INPlayMediaIntent.firstMediaItemType()(v16);
  uint64_t v21 = INPlayMediaIntent.firstMediaItemType()(v20);
  uint64_t v44 = a1;
  BOOL v22 = v21 == 5 || INPlayMediaIntent.firstMediaItemType()(v21) == 19;
  uint64_t v23 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v23, &v46);
  uint64_t v25 = inited;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219310;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  unint64_t v26 = 0xE000000000000000LL;
  if (v19)
  {
    unint64_t v26 = v19;
    uint64_t v27 = v17;
  }

  else
  {
    uint64_t v27 = 0LL;
  }

  *(void *)(inited + 4sub_6C3C(v0 + 8) = v27;
  *(void *)(inited + 56) = v26;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x6F696461527369LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE700000000000000LL;
  *(_BYTE *)(inited + 96) = v20 == 16;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x696C79616C507369LL;
  *(void *)(inited + 136) = 0xEA00000000007473LL;
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 4) = v22;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  strcpy((char *)(inited + 176), "isAppSpecified");
  *(_BYTE *)(inited + 191) = -18;
  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v15 & 1;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = 0xD00000000000001BLL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0x8000000000221920LL;
  *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11,  2,  0xD00000000000003CLL,  0x8000000000221220,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57,  2,  537, 0) = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  *(void *)(v25 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  *(void *)(v25 + 27sub_6C3C(v0 + 2) = 0xD00000000000001CLL;
  *(void *)(v25 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x8000000000221940LL;
  BOOL v28 = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  *(void *)(v25 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v25 + 28sub_6C3C(v0 + 8) = v28;
  unint64_t v29 = sub_74D54(v25);
  uint64_t v30 = *(void **)(v5 + 120);
  v45[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  _BYTE v45[4] = &off_272BD0;
  v45[0] = a2;
  uint64_t v31 = v30[4];
  uint64_t v32 = v30[5];
  uint64_t v33 = v30[6];
  uint64_t v34 = swift_allocObject(&unk_272370, 32LL, 7LL);
  v42[1] = v42;
  *(void *)(v34 + sub_6C3C(v0 + 16) = v43;
  *(void *)(v34 + 2sub_6C3C(v0 + 4) = a4;
  __chkstk_darwin(v34);
  v42[-10] = v32;
  v42[-9] = v33;
  strcpy((char *)&v42[-8], "PlaySomething");
  HIWORD(v42[-7]) = -4864;
  uint64_t v37 = v31;
  unint64_t v38 = v29;
  uint64_t v39 = v44;
  uint64_t v40 = v45;
  uint64_t v41 = 0LL;
  id v35 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v34,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v32,  v33,  0x656D6F5379616C50LL,  0xED0000676E696874LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v42[-12]);
  swift_bridgeObjectRelease(v29);
  swift_release(v34);
  return sub_1F6CC((uint64_t)v45, &qword_283FE8);
}

uint64_t sub_15FFAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_30600();
  uint64_t v10 = v9;
  unint64_t v12 = v11;
  uint64_t v13 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v13, v37);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214510;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD000000000000016LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x80000000002219E0LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  if (v12) {
    uint64_t v15 = v10;
  }
  else {
    uint64_t v15 = 0LL;
  }
  unint64_t v16 = 0xE000000000000000LL;
  if (v12) {
    unint64_t v16 = v12;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v15;
  *(void *)(inited + 56) = v16;
  unint64_t v17 = sub_74D54(inited);
  unint64_t v18 = *(void **)(v5 + 120);
  uint64_t v36[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v36[4] = &off_272BD0;
  v36[0] = a2;
  uint64_t v19 = v18[4];
  uint64_t v20 = v18[5];
  uint64_t v21 = v18[6];
  uint64_t v22 = swift_allocObject(&unk_2722F8, 32LL, 7LL);
  *(void *)(v22 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v22 + 2sub_6C3C(v0 + 4) = a4;
  uint64_t v27 = v20;
  uint64_t v28 = v21;
  unint64_t v29 = 0xD00000000000001ALL;
  unint64_t v30 = 0x8000000000221A00LL;
  uint64_t v31 = v19;
  unint64_t v32 = v17;
  uint64_t v33 = a1;
  uint64_t v34 = v36;
  uint64_t v35 = 0LL;
  id v23 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v22,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v20,  v21,  0xD00000000000001ALL,  0x8000000000221A00LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v26);
  swift_bridgeObjectRelease(v17);
  swift_release(v22);
  return sub_1F6CC((uint64_t)v36, &qword_283FE8);
}

void sub_16016C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v77 = a1;
  uint64_t v74 = sub_30544();
  unint64_t v10 = v9;
  sub_30240();
  uint64_t v72 = v11;
  double v79 = v12;
  sub_30600();
  uint64_t v73 = v13;
  unint64_t v78 = v14;
  id v15 = [a2 mediaItems];
  if (v15)
  {
    unint64_t v16 = v15;
    unint64_t v75 = v10;
    uint64_t v76 = v5;
    uint64_t v17 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0) {
        uint64_t v64 = v18;
      }
      else {
        uint64_t v64 = v18 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v18);
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter(v64);
      swift_bridgeObjectRelease(v18);
      if (v20 < 0) {
        goto LABEL_63;
      }
      if (v20 >= 1) {
        uint64_t v21 = 1LL;
      }
      else {
        uint64_t v21 = v20;
      }
      swift_bridgeObjectRetain(v18);
      uint64_t v70 = v64;
      uint64_t v65 = _CocoaArrayWrapper.endIndex.getter(v64);
      swift_bridgeObjectRelease(v18);
      if (v65 >= v21)
      {
        swift_bridgeObjectRetain(v18);
        uint64_t v66 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease(v18);
        if (v66 >= v20)
        {
LABEL_7:
          if ((v18 & 0xC000000000000001LL) != 0 && (unint64_t)v20 >= 2)
          {
            Swift::Int v23 = v21;
            do
            {
              Swift::Int v24 = v23 + 1;
              _ArrayBuffer._typeCheckSlowPath(_:)(v23);
              Swift::Int v23 = v24;
            }

            while (v20 != v24);
          }

          uint64_t v71 = a3;
          if ((unint64_t)v18 >> 62)
          {
            if (v18 < 0) {
              uint64_t v28 = v18;
            }
            else {
              uint64_t v28 = v18 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(v18);
            uint64_t v25 = _CocoaArrayWrapper.subscript.getter(v21, v20, v28);
            uint64_t v26 = v29;
            uint64_t v21 = v30;
            unint64_t v32 = v31;
            swift_bridgeObjectRelease_n(v18, 2LL);
            uint64_t v20 = v32 >> 1;
          }

          else
          {
            uint64_t v25 = v18 & 0xFFFFFFFFFFFFFF8LL;
            uint64_t v26 = (v18 & 0xFFFFFFFFFFFFFF8LL) + 32;
          }

          uint64_t v35 = v20 - v21;
          BOOL v33 = v20 == v21;
          BOOL v34 = v20 <= v21;
          unint64_t v10 = v75;
          uint64_t v5 = v76;
          if (v33)
          {
            uint64_t v27 = _swiftEmptyArrayStorage;
            goto LABEL_36;
          }

          if (!v34)
          {
            uint64_t v69 = v25;
            uint64_t v70 = a4;
            swift_unknownObjectRetain(v25, v19);
            Swift::String v36 = (id *)(v26 + 8 * v21);
            uint64_t v27 = _swiftEmptyArrayStorage;
            do
            {
              id v37 = *v36;
              id v38 = [v37 artist];
              if (v38)
              {
                uint64_t v39 = v38;
                uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
                uint64_t v42 = v41;

                if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0) {
                  uint64_t v27 = sub_1FC6C(0LL, v27[2] + 1LL, 1, v27);
                }
                unint64_t v44 = v27[2];
                unint64_t v43 = v27[3];
                if (v44 >= v43 >> 1) {
                  uint64_t v27 = sub_1FC6C((void *)(v43 > 1), v44 + 1, 1, v27);
                }
                v27[2] = v44 + 1;
                char v45 = &v27[2 * v44];
                _BYTE v45[4] = v40;
                void v45[5] = v42;
              }

              else
              {
              }

              ++v36;
              --v35;
            }

            while (v35);
            uint64_t v25 = v69;
            swift_unknownObjectRelease(v69);
            a4 = v70;
            unint64_t v10 = v75;
            uint64_t v5 = v76;
LABEL_36:
            swift_unknownObjectRelease(v25);
            a3 = v71;
            if (!v79) {
              goto LABEL_37;
            }
            goto LABEL_40;
          }

          goto LABEL_62;
        }

        __break(1u);
      }
    }

    else
    {
      uint64_t v20 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8LL));
      if (v20 >= 1) {
        uint64_t v21 = 1LL;
      }
      else {
        uint64_t v21 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8LL));
      }
    }

    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    return;
  }

  uint64_t v27 = _swiftEmptyArrayStorage;
  if (!v79)
  {
LABEL_37:
    if (!v78 && !v10)
    {
      swift_bridgeObjectRelease(v27);
      sub_15E380(v77, a2, a3, a4);
      return;
    }
  }

uint64_t sub_160734(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a1;
  uint64_t v8 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, &v58);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219310;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  uint64_t v13 = INPlayMediaIntent.firstMediaItemType()(inited);
  uint64_t v14 = INPlayMediaIntent.firstMediaItemType()(v13);
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t v53 = v4;
  if (v13 == 7 || v14 == 8) {
    sub_30600();
  }
  else {
    sub_30240();
  }
  if (v16) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = 0LL;
  }
  if (v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE000000000000000LL;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v17;
  *(void *)(inited + 56) = v18;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  strcpy((char *)(inited + 80), "episodeTitle");
  *(_BYTE *)(inited + 9sub_6C3C(v0 + 3) = 0;
  *(_WORD *)(inited + 9sub_6C3C(v0 + 4) = -5120;
  sub_30240();
  if (v20) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = 0LL;
  }
  if (v20) {
    unint64_t v22 = v20;
  }
  else {
    unint64_t v22 = 0xE000000000000000LL;
  }
  *(void *)(inited + 96) = v21;
  *(void *)(inited + 10sub_6C3C(v0 + 4) = v22;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for String;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0x707954616964656DLL;
  *(void *)(inited + 136) = 0xE900000000000065LL;
  uint64_t v23 = INPlayMediaIntent.firstMediaItemType()(v19);
  *(void *)(inited + 14sub_6C3C(v0 + 4) = sub_25AD0(v23);
  *(void *)(inited + 15sub_6C3C(v0 + 2) = v24;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(inited + 176) = 0x747365646C4F7369LL;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0xE800000000000000LL;
  id v25 = [a2 mediaSearch];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = (char *)[v25 sortOrder];

    BOOL v28 = v27 == (_BYTE *)&dword_0 + 2;
  }

  else
  {
    BOOL v28 = 0;
  }

  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v28;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = 0x74736577654E7369LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE800000000000000LL;
  id v29 = objc_msgSend(a2, "mediaSearch", v53);
  if (v29)
  {
    uint64_t v30 = v29;
    unint64_t v31 = (char *)[v29 sortOrder];

    BOOL v32 = v31 == (_BYTE *)&dword_0 + 1;
  }

  else
  {
    BOOL v32 = 0;
  }

  uint64_t v33 = v53;
  *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v32;
  *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  strcpy((char *)(inited + 272), "isAppSpecified");
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 7) = -18;
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v34 = static AppSelectionContext.shared.getter();
  if (v34)
  {
    uint64_t v35 = v34;
    Swift::String v36 = a2;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v35);
  }

  else
  {
    Swift::String v36 = a2;
    uint64_t v37 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v10, 1LL, 1LL, v37);
  }

  char v38 = sub_15F0C0(v56, (uint64_t)v36, (uint64_t (*)(char *, uint64_t))(v33 + 128), (uint64_t)v10);
  sub_1F6CC((uint64_t)v10, &qword_285470);
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 8) = v38 & 1;
  unint64_t v39 = sub_74D54(inited);
  uint64_t v40 = *(void **)(v33 + 120);
  v57[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v57[4] = &off_272BD0;
  v57[0] = v36;
  uint64_t v41 = v40[4];
  uint64_t v42 = v40[5];
  uint64_t v43 = v40[6];
  uint64_t v44 = swift_allocObject(&unk_272348, 32LL, 7LL);
  uint64_t v53 = (uint64_t)&v53;
  uint64_t v45 = v55;
  *(void *)(v44 + sub_6C3C(v0 + 16) = v54;
  *(void *)(v44 + 2sub_6C3C(v0 + 4) = v45;
  __chkstk_darwin(v44);
  *(&v53 - sub_6C3C(v0 + 10) = v42;
  *(&v53 - sub_6C3C(v0 + 9) = v43;
  *(&v53 - sub_6C3C(v0 + 8) = 0x63646F5079616C50LL;
  *(&v53 - sub_6C3C(v0 + 7) = 0xEB00000000747361LL;
  uint64_t v48 = v41;
  unint64_t v49 = v39;
  uint64_t v50 = v56;
  uint64_t v51 = v57;
  uint64_t v52 = 0LL;
  id v46 = v36;
  swift_retain(v45);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v44,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v42,  v43,  0x63646F5079616C50LL,  0xEB00000000747361LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v53 - 12));
  swift_bridgeObjectRelease(v39);
  swift_release(v44);
  return sub_1F6CC((uint64_t)v57, &qword_283FE8);
}

uint64_t sub_160B80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = a4;
  uint64_t v9 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v12, &v48);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_2144D0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  sub_30240();
  if (v15) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 0LL;
  }
  unint64_t v17 = 0xE000000000000000LL;
  if (v15) {
    unint64_t v17 = v15;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v16;
  *(void *)(inited + 56) = v17;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x6F696461527369LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE700000000000000LL;
  *(_BYTE *)(inited + 96) = INPlayMediaIntent.firstMediaItemType()(v14) == 16;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD00000000000001BLL;
  *(void *)(inited + 136) = 0x8000000000221920LL;
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 4) = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD00000000000001CLL;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0x8000000000221940LL;
  unint64_t v18 = (char *)[a2 playbackQueueLocation];
  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v18 == (_BYTE *)&dword_0 + 3;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = 0x696C79616C507369LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xEA00000000007473LL;
  uint64_t v19 = INPlayMediaIntent.firstMediaItemType()(v18);
  BOOL v20 = v19 == 5 || INPlayMediaIntent.firstMediaItemType()(v19) == 19;
  *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v20;
  *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  strcpy((char *)(inited + 272), "isAppSpecified");
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 7) = -18;
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v21 = static AppSelectionContext.shared.getter();
  if (v21)
  {
    uint64_t v22 = v21;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v22);
  }

  else
  {
    uint64_t v23 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v11, 1LL, 1LL, v23);
  }

  uint64_t v46 = a1;
  char v24 = sub_15F0C0(a1, (uint64_t)a2, (uint64_t (*)(char *, uint64_t))(v5 + 128), (uint64_t)v11);
  sub_1F6CC((uint64_t)v11, &qword_285470);
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 8) = v24 & 1;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  strcpy((char *)(inited + 320), "isPersonalized");
  *(_BYTE *)(inited + 335) = -18;
  id v25 = [a2 privatePlayMediaIntentData];
  id v26 = [v25 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v27.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v26)
  {
    id v28 = v26;
    char v29 = static NSObject.== infix(_:_:)(v28, v27.super.super.isa);
  }

  else
  {
    char v29 = 0;
  }

  *(void *)(inited + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &type metadata for Bool;
  *(_BYTE *)(inited + 336) = v29 & 1;
  v44[0] = sub_74D54(inited);
  uint64_t v30 = *(void **)(v5 + 120);
  uint64_t v47[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v47[4] = &off_272BD0;
  v47[0] = a2;
  uint64_t v31 = v30[4];
  uint64_t v32 = v30[5];
  uint64_t v33 = v30[6];
  uint64_t v34 = swift_allocObject(&unk_272398, 32LL, 7LL);
  v44[1] = v44;
  uint64_t v35 = v45;
  *(void *)(v34 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v34 + 2sub_6C3C(v0 + 4) = v35;
  __chkstk_darwin(v34);
  v44[-10] = v32;
  v44[-9] = v33;
  v44[-8] = 0xD000000000000010LL;
  v44[-7] = 0x8000000000221A60LL;
  uint64_t v39 = v31;
  uint64_t v36 = v44[0];
  uint64_t v40 = v44[0];
  uint64_t v41 = v46;
  uint64_t v42 = v47;
  uint64_t v43 = 0LL;
  id v37 = a2;
  swift_retain(v35);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v34,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v32,  v33,  0xD000000000000010LL,  0x8000000000221A60LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v44[-12]);
  swift_bridgeObjectRelease(v36);
  swift_release(v34);
  return sub_1F6CC((uint64_t)v47, &qword_283FE8);
}

uint64_t sub_161008(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v57 = a1;
  uint64_t v13 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v16, &v59);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219310;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  uint64_t v56 = a5;
  if (a3)
  {
    unint64_t v18 = a3;
  }

  else
  {
    id v19 = [a4 mediaSearch];
    if (v19
      && (BOOL v20 = v19, v21 = [v19 mediaName], v20, v21))
    {
      a2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      unint64_t v18 = v22;
    }

    else
    {
      a2 = 0LL;
      unint64_t v18 = 0xE000000000000000LL;
    }
  }

  *(void *)(inited + 4sub_6C3C(v0 + 8) = a2;
  *(void *)(inited + 56) = v18;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xD000000000000011LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000221A80LL;
  swift_bridgeObjectRetain(a3);
  id v23 = [a4 mediaContainer];
  if (v23 && (char v24 = v23, v25 = (char *)[v23 type], v24, v25 == (_BYTE *)&dword_0 + 2))
  {
    BOOL v26 = 1;
  }

  else
  {
    v58[0] = a4;
    uint64_t v27 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
    if (MediaIntentCommons.getMediaType()(v27, &protocol witness table for INPlayMediaIntent) == 2
      && (id v28 = [a4 mediaSearch]) != 0)
    {
      char v29 = v28;
      uint64_t v30 = (int *)[v28 sortOrder];

      BOOL v26 = v30 == &dword_8;
    }

    else
    {
      BOOL v26 = 0;
    }
  }

  *(_BYTE *)(inited + 96) = v26;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  strcpy((char *)(inited + 128), "isAppSpecified");
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 3) = -18;
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v31 = static AppSelectionContext.shared.getter();
  if (v31)
  {
    uint64_t v32 = v31;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v32);
  }

  else
  {
    uint64_t v33 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v15, 1LL, 1LL, v33);
  }

  char v34 = sub_15F0C0(v57, (uint64_t)a4, (uint64_t (*)(char *, uint64_t))(v7 + 128), (uint64_t)v15);
  sub_1F6CC((uint64_t)v15, &qword_285470);
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 4) = v34 & 1;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD00000000000001ELL;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0x8000000000221AA0LL;
  id v35 = [a4 privatePlayMediaIntentData];
  id v36 = [v35 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v37.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  if (v36)
  {
    id v38 = v36;
    char v39 = static NSObject.== infix(_:_:)(v38, v37.super.super.isa);
  }

  else
  {
    char v39 = 0;
  }

  *(_BYTE *)(inited + 19sub_6C3C(v0 + 2) = v39 & 1;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = 0x7478654E7369LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0xE600000000000000LL;
  BOOL v40 = [a4 playbackQueueLocation] == (char *)&dword_0 + 2
     || [a4 playbackQueueLocation] == (char *)&dword_0 + 1;
  *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v40;
  *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  *(void *)(inited + 27sub_6C3C(v0 + 2) = 0x726574614C7369LL;
  *(void *)(inited + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE700000000000000LL;
  BOOL v41 = [a4 playbackQueueLocation] == (char *)&dword_0 + 3;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(inited + 28sub_6C3C(v0 + 8) = v41;
  unint64_t v42 = sub_74D54(inited);
  uint64_t v43 = *(void **)(v7 + 120);
  v58[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v58[4] = &off_272BD0;
  v58[0] = a4;
  uint64_t v44 = v43[4];
  uint64_t v45 = v43[5];
  uint64_t v46 = v43[6];
  uint64_t v47 = swift_allocObject(&unk_2723C0, 32LL, 7LL);
  v55[1] = v55;
  *(void *)(v47 + sub_6C3C(v0 + 16) = v56;
  *(void *)(v47 + 2sub_6C3C(v0 + 4) = a6;
  __chkstk_darwin(v47);
  v55[-10] = v45;
  v55[-9] = v46;
  v55[-8] = 0xD000000000000014LL;
  v55[-7] = 0x8000000000221AC0LL;
  uint64_t v50 = v44;
  unint64_t v51 = v42;
  uint64_t v52 = v57;
  uint64_t v53 = v58;
  uint64_t v54 = 0LL;
  id v48 = a4;
  swift_retain(a6);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v47,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v45,  v46,  0xD000000000000014LL,  0x8000000000221AC0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v55[-12]);
  swift_bridgeObjectRelease(v42);
  swift_release(v47);
  return sub_1F6CC((uint64_t)v58, &qword_283FE8);
}

uint64_t sub_16156C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v10);
  uint64_t v12 = &v90[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v13 = static AppSelectionContext.shared.getter();
  if (v13)
  {
    uint64_t v14 = v13;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v14);
  }

  else
  {
    uint64_t v15 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v12, 1LL, 1LL, v15);
  }

  int v16 = sub_15F0C0(a1, (uint64_t)a2, (uint64_t (*)(char *, uint64_t))(v5 + 128), (uint64_t)v12);
  sub_1F6CC((uint64_t)v12, &qword_285470);
  id v17 = [a2 mediaSearch];
  LODWORD(v9sub_6C3C(v0 + 7) = v16;
  if (!v17
    || (v18 = v17, id v19 = (char *)[v17 sortOrder], v18, v19 != (_BYTE *)&dword_4 + 1))
  {
    id v20 = [a2 mediaSearch];
    if (!v20) {
      goto LABEL_11;
    }
    id v21 = v20;
    unint64_t v22 = (char *)[v20 sortOrder];

    if (v22 != (_BYTE *)&dword_0 + 3) {
      goto LABEL_11;
    }
  }

  id v23 = sub_30544();
  if (v24)
  {
    id v25 = v23;
    unint64_t v26 = v24;
    sub_30600();
    id v28 = v27;
    unint64_t v30 = v29;
    uint64_t v96 = v25;
    if (!v29)
    {
LABEL_10:
      int v91 = 0;
      goto LABEL_20;
    }
  }

  else
  {
LABEL_11:
    sub_30240();
    id v25 = v31;
    unint64_t v26 = v32;
    sub_30600();
    unint64_t v30 = v34;
    if (!v26)
    {
      uint64_t v96 = v25;
      if (!v34)
      {
        uint64_t v92 = 0LL;
        unint64_t v35 = 0LL;
        int v91 = 1;
        goto LABEL_22;
      }

      swift_bridgeObjectRelease(v34);
      unint64_t v26 = 0LL;
      int v91 = 1;
      goto LABEL_20;
    }

    id v28 = v33;
    uint64_t v96 = v25;
    if (!v34) {
      goto LABEL_10;
    }
  }

  if (v25 != v28 || v26 != v30)
  {
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26);
    swift_bridgeObjectRelease(v30);
    int v91 = 0;
    if ((v36 & 1) != 0)
    {
      uint64_t v92 = 0LL;
      unint64_t v35 = 0LL;
LABEL_21:
      unint64_t v30 = v26;
      goto LABEL_22;
    }

uint64_t sub_161D90(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v84 = a4;
  uint64_t v85 = a1;
  uint64_t v8 = sub_6C5C(&qword_285470);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v81 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = INPlayMediaIntent.firstMediaItemType()(v9);
  id v12 = [a2 mediaSearch];
  if (!v12
    || (uint64_t v13 = v12, v14 = (char *)[v12 sortOrder], v13, v14 != (_BYTE *)&dword_4 + 1))
  {
    id v15 = [a2 mediaSearch];
    if (!v15) {
      goto LABEL_17;
    }
    int v16 = v15;
    id v17 = (char *)[v15 sortOrder];

    if (v17 != (_BYTE *)&dword_0 + 3) {
      goto LABEL_17;
    }
  }

  unint64_t v18 = (unint64_t)sub_30544();
  if (v19) {
    uint64_t v20 = v18 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v20 = 0LL;
  }
  if (v19) {
    unint64_t v21 = v19;
  }
  else {
    unint64_t v21 = 0xE000000000000000LL;
  }
  swift_bridgeObjectRelease(v21);
  uint64_t v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000LL) == 0) {
    uint64_t v22 = v20;
  }
  if (v22 && v11 != 19)
  {
    id v23 = sub_30544();
    if (v24)
    {
      unint64_t v25 = v24;
      unint64_t v26 = v23;
    }

    else
    {
      sub_30240();
      unint64_t v26 = v29;
      unint64_t v25 = v30;
    }

    int v79 = 1;
  }

  else
  {
LABEL_17:
    sub_30240();
    unint64_t v26 = v27;
    unint64_t v25 = v28;
    int v79 = 0;
  }

  id v31 = [a2 mediaSearch];
  unint64_t v82 = v5;
  uint64_t v83 = a3;
  uint64_t v80 = v11;
  if (v31
    && (unint64_t v32 = v31, v33 = [v31 artistName], v32, v33))
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    unint64_t v36 = v35;
  }

  else
  {
    uint64_t v34 = 0LL;
    unint64_t v36 = 0xE000000000000000LL;
  }

  uint64_t v37 = v26;
  id v38 = [a2 backingStore];
  uint64_t v39 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
  id v40 = (void *)swift_dynamicCastObjCClass(v38, v39);
  if (v40) {
    unsigned __int8 v41 = [v40 playShuffled];
  }
  else {
    unsigned __int8 v41 = 0;
  }

  if ([a2 playbackRepeatMode] == (char *)&dword_0 + 2)
  {
    BOOL v42 = 1;
    if ((v36 & 0x2000000000000000LL) != 0)
    {
LABEL_29:
      uint64_t v43 = HIBYTE(v36) & 0xF;
      goto LABEL_32;
    }
  }

  else
  {
    BOOL v42 = [a2 playbackRepeatMode] == (char *)&dword_0 + 3;
    if ((v36 & 0x2000000000000000LL) != 0) {
      goto LABEL_29;
    }
  }

  uint64_t v43 = v34 & 0xFFFFFFFFFFFFLL;
LABEL_32:
  if (v43) {
    unsigned __int8 v44 = 0;
  }
  else {
    unsigned __int8 v44 = v41;
  }
  if (v43) {
    BOOL v45 = 0;
  }
  else {
    BOOL v45 = v42;
  }
  uint64_t v46 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v46, &v87);
  uint64_t v48 = inited;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_215010;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
  if (v25) {
    id v49 = v37;
  }
  else {
    id v49 = 0LL;
  }
  if (v25) {
    unint64_t v50 = v25;
  }
  else {
    unint64_t v50 = 0xE000000000000000LL;
  }
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v49;
  *(void *)(inited + 56) = v50;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
  sub_30600();
  if (v52) {
    uint64_t v53 = v51;
  }
  else {
    uint64_t v53 = 0LL;
  }
  if (v52) {
    unint64_t v54 = v52;
  }
  else {
    unint64_t v54 = 0xE000000000000000LL;
  }
  *(void *)(v48 + 96) = v53;
  *(void *)(v48 + 10sub_6C3C(v0 + 4) = v54;
  *(void *)(v48 + 1sub_6C3C(v0 + 20) = &type metadata for String;
  *(void *)(v48 + 12sub_6C3C(v0 + 8) = 0x7053747369747261LL;
  *(void *)(v48 + 136) = 0xEF64656966696365LL;
  *(void *)(v48 + 14sub_6C3C(v0 + 4) = v34;
  *(void *)(v48 + 15sub_6C3C(v0 + 2) = v36;
  *(void *)(v48 + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(v48 + 176) = 0xD00000000000001BLL;
  *(void *)(v48 + 18sub_6C3C(v0 + 4) = 0x8000000000221920LL;
  *(_BYTE *)(v48 + 19sub_6C3C(v0 + 2) = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  *(void *)(v48 + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(v48 + 22sub_6C3C(v0 + 4) = 0xD00000000000001CLL;
  *(void *)(v48 + 23sub_6C3C(v0 + 2) = 0x8000000000221940LL;
  *(_BYTE *)(v48 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11,  2,  0xD00000000000003CLL,  0x8000000000221220,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57,  2,  537, 0) = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  *(void *)(v48 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  *(void *)(v48 + 27sub_6C3C(v0 + 2) = 0x667568536E4F7369LL;
  *(void *)(v48 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xEB00000000656C66LL;
  *(_BYTE *)(v48 + 28sub_6C3C(v0 + 8) = v44;
  *(void *)(v48 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(v48 + 3sub_6C3C(v0 + 20) = 0x657065526E4F7369LL;
  *(void *)(v48 + 32sub_6C3C(v0 + 8) = 0xEA00000000007461LL;
  *(_BYTE *)(v48 + 336) = v45;
  *(void *)(v48 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &type metadata for Bool;
  *(void *)(v48 + 36sub_6C3C(v0 + 8) = 0x6E6547706F547369LL;
  *(void *)(v48 + 376) = 0xEA00000000006572LL;
  *(_BYTE *)(v48 + 38sub_6C3C(v0 + 4) = v79;
  *(void *)(v48 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
  strcpy((char *)(v48 + 416), "isUserPlaylist");
  *(_BYTE *)(v48 + 431) = -18;
  *(_BYTE *)(v48 + 43sub_6C3C(v0 + 2) = 0;
  *(void *)(v48 + 456) = &type metadata for Bool;
  strcpy((char *)(v48 + 464), "isAppSpecified");
  *(_BYTE *)(v48 + 47sub_6C3C(v0 + 9) = -18;
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v55 = static AppSelectionContext.shared.getter();
  if (v55)
  {
    uint64_t v56 = v55;
    uint64_t v57 = (uint64_t)v81;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v56);
  }

  else
  {
    uint64_t v58 = type metadata accessor for AppSelectionReport(0LL);
    uint64_t v57 = (uint64_t)v81;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56LL))(v81, 1LL, 1LL, v58);
  }

  uint64_t v59 = v82;
  uint64_t v60 = v83;
  BOOL v61 = v80 == 19;
  char v62 = sub_15F0C0(v85, (uint64_t)a2, (uint64_t (*)(char *, uint64_t))(v82 + 128), v57);
  sub_1F6CC(v57, &qword_285470);
  *(_BYTE *)(v48 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v62 & 1;
  *(void *)(v48 + 50sub_6C3C(v0 + 4) = &type metadata for Bool;
  *(void *)(v48 + 51sub_6C3C(v0 + 2) = 0xD000000000000019LL;
  *(void *)(v48 + 5sub_6C3C(v0 + 20) = 0x8000000000221BF0LL;
  *(void *)(v48 + 55sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(_BYTE *)(v48 + 52sub_6C3C(v0 + 8) = v61;
  *(void *)(v48 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x6564616365447369LL;
  *(void *)(v48 + 56sub_6C3C(v0 + 8) = 0xEF6E6F6974617453LL;
  char v63 = sub_180F3C();
  *(void *)(v48 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &type metadata for Bool;
  *(_BYTE *)(v48 + 576) = v63 & 1;
  uint64_t v81 = (_BYTE *)sub_74D54(v48);
  unint64_t v64 = (void *)*((void *)v59 + 15);
  v86[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v86[4] = &off_272BD0;
  v86[0] = a2;
  uint64_t v65 = v64[4];
  uint64_t v66 = v64[5];
  uint64_t v67 = v64[6];
  uint64_t v68 = swift_allocObject(&unk_2724B0, 32LL, 7LL);
  unint64_t v82 = v78;
  uint64_t v69 = v84;
  *(void *)(v68 + sub_6C3C(v0 + 16) = v60;
  *(void *)(v68 + 2sub_6C3C(v0 + 4) = v69;
  __chkstk_darwin(v68);
  *(void *)&v78[-80] = v66;
  *(void *)&v78[-72] = v67;
  *(void *)&v78[-64] = 0xD000000000000015LL;
  *(void *)&v78[-56] = 0x8000000000221C10LL;
  uint64_t v73 = v65;
  uint64_t v70 = v81;
  uint64_t v74 = v81;
  uint64_t v75 = v85;
  id v76 = v86;
  uint64_t v77 = 0LL;
  id v71 = a2;
  swift_retain(v69);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v68,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v66,  v67,  0xD000000000000015LL,  0x8000000000221C10LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v78[-96]);
  swift_bridgeObjectRelease(v70);
  swift_release(v68);
  return sub_1F6CC((uint64_t)v86, &qword_283FE8);
}

uint64_t sub_162454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = static SiriAudioEnvironment.siriLocale.getter(v6);
  uint64_t v10 = Locale.languageCode.getter(v9);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v12) {
    goto LABEL_7;
  }
  if (v10 == 28261 && v12 == 0xE200000000000000LL)
  {
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12);
    swift_bridgeObjectRelease(v12);
    if ((v14 & 1) == 0)
    {
LABEL_7:
      swift_bridgeObjectRetain(a2);
      return a1;
    }
  }

  uint64_t v26 = a1;
  uint64_t v27 = a2;
  unint64_t v24 = 0xD00000000000001BLL;
  unint64_t v25 = "QueryStationEditorial";
  uint64_t v22 = 0x33245F32245F3124LL;
  unint64_t v23 = 0xE800000000000000LL;
  unint64_t v15 = sub_6D68();
  uint64_t v16 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v24,  &v22,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v15,  v15,  v15);
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  if (v16 == a1 && v17 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17) & 1) != 0)
  {
    swift_bridgeObjectRetain("(^|\\D)([1-9]\\d\\d\\.\\d)($|\\D)");
    swift_bridgeObjectRelease(v19);
    uint64_t v26 = a1;
    uint64_t v27 = a2;
    unint64_t v24 = 0xD000000000000019LL;
    unint64_t v25 = "(^|\\D)([1-9]\\d\\d\\.\\d)($|\\D)";
    uint64_t v22 = 0x33245F32245F3124LL;
    unint64_t v23 = 0xE800000000000000LL;
    uint64_t v18 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v24,  &v22,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v15,  v15,  v15);
    uint64_t v19 = v20;
    swift_bridgeObjectRelease("(^|\\D)([1-9]\\d\\d\\.\\d)($|\\D)");
  }

  if (v18 == a1 && v19 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19) & 1) != 0)
  {
    swift_bridgeObjectRetain("(^|\\D)([1-9]\\d\\d\\d)($|\\D)");
    swift_bridgeObjectRelease(v19);
    uint64_t v26 = a1;
    uint64_t v27 = a2;
    unint64_t v24 = 0xD000000000000017LL;
    unint64_t v25 = "(^|\\D)([1-9]\\d\\d\\d)($|\\D)";
    uint64_t v22 = 0x33245F32245F3124LL;
    unint64_t v23 = 0xE800000000000000LL;
    uint64_t v18 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v24,  &v22,  1025LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v15,  v15,  v15);
    swift_bridgeObjectRelease("(^|\\D)([1-9]\\d\\d\\d)($|\\D)");
  }

  swift_arrayDestroy(&qword_26ADC0, 3LL, &type metadata for String);
  return v18;
}

uint64_t sub_16272C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a1;
  uint64_t v5 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v8, &v54);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219320;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD00000000000001BLL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x8000000000221920LL;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xD00000000000001CLL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000221940LL;
  *(_BYTE *)(inited + 96) = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000010LL;
  *(void *)(inited + 136) = 0x8000000000221B90LL;
  sub_30240();
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0LL;
  }
  if (v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = 0xE000000000000000LL;
  }
  *(void *)(inited + 14sub_6C3C(v0 + 4) = v12;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = v13;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(inited + 176) = 0xD000000000000016LL;
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0x8000000000221B40LL;
  sub_30240();
  if (v15)
  {
    uint64_t v16 = v15;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v16 = 0xE000000000000000LL;
  }

  uint64_t v17 = sub_162454(v14, v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease(v16);
  *(void *)(inited + 19sub_6C3C(v0 + 2) = v17;
  *(void *)(inited + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v19;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for String;
  *(void *)(inited + 22sub_6C3C(v0 + 4) = 0xD000000000000011LL;
  *(void *)(inited + 23sub_6C3C(v0 + 2) = 0x8000000000221BB0LL;
  *(_BYTE *)(inited + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( a2,  (uint64_t)&off_26ADF0) & 1;
  *(void *)(inited + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  strcpy((char *)(inited + 272), "providerName");
  *(_BYTE *)(inited + 285) = 0;
  *(_WORD *)(inited + 286) = -5120;
  sub_180DCC();
  if (v21) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = 0LL;
  }
  if (v21) {
    unint64_t v23 = v21;
  }
  else {
    unint64_t v23 = 0xE000000000000000LL;
  }
  *(void *)(inited + 28sub_6C3C(v0 + 8) = v22;
  *(void *)(inited + 296) = v23;
  *(void *)(inited + 31sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 3sub_6C3C(v0 + 20) = 0x65726E6567LL;
  *(void *)(inited + 32sub_6C3C(v0 + 8) = 0xE500000000000000LL;
  unint64_t v24 = sub_30544();
  if (v25) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = 0LL;
  }
  if (v25) {
    unint64_t v27 = v25;
  }
  else {
    unint64_t v27 = 0xE000000000000000LL;
  }
  *(void *)(inited + 336) = v26;
  *(void *)(inited + 34sub_6C3C(v0 + 4) = v27;
  *(void *)(inited + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &type metadata for String;
  strcpy((char *)(inited + 368), "isAppSpecified");
  *(_BYTE *)(inited + 38sub_6C3C(v0 + 3) = -18;
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v28 = static AppSelectionContext.shared.getter();
  if (v28)
  {
    uint64_t v29 = v28;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v29);
  }

  else
  {
    uint64_t v30 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v7, 1LL, 1LL, v30);
  }

  id v31 = v49;
  char v32 = sub_15F0C0(v52, (uint64_t)a2, (uint64_t (*)(char *, uint64_t))(v49 + 16), (uint64_t)v7);
  sub_1F6CC((uint64_t)v7, &qword_285470);
  *(void *)(inited + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(_BYTE *)(inited + 38sub_6C3C(v0 + 4) = v32 & 1;
  unint64_t v48 = sub_74D54(inited);
  id v33 = (void *)v31[15];
  v53[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v53[4] = &off_272BD0;
  v53[0] = a2;
  uint64_t v34 = v33[4];
  uint64_t v35 = v33[5];
  uint64_t v36 = v33[6];
  uint64_t v37 = swift_allocObject(&unk_272488, 32LL, 7LL);
  id v49 = &v47;
  uint64_t v38 = v51;
  *(void *)(v37 + sub_6C3C(v0 + 16) = v50;
  *(void *)(v37 + 2sub_6C3C(v0 + 4) = v38;
  __chkstk_darwin(v37);
  *(&v47 - sub_6C3C(v0 + 10) = v35;
  *(&v47 - sub_6C3C(v0 + 9) = v36;
  *(&v47 - sub_6C3C(v0 + 8) = 0xD00000000000001ELL;
  *(&v47 - sub_6C3C(v0 + 7) = 0x8000000000221BD0LL;
  uint64_t v42 = v34;
  unint64_t v39 = v48;
  unint64_t v43 = v48;
  uint64_t v44 = v52;
  BOOL v45 = v53;
  uint64_t v46 = 0LL;
  id v40 = a2;
  swift_retain(v38);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v37,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v35,  v36,  0xD00000000000001ELL,  0x8000000000221BD0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v47 - 12));
  swift_bridgeObjectRelease(v39);
  swift_release(v37);
  return sub_1F6CC((uint64_t)v53, &qword_283FE8);
}

uint64_t sub_162B64(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  BOOL v6 = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  BOOL v7 = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  sub_30240();
  if (v9)
  {
    uint64_t v10 = v9;
  }

  else
  {
    uint64_t v8 = 0LL;
    uint64_t v10 = 0xE000000000000000LL;
  }

  uint64_t v11 = sub_162454(v8, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease(v10);
  sub_180DCC();
  uint64_t v15 = v14;
  unint64_t v17 = v16;
  uint64_t v18 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v18, v44);
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_214FF0;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0xD00000000000001BLL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x8000000000221920LL;
  *(_BYTE *)(inited + 4sub_6C3C(v0 + 8) = v6;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for Bool;
  *(void *)(inited + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xD00000000000001CLL;
  *(void *)(inited + 8sub_6C3C(v0 + 8) = 0x8000000000221940LL;
  *(_BYTE *)(inited + 96) = v7;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  *(void *)(inited + 12sub_6C3C(v0 + 8) = 0xD000000000000016LL;
  *(void *)(inited + 136) = 0x8000000000221B40LL;
  *(void *)(inited + 14sub_6C3C(v0 + 4) = v11;
  *(void *)(inited + 15sub_6C3C(v0 + 2) = v13;
  *(void *)(inited + 16sub_6C3C(v0 + 8) = &type metadata for String;
  *(void *)(inited + 176) = 0x72656469766F7270LL;
  *(void *)(inited + 2sub_6C3C(v0 + 16) = &type metadata for String;
  if (v17) {
    uint64_t v20 = v15;
  }
  else {
    uint64_t v20 = 0LL;
  }
  if (v17) {
    unint64_t v21 = v17;
  }
  else {
    unint64_t v21 = 0xE000000000000000LL;
  }
  *(void *)(inited + 18sub_6C3C(v0 + 4) = 0xEC000000656D614ELL;
  *(void *)(inited + 19sub_6C3C(v0 + 2) = v20;
  *(void *)(inited + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v21;
  unint64_t v22 = sub_74D54(inited);
  unint64_t v23 = *(void **)(v30 + 120);
  v43[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v43[4] = &off_272BD0;
  v43[0] = a2;
  uint64_t v24 = v23[4];
  uint64_t v25 = v23[5];
  uint64_t v26 = v23[6];
  uint64_t v27 = swift_allocObject(&unk_272460, 32LL, 7LL);
  *(void *)(v27 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v27 + 2sub_6C3C(v0 + 4) = a4;
  uint64_t v34 = v25;
  uint64_t v35 = v26;
  unint64_t v36 = 0xD000000000000022LL;
  unint64_t v37 = 0x8000000000221B60LL;
  uint64_t v38 = v24;
  unint64_t v39 = v22;
  uint64_t v40 = a1;
  unsigned __int8 v41 = v43;
  uint64_t v42 = 0LL;
  id v28 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v27,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v25,  v26,  0xD000000000000022LL,  0x8000000000221B60LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v33);
  swift_bridgeObjectRelease(v22);
  swift_release(v27);
  return sub_1F6CC((uint64_t)v43, &qword_283FE8);
}

uint64_t sub_162DE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = a3;
  uint64_t v9 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v12 = static AppSelectionContext.shared.getter();
  if (v12)
  {
    uint64_t v13 = v12;
    dispatch thunk of AppSelectionContext.report.getter();
    swift_release(v13);
  }

  else
  {
    uint64_t v14 = type metadata accessor for AppSelectionReport(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v11, 1LL, 1LL, v14);
  }

  char v15 = sub_15F0C0(a1, (uint64_t)a2, (uint64_t (*)(char *, uint64_t))(v5 + 128), (uint64_t)v11);
  sub_1F6CC((uint64_t)v11, &qword_285470);
  sub_30240();
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  uint64_t v20 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v20, &v48);
  uint64_t v22 = inited;
  *(_OWORD *)(inited + sub_6C3C(v0 + 16) = xmmword_219300;
  *(void *)(inited + 3sub_6C3C(v0 + 2) = 0x747369747261LL;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE600000000000000LL;
  unint64_t v23 = 0xE000000000000000LL;
  if (v19)
  {
    unint64_t v23 = v19;
    uint64_t v24 = v17;
  }

  else
  {
    uint64_t v24 = 0LL;
  }

  *(void *)(inited + 4sub_6C3C(v0 + 8) = v24;
  *(void *)(inited + 56) = v23;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  strcpy((char *)(inited + 80), "isAppSpecified");
  *(_BYTE *)(inited + 95) = -18;
  *(_BYTE *)(inited + 96) = v15 & 1;
  *(void *)(inited + 1sub_6C3C(v0 + 20) = &type metadata for Bool;
  strcpy((char *)(inited + 128), "isPersonalized");
  *(_BYTE *)(inited + 14sub_6C3C(v0 + 3) = -18;
  id v25 = [a2 privatePlayMediaIntentData];
  id v26 = [v25 isPersonalizedRequest];

  sub_1641C(0LL, (unint64_t *)&qword_289350, &OBJC_CLASS___NSNumber_ptr);
  v27.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
  uint64_t v46 = a1;
  if (v26)
  {
    id v28 = v26;
    char v29 = static NSObject.== infix(_:_:)(v28, v27.super.super.isa);
  }

  else
  {
    char v29 = 0;
  }

  *(_BYTE *)(v22 + 14sub_6C3C(v0 + 4) = v29 & 1;
  *(void *)(v22 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
  *(void *)(v22 + 176) = 0xD00000000000001BLL;
  *(void *)(v22 + 18sub_6C3C(v0 + 4) = 0x8000000000221920LL;
  *(_BYTE *)(v22 + 19sub_6C3C(v0 + 2) = [a2 playbackQueueLocation] == (char *)&dword_0 + 2;
  *(void *)(v22 + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
  *(void *)(v22 + 22sub_6C3C(v0 + 4) = 0xD00000000000001CLL;
  *(void *)(v22 + 23sub_6C3C(v0 + 2) = 0x8000000000221940LL;
  BOOL v30 = [a2 playbackQueueLocation] == (char *)&dword_0 + 3;
  *(void *)(v22 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
  *(_BYTE *)(v22 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v30;
  unint64_t v31 = sub_74D54(v22);
  char v32 = *(void **)(v5 + 120);
  uint64_t v47[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v47[4] = &off_272BD0;
  v47[0] = a2;
  uint64_t v33 = v32[4];
  uint64_t v34 = v32[5];
  uint64_t v35 = v32[6];
  uint64_t v36 = swift_allocObject(&unk_2723E8, 32LL, 7LL);
  v44[1] = v44;
  *(void *)(v36 + sub_6C3C(v0 + 16) = v45;
  *(void *)(v36 + 2sub_6C3C(v0 + 4) = a4;
  __chkstk_darwin(v36);
  v44[-10] = v34;
  v44[-9] = v35;
  v44[-8] = 0xD000000000000013LL;
  v44[-7] = 0x8000000000221AE0LL;
  uint64_t v39 = v33;
  unint64_t v40 = v31;
  uint64_t v41 = v46;
  uint64_t v42 = v47;
  uint64_t v43 = 0LL;
  id v37 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v36,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v34,  v35,  0xD000000000000013LL,  0x8000000000221AE0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v44[-12]);
  swift_bridgeObjectRelease(v31);
  swift_release(v36);
  return sub_1F6CC((uint64_t)v47, &qword_283FE8);
}

uint64_t sub_163208(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = *(void **)(v4 + 120);
  v27[3] = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  v27[4] = &off_272BD0;
  v27[0] = a2;
  uint64_t v11 = v10[4];
  uint64_t v12 = v10[5];
  uint64_t v13 = v10[6];
  uint64_t v14 = swift_allocObject(&unk_272500, 32LL, 7LL);
  *(void *)(v14 + sub_6C3C(v0 + 16) = a3;
  *(void *)(v14 + 2sub_6C3C(v0 + 4) = a4;
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  unint64_t v20 = 0xD000000000000015LL;
  unint64_t v21 = 0x8000000000221C50LL;
  uint64_t v22 = v11;
  unint64_t v23 = v9;
  uint64_t v24 = a1;
  id v25 = v27;
  uint64_t v26 = 0LL;
  id v15 = a2;
  swift_retain(a4);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v14,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v12,  v13,  0xD000000000000015LL,  0x8000000000221C50LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v17);
  swift_bridgeObjectRelease(v9);
  swift_release(v14);
  return sub_1F6CC((uint64_t)v27, &qword_283FE8);
}

uint64_t sub_16335C( int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void (*a10)(void **), uint64_t a11)
{
  uint64_t v406 = a4;
  uint64_t v418 = a2;
  unint64_t v419 = a3;
  int v405 = a1;
  uint64_t v408 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v408);
  unint64_t v410 = (unint64_t)&v377 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v16);
  uint64_t v382 = (uint64_t)&v377 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_6C5C(&qword_28B5E8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v396 = (uint64_t)&v377 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v397 = (char *)&v377 - v21;
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v421 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  double v391 = (char *)&v377 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  Swift::String v388 = (char *)&v377 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v381 = (char *)&v377 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v384 = (char *)&v377 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v380 = (char *)&v377 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v383 = (char *)&v377 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v385 = (char *)&v377 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v386 = (char *)&v377 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v387 = (char *)&v377 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v389 = (char *)&v377 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  char v390 = (char *)&v377 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v392 = (char *)&v377 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v393 = (char *)&v377 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v394 = (char *)&v377 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v395 = (char *)&v377 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v398 = (char *)&v377 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v401 = (char *)&v377 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  char v402 = (char *)&v377 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v403 = (char *)&v377 - v60;
  __chkstk_darwin(v59);
  uint64_t v420 = (uint64_t)&v377 - v61;
  uint64_t v62 = swift_allocObject(&unk_272550, 32LL, 7LL);
  id v409 = a10;
  *(void *)(v62 + sub_6C3C(v0 + 16) = a10;
  *(void *)(v62 + 2sub_6C3C(v0 + 4) = a11;
  char v63 = (void *)swift_allocObject(&unk_272578, 72LL, 7LL);
  v63[2] = a5;
  v63[3] = a6;
  uint64_t v411 = a7;
  v63[4] = a7;
  v63[5] = a8;
  v63[6] = a9;
  v63[7] = sub_26570;
  uint64_t v414 = v63;
  v63[8] = v62;
  uint64_t v64 = qword_283888;
  uint64_t v65 = a11;
  swift_retain_n(a11, 2LL);
  uint64_t v66 = a5;
  swift_retain(a5);
  uint64_t v416 = a6;
  swift_retain(a6);
  uint64_t v415 = a8;
  swift_bridgeObjectRetain(a8);
  uint64_t v67 = a9;
  uint64_t v417 = v62;
  swift_retain(v62);
  if (v64 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v68 = sub_6960(v22, (uint64_t)qword_2969C8);
  uint64_t v69 = *(void (**)(uint64_t))(v421 + 16);
  uint64_t v412 = v68;
  v69(v420);
  id v70 = (id)v419;
  id v71 = (os_log_s *)Logger.logObject.getter(v70);
  int v72 = static os_log_type_t.debug.getter();
  BOOL v73 = os_log_type_enabled(v71, (os_log_type_t)v72);
  uint64_t v74 = v22;
  v413 = v67;
  if (!v73)
  {

    unint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t))(v421 + 8);
    uint64_t v83 = v82(v420, v74);
    uint64_t v84 = v66;
    goto LABEL_26;
  }

  LODWORD(v37sub_6C3C(v0 + 9) = v72;
  uint64_t v75 = v421;
  uint64_t v404 = v69;
  uint64_t v407 = v66;
  id v76 = v70;
  unint64_t v77 = swift_slowAlloc(22LL, -1LL);
  uint64_t v378 = swift_slowAlloc(64LL, -1LL);
  *(void *)&__int128 v430 = v378;
  *(_DWORD *)unint64_t v77 = 136315394;
  unint64_t v419 = (unint64_t)v76;
  id v78 = [v76 privatePlayMediaIntentData];
  int v79 = v78;
  uint64_t v399 = a11;
  uint64_t v400 = v22;
  if (v78)
  {
    id v80 = [v78 internalSignals];

    uint64_t v81 = v75;
    if (v80)
    {
      int v79 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v80, &type metadata for String);
    }

    else
    {
      int v79 = 0LL;
    }
  }

  else
  {
    uint64_t v81 = v75;
  }

  *(void *)&__int128 v427 = v79;
  uint64_t v85 = (void *)sub_6C5C(&qword_287D98);
  uint64_t v86 = String.init<A>(describing:)(&v427, v85);
  unint64_t v88 = v87;
  *(void *)&__int128 v427 = sub_6978(v86, v87, (uint64_t *)&v430);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v427, (char *)&v427 + 8);
  uint64_t v89 = (void *)v419;

  swift_bridgeObjectRelease(v88);
  *(_WORD *)(v77 + 1sub_6C3C(v0 + 2) = 2080;
  id v90 = [v89 mediaItems];
  uint64_t v91 = v379;
  if (v90)
  {
    uint64_t v92 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v90, v92);

    if ((unint64_t)v93 >> 62)
    {
      if (v93 < 0) {
        uint64_t v98 = v93;
      }
      else {
        uint64_t v98 = v93 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v93);
      uint64_t v99 = _CocoaArrayWrapper.endIndex.getter(v98);
      swift_bridgeObjectRelease(v93);
      if (v99)
      {
LABEL_13:
        if ((v93 & 0xC000000000000001LL) != 0)
        {
          id v94 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v93);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v93 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            goto LABEL_144;
          }

          id v94 = *(id *)(v93 + 32);
        }

        uint64_t v95 = v94;
        swift_bridgeObjectRelease(v93);
        id v96 = [v95 privateMediaItemValueData];

        if (v96)
        {
          id v97 = [v96 internalSignals];

          if (v97)
          {
            id v90 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)(v97, &type metadata for String);

            goto LABEL_25;
          }
        }

LABEL_144:
      id v292 = [(id)v91 mediaSearch];
      if (!v292
        || (uint64_t v293 = v292,
            uint64_t v294 = (int *)[v292 v67[53]],
            v293,
            ((v294 == &dword_4) & v71) == 0))
      {
LABEL_149:
        sub_180DCC();
        if (v300)
        {
          uint64_t v301 = v299;
          unint64_t v302 = v300;
          uint64_t v299 = swift_bridgeObjectRelease(v300);
          uint64_t v303 = HIBYTE(v302) & 0xF;
          if ((v302 & 0x2000000000000000LL) == 0) {
            uint64_t v303 = v301 & 0xFFFFFFFFFFFFLL;
          }
          BOOL v304 = v303 == 0;
        }

        else
        {
          BOOL v304 = 1;
        }

        LODWORD(v4sub_6C3C(v0 + 21) = v304;
        uint64_t v305 = App.appIdentifier.getter(v299);
        uint64_t v307 = v306;
        uint64_t v308 = static BundleIdentifiers.music.getter(v305);
        uint64_t v310 = v309;
        if (v307)
        {
          if (v305 == v308 && v307 == v309) {
            char v311 = 1;
          }
          else {
            char v311 = _stringCompareWithSmolCheck(_:_:expecting:)(v305, v307);
          }
          swift_bridgeObjectRelease(v307);
        }

        else
        {
          char v311 = 0;
        }

        uint64_t v312 = swift_bridgeObjectRelease(v310);
        char v313 = static SiriAudioEnvironment.isHomePod.getter(v312);
        if (!(v421 & 1 | ((v313 & 1) == 0)) && (v311 & 1) != 0)
        {
          swift_bridgeObjectRelease(v410);
          swift_bridgeObjectRelease(v77);
          uint64_t v314 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v384, v412, v400);
          uint64_t v315 = (os_log_s *)Logger.logObject.getter(v314);
          os_log_type_t v316 = static os_log_type_t.info.getter(v315);
          if (os_log_type_enabled(v315, v316))
          {
            uint64_t v317 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v317 = 0;
            _os_log_impl( &dword_0,  v315,  v316,  "Using PlayBroadcastRadioOnHomePodOnMusic dialog to have radio provider attribution on HomePod when playing with Music app.",  v317,  2u);
            swift_slowDealloc(v317, -1LL, -1LL);
          }

          v379(v384, v400);
          uint64_t v272 = (uint64_t)v414;
          sub_162B64(v418, (id)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);
LABEL_125:

          swift_bridgeObjectRelease(v415);
          swift_release(v416);
          swift_release(v407);
          swift_release(v272);
          unint64_t v273 = v410;
LABEL_130:
          swift_bridgeObjectRelease(v273);
LABEL_131:
          uint64_t v65 = v399;
          goto LABEL_40;
        }

        unint64_t v318 = (unint64_t)sub_30544();
        if (v319) {
          unint64_t v320 = v319;
        }
        else {
          unint64_t v320 = 0xE000000000000000LL;
        }
        if (v319) {
          uint64_t v321 = v318 & 0xFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v321 = 0LL;
        }
        uint64_t v322 = swift_bridgeObjectRelease(v320);
        if ((v320 & 0x2000000000000000LL) != 0) {
          uint64_t v323 = HIBYTE(v320) & 0xF;
        }
        else {
          uint64_t v323 = v321;
        }
        if (!v323) {
          goto LABEL_190;
        }
        uint64_t v324 = App.appIdentifier.getter(v322);
        uint64_t v326 = v325;
        uint64_t v327 = static BundleIdentifiers.music.getter(v324);
        uint64_t v329 = v328;
        if (v326)
        {
          if (v324 == v327 && v326 == v328)
          {
            swift_bridgeObjectRelease(v326);
            swift_bridgeObjectRelease(v329);
LABEL_185:
            if (!(_DWORD)v421
              || (uint64_t v322 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)v91,  (uint64_t)&off_26AD70),  (v322 & 1) != 0))
            {
              swift_bridgeObjectRelease(v410);
              swift_bridgeObjectRelease(v77);
              uint64_t v335 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v380, v412, v400);
              uint64_t v336 = (os_log_s *)Logger.logObject.getter(v335);
              os_log_type_t v337 = static os_log_type_t.info.getter(v336);
              if (os_log_type_enabled(v336, v337))
              {
                uint64_t v338 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                *(_WORD *)uint64_t v338 = 0;
                _os_log_impl( &dword_0,  v336,  v337,  "PlayMediaDialogProvider going to nonSubscriberRadioFallback for genre query with broadcast radio result",  v338,  2u);
                swift_slowDealloc(v338, -1LL, -1LL);
              }

              v379(v380, v400);
              uint64_t v272 = (uint64_t)v414;
              sub_16272C(v418, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);
              goto LABEL_125;
            }

            goto LABEL_190;
          }

          char v334 = _stringCompareWithSmolCheck(_:_:expecting:)(v324, v326);
          swift_bridgeObjectRelease(v326);
          uint64_t v322 = swift_bridgeObjectRelease(v329);
          if ((v334 & 1) != 0) {
            goto LABEL_185;
          }
        }

        else
        {
          uint64_t v322 = swift_bridgeObjectRelease(v328);
        }

LABEL_190:
        uint64_t v339 = INPlayMediaIntent.firstMediaItemType()(v322);
        int v340 = v421;
        if (v339 != 5)
        {
          uint64_t v339 = INPlayMediaIntent.firstMediaItemType()(v339);
          if (v339 == 19) {
            int v340 = v421;
          }
          else {
            int v340 = 0;
          }
        }

        if (INPlayMediaIntent.firstMediaItemType()(v339) == 16)
        {
        }

        else if (v340)
        {
LABEL_201:
          swift_bridgeObjectRelease(v410);
          swift_bridgeObjectRelease(v77);
          uint64_t v344 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v383, v412, v400);
          uint64_t v345 = (os_log_s *)Logger.logObject.getter(v344);
          os_log_type_t v346 = static os_log_type_t.info.getter(v345);
          if (os_log_type_enabled(v345, v346))
          {
            __int128 v347 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)__int128 v347 = 0;
            _os_log_impl( &dword_0,  v345,  v346,  "PlayMediaDialogProvider going to makeEditorialPlaylist for playlist/radio",  v347,  2u);
            swift_slowDealloc(v347, -1LL, -1LL);
          }

          v379(v383, v400);
          uint64_t v272 = (uint64_t)v414;
          sub_161D90(v418, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);
          goto LABEL_125;
        }

        if (v323)
        {
          id v341 = [(id)v91 mediaSearch];
          if (v341)
          {
            __int128 v342 = v341;
            __int128 v343 = (char *)[v341 sortOrder];

            if (v343 == (_BYTE *)&dword_4 + 1) {
              goto LABEL_201;
            }
          }
        }

        LOBYTE(v21sub_6C3C(v0 + 3) = v421 ^ 1;
        if (v420 != 3)
        {
          unint64_t v349 = v410;
LABEL_212:
          swift_bridgeObjectRelease(v349);
LABEL_215:
          uint64_t v350 = sub_6C5C(&qword_2844D0);
          uint64_t v351 = swift_initStackObject(v350, &v423);
          uint64_t v352 = v351;
          *(_OWORD *)(v351 + sub_6C3C(v0 + 16) = xmmword_219330;
          *(void *)(v351 + 3sub_6C3C(v0 + 2) = 0x656C746974LL;
          *(void *)(v351 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xE500000000000000LL;
          if (v77) {
            id v353 = v90;
          }
          else {
            id v353 = 0LL;
          }
          unint64_t v354 = 0xE000000000000000LL;
          if (v77) {
            unint64_t v355 = v77;
          }
          else {
            unint64_t v355 = 0xE000000000000000LL;
          }
          *(void *)(v351 + 4sub_6C3C(v0 + 8) = v353;
          *(void *)(v351 + 56) = v355;
          *(void *)(v351 + 7sub_6C3C(v0 + 2) = v85;
          *(void *)(v351 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0x747369747261LL;
          unint64_t v356 = v410;
          unint64_t v357 = v419;
          if (v410) {
            unint64_t v354 = v410;
          }
          else {
            unint64_t v357 = 0LL;
          }
          *(void *)(v352 + 8sub_6C3C(v0 + 8) = 0xE600000000000000LL;
          *(void *)(v352 + 96) = v357;
          *(void *)(v352 + 10sub_6C3C(v0 + 4) = v354;
          *(void *)(v352 + 1sub_6C3C(v0 + 20) = v85;
          *(void *)(v352 + 12sub_6C3C(v0 + 8) = 0x61526576694C7369LL;
          *(void *)(v352 + 136) = 0xEB000000006F6964LL;
          *(_BYTE *)(v352 + 14sub_6C3C(v0 + 4) = v213;
          *(void *)(v352 + 16sub_6C3C(v0 + 8) = &type metadata for Bool;
          *(void *)(v352 + 176) = 0xD00000000000001BLL;
          *(void *)(v352 + 18sub_6C3C(v0 + 4) = 0x8000000000221920LL;
          swift_bridgeObjectRetain(v356);
          *(_BYTE *)(v352 + 19sub_6C3C(v0 + 2) = [(id)v91 playbackQueueLocation] == (char *)&dword_0 + 2;
          *(void *)(v352 + 2sub_6C3C(v0 + 16) = &type metadata for Bool;
          *(void *)(v352 + 22sub_6C3C(v0 + 4) = 0xD00000000000001CLL;
          *(void *)(v352 + 23sub_6C3C(v0 + 2) = 0x8000000000221940LL;
          *(_BYTE *)(v352 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11,  2,  0xD00000000000003CLL,  0x8000000000221220,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57,  2,  537, 0) = [(id)v91 playbackQueueLocation] == (char *)&dword_0 + 3;
          *(void *)(v352 + 26sub_6C3C(v0 + 4) = &type metadata for Bool;
          *(void *)(v352 + 27sub_6C3C(v0 + 2) = 0x667568536E4F7369LL;
          *(void *)(v352 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 0xEB00000000656C66LL;
          id v358 = [(id)v91 backingStore];
          uint64_t v359 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
          uint64_t v360 = (void *)swift_dynamicCastObjCClass(v358, v359);
          if (v360)
          {
            unsigned __int8 v361 = [v360 playShuffled];

            char v362 = v361 & v421;
          }

          else
          {

            char v362 = 0;
          }

          *(_BYTE *)(v352 + 28sub_6C3C(v0 + 8) = v362;
          *(void *)(v352 + 31sub_6C3C(v0 + 2) = &type metadata for Bool;
          *(void *)(v352 + 3sub_6C3C(v0 + 20) = 0x657065526E4F7369LL;
          *(void *)(v352 + 32sub_6C3C(v0 + 8) = 0xEA00000000007461LL;
          BOOL v363 = [(id)v91 playbackRepeatMode] == (char *)&dword_0 + 2
              || [(id)v91 playbackRepeatMode] == (char *)&dword_0 + 3;
          *(_BYTE *)(v352 + 336) = v363;
          *(void *)(v352 + 36_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &type metadata for Bool;
          strcpy((char *)(v352 + 368), "isAppSpecified");
          *(_BYTE *)(v352 + 38sub_6C3C(v0 + 3) = -18;
          type metadata accessor for AppSelectionContext(0LL);
          uint64_t v364 = static AppSelectionContext.shared.getter();
          if (v364)
          {
            uint64_t v365 = v364;
            dispatch thunk of AppSelectionContext.report.getter();
            swift_release(v365);
          }

          else
          {
            uint64_t v366 = type metadata accessor for AppSelectionReport(0LL);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v366 - 8) + 56LL))( v382,  1LL,  1LL,  v366);
          }

          uint64_t v367 = v382;
          char v368 = sub_15F0C0(v418, v91, (uint64_t (*)(char *, uint64_t))(v406 + 128), v382);
          sub_1F6CC(v367, &qword_285470);
          *(_BYTE *)(v352 + 38sub_6C3C(v0 + 4) = v368 & 1;
          *(void *)(v352 + 40sub_6C3C(v0 + 8) = &type metadata for Bool;
          strcpy((char *)(v352 + 416), "isPersonalized");
          *(_BYTE *)(v352 + 431) = -18;
          id v369 = [(id)v91 privatePlayMediaIntentData];
          id v370 = [v369 isPersonalizedRequest];

          v371.super.super.Class isa = NSNumber.init(integerLiteral:)(1LL).super.super.isa;
          if (v370)
          {
            id v372 = v370;
            char v373 = static NSObject.== infix(_:_:)(v372, v371.super.super.isa);
          }

          else
          {
            char v373 = 0;
          }

          *(void *)(v352 + 456) = &type metadata for Bool;
          *(_BYTE *)(v352 + 43sub_6C3C(v0 + 2) = v373 & 1;
          unint64_t v374 = sub_74D54(v352);
          *((void *)&v431 + 1) = v411;
          *(void *)&__int128 v432 = &off_272BD0;
          *(void *)&__int128 v430 = v91;
          id v375 = (id)v91;
          uint64_t v376 = (uint64_t)v414;
          sub_1CFB48(v374, v418, (uint64_t)&v430, (uint64_t)sub_16F1B0, (uint64_t)v414);
          swift_bridgeObjectRelease(v374);
          swift_bridgeObjectRelease(v410);
          sub_1F6CC((uint64_t)&v430, &qword_283FE8);

          swift_bridgeObjectRelease(v415);
          swift_release(v416);
          swift_release(v407);
          swift_release(v376);
          goto LABEL_131;
        }

        if (v410)
        {
          if ((v410 & 0x2000000000000000LL) != 0) {
            unint64_t v348 = HIBYTE(v410) & 0xF;
          }
          else {
            unint64_t v348 = v419 & 0xFFFFFFFFFFFFLL;
          }
          swift_bridgeObjectRelease(v410);
          if (!v348) {
            goto LABEL_215;
          }
          id v90 = (id)v419;
          unint64_t v349 = v77;
          unint64_t v77 = v410;
          unint64_t v419 = 0LL;
          unint64_t v410 = 0xE000000000000000LL;
          goto LABEL_212;
        }

LABEL_214:
        unint64_t v410 = 0LL;
        goto LABEL_215;
      }

LABEL_146:
      swift_bridgeObjectRelease(v410);
      swift_bridgeObjectRelease(v77);
      uint64_t v295 = ((uint64_t (*)(char *, uint64_t, uint64_t))v404)(v385, v412, v400);
      Swift::String v296 = (os_log_s *)Logger.logObject.getter(v295);
      os_log_type_t v297 = static os_log_type_t.info.getter(v296);
      if (os_log_type_enabled(v296, v297))
      {
        id v298 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v298 = 0;
        _os_log_impl( &dword_0,  v296,  v297,  "PlayMediaDialogProvider going to makeBestWorst for non-empty best or worst",  v298,  2u);
        swift_slowDealloc(v298, -1LL, -1LL);
      }

      v379(v385, v400);
      uint64_t v272 = (uint64_t)v414;
      sub_16156C(v418, (void *)v91, (uint64_t)sub_16F1B0, (uint64_t)v414);
      goto LABEL_125;
    }

    swift_bridgeObjectRelease(v107);
    uint64_t v129 = v402;
    uint64_t v130 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v402, v412, v74);
    uint64_t v131 = (os_log_s *)Logger.logObject.getter(v130);
    os_log_type_t v132 = static os_log_type_t.info.getter(v131);
    if (os_log_type_enabled(v131, v132))
    {
      os_log_type_t v133 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v133 = 0;
      _os_log_impl(&dword_0, v131, v132, "PlayMediaDialogProvider suppressing dialog for non-interstitial", v133, 2u);
      swift_slowDealloc(v133, -1LL, -1LL);
    }

    v82((uint64_t)v129, v74);
    uint64_t v134 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v125 = v410;
    *(void *)(v125 + v13sub_6C3C(v0 + 4) = sub_155584();
    uint64_t v126 = v125;
    uint64_t v127 = v408;
    uint64_t v128 = 0LL;
  }

  else
  {
    unint64_t v117 = v403;
    uint64_t v118 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v403, v412, v74);
    uint64_t v119 = (os_log_s *)Logger.logObject.getter(v118);
    os_log_type_t v120 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v119, v120))
    {
      uint64_t v121 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v121 = 0;
      _os_log_impl(&dword_0, v119, v120, "Missing app bundle identifier", v121, 2u);
      swift_slowDealloc(v121, -1LL, -1LL);
    }

    v82((uint64_t)v117, v74);
    unint64_t v122 = sub_6C9C();
    uint64_t v123 = swift_allocError(&type metadata for String, v122, 0LL, 0LL);
    *uint64_t v124 = 0xD00000000000001DLL;
    v124[1] = 0x8000000000220870LL;
    uint64_t v125 = v410;
    *(void *)unint64_t v410 = v123;
    uint64_t v126 = v125;
    uint64_t v127 = v408;
    uint64_t v128 = 1LL;
  }

  swift_storeEnumTagMultiPayload(v126, v127, v128);
  swift_retain(v65);
  uint64_t v136 = v415;
  uint64_t v135 = v416;
  uint64_t v137 = v413;
  sub_101C04(v125, v84, v416, v411, v415, v413, v409, v65);
  swift_release(v65);
  sub_1F6CC(v125, (uint64_t *)&unk_286BB0);

  swift_bridgeObjectRelease(v136);
  swift_release(v135);
  swift_release(v84);
  uint64_t v138 = (uint64_t)v414;
LABEL_39:
  swift_release(v138);
LABEL_40:
  uint64_t v139 = v417;
LABEL_41:
  swift_release(v65);
  return swift_release(v139);
}

uint64_t sub_165C6C(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = App.appIdentifier.getter(6LL);
  if (v8)
  {
    unint64_t v9 = v8;
  }

  else
  {
    uint64_t v7 = 0LL;
    unint64_t v9 = 0xE000000000000000LL;
  }

  char v10 = static BundleIdentifiers.isBooks(bundleIdentifier:)(v7, v9);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) == 0) {
    return 0LL;
  }
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v11 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11, v3);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl( &dword_0,  v13,  v14,  "PlayMediaDialogProvider#isNoAudioBooksToContinueError no Audio Books to continue",  v15,  2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return 1LL;
}

uint64_t sub_165DF4( int a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void (*a8)(__int128 *), unint64_t a9, uint64_t a10)
{
  uint64_t v412 = a4;
  uint64_t v413 = a2;
  uint64_t v414 = a3;
  int v400 = a1;
  uint64_t v402 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v402);
  v403 = &v374[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v15);
  char v379 = &v374[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = sub_6C5C(&qword_28B5E8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v393 = &v374[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v18);
  uint64_t v395 = &v374[-v20];
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void **)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  Swift::String v388 = &v374[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v385 = &v374[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v378 = &v374[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v381 = &v374[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v377 = &v374[-v32];
  uint64_t v33 = __chkstk_darwin(v31);
  v380 = &v374[-v34];
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v382 = &v374[-v36];
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v383 = &v374[-v38];
  uint64_t v39 = __chkstk_darwin(v37);
  v384 = &v374[-v40];
  uint64_t v41 = __chkstk_darwin(v39);
  v386 = &v374[-v42];
  uint64_t v43 = __chkstk_darwin(v41);
  v387 = &v374[-v44];
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v389 = &v374[-v46];
  uint64_t v47 = __chkstk_darwin(v45);
  char v390 = &v374[-v48];
  uint64_t v49 = __chkstk_darwin(v47);
  double v391 = &v374[-v50];
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v392 = &v374[-v52];
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v394 = &v374[-v54];
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v397 = &v374[-v56];
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v398 = &v374[-v58];
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v399 = &v374[-v60];
  __chkstk_darwin(v59);
  uint64_t v62 = &v374[-v61];
  char v63 = (void *)swift_allocObject(&unk_2725A0, 64LL, 7LL);
  v63[2] = a5;
  v63[3] = a6;
  v63[4] = a7;
  v63[5] = a8;
  uint64_t v408 = a8;
  v63[6] = a9;
  v63[7] = a10;
  uint64_t v411 = v63;
  uint64_t v64 = qword_283888;
  unint64_t v404 = (unint64_t)a5;
  swift_retain(a5);
  uint64_t v406 = a6;
  swift_retain(a6);
  id v65 = a7;
  unint64_t v405 = a9;
  swift_retain(a9);
  uint64_t v407 = a10;
  swift_bridgeObjectRetain(a10);
  if (v64 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v66 = sub_6960(v21, (uint64_t)qword_2969C8);
  uint64_t v67 = (void (*)(void))v22[2];
  uint64_t v409 = v66;
  unint64_t v410 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v67;
  v67(v62);
  uint64_t v68 = v414;
  uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
  int v70 = static os_log_type_t.debug.getter();
  BOOL v71 = os_log_type_enabled(v69, (os_log_type_t)v70);
  uint64_t v72 = v21;
  uint64_t v401 = (uint64_t)v65;
  if (!v71)
  {

    id v78 = (void *)v22[1];
    uint64_t v79 = ((uint64_t (*)(_BYTE *, uint64_t))v78)(v62, v72);
    goto LABEL_25;
  }

  int v375 = v70;
  uint64_t v376 = v22;
  uint64_t v396 = v21;
  unint64_t v73 = swift_slowAlloc(22LL, -1LL);
  uint64_t v74 = (void *)swift_slowAlloc(64LL, -1LL);
  *(void *)&__int128 v423 = v74;
  *(_DWORD *)unint64_t v73 = 136315394;
  uint64_t v414 = v68;
  id v75 = [v68 privatePlayMediaIntentData];
  id v76 = v75;
  if (v75)
  {
    id v77 = [v75 internalSignals];

    if (v77)
    {
      id v76 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v77, &type metadata for String);
    }

    else
    {
      id v76 = 0LL;
    }
  }

  *(void *)&__int128 v420 = v76;
  id v80 = (__objc2_ivar_list *)sub_6C5C(&qword_287D98);
  uint64_t v81 = String.init<A>(describing:)(&v420, v80);
  unint64_t v83 = v82;
  *(void *)&__int128 v420 = sub_6978(v81, v82, (uint64_t *)&v423);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v420, (char *)&v420 + 8);
  uint64_t v84 = v414;

  swift_bridgeObjectRelease(v83);
  *(_WORD *)(v73 + 1sub_6C3C(v0 + 2) = 2080;
  id v85 = [v84 mediaItems];
  if (!v85) {
    goto LABEL_23;
  }
  uint64_t v86 = v85;
  uint64_t v87 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v88 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v86, v87);

  if (!((unint64_t)v88 >> 62))
  {
    goto LABEL_22;
  }

  if (v88 < 0) {
    uint64_t v93 = v88;
  }
  else {
    uint64_t v93 = v88 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v88);
  uint64_t v94 = _CocoaArrayWrapper.endIndex.getter(v93);
  swift_bridgeObjectRelease(v88);
  if (!v94)
  {
LABEL_22:
    swift_bridgeObjectRelease(v88);
LABEL_23:
    id v91 = 0LL;
    goto LABEL_24;
  }

LABEL_140:
    id v288 = [v74 *(SEL *)&v80[392]];
    if (!v288
      || (id v289 = v288,
          char v290 = (int *)[v288 sortOrder],
          v289,
          ((v290 == &dword_4) & v62) == 0))
    {
LABEL_145:
      sub_180DCC();
      if (v296)
      {
        uint64_t v297 = v295;
        unint64_t v298 = v296;
        uint64_t v295 = swift_bridgeObjectRelease(v296);
        uint64_t v299 = HIBYTE(v298) & 0xF;
        if ((v298 & 0x2000000000000000LL) == 0) {
          uint64_t v299 = v297 & 0xFFFFFFFFFFFFLL;
        }
        BOOL v300 = v299 == 0;
      }

      else
      {
        BOOL v300 = 1;
      }

      LODWORD(v41sub_6C3C(v0 + 4) = v300;
      uint64_t v301 = App.appIdentifier.getter(v295);
      uint64_t v303 = v302;
      uint64_t v304 = static BundleIdentifiers.music.getter(v301);
      uint64_t v306 = v305;
      if (v303)
      {
        if (v301 == v304 && v303 == v305) {
          char v307 = 1;
        }
        else {
          char v307 = _stringCompareWithSmolCheck(_:_:expecting:)(v301, v303);
        }
        swift_bridgeObjectRelease(v303);
      }

      else
      {
        char v307 = 0;
      }

      uint64_t v308 = swift_bridgeObjectRelease(v306);
      char v309 = static SiriAudioEnvironment.isHomePod.getter(v308);
      if (!(v414 & 1 | ((v309 & 1) == 0)) && (v307 & 1) != 0)
      {
        swift_bridgeObjectRelease(v405);
        swift_bridgeObjectRelease(v73);
        uint64_t v310 = v410(v381, v409, v396);
        char v311 = (os_log_s *)Logger.logObject.getter(v310);
        os_log_type_t v312 = static os_log_type_t.info.getter(v311);
        if (os_log_type_enabled(v311, v312))
        {
          char v313 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)char v313 = 0;
          _os_log_impl( &dword_0,  v311,  v312,  "Using PlayBroadcastRadioOnHomePodOnMusic dialog to have radio provider attribution on HomePod when playing with Music app.",  v313,  2u);
          swift_slowDealloc(v313, -1LL, -1LL);
        }

        ((void (*)(_BYTE *, uint64_t))v376)(v381, v396);
        uint64_t v269 = (uint64_t)v411;
        sub_162B64(v413, v74, (uint64_t)sub_16F208, (uint64_t)v411);
LABEL_122:
        uint64_t v262 = v269;
LABEL_123:
        swift_release(v262);
        return swift_bridgeObjectRelease(v405);
      }

      unint64_t v314 = (unint64_t)sub_30544();
      if (v315) {
        unint64_t v316 = v315;
      }
      else {
        unint64_t v316 = 0xE000000000000000LL;
      }
      if (v315) {
        uint64_t v317 = v314 & 0xFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v317 = 0LL;
      }
      uint64_t v318 = swift_bridgeObjectRelease(v316);
      if ((v316 & 0x2000000000000000LL) != 0) {
        uint64_t v319 = HIBYTE(v316) & 0xF;
      }
      else {
        uint64_t v319 = v317;
      }
      uint64_t v320 = v319;
      if (!v319) {
        goto LABEL_186;
      }
      uint64_t v321 = App.appIdentifier.getter(v318);
      uint64_t v323 = v322;
      uint64_t v324 = static BundleIdentifiers.music.getter(v321);
      uint64_t v326 = v325;
      if (v323)
      {
        if (v321 == v324 && v323 == v325)
        {
          swift_bridgeObjectRelease(v323);
          swift_bridgeObjectRelease(v326);
LABEL_181:
          if (!(_DWORD)v414
            || (uint64_t v318 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v74,  (uint64_t)&off_26AD70),  (v318 & 1) != 0))
          {
            swift_bridgeObjectRelease(v405);
            swift_bridgeObjectRelease(v73);
            uint64_t v332 = v410(v377, v409, v396);
            uint64_t v333 = (os_log_s *)Logger.logObject.getter(v332);
            os_log_type_t v334 = static os_log_type_t.info.getter(v333);
            if (os_log_type_enabled(v333, v334))
            {
              uint64_t v335 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v335 = 0;
              _os_log_impl( &dword_0,  v333,  v334,  "PlayMediaDialogProvider going to nonSubscriberRadioFallback for genre query with broadcast radio result",  v335,  2u);
              swift_slowDealloc(v335, -1LL, -1LL);
            }

            ((void (*)(_BYTE *, uint64_t))v376)(v377, v396);
            uint64_t v269 = (uint64_t)v411;
            sub_16272C(v413, v74, (uint64_t)sub_16F208, (uint64_t)v411);
            goto LABEL_122;
          }

          goto LABEL_186;
        }

        char v331 = _stringCompareWithSmolCheck(_:_:expecting:)(v321, v323);
        swift_bridgeObjectRelease(v323);
        uint64_t v318 = swift_bridgeObjectRelease(v326);
        if ((v331 & 1) != 0) {
          goto LABEL_181;
        }
      }

      else
      {
        uint64_t v318 = swift_bridgeObjectRelease(v325);
      }

    id v285 = [v82 *(SEL *)(v90 + 3136)];
    if (!v285
      || (id v286 = v285,
          uint64_t v287 = (int *)[v285 *((SEL *)v83 + 53)],
          v286,
          ((v287 == &dword_4) & v62) == 0))
    {
LABEL_145:
      uint64_t v402 = v82;
      sub_180DCC();
      if (v293)
      {
        uint64_t v294 = v292;
        uint64_t v295 = v293;
        id v292 = swift_bridgeObjectRelease(v293);
        unint64_t v296 = HIBYTE(v295) & 0xF;
        if ((v295 & 0x2000000000000000LL) == 0) {
          unint64_t v296 = v294 & 0xFFFFFFFFFFFFLL;
        }
        LODWORD(v20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v296 == 0;
      }

      else
      {
        LODWORD(v20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = 1;
      }

      uint64_t v297 = App.appIdentifier.getter(v292);
      uint64_t v299 = v298;
      BOOL v300 = static BundleIdentifiers.music.getter(v297);
      uint64_t v302 = v301;
      if (v299)
      {
        if (v297 == v300 && v299 == v301) {
          uint64_t v303 = 1;
        }
        else {
          uint64_t v303 = _stringCompareWithSmolCheck(_:_:expecting:)(v297, v299);
        }
        swift_bridgeObjectRelease(v299);
      }

      else
      {
        uint64_t v303 = 0;
      }

      uint64_t v304 = swift_bridgeObjectRelease(v302);
      if (!(v200 & 1 | ((static SiriAudioEnvironment.isHomePod.getter(v304) & 1) == 0)) && (v303 & 1) != 0)
      {
        swift_bridgeObjectRelease(v398);
        swift_bridgeObjectRelease(v73);
        uint64_t v305 = v404(v377, v403, v405);
        uint64_t v306 = (os_log_s *)Logger.logObject.getter(v305);
        char v307 = static os_log_type_t.info.getter(v306);
        if (os_log_type_enabled(v306, v307))
        {
          uint64_t v308 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v308 = 0;
          _os_log_impl( &dword_0,  v306,  v307,  "Using PlayBroadcastRadioOnHomePodOnMusic dialog to have radio provider attribution on HomePod when playing with Music app.",  v308,  2u);
          swift_slowDealloc(v308, -1LL, -1LL);
        }

        v401(v377, v405);
        uint64_t v265 = (uint64_t)v406;
        sub_162B64(v407, v402, (uint64_t)sub_16F138, (uint64_t)v406);
LABEL_122:
        os_log_type_t v258 = v265;
LABEL_123:
        swift_release(v258);
        return swift_bridgeObjectRelease(v398);
      }

      char v309 = (unint64_t)sub_30544();
      if (v310) {
        char v311 = v310;
      }
      else {
        char v311 = 0xE000000000000000LL;
      }
      if (v310) {
        os_log_type_t v312 = v309 & 0xFFFFFFFFFFFFLL;
      }
      else {
        os_log_type_t v312 = 0LL;
      }
      char v313 = swift_bridgeObjectRelease(v311);
      if ((v311 & 0x2000000000000000LL) != 0) {
        unint64_t v314 = HIBYTE(v311) & 0xF;
      }
      else {
        unint64_t v314 = v312;
      }
      if (!v314) {
        goto LABEL_186;
      }
      unint64_t v315 = App.appIdentifier.getter(v313);
      uint64_t v317 = v316;
      uint64_t v318 = static BundleIdentifiers.music.getter(v315);
      uint64_t v320 = v319;
      if (v317)
      {
        if (v315 == v318 && v317 == v319)
        {
          swift_bridgeObjectRelease(v317);
          swift_bridgeObjectRelease(v320);
LABEL_181:
          if (!(_DWORD)v200
            || (char v313 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v402,  (uint64_t)&off_26AD70),  (v313 & 1) != 0))
          {
            swift_bridgeObjectRelease(v398);
            swift_bridgeObjectRelease(v73);
            uint64_t v326 = v404(v373, v403, v405);
            uint64_t v327 = (os_log_s *)Logger.logObject.getter(v326);
            uint64_t v328 = static os_log_type_t.info.getter(v327);
            if (os_log_type_enabled(v327, v328))
            {
              os_log_type_t v329 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)os_log_type_t v329 = 0;
              _os_log_impl( &dword_0,  v327,  v328,  "PlayMediaDialogProvider going to nonSubscriberRadioFallback for genre query with broadcast radio result",  v329,  2u);
              swift_slowDealloc(v329, -1LL, -1LL);
            }

            v401(v373, v405);
            uint64_t v265 = (uint64_t)v406;
            sub_16272C(v407, v402, (uint64_t)sub_16F138, (uint64_t)v406);
            goto LABEL_122;
          }

          goto LABEL_186;
        }

        uint64_t v325 = _stringCompareWithSmolCheck(_:_:expecting:)(v315, v317);
        swift_bridgeObjectRelease(v317);
        char v313 = swift_bridgeObjectRelease(v320);
        if ((v325 & 1) != 0) {
          goto LABEL_181;
        }
      }

      else
      {
        char v313 = swift_bridgeObjectRelease(v319);
      }

LABEL_210:
      unint64_t v405 = 0LL;
      goto LABEL_211;
    }

      uint64_t v398 = 0LL;
      goto LABEL_211;
    }

uint64_t sub_1684B4( uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, void (*a7)(__int128 *), unint64_t a8, uint64_t a9)
{
  uint64_t v69 = a7;
  uint64_t v73 = a1;
  uint64_t v74 = a3;
  uint64_t v67 = a2;
  uint64_t v65 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v65);
  uint64_t v66 = (void (*)(char *, uint64_t))((char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v64 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v63 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v63 - v21;
  uint64_t v23 = qword_283888;
  int v70 = a4;
  swift_retain(a4);
  uint64_t v72 = a5;
  swift_retain(a5);
  id v68 = a6;
  swift_retain(a8);
  uint64_t v71 = a9;
  swift_bridgeObjectRetain(a9);
  if (v23 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v24 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v26 = v25(v22, v24, v14);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    unint64_t v29 = a8;
    uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_0, v27, v28, "PlayMediaDialogProvider#makeInterstitialDialog", v30, 2u);
    uint64_t v31 = v30;
    a8 = v29;
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  uint64_t v32 = *(void (**)(char *, uint64_t))(v15 + 8);
  v32(v22, v14);
  uint64_t v33 = v74[19];
  uint64_t v34 = v74[20];
  sub_6EA8(v74 + 16, v33);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v33, v34) & 1) != 0
    || (static SiriAudioEnvironment.isAppleTV.getter() & 1) == 0)
  {
    uint64_t v66 = v32;
    v25(v20, v24, v14);
    uint64_t v47 = v73;
    uint64_t v48 = swift_retain_n(v73, 2LL);
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      uint64_t v75 = v47;
      uint64_t v76 = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      uint64_t v65 = a8;
      uint64_t v53 = type metadata accessor for App(0LL);
      uint64_t v54 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v55 = v53;
      uint64_t v47 = v73;
      uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v55, v54);
      unint64_t v58 = v57;
      uint64_t v75 = sub_6978(v56, v57, &v76);
      a8 = v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, &v76);
      swift_release_n(v47, 2LL);
      swift_bridgeObjectRelease(v58);
      _os_log_impl(&dword_0, v49, v50, "PlayMediaDialogProvider#makeInterstitialDialog for app: %s", v51, 0xCu);
      swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    else
    {

      swift_release_n(v47, 2LL);
    }

    v66(v20, v14);
    uint64_t v59 = v70;
    swift_retain(v70);
    uint64_t v60 = v72;
    swift_retain(v72);
    id v61 = v68;
    swift_retain(a8);
    uint64_t v62 = v71;
    swift_bridgeObjectRetain(v71);
    sub_165DF4(1, v47, v67, (uint64_t)v74, v59, v60, v61, v69, a8, v62);
    swift_release_n(v59, 2LL);
    swift_release_n(v60, 2LL);

    swift_release_n(a8, 2LL);
    return swift_bridgeObjectRelease_n(v62, 2LL);
  }

  else
  {
    uint64_t v35 = v64;
    uint64_t v36 = v25(v64, v24, v14);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl( &dword_0,  v37,  v38,  "PlayMediaDialogProvider#makeInterstitialDialog suppressing dialog: skipping interstitial for ATV",  v39,  2u);
      swift_slowDealloc(v39, -1LL, -1LL);
    }

    v32(v35, v14);
    uint64_t v40 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v41 = (uint64_t)v66;
    *(void *)(v41 + v4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = sub_155584();
    swift_storeEnumTagMultiPayload(v41, v65, 0LL);
    uint64_t v42 = v70;
    uint64_t v44 = v71;
    uint64_t v43 = v72;
    id v45 = v68;
    sub_1F65D8(v41, v70, v72, (uint64_t)v68, v69, a8, v71);
    sub_1F6CC(v41, (uint64_t *)&unk_286BB0);
    swift_bridgeObjectRelease(v44);
    swift_release(a8);

    swift_release(v43);
    return swift_release(v42);
  }

uint64_t sub_168A44( int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(char *, uint64_t), uint64_t a7)
{
  uint64_t v384 = a4;
  uint64_t v392 = a2;
  LODWORD(v38sub_6C3C(v0 + 3) = a1;
  uint64_t v385 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v385);
  v386 = (uint64_t *)((char *)&v356 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v12);
  uint64_t v360 = (uint64_t)&v356 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_28B5E8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v375 = (uint64_t)&v356 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v377 = (uint64_t)&v356 - v17;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  Class v19 = *(Class *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  id v369 = (char *)&v356 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  id v366 = (char *)&v356 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  char v359 = (char *)&v356 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v362 = (char *)&v356 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  unsigned __int8 v358 = (char *)&v356 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v361 = (char *)&v356 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v363 = (char *)&v356 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v364 = (char *)&v356 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  char v365 = (char *)&v356 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  id v367 = (char *)&v356 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  NSNumber v368 = (char *)&v356 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  char v370 = (char *)&v356 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  unint64_t v371 = (char *)&v356 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  id v372 = (char *)&v356 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  unint64_t v374 = (char *)&v356 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v376 = (char *)&v356 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v378 = (char *)&v356 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v380 = (char *)&v356 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v381 = (char *)&v356 - v57;
  __chkstk_darwin(v56);
  uint64_t v59 = (char *)&v356 - v58;
  uint64_t v60 = (void *)swift_allocObject(&unk_272280, 40LL, 7LL);
  v387 = a5;
  Swift::String v388 = (uint64_t (*)(char *, uint64_t))a6;
  v60[2] = a5;
  v60[3] = a6;
  v60[4] = a7;
  uint64_t v61 = qword_283888;
  swift_retain((uint64_t (*)(char *, uint64_t))a6);
  uint64_t v389 = a7;
  swift_retain(a7);
  if (v61 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v62 = sub_6960(v18, (uint64_t)qword_2969C8);
  Class isa = (void (*)(char *))v19[2].isa;
  uint64_t v391 = v62;
  isa(v59);
  id v64 = a3;
  uint64_t v65 = (void *)Logger.logObject.getter(v64);
  uint64_t v66 = (char **)static os_log_type_t.debug.getter();
  if (!os_log_type_enabled((os_log_t)v65, (os_log_type_t)v66))
  {

    uint64_t v71 = (uint64_t (*)(char *, uint64_t))v19[1].isa;
    uint64_t v72 = v71(v59, v18);
    uint64_t v73 = v392;
    goto LABEL_25;
  }

  char v379 = isa;
  uint64_t v373 = v60;
  uint64_t v67 = swift_slowAlloc(22LL, -1LL);
  uint64_t v357 = swift_slowAlloc(64LL, -1LL);
  *(void *)&__int128 v401 = v357;
  *(_DWORD *)uint64_t v67 = 136315394;
  unint64_t v390 = (unint64_t)v64;
  id v68 = [v64 privatePlayMediaIntentData];
  uint64_t v69 = v68;
  uint64_t v382 = v18;
  if (v68)
  {
    id v70 = [v68 internalSignals];

    if (v70)
    {
      uint64_t v69 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, &type metadata for String);
    }

    else
    {
      uint64_t v69 = 0LL;
    }
  }

  *(void *)&__int128 v398 = v69;
  uint64_t v74 = sub_6C5C(&qword_287D98);
  uint64_t v75 = String.init<A>(describing:)(&v398, v74);
  unint64_t v77 = v76;
  *(void *)&__int128 v398 = sub_6978(v75, v76, (uint64_t *)&v401);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v398, (char *)&v398 + 8);
  id v78 = (void *)v390;

  swift_bridgeObjectRelease(v77);
  *(_WORD *)(v67 + 1sub_6C3C(v0 + 2) = 2080;
  id v79 = [v78 mediaItems];
  if (v79)
  {
    uint64_t v80 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v79, v80);

    if ((unint64_t)v81 >> 62)
    {
      if (v81 < 0) {
        uint64_t v86 = v81;
      }
      else {
        uint64_t v86 = v81 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v81);
      id v79 = (id)_CocoaArrayWrapper.endIndex.getter(v86);
      swift_bridgeObjectRelease(v81);
      if (v79) {
        goto LABEL_12;
      }
    }

    else
    {
      id v79 = *(id *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL));
      if (v79)
      {
LABEL_12:
        if ((v81 & 0xC000000000000001LL) != 0)
        {
          id v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v81);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v81 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
            goto LABEL_141;
          }

          id v82 = *(id *)(v81 + 32);
        }

        unint64_t v83 = v82;
        swift_bridgeObjectRelease(v81);
        id v84 = [v83 privateMediaItemValueData];

        if (v84
          && (id v85 = [v84 internalSignals], v84, v85))
        {
          id v79 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)(v85, &type metadata for String);
        }

        else
        {
          id v79 = 0LL;
        }

        goto LABEL_24;
      }
    }

    swift_bridgeObjectRelease(v81);
  }

LABEL_141:
    uint64_t v271 = (__objc2_ivar_list *)v81;
    id v272 = [(id)v67 *(SEL *)(v81 + 3136)];
    if (!v272
      || (os_log_type_t v273 = v272,
          uint64_t v274 = (int *)[v272 v66[53]],
          v273,
          ((v274 == &dword_4) & v59) == 0))
    {
LABEL_146:
      sub_180DCC();
      if (v281)
      {
        uint64_t v282 = v280;
        unint64_t v283 = v281;
        uint64_t v280 = swift_bridgeObjectRelease(v281);
        uint64_t v284 = HIBYTE(v283) & 0xF;
        if ((v283 & 0x2000000000000000LL) == 0) {
          uint64_t v284 = v282 & 0xFFFFFFFFFFFFLL;
        }
        LODWORD(v6sub_6C3C(v0 + 4) = v284 == 0;
      }

      else
      {
        LODWORD(v6sub_6C3C(v0 + 4) = 1;
      }

      uint64_t v285 = App.appIdentifier.getter(v280);
      uint64_t v287 = v286;
      uint64_t v288 = static BundleIdentifiers.music.getter(v285);
      uint64_t v290 = v289;
      if (v287)
      {
        if (v285 == v288 && v287 == v289) {
          char v291 = 1;
        }
        else {
          char v291 = _stringCompareWithSmolCheck(_:_:expecting:)(v285, v287);
        }
        swift_bridgeObjectRelease(v287);
      }

      else
      {
        char v291 = 0;
      }

      uint64_t v292 = swift_bridgeObjectRelease(v290);
      if (!(v64 & 1 | ((static SiriAudioEnvironment.isHomePod.getter(v292) & 1) == 0))
        && (v291 & 1) != 0)
      {
        swift_bridgeObjectRelease(v390);
        swift_bridgeObjectRelease(v19);
        uint64_t v293 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v362, v391, v382);
        uint64_t v294 = (os_log_s *)Logger.logObject.getter(v293);
        os_log_type_t v295 = static os_log_type_t.info.getter(v294);
        if (os_log_type_enabled(v294, v295))
        {
          unint64_t v296 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v296 = 0;
          _os_log_impl( &dword_0,  v294,  v295,  "Using PlayBroadcastRadioOnHomePodOnMusic dialog to have radio provider attribution on HomePod when playing with Music app.",  v296,  2u);
          swift_slowDealloc(v296, -1LL, -1LL);
        }

        v388(v362, v382);
        uint64_t v279 = (uint64_t)v373;
        sub_162B64(v392, (id)v67, (uint64_t)sub_16B694, (uint64_t)v373);
LABEL_200:
        swift_release(v279);
        return swift_bridgeObjectRelease(v390);
      }

      unint64_t v297 = (unint64_t)sub_30544();
      if (v298) {
        unint64_t v299 = v298;
      }
      else {
        unint64_t v299 = 0xE000000000000000LL;
      }
      uint64_t v300 = HIBYTE(v299) & 0xF;
      if (v298) {
        uint64_t v301 = v297 & 0xFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v301 = 0LL;
      }
      uint64_t v302 = swift_bridgeObjectRelease(v299);
      if ((v299 & 0x2000000000000000LL) == 0) {
        uint64_t v300 = v301;
      }
      if (!v300) {
        goto LABEL_186;
      }
      uint64_t v303 = App.appIdentifier.getter(v302);
      uint64_t v305 = v304;
      uint64_t v306 = static BundleIdentifiers.music.getter(v303);
      uint64_t v308 = v307;
      if (v305)
      {
        if (v303 == v306 && v305 == v307)
        {
          swift_bridgeObjectRelease(v305);
          swift_bridgeObjectRelease(v308);
LABEL_181:
          if (!(_DWORD)v64
            || (uint64_t v302 = _s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( (void *)v67,  (uint64_t)&off_26AD70),  (v302 & 1) != 0))
          {
            swift_bridgeObjectRelease(v390);
            swift_bridgeObjectRelease(v19);
            uint64_t v314 = ((uint64_t (*)(char *, uint64_t, uint64_t))v379)(v358, v391, v382);
            unint64_t v315 = (os_log_s *)Logger.logObject.getter(v314);
            os_log_type_t v316 = static os_log_type_t.info.getter(v315);
            if (os_log_type_enabled(v315, v316))
            {
              uint64_t v317 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
              *(_WORD *)uint64_t v317 = 0;
              _os_log_impl( &dword_0,  v315,  v316,  "PlayMediaDialogProvider going to nonSubscriberRadioFallback for genre query with broadcast radio result",  v317,  2u);
              swift_slowDealloc(v317, -1LL, -1LL);
            }

            v388(v358, v382);
            uint64_t v279 = (uint64_t)v373;
            sub_16272C(v392, (void *)v67, (uint64_t)sub_16B694, (uint64_t)v373);
            goto LABEL_200;
          }

          goto LABEL_186;
        }

        char v313 = _stringCompareWithSmolCheck(_:_:expecting:)(v303, v305);
        swift_bridgeObjectRelease(v305);
        uint64_t v302 = swift_bridgeObjectRelease(v308);
        if ((v313 & 1) != 0) {
          goto LABEL_181;
        }
      }

      else
      {
        uint64_t v302 = swift_bridgeObjectRelease(v307);
      }

uint64_t sub_16B164( uint64_t a1, void *a2, void *a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v62 = a2;
  uint64_t v63 = a4;
  uint64_t v65 = a1;
  uint64_t v60 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v60);
  uint64_t v61 = (char **)((char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v59 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = qword_283888;
  uint64_t v66 = (uint64_t (*)(char *, uint64_t))a5;
  swift_retain(a5);
  uint64_t v64 = a6;
  swift_retain(a6);
  if (v19 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v22 = v21(v18, v20, v10);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    uint64_t v27 = v16;
    uint64_t v28 = v10;
    uint64_t v29 = a3;
    uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_0, v23, v24, "PlayMediaDialogProvider#makeInterstitialDialog", v30, 2u);
    uint64_t v31 = v30;
    a3 = v29;
    uint64_t v10 = v28;
    uint64_t v16 = v27;
    uint64_t v21 = v26;
    uint64_t v20 = v25;
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  uint64_t v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v18, v10);
  uint64_t v33 = a3[19];
  uint64_t v34 = a3[20];
  sub_6EA8(a3 + 16, v33);
  if ((dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v33, v34) & 1) != 0
    || (static SiriAudioEnvironment.isAppleTV.getter() & 1) == 0)
  {
    uint64_t v61 = a3;
    v21(v16, v20, v10);
    uint64_t v43 = v65;
    uint64_t v44 = swift_retain_n(v65, 2LL);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = v16;
      uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v49 = swift_slowAlloc(32LL, -1LL);
      uint64_t v67 = v43;
      uint64_t v68 = v49;
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v60 = (uint64_t)(v48 + 4);
      uint64_t v50 = type metadata accessor for App(0LL);
      uint64_t v51 = sub_10430( (unint64_t *)&qword_283AB0,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
      uint64_t v52 = v50;
      uint64_t v43 = v65;
      uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter(v52, v51);
      unint64_t v55 = v54;
      uint64_t v67 = sub_6978(v53, v54, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68);
      swift_release_n(v43, 2LL);
      swift_bridgeObjectRelease(v55);
      _os_log_impl(&dword_0, v45, v46, "PlayMediaDialogProvider#makeInterstitialDialog for app: %s", v48, 0xCu);
      swift_arrayDestroy(v49, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);

      uint64_t v56 = v47;
    }

    else
    {

      swift_release_n(v43, 2LL);
      uint64_t v56 = v16;
    }

    v32(v56, v10);
    uint64_t v42 = v64;
    uint64_t v57 = v66;
    swift_retain(v66);
    swift_retain(v42);
    sub_168A44(1, v43, v62, (uint64_t)v61, v63, v57, v42);
    swift_release_n(v57, 2LL);
    uint64_t v66 = (uint64_t (*)(char *, uint64_t))v42;
  }

  else
  {
    uint64_t v35 = v59;
    uint64_t v36 = v21(v59, v20, v10);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl( &dword_0,  v37,  v38,  "PlayMediaDialogProvider#makeInterstitialDialog suppressing dialog: skipping interstitial for ATV",  v39,  2u);
      swift_slowDealloc(v39, -1LL, -1LL);
    }

    v32(v35, v10);
    uint64_t v40 = *(int *)(sub_6C5C(&qword_289340) + 48);
    uint64_t v41 = (uint64_t)v61;
    *(void *)(v41 + v4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = sub_155584();
    swift_storeEnumTagMultiPayload(v41, v60, 0LL);
    uint64_t v42 = v64;
    sub_1FA7D0(v41, v63, (uint64_t)v66, v64);
    sub_1F6CC(v41, (uint64_t *)&unk_286BB0);
  }

  swift_release(v42);
  return swift_release(v66);
}

uint64_t sub_16B668()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_16B694(uint64_t a1)
{
  return sub_1FA7D0(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_16B6A0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_925A4(result, a2);
  }
  return result;
}

uint64_t sub_16B6B4(uint64_t a1)
{
  return sub_1CFF68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_16B6BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v233 = a6;
  char v234 = a5;
  uint64_t v246 = a4;
  uint64_t v238 = a3;
  uint64_t v244 = a2;
  char v249 = a1;
  uint64_t v6 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v252 = *(void *)(v6 - 8);
  uint64_t v253 = v6;
  __chkstk_darwin(v6);
  uint64_t v236 = (char *)&v214 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v251 = type metadata accessor for Logger(0LL);
  uint64_t v248 = *(void *)(v251 - 8);
  uint64_t v8 = __chkstk_darwin(v251);
  unint64_t v219 = (char *)&v214 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v247 = (char *)&v214 - v10;
  uint64_t v254 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v245 = *(void *)(v254 - 8);
  uint64_t v11 = __chkstk_darwin(v254);
  os_log_type_t v237 = (char *)&v214 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v227 = (char *)&v214 - v13;
  uint64_t v14 = sub_6C5C(&qword_2845A0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v217 = (char *)&v214 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v218 = (char *)&v214 - v17;
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v19 = __chkstk_darwin(v18);
  unint64_t v224 = (char *)&v214 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  unint64_t v225 = (char *)&v214 - v21;
  uint64_t v22 = sub_6C5C(&qword_2845A8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v221 = (char *)&v214 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  os_log_type_t v243 = (char *)&v214 - v25;
  uint64_t v26 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v223 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  int v222 = (char *)&v214 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v242 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v240 = *(v242 - 1);
  __chkstk_darwin(v242);
  uint64_t v29 = (char *)&v214 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v241 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v239 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  uint64_t v31 = (char *)&v214 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = (void *)sub_6C5C(&qword_289340);
  uint64_t v33 = __chkstk_darwin(v32);
  id v235 = (char *)&v214 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = __chkstk_darwin(v33);
  os_log_type_t v230 = (char *)&v214 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  os_log_type_t v229 = (char *)&v214 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v214 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  os_log_type_t v216 = (char *)&v214 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  os_log_type_t v46 = (char *)&v214 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v228 = (uint64_t)&v214 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v226 = (char *)&v214 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v220 = (char *)&v214 - v52;
  __chkstk_darwin(v51);
  unint64_t v54 = (char *)&v214 - v53;
  uint64_t v55 = sub_6C5C((uint64_t *)&unk_286BB0);
  uint64_t v56 = __chkstk_darwin(v55);
  id v232 = (uint64_t *)((char *)&v214 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v56);
  uint64_t v59 = (uint64_t *)((char *)&v214 - v58);
  sub_FF10((uint64_t)v249, (uint64_t)&v214 - v58, (uint64_t *)&unk_286BB0);
  uint64_t v231 = v55;
  if (swift_getEnumCaseMultiPayload(v59, v55) == 1)
  {
    uint64_t v60 = *v59;
    uint64_t v61 = v239;
    uint64_t v62 = v241;
    (*(void (**)(char *, void, uint64_t))(v239 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.pmdp(_:),  v241);
    uint64_t v63 = v221;
    uint64_t v64 = v240;
    uint64_t v65 = v242;
    (*(void (**)(char *, void, void *))(v240 + 104))( v29,  enum case for AdditionalMetricsDescription.SourceFunction.postHandleDlg(_:),  v242);
    swift_getErrorValue(v60, v260, v259);
    uint64_t v66 = Error.localizedDescription.getter(v259[1], v259[2]);
    uint64_t v68 = v67;
    uint64_t v250 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v31,  v29,  v66,  v67,  0LL,  1LL);
    uint64_t v70 = v69;
    swift_bridgeObjectRelease(v68);
    (*(void (**)(char *, void *))(v64 + 8))(v29, v65);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v62);
    uint64_t v71 = *(void *)(v244 + 272);
    uint64_t v247 = *(char **)(v244 + 280);
    char v249 = sub_6EA8((void *)(v244 + 248), v71);
    uint64_t v72 = enum case for ActivityType.failed(_:);
    uint64_t v73 = type metadata accessor for ActivityType(0LL);
    uint64_t v74 = *(void *)(v73 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 104))(v63, v72, v73);
    uint64_t v75 = (uint64_t)v63;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v63, 0LL, 1LL, v73);
    uint64_t v76 = (uint64_t)v224;
    (*(void (**)(void))(v252 + 56))();
    uint64_t v77 = v245;
    id v78 = *(void (**)(char *, void, uint64_t))(v245 + 104);
    v78(v237, enum case for SiriKitReliabilityCodes.renderingError(_:), v254);
    uint64_t v79 = v246;
    if (INPlayMediaIntent.hasAMPError()())
    {
      uint64_t v80 = (uint64_t)v217;
      v78(v217, enum case for SiriKitReliabilityCodes.ampServerError(_:), v254);
      uint64_t v81 = v219;
      id v82 = v237;
    }

    else
    {
      uint64_t v80 = (uint64_t)v217;
      uint64_t v109 = v237;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v217, v237, v254);
      uint64_t v81 = v219;
      id v82 = v109;
    }

    uint64_t v110 = v254;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v254);
    uint64_t v111 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v80, 0LL, 1LL, v110);
    uint64_t v112 = INPlayMediaIntent.firstMediaItemType()(v111);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v238,  v79,  v75,  v76,  v80,  v250,  v70,  v112,  0,  v71,  v247);
    swift_bridgeObjectRelease(v70);
    sub_1F6CC(v80, &qword_2845A0);
    sub_1F6CC(v76, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v75, &qword_2845A8);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v113 = v251;
    uint64_t v114 = sub_6960(v251, (uint64_t)qword_2969C8);
    uint64_t v115 = v248;
    (*(void (**)(char *, uint64_t, uint64_t))(v248 + 16))(v81, v114, v113);
    swift_errorRetain(v60);
    uint64_t v116 = swift_errorRetain(v60);
    uint64_t v117 = (os_log_s *)Logger.logObject.getter(v116);
    os_log_type_t v118 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v117, v118))
    {
      uint64_t v119 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v120 = swift_slowAlloc(32LL, -1LL);
      uint64_t v258 = v120;
      *(_DWORD *)uint64_t v119 = 136315138;
      swift_getErrorValue(v60, v257, v256);
      uint64_t v121 = Error.localizedDescription.getter(v256[1], v256[2]);
      unint64_t v123 = v122;
      uint64_t v255 = sub_6978(v121, v122, &v258);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v255, v256);
      swift_bridgeObjectRelease(v123);
      swift_errorRelease(v60);
      swift_errorRelease(v60);
      _os_log_impl(&dword_0, v117, v118, "PlayMediaDialogProvider#makeIntentHandledDialog failure: %s", v119, 0xCu);
      swift_arrayDestroy(v120, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v120, -1LL, -1LL);
      swift_slowDealloc(v119, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v81, v251);
    }

    else
    {
      swift_errorRelease(v60);
      swift_errorRelease(v60);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v81, v113);
    }

    os_log_type_t v158 = v234;
    os_log_type_t v159 = v232;
    uint64_t v160 = v231;
    *id v232 = v60;
    swift_storeEnumTagMultiPayload(v159, v160, 1LL);
    swift_errorRetain(v60);
    v158(v159);
    swift_errorRelease(v60);
    uint64_t v161 = (uint64_t *)&unk_286BB0;
    uint64_t v162 = (uint64_t)v159;
    goto LABEL_40;
  }

  unint64_t v224 = v46;
  uint64_t v221 = v41;
  uint64_t v83 = *((int *)v32 + 12);
  BOOL v215 = *(void (**)(char *, uint64_t *, uint64_t))(v252 + 32);
  uint64_t v250 = (uint64_t)v54;
  v215(v54, v59, v253);
  id v84 = *(void **)((char *)v59 + v83);
  *(void *)&v54[v83] = v84;
  uint64_t v85 = v239;
  uint64_t v86 = v241;
  (*(void (**)(char *, void, uint64_t))(v239 + 104))( v31,  enum case for AdditionalMetricsDescription.ModuleName.pmdp(_:),  v241);
  uint64_t v87 = v240;
  unint64_t v88 = v242;
  (*(void (**)(char *, void, void *))(v240 + 104))( v29,  enum case for AdditionalMetricsDescription.SourceFunction.postHandleDlg(_:),  v242);
  char v249 = v32;
  uint64_t v89 = v223;
  uint64_t v90 = v222;
  (*(void (**)(char *, void, uint64_t))(v223 + 104))( v222,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v26);
  os_log_type_t v237 = v84;
  uint64_t v217 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v31,  v29,  v90,  0LL,  1LL);
  unint64_t v219 = v91;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v26);
  (*(void (**)(char *, void *))(v87 + 8))(v29, v88);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v31, v86);
  uint64_t v92 = *(void *)(v244 + 272);
  uint64_t v241 = *(void *)(v244 + 280);
  uint64_t v242 = sub_6EA8((void *)(v244 + 248), v92);
  uint64_t v93 = enum case for ActivityType.completed(_:);
  uint64_t v94 = type metadata accessor for ActivityType(0LL);
  uint64_t v95 = *(void *)(v94 - 8);
  uint64_t v96 = v243;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 104))(v243, v93, v94);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v96, 0LL, 1LL, v94);
  uint64_t v97 = *((int *)v249 + 12);
  uint64_t v99 = v252;
  uint64_t v98 = v253;
  uint64_t v100 = v220;
  uint64_t v244 = *(void *)(v252 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v244)(v220, v250, v253);
  *(void *)&v100[v97] = v237;
  uint64_t v101 = v225;
  v215(v225, (uint64_t *)v100, v98);
  uint64_t v102 = (uint64_t)v101;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v101, 0LL, 1LL, v98);
  uint64_t v103 = v245;
  uint64_t v104 = *(void (**)(char *, void, uint64_t))(v245 + 104);
  unint64_t v105 = v227;
  v104(v227, enum case for SiriKitReliabilityCodes.success(_:), v254);
  uint64_t v106 = v246;
  uint64_t v107 = v103;
  if (INPlayMediaIntent.hasAMPError()())
  {
    uint64_t v108 = (uint64_t)v218;
    v104(v218, enum case for SiriKitReliabilityCodes.ampServerError(_:), v254);
  }

  else
  {
    uint64_t v108 = (uint64_t)v218;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v218, v105, v254);
  }

  uint64_t v124 = v251;
  uint64_t v125 = v238;
  uint64_t v126 = v254;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v254);
  uint64_t v127 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v108, 0LL, 1LL, v126);
  uint64_t v128 = INPlayMediaIntent.firstMediaItemType()(v127);
  uint64_t v129 = v125;
  uint64_t v130 = (uint64_t)v243;
  uint64_t v131 = v219;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v129,  v106,  v243,  v102,  v108,  v217,  v219,  v128,  0,  v92,  v241);
  swift_bridgeObjectRelease(v131);
  sub_1F6CC(v108, &qword_2845A0);
  sub_1F6CC(v102, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v130, &qword_2845A8);
  uint64_t v132 = (uint64_t)v224;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v133 = sub_6960(v124, (uint64_t)qword_2969C8);
  uint64_t v134 = v248;
  (*(void (**)(char *, uint64_t, uint64_t))(v248 + 16))(v247, v133, v124);
  uint64_t v135 = v249;
  uint64_t v136 = *((int *)v249 + 12);
  uint64_t v137 = (uint64_t)v226;
  uint64_t v138 = v253;
  unint64_t v139 = (uint64_t (*)(char *, uint64_t, uint64_t))v244;
  ((void (*)(char *, uint64_t, uint64_t))v244)(v226, v250, v253);
  uint64_t v140 = v237;
  *(void *)(v137 + v136) = v237;
  uint64_t v141 = v228;
  sub_FF10(v137, v228, &qword_289340);
  sub_712A0(v137, v132);
  uint64_t v142 = v140;
  uint64_t v143 = v141;
  uint64_t v144 = v132;
  id v145 = v142;
  uint64_t v146 = (os_log_s *)Logger.logObject.getter(v142);
  os_log_type_t v147 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v146, v147))
  {
    sub_1F6CC(v143, &qword_289340);
    sub_1F6CC(v144, &qword_289340);
    goto LABEL_26;
  }

  os_log_type_t v148 = v147;
  char v149 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
  *(_DWORD *)char v149 = 67109120;
  uint64_t v150 = *((int *)v135 + 12);
  uint64_t v151 = v216;
  uint64_t v152 = v139(v216, v143, v138);
  *(void *)&v151[v150] = *(void *)(v143 + v150);
  os_log_type_t v153 = (void *)TemplatingResult.speak.getter(v152);
  (*(void (**)(char *, uint64_t))(v252 + 8))(v151, v138);
  if (!v153[2])
  {
    swift_bridgeObjectRelease(v153);
LABEL_24:
    int v157 = 0;
    goto LABEL_25;
  }

  uint64_t v154 = v153[4];
  unint64_t v155 = v153[5];
  swift_bridgeObjectRelease(v153);
  uint64_t v156 = HIBYTE(v155) & 0xF;
  if ((v155 & 0x2000000000000000LL) == 0) {
    uint64_t v156 = v154 & 0xFFFFFFFFFFFFLL;
  }
  if (!v156) {
    goto LABEL_24;
  }
  int v157 = 1;
LABEL_25:
  sub_1F6CC(v143, &qword_289340);
  LODWORD(v25sub_6C3C(v0 + 8) = v157;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v258, (char *)&v258 + 4);
  sub_1F6CC((uint64_t)v224, &qword_289340);
  _os_log_impl( &dword_0,  v146,  v148,  "PlayMediaDialogProvider#makeIntentHandledDialog for app returned speakable dialog?: %{BOOL}d",  v149,  8u);
  swift_slowDealloc(v149, -1LL, -1LL);
  uint64_t v124 = v251;
  uint64_t v134 = v248;
LABEL_26:

  (*(void (**)(char *, uint64_t))(v134 + 8))(v247, v124);
  uint64_t v163 = v249;
  uint64_t v164 = v250;
  uint64_t v165 = *((int *)v249 + 12);
  uint64_t v166 = v221;
  uint64_t v167 = v253;
  uint64_t v168 = (uint64_t (*)(char *, uint64_t, uint64_t))v244;
  uint64_t v169 = ((uint64_t (*)(char *, uint64_t, uint64_t))v244)(v221, v250, v253);
  *(void *)&v166[v165] = v145;
  uint64_t v170 = TemplatingResult.templateIdentifier.getter(v169);
  uint64_t v172 = v171;
  char v173 = *(void (**)(char *, uint64_t))(v252 + 8);
  v173(v166, v167);
  uint64_t v174 = *((int *)v163 + 12);
  uint64_t v175 = v229;
  uint64_t v176 = v168(v229, v164, v167);
  *(void *)&v175[v174] = v145;
  uint64_t v177 = TemplatingResult.print.getter(v176);
  v173(v175, v167);
  TemplatingResult.init(templateIdentifier:speak:print:)(v170, v172, _swiftEmptyArrayStorage, v177);
  id v178 = [objc_allocWithZone(DialogExecutionResult) init];
  uint64_t v179 = v163;
  uint64_t v180 = *((int *)v163 + 12);
  uint64_t v181 = v230;
  v168(v230, v164, v167);
  *(void *)&v181[v180] = v145;
  NSString v182 = [v145 catId];
  if (!v182)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
    uint64_t v184 = v183;
    NSString v182 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v184);
  }

  uint64_t v254 = (uint64_t)v178;
  [v178 setCatId:v182];

  uint64_t v185 = v173;
  v173(v181, v167);
  id v186 = [objc_allocWithZone(DialogElement) init];
  uint64_t v187 = v179;
  uint64_t v188 = *((int *)v179 + 12);
  uint64_t v189 = v235;
  v168(v235, v164, v167);
  *(void *)&v189[v188] = v145;
  id v190 = [v145 dialog];

  uint64_t v191 = sub_1641C(0LL, (unint64_t *)&qword_284008, &OBJC_CLASS___DialogElement_ptr);
  uint64_t v192 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v190, v191);

  unint64_t v193 = v168;
  if (!((unint64_t)v192 >> 62))
  {
    unint64_t v194 = v185;
LABEL_38:
    swift_bridgeObjectRelease(v192);
    unint64_t v200 = 0xE000000000000000LL;
    BOOL v195 = (void *)v254;
    goto LABEL_39;
  }

  if (v192 < 0) {
    uint64_t v201 = v192;
  }
  else {
    uint64_t v201 = v192 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v192);
  uint64_t v202 = _CocoaArrayWrapper.endIndex.getter(v201);
  swift_bridgeObjectRelease(v192);
  unint64_t v194 = v185;
  if (!v202) {
    goto LABEL_38;
  }
LABEL_30:
  BOOL v195 = (void *)v254;
  if ((v192 & 0xC000000000000001LL) != 0)
  {
    id v196 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v192);
    goto LABEL_33;
  }

  if (*(void *)((char *)&dword_10 + (v192 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v196 = *(id *)(v192 + 32);
LABEL_33:
    uint64_t v197 = v196;
    swift_bridgeObjectRelease(v192);
    id v198 = [v197 fullPrint];

    static String._unconditionallyBridgeFromObjectiveC(_:)(v198);
    unint64_t v200 = v199;

    uint64_t v187 = v249;
LABEL_39:
    uint64_t v203 = v253;
    v194(v235, v253);
    NSString v204 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v200);
    [v186 setFullPrint:v204];

    uint64_t v205 = sub_6C5C(&qword_287980);
    uint64_t v206 = swift_allocObject(v205, 40LL, 7LL);
    *(_OWORD *)(v206 + sub_6C3C(v0 + 16) = xmmword_214980;
    *(void *)(v206 + 3sub_6C3C(v0 + 2) = v186;
    uint64_t v258 = v206;
    specialized Array._endMutation()(v206);
    uint64_t v207 = v258;
    id v208 = v186;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v207);
    [v195 setDialog:isa];

    uint64_t v210 = *((int *)v187 + 12);
    uint64_t v211 = (uint64_t)v232;
    id v212 = v236;
    v193((char *)v232, (uint64_t)v236, v203);
    *(void *)(v211 + v2sub_6C3C(v0 + 10) = v195;
    swift_storeEnumTagMultiPayload(v211, v231, 0LL);
    id v213 = v195;
    v234((void *)v211);

    sub_1F6CC(v211, (uint64_t *)&unk_286BB0);
    v194(v212, v203);
    uint64_t v161 = &qword_289340;
    uint64_t v162 = v250;
LABEL_40:
    sub_1F6CC(v162, v161);
    return;
  }

  __break(1u);
}

uint64_t sub_16CA50( int a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, id), void *a7, void (*a8)(void *), uint64_t a9, uint64_t a10)
{
  uint64_t v407 = a2;
  uint64_t v408 = a4;
  unint64_t v405 = a3;
  int v395 = a1;
  uint64_t v397 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v397);
  unint64_t v398 = (unint64_t)&v370 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v15);
  uint64_t v375 = (uint64_t)&v370 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_6C5C(&qword_28B5E8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v389 = (uint64_t)&v370 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v391 = (uint64_t)&v370 - v20;
  uint64_t v21 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v22 = *(v21 - 1);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v384 = (char *)&v370 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v381 = (char *)&v370 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  unint64_t v374 = (char *)&v370 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v377 = (char *)&v370 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v373 = (char *)&v370 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v376 = (char *)&v370 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v378 = (char *)&v370 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  char v379 = (char *)&v370 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v380 = (char *)&v370 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v382 = (char *)&v370 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v383 = (char *)&v370 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v385 = (char *)&v370 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v386 = (char *)&v370 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v387 = (char *)&v370 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  Swift::String v388 = (char *)&v370 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  unint64_t v390 = (char *)&v370 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v392 = (char *)&v370 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v393 = (char *)&v370 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v394 = (char *)&v370 - v60;
  __chkstk_darwin(v59);
  uint64_t v62 = (char *)&v370 - v61;
  uint64_t v63 = (void *)swift_allocObject(&unk_272528, 64LL, 7LL);
  v63[2] = a5;
  v63[3] = a6;
  v63[4] = a7;
  v63[5] = a8;
  __int128 v402 = a8;
  v63[6] = a9;
  v63[7] = a10;
  uint64_t v406 = v63;
  uint64_t v64 = qword_283888;
  uint64_t v399 = a5;
  swift_retain(a5);
  __int128 v401 = a6;
  swift_retain(a6);
  id v65 = a7;
  uint64_t v400 = a9;
  swift_retain(a9);
  if (v64 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v66 = sub_6960((uint64_t)v21, (uint64_t)qword_2969C8);
  uint64_t v67 = *(void (**)(void))(v22 + 16);
  uint64_t v403 = v66;
  unint64_t v404 = (uint64_t (*)(char *, uint64_t, void *))v67;
  v67(v62);
  uint64_t v68 = v405;
  uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
  os_log_type_t v70 = static os_log_type_t.debug.getter();
  BOOL v71 = os_log_type_enabled(v69, v70);
  uint64_t v396 = (uint64_t)v65;
  if (!v71)
  {

    uint64_t v77 = *(void (**)(char *, void *))(v22 + 8);
    uint64_t v78 = ((uint64_t (*)(char *, void *))v77)(v62, v21);
    uint64_t v79 = v407;
    uint64_t v80 = v408;
    uint64_t v81 = (uint64_t)v406;
    goto LABEL_25;
  }

  uint64_t v372 = v22;
  unint64_t v405 = v21;
  uint64_t v72 = (uint8_t *)swift_slowAlloc(22LL, -1LL);
  uint64_t v371 = swift_slowAlloc(64LL, -1LL);
  *(void *)&__int128 v417 = v371;
  *(_DWORD *)uint64_t v72 = 136315394;
  unint64_t v73 = (unint64_t)v68;
  id v74 = [v68 privatePlayMediaIntentData];
  uint64_t v75 = v74;
  if (v74)
  {
    id v76 = [v74 internalSignals];

    if (v76)
    {
      uint64_t v75 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v76, &type metadata for String);
    }

    else
    {
      uint64_t v75 = 0LL;
    }
  }

  *(void *)&__int128 v414 = v75;
  id v82 = (void (*)(void *))sub_6C5C(&qword_287D98);
  uint64_t v83 = &v414;
  uint64_t v84 = String.init<A>(describing:)(&v414, v82);
  unint64_t v86 = v85;
  *(void *)&__int128 v414 = sub_6978(v84, v85, (uint64_t *)&v417);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v414, (char *)&v414 + 8);

  swift_bridgeObjectRelease(v86);
  *((_WORD *)v72 + 6) = 2080;
  id v87 = [(id)v73 mediaItems];
  if (!v87) {
    goto LABEL_23;
  }
  unint64_t v88 = v87;
  uint64_t v89 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v90 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v88, v89);

  if (!((unint64_t)v90 >> 62))
  {
    goto LABEL_22;
  }

  if (v90 < 0) {
    uint64_t v95 = v90;
  }
  else {
    uint64_t v95 = v90 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v90);
  uint64_t v96 = _CocoaArrayWrapper.endIndex.getter(v95);
  swift_bridgeObjectRelease(v90);
  if (!v96)
  {
LABEL_22:
    swift_bridgeObjectRelease(v90);
LABEL_23:
    id v93 = 0LL;
    goto LABEL_24;
  }

uint64_t sub_16F0FC()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

void sub_16F138(void *a1)
{
}

uint64_t sub_16F148()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_16F16C()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_16F1B0(uint64_t a1)
{
  return sub_FF674( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void **)(v1 + 48),  *(void (**)(void *, void))(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_16F1C4()
{
  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_16F208(uint64_t a1)
{
  return sub_1F65D8( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void (**)(__int128 *))(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
}

void *AudioUsoIntent.haRoomNames()()
{
  return sub_16F2AC((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haRoomNames());
}

Swift::String_optional __swiftcall AudioUsoIntent.haHomeName()()
{
  uint64_t v0 = sub_16F33C((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haHomeName());
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

void *AudioUsoIntent.haZoneNames()()
{
  return sub_16F2AC((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haZoneNames());
}

void *AudioUsoIntent.haAccessoryNames()()
{
  return sub_16F2AC((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haAccessoryNames());
}

void *AudioUsoIntent.haServiceNames()()
{
  return sub_16F2AC((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haServiceNames());
}

void *AudioUsoIntent.haServiceGroups()()
{
  return sub_16F2AC((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haServiceGroups());
}

void *AudioUsoIntent.haFromEntities()()
{
  return sub_16F2AC((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haFromEntities());
}

void *sub_16F2AC(uint64_t (*a1)(uint64_t, void *))
{
  uint64_t v2 = dispatch thunk of AudioUsoIntent.usoTask.getter();
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for UsoTask(0LL);
  uint64_t v5 = a1(v4, &protocol witness table for UsoTask);
  swift_release(v3);
  return (void *)v5;
}

uint64_t AudioUsoIntent.haDeviceQuantifier()@<X0>(uint64_t a1@<X8>)
{
  return sub_16F3F0( (void (*)(uint64_t, void *))&ControlsUsoTask.haDeviceQuantifier(),  (uint64_t (*)(void))&type metadata accessor for DeviceQuantifier,  a1);
}

Swift::String_optional __swiftcall AudioUsoIntent.haDestinationDeviceId()()
{
  uint64_t v0 = sub_16F33C((uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haDestinationDeviceId());
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_16F33C(uint64_t (*a1)(uint64_t, void *))
{
  uint64_t v2 = dispatch thunk of AudioUsoIntent.usoTask.getter();
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for UsoTask(0LL);
  uint64_t v5 = a1(v4, &protocol witness table for UsoTask);
  swift_release(v3);
  return v5;
}

uint64_t AudioUsoIntent.haDeviceType()@<X0>(uint64_t a1@<X8>)
{
  return sub_16F3F0( (void (*)(uint64_t, void *))&ControlsUsoTask.haDeviceType(),  (uint64_t (*)(void))&type metadata accessor for DeviceType,  a1);
}

uint64_t AudioUsoIntent.haPlaceHint()@<X0>(uint64_t a1@<X8>)
{
  return sub_16F3F0( (void (*)(uint64_t, void *))&ControlsUsoTask.haPlaceHint(),  (uint64_t (*)(void))&type metadata accessor for PlaceHint,  a1);
}

uint64_t AudioUsoIntent.haReference()@<X0>(uint64_t a1@<X8>)
{
  return sub_16F3F0( (void (*)(uint64_t, void *))&ControlsUsoTask.haReference(),  (uint64_t (*)(void))&type metadata accessor for Reference,  a1);
}

uint64_t sub_16F3F0@<X0>( void (*a1)(uint64_t, void *)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = dispatch thunk of AudioUsoIntent.usoTask.getter();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for UsoTask(0LL);
    a1(v8, &protocol witness table for UsoTask);
    return swift_release(v7);
  }

  else
  {
    uint64_t v10 = a2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))( a3,  1LL,  1LL,  v10);
  }

void *sub_16F494(uint64_t a1, uint64_t a2)
{
  return sub_16F4E8(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haRoomNames());
}

uint64_t sub_16F4A0(uint64_t a1, uint64_t a2)
{
  return sub_16F57C(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haHomeName());
}

void *sub_16F4AC(uint64_t a1, uint64_t a2)
{
  return sub_16F4E8(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haZoneNames());
}

void *sub_16F4B8(uint64_t a1, uint64_t a2)
{
  return sub_16F4E8(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haAccessoryNames());
}

void *sub_16F4C4(uint64_t a1, uint64_t a2)
{
  return sub_16F4E8(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haServiceNames());
}

void *sub_16F4D0(uint64_t a1, uint64_t a2)
{
  return sub_16F4E8(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haServiceGroups());
}

void *sub_16F4DC(uint64_t a1, uint64_t a2)
{
  return sub_16F4E8(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haFromEntities());
}

void *sub_16F4E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t v4 = dispatch thunk of AudioUsoIntent.usoTask.getter();
  if (!v4) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for UsoTask(0LL);
  uint64_t v7 = a3(v6, &protocol witness table for UsoTask);
  swift_release(v5);
  return (void *)v7;
}

uint64_t sub_16F55C@<X0>(uint64_t a1@<X8>)
{
  return sub_16F634( (void (*)(uint64_t, void *))&ControlsUsoTask.haDeviceQuantifier(),  (uint64_t (*)(void))&type metadata accessor for DeviceQuantifier,  a1);
}

uint64_t sub_16F570(uint64_t a1, uint64_t a2)
{
  return sub_16F57C(a1, a2, (uint64_t (*)(uint64_t, void *))&ControlsUsoTask.haDestinationDeviceId());
}

uint64_t sub_16F57C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t v4 = dispatch thunk of AudioUsoIntent.usoTask.getter();
  if (!v4) {
    return 0LL;
  }
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for UsoTask(0LL);
  uint64_t v7 = a3(v6, &protocol witness table for UsoTask);
  swift_release(v5);
  return v7;
}

uint64_t sub_16F5F8@<X0>(uint64_t a1@<X8>)
{
  return sub_16F634( (void (*)(uint64_t, void *))&ControlsUsoTask.haDeviceType(),  (uint64_t (*)(void))&type metadata accessor for DeviceType,  a1);
}

uint64_t sub_16F60C@<X0>(uint64_t a1@<X8>)
{
  return sub_16F634( (void (*)(uint64_t, void *))&ControlsUsoTask.haPlaceHint(),  (uint64_t (*)(void))&type metadata accessor for PlaceHint,  a1);
}

uint64_t sub_16F620@<X0>(uint64_t a1@<X8>)
{
  return sub_16F634( (void (*)(uint64_t, void *))&ControlsUsoTask.haReference(),  (uint64_t (*)(void))&type metadata accessor for Reference,  a1);
}

uint64_t sub_16F634@<X0>( void (*a1)(uint64_t, void *)@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = dispatch thunk of AudioUsoIntent.usoTask.getter();
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for UsoTask(0LL);
    a1(v8, &protocol witness table for UsoTask);
    return swift_release(v7);
  }

  else
  {
    uint64_t v10 = a2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))( a3,  1LL,  1LL,  v10);
  }

uint64_t sub_16F6DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v57 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v52 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = sub_6C5C(&qword_284DA8);
  __chkstk_darwin(v54);
  uint64_t v56 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_6C5C(&qword_284DB0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v53 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v51 - v8;
  __chkstk_darwin(v7);
  uint64_t v60 = (uint64_t)&v51 - v10;
  uint64_t v11 = type metadata accessor for Parse(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v61 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v51 - v19;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v21 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v58 = v21;
  uint64_t v59 = v22;
  uint64_t v23 = ((uint64_t (*)(char *))v22)(v20);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "SearchForMediaFlowStrategy#actionForInput", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v28 = v27(v20, v15);
  Input.parse.getter(v28);
  double v29 = sub_B7C84(v14, (uint64_t)&v64);
  (*(void (**)(char *, uint64_t, double))(v12 + 8))(v14, v11, v29);
  if (v65)
  {
    sub_49B60(&v64, &v66);
    uint64_t v30 = v67;
    uint64_t v31 = v68;
    sub_6EA8(&v66, v67);
    uint64_t v32 = v60;
    dispatch thunk of AudioIntent.verb.getter(v30, v31);
    uint64_t v33 = v55;
    uint64_t v34 = v57;
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v9, enum case for CommonAudio.Verb.summarise(_:), v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v9, 0LL, 1LL, v34);
    uint64_t v35 = v56;
    uint64_t v36 = v56 + *(int *)(v54 + 48);
    sub_D8208(v32, v56);
    sub_D8208((uint64_t)v9, v36);
    uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v37(v35, 1LL, v34) == 1)
    {
      sub_1F6CC((uint64_t)v9, &qword_284DB0);
      sub_1F6CC(v32, &qword_284DB0);
      if (v37(v36, 1LL, v34) == 1)
      {
        uint64_t v38 = sub_1F6CC(v35, &qword_284DB0);
LABEL_18:
        static ActionForInput.handle()(v38);
        return sub_6C3C(&v66);
      }
    }

    else
    {
      uint64_t v40 = v53;
      sub_D8208(v35, v53);
      if (v37(v36, 1LL, v34) != 1)
      {
        uint64_t v47 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v52, v36, v34);
        uint64_t v48 = sub_10430( (unint64_t *)&qword_284E08,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Verb,  (uint64_t)&protocol conformance descriptor for CommonAudio.Verb);
        char v49 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v47, v34, v48);
        uint64_t v50 = *(void (**)(char *, uint64_t))(v33 + 8);
        v50(v47, v34);
        sub_1F6CC((uint64_t)v9, &qword_284DB0);
        sub_1F6CC(v60, &qword_284DB0);
        v50((char *)v40, v34);
        uint64_t v38 = sub_1F6CC(v35, &qword_284DB0);
        uint64_t v39 = v61;
        if ((v49 & 1) != 0) {
          goto LABEL_18;
        }
        goto LABEL_13;
      }

      sub_1F6CC((uint64_t)v9, &qword_284DB0);
      sub_1F6CC(v32, &qword_284DB0);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v40, v34);
    }

    sub_1F6CC(v35, &qword_284DA8);
    uint64_t v39 = v61;
LABEL_13:
    sub_6C3C(&v66);
    goto LABEL_14;
  }

  sub_1F6CC((uint64_t)&v64, &qword_2848C0);
  uint64_t v39 = v61;
LABEL_14:
  uint64_t v41 = v59(v39, v58, v15);
  uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl( &dword_0,  v42,  v43,  "SearchForMediaFlowStrategy#actionForInput received unsupported pommesResponse",  v44,  2u);
    swift_slowDealloc(v44, -1LL, -1LL);
  }

  uint64_t v45 = v27(v39, v15);
  return static ActionForInput.ignore()(v45);
}

uint64_t type metadata accessor for SearchForMediaFlowStrategy(uint64_t a1)
{
  uint64_t result = qword_28B658;
  if (!qword_28B658) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchForMediaFlowStrategy);
  }
  return result;
}

void sub_16FCD0(void *a1, void (*a2)(id, void), uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v58 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v55 - v11;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = v14(v12, v13, v4);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "SearchForMediaFlowStrategy#makeIntentFrom", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v12, v4);
  uint64_t v20 = sub_10470();
  if (v20)
  {
    uint64_t v21 = (uint8_t *)v20;
    id v22 = [objc_allocWithZone(INSearchForMediaIntent) init];
    uint64_t v23 = (void *)dispatch thunk of PommesResponse.clientResults.getter();
    id v24 = sub_17FBAC(v21, v23);

    swift_bridgeObjectRelease(v23);
    os_log_type_t v25 = v58;
    v14(v58, v13, v4);
    id v26 = v24;
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      double v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v62 = v56;
      *(_DWORD *)double v29 = 136315138;
      uint64_t v55 = v29 + 4;
      id v30 = v26;
      id v31 = [v30 description];
      uint64_t v57 = v19;
      id v32 = v31;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      unint64_t v35 = v34;

      uint64_t v61 = sub_6978(v33, v35, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

      swift_bridgeObjectRelease(v35);
      _os_log_impl( &dword_0,  v27,  v28,  "SearchForMediaFlowStrategy#makeIntentFromParse converted pommesResponse to intent: %s",  v29,  0xCu);
      uint64_t v36 = v56;
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);

      v57(v58, v4);
    }

    else
    {

      v19(v25, v4);
    }

    uint64_t v48 = v60;
    id v49 = v26;
    v48(v26, 0LL);
  }

  else
  {
    v14(v8, v13, v4);
    id v37 = a1;
    uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v41 = swift_slowAlloc(32LL, -1LL);
      uint64_t v58 = (char *)v41;
      uint64_t v62 = v41;
      *(_DWORD *)uint64_t v40 = 136315138;
      uint64_t v56 = (uint64_t)(v40 + 4);
      uint64_t v42 = dispatch thunk of PommesResponse.experiences.getter(v41);
      uint64_t v43 = type metadata accessor for Experience(0LL);
      uint64_t v44 = Array.description.getter(v42, v43);
      uint64_t v57 = v19;
      unint64_t v46 = v45;
      swift_bridgeObjectRelease(v42);
      uint64_t v61 = sub_6978(v44, v46, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62);

      swift_bridgeObjectRelease(v46);
      _os_log_impl( &dword_0,  v38,  v39,  "SearchForMediaFlowStrategy#makeIntentFromParse pommesResponse doesn't contain audioExperience %s",  v40,  0xCu);
      uint64_t v47 = v58;
      swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      v57(v8, v4);
    }

    else
    {

      v19(v8, v4);
    }

    uint64_t v50 = (void (*)(uint64_t, uint64_t))v60;
    uint64_t v51 = type metadata accessor for PlaybackCode(0LL);
    uint64_t v52 = sub_10430( &qword_2845E8,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
    uint64_t v53 = swift_allocError(v51, v52, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104LL))( v54,  enum case for PlaybackCode.ceGE82(_:),  v51);
    v50(v53, 1LL);
    swift_errorRelease(v53);
  }

id sub_170254(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v157 = a2;
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v151 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v163 = type metadata accessor for Logger(0LL);
  uint64_t v154 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v153 = (uint64_t (*)(char *, uint64_t))((char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PlaybackRepeatMode(0LL);
  uint64_t v160 = *(void *)(v9 - 8);
  Class v161 = (uint8_t *)v9;
  uint64_t v10 = __chkstk_darwin(v9);
  os_log_type_t v159 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v158 = (char *)&v151 - v12;
  uint64_t v165 = type metadata accessor for Apple_Parsec_Siri_V2alpha_PlaybackSignals(0LL);
  uint64_t v156 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  os_log_type_t v155 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Apple_Parsec_Siri_V2alpha_AudioClientComponent(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  char v162 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v151 - v18;
  uint64_t v20 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v20);
  id v22 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AudioUsoIntent(0LL);
  Experience.userDialogAct.getter(v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v22, 0LL, 1LL, v5);
  uint64_t v24 = AudioUsoIntent.__allocating_init(userDialogAct:)(v22);
  id v164 = v2;
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = swift_retain(v24);
    uint64_t v163 = (uint64_t)a1;
    uint64_t v27 = AudioExperience.audioClientComponent.getter(v26);
    uint64_t v28 = Apple_Parsec_Siri_V2alpha_AudioClientComponent.appBundleID.getter(v27);
    id v30 = v29;
    id v31 = *(void (**)(char *, uint64_t))(v15 + 8);
    v31(v19, v14);
    id v32 = (void *)sub_5B3C8(v25, v28, v30);
    uint64_t v154 = v25;
    swift_release(v25);
    swift_bridgeObjectRelease(v30);
    uint64_t v33 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v34 = swift_dynamicCastObjCClass(v3, v33);
    uint64_t v152 = v14;
    uint64_t v153 = (uint64_t (*)(char *, uint64_t))v31;
    if (v34)
    {
      id v35 = [v3 backingStore];
      uint64_t v36 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v37 = swift_dynamicCastObjCClass(v35, v36);
      if (v37) {
        goto LABEL_16;
      }
    }

    else
    {
      uint64_t v55 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
      if (swift_dynamicCastObjCClass(v3, v55))
      {
        id v35 = [v3 backingStore];
        uint64_t v56 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
        uint64_t v37 = swift_dynamicCastObjCClass(v35, v56);
        if (v37) {
          goto LABEL_16;
        }
      }

      else
      {
        uint64_t v59 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
        if (!swift_dynamicCastObjCClass(v3, v59))
        {
          uint64_t v135 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
          if (!swift_dynamicCastObjCClass(v3, v135))
          {
            __int128 v64 = (void *)v163;
            uint64_t v65 = v165;
            uint64_t v63 = v155;
LABEL_21:

            type metadata accessor for AudioPluginProcessor(0LL);
            uint64_t v66 = AudioPluginProcessor.__allocating_init()();
            uint64_t v157 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v64, v157);
            uint64_t v67 = swift_release(v66);
            uint64_t v68 = AudioExperience.playbackSignals.getter(v67);
            char v69 = Apple_Parsec_Siri_V2alpha_PlaybackSignals.playShuffled.getter(v68);
            os_log_type_t v70 = *(void (**)(char *, uint64_t))(v156 + 8);
            v70(v63, v65);
            id v71 = [v3 backingStore];
            uint64_t v72 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
            unint64_t v73 = (void *)swift_dynamicCastObjCClass(v71, v72);
            if (!v73) {

            }
            [v73 setPlayShuffled:v69 & 1];
            uint64_t v75 = AudioExperience.playbackSignals.getter(v74);
            id v76 = v158;
            Apple_Parsec_Siri_V2alpha_PlaybackSignals.playbackRepeatMode.getter(v75);
            v70(v63, v65);
            uint64_t v78 = v159;
            uint64_t v77 = v160;
            uint64_t v79 = v76;
            uint64_t v80 = v161;
            (*(void (**)(char *, char *, uint8_t *))(v160 + 32))(v159, v79, v161);
            int v81 = (*(uint64_t (**)(char *, uint8_t *))(v77 + 88))(v78, v80);
            id v82 = v64;
            if (v81 == enum case for Apple_Parsec_Siri_V2alpha_PlaybackRepeatMode.all(_:))
            {
              uint64_t v83 = 2LL;
            }

            else if (v81 == enum case for Apple_Parsec_Siri_V2alpha_PlaybackRepeatMode.one(_:))
            {
              uint64_t v83 = 3LL;
            }

            else
            {
              (*(void (**)(char *, uint8_t *))(v77 + 8))(v78, v80);
              uint64_t v83 = 1LL;
            }

            id v84 = [v3 backingStore];
            uint64_t v85 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
            unint64_t v86 = (void *)swift_dynamicCastObjCClass(v84, v85);
            if (v86) {
              [v86 setPlaybackRepeatMode:INPlaybackRepeatModeGetBackingType(v83)];
            }

            uint64_t v88 = AudioExperience.playbackSignals.getter(v87);
            char v89 = Apple_Parsec_Siri_V2alpha_PlaybackSignals.resumePlayback.getter(v88);
            v70(v63, v165);
            id v90 = [v3 backingStore];
            uint64_t v91 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
            uint64_t v92 = (void *)swift_dynamicCastObjCClass(v90, v91);
            if (!v92) {

            }
            [v92 setResumePlayback:v89 & 1];
            id v93 = v162;
            uint64_t v95 = AudioExperience.audioClientComponent.getter(v94);
            uint64_t v96 = Apple_Parsec_Siri_V2alpha_AudioClientComponent.appBundleID.getter(v95);
            uint64_t v98 = v97;
            uint64_t v99 = v153(v93, v152);
            uint64_t v100 = static BundleIdentifiers.soundscapes.getter(v99);
            uint64_t v102 = v101;
            if (v96 == v100 && v98 == v101)
            {
              swift_bridgeObjectRelease_n(v98, 2LL);
            }

            else
            {
              char v103 = _stringCompareWithSmolCheck(_:_:expecting:)(v96, v98);
              swift_bridgeObjectRelease(v98);
              uint64_t v104 = swift_bridgeObjectRelease(v102);
              if ((v103 & 1) == 0)
              {
                uint64_t v105 = AudioExperience.playbackSignals.getter(v104);
                float v106 = Apple_Parsec_Siri_V2alpha_PlaybackSignals.playbackSpeed.getter(v105);
                v70(v63, v165);
                double v107 = v106;
                id v108 = [v3 backingStore];
                uint64_t v109 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
                char v110 = (void *)swift_dynamicCastObjCClass(v108, v109);
                if (!v110) {

                }
                [v110 setPlaybackSpeed:v107];
              }
            }

            uint64_t v111 = sub_164A4();
            id v112 = [v3 backingStore];
            uint64_t v113 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
            uint64_t v114 = (void *)swift_dynamicCastObjCClass(v112, v113);
            if (v114) {
              [v114 setPlaybackQueueLocation:INPlaybackQueueLocationGetBackingType(v111)];
            }

            uint64_t v115 = v157;
            id v116 = sub_1672C(v82);
            id v117 = [v3 backingStore];
            uint64_t v118 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
            uint64_t v119 = swift_dynamicCastObjCClass(v117, v118);
            if (v119)
            {
              uint64_t v120 = (void *)v119;
              id v121 = (id)INIntentSlotValueTransformToPrivatePlayMediaIntentData(v116);
              [v120 setPrivatePlayMediaIntentData:v121];

              id v116 = v117;
              id v117 = v121;
            }

            unint64_t v123 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter(v122);
            unint64_t v125 = v124;
            uint64_t v126 = AudioExperience.systemExtensionBundleID.getter();
            unint64_t v128 = v127;
            id v129 = sub_1941C(v123, v125, v126, v127);
            swift_bridgeObjectRelease(v125);
            swift_bridgeObjectRelease(v128);
            uint64_t v130 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
            id v57 = v164;
            if (swift_dynamicCastObjCClass(v164, v130))
            {
              id v131 = [v57 backingStore];
              uint64_t v132 = &OBJC_CLASS____INPBPlayMediaIntent;
            }

            else
            {
              uint64_t v133 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
              if (swift_dynamicCastObjCClass(v57, v133))
              {
                id v131 = [v57 backingStore];
                uint64_t v132 = &OBJC_CLASS____INPBAddMediaIntent;
              }

              else
              {
                uint64_t v134 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
                if (swift_dynamicCastObjCClass(v57, v134))
                {
                  id v131 = [v57 backingStore];
                  uint64_t v132 = &OBJC_CLASS____INPBUpdateMediaAffinityIntent;
                }

                else
                {
                  uint64_t v139 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
                  if (!swift_dynamicCastObjCClass(v57, v139))
                  {
                    uint64_t v141 = v129;
LABEL_57:

                    uint64_t v142 = v154;
                    id v143 = sub_1C97C0(v154);
                    id v144 = [v57 backingStore];
                    uint64_t v145 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
                    uint64_t v146 = swift_dynamicCastObjCClass(v144, v145);
                    if (v146)
                    {
                      os_log_type_t v147 = (void *)v146;
                      id v148 = (id)INIntentSlotValueTransformToMediaItemValue(v143);
                      [v147 setMediaContainer:v148];

                      id v57 = v164;
                    }

                    else
                    {
                    }

                    id v149 = v57;
                    swift_release(v142);
                    swift_release(v115);
                    return v57;
                  }

                  id v131 = [v57 backingStore];
                  uint64_t v132 = &OBJC_CLASS____INPBSearchForMediaIntent;
                }
              }
            }

            uint64_t v140 = objc_opt_self(v132);
            uint64_t v141 = (void *)swift_dynamicCastObjCClass(v131, v140);
            if (!v141) {

            }
            [v141 setIntentMetadata:v129];
            goto LABEL_57;
          }

          id v35 = [v3 backingStore];
          uint64_t v136 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
          uint64_t v137 = swift_dynamicCastObjCClass(v35, v136);
          uint64_t v63 = v155;
          if (!v137) {
            goto LABEL_18;
          }
          uint64_t v138 = (void *)v137;
          id v62 = (id)INIntentSlotValueTransformToMediaSearch(v32);
          [v138 setMediaSearch:v62];
LABEL_17:

          id v32 = v35;
          id v35 = v62;
LABEL_18:
          __int128 v64 = (void *)v163;
          uint64_t v65 = v165;
LABEL_20:

          id v32 = v35;
          goto LABEL_21;
        }

        id v35 = [v3 backingStore];
        uint64_t v60 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
        uint64_t v37 = swift_dynamicCastObjCClass(v35, v60);
        if (v37)
        {
LABEL_16:
          uint64_t v61 = (void *)v37;
          id v62 = (id)INIntentSlotValueTransformToMediaSearch(v32);
          [v61 setMediaSearch:v62];
          uint64_t v63 = v155;
          goto LABEL_17;
        }
      }
    }

    __int128 v64 = (void *)v163;
    uint64_t v65 = v165;
    uint64_t v63 = v155;
    goto LABEL_20;
  }

  uint64_t v165 = v5;
  uint64_t v38 = (char *)v153;
  uint64_t v39 = v154;
  uint64_t v40 = v163;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v41 = sub_6960(v40, (uint64_t)qword_2969C8);
  uint64_t v42 = v39;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  uint64_t v44 = v38;
  v43(v38, v41, v40);
  id v45 = a1;
  unint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    char v162 = (char *)v49;
    v167[0] = v49;
    *(_DWORD *)uint64_t v48 = 136315138;
    Class v161 = v48 + 4;
    uint64_t v50 = v151;
    Experience.userDialogAct.getter(v49);
    uint64_t v51 = String.init<A>(describing:)(v50, v165);
    unint64_t v53 = v52;
    uint64_t v166 = sub_6978(v51, v52, v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167);

    swift_bridgeObjectRelease(v53);
    _os_log_impl( &dword_0,  v46,  v47,  "INPlayMediaIntent#amend unable to construct AudioUsoIntent from userDialogAct: %s",  v48,  0xCu);
    uint64_t v54 = v162;
    swift_arrayDestroy(v162, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1LL, -1LL);
    swift_slowDealloc(v48, -1LL, -1LL);
  }

  else
  {
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v40);
  id v57 = v164;
  id v58 = v164;
  return v57;
}

uint64_t _s21ConfirmIntentStrategyCMa_1(uint64_t a1)
{
  uint64_t result = qword_28B7C8;
  if (!qword_28B7C8) {
    return swift_getSingletonMetadata(a1, &_s21ConfirmIntentStrategyCMn_1);
  }
  return result;
}

uint64_t type metadata accessor for OpenMediaItemCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin29OpenMediaItemCatDialogService);
}

BOOL sub_170F44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v48 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v47 = (char *)&v45 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  id v22 = (char *)&v45 - v21;
  uint64_t v23 = dispatch thunk of HomeAutomationEntityProviding.haRoomNames()(v20);
  uint64_t v24 = *(void *)(v23 + 16);
  swift_bridgeObjectRelease(v23);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v25(v22, v3, a1);
  uint64_t v46 = a2;
  if (v24)
  {
    uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    v26(v22, a1);
    v25(v19, v3, a1);
    BOOL v27 = 1;
  }

  else
  {
    dispatch thunk of HomeAutomationEntityProviding.haHomeName()(a1, a2);
    uint64_t v29 = v28;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    v26(v22, a1);
    swift_bridgeObjectRelease(v29);
    v25(v19, v3, a1);
    if (v29)
    {
      BOOL v27 = 1;
    }

    else
    {
      uint64_t v30 = dispatch thunk of HomeAutomationEntityProviding.haZoneNames()(a1, a2);
      uint64_t v31 = *(void *)(v30 + 16);
      swift_bridgeObjectRelease(v30);
      BOOL v27 = v31 != 0;
    }
  }

  v26(v19, a1);
  v25(v16, v3, a1);
  if (v27)
  {
    v26(v16, a1);
    v25(v13, v3, a1);
LABEL_9:
    v26(v13, a1);
    id v35 = v47;
    v25(v47, v3, a1);
    uint64_t v36 = v48;
LABEL_10:
    v26(v35, a1);
    v25(v36, v3, a1);
    goto LABEL_11;
  }

  uint64_t v32 = v46;
  uint64_t v33 = dispatch thunk of HomeAutomationEntityProviding.haAccessoryNames()(a1, v46);
  uint64_t v34 = *(void *)(v33 + 16);
  swift_bridgeObjectRelease(v33);
  v26(v16, a1);
  v25(v13, v3, a1);
  if (v34) {
    goto LABEL_9;
  }
  uint64_t v39 = dispatch thunk of HomeAutomationEntityProviding.haServiceNames()(a1, v32);
  uint64_t v40 = *(void *)(v39 + 16);
  swift_bridgeObjectRelease(v39);
  v26(v13, a1);
  id v35 = v47;
  v25(v47, v3, a1);
  uint64_t v36 = v48;
  if (v40) {
    goto LABEL_10;
  }
  uint64_t v41 = dispatch thunk of HomeAutomationEntityProviding.haServiceGroups()(a1, v32);
  uint64_t v42 = *(void *)(v41 + 16);
  swift_bridgeObjectRelease(v41);
  v26(v35, a1);
  v25(v36, v3, a1);
  if (!v42)
  {
    uint64_t v43 = dispatch thunk of HomeAutomationEntityProviding.haFromEntities()(a1, v32);
    uint64_t v44 = *(void *)(v43 + 16);
    swift_bridgeObjectRelease(v43);
    BOOL v37 = v44 != 0;
    goto LABEL_12;
  }

uint64_t sub_171274(void (*a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v108 = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v105 = v4;
  __chkstk_darwin(v4);
  uint64_t v109 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = type metadata accessor for PlaceHint(0LL);
  uint64_t v97 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v88 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = sub_6C5C(&qword_28BA58);
  __chkstk_darwin(v92);
  uint64_t v94 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285130);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v90 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v96 = (uint64_t)&v88 - v12;
  __chkstk_darwin(v11);
  id v93 = (char *)&v88 - v13;
  uint64_t v102 = sub_6C5C(&qword_285138);
  uint64_t v100 = *(void *)(v102 - 8);
  uint64_t v14 = __chkstk_darwin(v102);
  uint64_t v101 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v91 = (char *)&v88 - v17;
  uint64_t v99 = *((void *)a1 - 1);
  uint64_t v18 = __chkstk_darwin(v16);
  float v106 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v98 = (char *)&v88 - v20;
  uint64_t v21 = type metadata accessor for DeviceQuantifier(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v89 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_6C5C(&qword_28BA60);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_6C5C(&qword_285140);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v88 - v32;
  __chkstk_darwin(v31);
  id v35 = (char *)&v88 - v34;
  uint64_t v107 = v2;
  char v103 = a1;
  dispatch thunk of HomeAutomationEntityProviding.haDeviceQuantifier()(a1, v108);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v33, enum case for DeviceQuantifier.all(_:), v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v33, 0LL, 1LL, v21);
  uint64_t v36 = (uint64_t)&v26[*(int *)(v24 + 48)];
  sub_FF10((uint64_t)v35, (uint64_t)v26, &qword_285140);
  sub_FF10((uint64_t)v33, v36, &qword_285140);
  BOOL v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v37((uint64_t)v26, 1LL, v21) == 1)
  {
    sub_1F6CC((uint64_t)v33, &qword_285140);
    sub_1F6CC((uint64_t)v35, &qword_285140);
    if (v37(v36, 1LL, v21) == 1)
    {
      sub_1F6CC((uint64_t)v26, &qword_285140);
      uint64_t v39 = v98;
      uint64_t v38 = v99;
      uint64_t v40 = *(void (**)(char *, uint64_t, void (*)(void, void)))(v99 + 16);
      uint64_t v41 = (uint64_t)v103;
      v40(v98, v107, (void (*)(void, void))v103);
      uint64_t v42 = v108;
LABEL_8:
      uint64_t v47 = (uint64_t)v91;
      dispatch thunk of HomeAutomationEntityProviding.haDeviceType()(v41, v42);
      char v103 = *(void (**)(char *, uint64_t))(v38 + 8);
      v103(v39, v41);
      uint64_t v48 = type metadata accessor for DeviceType(0LL);
      LODWORD(v10sub_6C3C(v0 + 8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48LL))( v47,  1LL,  v48) == 1;
      sub_1F6CC(v47, &qword_285138);
      goto LABEL_10;
    }

    goto LABEL_6;
  }

  sub_FF10((uint64_t)v26, (uint64_t)v30, &qword_285140);
  if (v37(v36, 1LL, v21) == 1)
  {
    sub_1F6CC((uint64_t)v33, &qword_285140);
    sub_1F6CC((uint64_t)v35, &qword_285140);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v21);
LABEL_6:
    sub_1F6CC((uint64_t)v26, &qword_28BA60);
    uint64_t v39 = v98;
    uint64_t v38 = v99;
    uint64_t v40 = *(void (**)(char *, uint64_t, void (*)(void, void)))(v99 + 16);
    uint64_t v41 = (uint64_t)v103;
    v40(v98, v107, (void (*)(void, void))v103);
    uint64_t v42 = v108;
    goto LABEL_9;
  }

  uint64_t v43 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v89, v36, v21);
  uint64_t v44 = sub_10430( &qword_28BA70,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceQuantifier,  (uint64_t)&protocol conformance descriptor for DeviceQuantifier);
  char v45 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v43, v21, v44);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v22 + 8);
  v46(v43, v21);
  sub_1F6CC((uint64_t)v33, &qword_285140);
  sub_1F6CC((uint64_t)v35, &qword_285140);
  v46(v30, v21);
  sub_1F6CC((uint64_t)v26, &qword_285140);
  uint64_t v39 = v98;
  uint64_t v38 = v99;
  uint64_t v40 = *(void (**)(char *, uint64_t, void (*)(void, void)))(v99 + 16);
  uint64_t v41 = (uint64_t)v103;
  v40(v98, v107, (void (*)(void, void))v103);
  uint64_t v42 = v108;
  if ((v45 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  char v103 = *(void (**)(char *, uint64_t))(v38 + 8);
  v103(v39, v41);
  LODWORD(v10sub_6C3C(v0 + 8) = 0;
LABEL_10:
  uint64_t v49 = sub_6C5C(&qword_28BA50);
  uint64_t v61 = *(char **)(v100 + 72);
  uint64_t v50 = *(unsigned __int8 *)(v100 + 80);
  uint64_t v51 = (v50 + 32) & ~v50;
  uint64_t v52 = swift_allocObject(v49, v51 + 2LL * (void)v61, v50 | 7);
  *(_OWORD *)(v52 + sub_6C3C(v0 + 16) = xmmword_2160E0;
  uint64_t v53 = v52 + v51;
  uint64_t v54 = enum case for DeviceType.television(_:);
  uint64_t v55 = type metadata accessor for DeviceType(0LL);
  uint64_t v56 = *(void *)(v55 - 8);
  id v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104);
  v57(v53, v54, v55);
  id v58 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);
  v58(v53, 0LL, 1LL, v55);
  v57((uint64_t)&v61[v53], enum case for DeviceType.appleTv(_:), v55);
  v58((uint64_t)&v61[v53], 0LL, 1LL, v55);
  uint64_t v59 = (uint64_t)v101;
  uint64_t v60 = v107;
  dispatch thunk of HomeAutomationEntityProviding.haDeviceType()(v41, v42);
  LODWORD(v61) = sub_884F4(v59, v52);
  sub_1F6CC(v59, &qword_285138);
  swift_setDeallocating(v52);
  swift_arrayDestroy(v53, *(void *)(v52 + 16), v102);
  swift_deallocClassInstance(v52, 32LL, 7LL);
  LOBYTE(v5sub_6C3C(v0 + 2) = sub_170F44(v41, v42);
  id v62 = v106;
  v40(v106, v60, (void (*)(void, void))v41);
  uint64_t v63 = v41;
  if ((v52 & 1) == 0)
  {
    v103(v62, v41);
    char v75 = 0;
    uint64_t v74 = v104;
    uint64_t v72 = v105;
    int v76 = v108;
    goto LABEL_20;
  }

  LODWORD(v10sub_6C3C(v0 + 7) = (_DWORD)v61;
  uint64_t v64 = (uint64_t)v93;
  dispatch thunk of HomeAutomationEntityProviding.haPlaceHint()(v41, v42);
  uint64_t v66 = v96;
  uint64_t v65 = v97;
  uint64_t v67 = v95;
  (*(void (**)(uint64_t, void, uint64_t))(v97 + 104))(v96, enum case for PlaceHint.house(_:), v95);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0LL, 1LL, v67);
  uint64_t v68 = v94;
  uint64_t v69 = v94 + *(int *)(v92 + 48);
  sub_FF10(v64, v94, &qword_285130);
  sub_FF10(v66, v69, &qword_285130);
  os_log_type_t v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  int v71 = v70(v68, 1LL, v67);
  uint64_t v72 = v105;
  if (v71 == 1)
  {
    sub_1F6CC(v66, &qword_285130);
    sub_1F6CC(v64, &qword_285130);
    v103(v62, v63);
    int v73 = v70(v69, 1LL, v67);
    uint64_t v74 = v104;
    if (v73 == 1)
    {
      sub_1F6CC(v68, &qword_285130);
      char v75 = 1;
LABEL_18:
      int v76 = v108;
      LOBYTE(v61) = v107;
      goto LABEL_20;
    }

uint64_t sub_171D98(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v2 = sub_6C5C(&qword_285138);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_28BA50);
  uint64_t v7 = *(void *)(v3 + 72);
  uint64_t v8 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = swift_allocObject(v6, v9 + 2 * v7, v8 | 7);
  *(_OWORD *)(v10 + sub_6C3C(v0 + 16) = xmmword_2160E0;
  uint64_t v11 = v10 + v9;
  uint64_t v12 = enum case for DeviceType.television(_:);
  uint64_t v13 = type metadata accessor for DeviceType(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104);
  v15(v11, v12, v13);
  uint64_t v16 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
  v16(v11, 0LL, 1LL, v13);
  v15(v11 + v7, enum case for DeviceType.appleTv(_:), v13);
  v16(v11 + v7, 0LL, 1LL, v13);
  dispatch thunk of HomeAutomationEntityProviding.haDeviceType()(v19, v20);
  char v17 = sub_884F4((uint64_t)v5, v10);
  sub_1F6CC((uint64_t)v5, &qword_285138);
  swift_setDeallocating(v10);
  swift_arrayDestroy(v11, *(void *)(v10 + 16), v2);
  swift_deallocClassInstance(v10, 32LL, 7LL);
  return v17 & 1;
}

BOOL sub_171F24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_6C5C(&qword_285128);
  __chkstk_darwin(v5);
  uint64_t v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_285130);
  __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_285140);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = *(void *)(a1 - 8);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v48 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v48 - v22;
  uint64_t v24 = sub_6C5C(&qword_285138);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = v2;
  dispatch thunk of HomeAutomationEntityProviding.haDeviceType()(a1, a2);
  uint64_t v28 = type metadata accessor for DeviceType(0LL);
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48LL))(v26, 1LL, v28);
  sub_1F6CC((uint64_t)v26, &qword_285138);
  if (v29 == 1) {
    return 0LL;
  }
  uint64_t v49 = v15;
  uint64_t v50 = v18;
  uint64_t v30 = v27;
  BOOL v31 = sub_170F44(a1, a2);
  uint64_t v32 = v53;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v33(v23, v30, a1);
  if (v31)
  {
    uint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    v34(v23, a1);
    v33(v21, v30, a1);
LABEL_8:
    v34(v21, a1);
    uint64_t v39 = v50;
    v33(v50, v30, a1);
    goto LABEL_9;
  }

  dispatch thunk of HomeAutomationEntityProviding.haDeviceQuantifier()(a1, a2);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
  v34(v23, a1);
  uint64_t v35 = type metadata accessor for DeviceQuantifier(0LL);
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48LL))(v12, 1LL, v35);
  sub_1F6CC((uint64_t)v12, &qword_285140);
  v33(v21, v30, a1);
  if (v36 != 1) {
    goto LABEL_8;
  }
  dispatch thunk of HomeAutomationEntityProviding.haDestinationDeviceId()(a1, a2);
  uint64_t v38 = v37;
  v34(v21, a1);
  swift_bridgeObjectRelease(v38);
  uint64_t v39 = v50;
  v33(v50, v30, a1);
  if (v38)
  {
LABEL_9:
    uint64_t v43 = v49;
    v34(v39, a1);
    v33(v43, v30, a1);
    goto LABEL_10;
  }

  uint64_t v40 = (uint64_t)v52;
  dispatch thunk of HomeAutomationEntityProviding.haPlaceHint()(a1, a2);
  v34(v39, a1);
  uint64_t v41 = type metadata accessor for PlaceHint(0LL);
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48LL))(v40, 1LL, v41);
  sub_1F6CC(v40, &qword_285130);
  uint64_t v43 = v49;
  v33(v49, v30, a1);
  if (v42 != 1)
  {
LABEL_10:
    v34(v43, a1);
    return 0LL;
  }

  uint64_t v44 = (uint64_t)v51;
  dispatch thunk of HomeAutomationEntityProviding.haReference()(a1, a2);
  v34(v43, a1);
  uint64_t v45 = type metadata accessor for Reference(0LL);
  BOOL v46 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48LL))(v44, 1LL, v45) == 1;
  sub_1F6CC(v44, &qword_285128);
  return v46;
}

void *sub_17235C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FromEntity(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = dispatch thunk of HomeAutomationEntityProviding.haFromEntities()(a1, a2);
  uint64_t v10 = v9;
  int64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    uint64_t v30 = a1;
    uint64_t v31 = v2;
    uint64_t v32 = a2;
    int v36 = _swiftEmptyArrayStorage;
    sub_C70BC(0, v11, 0);
    uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v29 = v10;
    uint64_t v13 = v10 + ((v12 + 32) & ~v12);
    uint64_t v34 = *(void *)(v6 + 72);
    uint64_t v35 = v6;
    uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
    do
    {
      uint64_t v14 = v33(v8, v13, v5);
      uint64_t v15 = FromEntity.value.getter(v14);
      uint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
      uint64_t v18 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      {
        sub_C70BC(0, v18[2] + 1LL, 1);
        uint64_t v18 = v36;
      }

      unint64_t v20 = v18[2];
      unint64_t v19 = v18[3];
      if (v20 >= v19 >> 1)
      {
        sub_C70BC(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v36;
      }

      v18[2] = v20 + 1;
      uint64_t v21 = &v18[2 * v20];
      v21[4] = v15;
      v21[5] = v17;
      v13 += v34;
      --v11;
    }

    while (v11);
    swift_bridgeObjectRelease(v29);
    a2 = v32;
    a1 = v30;
  }

  else
  {
    swift_bridgeObjectRelease(v9);
    uint64_t v18 = _swiftEmptyArrayStorage;
  }

  uint64_t v22 = dispatch thunk of HomeAutomationEntityProviding.haRoomNames()(a1);
  uint64_t v23 = dispatch thunk of HomeAutomationEntityProviding.haZoneNames()(a1, a2);
  int v36 = (void *)v22;
  sub_97AE4(v23);
  uint64_t v24 = v36;
  uint64_t v25 = dispatch thunk of HomeAutomationEntityProviding.haServiceNames()(a1, a2);
  int v36 = v24;
  sub_97AE4(v25);
  uint64_t v26 = v36;
  uint64_t v27 = dispatch thunk of HomeAutomationEntityProviding.haServiceGroups()(a1, a2);
  int v36 = v26;
  sub_97AE4(v27);
  sub_97AE4((uint64_t)v18);
  return v36;
}

uint64_t sub_172594()
{
  uint64_t v1 = type metadata accessor for Locale(0LL);
  uint64_t v206 = *(void *)(v1 - 8);
  uint64_t v207 = v1;
  __chkstk_darwin(v1);
  unint64_t v205 = (char *)&v197 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for ResponseMode(0LL);
  uint64_t v200 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v197 - v7;
  uint64_t v204 = type metadata accessor for InputOrigin(0LL);
  uint64_t v202 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v10 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v203 = type metadata accessor for InteractionType(0LL);
  uint64_t v11 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v13 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_28BA78);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v197 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v201 = (char *)&v197 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v197 - v21;
  uint64_t v23 = static SiriEnvironmentWrapper.retrieve()(v20);
  if (v23)
  {
    uint64_t v24 = v23;
    unint64_t v197 = v13;
    uint64_t v198 = v11;
    unint64_t v199 = v10;
    uint64_t v25 = v202;
    uint64_t v201 = v0;
    uint64_t v26 = type metadata accessor for SirikitDeviceState.Builder(0LL);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    uint64_t v27 = SirikitDeviceState.Builder.init()();
    uint64_t v28 = ((uint64_t (*)(void))SiriEnvironment.currentDevice.getter)();
    char v29 = dispatch thunk of CurrentDevice.isHomePod.getter();
    swift_release(v28);
    uint64_t v30 = dispatch thunk of SirikitDeviceState.Builder.withIsHomePod(_:)(v29 & 1);
    uint64_t v31 = swift_release(v27);
    uint64_t v32 = SiriEnvironment.currentDevice.getter(v31);
    LOBYTE(v2sub_6C3C(v0 + 7) = dispatch thunk of CurrentDevice.isWatch.getter();
    swift_release(v32);
    uint64_t v33 = dispatch thunk of SirikitDeviceState.Builder.withIsWatch(_:)(v27 & 1);
    uint64_t v34 = swift_release(v30);
    uint64_t v35 = SiriEnvironment.currentDevice.getter(v34);
    LOBYTE(v3_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = dispatch thunk of CurrentDevice.isMac.getter();
    swift_release(v35);
    uint64_t v36 = dispatch thunk of SirikitDeviceState.Builder.withIsMac(_:)(v30 & 1);
    uint64_t v37 = swift_release(v33);
    uint64_t v38 = SiriEnvironment.currentDevice.getter(v37);
    LOBYTE(v3sub_6C3C(v0 + 3) = dispatch thunk of CurrentDevice.isAppleTV.getter();
    swift_release(v38);
    uint64_t v39 = dispatch thunk of SirikitDeviceState.Builder.withIsAppleTV(_:)(v33 & 1);
    uint64_t v40 = swift_release(v36);
    uint64_t v41 = SiriEnvironment.currentDevice.getter(v40);
    LOBYTE(v36) = dispatch thunk of CurrentDevice.isPhone.getter();
    swift_release(v41);
    uint64_t v42 = dispatch thunk of SirikitDeviceState.Builder.withIsPhone(_:)(v36 & 1);
    uint64_t v43 = swift_release(v39);
    uint64_t v44 = SiriEnvironment.currentDevice.getter(v43);
    LOBYTE(v3sub_6C3C(v0 + 9) = dispatch thunk of CurrentDevice.isPad.getter();
    swift_release(v44);
    uint64_t v45 = dispatch thunk of SirikitDeviceState.Builder.withIsPad(_:)(v39 & 1);
    uint64_t v46 = swift_release(v42);
    uint64_t v47 = SiriEnvironment.currentDevice.getter(v46);
    LOBYTE(v4sub_6C3C(v0 + 2) = dispatch thunk of CurrentDevice.isCarPlay.getter();
    swift_release(v47);
    uint64_t v48 = dispatch thunk of SirikitDeviceState.Builder.withIsCarPlay(_:)(v42 & 1);
    uint64_t v49 = swift_release(v45);
    uint64_t v50 = SiriEnvironment.currentDevice.getter(v49);
    LOBYTE(v45) = dispatch thunk of CurrentDevice.isCarDNDMode.getter();
    swift_release(v50);
    uint64_t v51 = dispatch thunk of SirikitDeviceState.Builder.withIsCarDnD(_:)(v45 & 1);
    uint64_t v52 = swift_release(v48);
    uint64_t v53 = SiriEnvironment.currentDevice.getter(v52);
    LOBYTE(v4sub_6C3C(v0 + 8) = dispatch thunk of CurrentDevice.isTextToSpeechEnabled.getter();
    swift_release(v53);
    uint64_t v54 = dispatch thunk of SirikitDeviceState.Builder.withIsTextToSpeechEnabled(_:)(v48 & 1);
    uint64_t v55 = swift_release(v51);
    uint64_t v56 = SiriEnvironment.currentDevice.getter(v55);
    LOBYTE(v51) = dispatch thunk of CurrentDevice.isLockedWithPasscode.getter();
    swift_release(v56);
    uint64_t v57 = dispatch thunk of SirikitDeviceState.Builder.withIsLockedWithPasscode(_:)(v51 & 1);
    swift_release(v54);
    id v58 = (void *)SiriEnvironment.toDirectInvocationContext(withModifiers:)(_swiftEmptyArrayStorage);
    id v59 = [v58 isEyesFree];

    uint64_t v60 = dispatch thunk of SirikitDeviceState.Builder.withIsEyesFree(_:)(v59);
    uint64_t v61 = swift_release(v57);
    uint64_t v62 = SiriEnvironment.currentDevice.getter(v61);
    LOBYTE(v5sub_6C3C(v0 + 7) = dispatch thunk of CurrentDevice.isVoiceTriggerEnabled.getter();
    swift_release(v62);
    uint64_t v63 = dispatch thunk of SirikitDeviceState.Builder.withIsVoiceTriggerEnabled(_:)(v57 & 1);
    uint64_t v64 = swift_release(v60);
    uint64_t v65 = SiriEnvironment.currentDevice.getter(v64);
    LOBYTE(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = dispatch thunk of CurrentDevice.isHomePod.getter();
    uint64_t v66 = swift_release(v65);
    if ((v60 & 1) != 0) {
      goto LABEL_4;
    }
    uint64_t v67 = SiriEnvironment.currentRequest.getter(v66);
    CurrentRequest.responseMode.getter();
    uint64_t v68 = swift_release(v67);
    static ResponseMode.voiceOnly.getter(v68);
    LOBYTE(v6sub_6C3C(v0 + 7) = static ResponseMode.== infix(_:_:)(v8, v6);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v200 + 8);
    v69(v6, v3);
    uint64_t v70 = ((uint64_t (*)(char *, uint64_t))v69)(v8, v3);
    if ((v67 & 1) != 0)
    {
LABEL_4:
      char v71 = 1;
    }

    else
    {
      uint64_t v160 = SiriEnvironment.currentRequest.getter(v70);
      CurrentRequest.responseMode.getter();
      uint64_t v161 = swift_release(v160);
      static ResponseMode.voiceForward.getter(v161);
      char v71 = static ResponseMode.== infix(_:_:)(v8, v6);
      v69(v6, v3);
      v69(v8, v3);
    }

    uint64_t v162 = dispatch thunk of SirikitDeviceState.Builder.withIsVOX(_:)(v71 & 1);
    uint64_t v163 = swift_release(v63);
    uint64_t v164 = SiriEnvironment.currentRequest.getter(v163);
    uint64_t v165 = v197;
    CurrentRequest.interactionType.getter();
    uint64_t v166 = swift_release(v164);
    uint64_t v167 = InteractionType.rawValue.getter(v166);
    uint64_t v169 = v168;
    (*(void (**)(char *, uint64_t))(v198 + 8))(v165, v203);
    SpeakableString.init(print:speak:)(v167, v169, 0LL, 0LL);
    uint64_t v170 = type metadata accessor for SpeakableString(0LL);
    uint64_t v171 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v170 - 8) + 56LL);
    v171(v22, 0LL, 1LL, v170);
    uint64_t v172 = dispatch thunk of SirikitDeviceState.Builder.withInteractionType(_:)(v22);
    swift_release(v162);
    uint64_t v173 = sub_30E4C((uint64_t)v22);
    uint64_t v174 = SiriEnvironment.currentRequest.getter(v173);
    uint64_t v175 = v199;
    CurrentRequest.inputOrigin.getter();
    uint64_t v176 = swift_release(v174);
    uint64_t v177 = InputOrigin.rawValue.getter(v176);
    uint64_t v179 = v178;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v175, v204);
    SpeakableString.init(print:speak:)(v177, v179, 0LL, 0LL);
    v171(v22, 0LL, 1LL, v170);
    uint64_t v180 = dispatch thunk of SirikitDeviceState.Builder.withInputOrigin(_:)(v22);
    swift_release(v172);
    uint64_t v181 = sub_30E4C((uint64_t)v22);
    uint64_t v182 = static SiriAudioEnvironment.userAssignedDeviceName.getter(v181);
    if (!v183)
    {
      uint64_t v182 = 0LL;
      unint64_t v183 = 0xE000000000000000LL;
    }

    SpeakableString.init(print:speak:)(v182, v183, 0LL, 0LL);
    v171(v17, 0LL, 1LL, v170);
    uint64_t v184 = dispatch thunk of SirikitDeviceState.Builder.withUserAssignedDeviceName(_:)(v17);
    swift_release(v180);
    sub_30E4C((uint64_t)v17);
    uint64_t v185 = sub_173310();
    SpeakableString.init(print:speak:)(v185, v186, 0LL, 0LL);
    v171(v22, 0LL, 1LL, v170);
    uint64_t v187 = dispatch thunk of SirikitDeviceState.Builder.withDeviceName(_:)(v22);
    swift_release(v184);
    uint64_t v188 = sub_30E4C((uint64_t)v22);
    uint64_t v189 = SiriEnvironment.currentDevice.getter(v188);
    uint64_t v190 = v205;
    dispatch thunk of CurrentDevice.siriLocale.getter();
    uint64_t v191 = swift_release(v189);
    uint64_t v192 = Locale.identifier.getter(v191);
    uint64_t v194 = v193;
    (*(void (**)(char *, uint64_t))(v206 + 8))(v190, v207);
    SpeakableString.init(print:speak:)(v192, v194, 0LL, 0LL);
    v171(v22, 0LL, 1LL, v170);
    uint64_t v195 = dispatch thunk of SirikitDeviceState.Builder.withSiriLocale(_:)(v22);
    swift_release(v187);
    sub_30E4C((uint64_t)v22);
    uint64_t v159 = dispatch thunk of SirikitDeviceState.__allocating_init(builder:)(v195);
    swift_release(v24);
  }

  else
  {
    static Device.current.getter(v208);
    uint64_t v72 = type metadata accessor for SirikitDeviceState.Builder(0LL);
    swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
    uint64_t v73 = SirikitDeviceState.Builder.init()();
    uint64_t v74 = v209;
    uint64_t v75 = v210;
    sub_6EA8(v208, v209);
    char v76 = dispatch thunk of DeviceState.isHomePod.getter(v74, v75);
    uint64_t v77 = dispatch thunk of SirikitDeviceState.Builder.withIsHomePod(_:)(v76 & 1);
    swift_release(v73);
    uint64_t v78 = v209;
    uint64_t v79 = v210;
    sub_6EA8(v208, v209);
    char v80 = dispatch thunk of DeviceState.isWatch.getter(v78, v79);
    uint64_t v81 = dispatch thunk of SirikitDeviceState.Builder.withIsWatch(_:)(v80 & 1);
    swift_release(v77);
    uint64_t v82 = v209;
    uint64_t v83 = v210;
    sub_6EA8(v208, v209);
    char v84 = dispatch thunk of DeviceState.isMac.getter(v82, v83);
    uint64_t v85 = dispatch thunk of SirikitDeviceState.Builder.withIsMac(_:)(v84 & 1);
    swift_release(v81);
    uint64_t v86 = v209;
    uint64_t v87 = v210;
    sub_6EA8(v208, v209);
    char v88 = dispatch thunk of DeviceState.isAppleTV.getter(v86, v87);
    uint64_t v89 = dispatch thunk of SirikitDeviceState.Builder.withIsAppleTV(_:)(v88 & 1);
    swift_release(v85);
    uint64_t v90 = v209;
    uint64_t v91 = v210;
    sub_6EA8(v208, v209);
    char v92 = dispatch thunk of DeviceState.isPhone.getter(v90, v91);
    uint64_t v93 = dispatch thunk of SirikitDeviceState.Builder.withIsPhone(_:)(v92 & 1);
    swift_release(v89);
    uint64_t v94 = v209;
    uint64_t v95 = v210;
    sub_6EA8(v208, v209);
    char v96 = dispatch thunk of DeviceState.isPad.getter(v94, v95);
    uint64_t v97 = dispatch thunk of SirikitDeviceState.Builder.withIsPad(_:)(v96 & 1);
    swift_release(v93);
    uint64_t v98 = v209;
    uint64_t v99 = v210;
    sub_6EA8(v208, v209);
    char v100 = dispatch thunk of DeviceState.isCarPlay.getter(v98, v99);
    uint64_t v101 = dispatch thunk of SirikitDeviceState.Builder.withIsCarPlay(_:)(v100 & 1);
    swift_release(v97);
    uint64_t v102 = v209;
    uint64_t v103 = v210;
    sub_6EA8(v208, v209);
    char v104 = dispatch thunk of DeviceState.isCarDNDMode.getter(v102, v103);
    uint64_t v105 = dispatch thunk of SirikitDeviceState.Builder.withIsCarDnD(_:)(v104 & 1);
    swift_release(v101);
    uint64_t v106 = v209;
    uint64_t v107 = v210;
    sub_6EA8(v208, v209);
    char v108 = dispatch thunk of DeviceState.isTextToSpeechEnabled.getter(v106, v107);
    uint64_t v109 = dispatch thunk of SirikitDeviceState.Builder.withIsTextToSpeechEnabled(_:)(v108 & 1);
    swift_release(v105);
    uint64_t v110 = v209;
    uint64_t v111 = v210;
    sub_6EA8(v208, v209);
    char v112 = dispatch thunk of DeviceState.isLockedWithPasscode.getter(v110, v111);
    uint64_t v113 = dispatch thunk of SirikitDeviceState.Builder.withIsLockedWithPasscode(_:)(v112 & 1);
    swift_release(v109);
    uint64_t v114 = v209;
    uint64_t v115 = v210;
    sub_6EA8(v208, v209);
    char v116 = dispatch thunk of DeviceState.isEyesFree.getter(v114, v115);
    uint64_t v117 = dispatch thunk of SirikitDeviceState.Builder.withIsEyesFree(_:)(v116 & 1);
    swift_release(v113);
    uint64_t v118 = v209;
    uint64_t v119 = v210;
    sub_6EA8(v208, v209);
    char v120 = dispatch thunk of DeviceState.isVoiceTriggerEnabled.getter(v118, v119);
    uint64_t v121 = dispatch thunk of SirikitDeviceState.Builder.withIsVoiceTriggerEnabled(_:)(v120 & 1);
    swift_release(v117);
    uint64_t v122 = v209;
    uint64_t v123 = v210;
    sub_6EA8(v208, v209);
    char v124 = DeviceState.isVox.getter(v122, v123);
    uint64_t v125 = dispatch thunk of SirikitDeviceState.Builder.withIsVOX(_:)(v124 & 1);
    swift_release(v121);
    uint64_t v126 = v209;
    uint64_t v127 = v210;
    sub_6EA8(v208, v209);
    uint64_t v128 = dispatch thunk of DeviceState.interactionType.getter(v126, v127);
    uint64_t v129 = InteractionType.rawValue.getter(v128);
    uint64_t v131 = v130;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v203);
    SpeakableString.init(print:speak:)(v129, v131, 0LL, 0LL);
    uint64_t v132 = type metadata accessor for SpeakableString(0LL);
    uint64_t v133 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56LL);
    v133(v22, 0LL, 1LL, v132);
    uint64_t v134 = dispatch thunk of SirikitDeviceState.Builder.withInteractionType(_:)(v22);
    swift_release(v125);
    sub_30E4C((uint64_t)v22);
    uint64_t v135 = v209;
    uint64_t v136 = v210;
    sub_6EA8(v208, v209);
    uint64_t v137 = dispatch thunk of DeviceState.inputOrigin.getter(v135, v136);
    uint64_t v138 = InputOrigin.rawValue.getter(v137);
    uint64_t v140 = v139;
    (*(void (**)(char *, uint64_t))(v202 + 8))(v10, v204);
    SpeakableString.init(print:speak:)(v138, v140, 0LL, 0LL);
    v133(v22, 0LL, 1LL, v132);
    uint64_t v141 = dispatch thunk of SirikitDeviceState.Builder.withInputOrigin(_:)(v22);
    swift_release(v134);
    sub_30E4C((uint64_t)v22);
    uint64_t v142 = v209;
    uint64_t v143 = v210;
    sub_6EA8(v208, v209);
    uint64_t v144 = DeviceState.userAssignedDeviceName.getter(v142, v143);
    if (!v145)
    {
      uint64_t v144 = 0LL;
      unint64_t v145 = 0xE000000000000000LL;
    }

    uint64_t v146 = (uint64_t)v201;
    SpeakableString.init(print:speak:)(v144, v145, 0LL, 0LL);
    v133((char *)v146, 0LL, 1LL, v132);
    uint64_t v147 = dispatch thunk of SirikitDeviceState.Builder.withUserAssignedDeviceName(_:)(v146);
    swift_release(v141);
    sub_30E4C(v146);
    uint64_t v148 = sub_173310();
    SpeakableString.init(print:speak:)(v148, v149, 0LL, 0LL);
    v133(v22, 0LL, 1LL, v132);
    uint64_t v150 = dispatch thunk of SirikitDeviceState.Builder.withDeviceName(_:)(v22);
    swift_release(v147);
    sub_30E4C((uint64_t)v22);
    uint64_t v151 = v209;
    uint64_t v152 = v210;
    sub_6EA8(v208, v209);
    uint64_t v153 = v205;
    uint64_t v154 = dispatch thunk of DeviceState.siriLocale.getter(v151, v152);
    uint64_t v155 = Locale.identifier.getter(v154);
    uint64_t v157 = v156;
    (*(void (**)(char *, uint64_t))(v206 + 8))(v153, v207);
    SpeakableString.init(print:speak:)(v155, v157, 0LL, 0LL);
    v133(v22, 0LL, 1LL, v132);
    uint64_t v158 = dispatch thunk of SirikitDeviceState.Builder.withSiriLocale(_:)(v22);
    swift_release(v150);
    sub_30E4C((uint64_t)v22);
    uint64_t v159 = dispatch thunk of SirikitDeviceState.__allocating_init(builder:)(v158);
    sub_6C3C(v208);
  }

  return v159;
}

uint64_t sub_173310()
{
  if ((static SiriAudioEnvironment.isHomePod.getter() & 1) != 0) {
    return 0x646F70656D6F68LL;
  }
  if ((static SiriAudioEnvironment.isWatch.getter() & 1) != 0) {
    return 0x61775F656C707061LL;
  }
  if ((static SiriAudioEnvironment.isMac.getter() & 1) != 0) {
    return 6513005LL;
  }
  if ((static SiriAudioEnvironment.isAppleTV.getter() & 1) != 0) {
    return 0x76745F656C707061LL;
  }
  if ((static SiriAudioEnvironment.isPhone.getter() & 1) != 0) {
    return 0x656E6F687069LL;
  }
  if ((static SiriAudioEnvironment.isPad.getter() & 1) != 0) {
    return 1684107369LL;
  }
  if ((static SiriAudioEnvironment.isCarPlay.getter() & 1) != 0) {
    return 0x79616C705F726163LL;
  }
  return 0x746375646F7270LL;
}

uint64_t sub_173424(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v98 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v88 - v7;
  uint64_t v8 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v8);
  char v92 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v90 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = type metadata accessor for Parse(0LL);
  uint64_t v106 = *(void *)(v108 - 8);
  uint64_t v11 = __chkstk_darwin(v108);
  uint64_t v95 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  char v104 = (char *)&v88 - v13;
  uint64_t v14 = type metadata accessor for Input(0LL);
  uint64_t v15 = *(char **)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(dispatch_group_s **)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  char v100 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v91 = (char *)&v88 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v88 - v24;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v27 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v19 + 2);
  uint64_t v102 = v26;
  uint64_t v103 = v27;
  ((void (*)(char *))v27)(v25);
  char v96 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v15 + 2);
  uint64_t v28 = v96(v17, a1, v14);
  uint64_t v105 = v19;
  char v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v107 = a1;
  uint64_t v99 = v14;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc(12LL, -1LL);
    uint64_t v89 = v2;
    uint64_t v33 = (uint8_t *)v32;
    uint64_t v88 = swift_slowAlloc(32LL, -1LL);
    v111[0] = v88;
    uint64_t v101 = v18;
    *(_DWORD *)uint64_t v33 = 136315138;
    unint64_t v34 = sub_ABC20();
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter(v14, v34);
    unint64_t v37 = v36;
    uint64_t v109 = sub_6978(v35, v36, v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110);
    __n128 v38 = swift_bridgeObjectRelease(v37);
    uint64_t v18 = v101;
    (*((void (**)(char *, uint64_t, __n128))v15 + 1))(v17, v14, v38);
    _os_log_impl(&dword_0, v29, v30, "DirectActionAudioSearchFlowFrame#onInput with input: %s", v33, 0xCu);
    uint64_t v39 = v88;
    swift_arrayDestroy(v88, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    uint64_t v40 = v33;
    uint64_t v2 = v89;
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {
    (*((void (**)(char *, uint64_t))v15 + 1))(v17, v14);
  }

  uint64_t v41 = (uint64_t (*)(char *, uint64_t))*((void *)v105 + 1);
  uint64_t v42 = v41(v25, v18);
  uint64_t v43 = v108;
  uint64_t v44 = v106;
  if (*(_BYTE *)(v2 + 72) != 1)
  {
    uint64_t v50 = v100;
    uint64_t v51 = v103(v100, v102, v18);
    uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "DirectActionAudioSearchFlowFrame#on not an audioSearch direct invocation",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v41(v50, v18);
    return 0LL;
  }

  uint64_t v45 = v104;
  Input.parse.getter(v42);
  if ((*(unsigned int (**)(char *, uint64_t))(v44 + 88))(v45, v43) != enum case for Parse.directInvocation(_:))
  {
    char v100 = v15;
    uint64_t v101 = v18;
    uint64_t v55 = swift_allocObject(&unk_2727D8, 25LL, 7LL);
    *(void *)(v55 + sub_6C3C(v0 + 16) = 0LL;
    uint64_t v56 = (void **)(v55 + 16);
    *(_BYTE *)(v55 + 2sub_6C3C(v0 + 4) = -1;
    uint64_t v57 = v44;
    id v58 = dispatch_group_create();
    dispatch_group_enter(v58);
    id v59 = *(void **)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playFlowStrategy);
    uint64_t v60 = (uint64_t)v95;
    Input.parse.getter(v61);
    uint64_t v62 = v58;
    sub_875C0(v60, 0LL, v59, v55, v62);

    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v63(v60, v43);
    uint64_t v105 = v62;
    OS_dispatch_group.wait()();
    swift_beginAccess(v55 + 16, v111, 0LL, 0LL);
    uint64_t v106 = v55;
    unsigned __int8 v64 = *(_BYTE *)(v55 + 24);
    if ((v64 & 1) == 0)
    {
      uint64_t v65 = *v56;
      uint64_t v66 = *(void **)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playMediaIntent);
      *(void *)(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playMediaIntent) = *v56;
      sub_1751E8(v65, v64);
      sub_154DA0(v65, 0);

      uint64_t v68 = Input.parse.getter(v67);
      uint64_t v69 = (uint64_t)v92;
      Parse.firstNLUUserDialogAct()(v68);
      v63(v60, v43);
      uint64_t v70 = v93;
      uint64_t v71 = v94;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v69, 1LL, v94) == 1)
      {

        sub_87F60(v65, v64);
        sub_1F6CC(v69, &qword_2845D0);
      }

      else
      {
        uint64_t v78 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v90, v69, v71);
        uint64_t v79 = type metadata accessor for MediaPlayerPlaybackContextProvider(0LL);
        uint64_t v80 = v70;
        uint64_t v81 = static MediaPlayerPlaybackContextProvider.shared.getter(v79);
        dispatch thunk of MediaPlayerPlaybackContextProvider.setUserDialogAct(to:)(v78);
        swift_release(v81);
        sub_87F60(v65, v64);

        (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v71);
      }

      swift_release(v106);
      uint64_t v48 = (uint64_t)v97;
      uint64_t v49 = (uint64_t)v98;
      uint64_t v15 = v100;
      uint64_t v47 = (void (*)(uint64_t, uint64_t, uint64_t))v96;
      v63((uint64_t)v104, v43);
      goto LABEL_19;
    }

    uint64_t v72 = v91;
    uint64_t v73 = v103(v91, v102, v101);
    uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v75 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v74, v75))
    {
      char v76 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v76 = 0;
      _os_log_impl( &dword_0,  v74,  v75,  "DirectActionAudioSearchFlowFrame#on received non-directInvocation parse which didn't contain a play media intent . Returning false to give another flow a chance to grab this intent.",  v76,  2u);
      swift_slowDealloc(v76, -1LL, -1LL);
      uint64_t v77 = (os_log_s *)v105;
    }

    else
    {
      uint64_t v77 = v74;
      uint64_t v74 = (os_log_s *)v105;
    }

    uint64_t v85 = v104;
    uint64_t v86 = v106;

    v41(v72, v101);
    swift_release(v86);
    v63((uint64_t)v85, v43);
    return 0LL;
  }

  uint64_t v46 = *(void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v47 = (void (*)(uint64_t, uint64_t, uint64_t))v96;
  uint64_t v48 = (uint64_t)v97;
  uint64_t v49 = (uint64_t)v98;
  v46(v45, v43);
LABEL_19:
  uint64_t v82 = v99;
  v47(v48, v107, v99);
  uint64_t v83 = 1LL;
  (*((void (**)(uint64_t, void, uint64_t, uint64_t))v15 + 7))(v48, 0LL, 1LL, v82);
  sub_88CFC(v48, v49);
  uint64_t v84 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_input, &v109, 33LL, 0LL);
  sub_1B3B0(v49, v84);
  swift_endAccess(&v109);
  return v83;
}

uint64_t sub_173C58(void (*a1)(char *), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v127 = a2;
  uint64_t v5 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v5);
  uint64_t v118 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v123 = *(void *)(v7 - 8);
  uint64_t v124 = v7;
  __chkstk_darwin(v7);
  uint64_t v122 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v114 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  char v120 = (char *)&v114 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v121 = (char *)&v114 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v114 - v21;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v23 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v125 = v23;
  uint64_t v126 = v24;
  uint64_t v25 = ((uint64_t (*)(char *))v24)(v22);
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = v9;
    char v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v29 = 0;
    _os_log_impl(&dword_0, v26, v27, "DirectActionAudioSearchFlowFrame#execute", v29, 2u);
    os_log_type_t v30 = v29;
    uint64_t v9 = v28;
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  BOOL v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v22, v9);
  id v32 = sub_14E9A8();
  uint64_t v33 = v32;
  if (*(_BYTE *)(v3 + 72) != 1)
  {
    uint64_t v45 = v126(v13, v125, v9);
    uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl( &dword_0,  v46,  v47,  "DirectActionAudioSearchFlowFrame#execute not an audioSearch direct invocation",  v48,  2u);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    uint64_t v49 = ((uint64_t (*)(char *, uint64_t))v31)(v13, v9);
    uint64_t v50 = v122;
    static ExecuteResponse.complete()(v49);
    a1(v50);

    return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v50, v124);
  }

  id v116 = v32;
  uint64_t v117 = a1;
  uint64_t v114 = v31;
  uint64_t v119 = v9;
  unint64_t v34 = *(void **)(v3 + 16);
  uint64_t v35 = *(void **)(v3 + 24);
  unint64_t v36 = *(void **)(v3 + 32);
  uint64_t v37 = *(void *)(v3 + 40);
  uint64_t v39 = *(void *)(v3 + 48);
  uint64_t v38 = *(void *)(v3 + 56);
  uint64_t v40 = *(void *)(v3 + 64);
  type metadata accessor for App(0LL);
  sub_45EC0((uint64_t)v34, (uint64_t)v35, v36, v37, v39, v38, v40, 1);
  sub_45EC0((uint64_t)v34, (uint64_t)v35, v36, v37, v39, v38, v40, 1);
  uint64_t v115 = App.__allocating_init(appIdentifier:)(v34, v35);
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_state) & 1) == 0)
  {
    sub_45E08(v34, (uint64_t)v35, v36, v37, v39, v38, v40, 1);
    uint64_t v52 = v121;
    uint64_t v53 = v119;
    v126(v121, v125, v119);
    id v54 = v116;
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = v52;
      id v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v59 = swift_slowAlloc(32LL, -1LL);
      v129.value._countAndFlagsBits = v59;
      *(_DWORD *)id v58 = 136315138;
      uint64_t v60 = INPlayMediaIntent.slimDescription.getter(v59);
      unint64_t v62 = v61;
      uint64_t v128 = sub_6978(v60, v61, &v129.value._countAndFlagsBits);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);

      swift_bridgeObjectRelease(v62);
      _os_log_impl( &dword_0,  v55,  v56,  "DirectActionAudioSearchFlowFrame#execute direct invocation. Sending PlayMedia.NeedsValue prompt with intent %s",  v58,  0xCu);
      swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v58, -1LL, -1LL);

      uint64_t v63 = v57;
      uint64_t v64 = v119;
    }

    else
    {

      uint64_t v63 = v52;
      uint64_t v64 = v53;
    }

    v114(v63, v64);
    uint64_t v65 = v127;
    uint64_t v66 = v117;
    id v67 = [(id)objc_opt_self(INIntentResolutionResult) needsValue];
    uint64_t v68 = swift_allocObject(&unk_272760, 24LL, 7LL);
    swift_weakInit(v68 + 16, v3);
    uint64_t v69 = (void *)swift_allocObject(&unk_272788, 40LL, 7LL);
    v69[2] = v68;
    v69[3] = v66;
    v69[4] = v65;
    swift_retain(v68);
    swift_retain(v65);
    uint64_t v70 = v115;
    sub_69088(v115, v54, 0x657449616964656DLL, 0xEA0000000000736DLL, v67, (uint64_t)sub_17514C, (uint64_t)v69);

    swift_release(v70);
    swift_release(v68);
    return swift_release(v69);
  }

  uint64_t v41 = *(void **)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playMediaIntent);
  if (!v41)
  {
    sub_45E08(v34, (uint64_t)v35, v36, v37, v39, v38, v40, 1);
    uint64_t v71 = v119;
    uint64_t v72 = v126(v16, v125, v119);
    uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
    os_log_type_t v74 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v73, v74))
    {
      os_log_type_t v75 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v75 = 0;
      _os_log_impl( &dword_0,  v73,  v74,  "DirectActionAudioSearchFlowFrame#execute received nil playMediaIntent post prompt",  v75,  2u);
      swift_slowDealloc(v75, -1LL, -1LL);
    }

    uint64_t v76 = ((uint64_t (*)(char *, uint64_t))v114)(v16, v71);
    uint64_t v50 = v122;
    static ExecuteResponse.complete()(v76);
    v117(v50);

    swift_release(v115);
    return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v50, v124);
  }

  if (v35)
  {
    v41;
    if ((static BundleIdentifiers.isThirdParty(bundleIdentifier:)(v34, v35) & 1) != 0
      || (static BundleIdentifiers.isClassical(bundleIdentifier:)(v34, v35) & 1) != 0)
    {
      v129.value._countAndFlagsBits = 0LL;
      v129.value._object = (void *)0xE000000000000000LL;
      _StringGuts.grow(_:)(21LL);
      swift_bridgeObjectRelease(v129.value._object);
      v129.value._countAndFlagsBits = 0xD000000000000013LL;
      v129.value._object = (void *)0x8000000000222160LL;
      v42._countAndFlagsBits = (uint64_t)v34;
      v42._object = v35;
      String.append(_:)(v42);
      sub_45E08(v34, (uint64_t)v35, v36, v37, v39, v38, v40, 1);
      object = v129.value._object;
      v44._countAndFlagsBits = 0xD00000000000002ELL;
      v44._object = (void *)0x8000000000222180LL;
      INIntent.setLaunchId(launchId:caller:)(v129, v44);
      swift_bridgeObjectRelease(object);
    }

    else
    {
      sub_45E08(v34, (uint64_t)v35, v36, v37, v39, v38, v40, 1);
    }
  }

  else
  {
    id v77 = v41;
  }

  uint64_t v78 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v79 = swift_dynamicCastObjCClass(v41, v78);
  id v81 = v116;
  uint64_t v80 = v117;
  uint64_t v82 = v120;
  if (v79)
  {
    id v83 = [v41 backingStore];
    uint64_t v84 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
    uint64_t v85 = (void *)swift_dynamicCastObjCClass(v83, v84);
    if (v85)
    {
      id v86 = [v85 privatePlayMediaIntentData];

      [v86 setAppInferred:0];
      id v83 = v86;
    }
  }

  uint64_t v87 = v119;
  v126(v82, v125, v119);
  id v88 = v41;
  uint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
  os_log_type_t v90 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = swift_slowAlloc(22LL, -1LL);
    uint64_t v126 = (uint64_t (*)(char *, uint64_t, uint64_t))swift_slowAlloc(8LL, -1LL);
    uint64_t v92 = swift_slowAlloc(32LL, -1LL);
    v129.value._countAndFlagsBits = v92;
    *(_DWORD *)uint64_t v91 = 136315394;
    id v93 = v88;
    id v94 = [v93 description];
    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
    unint64_t v97 = v96;

    uint64_t v128 = sub_6978(v95, v97, &v129.value._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);

    *(void *)&double v98 = swift_bridgeObjectRelease(v97).n128_u64[0];
    *(_WORD *)(v91 + 1sub_6C3C(v0 + 2) = 2112;
    id v99 = objc_msgSend(v93, "launchId", v98);
    char v100 = v99;
    if (v99)
    {
      uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
      uint64_t v125 = v91 + 14;
      uint64_t v102 = v92;
      uint64_t v104 = v103;

      unint64_t v105 = sub_6C9C();
      uint64_t v106 = swift_allocError(&type metadata for String, v105, 0LL, 0LL);
      *uint64_t v107 = v101;
      v107[1] = v104;
      uint64_t v92 = v102;
      char v100 = (void *)_swift_stdlib_bridgeErrorToNSError(v106);
      uint64_t v128 = (uint64_t)v100;
    }

    else
    {
      uint64_t v128 = 0LL;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129);
    uint64_t v80 = v117;
    uint64_t v108 = v126;
    *(void *)uint64_t v126 = v100;

    _os_log_impl( &dword_0,  v89,  v90,  "DirectActionAudioSearchFlowFrame#execute handling intent post prompt and setting intent intent:%s launchId: %@",  (uint8_t *)v91,  0x16u);
    uint64_t v109 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v108, 1LL, v109);
    swift_slowDealloc(v108, -1LL, -1LL);
    swift_arrayDestroy(v92, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1LL, -1LL);
    swift_slowDealloc(v91, -1LL, -1LL);

    v114(v120, v119);
    id v81 = v116;
  }

  else
  {

    v114(v82, v87);
  }

  uint64_t v110 = v118;
  sub_5A4F4(v118);
  uint64_t v111 = type metadata accessor for Input(0LL);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56LL))(v110, 0LL, 1LL, v111);
  uint64_t v112 = sub_110130(v110);
  sub_1F6CC(v110, &qword_285BD0);
  uint64_t v113 = v122;
  static ExecuteResponse.complete(next:)(v112);
  swift_release(v112);
  v80(v113);

  swift_release(v115);
  return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v113, v124);
}

uint64_t sub_17482C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_175158(a1, (uint64_t)v49);
  if ((v50 & 1) != 0)
  {
    uint64_t v38 = v9;
    uint64_t v39 = v8;
    uint64_t v40 = a3;
    uint64_t v16 = *(void *)&v49[0];
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v17 = sub_6960(v12, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v17, v12);
    swift_errorRetain(v16);
    uint64_t v18 = swift_errorRetain(v16);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v36 = swift_slowAlloc(32LL, -1LL);
      v41[0] = v36;
      uint64_t v37 = a4;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v35 = v21 + 4;
      swift_getErrorValue(v16, v48, v47);
      uint64_t v45 = Error.localizedDescription.getter(v47[1], v47[2]);
      v46[0] = v22;
      uint64_t v23 = String.init<A>(_:)( &v45,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v25 = v24;
      uint64_t v45 = sub_6978(v23, v24, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46);
      swift_bridgeObjectRelease(v25);
      swift_errorRelease(v16);
      swift_errorRelease(v16);
      _os_log_impl( &dword_0,  v19,  v20,  "DirectActionAudioSearchFlowFrame#execute Could not properly create dialog %s, silently failing...",  v21,  0xCu);
      uint64_t v26 = v36;
      swift_arrayDestroy(v36, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v16);
      swift_errorRelease(v16);
    }

    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    static ExecuteResponse.complete()(v33);
    v40(v11);
    swift_errorRelease(v16);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v11, v39);
  }

  else
  {
    sub_FF54(v49, (uint64_t)&v45);
    swift_beginAccess(a2 + 16, v44, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(a2 + 16);
    if (Strong)
    {
      uint64_t v28 = Strong;
      sub_157C4(Strong + 80, (uint64_t)v41);
      swift_release(v28);
      uint64_t v29 = v42;
      uint64_t v30 = v43;
      sub_6EA8(v41, v42);
      BOOL v31 = (void *)swift_allocObject(&unk_2727B0, 40LL, 7LL);
      void v31[2] = a2;
      void v31[3] = a3;
      v31[4] = a4;
      swift_retain(a2);
      swift_retain(a4);
      dispatch thunk of OutputPublisher.publish(output:_:)(&v45, sub_1751A4, v31, v29, v30);
      swift_release(v31);
      sub_6C3C(&v45);
      id v32 = v41;
    }

    else
    {
      id v32 = &v45;
    }

    return sub_6C3C(v32);
  }

uint64_t sub_174C18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v26 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a3 + 16;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v25 = v13;
    uint64_t v19 = a4;
    os_log_type_t v20 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl( &dword_0,  v16,  v17,  "DirectActionAudioSearchFlowFrame#execute Dialog successfully generated, returning ongoing waiting for response",  v18,  2u);
    uint64_t v21 = v20;
    a4 = v19;
    uint64_t v13 = v25;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess(v13, v27, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v13);
  if (Strong)
  {
    *(_BYTE *)(Strong + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_state) = 1;
    swift_release(Strong);
  }

  static ExecuteResponse.ongoing(requireInput:)(1LL);
  a4(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v6);
}

uint64_t sub_174E24()
{
  sub_6C3C((void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_audioFlowProvider));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_playFlowStrategy));
  swift_release(*(void *)(v0
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin27DirectActionAudioSearchFlow_needsValueStrategy));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_174EBC()
{
  return type metadata accessor for DirectActionAudioSearchFlow(0LL);
}

uint64_t type metadata accessor for DirectActionAudioSearchFlow(uint64_t a1)
{
  uint64_t result = qword_28BAD8;
  if (!qword_28BAD8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DirectActionAudioSearchFlow);
  }
  return result;
}

void sub_174F00(uint64_t a1)
{
  v4[0] = "9";
  v4[1] = L"(";
  sub_92714(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4[2] = *(void *)(v2 - 8) + 64LL;
    v4[3] = &unk_219600;
    v4[4] = L"(";
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = &unk_219618;
    swift_updateClassMetadata2(a1, 256LL, 8LL, v4, a1 + 80);
  }

uint64_t storeEnumTagSinglePayload for DirectActionAudioSearchFlow.State( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(vsub_6C3C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_6C3C(v0 + 4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_174FF0 + 4 * byte_219565[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_175024 + 4 * asc_219560[v4]))();
}

uint64_t sub_175024(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_17502C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x175034LL);
  }
  return result;
}

uint64_t sub_175040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x175048LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_17504C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_175054(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectActionAudioSearchFlow.State()
{
  return &type metadata for DirectActionAudioSearchFlow.State;
}

unint64_t sub_175074()
{
  unint64_t result = qword_28BC20[0];
  if (!qword_28BC20[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_219678, &type metadata for DirectActionAudioSearchFlow.State);
    atomic_store(result, qword_28BC20);
  }

  return result;
}

uint64_t sub_1750B8(uint64_t a1)
{
  return sub_173424(a1) & 1;
}

uint64_t sub_1750DC(void (*a1)(char *), uint64_t a2)
{
  return sub_173C58(a1, a2);
}

uint64_t sub_1750FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DirectActionAudioSearchFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_175124()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_17514C(uint64_t a1)
{
  return sub_17482C(a1, *(void *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_175158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1751A4(uint64_t a1, char a2)
{
  return sub_174C18(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_1751B4()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255) {
    sub_87F78(*(void **)(v0 + 16), v1 & 1);
  }
  return swift_deallocObject(v0, 25LL, 7LL);
}

id sub_1751E8(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_154DA0(result, a2 & 1);
  }
  return result;
}

uint64_t sub_175200(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v115 = a6;
  uint64_t v116 = a3;
  uint64_t v118 = a4;
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v109 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v110 = v10;
  uint64_t v111 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v100 = type metadata accessor for ResponseMode(0LL);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  double v98 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v114 = (void (*)(char *, uint64_t))((char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v96 - v17;
  __chkstk_darwin(v16);
  os_log_type_t v20 = (char *)&v96 - v19;
  uint64_t v21 = sub_6C5C(&qword_289340);
  uint64_t v106 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v108 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v96 - v24;
  uint64_t v26 = type metadata accessor for TemplatingResult(0LL);
  os_log_type_t v27 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16LL);
  uint64_t v103 = v26;
  uint64_t v102 = v27;
  ((void (*)(char *, uint64_t))v27)(v25, a1);
  uint64_t v104 = v21;
  uint64_t v28 = *(int *)(v21 + 48);
  uint64_t v117 = (uint64_t *)v25;
  *(void *)&v25[v28] = a2;
  uint64_t v29 = qword_283888;
  id v105 = a2;
  if (v29 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v30 = sub_6960(v12, (uint64_t)qword_2969C8);
  BOOL v31 = *(uint64_t (**)(char *))(v13 + 16);
  uint64_t v112 = v30;
  uint64_t v32 = v31(v20);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v119 = a5;
  if (v35)
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    uint64_t v97 = v13;
    uint64_t v38 = v37;
    v122[0] = v37;
    uint64_t v101 = v12;
    *(_DWORD *)uint64_t v36 = 136446210;
    uint64_t v39 = static Insights.responseFramework.getter(v37);
    uint64_t v40 = v31;
    uint64_t v41 = v18;
    unint64_t v43 = v42;
    *(void *)&v120[0] = sub_6978(v39, v42, v122);
    uint64_t v12 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, (char *)v120 + 8);
    unint64_t v44 = v43;
    uint64_t v18 = v41;
    BOOL v31 = v40;
    swift_bridgeObjectRelease(v44);
    _os_log_impl(&dword_0, v33, v34, "SiriAudioOutputProvider#completionViewOutput... %{public}s", v36, 0xCu);
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    uint64_t v45 = v36;
    a5 = v119;
    swift_slowDealloc(v45, -1LL, -1LL);

    uint64_t v46 = *(void (**)(char *, uint64_t))(v97 + 8);
  }

  else
  {

    uint64_t v46 = *(void (**)(char *, uint64_t))(v13 + 8);
  }

  v46(v20, v12);
  uint64_t v47 = v113[5];
  uint64_t v48 = v113[6];
  sub_6EA8(v113 + 2, v47);
  uint64_t v49 = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v47, v48);
  if ((v49 & 1) != 0)
  {
    uint64_t v50 = static SiriEnvironmentWrapper.retrieve()(v49);
    if (!v50)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v50 = static SiriEnvironment.default.getter();
    }

    uint64_t v51 = v50;
    ((void (*)(char *, uint64_t, uint64_t))v31)(v18, v112, v12);
    uint64_t v52 = swift_retain_n(v51, 2LL);
    uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.info.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v101 = v12;
      uint64_t v57 = v56;
      v122[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v113 = v55 + 4;
      uint64_t v58 = SiriEnvironment.currentRequest.getter(v56);
      uint64_t v59 = v98;
      CurrentRequest.responseMode.getter(v58);
      uint64_t v60 = swift_release(v58);
      uint64_t v61 = ResponseMode.description.getter(v60);
      uint64_t v114 = v46;
      unint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v59, v100);
      *(void *)&v120[0] = sub_6978(v61, v63, v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, (char *)v120 + 8);
      swift_release_n(v51, 2LL);
      swift_bridgeObjectRelease(v63);
      _os_log_impl(&dword_0, v53, v54, "SiriAudioOutputProvider#completionViewOutput with responseMode = %s", v55, 0xCu);
      swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v55, -1LL, -1LL);

      v114(v18, v101);
    }

    else
    {

      swift_release_n(v51, 2LL);
      v46(v18, v12);
    }

    uint64_t v74 = v111;
    sub_1788A8(v116, v111);
    uint64_t v75 = *(int *)(v104 + 48);
    uint64_t v76 = (uint64_t)v108;
    id v77 = v117;
    v102(v108, v117, v103);
    uint64_t v78 = v105;
    *(void *)(v76 + v75) = v105;
    uint64_t v79 = *(unsigned __int8 *)(v109 + 80);
    uint64_t v80 = (v79 + 16) & ~v79;
    unint64_t v81 = (v110 + v80 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v82 = (v81 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v83 = *(unsigned __int8 *)(v106 + 80);
    uint64_t v84 = (v83 + v82 + 8) & ~v83;
    uint64_t v85 = swift_allocObject(&unk_272928, v84 + v107, v79 | v83 | 7);
    sub_45F6C(v74, v85 + v80, (uint64_t *)&unk_286C50);
    uint64_t v86 = v118;
    *(void *)(v85 + v81) = v118;
    *(void *)(v85 + v8sub_6C3C(v0 + 2) = v51;
    sub_45F6C(v76, v85 + v84, &qword_289340);
    id v87 = v78;
    swift_retain(v51);
    swift_bridgeObjectRetain(v86);
    uint64_t v88 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v119, v115, &unk_28BD40, v85, v88);
    swift_release(v51);
    swift_release(v85);
    uint64_t v89 = v77;
    os_log_type_t v90 = &qword_289340;
  }

  else
  {
    uint64_t v64 = ((uint64_t (*)(void (*)(char *, uint64_t), uint64_t, uint64_t))v31)(v114, v112, v12);
    uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      id v67 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = v12;
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      v122[0] = v69;
      *(_DWORD *)id v67 = 136446210;
      uint64_t v70 = static Insights.responseFramework.getter(v69);
      unint64_t v72 = v71;
      *(void *)&v120[0] = sub_6978(v70, v71, v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v120, (char *)v120 + 8);
      swift_bridgeObjectRelease(v72);
      _os_log_impl( &dword_0,  v65,  v66,  "SiriAudioOutputProvider#completionViewOutput creating completionViewOutput %{public}s",  v67,  0xCu);
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v67, -1LL, -1LL);

      uint64_t v73 = ((uint64_t (*)(void, uint64_t))v46)(v114, v68);
    }

    else
    {

      uint64_t v73 = ((uint64_t (*)(void, uint64_t))v46)(v114, v12);
    }

    char v91 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v73);
    uint64_t v92 = type metadata accessor for AceOutput(0LL);
    memset(v120, 0, sizeof(v120));
    uint64_t v121 = 0LL;
    v122[3] = v92;
    void v122[4] = (uint64_t)&protocol witness table for AceOutput;
    sub_10974(v122);
    uint64_t v93 = v91 & 1;
    uint64_t v94 = (uint64_t)v117;
    static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v117,  v93,  _swiftEmptyArrayStorage,  0LL,  1LL,  v116,  v118,  v120);
    sub_1F6CC((uint64_t)v120, &qword_2845C8);
    char v123 = 0;
    a5(v122);
    sub_1F6CC(v94, &qword_289340);
    os_log_type_t v90 = (uint64_t *)&unk_286C60;
    uint64_t v89 = v122;
  }

  return sub_1F6CC((uint64_t)v89, v90);
}

uint64_t sub_175AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v5[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[9] = v7;
  v5[10] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_289340);
  v5[11] = v8;
  v5[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DialogPhase(0LL);
  v5[13] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OutputGenerationManifest(0LL);
  v5[14] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v5[15] = v11;
  v5[16] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_175B88, 0LL, 0LL);
}

uint64_t sub_175B88(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  __int128 v45 = *(_OWORD *)(v1 + 32);
  static DialogPhase.completion.getter(a1);
  uint64_t v49 = v4;
  uint64_t v7 = *(int *)(v4 + 48);
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v47(v3, v6, v8);
  uint64_t v10 = *(void **)(v6 + v7);
  uint64_t v48 = v7;
  *(void *)(v3 + vsub_6C3C(v0 + 7) = v10;
  uint64_t v11 = swift_task_alloc(48LL);
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = v45;
  *(void *)(v11 + 3sub_6C3C(v0 + 2) = v5;
  *(void *)(v11 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v3;
  id v12 = v10;
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_178E60, v11);
  swift_task_dealloc(v11);
  sub_1F6CC(v3, &qword_289340);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = *(void *)(v1 + 72);
  uint64_t v13 = *(void *)(v1 + 80);
  uint64_t v15 = *(void *)(v1 + 64);
  uint64_t v16 = sub_6960(v15, (uint64_t)qword_2969C8);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter(v18);
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v22 = *(void *)(v1 + 72);
  uint64_t v21 = *(void *)(v1 + 80);
  uint64_t v23 = *(void *)(v1 + 64);
  if (v20)
  {
    uint64_t v44 = *(void *)(v1 + 64);
    uint64_t v43 = *(void *)(v1 + 80);
    uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = v9;
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    uint64_t v51 = v25;
    *(_DWORD *)uint64_t v24 = 136446210;
    uint64_t v26 = static Insights.responseFramework.getter(v25);
    unint64_t v28 = v27;
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = sub_6978(v26, v27, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
    swift_bridgeObjectRelease(v28);
    _os_log_impl( &dword_0,  v18,  v19,  "SiriAudioOutputProvider#completionViewOutput returning completionViewOutput using RF 2.0 %{public}s",  v24,  0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v29 = v25;
    uint64_t v9 = v46;
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v43, v44);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }

  uint64_t v30 = *(void *)(v1 + 96);
  uint64_t v31 = *(void *)(v1 + 56);
  uint64_t v32 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  *(void *)(v1 + 136) = ResponseFactory.init()();
  uint64_t v33 = sub_6C5C(&qword_287980);
  uint64_t v34 = swift_allocObject(v33, 40LL, 7LL);
  *(_OWORD *)(v34 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v35 = *(int *)(v49 + 48);
  uint64_t v36 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v30, v31, v8);
  uint64_t v37 = *(void **)(v6 + v48);
  *(void *)(v30 + v35) = v37;
  *(void *)(v34 + 3sub_6C3C(v0 + 2) = v37;
  uint64_t v51 = v34;
  specialized Array._endMutation()(v36);
  uint64_t v38 = v51;
  *(void *)(v1 + 14sub_6C3C(v0 + 4) = v51;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  id v40 = v37;
  v39(v30, v8);
  *(void *)(v1 + 15sub_6C3C(v0 + 2) = v41;
  *uint64_t v41 = v1;
  v41[1] = sub_175EF4;
  return ((uint64_t (*)(void, uint64_t, void))v50)(*(void *)(v1 + 24), v38, *(void *)(v1 + 128));
}

uint64_t sub_175EF4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 136LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 152LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_175F5C, 0LL, 0LL);
}

uint64_t sub_175F5C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 120) + 8LL))(v1, *(void *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_175FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1788A8(a2, (uint64_t)v16);
  OutputGenerationManifest.nlContextUpdate.setter(v16);
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v18 = a3;
    }
    else {
      uint64_t v18 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    __n128 v17 = swift_bridgeObjectRelease(a3);
    if (v19) {
      goto LABEL_3;
    }
LABEL_8:
    a3 = 0LL;
    goto LABEL_9;
  }

uint64_t sub_1761E0(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  return sub_1768EC( a1,  a2,  a3,  a4,  a5,  "SiriAudioOutputProvider#confirmationViewOutput... %{public}s",  "SiriAudioOutputProvider#confirmationViewOutput with responseMode = %s",  (uint64_t)&unk_272900,  (uint64_t)&unk_28BD30,  "SiriAudioOutputProvider#confirmationViewOutput creating confirmationViewOutput %{public}s",  (void (*)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, uint64_t, void *, _OWORD *))&static AceOutputHelper.makeConfirmationViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:));
}

uint64_t sub_176234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[8] = v6;
  v4[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_289340);
  v4[10] = v7;
  v4[11] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[14] = v10;
  v4[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_176308, 0LL, 0LL);
}

uint64_t sub_176308(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  __int128 v45 = *(_OWORD *)(v1 + 32);
  static DialogPhase.confirmation.getter(a1);
  uint64_t v6 = *(int *)(v4 + 48);
  uint64_t v7 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v46(v3, v5, v7);
  uint64_t v9 = *(void **)(v5 + v6);
  uint64_t v47 = v6;
  *(void *)(v3 + v6) = v9;
  uint64_t v10 = swift_task_alloc(48LL);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = v45;
  *(void *)(v10 + 3sub_6C3C(v0 + 2) = v3;
  id v11 = v9;
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_178C5C, v10);
  swift_task_dealloc(v10);
  sub_1F6CC(v3, &qword_289340);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v15 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  __n128 v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter(v17);
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v21 = *(void *)(v1 + 64);
  uint64_t v20 = *(void *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 56);
  if (v19)
  {
    uint64_t v43 = *(void *)(v1 + 56);
    uint64_t v42 = *(void *)(v1 + 72);
    uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = v4;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v24;
    *(_DWORD *)uint64_t v23 = 136446210;
    uint64_t v25 = static Insights.responseFramework.getter(v24);
    unint64_t v27 = v26;
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = sub_6978(v25, v26, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
    swift_bridgeObjectRelease(v27);
    _os_log_impl( &dword_0,  v17,  v18,  "SiriAudioOutputProvider#confirmationViewOutput creating confirmationViewOutput using RF 2.0 %{public}s",  v23,  0xCu);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v28 = v24;
    uint64_t v4 = v44;
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v42, v43);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }

  uint64_t v29 = *(void *)(v1 + 88);
  uint64_t v30 = *(void *)(v1 + 48);
  uint64_t v31 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  *(void *)(v1 + 12sub_6C3C(v0 + 8) = ResponseFactory.init()();
  uint64_t v32 = sub_6C5C(&qword_287980);
  uint64_t v33 = swift_allocObject(v32, 40LL, 7LL);
  *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v34 = *(int *)(v4 + 48);
  uint64_t v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v29, v30, v7);
  uint64_t v36 = *(void **)(v5 + v47);
  *(void *)(v29 + v3sub_6C3C(v0 + 4) = v36;
  *(void *)(v33 + 3sub_6C3C(v0 + 2) = v36;
  uint64_t v49 = v33;
  specialized Array._endMutation()(v35);
  uint64_t v37 = v49;
  *(void *)(v1 + 136) = v49;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  id v39 = v36;
  v38(v29, v7);
  *(void *)(v1 + 14sub_6C3C(v0 + 4) = v40;
  void *v40 = v1;
  v40[1] = sub_17667C;
  return ((uint64_t (*)(void, uint64_t, void))v48)(*(void *)(v1 + 24), v37, *(void *)(v1 + 120));
}

uint64_t sub_17667C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 128LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 144LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_17A5D4, 0LL, 0LL);
}

uint64_t sub_1766E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1788A8(a2, (uint64_t)v14);
  OutputGenerationManifest.nlContextUpdate.setter(v14);
  OutputGenerationManifest.listenAfterSpeaking.setter(1LL);
  uint64_t v15 = OutputGenerationManifest.canUseServerTTS.setter(1LL);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v18);
}

uint64_t sub_176898(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  return sub_1768EC( a1,  a2,  a3,  a4,  a5,  "SiriAudioOutputProvider#summaryViewOutput... %{public}s",  "SiriAudioOutputProvider#summaryViewOutput with responseMode = %s",  (uint64_t)&unk_2728D8,  (uint64_t)&unk_28BD20,  "SiriAudioOutputProvider#summaryViewOutput creating summaryViewOutput %{public}s",  (void (*)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, uint64_t, void *, _OWORD *))&static AceOutputHelper.makeSummaryViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:));
}

uint64_t sub_1768EC( uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, const char *a6, const char *a7, uint64_t a8, uint64_t a9, const char *a10, void (*a11)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, uint64_t, void *, _OWORD *))
{
  uint64_t v121 = a8;
  uint64_t v108 = a7;
  uint64_t v109 = a6;
  uint64_t v12 = v11;
  uint64_t v125 = a5;
  uint64_t v126 = a3;
  uint64_t v128 = a4;
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v118 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v119 = v16;
  uint64_t v120 = (uint64_t)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = type metadata accessor for ResponseMode(0LL);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  id v105 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v103 - v24;
  __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v103 - v26;
  uint64_t v28 = sub_6C5C(&qword_289340);
  uint64_t v115 = *(void *)(v28 - 8);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v117 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v116 = v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v103 - v31;
  uint64_t v33 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v34 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v33 - 8) + 16LL);
  uint64_t v112 = v33;
  uint64_t v111 = v34;
  ((void (*)(char *, uint64_t))v34)(v32, a1);
  uint64_t v113 = v28;
  uint64_t v35 = *(int *)(v28 + 48);
  uint64_t v127 = (uint64_t *)v32;
  *(void *)&v32[v35] = a2;
  uint64_t v36 = qword_283888;
  id v114 = a2;
  if (v36 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v37 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v38 = *(char **)(v19 + 16);
  uint64_t v122 = v37;
  char v123 = (void (*)(char *, uint64_t, uint64_t))v38;
  uint64_t v39 = ((uint64_t (*)(char *))v38)(v27);
  id v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v124 = v18;
  if (v42)
  {
    uint64_t v104 = v19;
    uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = swift_slowAlloc(32LL, -1LL);
    v131[0] = v44;
    uint64_t v110 = v25;
    *(_DWORD *)uint64_t v43 = 136446210;
    uint64_t v45 = static Insights.responseFramework.getter(v44);
    uint64_t v46 = v12;
    uint64_t v47 = v22;
    unint64_t v49 = v48;
    *(void *)&v129[0] = sub_6978(v45, v48, v131);
    uint64_t v25 = v110;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
    unint64_t v50 = v49;
    uint64_t v22 = v47;
    uint64_t v12 = v46;
    swift_bridgeObjectRelease(v50);
    _os_log_impl(&dword_0, v40, v41, v109, v43, 0xCu);
    swift_arrayDestroy(v44, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v51 = v44;
    uint64_t v18 = v124;
    swift_slowDealloc(v51, -1LL, -1LL);
    swift_slowDealloc(v43, -1LL, -1LL);

    uint64_t v52 = *(const char **)(v104 + 8);
  }

  else
  {

    uint64_t v52 = *(const char **)(v19 + 8);
  }

  ((void (*)(char *, uint64_t))v52)(v27, v18);
  uint64_t v53 = v12[5];
  uint64_t v54 = v12[6];
  sub_6EA8(v12 + 2, v53);
  uint64_t v55 = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v53, v54);
  if ((v55 & 1) != 0)
  {
    uint64_t v56 = static SiriEnvironmentWrapper.retrieve()(v55);
    uint64_t v109 = v52;
    uint64_t v104 = a9;
    if (!v56)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v56 = static SiriEnvironment.default.getter();
    }

    uint64_t v57 = v56;
    v123(v25, v122, v18);
    uint64_t v58 = swift_retain_n(v57, 2LL);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.info.getter(v59);
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v25;
      uint64_t v63 = v62;
      v131[0] = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      uint64_t v64 = SiriEnvironment.currentRequest.getter(v62);
      uint64_t v65 = v105;
      CurrentRequest.responseMode.getter(v64);
      uint64_t v66 = swift_release(v64);
      uint64_t v67 = ResponseMode.description.getter(v66);
      unint64_t v69 = v68;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v65, v107);
      *(void *)&v129[0] = sub_6978(v67, v69, v131);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
      swift_release_n(v57, 2LL);
      swift_bridgeObjectRelease(v69);
      _os_log_impl(&dword_0, v59, v60, v108, v61, 0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      uint64_t v70 = v110;
      uint64_t v71 = v124;
    }

    else
    {

      swift_release_n(v57, 2LL);
      uint64_t v70 = v25;
      uint64_t v71 = v18;
    }

    ((void (*)(char *, uint64_t))v109)(v70, v71);
    uint64_t v82 = v120;
    sub_1788A8(v126, v120);
    uint64_t v83 = *(int *)(v113 + 48);
    uint64_t v84 = (uint64_t)v117;
    uint64_t v85 = v127;
    v111(v117, v127, v112);
    uint64_t v86 = v114;
    *(void *)(v84 + v8sub_6C3C(v0 + 3) = v114;
    uint64_t v87 = *(unsigned __int8 *)(v118 + 80);
    uint64_t v88 = (v87 + 16) & ~v87;
    unint64_t v89 = (v119 + v88 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v90 = *(unsigned __int8 *)(v115 + 80);
    uint64_t v91 = (v90 + v89 + 8) & ~v90;
    uint64_t v92 = swift_allocObject(v121, v91 + v116, v87 | v90 | 7);
    sub_45F6C(v82, v92 + v88, (uint64_t *)&unk_286C50);
    *(void *)(v92 + v8sub_6C3C(v0 + 9) = v57;
    sub_45F6C(v84, v92 + v91, &qword_289340);
    id v93 = v86;
    swift_retain(v57);
    uint64_t v94 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(v128, v125, v104, v92, v94);
    swift_release(v57);
    swift_release(v92);
    uint64_t v95 = v85;
    uint64_t v96 = &qword_289340;
  }

  else
  {
    uint64_t v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v123)(v22, v122, v18);
    uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
    os_log_type_t v74 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v76 = swift_slowAlloc(32LL, -1LL);
      v131[0] = v76;
      char v123 = (void (*)(char *, uint64_t, uint64_t))v22;
      *(_DWORD *)uint64_t v75 = 136446210;
      uint64_t v77 = static Insights.responseFramework.getter(v76);
      unint64_t v79 = v78;
      *(void *)&v129[0] = sub_6978(v77, v78, v131);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v129, (char *)v129 + 8);
      swift_bridgeObjectRelease(v79);
      _os_log_impl(&dword_0, v73, v74, a10, v75, 0xCu);
      swift_arrayDestroy(v76, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1LL, -1LL);
      swift_slowDealloc(v75, -1LL, -1LL);

      uint64_t v80 = v123;
      uint64_t v81 = v124;
    }

    else
    {

      uint64_t v80 = (void (*)(char *, uint64_t, uint64_t))v22;
      uint64_t v81 = v18;
    }

    uint64_t v97 = ((uint64_t (*)(void (*)(char *, uint64_t, uint64_t), uint64_t))v52)(v80, v81);
    char v98 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v97);
    uint64_t v99 = type metadata accessor for AceOutput(0LL);
    memset(v129, 0, sizeof(v129));
    uint64_t v130 = 0LL;
    v131[3] = v99;
    v131[4] = (uint64_t)&protocol witness table for AceOutput;
    sub_10974(v131);
    uint64_t v100 = v98 & 1;
    uint64_t v101 = (uint64_t)v127;
    a11(v127, v100, _swiftEmptyArrayStorage, 1LL, 1LL, v126, _swiftEmptyArrayStorage, v129);
    sub_1F6CC((uint64_t)v129, &qword_2845C8);
    char v132 = 0;
    v128(v131);
    sub_1F6CC(v101, &qword_289340);
    uint64_t v96 = (uint64_t *)&unk_286C60;
    uint64_t v95 = v131;
  }

  return sub_1F6CC((uint64_t)v95, v96);
}

uint64_t sub_177190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[8] = v6;
  v4[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_289340);
  v4[10] = v7;
  v4[11] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[14] = v10;
  v4[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_177264, 0LL, 0LL);
}

uint64_t sub_177264()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 48);
  __int128 v44 = *(_OWORD *)(v0 + 32);
  static DialogPhase.summary.getter();
  uint64_t v5 = *(int *)(v3 + 48);
  uint64_t v6 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v45(v2, v4, v6);
  uint64_t v8 = *(void **)(v4 + v5);
  uint64_t v46 = v5;
  *(void *)(v2 + v5) = v8;
  uint64_t v9 = swift_task_alloc(48LL);
  *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = v44;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v2;
  id v10 = v8;
  OutputGenerationManifest.init(dialogPhase:_:)(v1, sub_178A7C, v9);
  swift_task_dealloc(v9);
  sub_1F6CC(v2, &qword_289340);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v20 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 56);
  if (v18)
  {
    uint64_t v42 = *(void *)(v0 + 56);
    uint64_t v41 = *(void *)(v0 + 72);
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v43 = v3;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v48 = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v24 = static Insights.responseFramework.getter(v23);
    unint64_t v26 = v25;
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_6978(v24, v25, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v26);
    _os_log_impl( &dword_0,  v16,  v17,  "SiriAudioOutputProvider#summaryViewOutput creating summaryViewOutput using RF 2.0 %{public}s",  v22,  0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v27 = v23;
    uint64_t v3 = v43;
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v41, v42);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }

  uint64_t v28 = *(void *)(v0 + 88);
  uint64_t v29 = *(void *)(v0 + 48);
  uint64_t v30 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  *(void *)(v0 + 12sub_6C3C(v0 + 8) = ResponseFactory.init()();
  uint64_t v31 = sub_6C5C(&qword_287980);
  uint64_t v32 = swift_allocObject(v31, 40LL, 7LL);
  *(_OWORD *)(v32 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v33 = *(int *)(v3 + 48);
  uint64_t v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v45)(v28, v29, v6);
  uint64_t v35 = *(void **)(v4 + v46);
  *(void *)(v28 + v3sub_6C3C(v0 + 3) = v35;
  *(void *)(v32 + 3sub_6C3C(v0 + 2) = v35;
  uint64_t v48 = v32;
  specialized Array._endMutation()(v34);
  uint64_t v36 = v48;
  *(void *)(v0 + 136) = v48;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  id v38 = v35;
  v37(v28, v6);
  *(void *)(v0 + 14sub_6C3C(v0 + 4) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_1266C4;
  return ((uint64_t (*)(void, uint64_t, void))v47)(*(void *)(v0 + 24), v36, *(void *)(v0 + 120));
}

uint64_t sub_1775D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1788A8(a2, (uint64_t)v14);
  uint64_t v15 = OutputGenerationManifest.nlContextUpdate.setter(v14);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
  return OutputGenerationManifest.preserveResultSpaceIfPossible.setter(1LL);
}

uint64_t sub_177784(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  return sub_1768EC( a1,  a2,  a3,  a4,  a5,  "SiriAudioOutputProvider#errorOutput... %{public}s",  "SiriAudioOutputProvider#errorOutput with responseMode = %s",  (uint64_t)&unk_2728B0,  (uint64_t)&unk_28BD10,  "SiriAudioOutputProvider#errorOutput creating errorOutput %{public}s",  (void (*)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, uint64_t, void *, _OWORD *))&static AceOutputHelper.makeErrorOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:));
}

uint64_t sub_1777D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[8] = v6;
  v4[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_6C5C(&qword_289340);
  v4[10] = v7;
  v4[11] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DialogPhase(0LL);
  v4[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[13] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[14] = v10;
  v4[15] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1778AC, 0LL, 0LL);
}

uint64_t sub_1778AC()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 48);
  __int128 v44 = *(_OWORD *)(v0 + 32);
  static DialogPhase.error.getter();
  uint64_t v5 = *(int *)(v3 + 48);
  uint64_t v6 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v45(v2, v4, v6);
  uint64_t v8 = *(void **)(v4 + v5);
  uint64_t v46 = v5;
  *(void *)(v2 + v5) = v8;
  uint64_t v9 = swift_task_alloc(48LL);
  *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = v44;
  *(void *)(v9 + 3sub_6C3C(v0 + 2) = v2;
  id v10 = v8;
  OutputGenerationManifest.init(dialogPhase:_:)(v1, sub_1789B0, v9);
  swift_task_dealloc(v9);
  sub_1F6CC(v2, &qword_289340);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v20 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 56);
  if (v18)
  {
    uint64_t v42 = *(void *)(v0 + 56);
    uint64_t v41 = *(void *)(v0 + 72);
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v43 = v3;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v48 = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v24 = static Insights.responseFramework.getter(v23);
    unint64_t v26 = v25;
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_6978(v24, v25, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease(v26);
    _os_log_impl( &dword_0,  v16,  v17,  "SiriAudioOutputProvider#errorOutput returning errorOutput using RF 2.0 %{public}s",  v22,  0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v27 = v23;
    uint64_t v3 = v43;
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v41, v42);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }

  uint64_t v28 = *(void *)(v0 + 88);
  uint64_t v29 = *(void *)(v0 + 48);
  uint64_t v30 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  *(void *)(v0 + 12sub_6C3C(v0 + 8) = ResponseFactory.init()();
  uint64_t v31 = sub_6C5C(&qword_287980);
  uint64_t v32 = swift_allocObject(v31, 40LL, 7LL);
  *(_OWORD *)(v32 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v33 = *(int *)(v3 + 48);
  uint64_t v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v45)(v28, v29, v6);
  uint64_t v35 = *(void **)(v4 + v46);
  *(void *)(v28 + v3sub_6C3C(v0 + 3) = v35;
  *(void *)(v32 + 3sub_6C3C(v0 + 2) = v35;
  uint64_t v48 = v32;
  specialized Array._endMutation()(v34);
  uint64_t v36 = v48;
  *(void *)(v0 + 136) = v48;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  id v38 = v35;
  v37(v28, v6);
  *(void *)(v0 + 14sub_6C3C(v0 + 4) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_17667C;
  return ((uint64_t (*)(void, uint64_t, void))v47)(*(void *)(v0 + 24), v36, *(void *)(v0 + 120));
}

uint64_t sub_177C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ResponseMode(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1788A8(a2, (uint64_t)v14);
  uint64_t v15 = OutputGenerationManifest.nlContextUpdate.setter(v14);
  uint64_t v16 = SiriEnvironment.currentRequest.getter(v15);
  CurrentRequest.responseMode.getter(v16);
  swift_release(v16);
  OutputGenerationManifest.responseMode.setter(v11);
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v8, a4, v18);
  uint64_t v20 = *(void **)(a4 + v17);
  *(void *)&v8[v17] = v20;
  id v21 = [v20 catId];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v24 = v23;

  OutputGenerationManifest.responseViewId.setter(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v18);
}

uint64_t sub_177DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_6C5C(&qword_289340);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DialogPhase(0LL);
  v3[7] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OutputGenerationManifest(0LL);
  v3[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[9] = v7;
  v3[10] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  v3[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[12] = v9;
  v3[13] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_177E98, 0LL, 0LL);
}

uint64_t sub_177E98()
{
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "SiriAudioOutputProvider#cancelOutput returning cancel output using RF 2.0", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v10 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v11 = v0[11];
  uint64_t v12 = v0[6];
  uint64_t v13 = v0[7];
  uint64_t v14 = v0[4];
  uint64_t v15 = v0[5];
  uint64_t v34 = v15;
  uint64_t v16 = v0[3];

  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  static DialogPhase.canceled.getter(v17);
  uint64_t v18 = *(int *)(v15 + 48);
  uint64_t v19 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v35 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v20(v12, v14, v19);
  id v21 = *(void **)(v14 + v18);
  *(void *)(v12 + v1sub_6C3C(v0 + 8) = v21;
  uint64_t v22 = swift_task_alloc(32LL);
  *(void *)(v22 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v22 + 2sub_6C3C(v0 + 4) = v12;
  id v23 = v21;
  OutputGenerationManifest.init(dialogPhase:_:)(v13, sub_17A464, v22);
  swift_task_dealloc(v22);
  sub_1F6CC(v12, &qword_289340);
  uint64_t v24 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v0[14] = ResponseFactory.init()();
  uint64_t v25 = sub_6C5C(&qword_287980);
  uint64_t v26 = swift_allocObject(v25, 40LL, 7LL);
  *(_OWORD *)(v26 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  uint64_t v27 = *(int *)(v34 + 48);
  uint64_t v28 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v12, v14, v19);
  uint64_t v29 = *(void **)(v14 + v18);
  *(void *)(v12 + v2sub_6C3C(v0 + 7) = v29;
  *(void *)(v26 + 3sub_6C3C(v0 + 2) = v29;
  specialized Array._endMutation()(v28);
  v0[15] = v26;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  id v31 = v29;
  v30(v12, v19);
  v0[16] = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_178124;
  return ((uint64_t (*)(void, uint64_t, void))v36)(v0[2], v26, v0[10]);
}

uint64_t sub_178124()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 112LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 128LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_17818C, 0LL, 0LL);
}

uint64_t sub_17818C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 48);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 72) + 8LL))(v2, *(void *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1781FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ResponseMode(0LL);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = SiriEnvironment.currentRequest.getter(v8);
  CurrentRequest.responseMode.getter(v11);
  swift_release(v11);
  OutputGenerationManifest.responseMode.setter(v10);
  uint64_t v12 = *(int *)(v4 + 48);
  uint64_t v13 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, a3, v13);
  uint64_t v15 = *(void **)(a3 + v12);
  *(void *)&v6[v12] = v15;
  id v16 = [v15 catId];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v19 = v18;

  OutputGenerationManifest.responseViewId.setter(v17, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v6, v13);
}

uint64_t sub_178348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[8] = v6;
  v4[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DialogPhase(0LL);
  v4[10] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for OutputGenerationManifest(0LL);
  v4[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[12] = v9;
  v4[13] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1783F4, 0LL, 0LL);
}

uint64_t sub_1783F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 48);
  __int128 v31 = *(_OWORD *)(v1 + 32);
  static DialogPhase.completion.getter(a1);
  uint64_t v4 = swift_task_alloc(48LL);
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = v31;
  *(void *)(v4 + 3sub_6C3C(v0 + 2) = v3;
  OutputGenerationManifest.init(dialogPhase:_:)(v2, sub_17A5C8, v4);
  swift_task_dealloc(v4);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = sub_6960(v7, (uint64_t)qword_2969C8);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter(v10);
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v14 = *(void *)(v1 + 72);
  uint64_t v15 = *(void *)(v1 + 56);
  if (v12)
  {
    uint64_t v32 = *(void *)(v1 + 72);
    id v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v34 = v17;
    *(_DWORD *)id v16 = 136446210;
    uint64_t v18 = static Insights.responseFramework.getter(v17);
    unint64_t v20 = v19;
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = sub_6978(v18, v19, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24);
    swift_bridgeObjectRelease(v20);
    _os_log_impl( &dword_0,  v10,  v11,  "SiriAudioOutputProvider#emptyOutput returning errorOutput using RF 2.0 %{public}s",  v16,  0xCu);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v32, v15);
  }

  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  }

  id v21 = [objc_allocWithZone(CATResult) init];
  *(void *)(v1 + 11sub_6C3C(v0 + 2) = v21;
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 setCatId:v22];

  uint64_t v23 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(void *)(v1 + 1sub_6C3C(v0 + 20) = ResponseFactory.init()();
  uint64_t v24 = sub_6C5C(&qword_287980);
  uint64_t v25 = swift_allocObject(v24, 40LL, 7LL);
  *(_OWORD *)(v25 + swift_weakDestroy(v0 + 16) = xmmword_214980;
  *(void *)(v25 + 3sub_6C3C(v0 + 2) = v21;
  uint64_t v34 = v25;
  specialized Array._endMutation()(v25);
  uint64_t v26 = v34;
  *(void *)(v1 + 12sub_6C3C(v0 + 8) = v34;
  id v28 = v21;
  uint64_t v29 = (void *)swift_task_alloc(v27);
  *(void *)(v1 + 136) = v29;
  void *v29 = v1;
  v29[1] = sub_1786FC;
  return ((uint64_t (*)(void, uint64_t, void))v33)(*(void *)(v1 + 24), v26, *(void *)(v1 + 104));
}

uint64_t sub_1786FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 120LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 136LL));
  swift_bridgeObjectRelease(v1);
  swift_release(v2);
  return swift_task_switch(sub_178764, 0LL, 0LL);
}

uint64_t sub_178764()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1787D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for ResponseMode(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = SiriEnvironment.currentRequest.getter(v7);
  CurrentRequest.responseMode.getter();
  swift_release(v10);
  OutputGenerationManifest.responseMode.setter(v9);
  swift_bridgeObjectRetain(a4);
  OutputGenerationManifest.responseViewId.setter(a3, a4);
  return OutputGenerationManifest.preserveResultSpaceIfPossible.setter(1LL);
}

uint64_t type metadata accessor for SiriAudioOutputProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin23SiriAudioOutputProvider);
}

uint64_t sub_1788A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C((uint64_t *)&unk_286C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1788F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc(dword_28BD0C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_3B08C;
  return sub_1777D8(a1, v9, v10, v11);
}

uint64_t sub_1789B0(uint64_t a1)
{
  return sub_177C20(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1789C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc(dword_28BD1C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_11C64;
  return sub_177190(a1, v9, v10, v11);
}

uint64_t sub_178A7C(uint64_t a1)
{
  return sub_1775D8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_178A8C()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v2 | v7 | 7;
  unint64_t v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v13 = (v12 + v7 + 8) & ~v7;
  uint64_t v14 = v13 + v8;
  swift_release(*(void *)(v0 + v12));
  uint64_t v15 = v0 + v13;
  uint64_t v16 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v15, v16);

  return swift_deallocObject(v0, v14, v11);
}

uint64_t sub_178BA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  unint64_t v12 = (void *)swift_task_alloc(dword_28BD2C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_3B08C;
  return sub_176234(a1, v9, v10, v11);
}

uint64_t sub_178C5C(uint64_t a1)
{
  return sub_1766E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_178C68()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_6C5C(&qword_289340);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v2 | v7 | 7;
  unint64_t v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v14 = (v7 + v13 + 8) & ~v7;
  swift_bridgeObjectRelease(*(void *)(v0 + v12));
  swift_release(*(void *)(v0 + v13));
  uint64_t v15 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v0 + v14, v15);

  return swift_deallocObject(v0, v14 + v8, v11);
}

uint64_t sub_178D8C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v9 = v8 + v7 + 8;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = v1 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc(dword_28BD3C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_3B08C;
  return sub_175AB0(a1, v11, v10, v12, v13);
}

uint64_t sub_178E60(uint64_t a1)
{
  return sub_175FCC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_178E6C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v100 = a1;
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v94 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v92 = *(void *)(v11 - 8);
  uint64_t v93 = v11;
  __chkstk_darwin(v11);
  uint64_t v91 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = type metadata accessor for ResponseMode(0LL);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v16);
  id v21 = (char *)&v83 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = swift_allocObject(&unk_2729A0, 32LL, 7LL);
  uint64_t v95 = a5;
  uint64_t v96 = a4;
  *(void *)(v24 + swift_weakDestroy(v0 + 16) = a4;
  *(void *)(v24 + 2sub_6C3C(v0 + 4) = a5;
  uint64_t v25 = qword_283888;
  swift_retain(a5);
  if (v25 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v14, (uint64_t)qword_2969C8);
  uint64_t v27 = *(uint64_t (**)(char *, void (*)(char *, uint64_t), uint64_t))(v15 + 16);
  uint64_t v97 = (void (*)(char *, uint64_t))v26;
  char v98 = v27;
  uint64_t v28 = ((uint64_t (*)(char *))v27)(v23);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  uint64_t v30 = v15;
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v29, v31);
  uint64_t v99 = v14;
  if (v32)
  {
    uint64_t v90 = v18;
    uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    unint64_t v89 = v21;
    uint64_t v35 = v34;
    v103[0] = v34;
    uint64_t v84 = a3;
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v83 = v30;
    uint64_t v36 = static Insights.responseFramework.getter(v34);
    unint64_t v38 = v37;
    *(void *)&v101[0] = sub_6978(v36, v37, v103);
    a3 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, (char *)v101 + 8);
    unint64_t v39 = v38;
    uint64_t v18 = v90;
    swift_bridgeObjectRelease(v39);
    _os_log_impl(&dword_0, v29, v31, "SiriAudioOutputProvider#emptyOutput... %{public}s", v33, 0xCu);
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v40 = v35;
    id v21 = v89;
    swift_slowDealloc(v40, -1LL, -1LL);
    uint64_t v41 = v33;
    uint64_t v14 = v99;
    swift_slowDealloc(v41, -1LL, -1LL);

    uint64_t v42 = *(void (**)(char *, uint64_t))(v83 + 8);
  }

  else
  {

    uint64_t v42 = *(void (**)(char *, uint64_t))(v30 + 8);
  }

  v42(v23, v14);
  uint64_t v43 = a3[5];
  uint64_t v44 = a3[6];
  sub_6EA8(a3 + 2, v43);
  uint64_t v45 = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v43, v44);
  if ((v45 & 1) != 0)
  {
    uint64_t v46 = static SiriEnvironmentWrapper.retrieve()(v45);
    uint64_t v85 = a2;
    if (!v46)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v46 = static SiriEnvironment.default.getter();
    }

    uint64_t v47 = v46;
    v98(v18, v97, v14);
    uint64_t v48 = swift_retain_n(v47, 2LL);
    unint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.info.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      char v98 = (uint64_t (*)(char *, void (*)(char *, uint64_t), uint64_t))v24;
      uint64_t v53 = v52;
      v103[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      uint64_t v90 = v18;
      uint64_t v54 = SiriEnvironment.currentRequest.getter(v52);
      uint64_t v97 = v42;
      uint64_t v55 = v86;
      CurrentRequest.responseMode.getter(v54);
      uint64_t v56 = swift_release(v54);
      uint64_t v57 = ResponseMode.description.getter(v56);
      unint64_t v59 = v58;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v55, v88);
      *(void *)&v101[0] = sub_6978(v57, v59, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, (char *)v101 + 8);
      swift_release_n(v47, 2LL);
      swift_bridgeObjectRelease(v59);
      _os_log_impl(&dword_0, v49, v50, "SiriAudioOutputProvider#emptyOutput with responseMode = %s", v51, 0xCu);
      swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v60 = v53;
      uint64_t v24 = (uint64_t)v98;
      swift_slowDealloc(v60, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);

      v97(v90, v99);
    }

    else
    {

      swift_release_n(v47, 2LL);
      v42(v18, v14);
    }

    uint64_t v71 = (void *)swift_allocObject(&unk_2729C8, 40LL, 7LL);
    uint64_t v72 = v100;
    v71[2] = v47;
    v71[3] = v72;
    uint64_t v73 = v85;
    v71[4] = v85;
    swift_retain(v47);
    swift_bridgeObjectRetain(v73);
    uint64_t v74 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(sub_33CB8, v24, &unk_28BD68, v71, v74);
    swift_release(v24);
    swift_release(v47);
    uint64_t v75 = v71;
  }

  else
  {
    uint64_t v61 = v98(v21, v97, v14);
    uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      unint64_t v89 = v21;
      uint64_t v64 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v65 = swift_slowAlloc(32LL, -1LL);
      v103[0] = v65;
      *(_DWORD *)uint64_t v64 = 136446210;
      uint64_t v66 = static Insights.responseFramework.getter(v65);
      unint64_t v68 = v67;
      *(void *)&v101[0] = sub_6978(v66, v67, v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, (char *)v101 + 8);
      swift_bridgeObjectRelease(v68);
      _os_log_impl(&dword_0, v62, v63, "SiriAudioOutputProvider#emptyOutput creating errorOutput %{public}s", v64, 0xCu);
      swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1LL, -1LL);
      swift_slowDealloc(v64, -1LL, -1LL);

      unint64_t v69 = v89;
      uint64_t v70 = v99;
    }

    else
    {

      unint64_t v69 = v21;
      uint64_t v70 = v14;
    }

    v42(v69, v70);
    swift_bridgeObjectRetain(a2);
    uint64_t v76 = v91;
    uint64_t v77 = TemplatingResult.init(templateIdentifier:speak:print:)( v100,  a2,  _swiftEmptyArrayStorage,  _swiftEmptyArrayStorage);
    char v78 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v77);
    uint64_t v79 = type metadata accessor for NLContextUpdate(0LL);
    uint64_t v80 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))(v94, 1LL, 1LL, v79);
    uint64_t v81 = type metadata accessor for AceOutput(0LL);
    memset(v101, 0, sizeof(v101));
    uint64_t v102 = 0LL;
    v103[3] = v81;
    v103[4] = (uint64_t)&protocol witness table for AceOutput;
    sub_10974(v103);
    static AceOutputHelper.makeErrorOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v76,  v78 & 1,  _swiftEmptyArrayStorage,  1LL,  1LL,  v80,  _swiftEmptyArrayStorage,  v101);
    sub_1F6CC((uint64_t)v101, &qword_2845C8);
    sub_1F6CC(v80, (uint64_t *)&unk_286C50);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v76, v93);
    char v104 = 0;
    v96(v103);
    sub_1F6CC((uint64_t)v103, (uint64_t *)&unk_286C60);
    uint64_t v75 = (void *)v24;
  }

  return swift_release(v75);
}

uint64_t sub_17967C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v86 = type metadata accessor for ResponseMode(0LL);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v94 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v81 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v81 - v16;
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v91 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v92 = v20;
  uint64_t v93 = (char *)v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v81 - v21;
  uint64_t v23 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v87 = *(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 16LL);
  uint64_t v88 = v23;
  v87(v22, a1);
  uint64_t v90 = v18;
  uint64_t v24 = *(int *)(v18 + 48);
  uint64_t v95 = (uint64_t *)v22;
  *(void *)&v22[v24] = a2;
  uint64_t v25 = qword_283888;
  swift_retain(a4);
  id v89 = a2;
  if (v25 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v28 = v27(v17, v26, v9);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    os_log_type_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v83 = v10;
    uint64_t v32 = v26;
    uint64_t v33 = v27;
    uint64_t v34 = a3;
    uint64_t v35 = v9;
    uint64_t v36 = v15;
    uint64_t v37 = a4;
    unint64_t v38 = v31;
    *(_WORD *)os_log_type_t v31 = 0;
    _os_log_impl(&dword_0, v29, v30, "SiriAudioOutputProvider#errorOutput...", v31, 2u);
    unint64_t v39 = v38;
    a4 = v37;
    uint64_t v15 = v36;
    uint64_t v9 = v35;
    a3 = v34;
    uint64_t v27 = v33;
    uint64_t v26 = v32;
    uint64_t v10 = v83;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  uint64_t v40 = *(void (**)(char *, uint64_t))(v10 + 8);
  v40(v17, v9);
  uint64_t v41 = a3 + 2;
  uint64_t v43 = a3[5];
  uint64_t v42 = a3[6];
  sub_6EA8(v41, v43);
  uint64_t v44 = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v43, v42);
  if ((v44 & 1) != 0)
  {
    uint64_t v45 = static SiriEnvironmentWrapper.retrieve()(v44);
    if (!v45)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v45 = static SiriEnvironment.default.getter();
    }

    uint64_t v46 = v45;
    uint64_t v47 = v94;
    v27(v94, v26, v9);
    uint64_t v48 = swift_retain_n(v46, 2LL);
    unint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.info.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      uint64_t v83 = v52;
      v98[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      v81[1] = v51 + 4;
      uint64_t v53 = SiriEnvironment.currentRequest.getter(v52);
      uint64_t v54 = v84;
      CurrentRequest.responseMode.getter(v53);
      uint64_t v55 = swift_release(v53);
      uint64_t v56 = ResponseMode.description.getter(v55);
      uint64_t v82 = v40;
      unint64_t v58 = v57;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v86);
      *(void *)&v96[0] = sub_6978(v56, v58, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v96, (char *)v96 + 8);
      swift_release_n(v46, 2LL);
      swift_bridgeObjectRelease(v58);
      _os_log_impl(&dword_0, v49, v50, "SiriAudioOutputProvider#cancelOutput with responseMode = %s", v51, 0xCu);
      uint64_t v59 = v83;
      swift_arrayDestroy(v83, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);

      v82(v94, v9);
    }

    else
    {

      swift_release_n(v46, 2LL);
      v40(v47, v9);
    }

    uint64_t v71 = *(int *)(v90 + 48);
    uint64_t v72 = (uint64_t)v93;
    uint64_t v73 = v95;
    ((void (*)(char *, uint64_t *, uint64_t))v87)(v93, v95, v88);
    uint64_t v74 = v89;
    *(void *)(v72 + v71) = v89;
    uint64_t v75 = *(unsigned __int8 *)(v91 + 80);
    uint64_t v76 = (v75 + 24) & ~v75;
    uint64_t v77 = swift_allocObject(&unk_272978, v76 + v92, v75 | 7);
    *(void *)(v77 + swift_weakDestroy(v0 + 16) = v46;
    sub_45F6C(v72, v77 + v76, &qword_289340);
    id v78 = v74;
    swift_retain(v46);
    uint64_t v79 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(sub_17A46C, a4, &unk_28BD58, v77, v79);
    swift_release(v46);
    swift_release(v77);
    uint64_t v70 = v73;
    unint64_t v69 = &qword_289340;
  }

  else
  {
    uint64_t v60 = v27(v15, v26, v9);
    uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      os_log_type_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v63 = 0;
      _os_log_impl(&dword_0, v61, v62, "SiriAudioOutputProvider#cancelOutput creating cancel output", v63, 2u);
      swift_slowDealloc(v63, -1LL, -1LL);
    }

    uint64_t v64 = ((uint64_t (*)(char *, uint64_t))v40)(v15, v9);
    char v65 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v64);
    uint64_t v66 = type metadata accessor for AceOutput(0LL);
    memset(v96, 0, sizeof(v96));
    uint64_t v97 = 0LL;
    v98[3] = v66;
    v98[4] = (uint64_t)&protocol witness table for AceOutput;
    sub_10974(v98);
    uint64_t v67 = v65 & 1;
    uint64_t v68 = (uint64_t)v95;
    static AceOutputHelper.makeCancellationViewOutput(templateResult:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)( v95,  v67,  _swiftEmptyArrayStorage,  1LL,  v96);
    sub_1F6CC((uint64_t)v96, &qword_2845C8);
    char v99 = 0;
    sub_AACAC((uint64_t)v98, a4);
    sub_1F6CC(v68, &qword_289340);
    unint64_t v69 = (uint64_t *)&unk_286C60;
    uint64_t v70 = v98;
  }

  sub_1F6CC((uint64_t)v70, v69);
  return swift_release(a4);
}

uint64_t sub_179D28(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v86 = type metadata accessor for ResponseMode(0LL);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v94 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v81 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v81 - v16;
  uint64_t v18 = sub_6C5C(&qword_289340);
  uint64_t v91 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v92 = v20;
  uint64_t v93 = (char *)v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v81 - v21;
  uint64_t v23 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v87 = *(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 16LL);
  uint64_t v88 = v23;
  v87(v22, a1);
  uint64_t v90 = v18;
  uint64_t v24 = *(int *)(v18 + 48);
  uint64_t v95 = (uint64_t *)v22;
  *(void *)&v22[v24] = a2;
  uint64_t v25 = qword_283888;
  swift_retain(a4);
  id v89 = a2;
  if (v25 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v26 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v28 = v27(v17, v26, v9);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    os_log_type_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v83 = v10;
    uint64_t v32 = v26;
    uint64_t v33 = v27;
    uint64_t v34 = a3;
    uint64_t v35 = v9;
    uint64_t v36 = v15;
    uint64_t v37 = a4;
    unint64_t v38 = v31;
    *(_WORD *)os_log_type_t v31 = 0;
    _os_log_impl(&dword_0, v29, v30, "SiriAudioOutputProvider#errorOutput...", v31, 2u);
    unint64_t v39 = v38;
    a4 = v37;
    uint64_t v15 = v36;
    uint64_t v9 = v35;
    a3 = v34;
    uint64_t v27 = v33;
    uint64_t v26 = v32;
    uint64_t v10 = v83;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  uint64_t v40 = *(void (**)(char *, uint64_t))(v10 + 8);
  v40(v17, v9);
  uint64_t v41 = a3 + 2;
  uint64_t v43 = a3[5];
  uint64_t v42 = a3[6];
  sub_6EA8(v41, v43);
  uint64_t v44 = dispatch thunk of FeatureFlagProviding.isResponseFrameworkEnabled.getter(v43, v42);
  if ((v44 & 1) != 0)
  {
    uint64_t v45 = static SiriEnvironmentWrapper.retrieve()(v44);
    if (!v45)
    {
      type metadata accessor for SiriEnvironment(0LL);
      uint64_t v45 = static SiriEnvironment.default.getter();
    }

    uint64_t v46 = v45;
    uint64_t v47 = v94;
    v27(v94, v26, v9);
    uint64_t v48 = swift_retain_n(v46, 2LL);
    unint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.info.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      uint64_t v83 = v52;
      v98[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      v81[1] = v51 + 4;
      uint64_t v53 = SiriEnvironment.currentRequest.getter(v52);
      uint64_t v54 = v84;
      CurrentRequest.responseMode.getter(v53);
      uint64_t v55 = swift_release(v53);
      uint64_t v56 = ResponseMode.description.getter(v55);
      uint64_t v82 = v40;
      unint64_t v58 = v57;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v86);
      *(void *)&v96[0] = sub_6978(v56, v58, v98);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v96, (char *)v96 + 8);
      swift_release_n(v46, 2LL);
      swift_bridgeObjectRelease(v58);
      _os_log_impl(&dword_0, v49, v50, "SiriAudioOutputProvider#cancelOutput with responseMode = %s", v51, 0xCu);
      uint64_t v59 = v83;
      swift_arrayDestroy(v83, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);

      v82(v94, v9);
    }

    else
    {

      swift_release_n(v46, 2LL);
      v40(v47, v9);
    }

    uint64_t v71 = *(int *)(v90 + 48);
    uint64_t v72 = (uint64_t)v93;
    uint64_t v73 = v95;
    ((void (*)(char *, uint64_t *, uint64_t))v87)(v93, v95, v88);
    uint64_t v74 = v89;
    *(void *)(v72 + v71) = v89;
    uint64_t v75 = *(unsigned __int8 *)(v91 + 80);
    uint64_t v76 = (v75 + 24) & ~v75;
    uint64_t v77 = swift_allocObject(&unk_272950, v76 + v92, v75 | 7);
    *(void *)(v77 + swift_weakDestroy(v0 + 16) = v46;
    sub_45F6C(v72, v77 + v76, &qword_289340);
    id v78 = v74;
    swift_retain(v46);
    uint64_t v79 = sub_6C5C(&qword_2845C0);
    static Task<>.withCallback<A>(_:operation:)(sub_17A3D4, a4, &unk_28BD50, v77, v79);
    swift_release(v46);
    swift_release(v77);
    uint64_t v70 = v73;
    unint64_t v69 = &qword_289340;
  }

  else
  {
    uint64_t v60 = v27(v15, v26, v9);
    uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      os_log_type_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v63 = 0;
      _os_log_impl(&dword_0, v61, v62, "SiriAudioOutputProvider#cancelOutput creating cancel output", v63, 2u);
      swift_slowDealloc(v63, -1LL, -1LL);
    }

    uint64_t v64 = ((uint64_t (*)(char *, uint64_t))v40)(v15, v9);
    char v65 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v64);
    uint64_t v66 = type metadata accessor for AceOutput(0LL);
    memset(v96, 0, sizeof(v96));
    uint64_t v97 = 0LL;
    v98[3] = v66;
    v98[4] = (uint64_t)&protocol witness table for AceOutput;
    sub_10974(v98);
    uint64_t v67 = v65 & 1;
    uint64_t v68 = (uint64_t)v95;
    static AceOutputHelper.makeCancellationViewOutput(templateResult:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)( v95,  v67,  _swiftEmptyArrayStorage,  1LL,  v96);
    sub_1F6CC((uint64_t)v96, &qword_2845C8);
    char v99 = 0;
    sub_12E500((uint64_t)v98, a4);
    sub_1F6CC(v68, &qword_289340);
    unint64_t v69 = (uint64_t *)&unk_286C60;
    uint64_t v70 = v98;
  }

  sub_1F6CC((uint64_t)v70, v69);
  return swift_release(a4);
}

uint64_t sub_17A3D4(uint64_t a1)
{
  return sub_12E500(a1, v1);
}

uint64_t sub_17A3E0(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_6C5C(&qword_289340) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((v4 + 24) & ~v4);
  unint64_t v7 = (void *)swift_task_alloc(dword_28BD4C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_3B08C;
  return sub_177DC4(a1, v5, v6);
}

uint64_t sub_17A464(uint64_t a1)
{
  return sub_1781FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_17A46C(uint64_t a1)
{
  return sub_AACAC(a1, v1);
}

uint64_t sub_17A478()
{
  uint64_t v1 = sub_6C5C(&qword_289340);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);

  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_17A50C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_17A530()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_17A55C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_28BD64);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_3B08C;
  return sub_178348(a1, v4, v5, v6);
}

uint64_t sub_17A5C8(uint64_t a1)
{
  return sub_1787D8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_17A5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v126 = type metadata accessor for PommesContext.Source(0LL);
  uint64_t v124 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v125 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_285F70);
  __chkstk_darwin(v8);
  uint64_t v127 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v121 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v17 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  uint64_t v18 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v122 = v10;
  uint64_t v123 = a4;
  Swift::String_optional v129 = v12;
  uint64_t v119 = a1;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    v134._countAndFlagsBits = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain(a3);
    uint64_t v132 = sub_6978(v128, a3, &v134._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, &v133);
    unint64_t v24 = a3;
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl(&dword_0, v19, v20, "Making needs value NL context for parameter: %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {

    unint64_t v24 = a3;
    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  NLContextUpdate.init()(v25);
  unint64_t v26 = sub_A89B0(0);
  NLContextUpdate.weightedPromptTargetDomain.setter(v26);
  uint64_t v27 = sub_6C5C(&qword_284018);
  uint64_t v28 = swift_allocObject(v27, 48LL, 7LL);
  __int128 v120 = xmmword_214510;
  *(_OWORD *)(v28 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  Swift::String v29 = String.uppercased()();
  Swift::String v134 = v29;
  uint64_t v132 = 32LL;
  unint64_t v133 = 0xE100000000000000LL;
  uint64_t v130 = 95LL;
  unint64_t v131 = 0xE100000000000000LL;
  unint64_t v30 = sub_6D68();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( &v132,  &v130,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v30,  v30,  v30);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease(v29._object);
  v134._countAndFlagsBits = sub_A89B0(1u);
  v134._object = v33;
  v34._countAndFlagsBits = 0x2E65756C61562ELL;
  v34._object = (void *)0xE700000000000000LL;
  String.append(_:)(v34);
  uint64_t v35 = v129;
  Swift::String v36 = String.uppercased()();
  object = v36._object;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(object);
  unint64_t v38 = v134._object;
  *(void *)(v28 + 3sub_6C3C(v0 + 2) = v134._countAndFlagsBits;
  *(void *)(v28 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v38;
  NLContextUpdate.weightedPromptResponseOptions.setter(v28);
  NLContextUpdate.weightedPromptStrict.setter(1LL);
  unint64_t v39 = v125;
  (*(void (**)(char *, void, uint64_t))(v124 + 104))( v125,  enum case for PommesContext.Source.pluginDefined(_:),  v126);
  uint64_t v40 = v127;
  PommesContext.init(source:domain:listenAfterSpeaking:)(v39, 0x616964656DLL, 0xE500000000000000LL, 1LL);
  uint64_t v41 = type metadata accessor for PommesContext(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v40, 0LL, 1LL, v41);
  NLContextUpdate.pommesContext.setter(v40);
  uint64_t v42 = v128;
  if (v128 == 0xD000000000000010LL && v24 == 0x800000000021C9F0LL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000000021C9F0LL) & 1) != 0)
  {
    uint64_t v43 = swift_allocObject(v27, 48LL, 7LL);
    *(_OWORD *)(v43 + swift_weakDestroy(v0 + 16) = v120;
    unsigned __int8 v44 = 8;
    goto LABEL_10;
  }

  if (v42 == 0x657449616964656DLL && v24 == 0xEA0000000000736DLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657449616964656DLL, 0xEA0000000000736DLL) & 1) != 0)
  {
    uint64_t v52 = v27;
    uint64_t v53 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v54 = v119;
    uint64_t v55 = (void *)swift_dynamicCastObjCClass(v119, v53);
    if (v55
      || (uint64_t v56 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent),
          (uint64_t v55 = (void *)swift_dynamicCastObjCClass(v54, v56)) != 0LL)
      || (uint64_t v57 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent),
          (uint64_t v55 = (void *)swift_dynamicCastObjCClass(v54, v57)) != 0LL)
      || (uint64_t v58 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent),
          (uint64_t v55 = (void *)swift_dynamicCastObjCClass(v54, v58)) != 0LL))
    {
      id v59 = [v55 mediaSearch];
      uint64_t v60 = v59;
      uint64_t v48 = v122;
      uint64_t v47 = v123;
      uint64_t v49 = v121;
      if (v59)
      {
        switch((unint64_t)[v59 mediaType])
        {
          case 1uLL:
            uint64_t v61 = swift_allocObject(v52, 48LL, 7LL);
            *(_OWORD *)(v61 + swift_weakDestroy(v0 + 16) = v120;
            unsigned __int8 v62 = 9;
            break;
          case 2uLL:
            uint64_t v61 = swift_allocObject(v52, 48LL, 7LL);
            *(_OWORD *)(v61 + swift_weakDestroy(v0 + 16) = v120;
            unsigned __int8 v62 = 10;
            break;
          case 3uLL:
            uint64_t v61 = swift_allocObject(v52, 48LL, 7LL);
            *(_OWORD *)(v61 + swift_weakDestroy(v0 + 16) = v120;
            unsigned __int8 v62 = 3;
            break;
          case 5uLL:
            uint64_t v61 = swift_allocObject(v52, 48LL, 7LL);
            *(_OWORD *)(v61 + swift_weakDestroy(v0 + 16) = v120;
            unsigned __int8 v62 = 8;
            break;
          default:
            goto LABEL_39;
        }

        goto LABEL_40;
      }
    }

    else
    {
      uint64_t v60 = 0LL;
      uint64_t v48 = v122;
      uint64_t v47 = v123;
      uint64_t v49 = v121;
    }

uint64_t sub_17B4B4@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v91 = type metadata accessor for CommonAudio.Confirmation(0LL);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v83 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = sub_6C5C(&qword_2848D8);
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_6C5C(&qword_284630);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v85 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v92 = (uint64_t)&v82 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v82 - v10;
  uint64_t v12 = type metadata accessor for Parse(0LL);
  uint64_t v13 = *(uint64_t (***)(char *, uint64_t))(v12 - 8);
  uint64_t v95 = v12;
  uint64_t v96 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v93 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v82 - v16;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  Swift::String v86 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v87 = (char *)&v82 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v84 = (char *)&v82 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v82 - v26;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v28 = sub_6960(v18, (uint64_t)qword_2969C8);
  Swift::String v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v30 = v29(v27, v28, v18);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v82 = a1;
    uint64_t v34 = v28;
    uint64_t v35 = v29;
    uint64_t v36 = v18;
    uint64_t v37 = v11;
    unint64_t v38 = v33;
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "AddMediaNeedsValueStrategy#actionForInput...", v33, 2u);
    unint64_t v39 = v38;
    uint64_t v11 = v37;
    uint64_t v18 = v36;
    Swift::String v29 = v35;
    uint64_t v28 = v34;
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  uint64_t v40 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v41 = v40(v27, v18);
  Input.parse.getter(v41);
  uint64_t v43 = v95;
  uint64_t v42 = v96;
  int v44 = v96[11](v17, v95);
  if (v44 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    v42[12](v17, v43);
    uint64_t v45 = sub_6C5C(&qword_284618);
    swift_release(*(void *)&v17[*(int *)(v45 + 48)]);
    uint64_t v46 = type metadata accessor for NLIntent(0LL);
    uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8LL))(v17, v46);
  }

  else
  {
    int v48 = v44;
    int v49 = enum case for Parse.pommesResponse(_:);
    uint64_t v47 = v96[1](v17, v43);
    BOOL v50 = v48 == v49;
    uint64_t v42 = v96;
    if (!v50)
    {
      uint64_t v64 = v86;
      uint64_t v65 = v29(v86, v28, v18);
      uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
      os_log_type_t v67 = static os_log_type_t.default.getter(v66);
      if (!os_log_type_enabled(v66, v67)) {
        goto LABEL_18;
      }
      unsigned __int8 v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unsigned __int8 v62 = 0;
      uint64_t v63 = "AddMediaNeedsValueStrategy#actionForInput parse not of right type";
      goto LABEL_17;
    }
  }

  uint64_t v51 = v93;
  Input.parse.getter(v47);
  double v52 = sub_B7C84(v51, (uint64_t)&v97);
  ((void (*)(char *, uint64_t, double))v42[1])(v51, v43, v52);
  if (!v98)
  {
    sub_1F6CC((uint64_t)&v97, &qword_2848C0);
    uint64_t v64 = v87;
    uint64_t v61 = v29(v87, v28, v18);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v67 = static os_log_type_t.default.getter(v66);
    if (!os_log_type_enabled(v66, v67))
    {
LABEL_18:

      uint64_t v69 = v40(v64, v18);
      return static ActionForInput.ignore()(v69);
    }

    unsigned __int8 v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unsigned __int8 v62 = 0;
    uint64_t v63 = "AddMediaNeedsValueStrategy#actionForInput received invalid NL intent";
LABEL_17:
    _os_log_impl(&dword_0, v66, v67, v63, v62, 2u);
    swift_slowDealloc(v62, -1LL, -1LL);
    goto LABEL_18;
  }

  uint64_t v95 = v28;
  uint64_t v96 = (uint64_t (**)(char *, uint64_t))v29;
  sub_49B60(&v97, &v99);
  uint64_t v53 = v100;
  uint64_t v54 = v101;
  sub_6EA8(&v99, v100);
  dispatch thunk of ConfirmableIntent.confirmationState.getter(v53, *(void *)(v54 + 8));
  uint64_t v55 = v89;
  uint64_t v56 = v91;
  uint64_t v57 = v92;
  (*(void (**)(uint64_t, void, uint64_t))(v89 + 104))( v92,  enum case for CommonAudio.Confirmation.cancel(_:),  v91);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v57, 0LL, 1LL, v56);
  uint64_t v58 = v90;
  uint64_t v59 = v90 + *(int *)(v88 + 48);
  sub_FF10((uint64_t)v11, v90, &qword_284630);
  sub_FF10(v57, v59, &qword_284630);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v60(v58, 1LL, v56) == 1)
  {
    sub_1F6CC(v57, &qword_284630);
    sub_1F6CC((uint64_t)v11, &qword_284630);
    if (v60(v59, 1LL, v56) == 1)
    {
      sub_1F6CC(v58, &qword_284630);
LABEL_24:
      uint64_t v76 = v84;
      uint64_t v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v96)(v84, v95, v18);
      Swift::String v78 = (os_log_s *)Logger.logObject.getter(v77);
      os_log_type_t v79 = static os_log_type_t.default.getter(v78);
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v80 = 0;
        _os_log_impl(&dword_0, v78, v79, "AddMediaNeedsValueStrategy#actionForInput User asked to cancel", v80, 2u);
        swift_slowDealloc(v80, -1LL, -1LL);
      }

      uint64_t v81 = v40(v76, v18);
      static ActionForInput.cancel()(v81);
      return sub_6C3C(&v99);
    }

    goto LABEL_21;
  }

  uint64_t v71 = v85;
  sub_FF10(v58, v85, &qword_284630);
  if (v60(v59, 1LL, v56) == 1)
  {
    sub_1F6CC(v57, &qword_284630);
    sub_1F6CC((uint64_t)v11, &qword_284630);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v71, v56);
LABEL_21:
    uint64_t v72 = sub_1F6CC(v58, &qword_2848D8);
    goto LABEL_22;
  }

  Swift::String v73 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v83, v59, v56);
  uint64_t v74 = sub_6DF0( &qword_2848E0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for CommonAudio.Confirmation,  (uint64_t)&protocol conformance descriptor for CommonAudio.Confirmation);
  LODWORD(v9sub_6C3C(v0 + 3) = dispatch thunk of static Equatable.== infix(_:_:)(v71, v73, v56, v74);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v55 + 8);
  v75(v73, v56);
  sub_1F6CC(v92, &qword_284630);
  sub_1F6CC((uint64_t)v11, &qword_284630);
  v75((char *)v71, v56);
  uint64_t v72 = sub_1F6CC(v58, &qword_284630);
LABEL_22:
  static ActionForInput.handle()(v72);
  return sub_6C3C(&v99);
}

uint64_t sub_17BCC0( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  int v49 = a5;
  uint64_t v51 = (void *)a2;
  uint64_t v52 = a7;
  uint64_t v48 = a6;
  uint64_t v10 = sub_6C5C((uint64_t *)&unk_286C50);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v46 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v53 = (uint64_t)&v42 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v18 = sub_6960(v14, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  uint64_t v19 = swift_bridgeObjectRetain_n(a4, 2LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = v11;
    uint64_t v25 = v24;
    uint64_t v55 = v24;
    uint64_t v43 = v15;
    *(_DWORD *)uint64_t v23 = 136446210;
    swift_bridgeObjectRetain(a4);
    uint64_t v54 = sub_6978(a3, a4, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55);
    swift_bridgeObjectRelease_n(a4, 3LL);
    _os_log_impl(&dword_0, v20, v21, "AddMediaNeedsValueStrategy#makePromptForValue parameter: %{public}s", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v25;
    uint64_t v11 = v44;
    swift_slowDealloc(v26, -1LL, -1LL);
    a1 = v45;
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v14);
  }

  else
  {

    swift_bridgeObjectRelease_n(a4, 2LL);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  uint64_t v27 = v53;
  uint64_t v28 = v51;
  uint64_t v29 = a3;
  uint64_t v30 = v49;
  sub_17A5DC((uint64_t)v51, a3, a4, v53);
  uint64_t v31 = v50;
  uint64_t v45 = *(void *)(v50 + 16);
  uint64_t v32 = v27;
  uint64_t v33 = v47;
  sub_FF10(v32, v47, (uint64_t *)&unk_286C50);
  uint64_t v34 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v35 = (v34 + 80) & ~v34;
  uint64_t v36 = (void *)swift_allocObject(&unk_2729F0, v35 + v11, v34 | 7);
  void v36[2] = v29;
  uint64_t v36[3] = a4;
  v36[4] = v30;
  void v36[5] = v31;
  v36[6] = a1;
  v36[7] = v28;
  uint64_t v37 = a4;
  uint64_t v38 = v52;
  v36[8] = v48;
  v36[9] = v38;
  sub_45F6C(v33, (uint64_t)v36 + v35, (uint64_t *)&unk_286C50);
  swift_bridgeObjectRetain(v37);
  id v39 = v30;
  swift_retain(v31);
  swift_retain(a1);
  id v40 = v28;
  swift_retain(v38);
  sub_B46D0(a1, v29, v37, v40, (uint64_t)sub_17EEBC, (uint64_t)v36);
  swift_release(v36);
  return sub_1F6CC(v53, (uint64_t *)&unk_286C50);
}

void sub_17C050( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void (*a8)(uint64_t *), uint64_t a9, uint64_t a10)
{
  uint64_t v124 = a8;
  id v132 = a7;
  uint64_t v122 = a6;
  uint64_t v130 = a4;
  unint64_t v131 = a5;
  uint64_t v128 = a2;
  uint64_t v129 = a3;
  uint64_t v133 = a1;
  uint64_t v123 = a9;
  uint64_t v118 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v117 = *(v118 - 1);
  __chkstk_darwin(v118);
  Swift::String v115 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v134);
  Swift::String v114 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  __int128 v120 = (char *)&v112 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v112 - v15;
  uint64_t v17 = sub_6C5C(&qword_2845A0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v121 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v119 = (char *)&v112 - v20;
  uint64_t v21 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v126 = (char *)&v112 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v116 = (char *)&v112 - v24;
  uint64_t v25 = sub_6C5C(&qword_2845A8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v125 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v112 - v28;
  uint64_t v127 = (void *)type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v30 = *(v127 - 1);
  __chkstk_darwin(v127);
  uint64_t v32 = (char *)&v112 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v37);
  id v39 = (uint64_t *)((char *)&v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(v133, (uint64_t)v39, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v39, v37) == 1)
  {
    uint64_t v40 = *v39;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))( v36,  enum case for AdditionalMetricsDescription.ModuleName.amnvs(_:),  v33);
    uint64_t v41 = v127;
    (*(void (**)(char *, void, void *))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v127);
    swift_getErrorValue(v40, v138, v137);
    uint64_t v42 = Error.localizedDescription.getter(v137[1], v137[2]);
    uint64_t v44 = v43;
    uint64_t v133 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v36,  v32,  v128,  v129,  v42,  v43,  v130,  0LL,  1);
    uint64_t v134 = v45;
    __n128 v46 = swift_bridgeObjectRelease(v44);
    (*(void (**)(char *, void *, __n128))(v30 + 8))(v32, v41, v46);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    uint64_t v48 = v131[6];
    uint64_t v47 = v131[7];
    unint64_t v131 = sub_6EA8(v131 + 3, v48);
    uint64_t v49 = enum case for ActivityType.failed(_:);
    uint64_t v50 = type metadata accessor for ActivityType(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 104))(v29, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v29, 0LL, 1LL, v50);
    uint64_t v52 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v53 = (uint64_t)v116;
    (*(void (**)(void))(*(void *)(v52 - 8) + 56LL))();
    uint64_t v54 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v55 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v56 = *(void *)(v55 - 8);
    uint64_t v57 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 104))(v119, v54, v55);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v57, 0LL, 1LL, v55);
    id v58 = v132;
    id v59 = [v132 mediaItems];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
      uint64_t v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v60, v61);

      if ((unint64_t)v62 >> 62)
      {
        if (v62 < 0) {
          uint64_t v101 = v62;
        }
        else {
          uint64_t v101 = v62 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v62);
        uint64_t v102 = _CocoaArrayWrapper.endIndex.getter(v101);
        swift_bridgeObjectRelease(v62);
        if (v102) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v62 & 0xC000000000000001LL) != 0)
        {
          id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v62);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v63 = *(id *)(v62 + 32);
LABEL_8:
          uint64_t v64 = v63;
          id v65 = objc_msgSend(v63, "type", swift_bridgeObjectRelease(v62).n128_f64[0]);

LABEL_23:
          uint64_t v103 = v134;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v122,  v58,  v29,  v53,  v57,  v133,  v134,  v65,  0,  v48,  v47);
          swift_bridgeObjectRelease(v103);
          sub_1F6CC(v57, &qword_2845A0);
          sub_1F6CC(v53, (uint64_t *)&unk_286BD0);
          sub_1F6CC((uint64_t)v29, &qword_2845A8);
          v135[0] = v40;
          char v136 = 1;
          swift_errorRetain(v40);
          v124(v135);
          swift_errorRelease(v40);
          sub_1F6CC((uint64_t)v135, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_34;
      }

      swift_bridgeObjectRelease(v62);
    }

    id v65 = 0LL;
    goto LABEL_23;
  }

  uint64_t v66 = *(int *)(v134 + 48);
  uint64_t v67 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v133 = *(void *)(v67 - 8);
  uint64_t v119 = *(char **)(v133 + 32);
  ((void (*)(char *, uint64_t *, uint64_t))v119)(v16, v39, v67);
  uint64_t v68 = *(void **)((char *)v39 + v66);
  *(void *)&v16[v66] = v68;
  uint64_t v113 = v34;
  uint64_t v69 = *(void (**)(char *, void, uint64_t))(v34 + 104);
  uint64_t v112 = v33;
  v69(v36, enum case for AdditionalMetricsDescription.ModuleName.amnvs(_:), v33);
  uint64_t v70 = v30;
  uint64_t v71 = v127;
  (*(void (**)(char *, void, void *))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.SourceFunction.prompt(_:),  v127);
  uint64_t v72 = v115;
  uint64_t v73 = v117;
  uint64_t v74 = v118;
  (*(void (**)(char *, void, void *))(v117 + 104))( v115,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v118);
  id v75 = v68;
  uint64_t v128 = static AdditionalMetricsDescription.encodeInfo(module:source:parameterName:statusReason:intentResolutionResult:extraInfo:)( v36,  v32,  v128,  v129,  v72,  v130,  0LL,  1LL);
  uint64_t v129 = v76;
  (*(void (**)(char *, void *))(v73 + 8))(v72, v74);
  (*(void (**)(char *, void *))(v70 + 8))(v32, v71);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v36, v112);
  uint64_t v77 = v131;
  uint64_t v78 = v131[6];
  uint64_t v116 = (char *)v131[7];
  uint64_t v117 = v78;
  uint64_t v118 = sub_6EA8(v131 + 3, v78);
  uint64_t v79 = enum case for ActivityType.resolveSlotNeedsValue(_:);
  uint64_t v80 = type metadata accessor for ActivityType(0LL);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 104))(v125, v79, v80);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v82, 0LL, 1LL, v80);
  uint64_t v83 = v133;
  uint64_t v84 = *(int *)(v134 + 48);
  uint64_t v85 = v120;
  uint64_t v86 = (uint64_t)v16;
  uint64_t v127 = *(void **)(v133 + 16);
  ((void (*)(char *, char *, uint64_t))v127)(v120, v16, v67);
  *(void *)&v85[v84] = v75;
  uint64_t v87 = v126;
  ((void (*)(char *, char *, uint64_t))v119)(v126, v85, v67);
  uint64_t v88 = *(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
  uint64_t v130 = v67;
  v88(v87, 0LL, 1LL, v67);
  uint64_t v89 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v90 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v92 = v121;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v121, v89, v90);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v92, 0LL, 1LL, v90);
  id v93 = v132;
  id v94 = [v132 mediaItems];
  uint64_t v95 = (uint64_t)v92;
  if (!v94)
  {
    uint64_t v98 = v134;
    goto LABEL_29;
  }

  uint64_t v96 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v97 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v94, v96);

  if ((unint64_t)v97 >> 62)
  {
    if (v97 < 0) {
      uint64_t v104 = v97;
    }
    else {
      uint64_t v104 = v97 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v97);
    id v94 = (id)_CocoaArrayWrapper.endIndex.getter(v104);
    swift_bridgeObjectRelease(v97);
    uint64_t v98 = v134;
    if (v94) {
      goto LABEL_12;
    }
LABEL_28:
    swift_bridgeObjectRelease(v97);
    goto LABEL_29;
  }

  id v94 = *(id *)((char *)&dword_10 + (v97 & 0xFFFFFFFFFFFFF8LL));
  uint64_t v98 = v134;
  if (!v94) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v97 & 0xC000000000000001LL) != 0)
  {
    id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v97);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v97 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_34:
      __break(1u);
      return;
    }

    id v99 = *(id *)(v97 + 32);
  }

  uint64_t v100 = v99;
  id v94 = objc_msgSend(v99, "type", swift_bridgeObjectRelease(v97).n128_f64[0]);

  uint64_t v95 = (uint64_t)v92;
LABEL_29:
  uint64_t v105 = (uint64_t)v126;
  id v106 = v93;
  uint64_t v107 = (uint64_t)v125;
  uint64_t v108 = v129;
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v122,  v106,  v125,  v126,  v95,  v128,  v129,  v94,  0,  v117,  v116);
  swift_bridgeObjectRelease(v108);
  sub_1F6CC(v95, &qword_2845A0);
  sub_1F6CC(v105, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v107, &qword_2845A8);
  sub_6EA8(v77 + 8, v77[11]);
  uint64_t v109 = *(int *)(v98 + 48);
  uint64_t v110 = (uint64_t)v114;
  uint64_t v111 = v130;
  ((void (*)(char *, uint64_t, uint64_t))v127)(v114, v86, v130);
  *(void *)(v110 + v10sub_6C3C(v0 + 9) = v75;
  sub_1761E0(v110, v75, a10, v124, v123);

  sub_1F6CC(v86, &qword_289340);
  (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v110, v111);
}

uint64_t _s18NeedsValueStrategyCMa_1()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin8AddMedia18NeedsValueStrategy);
}

uint64_t sub_17CB78@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return sub_17B4B4(a1, a2);
}

uint64_t sub_17CB8C( uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t *), uint64_t a8)
{
  return sub_17CF2C(a2, a3, a4, a6, a7, a8);
}

uint64_t sub_17CBA8( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  return sub_17BCC0(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_17CBC8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa_1();
  return NeedsValueFlowStrategy.makeRepromptOnEmptyParse(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_17CC48( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa_1();
  return NeedsValueFlowStrategy.makeRepromptOnLowConfidence(app:intent:parameterName:intentResolutionResult:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_17CCC8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = _s18NeedsValueStrategyCMa_1();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)( a1,  a2,  a3,  a4,  a5,  a6,  v15,  a8);
}

uint64_t sub_17CD38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = _s18NeedsValueStrategyCMa_1();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v16,  a9);
}

uint64_t sub_17CDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)[1]);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v14;
  uint64_t v15 = _s18NeedsValueStrategyCMa_1();
  *uint64_t v14 = v7;
  v14[1] = sub_11C64;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_17CE54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_task_alloc(async function pointer to ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)[1]);
  *(void *)(v8 + swift_weakDestroy(v0 + 16) = v16;
  uint64_t v17 = _s18NeedsValueStrategyCMa_1();
  void *v16 = v8;
  v16[1] = sub_3B08C;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(a1, a2, a3, a4, a5, a6, v17, a8);
}

uint64_t sub_17CF00(uint64_t a1, uint64_t a2)
{
  return sub_6DF0(&qword_28BE58, a2, (uint64_t (*)(uint64_t))_s18NeedsValueStrategyCMa_1, (uint64_t)&unk_2197B4);
}

uint64_t sub_17CF2C( void *a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(uint64_t *), uint64_t a6)
{
  id v305 = a4;
  uint64_t v299 = a2;
  id v298 = a1;
  uint64_t v9 = sub_6C5C(&qword_2845D8);
  __chkstk_darwin(v9);
  id v278 = (char *)&v277 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v280 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v279 = *(void *)(v280 - 8);
  __chkstk_darwin(v280);
  os_log_type_t v290 = (char *)&v277 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_28BE60);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v284 = (char *)&v277 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v277 - v15);
  os_log_type_t v307 = (void *)type metadata accessor for Parse(0LL);
  uint64_t v306 = *(v307 - 1);
  uint64_t v17 = __chkstk_darwin(v307);
  uint64_t v286 = (char *)&v277 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v300 = (void **)((char *)&v277 - v20);
  __chkstk_darwin(v19);
  uint64_t v301 = (char *)&v277 - v21;
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v277 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v292 = (char *)&v277 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v289 = (char *)&v277 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  char v291 = (char *)&v277 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  id v285 = (char *)&v277 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v287 = (char *)&v277 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  unint64_t v281 = (char *)&v277 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v288 = (char *)&v277 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  unint64_t v283 = (char *)&v277 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  id v282 = (char *)&v277 - v44;
  __chkstk_darwin(v43);
  __n128 v46 = (char *)&v277 - v45;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v295 = (uint64_t)v26;
  uint64_t v47 = sub_6960(v22, (uint64_t)qword_2969C8);
  uint64_t v48 = *(uint64_t (**)(__n128))(v23 + 16);
  uint64_t v303 = v47;
  uint64_t v304 = v48;
  ((void (*)(char *))v48)(v46);
  uint64_t v49 = swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.default.getter(v50);
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v302 = a5;
  unint64_t v293 = (void *)a3;
  if (v52)
  {
    uint64_t v297 = (void (*)(char *, uint64_t))v23;
    uint64_t v53 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v54 = swift_slowAlloc(32LL, -1LL);
    uint64_t v294 = v22;
    uint64_t v55 = v54;
    *(void *)&__int128 v317 = v54;
    uint64_t v296 = v16;
    *(_DWORD *)uint64_t v53 = 136446210;
    swift_bridgeObjectRetain(a3);
    *(void *)&__int128 v314 = sub_6978(v299, a3, (uint64_t *)&v317);
    uint64_t v16 = v296;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v314, (char *)&v314 + 8);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl(&dword_0, v50, v51, "AddMediaNeedsValueStrategy#parseResponseValue parameter: %{public}s", v53, 0xCu);
    swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v56 = v55;
    uint64_t v22 = v294;
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v53, -1LL, -1LL);

    uint64_t v57 = (uint64_t (*)(char *, uint64_t))*((void *)v297 + 1);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
    uint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
  }

  uint64_t v58 = v57(v46, v22);
  id v59 = v301;
  Input.parse.getter(v58);
  double v60 = sub_B7C84(v59, (uint64_t)&v314);
  uint64_t v61 = *(void (**)(char *, void *, double))(v306 + 8);
  v61(v59, v307, v60);
  if (v315)
  {
    sub_49B60(&v314, &v317);
    uint64_t v62 = (uint64_t)v318;
    id v63 = v319;
    sub_6EA8(&v317, (uint64_t)v318);
    uint64_t v64 = dispatch thunk of AudioIntent.playlistTitles.getter(v62, v63);
    uint64_t v65 = v64;
    uint64_t v66 = *(void *)(v64 + 16);
    uint64_t v297 = (void (*)(char *, uint64_t))v57;
    if (v66)
    {
      uint64_t v67 = *(char **)(v64 + 40);
      uint64_t v294 = *(void *)(v65 + 32);
      uint64_t v301 = v67;
      swift_bridgeObjectRetain(v67);
    }

    else
    {
      uint64_t v294 = 0LL;
      uint64_t v301 = 0LL;
    }

    uint64_t v78 = v22;
    *(void *)&double v79 = swift_bridgeObjectRelease(v65).n128_u64[0];
    id v80 = objc_msgSend(v298, "copy", v79);
    _bridgeAnyObjectToAny(_:)(&v314, v80);
    swift_unknownObjectRelease(v80);
    uint64_t v295 = sub_1641C(0LL, &qword_2858D0, &OBJC_CLASS___INAddMediaIntent_ptr);
    uint64_t v81 = swift_dynamicCast(&v313, &v314, (char *)&type metadata for Any + 8, v295, 6LL);
    if ((v81 & 1) == 0) {
      id v313 = 0LL;
    }
    uint64_t v82 = (char *)v300;
    Input.parse.getter(v81);
    uint64_t v83 = v306;
    uint64_t v84 = *(uint64_t (**)(char *, void *))(v306 + 88);
    uint64_t v85 = v307;
    int v86 = v84(v82, v307);
    int v87 = enum case for Parse.NLv3IntentPlusServerConversion(_:);
    if (v86 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      (*(void (**)(char *, void *))(v83 + 96))(v82, v85);
      uint64_t v88 = sub_6C5C(&qword_284618);
      uint64_t v89 = *(void *)&v82[*(int *)(v88 + 48)];
      uint64_t v90 = (void *)Parse.ServerConversion.siriKitIntent.getter(v88);
      uint64_t v91 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
      uint64_t v92 = swift_dynamicCastObjCClass(v90, v91);
      if (!v92)
      {

        __n128 v136 = swift_bridgeObjectRelease(v301);
        uint64_t v137 = v78;
        uint64_t v138 = v282;
        uint64_t v139 = v304(v136);
        uint64_t v140 = (os_log_s *)Logger.logObject.getter(v139);
        os_log_type_t v141 = static os_log_type_t.debug.getter();
        BOOL v142 = os_log_type_enabled(v140, v141);
        uint64_t v143 = v302;
        if (v142)
        {
          uint64_t v144 = v16;
          unint64_t v145 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v145 = 0;
          _os_log_impl( &dword_0,  v140,  v141,  "AddMediaNeedsValueStrategy#parseResponseValue Ignorning non-server-conversion parse",  v145,  2u);
          uint64_t v146 = v145;
          uint64_t v16 = v144;
          uint64_t v82 = (char *)v300;
          swift_slowDealloc(v146, -1LL, -1LL);
        }

        v297(v138, v137);
        uint64_t v147 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v148 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v149 = swift_allocError(v147, v148, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v147 - 8) + 104LL))( v150,  enum case for PlaybackCode.ceGE2(_:),  v147);
        uint64_t *v16 = v149;
        swift_storeEnumTagMultiPayload(v16, v12, 1LL);
        v143(v16);
        swift_release(v89);
        sub_1F6CC((uint64_t)v16, &qword_28BE60);
        uint64_t v151 = type metadata accessor for NLIntent(0LL);
        (*(void (**)(char *, uint64_t))(*(void *)(v151 - 8) + 8LL))(v82, v151);
        goto LABEL_98;
      }

      id v93 = (void *)v92;
      uint64_t v277 = a6;
      swift_release(v89);
      id v94 = v313;
      id v313 = v93;

      uint64_t v95 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v95 - 8) + 8LL))(v82, v95);
      uint64_t v96 = v78;
      uint64_t v97 = v293;
      uint64_t v98 = (uint64_t *)v290;
      id v99 = v292;
      uint64_t v100 = v291;
      uint64_t v101 = v301;
      uint64_t v102 = v302;
LABEL_63:
      swift_bridgeObjectRetain(v97);
      v320._countAndFlagsBits = v299;
      v320._object = v97;
      int v210 = sub_20C4FC(v320);
      if (v210 == 8)
      {
        __n128 v218 = swift_bridgeObjectRelease(v101);
        ((void (*)(char *, uint64_t, uint64_t, __n128))v304)(v99, v303, v96, v218);
        uint64_t v219 = swift_bridgeObjectRetain_n(v97, 2LL);
        unint64_t v220 = (os_log_s *)Logger.logObject.getter(v219);
        os_log_type_t v221 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v220, v221))
        {
          uint64_t v294 = v96;
          int v222 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v223 = swift_slowAlloc(32LL, -1LL);
          uint64_t v296 = v16;
          uint64_t v224 = v223;
          unint64_t v311 = (void *)v223;
          *(_DWORD *)int v222 = 136315138;
          swift_bridgeObjectRetain(v97);
          uint64_t v308 = sub_6978(v299, (unint64_t)v97, (uint64_t *)&v311);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v308, v309);
          swift_bridgeObjectRelease_n(v97, 3LL);
          _os_log_impl( &dword_0,  v220,  v221,  "AddMediaNeedsValueStrategy#parseConfirmationResponse unexpected parameter: %s",  v222,  0xCu);
          swift_arrayDestroy(v224, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v225 = v224;
          uint64_t v16 = v296;
          swift_slowDealloc(v225, -1LL, -1LL);
          swift_slowDealloc(v222, -1LL, -1LL);

          uint64_t v226 = v99;
          uint64_t v227 = v294;
        }

        else
        {

          swift_bridgeObjectRelease_n(v97, 2LL);
          uint64_t v226 = v99;
          uint64_t v227 = v96;
        }

        v297(v226, v227);
        uint64_t v249 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v250 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v251 = swift_allocError(v249, v250, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v249 - 8) + 104LL))( v252,  enum case for PlaybackCode.ceGE5(_:),  v249);
        uint64_t *v16 = v251;
        swift_storeEnumTagMultiPayload(v16, v12, 1LL);
        v102(v16);
      }

      else
      {
        if (v210 == 1)
        {
          uint64_t v228 = v294;
          if (!v101) {
            uint64_t v228 = 0LL;
          }
          unint64_t v229 = 0xE000000000000000LL;
          if (v101) {
            unint64_t v229 = (unint64_t)v101;
          }
          *uint64_t v98 = v228;
          v98[1] = v229;
          uint64_t v230 = v279;
          uint64_t v231 = v280;
          (*(void (**)(uint64_t *, void, uint64_t))(v279 + 104))( v98,  enum case for INMediaDestination.playlist(_:),  v280);
          uint64_t v315 = (void *)v231;
          id v232 = sub_10974(&v314);
          uint64_t v233 = *(void (**)(char *, uint64_t *, uint64_t))(v230 + 16);
          v233((char *)v232, v98, v231);
          id v234 = v313;
          uint64_t v211 = v277;
          if (v313)
          {
            uint64_t v235 = v230;
            uint64_t v236 = (uint64_t)v278;
            v233(v278, v98, v231);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v235 + 56))(v236, 0LL, 1LL, v231);
            id v237 = v234;
            sub_67FA8(v236);

            sub_1F6CC(v236, &qword_2845D8);
            (*(void (**)(uint64_t *, uint64_t))(v235 + 8))(v98, v231);
          }

          else
          {
            (*(void (**)(uint64_t *, uint64_t))(v230 + 8))(v98, v231);
          }

          uint64_t v213 = v289;
          goto LABEL_90;
        }

        uint64_t v211 = v277;
        if (!v210)
        {
          *(void *)&double v212 = swift_bridgeObjectRelease(v101).n128_u64[0];
          uint64_t v213 = v289;
          if (v313 && (id v214 = objc_msgSend(v313, "mediaItems", v212)) != 0)
          {
            unint64_t v215 = v214;
            uint64_t v216 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
            BOOL v217 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v215, v216);

            uint64_t v312 = sub_6C5C(&qword_2848D0);
            if (v217)
            {
LABEL_82:
              unint64_t v311 = v217;
              sub_45F6C((uint64_t)&v311, (uint64_t)&v314, &qword_284028);
LABEL_90:
              ((void (*)(char *, uint64_t, uint64_t))v304)(v213, v303, v96);
              uint64_t v259 = sub_FF10((uint64_t)&v314, (uint64_t)&v311, &qword_284028);
              uint64_t v260 = (os_log_s *)Logger.logObject.getter(v259);
              os_log_type_t v261 = static os_log_type_t.default.getter(v260);
              if (os_log_type_enabled(v260, v261))
              {
                uint64_t v294 = v96;
                id v262 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
                uint64_t v263 = swift_slowAlloc(32LL, -1LL);
                uint64_t v310 = v263;
                *(_DWORD *)id v262 = 136446210;
                uint64_t v277 = v211;
                sub_FF10((uint64_t)&v311, (uint64_t)&v308, &qword_284028);
                uint64_t v264 = sub_6C5C(&qword_284028);
                uint64_t v265 = String.init<A>(describing:)(&v308, v264);
                uint64_t v266 = v12;
                unint64_t v268 = v267;
                uint64_t v308 = sub_6978(v265, v267, &v310);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v308, v309);
                unint64_t v269 = v268;
                uint64_t v12 = v266;
                swift_bridgeObjectRelease(v269);
                sub_1F6CC((uint64_t)&v311, &qword_284028);
                _os_log_impl( &dword_0,  v260,  v261,  "AddMediaNeedsValueStrategy#parseResponseValue returning with: %{public}s",  v262,  0xCu);
                swift_arrayDestroy(v263, 1LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v263, -1LL, -1LL);
                swift_slowDealloc(v262, -1LL, -1LL);

                os_log_type_t v270 = v289;
                uint64_t v271 = v294;
              }

              else
              {
                sub_1F6CC((uint64_t)&v311, &qword_284028);

                os_log_type_t v270 = v213;
                uint64_t v271 = v96;
              }

              v297(v270, v271);
              sub_FF10((uint64_t)&v314, (uint64_t)&v311, &qword_284028);
              id v272 = v313;
              if (v313)
              {
                id v273 = v313;
              }

              else
              {
                id v273 = v298;
                id v272 = 0LL;
              }

              id v274 = v272;
              uint64_t v275 = (uint64_t)v284;
              IntentPromptAnswer.init(answeredValue:updatedIntent:)(&v311, v273, v295);
              uint64_t v276 = sub_6C5C(&qword_28BE68);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v276 - 8) + 56LL))( v275,  0LL,  1LL,  v276);
              swift_storeEnumTagMultiPayload(v275, v12, 0LL);
              v102((uint64_t *)v275);
              sub_1F6CC(v275, &qword_28BE60);
              char v257 = &qword_284028;
              uint64_t v258 = &v314;
              goto LABEL_97;
            }
          }

          else
          {
            uint64_t v312 = sub_6C5C(&qword_2848D0);
          }

          BOOL v217 = _swiftEmptyArrayStorage;
          goto LABEL_82;
        }

        __n128 v238 = swift_bridgeObjectRelease(v101);
        ((void (*)(char *, uint64_t, uint64_t, __n128))v304)(v100, v303, v96, v238);
        uint64_t v239 = swift_bridgeObjectRetain_n(v97, 2LL);
        uint64_t v240 = v100;
        uint64_t v241 = (os_log_s *)Logger.logObject.getter(v239);
        os_log_type_t v242 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v241, v242))
        {
          uint64_t v294 = v96;
          os_log_type_t v243 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v244 = swift_slowAlloc(32LL, -1LL);
          uint64_t v296 = v16;
          uint64_t v245 = v244;
          unint64_t v311 = (void *)v244;
          *(_DWORD *)os_log_type_t v243 = 136315138;
          swift_bridgeObjectRetain(v97);
          uint64_t v308 = sub_6978(v299, (unint64_t)v97, (uint64_t *)&v311);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v308, v309);
          swift_bridgeObjectRelease_n(v97, 3LL);
          _os_log_impl( &dword_0,  v241,  v242,  "AddMediaNeedsValueStrategy#parseResponseValue Unexpected parameter:%s",  v243,  0xCu);
          swift_arrayDestroy(v245, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v246 = v245;
          uint64_t v16 = v296;
          swift_slowDealloc(v246, -1LL, -1LL);
          swift_slowDealloc(v243, -1LL, -1LL);

          id v247 = v240;
          uint64_t v248 = v294;
        }

        else
        {

          swift_bridgeObjectRelease_n(v97, 2LL);
          id v247 = v100;
          uint64_t v248 = v96;
        }

        v297(v247, v248);
        uint64_t v253 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v254 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v255 = swift_allocError(v253, v254, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v253 - 8) + 104LL))( v256,  enum case for PlaybackCode.ceGE6(_:),  v253);
        uint64_t *v16 = v255;
        swift_storeEnumTagMultiPayload(v16, v12, 1LL);
        v302(v16);
      }

LABEL_87:
      char v257 = &qword_28BE60;
      uint64_t v258 = (__int128 *)v16;
LABEL_97:
      sub_1F6CC((uint64_t)v258, v257);
LABEL_98:

      return sub_6C3C(&v317);
    }

    int v103 = enum case for Parse.pommesResponse(_:);
    if (v86 == enum case for Parse.pommesResponse(_:))
    {
      uint64_t v104 = v300;
      (*(void (**)(void **, void *))(v306 + 96))(v300, v85);
      uint64_t v105 = *v104;
      uint64_t v106 = sub_10470();
      if (!v106)
      {
        __n128 v167 = swift_bridgeObjectRelease(v301);
        uint64_t v168 = v281;
        uint64_t v169 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v304)(v281, v303, v78, v167);
        uint64_t v170 = (os_log_s *)Logger.logObject.getter(v169);
        os_log_type_t v171 = static os_log_type_t.error.getter();
        BOOL v172 = os_log_type_enabled(v170, v171);
        uint64_t v173 = v302;
        if (v172)
        {
          uint64_t v174 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v174 = 0;
          _os_log_impl( &dword_0,  v170,  v171,  "AddMediaNeedsValueStrategy#parseResponseValue pommesResponse contains no AudioExperience",  v174,  2u);
          uint64_t v175 = v174;
          uint64_t v168 = v281;
          swift_slowDealloc(v175, -1LL, -1LL);
        }

        v297(v168, v78);
        uint64_t v176 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v177 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v178 = swift_allocError(v176, v177, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v176 - 8) + 104LL))( v179,  enum case for PlaybackCode.ceGE3(_:),  v176);
        uint64_t *v16 = v178;
        swift_storeEnumTagMultiPayload(v16, v12, 1LL);
        v173(v16);

        goto LABEL_87;
      }

      uint64_t v107 = (uint8_t *)v106;
      uint64_t v296 = v16;
      uint64_t v306 = v12;
      uint64_t v108 = v318;
      uint64_t v109 = v319;
      uint64_t v110 = sub_6EA8(&v317, (uint64_t)v318);
      uint64_t v315 = v108;
      uint64_t v316 = v109;
      uint64_t v111 = sub_10974(&v314);
      (*(void (**)(void *, void *, void *))(*(v108 - 1) + 16LL))(v111, v110, v108);
      id v112 = sub_142D4C((uint64_t)v111, 0LL, 0LL, v108, v109);
      sub_6C3C(&v314);
      type metadata accessor for AudioPluginProcessor(0LL);
      uint64_t v113 = AudioPluginProcessor.__allocating_init()();
      id v305 = v105;
      uint64_t v114 = dispatch thunk of PommesResponse.clientResults.getter();
      uint64_t v115 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v107, v114);
      swift_release(v113);
      swift_bridgeObjectRelease(v114);
      uint64_t v287 = (char *)v115;
      id v116 = sub_1C6FCC(v107);
      uint64_t v117 = v283;
      uint64_t v96 = v78;
      ((void (*)(char *, uint64_t, uint64_t))v304)(v283, v303, v78);
      uint64_t v118 = v116;
      uint64_t v119 = (os_log_s *)Logger.logObject.getter(v118);
      os_log_type_t v120 = static os_log_type_t.debug.getter();
      BOOL v121 = os_log_type_enabled(v119, v120);
      os_log_type_t v307 = v118;
      uint64_t v277 = a6;
      uint64_t v300 = (void **)v107;
      if (v121)
      {
        uint64_t v122 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v123 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v122 = 138412290;
        *(void *)&__int128 v314 = v307;
        uint64_t v124 = v307;
        uint64_t v118 = v307;
        uint64_t v96 = v78;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v314, (char *)&v314 + 8);
        *uint64_t v123 = v118;

        _os_log_impl( &dword_0,  v119,  v120,  "AddMediaNeedsValueStrategy#parseResponseValue Updating privateAddMediaIntentData with: %@",  v122,  0xCu);
        uint64_t v125 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v123, 1LL, v125);
        swift_slowDealloc(v123, -1LL, -1LL);
        uint64_t v126 = v122;
        uint64_t v117 = v283;
        swift_slowDealloc(v126, -1LL, -1LL);
      }

      else
      {

        uint64_t v119 = (os_log_s *)v118;
      }

      v297(v117, v96);
      if (v313)
      {
        id v180 = v313;
        id v181 = [v180 backingStore];
        uint64_t v182 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
        uint64_t v183 = swift_dynamicCastObjCClass(v181, v182);
        if (v183)
        {
          uint64_t v184 = (void *)v183;
          id v185 = (id)INIntentSlotValueTransformToPrivateAddMediaIntentData(v118);
          [v184 setPrivateAddMediaIntentData:v185];

          id v180 = v181;
          id v181 = v185;
        }
      }

      ((void (*)(char *, uint64_t, uint64_t))v304)(v288, v303, v96);
      id v186 = v112;
      uint64_t v187 = (os_log_s *)Logger.logObject.getter(v186);
      os_log_type_t v188 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v187, v188))
      {
        uint64_t v189 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v190 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v189 = 138412290;
        *(void *)&__int128 v314 = v186;
        id v191 = v186;
        uint64_t v96 = v78;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v314, (char *)&v314 + 8);
        void *v190 = v186;

        _os_log_impl( &dword_0,  v187,  v188,  "AddMediaNeedsValueStrategy#parseResponseValue Updating media search with: %@",  v189,  0xCu);
        uint64_t v192 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v190, 1LL, v192);
        swift_slowDealloc(v190, -1LL, -1LL);
        swift_slowDealloc(v189, -1LL, -1LL);
      }

      else
      {

        uint64_t v187 = (os_log_s *)v186;
      }

      uint64_t v102 = v302;
      uint64_t v12 = v306;
      uint64_t v16 = v296;

      v297(v288, v96);
      id v193 = v313;
      if (!v313)
      {

        swift_release(v287);
LABEL_59:
        uint64_t v97 = v293;
        uint64_t v98 = (uint64_t *)v290;
LABEL_62:
        id v99 = v292;
        uint64_t v100 = v291;
        uint64_t v101 = v301;
        goto LABEL_63;
      }

      uint64_t v194 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      if (swift_dynamicCastObjCClass(v193, v194))
      {
        id v195 = v186;
        id v196 = v193;
        id v197 = [v196 backingStore];
        uint64_t v198 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        uint64_t v199 = swift_dynamicCastObjCClass(v197, v198);
        if (v199) {
          goto LABEL_58;
        }
      }

      else
      {
        uint64_t v200 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
        if (swift_dynamicCastObjCClass(v193, v200))
        {
          id v195 = v186;
          id v196 = v193;
          id v197 = [v196 backingStore];
          uint64_t v201 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
          uint64_t v199 = swift_dynamicCastObjCClass(v197, v201);
          if (v199) {
            goto LABEL_58;
          }
        }

        else
        {
          uint64_t v202 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
          if (swift_dynamicCastObjCClass(v193, v202))
          {
            id v195 = v186;
            id v196 = v193;
            id v197 = [v196 backingStore];
            uint64_t v203 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
            uint64_t v199 = swift_dynamicCastObjCClass(v197, v203);
            if (v199) {
              goto LABEL_58;
            }
          }

          else
          {
            uint64_t v204 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
            uint64_t v205 = swift_dynamicCastObjCClass(v193, v204);
            id v195 = v186;
            id v206 = v193;
            if (!v205)
            {
              uint64_t v98 = (uint64_t *)v290;
              id v197 = v307;
              goto LABEL_61;
            }

            id v196 = v206;
            id v197 = [v206 backingStore];
            uint64_t v207 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
            uint64_t v199 = swift_dynamicCastObjCClass(v197, v207);
            if (v199)
            {
LABEL_58:
              id v208 = (void *)v199;
              id v209 = (id)INIntentSlotValueTransformToMediaSearch(v195);
              [v208 setMediaSearch:v209];

              swift_release(v287);
              uint64_t v16 = v296;
              uint64_t v96 = v78;
              goto LABEL_59;
            }
          }
        }
      }

      uint64_t v96 = v78;
      uint64_t v98 = (uint64_t *)v290;

      id v195 = v307;
LABEL_61:

      swift_release(v287);
      uint64_t v16 = v296;
      uint64_t v97 = v293;
      goto LABEL_62;
    }

    swift_bridgeObjectRelease(v301);
    uint64_t v127 = v286;
    Input.parse.getter(v128);
    uint64_t v129 = v307;
    int v130 = v84(v127, v307);
    if (v130 == v87)
    {
      (*(void (**)(char *, void *))(v306 + 96))(v127, v129);
      uint64_t v131 = sub_6C5C(&qword_284618);
      swift_release(*(void *)&v127[*(int *)(v131 + 48)]);
      uint64_t v132 = type metadata accessor for NLIntent(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v132 - 8) + 8LL))(v127, v132);
      uint64_t v133 = v78;
      uint64_t v134 = v297;
      uint64_t v135 = v285;
    }

    else
    {
      int v152 = v130;
      ((void (*)(char *, void *))v61)(v127, v129);
      uint64_t v133 = v78;
      uint64_t v134 = v297;
      uint64_t v135 = v285;
      if (v152 != v103)
      {
LABEL_31:
        uint64_t v159 = ((uint64_t (*)(char *, uint64_t, uint64_t))v304)(v135, v303, v133);
        uint64_t v160 = (os_log_s *)Logger.logObject.getter(v159);
        os_log_type_t v161 = static os_log_type_t.default.getter(v160);
        if (os_log_type_enabled(v160, v161))
        {
          uint64_t v162 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v162 = 0;
          _os_log_impl( &dword_0,  v160,  v161,  "AddMediaNeedsValueStrategy#parseResponseValue intent not of right type",  v162,  2u);
          swift_slowDealloc(v162, -1LL, -1LL);
        }

        v134(v135, v133);
        uint64_t v163 = type metadata accessor for PlaybackCode(0LL);
        uint64_t v164 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
        uint64_t v165 = swift_allocError(v163, v164, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v163 - 8) + 104LL))( v166,  enum case for PlaybackCode.ceGE4(_:),  v163);
        uint64_t *v16 = v165;
        swift_storeEnumTagMultiPayload(v16, v12, 1LL);
        v302(v16);
        sub_1F6CC((uint64_t)v16, &qword_28BE60);
        ((void (*)(void **, void *))v61)(v300, v307);
        goto LABEL_98;
      }
    }

    uint64_t v153 = v287;
    uint64_t v154 = ((uint64_t (*)(char *, uint64_t, uint64_t))v304)(v287, v303, v133);
    uint64_t v155 = (os_log_s *)Logger.logObject.getter(v154);
    os_log_type_t v156 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v155, v156))
    {
      uint64_t v157 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v157 = 0;
      _os_log_impl( &dword_0,  v155,  v156,  "AddMediaNeedsValueStrategy#parseResponseValue and AddMediaNeedsValueStrategy#actionForInput parse handling need to be the same!",  v157,  2u);
      uint64_t v158 = v157;
      uint64_t v153 = v287;
      swift_slowDealloc(v158, -1LL, -1LL);
    }

    v134(v153, v133);
    goto LABEL_31;
  }

  sub_1F6CC((uint64_t)&v314, &qword_2848C0);
  uint64_t v68 = v295;
  uint64_t v69 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v304)(v295, v303, v22);
  uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
  os_log_type_t v71 = static os_log_type_t.default.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v72 = 0;
    _os_log_impl( &dword_0,  v70,  v71,  "AddMediaNeedsValueStrategy#parseResponseValue received invalid NL intent",  v72,  2u);
    swift_slowDealloc(v72, -1LL, -1LL);
  }

  v57((char *)v68, v22);
  uint64_t v73 = type metadata accessor for PlaybackCode(0LL);
  uint64_t v74 = sub_6DF0( &qword_2845E8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaybackCode,  (uint64_t)&protocol conformance descriptor for PlaybackCode);
  uint64_t v75 = swift_allocError(v73, v74, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v73 - 8) + 104LL))( v76,  enum case for PlaybackCode.ceGE1(_:),  v73);
  uint64_t *v16 = v75;
  swift_storeEnumTagMultiPayload(v16, v12, 1LL);
  v302(v16);
  return sub_1F6CC((uint64_t)v16, &qword_28BE60);
}

uint64_t sub_17EDF4()
{
  uint64_t v1 = *(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 80) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 72));
  uint64_t v5 = type metadata accessor for NLContextUpdate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_17EEBC(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_6C5C((uint64_t *)&unk_286C50) - 8) + 80LL);
  sub_17C050( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void **)(v1 + 56),  *(void (**)(uint64_t *))(v1 + 64),  *(void *)(v1 + 72),  v1 + ((v3 + 80) & ~v3));
}

uint64_t GuardedFlow.State.rawValue.getter(char a1)
{
  if (!a1) {
    return 0xD000000000000010LL;
  }
  if (a1 == 1) {
    return 0x456F547964616572LL;
  }
  return 0x6574656C706D6F63LL;
}

uint64_t sub_17EF8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1423F4(*a1, *a2);
}

Swift::Int sub_17EF98()
{
  int v1 = *v0;
  Hasher.init(_seed:)(v7, 0LL);
  unint64_t v2 = 0xEE00657475636578LL;
  uint64_t v3 = 0x456F547964616572LL;
  if (v1 != 1)
  {
    uint64_t v3 = 0x6574656C706D6F63LL;
    unint64_t v2 = 0xE900000000000064LL;
  }

  if (v1) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = 0xD000000000000010LL;
  }
  if (v1) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = 0x800000000021CFF0LL;
  }
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_17F04C(uint64_t a1)
{
  unint64_t v2 = 0xEE00657475636578LL;
  uint64_t v3 = 0x456F547964616572LL;
  if (*v1 != 1)
  {
    uint64_t v3 = 0x6574656C706D6F63LL;
    unint64_t v2 = 0xE900000000000064LL;
  }

  if (*v1) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = 0xD000000000000010LL;
  }
  if (*v1) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = 0x800000000021CFF0LL;
  }
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_17F0DC(uint64_t a1)
{
  int v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  unint64_t v3 = 0xEE00657475636578LL;
  uint64_t v4 = 0x456F547964616572LL;
  if (v2 != 1)
  {
    uint64_t v4 = 0x6574656C706D6F63LL;
    unint64_t v3 = 0xE900000000000064LL;
  }

  if (v2) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = 0xD000000000000010LL;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0x800000000021CFF0LL;
  }
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_17F18C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = _s23AudioFlowDelegatePlugin07GuardedB0C5StateO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_17F1B8(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x800000000021CFF0LL;
  unint64_t v4 = 0xEE00657475636578LL;
  uint64_t v5 = 0x456F547964616572LL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6574656C706D6F63LL;
    unint64_t v4 = 0xE900000000000064LL;
  }

  BOOL v6 = v2 == 0;
  if (*v1) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xD000000000000010LL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_17F230(char a1)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - v8;
  if ((a1 & 1) == 0)
  {
    *(_BYTE *)(v1 + 2sub_6C3C(v0 + 4) = 1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v10 = sub_6960(v3, (uint64_t)qword_2969C8);
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v10, v3);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.info.getter(v12);
    if (!os_log_type_enabled(v12, v13))
    {
      uint64_t v9 = v7;
      goto LABEL_12;
    }

    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "GuardedFlow#processGuardFlowExitValue called the callback", v14, 2u);
    uint64_t v9 = v7;
    goto LABEL_10;
  }

  *(_BYTE *)(v1 + 2sub_6C3C(v0 + 4) = 2;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v15, v3);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v17 = static os_log_type_t.info.getter(v12);
  if (os_log_type_enabled(v12, v17))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v17, "GuardedFlow#processGuardFlowExitValue returned a fail result", v14, 2u);
LABEL_10:
    swift_slowDealloc(v14, -1LL, -1LL);
  }

uint64_t GuardedFlow.execute()(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  void v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_17F4B4, 0LL, 0LL);
}

uint64_t sub_17F4B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  if (*(_BYTE *)(v2 + 24))
  {
    if (*(_BYTE *)(v2 + 24) == 1) {
      static ExecuteResponse.complete(next:)(*(void *)(v2 + 16));
    }
    else {
      static ExecuteResponse.complete()(a1);
    }
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v4 = *(void *)(v1 + 48);
    uint64_t v3 = *(void *)(v1 + 56);
    uint64_t v5 = *(void *)(v1 + 40);
    uint64_t v6 = sub_6960(v5, (uint64_t)qword_2969C8);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.info.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "GuardedFlow#execute executing flow with guards", v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    uint64_t v12 = *(void *)(v1 + 48);
    uint64_t v11 = *(void *)(v1 + 56);
    uint64_t v14 = *(void *)(v1 + 32);
    uint64_t v13 = *(void *)(v1 + 40);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    uint64_t v15 = static CommonGuardFlowUtils.makeGuardFlow(withGuards:)(*(void *)(v14 + 32));
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = v15;
    uint64_t v16 = swift_allocObject(&unk_272A90, 32LL, 7LL);
    *(void *)(v16 + swift_weakDestroy(v0 + 16) = sub_17F978;
    *(void *)(v16 + 2sub_6C3C(v0 + 4) = v14;
    uint64_t v17 = type metadata accessor for GuardFlow(0LL);
    swift_retain(v14);
    static ExecuteResponse.ongoing<A>(next:childCompletion:)( v1 + 16,  sub_CF294,  v16,  v17,  &protocol witness table for GuardFlow);
    swift_release(v16);
    swift_release(v15);
  }

  swift_task_dealloc(*(void *)(v1 + 56));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t GuardedFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GuardedFlow();
  unint64_t v5 = sub_17F9C4();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v4, v5);
}

uint64_t GuardedFlow.deinit()
{
  return v0;
}

uint64_t GuardedFlow.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t sub_17F730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for GuardedFlow();
  return Flow.deferToExecuteAsync(_:)(a1, a2, v7, a4);
}

uint64_t sub_17F788(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_28BE74);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_11C64;
  return GuardedFlow.execute()(a1);
}

uint64_t sub_17F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GuardedFlow();
  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t _s23AudioFlowDelegatePlugin07GuardedB0C5StateO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26B250, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return 3LL;
  }
  else {
    return v3;
  }
}

uint64_t _s23AudioFlowDelegatePlugin07GuardedB0C2on5inputSb07SiriKitB05InputV_tF_0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v4 = sub_6960(v0, (uint64_t)qword_2969C8);
  uint64_t v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.info.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "GuardedFlow#on", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 1LL;
}

uint64_t sub_17F978(char a1)
{
  return sub_17F230(a1 & 1);
}

uint64_t sub_17F980()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for GuardedFlow()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin11GuardedFlow);
}

unint64_t sub_17F9C4()
{
  unint64_t result = qword_289EA0;
  if (!qword_289EA0)
  {
    uint64_t v1 = type metadata accessor for GuardedFlow();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for GuardedFlow, v1);
    atomic_store(result, (unint64_t *)&qword_289EA0);
  }

  return result;
}

unint64_t sub_17FA0C()
{
  unint64_t result = qword_28BE78[0];
  if (!qword_28BE78[0])
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for GuardedFlow.State,  &type metadata for GuardedFlow.State);
    atomic_store(result, qword_28BE78);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for GuardedFlow.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t storeEnumTagSinglePayload for GuardedFlow.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(vsub_6C3C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_6C3C(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_17FB2C + 4 * byte_219865[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_17FB60 + 4 * byte_219860[v4]))();
}

uint64_t sub_17FB60(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_17FB68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x17FB70LL);
  }
  return result;
}

uint64_t sub_17FB7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x17FB84LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_17FB88(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_17FB90(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GuardedFlow.State()
{
  return &type metadata for GuardedFlow.State;
}

id sub_17FBAC(uint8_t *a1, void *a2)
{
  id v3 = v2;
  id v121 = a2;
  uint64_t v5 = type metadata accessor for Siri_Nlu_External_UserDialogAct(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845D0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for AudioUsoIntent(0LL);
  uint64_t v122 = a1;
  ((void (*)(void))Experience.userDialogAct.getter)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0LL, 1LL, v5);
  uint64_t v16 = AudioUsoIntent.__allocating_init(userDialogAct:)(v15);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = (void *)sub_5B3C8(v16, 0LL, 0LL);
    uint64_t v19 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    if (swift_dynamicCastObjCClass(v3, v19))
    {
      id v20 = [v3 backingStore];
      uint64_t v21 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v22 = swift_dynamicCastObjCClass(v20, v21);
      if (v22)
      {
        uint64_t v23 = (void *)v22;
        id v24 = v3;
        id v25 = (id)INIntentSlotValueTransformToMediaSearch(v18);
        [v23 setMediaSearch:v25];

        uint64_t v18 = v20;
        id v20 = v25;
        id v3 = v24;
      }

      type metadata accessor for AudioPluginProcessor(0LL);
      uint64_t v26 = AudioPluginProcessor.__allocating_init()();
      uint64_t v27 = v122;
      uint64_t v28 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v122, v121);
      uint64_t v29 = swift_release(v26);
      uint64_t v30 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter(v29);
      unint64_t v32 = v31;
      uint64_t v33 = AudioExperience.systemExtensionBundleID.getter();
      unint64_t v35 = v34;
      id v36 = sub_1941C(v30, v32, v33, v34);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v35);
      id v37 = [v3 backingStore];
      uint64_t v38 = &OBJC_CLASS____INPBPlayMediaIntent;
    }

    else
    {
      uint64_t v51 = objc_opt_self(&OBJC_CLASS___INAddMediaIntent);
      if (swift_dynamicCastObjCClass(v3, v51))
      {
        id v52 = [v3 backingStore];
        uint64_t v53 = objc_opt_self(&OBJC_CLASS____INPBAddMediaIntent);
        uint64_t v54 = swift_dynamicCastObjCClass(v52, v53);
        if (v54)
        {
          uint64_t v55 = (void *)v54;
          id v56 = v3;
          id v57 = (id)INIntentSlotValueTransformToMediaSearch(v18);
          [v55 setMediaSearch:v57];

          uint64_t v18 = v52;
          id v52 = v57;
          id v3 = v56;
        }

        type metadata accessor for AudioPluginProcessor(0LL);
        uint64_t v58 = AudioPluginProcessor.__allocating_init()();
        uint64_t v27 = v122;
        uint64_t v28 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v122, v121);
        uint64_t v59 = swift_release(v58);
        double v60 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter(v59);
        unint64_t v62 = v61;
        uint64_t v63 = AudioExperience.systemExtensionBundleID.getter();
        unint64_t v65 = v64;
        id v36 = sub_1941C(v60, v62, v63, v64);
        swift_bridgeObjectRelease(v62);
        swift_bridgeObjectRelease(v65);
        id v37 = [v3 backingStore];
        uint64_t v38 = &OBJC_CLASS____INPBAddMediaIntent;
      }

      else
      {
        uint64_t v67 = objc_opt_self(&OBJC_CLASS___INUpdateMediaAffinityIntent);
        if (swift_dynamicCastObjCClass(v3, v67))
        {
          id v68 = [v3 backingStore];
          uint64_t v69 = objc_opt_self(&OBJC_CLASS____INPBUpdateMediaAffinityIntent);
          uint64_t v70 = swift_dynamicCastObjCClass(v68, v69);
          if (v70)
          {
            os_log_type_t v71 = (void *)v70;
            id v72 = v3;
            id v73 = (id)INIntentSlotValueTransformToMediaSearch(v18);
            [v71 setMediaSearch:v73];

            uint64_t v18 = v68;
            id v68 = v73;
            id v3 = v72;
          }

          type metadata accessor for AudioPluginProcessor(0LL);
          uint64_t v74 = AudioPluginProcessor.__allocating_init()();
          uint64_t v27 = v122;
          uint64_t v28 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v122, v121);
          uint64_t v75 = swift_release(v74);
          uint64_t v76 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter(v75);
          unint64_t v78 = v77;
          uint64_t v79 = AudioExperience.systemExtensionBundleID.getter();
          unint64_t v81 = v80;
          id v36 = sub_1941C(v76, v78, v79, v80);
          swift_bridgeObjectRelease(v78);
          swift_bridgeObjectRelease(v81);
          id v37 = [v3 backingStore];
          uint64_t v38 = &OBJC_CLASS____INPBUpdateMediaAffinityIntent;
        }

        else
        {
          uint64_t v82 = objc_opt_self(&OBJC_CLASS___INSearchForMediaIntent);
          if (!swift_dynamicCastObjCClass(v3, v82))
          {

            type metadata accessor for AudioPluginProcessor(0LL);
            uint64_t v108 = AudioPluginProcessor.__allocating_init()();
            uint64_t v109 = v122;
            uint64_t v28 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v122, v121);
            uint64_t v110 = swift_release(v108);
            uint64_t v111 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter(v110);
            unint64_t v113 = v112;
            uint64_t v114 = AudioExperience.systemExtensionBundleID.getter();
            id v115 = v3;
            unint64_t v117 = v116;
            id v99 = sub_1941C(v111, v113, v114, v116);
            swift_bridgeObjectRelease(v113);
            unint64_t v118 = v117;
            id v3 = v115;
            uint64_t v27 = v109;
            swift_bridgeObjectRelease(v118);
LABEL_27:

            id v100 = sub_1C6830(v27);
            id v101 = [v3 backingStore];
            uint64_t v102 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
            uint64_t v103 = swift_dynamicCastObjCClass(v101, v102);
            if (v103)
            {
              uint64_t v104 = (void *)v103;
              id v105 = (id)INIntentSlotValueTransformToPrivateSearchForMediaIntentData(v100);
              [v104 setPrivateSearchForMediaIntentData:v105];
            }

            else
            {
            }

            id v106 = v3;
            swift_release(v17);
            swift_release(v28);
            return v3;
          }

          id v83 = [v3 backingStore];
          uint64_t v84 = objc_opt_self(&OBJC_CLASS____INPBSearchForMediaIntent);
          uint64_t v85 = swift_dynamicCastObjCClass(v83, v84);
          if (v85)
          {
            int v86 = (void *)v85;
            id v87 = v3;
            id v88 = (id)INIntentSlotValueTransformToMediaSearch(v18);
            [v86 setMediaSearch:v88];

            uint64_t v18 = v83;
            id v83 = v88;
            id v3 = v87;
          }

          id v89 = v121;

          type metadata accessor for AudioPluginProcessor(0LL);
          uint64_t v90 = AudioPluginProcessor.__allocating_init()();
          uint64_t v27 = v122;
          uint64_t v28 = dispatch thunk of AudioPluginProcessor.process(with:clientResults:)(v122, v89);
          uint64_t v91 = swift_release(v90);
          uint64_t v92 = (void (*)(char *, uint64_t))AudioExperience.launchID.getter(v91);
          unint64_t v94 = v93;
          uint64_t v95 = AudioExperience.systemExtensionBundleID.getter();
          unint64_t v97 = v96;
          id v36 = sub_1941C(v92, v94, v95, v96);
          swift_bridgeObjectRelease(v94);
          swift_bridgeObjectRelease(v97);
          id v37 = [v3 backingStore];
          uint64_t v38 = &OBJC_CLASS____INPBSearchForMediaIntent;
        }
      }
    }

    uint64_t v98 = objc_opt_self(v38);
    id v99 = (id)swift_dynamicCastObjCClass(v37, v98);
    if (!v99) {

    }
    [v99 setIntentMetadata:v36];
    goto LABEL_27;
  }

  id v121 = v3;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = sub_6960(v9, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v39, v9);
  uint64_t v40 = v122;
  uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v44 = (uint8_t *)swift_slowAlloc(32LL, -1LL);
    uint64_t v122 = v44;
    uint64_t v124 = v44;
    os_log_type_t v120 = v43;
    *(_DWORD *)uint64_t v43 = 136315138;
    uint64_t v119 = v43 + 4;
    Experience.userDialogAct.getter(v44);
    uint64_t v45 = String.init<A>(describing:)(v8, v5);
    unint64_t v47 = v46;
    uint64_t v123 = sub_6978(v45, v46, (uint64_t *)&v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124);

    swift_bridgeObjectRelease(v47);
    os_log_type_t v48 = v42;
    uint64_t v49 = v120;
    _os_log_impl( &dword_0,  v41,  v48,  "INSearchForMediaIntent#amend unable to construct AudioUsoIntent from userDialogAct: %s",  v120,  0xCu);
    uint64_t v50 = v122;
    swift_arrayDestroy(v122, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  else
  {
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v3 = v121;
  id v66 = v121;
  return v3;
}

id sub_18048C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v61[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v61[-1] - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v61[-1] - v11;
  id result = [v1 privatePlayMediaIntentData];
  if (!result) {
    return result;
  }
  uint64_t v14 = result;
  id v15 = [result internalSignals];

  if (!v15) {
    return 0LL;
  }
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);

  id v17 = [v1 mediaItems];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0) {
        uint64_t v29 = v20;
      }
      else {
        uint64_t v29 = v20 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v20);
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v20);
      if (v30) {
        goto LABEL_6;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8LL)))
    {
LABEL_6:
      if ((v20 & 0xC000000000000001LL) != 0)
      {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v20);
      }

      else
      {
        if (!*(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8LL)))
        {
          __break(1u);
          goto LABEL_46;
        }

        id v21 = *(id *)(v20 + 32);
      }

      uint64_t v22 = v21;
      swift_bridgeObjectRelease(v20);
      Swift::Bool v23 = INMediaItem.isLibrary()();

      if (v23)
      {
        swift_bridgeObjectRelease(v16);
        if (qword_283888 == -1)
        {
LABEL_11:
          uint64_t v24 = sub_6960(v3, (uint64_t)qword_2969C8);
          uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, v24, v3);
          uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
          os_log_type_t v27 = static os_log_type_t.info.getter(v26);
          if (os_log_type_enabled(v26, v27))
          {
            uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v28 = 0;
            _os_log_impl(&dword_0, v26, v27, "INPlayMediaIntent#PlayNlsContainer false: playing from library", v28, 2u);
            swift_slowDealloc(v28, -1LL, -1LL);
          }

          (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
          return 0LL;
        }

void sub_180AC8()
{
  id v1 = [v0 mediaItems];
  if (!v1) {
    goto LABEL_16;
  }
  int v2 = v1;
  uint64_t v3 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
LABEL_26:
    swift_bridgeObjectRelease("ShuffleClassical");
    uint64_t v13 = (const char *)v4;
    goto LABEL_27;
  }

  if (v4 < 0) {
    uint64_t v28 = v4;
  }
  else {
    uint64_t v28 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v4);
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v4);
  if (!v29) {
    goto LABEL_26;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001LL) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v4);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }

    id v5 = *(id *)(v4 + 32);
  }

  uint64_t v6 = v5;
  swift_bridgeObjectRelease(v4);
  id v7 = [v6 privateMediaItemValueData];

  if (v7)
  {
    id v8 = [v7 internalSignals];

    if (v8)
    {
      uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for String);

      uint64_t v9 = *(void *)(v4 + 16);
      if (v9)
      {
        uint64_t v10 = *(void *)(v4 + 32);
        uint64_t v11 = *(const char **)(v4 + 40);
        BOOL v12 = v10 == 0xD000000000000010LL && v11 == "ShuffleClassical";
        if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v10, v11) & 1) != 0)
        {
LABEL_15:
          swift_bridgeObjectRelease("ShuffleClassical");
          swift_bridgeObjectRelease(v4);
          swift_arrayDestroy(&qword_26AC18, 1LL, &type metadata for String);
          return;
        }

        if (v9 != 1)
        {
          uint64_t v14 = (const char **)(v4 + 56);
          uint64_t v15 = 1LL;
          while (1)
          {
            uint64_t v16 = v15 + 1;
            if (__OFADD__(v15, 1LL)) {
              goto LABEL_42;
            }
            uint64_t v17 = (uint64_t)*(v14 - 1);
            uint64_t v18 = *v14;
            BOOL v19 = v17 == 0xD000000000000010LL && v18 == "ShuffleClassical";
            if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18) & 1) != 0) {
              goto LABEL_15;
            }
            v14 += 2;
            ++v15;
            if (v16 == v9) {
              goto LABEL_26;
            }
          }
        }
      }

      goto LABEL_26;
    }
  }

void sub_180DCC()
{
  id v1 = [v0 mediaItems];
  if (!v1) {
    return;
  }
  uint64_t v2 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v8 = v3;
    }
    else {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v3);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v3);
    if (v9) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease(v3);
    return;
  }

uint64_t sub_180F3C()
{
  id v1 = v0;
  uint64_t v2 = (const char **)type metadata accessor for Logger(0LL);
  uint64_t v3 = (uint64_t)*(v2 - 1);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v147 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v153 = (char *)&v147 - v11;
  __chkstk_darwin(v10);
  uint64_t v151 = (char *)&v147 - v12;
  uint64_t v13 = sub_6C5C(&qword_28BF78);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v157 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v159 = (char *)&v147 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v160 = (char *)&v147 - v19;
  __chkstk_darwin(v18);
  uint64_t v162 = (char *)&v147 - v20;
  uint64_t v21 = type metadata accessor for DateComponents(0LL);
  uint64_t v163 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v154 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  os_log_type_t v156 = (char *)&v147 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  int v152 = (char *)&v147 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v158 = (char *)&v147 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v155 = (__objc2_ivar_list *)((char *)&v147 - v31);
  __chkstk_darwin(v30);
  os_log_type_t v161 = (char *)&v147 - v32;
  unint64_t v33 = 0xD000000000000012LL;
  char v34 = "QueryStationUser";
  swift_bridgeObjectRetain("QueryStationUser");
  uint64_t v35 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
  id v36 = -[__objc2_ivar_list mediaItems](v1, "mediaItems");
  if (!v36)
  {
    swift_bridgeObjectRelease("QueryStationUser");
    goto LABEL_38;
  }

  id v37 = v36;
  uint64_t v164 = v1;
  uint64_t v38 = sub_1641C(0LL, (unint64_t *)&qword_289310, &OBJC_CLASS___INMediaItem_ptr);
  uint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);

  if (!((unint64_t)v39 >> 62))
  {
LABEL_35:
    swift_bridgeObjectRelease("QueryStationUser");
    uint64_t v54 = (const char *)v39;
    goto LABEL_36;
  }

  if (v39 < 0) {
    uint64_t v60 = v39;
  }
  else {
    uint64_t v60 = v39 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v39);
  uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease(v39);
  if (!v61) {
    goto LABEL_35;
  }
LABEL_4:
  if ((v39 & 0xC000000000000001LL) != 0)
  {
    id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v39);
  }

  else
  {
    if (!*(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFF8LL)))
    {
      __break(1u);
      goto LABEL_127;
    }

    id v40 = *(id *)(v39 + 32);
  }

  uint64_t v41 = v40;
  swift_bridgeObjectRelease(v39);
  id v42 = [v41 privateMediaItemValueData];

  if (v42)
  {
    id v43 = [v42 internalSignals];

    if (v43)
    {
      uint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String);

      uint64_t v44 = *(__objc2_ivar_list **)(v39 + 16);
      if (v44)
      {
        uint64_t v149 = v21;
        uint64_t v150 = v3;
        uint64_t v148 = v2;
        uint64_t v45 = *(void *)(v39 + 32);
        uint64_t v46 = *(char **)(v39 + 40);
        if (v45 == 0xD000000000000012LL && v46 == "QueryStationUser"
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v45, v46) & 1) != 0)
        {
LABEL_13:
          swift_bridgeObjectRelease("QueryStationUser");
          swift_bridgeObjectRelease(v39);
          swift_arrayDestroy(&qword_26AD30, 1LL, &type metadata for String);
          if (qword_283888 != -1) {
            swift_once(&qword_283888, sub_BFC5C);
          }
          uint64_t v47 = (uint64_t)v148;
          uint64_t v48 = sub_6960((uint64_t)v148, (uint64_t)qword_2969C8);
          uint64_t v49 = (*(uint64_t (**)(const char *, uint64_t, uint64_t))(v150 + 16))(v6, v48, v47);
          uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
          os_log_type_t v51 = static os_log_type_t.info.getter(v50);
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v52 = 0;
            _os_log_impl( &dword_0,  v50,  v51,  "INPlayMediaIntent#isQueryStationDecade returning true with internal signal QueryStationDecade",  v52,  2u);
            swift_slowDealloc(v52, -1LL, -1LL);
          }

          (*(void (**)(const char *, uint64_t))(v150 + 8))(v6, v47);
          return 1LL;
        }

        if (v44 != (__objc2_ivar_list *)((char *)&dword_0 + 1))
        {
          uint64_t v2 = (const char **)(v39 + 56);
          uint64_t v55 = 1LL;
          while (1)
          {
            id v56 = (__objc2_ivar_list *)(v55 + 1);
            if (__OFADD__(v55, 1LL)) {
              break;
            }
            uint64_t v57 = (uint64_t)*(v2 - 1);
            uint64_t v58 = *v2;
            BOOL v59 = v57 == 0xD000000000000012LL && v58 == "QueryStationUser";
            if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v58) & 1) != 0) {
              goto LABEL_13;
            }
            v2 += 2;
            ++v55;
            if (v56 == v44) {
              goto LABEL_30;
            }
          }

          __break(1u);
          goto LABEL_132;
        }

LABEL_132:
      __break(1u);
LABEL_133:
      unint64_t v95 = v149;
      uint64_t v133 = v154;
      goto LABEL_106;
    }

id sub_181DE4()
{
  id result = [v0 privatePlayMediaIntentData];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result privateMediaIntentData];

    if (v3 && (id v4 = [v3 speakerIDInfo], v3, v4))
    {
      if ([v4 speakerIDConfidence] == (char *)&dword_4 + 1)
      {

        return &dword_0 + 1;
      }

      else
      {
        uint64_t v5 = (int *)[v4 speakerIDConfidence];

        return (id)(v5 == &dword_4);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

BOOL sub_181EA8()
{
  return MediaIntentCommons.isGrounding()();
}

BOOL sub_181EB4()
{
  return MediaIntentCommons.isUserRecognized()();
}

BOOL sub_181EC0(Swift::String_optional bundleIdentifier)
{
  return MediaIntentCommons.isAppAttributionRequired(bundleIdentifier:)(bundleIdentifier);
}

uint64_t sub_181ECC()
{
  return MediaIntentCommons.getFallbackUsername()().value._countAndFlagsBits;
}

BOOL sub_181ED8()
{
  return MediaIntentCommons.useDialogMemoryForAppAttribution()();
}

uint64_t sub_181EE4()
{
  return PrivateMediaIntentDataProviding.getSharedUserID()().value._countAndFlagsBits;
}

uint64_t sub_181EF0()
{
  return CommonIntentSignals.getLocaleOverride()().value._countAndFlagsBits;
}

uint64_t sub_181EFC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_28BF78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_181F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28BF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_181F84(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v94 = v2;
  uint64_t v95 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v84 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v84 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v84 - v12;
  __chkstk_darwin(v11);
  uint64_t v93 = (char *)v84 - v14;
  uint64_t v15 = type metadata accessor for UserDonator(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (void *)((char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v84 - v20;
  uint64_t v22 = type metadata accessor for Donation(0LL);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)v84 - v27;
  if (!a1)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = v94;
    uint64_t v40 = sub_6960(v94, (uint64_t)qword_2969C8);
    uint64_t v41 = v95;
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 16))(v7, v40, v39);
    id v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_0, v43, v44, "SiriRemembersAPI#saveToMemory no media intent to save", v45, 2u);
      swift_slowDealloc(v45, -1LL, -1LL);
    }

    uint64_t v46 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
    uint64_t v47 = v7;
    return v46(v47, v39);
  }

  uint64_t v90 = v26;
  uint64_t v91 = v25;
  uint64_t v92 = v24;
  uint64_t v29 = a1;
  if ((INPlayMediaIntent.appInferred.getter(v29) & 1) != 0)
  {
    uint64_t v30 = v29;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v31 = v94;
    uint64_t v32 = sub_6960(v94, (uint64_t)qword_2969C8);
    uint64_t v33 = v95;
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 16))(v10, v32, v31);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v37 = 0;
      _os_log_impl(&dword_0, v35, v36, "SiriRemembersAPI#saveToMemory suppressing as app is inferred", v37, 2u);
      swift_slowDealloc(v37, -1LL, -1LL);
      uint64_t v38 = v30;
    }

    else
    {
      uint64_t v38 = v35;
      uint64_t v35 = v30;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v10, v31);
  }

  unint64_t v48 = (unint64_t)INPlayMediaIntent.toSiriRemembersDonationIntent()();
  if (!v48)
  {
    uint64_t v53 = v29;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v39 = v94;
    uint64_t v54 = sub_6960(v94, (uint64_t)qword_2969C8);
    uint64_t v55 = v95;
    uint64_t v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 16))(v13, v54, v39);
    uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      BOOL v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)BOOL v59 = 0;
      _os_log_impl(&dword_0, v57, v58, "SiriRemembersAPI#saveToMemory Error getting donations", v59, 2u);
      swift_slowDealloc(v59, -1LL, -1LL);
      uint64_t v60 = v53;
    }

    else
    {
      uint64_t v60 = v57;
      uint64_t v57 = v53;
    }

    uint64_t v46 = *(uint64_t (**)(char *, uint64_t))(v55 + 8);
    uint64_t v47 = v13;
    return v46(v47, v39);
  }

  uint64_t v49 = (void *)v48;
  id v50 = objc_allocWithZone(&OBJC_CLASS___INInteraction);
  id v89 = v49;
  id v51 = [v50 initWithIntent:v49 response:0];
  INInteraction.asDonation()([v51 _setDonatedBySiri:1]);
  id v88 = v29;
  v98[0] = (uint64_t)v29;
  sub_BC728();
  Swift::String_optional v61 = PrivateMediaIntentDataProviding.getSharedUserID()();
  object = v61.value._object;
  uint64_t countAndFlagsBits = v61.value._countAndFlagsBits;
  if (v61.value._object)
  {
    uint64_t v62 = (uint64_t)object;
    *uint64_t v19 = countAndFlagsBits;
    v19[1] = v62;
    (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))( v19,  enum case for UserDonator.recognizedUser(_:),  v15);
    (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 32))(v21, v19, v15);
    uint64_t v63 = v62;
  }

  else
  {
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v21, enum case for UserDonator.defaultUser(_:), v15);
    uint64_t v63 = 0LL;
  }

  id v64 = v93;
  swift_bridgeObjectRetain(v63);
  Donation.userDonator.setter(v21);
  uint64_t v66 = v94;
  uint64_t v65 = v95;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v67 = sub_6960(v66, (uint64_t)qword_2969C8);
  uint64_t v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v67, v66);
  uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
  os_log_type_t v70 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v69, v70))
  {
    os_log_type_t v71 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v85 = swift_slowAlloc(32LL, -1LL);
    v98[0] = v85;
    *(_DWORD *)os_log_type_t v71 = 136315138;
    v84[1] = v71 + 4;
    swift_beginAccess(v28, v97, 0LL, 0LL);
    uint64_t v72 = v90;
    uint64_t v73 = v91;
    uint64_t v74 = v92;
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v90, v28, v92);
    uint64_t v75 = String.init<A>(describing:)(v72, v74);
    unint64_t v77 = v76;
    uint64_t v96 = sub_6978(v75, v76, v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97);
    swift_bridgeObjectRelease(v77);
    _os_log_impl(&dword_0, v69, v70, "SiriRemembersAPI#saveToMemory saving with donation %s", v71, 0xCu);
    uint64_t v78 = v85;
    swift_arrayDestroy(v85, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v78, -1LL, -1LL);
    swift_slowDealloc(v71, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v94);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
    uint64_t v73 = v91;
    uint64_t v74 = v92;
    uint64_t v72 = v90;
  }

  swift_beginAccess(v28, v98, 0LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v72, v28, v74);
  uint64_t v79 = (void *)swift_allocObject(&unk_272C50, 40LL, 7LL);
  uint64_t v80 = countAndFlagsBits;
  uint64_t v81 = v88;
  uint64_t v79[2] = v88;
  v79[3] = v80;
  v79[4] = object;
  __objc2_ivar_list v82 = v81;
  Donation.donate(completionHandler:)(sub_183198, v79);

  swift_release(v79);
  id v83 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
  v83(v72, v74);
  return ((uint64_t (*)(char *, uint64_t))v83)(v28, v74);
}

uint64_t sub_1828E4(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v77 = a5;
  uint64_t v75 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  __objc2_ivar_list v82 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  __chkstk_darwin(v11);
  uint64_t v79 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v73 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v78 = type metadata accessor for DispatchTime(0LL);
  uint64_t v72 = *(void *)(v78 - 8);
  uint64_t v16 = __chkstk_darwin(v78);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  unint64_t v76 = (char *)&v68 - v19;
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v83 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v68 - v24;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v38 = sub_6960(v20, (uint64_t)qword_2969C8);
    uint64_t v39 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v23, v38, v20);
    swift_errorRetain(a1);
    uint64_t v40 = swift_errorRetain(a1);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v44 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)id v43 = 138412290;
      swift_errorRetain(a1);
      uint64_t v45 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t aBlock = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v86);
      *os_log_type_t v44 = v45;
      sub_1831A8(a1, 1);
      sub_1831A8(a1, 1);
      _os_log_impl(&dword_0, v41, v42, "SiriRemembersAPI#saveToMemory Donation failed with %@", v43, 0xCu);
      uint64_t v46 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v44, 1LL, v46);
      uint64_t v47 = v44;
      uint64_t v39 = v83;
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      sub_1831A8(a1, 1);
    }

    else
    {
      sub_1831A8(a1, 1);
      sub_1831A8(a1, 1);
      swift_errorRelease(a1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v23, v20);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v26 = sub_6960(v20, (uint64_t)qword_2969C8);
    uint64_t v27 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v25, v26, v20);
    id v28 = a3;
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    int v30 = static os_log_type_t.debug.getter();
    BOOL v31 = os_log_type_enabled(v29, (os_log_type_t)v30);
    uint64_t v71 = v9;
    if (v31)
    {
      int v69 = v30;
      uint64_t v70 = v8;
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = (void *)swift_slowAlloc(32LL, -1LL);
      BOOL v84 = v68;
      *(_DWORD *)uint64_t v32 = 136315138;
      id v33 = [v28 identifier];
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        uint64_t v37 = v36;
      }

      else
      {
        uint64_t v35 = 0LL;
        uint64_t v37 = 0LL;
      }

      uint64_t aBlock = v35;
      v86[0] = v37;
      uint64_t v50 = sub_6C5C(&qword_284600);
      uint64_t v51 = String.init<A>(describing:)(&aBlock, v50);
      unint64_t v53 = v52;
      uint64_t aBlock = sub_6978(v51, v52, (uint64_t *)&v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v86);

      swift_bridgeObjectRelease(v53);
      _os_log_impl( &dword_0,  v29,  (os_log_type_t)v69,  "SiriRemembersAPI#saveToMemory success for intent with uuid %s",  v32,  0xCu);
      uint64_t v54 = v68;
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);

      uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v25, v20);
      uint64_t v8 = v70;
    }

    else
    {

      uint64_t v48 = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v25, v20);
    }

    uint64_t v55 = (void *)static DispatchQueues.analytics.getter(v48);
    static DispatchTime.now()(v55);
    *uint64_t v15 = 10LL;
    uint64_t v57 = v73;
    uint64_t v56 = v74;
    (*(void (**)(void *, void, uint64_t))(v73 + 104))( v15,  enum case for DispatchTimeInterval.seconds(_:),  v74);
    os_log_type_t v58 = v76;
    + infix(_:_:)(v18, v15);
    (*(void (**)(void *, uint64_t))(v57 + 8))(v15, v56);
    BOOL v59 = *(void (**)(char *, uint64_t))(v72 + 8);
    uint64_t v60 = v78;
    v59(v18, v78);
    uint64_t v61 = swift_allocObject(&unk_272C78, 32LL, 7LL);
    uint64_t v62 = v77;
    *(void *)(v61 + swift_weakDestroy(v0 + 16) = v75;
    *(void *)(v61 + 2sub_6C3C(v0 + 4) = v62;
    v86[3] = sub_1831D8;
    uint64_t v87 = v61;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    v86[0] = 1107296256LL;
    v86[1] = sub_6E7C;
    v86[2] = &unk_272C90;
    uint64_t v63 = _Block_copy(&aBlock);
    uint64_t v64 = swift_bridgeObjectRetain(v62);
    uint64_t v65 = v79;
    static DispatchQoS.unspecified.getter(v64);
    BOOL v84 = _swiftEmptyArrayStorage;
    sub_21A04();
    uint64_t v66 = sub_6C5C(&qword_285480);
    sub_21358();
    uint64_t v67 = v82;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v84, v66);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v58, v65, v67, v63);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v8);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v65, v81);
    v59(v58, v60);
    return swift_release(v87);
  }

uint64_t sub_182FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignalDefinitionParametersProvider.Builder(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  uint64_t v5 = SignalDefinitionParametersProvider.Builder.init()();
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    uint64_t v6 = dispatch thunk of SignalDefinitionParametersProvider.Builder.with(sharedUserId:)(a1, a2);
    swift_release(v6);
    swift_bridgeObjectRelease(a2);
  }

  uint64_t v16 = type metadata accessor for SignalDefinitionParametersProvider(0LL);
  uint64_t v17 = &protocol witness table for SignalDefinitionParametersProvider;
  sub_10974(v15);
  dispatch thunk of SignalDefinitionParametersProvider.Builder.create()();
  uint64_t v7 = type metadata accessor for SignalListBuilder(0LL);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  uint64_t v8 = SignalListBuilder.init(with:)(v15);
  uint64_t v9 = sub_6C5C(&qword_28BF80);
  uint64_t v10 = swift_allocObject(v9, 48LL, 7LL);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(v10 + 3sub_6C3C(v0 + 2) = type metadata accessor for UsageScoreSignal(0LL);
  *(void *)(v10 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = &protocol witness table for UsageScoreSignal;
  SignalListBuilder.withSignals(ofTypes:)(v15, v10);
  swift_release(v8);
  swift_bridgeObjectRelease(v10);
  uint64_t v11 = v16;
  uint64_t v12 = v17;
  sub_6EA8(v15, v16);
  uint64_t v13 = dispatch thunk of SignalListBuilding.toSignalGatherer()(v11, v12);
  dispatch thunk of SignalGatherer.gatherValuesAndTimings(onlyFromCache:skipCacheRead:skipCacheWrite:timeoutSeconds:completion:)( 0LL,  1LL,  0LL,  3LL,  WHAError.rawValue.getter,  0LL);
  swift_release(v13);
  swift_release(v5);
  return sub_6C3C(v15);
}

uint64_t sub_18316C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_183198(uint64_t a1, char a2)
{
  return sub_1828E4(a1, a2 & 1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1831A8(uint64_t result, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRelease(result);
  }
  return result;
}

uint64_t sub_1831B4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1831D8()
{
  return sub_182FF4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t *sub_1831E0()
{
  if (qword_283930 != -1) {
    swift_once(&qword_283930, sub_183260);
  }
  return &qword_296B18;
}

uint64_t *sub_183220()
{
  if (qword_283938 != -1) {
    swift_once(&qword_283938, sub_183330);
  }
  return &qword_296B20;
}

uint64_t sub_183260()
{
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  uint64_t v0 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v1 = static SiriKitTaskLoggingProvider.shared.getter(v0);
  static AceService.current.getter(v8);
  uint64_t v2 = type metadata accessor for SearchForMediaFlowStrategy(0LL);
  uint64_t v3 = swift_allocObject(v2, 136LL, 7LL);
  sub_157C4((uint64_t)v8, (uint64_t)v7);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v6);
  swift_retain(v1);
  uint64_t v4 = sub_1835F4(v6, v1, v7, v3);
  sub_6C3C(v8);
  uint64_t result = swift_release(v1);
  qword_296B18 = v4;
  return result;
}

uint64_t sub_183330()
{
  uint64_t result = sub_F4BAC();
  qword_296B20 = result;
  return result;
}

id sub_18334C()
{
  uint64_t v0 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = static FeatureFlagProvider.shared.getter(v2);
  char v6 = FeatureFlagProvider.isAppIntentsEnabled.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  if ((v6 & 1) != 0)
  {
    v13[3] = v0;
    v13[4] = &protocol witness table for FeatureFlagProvider;
    uint64_t v7 = sub_10974(v13);
    static FeatureFlagProvider.shared.getter(v7);
    uint64_t v8 = type metadata accessor for AppIntentInvoker(0LL);
    swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v9 = AppIntentInvoker.init()();
    v12[3] = v8;
    v12[4] = &protocol witness table for AppIntentInvoker;
    v12[0] = v9;
    id v10 = objc_allocWithZone((Class)type metadata accessor for INSearchForMediaAppIntentHandler(0LL));
    id result = (id)INSearchForMediaAppIntentHandler.init(featureFlagProvider:appIntentInvoker:)(v13, v12);
  }

  else
  {
    id result = [objc_allocWithZone((Class)type metadata accessor for INSearchForMediaIntentHandler(0)) init];
  }

  static SearchForMedia.intentHandler = (uint64_t)result;
  return result;
}

uint64_t *SearchForMedia.intentHandler.unsafeMutableAddressor()
{
  if (qword_283940 != -1) {
    swift_once(&qword_283940, sub_18334C);
  }
  return &static SearchForMedia.intentHandler;
}

id static SearchForMedia.intentHandler.getter()
{
  if (qword_283940 != -1) {
    swift_once(&qword_283940, sub_18334C);
  }
  swift_beginAccess(&static SearchForMedia.intentHandler, v1, 0LL, 0LL);
  return (id)static SearchForMedia.intentHandler;
}

void static SearchForMedia.intentHandler.setter(uint64_t a1)
{
  if (qword_283940 != -1) {
    swift_once(&qword_283940, sub_18334C);
  }
  swift_beginAccess(&static SearchForMedia.intentHandler, v3, 1LL, 0LL);
  uint64_t v2 = (void *)static SearchForMedia.intentHandler;
  static SearchForMedia.intentHandler = a1;
}

uint64_t (*static SearchForMedia.intentHandler.modify(uint64_t a1))(void)
{
  if (qword_283940 != -1) {
    swift_once(&qword_283940, sub_18334C);
  }
  swift_beginAccess(&static SearchForMedia.intentHandler, a1, 33LL, 0LL);
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for SearchForMedia()
{
  return &type metadata for SearchForMedia;
}

uint64_t sub_1835F4(_OWORD *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  __int128 v15 = a1[3];
  v40[2] = a1[2];
  void v40[3] = v15;
  v40[4] = a1[4];
  __int128 v16 = a1[1];
  v40[0] = *a1;
  v40[1] = v16;
  uint64_t v17 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v39[3] = v17;
  v39[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v39[0] = a2;
  *(void *)(a4 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 2sub_6C3C(v0 + 4) = xmmword_214CA0;
  sub_157C4((uint64_t)a3, (uint64_t)&v36);
  int v18 = CATDefaultMode;
  uint64_t v19 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v20 = static MorphunProvider.shared.getter(v19);
  static FeatureFlagProvider.shared.getter(v20);
  uint64_t v21 = type metadata accessor for CatService();
  uint64_t v22 = swift_allocObject(v21, 300LL, 7LL);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_156E8((uint64_t)v40, (uint64_t)&v33);
  swift_retain(v20);
  uint64_t v23 = sub_10FF64(&v33, v18, v20, &v36, (uint64_t)v12, v22);
  swift_release(v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  swift_release(v20);
  *(void *)(a4 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v23;
  uint64_t v34 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v35 = (_UNKNOWN **)&protocol witness table for StringsFileResolver;
  sub_10974(&v33);
  uint64_t v24 = swift_retain(v23);
  uint64_t v25 = static StringsFileResolver.shared.getter(v24);
  uint64_t v26 = static SiriKitTaskLoggingProvider.shared.getter(v25);
  uint64_t v37 = v17;
  uint64_t v38 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v36 = v26;
  uint64_t v27 = sub_6C5C(qword_28BFB0);
  id v28 = (void *)swift_allocObject(v27, 120LL, 7LL);
  v28[13] = 0xD000000000000011LL;
  v28[14] = 0x800000000021D860LL;
  _OWORD v28[2] = v23;
  sub_FF54(&v33, (uint64_t)(v28 + 3));
  sub_FF54(&v36, (uint64_t)(v28 + 8));
  *(void *)(a4 + 4sub_6C3C(v0 + 8) = v28;
  sub_157C4((uint64_t)v39, a4 + 56);
  uint64_t v34 = v8;
  uint64_t v35 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  uint64_t v29 = sub_10974(&v33);
  static FeatureFlagProvider.shared.getter(v29);
  uint64_t v30 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v31 = swift_allocObject(v30, 56LL, 7LL);
  sub_FF54(&v33, v31 + 16);
  uint64_t v35 = &off_272868;
  uint64_t v34 = v30;
  *(void *)&__int128 v33 = v31;
  sub_6C3C(a3);
  sub_6C3C(v39);
  sub_15858(v40);
  sub_FF54(&v33, a4 + 96);
  return a4;
}

uint64_t CommonAppResolver.postResolve(for:app:resolutionResultType:completion:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  v21[1] = a5;
  uint64_t v22 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v21[0] = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v15 = (void *)static AppNameResolver.queue.getter(v12);
  uint64_t v16 = swift_allocObject(&unk_272CF0, 32LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v16 + 2sub_6C3C(v0 + 4) = v5;
  aBlock[4] = sub_188510;
  uint64_t v25 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_6E7C;
  aBlock[3] = &unk_272D08;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain(a2);
  uint64_t v18 = swift_retain(v5);
  static DispatchQoS.unspecified.getter(v18);
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v19 = sub_6C5C(&qword_285480);
  sub_21358();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v14, v9, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v21[0] + 8LL))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  swift_release(v25);
  return v22(1LL);
}

void *CommonAppResolver.deinit()
{
  uint64_t v0 = (void *)InstrumentedAppResolutionService.deinit();
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 8)
                                      + 8));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 16)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 24)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 32)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 40)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 48)));
  return v0;
}

void CommonAppResolver.__allocating_init()()
{
}

uint64_t sub_183BD0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v305 = (void *)a4;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v293 = (char *)&v275 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v295 = (char *)&v275 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  char v291 = (char *)&v275 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v275 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v275 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v302 = (unint64_t)&v275 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v275 - v25;
  uint64_t v27 = swift_allocObject(&unk_272FB0, 32LL, 7LL);
  *(void *)(v27 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v27 + 2sub_6C3C(v0 + 4) = a2;
  uint64_t v300 = v27;
  uint64_t v28 = qword_283888;
  swift_retain(a2);
  if (v28 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v29 = sub_6960(v9, (uint64_t)qword_2969C8);
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v10[2];
  uint64_t v298 = v29;
  uint64_t v299 = v30;
  ((void (*)(char *))v30)(v26);
  id v31 = a3;
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  __int128 v33 = v10;
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v32, v34);
  uint64_t v301 = a5;
  uint64_t v294 = v19;
  unint64_t v296 = (unint64_t)v22;
  if (v35)
  {
    uint64_t v36 = swift_slowAlloc(22LL, -1LL);
    uint64_t v303 = swift_slowAlloc(64LL, -1LL);
    *(void *)&v311[0] = v303;
    *(_DWORD *)uint64_t v36 = 136446466;
    uint64_t v37 = static Insights.appSelection.getter();
    unint64_t v39 = v38;
    *(void *)&__int128 v306 = sub_6978(v37, v38, (uint64_t *)v311);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 8);
    swift_bridgeObjectRelease(v39);
    *(_WORD *)(v36 + 1sub_6C3C(v0 + 2) = 2080;
    id v40 = [v31 utteranceString];
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    uint64_t v297 = (uint64_t)v33;
    os_log_type_t v42 = v31;
    uint64_t v43 = v41;
    uint64_t v304 = v9;
    unint64_t v45 = v44;

    uint64_t v46 = v43;
    id v31 = v42;
    *(void *)&__int128 v306 = sub_6978(v46, v45, (uint64_t *)v311);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 8);

    swift_bridgeObjectRelease(v45);
    _os_log_impl( &dword_0,  v32,  v34,  "CommonIntentAppResolver#resolveApp %{public}s with user utterance: %s",  (uint8_t *)v36,  0x16u);
    uint64_t v47 = v303;
    swift_arrayDestroy(v303, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);

    uint64_t v48 = *(void (**)(char *, uint64_t))(v297 + 8);
    uint64_t v49 = v304;
    v48(v26, v304);
  }

  else
  {

    uint64_t v48 = (void (*)(char *, uint64_t))v33[1];
    v48(v26, v9);
    uint64_t v49 = v9;
  }

  uint64_t v50 = v305;
  sub_157C4((uint64_t)v305, (uint64_t)&v309);
  uint64_t v51 = sub_6C5C(&qword_28C0F8);
  if ((swift_dynamicCast(&v306, &v309, v51, &type metadata for CustomAppResolutionProvider, 6LL) & 1) == 0)
  {
    __int128 v307 = 0u;
    __int128 v308 = 0u;
    __int128 v306 = 0u;
    sub_1F6CC((uint64_t)&v306, &qword_28C100);
LABEL_13:
    LODWORD(v30sub_6C3C(v0 + 3) = 0;
LABEL_14:
    uint64_t v60 = v50[3];
    uint64_t v61 = v50[4];
    sub_6EA8(v50, v60);
    uint64_t v62 = dispatch thunk of AppResolutionStateProviding.getRequestedApp()(v60, v61);
    if (!v62) {
      goto LABEL_64;
    }
    uint64_t v63 = v62;
    uint64_t v64 = App.appIdentifier.getter(v62);
    uint64_t v66 = v65;
    swift_release(v63);
    if (!v66) {
      goto LABEL_64;
    }
    swift_bridgeObjectRetain(v66);
    uint64_t v67 = static BundleIdentifiers.localBundleIdentifier(for:)(v31);
    if (v68)
    {
      int v69 = v68;
      if (v64 == v67 && v66 == v68)
      {
        swift_bridgeObjectRelease_n(v66, 2LL);
        swift_bridgeObjectRelease(v69);
LABEL_64:
        uint64_t v157 = swift_allocObject(&unk_272FD8, 56LL, 7LL);
        uint64_t v158 = v301;
        *(void *)(v157 + swift_weakDestroy(v0 + 16) = v301;
        *(void *)(v157 + 2sub_6C3C(v0 + 4) = v31;
        *(_BYTE *)(v157 + 3sub_6C3C(v0 + 2) = v303 & 1;
        uint64_t v159 = v300;
        *(void *)(v157 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = sub_189910;
        *(void *)(v157 + 4sub_6C3C(v0 + 8) = v159;
        uint64_t v160 = *(void (**)(id, uint64_t (*)(uint64_t), uint64_t))(class metadata base offset for CommonAppResolver
                                                                                   + *v158
                                                                                   + 120);
        id v161 = v31;
        swift_retain(v158);
        v160(v161, sub_189880, v157);
        return swift_release(v157);
      }

      char v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66);
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v69);
      if ((v70 & 1) != 0)
      {
        swift_bridgeObjectRelease(v66);
        goto LABEL_64;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v66);
    }

    uint64_t v71 = v295;
    v299(v295, v298, v49);
    uint64_t v72 = swift_bridgeObjectRetain_n(v66, 2LL);
    uint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
    os_log_type_t v74 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = swift_slowAlloc(22LL, -1LL);
      uint64_t v76 = swift_slowAlloc(64LL, -1LL);
      uint64_t v304 = v49;
      id v305 = (void *)v76;
      *(void *)&v311[0] = v76;
      *(_DWORD *)uint64_t v75 = 136446466;
      uint64_t v77 = static Insights.appSelection.getter();
      uint64_t v78 = v48;
      id v79 = v31;
      unint64_t v81 = v80;
      *(void *)&__int128 v306 = sub_6978(v77, v80, (uint64_t *)v311);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 8);
      unint64_t v82 = v81;
      id v31 = v79;
      uint64_t v48 = v78;
      swift_bridgeObjectRelease(v82);
      *(_WORD *)(v75 + 1sub_6C3C(v0 + 2) = 2082;
      swift_bridgeObjectRetain(v66);
      *(void *)&__int128 v306 = sub_6978(v64, (unint64_t)v66, (uint64_t *)v311);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 8);
      swift_bridgeObjectRelease_n(v66, 3LL);
      _os_log_impl( &dword_0,  v73,  v74,  "CommonIntentAppResolver#resolveApp %{public}s updating intent with requested app (differs from launchId): %{public}s",  (uint8_t *)v75,  0x16u);
      uint64_t v83 = (uint64_t)v305;
      swift_arrayDestroy(v305, 2LL, (char *)&type metadata for Any + 8);
      uint64_t v49 = v304;
      swift_slowDealloc(v83, -1LL, -1LL);
      swift_slowDealloc(v75, -1LL, -1LL);

      BOOL v84 = v295;
    }

    else
    {

      swift_bridgeObjectRelease_n(v66, 2LL);
      BOOL v84 = v71;
    }

    v48(v84, v49);
    v85._object = (void *)0x80000000002223F0LL;
    v86.value._uint64_t countAndFlagsBits = v64;
    v86.value._object = v66;
    v85._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    INIntent.setLaunchId(launchId:caller:)(v86, v85);
    swift_bridgeObjectRelease(v66);
    uint64_t v87 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
    uint64_t v88 = swift_dynamicCastObjCClass(v31, v87);
    if (v88)
    {
      id v89 = (void *)v88;
      id v90 = v31;
      id v91 = [v89 backingStore];
      uint64_t v92 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
      uint64_t v93 = (void *)swift_dynamicCastObjCClass(v91, v92);
      if (v93)
      {
        id v94 = [v93 privatePlayMediaIntentData];
        if (v94)
        {
          uint64_t v95 = v94;
          [v94 setAppInferred:0];
        }

        uint64_t v304 = v49;
        v299(v293, v298, v49);
        id v96 = v90;
        uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
        os_log_type_t v98 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v97, v98))
        {
          uint64_t v99 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v99 = 67240192;
          LOBYTE(v311[0]) = INPlayMediaIntent.appInferred.getter(v99) & 1;
          LODWORD(v311[0]) = LOBYTE(v311[0]);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v311, (char *)v311 + 4);

          _os_log_impl( &dword_0,  v97,  v98,  "CommonIntentAppResolver#resolveApp set appInferred?:%{BOOL,public}d as using requested app",  v99,  8u);
          swift_slowDealloc(v99, -1LL, -1LL);
          uint64_t v100 = v96;
        }

        else
        {

          uint64_t v100 = v91;
          uint64_t v97 = (os_log_s *)v96;
          id v91 = v96;
        }

        v48(v293, v304);
      }

      else
      {
      }
    }

    goto LABEL_64;
  }

  v311[1] = v307;
  v311[2] = v308;
  v311[0] = v306;
  unint64_t v52 = (void *)*((void *)&v308 + 1);
  uint64_t v53 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  id v292 = (id)swift_dynamicCastObjCClass(v52, v53);
  if (!v292
    || (uint64_t v54 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent), (v55 = swift_dynamicCastObjCClass(v31, v54)) == 0))
  {
    sub_189890((uint64_t)v311);
    goto LABEL_13;
  }

  uint64_t v56 = (void *)v55;
  id v57 = v31;
  id v58 = v52;
  unsigned int v59 = [v56 isEqual:v292];
  id v285 = v56;
  else {
    LODWORD(v30sub_6C3C(v0 + 3) = 0;
  }
  unint64_t v101 = v302;
  v299((char *)v302, v298, v49);
  id v102 = v57;
  id v103 = v58;
  uint64_t v104 = (os_log_s *)Logger.logObject.getter(v103);
  os_log_type_t v105 = static os_log_type_t.default.getter();
  BOOL v106 = os_log_type_enabled(v104, v105);
  id v289 = v102;
  uint64_t v304 = v49;
  id v283 = v31;
  uint64_t v297 = (uint64_t)v103;
  if (v106)
  {
    uint64_t v107 = swift_slowAlloc(26LL, -1LL);
    *(_DWORD *)uint64_t v107 = 67109888;
    id v108 = v285;
    LODWORD(v306) = [v285 isEqual:v292];
    uint64_t v109 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 4);
    *(_WORD *)(v107 + sub_6C3C(v0 + 8) = 1024;
    LOBYTE(v306) = INPlayMediaIntent.appInferred.getter(v109) & 1;
    LODWORD(v306) = v306;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 4);

    *(_WORD *)(v107 + 1sub_6C3C(v0 + 4) = 1024;
    LOBYTE(v306) = INPlayMediaIntent.appInferred.getter(v110) & 1;
    LODWORD(v306) = v306;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 4);

    *(_WORD *)(v107 + sub_6C3C(v0 + 20) = 1024;
    unint64_t v101 = v302;
    LODWORD(v306) = v303 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v306, (char *)&v306 + 4);
    _os_log_impl( &dword_0,  v104,  v105,  "CommonIntentAppResolver#resolveApp intent and updatedIntent are sameIntents: %{BOOL}d. intent has app inferred: %{ BOOL}d, updatedIntent has app inferred: %{BOOL}d. This is a disambiguationSelection: %{BOOL}d",  (uint8_t *)v107,  0x1Au);
    uint64_t v111 = v107;
    uint64_t v49 = v304;
    id v31 = v283;
    swift_slowDealloc(v111, -1LL, -1LL);
  }

  else
  {

    uint64_t v104 = (os_log_s *)v102;
    id v108 = v285;
  }

  v48((char *)v101, v49);
  id v112 = [v108 privatePlayMediaIntentData];
  uint64_t v114 = (uint64_t)v112;
  unint64_t v115 = v296;
  if (v112)
  {
    id v116 = [v112 audioSearchResults];

    if (v116)
    {
      unint64_t v117 = sub_687D0();
      uint64_t v114 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v116, v117);

      if ((unint64_t)v114 >> 62)
      {
        if (v114 < 0) {
          uint64_t v173 = v114;
        }
        else {
          uint64_t v173 = v114 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v114);
        uint64_t v118 = _CocoaArrayWrapper.endIndex.getter(v173);
        swift_bridgeObjectRelease(v114);
      }

      else
      {
        uint64_t v118 = *(void *)((char *)&dword_10 + (v114 & 0xFFFFFFFFFFFFF8LL));
      }

      BOOL v119 = v118 == 0;
      goto LABEL_44;
    }

    uint64_t v114 = 0LL;
  }

  BOOL v119 = 1;
LABEL_44:
  BOOL v281 = v119;
  unint64_t v302 = v114;
  v312.value._rawValue = (void *)v114;
  v312.is_nil = 0;
  Swift::String v120 = INIntent.firstPartyResultsBundleIdentifier(internalSearchResults:canUseClassical:)(v312, v113);
  uint64_t countAndFlagsBits = v120._countAndFlagsBits;
  object = v120._object;
  id v121 = [v292 privatePlayMediaIntentData];
  uint64_t v284 = v48;
  if (v121
    && (uint64_t v123 = v121,
        id v124 = [v121 audioSearchResults],
        v123,
        v124))
  {
    unint64_t v125 = sub_687D0();
    uint64_t v126 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v124, v125);

    if ((unint64_t)v126 >> 62)
    {
      if (v126 < 0) {
        uint64_t v174 = v126;
      }
      else {
        uint64_t v174 = v126 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v126);
      uint64_t v128 = _CocoaArrayWrapper.endIndex.getter(v174);
      uint64_t v127 = (void *)v126;
      swift_bridgeObjectRelease(v126);
    }

    else
    {
      uint64_t v127 = (void *)v126;
      uint64_t v128 = *(void *)((char *)&dword_10 + (v126 & 0xFFFFFFFFFFFFF8LL));
    }

    BOOL v129 = v128 == 0;
  }

  else
  {
    uint64_t v127 = 0LL;
    BOOL v129 = 1;
  }

  BOOL v288 = v129;
  v313.value._rawValue = v127;
  v313.is_nil = 0;
  Swift::String v130 = INIntent.firstPartyResultsBundleIdentifier(internalSearchResults:canUseClassical:)(v313, v122);
  uint64_t v131 = v130._object;
  uint64_t v132 = v304;
  v299((char *)v115, v298, v304);
  swift_bridgeObjectRetain_n(v127, 2LL);
  id v133 = (id)v297;
  unint64_t v134 = v115;
  unint64_t v135 = (unint64_t)object;
  swift_bridgeObjectRetain_n(object, 2LL);
  swift_bridgeObjectRetain_n(v130._object, 2LL);
  uint64_t v136 = v302;
  swift_bridgeObjectRetain_n(v302, 2LL);
  id v137 = v133;
  os_log_type_t v138 = (os_log_s *)Logger.logObject.getter(v137);
  int v280 = static os_log_type_t.default.getter();
  BOOL v139 = os_log_type_enabled(v138, (os_log_type_t)v280);
  uint64_t v297 = (uint64_t)v127;
  id v286 = v137;
  uint64_t v282 = v130._countAndFlagsBits;
  if (!v139)
  {

    swift_bridgeObjectRelease_n(v127, 2LL);
    swift_bridgeObjectRelease_n(v136, 2LL);
    swift_bridgeObjectRelease_n(v130._object, 2LL);
    swift_bridgeObjectRelease_n(v135, 2LL);
    uint64_t v48 = v284;
    v284((char *)v134, v132);
    uint64_t v141 = (uint64_t)v127;
    id v156 = v289;
    goto LABEL_112;
  }

  os_log_t v278 = v138;
  uint64_t v140 = swift_slowAlloc(58LL, -1LL);
  uint64_t v277 = swift_slowAlloc(160LL, -1LL);
  *(void *)&__int128 v306 = v277;
  *(_DWORD *)uint64_t v140 = 67110402;
  LODWORD(v30sub_6C3C(v0 + 9) = v288;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, (char *)&v309 + 4);
  *(_WORD *)(v140 + sub_6C3C(v0 + 8) = 2082;
  swift_bridgeObjectRetain(v135);
  unint64_t v309 = (void *)sub_6978(countAndFlagsBits, v135, (uint64_t *)&v306);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
  swift_bridgeObjectRelease_n(v135, 3LL);
  *(_WORD *)(v140 + 1sub_6C3C(v0 + 8) = 2082;
  uint64_t v141 = v140 + 20;
  swift_bridgeObjectRetain(v130._object);
  unint64_t v309 = (void *)sub_6978(v130._countAndFlagsBits, (unint64_t)v130._object, (uint64_t *)&v306);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
  swift_bridgeObjectRelease_n(v130._object, 3LL);
  *(_WORD *)(v140 + 2sub_6C3C(v0 + 8) = 2082;
  uint64_t v279 = v130._object;
  if (!v136)
  {
    uint64_t v147 = 0LL;
    unint64_t v142 = v296;
    uint64_t v48 = v284;
    uint64_t v143 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
LABEL_84:
    uint64_t v172 = v304;
    goto LABEL_85;
  }

  unint64_t v142 = v296;
  uint64_t v48 = v284;
  uint64_t v143 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
  if ((unint64_t)v136 >> 62)
  {
    if (v136 >= 0) {
      uint64_t v141 = v136 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v141 = v136;
    }
    swift_bridgeObjectRetain(v136);
    uint64_t v144 = _CocoaArrayWrapper.endIndex.getter(v141);
    if (v144) {
      goto LABEL_54;
    }
    goto LABEL_83;
  }

  uint64_t v144 = *(void *)((char *)&dword_10 + (v136 & 0xFFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(v136);
  if (!v144)
  {
LABEL_83:
    swift_bridgeObjectRelease(v136);
    uint64_t v147 = _swiftEmptyArrayStorage;
    goto LABEL_84;
  }

LABEL_54:
  unint64_t v309 = _swiftEmptyArrayStorage;
  sub_C70BC(0, v144 & ~(v144 >> 63), 0);
  if (v144 < 0)
  {
    __break(1u);
    goto LABEL_150;
  }

  uint64_t v146 = v48;
  uint64_t v147 = v309;
  if ((v302 & 0xC000000000000001LL) != 0)
  {
    uint64_t v148 = 0LL;
    do
    {
      uint64_t v149 = specialized _ArrayBuffer._getElementSlowPath(_:)(v148, v302);
      uint64_t v150 = INMediaItem.slimDescription.getter();
      uint64_t v152 = v151;
      swift_unknownObjectRelease(v149);
      unint64_t v309 = v147;
      unint64_t v154 = v147[2];
      unint64_t v153 = v147[3];
      if (v154 >= v153 >> 1)
      {
        sub_C70BC(v153 > 1, v154 + 1, 1);
        uint64_t v147 = v309;
      }

      ++v148;
      v147[2] = v154 + 1;
      uint64_t v155 = &v147[2 * v154];
      v155[4] = v150;
      v155[5] = v152;
    }

    while (v144 != v148);
  }

  else
  {
    uint64_t v163 = (id *)(v302 + 32);
    do
    {
      id v164 = *v163;
      uint64_t v165 = INMediaItem.slimDescription.getter();
      uint64_t v167 = v166;

      unint64_t v309 = v147;
      unint64_t v169 = v147[2];
      unint64_t v168 = v147[3];
      if (v169 >= v168 >> 1)
      {
        sub_C70BC(v168 > 1, v169 + 1, 1);
        uint64_t v147 = v309;
      }

      v147[2] = v169 + 1;
      uint64_t v170 = &v147[2 * v169];
      v170[4] = v165;
      v170[5] = v167;
      ++v163;
      --v144;
    }

    while (v144);
  }

  os_log_type_t v171 = (char *)v302;
  swift_bridgeObjectRelease(v302);
  uint64_t v172 = v304;
  uint64_t v48 = v146;
  uint64_t v136 = (uint64_t)v171;
  uint64_t v143 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
  unint64_t v142 = v296;
LABEL_85:
  unint64_t v309 = v147;
  id v31 = (id)sub_6C5C(&qword_287D98);
  uint64_t v175 = String.init<A>(describing:)(&v309, v31);
  unint64_t v177 = v176;
  unint64_t v309 = (void *)sub_6978(v175, v176, (uint64_t *)&v306);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
  swift_bridgeObjectRelease_n(v136, 2LL);
  swift_bridgeObjectRelease(v177);
  *(_WORD *)(v140 + 3sub_6C3C(v0 + 8) = 2082;
  uint64_t v141 = v297;
  id v276 = v31;
  if (v297)
  {
    if ((unint64_t)v297 >> 62)
    {
      if (v297 >= 0) {
        unint64_t v198 = v297 & 0xFFFFFFFFFFFFFF8LL;
      }
      else {
        unint64_t v198 = v297;
      }
      swift_bridgeObjectRetain(v297);
      unint64_t v199 = v198;
      uint64_t v141 = v297;
      uint64_t v178 = _CocoaArrayWrapper.endIndex.getter(v199);
      if (v178)
      {
LABEL_88:
        unint64_t v309 = _swiftEmptyArrayStorage;
        sub_C70BC(0, v178 & ~(v178 >> 63), 0);
        if ((v178 & 0x8000000000000000LL) == 0)
        {
          uint64_t v179 = v48;
          id v180 = v309;
          if ((v141 & 0xC000000000000001LL) != 0)
          {
            uint64_t v181 = 0LL;
            do
            {
              uint64_t v182 = specialized _ArrayBuffer._getElementSlowPath(_:)(v181, v297);
              uint64_t v183 = INMediaItem.slimDescription.getter();
              uint64_t v185 = v184;
              swift_unknownObjectRelease(v182);
              unint64_t v309 = v180;
              unint64_t v187 = v180[2];
              unint64_t v186 = v180[3];
              if (v187 >= v186 >> 1)
              {
                sub_C70BC(v186 > 1, v187 + 1, 1);
                id v180 = v309;
              }

              ++v181;
              v180[2] = v187 + 1;
              os_log_type_t v188 = &v180[2 * v187];
              v188[4] = v183;
              v188[5] = v185;
            }

            while (v178 != v181);
          }

          else
          {
            uint64_t v189 = (id *)(v141 + 32);
            do
            {
              id v190 = *v189;
              uint64_t v191 = INMediaItem.slimDescription.getter();
              uint64_t v193 = v192;

              unint64_t v309 = v180;
              unint64_t v195 = v180[2];
              unint64_t v194 = v180[3];
              if (v195 >= v194 >> 1)
              {
                sub_C70BC(v194 > 1, v195 + 1, 1);
                id v180 = v309;
              }

              v180[2] = v195 + 1;
              id v196 = &v180[2 * v195];
              void v196[4] = v191;
              v196[5] = v193;
              ++v189;
              --v178;
            }

            while (v178);
          }

          uint64_t v197 = v297;
          swift_bridgeObjectRelease(v297);
          uint64_t v172 = v304;
          uint64_t v48 = v179;
          uint64_t v143 = &OBJC_INSTANCE_VARIABLES__TtC23AudioFlowDelegatePlugin33PlayMediaAlternativesViewProvider;
          unint64_t v142 = v296;
          uint64_t v136 = v302;
          goto LABEL_107;
        }

LABEL_150:
        __break(1u);
        goto LABEL_151;
      }
    }

    else
    {
      uint64_t v178 = *(void *)((char *)&dword_10 + (v297 & 0xFFFFFFFFFFFFFF8LL));
      swift_bridgeObjectRetain(v297);
      if (v178) {
        goto LABEL_88;
      }
    }

    swift_bridgeObjectRelease(v141);
    id v180 = _swiftEmptyArrayStorage;
    uint64_t v172 = v304;
  }

  else
  {
    id v180 = 0LL;
  }

  uint64_t v197 = v141;
LABEL_107:
  unint64_t v309 = v180;
  uint64_t v200 = String.init<A>(describing:)(&v309, v276);
  unint64_t v202 = v201;
  unint64_t v309 = (void *)sub_6978(v200, v201, (uint64_t *)&v306);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
  swift_bridgeObjectRelease_n(v197, 2LL);
  swift_bridgeObjectRelease(v202);
  *(_WORD *)(v140 + 4sub_6C3C(v0 + 8) = 2082;
  id v203 = [v292 *(SEL *)&v143[391]];
  if (v203
    && (uint64_t v204 = v203,
        id v205 = [v203 internalSignals],
        v204,
        v205))
  {
    id v206 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v205, &type metadata for String);
  }

  else
  {
    id v206 = _swiftEmptyArrayStorage;
  }

  uint64_t v207 = Array.description.getter(v206, &type metadata for String);
  unint64_t v209 = v208;
  swift_bridgeObjectRelease(v206);
  unint64_t v309 = (void *)sub_6978(v207, v209, (uint64_t *)&v306);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
  id v210 = v286;

  swift_bridgeObjectRelease(v209);
  os_log_t v211 = v278;
  _os_log_impl( &dword_0,  v278,  (os_log_type_t)v280,  "CommonIntentAppResolver#resolveApp for updatedResultsEmpty?:%{BOOL}d originalDefaultBundle:%{public}s, updatedDefaul tBundle:%{public}s checking if we should override original search results: %{public}s with search results after disa mbiguation: %{public}s -- internal signals?:%{public}s",  (uint8_t *)v140,  0x3Au);
  uint64_t v212 = v277;
  swift_arrayDestroy(v277, 5LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v212, -1LL, -1LL);
  swift_slowDealloc(v140, -1LL, -1LL);

  v48((char *)v142, v172);
  id v31 = v283;
  id v156 = v289;
  uint64_t v141 = v297;
  unint64_t v135 = (unint64_t)object;
  uint64_t v131 = v279;
LABEL_112:
  BOOL v214 = countAndFlagsBits == v282 && v135 == (void)v131;
  uint64_t v50 = v305;
  unint64_t v215 = v294;
  if (v288)
  {
    if (!v214 && (_stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, v135) & 1) == 0)
    {
      swift_bridgeObjectRelease(v131);
      swift_bridgeObjectRelease(v141);
      swift_bridgeObjectRelease(v135);
      swift_bridgeObjectRelease(v136);
      uint64_t v233 = v304;
      uint64_t v234 = ((uint64_t (*)(char *, uint64_t, uint64_t))v299)(v215, v298, v304);
      uint64_t v235 = (os_log_s *)Logger.logObject.getter(v234);
      os_log_type_t v236 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v235, v236))
      {
        id v237 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v238 = swift_slowAlloc(32LL, -1LL);
        *(void *)&__int128 v306 = v238;
        *(_DWORD *)id v237 = 136446210;
        uint64_t v239 = static Insights.appSelection.getter();
        unint64_t v241 = v240;
        unint64_t v309 = (void *)sub_6978(v239, v240, (uint64_t *)&v306);
        uint64_t v50 = v305;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
        swift_bridgeObjectRelease(v241);
        _os_log_impl( &dword_0,  v235,  v236,  "CommonIntentAppResolver#resolveApp %{public}s updating original intent with nil search results as default bund les are not consistent",  v237,  0xCu);
        swift_arrayDestroy(v238, 1LL, (char *)&type metadata for Any + 8);
        id v156 = v289;
        swift_slowDealloc(v238, -1LL, -1LL);
        swift_slowDealloc(v237, -1LL, -1LL);

        os_log_type_t v242 = v294;
      }

      else
      {

        os_log_type_t v242 = v215;
      }

      v48(v242, v233);
      id v245 = [v292 privatePlayMediaIntentData];
      [v285 setPrivatePlayMediaIntentData:v245];

      uint64_t v49 = v304;
      goto LABEL_196;
    }

    swift_bridgeObjectRelease(v136);
    swift_bridgeObjectRelease(v141);
    swift_bridgeObjectRelease(v131);
    swift_bridgeObjectRelease(v135);
    goto LABEL_122;
  }

  if (v214)
  {
    swift_bridgeObjectRelease_n(v135, 2LL);
    if (!v281)
    {
LABEL_125:

      uint64_t v216 = v136;
LABEL_126:
      swift_bridgeObjectRelease(v216);
      swift_bridgeObjectRelease(v141);
      uint64_t v49 = v304;
      goto LABEL_196;
    }
  }

  else
  {
    char v217 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, v135);
    swift_bridgeObjectRelease(v135);
    swift_bridgeObjectRelease(v131);
    char v218 = v281 | ~v217;
    uint64_t v141 = v297;
    if ((v218 & 1) == 0) {
      goto LABEL_125;
    }
  }

  if (v141)
  {
    uint64_t v145 = v141 & 0xFFFFFFFFFFFFFF8LL;
    if (!((unint64_t)v141 >> 62))
    {
      uint64_t v219 = *(void *)((char *)&dword_10 + (v141 & 0xFFFFFFFFFFFFFF8LL));
      uint64_t result = swift_bridgeObjectRetain(v141);
      if (v219)
      {
LABEL_131:
        if (v219 < 1)
        {
          __break(1u);
          goto LABEL_204;
        }

        uint64_t v220 = 0LL;
        unint64_t v296 = v141 & 0xC000000000000001LL;
        os_log_type_t v221 = _swiftEmptyArrayStorage;
        do
        {
          if (v296) {
            id v222 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v220, v141);
          }
          else {
            id v222 = *(id *)(v141 + 8 * v220 + 32);
          }
          uint64_t v223 = v222;
          id v224 = [v222 identifier];
          if (v224)
          {
            uint64_t v225 = v224;
            uint64_t v226 = v48;
            uint64_t v227 = static String._unconditionallyBridgeFromObjectiveC(_:)(v224);
            uint64_t v229 = v228;

            if ((swift_isUniquelyReferenced_nonNull_native(v221) & 1) == 0) {
              os_log_type_t v221 = sub_1FC6C(0LL, v221[2] + 1LL, 1, v221);
            }
            unint64_t v231 = v221[2];
            unint64_t v230 = v221[3];
            if (v231 >= v230 >> 1) {
              os_log_type_t v221 = sub_1FC6C((void *)(v230 > 1), v231 + 1, 1, v221);
            }
            v221[2] = v231 + 1;
            id v232 = &v221[2 * v231];
            v232[4] = v227;
            v232[5] = v229;
            uint64_t v48 = v226;
            uint64_t v136 = v302;
            uint64_t v141 = v297;
          }

          else
          {
          }

          ++v220;
        }

        while (v219 != v220);
        goto LABEL_156;
      }

LABEL_155:
      os_log_type_t v221 = _swiftEmptyArrayStorage;
LABEL_156:
      swift_bridgeObjectRelease_n(v141, 2LL);
      if (v221[2])
      {
        id v243 = (id)v221[4];
        uint64_t v244 = v221[5];
        swift_bridgeObjectRetain(v244);
        swift_bridgeObjectRelease(v221);
      }

      else
      {
        swift_bridgeObjectRelease(v221);
        id v243 = 0LL;
        uint64_t v244 = 0LL;
      }

      uint64_t v50 = v305;
      id v156 = v289;
      goto LABEL_160;
    }

LABEL_151:
    if (v141 >= 0) {
      uint64_t v246 = v145;
    }
    else {
      uint64_t v246 = v297;
    }
    swift_bridgeObjectRetain(v297);
    uint64_t v247 = v246;
    uint64_t v141 = v297;
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v247);
    uint64_t v219 = result;
    if (result) {
      goto LABEL_131;
    }
    goto LABEL_155;
  }

  id v243 = 0LL;
  uint64_t v244 = 0LL;
LABEL_160:
  if (!v136)
  {
    uint64_t v141 = 0LL;
    goto LABEL_183;
  }

  if ((unint64_t)v136 >> 62)
  {
    if (v136 >= 0) {
      uint64_t v274 = v136 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v274 = v136;
    }
    swift_bridgeObjectRetain(v136);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v274);
    uint64_t v248 = result;
  }

  else
  {
    uint64_t v248 = *(void *)((char *)&dword_10 + (v136 & 0xFFFFFFFFFFFFFF8LL));
    uint64_t result = swift_bridgeObjectRetain(v136);
  }

  uint64_t v297 = (uint64_t)v243;
  if (!v248)
  {
    uint64_t v251 = _swiftEmptyArrayStorage;
LABEL_179:
    swift_bridgeObjectRelease_n(v136, 2LL);
    if (v251[2])
    {
      uint64_t v136 = v251[4];
      uint64_t v141 = v251[5];
      swift_bridgeObjectRetain(v141);
      swift_bridgeObjectRelease(v251);
    }

    else
    {
      swift_bridgeObjectRelease(v251);
      uint64_t v136 = 0LL;
      uint64_t v141 = 0LL;
    }

    id v31 = v283;
    uint64_t v48 = v284;
    uint64_t v50 = v305;
    id v156 = v289;
    id v243 = (id)v297;
LABEL_183:
    if (v244)
    {
      if (v141)
      {
        if (v243 == (id)v136 && v244 == v141)
        {

          uint64_t v216 = v244;
          goto LABEL_126;
        }

        char v273 = _stringCompareWithSmolCheck(_:_:expecting:)(v243, v244);
        swift_bridgeObjectRelease(v244);
        swift_bridgeObjectRelease(v141);
        if ((v273 & 1) != 0)
        {

          uint64_t v49 = v304;
          goto LABEL_196;
        }

LABEL_192:
        id v262 = v291;
        uint64_t v49 = v304;
        uint64_t v263 = ((uint64_t (*)(char *, uint64_t, uint64_t))v299)(v291, v298, v304);
        uint64_t v264 = (os_log_s *)Logger.logObject.getter(v263);
        os_log_type_t v265 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v264, v265))
        {
          uint64_t v266 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v267 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v306 = v267;
          *(_DWORD *)uint64_t v266 = 136446210;
          uint64_t v268 = static Insights.appSelection.getter();
          unint64_t v270 = v269;
          unint64_t v309 = (void *)sub_6978(v268, v269, (uint64_t *)&v306);
          uint64_t v50 = v305;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v309, v310);
          swift_bridgeObjectRelease(v270);
          _os_log_impl( &dword_0,  v264,  v265,  "CommonIntentAppResolver#resolveApp %{public}s updating original intent with new search results",  v266,  0xCu);
          swift_arrayDestroy(v267, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v267, -1LL, -1LL);
          swift_slowDealloc(v266, -1LL, -1LL);

          uint64_t v271 = v291;
        }

        else
        {

          uint64_t v271 = v262;
        }

        v48(v271, v49);
        id v272 = [v292 privatePlayMediaIntentData];
        [v285 setPrivatePlayMediaIntentData:v272];

        goto LABEL_196;
      }

      uint64_t v141 = v244;
    }

    else if (!v141)
    {
LABEL_122:

      uint64_t v49 = v304;
LABEL_196:
      sub_189890((uint64_t)v311);
      goto LABEL_14;
    }

    swift_bridgeObjectRelease(v141);
    goto LABEL_192;
  }

  if (v248 >= 1)
  {
    uint64_t v249 = 0LL;
    unint64_t v250 = v136 & 0xC000000000000001LL;
    uint64_t v251 = _swiftEmptyArrayStorage;
    do
    {
      if (v250) {
        id v252 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v249, v136);
      }
      else {
        id v252 = *(id *)(v136 + 8 * v249 + 32);
      }
      uint64_t v253 = v252;
      id v254 = [v252 identifier];
      if (v254)
      {
        uint64_t v255 = v254;
        uint64_t v256 = static String._unconditionallyBridgeFromObjectiveC(_:)(v254);
        uint64_t v258 = v257;

        if ((swift_isUniquelyReferenced_nonNull_native(v251) & 1) == 0) {
          uint64_t v251 = sub_1FC6C(0LL, v251[2] + 1LL, 1, v251);
        }
        unint64_t v260 = v251[2];
        unint64_t v259 = v251[3];
        if (v260 >= v259 >> 1) {
          uint64_t v251 = sub_1FC6C((void *)(v259 > 1), v260 + 1, 1, v251);
        }
        v251[2] = v260 + 1;
        os_log_type_t v261 = &v251[2 * v260];
        v261[4] = v256;
        v261[5] = v258;
        uint64_t v136 = v302;
      }

      else
      {
      }

      ++v249;
    }

    while (v248 != v249);
    goto LABEL_179;
  }

LABEL_204:
  __break(1u);
  return result;
}

uint64_t sub_1859A0(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6 = sub_6C5C(&qword_28C0F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_189798(a1, (uint64_t)v8);
  *(void *)&v8[*(int *)(v6 + 48)] = a2;
  swift_bridgeObjectRetain(a2);
  a3(v8);
  return sub_1F6CC((uint64_t)v8, &qword_28C0F0);
}

uint64_t sub_185A54( uint64_t a1, unint64_t *a2, void *a3, int a4, void (*a5)(uint64_t, unint64_t), uint64_t a6)
{
  uint64_t v199 = a6;
  unint64_t v198 = a5;
  LODWORD(v18sub_6C3C(v0 + 9) = a4;
  unint64_t v196 = *a2;
  uint64_t v191 = sub_6C5C(&qword_28C0E8);
  __chkstk_darwin(v191);
  uint64_t v192 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&v179 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v201 = type metadata accessor for Logger(0LL);
  uint64_t v200 = *(void (***)(uint64_t, uint64_t, uint64_t))(v201 - 8);
  uint64_t v10 = __chkstk_darwin(v201);
  unint64_t v187 = (char *)&v179 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v185 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&v179 - v13);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v194 = (uint64_t)&v179 - v15;
  __chkstk_darwin(v14);
  os_log_type_t v188 = (char *)&v179 - v16;
  uint64_t v17 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v186 = (char *)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v184 = (char *)&v179 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v195 = (os_log_s *)((char *)&v179 - v24);
  uint64_t v25 = __chkstk_darwin(v23);
  id v190 = (char *)&v179 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v179 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v179 - v31;
  __chkstk_darwin(v30);
  os_log_type_t v34 = (char *)&v179 - v33;
  uint64_t v35 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t *)((char *)&v179 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_188ECC(a1, (uint64_t)v37);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v37, v35);
  uint64_t v197 = a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v39 = *v37;
    uint64_t v40 = sub_6C5C(&qword_287F80);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v29, (char *)v37 + *(int *)(v40 + 48), v17);
    sub_202AC(a3, (uint64_t)v29);
    uint64_t v41 = sub_6C5C(&qword_28C0E0);
    uint64_t inited = swift_initStackObject(v41, v211);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
    uint64_t v43 = (unint64_t *)((char *)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 8));
    uint64_t v44 = v43[1];
    *(void *)(inited + 3sub_6C3C(v0 + 2) = *v43;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v44;
    uint64_t v45 = swift_bridgeObjectRetain(v44);
    *(void *)(inited + 4sub_6C3C(v0 + 8) = ResolutionResultType.rawValue.getter(v45);
    *(void *)(inited + 56) = v46;
    unint64_t v47 = sub_75678(inited);
    unint64_t v48 = (unint64_t)v29;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v49 = v201;
    uint64_t v50 = sub_6960(v201, (uint64_t)qword_2969C8);
    uint64_t v51 = v200;
    uint64_t v52 = v194;
    v200[2](v194, v50, v49);
    uint64_t v53 = v190;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v190, v48, v17);
    swift_bridgeObjectRetain_n(v39, 2LL);
    uint64_t v54 = swift_bridgeObjectRetain_n(v47, 2LL);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    int v57 = v56;
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v58 = swift_slowAlloc(42LL, -1LL);
      uint64_t v193 = v17;
      unint64_t v196 = v48;
      uint64_t v59 = v58;
      unint64_t v195 = (os_log_s *)swift_slowAlloc(128LL, -1LL);
      os_log_t v208 = v195;
      *(_DWORD *)uint64_t v59 = 136446978;
      os_log_t v189 = v55;
      uint64_t v60 = static Insights.appSelection.getter();
      unint64_t v62 = v61;
      *(void *)&v206[0] = sub_6978(v60, v61, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease(v62);
      *(_WORD *)(v59 + 1sub_6C3C(v0 + 2) = 2082;
      uint64_t v63 = swift_bridgeObjectRetain(v39);
      uint64_t v64 = Array.description.getter(v63, &type metadata for String);
      LODWORD(v18sub_6C3C(v0 + 8) = v57;
      unint64_t v66 = v65;
      swift_bridgeObjectRelease(v39);
      *(void *)&v206[0] = sub_6978(v64, v66, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease_n(v39, 2LL);
      uint64_t v67 = swift_bridgeObjectRelease(v66);
      *(_WORD *)(v59 + 2sub_6C3C(v0 + 2) = 2080;
      uint64_t v68 = ResolutionResultType.rawValue.getter(v67);
      unint64_t v70 = v69;
      *(void *)&v206[0] = sub_6978(v68, v69, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease(v70);
      uint64_t v71 = *(void (**)(char *, uint64_t))(v18 + 8);
      v71(v53, v193);
      *(_WORD *)(v59 + 3sub_6C3C(v0 + 2) = 2082;
      uint64_t v72 = swift_bridgeObjectRetain(v47);
      uint64_t v73 = Dictionary.description.getter( v72,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
      uint64_t v74 = v39;
      unint64_t v76 = v75;
      swift_bridgeObjectRelease(v47);
      *(void *)&v206[0] = sub_6978(v73, v76, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease_n(v47, 2LL);
      unint64_t v77 = v76;
      uint64_t v39 = v74;
      swift_bridgeObjectRelease(v77);
      os_log_t v78 = v189;
      _os_log_impl( &dword_0,  v189,  (os_log_type_t)v188,  "CommonIntentAppResolver#resolveApp %{public}s BundleResolutionResult disambiguate with bundleIdentifiers:%{publi c}s, resolutionResultType: %s, ResolveApp metadata: %{public}s",  (uint8_t *)v59,  0x2Au);
      id v79 = v195;
      swift_arrayDestroy(v195, 4LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1LL, -1LL);
      uint64_t v80 = v59;
      unint64_t v48 = v196;
      uint64_t v17 = v193;
      swift_slowDealloc(v80, -1LL, -1LL);

      ((void (*)(uint64_t, uint64_t))v51[1])(v194, v201);
    }

    else
    {
      swift_bridgeObjectRelease_n(v39, 2LL);
      uint64_t v71 = *(void (**)(char *, uint64_t))(v18 + 8);
      v71(v53, v17);

      swift_bridgeObjectRelease_n(v47, 2LL);
      ((void (*)(uint64_t, uint64_t))v51[1])(v52, v201);
    }

    BOOL v106 = sub_80E2C((void (*)(uint64_t *__return_ptr, void *))sub_1898C4, (uint64_t)v197, v39);
    swift_bridgeObjectRelease(v39);
    uint64_t v107 = (uint64_t)v192;
    *uint64_t v192 = v106;
    uint64_t v108 = enum case for AppResolutionResult.needsDisambiguation(_:);
    uint64_t v109 = type metadata accessor for AppResolutionResult(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 104LL))(v107, v108, v109);
    swift_storeEnumTagMultiPayload(v107, v191, 0LL);
    unint64_t v110 = sub_25D14(v47);
    swift_bridgeObjectRelease(v47);
    v198(v107, v110);
    swift_bridgeObjectRelease(v110);
    sub_1F6CC(v107, &qword_28C0E8);
    return ((uint64_t (*)(unint64_t, uint64_t))v71)(v48, v17);
  }

  else
  {
    unint64_t v81 = v37[1];
    uint64_t v194 = *v37;
    uint64_t v82 = sub_6C5C(&qword_285EA0);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v34, (char *)v37 + *(int *)(v82 + 48), v17);
    uint64_t v83 = *(void *)(v196 + class metadata base offset for CommonAppResolver);
    uint64_t v182 = a3;
    uint64_t v181 = v83;
    sub_202AC(a3, (uint64_t)v34);
    BOOL v84 = *(char **)(v18 + 16);
    uint64_t v192 = v32;
    id v190 = v84;
    ((void (*)(char *, char *, uint64_t))v84)(v32, v34, v17);
    uint64_t v85 = v17;
    uint64_t v86 = v18;
    uint64_t v191 = (uint64_t)v34;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v87 = v201;
    uint64_t v88 = sub_6960(v201, (uint64_t)qword_2969C8);
    id v89 = v200[2];
    id v90 = v188;
    uint64_t v180 = v88;
    uint64_t v179 = v89;
    ((void (*)(char *))v89)(v188);
    uint64_t v91 = swift_bridgeObjectRetain_n(v81, 2LL);
    uint64_t v92 = (os_log_s *)Logger.logObject.getter(v91);
    unint64_t v93 = v81;
    os_log_type_t v94 = static os_log_type_t.default.getter();
    BOOL v95 = os_log_type_enabled(v92, v94);
    unint64_t v196 = v93;
    uint64_t v183 = v18;
    if (v95)
    {
      uint64_t v96 = swift_slowAlloc(32LL, -1LL);
      uint64_t v97 = swift_slowAlloc(96LL, -1LL);
      os_log_t v208 = (os_log_t)v97;
      *(_DWORD *)uint64_t v96 = 136446722;
      uint64_t v98 = static Insights.appSelection.getter();
      unint64_t v100 = v99;
      *(void *)&v206[0] = sub_6978(v98, v99, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease(v100);
      *(_WORD *)(v96 + 1sub_6C3C(v0 + 2) = 2082;
      swift_bridgeObjectRetain(v93);
      *(void *)&v206[0] = sub_6978(v194, v93, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease_n(v93, 3LL);
      *(_WORD *)(v96 + 2sub_6C3C(v0 + 2) = 2082;
      uint64_t v101 = swift_beginAccess(v192, v202, 0LL, 0LL);
      uint64_t v102 = ResolutionResultType.rawValue.getter(v101);
      unint64_t v104 = v103;
      *(void *)&v206[0] = sub_6978(v102, v103, (uint64_t *)&v208);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
      swift_bridgeObjectRelease(v104);
      _os_log_impl( &dword_0,  v92,  v94,  "CommonIntentAppResolver#resolveApp %{public}s BundleResolutionResult selected with bundleIdentifier:%{public}s r esolutionResultType:%{public}s",  (uint8_t *)v96,  0x20u);
      swift_arrayDestroy(v97, 3LL, (char *)&type metadata for Any + 8);
      uint64_t v105 = v97;
      uint64_t v87 = v201;
      swift_slowDealloc(v105, -1LL, -1LL);
      uint64_t v86 = v183;
      swift_slowDealloc(v96, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v93, 2LL);
    }

    id v112 = (void (**)(uint64_t, uint64_t, uint64_t))v200[1];
    ((void (*)(char *, uint64_t))v112)(v90, v87);
    Swift::Bool v113 = v182;
    if ((v189 & 1) != 0)
    {
      uint64_t v200 = v112;
      uint64_t v114 = v195;
      (*(void (**)(os_log_s *, void, uint64_t))(v86 + 104))( v195,  enum case for ResolutionResultType.UserSelected(_:),  v85);
      unint64_t v115 = v192;
      swift_beginAccess(v192, v203, 1LL, 0LL);
      (*(void (**)(void *, os_log_s *, uint64_t))(v86 + 40))(v115, v114, v85);
      id v116 = v185;
      v179((uint64_t)v185, v180, v87);
      unint64_t v117 = v184;
      ((void (*)(char *, uint64_t, uint64_t))v190)(v184, v191, v85);
      uint64_t v118 = swift_bridgeObjectRetain_n(v93, 2LL);
      BOOL v119 = (os_log_s *)Logger.logObject.getter(v118);
      uint64_t v120 = v86;
      os_log_type_t v121 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v119, v121))
      {
        uint64_t v122 = swift_slowAlloc(42LL, -1LL);
        os_log_t v189 = (os_log_t)swift_slowAlloc(128LL, -1LL);
        os_log_t v208 = v189;
        *(_DWORD *)uint64_t v122 = 136446978;
        uint64_t v123 = v120;
        uint64_t v124 = static Insights.appSelection.getter();
        uint64_t v193 = v85;
        unint64_t v126 = v125;
        *(void *)&v206[0] = sub_6978(v124, v125, (uint64_t *)&v208);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
        swift_bridgeObjectRelease(v126);
        *(_WORD *)(v122 + 1sub_6C3C(v0 + 2) = 2082;
        swift_bridgeObjectRetain(v196);
        *(void *)&v206[0] = sub_6978(v194, v196, (uint64_t *)&v208);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
        uint64_t v127 = swift_bridgeObjectRelease_n(v196, 3LL);
        *(_WORD *)(v122 + 2sub_6C3C(v0 + 2) = 2082;
        uint64_t v128 = ResolutionResultType.rawValue.getter(v127);
        unint64_t v130 = v129;
        *(void *)&v206[0] = sub_6978(v128, v129, (uint64_t *)&v208);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
        swift_bridgeObjectRelease(v130);
        uint64_t v131 = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v117, v193);
        *(_WORD *)(v122 + 3sub_6C3C(v0 + 2) = 2082;
        uint64_t v132 = ResolutionResultType.rawValue.getter(v131);
        unint64_t v134 = v133;
        *(void *)&v206[0] = sub_6978(v132, v133, (uint64_t *)&v208);
        uint64_t v87 = v201;
        uint64_t v85 = v193;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, (char *)v206 + 8);
        swift_bridgeObjectRelease(v134);
        _os_log_impl( &dword_0,  v119,  v121,  "CommonIntentAppResolver#resolveApp %{public}s user selected bundleIdentifier from disambiguation list. bundleI dentifier:%{public}s overwriting resolutionResultType from: %{public}s to %{public}s",  (uint8_t *)v122,  0x2Au);
        os_log_t v135 = v189;
        swift_arrayDestroy(v189, 4LL, (char *)&type metadata for Any + 8);
        unint64_t v93 = v196;
        swift_slowDealloc(v135, -1LL, -1LL);
        uint64_t v136 = v122;
        Swift::Bool v113 = v182;
        swift_slowDealloc(v136, -1LL, -1LL);

        id v112 = v200;
        ((void (*)(void *, uint64_t))v200)(v116, v87);
        uint64_t v86 = v183;
      }

      else
      {
        swift_bridgeObjectRelease_n(v93, 2LL);
        (*(void (**)(char *, uint64_t))(v120 + 8))(v117, v85);

        id v112 = v200;
        ((void (*)(void *, uint64_t))v200)(v116, v87);
        uint64_t v86 = v120;
      }
    }

    uint64_t v204 = (uint64_t)v113;
    os_log_t v137 = v113;
    uint64_t v138 = sub_6C5C((uint64_t *)&unk_286C70);
    if (swift_dynamicCast(v206, &v204, v181, v138, 6LL))
    {
      sub_FF54(v206, (uint64_t)&v208);
      BOOL v139 = v137;
      uint64_t v140 = v187;
      v179((uint64_t)v187, v180, v87);
      uint64_t v141 = v186;
      ((void (*)(char *, uint64_t, uint64_t))v190)(v186, v191, v85);
      swift_bridgeObjectRetain_n(v93, 2LL);
      os_log_t v189 = v139;
      unint64_t v142 = v139;
      uint64_t v143 = (os_log_s *)Logger.logObject.getter(v142);
      int v144 = static os_log_type_t.default.getter();
      BOOL v145 = os_log_type_enabled(v143, (os_log_type_t)v144);
      uint64_t v193 = v85;
      if (v145)
      {
        LODWORD(v18sub_6C3C(v0 + 4) = v144;
        uint64_t v200 = v112;
        uint64_t v146 = v85;
        uint64_t v147 = swift_slowAlloc(32LL, -1LL);
        uint64_t v185 = (void *)swift_slowAlloc(8LL, -1LL);
        os_log_type_t v188 = (char *)swift_slowAlloc(64LL, -1LL);
        *(void *)&v206[0] = v188;
        *(_DWORD *)uint64_t v147 = 136315650;
        swift_bridgeObjectRetain(v93);
        uint64_t v204 = sub_6978(v194, v93, (uint64_t *)v206);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205);
        uint64_t v148 = swift_bridgeObjectRelease_n(v93, 3LL);
        *(_WORD *)(v147 + 1sub_6C3C(v0 + 2) = 2080;
        uint64_t v149 = ResolutionResultType.rawValue.getter(v148);
        unint64_t v151 = v150;
        uint64_t v204 = sub_6978(v149, v150, (uint64_t *)v206);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205);
        swift_bridgeObjectRelease(v151);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v141, v146);
        *(_WORD *)(v147 + 2sub_6C3C(v0 + 2) = 2112;
        id v152 = -[os_log_s identifier](v142, "identifier");
        unint64_t v153 = v152;
        if (v152)
        {
          uint64_t v154 = static String._unconditionallyBridgeFromObjectiveC(_:)(v152);
          uint64_t v156 = v155;

          unint64_t v157 = sub_6C9C();
          uint64_t v158 = swift_allocError(&type metadata for String, v157, 0LL, 0LL);
          *uint64_t v159 = v154;
          v159[1] = v156;
          unint64_t v153 = (void *)_swift_stdlib_bridgeErrorToNSError(v158);
          uint64_t v204 = (uint64_t)v153;
        }

        else
        {
          uint64_t v204 = 0LL;
        }

        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205);
        id v161 = v197;
        uint64_t v162 = v185;
        *uint64_t v185 = v153;

        _os_log_impl( &dword_0,  v143,  (os_log_type_t)v184,  "CommonIntentAppResolver#resolveApp persisting resolution result with bundleID: %s and resolutionResultType: %s in intent: %@",  (uint8_t *)v147,  0x20u);
        uint64_t v163 = sub_6C5C((uint64_t *)&unk_286BC0);
        swift_arrayDestroy(v162, 1LL, v163);
        swift_slowDealloc(v162, -1LL, -1LL);
        id v164 = v188;
        swift_arrayDestroy(v188, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v164, -1LL, -1LL);
        swift_slowDealloc(v147, -1LL, -1LL);

        ((void (*)(char *, uint64_t))v200)(v187, v201);
      }

      else
      {
        swift_bridgeObjectRelease_n(v93, 2LL);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v141, v85);

        ((void (*)(char *, uint64_t))v112)(v140, v87);
        id v161 = v197;
      }

      uint64_t v165 = (unint64_t *)((char *)v161
                                + *(void *)(class metadata base offset for CommonAppResolver + *v161 + 32));
      swift_beginAccess(v165, v206, 0LL, 0LL);
      uint64_t v166 = v165[3];
      uint64_t v167 = v165[4];
      unint64_t v168 = sub_6EA8(v165, v166);
      uint64_t v169 = *(void *)(v166 - 8);
      __chkstk_darwin(v168);
      os_log_type_t v171 = (char *)&v179 - v170;
      (*(void (**)(char *))(v169 + 16))((char *)&v179 - v170);
      LOBYTE(v165) = dispatch thunk of FeatureFlagProviding.isAppSelectionEnabled.getter(v166, v167);
      (*(void (**)(char *, uint64_t))(v169 + 8))(v171, v166);
      uint64_t v160 = v192;
      if ((v165 & 1) != 0)
      {
        uint64_t v172 = v209;
        uint64_t v173 = v210;
        sub_6EA8(&v208, v209);
        swift_beginAccess(v160, &v204, 0LL, 0LL);
        CommonIntentSignals.addPreResolvedApp(bundleID:resolutionResultType:)(v194, v196, v160, v172, v173);
      }

      sub_6C3C(&v208);
      uint64_t v85 = v193;
      uint64_t v86 = v183;
      os_log_t v137 = v189;
    }

    else
    {
      uint64_t v207 = 0LL;
      memset(v206, 0, sizeof(v206));
      sub_1F6CC((uint64_t)v206, &qword_2858C8);
      uint64_t v160 = v192;
    }

    swift_beginAccess(v160, &v208, 0LL, 0LL);
    uint64_t v174 = (uint64_t)v195;
    ((void (*)(os_log_s *, void *, uint64_t))v190)(v195, v160, v85);
    uint64_t v175 = swift_allocObject(&unk_273000, 32LL, 7LL);
    *(void *)(v175 + swift_weakDestroy(v0 + 16) = v198;
    uint64_t v176 = v199;
    *(void *)(v175 + 2sub_6C3C(v0 + 4) = v199;
    swift_retain(v176);
    unint64_t v177 = v196;
    sub_20328(v194, v196, v174, v137, (uint64_t)sub_D477C, v175);
    swift_bridgeObjectRelease(v177);
    swift_release(v175);
    uint64_t v178 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
    v178(v174, v85);
    v178(v191, v85);
    return ((uint64_t (*)(void *, uint64_t))v178)(v160, v85);
  }

uint64_t sub_186DF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v68 = a6;
  uint64_t v69 = a7;
  uint64_t v9 = a3;
  object = (char *)*a3;
  uint64_t v67 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v61 = *(void *)(v67 - 8);
  uint64_t v12 = *(void *)(v61 + 64);
  __chkstk_darwin(v67);
  unint64_t v66 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = swift_allocObject(&unk_272EE8, 32LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v17 + 2sub_6C3C(v0 + 4) = a2;
  uint64_t v65 = v17;
  uint64_t v18 = sub_6C5C(&qword_28C0E0);
  uint64_t inited = swift_initStackObject(v18, v74);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  uint64_t v20 = (void *)((char *)v9 + *(void *)(class metadata base offset for CommonAppResolver + *v9 + 8));
  uint64_t v21 = v20[1];
  *(void *)(inited + 3sub_6C3C(v0 + 2) = *v20;
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v21;
  swift_retain(a2);
  uint64_t v22 = swift_bridgeObjectRetain(v21);
  uint64_t v63 = a4;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = ResolutionResultType.rawValue.getter(v22);
  *(void *)(inited + 56) = v23;
  unint64_t v24 = sub_75678(inited);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v25 = sub_6960(v13, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v25, v13);
  uint64_t v26 = swift_bridgeObjectRetain_n(v24, 2LL);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = v14;
  unint64_t v64 = v24;
  if (v29)
  {
    uint64_t v58 = a5;
    uint64_t v31 = swift_slowAlloc(12LL, -1LL);
    uint64_t v60 = v9;
    uint64_t v32 = (uint8_t *)v31;
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v59 = v12;
    uint64_t v34 = v33;
    *(void *)&__int128 v71 = v33;
    uint64_t v57 = v13;
    uint64_t v56 = v30;
    *(_DWORD *)uint64_t v32 = 136446210;
    uint64_t v35 = swift_bridgeObjectRetain(v24);
    uint64_t v36 = Dictionary.description.getter( v35,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease(v24);
    uint64_t v39 = v36;
    a5 = v58;
    uint64_t v70 = sub_6978(v39, v38, (uint64_t *)&v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
    swift_bridgeObjectRelease_n(v24, 2LL);
    swift_bridgeObjectRelease(v38);
    _os_log_impl( &dword_0,  v27,  v28,  "CommonIntentAppResolver#resolveSelectedApp ResolveApp metadata: %{public}s",  v32,  0xCu);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v12 = v59;
    swift_slowDealloc(v34, -1LL, -1LL);
    uint64_t v40 = v32;
    uint64_t v9 = v60;
    swift_slowDealloc(v40, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v57);
  }

  else
  {

    swift_bridgeObjectRelease_n(v24, 2LL);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  uint64_t v70 = (uint64_t)a5;
  uint64_t v41 = *(void *)&object[class metadata base offset for CommonAppResolver];
  id v42 = a5;
  uint64_t v43 = sub_6C5C(&qword_286638);
  if ((swift_dynamicCast(&v71, &v70, v41, v43, 6LL) & 1) != 0)
  {
    sub_6EA8(&v71, *((uint64_t *)&v72 + 1));
    object = (char *)PrivateMediaIntentDataProviding.getSharedUserID()().value._object;
    sub_6C3C(&v71);
  }

  else
  {
    uint64_t v73 = 0LL;
    __int128 v71 = 0u;
    __int128 v72 = 0u;
    sub_1F6CC((uint64_t)&v71, &qword_286640);
    object = 0LL;
  }

  uint64_t v44 = v61;
  uint64_t v46 = v66;
  uint64_t v45 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v66, v63, v67);
  uint64_t v47 = *(unsigned __int8 *)(v44 + 80);
  uint64_t v48 = (v47 + 72) & ~v47;
  unint64_t v49 = (v12 + v48 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v50 = (char *)swift_allocObject(&unk_272F10, v49 + 8, v47 | 7);
  *((void *)v50 + sub_6C3C(v0 + 2) = v41;
  *((void *)v50 + sub_6C3C(v0 + 3) = v9;
  uint64_t v51 = v68;
  uint64_t v52 = v69;
  *((void *)v50 + sub_6C3C(v0 + 4) = v68;
  *((void *)v50 + 5) = v52;
  *((void *)v50 + 6) = v42;
  *((void *)v50 + sub_6C3C(v0 + 7) = sub_18963C;
  *((void *)v50 + sub_6C3C(v0 + 8) = v65;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v50[v48], v46, v45);
  *(void *)&v50[v49] = v64;
  id v53 = v42;
  swift_retain(v9);
  swift_bridgeObjectRetain(v52);
  sub_188C38(v51, v52, (uint64_t (*)(uint64_t))sub_1896EC, (uint64_t)v50);
  swift_release(v50);
  return swift_bridgeObjectRelease(object);
}

uint64_t sub_1872E4( char a1, void *a2, uint64_t a3, unint64_t a4, void *a5, void (*a6)(char *, unint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v140 = a8;
  uint64_t v144 = a7;
  uint64_t v143 = a6;
  id v145 = a5;
  uint64_t v146 = (void *)a4;
  uint64_t v147 = a3;
  uint64_t v142 = sub_6C5C(&qword_28C0E8);
  __chkstk_darwin(v142);
  uint64_t v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v141 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  BOOL v139 = (char *)&v131 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v131 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v131 - v22;
  uint64_t v24 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a1 & 1) == 0)
  {
    uint64_t v41 = v14;
    uint64_t v42 = v13;
    uint64_t v43 = sub_6C5C(&qword_28C0E0);
    uint64_t inited = swift_initStackObject(v43, v151);
    uint64_t v45 = a2;
    uint64_t v46 = inited;
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
    uint64_t v47 = (void *)((char *)v45 + *(void *)(class metadata base offset for CommonAppResolver + *v45 + 8));
    uint64_t v48 = v47[1];
    *(void *)(inited + 3sub_6C3C(v0 + 2) = *v47;
    *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v48;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))( v27,  enum case for ResolutionResultType.AppNotInstalled(_:),  v24);
    uint64_t v49 = swift_bridgeObjectRetain(v48);
    uint64_t v50 = ResolutionResultType.rawValue.getter(v49);
    uint64_t v52 = v51;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    *(void *)(v46 + 4sub_6C3C(v0 + 8) = v50;
    *(void *)(v46 + 56) = v52;
    unint64_t v53 = sub_75678(v46);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v54 = (char *)v42;
    uint64_t v55 = sub_6960(v42, (uint64_t)qword_2969C8);
    uint64_t v56 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v23, v55, v42);
    uint64_t v57 = v146;
    swift_bridgeObjectRetain_n(v146, 2LL);
    uint64_t v58 = swift_bridgeObjectRetain_n(v53, 2LL);
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc(22LL, -1LL);
      uint64_t v140 = swift_slowAlloc(64LL, -1LL);
      uint64_t v150 = v140;
      *(_DWORD *)uint64_t v61 = 136446466;
      uint64_t v141 = v54;
      swift_bridgeObjectRetain(v57);
      uint64_t v149 = sub_6978(v147, (unint64_t)v57, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
      swift_bridgeObjectRelease_n(v57, 3LL);
      *(_WORD *)(v61 + 1sub_6C3C(v0 + 2) = 2082;
      BOOL v139 = (char *)(v61 + 14);
      uint64_t v62 = swift_bridgeObjectRetain(v53);
      uint64_t v63 = Dictionary.description.getter( v62,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
      uint64_t v138 = v56;
      uint64_t v64 = v63;
      uint64_t v65 = v12;
      unint64_t v67 = v66;
      swift_bridgeObjectRelease(v53);
      uint64_t v57 = v146;
      uint64_t v149 = sub_6978(v64, v67, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
      swift_bridgeObjectRelease_n(v53, 2LL);
      unint64_t v68 = v67;
      uint64_t v12 = v65;
      swift_bridgeObjectRelease(v68);
      _os_log_impl( &dword_0,  v59,  v60,  "CommonIntentAppResolver#resolveSelectedApp app NOT installed: %{public}s, overwriting ResolveApp metadata with: %{public}s",  (uint8_t *)v61,  0x16u);
      uint64_t v69 = v140;
      swift_arrayDestroy(v140, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      (*(void (**)(char *, char *))(v138 + 8))(v23, v141);
    }

    else
    {

      swift_bridgeObjectRelease_n(v53, 2LL);
      swift_bridgeObjectRelease_n(v57, 2LL);
      (*(void (**)(char *, char *))(v56 + 8))(v23, v54);
    }

    v92.value._uint64_t countAndFlagsBits = v147;
    v93._uint64_t countAndFlagsBits = 0xD000000000000031LL;
    v93._object = (void *)0x8000000000222350LL;
    v92.value._object = v57;
    INIntent.setLaunchId(launchId:caller:)(v92, v93);
    uint64_t v94 = enum case for AppResolutionResult.AppResolutionResultError.noAppFound(_:);
    uint64_t v95 = type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 104LL))(v12, v94, v95);
    uint64_t v96 = enum case for AppResolutionResult.unsuccessful(_:);
    uint64_t v97 = type metadata accessor for AppResolutionResult(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 104LL))(v12, v96, v97);
    swift_storeEnumTagMultiPayload(v12, v142, 0LL);
    unint64_t v98 = sub_25D14(v53);
    swift_bridgeObjectRelease(v53);
    v143(v12, v98);
    swift_bridgeObjectRelease(v98);
    uint64_t v99 = (uint64_t)v12;
    return sub_1F6CC(v99, &qword_28C0E8);
  }

  uint64_t v132 = v25;
  uint64_t v133 = v24;
  os_log_t v137 = a2;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  unint64_t v134 = (uint64_t *)v12;
  uint64_t v28 = sub_6960(v13, (uint64_t)qword_2969C8);
  BOOL v29 = *(void (**)(char *))(v14 + 16);
  uint64_t v136 = v28;
  v29(v21);
  uint64_t v30 = v146;
  uint64_t v31 = swift_bridgeObjectRetain_n(v146, 2LL);
  uint64_t v32 = v14;
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc(12LL, -1LL);
    os_log_t v135 = v29;
    uint64_t v36 = (uint8_t *)v35;
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    uint64_t v138 = v32;
    uint64_t v38 = v37;
    uint64_t v150 = v37;
    *(_DWORD *)uint64_t v36 = 136446210;
    swift_bridgeObjectRetain(v30);
    uint64_t v149 = sub_6978(v147, (unint64_t)v30, &v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
    swift_bridgeObjectRelease_n(v30, 3LL);
    _os_log_impl( &dword_0,  v33,  v34,  "CommonIntentAppResolver#resolveSelectedApp app IS installed: %{public}s",  v36,  0xCu);
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    uint64_t v39 = v36;
    BOOL v29 = v135;
    swift_slowDealloc(v39, -1LL, -1LL);

    uint64_t v40 = *(void (**)(char *, uint64_t))(v138 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(v30, 2LL);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v32 + 8);
  }

  v40(v21, v13);
  uint64_t v70 = v13;
  __int128 v71 = v141;
  uint64_t v72 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
  uint64_t v73 = v145;
  uint64_t v74 = swift_dynamicCastObjCClass(v145, v72);
  uint64_t v75 = v147;
  if (!v74) {
    goto LABEL_15;
  }
  unint64_t v76 = (void *)v74;
  id v77 = v73;
  if ((_s23AudioFlowDelegatePlugin22InternalSignalsManagerC10doesIntent_4haveSbSo8INIntentC_SaySSGtFZ_0( v76,  (uint64_t)&off_26B2B8) & 1) != 0 && (static BundleIdentifiers.isFirstParty(bundleIdentifier:)(v75, v30) & 1) == 0)
  {
    id v145 = v77;
    uint64_t v100 = sub_6C5C(&qword_28C0E0);
    uint64_t v101 = swift_initStackObject(v100, v148);
    os_log_t v135 = v29;
    uint64_t v102 = v101;
    *(_OWORD *)(v101 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    unint64_t v103 = (void *)((char *)v137 + *(void *)(class metadata base offset for CommonAppResolver + *v137 + 8));
    uint64_t v104 = v103[1];
    *(void *)(v101 + 3sub_6C3C(v0 + 2) = *v103;
    *(void *)(v101 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v104;
    uint64_t v105 = v132;
    uint64_t v106 = v133;
    (*(void (**)(char *, void, uint64_t))(v132 + 104))( v27,  enum case for ResolutionResultType.UnsupportedLyricsSearch(_:),  v133);
    uint64_t v107 = swift_bridgeObjectRetain(v104);
    uint64_t v108 = ResolutionResultType.rawValue.getter(v107);
    uint64_t v110 = v109;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v27, v106);
    *(void *)(v102 + 4sub_6C3C(v0 + 8) = v108;
    *(void *)(v102 + 56) = v110;
    unint64_t v111 = sub_75678(v102);
    id v112 = v139;
    uint64_t v113 = v70;
    ((void (*)(char *, uint64_t, uint64_t))v135)(v139, v136, v70);
    uint64_t v114 = swift_bridgeObjectRetain_n(v30, 2LL);
    unint64_t v115 = (os_log_s *)Logger.logObject.getter(v114);
    os_log_type_t v116 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v115, v116))
    {
      unint64_t v117 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v118 = swift_slowAlloc(32LL, -1LL);
      uint64_t v150 = v118;
      *(_DWORD *)unint64_t v117 = 136446210;
      swift_bridgeObjectRetain(v146);
      uint64_t v149 = sub_6978(v147, (unint64_t)v146, &v150);
      uint64_t v75 = v147;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
      swift_bridgeObjectRelease_n(v146, 3LL);
      _os_log_impl( &dword_0,  v115,  v116,  "CommonIntentAppResolver#resolveSelectedApp unsupported lyrics search request for 3p: %{public}s",  v117,  0xCu);
      swift_arrayDestroy(v118, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v30 = v146;
      swift_slowDealloc(v118, -1LL, -1LL);
      swift_slowDealloc(v117, -1LL, -1LL);

      BOOL v119 = v139;
    }

    else
    {

      swift_bridgeObjectRelease_n(v30, 2LL);
      BOOL v119 = v112;
    }

    v40(v119, v113);
    uint64_t v120 = v142;
    os_log_type_t v121 = v145;
    v122._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v122._object = (void *)0x80000000002223C0LL;
    v123.value._uint64_t countAndFlagsBits = v75;
    v123.value._object = v30;
    INIntent.setLaunchId(launchId:caller:)(v123, v122);
    type metadata accessor for App(0LL);
    swift_bridgeObjectRetain(v30);
    uint64_t v124 = App.__allocating_init(appIdentifier:)(v75, v30);
    unint64_t v125 = v134;
    *unint64_t v134 = v124;
    uint64_t v126 = enum case for AppResolutionResult.AppResolutionResultError.appNotSupported(_:);
    uint64_t v127 = type metadata accessor for AppResolutionResult.AppResolutionResultError(0LL);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 104LL))(v125, v126, v127);
    uint64_t v128 = enum case for AppResolutionResult.unsuccessful(_:);
    uint64_t v129 = type metadata accessor for AppResolutionResult(0LL);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v129 - 8) + 104LL))(v125, v128, v129);
    swift_storeEnumTagMultiPayload(v125, v120, 0LL);
    unint64_t v130 = sub_25D14(v111);
    swift_bridgeObjectRelease(v111);
    v143((char *)v125, v130);

    swift_bridgeObjectRelease(v130);
    uint64_t v99 = (uint64_t)v125;
    return sub_1F6CC(v99, &qword_28C0E8);
  }

LABEL_15:
  uint64_t v78 = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)(v71, v136, v70);
  id v79 = (os_log_s *)Logger.logObject.getter(v78);
  os_log_type_t v80 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v79, v80))
  {
    uint64_t v81 = v70;
    uint64_t v82 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v82 = 0;
    _os_log_impl( &dword_0,  v79,  v80,  "CommonIntentAppResolver#resolveSelectedApp Removing the launchID from the intent",  v82,  2u);
    uint64_t v83 = v82;
    uint64_t v70 = v81;
    uint64_t v73 = v145;
    swift_slowDealloc(v83, -1LL, -1LL);
  }

  v40(v71, v70);
  v84._object = (void *)0x8000000000222390LL;
  v84._uint64_t countAndFlagsBits = 0xD000000000000024LL;
  INIntent.setLaunchId(launchId:caller:)((Swift::String_optional)0, v84);
  [v73 _setExtensionBundleId:0];
  uint64_t v85 = v137;
  uint64_t v86 = sub_20ACC(v75, (unint64_t)v30);
  uint64_t v87 = (void *)swift_allocObject(&unk_272F38, 48LL, 7LL);
  uint64_t v88 = v143;
  v87[2] = a9;
  v87[3] = v88;
  uint64_t v89 = v144;
  v87[4] = v144;
  v87[5] = v86;
  id v90 = *(void (**)(void *, uint64_t, uint64_t, uint64_t (*)(char), void *))(class metadata base offset for CommonAppResolver
                                                                                                + *v85
                                                                                                + 112);
  swift_bridgeObjectRetain(a9);
  swift_retain(v89);
  swift_retain(v86);
  v90(v73, v86, v140, sub_18978C, v87);
  swift_release(v86);
  return swift_release(v87);
}

uint64_t sub_187F30( char a1, uint64_t a2, void (*a3)(void *, unint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  uint64_t v8 = sub_6C5C(&qword_28C0E8);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  uint64_t v19 = v17;
  int v35 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc(18LL, -1LL);
    uint64_t v34 = v11;
    uint64_t v21 = v20;
    uint64_t v33 = swift_slowAlloc(32LL, -1LL);
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v21 = 67240450;
    LODWORD(v3sub_6C3C(v0 + 8) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, (char *)&v38 + 4);
    *(_WORD *)(v21 + sub_6C3C(v0 + 8) = 2082;
    uint64_t v32 = v21 + 10;
    uint64_t v22 = swift_bridgeObjectRetain(a2);
    uint64_t v23 = Dictionary.description.getter( v22,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease(a2);
    uint64_t v38 = sub_6978(v23, v25, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v25);
    uint64_t v26 = v19;
    _os_log_impl( &dword_0,  v19,  (os_log_type_t)v35,  "CommonIntentAppResolver#postResolve complete with success?: %{BOOL,public}d, metadata: %{public}s",  (uint8_t *)v21,  0x12u);
    uint64_t v27 = v33;
    swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  *uint64_t v10 = a5;
  uint64_t v28 = enum case for AppResolutionResult.selected(_:);
  uint64_t v29 = type metadata accessor for AppResolutionResult(0LL);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104LL))(v10, v28, v29);
  swift_storeEnumTagMultiPayload(v10, v8, 0LL);
  swift_retain(a5);
  unint64_t v30 = sub_25D14(a2);
  v37(v10, v30);
  swift_bridgeObjectRelease(v30);
  return sub_1F6CC((uint64_t)v10, &qword_28C0E8);
}

uint64_t sub_188258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain(a3);
  uint64_t v12 = swift_bridgeObjectRetain(a1);
  uint64_t v13 = sub_208B0(v12, a2, a3);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(a3);
  uint64_t v14 = v13[2];
  swift_bridgeObjectRelease(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v19 = 67109120;
    HIDWORD(vsub_6C3C(v0 + 21) = v14 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v21 + 4, &v22);
    _os_log_impl( &dword_0,  v17,  v18,  "CommonIntentAppResolver#appInstalled post-refresh app installed?:%{BOOL}d",  v19,  8u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a4(v14 != 0);
}

uint64_t sub_188430(uint64_t a1, void *a2)
{
  uint64_t result = App.appIdentifier.getter(a1);
  if (v4)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t v7 = (void *)((char *)a2 + *(void *)(class metadata base offset for CommonAppResolver + *a2 + 16));
    uint64_t v8 = v7[3];
    uint64_t v9 = v7[4];
    sub_6EA8(v7, v8);
    uint64_t v11 = 0LL;
    memset(v10, 0, sizeof(v10));
    dispatch thunk of AppNameResolving.localizedAppName(for:helper:completion:)(v5, v6, v10, sub_227A0, 0LL, v8, v9);
    swift_bridgeObjectRelease(v6);
    return sub_1F6CC((uint64_t)v10, &qword_2860C0);
  }

  return result;
}

uint64_t sub_1884E4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_188510()
{
  return sub_188430(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t CommonAppResolver.resolveBundleIdentifier(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(class metadata base offset for CommonAppResolver + *v3);
  uint64_t v7 = (char *)v3 + v6[5];
  uint64_t v8 = (char *)v3 + v6[3];
  uint64_t v9 = (uint64_t)v3 + v6[4];
  swift_beginAccess(v9, v14, 0LL, 0LL);
  sub_157C4(v9, (uint64_t)v15);
  uint64_t v13 = 0LL;
  memset(v12, 0, sizeof(v12));
  uint64_t v10 = swift_allocObject(&unk_272D68, 32LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v10 + 2sub_6C3C(v0 + 4) = a3;
  swift_retain(a3);
  INIntent.targetBundleIdentifier(userPreferenceProvider:deviceProvider:featureFlagProvider:internalSearchResults:alwaysInferAppFromSearchResults:nowPlaying:completion:)( v7,  v8,  v15,  0LL,  0LL,  v12,  sub_188E88,  v10);
  swift_release(v10);
  sub_1F6CC((uint64_t)v12, &qword_285EA8);
  return sub_6C3C(v15);
}

uint64_t sub_18861C( uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t *, __n128), uint64_t a5)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v8 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)&v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v37 = a1;
  uint64_t v15 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v16 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter(v17);
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc(22LL, -1LL);
    int v32 = v19;
    uint64_t v21 = v20;
    uint64_t v33 = swift_slowAlloc(64LL, -1LL);
    uint64_t v41 = v33;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v34 = v12;
    uint64_t v35 = v8;
    uint64_t v22 = static Insights.appSelection.getter();
    uint64_t v36 = a5;
    unint64_t v24 = v23;
    uint64_t v40 = sub_6978(v22, v23, &v41);
    uint64_t v8 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 1sub_6C3C(v0 + 2) = 2082;
    swift_bridgeObjectRetain(a2);
    uint64_t v25 = v37;
    uint64_t v40 = sub_6978(v37, a2, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( &dword_0,  v17,  (os_log_type_t)v32,  "CommonIntentAppResolver#resolveBundleIdentifier %{public}s Default resolveBundleIdentifier resolved bundle: %{public}s",  (uint8_t *)v21,  0x16u);
    uint64_t v26 = v33;
    swift_arrayDestroy(v33, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);

    (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v14, v11);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v25 = v37;
  }

  uint64_t v27 = (char *)v10 + *(int *)(sub_6C5C(&qword_285EA0) + 48);
  *uint64_t v10 = v25;
  v10[1] = a2;
  uint64_t v28 = type metadata accessor for ResolutionResultType(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16LL))(v27, v38, v28);
  swift_storeEnumTagMultiPayload(v10, v8, 0LL);
  __n128 v29 = swift_bridgeObjectRetain(a2);
  v39(v10, v29);
  return sub_D47DC((uint64_t)v10);
}

void CommonAppResolver.init()()
{
}

uint64_t sub_188940()
{
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 8)
                                      + 8));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 16)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 24)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 32)));
  sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 40)));
  return sub_6C3C((void *)((char *)v0 + *(void *)(class metadata base offset for CommonAppResolver + *v0 + 48)));
}

uint64_t CommonAppResolver.__deallocating_deinit()
{
  uint64_t v0 = CommonAppResolver.deinit();
  return swift_deallocClassInstance(v0, 232LL, 7LL);
}

uint64_t BundleResolutionResult.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for BundleResolutionResult(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_188ECC(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    uint64_t v9 = *v8;
    uint64_t v10 = sub_6C5C(&qword_287F80);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, (char *)v8 + *(int *)(v10 + 48), v2);
    uint64_t v22 = 0LL;
    unint64_t v23 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(22LL);
    v11._uint64_t countAndFlagsBits = 0x69626D617369642ELL;
    v11._object = (void *)0xEF28206574617567LL;
    String.append(_:)(v11);
    v12._uint64_t countAndFlagsBits = Array.description.getter(v9, &type metadata for String);
    object = v12._object;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(v9);
  }

  else
  {
    uint64_t v14 = *v8;
    object = (void *)v8[1];
    uint64_t v15 = sub_6C5C(&qword_285EA0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, (char *)v8 + *(int *)(v15 + 48), v2);
    uint64_t v22 = 0LL;
    unint64_t v23 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(18LL);
    v16._uint64_t countAndFlagsBits = 0x657463656C65732ELL;
    v16._object = (void *)0xEB00000000282064LL;
    String.append(_:)(v16);
    v17._uint64_t countAndFlagsBits = v14;
    v17._object = object;
    String.append(_:)(v17);
  }

  swift_bridgeObjectRelease(object);
  v18._uint64_t countAndFlagsBits = 8236LL;
  v18._object = (void *)0xE200000000000000LL;
  String.append(_:)(v18);
  _print_unlocked<A, B>(_:_:)( v5,  &v22,  v2,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v19._uint64_t countAndFlagsBits = 41LL;
  v19._object = (void *)0xE100000000000000LL;
  String.append(_:)(v19);
  uint64_t v20 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v20;
}

uint64_t sub_188C2C(uint64_t a1, uint64_t a2)
{
  return sub_183BD0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_188C38(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Swift::String v12 = (void *)((char *)v4 + *(void *)(class metadata base offset for CommonAppResolver + *v4 + 24));
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  sub_6EA8(v12, v13);
  if ((dispatch thunk of DeviceProviding.isHomePod.getter(v13, v14) & 1) != 0)
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v15 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
    Swift::String v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    Swift::String v19 = a3;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( &dword_0,  v17,  v18,  "CommonIntentAppResolver#appInstalled assuming HomePod apps are installed",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v19(1LL);
  }

  else
  {
    uint64_t v22 = (void *)((char *)v4 + *(void *)(class metadata base offset for CommonAppResolver + *v4 + 48));
    uint64_t v23 = v22[3];
    uint64_t v24 = v22[4];
    sub_6EA8(v22, v23);
    uint64_t v25 = (void *)swift_allocObject(&unk_272F60, 56LL, 7LL);
    v25[2] = v27;
    uint64_t v26 = v28;
    v25[3] = v28;
    v25[4] = a3;
    void v25[5] = a4;
    v25[6] = v5;
    swift_bridgeObjectRetain(v26);
    swift_retain(a4);
    swift_retain(v5);
    InstalledAppProviding.installedApps(for:sharedUserId:useCache:completion:)( 0LL,  0LL,  0LL,  1LL,  sub_20584,  v25,  v23,  v24);
    return swift_release(v25);
  }

uint64_t sub_188E88(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_18861C(a1, a2, a3, *(void (**)(uint64_t *, __n128))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t type metadata accessor for BundleResolutionResult(uint64_t a1)
{
  uint64_t result = qword_28C0A8;
  if (!qword_28C0A8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BundleResolutionResult);
  }
  return result;
}

uint64_t sub_188ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleResolutionResult(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_188F10(uint64_t a1)
{
  v2[0] = &unk_219B18;
  v2[1] = &unk_219B30;
  v2[2] = &unk_219B30;
  v2[3] = &unk_219B30;
  v2[4] = &unk_219B30;
  void v2[5] = &unk_219B30;
  return swift_initClassMetadata2(a1, 0LL, 6LL, v2, class metadata base offset for CommonAppResolver + a1 + 8);
}

uint64_t type metadata accessor for CommonAppResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20280(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CommonAppResolver);
}

uint64_t *initializeBufferWithCopyOfBuffer for BundleResolutionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v7);
      uint64_t v8 = *(int *)(sub_6C5C(&qword_287F80) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      Swift::String v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 1LL;
    }

    else
    {
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      uint64_t v17 = *(int *)(sub_6C5C(&qword_285EA0) + 48);
      os_log_type_t v18 = (char *)a1 + v17;
      Swift::String v19 = (char *)a2 + v17;
      uint64_t v20 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v18, v19, v20);
      Swift::String v12 = a1;
      uint64_t v13 = a3;
      uint64_t v14 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }

  return a1;
}

uint64_t destroy for BundleResolutionResult(void *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    swift_bridgeObjectRelease(*a1);
    uint64_t v3 = &qword_287F80;
  }

  else
  {
    swift_bridgeObjectRelease(a1[1]);
    uint64_t v3 = &qword_285EA0;
  }

  uint64_t v4 = (char *)a1 + *(int *)(sub_6C5C(v3) + 48);
  uint64_t v5 = type metadata accessor for ResolutionResultType(0LL);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
}

uint64_t *initializeWithCopy for BundleResolutionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    swift_bridgeObjectRetain(v6);
    uint64_t v7 = *(int *)(sub_6C5C(&qword_287F80) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
    uint64_t v11 = 1LL;
  }

  else
  {
    uint64_t v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    swift_bridgeObjectRetain(v12);
    uint64_t v13 = *(int *)(sub_6C5C(&qword_285EA0) + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
    uint64_t v11 = 0LL;
  }

  swift_storeEnumTagMultiPayload(a1, a3, v11);
  return a1;
}

uint64_t *assignWithCopy for BundleResolutionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_D47DC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v6 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v6);
      uint64_t v7 = *(int *)(sub_6C5C(&qword_287F80) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
      uint64_t v11 = 1LL;
    }

    else
    {
      *a1 = *a2;
      uint64_t v12 = a2[1];
      a1[1] = v12;
      swift_bridgeObjectRetain(v12);
      uint64_t v13 = *(int *)(sub_6C5C(&qword_285EA0) + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
      uint64_t v11 = 0LL;
    }

    swift_storeEnumTagMultiPayload(a1, a3, v11);
  }

  return a1;
}

void *initializeWithTake for BundleResolutionResult(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_6C5C(&qword_287F80) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 1LL;
  }

  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v13 = *(int *)(sub_6C5C(&qword_285EA0) + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for ResolutionResultType(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32LL))(v14, v15, v16);
    uint64_t v10 = a1;
    uint64_t v11 = a3;
    uint64_t v12 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void *assignWithTake for BundleResolutionResult(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_D47DC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_6C5C(&qword_287F80) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 1LL;
    }

    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v13 = *(int *)(sub_6C5C(&qword_285EA0) + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for ResolutionResultType(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32LL))(v14, v15, v16);
      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }

  return a1;
}

uint64_t sub_1894B8(uint64_t a1)
{
  uint64_t result = type metadata accessor for ResolutionResultType(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64LL;
    swift_getTupleTypeLayout2(v6, &unk_219B18, v4);
    v7[0] = v6;
    swift_getTupleTypeLayout2(v5, (char *)&value witness table for Builtin.BridgeObject + 64, v4);
    v7[1] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 2LL, v7);
    return 0LL;
  }

  return result;
}

uint64_t sub_18955C(uint64_t a1)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = sub_6C5C(&qword_28C0F0);
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_1895A0()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_189618()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_18963C(uint64_t a1, uint64_t a2)
{
  return sub_1859A0(a1, a2, *(void (**)(char *))(v2 + 16));
}

uint64_t sub_189644()
{
  uint64_t v1 = type metadata accessor for ResolutionResultType(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));

  swift_release(*(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1896EC(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ResolutionResultType(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1872E4( a1,  *(void **)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void **)(v1 + 48),  *(void (**)(char *, unint64_t))(v1 + 56),  *(void *)(v1 + 64),  v1 + v4,  *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_189758()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_18978C(char a1)
{
  return sub_187F30( a1,  *(void *)(v1 + 16),  *(void (**)(void *, unint64_t))(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40));
}

uint64_t sub_189798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_28C0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1897E0()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_189814()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_189840(uint64_t a1)
{
  return sub_188258(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(BOOL))(v1 + 32));
}

uint64_t sub_18984C()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_189880(uint64_t a1)
{
  return sub_185A54( a1,  *(unint64_t **)(v1 + 16),  *(void **)(v1 + 24),  *(unsigned __int8 *)(v1 + 32),  *(void (**)(uint64_t, unint64_t))(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t sub_189890(uint64_t a1)
{
  return a1;
}

uint64_t sub_1898C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20ACC(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for UsoAppResolutionProvider()
{
  return &type metadata for UsoAppResolutionProvider;
}

uint64_t sub_189924()
{
  uint64_t v0 = dispatch thunk of AudioUsoIntent.apps.getter();
  uint64_t v1 = v0;
  if (!((unint64_t)v0 >> 62))
  {
    uint64_t result = *(void *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8LL));
    if (result) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease(v1);
    return 0LL;
  }

  if (v0 >= 0) {
    v0 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v0);
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001LL) != 0)
  {
    uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v1);
    goto LABEL_6;
  }

  if (*(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8LL)))
  {
    uint64_t v3 = *(void *)(v1 + 32);
    swift_retain(v3);
LABEL_6:
    uint64_t v4 = swift_bridgeObjectRelease(v1);
    uint64_t v5 = UsoEntity_common_App.bundleIdentifier.getter(v4);
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for App(0LL);
    swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v9 = App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)( v5,  v7,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL);
    swift_release(v3);
    return v9;
  }

  __break(1u);
  return result;
}

uint64_t sub_189A28()
{
  return sub_189924();
}

uint64_t sub_189A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AppResolutionConfirmation(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

void sub_189A6C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v59 - v9;
  id v11 = [v2 backingStore];
  uint64_t v12 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
  uint64_t v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
  if (v13)
  {
    id v68 = a1;
    id v14 = [v13 privatePlayMediaIntentData];
    if (v14)
    {
      uint64_t v15 = v14;
      unint64_t v66 = v10;
      id v16 = [v14 privateMediaIntentData];

      id v67 = v16;
      if (v16)
      {
        id v17 = [v68 backingStore];
        uint64_t v18 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
        Swift::String v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
        if (v19)
        {
          id v20 = [v19 privatePlayMediaIntentData];
          if (v20)
          {
            uint64_t v21 = v20;
            id v22 = [v20 privateMediaIntentData];

            id v65 = v22;
            if (v22)
            {
              if (qword_283888 != -1) {
                swift_once(&qword_283888, sub_BFC5C);
              }
              uint64_t v23 = sub_6960(v4, (uint64_t)qword_2969C8);
              uint64_t v24 = v66;
              (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v66, v23, v4);
              id v25 = v68;
              id v26 = v2;
              id v27 = v25;
              id v28 = v26;
              __n128 v29 = (os_log_s *)Logger.logObject.getter(v28);
              os_log_type_t v30 = static os_log_type_t.error.getter();
              int v31 = v30;
              if (os_log_type_enabled(v29, v30))
              {
                uint64_t v32 = swift_slowAlloc(22LL, -1LL);
                uint64_t v64 = swift_slowAlloc(64LL, -1LL);
                uint64_t v70 = v64;
                *(_DWORD *)uint64_t v32 = 136315394;
                uint64_t v61 = v32 + 4;
                id v33 = [v27 description];
                id v68 = v28;
                id v34 = v33;
                uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
                int v63 = v31;
                uint64_t v36 = v35;
                os_log_t v62 = v29;
                uint64_t v37 = v27;
                unint64_t v39 = v38;

                uint64_t v69 = sub_6978(v36, v39, &v70);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

                swift_bridgeObjectRelease(v39);
                *(_WORD *)(v32 + 1sub_6C3C(v0 + 2) = 2080;
                os_log_type_t v60 = (uint8_t *)v32;
                uint64_t v61 = v32 + 14;
                id v40 = [v68 description];
                uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
                unint64_t v43 = v42;

                id v27 = v37;
                uint64_t v44 = sub_6978(v41, v43, &v70);
                uint64_t v45 = v60;
                uint64_t v69 = v44;
                id v28 = v68;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

                swift_bridgeObjectRelease(v43);
                os_log_t v46 = v62;
                _os_log_impl( &dword_0,  v62,  (os_log_type_t)v63,  "INPlayMediaIntent#copyWholeHouseAudioData Copying over WHA data from %s to %s",  v45,  0x16u);
                uint64_t v47 = v64;
                swift_arrayDestroy(v64, 2LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v47, -1LL, -1LL);
                swift_slowDealloc(v45, -1LL, -1LL);

                (*(void (**)(char *, uint64_t))(v5 + 8))(v66, v4);
              }

              else
              {

                (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
              }

              uint64_t v55 = v67;
              id v56 = v65;
              id v57 = [v65 wholeHouseAudioMetadata];
              [v55 setWholeHouseAudioMetadata:v57];

              id v58 = [v27 hashedRouteUIDs];
              [v28 setHashedRouteUIDs:v58];

              return;
            }
          }

          uint64_t v48 = v17;
          id v17 = v11;
        }

        else
        {
          uint64_t v48 = v11;
        }

        uint64_t v49 = v67;

        id v11 = v17;
      }
    }
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v50 = sub_6960(v4, (uint64_t)qword_2969C8);
  uint64_t v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v50, v4);
  uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v53 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl( &dword_0,  v52,  v53,  "INPlayMediaIntent#copyWholeHouseAudioData Couldn't find privateMediaIntentData in the intent. Unable to copy over WholeHouseAudioData",  v54,  2u);
    swift_slowDealloc(v54, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

double sub_189FC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v50 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = type metadata accessor for Parse(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_284CA0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AudioNLv3Intent(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  sub_206FC0(v14, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1LL, v18) == 1)
  {
    sub_1F6CC((uint64_t)v17, &qword_284CA0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v22 = v52;
    uint64_t v23 = sub_6960(v52, (uint64_t)qword_2969C8);
    uint64_t v24 = v51;
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 16))(v6, v23, v22);
    id v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v28 = 0;
      _os_log_impl( &dword_0,  v26,  v27,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider Fatal: Cannot get AudioNLv3Intent from parse",  v28,  2u);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v22);
    __n128 v29 = (_OWORD *)v53;
    *(void *)(v53 + 3sub_6C3C(v0 + 2) = 0LL;
    double result = 0.0;
    _OWORD *v29 = 0u;
    v29[1] = 0u;
  }

  else
  {
    sub_B8980((uint64_t)v17, (uint64_t)v21);
    uint64_t v31 = sub_10430(&qword_287008, type metadata accessor for AudioNLv3Intent, (uint64_t)&unk_21C1A0);
    if ((HomeAutomationEntityProviding.hasHomeAutomationNodes.getter(v18, v31) & 1) != 0)
    {
      uint64_t v33 = v51;
      uint64_t v32 = v52;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v34 = sub_6960(v32, (uint64_t)qword_2969C8);
      uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v10, v34, v32);
      uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v38 = 0;
        _os_log_impl( &dword_0,  v36,  v37,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider MediaPlayer NLv3 intent has homeAutomation nodes. Choosin g as the intent homeAutomationProvider",  v38,  2u);
        swift_slowDealloc(v38, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v32);
      unint64_t v39 = (void *)v53;
      *(void *)(v53 + 2sub_6C3C(v0 + 4) = v18;
      v39[4] = v31;
      id v40 = sub_10974(v39);
      sub_B8980((uint64_t)v21, (uint64_t)v40);
    }

    else
    {
      uint64_t v42 = v51;
      uint64_t v41 = v52;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v43 = sub_6960(v41, (uint64_t)qword_2969C8);
      uint64_t v44 = v50;
      uint64_t v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 16))(v50, v43, v41);
      os_log_t v46 = (os_log_s *)Logger.logObject.getter(v45);
      os_log_type_t v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl( &dword_0,  v46,  v47,  "INPlayMediaIntent#chooseHomeAutomationEntityProvider No homeAutomation nodes found in NLv3 intent",  v48,  2u);
        swift_slowDealloc(v48, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
      sub_DD994((uint64_t)v21);
      double result = 0.0;
      uint64_t v49 = v53;
      *(_OWORD *)uint64_t v53 = 0u;
      *(_OWORD *)(v49 + swift_weakDestroy(v0 + 16) = 0u;
      *(void *)(v49 + 3sub_6C3C(v0 + 2) = 0LL;
    }
  }

  return result;
}

uint64_t sub_18A468( void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v161 = a8;
  uint64_t v160 = a6;
  uint64_t v162 = a5;
  uint64_t v164 = a4;
  uint64_t v163 = a3;
  uint64_t v173 = type metadata accessor for DeviceCategory(0LL);
  uint64_t v172 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  unint64_t v177 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_28C110);
  __chkstk_darwin(v12);
  id v14 = (char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Device(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v169 = (char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_type_t v171 = (char *)&v153 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v168 = (char *)&v153 - v22;
  __chkstk_darwin(v21);
  uint64_t v175 = (char *)&v153 - v23;
  uint64_t v174 = (uint64_t (*)(char *, char *, uint64_t))type metadata accessor for OSSignpostID(0LL);
  unint64_t v167 = *((void *)v174 - 1);
  __chkstk_darwin(v174);
  uint64_t v165 = (uint64_t *)((char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v166 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v166 - 8);
  uint64_t v26 = __chkstk_darwin(v166);
  id v28 = (char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v31 = __chkstk_darwin(v30);
  __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v153 - v35;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    uint64_t v57 = (uint64_t)a1;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v58 = v166;
    uint64_t v59 = sub_6960(v166, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v59, v58);
    swift_errorRetain(a1);
    uint64_t v60 = swift_errorRetain(a1);
    uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
    os_log_type_t v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      int v63 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v64 = swift_slowAlloc(32LL, -1LL);
      uint64_t v159 = (uint64_t (**)(char *, uint64_t))v25;
      uint64_t v65 = v64;
      *(void *)&__int128 v179 = v64;
      *(_DWORD *)int v63 = 136315138;
      swift_getErrorValue(v57, v181, v180);
      uint64_t v66 = Error.localizedDescription.getter(v180[1], v180[2]);
      unint64_t v68 = v67;
      *(void *)&v178[0] = sub_6978(v66, v67, (uint64_t *)&v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v178, (char *)v178 + 8);
      swift_bridgeObjectRelease(v68);
      sub_25404(v57, 1);
      sub_25404(v57, 1);
      _os_log_impl( &dword_0,  v61,  v62,  "INPlayMediaIntent#performRouteResolution Error resolving devices: %s",  v63,  0xCu);
      swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1LL, -1LL);
      swift_slowDealloc(v63, -1LL, -1LL);

      uint64_t v69 = v159[1](v28, v58);
    }

    else
    {
      sub_25404(v57, 1);
      sub_25404(v57, 1);

      uint64_t v69 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v58);
    }

    uint64_t v102 = static os_signpost_type_t.event.getter(v69);
    if (qword_2838D0 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    uint64_t v103 = qword_296AA0;
    uint64_t v104 = sub_6C5C((uint64_t *)&unk_289320);
    uint64_t v105 = swift_allocObject(v104, 72LL, 7LL);
    *(_OWORD *)(v105 + swift_weakDestroy(v0 + 16) = xmmword_214510;
    *(void *)(v105 + 56) = &type metadata for Int;
    *(void *)(v105 + 6sub_6C3C(v0 + 4) = &protocol witness table for Int;
    *(void *)(v105 + 3sub_6C3C(v0 + 2) = -1LL;
    uint64_t v106 = (uint64_t)v165;
    static OSSignpostID.exclusive.getter(v105);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v102,  &dword_0,  v103,  "resolveWHADestinationDevicesResponse",  36LL,  2LL,  v106,  "status=%{signpost.telemetry:number1,public}d enableTelemetry=YES ",  65LL,  2,  v105);
    swift_bridgeObjectRelease(v105);
    (*(void (**)(uint64_t, uint64_t (*)(char *, char *, uint64_t)))(v167 + 8))(v106, v174);
    v163(258LL);
    return sub_25404(v57, 1);
  }

  uint64_t v170 = v14;
  uint64_t v153 = v34;
  uint64_t v158 = v33;
  uint64_t v154 = v32;
  uint64_t v37 = qword_283888;
  swift_bridgeObjectRetain(a1);
  unint64_t v38 = a1;
  if (v37 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = v166;
  uint64_t v40 = sub_6960(v166, (uint64_t)qword_2969C8);
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  uint64_t v156 = v40;
  unint64_t v157 = v41;
  ((void (*)(char *))v41)(v36);
  uint64_t v42 = swift_bridgeObjectRetain_n(v38, 2LL);
  uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
  os_log_type_t v44 = static os_log_type_t.default.getter();
  BOOL v45 = os_log_type_enabled(v43, v44);
  uint64_t v176 = v16;
  uint64_t v155 = a7;
  if (v45)
  {
    uint64_t v46 = (uint64_t)v38;
    os_log_type_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v48 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v179 = v48;
    uint64_t v159 = (uint64_t (**)(char *, uint64_t))v25;
    *(_DWORD *)os_log_type_t v47 = 136446210;
    uint64_t v49 = Array.debugDescription.getter(v46, v15);
    unint64_t v51 = v50;
    *(void *)&v178[0] = sub_6978(v49, v50, (uint64_t *)&v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v178, (char *)v178 + 8);
    unint64_t v52 = v51;
    uint64_t v16 = v176;
    swift_bridgeObjectRelease(v52);
    sub_25404(v46, 0);
    sub_25404(v46, 0);
    _os_log_impl(&dword_0, v43, v44, "INPlayMediaIntent#performRouteResolution Resolved devices %{public}s", v47, 0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    uint64_t v53 = v47;
    unint64_t v38 = (void *)v46;
    swift_slowDealloc(v53, -1LL, -1LL);

    uint64_t v54 = (uint64_t (**)(char *, uint64_t))v159[1];
    uint64_t v55 = v36;
    uint64_t v56 = v166;
  }

  else
  {
    sub_25404((uint64_t)v38, 0);
    sub_25404((uint64_t)v38, 0);

    uint64_t v54 = *(uint64_t (***)(char *, uint64_t))(v25 + 8);
    uint64_t v55 = v36;
    uint64_t v56 = v39;
  }

  uint64_t v159 = v54;
  uint64_t v70 = ((uint64_t (*)(char *, uint64_t))v54)(v55, v56);
  uint64_t v71 = static os_signpost_type_t.event.getter(v70);
  if (qword_2838D0 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  uint64_t v72 = qword_296AA0;
  uint64_t v73 = sub_6C5C((uint64_t *)&unk_289320);
  uint64_t v74 = swift_allocObject(v73, 72LL, 7LL);
  *(_OWORD *)(v74 + swift_weakDestroy(v0 + 16) = xmmword_214510;
  *(void *)(v74 + 56) = &type metadata for Int;
  *(void *)(v74 + 6sub_6C3C(v0 + 4) = &protocol witness table for Int;
  *(void *)(v74 + 3sub_6C3C(v0 + 2) = 0LL;
  uint64_t v75 = (uint64_t)v165;
  static OSSignpostID.exclusive.getter(v74);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v71,  &dword_0,  v72,  "resolveWHADestinationDevicesResponse",  36LL,  2LL,  v75,  "status=%{signpost.telemetry:number1,public}d enableTelemetry=YES ",  65LL,  2,  v74);
  swift_bridgeObjectRelease(v74);
  (*(void (**)(uint64_t, uint64_t (*)(char *, char *, uint64_t)))(v167 + 8))(v75, v174);
  uint64_t v76 = v38[2];
  if (!v76)
  {
    sub_25404((uint64_t)v38, 0);
    uint64_t v108 = 258LL;
    return ((uint64_t (*)(uint64_t))v163)(v108);
  }

  uint64_t v77 = v162[3];
  uint64_t v78 = v162[4];
  sub_6EA8(v162, v77);
  BOOL v79 = sub_171F24(v77, v78);
  if (v76 == 1 || !v79) {
    goto LABEL_48;
  }
  unint64_t v167 = (*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  os_log_type_t v80 = (char *)v38 + v167;
  uint64_t v81 = *(void *)(v16 + 72);
  uint64_t v174 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v165 = v38;
  swift_bridgeObjectRetain(v38);
  unint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v82 = (uint64_t)v177;
  uint64_t v83 = v175;
  do
  {
    uint64_t v84 = v174(v83, v80, v15);
    uint64_t v85 = Device.type.getter(v84);
    uint64_t v87 = v86;
    uint64_t v88 = static DeviceCategory.keys.getter(v85);
    static DeviceCategory.appletv.getter();
    if (*(void *)(v88 + 16) && (unint64_t v89 = sub_9A6AC(v82), (v90 & 1) != 0))
    {
      uint64_t v91 = (uint64_t *)(*(void *)(v88 + 56) + 16 * v89);
      uint64_t v92 = *v91;
      unint64_t v93 = v91[1];
      swift_bridgeObjectRetain(v93);
    }

    else
    {
      unint64_t v93 = 0xE700000000000000LL;
      uint64_t v92 = 0x7674656C707061LL;
    }

    swift_bridgeObjectRelease(v88);
    (*(void (**)(char *, uint64_t))(v172 + 8))(v177, v173);
    if (v87)
    {
      uint64_t v83 = v175;
      if (v85 == v92 && v87 == v93)
      {
        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v93);
        uint64_t v16 = v176;
LABEL_29:
        uint64_t v96 = (uint64_t)v170;
        v174(v170, v83, v15);
        uint64_t v94 = 0LL;
        goto LABEL_32;
      }

      char v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v87);
      swift_bridgeObjectRelease(v87);
      swift_bridgeObjectRelease(v93);
      uint64_t v16 = v176;
      if ((v95 & 1) != 0) {
        goto LABEL_29;
      }
      uint64_t v94 = 1LL;
    }

    else
    {
      swift_bridgeObjectRelease(v93);
      uint64_t v94 = 1LL;
      uint64_t v83 = v175;
      uint64_t v16 = v176;
    }

    uint64_t v96 = (uint64_t)v170;
LABEL_32:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v96, v94, 1LL, v15);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v83, v15);
    int v97 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v96, 1LL, v15);
    uint64_t v82 = (uint64_t)v177;
    if (v97 == 1)
    {
      sub_1F6CC(v96, &qword_28C110);
    }

    else
    {
      unint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 32);
      uint64_t v99 = v168;
      v98(v168, v96, v15);
      v98(v171, (uint64_t)v99, v15);
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0) {
        unint64_t v38 = (void *)sub_1FB30(0, v38[2] + 1LL, 1, (unint64_t)v38);
      }
      unint64_t v101 = v38[2];
      unint64_t v100 = v38[3];
      if (v101 >= v100 >> 1) {
        unint64_t v38 = (void *)sub_1FB30(v100 > 1, v101 + 1, 1, (unint64_t)v38);
      }
      _OWORD v38[2] = v101 + 1;
      v98((char *)v38 + v167 + v101 * v81, (uint64_t)v171, v15);
      uint64_t v82 = (uint64_t)v177;
      uint64_t v83 = v175;
    }

    v80 += v81;
    --v76;
  }

  while (v76);
  uint64_t v109 = (uint64_t)v165;
  sub_25404((uint64_t)v165, 0);
  sub_25404(v109, 0);
  uint64_t v110 = v162[3];
  uint64_t v111 = v162[4];
  sub_6EA8(v162, v110);
  if ((sub_171D98(v110, v111) & 1) == 0 || v38[2] != 1LL)
  {
    swift_bridgeObjectRelease(v38);
    uint64_t v142 = v166;
    uint64_t v143 = v157(v158, v156, v166);
    uint64_t v144 = (os_log_s *)Logger.logObject.getter(v143);
    os_log_type_t v145 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v144, v145))
    {
      uint64_t v146 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v146 = 0;
      _os_log_impl( &dword_0,  v144,  v145,  "INPlayMediaIntent#performRouteResolution Request to play music on speaker/homepod/TV, but multiple devices match ing the deviceType found. Returning .noSpecificSpeaker",  v146,  2u);
      swift_slowDealloc(v146, -1LL, -1LL);
    }

    ((void (*)(uint64_t, uint64_t))v159)(v158, v142);
    uint64_t v108 = 259LL;
    return ((uint64_t (*)(uint64_t))v163)(v108);
  }

  uint64_t v112 = v157(v153, v156, v166);
  uint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
  os_log_type_t v114 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v113, v114))
  {
    unint64_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v115 = 0;
    _os_log_impl( &dword_0,  v113,  v114,  "INPlayMediaIntent#performRouteResolution Request to play music on the TV: multiple TVs resolved but only 1 AppleTV was found. Selecting it and continuing...",  v115,  2u);
    swift_slowDealloc(v115, -1LL, -1LL);
  }

  ((void (*)(uint64_t, uint64_t))v159)(v153, v166);
LABEL_48:
  os_log_type_t v116 = (void (*)(char *, uint64_t))v162[3];
  uint64_t v117 = v162[4];
  sub_6EA8(v162, (uint64_t)v116);
  if ((sub_171274(v116, v117) & 1) == 0)
  {
    uint64_t v118 = swift_bridgeObjectRetain(v38);
    BOOL v119 = sub_18B4E0(v118);
    swift_bridgeObjectRelease(v38);
    if (!v119)
    {
      uint64_t v120 = v157(v154, v156, v166);
      os_log_type_t v121 = (os_log_s *)Logger.logObject.getter(v120);
      os_log_type_t v122 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v121, v122))
      {
        Swift::String_optional v123 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)Swift::String_optional v123 = 0;
        _os_log_impl( &dword_0,  v121,  v122,  "INPlayMediaIntent#performRouteResolution TVs were not explicitely targeted in the intent. Pruning from all devices",  v123,  2u);
        swift_slowDealloc(v123, -1LL, -1LL);
      }

      ((void (*)(uint64_t, uint64_t))v159)(v154, v166);
      uint64_t v124 = v162[3];
      uint64_t v125 = v162[4];
      sub_6EA8(v162, v124);
      uint64_t v126 = sub_17235C(v124, v125);
      uint64_t v127 = sub_18B70C(v126, (uint64_t)v38);
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v126);
      unint64_t v38 = (void *)v127;
    }
  }

  uint64_t v128 = v38[2];
  if (v128)
  {
    uint64_t v129 = (char *)v38 + ((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v130 = *(void *)(v16 + 72);
    uint64_t v131 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v165 = v38;
    swift_bridgeObjectRetain(v38);
    uint64_t v132 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v134 = v169;
      uint64_t v135 = v131(v169, v129, v15);
      uint64_t v136 = Device.identifier.getter(v135);
      uint64_t v138 = v137;
      (*(void (**)(char *, uint64_t))(v176 + 8))(v134, v15);
      if (v138)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v132) & 1) == 0) {
          uint64_t v132 = sub_1FC6C(0LL, v132[2] + 1LL, 1, v132);
        }
        unint64_t v140 = v132[2];
        unint64_t v139 = v132[3];
        if (v140 >= v139 >> 1) {
          uint64_t v132 = sub_1FC6C((void *)(v139 > 1), v140 + 1, 1, v132);
        }
        void v132[2] = v140 + 1;
        uint64_t v133 = &v132[2 * v140];
        v133[4] = v136;
        v133[5] = v138;
      }

      v129 += v130;
      --v128;
    }

    while (v128);
    uint64_t v141 = (uint64_t)v165;
    swift_bridgeObjectRelease(v165);
  }

  else
  {
    uint64_t v132 = _swiftEmptyArrayStorage;
    uint64_t v141 = (uint64_t)v38;
  }

  uint64_t v147 = v160[3];
  uint64_t v148 = v160[4];
  sub_6EA8(v160, v147);
  sub_157C4((uint64_t)v162, (uint64_t)&v179);
  sub_157C4(v161, (uint64_t)v178);
  uint64_t v149 = (void *)swift_allocObject(&unk_273140, 136LL, 7LL);
  uint64_t v150 = v155;
  v149[2] = v155;
  sub_FF54(&v179, (uint64_t)(v149 + 3));
  sub_FF54(v178, (uint64_t)(v149 + 8));
  v149[13] = v141;
  v149[14] = v132;
  uint64_t v151 = v164;
  v149[15] = v163;
  v149[16] = v151;
  id v152 = v150;
  swift_retain(v151);
  dispatch thunk of SharedContextProviding.fetchPrimaryDeviceContext(completion:)(sub_18C920, v149, v147, v148);
  return swift_release(v149);
}

BOOL sub_18B4E0(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_28C110);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Device(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v25 = (char *)&v21 - v10;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a1 + v23;
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v21 = a1;
    swift_bridgeObjectRetain(a1);
    id v14 = (char *)_swiftEmptyArrayStorage;
    uint64_t v24 = v9;
    uint64_t v22 = v6;
    do
    {
      sub_1E5300(v12, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) == 1)
      {
        sub_1F6CC((uint64_t)v4, &qword_28C110);
      }

      else
      {
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        uint64_t v16 = v25;
        v15(v25, v4, v5);
        v15(v9, v16, v5);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0) {
          id v14 = (char *)sub_1FB30(0, *((void *)v14 + 2) + 1LL, 1, (unint64_t)v14);
        }
        unint64_t v18 = *((void *)v14 + 2);
        unint64_t v17 = *((void *)v14 + 3);
        if (v18 >= v17 >> 1) {
          id v14 = (char *)sub_1FB30(v17 > 1, v18 + 1, 1, (unint64_t)v14);
        }
        *((void *)v14 + sub_6C3C(v0 + 2) = v18 + 1;
        uint64_t v9 = v24;
        v15(&v14[v23 + v18 * v13], v24, v5);
        uint64_t v6 = v22;
      }

      v12 += v13;
      --v11;
    }

    while (v11);
    swift_bridgeObjectRelease(v21);
  }

  else
  {
    id v14 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v19 = *((void *)v14 + 2);
  swift_bridgeObjectRelease(v14);
  return v19 == 0;
}

uint64_t sub_18B70C(void *a1, uint64_t a2)
{
  uint64_t v57 = a1;
  uint64_t v3 = type metadata accessor for Device(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v67 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  unint64_t v68 = (char *)&v55 - v7;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = &_swiftEmptyDictionarySingleton;
  uint64_t v71 = &_swiftEmptyDictionarySingleton;
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v58 = v9;
  if (v12)
  {
    uint64_t v55 = a2;
    uint64_t v56 = v8;
    uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v14 = (v13 + 32) & ~v13;
    uint64_t v8 = a2 + v14;
    uint64_t v15 = *(void *)(v4 + 72);
    uint64_t v65 = v14;
    uint64_t v62 = v13 | 7;
    uint64_t v63 = v15 + v14;
    uint64_t v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain(a2);
    __int128 v61 = xmmword_214510;
    uint64_t v64 = v3;
    uint64_t v60 = v4;
    while (1)
    {
      uint64_t v16 = v68;
      uint64_t v17 = v3;
      uint64_t v18 = v66(v68, v8, v3);
      uint64_t v9 = Device.roomName.getter(v18);
      uint64_t v20 = v19;
      unint64_t v22 = sub_9A9F8(v9, v19);
      uint64_t v23 = v11[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }

      char v26 = v21;
      if (v11[3] < v25)
      {
        sub_1CD0B4(v25, 1LL);
        uint64_t v11 = v71;
        unint64_t v27 = sub_9A9F8(v9, v20);
        if ((v26 & 1) != (v28 & 1))
        {
          uint64_t v54 = sub_6C5C(&qword_284600);
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v54);
          __break(1u);
          return result;
        }

        unint64_t v22 = v27;
      }

      if ((v26 & 1) != 0)
      {
        swift_bridgeObjectRelease(v20);
        uint64_t v29 = v4;
        uint64_t v30 = v11[7];
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v31(v67, v68, v17);
        unint64_t v32 = *(void *)(v30 + 8 * v22);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
        *(void *)(v30 + 8 * v2sub_6C3C(v0 + 2) = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v32 = sub_1FB30(0, *(void *)(v32 + 16) + 1LL, 1, v32);
          *(void *)(v30 + 8 * v2sub_6C3C(v0 + 2) = v32;
        }

        unint64_t v35 = *(void *)(v32 + 16);
        unint64_t v34 = *(void *)(v32 + 24);
        if (v35 >= v34 >> 1)
        {
          unint64_t v32 = sub_1FB30(v34 > 1, v35 + 1, 1, v32);
          *(void *)(v30 + 8 * v2sub_6C3C(v0 + 2) = v32;
        }

        uint64_t v4 = v60;
        *(void *)(v32 + swift_weakDestroy(v0 + 16) = v35 + 1;
        uint64_t v3 = v64;
        v31((char *)(v32 + v65 + v35 * v15), v67, v64);
      }

      else
      {
        uint64_t v36 = sub_6C5C(&qword_287DF8);
        uint64_t v16 = (char *)swift_allocObject(v36, v63, v62);
        *((_OWORD *)v16 + 1) = v61;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v16[v65], v68, v17);
        v11[(v22 >> 6) + 8] |= 1LL << v22;
        uint64_t v37 = (uint64_t *)(v11[6] + 16 * v22);
        *uint64_t v37 = v9;
        v37[1] = v20;
        *(void *)(v11[7] + 8 * v2sub_6C3C(v0 + 2) = v16;
        uint64_t v38 = v11[2];
        BOOL v39 = __OFADD__(v38, 1LL);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_24;
        }
        v11[2] = v40;
        uint64_t v3 = v17;
      }

      v8 += v15;
      if (!--v12)
      {
        uint64_t v17 = v3;
        a2 = v55;
        swift_bridgeObjectRelease(v55);
        uint64_t v8 = v56;
        uint64_t v9 = v58;
        goto LABEL_18;
      }
    }
  }

  uint64_t v17 = v3;
LABEL_18:
  uint64_t v41 = v57;
  swift_bridgeObjectRetain(v57);
  swift_retain(v11);
  uint64_t v16 = sub_18F640(a2, v41, (uint64_t)v11);
  swift_bridgeObjectRelease(v41);
  swift_release_n(v11, 2LL);
  if (qword_283888 != -1) {
LABEL_25:
  }
    swift_once(&qword_283888, sub_BFC5C);
  uint64_t v42 = sub_6960(v8, (uint64_t)qword_2969C8);
  uint64_t v43 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v59, v42, v8);
  uint64_t v44 = swift_bridgeObjectRetain_n(v16, 2LL);
  BOOL v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    os_log_type_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v48 = (void *)swift_slowAlloc(32LL, -1LL);
    uint64_t v71 = v48;
    *(_DWORD *)os_log_type_t v47 = 136446210;
    uint64_t v49 = swift_bridgeObjectRetain(v16);
    uint64_t v50 = Array.description.getter(v49, v17);
    unint64_t v52 = v51;
    swift_bridgeObjectRelease(v16);
    uint64_t v69 = sub_6978(v50, v52, (uint64_t *)&v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    swift_bridgeObjectRelease_n(v16, 2LL);
    swift_bridgeObjectRelease(v52);
    _os_log_impl(&dword_0, v45, v46, "Devices after pruning: %{public}s)", v47, 0xCu);
    swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1LL, -1LL);
    swift_slowDealloc(v47, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v8);
  }

  else
  {

    swift_bridgeObjectRelease_n(v16, 2LL);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v43, v8);
  }

  return (uint64_t)v16;
}

uint64_t sub_18BC50( void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  unint64_t v67 = a2;
  unint64_t v68 = a6;
  uint64_t v65 = a3;
  uint64_t v66 = a5;
  uint64_t v64 = a4;
  uint64_t v11 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v63 = v16;
  if (a1)
  {
    id v19 = a1;
    id v20 = [v19 mediaRouteIdentifier];
    if (v20)
    {
      char v21 = v20;
      id v62 = v19;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v24 = v23;

      LOBYTE(vsub_6C3C(v0 + 21) = sub_881D0(v22, v24, v68);
      swift_bridgeObjectRelease(v24);
      uint64_t v25 = swift_allocObject(&unk_273230, 32LL, 7LL);
      *(void *)(v25 + swift_weakDestroy(v0 + 16) = a7;
      *(void *)(v25 + 2sub_6C3C(v0 + 4) = a8;
      uint64_t v26 = qword_2838D0;
      swift_retain(a8);
      if (v26 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      OSSignpostID.init(log:)((id)qword_296AA0);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, v11);
      uint64_t v27 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v28 = (v27 + 33) & ~v27;
      unint64_t v29 = (v13 + v28 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v30 = swift_allocObject(&unk_273258, v29 + 16, v27 | 7);
      *(void *)(v30 + swift_weakDestroy(v0 + 16) = "resolveWHADestinationDevicesRouteEncryption";
      *(void *)(v30 + 2sub_6C3C(v0 + 4) = 43LL;
      *(_BYTE *)(v30 + 3sub_6C3C(v0 + 2) = 2;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v28, v15, v11);
      uint64_t v31 = (uint64_t (**)(unsigned __int8 *))(v30 + v29);
      *uint64_t v31 = sub_18F9E0;
      v31[1] = (uint64_t (*)(unsigned __int8 *))v25;
      uint64_t v32 = swift_retain(v25);
      uint64_t v33 = static os_signpost_type_t.begin.getter(v32);
      os_signpost(_:dso:log:name:signpostID:_:_:)( v33,  &dword_0,  qword_296AA0,  "resolveWHADestinationDevicesRouteEncryption",  43LL,  2LL,  v18,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
      uint64_t v34 = swift_allocObject(&unk_273280, 32LL, 7LL);
      *(void *)(v34 + swift_weakDestroy(v0 + 16) = sub_22488;
      *(void *)(v34 + 2sub_6C3C(v0 + 4) = v30;
      uint64_t v35 = swift_allocObject(&unk_2732A8, 32LL, 7LL);
      *(void *)(v35 + swift_weakDestroy(v0 + 16) = sub_18F9E4;
      *(void *)(v35 + 2sub_6C3C(v0 + 4) = v34;
      uint64_t v36 = v64[3];
      uint64_t v61 = v64[4];
      sub_6EA8(v64, v36);
      sub_157C4(v65, (uint64_t)v69);
      uint64_t v37 = (void *)swift_allocObject(&unk_2732D0, 88LL, 7LL);
      uint64_t v65 = v25;
      uint64_t v38 = v66;
      BOOL v39 = v67;
      v37[2] = v66;
      v37[3] = v39;
      sub_FF54(v69, (uint64_t)(v37 + 4));
      v37[9] = sub_18C968;
      v37[10] = v35;
      swift_retain(v30);
      swift_retain(v34);
      swift_bridgeObjectRetain(v38);
      id v40 = v39;
      dispatch thunk of EncryptionProviding.encodeRouteIds(_:completion:)(v68, sub_18C970, v37, v36, v61);
      swift_release(v30);
      swift_release(v34);
      swift_release(v37);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v63);

      return swift_release(v65);
    }
  }

  uint64_t v41 = swift_allocObject(&unk_273168, 32LL, 7LL);
  *(void *)(v41 + swift_weakDestroy(v0 + 16) = a7;
  *(void *)(v41 + 2sub_6C3C(v0 + 4) = a8;
  uint64_t v42 = qword_2838D0;
  swift_retain(a8);
  if (v42 != -1) {
    swift_once(&qword_2838D0, sub_1362AC);
  }
  OSSignpostID.init(log:)((id)qword_296AA0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, v11);
  uint64_t v43 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v44 = (v43 + 33) & ~v43;
  unint64_t v45 = (v13 + v44 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v46 = swift_allocObject(&unk_273190, v45 + 16, v43 | 7);
  *(void *)(v46 + swift_weakDestroy(v0 + 16) = "resolveWHADestinationDevicesRouteEncryption";
  *(void *)(v46 + 2sub_6C3C(v0 + 4) = 43LL;
  *(_BYTE *)(v46 + 3sub_6C3C(v0 + 2) = 2;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v46 + v44, v15, v11);
  os_log_type_t v47 = (uint64_t (**)(unsigned __int8 *))(v46 + v45);
  uint8_t *v47 = sub_18C938;
  v47[1] = (uint64_t (*)(unsigned __int8 *))v41;
  uint64_t v48 = swift_retain(v41);
  uint64_t v49 = static os_signpost_type_t.begin.getter(v48);
  os_signpost(_:dso:log:name:signpostID:_:_:)( v49,  &dword_0,  qword_296AA0,  "resolveWHADestinationDevicesRouteEncryption",  43LL,  2LL,  v18,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
  uint64_t v50 = swift_allocObject(&unk_2731B8, 32LL, 7LL);
  *(void *)(v50 + swift_weakDestroy(v0 + 16) = sub_22488;
  *(void *)(v50 + 2sub_6C3C(v0 + 4) = v46;
  uint64_t v51 = swift_allocObject(&unk_2731E0, 32LL, 7LL);
  *(void *)(v51 + swift_weakDestroy(v0 + 16) = sub_33C2C;
  *(void *)(v51 + 2sub_6C3C(v0 + 4) = v50;
  uint64_t v52 = v64[3];
  id v62 = (id)v64[4];
  sub_6EA8(v64, v52);
  sub_157C4(v65, (uint64_t)v69);
  uint64_t v53 = (void *)swift_allocObject(&unk_273208, 88LL, 7LL);
  uint64_t v54 = v66;
  uint64_t v65 = v41;
  uint64_t v55 = v18;
  uint64_t v56 = v12;
  uint64_t v57 = v67;
  v53[2] = v66;
  v53[3] = v57;
  sub_FF54(v69, (uint64_t)(v53 + 4));
  v53[9] = sub_18C968;
  v53[10] = v51;
  swift_bridgeObjectRetain(v54);
  id v58 = v57;
  swift_retain(v46);
  swift_retain(v50);
  dispatch thunk of EncryptionProviding.encodeRouteIds(_:completion:)(v68, sub_18C970, v53, v52, v62);
  swift_release(v46);
  swift_release(v50);
  swift_release(v53);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v63);
  return swift_release(v65);
}

void sub_18C20C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v66 = a4;
  id v71 = a3;
  uint64_t v10 = type metadata accessor for PlaybackControlsFeatureFlagProvider(0LL);
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v68 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v67 = (char *)&v58 - v13;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  id v19 = (char *)&v58 - v18;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v20 = sub_6960(v14, (uint64_t)qword_2969C8);
  char v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v63 = v20;
  uint64_t v64 = v21;
  ((void (*)(char *))v21)(v19);
  swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v22 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc(22LL, -1LL);
    uint64_t v59 = swift_slowAlloc(64LL, -1LL);
    v74[0] = v59;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v61 = a6;
    swift_bridgeObjectRetain(a1);
    uint64_t v27 = Array.description.getter(v26, &type metadata for String);
    uint64_t v60 = v14;
    uint64_t v28 = v27;
    id v62 = a5;
    unint64_t v30 = v29;
    swift_bridgeObjectRelease(a1);
    uint64_t v72 = sub_6978(v28, v30, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
    swift_bridgeObjectRelease_n(a1, 2LL);
    swift_bridgeObjectRelease(v30);
    *(_WORD *)(v25 + 1sub_6C3C(v0 + 2) = 2080;
    uint64_t v31 = type metadata accessor for Device(0LL);
    swift_bridgeObjectRetain(a2);
    uint64_t v33 = Array.description.getter(v32, v31);
    uint64_t v58 = v15;
    unint64_t v35 = v34;
    swift_bridgeObjectRelease(a2);
    uint64_t v72 = sub_6978(v33, v35, v74);
    uint64_t v14 = v60;
    a5 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v35);
    _os_log_impl( &dword_0,  v23,  v24,  "INPlayMediaIntent#whaDestinationDevicesRouteEncryption Encoded routes: %s, devices: %s",  (uint8_t *)v25,  0x16u);
    uint64_t v36 = v59;
    swift_arrayDestroy(v59, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);

    uint64_t v37 = *(void (**)(char *, uint64_t))(v58 + 8);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease_n(a1, 2LL);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v15 + 8);
  }

  v37(v19, v14);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v39 = v71;
  [v71 setHashedRouteUIDs:isa];

  sub_157C4(v66, (uint64_t)v74);
  __n128 v40 = swift_bridgeObjectRetain(a2);
  uint64_t v41 = v67;
  static PlaybackControlsFeatureFlagProvider.instance.getter(v40);
  uint64_t v42 = v69;
  uint64_t v43 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v41, v70);
  uint64_t v44 = (void *)sub_18C9C8(v74, a2);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  id v45 = [v39 backingStore];
  uint64_t v46 = objc_opt_self(&OBJC_CLASS____INPBPlayMediaIntent);
  os_log_type_t v47 = (void *)swift_dynamicCastObjCClass(v45, v46);
  if (v47
    && (id v48 = [v47 privatePlayMediaIntentData]) != 0
    && (uint64_t v49 = v48,
        id v50 = [v48 privateMediaIntentData],
        v49,
        v50))
  {
    [v50 setWholeHouseAudioMetadata:v44];
    a5(0LL);

    uint64_t v44 = v50;
  }

  else
  {

    uint64_t v51 = v65;
    uint64_t v52 = v64(v65, v63, v14);
    uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = v14;
      uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl( &dword_0,  v53,  v54,  "INPlayMediaIntent#whaDestinationDevicesRouteEncryption Couldn't find privateMediaIntentData in the intent. Canno t attach WholeHouseAudioMetadata",  v56,  2u);
      uint64_t v57 = v56;
      uint64_t v14 = v55;
      swift_slowDealloc(v57, -1LL, -1LL);
    }

    v37(v51, v14);
    a5(256LL);
  }
}

BOOL static RouteResolutionError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void RouteResolutionError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int RouteResolutionError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

unint64_t sub_18C7C4()
{
  unint64_t result = qword_28C108;
  if (!qword_28C108)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for RouteResolutionError,  &type metadata for RouteResolutionError);
    atomic_store(result, (unint64_t *)&qword_28C108);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for RouteResolutionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(vsub_6C3C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_6C3C(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_18C854 + 4 * byte_219C05[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18C888 + 4 * byte_219C00[v4]))();
}

uint64_t sub_18C888(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18C898LL);
  }
  return result;
}

uint64_t sub_18C8A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18C8ACLL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_18C8B0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18C8B8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RouteResolutionError()
{
  return &type metadata for RouteResolutionError;
}

uint64_t sub_18C8D4()
{
  sub_6C3C((void *)(v0 + 24));
  sub_6C3C((void *)(v0 + 64));
  swift_bridgeObjectRelease(*(void *)(v0 + 104));
  swift_bridgeObjectRelease(*(void *)(v0 + 112));
  swift_release(*(void *)(v0 + 128));
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t sub_18C920(void *a1)
{
  return sub_18BC50( a1,  *(void **)(v1 + 16),  v1 + 24,  (void *)(v1 + 64),  *(void *)(v1 + 104),  *(void **)(v1 + 112),  *(void *)(v1 + 120),  *(void *)(v1 + 128));
}

uint64_t sub_18C938(unsigned __int8 *a1)
{
  return sub_1AF6F8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_18C944()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_18C97C()
{
  sub_6C3C((void *)(v0 + 32));
  swift_release(*(void *)(v0 + 80));
  return swift_deallocObject(v0, 88LL, 7LL);
}

void sub_18C9B8(uint64_t a1)
{
}

uint64_t sub_18C9C8(void *a1, uint64_t a2)
{
  uint64_t v382 = a2;
  uint64_t v389 = type metadata accessor for Device(0LL);
  uint64_t v390 = *(void *)(v389 - 8);
  uint64_t v3 = __chkstk_darwin(v389);
  uint64_t v5 = (char *)&v348 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v384 = (char *)&v348 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v386 = (char *)&v348 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v387 = (char *)&v348 - v11;
  __chkstk_darwin(v10);
  Swift::String v388 = (char *)&v348 - v12;
  uint64_t v358 = type metadata accessor for DeviceQuantifier(0LL);
  uint64_t v367 = *(void *)(v358 - 8);
  __chkstk_darwin(v358);
  id v350 = (char *)&v348 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v362 = sub_6C5C(&qword_28BA60);
  __chkstk_darwin(v362);
  char v359 = (char *)&v348 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_285140);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v354 = (uint64_t)&v348 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v348 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v348 - v21;
  uint64_t v372 = type metadata accessor for PlaceHint(0LL);
  uint64_t v370 = *(void *)(v372 - 8);
  __chkstk_darwin(v372);
  unsigned __int8 v353 = (char *)&v348 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v371 = sub_6C5C(&qword_28BA58);
  uint64_t v24 = __chkstk_darwin(v371);
  uint64_t v363 = (uint64_t)&v348 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v368 = (uint64_t)&v348 - v26;
  uint64_t v27 = sub_6C5C(&qword_285130);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v352 = (uint64_t)&v348 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  char v361 = (char *)&v348 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v366 = (uint64_t)&v348 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v351 = (uint64_t)&v348 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v385 = (uint64_t)&v348 - v37;
  __chkstk_darwin(v36);
  uint64_t v369 = (uint64_t)&v348 - v38;
  uint64_t v380 = type metadata accessor for Logger(0LL);
  id v39 = *(void (**)(char *, uint64_t))(v380 - 8);
  uint64_t v40 = __chkstk_darwin(v380);
  id v365 = (char *)&v348 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = __chkstk_darwin(v40);
  NSNumber v364 = (char *)&v348 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v383 = (char *)&v348 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  BOOL v355 = (char *)&v348 - v47;
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v348 - v48;
  uint64_t v50 = type metadata accessor for PlaybackControlsFeatureFlagProvider(0LL);
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v348 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v360 = v53;
  os_log_type_t v54 = *(void (**)(void))(v53 + 32);
  uint64_t v373 = v52;
  uint64_t v374 = v55;
  v54();
  uint64_t result = (uint64_t)[objc_allocWithZone(_INPBWholeHouseAudioMetadata) init];
  if (!result) {
    goto LABEL_162;
  }
  uint64_t v57 = (void *)result;
  uint64_t v58 = a1[3];
  uint64_t v59 = a1[4];
  sub_6EA8(a1, v58);
  id v381 = v57;
  uint64_t v405 = dispatch thunk of HomeAutomationEntityProviding.haServiceNames()(v58, v59);
  uint64_t v60 = a1[3];
  uint64_t v61 = a1[4];
  char v379 = a1;
  sub_6EA8(a1, v60);
  uint64_t v62 = dispatch thunk of HomeAutomationEntityProviding.haServiceGroups()(v60, v61);
  sub_97AE4(v62);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v63 = v380;
  uint64_t v64 = sub_6960(v380, (uint64_t)qword_2969C8);
  uint64_t v65 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))*((void *)v39 + 2);
  uint64_t v377 = v64;
  uint64_t v378 = v65;
  uint64_t v66 = ((uint64_t (*)(char *))v65)(v49);
  unint64_t v67 = (os_log_s *)Logger.logObject.getter(v66);
  os_log_type_t v68 = static os_log_type_t.default.getter();
  BOOL v69 = os_log_type_enabled(v67, v68);
  uint64_t v357 = v22;
  uint64_t v356 = v20;
  if (v69)
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    int v395 = (void *)swift_slowAlloc(32LL, -1LL);
    uint64_t v376 = v39;
    uint64_t v71 = (uint64_t)v395;
    *(_DWORD *)uint64_t v70 = 136315138;
    uint64_t v375 = v70 + 4;
    swift_beginAccess(&v405, v391, 0LL, 0LL);
    os_log_type_t v72 = v68;
    uint64_t v73 = v405;
    swift_bridgeObjectRetain(v405);
    uint64_t v75 = Array.description.getter(v74, &type metadata for String);
    unint64_t v77 = v76;
    swift_bridgeObjectRelease(v73);
    uint64_t v401 = sub_6978(v75, v77, (uint64_t *)&v395);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v401, v402);
    swift_bridgeObjectRelease(v77);
    _os_log_impl(&dword_0, v67, v72, "_INPBWholeHouseAudioMetadata#init Unknown entities: %s", v70, 0xCu);
    swift_arrayDestroy(v71, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1LL, -1LL);
    swift_slowDealloc(v70, -1LL, -1LL);

    uint64_t v78 = (void (*)(char *, uint64_t))*((void *)v376 + 1);
    BOOL v79 = v49;
    uint64_t v80 = v380;
  }

  else
  {

    uint64_t v78 = (void (*)(char *, uint64_t))*((void *)v39 + 1);
    BOOL v79 = v49;
    uint64_t v80 = v63;
  }

  uint64_t v376 = v78;
  v78(v79, v80);
  uint64_t v81 = v385;
  uint64_t v82 = *(uint8_t **)(v382 + 16);
  uint64_t v83 = v389;
  uint64_t v375 = v82;
  if (v82)
  {
    uint64_t v84 = v382 + ((*(unsigned __int8 *)(v390 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80));
    uint64_t v85 = *(void *)(v390 + 72);
    uint64_t v86 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v390 + 16);
    __n128 v87 = swift_bridgeObjectRetain(v382);
    uint64_t v88 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v90 = v86(v5, v84, v83, v87);
      uint64_t v91 = Device.roomName.getter(v90);
      uint64_t v93 = v92;
      (*(void (**)(char *, uint64_t))(v390 + 8))(v5, v83);
      if (v93)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0) {
          uint64_t v88 = sub_1FC6C(0LL, v88[2] + 1LL, 1, v88);
        }
        unint64_t v95 = v88[2];
        unint64_t v94 = v88[3];
        if (v95 >= v94 >> 1) {
          uint64_t v88 = sub_1FC6C((void *)(v94 > 1), v95 + 1, 1, v88);
        }
        v88[2] = v95 + 1;
        unint64_t v89 = &v88[2 * v95];
        v89[4] = v91;
        v89[5] = v93;
        uint64_t v83 = v389;
      }

      v84 += v85;
      --v82;
    }

    while (v82);
    swift_bridgeObjectRelease(v382);
    uint64_t v81 = v385;
  }

  else
  {
    uint64_t v88 = _swiftEmptyArrayStorage;
  }

  uint64_t v96 = v379;
  uint64_t v97 = v379[3];
  uint64_t v98 = v379[4];
  sub_6EA8(v379, v97);
  uint64_t v99 = (void *)dispatch thunk of HomeAutomationEntityProviding.haAccessoryNames()(v97, v98);
  unint64_t v404 = v99;
  uint64_t v100 = v96[3];
  sub_6EA8(v96, v100);
  uint64_t v101 = dispatch thunk of HomeAutomationEntityProviding.haRoomNames()(v100);
  uint64_t v102 = v96[3];
  uint64_t v103 = v96[4];
  sub_6EA8(v96, v102);
  uint64_t v104 = dispatch thunk of HomeAutomationEntityProviding.haZoneNames()(v102, v103);
  int v395 = (void *)v101;
  sub_97AE4(v104);
  uint64_t v105 = v395;
  uint64_t v403 = v395;
  if ((dispatch thunk of PlaybackControlsFeatureFlagProviding.isPermanentSpeakerGroupsEnabled()( v374,  &protocol witness table for PlaybackControlsFeatureFlagProvider) & 1) != 0)
  {
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v99);
    __n128 v106 = swift_bridgeObjectRelease(v88);
    uint64_t v403 = _swiftEmptyArrayStorage;
    unint64_t v404 = _swiftEmptyArrayStorage;
    uint64_t v107 = v355;
    uint64_t v108 = v380;
    uint64_t v109 = v378(v355, v377, v380, v106);
    uint64_t v110 = (os_log_s *)Logger.logObject.getter(v109);
    os_log_type_t v111 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v349 = swift_slowAlloc(32LL, -1LL);
      int v395 = (void *)v349;
      *(_DWORD *)uint64_t v112 = 136315138;
      uint64_t v348 = v112 + 4;
      swift_beginAccess(&v405, &v401, 0LL, 0LL);
      uint64_t v113 = v405;
      swift_bridgeObjectRetain(v405);
      uint64_t v115 = Array.description.getter(v114, &type metadata for String);
      unint64_t v117 = v116;
      swift_bridgeObjectRelease(v113);
      uint64_t v118 = v115;
      uint64_t v108 = v380;
      uint64_t v399 = sub_6978(v118, v117, (uint64_t *)&v395);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v399, v400);
      swift_bridgeObjectRelease(v117);
      _os_log_impl(&dword_0, v110, v111, "_INPBWholeHouseAudioMetadata#init Unknown entities: %s", v112, 0xCu);
      uint64_t v119 = v349;
      swift_arrayDestroy(v349, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v119, -1LL, -1LL);
      swift_slowDealloc(v112, -1LL, -1LL);
    }

    v376(v107, v108);
    uint64_t v120 = v383;
    ((void (*)(char *, uint64_t, uint64_t))v378)(v383, v377, v108);
    uint64_t v121 = v382;
    uint64_t v122 = swift_bridgeObjectRetain_n(v382, 2LL);
    Swift::String_optional v123 = (os_log_s *)Logger.logObject.getter(v122);
    os_log_type_t v124 = static os_log_type_t.info.getter(v123);
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v125 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v126 = swift_slowAlloc(32LL, -1LL);
      int v395 = (void *)v126;
      *(_DWORD *)uint64_t v125 = 136315138;
      swift_bridgeObjectRetain(v382);
      uint64_t v127 = Array.description.getter(v382, v83);
      unint64_t v129 = v128;
      swift_bridgeObjectRelease(v382);
      uint64_t v399 = sub_6978(v127, v129, (uint64_t *)&v395);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v399, v400);
      swift_bridgeObjectRelease_n(v382, 2LL);
      unint64_t v130 = v129;
      uint64_t v108 = v380;
      swift_bridgeObjectRelease(v130);
      _os_log_impl(&dword_0, v123, v124, "_INPBWholeHouseAudioMetadata#init Resolved devices: %s", v125, 0xCu);
      swift_arrayDestroy(v126, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v126, -1LL, -1LL);
      uint64_t v131 = v125;
      uint64_t v121 = v382;
      swift_slowDealloc(v131, -1LL, -1LL);

      uint64_t v132 = v383;
    }

    else
    {

      swift_bridgeObjectRelease_n(v121, 2LL);
      uint64_t v132 = v120;
    }

    v376(v132, v108);
    id v160 = v381;
    uint64_t v162 = v364;
    uint64_t v163 = *(void *)(v121 + 16);
    if (v163)
    {
      uint64_t v164 = v121;
      uint64_t v165 = v121 + ((*(unsigned __int8 *)(v390 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80));
      uint64_t v166 = *(void *)(v390 + 72);
      swift_bridgeObjectRetain(v164);
      do
      {
        sub_11F154(v165, &v404, &v403);
        v165 += v166;
        --v163;
      }

      while (v163);
      uint64_t v121 = v382;
      *(void *)&double v161 = swift_bridgeObjectRelease(v382).n128_u64[0];
    }

    unint64_t v167 = v375;
    if (v375)
    {
      uint64_t v168 = v121;
      uint64_t v169 = v121 + ((*(unsigned __int8 *)(v390 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80));
      uint64_t v170 = v375;
      uint64_t v171 = *(void *)(v390 + 72);
      uint64_t v172 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v390 + 16);
      __n128 v173 = swift_bridgeObjectRetain(v168);
      uint64_t v174 = v170 - 1;
      uint64_t v175 = v384;
      do
      {
        uint64_t v176 = v172(v175, v169, v83, v173);
        char v177 = Device.isRequestingDevice.getter(v176);
        (*(void (**)(char *, uint64_t))(v390 + 8))(v175, v83);
        BOOL v179 = v174-- != 0LL;
        if ((v177 & 1) == 0) {
          break;
        }
        v169 += v171;
      }

      while (v179);
      uint64_t v121 = v382;
      *(void *)&double v161 = swift_bridgeObjectRelease(v382).n128_u64[0];
      uint64_t v108 = v380;
      unint64_t v167 = v375;
      id v160 = v381;
    }

    else
    {
      char v177 = 1;
    }

    objc_msgSend(v160, "setIsParticipatingSpeaker:", v177 & 1, v161);
    goto LABEL_84;
  }

  swift_beginAccess(&v405, &v401, 0LL, 0LL);
  BOOL v355 = (char *)v405;
  uint64_t v384 = *(char **)(v405 + 16);
  if (!v384)
  {
    __n128 v159 = swift_bridgeObjectRelease(v88);
    uint64_t v108 = v380;
    id v160 = v381;
    uint64_t v121 = v382;
LABEL_73:
    unint64_t v167 = v375;
    uint64_t v162 = v364;
LABEL_84:
    uint64_t v180 = v378(v162, v377, v108, v159);
    uint64_t v181 = (os_log_s *)Logger.logObject.getter(v180);
    os_log_type_t v182 = static os_log_type_t.default.getter();
    int v183 = v182;
    if (os_log_type_enabled(v181, v182))
    {
      uint64_t v184 = swift_slowAlloc(22LL, -1LL);
      LODWORD(v38sub_6C3C(v0 + 3) = v183;
      uint64_t v185 = v184;
      uint64_t v384 = (char *)swift_slowAlloc(64LL, -1LL);
      int v395 = v384;
      *(_DWORD *)uint64_t v185 = 136315394;
      swift_beginAccess(&v404, v393, 0LL, 0LL);
      unint64_t v186 = v404;
      swift_bridgeObjectRetain(v404);
      uint64_t v188 = Array.description.getter(v187, &type metadata for String);
      unint64_t v190 = v189;
      swift_bridgeObjectRelease(v186);
      uint64_t v399 = sub_6978(v188, v190, (uint64_t *)&v395);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v399, v400);
      swift_bridgeObjectRelease(v190);
      *(_WORD *)(v185 + 1sub_6C3C(v0 + 2) = 2080;
      swift_beginAccess(&v403, v392, 0LL, 0LL);
      uint64_t v191 = v403;
      swift_bridgeObjectRetain(v403);
      uint64_t v193 = Array.description.getter(v192, &type metadata for String);
      unint64_t v195 = v194;
      swift_bridgeObjectRelease(v191);
      id v160 = v381;
      uint64_t v399 = sub_6978(v193, v195, (uint64_t *)&v395);
      uint64_t v121 = v382;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v399, v400);
      swift_bridgeObjectRelease(v195);
      _os_log_impl( &dword_0,  v181,  (os_log_type_t)v383,  "_INPBWholeHouseAudioMetadata#init intent speaker names: %s, intent room names: %s",  (uint8_t *)v185,  0x16u);
      unint64_t v196 = v384;
      swift_arrayDestroy(v384, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v196, -1LL, -1LL);
      swift_slowDealloc(v185, -1LL, -1LL);

      uint64_t v197 = v364;
      uint64_t v198 = v380;
    }

    else
    {

      uint64_t v197 = v162;
      uint64_t v198 = v108;
    }

    v376(v197, v198);
    uint64_t v199 = v379;
    if (v167)
    {
      uint64_t v200 = v121 + ((*(unsigned __int8 *)(v390 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80));
      uint64_t v201 = *(void *)(v390 + 72);
      unint64_t v202 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v390 + 16);
      __n128 v203 = swift_bridgeObjectRetain(v121);
      uint64_t v204 = _swiftEmptyArrayStorage;
      do
      {
        id v206 = v386;
        uint64_t v207 = v202(v386, v200, v83, v203);
        uint64_t v208 = Device.name.getter(v207);
        uint64_t v210 = v209;
        (*(void (**)(char *, uint64_t))(v390 + 8))(v206, v83);
        if (v210)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v204) & 1) == 0) {
            uint64_t v204 = sub_1FC6C(0LL, v204[2] + 1LL, 1, v204);
          }
          unint64_t v212 = v204[2];
          unint64_t v211 = v204[3];
          if (v212 >= v211 >> 1) {
            uint64_t v204 = sub_1FC6C((void *)(v211 > 1), v212 + 1, 1, v204);
          }
          v204[2] = v212 + 1;
          id v205 = &v204[2 * v212];
          v205[4] = v208;
          v205[5] = v210;
          uint64_t v83 = v389;
        }

        v200 += v201;
        --v167;
      }

      while (v167);
      swift_bridgeObjectRelease(v382);
      uint64_t v199 = v379;
      uint64_t v81 = v385;
      unint64_t v167 = v375;
      id v160 = v381;
    }

    else
    {
      uint64_t v204 = _swiftEmptyArrayStorage;
    }

    uint64_t v213 = sub_CA170((uint64_t)v204);
    swift_bridgeObjectRelease(v204);
    int v395 = (void *)v213;
    uint64_t v214 = sub_6C5C(&qword_28C118);
    unint64_t v215 = sub_18F8A4();
    uint64_t v383 = (char *)v214;
    uint64_t v216 = v214;
    char v217 = (char *)v215;
    uint64_t v218 = Collection<>.to_INPBString()(v216);
    swift_bridgeObjectRelease(v213);
    v386 = (char *)sub_1641C(0LL, &qword_286120, &OBJC_CLASS____INPBString_ptr);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v160, "setSpeakerNames:", isa, swift_bridgeObjectRelease(v218).n128_f64[0]);

    uint64_t v384 = v217;
    if (v167)
    {
      uint64_t v220 = v382 + ((*(unsigned __int8 *)(v390 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80));
      uint64_t v221 = *(void *)(v390 + 72);
      id v222 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v390 + 16);
      __n128 v223 = swift_bridgeObjectRetain(v382);
      id v224 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v226 = v387;
        uint64_t v227 = v222(v387, v220, v83, v223);
        uint64_t v228 = Device.roomName.getter(v227);
        uint64_t v230 = v229;
        (*(void (**)(char *, uint64_t))(v390 + 8))(v226, v83);
        if (v230)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v224) & 1) == 0) {
            id v224 = sub_1FC6C(0LL, v224[2] + 1LL, 1, v224);
          }
          unint64_t v232 = v224[2];
          unint64_t v231 = v224[3];
          if (v232 >= v231 >> 1) {
            id v224 = sub_1FC6C((void *)(v231 > 1), v232 + 1, 1, v224);
          }
          v224[2] = v232 + 1;
          uint64_t v225 = &v224[2 * v232];
          v225[4] = v228;
          v225[5] = v230;
          uint64_t v83 = v389;
        }

        v220 += v221;
        --v167;
      }

      while (v167);
      swift_bridgeObjectRelease(v382);
      uint64_t v199 = v379;
      id v160 = v381;
      uint64_t v81 = v385;
      unint64_t v167 = v375;
    }

    else
    {
      id v224 = _swiftEmptyArrayStorage;
    }

    uint64_t v233 = sub_CA170((uint64_t)v224);
    swift_bridgeObjectRelease(v224);
    int v395 = (void *)v233;
    uint64_t v234 = v383;
    uint64_t v235 = Collection<>.to_INPBString()(v383);
    swift_bridgeObjectRelease(v233);
    Class v236 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v160, "setSpeakerRooms:", v236, swift_bridgeObjectRelease(v235).n128_f64[0]);

    swift_beginAccess(&v404, &v399, 0LL, 0LL);
    uint64_t v238 = v404;
    if (v404[2])
    {
      swift_bridgeObjectRetain(v404);
      uint64_t v240 = sub_CA170(v239);
      swift_bridgeObjectRelease(v238);
      int v395 = (void *)v240;
      uint64_t v241 = Collection<>.to_INPBString()(v234);
      swift_bridgeObjectRelease(v240);
      v242.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      *(void *)&double v237 = swift_bridgeObjectRelease(v241).n128_u64[0];
    }

    else
    {
      v242.super.Class isa = 0LL;
    }

    objc_msgSend(v160, "setIntentSpeakerNames:", v242.super.isa, v237, v348);

    swift_beginAccess(&v403, v398, 0LL, 0LL);
    uint64_t v244 = v403;
    uint64_t v245 = v369;
    if (v403[2])
    {
      swift_bridgeObjectRetain(v403);
      uint64_t v247 = sub_CA170(v246);
      swift_bridgeObjectRelease(v244);
      int v395 = (void *)v247;
      uint64_t v248 = Collection<>.to_INPBString()(v234);
      swift_bridgeObjectRelease(v247);
      v249.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      *(void *)&double v243 = swift_bridgeObjectRelease(v248).n128_u64[0];
    }

    else
    {
      v249.super.Class isa = 0LL;
    }

    objc_msgSend(v160, "setIntentSpeakerRooms:", v249.super.isa, v243);

    if (v167)
    {
      uint64_t v250 = v382 + ((*(unsigned __int8 *)(v390 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v390 + 80));
      uint64_t v251 = *(void *)(v390 + 72);
      id v252 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v390 + 16);
      __n128 v253 = swift_bridgeObjectRetain(v382);
      id v254 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v256 = v167;
        uint64_t v257 = v388;
        uint64_t v258 = v252(v388, v250, v83, v253);
        uint64_t v259 = Device.name.getter(v258);
        uint64_t v261 = v260;
        (*(void (**)(char *, uint64_t))(v390 + 8))(v257, v83);
        if (v261)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v254) & 1) == 0) {
            id v254 = sub_1FC6C(0LL, v254[2] + 1LL, 1, v254);
          }
          unint64_t v263 = v254[2];
          unint64_t v262 = v254[3];
          if (v263 >= v262 >> 1) {
            id v254 = sub_1FC6C((void *)(v262 > 1), v263 + 1, 1, v254);
          }
          v254[2] = v263 + 1;
          uint64_t v255 = &v254[2 * v263];
          v255[4] = v259;
          v255[5] = v261;
          uint64_t v81 = v385;
        }

        v250 += v251;
        unint64_t v167 = v256 - 1;
      }

      while (v256 != (_BYTE *)&dword_0 + 1);
      uint64_t v264 = v382;
      swift_bridgeObjectRelease(v382);
      uint64_t v199 = v379;
      id v160 = v381;
      uint64_t v245 = v369;
    }

    else
    {
      id v254 = _swiftEmptyArrayStorage;
      uint64_t v264 = v382;
    }

    swift_bridgeObjectRelease(v264);
    uint64_t v265 = sub_CA170((uint64_t)v254);
    swift_bridgeObjectRelease(v254);
    int v395 = (void *)v265;
    uint64_t v266 = Collection<>.to_INPBString()(v383);
    swift_bridgeObjectRelease(v265);
    Class v267 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v160, "setIntentDestinationSpeakers:", v267, swift_bridgeObjectRelease(v266).n128_f64[0]);

    uint64_t v268 = v199[3];
    uint64_t v269 = v199[4];
    sub_6EA8(v199, v268);
    dispatch thunk of HomeAutomationEntityProviding.haPlaceHint()(v268, v269);
    uint64_t v270 = v370;
    uint64_t v271 = *(void (**)(uint64_t, void, uint64_t))(v370 + 104);
    uint64_t v272 = v372;
    v271(v81, enum case for PlaceHint.house(_:), v372);
    char v273 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v270 + 56);
    v273(v81, 0LL, 1LL, v272);
    uint64_t v274 = v81;
    uint64_t v275 = v368;
    uint64_t v276 = v368 + *(int *)(v371 + 48);
    sub_FF10(v245, v368, &qword_285130);
    uint64_t v277 = v275;
    sub_FF10(v274, v276, &qword_285130);
    os_log_t v278 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v270 + 48);
    if (v278(v275, 1LL, v272) == 1)
    {
      sub_1F6CC(v274, &qword_285130);
      uint64_t v277 = v368;
      sub_1F6CC(v245, &qword_285130);
      if (v278(v276, 1LL, v272) == 1)
      {
        sub_1F6CC(v277, &qword_285130);
        sub_157C4((uint64_t)v199, (uint64_t)&v395);
LABEL_133:
        uint64_t v287 = v396;
        uint64_t v288 = v397;
        sub_6EA8(&v395, v396);
        BOOL v289 = !sub_170F44(v287, v288);
LABEL_135:
        sub_6C3C(&v395);
        [v381 setIsAllSpeakers:v289];
        uint64_t v290 = v199[3];
        uint64_t v291 = v199[4];
        sub_6EA8(v199, v290);
        uint64_t v292 = v366;
        dispatch thunk of HomeAutomationEntityProviding.haPlaceHint()(v290, v291);
        uint64_t v293 = (uint64_t)v361;
        uint64_t v294 = v372;
        v271((uint64_t)v361, enum case for PlaceHint.here(_:), v372);
        v273(v293, 0LL, 1LL, v294);
        uint64_t v295 = v363;
        uint64_t v296 = v363 + *(int *)(v371 + 48);
        uint64_t v297 = &qword_285130;
        sub_FF10(v292, v363, &qword_285130);
        sub_FF10(v293, v296, &qword_285130);
        if (v278(v295, 1LL, v294) == 1)
        {
          sub_1F6CC(v293, &qword_285130);
          sub_1F6CC(v292, &qword_285130);
          if (v278(v296, 1LL, v294) == 1)
          {
            char v298 = -1;
          }

          else
          {
            uint64_t v297 = &qword_28BA58;
            char v298 = 0;
          }

          uint64_t v299 = v380;
          uint64_t v300 = (uint64_t)v359;
          uint64_t v301 = v358;
        }

        else
        {
          uint64_t v302 = v352;
          sub_FF10(v295, v352, &qword_285130);
          unsigned int v303 = v278(v296, 1LL, v294);
          uint64_t v299 = v380;
          uint64_t v301 = v358;
          if (v303 == 1)
          {
            sub_1F6CC(v293, &qword_285130);
            sub_1F6CC(v366, &qword_285130);
            (*(void (**)(uint64_t, uint64_t))(v370 + 8))(v302, v294);
            char v298 = 0;
            uint64_t v297 = &qword_28BA58;
          }

          else
          {
            uint64_t v304 = v370;
            id v305 = v353;
            (*(void (**)(char *, uint64_t, uint64_t))(v370 + 32))(v353, v296, v294);
            uint64_t v306 = sub_10430( &qword_28BA68,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaceHint,  (uint64_t)&protocol conformance descriptor for PlaceHint);
            uint64_t v307 = v302;
            char v298 = dispatch thunk of static Equatable.== infix(_:_:)(v302, v305, v294, v306);
            __int128 v308 = *(void (**)(char *, uint64_t))(v304 + 8);
            v308(v305, v294);
            uint64_t v297 = &qword_285130;
            sub_1F6CC(v293, &qword_285130);
            sub_1F6CC(v366, &qword_285130);
            v308((char *)v307, v294);
            uint64_t v295 = v363;
          }

          uint64_t v300 = (uint64_t)v359;
        }

        sub_1F6CC(v295, v297);
        [v381 setIsInHere:v298 & 1];
        uint64_t v309 = v199[3];
        uint64_t v310 = v199[4];
        sub_6EA8(v199, v309);
        uint64_t v311 = (uint64_t)v357;
        dispatch thunk of HomeAutomationEntityProviding.haDeviceQuantifier()(v309, v310);
        uint64_t v312 = v367;
        uint64_t v313 = (uint64_t)v356;
        (*(void (**)(char *, void, uint64_t))(v367 + 104))( v356,  enum case for DeviceQuantifier.except(_:),  v301);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v312 + 56))(v313, 0LL, 1LL, v301);
        uint64_t v314 = v300 + *(int *)(v362 + 48);
        uint64_t v315 = &qword_285140;
        sub_FF10(v311, v300, &qword_285140);
        sub_FF10(v313, v314, &qword_285140);
        uint64_t v316 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v312 + 48);
        if (v316(v300, 1LL, v301) == 1)
        {
          sub_1F6CC(v313, &qword_285140);
          sub_1F6CC(v311, &qword_285140);
          if (v316(v314, 1LL, v301) == 1)
          {
            char v317 = -1;
          }

          else
          {
            uint64_t v315 = &qword_28BA60;
            char v317 = 0;
          }
        }

        else
        {
          uint64_t v318 = v354;
          sub_FF10(v300, v354, &qword_285140);
          if (v316(v314, 1LL, v301) == 1)
          {
            sub_1F6CC(v313, &qword_285140);
            sub_1F6CC(v311, &qword_285140);
            (*(void (**)(uint64_t, uint64_t))(v367 + 8))(v318, v301);
            char v317 = 0;
            uint64_t v315 = &qword_28BA60;
          }

          else
          {
            uint64_t v319 = v367;
            uint64_t v320 = v311;
            uint64_t v321 = v350;
            (*(void (**)(char *, uint64_t, uint64_t))(v367 + 32))(v350, v314, v301);
            uint64_t v322 = sub_10430( &qword_28BA70,  (uint64_t (*)(uint64_t))&type metadata accessor for DeviceQuantifier,  (uint64_t)&protocol conformance descriptor for DeviceQuantifier);
            char v317 = dispatch thunk of static Equatable.== infix(_:_:)(v318, v321, v301, v322);
            os_log_type_t v323 = *(void (**)(char *, uint64_t))(v319 + 8);
            v323(v321, v301);
            uint64_t v315 = &qword_285140;
            sub_1F6CC(v313, &qword_285140);
            uint64_t v324 = v320;
            uint64_t v299 = v380;
            sub_1F6CC(v324, &qword_285140);
            v323((char *)v318, v301);
          }
        }

        char v325 = v365;
        sub_1F6CC(v300, v315);
        uint64_t v326 = v317 & 1;
        id v327 = v381;
        [v381 setHasExcept:v326];
        ((void (*)(char *, uint64_t, uint64_t))v378)(v325, v377, v299);
        id v328 = v327;
        uint64_t v329 = (os_log_s *)Logger.logObject.getter(v328);
        os_log_type_t v330 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v329, v330))
        {
          uint64_t v331 = swift_slowAlloc(22LL, -1LL);
          uint64_t v332 = swift_slowAlloc(64LL, -1LL);
          int v395 = (void *)v332;
          *(_DWORD *)uint64_t v331 = 136315394;
          id v333 = [v328 intentSpeakerNames];
          if (v333)
          {
            unint64_t v334 = v333;
            uint64_t v335 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v333, v386);
          }

          else
          {
            uint64_t v335 = 0LL;
          }

          uint64_t v394 = v335;
          uint64_t v337 = sub_6C5C(&qword_28C128);
          uint64_t v338 = String.init<A>(describing:)(&v394, v337);
          unint64_t v340 = v339;
          uint64_t v394 = sub_6978(v338, v339, (uint64_t *)&v395);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v394, &v395);

          *(void *)&double v341 = swift_bridgeObjectRelease(v340).n128_u64[0];
          *(_WORD *)(v331 + 1sub_6C3C(v0 + 2) = 2080;
          id v342 = objc_msgSend(v328, "intentSpeakerNames", v341);
          if (v342)
          {
            uint64_t v343 = v342;
            uint64_t v344 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v342, v386);
          }

          else
          {
            uint64_t v344 = 0LL;
          }

          uint64_t v394 = v344;
          uint64_t v345 = String.init<A>(describing:)(&v394, v337);
          unint64_t v347 = v346;
          uint64_t v394 = sub_6978(v345, v346, (uint64_t *)&v395);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v394, &v395);

          swift_bridgeObjectRelease(v347);
          _os_log_impl( &dword_0,  v329,  v330,  "_INPBWholeHouseAudioMetadata#init intent speaker names: %s, intent room names: %s",  (uint8_t *)v331,  0x16u);
          swift_arrayDestroy(v332, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v332, -1LL, -1LL);
          swift_slowDealloc(v331, -1LL, -1LL);

          v376(v365, v380);
          swift_bridgeObjectRelease(v403);
          swift_bridgeObjectRelease(v404);
          __n128 v336 = swift_bridgeObjectRelease(v405);
          uint64_t v199 = v379;
        }

        else
        {

          v376(v325, v299);
          swift_bridgeObjectRelease(v403);
          swift_bridgeObjectRelease(v404);
          __n128 v336 = swift_bridgeObjectRelease(v405);
        }

        (*(void (**)(char *, uint64_t, __n128))(v360 + 8))(v373, v374, v336);
        sub_6C3C(v199);
        return (uint64_t)v328;
      }
    }

    else
    {
      uint64_t v279 = v275;
      uint64_t v280 = v351;
      sub_FF10(v279, v351, &qword_285130);
      if (v278(v276, 1LL, v272) != 1)
      {
        uint64_t v281 = v370;
        uint64_t v282 = v353;
        (*(void (**)(char *, uint64_t, uint64_t))(v370 + 32))(v353, v276, v272);
        uint64_t v283 = sub_10430( &qword_28BA68,  (uint64_t (*)(uint64_t))&type metadata accessor for PlaceHint,  (uint64_t)&protocol conformance descriptor for PlaceHint);
        LODWORD(v39_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = dispatch thunk of static Equatable.== infix(_:_:)(v280, v282, v272, v283);
        uint64_t v284 = v280;
        uint64_t v285 = v272;
        id v286 = *(void (**)(char *, uint64_t))(v281 + 8);
        v286(v282, v285);
        sub_1F6CC(v385, &qword_285130);
        sub_1F6CC(v369, &qword_285130);
        v286((char *)v284, v285);
        sub_1F6CC(v368, &qword_285130);
        sub_157C4((uint64_t)v199, (uint64_t)&v395);
        if ((v390 & 1) != 0) {
          goto LABEL_133;
        }
LABEL_134:
        BOOL v289 = 0;
        goto LABEL_135;
      }

      sub_1F6CC(v385, &qword_285130);
      sub_1F6CC(v245, &qword_285130);
      (*(void (**)(uint64_t, uint64_t))(v370 + 8))(v280, v272);
    }

    sub_1F6CC(v277, &qword_28BA58);
    sub_157C4((uint64_t)v199, (uint64_t)&v395);
    goto LABEL_134;
  }

  uint64_t v133 = (uint8_t *)v88[2];
  uint64_t v383 = v355 + 32;
  swift_bridgeObjectRetain(v355);
  uint64_t v134 = 0LL;
  uint64_t v349 = (uint64_t)(v88 + 13);
  while (1)
  {
    uint64_t v136 = &v383[16 * v134];
    uint64_t v138 = *(void *)v136;
    uint64_t v137 = *((void *)v136 + 1);
    if (v133)
    {
      uint64_t v139 = v88[4];
      uint64_t v140 = v88[5];
      BOOL v141 = v139 == v138 && v140 == v137;
      if (v141 || (_stringCompareWithSmolCheck(_:_:expecting:)(v139, v140) & 1) != 0)
      {
LABEL_44:
        swift_bridgeObjectRetain(v137);
        if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0) {
          uint64_t v105 = sub_1FC6C(0LL, v105[2] + 1LL, 1, v105);
        }
        unint64_t v149 = v105[2];
        unint64_t v148 = v105[3];
        if (v149 >= v148 >> 1) {
          uint64_t v105 = sub_1FC6C((void *)(v148 > 1), v149 + 1, 1, v105);
        }
        v105[2] = v149 + 1;
        uint64_t v135 = &v105[2 * v149];
        v135[4] = v138;
        void v135[5] = v137;
        uint64_t v403 = v105;
        goto LABEL_26;
      }

      if (v133 != (_BYTE *)&dword_0 + 1)
      {
        uint64_t v145 = v88[6];
        uint64_t v146 = v88[7];
        BOOL v147 = v145 == v138 && v146 == v137;
        if (v147 || (_stringCompareWithSmolCheck(_:_:expecting:)(v145, v146) & 1) != 0) {
          goto LABEL_44;
        }
        if (v133 != (_BYTE *)&dword_0 + 2)
        {
          uint64_t v150 = v88[8];
          uint64_t v151 = v88[9];
          if (v150 == v138 && v151 == v137 || (_stringCompareWithSmolCheck(_:_:expecting:)(v150, v151) & 1) != 0) {
            goto LABEL_44;
          }
          if (v133 != (_BYTE *)&dword_0 + 3)
          {
            uint64_t v152 = v88[10];
            uint64_t v153 = v88[11];
            if (v152 == v138 && v153 == v137) {
              goto LABEL_44;
            }
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v152, v153);
            if ((result & 1) != 0) {
              goto LABEL_44;
            }
          }
        }
      }
    }

uint64_t sub_18EDB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v88 = a7;
  uint64_t v91 = a6;
  uint64_t v90 = a5;
  uint64_t v95 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v87 = *(void *)(v95 - 8);
  uint64_t v17 = __chkstk_darwin(v95);
  uint64_t v85 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = v18;
  __chkstk_darwin(v17);
  uint64_t v86 = (char *)&v81 - v19;
  uint64_t v89 = type metadata accessor for Logger(0LL);
  uint64_t v96 = *(void (***)(char *, uint64_t, uint64_t))(v89 - 8);
  uint64_t v20 = __chkstk_darwin(v89);
  uint64_t v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v83 = (char *)&v81 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v93 = v27;
  uint64_t v28 = *(void (**)(void))(v27 + 16);
  uint64_t v92 = v26;
  uint64_t v94 = a9;
  v28();
  v103[3] = a8;
  v103[4] = a11;
  uint64_t v29 = sub_10974(v103);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 16LL))(v29, a3, a8);
  v102[3] = a10;
  v102[4] = a13;
  uint64_t v30 = sub_10974(v102);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 16LL))(v30, a4, a10);
  uint64_t v31 = v88;
  sub_19928(a1, (uint64_t)&v99);
  if (v100)
  {
    sub_FF54(&v99, (uint64_t)&v101);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v82 = a12;
    uint64_t v32 = v89;
    uint64_t v33 = sub_6960(v89, (uint64_t)qword_2969C8);
    uint64_t v34 = v96;
    uint64_t v35 = v83;
    v96[2](v83, v33, v32);
    id v36 = v31;
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      id v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v99 = v40;
      *(_DWORD *)id v39 = 136446210;
      uint64_t v41 = INPlayMediaIntent.slimDescription.getter(v40);
      unint64_t v43 = v42;
      *(void *)&v98[0] = sub_6978(v41, v42, (uint64_t *)&v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v98, (char *)v98 + 8);

      swift_bridgeObjectRelease(v43);
      _os_log_impl( &dword_0,  v37,  v38,  "INPlayMediaIntent#performRouteResolution This is a WHA request... Running for intent INPlayMediaIntent: %{public}s",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v96[1])(v35, v32);
    }

    else
    {

      ((void (*)(char *, uint64_t))v34[1])(v35, v32);
    }

    uint64_t v96 = (void (**)(char *, uint64_t, uint64_t))v36;
    uint64_t v59 = swift_allocObject(&unk_2732F8, 32LL, 7LL);
    *(void *)(v59 + swift_weakDestroy(v0 + 16) = v90;
    uint64_t v60 = v91;
    *(void *)(v59 + 2sub_6C3C(v0 + 4) = v91;
    uint64_t v61 = qword_2838D0;
    swift_retain(v60);
    if (v61 != -1) {
      swift_once(&qword_2838D0, sub_1362AC);
    }
    id v62 = (id)qword_296AA0;
    uint64_t v63 = v86;
    OSSignpostID.init(log:)(v62);
    uint64_t v64 = v87;
    uint64_t v65 = v85;
    uint64_t v66 = v95;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v85, v63, v95);
    uint64_t v67 = *(unsigned __int8 *)(v64 + 80);
    uint64_t v68 = (v67 + 33) & ~v67;
    unint64_t v69 = (v84 + v68 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v70 = swift_allocObject(&unk_273320, v69 + 16, v67 | 7);
    *(void *)(v70 + swift_weakDestroy(v0 + 16) = "resolveWHADestinationDevices";
    *(void *)(v70 + 2sub_6C3C(v0 + 4) = 28LL;
    *(_BYTE *)(v70 + 3sub_6C3C(v0 + 2) = 2;
    (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v70 + v68, v65, v66);
    uint64_t v71 = (uint64_t (**)(unsigned __int8 *))(v70 + v69);
    *uint64_t v71 = sub_18F9E0;
    v71[1] = (uint64_t (*)(unsigned __int8 *))v59;
    uint64_t v72 = swift_retain(v59);
    uint64_t v73 = static os_signpost_type_t.begin.getter(v72);
    os_signpost(_:dso:log:name:signpostID:_:_:)( v73,  &dword_0,  qword_296AA0,  "resolveWHADestinationDevices",  28LL,  2LL,  v63,  " enableTelemetry=YES ",  21LL,  2,  _swiftEmptyArrayStorage);
    uint64_t v74 = swift_allocObject(&unk_273348, 32LL, 7LL);
    *(void *)(v74 + swift_weakDestroy(v0 + 16) = sub_22488;
    *(void *)(v74 + 2sub_6C3C(v0 + 4) = v70;
    uint64_t v75 = swift_allocObject(&unk_273370, 32LL, 7LL);
    *(void *)(v75 + swift_weakDestroy(v0 + 16) = sub_18F9E4;
    *(void *)(v75 + 2sub_6C3C(v0 + 4) = v74;
    sub_157C4((uint64_t)&v101, (uint64_t)&v99);
    sub_157C4((uint64_t)v102, (uint64_t)v98);
    sub_157C4((uint64_t)v103, (uint64_t)v97);
    unint64_t v76 = (void *)swift_allocObject(&unk_273398, 160LL, 7LL);
    v76[2] = sub_18C968;
    v76[3] = v75;
    sub_FF54(&v99, (uint64_t)(v76 + 4));
    sub_FF54(v98, (uint64_t)(v76 + 9));
    unint64_t v77 = v96;
    v76[14] = v96;
    sub_FF54(v97, (uint64_t)(v76 + 15));
    uint64_t v78 = v77;
    swift_retain(v70);
    swift_retain(v74);
    uint64_t v52 = v92;
    uint64_t v79 = v94;
    dispatch thunk of DeviceResolutionProviding.resolveDevices(for:with:)(&v101, sub_18F9A4, v76, v94, v82);
    swift_release(v70);
    swift_release(v74);
    swift_release(v76);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v95);
    swift_release(v59);
    sub_6C3C(&v101);
  }

  else
  {
    sub_1F6CC((uint64_t)&v99, &qword_28C140);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v44 = v89;
    uint64_t v45 = sub_6960(v89, (uint64_t)qword_2969C8);
    uint64_t v46 = v96;
    uint64_t v47 = v22;
    v96[2](v22, v45, v44);
    id v48 = v31;
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.info.getter(v49);
    BOOL v51 = os_log_type_enabled(v49, v50);
    uint64_t v52 = v92;
    if (v51)
    {
      uint64_t v53 = swift_slowAlloc(12LL, -1LL);
      uint64_t v95 = (uint64_t)v47;
      os_log_type_t v54 = (uint8_t *)v53;
      uint64_t v55 = swift_slowAlloc(32LL, -1LL);
      uint64_t v101 = v55;
      *(_DWORD *)os_log_type_t v54 = 136446210;
      uint64_t v56 = INPlayMediaIntent.slimDescription.getter(v55);
      unint64_t v58 = v57;
      *(void *)&__int128 v99 = sub_6978(v56, v57, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, (char *)&v99 + 8);

      swift_bridgeObjectRelease(v58);
      _os_log_impl( &dword_0,  v49,  v50,  "INPlayMediaIntent#performRouteResolution No homeAutomationProvider was found in the intent: %{public}s. This is expected if no home automation entities were requested",  v54,  0xCu);
      swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);

      ((void (*)(uint64_t, uint64_t))v96[1])(v95, v44);
    }

    else
    {

      ((void (*)(char *, uint64_t))v46[1])(v47, v44);
    }

    uint64_t v79 = v94;
    v90(0LL);
  }

  (*(void (**)(char *, uint64_t))(v93 + 8))(v52, v79);
  sub_6C3C(v103);
  return sub_6C3C(v102);
}

char *sub_18F640(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_6C5C(&qword_28C110);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Device(0LL);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v34 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v32 = (char *)&v28 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v35 = v13;
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = a1;
  unint64_t v29 = v17;
  uint64_t v18 = a1 + v17;
  uint64_t v33 = v14;
  uint64_t v19 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain(a1);
  id v36 = (char *)_swiftEmptyArrayStorage;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  do
  {
    sub_1E560C(v18, a2, a3, (uint64_t)v9);
    if (v3)
    {
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v28);
      return v36;
    }

    uint64_t v20 = v33;
    uint64_t v21 = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1LL, v35) == 1)
    {
      sub_1F6CC((uint64_t)v9, &qword_28C110);
    }

    else
    {
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      uint64_t v23 = v32;
      v22(v32, v9, v21);
      v22(v34, v23, v21);
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0) {
        id v36 = (char *)sub_1FB30(0, *((void *)v36 + 2) + 1LL, 1, (unint64_t)v36);
      }
      unint64_t v25 = *((void *)v36 + 2);
      unint64_t v24 = *((void *)v36 + 3);
      if (v25 >= v24 >> 1) {
        id v36 = (char *)sub_1FB30(v24 > 1, v25 + 1, 1, (unint64_t)v36);
      }
      uint64_t v26 = v36;
      *((void *)v36 + sub_6C3C(v0 + 2) = v25 + 1;
      v22(&v26[v29 + v25 * v19], v34, v35);
      a2 = v30;
      a3 = v31;
    }

    v18 += v19;
    --v16;
  }

  while (v16);
  swift_bridgeObjectRelease(v28);
  return v36;
}

unint64_t sub_18F8A4()
{
  unint64_t result = qword_28C120;
  if (!qword_28C120)
  {
    uint64_t v1 = sub_45D50(&qword_28C118);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_28C120);
  }

  return result;
}

unint64_t sub_18F8F0()
{
  unint64_t result = qword_28C138;
  if (!qword_28C138)
  {
    uint64_t v1 = sub_1641C(255LL, &qword_28C130, &OBJC_CLASS___INHomeAutomationEntityProvider_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for INHomeAutomationEntityProvider, v1);
    atomic_store(result, (unint64_t *)&qword_28C138);
  }

  return result;
}

uint64_t sub_18F94C(__int16 a1)
{
  return sub_1AF72C(a1 & 0x1FF, *(uint64_t (**)(__int16 *))(v1 + 16));
}

uint64_t sub_18F960()
{
  sub_6C3C((void *)(v0 + 120));
  return swift_deallocObject(v0, 160LL, 7LL);
}

uint64_t sub_18F9A4(void *a1, char a2)
{
  return sub_18A468( a1,  a2 & 1,  *(void (**)(uint64_t))(v2 + 16),  *(void *)(v2 + 24),  (void *)(v2 + 32),  (void *)(v2 + 72),  *(void **)(v2 + 112),  v2 + 120);
}

uint64_t UpdateMediaAffinity.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v43 = a4;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v13);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v16 = sub_6960(v11, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  uint64_t v17 = swift_retain_n(a1, 2LL);
  uint64_t v42 = v12;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = a3;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v39 = swift_slowAlloc(32LL, -1LL);
    uint64_t v44 = a1;
    uint64_t v45 = v39;
    uint64_t v40 = v6;
    *(_DWORD *)uint64_t v21 = 136315138;
    v37[1] = v21 + 4;
    os_log_type_t v38 = v21;
    uint64_t v22 = a2;
    uint64_t v23 = a5;
    uint64_t v24 = type metadata accessor for App(0LL);
    uint64_t v25 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    uint64_t v26 = v24;
    a5 = v23;
    a2 = v22;
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v26, v25);
    unint64_t v29 = v28;
    uint64_t v44 = sub_6978(v27, v28, &v45);
    uint64_t v6 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v29);
    uint64_t v30 = v38;
    _os_log_impl(&dword_0, v18, v19, "HandleIntentStrategy#makeIntentHandledResponse for app: %s", v38, 0xCu);
    uint64_t v31 = v39;
    swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    a3 = v41;
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  else
  {

    swift_release_n(a1, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v11);
  uint64_t v32 = (void *)swift_allocObject(&unk_273420, 64LL, 7LL);
  v32[2] = v6;
  void v32[3] = a1;
  uint64_t v33 = v43;
  v32[4] = a2;
  void v32[5] = v33;
  v32[6] = a5;
  v32[7] = a3;
  swift_retain(a1);
  swift_retain(v6);
  id v34 = a2;
  swift_retain(a5);
  id v35 = a3;
  sub_10BD34(a1, v34, (uint64_t)sub_190904, (uint64_t)v32);
  return swift_release(v32);
}

void sub_18FCD4( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6, uint64_t a7)
{
  uint64_t v143 = a7;
  uint64_t v150 = a5;
  uint64_t v151 = a6;
  id v158 = a4;
  uint64_t v149 = a3;
  uint64_t v155 = a2;
  uint64_t v156 = a1;
  uint64_t v139 = type metadata accessor for Logger(0LL);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v146 = (void *)type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v145 = *(v146 - 1);
  __chkstk_darwin(v146);
  unint64_t v142 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v9);
  uint64_t v153 = (uint64_t)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v157 = sub_6C5C(&qword_289340);
  uint64_t v11 = __chkstk_darwin(v157);
  uint64_t v136 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  BOOL v147 = (char *)&v132 - v14;
  __chkstk_darwin(v13);
  uint64_t v152 = (char *)&v132 - v15;
  uint64_t v16 = sub_6C5C(&qword_2845A0);
  uint64_t v17 = __chkstk_darwin(v16);
  unint64_t v148 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v144 = (char *)&v132 - v19;
  uint64_t v20 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  BOOL v141 = (char *)&v132 - v24;
  uint64_t v25 = sub_6C5C(&qword_2845A8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v140 = (char *)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  unint64_t v29 = (char *)&v132 - v28;
  uint64_t v154 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v30 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v32 = (char *)&v132 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v36 = (char *)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t *)((char *)&v132 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(v156, (uint64_t)v39);
  if (swift_getEnumCaseMultiPayload(v39, v37) == 1)
  {
    uint64_t v40 = *v39;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))( v36,  enum case for AdditionalMetricsDescription.ModuleName.umahis(_:),  v33);
    uint64_t v41 = v30;
    uint64_t v42 = *(void (**)(char *, void, uint64_t))(v30 + 104);
    uint64_t v43 = v154;
    v42(v32, enum case for AdditionalMetricsDescription.SourceFunction.handled(_:), v154);
    uint64_t v153 = v40;
    swift_getErrorValue(v40, v162, v161);
    uint64_t v44 = Error.localizedDescription.getter(v161[1], v161[2]);
    uint64_t v46 = v45;
    uint64_t v156 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v36,  v32,  v44,  v45,  1LL,  0LL);
    uint64_t v157 = v47;
    __n128 v48 = swift_bridgeObjectRelease(v46);
    (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v32, v43, v48);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    uint64_t v49 = v155[6];
    uint64_t v50 = v155[7];
    uint64_t v155 = sub_6EA8(v155 + 3, v49);
    uint64_t v51 = enum case for ActivityType.failed(_:);
    uint64_t v52 = type metadata accessor for ActivityType(0LL);
    uint64_t v53 = *(void *)(v52 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v29, v51, v52);
    os_log_type_t v54 = v29;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v29, 0LL, 1LL, v52);
    uint64_t v55 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v56 = (uint64_t)v141;
    (*(void (**)(void))(*(void *)(v55 - 8) + 56LL))();
    uint64_t v57 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v58 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = (uint64_t)v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v144, v57, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v60, 0LL, 1LL, v58);
    id v61 = v158;
    id v62 = [v158 mediaItems];
    if (v62)
    {
      uint64_t v63 = v62;
      unint64_t v64 = sub_687D0();
      uint64_t v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v63, v64);

      if ((unint64_t)v65 >> 62)
      {
        if (v65 < 0) {
          uint64_t v106 = v65;
        }
        else {
          uint64_t v106 = v65 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v65);
        uint64_t v107 = _CocoaArrayWrapper.endIndex.getter(v106);
        swift_bridgeObjectRelease(v65);
        if (v107) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v65 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v65 & 0xC000000000000001LL) != 0)
        {
          id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v65);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v65 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v66 = *(id *)(v65 + 32);
LABEL_8:
          uint64_t v67 = v66;
          id v68 = objc_msgSend(v66, "type", swift_bridgeObjectRelease(v65).n128_f64[0]);

LABEL_22:
          uint64_t v131 = v49;
          uint64_t v108 = (uint64_t)v54;
          uint64_t v109 = v54;
          uint64_t v110 = v157;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v149,  v61,  v109,  v56,  v60,  v156,  v157,  v68,  0,  v131,  v50);
          swift_bridgeObjectRelease(v110);
          sub_1F6CC(v60, &qword_2845A0);
          sub_1F6CC(v56, (uint64_t *)&unk_286BD0);
          sub_1F6CC(v108, &qword_2845A8);
          uint64_t v111 = v153;
          v159[0] = v153;
          char v160 = 1;
          swift_errorRetain(v153);
          v150(v159);
          swift_errorRelease(v111);
          sub_1F6CC((uint64_t)v159, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_37;
      }

      swift_bridgeObjectRelease(v65);
    }

    id v68 = 0LL;
    goto LABEL_22;
  }

  uint64_t v69 = *(int *)(v157 + 48);
  uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
  BOOL v141 = v23;
  uint64_t v71 = v70;
  uint64_t v156 = *(void *)(v70 - 8);
  uint64_t v135 = *(void (**)(char *, uint64_t *, uint64_t))(v156 + 32);
  uint64_t v72 = v152;
  v135(v152, v39, v70);
  uint64_t v73 = *(void **)((char *)v39 + v69);
  *(void *)&v72[v69] = v73;
  uint64_t v144 = v73;
  sub_1F5C24((uint64_t)v158, v153);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))( v36,  enum case for AdditionalMetricsDescription.ModuleName.umahis(_:),  v33);
  uint64_t v143 = v33;
  uint64_t v74 = v30;
  uint64_t v75 = v154;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))( v32,  enum case for AdditionalMetricsDescription.SourceFunction.handled(_:),  v154);
  uint64_t v76 = v145;
  unint64_t v77 = v142;
  uint64_t v78 = v146;
  (*(void (**)(char *, void, void *))(v145 + 104))( v142,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v146);
  uint64_t v133 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v36, v32, v77, 0LL, 1LL);
  uint64_t v134 = v79;
  (*(void (**)(char *, void *))(v76 + 8))(v77, v78);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v32, v75);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v143);
  uint64_t v80 = v155;
  uint64_t v81 = v155[6];
  uint64_t v145 = v155[7];
  uint64_t v146 = sub_6EA8(v155 + 3, v81);
  uint64_t v82 = enum case for ActivityType.completed(_:);
  uint64_t v83 = type metadata accessor for ActivityType(0LL);
  uint64_t v84 = *(void *)(v83 - 8);
  uint64_t v85 = v140;
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 104))(v140, v82, v83);
  uint64_t v86 = (uint64_t)v85;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v85, 0LL, 1LL, v83);
  uint64_t v87 = v156;
  uint64_t v88 = *(int *)(v157 + 48);
  uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
  uint64_t v90 = v147;
  v89(v147, v72, v71);
  *(void *)&v90[v88] = v144;
  uint64_t v91 = v141;
  v135(v141, (uint64_t *)v90, v71);
  uint64_t v92 = *(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56);
  uint64_t v93 = (uint64_t)v148;
  uint64_t v94 = (uint64_t)v91;
  uint64_t v154 = v71;
  v92(v91, 0LL, 1LL, v71);
  uint64_t v95 = enum case for SiriKitReliabilityCodes.success(_:);
  uint64_t v96 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v97 = *(void *)(v96 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 104))(v93, v95, v96);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v93, 0LL, 1LL, v96);
  id v98 = v158;
  id v99 = [v158 mediaItems];
  if (!v99) {
    goto LABEL_28;
  }
  uint64_t v100 = v99;
  unint64_t v101 = sub_687D0();
  uint64_t v102 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v100, v101);

  if ((unint64_t)v102 >> 62)
  {
    if (v102 < 0) {
      uint64_t v112 = v102;
    }
    else {
      uint64_t v112 = v102 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v102);
    uint64_t v113 = _CocoaArrayWrapper.endIndex.getter(v112);
    swift_bridgeObjectRelease(v102);
    if (v113) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }

  if (!*(void *)((char *)&dword_10 + (v102 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_27:
    swift_bridgeObjectRelease(v102);
LABEL_28:
    id v105 = 0LL;
    goto LABEL_29;
  }

uint64_t sub_190904(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_18FCD4);
}

uint64_t UpdateMediaAffinity.HandleIntentStrategy.makeSiriKitIntentHandler(app:intent:)@<X0>( uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_retain_n(a1, 2LL);
  id v11 = a2;
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter(v12);
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc(22LL, -1LL);
    uint64_t v32 = v7;
    uint64_t v16 = v15;
    uint64_t v30 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v31 = swift_slowAlloc(32LL, -1LL);
    uint64_t v34 = a1;
    uint64_t v35 = v31;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = type metadata accessor for App(0LL);
    uint64_t v33 = a3;
    uint64_t v18 = v17;
    uint64_t v19 = sub_6DF0( (unint64_t *)&qword_283AB0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for App,  (uint64_t)&protocol conformance descriptor for App);
    int v29 = v14;
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter(v18, v19);
    unint64_t v22 = v21;
    uint64_t v34 = sub_6978(v20, v21, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v16 + 1sub_6C3C(v0 + 2) = 2112;
    uint64_t v34 = (uint64_t)v11;
    id v23 = v11;
    a3 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
    uint64_t v24 = v30;
    *uint64_t v30 = v11;

    _os_log_impl( &dword_0,  v12,  (os_log_type_t)v29,  "UpdateMediaAffinity#makeSiriKitIntentHandler called with app: %s and intent: %@",  (uint8_t *)v16,  0x16u);
    uint64_t v25 = sub_6C5C((uint64_t *)&unk_286BC0);
    swift_arrayDestroy(v24, 1LL, v25);
    swift_slowDealloc(v24, -1LL, -1LL);
    uint64_t v26 = v31;
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
  }

  else
  {

    swift_release_n(a1, 2LL);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  return _s23AudioFlowDelegatePlugin019UpdateMediaAffinityB8StrategyC24makeSiriKitIntentHandler3app6intent0jkB00jklM0VSg0J13AppResolution0P0C_So08INUpdatefgL0CtF_0( a1,  v11,  a3);
}

uint64_t UpdateMediaAffinity.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  int v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SiriEnvironmentWrapper.store()(v12);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v15 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v15, v10);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "UpdateMediaAffinity#makeFailureHandlingIntentResponse", v19, 2u);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v20 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v20, v48);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  strcpy((char *)(inited + 32), "MetricsError");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  unint64_t v22 = (void *)0xE000000000000000LL;
  unint64_t v46 = 0LL;
  unint64_t v47 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(50LL);
  *(void *)&double v23 = swift_bridgeObjectRelease(v47).n128_u64[0];
  unint64_t v46 = 0xD00000000000002DLL;
  unint64_t v47 = 0x8000000000220990LL;
  id v24 = objc_msgSend(a3, "userActivity", v23);
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = [v24 activityType];

    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    unint64_t v22 = v28;
  }

  else
  {
    uint64_t v27 = 0LL;
  }

  v29._uint64_t countAndFlagsBits = v27;
  v29._object = v22;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v22);
  v30._uint64_t countAndFlagsBits = 95LL;
  v30._object = (void *)0xE100000000000000LL;
  String.append(_:)(v30);
  id v45 = [a3 code];
  v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v31._object;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(object);
  unint64_t v33 = v46;
  unint64_t v34 = v47;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = v33;
  *(void *)(inited + 56) = v34;
  unint64_t v35 = sub_74D54(inited);
  id v36 = (void *)swift_allocObject(&unk_273448, 64LL, 7LL);
  void v36[2] = v6;
  uint64_t v36[3] = a1;
  uint64_t v37 = v43;
  uint64_t v38 = v44;
  v36[4] = a2;
  void v36[5] = v37;
  v36[6] = v38;
  v36[7] = a3;
  swift_retain(v6);
  swift_retain(a1);
  id v39 = a2;
  swift_retain(v38);
  id v40 = a3;
  sub_C4E64(v35, a1, (uint64_t)sub_191DC4, (uint64_t)v36);
  swift_bridgeObjectRelease(v35);
  return swift_release(v36);
}

void sub_190F28( uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void *), uint64_t a6, void *a7)
{
  id v127 = a7;
  uint64_t v132 = a5;
  uint64_t v133 = a6;
  uint64_t v138 = a2;
  id v139 = a4;
  uint64_t v131 = a3;
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v8);
  uint64_t v125 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v137);
  uint64_t v124 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v129 = (char *)&v119 - v13;
  __chkstk_darwin(v12);
  uint64_t v136 = (char *)&v119 - v14;
  uint64_t v15 = sub_6C5C(&qword_2845A0);
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v130 = (char *)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v128 = (char *)&v119 - v18;
  uint64_t v19 = sub_6C5C((uint64_t *)&unk_286BD0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v134 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v126 = (void (*)(char *, uint64_t *, uint64_t))((char *)&v119 - v22);
  uint64_t v23 = sub_6C5C(&qword_2845A8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v135 = (char *)&v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v119 - v26;
  uint64_t v28 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  Swift::String v31 = (char *)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  unint64_t v35 = (char *)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v36);
  uint64_t v38 = (uint64_t *)((char *)&v119 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_3B040(a1, (uint64_t)v38);
  if (swift_getEnumCaseMultiPayload(v38, v36) == 1)
  {
    uint64_t v39 = *v38;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))( v35,  enum case for AdditionalMetricsDescription.ModuleName.umahis(_:),  v32);
    (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v28);
    swift_getErrorValue(v39, v143, v142);
    uint64_t v40 = Error.localizedDescription.getter(v142[1], v142[2]);
    uint64_t v42 = v41;
    uint64_t v136 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v35,  v31,  v40,  v41,  1LL,  0LL);
    uint64_t v137 = v43;
    __n128 v44 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v44);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    uint64_t v46 = v138[6];
    uint64_t v45 = v138[7];
    uint64_t v138 = sub_6EA8(v138 + 3, v46);
    uint64_t v47 = enum case for ActivityType.failed(_:);
    uint64_t v48 = type metadata accessor for ActivityType(0LL);
    uint64_t v49 = *(void *)(v48 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v27, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v27, 0LL, 1LL, v48);
    uint64_t v50 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v51 = (uint64_t)v126;
    (*(void (**)(void))(*(void *)(v50 - 8) + 56LL))();
    uint64_t v52 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v53 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = (uint64_t)v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v128, v52, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0LL, 1LL, v53);
    id v56 = v139;
    id v57 = [v139 mediaItems];
    if (v57)
    {
      uint64_t v58 = v57;
      unint64_t v59 = sub_687D0();
      uint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, v59);

      if ((unint64_t)v60 >> 62)
      {
        if (v60 < 0) {
          uint64_t v104 = v60;
        }
        else {
          uint64_t v104 = v60 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(v60);
        uint64_t v105 = _CocoaArrayWrapper.endIndex.getter(v104);
        swift_bridgeObjectRelease(v60);
        if (v105) {
          goto LABEL_5;
        }
      }

      else if (*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL)))
      {
LABEL_5:
        if ((v60 & 0xC000000000000001LL) != 0)
        {
          id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v60);
          goto LABEL_8;
        }

        if (*(void *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8LL)))
        {
          id v61 = *(id *)(v60 + 32);
LABEL_8:
          id v62 = v61;
          id v63 = objc_msgSend(v61, "type", swift_bridgeObjectRelease(v60).n128_f64[0]);

LABEL_22:
          uint64_t v106 = v137;
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v131,  v56,  v27,  v51,  v55,  v136,  v137,  v63,  0,  v46,  v45);
          swift_bridgeObjectRelease(v106);
          sub_1F6CC(v55, &qword_2845A0);
          sub_1F6CC(v51, (uint64_t *)&unk_286BD0);
          sub_1F6CC((uint64_t)v27, &qword_2845A8);
          v140[0] = v39;
          char v141 = 1;
          swift_errorRetain(v39);
          v132(v140);
          swift_errorRelease(v39);
          sub_1F6CC((uint64_t)v140, (uint64_t *)&unk_286C60);
          return;
        }

        __break(1u);
        goto LABEL_34;
      }

      swift_bridgeObjectRelease(v60);
    }

    id v63 = 0LL;
    goto LABEL_22;
  }

  uint64_t v64 = *(int *)(v137 + 48);
  uint64_t v65 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v128 = *(char **)(v65 - 8);
  uint64_t v66 = v28;
  uint64_t v126 = (void (*)(char *, uint64_t *, uint64_t))*((void *)v128 + 4);
  uint64_t v67 = v136;
  v126(v136, v38, v65);
  id v68 = *(void **)((char *)v38 + v64);
  *(void *)&v67[v64] = v68;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))( v35,  enum case for AdditionalMetricsDescription.ModuleName.umahis(_:),  v32);
  uint64_t v69 = v66;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))( v31,  enum case for AdditionalMetricsDescription.SourceFunction.failHandleResp(_:),  v66);
  id v70 = v68;
  v140[0] = [v127 code];
  uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v73 = v72;
  uint64_t v122 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v35,  v31,  v71,  v72,  2LL,  0LL);
  uint64_t v123 = v74;
  __n128 v75 = swift_bridgeObjectRelease(v73);
  (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v69, v75);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  uint64_t v76 = v138;
  uint64_t v77 = v138[6];
  uint64_t v120 = v138[7];
  uint64_t v121 = sub_6EA8(v138 + 3, v77);
  uint64_t v78 = enum case for ActivityType.failed(_:);
  uint64_t v79 = type metadata accessor for ActivityType(0LL);
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v135, v78, v79);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v81, 0LL, 1LL, v79);
  uint64_t v82 = v136;
  uint64_t v83 = v137;
  uint64_t v84 = *(int *)(v137 + 48);
  uint64_t v85 = v128;
  uint64_t v86 = v129;
  uint64_t v119 = (void (*)(char *, char *, uint64_t))*((void *)v128 + 2);
  v119(v129, v136, v65);
  id v127 = v70;
  *(void *)&v86[v84] = v70;
  uint64_t v87 = v134;
  v126(v134, (uint64_t *)v86, v65);
  uint64_t v88 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)v85 + 7);
  uint64_t v129 = (char *)v65;
  v88(v87, 0LL, 1LL, v65);
  uint64_t v89 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v90 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v92 = (uint64_t)v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v130, v89, v90);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v92, 0LL, 1LL, v90);
  id v93 = v139;
  id v94 = [v139 mediaItems];
  uint64_t v95 = v76;
  uint64_t v96 = (uint64_t)v82;
  uint64_t v97 = v83;
  if (!v94) {
    goto LABEL_28;
  }
  id v98 = v94;
  unint64_t v99 = sub_687D0();
  uint64_t v100 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v98, v99);

  if ((unint64_t)v100 >> 62)
  {
    if (v100 < 0) {
      uint64_t v107 = v100;
    }
    else {
      uint64_t v107 = v100 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v100);
    uint64_t v108 = _CocoaArrayWrapper.endIndex.getter(v107);
    swift_bridgeObjectRelease(v100);
    if (v108) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }

  if (!*(void *)((char *)&dword_10 + (v100 & 0xFFFFFFFFFFFFF8LL)))
  {
LABEL_27:
    swift_bridgeObjectRelease(v100);
LABEL_28:
    id v103 = 0LL;
    goto LABEL_29;
  }

void *UpdateMediaAffinity.HandleIntentStrategy.deinit()
{
  return v0;
}

uint64_t UpdateMediaAffinity.HandleIntentStrategy.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 152LL, 7LL);
}

uint64_t sub_191A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  updated,  a7);
}

uint64_t sub_191AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  updated,  a7);
}

uint64_t sub_191B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  updated,  a7);
}

uint64_t sub_191B88(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return UpdateMediaAffinity.HandleIntentStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_191BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5,  updated,  a7);
}

uint64_t sub_191C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, updated, a7);
}

uint64_t sub_191C78(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  return UpdateMediaAffinity.HandleIntentStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_191C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return IntentExtensionCommunicating.shouldIntentBeExecutedOnRemoteCompanion(intent:)(a1, updated, a3);
}

uint64_t sub_191CD0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return UpdateMediaAffinity.HandleIntentStrategy.makeSiriKitIntentHandler(app:intent:)(a1, a2, a3);
}

uint64_t sub_191CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:)(a1, a2, updated, a4);
}

uint64_t sub_191D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t updated = type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy();
  return IntentExtensionCommunicating.makeIntentExecutionBehavior(app:intent:completion:)(a1, a2, a3, a4, updated, a6);
}

uint64_t sub_191D80()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_191DC4(uint64_t a1)
{
  return sub_7F734(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_190F28);
}

uint64_t sub_191DD0(uint64_t a1, uint64_t a2)
{
  return sub_6DF0( &qword_28C148,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for UpdateMediaAffinity.HandleIntentStrategy);
}

uint64_t type metadata accessor for UpdateMediaAffinity.HandleIntentStrategy()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin19UpdateMediaAffinity20HandleIntentStrategy);
}

uint64_t type metadata accessor for SearchForMediaCatDialogService()
{
  return objc_opt_self(&OBJC_CLASS____TtC23AudioFlowDelegatePlugin30SearchForMediaCatDialogService);
}

BOOL sub_191E3C(uint64_t a1)
{
  if (qword_283950 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v2 = *(void *)(qword_296B48 + 16);
    if (!v2) {
      break;
    }
    if (*(void *)(qword_296B48 + 32) == a1) {
      return 1LL;
    }
    if (v2 == 1) {
      break;
    }
    if (*(void *)(qword_296B48 + 40) == a1) {
      return 1LL;
    }
    if (v2 == 2) {
      break;
    }
    for (uint64_t i = 6LL; ; ++i)
    {
      uint64_t v5 = i - 3;
      if (__OFADD__(i - 4, 1LL)) {
        break;
      }
      uint64_t v6 = *(void *)(qword_296B48 + 8 * i);
      BOOL result = v6 == a1;
      if (v6 == a1 || v5 == v2) {
        return result;
      }
    }

    __break(1u);
LABEL_18:
    swift_once(&qword_283950, sub_191F08);
  }

  return 0LL;
}

void sub_191EF4()
{
  qword_296B40 = (uint64_t)&off_26B2E8;
}

void sub_191F08()
{
  qword_296B48 = (uint64_t)&off_269D38;
}

void sub_191F1C()
{
}

id sub_191F28()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v18 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  id result = [v1 mediaDestination];
  if (result)
  {
    uint64_t v13 = result;
    static INMediaDestination._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v9, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
    int v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v14 == enum case for INMediaDestination.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
      return *(id *)v6;
    }

    else
    {
      int v15 = v14;
      int v16 = enum case for INMediaDestination.library(_:);
      uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v11, v2);
      if (v15 != v16) {
        v17(v6, v2);
      }
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1920AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_6C5C(&qword_2845D8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  id v8 = [v1 mediaDestination];
  if (!v8)
  {
    uint64_t v14 = type metadata accessor for INMediaDestination(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v7, 1LL, 1LL, v14);
    goto LABEL_8;
  }

  uint64_t v9 = v8;
  static INMediaDestination._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v10 = type metadata accessor for INMediaDestination(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0LL, 1LL, v10);
  sub_680FC((uint64_t)v7, (uint64_t)v5);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v5, v10);
  if (v12 != enum case for INMediaDestination.playlist(_:))
  {
    if (v12 == enum case for INMediaDestination.library(_:))
    {
      uint64_t v13 = 1LL;
      goto LABEL_9;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
LABEL_8:
    uint64_t v13 = 0LL;
    goto LABEL_9;
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
  uint64_t v13 = 2LL;
LABEL_9:
  sub_1927A8((uint64_t)v7);
  return v13;
}

void sub_192224()
{
}

void sub_192230(SEL *a1)
{
  id v3 = [v1 mediaItems];
  if (!v3) {
    return;
  }
  uint64_t v4 = v3;
  unint64_t v5 = sub_687D0();
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v6);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v6);
    if (v11) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease(v6);
    return;
  }

void sub_19235C()
{
}

void sub_19236C()
{
}

void sub_19237C(uint64_t *a1, void *a2)
{
  id v5 = [v2 mediaItems];
  if (v5)
  {
    uint64_t v6 = v5;
    unint64_t v7 = sub_687D0();
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0) {
        uint64_t v28 = v8;
      }
      else {
        uint64_t v28 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v8);
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v8);
      if (v29)
      {
LABEL_4:
        if ((v8 & 0xC000000000000001LL) != 0)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v8);
        }

        else
        {
          if (!*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL)))
          {
            __break(1u);
LABEL_36:
            __break(1u);
            return;
          }

          id v9 = *(id *)(v8 + 32);
        }

        uint64_t v10 = v9;
        swift_bridgeObjectRelease(v8);
        uint64_t v11 = *a1;
        int v12 = (void *)*a2;
        swift_bridgeObjectRetain(*a2);
        id v13 = [v10 privateMediaItemValueData];
        if (v13
          && (uint64_t v14 = v13,
              id v15 = [v13 internalSignals],
              v14,
              v15))
        {
          uint64_t v16 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);

          uint64_t v17 = v16[2];
          if (v17)
          {
            uint64_t v18 = v16[4];
            uint64_t v19 = (void *)v16[5];
            BOOL v20 = v18 == v11 && v19 == v12;
            if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19) & 1) != 0)
            {
LABEL_15:
              swift_bridgeObjectRelease(v12);
              swift_bridgeObjectRelease(v16);

              return;
            }

            if (v17 != 1)
            {
              uint64_t v22 = v16 + 7;
              uint64_t v23 = 1LL;
              do
              {
                uint64_t v24 = v23 + 1;
                if (__OFADD__(v23, 1LL)) {
                  goto LABEL_36;
                }
                uint64_t v25 = *(v22 - 1);
                uint64_t v26 = (void *)*v22;
                BOOL v27 = v25 == v11 && v26 == v12;
                if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v26) & 1) != 0) {
                  goto LABEL_15;
                }
                v22 += 2;
                ++v23;
              }

              while (v24 != v17);
            }
          }

          swift_bridgeObjectRelease(v12);
          uint64_t v21 = v16;
        }

        else
        {
          uint64_t v21 = v12;
        }

        swift_bridgeObjectRelease(v21);

        return;
      }
    }

    else if (*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL)))
    {
      goto LABEL_4;
    }

    swift_bridgeObjectRelease(v8);
  }

BOOL sub_192598(uint64_t a1)
{
  return MediaIntentCommons.isGrounding()();
}

BOOL sub_1925CC(uint64_t a1)
{
  return MediaIntentCommons.isUserRecognized()();
}

BOOL sub_192600(uint64_t a1, void *a2, uint64_t a3)
{
  v5.value._uint64_t countAndFlagsBits = a1;
  v5.value._object = a2;
  return MediaIntentCommons.isAppAttributionRequired(bundleIdentifier:)(v5);
}

uint64_t sub_19264C(uint64_t a1)
{
  return MediaIntentCommons.getFallbackUsername()().value._countAndFlagsBits;
}

BOOL sub_192680(uint64_t a1)
{
  return MediaIntentCommons.useDialogMemoryForAppAttribution()();
}

uint64_t sub_1926B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for INAddMediaIntent, a1);
  return MediaIntentCommons.wholeHouseAudioMetadata()(a1, WitnessTable);
}

uint64_t sub_1926E8(uint64_t a1)
{
  return MediaIntentCommons.proxiedAppName()().value._countAndFlagsBits;
}

uint64_t sub_19271C()
{
  return PrivateMediaIntentDataProviding.getSharedUserID()().value._countAndFlagsBits;
}

uint64_t sub_192728()
{
  return CommonIntentSignals.getLocaleOverride()().value._countAndFlagsBits;
}

uint64_t sub_192734(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.isAppAttributionRequired.getter( a1,  &protocol witness table for INAddMediaIntent);
}

uint64_t sub_192740(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.useDialogMemoryForAttribution.getter( a1,  &protocol witness table for INAddMediaIntent);
}

uint64_t sub_19274C(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.fallbackUsername.getter(a1, &protocol witness table for INAddMediaIntent);
}

uint64_t sub_192758()
{
  return INAddMediaIntent.privateMediaIntentData.getter();
}

uint64_t sub_192778(uint64_t a1)
{
  return PrivateMediaIntentDataProviding.isUserConfidenceEnoughToBeRecognized.getter( a1,  &protocol witness table for INAddMediaIntent);
}

uint64_t sub_192784(Swift::String a1)
{
  return PrivateMediaIntentDataProviding.localizedAppName(for:)(a1).value._countAndFlagsBits;
}

BOOL sub_192790()
{
  return CommonIntentSignals.isExpertSFAUser()();
}

BOOL sub_19279C()
{
  return CommonIntentSignals.handledBySiriForAirPlay()();
}

uint64_t sub_1927A8(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_2845D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for MediaPlayerBoolSettingVerb( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(vsub_6C3C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_6C3C(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_192834 + 4 * byte_219FB5[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_192868 + 4 * byte_219FB0[v4]))();
}

uint64_t sub_192868(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_192870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x192878LL);
  }
  return result;
}

uint64_t sub_192884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x19288CLL);
  }
  *(_BYTE *)id result = a2 + 3;
  return result;
}

uint64_t sub_192890(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_192898(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayerBoolSettingVerb()
{
  return &type metadata for MediaPlayerBoolSettingVerb;
}

unint64_t sub_1928B8()
{
  unint64_t result = qword_28C3E0;
  if (!qword_28C3E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A0E4, &type metadata for MediaPlayerBoolSettingVerb);
    atomic_store(result, (unint64_t *)&qword_28C3E0);
  }

  return result;
}

void sub_1928FC(char *a1)
{
}

void sub_192908()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v2, 0LL);
  __asm { BR              X9 }

Swift::Int sub_192950()
{
  return Hasher._finalize()();
}

void sub_1929B0()
{
  __asm { BR              X10 }

uint64_t sub_1929E8(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xE300000000000000LL);
}

void sub_192A34(uint64_t a1)
{
  uint64_t v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }

Swift::Int sub_192A78()
{
  return Hasher._finalize()();
}

unint64_t sub_192AD8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_192CC4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_192B04()
{
  return ((uint64_t (*)(void))((char *)sub_192B30 + 4 * byte_219FC6[*v0]))();
}

void sub_192B30(void *a1@<X8>)
{
  *a1 = 7628147LL;
  a1[1] = 0xE300000000000000LL;
}

void sub_192B44(void *a1@<X8>)
{
  *a1 = 0x656C62616E65LL;
  a1[1] = v1;
}

void sub_192B58(void *a1@<X8>)
{
  *a1 = 0x656C6261736964LL;
  a1[1] = 0xE700000000000000LL;
}

void sub_192B74(void *a1@<X8>)
{
  *a1 = &off_26B3D8;
}

uint64_t sub_192B84(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_192D0C();
  unint64_t v5 = sub_192D50();
  unint64_t v6 = sub_192D94();
  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

unint64_t sub_192BE8()
{
  unint64_t result = qword_28C3E8;
  if (!qword_28C3E8)
  {
    uint64_t v1 = sub_45D50(&qword_28C3F0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_28C3E8);
  }

  return result;
}

unint64_t sub_192C38()
{
  unint64_t result = qword_28C3F8;
  if (!qword_28C3F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A00C, &type metadata for MediaPlayerBoolSettingVerb);
    atomic_store(result, (unint64_t *)&qword_28C3F8);
  }

  return result;
}

unint64_t sub_192C80()
{
  unint64_t result = qword_28C400;
  if (!qword_28C400)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A124, &type metadata for MediaPlayerBoolSettingVerb);
    atomic_store(result, (unint64_t *)&qword_28C400);
  }

  return result;
}

unint64_t sub_192CC4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_26B358, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

unint64_t sub_192D0C()
{
  unint64_t result = qword_28C408;
  if (!qword_28C408)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A074, &type metadata for MediaPlayerBoolSettingVerb);
    atomic_store(result, (unint64_t *)&qword_28C408);
  }

  return result;
}

unint64_t sub_192D50()
{
  unint64_t result = qword_28C410;
  if (!qword_28C410)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A03C, &type metadata for MediaPlayerBoolSettingVerb);
    atomic_store(result, (unint64_t *)&qword_28C410);
  }

  return result;
}

unint64_t sub_192D94()
{
  unint64_t result = qword_28C418;
  if (!qword_28C418)
  {
    unint64_t result = swift_getWitnessTable(&unk_21A0AC, &type metadata for MediaPlayerBoolSettingVerb);
    atomic_store(result, (unint64_t *)&qword_28C418);
  }

  return result;
}

uint64_t type metadata accessor for PlayMedia.ChildFlowFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtCO23AudioFlowDelegatePlugin9PlayMedia16ChildFlowFactory);
}

uint64_t sub_192DF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v62 = a4;
  uint64_t v60 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v59 = *(void *)(v60 - 8);
  uint64_t v7 = __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v57 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v63 = *(void *)(v57 - 8);
  uint64_t v11 = __chkstk_darwin(v57);
  id v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  id v15 = (char *)&v50 - v14;
  uint64_t v16 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v70[3] = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  v70[4] = &protocol witness table for SiriKitTaskLoggingProvider;
  v70[0] = a3;
  uint64_t v19 = type metadata accessor for PlayMediaCatDialogService();
  BOOL v20 = (void *)swift_allocObject(v19, 56LL, 7LL);
  v20[6] = 0xEF746E65746E4961LL;
  v20[2] = 0xD000000000000011LL;
  v20[3] = 0x800000000021D860LL;
  v20[4] = a1;
  v20[5] = 0x6964654D79616C50LL;
  id v61 = a2;
  sub_157C4((uint64_t)a2, (uint64_t)v69);
  uint64_t v21 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL);
  id v56 = v18;
  v22(v18, 1LL, 1LL, v21);
  unint64_t v55 = sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v64 = a1;
  swift_retain_n(a1, 2LL);
  uint64_t v53 = v20;
  uint64_t v23 = swift_retain(v20);
  uint64_t v24 = static FeatureFlagProvider.shared.getter(v23);
  uint64_t v25 = v10;
  uint64_t v26 = static StringsFileResolver.shared.getter(v24);
  uint64_t v54 = static SiriKitTaskLoggingProvider.shared.getter(v26);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v27 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(&v66);
  uint64_t v28 = type metadata accessor for DialogHistoryProvider();
  uint64_t v65[3] = v28;
  v65[4] = &off_275B30;
  v65[0] = v27;
  uint64_t v29 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v30 = swift_allocObject(v29, 288LL, 7LL);
  uint64_t v31 = sub_1094C((uint64_t)v65, v28);
  uint64_t v52 = &v50;
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)((char *)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  uint64_t v51 = *v33;
  uint64_t v35 = v57;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v13, v15, v57);
  uint64_t v36 = v59;
  uint64_t v37 = (uint64_t)v58;
  uint64_t v38 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v25, v60);
  swift_retain(v27);
  uint64_t v39 = v54;
  swift_retain(v54);
  uint64_t v49 = (void *)v30;
  uint64_t v40 = (uint64_t)v53;
  uint64_t v41 = sub_EE5CC((uint64_t)v53, v64, v55, v69, (uint64_t)v56, (uint64_t)v13, v37, v39, v51, &v66, v49);
  swift_release(v40);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v38);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v35);
  swift_release(v39);
  sub_6C3C(v65);
  swift_release(v27);
  sub_157C4((uint64_t)v70, (uint64_t)v69);
  uint64_t v67 = v35;
  id v68 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  sub_10974(&v66);
  uint64_t v42 = swift_retain(v41);
  static FeatureFlagProvider.shared.getter(v42);
  uint64_t v43 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v44 = swift_allocObject(v43, 56LL, 7LL);
  sub_FF54(&v66, v44 + 16);
  uint64_t v67 = v43;
  id v68 = &off_272868;
  swift_release(v40);
  swift_release(v41);
  swift_release(v64);
  *(void *)&__int128 v66 = v44;
  sub_6C3C(v70);
  sub_6C3C(v61);
  uint64_t v45 = v62;
  uint64_t v46 = v62 + qword_28E118;
  uint64_t v47 = type metadata accessor for ConfirmationResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  *(void *)(v45 + swift_weakDestroy(v0 + 16) = v41;
  sub_FF54(v69, v45 + 24);
  sub_FF54(&v66, v45 + 64);
  return v45;
}

uint64_t sub_193340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a6 + 56) = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  *(void *)(a6 + 6sub_6C3C(v0 + 4) = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)(a6 + 3sub_6C3C(v0 + 2) = a3;
  uint64_t v12 = type metadata accessor for FeatureFlagProvider(0LL);
  *(void *)(a6 + 96) = v12;
  *(void *)(a6 + 10sub_6C3C(v0 + 4) = &protocol witness table for FeatureFlagProvider;
  id v13 = sub_10974((void *)(a6 + 72));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v13, a4, v12);
  uint64_t v14 = type metadata accessor for StringsFileResolver(0LL);
  *(void *)(a6 + 14sub_6C3C(v0 + 4) = v14;
  *(void *)(a6 + 15sub_6C3C(v0 + 2) = &protocol witness table for StringsFileResolver;
  id v15 = sub_10974((void *)(a6 + 120));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v15, a5, v14);
  *(void *)(a6 + 11sub_6C3C(v0 + 2) = &off_26AB20;
  strcpy((char *)(a6 + 160), "MediaItemType");
  *(_WORD *)(a6 + 17sub_6C3C(v0 + 4) = -4864;
  *(void *)(a6 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(a6 + 2sub_6C3C(v0 + 4) = a2;
  return a6;
}

uint64_t sub_193448( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v39[3] = v16;
  v39[4] = &protocol witness table for DeviceProvider;
  uint64_t v17 = sub_10974(v39);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32LL))(v17, a2, v16);
  uint64_t v18 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v37 = v18;
  uint64_t v38 = &protocol witness table for FeatureFlagProvider;
  uint64_t v19 = sub_10974(&v36);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32LL))(v19, a4, v18);
  uint64_t v20 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v34 = v20;
  uint64_t v35 = &protocol witness table for StringsFileResolver;
  uint64_t v21 = sub_10974(&v33);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32LL))(v21, a5, v20);
  uint64_t v31 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v32 = &off_273E28;
  *(void *)&__int128 v30 = a7;
  *(void *)(a8 + 22sub_6C3C(v0 + 4) = 0LL;
  sub_157C4((uint64_t)v39, a8 + 64);
  sub_157C4((uint64_t)a3, a8 + 104);
  sub_157C4((uint64_t)&v33, (uint64_t)&v27);
  uint64_t v22 = type metadata accessor for PlayMediaAlternativesViewProvider();
  uint64_t v23 = swift_allocObject(v22, 56LL, 7LL);
  sub_FF54(&v27, v23 + 16);
  uint64_t v28 = v22;
  uint64_t v29 = &off_276830;
  *(void *)&__int128 v27 = v23;
  uint64_t v24 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8LL);
  swift_retain(a8);
  v25(a6, v24);
  sub_6C3C(a3);
  sub_6C3C(v39);
  sub_FF54(&v27, a8 + 144);
  sub_FF54(&v36, a8 + 184);
  sub_FF54(&v33, a8 + 232);
  *(void *)(a8 + swift_weakDestroy(v0 + 16) = a1;
  sub_FF54(&v30, a8 + 24);
  return a8;
}

uint64_t sub_19362C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v106 = a4;
  uint64_t v107 = a3;
  uint64_t v105 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v104 = *(void *)(v105 - 8);
  uint64_t v6 = __chkstk_darwin(v105);
  uint64_t v102 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v117 = (char *)&v93 - v8;
  uint64_t v103 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v118 = *(void *)(v103 - 8);
  uint64_t v9 = __chkstk_darwin(v103);
  id v101 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  id v116 = (char *)&v93 - v11;
  uint64_t v119 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v111 = *(void *)(v119 - 8);
  uint64_t v12 = __chkstk_darwin(v119);
  uint64_t v122 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  id v15 = (char *)&v93 - v14;
  uint64_t v115 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v16 = *(void *)(v115 - 8);
  uint64_t v17 = __chkstk_darwin(v115);
  uint64_t v121 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v93 - v19;
  uint64_t v21 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v21);
  uint64_t v23 = (void (*)(char *, uint64_t))((char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v24 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v25 = (void *)swift_allocObject(v24, 56LL, 7LL);
  v25[6] = 0xEF746E65746E4961LL;
  v25[2] = 0xD000000000000011LL;
  v25[3] = 0x800000000021D860LL;
  v25[4] = a1;
  void v25[5] = 0x6964654D79616C50LL;
  uint64_t v108 = a2;
  sub_157C4((uint64_t)a2, (uint64_t)&v127);
  uint64_t v26 = type metadata accessor for DucTemplatingLocalContext(0LL);
  __int128 v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL);
  uint64_t v100 = v23;
  v27((char *)v23, 1LL, 1LL, v26);
  unint64_t v99 = (uint64_t *)sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v120 = a1;
  swift_retain_n(a1, 2LL);
  uint64_t v114 = v25;
  uint64_t v28 = swift_retain(v25);
  uint64_t v29 = v20;
  uint64_t v30 = static FeatureFlagProvider.shared.getter(v28);
  uint64_t v110 = v15;
  static StringsFileResolver.shared.getter(v30);
  uint64_t v31 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v98 = static SiriKitTaskLoggingProvider.shared.getter(v31);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v32 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(v126);
  uint64_t v33 = type metadata accessor for DialogHistoryProvider();
  uint64_t v124 = v33;
  uint64_t v125 = &off_275B30;
  v123[0] = v32;
  uint64_t v34 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v97 = (void *)swift_allocObject(v34, 288LL, 7LL);
  uint64_t v35 = sub_1094C((uint64_t)v123, v33);
  uint64_t v96 = &v93;
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t *)((char *)&v93 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v38 + 16))(v37);
  uint64_t v39 = *v37;
  uint64_t v113 = *(void (**)(char *, char *))(v16 + 16);
  uint64_t v40 = (uint64_t)v121;
  id v109 = v29;
  uint64_t v41 = v16;
  uint64_t v42 = v115;
  v113(v121, v29);
  uint64_t v43 = v111;
  uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
  uint64_t v44 = (uint64_t)v122;
  uint64_t v45 = v110;
  uint64_t v46 = v119;
  v112(v122, v110, v119);
  swift_retain(v32);
  uint64_t v47 = v98;
  swift_retain(v98);
  uint64_t v92 = v39;
  uint64_t v48 = (uint64_t)v114;
  uint64_t v49 = sub_EE5CC((uint64_t)v114, v120, (uint64_t)v99, &v127, (uint64_t)v100, v40, v44, v47, v92, v126, v97);
  uint64_t v97 = v49;
  swift_release(v48);
  uint64_t v100 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v50 = v46;
  v100(v45, v46);
  uint64_t v111 = *(void *)(v41 + 8);
  uint64_t v51 = v109;
  ((void (*)(char *, uint64_t))v111)(v109, v42);
  swift_release(v47);
  sub_6C3C(v123);
  swift_release(v32);
  swift_retain(v49);
  uint64_t v98 = sub_64FAC();
  uint64_t v52 = v116;
  static DeviceProvider.shared.getter();
  uint64_t v53 = static AceService.current.getter(&v127);
  uint64_t v54 = static FeatureFlagProvider.shared.getter(v53);
  uint64_t v55 = static StringsFileResolver.shared.getter(v54);
  SubscriptionProvider.init()(v55);
  sub_9E554(v126);
  uint64_t v56 = sub_1094C((uint64_t)v126, v126[3]);
  unint64_t v99 = &v93;
  __chkstk_darwin(v56);
  uint64_t v58 = (uint64_t *)((char *)&v93 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v59 + 16))(v58);
  uint64_t v60 = *v58;
  uint64_t v61 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v124 = v61;
  uint64_t v125 = &off_273E28;
  v123[0] = v60;
  uint64_t v62 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t v95 = swift_allocObject(v62, 272LL, 7LL);
  uint64_t v63 = sub_1094C((uint64_t)v123, v61);
  uint64_t v96 = &v93;
  __chkstk_darwin(v63);
  uint64_t v65 = (uint64_t *)((char *)&v93 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v66 + 16))(v65);
  uint64_t v94 = *v65;
  uint64_t v67 = v101;
  uint64_t v68 = v103;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v101, v52, v103);
  uint64_t v69 = (uint64_t)v121;
  uint64_t v70 = v115;
  ((void (*)(char *, char *, uint64_t))v113)(v121, v51, v115);
  uint64_t v71 = (uint64_t)v122;
  v112(v122, v45, v50);
  uint64_t v72 = v104;
  uint64_t v73 = (uint64_t)v102;
  uint64_t v74 = v117;
  uint64_t v75 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v102, v117, v105);
  uint64_t v76 = v97;
  uint64_t v77 = (uint64_t)v67;
  uint64_t v78 = v95;
  uint64_t v102 = (char *)sub_193448((uint64_t)v97, v77, &v127, v69, v71, v73, v94, v95);
  swift_release(v98);
  swift_release(v78);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v75);
  uint64_t v79 = v110;
  uint64_t v80 = v119;
  uint64_t v81 = v100;
  v100(v110, v119);
  uint64_t v82 = v109;
  ((void (*)(char *, uint64_t))v111)(v109, v70);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v116, v68);
  sub_6C3C(v123);
  sub_6C3C(v126);
  uint64_t v83 = (uint64_t)v76;
  swift_retain(v76);
  uint64_t v84 = (uint64_t)v102;
  uint64_t v85 = swift_retain(v102);
  uint64_t v86 = static FeatureFlagProvider.shared.getter(v85);
  static StringsFileResolver.shared.getter(v86);
  uint64_t v87 = (uint64_t)v121;
  ((void (*)(char *, char *, uint64_t))v113)(v121, v82, v70);
  uint64_t v88 = (uint64_t)v122;
  v112(v122, v79, v80);
  uint64_t v89 = v107;
  uint64_t v90 = sub_193340(v84, v83, v107, v87, v88, v106);
  swift_retain(v89);
  v81(v79, v80);
  ((void (*)(char *, uint64_t))v111)(v82, v70);
  swift_release(v114);
  swift_release(v83);
  swift_release(v84);
  swift_release(v120);
  sub_6C3C(v108);
  return v90;
}

uint64_t sub_193F18( void (*a1)(void, void), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, unint64_t a9, void (*a10)(char *, char *, uint64_t), __int128 *a11, void (*a12)(void *, char *, uint64_t), void *a13, uint64_t a14, uint64_t a15)
{
  uint64_t v128 = a8;
  uint64_t v133 = a6;
  uint64_t v134 = a7;
  uint64_t v123 = a5;
  uint64_t v135 = a3;
  uint64_t v126 = a1;
  uint64_t v129 = a15;
  uint64_t v122 = a13;
  uint64_t v112 = (void *)a14;
  uint64_t v124 = a11;
  uint64_t v110 = a12;
  id v109 = a10;
  unint64_t v108 = a9;
  uint64_t v16 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v120 = *(void *)(v16 - 8);
  uint64_t v121 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v118 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v119 = (char *)&v104 - v19;
  uint64_t v20 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v117 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v132 = (char *)&v104 - v24;
  uint64_t v25 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v26 = *(uint64_t **)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v113 = (uint64_t *)((char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v104 - v29;
  uint64_t v31 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v127 = (char *)&v104 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v104 - v38;
  __chkstk_darwin(v37);
  uint64_t v111 = v40;
  uint64_t v41 = *(void (**)(void))(v40 + 32);
  id v116 = (char *)&v104 - v42;
  uint64_t v131 = v43;
  v41();
  uint64_t v163 = v25;
  uint64_t v164 = &protocol witness table for FeatureFlagProvider;
  uint64_t v44 = (char *)sub_10974(&v162);
  uint64_t v114 = v26;
  uint64_t v115 = v44;
  uint64_t v45 = (void (*)(void *, uint64_t, uint64_t))v26[4];
  uint64_t v130 = v25;
  v45(v44, a4, v25);
  uint64_t v160 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  double v161 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v159 = v133;
  uint64_t v157 = type metadata accessor for ResponseFactory(0LL);
  id v158 = &protocol witness table for ResponseFactory;
  *(void *)&__int128 v156 = v134;
  uint64_t v154 = v20;
  uint64_t v155 = &protocol witness table for DeviceProvider;
  uint64_t v46 = sub_10974(&v153);
  uint64_t v133 = v21;
  uint64_t v134 = v20;
  (*(void (**)(void *, unint64_t, uint64_t))(v21 + 32))(v46, v108, v20);
  uint64_t v47 = type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v152 = &protocol witness table for MediaRemoteAPIProvider;
  uint64_t v151 = v47;
  *(void *)&__int128 v150 = v109;
  uint64_t v148 = type metadata accessor for PlaybackController(0LL);
  uint64_t v149 = &protocol witness table for PlaybackController;
  *(void *)&__int128 v147 = v110;
  uint64_t v145 = type metadata accessor for AppIntentInvoker(0LL);
  uint64_t v146 = &protocol witness table for AppIntentInvoker;
  *(void *)&__int128 v144 = v112;
  uint64_t v142 = type metadata accessor for PlayMediaTVOSSnippetModelProvider();
  uint64_t v143 = (char *)&_s11descr26FCD9VMn.Parent + 3;
  *(void *)&__int128 v141 = v128;
  uint64_t v48 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v49 = (void *)swift_allocObject(v48, 56LL, 7LL);
  v49[6] = 0xEF746E65746E4961LL;
  __int128 v49[2] = 0xD000000000000011LL;
  v49[3] = 0x800000000021D860LL;
  uint64_t v50 = v126;
  v49[4] = v126;
  void v49[5] = 0x6964654D79616C50LL;
  *(void *)(v129 + swift_weakDestroy(v0 + 16) = v49;
  sub_157C4((uint64_t)v135, (uint64_t)v140);
  uint64_t v51 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL);
  uint64_t v112 = v33;
  v52(v33, 1LL, 1LL, v51);
  unint64_t v108 = sub_7F548(_swiftEmptyArrayStorage);
  swift_retain_n(v50, 2LL);
  uint64_t v53 = swift_retain(v49);
  uint64_t v54 = static FeatureFlagProvider.shared.getter(v53);
  uint64_t v128 = v39;
  uint64_t v55 = static StringsFileResolver.shared.getter(v54);
  uint64_t v107 = static SiriKitTaskLoggingProvider.shared.getter(v55);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v56 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(v139);
  uint64_t v57 = type metadata accessor for DialogHistoryProvider();
  uint64_t v137 = v57;
  uint64_t v138 = &off_275B30;
  v136[0] = v56;
  uint64_t v104 = v56;
  uint64_t v58 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v105 = (void *)swift_allocObject(v58, 288LL, 7LL);
  uint64_t v59 = sub_1094C((uint64_t)v136, v57);
  uint64_t v106 = &v104;
  __chkstk_darwin(v59);
  uint64_t v61 = (uint64_t *)((char *)&v104 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v62 + 16))(v61);
  uint64_t v63 = *v61;
  uint64_t v65 = (uint64_t)v113;
  uint64_t v64 = v114;
  uint64_t v110 = (void (*)(void *, char *, uint64_t))v114[2];
  uint64_t v125 = v30;
  uint64_t v66 = v30;
  uint64_t v67 = v130;
  v110(v113, v66, v130);
  uint64_t v68 = v111;
  id v109 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
  uint64_t v69 = (uint64_t)v127;
  uint64_t v70 = v131;
  v109(v127, v128, v131);
  swift_retain(v56);
  uint64_t v71 = v107;
  swift_retain(v107);
  uint64_t v72 = sub_EE5CC((uint64_t)v49, (uint64_t)v126, v108, v140, (uint64_t)v112, v65, v69, v71, v63, v139, v105);
  uint64_t v113 = v72;
  swift_release(v49);
  uint64_t v126 = *(void (**)(void, void))(v68 + 8);
  uint64_t v73 = v128;
  uint64_t v74 = v70;
  v126(v128, v70);
  ((void (*)(char *, uint64_t))v64[1])(v125, v67);
  swift_release(v71);
  sub_6C3C(v136);
  swift_release(v104);
  uint64_t v75 = v129;
  *(void *)(v129 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaDialogProvider) = v72;
  sub_157C4((uint64_t)v135, (uint64_t)v140);
  uint64_t v76 = swift_retain(v72);
  uint64_t v77 = v132;
  uint64_t v78 = static DeviceProvider.shared.getter(v76);
  uint64_t v79 = static StringsFileResolver.shared.getter(v78);
  uint64_t v80 = v119;
  SubscriptionProvider.init()(v79);
  sub_9E554(v139);
  uint64_t v81 = sub_1094C((uint64_t)v139, v139[3]);
  uint64_t v114 = &v104;
  __chkstk_darwin(v81);
  uint64_t v83 = (uint64_t *)((char *)&v104 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v84 + 16))(v83);
  uint64_t v85 = *v83;
  uint64_t v86 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v137 = v86;
  uint64_t v138 = &off_273E28;
  v136[0] = v85;
  uint64_t v87 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t v111 = swift_allocObject(v87, 272LL, 7LL);
  uint64_t v88 = sub_1094C((uint64_t)v136, v86);
  uint64_t v112 = &v104;
  __chkstk_darwin(v88);
  uint64_t v90 = (unint64_t *)((char *)&v104 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(unint64_t *))(v91 + 16))(v90);
  unint64_t v108 = *v90;
  uint64_t v92 = (uint64_t)v117;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v117, v77, v134);
  uint64_t v93 = (uint64_t)v127;
  v109(v127, v73, v74);
  uint64_t v95 = v120;
  uint64_t v94 = v121;
  uint64_t v96 = v118;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v118, v80, v121);
  uint64_t v97 = (uint64_t)v125;
  v110(v125, v115, v130);
  uint64_t v98 = (uint64_t)v96;
  uint64_t v99 = v111;
  uint64_t v100 = sub_193448((uint64_t)v113, v92, v140, v97, v93, v98, v108, v111);
  swift_release(v99);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v80, v94);
  uint64_t v101 = v131;
  uint64_t v102 = (void (*)(char *, uint64_t))v126;
  v126(v73, v131);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v134);
  sub_6C3C(v136);
  sub_6C3C(v139);
  sub_6C3C(v122);
  sub_6C3C(v135);
  v102(v116, v101);
  *(void *)(v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playMediaViewProvider) = v100;
  sub_FF54(&v162, v75 + 24);
  sub_196964(v123, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_appSelectionReport);
  sub_FF54( &v159,  v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_siriKitTaskLoggingProvider);
  sub_FF54(&v156, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_responseFactory);
  sub_FF54(&v141, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_snippetModelProvider);
  sub_FF54(&v153, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_deviceProvider);
  sub_FF54( &v150,  v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_mediaRemoteAPIProvider);
  sub_FF54(v124, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_executorProvider);
  sub_FF54(&v147, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_playbackController);
  sub_FF54(&v144, v75 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia20HandleIntentStrategy_appIntentInvoker);
  return v75;
}

uint64_t sub_194850( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v109 = a6;
  uint64_t v110 = a7;
  uint64_t v122 = (void *)a5;
  uint64_t v117 = a9;
  uint64_t v14 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v107 = *(void *)(v14 - 8);
  uint64_t v108 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v106 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v118 = (char *)&v94 - v17;
  uint64_t v18 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v119 = *(void *)(v18 - 8);
  uint64_t v120 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v105 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  id v116 = (char *)&v94 - v21;
  uint64_t v123 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v104 = *(void *)(v123 - 8);
  uint64_t v22 = __chkstk_darwin(v123);
  uint64_t v115 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v94 - v24;
  uint64_t v121 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v114 = *(void *)(v121 - 8);
  uint64_t v26 = __chkstk_darwin(v121);
  uint64_t v113 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v94 - v28;
  uint64_t v30 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v30);
  uint64_t v32 = (void (*)(char *, uint64_t))((char *)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v139 = type metadata accessor for AccountProvider(0LL);
  uint64_t v140 = &protocol witness table for AccountProvider;
  *(void *)&__int128 v138 = a3;
  uint64_t v136 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v137 = &protocol witness table for SiriKitTaskLoggingProvider;
  *(void *)&__int128 v135 = a4;
  uint64_t v133 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v134 = &off_272868;
  *(void *)&__int128 v132 = v122;
  uint64_t v130 = type metadata accessor for PlayMediaUnsupportedValueSnippetProvider();
  uint64_t v131 = &off_26EAA0;
  *(void *)&__int128 v129 = a8;
  uint64_t v33 = type metadata accessor for PlayMediaCatDialogService();
  uint64_t v34 = (void *)swift_allocObject(v33, 56LL, 7LL);
  v34[6] = 0xEF746E65746E4961LL;
  _OWORD v34[2] = 0xD000000000000011LL;
  v34[3] = 0x800000000021D860LL;
  v34[4] = a1;
  void v34[5] = 0x6964654D79616C50LL;
  uint64_t v122 = (void *)a2;
  sub_157C4(a2, (uint64_t)v128);
  uint64_t v35 = type metadata accessor for DucTemplatingLocalContext(0LL);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL);
  uint64_t v103 = v32;
  v36((char *)v32, 1LL, 1LL, v35);
  uint64_t v100 = (uint64_t *)sub_7F548(_swiftEmptyArrayStorage);
  uint64_t v112 = a1;
  uint64_t v37 = swift_retain_n(a1, 2LL);
  uint64_t v38 = static FeatureFlagProvider.shared.getter(v37);
  uint64_t v111 = v25;
  uint64_t v39 = static StringsFileResolver.shared.getter(v38);
  uint64_t v99 = (void *)static SiriKitTaskLoggingProvider.shared.getter(v39);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v40 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(v127);
  uint64_t v41 = type metadata accessor for DialogHistoryProvider();
  uint64_t v125 = v41;
  uint64_t v126 = &off_275B30;
  v124[0] = v40;
  uint64_t v42 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v97 = (void *)swift_allocObject(v42, 288LL, 7LL);
  uint64_t v43 = sub_1094C((uint64_t)v124, v41);
  uint64_t v98 = &v94;
  __chkstk_darwin(v43);
  uint64_t v45 = (uint64_t *)((char *)&v94 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v46 + 16))(v45);
  uint64_t v47 = *v45;
  uint64_t v48 = (uint64_t)v113;
  uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  uint64_t v49 = v114;
  uint64_t v96 = v29;
  uint64_t v50 = v121;
  v102(v113, v29, v121);
  uint64_t v51 = v104;
  uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
  uint64_t v52 = (uint64_t)v115;
  uint64_t v53 = v123;
  v101(v115, v111, v123);
  swift_retain(v40);
  uint64_t v93 = v47;
  uint64_t v54 = v112;
  uint64_t v55 = sub_EE5CC((uint64_t)v34, v112, (uint64_t)v100, v128, (uint64_t)v103, v48, v52, (uint64_t)v99, v93, v127, v97);
  uint64_t v99 = v55;
  swift_release(v34);
  uint64_t v104 = *(void *)(v51 + 8);
  uint64_t v56 = v111;
  ((void (*)(char *, uint64_t))v104)(v111, v53);
  uint64_t v103 = *(void (**)(char *, uint64_t))(v49 + 8);
  uint64_t v57 = v96;
  uint64_t v58 = v50;
  v103(v96, v50);
  sub_6C3C(v124);
  swift_release(v40);
  *(void *)(v117 + swift_weakDestroy(v0 + 16) = v55;
  sub_157C4((uint64_t)v122, (uint64_t)v128);
  swift_retain(v54);
  uint64_t v59 = swift_retain(v55);
  uint64_t v60 = v116;
  uint64_t v61 = static DeviceProvider.shared.getter(v59);
  uint64_t v62 = v57;
  uint64_t v63 = static FeatureFlagProvider.shared.getter(v61);
  uint64_t v64 = static StringsFileResolver.shared.getter(v63);
  SubscriptionProvider.init()(v64);
  sub_9E554(v127);
  uint64_t v65 = sub_1094C((uint64_t)v127, v127[3]);
  uint64_t v100 = &v94;
  __chkstk_darwin(v65);
  uint64_t v67 = (uint64_t *)((char *)&v94 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v68 + 16))(v67);
  uint64_t v69 = *v67;
  uint64_t v70 = type metadata accessor for SiriAudioUIAssertionProvider();
  uint64_t v125 = v70;
  uint64_t v126 = &off_273E28;
  v124[0] = v69;
  uint64_t v71 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t v97 = (void *)swift_allocObject(v71, 272LL, 7LL);
  uint64_t v72 = sub_1094C((uint64_t)v124, v70);
  uint64_t v98 = &v94;
  __chkstk_darwin(v72);
  uint64_t v74 = (uint64_t *)((char *)&v94 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v75 + 16))(v74);
  uint64_t v95 = *v74;
  uint64_t v76 = v105;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v105, v60, v120);
  uint64_t v77 = (uint64_t)v113;
  v102(v113, v62, v58);
  uint64_t v78 = (uint64_t)v115;
  v101(v115, v56, v123);
  uint64_t v79 = (uint64_t)v106;
  uint64_t v80 = v107;
  uint64_t v81 = v118;
  uint64_t v82 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v106, v118, v108);
  uint64_t v83 = (uint64_t)v76;
  uint64_t v84 = v97;
  uint64_t v85 = sub_193448((uint64_t)v99, v83, v128, v77, v78, v79, v95, (uint64_t)v97);
  swift_release(v112);
  swift_release(v84);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
  ((void (*)(char *, uint64_t))v104)(v56, v123);
  uint64_t v86 = v121;
  v103(v62, v121);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v116, v120);
  sub_6C3C(v124);
  sub_6C3C(v127);
  uint64_t v87 = v117;
  *(void *)(v117 + 2sub_6C3C(v0 + 4) = v85;
  uint64_t v88 = v122;
  uint64_t v89 = sub_157C4((uint64_t)v122, v87 + 32);
  LOBYTE(v85) = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v89);
  uint64_t v90 = type metadata accessor for ViewFactory(0LL);
  swift_allocObject(v90, *(unsigned int *)(v90 + 48), *(unsigned __int16 *)(v90 + 52));
  uint64_t v91 = ViewFactory.init(ttsEnabled:)(v85 & 1);
  sub_6C3C(v88);
  *(void *)(v87 + 7sub_6C3C(v0 + 2) = v91;
  sub_FF54(&v138, v87 + 80);
  sub_FF54(&v135, v87 + 120);
  sub_FF54(&v132, v87 + 160);
  sub_FF54(v109, v87 + 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 32))( v87 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_featureFlagProvider,  v110,  v86);
  sub_FF54(&v129, v87 + OBJC_IVAR____TtCO23AudioFlowDelegatePlugin9PlayMedia24UnsupportedValueStrategy_snippetProvider);
  return v87;
}

uint64_t sub_19505C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v33 = &off_272868;
  v31[0] = a5;
  uint64_t v29 = type metadata accessor for PlayMediaUnsupportedValueSnippetProvider();
  uint64_t v30 = &off_26EAA0;
  v28[0] = a8;
  uint64_t v16 = type metadata accessor for PlayMedia.UnsupportedValueStrategy(0LL);
  uint64_t v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v18 = sub_1094C((uint64_t)v31, v32);
  __chkstk_darwin(v18);
  uint64_t v20 = (void *)((char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = sub_1094C((uint64_t)v28, v29);
  __chkstk_darwin(v22);
  uint64_t v24 = (void *)((char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = sub_194850(a1, a2, a3, a4, *v20, a6, a7, *v24, v17);
  sub_6C3C(v28);
  sub_6C3C(v31);
  return v26;
}

uint64_t sub_1951E8()
{
  uint64_t v0 = type metadata accessor for TCCProvider(0LL);
  uint64_t v279 = *(void *)(v0 - 8);
  uint64_t v280 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v276 = (char *)&v262 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v299 = (char *)&v262 - v3;
  uint64_t v4 = type metadata accessor for NowPlayingProvider(0LL);
  uint64_t v277 = *(void *)(v4 - 8);
  uint64_t v278 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v275 = (char *)&v262 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v297 = (char *)&v262 - v7;
  uint64_t v298 = type metadata accessor for InstalledAppProvider(0LL);
  uint64_t v296 = *(void *)(v298 - 8);
  uint64_t v8 = __chkstk_darwin(v298);
  uint64_t v274 = (char *)&v262 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v293 = (char *)&v262 - v10;
  uint64_t v11 = type metadata accessor for UserPreferenceProvider(0LL);
  uint64_t v294 = *(void *)(v11 - 8);
  uint64_t v295 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v291 = (uint64_t)&v262 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v292 = (char *)&v262 - v14;
  uint64_t v308 = type metadata accessor for SubscriptionProvider(0LL);
  uint64_t v272 = *(void *)(v308 - 8);
  uint64_t v15 = __chkstk_darwin(v308);
  BOOL v289 = (char *)&v262 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v290 = (char *)&v262 - v18;
  __chkstk_darwin(v17);
  id v286 = (unint64_t *)((char *)&v262 - v19);
  uint64_t v314 = type metadata accessor for DeviceProvider(0LL);
  uint64_t v271 = *(unint64_t **)(v314 - 8);
  uint64_t v20 = __chkstk_darwin(v314);
  uint64_t v288 = (uint64_t)&v262 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v313 = (char *)&v262 - v23;
  __chkstk_darwin(v22);
  uint64_t v306 = (char *)&v262 - v24;
  uint64_t v25 = sub_6C5C(&qword_285470);
  __chkstk_darwin(v25);
  uint64_t v284 = (unint64_t *)((char *)&v262 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v27 = sub_6C5C(&qword_284ED0);
  __chkstk_darwin(v27);
  uint64_t v312 = (unint64_t *)((char *)&v262 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v315 = type metadata accessor for StringsFileResolver(0LL);
  uint64_t v317 = *(void *)(v315 - 8);
  uint64_t v29 = __chkstk_darwin(v315);
  uint64_t v304 = (unint64_t *)((char *)&v262 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v31 = __chkstk_darwin(v29);
  id v305 = (char *)&v262 - v32;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v262 - v33;
  uint64_t v319 = type metadata accessor for FeatureFlagProvider(0LL);
  uint64_t v285 = *(void *)(v319 - 8);
  uint64_t v35 = __chkstk_darwin(v319);
  uint64_t v287 = (unint64_t *)((char *)&v262 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v37 = __chkstk_darwin(v35);
  unsigned int v303 = (char *)&v262 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v318 = (unint64_t *)((char *)&v262 - v40);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v262 - v41;
  uint64_t v43 = sub_6C5C(&qword_28C4B8);
  uint64_t v282 = *(void *)(v43 - 8);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v281 = (char *)&v262 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v262 - v46;
  uint64_t v48 = sub_1641C(0LL, (unint64_t *)&qword_285320, &OBJC_CLASS___INPlayMediaIntent_ptr);
  uint64_t v273 = sub_1641C(0LL, &qword_28C4C0, &OBJC_CLASS___INPlayMediaIntentResponse_ptr);
  RCHChildFlowProducers.init()(v48);
  uint64_t v49 = sub_64FAC();
  static AceService.current.getter(v330);
  uint64_t v50 = type metadata accessor for SiriKitTaskLoggingProvider(0LL);
  uint64_t v51 = static SiriKitTaskLoggingProvider.shared.getter(v50);
  uint64_t v52 = _s27NeedsDisambiguationStrategyCMa_0(0LL);
  uint64_t v53 = swift_allocObject(v52, 176LL, 7LL);
  uint64_t v54 = sub_19362C(v49, v330, v51, v53);
  swift_release(v51);
  *(void *)&v330[0] = v54;
  uint64_t v55 = sub_10430( &qword_28C4C8,  _s27NeedsDisambiguationStrategyCMa_0,  (uint64_t)&protocol conformance descriptor for MediaItemDisambiguationStrategy<A>);
  uint64_t v56 = static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)(v330, v52, v55);
  uint64_t v58 = v57;
  swift_release(v54);
  uint64_t v310 = v47;
  uint64_t v311 = v43;
  RCHChildFlowProducers.needsDisambiguationFlowCompletion.setter(v56, v58, v43);
  uint64_t v302 = (void (*)(char *, uint64_t))sub_64FAC();
  uint64_t v307 = v50;
  Class v267 = (void (*)(void *, char *, uint64_t))static SiriKitTaskLoggingProvider.shared.getter(v302);
  uint64_t v59 = static AceService.current.getter(v330);
  uint64_t v60 = v42;
  uint64_t v61 = static FeatureFlagProvider.shared.getter(v59);
  static StringsFileResolver.shared.getter(v61);
  if (qword_2839A0 != -1) {
    swift_once(&qword_2839A0, sub_1EF810);
  }
  uint64_t v62 = qword_296C50;
  uint64_t v63 = type metadata accessor for DialogHistoryProvider();
  uint64_t v332 = v63;
  id v333 = &off_275B30;
  *(void *)&__int128 v331 = v62;
  uint64_t v263 = v62;
  uint64_t v266 = (unint64_t *)_s18NeedsValueStrategyCMa_0();
  uint64_t v264 = swift_allocObject(v266, 64LL, 7LL);
  uint64_t v64 = sub_1094C((uint64_t)&v331, v63);
  uint64_t v265 = &v262;
  __chkstk_darwin(v64);
  uint64_t v268 = (void (*)(char *, char *, uint64_t))((unint64_t)(v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = (unint64_t *)((char *)&v262 - (char *)v268);
  uint64_t v68 = *(void (**)(int64_t))(v67 + 16);
  uint64_t v283 = (void (*)(void, void, void))v63;
  uint64_t v269 = v68;
  uint64_t v270 = v65;
  v68((char *)&v262 - (char *)v268);
  unint64_t v262 = *v66;
  uint64_t v69 = v285;
  uint64_t v71 = v318;
  uint64_t v70 = v319;
  uint64_t v72 = v60;
  uint64_t v316 = *(void (**)(void *, char *, uint64_t))(v285 + 16);
  v316(v318, v60, v319);
  uint64_t v73 = v317;
  uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v317 + 16);
  uint64_t v75 = (uint64_t)v305;
  uint64_t v300 = v34;
  uint64_t v301 = v74;
  uint64_t v76 = v315;
  v74(v305, (uint64_t)v34, v315);
  swift_retain_n(v62, 2LL);
  uint64_t v77 = v267;
  swift_retain(v267);
  uint64_t v78 = sub_153A2C((uint64_t)v302, (uint64_t)v77, v330, v71, v75, v262, v264);
  uint64_t v302 = *(void (**)(char *, uint64_t))(v73 + 8);
  v302(v34, v76);
  uint64_t v79 = v70;
  uint64_t v317 = *(void *)(v69 + 8);
  ((void (*)(char *, uint64_t))v317)(v72, v70);
  swift_release(v77);
  sub_6C3C(&v331);
  swift_release(v263);
  *(void *)&v330[0] = v78;
  uint64_t v80 = sub_10430(&qword_28C4D0, (uint64_t (*)(uint64_t))_s18NeedsValueStrategyCMa_0, (uint64_t)&unk_2156AC);
  uint64_t v81 = static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)(v330, v266, v80);
  uint64_t v83 = v82;
  swift_release(v78);
  uint64_t v84 = v311;
  RCHChildFlowProducers.needsValueFlowCompletion.setter(v81, v83, v311);
  uint64_t v85 = sub_64FAC();
  static AceService.current.getter(v330);
  uint64_t v86 = _s25NeedsConfirmationStrategyCMa_0(0LL);
  swift_allocObject(v86, 216LL, 7LL);
  uint64_t v87 = sub_108A68(v85, v330);
  *(void *)&v330[0] = v87;
  uint64_t v88 = sub_10430(&qword_28C4D8, _s25NeedsConfirmationStrategyCMa_0, (uint64_t)&unk_21B258);
  uint64_t v89 = static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)(v330, v86, v88);
  uint64_t v91 = v90;
  swift_release(v87);
  RCHChildFlowProducers.needsConfirmationFlowCompletion.setter(v89, v91, v84);
  uint64_t v92 = sub_64FAC();
  uint64_t v93 = static AceService.current.getter(v330);
  uint64_t v94 = static SiriKitTaskLoggingProvider.shared.getter(v93);
  uint64_t v95 = _s21ConfirmIntentStrategyCMa_1(0LL);
  uint64_t v96 = swift_allocObject(v95, *(unsigned int *)(v95 + 48), *(unsigned __int16 *)(v95 + 52));
  uint64_t v97 = sub_192DF8(v92, v330, v94, v96);
  *(void *)&v330[0] = v97;
  uint64_t v98 = sub_10430(&qword_28C4E0, _s21ConfirmIntentStrategyCMa_1, (uint64_t)&unk_21B870);
  uint64_t v99 = static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)( v330,  sub_231E4,  0LL,  v95,  v98);
  uint64_t v101 = v100;
  swift_release(v97);
  RCHChildFlowProducers.confirmIntentFlowCompletion.setter(v99, v101, v84);
  uint64_t v102 = (uint64_t)v300;
  uint64_t v103 = v72;
  if (qword_2838F0 != -1) {
    swift_once(&qword_2838F0, sub_14EB48);
  }
  int v104 = CATDefaultMode;
  uint64_t v105 = type metadata accessor for MorphunProvider(0LL);
  uint64_t v106 = static MorphunProvider.shared.getter(v105);
  uint64_t v107 = static AceService.current.getter(&v331);
  static FeatureFlagProvider.shared.getter(v107);
  uint64_t v108 = type metadata accessor for CatService();
  uint64_t v109 = swift_allocObject(v108, 300LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v330);
  uint64_t v110 = (uint64_t)v318;
  v316(v318, v103, v79);
  swift_retain(v106);
  uint64_t v111 = sub_10FF64(v330, v104, v106, &v331, v110, v109);
  swift_release(v106);
  uint64_t v112 = v103;
  uint64_t v113 = (uint64_t)v103;
  uint64_t v114 = v79;
  ((void (*)(char *, uint64_t))v317)(v112, v79);
  swift_release(v106);
  uint64_t v115 = type metadata accessor for PlayMediaCatDialogService();
  id v116 = (void *)swift_allocObject(v115, 56LL, 7LL);
  v116[6] = 0xEF746E65746E4961LL;
  v116[2] = 0xD000000000000011LL;
  uint64_t v116[3] = 0x800000000021D860LL;
  v116[4] = v111;
  v116[5] = 0x6964654D79616C50LL;
  uint64_t v285 = v111;
  uint64_t v117 = type metadata accessor for DucTemplatingLocalContext(0LL);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56LL))(v312, 1LL, 1LL, v117);
  Class v267 = (void (*)(void *, char *, uint64_t))sub_7F548(_swiftEmptyArrayStorage);
  swift_retain_n(v111, 2LL);
  uint64_t v118 = static AceService.current.getter(v330);
  uint64_t v119 = v113;
  uint64_t v309 = v113;
  uint64_t v120 = static FeatureFlagProvider.shared.getter(v118);
  uint64_t v121 = static StringsFileResolver.shared.getter(v120);
  uint64_t v122 = static SiriKitTaskLoggingProvider.shared.getter(v121);
  uint64_t v123 = qword_296C50;
  swift_retain(qword_296C50);
  static ExecutorProvider.shared.getter(&v331);
  uint64_t v124 = (uint64_t)v283;
  id v328 = v283;
  uint64_t v329 = &off_275B30;
  *(void *)&__int128 v327 = v123;
  uint64_t v125 = type metadata accessor for PlayMediaDialogProvider(0LL);
  uint64_t v265 = (unint64_t *)swift_allocObject(v125, 288LL, 7LL);
  uint64_t v126 = sub_1094C((uint64_t)&v327, v124);
  uint64_t v266 = &v262;
  __chkstk_darwin(v126);
  uint64_t v127 = v102;
  uint64_t v128 = (uint64_t *)((char *)&v262 - (char *)v268);
  v269((char *)&v262 - (char *)v268);
  uint64_t v129 = *v128;
  v316((void *)v110, (char *)v119, v114);
  uint64_t v130 = (uint64_t)v305;
  uint64_t v131 = v315;
  v301(v305, v127, v315);
  swift_retain(v123);
  swift_retain(v122);
  uint64_t v312 = sub_EE5CC((uint64_t)v116, v285, (uint64_t)v267, v330, (uint64_t)v312, v110, v130, v122, v129, &v331, v265);
  swift_release(v116);
  v302((char *)v127, v131);
  ((void (*)(uint64_t, uint64_t))v317)(v309, v114);
  swift_release(v122);
  sub_6C3C(&v327);
  swift_release(v123);
  uint64_t v270 = (char *)sub_106E70();
  uint64_t v269 = (void (*)(int64_t))sub_64FAC();
  static StringsFileResolver.shared.getter(v269);
  __int128 v132 = static AceService.current.getter(v330);
  static FeatureFlagProvider.shared.getter(v132);
  type metadata accessor for AppSelectionContext(0LL);
  uint64_t v133 = static AppSelectionContext.shared.getter();
  if (v133)
  {
    uint64_t v134 = v133;
    uint64_t v135 = v127;
    uint64_t v136 = v131;
    dispatch thunk of AppSelectionContext.report.getter();
    uint64_t v137 = swift_release(v134);
  }

  else
  {
    uint64_t v135 = v127;
    uint64_t v136 = v131;
    uint64_t v138 = type metadata accessor for AppSelectionReport(0LL);
    uint64_t v137 = (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56LL))( v284,  1LL,  1LL,  v138);
  }

  uint64_t v139 = static SiriKitTaskLoggingProvider.shared.getter(v137);
  uint64_t v140 = type metadata accessor for ResponseFactory(0LL);
  swift_allocObject(v140, *(unsigned int *)(v140 + 48), *(unsigned __int16 *)(v140 + 52));
  uint64_t v141 = ResponseFactory.init()();
  uint64_t v142 = v306;
  static DeviceProvider.shared.getter(v141);
  type metadata accessor for MediaRemoteAPIProvider(0LL);
  uint64_t v268 = (void (*)(char *, char *, uint64_t))static MediaRemoteAPIProvider.shared.getter();
  static ExecutorProvider.shared.getter(&v331);
  type metadata accessor for PlaybackController(0LL);
  Class v267 = (void (*)(void *, char *, uint64_t))PlaybackController.__allocating_init()();
  static OutputPublisherFactory.makeOutputPublisher()(&v327, v267);
  uint64_t v143 = type metadata accessor for AppIntentInvoker(0LL);
  swift_allocObject(v143, *(unsigned int *)(v143 + 48), *(unsigned __int16 *)(v143 + 52));
  uint64_t v266 = (unint64_t *)AppIntentInvoker.init()();
  uint64_t v144 = type metadata accessor for PlayMedia.HandleIntentStrategy(0LL);
  uint64_t v145 = swift_allocObject(v144, *(unsigned int *)(v144 + 48), *(unsigned __int16 *)(v144 + 52));
  v301((char *)v135, (uint64_t)v304, v136);
  uint64_t v146 = v309;
  v316((void *)v309, v303, v319);
  __int128 v147 = v271;
  uint64_t v283 = (void (*)(void, void, void))v271[2];
  unint64_t v148 = (unint64_t)v313;
  uint64_t v149 = v142;
  uint64_t v150 = v314;
  v283(v313, v149, v314);
  swift_retain(v139);
  uint64_t v151 = v141;
  swift_retain(v141);
  uint64_t v152 = v269;
  uint64_t v153 = sub_193F18( (void (*)(void, void))v269,  (uint64_t)v300,  v330,  v146,  (uint64_t)v284,  v139,  v151,  v270,  v148,  v268,  &v331,  v267,  &v327,  (uint64_t)v266,  v145);
  swift_release(v152);
  uint64_t v284 = (unint64_t *)v147[1];
  uint64_t v154 = v306;
  ((void (*)(char *, uint64_t))v284)(v306, v150);
  swift_release(v139);
  swift_release(v151);
  ((void (*)(char *, uint64_t))v317)(v303, v319);
  v302((char *)v304, v315);
  *(void *)&v330[0] = v153;
  uint64_t v155 = sub_10430( &qword_28C4E8,  type metadata accessor for PlayMedia.HandleIntentStrategy,  (uint64_t)&protocol conformance descriptor for PlayMedia.HandleIntentStrategy);
  uint64_t v156 = static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)(v330, v144, v155);
  uint64_t v158 = v157;
  swift_release(v153);
  RCHChildFlowProducers.handleIntentFlowCompletion.setter(v156, v158, v311);
  swift_retain_n(v312, 2LL);
  unsigned int v303 = (char *)sub_64FAC();
  static DeviceProvider.shared.getter(v303);
  __int128 v159 = static AceService.current.getter(&v331);
  uint64_t v160 = v146;
  uint64_t v161 = static FeatureFlagProvider.shared.getter(v159);
  uint64_t v162 = static StringsFileResolver.shared.getter(v161);
  SubscriptionProvider.init()(v162);
  sub_9E554((uint64_t *)&v327);
  uint64_t v163 = sub_1094C((uint64_t)&v327, (uint64_t)v328);
  uint64_t v304 = &v262;
  __chkstk_darwin(v163);
  uint64_t v165 = (uint64_t *)((char *)&v262 - ((v164 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v166 + 16))(v165);
  uint64_t v167 = *v165;
  uint64_t v168 = type metadata accessor for SiriAudioUIAssertionProvider();
  v326[4] = &off_273E28;
  v326[3] = v168;
  v326[0] = v167;
  uint64_t v169 = type metadata accessor for PlayMediaViewProvider(0LL);
  uint64_t v270 = (char *)swift_allocObject(v169, 272LL, 7LL);
  uint64_t v170 = sub_1094C((uint64_t)v326, v168);
  uint64_t v271 = &v262;
  __chkstk_darwin(v170);
  uint64_t v172 = (void (**)(int64_t))((char *)&v262 - ((v171 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(void))(v173 + 16))(v172);
  uint64_t v269 = *v172;
  uint64_t v174 = v313;
  v283(v313, v154, v314);
  uint64_t v175 = v319;
  v316(v318, (char *)v160, v319);
  uint64_t v176 = v305;
  uint64_t v177 = (uint64_t)v300;
  uint64_t v178 = v315;
  v301(v305, (uint64_t)v300, v315);
  uint64_t v179 = v272;
  uint64_t v301 = *(void (**)(char *, uint64_t, uint64_t))(v272 + 16);
  uint64_t v180 = v290;
  uint64_t v181 = v286;
  v301(v290, (uint64_t)v286, v308);
  uint64_t v182 = (uint64_t)v174;
  uint64_t v183 = (uint64_t)v318;
  uint64_t v184 = (uint64_t)v176;
  uint64_t v185 = (uint64_t)v180;
  unint64_t v186 = v180;
  uint64_t v187 = v270;
  id v305 = (char *)sub_193448((uint64_t)v312, v182, &v331, (uint64_t)v318, v184, v185, (uint64_t)v269, (uint64_t)v270);
  swift_release(v303);
  swift_release(v187);
  unsigned int v303 = *(char **)(v179 + 8);
  uint64_t v188 = v308;
  ((void (*)(void *, uint64_t))v303)(v181, v308);
  v302((char *)v177, v178);
  ((void (*)(uint64_t, uint64_t))v317)(v160, v175);
  uint64_t v189 = v314;
  ((void (*)(char *, uint64_t))v284)(v306, v314);
  sub_6C3C(v326);
  sub_6C3C(&v327);
  type metadata accessor for PlayMediaAppSelector(0LL);
  uint64_t v306 = (char *)static PlayMediaAppSelector.shared.getter();
  unint64_t v190 = v313;
  uint64_t v191 = static DeviceProvider.shared.getter(v306);
  uint64_t v192 = static FeatureFlagProvider.shared.getter(v191);
  uint64_t v193 = v292;
  uint64_t v194 = static UserPreferenceProvider.shared.getter(v192);
  unint64_t v195 = v186;
  uint64_t v196 = SubscriptionProvider.init()(v194);
  uint64_t v197 = v293;
  static InstalledAppProvider.shared.getter(v196);
  type metadata accessor for MediaPlaybackLite(0LL);
  uint64_t v300 = (char *)static MediaPlaybackLite.shared.getter();
  uint64_t v302 = (void (*)(char *, uint64_t))type metadata accessor for SelfEmitter(0LL);
  uint64_t v198 = static ExecutorProvider.shared.getter(&v323);
  uint64_t v199 = v297;
  uint64_t v200 = static NowPlayingProvider.shared.getter(v198);
  uint64_t v201 = v299;
  static TCCProvider.shared.getter(v200);
  uint64_t v202 = type metadata accessor for PlayMediaAppResolver(0LL);
  id v286 = (void *)swift_allocObject(v202, *(unsigned int *)(v202 + 48), *(unsigned __int16 *)(v202 + 52));
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, (uint64_t)v330);
  v283(v288, v190, v189);
  v316(v287, (char *)v183, v319);
  (*(void (**)(uint64_t, char *, uint64_t))(v294 + 16))(v291, v193, v295);
  v301(v289, (uint64_t)v195, v188);
  uint64_t v203 = (uint64_t)v274;
  (*(void (**)(char *, char *, uint64_t))(v296 + 16))(v274, v197, v298);
  uint64_t v205 = v277;
  uint64_t v204 = v278;
  uint64_t v206 = (uint64_t)v275;
  (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v275, v199, v278);
  uint64_t v207 = v279;
  uint64_t v208 = (uint64_t)v276;
  uint64_t v209 = v201;
  uint64_t v210 = v280;
  (*(void (**)(char *, char *, uint64_t))(v279 + 16))(v276, v209, v280);
  uint64_t v211 = (uint64_t)v306;
  swift_retain(v306);
  uint64_t v212 = (uint64_t)v300;
  swift_retain(v300);
  uint64_t v213 = sub_ED6D4( v211,  v330,  v288,  (uint64_t)v287,  v291,  (uint64_t)v289,  v203,  v212,  (uint64_t)v302,  (uint64_t)&protocol witness table for SelfEmitter,  &v323,  v206,  v208,  v286);
  (*(void (**)(char *, uint64_t))(v207 + 8))(v299, v210);
  (*(void (**)(char *, uint64_t))(v205 + 8))(v297, v204);
  swift_release(v212);
  (*(void (**)(char *, uint64_t))(v296 + 8))(v293, v298);
  ((void (*)(char *, uint64_t))v303)(v290, v308);
  (*(void (**)(char *, uint64_t))(v294 + 8))(v292, v295);
  uint64_t v214 = v319;
  ((void (*)(void *, uint64_t))v317)(v318, v319);
  ((void (*)(char *, uint64_t))v284)(v313, v314);
  swift_release(v211);
  static AceService.current.getter(v330);
  uint64_t v324 = &type metadata for StringsBackedAppNameResolver;
  unint64_t v325 = sub_15780();
  *(void *)&__int128 v323 = swift_allocObject(&unk_273768, 96LL, 7LL);
  sub_156E8((uint64_t)&static StringsBackedAppNameResolver.shared, v323 + 16);
  uint64_t v321 = v214;
  uint64_t v322 = &protocol witness table for FeatureFlagProvider;
  unint64_t v215 = sub_10974(&v320);
  static FeatureFlagProvider.shared.getter(v215);
  swift_release(v305);
  uint64_t v216 = sub_6C5C(&qword_28C4F0);
  char v217 = (void *)swift_allocObject(v216, 176LL, 7LL);
  v217[21] = 0LL;
  uint64_t v218 = v312;
  v217[2] = v213;
  v217[3] = v218;
  v217[4] = sub_ED690;
  v217[5] = 0LL;
  sub_FF54(v330, (uint64_t)(v217 + 6));
  sub_FF54(&v323, (uint64_t)(v217 + 11));
  sub_FF54(&v320, (uint64_t)(v217 + 16));
  *(void *)&v330[0] = v217;
  uint64_t v219 = sub_21318(&qword_28C4F8, &qword_28C4F0, (uint64_t)&unk_21ACA4);
  uint64_t v220 = v273;
  uint64_t v221 = static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(strategy:)(v330, v216, v273, v219);
  uint64_t v223 = v222;
  swift_release(v217);
  uint64_t v225 = v310;
  uint64_t v224 = v311;
  RCHChildFlowProducers.appResolutionFlowCompletion.setter(v221, v223, v311);
  uint64_t v226 = swift_retain(v218);
  uint64_t v227 = sub_1B8F64(v226);
  *(void *)&v330[0] = v227;
  uint64_t v228 = sub_6C5C(&qword_28C500);
  uint64_t v229 = sub_21318(&qword_28C508, &qword_28C500, (uint64_t)&unk_216828);
  uint64_t v230 = static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)(v330, v228, v220, v229);
  uint64_t v232 = v231;
  swift_release(v227);
  RCHChildFlowProducers.requestTCCAcceptanceFlowCompletion.setter(v230, v232, v224);
  uint64_t v233 = sub_64FAC();
  static AceService.current.getter(v330);
  type metadata accessor for AccountProvider(0LL);
  uint64_t v234 = static AccountProvider.shared.getter();
  uint64_t v235 = static SiriKitTaskLoggingProvider.shared.getter(v234);
  uint64_t v332 = v214;
  id v333 = (_UNKNOWN **)&protocol witness table for FeatureFlagProvider;
  Class v236 = sub_10974(&v331);
  static FeatureFlagProvider.shared.getter(v236);
  uint64_t v237 = type metadata accessor for SiriAudioOutputProvider();
  uint64_t v238 = swift_allocObject(v237, 56LL, 7LL);
  uint64_t v239 = sub_FF54(&v331, v238 + 16);
  uint64_t v240 = static OutputPublisherFactory.makeOutputPublisher()(&v331, v239);
  uint64_t v241 = v309;
  static FeatureFlagProvider.shared.getter(v240);
  id v328 = (void (*)(void, void, void))v315;
  uint64_t v329 = (_UNKNOWN **)&protocol witness table for StringsFileResolver;
  NSArray v242 = sub_10974(&v327);
  static StringsFileResolver.shared.getter(v242);
  uint64_t v243 = type metadata accessor for PlayMediaUnsupportedValueSnippetProvider();
  uint64_t v244 = swift_allocObject(v243, 72LL, 7LL);
  *(void *)(v244 + 56) = 0xD000000000000022LL;
  *(void *)(v244 + 6sub_6C3C(v0 + 4) = 0x8000000000220810LL;
  sub_FF54(&v327, v244 + 16);
  uint64_t v245 = sub_19505C(v233, (uint64_t)v330, v234, v235, v238, &v331, v241, v244);
  swift_release(v233);
  *(void *)&v330[0] = v245;
  uint64_t v246 = type metadata accessor for PlayMedia.UnsupportedValueStrategy(0LL);
  uint64_t v247 = sub_10430( &qword_28C510,  type metadata accessor for PlayMedia.UnsupportedValueStrategy,  (uint64_t)&protocol conformance descriptor for PlayMedia.UnsupportedValueStrategy);
  uint64_t v248 = static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)(v330, v246, v247);
  uint64_t v250 = v249;
  swift_release(v245);
  RCHChildFlowProducers.unsupportedValueFlowCompletion.setter(v248, v250, v224);
  uint64_t v251 = sub_6C5C(&qword_28C518);
  uint64_t v252 = swift_allocObject(v251, 16LL, 7LL);
  *(void *)&v330[0] = v252;
  uint64_t v253 = sub_21318(&qword_28C520, &qword_28C518, (uint64_t)&unk_217468);
  uint64_t v254 = static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithDialogProducer<A>(strategy:)(v330, v251, v253);
  uint64_t v256 = v255;
  swift_release(v252);
  RCHChildFlowProducers.continueInAppFlowCompletion.setter(v254, v256, v224);
  uint64_t v258 = v281;
  uint64_t v257 = v282;
  (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v281, v225, v224);
  uint64_t v259 = sub_6C5C(&qword_28C528);
  swift_allocObject(v259, *(unsigned int *)(v259 + 48), *(unsigned __int16 *)(v259 + 52));
  uint64_t v260 = RCHChildFlowFactory.init(producers:)(v258);
  swift_release(v285);
  swift_release(v312);
  (*(void (**)(char *, uint64_t))(v257 + 8))(v225, v224);
  return v260;
}

uint64_t sub_196938()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_196964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_6C5C(&qword_285470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1969AC(uint64_t a1)
{
  uint64_t v2 = sub_6C5C(&qword_285BD0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v178 = (uint64_t)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v177 = (char *)&v161 - v5;
  uint64_t v187 = type metadata accessor for Logger(0LL);
  uint64_t v186 = *(void *)(v187 - 8);
  uint64_t v6 = __chkstk_darwin(v187);
  uint64_t v8 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v161 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v164 = (char *)&v161 - v13;
  __chkstk_darwin(v12);
  uint64_t v176 = (char *)&v161 - v14;
  uint64_t v181 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v184 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v171 = (char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v182 = sub_6C5C(&qword_284DA8);
  uint64_t v16 = __chkstk_darwin(v182);
  uint64_t v168 = (uint64_t)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v170 = (uint64_t)&v161 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v175 = (uint64_t)&v161 - v21;
  __chkstk_darwin(v20);
  uint64_t v183 = (uint64_t)&v161 - v22;
  uint64_t v23 = sub_6C5C(&qword_284DB0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v163 = (uint64_t)&v161 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v166 = (char *)&v161 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v167 = (char *)&v161 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v165 = (uint64_t)&v161 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v172 = (char *)&v161 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v174 = (char *)&v161 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v169 = (uint64_t)&v161 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v180 = (char *)&v161 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v173 = (char *)&v161 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v161 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v161 - v46;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v161 - v48;
  uint64_t v50 = type metadata accessor for Parse(0LL);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v161 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v161 - v56;
  uint64_t v185 = a1;
  Input.parse.getter(v55);
  int v58 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v57, v50);
  if (v58 != enum case for Parse.NLv3IntentOnly(_:) && v58 != enum case for Parse.uso(_:))
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v59 = v187;
    uint64_t v60 = sub_6960(v187, (uint64_t)qword_2969C8);
    uint64_t v61 = v186;
    uint64_t v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v186 + 16))(v8, v60, v59);
    uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
    os_log_type_t v64 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl(&dword_0, v63, v64, "AmbiguousDetermineFlow#on received non NLv3IntentOnly or Uso parse", v65, 2u);
      swift_slowDealloc(v65, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v61 + 8))(v8, v59);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v50);
    return 0LL;
  }

  uint64_t v66 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
  uint64_t v67 = v66(v57, v50);
  uint64_t v68 = v185;
  Input.parse.getter(v67);
  double v69 = sub_B7C84(v54, (uint64_t)&v194);
  ((void (*)(char *, uint64_t, double))v66)(v54, v50, v69);
  if (!v195)
  {
    sub_1F6CC((uint64_t)&v194, &qword_2848C0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v78 = v187;
    uint64_t v79 = sub_6960(v187, (uint64_t)qword_2969C8);
    uint64_t v80 = v186;
    uint64_t v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v186 + 16))(v11, v79, v78);
    uint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
    os_log_type_t v83 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl( &dword_0,  v82,  v83,  "AmbiguousDetermineFlow#on received unsupported NLv3IntentOnly, USO parse",  v84,  2u);
      swift_slowDealloc(v84, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v11, v78);
    return 0LL;
  }

  sub_49B60(&v194, &v197);
  uint64_t v70 = v198;
  uint64_t v71 = v199;
  sub_6EA8(&v197, v198);
  dispatch thunk of AudioIntent.verb.getter(v70, v71);
  uint64_t v72 = v184;
  uint64_t v73 = v181;
  uint64_t v161 = *(void (**)(char *, void, uint64_t))(v184 + 104);
  v161(v47, enum case for CommonAudio.Verb.determine(_:), v181);
  uint64_t v162 = *(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56);
  v162(v47, 0LL, 1LL, v73);
  uint64_t v74 = v182;
  uint64_t v75 = v183;
  uint64_t v76 = v183 + *(int *)(v182 + 48);
  sub_FF10((uint64_t)v49, v183, &qword_284DB0);
  sub_FF10((uint64_t)v47, v76, &qword_284DB0);
  uint64_t v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v77(v75, 1LL, v73) != 1)
  {
    sub_FF10(v75, (uint64_t)v44, &qword_284DB0);
    if (v77(v76, 1LL, v73) != 1)
    {
      uint64_t v95 = v184;
      uint64_t v96 = v171;
      (*(void (**)(char *, uint64_t, uint64_t))(v184 + 32))(v171, v76, v73);
      unint64_t v97 = sub_11E578();
      char v98 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v96, v73, v97);
      uint64_t v99 = *(void (**)(char *, uint64_t))(v95 + 8);
      uint64_t v100 = v96;
      uint64_t v101 = v182;
      v99(v100, v73);
      sub_1F6CC((uint64_t)v47, &qword_284DB0);
      sub_1F6CC((uint64_t)v49, &qword_284DB0);
      v99(v44, v73);
      uint64_t v68 = v185;
      uint64_t v74 = v101;
      sub_1F6CC(v75, &qword_284DB0);
      sub_874C4((uint64_t)&v197, (uint64_t)&v194);
      if ((v98 & 1) != 0) {
        goto LABEL_28;
      }
LABEL_21:
      uint64_t v86 = v195;
      uint64_t v87 = v196;
      sub_6EA8(&v194, v195);
      uint64_t v88 = (uint64_t)v173;
      dispatch thunk of AudioIntent.verb.getter(v86, v87);
      uint64_t v89 = (uint64_t)v180;
      v161(v180, enum case for CommonAudio.Verb.directedAcousticId(_:), v73);
      v162((char *)v89, 0LL, 1LL, v73);
      uint64_t v90 = v175;
      uint64_t v91 = v175 + *(int *)(v74 + 48);
      sub_FF10(v88, v175, &qword_284DB0);
      sub_FF10(v89, v91, &qword_284DB0);
      if (v77(v90, 1LL, v73) == 1)
      {
        sub_1F6CC(v89, &qword_284DB0);
        sub_1F6CC(v88, &qword_284DB0);
        int v92 = v77(v91, 1LL, v73);
        uint64_t v93 = (uint64_t)v174;
        if (v92 == 1)
        {
          sub_1F6CC(v90, &qword_284DB0);
          goto LABEL_28;
        }
      }

      else
      {
        uint64_t v94 = v169;
        sub_FF10(v90, v169, &qword_284DB0);
        if (v77(v91, 1LL, v73) != 1)
        {
          uint64_t v118 = v184;
          uint64_t v119 = v74;
          uint64_t v120 = v88;
          uint64_t v121 = v171;
          (*(void (**)(char *, uint64_t, uint64_t))(v184 + 32))(v171, v91, v73);
          unint64_t v122 = sub_11E578();
          char v123 = dispatch thunk of static Equatable.== infix(_:_:)(v94, v121, v73, v122);
          uint64_t v124 = *(void (**)(char *, uint64_t))(v118 + 8);
          v124(v121, v73);
          sub_1F6CC((uint64_t)v180, &qword_284DB0);
          uint64_t v125 = v120;
          uint64_t v74 = v119;
          sub_1F6CC(v125, &qword_284DB0);
          v124((char *)v94, v73);
          sub_1F6CC(v175, &qword_284DB0);
          sub_6C3C(&v194);
          sub_874C4((uint64_t)&v197, (uint64_t)&v191);
          uint64_t v93 = (uint64_t)v174;
          if ((v123 & 1) != 0) {
            goto LABEL_29;
          }
LABEL_38:
          uint64_t v126 = v192;
          uint64_t v127 = v193;
          sub_6EA8(&v191, v192);
          dispatch thunk of AudioIntent.verb.getter(v126, v127);
          uint64_t v128 = (uint64_t)v172;
          v161(v172, enum case for CommonAudio.Verb.summarise(_:), v73);
          v162((char *)v128, 0LL, 1LL, v73);
          uint64_t v129 = v170;
          uint64_t v130 = v170 + *(int *)(v74 + 48);
          sub_FF10(v93, v170, &qword_284DB0);
          sub_FF10(v128, v130, &qword_284DB0);
          if (v77(v129, 1LL, v73) == 1)
          {
            sub_1F6CC(v128, &qword_284DB0);
            sub_1F6CC(v93, &qword_284DB0);
            int v131 = v77(v130, 1LL, v73);
            uint64_t v68 = v185;
            if (v131 == 1)
            {
              sub_1F6CC(v129, &qword_284DB0);
              goto LABEL_29;
            }
          }

          else
          {
            uint64_t v132 = v165;
            sub_FF10(v129, v165, &qword_284DB0);
            if (v77(v130, 1LL, v73) != 1)
            {
              uint64_t v150 = v184;
              uint64_t v151 = v93;
              uint64_t v152 = v171;
              (*(void (**)(char *, uint64_t, uint64_t))(v184 + 32))(v171, v130, v73);
              unint64_t v153 = sub_11E578();
              char v154 = dispatch thunk of static Equatable.== infix(_:_:)(v132, v152, v73, v153);
              uint64_t v155 = *(void (**)(char *, uint64_t))(v150 + 8);
              v155(v152, v73);
              sub_1F6CC((uint64_t)v172, &qword_284DB0);
              sub_1F6CC(v151, &qword_284DB0);
              v155((char *)v132, v73);
              sub_1F6CC(v129, &qword_284DB0);
              sub_6C3C(&v191);
              sub_874C4((uint64_t)&v197, (uint64_t)v188);
              uint64_t v68 = v185;
              if ((v154 & 1) != 0) {
                goto LABEL_30;
              }
LABEL_44:
              uint64_t v133 = v189;
              uint64_t v134 = v190;
              sub_6EA8(v188, v189);
              uint64_t v135 = v167;
              dispatch thunk of AudioIntent.verb.getter(v133, v134);
              uint64_t v136 = (uint64_t)v166;
              v161(v166, enum case for CommonAudio.Verb.request(_:), v73);
              uint64_t v137 = v74;
              uint64_t v138 = (uint64_t)v135;
              v162((char *)v136, 0LL, 1LL, v73);
              uint64_t v139 = v168;
              uint64_t v140 = v168 + *(int *)(v137 + 48);
              sub_FF10(v138, v168, &qword_284DB0);
              sub_FF10(v136, v140, &qword_284DB0);
              if (v77(v139, 1LL, v73) == 1)
              {
                sub_1F6CC(v136, &qword_284DB0);
                sub_1F6CC(v138, &qword_284DB0);
                if (v77(v140, 1LL, v73) == 1)
                {
                  sub_1F6CC(v139, &qword_284DB0);
                  goto LABEL_30;
                }
              }

              else
              {
                uint64_t v141 = v163;
                sub_FF10(v139, v163, &qword_284DB0);
                if (v77(v140, 1LL, v73) != 1)
                {
                  uint64_t v156 = v184;
                  uint64_t v157 = v171;
                  (*(void (**)(char *, uint64_t, uint64_t))(v184 + 32))(v171, v140, v73);
                  unint64_t v158 = sub_11E578();
                  char v159 = dispatch thunk of static Equatable.== infix(_:_:)(v141, v157, v73, v158);
                  uint64_t v160 = *(void (**)(char *, uint64_t))(v156 + 8);
                  v160(v157, v73);
                  sub_1F6CC(v136, &qword_284DB0);
                  sub_1F6CC(v138, &qword_284DB0);
                  v160((char *)v141, v73);
                  sub_1F6CC(v139, &qword_284DB0);
                  sub_6C3C(v188);
                  if ((v159 & 1) != 0) {
                    goto LABEL_31;
                  }
LABEL_50:
                  uint64_t v142 = v186;
                  if (qword_283888 != -1) {
                    swift_once(&qword_283888, sub_BFC5C);
                  }
                  uint64_t v143 = v187;
                  uint64_t v144 = sub_6960(v187, (uint64_t)qword_2969C8);
                  uint64_t v145 = v164;
                  uint64_t v146 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 16))(v164, v144, v143);
                  __int128 v147 = (os_log_s *)Logger.logObject.getter(v146);
                  os_log_type_t v148 = static os_log_type_t.error.getter();
                  if (os_log_type_enabled(v147, v148))
                  {
                    uint64_t v149 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                    *(_WORD *)uint64_t v149 = 0;
                    _os_log_impl( &dword_0,  v147,  v148,  "AmbiguousDetermineFlow#on received non-determine verb",  v149,  2u);
                    swift_slowDealloc(v149, -1LL, -1LL);
                  }

                  (*(void (**)(char *, uint64_t))(v142 + 8))(v145, v187);
                  sub_6C3C(&v197);
                  return 0LL;
                }

                sub_1F6CC(v136, &qword_284DB0);
                sub_1F6CC(v138, &qword_284DB0);
                (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v141, v73);
              }

              sub_1F6CC(v139, &qword_284DA8);
              sub_6C3C(v188);
              goto LABEL_50;
            }

            sub_1F6CC((uint64_t)v172, &qword_284DB0);
            sub_1F6CC(v93, &qword_284DB0);
            (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v132, v73);
            uint64_t v68 = v185;
          }

          sub_1F6CC(v129, &qword_284DA8);
          sub_6C3C(&v191);
          sub_874C4((uint64_t)&v197, (uint64_t)v188);
          goto LABEL_44;
        }

        sub_1F6CC((uint64_t)v180, &qword_284DB0);
        sub_1F6CC(v88, &qword_284DB0);
        (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v94, v73);
        uint64_t v93 = (uint64_t)v174;
      }

      sub_1F6CC(v90, &qword_284DA8);
      sub_6C3C(&v194);
      sub_874C4((uint64_t)&v197, (uint64_t)&v191);
      goto LABEL_38;
    }

    sub_1F6CC((uint64_t)v47, &qword_284DB0);
    sub_1F6CC((uint64_t)v49, &qword_284DB0);
    (*(void (**)(char *, uint64_t))(v184 + 8))(v44, v73);
LABEL_20:
    sub_1F6CC(v75, &qword_284DA8);
    sub_874C4((uint64_t)&v197, (uint64_t)&v194);
    goto LABEL_21;
  }

  sub_1F6CC((uint64_t)v47, &qword_284DB0);
  uint64_t v75 = v183;
  sub_1F6CC((uint64_t)v49, &qword_284DB0);
  sub_1F6CC(v75, &qword_284DB0);
  sub_874C4((uint64_t)&v197, (uint64_t)&v194);
LABEL_28:
  sub_6C3C(&v194);
  sub_874C4((uint64_t)&v197, (uint64_t)&v191);
LABEL_29:
  sub_6C3C(&v191);
  sub_874C4((uint64_t)&v197, (uint64_t)v188);
LABEL_30:
  sub_6C3C(v188);
LABEL_31:
  uint64_t v102 = v186;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v103 = v187;
  uint64_t v104 = sub_6960(v187, (uint64_t)qword_2969C8);
  uint64_t v105 = v176;
  uint64_t v106 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 16))(v176, v104, v103);
  uint64_t v107 = (os_log_s *)Logger.logObject.getter(v106);
  os_log_type_t v108 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v107, v108))
  {
    uint64_t v109 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v109 = 0;
    _os_log_impl(&dword_0, v107, v108, "AmbiguousDetermineFlow#on Handling input", v109, 2u);
    swift_slowDealloc(v109, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v102 + 8))(v105, v187);
  uint64_t v110 = type metadata accessor for Input(0LL);
  uint64_t v111 = *(void *)(v110 - 8);
  uint64_t v112 = v177;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v177, v68, v110);
  uint64_t v113 = *(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56);
  uint64_t v85 = 1LL;
  v113(v112, 0LL, 1LL, v110);
  uint64_t v114 = (uint64_t)v112;
  uint64_t v115 = v178;
  sub_88CFC(v114, v178);
  uint64_t v116 = v179 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input;
  swift_beginAccess(v179 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input, &v194, 33LL, 0LL);
  sub_1B3B0(v115, v116);
  swift_endAccess(&v194);
  sub_6C3C(&v197);
  return v85;
}

uint64_t sub_197C90(void (*a1)(char *), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v382 = a1;
  uint64_t v383 = a2;
  uint64_t v4 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v380 = *(void **)(v4 - 8);
  uint64_t v381 = v4;
  __chkstk_darwin(v4);
  char v379 = (char *)&v326 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  uint64_t v356 = (char *)&v326 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v8);
  uint64_t v357 = (char *)&v326 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v10);
  uint64_t v358 = (char *)&v326 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v372 = *(void *)(v12 - 8);
  uint64_t v373 = v12;
  __chkstk_darwin(v12);
  uint64_t v370 = (char *)&v326 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v348 = *(void *)(v14 - 8);
  uint64_t v349 = v14;
  __chkstk_darwin(v14);
  unint64_t v347 = (char *)&v326 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v355 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v368 = *(void *)(v355 - 8);
  __chkstk_darwin(v355);
  unsigned __int8 v353 = (char *)&v326 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v360 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v364 = *(void *)(v360 - 8);
  __chkstk_darwin(v360);
  uint64_t v354 = (char *)&v326 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v369 = type metadata accessor for CommonAudio.Attribute(0LL);
  uint64_t v352 = *(void *)(v369 - 8);
  __chkstk_darwin(v369);
  uint64_t v362 = (char *)&v326 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v375 = type metadata accessor for CommonAudio.Verb(0LL);
  uint64_t v371 = *(void *)(v375 - 8);
  __chkstk_darwin(v375);
  double v341 = (char *)&v326 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v374 = sub_6C5C(&qword_284DA8);
  uint64_t v20 = __chkstk_darwin(v374);
  uint64_t v336 = (uint64_t)&v326 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v344 = (uint64_t)&v326 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v351 = (uint64_t)&v326 - v25;
  __chkstk_darwin(v24);
  uint64_t v361 = (uint64_t)&v326 - v26;
  uint64_t v334 = sub_6C5C(&qword_284DB0);
  uint64_t v27 = __chkstk_darwin(v334);
  id v333 = (char *)&v326 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v331 = (uint64_t)&v326 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v339 = (uint64_t)&v326 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v337 = (uint64_t)&v326 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v335 = (uint64_t)&v326 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v342 = (uint64_t)&v326 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v343 = (uint64_t)&v326 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v338 = (uint64_t)&v326 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v363 = (uint64_t)&v326 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v350 = (uint64_t)&v326 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v340 = (uint64_t)&v326 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v365 = (uint64_t)&v326 - v50;
  __chkstk_darwin(v49);
  uint64_t v367 = (uint64_t)&v326 - v51;
  uint64_t v52 = type metadata accessor for Logger(0LL);
  uint64_t v384 = *(void *)(v52 - 8);
  uint64_t v385 = v52;
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v378 = (char *)&v326 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v377 = (char *)&v326 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v345 = (char *)&v326 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v332 = (char *)&v326 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  os_log_type_t v330 = (char *)&v326 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  unint64_t v346 = (char *)&v326 - v64;
  __chkstk_darwin(v63);
  uint64_t v366 = (char *)&v326 - v65;
  uint64_t v66 = type metadata accessor for Input(0LL);
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  double v69 = (char *)&v326 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v70);
  uint64_t v72 = (char *)&v326 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = type metadata accessor for Parse(0LL);
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v376 = (char *)&v326 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v79 = (char *)&v326 - v78;
  __chkstk_darwin(v77);
  uint64_t v81 = (char *)&v326 - v80;
  char v359 = v3;
  uint64_t v82 = (uint64_t)v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input;
  swift_beginAccess(v82, v409, 0LL, 0LL);
  sub_FF10(v82, (uint64_t)v72, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v72, 1LL, v66))
  {
    sub_1F6CC((uint64_t)v72, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v83 = v385;
    uint64_t v84 = sub_6960(v385, (uint64_t)qword_2969C8);
    uint64_t v85 = v384;
    uint64_t v86 = v378;
    uint64_t v87 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v384 + 16))(v378, v84, v83);
    uint64_t v88 = (os_log_s *)Logger.logObject.getter(v87);
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl(&dword_0, v88, v89, "AmbiguousDetermineFlow#execute Parse is nil", v90, 2u);
      swift_slowDealloc(v90, -1LL, -1LL);
    }

    uint64_t v91 = (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v86, v83);
    int v92 = v379;
    static ExecuteResponse.complete()(v91);
    v382(v92);
    return ((uint64_t (*)(char *, uint64_t))v380[1])(v92, v381);
  }

  uint64_t v94 = v377;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v69, v72, v66);
  uint64_t v95 = sub_1F6CC((uint64_t)v72, &qword_285BD0);
  Input.parse.getter(v95);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v66);
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v81, v79, v73);
  uint64_t v96 = v376;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v376, v81, v73);
  int v97 = (*(uint64_t (**)(char *, uint64_t))(v74 + 88))(v96, v73);
  uint64_t v98 = v74;
  if (v97 != enum case for Parse.NLv3IntentOnly(_:) && v97 != enum case for Parse.uso(_:))
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v99 = v385;
    uint64_t v100 = sub_6960(v385, (uint64_t)qword_2969C8);
    uint64_t v101 = v384;
    uint64_t v102 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v384 + 16))(v94, v100, v99);
    uint64_t v103 = (os_log_s *)Logger.logObject.getter(v102);
    os_log_type_t v104 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      uint64_t v378 = v81;
      uint64_t v106 = v73;
      uint64_t v107 = v98;
      os_log_type_t v108 = v105;
      *(_WORD *)uint64_t v105 = 0;
      _os_log_impl( &dword_0,  v103,  v104,  "AmbiguousDetermineFlow#execute received non NLv3IntentOnly or Uso parse",  v105,  2u);
      uint64_t v109 = v108;
      uint64_t v98 = v107;
      uint64_t v73 = v106;
      uint64_t v81 = v378;
      swift_slowDealloc(v109, -1LL, -1LL);
    }

    uint64_t v110 = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v94, v99);
    uint64_t v111 = v379;
    static ExecuteResponse.complete()(v110);
    v382(v111);
    ((void (*)(char *, uint64_t))v380[1])(v111, v381);
    uint64_t v112 = *(void (**)(char *, uint64_t))(v98 + 8);
    v112(v81, v73);
    return ((uint64_t (*)(char *, uint64_t))v112)(v96, v73);
  }

  uint64_t v113 = *(void (**)(char *, uint64_t))(v74 + 8);
  v113(v96, v73);
  sub_B7C84(v81, (uint64_t)&v402);
  if (v403)
  {
    uint64_t v378 = v81;
    sub_49B60(&v402, &v405);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v114 = v385;
    uint64_t v115 = sub_6960(v385, (uint64_t)qword_2969C8);
    uint64_t v116 = v384;
    uint64_t v117 = *(char **)(v384 + 16);
    uint64_t v118 = v366;
    uint64_t v327 = v115;
    uint64_t v345 = v117;
    ((void (*)(char *))v117)(v366);
    uint64_t v119 = sub_874C4((uint64_t)&v405, (uint64_t)&v402);
    uint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
    os_log_type_t v121 = static os_log_type_t.debug.getter();
    BOOL v122 = os_log_type_enabled(v120, v121);
    id v328 = v113;
    uint64_t v329 = v73;
    if (v122)
    {
      char v123 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v124 = swift_slowAlloc(32LL, -1LL);
      v395[0] = v124;
      *(_DWORD *)char v123 = 136315138;
      sub_874C4((uint64_t)&v402, (uint64_t)&v398);
      uint64_t v125 = sub_6C5C(&qword_28C698);
      uint64_t v126 = String.init<A>(describing:)(&v398, v125);
      unint64_t v128 = v127;
      uint64_t v398 = sub_6978(v126, v127, v395);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v398, &v399);
      swift_bridgeObjectRelease(v128);
      sub_6C3C(&v402);
      _os_log_impl(&dword_0, v120, v121, "AmbiguousDetermineFlow#triggerDetermineStrategy audioIntent: %s", v123, 0xCu);
      swift_arrayDestroy(v124, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1LL, -1LL);
      swift_slowDealloc(v123, -1LL, -1LL);

      uint64_t v129 = *(char **)(v116 + 8);
      uint64_t v130 = v366;
    }

    else
    {
      sub_6C3C(&v402);

      uint64_t v129 = *(char **)(v116 + 8);
      uint64_t v130 = v118;
    }

    uint64_t v376 = v129;
    ((void (*)(char *, uint64_t))v129)(v130, v114);
    uint64_t v143 = v371;
    uint64_t v144 = v367;
    uint64_t v145 = v406;
    uint64_t v146 = v407;
    sub_6EA8(&v405, v406);
    dispatch thunk of AudioIntent.verb.getter(v145, v146);
    uint64_t v147 = v365;
    uint64_t v148 = v375;
    uint64_t v377 = *(char **)(v143 + 104);
    ((void (*)(uint64_t, void, uint64_t))v377)(v365, enum case for CommonAudio.Verb.determine(_:), v375);
    uint64_t v384 = *(void *)(v143 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v384)(v147, 0LL, 1LL, v148);
    uint64_t v149 = v361;
    uint64_t v150 = v361 + *(int *)(v374 + 48);
    sub_FF10(v144, v361, &qword_284DB0);
    sub_FF10(v147, v150, &qword_284DB0);
    uint64_t v151 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
    unsigned int v152 = v151(v149, 1LL, v148);
    uint64_t v153 = v363;
    if (v152 == 1)
    {
      sub_1F6CC(v147, &qword_284DB0);
      sub_1F6CC(v144, &qword_284DB0);
      char v154 = v151;
      if (v151(v150, 1LL, v148) == 1)
      {
        sub_1F6CC(v149, &qword_284DB0);
        sub_874C4((uint64_t)&v405, (uint64_t)&v402);
LABEL_38:
        sub_6C3C(&v402);
        sub_874C4((uint64_t)&v405, (uint64_t)&v398);
LABEL_39:
        sub_6C3C(&v398);
        sub_874C4((uint64_t)&v405, (uint64_t)v395);
LABEL_40:
        sub_6C3C(v395);
        uint64_t v167 = v370;
        uint64_t v168 = v352;
        goto LABEL_41;
      }
    }

    else
    {
      uint64_t v155 = v340;
      sub_FF10(v149, v340, &qword_284DB0);
      char v154 = v151;
      if (v151(v150, 1LL, v148) != 1)
      {
        uint64_t v163 = v341;
        (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v341, v150, v148);
        unint64_t v164 = sub_11E578();
        char v165 = dispatch thunk of static Equatable.== infix(_:_:)(v155, v163, v148, v164);
        uint64_t v166 = *(void (**)(char *, uint64_t))(v371 + 8);
        v166(v163, v148);
        sub_1F6CC(v365, &qword_284DB0);
        sub_1F6CC(v367, &qword_284DB0);
        v166((char *)v155, v148);
        uint64_t v143 = v371;
        sub_1F6CC(v149, &qword_284DB0);
        sub_874C4((uint64_t)&v405, (uint64_t)&v402);
        if ((v165 & 1) != 0) {
          goto LABEL_38;
        }
LABEL_31:
        uint64_t v156 = v403;
        uint64_t v157 = v404;
        sub_6EA8(&v402, v403);
        uint64_t v158 = v350;
        dispatch thunk of AudioIntent.verb.getter(v156, v157);
        uint64_t v159 = v375;
        ((void (*)(uint64_t, void, uint64_t))v377)( v153,  enum case for CommonAudio.Verb.directedAcousticId(_:),  v375);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v384)(v153, 0LL, 1LL, v159);
        uint64_t v160 = v351;
        uint64_t v161 = v351 + *(int *)(v374 + 48);
        sub_FF10(v158, v351, &qword_284DB0);
        sub_FF10(v153, v161, &qword_284DB0);
        if (v154(v160, 1LL, v159) == 1)
        {
          sub_1F6CC(v153, &qword_284DB0);
          uint64_t v160 = v351;
          sub_1F6CC(v158, &qword_284DB0);
          if (v154(v161, 1LL, v159) == 1)
          {
            sub_1F6CC(v160, &qword_284DB0);
            goto LABEL_38;
          }
        }

        else
        {
          uint64_t v162 = v338;
          sub_FF10(v160, v338, &qword_284DB0);
          if (v154(v161, 1LL, v159) != 1)
          {
            uint64_t v244 = v160;
            uint64_t v245 = v341;
            (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v341, v161, v159);
            unint64_t v246 = sub_11E578();
            char v247 = dispatch thunk of static Equatable.== infix(_:_:)(v162, v245, v159, v246);
            uint64_t v248 = *(void (**)(char *, uint64_t))(v371 + 8);
            v248(v245, v159);
            sub_1F6CC(v363, &qword_284DB0);
            sub_1F6CC(v350, &qword_284DB0);
            v248((char *)v162, v159);
            uint64_t v143 = v371;
            sub_1F6CC(v244, &qword_284DB0);
            sub_6C3C(&v402);
            sub_874C4((uint64_t)&v405, (uint64_t)&v398);
            if ((v247 & 1) != 0) {
              goto LABEL_39;
            }
LABEL_58:
            uint64_t v249 = v400;
            uint64_t v250 = v401;
            sub_6EA8(&v398, v400);
            uint64_t v251 = v343;
            dispatch thunk of AudioIntent.verb.getter(v249, v250);
            uint64_t v252 = v342;
            uint64_t v253 = v375;
            ((void (*)(uint64_t, void, uint64_t))v377)( v342,  enum case for CommonAudio.Verb.summarise(_:),  v375);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v384)(v252, 0LL, 1LL, v253);
            uint64_t v254 = v344;
            uint64_t v255 = v344 + *(int *)(v374 + 48);
            sub_FF10(v251, v344, &qword_284DB0);
            sub_FF10(v252, v255, &qword_284DB0);
            if (v154(v254, 1LL, v253) == 1)
            {
              sub_1F6CC(v252, &qword_284DB0);
              uint64_t v254 = v344;
              sub_1F6CC(v251, &qword_284DB0);
              if (v154(v255, 1LL, v253) == 1)
              {
                sub_1F6CC(v254, &qword_284DB0);
                goto LABEL_39;
              }
            }

            else
            {
              uint64_t v256 = v335;
              sub_FF10(v254, v335, &qword_284DB0);
              if (v154(v255, 1LL, v253) != 1)
              {
                uint64_t v268 = v254;
                uint64_t v269 = v341;
                (*(void (**)(char *, uint64_t, uint64_t))(v143 + 32))(v341, v255, v253);
                unint64_t v270 = sub_11E578();
                char v271 = dispatch thunk of static Equatable.== infix(_:_:)(v256, v269, v253, v270);
                uint64_t v272 = *(void (**)(char *, uint64_t))(v143 + 8);
                v272(v269, v253);
                sub_1F6CC(v342, &qword_284DB0);
                sub_1F6CC(v343, &qword_284DB0);
                v272((char *)v256, v253);
                sub_1F6CC(v268, &qword_284DB0);
                sub_6C3C(&v398);
                sub_874C4((uint64_t)&v405, (uint64_t)v395);
                if ((v271 & 1) != 0) {
                  goto LABEL_40;
                }
LABEL_64:
                uint64_t v257 = v396;
                uint64_t v258 = v397;
                sub_6EA8(v395, v396);
                uint64_t v259 = v337;
                dispatch thunk of AudioIntent.verb.getter(v257, v258);
                uint64_t v260 = v339;
                uint64_t v261 = v375;
                ((void (*)(uint64_t, void, uint64_t))v377)( v339,  enum case for CommonAudio.Verb.request(_:),  v375);
                ((void (*)(uint64_t, void, uint64_t, uint64_t))v384)(v260, 0LL, 1LL, v261);
                uint64_t v262 = v336;
                uint64_t v263 = v336 + *(int *)(v374 + 48);
                sub_FF10(v259, v336, &qword_284DB0);
                sub_FF10(v260, v263, &qword_284DB0);
                if (v154(v262, 1LL, v261) == 1)
                {
                  sub_1F6CC(v260, &qword_284DB0);
                  sub_1F6CC(v259, &qword_284DB0);
                  unsigned int v264 = v154(v263, 1LL, v261);
                  uint64_t v265 = v364;
                  if (v264 == 1)
                  {
                    sub_1F6CC(v262, &qword_284DB0);
                    goto LABEL_40;
                  }
                }

                else
                {
                  uint64_t v266 = v331;
                  sub_FF10(v262, v331, &qword_284DB0);
                  unsigned int v267 = v154(v263, 1LL, v261);
                  uint64_t v167 = v370;
                  uint64_t v168 = v352;
                  if (v267 != 1)
                  {
                    uint64_t v273 = v371;
                    uint64_t v274 = v341;
                    (*(void (**)(char *, uint64_t, uint64_t))(v371 + 32))(v341, v263, v261);
                    unint64_t v275 = sub_11E578();
                    char v276 = dispatch thunk of static Equatable.== infix(_:_:)(v266, v274, v261, v275);
                    uint64_t v277 = v261;
                    uint64_t v278 = *(void (**)(char *, uint64_t))(v273 + 8);
                    v278(v274, v277);
                    sub_1F6CC(v339, &qword_284DB0);
                    sub_1F6CC(v337, &qword_284DB0);
                    v278((char *)v266, v277);
                    sub_1F6CC(v262, &qword_284DB0);
                    sub_6C3C(v395);
                    uint64_t v265 = v364;
                    if ((v276 & 1) != 0)
                    {
LABEL_41:
                      uint64_t v169 = v406;
                      uint64_t v170 = v407;
                      sub_6EA8(&v405, v406);
                      uint64_t v171 = dispatch thunk of AudioIntent.attributes.getter(v169, v170);
                      uint64_t v172 = *(void (**)(char *, void, uint64_t))(v168 + 104);
                      uint64_t v173 = (uint64_t)v362;
                      uint64_t v174 = v369;
                      v172(v362, enum case for CommonAudio.Attribute.previous(_:), v369);
                      LOBYTE(v16sub_6C3C(v0 + 9) = sub_1427C0(v173, v171);
                      __n128 v175 = swift_bridgeObjectRelease(v171);
                      uint64_t v176 = *(void (**)(uint64_t, uint64_t, __n128))(v168 + 8);
                      v176(v173, v174, v175);
                      sub_874C4((uint64_t)&v405, (uint64_t)v392);
                      if ((v169 & 1) != 0)
                      {
                        sub_6C3C(v392);
                        sub_874C4((uint64_t)&v405, (uint64_t)v389);
                      }

                      else
                      {
                        uint64_t v177 = v393;
                        uint64_t v178 = v394;
                        sub_6EA8(v392, v393);
                        uint64_t v179 = (uint64_t)v362;
                        uint64_t v180 = dispatch thunk of AudioIntent.attributes.getter(v177, v178);
                        uint64_t v181 = v369;
                        v172((char *)v179, enum case for CommonAudio.Attribute.playLast(_:), v369);
                        LOBYTE(v17sub_6C3C(v0 + 7) = sub_1427C0(v179, v180);
                        __n128 v182 = swift_bridgeObjectRelease(v180);
                        v176(v179, v181, v182);
                        sub_6C3C(v392);
                        sub_874C4((uint64_t)&v405, (uint64_t)v389);
                        if ((v177 & 1) == 0)
                        {
                          uint64_t v215 = v390;
                          uint64_t v216 = v391;
                          sub_6EA8(v389, v390);
                          uint64_t v217 = dispatch thunk of AudioIntent.attributes.getter(v215, v216);
                          uint64_t v218 = v369;
                          v172((char *)v179, enum case for CommonAudio.Attribute.next(_:), v369);
                          LOBYTE(v2sub_6C3C(v0 + 15) = sub_1427C0(v179, v217);
                          __n128 v219 = swift_bridgeObjectRelease(v217);
                          v176(v179, v218, v219);
                          sub_6C3C(v389);
                          sub_874C4((uint64_t)&v405, (uint64_t)v386);
                          uint64_t v183 = v368;
                          if ((v215 & 1) == 0)
                          {
                            uint64_t v220 = v387;
                            uint64_t v221 = v388;
                            sub_6EA8(v386, v387);
                            uint64_t v222 = v221;
                            uint64_t v183 = v368;
                            uint64_t v223 = dispatch thunk of AudioIntent.attributes.getter(v220, v222);
                            uint64_t v224 = v369;
                            v172((char *)v179, enum case for CommonAudio.Attribute.playNext(_:), v369);
                            LOBYTE(v2sub_6C3C(v0 + 20) = sub_1427C0(v179, v223);
                            __n128 v225 = swift_bridgeObjectRelease(v223);
                            v176(v179, v224, v225);
                            sub_6C3C(v386);
                            uint64_t v226 = v373;
                            uint64_t v184 = v360;
                            if ((v220 & 1) == 0)
                            {
                              uint64_t v227 = v406;
                              uint64_t v228 = v408;
                              sub_6EA8(&v405, v406);
                              char v229 = HomeAutomationEntityProviding.hasHomeAutomationNodes.getter(v227, v228);
                              uint64_t v230 = v364;
                              uint64_t v231 = v385;
                              if ((v229 & 1) == 0)
                              {
                                uint64_t v315 = v359;
                                uint64_t v316 = v359[34];
                                uint64_t v317 = v359[35];
                                sub_6EA8(v359 + 31, v316);
                                char v318 = dispatch thunk of FeatureFlagProviding.isCapellaSupportedAndEnabled.getter( v316,  v317);
                                uint64_t v319 = v315[10];
                                uint64_t v320 = v315[11];
                                sub_6EA8(v315 + 7, v319);
                                if ((v318 & 1) != 0)
                                {
                                  uint64_t v321 = (void *)swift_allocObject(&unk_273860, 40LL, 7LL);
                                  uint64_t v322 = v382;
                                  uint64_t v323 = v383;
                                  v321[2] = v315;
                                  v321[3] = v322;
                                  v321[4] = v323;
                                  swift_retain(v315);
                                  swift_retain(v323);
                                  dispatch thunk of NowPlayingProviding.app(completion:)(sub_19E26C, v321, v319, v320);
                                }

                                else
                                {
                                  uint64_t v321 = (void *)swift_allocObject(&unk_273838, 40LL, 7LL);
                                  uint64_t v324 = v382;
                                  uint64_t v325 = v383;
                                  v321[2] = v315;
                                  v321[3] = v324;
                                  v321[4] = v325;
                                  swift_retain(v315);
                                  swift_retain(v325);
                                  dispatch thunk of NowPlayingProviding.state(completion:)(sub_19E25C, v321, v319, v320);
                                }

                                swift_release(v321);
                                goto LABEL_50;
                              }

                              uint64_t v232 = v330;
                              uint64_t v233 = ((uint64_t (*)(char *, uint64_t, uint64_t))v345)(v330, v327, v385);
                              uint64_t v234 = (os_log_s *)Logger.logObject.getter(v233);
                              os_log_type_t v235 = static os_log_type_t.debug.getter();
                              if (os_log_type_enabled(v234, v235))
                              {
                                Class v236 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
                                *(_WORD *)Class v236 = 0;
                                _os_log_impl( &dword_0,  v234,  v235,  "AmbiguousDetermineFlow#execute homeAutomation nodes present so playback state of curre nt item doesn't matter, triggering Determine strategy",  v236,  2u);
                                uint64_t v237 = v236;
                                uint64_t v230 = v364;
                                swift_slowDealloc(v237, -1LL, -1LL);
                              }

                              ((void (*)(char *, uint64_t))v376)(v232, v231);
                              uint64_t v238 = v354;
                              (*(void (**)(char *, void, uint64_t))(v230 + 104))( v354,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v184);
                              uint64_t v239 = v368;
                              uint64_t v240 = v353;
                              uint64_t v241 = v355;
                              (*(void (**)(char *, void, uint64_t))(v368 + 104))( v353,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v355);
                              uint64_t v242 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v238,  v240,  0xD000000000000018LL,  0x80000000002226A0LL,  3LL,  0LL);
                              uint64_t v384 = v243;
                              uint64_t v385 = v242;
                              (*(void (**)(char *, uint64_t))(v239 + 8))(v240, v241);
                              (*(void (**)(char *, uint64_t))(v230 + 8))(v238, v184);
                              uint64_t v202 = v359[16];
                              uint64_t v381 = v359[17];
                              uint64_t v380 = sub_6EA8(v359 + 13, v202);
                              uint64_t v203 = v167;
                              (*(void (**)(char *, void, uint64_t))(v372 + 104))( v167,  enum case for TypeOfIntent.determine(_:),  v226);
LABEL_49:
                              uint64_t v204 = enum case for ActivityType.start(_:);
                              uint64_t v205 = type metadata accessor for ActivityType(0LL);
                              uint64_t v206 = *(void *)(v205 - 8);
                              uint64_t v207 = (uint64_t)v358;
                              (*(void (**)(char *, uint64_t, uint64_t))(v206 + 104))(v358, v204, v205);
                              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v206 + 56))( v207,  0LL,  1LL,  v205);
                              uint64_t v208 = type metadata accessor for TemplatingResult(0LL);
                              uint64_t v209 = (uint64_t)v357;
                              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 56LL))( v357,  1LL,  1LL,  v208);
                              uint64_t v210 = enum case for SiriKitReliabilityCodes.inProgress(_:);
                              uint64_t v211 = type metadata accessor for SiriKitReliabilityCodes(0LL);
                              uint64_t v212 = *(void *)(v211 - 8);
                              uint64_t v213 = (uint64_t)v356;
                              (*(void (**)(char *, uint64_t, uint64_t))(v212 + 104))(v356, v210, v211);
                              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v212 + 56))( v213,  0LL,  1LL,  v211);
                              uint64_t v214 = v384;
                              dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v203,  v207,  v209,  v213,  v385,  v384,  v202,  v381);
                              swift_bridgeObjectRelease(v214);
                              sub_1F6CC(v213, &qword_2845A0);
                              sub_1F6CC(v209, (uint64_t *)&unk_286BD0);
                              sub_1F6CC(v207, &qword_2845A8);
                              (*(void (**)(char *, uint64_t))(v372 + 8))(v203, v373);
                              sub_19A034(v382, v383);
LABEL_50:
                              v328(v378, v329);
                              return sub_6C3C(&v405);
                            }

LABEL_45:
                          sub_6C3C(v386);
                          uint64_t v184 = v360;
                          goto LABEL_46;
                        }
                      }

                      sub_6C3C(v389);
                      sub_874C4((uint64_t)&v405, (uint64_t)v386);
                      uint64_t v183 = v368;
                      goto LABEL_45;
                    }

uint64_t sub_199D78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a4) {
    goto LABEL_11;
  }
  uint64_t v18 = static BundleIdentifiers.tvAppBundleId.getter(v15);
  uint64_t v20 = v19;
  if (v18 != a3 || v19 != a4)
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v30 = a8[10];
    uint64_t v31 = a8[11];
    sub_6EA8(a8 + 7, v30);
    uint64_t v32 = (void *)swift_allocObject(&unk_273888, 40LL, 7LL);
    v32[2] = a8;
    void v32[3] = a9;
    v32[4] = a10;
    swift_retain(a8);
    swift_retain(a10);
    dispatch thunk of NowPlayingProviding.state(completion:)(sub_19E32C, v32, v30, v31);
    return swift_release(v32);
  }

  swift_bridgeObjectRelease(v19);
LABEL_6:
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v22 = sub_6960(v13, (uint64_t)qword_2969C8);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v22, v13);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "AmbiguousDetermineFlow#execute #capella", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v27 = (void *)swift_allocObject(&unk_2738B0, 40LL, 7LL);
  v27[2] = a8;
  v27[3] = a9;
  v27[4] = a10;
  uint64_t v28 = swift_allocObject(&unk_2738D8, 32LL, 7LL);
  *(void *)(v28 + swift_weakDestroy(v0 + 16) = sub_19E29C;
  *(void *)(v28 + 2sub_6C3C(v0 + 4) = v27;
  swift_retain_n(a8, 2LL);
  swift_retain(a10);
  swift_retain(v27);
  static Task<>.withCallback<A>(_:operation:)(sub_248FC, v28, &unk_28C6A8, a8, (char *)&type metadata for () + 8);
  swift_release(v27);
  swift_release(v28);
  return swift_release(a8);
}

uint64_t sub_19A034(void (*a1)(char *), uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Parse(0LL);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Input(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = v2;
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input;
  swift_beginAccess(v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input, v52, 0LL, 0LL);
  sub_FF10(v21, (uint64_t)v12, &qword_285BD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13) == 1)
  {
    uint64_t v22 = v50;
    sub_1F6CC((uint64_t)v12, &qword_285BD0);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = v46;
    uint64_t v24 = sub_6960(v46, (uint64_t)qword_2969C8);
    uint64_t v26 = v44;
    uint64_t v25 = v45;
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v24, v23);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "AmbiguousDetermineFlow#triggerDetermineStrategy nil input issue", v30, 2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v23);
    uint64_t v32 = v47;
    static ExecuteResponse.complete()(v31);
    v22(v32);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v32, v49);
  }

  else
  {
    uint64_t v34 = *(uint64_t (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v35 = v34(v19, v12, v13);
    uint64_t v49 = *(void *)(v2 + 96);
    Input.parse.getter(v35);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    uint64_t v36 = *(unsigned __int8 *)(v14 + 80);
    uint64_t v37 = (v36 + 40) & ~v36;
    uint64_t v38 = (char *)swift_allocObject(&unk_273810, v37 + v15, v36 | 7);
    uint64_t v39 = v50;
    uint64_t v40 = v51;
    *((void *)v38 + sub_6C3C(v0 + 2) = v20;
    *((void *)v38 + sub_6C3C(v0 + 3) = v39;
    *((void *)v38 + sub_6C3C(v0 + 4) = v40;
    v34(&v38[v37], v17, v13);
    swift_retain(v20);
    swift_retain(v40);
    DetermineFlowStrategy.makeIntentFromParse(parse:currentIntent:completion:)( v9,  0LL,  (void (*)(void, void))sub_19E204,  (uint64_t)v38);
    swift_release(v38);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }

uint64_t sub_19A3E8(void *a1, int a2, void *a3, void (*a4)(char *), uint64_t a5, uint64_t a6)
{
  uint64_t v101 = a6;
  uint64_t v114 = a5;
  uint64_t v115 = a4;
  uint64_t v107 = a3;
  uint64_t v117 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v113 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v9);
  uint64_t v111 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v11);
  uint64_t v110 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v13);
  uint64_t v109 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v118 = v15;
  uint64_t v119 = v16;
  __chkstk_darwin(v15);
  os_log_type_t v108 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v103 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v102 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  os_log_type_t v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v97 - v30;
  int v116 = a2;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v32 = sub_6960(v25, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v32, v25);
    swift_errorRetain(a1);
    uint64_t v33 = swift_errorRetain(a1);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v101 = swift_slowAlloc(32LL, -1LL);
      uint64_t v123 = v101;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v100 = v36 + 4;
      swift_getErrorValue(a1, v122, v121);
      uint64_t v37 = Error.localizedDescription.getter(v121[1], v121[2]);
      unint64_t v39 = v38;
      uint64_t v120 = sub_6978(v37, v38, &v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, v121);
      swift_bridgeObjectRelease(v39);
      sub_87F78(a1, 1);
      sub_87F78(a1, 1);
      _os_log_impl( &dword_0,  v34,  v35,  "AmbiguousDetermineFlow#triggerDetermineStrategy failed intent issue with error: %s",  v36,  0xCu);
      uint64_t v40 = v101;
      swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    else
    {
      sub_87F78(a1, 1);
      sub_87F78(a1, 1);
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    uint64_t v70 = (uint8_t *)a1;
    uint64_t v71 = v102;
    uint64_t v72 = v105;
    (*(void (**)(char *, void, uint64_t))(v102 + 104))( v24,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v105);
    uint64_t v73 = v104;
    uint64_t v74 = v103;
    uint64_t v75 = v106;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))( v103,  enum case for AdditionalMetricsDescription.SourceFunction.trigDetStrat(_:),  v106);
    swift_getErrorValue(v70, v125, v124);
    uint64_t v76 = Error.localizedDescription.getter(v124[1], v124[2]);
    uint64_t v78 = v77;
    uint64_t v101 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v24,  v74,  v76,  v77,  0LL,  1LL);
    uint64_t v100 = v79;
    __n128 v80 = swift_bridgeObjectRelease(v78);
    (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v74, v75, v80);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v24, v72);
    uint64_t v81 = v107 + 13;
    uint64_t v82 = v107[16];
    uint64_t v107 = (void *)v107[17];
    sub_6EA8(v81, v82);
    uint64_t v83 = v108;
    (*(void (**)(char *, void, uint64_t))(v119 + 104))(v108, enum case for TypeOfIntent.determine(_:), v118);
    uint64_t v84 = enum case for ActivityType.failed(_:);
    uint64_t v85 = type metadata accessor for ActivityType(0LL);
    uint64_t v86 = *(void *)(v85 - 8);
    uint64_t v87 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v109, v84, v85);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v87, 0LL, 1LL, v85);
    uint64_t v88 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v89 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56LL))(v110, 1LL, 1LL, v88);
    uint64_t v90 = enum case for SiriKitReliabilityCodes.genericError(_:);
    uint64_t v91 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v92 = *(void *)(v91 - 8);
    uint64_t v93 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 104))(v111, v90, v91);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v93, 0LL, 1LL, v91);
    uint64_t v94 = v100;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v83,  v87,  v89,  v93,  v101,  v100,  v82,  v107);
    swift_bridgeObjectRelease(v94);
    sub_1F6CC(v93, &qword_2845A0);
    sub_1F6CC(v89, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v87, &qword_2845A8);
    uint64_t v95 = (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v83, v118);
    double v69 = v112;
    static ExecuteResponse.complete()(v95);
  }

  else
  {
    uint64_t v41 = qword_283888;
    uint64_t v100 = (uint8_t *)a1;
    id v99 = a1;
    if (v41 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v42 = sub_6960(v25, (uint64_t)qword_2969C8);
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16))(v31, v42, v25);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl( &dword_0,  v44,  v45,  "AmbiguousDetermineFlow#triggerDetermineStrategy successfully triggering with amended DetermineIntent",  v46,  2u);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v25);
    uint64_t v47 = v102;
    uint64_t v48 = v105;
    (*(void (**)(char *, void, uint64_t))(v102 + 104))( v24,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v105);
    uint64_t v49 = v104;
    uint64_t v50 = v103;
    uint64_t v51 = v106;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))( v103,  enum case for AdditionalMetricsDescription.SourceFunction.trigDetStrat(_:),  v106);
    (*(void (**)(char *, void, uint64_t))(v19 + 104))( v21,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v18);
    uint64_t v98 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v24, v50, v21, 0LL, 1LL);
    uint64_t v97 = v52;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v48);
    uint64_t v53 = v107 + 13;
    uint64_t v54 = v107[16];
    uint64_t v107 = (void *)v107[17];
    sub_6EA8(v53, v54);
    uint64_t v55 = v118;
    uint64_t v56 = v108;
    (*(void (**)(char *, void, uint64_t))(v119 + 104))( v108,  enum case for TypeOfIntent.acousticID(_:),  v118);
    uint64_t v57 = enum case for ActivityType.start(_:);
    uint64_t v58 = type metadata accessor for ActivityType(0LL);
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v109, v57, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v60, 0LL, 1LL, v58);
    uint64_t v61 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v62 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v110, 1LL, 1LL, v61);
    uint64_t v63 = enum case for SiriKitReliabilityCodes.inProgress(_:);
    uint64_t v64 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v65 = *(void *)(v64 - 8);
    uint64_t v66 = (uint64_t)v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 104))(v111, v63, v64);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0LL, 1LL, v64);
    uint64_t v67 = v97;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v56,  v60,  v62,  v66,  v98,  v97,  v54,  v107);
    swift_bridgeObjectRelease(v67);
    sub_1F6CC(v66, &qword_2845A0);
    sub_1F6CC(v62, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v60, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v56, v55);
    uint64_t v68 = sub_1107F4(v99, v101);
    double v69 = v112;
    static ExecuteResponse.complete(next:)(v68);
    swift_release(v68);
    uint64_t v70 = v100;
  }

  v115(v69);
  sub_87F78(v70, v116 & 1);
  return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v69, v117);
}

uint64_t sub_19AE74(uint64_t a1, char a2, void *a3, void (*a4)(char *), uint64_t a5)
{
  int v116 = a4;
  uint64_t v117 = a5;
  uint64_t v118 = a3;
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v104 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v10);
  uint64_t v115 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v12);
  uint64_t v114 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v14);
  uint64_t v113 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v119 = v16;
  uint64_t v120 = v17;
  __chkstk_darwin(v16);
  uint64_t v112 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v109 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v111 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v110 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v107 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v106 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v105 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for Logger(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v99 - v29;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v62 = sub_6960(v24, (uint64_t)qword_2969C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v62, v24);
    swift_errorRetain(a1);
    uint64_t v63 = swift_errorRetain(a1);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.error.getter();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v102 = a1;
    uint64_t v103 = v19;
    if (v66)
    {
      uint64_t v67 = swift_slowAlloc(12LL, -1LL);
      uint64_t v104 = v23;
      uint64_t v68 = (uint8_t *)v67;
      uint64_t v101 = swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v68 = 138412290;
      swift_errorRetain(a1);
      uint64_t v69 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v121 = v69;
      uint64_t v19 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122);
      uint64_t v70 = v101;
      *(void *)uint64_t v101 = v69;
      sub_1831A8(a1, 1);
      sub_1831A8(a1, 1);
      _os_log_impl(&dword_0, v64, v65, "AmbiguousDetermineFlow#execute #capella failed with Error= %@.", v68, 0xCu);
      uint64_t v71 = sub_6C5C((uint64_t *)&unk_286BC0);
      swift_arrayDestroy(v70, 1LL, v71);
      swift_slowDealloc(v70, -1LL, -1LL);
      uint64_t v72 = v68;
      uint64_t v23 = v104;
      swift_slowDealloc(v72, -1LL, -1LL);
    }

    else
    {
      sub_1831A8(a1, 1);
      sub_1831A8(a1, 1);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    uint64_t v73 = v105;
    uint64_t v74 = v108;
    (*(void (**)(char *, void, uint64_t))(v105 + 104))( v23,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v108);
    uint64_t v76 = v106;
    uint64_t v75 = v107;
    uint64_t v77 = v110;
    (*(void (**)(char *, void, uint64_t))(v107 + 104))( v106,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v110);
    LODWORD(v101) = enum case for AdditionalMetricsDescription.StatusReason.unknown(_:);
    uint64_t v78 = v109;
    uint64_t v104 = *(char **)(v109 + 104);
    uint64_t v79 = (uint64_t)v111;
    ((void (*)(char *))v104)(v111);
    uint64_t v100 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v23,  v76,  v79,  0LL,  1LL);
    uint64_t v99 = v80;
    uint64_t v109 = *(void *)(v78 + 8);
    ((void (*)(uint64_t, uint64_t))v109)(v79, v19);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v74);
    uint64_t v81 = v118[16];
    uint64_t v110 = v118[17];
    sub_6EA8(v118 + 13, v81);
    uint64_t v82 = v112;
    (*(void (**)(char *, void, uint64_t))(v120 + 104))( v112,  enum case for TypeOfIntent.capellaQuery(_:),  v119);
    uint64_t v83 = enum case for ActivityType.completed(_:);
    uint64_t v84 = type metadata accessor for ActivityType(0LL);
    uint64_t v85 = *(void *)(v84 - 8);
    uint64_t v86 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 104))(v113, v83, v84);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v86, 0LL, 1LL, v84);
    uint64_t v87 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v88 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56LL))(v114, 1LL, 1LL, v87);
    uint64_t v89 = enum case for SiriKitReliabilityCodes.intentAutoHandleFailure(_:);
    uint64_t v90 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v115, v89, v90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v92, 0LL, 1LL, v90);
    uint64_t v93 = v99;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v82,  v86,  v88,  v92,  v100,  v99,  v81,  v110);
    swift_bridgeObjectRelease(v93);
    sub_1F6CC(v92, &qword_2845A0);
    sub_1F6CC(v88, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v86, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v82, v119);
    uint64_t v94 = type metadata accessor for App(0LL);
    uint64_t v95 = static BundleIdentifiers.tvAppBundleId.getter(v94);
    uint64_t v97 = App.__allocating_init(appIdentifier:)(v95, v96);
    uint64_t v98 = v103;
    ((void (*)(uint64_t, void, uint64_t))v104)(v79, v101, v103);
    sub_19CA60(v97, 0LL, v79, (uint64_t)v116, v117);
    swift_release(v97);
    sub_1831A8(v102, 1);
    return ((uint64_t (*)(uint64_t, uint64_t))v109)(v79, v98);
  }

  else
  {
    uint64_t v102 = v7;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v101 = v8;
    uint64_t v31 = sub_6960(v24, (uint64_t)qword_2969C8);
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 16))(v30, v31, v24);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      os_log_type_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "AmbiguousDetermineFlow#execute #capella returned with success.", v35, 2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    uint64_t v36 = v105;
    uint64_t v37 = v108;
    (*(void (**)(char *, void, uint64_t))(v105 + 104))( v23,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v108);
    unint64_t v39 = v106;
    uint64_t v38 = v107;
    uint64_t v40 = v110;
    (*(void (**)(char *, void, uint64_t))(v107 + 104))( v106,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v110);
    uint64_t v41 = v109;
    uint64_t v42 = v111;
    (*(void (**)(char *, void, uint64_t))(v109 + 104))( v111,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v19);
    uint64_t v100 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v23,  v39,  v42,  0LL,  1LL);
    uint64_t v99 = v43;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v19);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
    uint64_t v44 = v118 + 13;
    uint64_t v45 = v118[16];
    uint64_t v118 = (void *)v118[17];
    sub_6EA8(v44, v45);
    uint64_t v46 = v119;
    uint64_t v47 = v112;
    (*(void (**)(char *, void, uint64_t))(v120 + 104))( v112,  enum case for TypeOfIntent.capellaQuery(_:),  v119);
    uint64_t v48 = enum case for ActivityType.completed(_:);
    uint64_t v49 = type metadata accessor for ActivityType(0LL);
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v113, v48, v49);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0LL, 1LL, v49);
    uint64_t v52 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v53 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v114, 1LL, 1LL, v52);
    uint64_t v54 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v55 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v56 = *(void *)(v55 - 8);
    uint64_t v57 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 104))(v115, v54, v55);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v57, 0LL, 1LL, v55);
    uint64_t v58 = v99;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v47,  v51,  v53,  v57,  v100,  v99,  v45,  v118);
    swift_bridgeObjectRelease(v58);
    sub_1F6CC(v57, &qword_2845A0);
    sub_1F6CC(v53, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v51, &qword_2845A8);
    uint64_t v59 = (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v47, v46);
    uint64_t v60 = v104;
    static ExecuteResponse.complete()(v59);
    v116(v60);
    return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v60, v102);
  }

uint64_t sub_19B898(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a2;
  return swift_task_switch(sub_19B8B0, 0LL, 0LL);
}

uint64_t sub_19B8B0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[29];
  uint64_t v3 = v1[30];
  sub_6EA8(v1 + 26, v2);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AppIntentInvoking.localDispatchCapellaIntent()[1]);
  *(void *)(v0 + 2sub_6C3C(v0 + 4) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19B920;
  return dispatch thunk of AppIntentInvoking.localDispatchCapellaIntent()(v2, v3);
}

uint64_t sub_19B920()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_19B968(unsigned int a1, void *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v148 = a4;
  uint64_t v149 = a2;
  uint64_t v150 = a3;
  uint64_t v5 = sub_6C5C(&qword_285BD0);
  __chkstk_darwin(v5);
  uint64_t v135 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v137 = *(void *)(v7 - 8);
  uint64_t v138 = v7;
  __chkstk_darwin(v7);
  uint64_t v136 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v134 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v133 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v11);
  uint64_t v145 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v13);
  uint64_t v146 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v15);
  uint64_t v147 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v152 = *(void *)(v17 - 8);
  uint64_t v153 = v17;
  __chkstk_darwin(v17);
  uint64_t v144 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v142 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v140 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v143 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v141 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v139 = (char *)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v132 = (char *)&v130 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v131 = (char *)&v130 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v130 - v31;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v33 = sub_6960(v23, (uint64_t)qword_2969C8);
  os_log_type_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v151 = v23;
  uint64_t v35 = v34(v32, v33, v23);
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v130 = v9;
    unsigned int v39 = a1;
    uint64_t v40 = v38;
    *(_DWORD *)uint64_t v38 = 67240192;
    unsigned int v154 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155);
    _os_log_impl( &dword_0,  v36,  v37,  "AmbiguousDetermineFlow#executeBasedOnPlaybackState playback state: %{public}u",  v40,  8u);
    uint64_t v41 = v40;
    a1 = v39;
    uint64_t v9 = v130;
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
  uint64_t v43 = v151;
  uint64_t v44 = v42(v32, v151);
  if (a1 > 3 || a1 == 1)
  {
    uint64_t v100 = v131;
    uint64_t v101 = v34(v131, v33, v43);
    uint64_t v102 = (os_log_s *)Logger.logObject.getter(v101);
    os_log_type_t v103 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v102, v103))
    {
      unsigned int v104 = a1;
      uint64_t v105 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v105 = 0;
      _os_log_impl( &dword_0,  v102,  v103,  "AmbiguousDetermineFlow#executeBasedOnPlaybackState playback state is playing, triggering Determine strategy",  v105,  2u);
      uint64_t v106 = v105;
      a1 = v104;
      swift_slowDealloc(v106, -1LL, -1LL);
    }

    v42(v100, v151);
    uint64_t v107 = v143;
    uint64_t v108 = v141;
    (*(void (**)(char *, void, uint64_t))(v143 + 104))( v141,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v21);
    uint64_t v109 = v142;
    uint64_t v110 = v140;
    (*(void (**)(char *, void, uint64_t))(v142 + 104))( v140,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v19);
    unsigned int v154 = a1;
    type metadata accessor for MRPlaybackState(0LL);
    uint64_t v112 = String.init<A>(describing:)(&v154, v111);
    uint64_t v114 = v113;
    uint64_t v151 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v108,  v110,  v112,  v113,  4LL,  0LL);
    uint64_t v139 = v115;
    __n128 v116 = swift_bridgeObjectRelease(v114);
    (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v110, v19, v116);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v21);
    uint64_t v117 = v149[16];
    uint64_t v143 = v149[17];
    sub_6EA8(v149 + 13, v117);
    uint64_t v118 = v144;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))(v144, enum case for TypeOfIntent.determine(_:), v153);
    uint64_t v119 = enum case for ActivityType.start(_:);
    uint64_t v120 = type metadata accessor for ActivityType(0LL);
    uint64_t v121 = *(void *)(v120 - 8);
    uint64_t v122 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v121 + 104))(v147, v119, v120);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v122, 0LL, 1LL, v120);
    uint64_t v123 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v124 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56LL))(v146, 1LL, 1LL, v123);
    uint64_t v125 = enum case for SiriKitReliabilityCodes.inProgress(_:);
    uint64_t v126 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v127 = *(void *)(v126 - 8);
    uint64_t v128 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 104))(v145, v125, v126);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v128, 0LL, 1LL, v126);
    uint64_t v129 = v139;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v118,  v122,  v124,  v128,  v151,  v139,  v117,  v143);
    swift_bridgeObjectRelease(v129);
    sub_1F6CC(v128, &qword_2845A0);
    sub_1F6CC(v124, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v122, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v118, v153);
    return sub_19A034(v150, v148);
  }

  else if ((static SiriAudioEnvironment.isHomePod.getter(v44) & 1) != 0)
  {
    uint64_t v45 = v132;
    uint64_t v46 = v34(v132, v33, v43);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl( &dword_0,  v47,  v48,  "AmbiguousDetermineFlow#executeBasedOnPlaybackState got back non playing state, and device is HomePod, responding with nothing playing dialog",  v49,  2u);
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    v42(v45, v43);
    uint64_t v50 = v143;
    uint64_t v51 = v141;
    (*(void (**)(char *, void, uint64_t))(v143 + 104))( v141,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v21);
    uint64_t v52 = v142;
    uint64_t v53 = v140;
    (*(void (**)(char *, void, uint64_t))(v142 + 104))( v140,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v19);
    uint64_t v151 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v51,  v53,  0x6F50656D6F487349LL,  0xE900000000000064LL,  2LL,  0LL);
    uint64_t v139 = v54;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v19);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v21);
    uint64_t v55 = v149[16];
    uint64_t v143 = v149[17];
    sub_6EA8(v149 + 13, v55);
    uint64_t v56 = v144;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))(v144, enum case for TypeOfIntent.determine(_:), v153);
    uint64_t v57 = enum case for ActivityType.start(_:);
    uint64_t v58 = type metadata accessor for ActivityType(0LL);
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v147, v57, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v60, 0LL, 1LL, v58);
    uint64_t v61 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v62 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v146, 1LL, 1LL, v61);
    uint64_t v63 = enum case for SiriKitReliabilityCodes.inProgress(_:);
    uint64_t v64 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v65 = *(void *)(v64 - 8);
    uint64_t v66 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 104))(v145, v63, v64);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0LL, 1LL, v64);
    uint64_t v67 = v139;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v56,  v60,  v62,  v66,  v151,  v139,  v55,  v143);
    swift_bridgeObjectRelease(v67);
    sub_1F6CC(v66, &qword_2845A0);
    sub_1F6CC(v62, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v60, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v56, v153);
    return sub_19C684((uint64_t)v150, v148);
  }

  else
  {
    uint64_t v69 = v139;
    uint64_t v70 = v34(v139, v33, v43);
    uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
    os_log_type_t v72 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl( &dword_0,  v71,  v72,  "AmbiguousDetermineFlow#executeBasedOnPlaybackState got back non playing state for non-HomePod device, triggering Acoustic ID Flow",  v73,  2u);
      uint64_t v74 = v73;
      uint64_t v69 = v139;
      swift_slowDealloc(v74, -1LL, -1LL);
    }

    v42(v69, v43);
    uint64_t v75 = v143;
    uint64_t v76 = v141;
    (*(void (**)(char *, void, uint64_t))(v143 + 104))( v141,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v21);
    uint64_t v77 = v142;
    uint64_t v78 = v140;
    (*(void (**)(char *, void, uint64_t))(v142 + 104))( v140,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v19);
    uint64_t v79 = v134;
    uint64_t v80 = v133;
    (*(void (**)(char *, void, uint64_t))(v134 + 104))( v133,  enum case for AdditionalMetricsDescription.StatusReason.acstc(_:),  v9);
    uint64_t v151 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v76,  v78,  v80,  5LL,  0LL);
    uint64_t v139 = v81;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v9);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v19);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v21);
    uint64_t v82 = v149;
    uint64_t v83 = v149[16];
    uint64_t v143 = v149[17];
    sub_6EA8(v149 + 13, v83);
    uint64_t v84 = v144;
    (*(void (**)(char *, void, uint64_t))(v152 + 104))( v144,  enum case for TypeOfIntent.acousticID(_:),  v153);
    uint64_t v85 = enum case for ActivityType.start(_:);
    uint64_t v86 = type metadata accessor for ActivityType(0LL);
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v147, v85, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v88, 0LL, 1LL, v86);
    uint64_t v89 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v90 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56LL))(v146, 1LL, 1LL, v89);
    uint64_t v91 = enum case for SiriKitReliabilityCodes.inProgress(_:);
    uint64_t v92 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v93 = *(void *)(v92 - 8);
    uint64_t v94 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 104))(v145, v91, v92);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v93 + 56))(v94, 0LL, 1LL, v92);
    uint64_t v95 = v139;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v84,  v88,  v90,  v94,  v151,  v139,  v83,  v143);
    swift_bridgeObjectRelease(v95);
    sub_1F6CC(v94, &qword_2845A0);
    sub_1F6CC(v90, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v88, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v84, v153);
    uint64_t v96 = (uint64_t)v82 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input;
    swift_beginAccess( (char *)v82 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin22AmbiguousDetermineFlow_input,  &v154,  0LL,  0LL);
    uint64_t v97 = v135;
    sub_FF10(v96, v135, &qword_285BD0);
    uint64_t v98 = sub_110A8C(v97);
    sub_1F6CC(v97, &qword_285BD0);
    uint64_t v99 = v136;
    static ExecuteResponse.complete(next:)(v98);
    swift_release(v98);
    v150(v99);
    return (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v99, v138);
  }

uint64_t sub_19C684(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 144);
  uint64_t v6 = swift_allocObject(&unk_2737C0, 24LL, 7LL);
  swift_weakInit(v6 + 16, v2);
  uint64_t v7 = (void *)swift_allocObject(&unk_2737E8, 40LL, 7LL);
  void v7[2] = v6;
  v7[3] = a1;
  _OWORD v7[4] = a2;
  uint64_t v8 = v5[4];
  uint64_t v9 = v5[5];
  uint64_t v10 = v5[6];
  uint64_t v23 = 0LL;
  memset(v22, 0, sizeof(v22));
  swift_retain(v6);
  swift_retain(a2);
  unint64_t v11 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v14 = v9;
  uint64_t v15 = v10;
  strcpy(v16, "NothingPlaying");
  v16[15] = -18;
  uint64_t v17 = v8;
  unint64_t v18 = v11;
  uint64_t v19 = 0LL;
  uint64_t v20 = v22;
  uint64_t v21 = 0LL;
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_19E17C,  (uint64_t)v7,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v9,  v10,  0x50676E6968746F4ELL,  0xEE00676E6979616CLL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v13);
  swift_bridgeObjectRelease(v11);
  sub_1F6CC((uint64_t)v22, &qword_283FE8);
  swift_release(v6);
  return swift_release(v7);
}

uint64_t sub_19C7E8(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v10);
  uint64_t v14 = &v29[-v13 - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v29, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v16 = Strong;
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v17 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v17, v8);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_0, v19, v20, "AmbiguousDetermineFlow#nothingPlayingDialog", v21, 2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_19D160(a1, a3, a4);
    return swift_release(v16);
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v23 = sub_6960(v8, (uint64_t)qword_2969C8);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v23, v8);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl( &dword_0,  v25,  v26,  "AmbiguousDetermineFlow#nothingPlayingDialog self deallocated prematurely",  v27,  2u);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }

double sub_19CA60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a5;
  uint64_t v39 = a4;
  uint64_t v38 = a2;
  uint64_t v37 = a1;
  uint64_t v7 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2844D0);
  uint64_t inited = swift_initStackObject(v11, v52);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_214510;
  uint64_t v13 = type metadata accessor for ErrorFilingProvider(0LL);
  *(void *)(inited + 3sub_6C3C(v0 + 2) = static ErrorFilingProvider.errorInfoForParamsKey.getter(v13);
  *(void *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000003CLL,  0x8000000000221220LL,  "AudioFlowDelegatePlugin/AppResolutionCommonStrategy.swift",  57LL,  2LL,  537LL, 0) = v14;
  *(void *)(inited + 7sub_6C3C(v0 + 2) = &type metadata for String;
  *(void *)(inited + 4sub_6C3C(v0 + 8) = 0x7263455F464441LL;
  *(void *)(inited + 56) = 0xE700000000000000LL;
  unint64_t v36 = sub_74D54(inited);
  uint64_t v15 = *(void **)(v5 + 152);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (v16 + 16) & ~v16;
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v22 = swift_allocObject(&unk_273798, v21 + 16, v16 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v22 + v17, v10, v7);
  uint64_t v23 = v35;
  *(void *)(v22 + v1sub_6C3C(v0 + 8) = v35;
  uint64_t v24 = v37;
  *(void *)(v22 + v1sub_6C3C(v0 + 9) = v37;
  uint64_t v25 = v38;
  *(void *)(v22 + vsub_6C3C(v0 + 20) = v38;
  os_log_type_t v26 = (void *)(v22 + v21);
  *os_log_type_t v26 = v39;
  uint64_t v27 = v40;
  v26[1] = v40;
  uint64_t v29 = v15[3];
  uint64_t v28 = v15[4];
  uint64_t v30 = v15[2];
  uint64_t v51 = 0LL;
  memset(v50, 0, sizeof(v50));
  uint64_t v42 = v30;
  uint64_t v43 = v29;
  strcpy((char *)v44, "GenericError");
  HIBYTE(v44[6]) = 0;
  v44[7] = -5120;
  uint64_t v45 = v28;
  unint64_t v31 = v36;
  unint64_t v46 = v36;
  uint64_t v47 = v24;
  uint64_t v32 = v24;
  os_log_type_t v48 = v50;
  uint64_t v49 = 0LL;
  id v33 = v25;
  swift_retain(v27);
  swift_retain(v23);
  swift_retain(v32);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_19E0DC,  v22,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v30,  v29,  0x45636972656E6547LL,  0xEC000000726F7272LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)v41);
  sub_1F6CC((uint64_t)v50, &qword_283FE8);
  swift_release(v22);
  *(void *)&double result = swift_bridgeObjectRelease(v31).n128_u64[0];
  return result;
}

uint64_t sub_19CD20( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v56 = a1;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  os_log_type_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))( v26,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v23);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))( v22,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v19);
  uint64_t v49 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)(v26, v22, a2, 0LL, 1LL);
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v30 = a3[16];
  uint64_t v29 = a3[17];
  uint64_t v57 = a3;
  sub_6EA8(a3 + 13, v30);
  uint64_t v31 = enum case for ActivityType.failed(_:);
  uint64_t v32 = type metadata accessor for ActivityType(0LL);
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v18, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v18, 0LL, 1LL, v32);
  uint64_t v34 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v35 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v50, 1LL, 1LL, v34);
  uint64_t v36 = enum case for SiriKitReliabilityCodes.handleIntentFailure(_:);
  uint64_t v37 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 104))(v13, v36, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v13, 0LL, 1LL, v37);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(app:intent:activityType:templateResult:statusReason:description:mediaItemType:)( v51,  v52,  v18,  v35,  v13,  v49,  v28,  0LL,  1,  v30,  v29);
  swift_bridgeObjectRelease(v28);
  sub_1F6CC((uint64_t)v13, &qword_2845A0);
  sub_1F6CC(v35, (uint64_t *)&unk_286BD0);
  sub_1F6CC((uint64_t)v18, &qword_2845A8);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v39 = v55;
  uint64_t v40 = sub_6960(v55, (uint64_t)qword_2969C8);
  uint64_t v42 = v53;
  uint64_t v41 = v54;
  uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v40, v39);
  uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
  os_log_type_t v45 = static os_log_type_t.default.getter(v44);
  if (os_log_type_enabled(v44, v45))
  {
    unint64_t v46 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v46 = 0;
    _os_log_impl(&dword_0, v44, v45, "AmbiguousDetermineFlow#generateGenericErrorDialog", v46, 2u);
    swift_slowDealloc(v46, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
  return sub_19D160(v56, v58, v59);
}

uint64_t sub_19D160(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v143 = a3;
  uint64_t v144 = a2;
  uint64_t v4 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v146 = *(void *)(v4 - 8);
  uint64_t v147 = v4;
  __chkstk_darwin(v4);
  uint64_t v145 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  uint64_t v142 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v8);
  uint64_t v140 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v10);
  uint64_t v139 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v141 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v148 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v138 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v136 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v134 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v133 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v135 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v132 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v131 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v16);
  uint64_t v130 = (uint64_t)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v127 = (id)sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v127);
  uint64_t v19 = (uint64_t *)((char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v121 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v121 - v28;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v30 = sub_6960(v20, (uint64_t)qword_2969C8);
  uint64_t v31 = *(char **)(v21 + 16);
  uint64_t v128 = v30;
  uint64_t v129 = v31;
  uint64_t v32 = ((uint64_t (*)(char *))v31)(v29);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v123 = v16;
    uint64_t v36 = v27;
    uint64_t v37 = a1;
    uint64_t v38 = v20;
    uint64_t v39 = v24;
    uint64_t v40 = v35;
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_0, v33, v34, "ExecuteMusicOnRemoteFlow#handleDialogResult Handling dialog Result...", v35, 2u);
    uint64_t v41 = v40;
    uint64_t v24 = v39;
    uint64_t v20 = v38;
    a1 = v37;
    uint64_t v27 = v36;
    uint64_t v16 = v123;
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  uint64_t v42 = *(void (**)(char *, uint64_t))(v21 + 8);
  v42(v29, v20);
  sub_FF10(a1, (uint64_t)v19, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v19, v127) == 1)
  {
    uint64_t v43 = *v19;
    ((void (*)(char *, uint64_t, uint64_t))v129)(v24, v128, v20);
    swift_errorRetain(v43);
    uint64_t v44 = swift_errorRetain(v43);
    os_log_type_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      uint64_t v153 = v48;
      uint64_t v129 = v24;
      *(_DWORD *)uint64_t v47 = 136315138;
      swift_getErrorValue(v43, v152, v151);
      uint64_t v149 = Error.localizedDescription.getter(v151[1], v151[2]);
      uint64_t v150 = v49;
      uint64_t v50 = String.init<A>(_:)( &v149,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v52 = v51;
      uint64_t v149 = sub_6978(v50, v51, &v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, &v150);
      swift_bridgeObjectRelease(v52);
      swift_errorRelease(v43);
      uint64_t v53 = v43;
      swift_errorRelease(v43);
      _os_log_impl( &dword_0,  v45,  v46,  "AmbiguousDetermineFlow#handleDialogResult Could not properly create dialog %s, silently failing",  v47,  0xCu);
      swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1LL, -1LL);
      swift_slowDealloc(v47, -1LL, -1LL);

      uint64_t v54 = v129;
    }

    else
    {
      swift_errorRelease(v43);
      uint64_t v53 = v43;
      swift_errorRelease(v43);

      uint64_t v54 = v24;
    }

    v42(v54, v20);
    uint64_t v93 = v132;
    uint64_t v94 = v131;
    uint64_t v95 = v135;
    (*(void (**)(char *, void, uint64_t))(v132 + 104))( v131,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v135);
    uint64_t v96 = v134;
    uint64_t v97 = v133;
    uint64_t v98 = v136;
    (*(void (**)(char *, void, uint64_t))(v134 + 104))( v133,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v136);
    uint64_t v130 = v53;
    swift_getErrorValue(v53, v155, v154);
    uint64_t v99 = Error.localizedDescription.getter(v154[1], v154[2]);
    uint64_t v101 = v100;
    uint64_t v129 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v94,  v97,  v99,  v100,  3LL,  0LL);
    uint64_t v128 = v102;
    __n128 v103 = swift_bridgeObjectRelease(v101);
    (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v97, v98, v103);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
    unsigned int v104 = v137 + 13;
    uint64_t v105 = v137[16];
    uint64_t v137 = (void *)v137[17];
    sub_6EA8(v104, v105);
    uint64_t v106 = v138;
    uint64_t v107 = v141;
    (*(void (**)(char *, void, uint64_t))(v148 + 104))(v138, enum case for TypeOfIntent.determine(_:), v141);
    uint64_t v108 = enum case for ActivityType.failed(_:);
    uint64_t v109 = type metadata accessor for ActivityType(0LL);
    uint64_t v110 = *(void *)(v109 - 8);
    uint64_t v111 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v110 + 104))(v139, v108, v109);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v111, 0LL, 1LL, v109);
    uint64_t v112 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v113 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56LL))(v140, 1LL, 1LL, v112);
    uint64_t v114 = enum case for SiriKitReliabilityCodes.renderingError(_:);
    uint64_t v115 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v116 = *(void *)(v115 - 8);
    uint64_t v117 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 104))(v142, v114, v115);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v116 + 56))(v117, 0LL, 1LL, v115);
    uint64_t v118 = v128;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v106,  v111,  v113,  v117,  v129,  v128,  v105,  v137);
    swift_bridgeObjectRelease(v118);
    sub_1F6CC(v117, &qword_2845A0);
    sub_1F6CC(v113, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v111, &qword_2845A8);
    uint64_t v119 = (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v106, v107);
    uint64_t v120 = v145;
    static ExecuteResponse.complete()(v119);
    v144(v120);
    swift_errorRelease(v130);
    return (*(uint64_t (**)(char *, uint64_t))(v146 + 8))(v120, v147);
  }

  else
  {
    uint64_t v55 = *(int *)(v16 + 48);
    uint64_t v56 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v122 = *(void *)(v56 - 8);
    uint64_t v57 = *(void (**)(uint64_t, uint64_t *))(v122 + 32);
    uint64_t v58 = v130;
    uint64_t v123 = v56;
    v57(v130, v19);
    *(void *)(v58 + v55) = *(uint64_t *)((char *)v19 + v55);
    uint64_t v59 = v137;
    uint64_t v60 = (void *)dispatch thunk of ViewFactory.makeCompletionView(templateResult:snippets:listenAfterSpeaking:canUseServerTTS:)( v58,  _swiftEmptyArrayStorage,  0LL,  1LL);
    uint64_t v61 = v59[23];
    uint64_t v62 = v59[24];
    sub_6EA8(v59 + 20, v61);
    id v127 = v60;
    AceServiceInvokerAsync.submitAndForget(_:)(v60, v61, v62);
    uint64_t v63 = ((uint64_t (*)(char *, uint64_t, uint64_t))v129)(v27, v128, v20);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.default.getter(v64);
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl( &dword_0,  v64,  v65,  "AmbiguousDetermineFlow#handleDialogResult Dialog successfully generated, responding and exiting",  v66,  2u);
      swift_slowDealloc(v66, -1LL, -1LL);
    }

    v42(v27, v20);
    uint64_t v67 = v132;
    uint64_t v68 = v131;
    uint64_t v69 = v135;
    (*(void (**)(char *, void, uint64_t))(v132 + 104))( v131,  enum case for AdditionalMetricsDescription.ModuleName.adf(_:),  v135);
    uint64_t v70 = v134;
    uint64_t v71 = v133;
    uint64_t v72 = v136;
    (*(void (**)(char *, void, uint64_t))(v134 + 104))( v133,  enum case for AdditionalMetricsDescription.SourceFunction.handleDlgRes(_:),  v136);
    uint64_t v73 = v125;
    uint64_t v74 = v124;
    uint64_t v75 = v126;
    (*(void (**)(char *, void, uint64_t))(v125 + 104))( v124,  enum case for AdditionalMetricsDescription.StatusReason.success(_:),  v126);
    uint64_t v129 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v68,  v71,  v74,  0LL,  1LL);
    uint64_t v128 = v76;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
    uint64_t v77 = v59[16];
    uint64_t v137 = (void *)v59[17];
    sub_6EA8(v59 + 13, v77);
    uint64_t v78 = v138;
    uint64_t v79 = v141;
    (*(void (**)(char *, void, uint64_t))(v148 + 104))(v138, enum case for TypeOfIntent.determine(_:), v141);
    uint64_t v80 = enum case for ActivityType.completed(_:);
    uint64_t v81 = type metadata accessor for ActivityType(0LL);
    uint64_t v82 = *(void *)(v81 - 8);
    uint64_t v83 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 104))(v139, v80, v81);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v83, 0LL, 1LL, v81);
    uint64_t v84 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v140, 1LL, 1LL, v123);
    uint64_t v85 = enum case for SiriKitReliabilityCodes.success(_:);
    uint64_t v86 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v87 = *(void *)(v86 - 8);
    uint64_t v88 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v142, v85, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v88, 0LL, 1LL, v86);
    uint64_t v89 = v128;
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v78,  v83,  v84,  v88,  v129,  v128,  v77,  v137);
    swift_bridgeObjectRelease(v89);
    sub_1F6CC(v88, &qword_2845A0);
    sub_1F6CC(v84, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v83, &qword_2845A8);
    uint64_t v90 = (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v78, v79);
    uint64_t v91 = v145;
    static ExecuteResponse.complete()(v90);
    v144(v91);

    (*(void (**)(char *, uint64_t))(v146 + 8))(v91, v147);
    return sub_1F6CC(v130, &qword_289340);
  }

void *sub_19DE40()
{
  return v0;
}

uint64_t sub_19DEBC()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_19DEE0()
{
  return type metadata accessor for AmbiguousDetermineFlow(0LL);
}

uint64_t type metadata accessor for AmbiguousDetermineFlow(uint64_t a1)
{
  uint64_t result = qword_28C558;
  if (!qword_28C558) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AmbiguousDetermineFlow);
  }
  return result;
}

void sub_19DF24(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = "(";
  uint64_t v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = "(";
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[6] = "(";
  v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v4[8] = "(";
  v4[9] = "(";
  sub_92714(319LL);
  if (v3 <= 0x3F)
  {
    v4[10] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 11LL, v4, a1 + 80);
  }

uint64_t sub_19DFB8(uint64_t a1)
{
  return sub_1969AC(a1) & 1;
}

uint64_t sub_19DFDC(void (*a1)(char *), uint64_t a2)
{
  return sub_197C90(a1, a2);
}

uint64_t sub_19DFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AmbiguousDetermineFlow(0LL);
  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_19E024()
{
  uint64_t v1 = type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  swift_release(*(void *)(v0 + v7));

  swift_release(*(void *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v5);
}

uint64_t sub_19E0DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AdditionalMetricsDescription.StatusReason(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_19CD20( a1,  v1 + v4,  *(void **)(v1 + v5),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void (**)(char *))(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL)
                     + 8));
}

uint64_t sub_19E154()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_19E17C(uint64_t a1)
{
  return sub_19C7E8(a1, *(void *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_19E188()
{
  uint64_t v1 = type metadata accessor for Input(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_19E204(void *a1, char a2)
{
  int v4 = a2 & 1;
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Input(0LL) - 8) + 80LL);
  return sub_19A3E8( a1,  v4,  *(void **)(v2 + 16),  *(void (**)(char *))(v2 + 24),  *(void *)(v2 + 32),  v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_19E25C(unsigned int a1)
{
  return sub_19B968(a1, *(void **)(v1 + 16), *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_19E26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_199D78(a1, a2, a3, a4, a5, a6, a7, *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32));
}

uint64_t sub_19E29C(uint64_t a1, char a2)
{
  return sub_19AE74(a1, a2 & 1, *(void **)(v2 + 16), *(void (**)(char *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_19E2AC()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_19E2D0()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_28C6A4);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_11C64;
  v2[2] = v0;
  return swift_task_switch(sub_19B8B0, 0LL, 0LL);
}

uint64_t sub_19E330(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_6C5C(&qword_285BD0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  unint64_t v9 = &v24[-v8 - 8];
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v14 = sub_6960(v10, (uint64_t)qword_2969C8);
  uint64_t v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_0, v16, v17, "SwitchPodcastNewsPreferenceFlow#on Handling input.", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = type metadata accessor for Input(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v9, a1, v19);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0LL, 1LL, v19);
  sub_45F6C((uint64_t)v9, (uint64_t)v7, &qword_285BD0);
  uint64_t v21 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input;
  swift_beginAccess( v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input,  v24,  33LL,  0LL);
  sub_DD950((uint64_t)v7, v21, &qword_285BD0);
  swift_endAccess(v24);
  return sub_1A48A0() & 1;
}

uint64_t sub_19E564(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v120 = a1;
  uint64_t v121 = a2;
  uint64_t v4 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v4);
  uint64_t v119 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v6);
  uint64_t v117 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v8);
  uint64_t v116 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v118 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v115 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v113 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v109 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v110 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v112 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v111 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for NetworkAvailability.Status(0LL);
  uint64_t v104 = *(void *)(v14 - 8);
  uint64_t v105 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  __n128 v103 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v102 = (char *)&v100 - v17;
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v106 = (char *)&v100 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v100 - v25;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v27 = sub_6960(v18, (uint64_t)qword_2969C8);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v107 = v27;
  uint64_t v108 = v28;
  ((void (*)(char *))v28)(v26);
  uint64_t v29 = swift_retain_n(v3, 2LL);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.default.getter(v30);
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v122 = v3;
  if (v32)
  {
    uint64_t v100 = v19;
    uint64_t v33 = swift_slowAlloc(12LL, -1LL);
    uint64_t v101 = v12;
    os_log_type_t v34 = (uint8_t *)v33;
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    v124[0] = v35;
    *(_DWORD *)os_log_type_t v34 = 136315138;
    LOBYTE(v12sub_6C3C(v0 + 3) = *(_BYTE *)(v122
                            + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_httpCallAttemptState);
    uint64_t v36 = String.init<A>(describing:)(&v123, &type metadata for SwitchNewsSourcePreferenceFlow.HTTPCallAttemptState);
    unint64_t v38 = v37;
    uint64_t v123 = sub_6978(v36, v37, v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, v124);
    swift_release_n(v122, 2LL);
    swift_bridgeObjectRelease(v38);
    _os_log_impl( &dword_0,  v30,  v31,  "SwitchPodcastNewsPreferenceFlow#execute Reached this logic with httpCallState: %s.",  v34,  0xCu);
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1LL, -1LL);
    uint64_t v39 = v34;
    uint64_t v12 = v101;
    uint64_t v3 = v122;
    swift_slowDealloc(v39, -1LL, -1LL);

    uint64_t v40 = *(void (**)(char *, uint64_t))(v100 + 8);
  }

  else
  {

    swift_release_n(v3, 2LL);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v19 + 8);
  }

  v40(v26, v18);
  uint64_t v41 = v18;
  uint64_t v42 = *(void *)(v3
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_featureFlagProvider
                  + 24);
  uint64_t v43 = *(void *)(v3
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_featureFlagProvider
                  + 32);
  sub_6EA8( (void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_featureFlagProvider),  v42);
  if ((dispatch thunk of FeatureFlagProviding.isSwitchNewsSourcePreferenceEnabled.getter(v42, v43) & 1) == 0)
  {
    uint64_t v74 = v108(v22, v107, v41);
    uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
    os_log_type_t v76 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl( &dword_0,  v75,  v76,  "SwitchPodcastNewsPreferenceFlow#execute Feature is not enabled, erroring out.",  v77,  2u);
      swift_slowDealloc(v77, -1LL, -1LL);
    }

    v40(v22, v41);
    uint64_t v79 = v111;
    uint64_t v78 = v112;
    uint64_t v80 = v110;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))( v111,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v110);
    uint64_t v81 = v109;
    uint64_t v82 = v113;
    (*(void (**)(char *, void, uint64_t))(v109 + 104))( v12,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v113);
    uint64_t v108 = (uint64_t (*)(char *, uint64_t, uint64_t))static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v79,  v12,  0xD000000000000010LL,  0x8000000000222BB0LL,  0LL,  1LL);
    uint64_t v84 = v83;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v12, v82);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
    uint64_t v85 = *(void *)(v3
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v113 = *(void *)(v3
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8( (void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v85);
    uint64_t v87 = v114;
    uint64_t v86 = v115;
    uint64_t v88 = v118;
    (*(void (**)(char *, void, uint64_t))(v115 + 104))( v114,  enum case for TypeOfIntent.switchNewsPreference(_:),  v118);
    uint64_t v89 = enum case for ActivityType.completed(_:);
    uint64_t v90 = type metadata accessor for ActivityType(0LL);
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v116, v89, v90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v92, 0LL, 1LL, v90);
    uint64_t v93 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v94 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56LL))(v117, 1LL, 1LL, v93);
    uint64_t v95 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v96 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56LL))(v119, 1LL, 1LL, v95);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v87,  v92,  v94,  v96,  v108,  v84,  v85,  v113);
    swift_bridgeObjectRelease(v84);
    sub_1F6CC(v96, &qword_2845A0);
    sub_1F6CC(v94, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v92, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
    goto LABEL_14;
  }

  uint64_t v44 = v102;
  dispatch thunk of NetworkAvailability.status.getter();
  uint64_t v46 = v104;
  uint64_t v45 = v105;
  uint64_t v47 = v103;
  (*(void (**)(char *, void, uint64_t))(v104 + 104))( v103,  enum case for NetworkAvailability.Status.unknown(_:),  v105);
  uint64_t v48 = sub_10430( &qword_28C8E8,  (uint64_t (*)(uint64_t))&type metadata accessor for NetworkAvailability.Status,  (uint64_t)&protocol conformance descriptor for NetworkAvailability.Status);
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v47, v45, v48);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
  v50(v47, v45);
  v50(v44, v45);
  if ((v49 & 1) != 0)
  {
    uint64_t v51 = v108(v106, v107, v41);
    unint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl( &dword_0,  v52,  v53,  "SwitchPodcastNewsPreferenceFlow#execute device is offline, cannot set preference.",  v54,  2u);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    v40(v106, v41);
    uint64_t v56 = v111;
    uint64_t v55 = v112;
    uint64_t v57 = v110;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))( v111,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v110);
    uint64_t v58 = v109;
    uint64_t v59 = v113;
    (*(void (**)(char *, void, uint64_t))(v109 + 104))( v12,  enum case for AdditionalMetricsDescription.SourceFunction.exec(_:),  v113);
    uint64_t v108 = (uint64_t (*)(char *, uint64_t, uint64_t))static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v56,  v12,  0xD00000000000001ELL,  0x8000000000222BD0LL,  0LL,  1LL);
    uint64_t v61 = v60;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v59);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    uint64_t v62 = *(void *)(v3
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v113 = *(void *)(v3
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8( (void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v62);
    uint64_t v64 = v114;
    uint64_t v63 = v115;
    uint64_t v65 = v118;
    (*(void (**)(char *, void, uint64_t))(v115 + 104))( v114,  enum case for TypeOfIntent.switchNewsPreference(_:),  v118);
    uint64_t v66 = enum case for ActivityType.failed(_:);
    uint64_t v67 = type metadata accessor for ActivityType(0LL);
    uint64_t v68 = *(void *)(v67 - 8);
    uint64_t v69 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 104))(v116, v66, v67);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v69, 0LL, 1LL, v67);
    uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v71 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))(v117, 1LL, 1LL, v70);
    uint64_t v72 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v73 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v119, 1LL, 1LL, v72);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v64,  v69,  v71,  v73,  v108,  v61,  v62,  v113);
    swift_bridgeObjectRelease(v61);
    sub_1F6CC(v73, &qword_2845A0);
    sub_1F6CC(v71, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v69, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
LABEL_14:
    uint64_t v97 = v120;
    uint64_t v98 = v121;
    return sub_1A3C34(v97, v98);
  }

  if ((sub_1A48A0() & 1) == 0)
  {
    uint64_t v97 = v120;
    uint64_t v98 = v121;
    return sub_1A3C34(v97, v98);
  }

  return sub_19EFC0(v120, v121);
}

uint64_t sub_19EFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v160 = a1;
  uint64_t v161 = a2;
  uint64_t v4 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v4);
  uint64_t v159 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v6);
  uint64_t v158 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v8);
  uint64_t v156 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v157 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v155 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  unsigned int v154 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v153 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v151 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v150 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v152 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v149 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v148 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v144 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v144 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v142 = (char *)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v143 = (char *)&v133 - v16;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v162 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v141 = (char *)&v133 - v22;
  __chkstk_darwin(v21);
  uint64_t v145 = (char *)&v133 - v23;
  uint64_t v24 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v147 = type metadata accessor for URL(0LL);
  uint64_t v27 = *(void *)(v147 - 8);
  uint64_t v28 = __chkstk_darwin(v147);
  uint64_t v140 = (char *)&v133 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v28);
  uint64_t v146 = (uint64_t)&v133 - v30;
  uint64_t v31 = type metadata accessor for URLComponents(0LL);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v35 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId + 8);
  uint64_t v163 = v3;
  if (v35
    && (uint64_t v36 = *(void *)(v3
                        + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier
                        + 8)) != 0)
  {
    uint64_t v134 = v13;
    uint64_t v139 = v17;
    uint64_t v137 = v34;
    uint64_t v138 = v32;
    uint64_t v135 = *(void *)(v3 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastTopicId);
    uint64_t v136 = *(char **)(v3
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_newsPodcastIdentifier);
    unint64_t v37 = (char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    swift_bridgeObjectRetain(v36);
    __n128 v38 = swift_bridgeObjectRetain(v35);
    URLComponents.init()(v38);
    URLComponents.scheme.setter(0x7370747468LL, 0xE500000000000000LL);
    URLComponents.host.setter(0xD00000000000001ALL, 0x8000000000222960LL);
    URLComponents.path.setter(0xD000000000000017LL, 0x8000000000222980LL);
    uint64_t v39 = sub_6C5C(&qword_28C8E0);
    uint64_t v40 = *(void *)(type metadata accessor for URLQueryItem(0LL) - 8);
    uint64_t v41 = swift_allocObject( v39,  ((*(unsigned __int8 *)(v40 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
          + 3LL * *(void *)(v40 + 72),
            *(unsigned __int8 *)(v40 + 80) | 7LL);
    *(_OWORD *)(v41 + swift_weakDestroy(v0 + 16) = xmmword_2168F0;
    URLQueryItem.init(name:value:)(0x64496369706F74LL, 0xE700000000000000LL, v135, v35);
    swift_bridgeObjectRelease(v35);
    URLQueryItem.init(name:value:)(0x4974736163646F70LL, 0xE900000000000064LL, v136, v36);
    swift_bridgeObjectRelease(v36);
    URLQueryItem.init(name:value:)(0x72656C6C6163LL, 0xE600000000000000LL, 1769105779LL, 0xE400000000000000LL);
    uint64_t v42 = URLComponents.queryItems.setter(v41);
    uint64_t v136 = v37;
    URLComponents.url.getter(v42);
    uint64_t v43 = v147;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1LL, v147) == 1)
    {
      sub_1F6CC((uint64_t)v26, &qword_284628);
      uint64_t v44 = v139;
      uint64_t v45 = v162;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v46 = sub_6960(v44, (uint64_t)qword_2969C8);
      uint64_t v47 = v141;
      uint64_t v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 16))(v141, v46, v44);
      char v49 = (os_log_s *)Logger.logObject.getter(v48);
      os_log_type_t v50 = static os_log_type_t.error.getter();
      BOOL v51 = os_log_type_enabled(v49, v50);
      uint64_t v52 = v163;
      if (v51)
      {
        os_log_type_t v53 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)os_log_type_t v53 = 0;
        _os_log_impl( &dword_0,  v49,  v50,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference failed to create URL. Cannot make Media API call.",  v53,  2u);
        swift_slowDealloc(v53, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
      uint64_t v55 = v148;
      uint64_t v54 = v149;
      uint64_t v56 = v152;
      (*(void (**)(char *, void, uint64_t))(v149 + 104))( v148,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v152);
      uint64_t v58 = v150;
      uint64_t v57 = v151;
      uint64_t v59 = v153;
      (*(void (**)(char *, void, uint64_t))(v151 + 104))( v150,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v153);
      uint64_t v162 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v55,  v58,  0xD000000000000027LL,  0x80000000002229A0LL,  0LL,  1LL);
      uint64_t v61 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
      uint64_t v62 = *(void *)(v52
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                      + 24);
      uint64_t v153 = *(void *)(v52
                       + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                       + 32);
      sub_6EA8( (void *)(v52 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v62);
      uint64_t v64 = v154;
      uint64_t v63 = v155;
      uint64_t v65 = v157;
      (*(void (**)(char *, void, uint64_t))(v155 + 104))( v154,  enum case for TypeOfIntent.switchNewsPreference(_:),  v157);
      uint64_t v66 = enum case for ActivityType.failed(_:);
      uint64_t v67 = type metadata accessor for ActivityType(0LL);
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v69 = (uint64_t)v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 104))(v156, v66, v67);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v69, 0LL, 1LL, v67);
      uint64_t v70 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v71 = (uint64_t)v158;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))(v158, 1LL, 1LL, v70);
      uint64_t v72 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v73 = (uint64_t)v159;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v159, 1LL, 1LL, v72);
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v64,  v69,  v71,  v73,  v162,  v61,  v62,  v153);
      swift_bridgeObjectRelease(v61);
      sub_1F6CC(v73, &qword_2845A0);
      sub_1F6CC(v71, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v69, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
      sub_1A398C(v160, v161);
      return (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v136, v138);
    }

    else
    {
      uint64_t v102 = v146;
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v146, v26, v43);
      uint64_t v103 = v139;
      uint64_t v104 = v162;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v105 = sub_6960(v103, (uint64_t)qword_2969C8);
      uint64_t v106 = v145;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v145, v105, v103);
      uint64_t v107 = v140;
      uint64_t v108 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 16))(v140, v102, v43);
      uint64_t v109 = (os_log_s *)Logger.logObject.getter(v108);
      os_log_type_t v110 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v109, v110))
      {
        uint64_t v111 = v107;
        uint64_t v112 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v113 = swift_slowAlloc(32LL, -1LL);
        uint64_t v165 = v113;
        *(_DWORD *)uint64_t v112 = 136315138;
        uint64_t v114 = URL.debugDescription.getter();
        unint64_t v116 = v115;
        uint64_t v164 = sub_6978(v114, v115, &v165);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        __n128 v117 = swift_bridgeObjectRelease(v116);
        uint64_t v159 = *(char **)(v27 + 8);
        ((void (*)(char *, uint64_t, __n128))v159)(v111, v147, v117);
        _os_log_impl( &dword_0,  v109,  v110,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference setPodcastNewsPreferenceURL: %s",  v112,  0xCu);
        swift_arrayDestroy(v113, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v113, -1LL, -1LL);
        swift_slowDealloc(v112, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v162 + 8))(v145, v139);
      }

      else
      {
        uint64_t v159 = *(char **)(v27 + 8);
        ((void (*)(char *, uint64_t))v159)(v107, v43);

        (*(void (**)(char *, uint64_t))(v104 + 8))(v106, v103);
      }

      uint64_t v118 = v134;
      if (qword_2838D0 != -1) {
        swift_once(&qword_2838D0, sub_1362AC);
      }
      id v119 = (id)qword_296AA0;
      uint64_t v120 = v143;
      OSSignpostID.init(log:)(v119);
      uint64_t v121 = v144;
      uint64_t v122 = v142;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v142, v120, v118);
      uint64_t v123 = *(unsigned __int8 *)(v121 + 80);
      uint64_t v124 = (v123 + 33) & ~v123;
      unint64_t v125 = (v14 + v124 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v126 = swift_allocObject(&unk_273B38, v125 + 16, v123 | 7);
      *(void *)(v126 + swift_weakDestroy(v0 + 16) = "switchNewsSourcePreferenceMediaAPICall";
      *(void *)(v126 + 2sub_6C3C(v0 + 4) = 38LL;
      *(_BYTE *)(v126 + 3sub_6C3C(v0 + 2) = 2;
      (*(void (**)(uint64_t, char *, uint64_t))(v121 + 32))(v126 + v124, v122, v118);
      id v127 = (void *)(v126 + v125);
      uint64_t v128 = v161;
      *id v127 = v160;
      v127[1] = v128;
      uint64_t v129 = swift_retain(v128);
      uint64_t v130 = static os_signpost_type_t.begin.getter(v129);
      os_signpost(_:dso:log:name:signpostID:)( v130,  &dword_0,  qword_296AA0,  "switchNewsSourcePreferenceMediaAPICall",  38LL,  2LL,  v120);
      uint64_t v131 = swift_allocObject(&unk_273B60, 32LL, 7LL);
      *(void *)(v131 + swift_weakDestroy(v0 + 16) = sub_1A8950;
      *(void *)(v131 + 2sub_6C3C(v0 + 4) = v126;
      swift_retain(v126);
      uint64_t v132 = v146;
      sub_19FE60((uint64_t)sub_D477C, v131, v163, v146);
      swift_release(v126);
      swift_release(v131);
      (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v118);
      (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v138);
      return ((uint64_t (*)(uint64_t, uint64_t))v159)(v132, v147);
    }
  }

  else
  {
    if (qword_283888 != -1) {
      swift_once(&qword_283888, sub_BFC5C);
    }
    uint64_t v75 = sub_6960(v17, (uint64_t)qword_2969C8);
    uint64_t v76 = v162;
    uint64_t v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v162 + 16))(v20, v75, v17);
    uint64_t v78 = (os_log_s *)Logger.logObject.getter(v77);
    os_log_type_t v79 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v80 = 0;
      _os_log_impl( &dword_0,  v78,  v79,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference did not receive correct podcast metadata. Cannot make Media API call.",  v80,  2u);
      swift_slowDealloc(v80, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v17);
    uint64_t v82 = v148;
    uint64_t v81 = v149;
    uint64_t v83 = v152;
    (*(void (**)(char *, void, uint64_t))(v149 + 104))( v148,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v152);
    uint64_t v85 = v150;
    uint64_t v84 = v151;
    uint64_t v86 = v153;
    (*(void (**)(char *, void, uint64_t))(v151 + 104))( v150,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v153);
    uint64_t v162 = static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v82,  v85,  0xD00000000000003BLL,  0x8000000000222920LL,  0LL,  1LL);
    uint64_t v88 = v87;
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v86);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
    uint64_t v89 = (void *)(v3
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
    uint64_t v90 = *(void *)(v3
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v153 = v89[4];
    sub_6EA8(v89, v90);
    uint64_t v92 = v154;
    uint64_t v91 = v155;
    uint64_t v93 = v157;
    (*(void (**)(char *, void, uint64_t))(v155 + 104))( v154,  enum case for TypeOfIntent.switchNewsPreference(_:),  v157);
    uint64_t v94 = enum case for ActivityType.failed(_:);
    uint64_t v95 = type metadata accessor for ActivityType(0LL);
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t v97 = (uint64_t)v156;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 104))(v156, v94, v95);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v97, 0LL, 1LL, v95);
    uint64_t v98 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v99 = (uint64_t)v158;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56LL))(v158, 1LL, 1LL, v98);
    uint64_t v100 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v101 = (uint64_t)v159;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56LL))(v159, 1LL, 1LL, v100);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v92,  v97,  v99,  v101,  v162,  v88,  v90,  v153);
    swift_bridgeObjectRelease(v88);
    sub_1F6CC(v101, &qword_2845A0);
    sub_1F6CC(v99, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v97, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
    return sub_1A398C(v160, v161);
  }

uint64_t sub_19FE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v52 = a3;
  uint64_t v56 = a1;
  uint64_t v57 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v55 = v5;
  __chkstk_darwin(v4);
  os_log_type_t v53 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v51 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v51 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v51);
  char v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = dispatch_group_create();
  uint64_t v18 = static DispatchQoS.userInteractive.getter(v17);
  static OS_dispatch_queue.Attributes.concurrent.getter(v18);
  id v58 = (id)static DispatchQueues.queue(_:qos:attributes:)(0xD000000000000060LL, 0x8000000000222A00LL, v16, v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v14 + 8);
  v59(v16, v13);
  uint64_t v19 = swift_allocObject(&unk_273B88, 32LL, 7LL);
  uint64_t v48 = v19;
  *(void *)(v19 + swift_weakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(v19 + 2sub_6C3C(v0 + 4) = 1;
  dispatch_group_enter(v17);
  uint64_t v20 = v49;
  unint64_t v21 = v51;
  (*(void (**)(char *, uint64_t, unint64_t))(v7 + 16))(v49, v50, v51);
  uint64_t v22 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v23 = (v22 + 24) & ~v22;
  unint64_t v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v26 = swift_allocObject(&unk_273BB0, v25 + 8, v22 | 7);
  uint64_t v27 = v52;
  *(void *)(v26 + swift_weakDestroy(v0 + 16) = v52;
  (*(void (**)(uint64_t, char *, unint64_t))(v7 + 32))(v26 + v23, v20, v21);
  uint64_t v28 = v48;
  *(void *)(v26 + v2sub_6C3C(v0 + 4) = v48;
  uint64_t v29 = v17;
  *(void *)(v26 + vsub_6C3C(v0 + 25) = v17;
  uint64_t v66 = sub_1A8A5C;
  uint64_t v67 = (void *)v26;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256LL;
  uint64_t v64 = sub_6E7C;
  uint64_t v65 = &unk_273BC8;
  uint64_t v30 = _Block_copy(&aBlock);
  uint64_t v31 = v29;
  char v49 = (char *)v31;
  uint64_t v32 = v27;
  swift_retain(v27);
  uint64_t v33 = swift_retain(v28);
  static DispatchQoS.unspecified.getter(v33);
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_10430( (unint64_t *)&qword_287940,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v34 = sub_6C5C(&qword_285480);
  uint64_t v50 = v34;
  unint64_t v51 = sub_21358();
  uint64_t v36 = v53;
  uint64_t v35 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v34);
  OS_dispatch_queue.async(group:qos:flags:execute:)(v29, v16, v36, v30);
  _Block_release(v30);

  unint64_t v37 = *(void (**)(char *, uint64_t))(v55 + 8);
  v37(v36, v35);
  v59(v16, v60);
  swift_release(v67);
  sub_1641C(0LL, (unint64_t *)&qword_287938, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v39 = (void *)static OS_dispatch_queue.main.getter(v38);
  uint64_t v40 = (void *)swift_allocObject(&unk_273C00, 48LL, 7LL);
  v40[2] = v28;
  void v40[3] = v32;
  uint64_t v41 = v57;
  v40[4] = v56;
  void v40[5] = v41;
  uint64_t v66 = sub_1A8AE0;
  uint64_t v67 = v40;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256LL;
  uint64_t v64 = sub_6E7C;
  uint64_t v65 = &unk_273C18;
  uint64_t v42 = _Block_copy(&aBlock);
  swift_retain(v32);
  swift_retain(v28);
  uint64_t v43 = swift_retain(v41);
  static DispatchQoS.unspecified.getter(v43);
  uint64_t v61 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v50);
  uint64_t v44 = v49;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v16, v36, v39, v42);
  _Block_release(v42);

  v37(v36, v35);
  v59(v16, v60);
  uint64_t v45 = v67;
  swift_release(v28);
  return swift_release(v45);
}

uint64_t sub_1A0300(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_6C5C(&qword_284628);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (void *)(a1
                 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_appleMediaServicesProvider);
  uint64_t v12 = *(void *)(a1
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_appleMediaServicesProvider
                  + 24);
  uint64_t v13 = v11[4];
  sub_6EA8(v11, v12);
  uint64_t v14 = type metadata accessor for URL(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0LL, 1LL, v14);
  uint64_t v16 = swift_allocObject(&unk_273C50, 32LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v16 + 2sub_6C3C(v0 + 4) = a4;
  swift_retain(a3);
  id v17 = a4;
  dispatch thunk of AppleMediaServicesProviding.makeMediaAPICall(url:profile:profileVersion:completion:)( v10,  0x7374736163646F50LL,  0xE800000000000000LL,  49LL,  0xE100000000000000LL,  sub_1A8B18,  v16,  v12,  v13);
  swift_release(v16);
  return sub_1F6CC((uint64_t)v10, &qword_284628);
}

uint64_t sub_1A045C(_BYTE *a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v385 = a3;
  uint64_t v386 = a4;
  uint64_t v388 = a2;
  uint64_t v361 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v360 = *(void *)(v361 - 8);
  __chkstk_darwin(v361);
  char v359 = (char *)&v351 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_6C5C(&qword_2845A0);
  __chkstk_darwin(v6);
  char v379 = (char *)&v351 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_6C5C((uint64_t *)&unk_286BD0);
  __chkstk_darwin(v8);
  uint64_t v380 = (char *)&v351 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6C5C(&qword_2845A8);
  __chkstk_darwin(v10);
  uint64_t v381 = (char *)&v351 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v384 = type metadata accessor for TypeOfIntent(0LL);
  uint64_t v382 = *(void *)(v384 - 8);
  __chkstk_darwin(v384);
  uint64_t v383 = (char *)&v351 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v375 = type metadata accessor for AdditionalMetricsDescription.SourceFunction(0LL);
  uint64_t v373 = *(void *)(v375 - 8);
  __chkstk_darwin(v375);
  uint64_t v374 = (char *)&v351 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v378 = type metadata accessor for AdditionalMetricsDescription.ModuleName(0LL);
  uint64_t v376 = *(void *)(v378 - 8);
  __chkstk_darwin(v378);
  uint64_t v377 = (char *)&v351 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_6C5C(&qword_285BD0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v353 = (uint64_t)&v351 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v358 = (uint64_t)&v351 - v18;
  uint64_t v362 = type metadata accessor for Input(0LL);
  uint64_t v366 = *(void *)(v362 - 8);
  uint64_t v19 = __chkstk_darwin(v362);
  uint64_t v354 = (uint64_t)&v351 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v371 = (char *)&v351 - v21;
  uint64_t v22 = sub_6C5C(&qword_28C8D8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v368 = (void **)((char *)&v351 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v23);
  uint64_t v372 = (uint64_t)&v351 - v25;
  uint64_t v26 = type metadata accessor for Logger(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v365 = (char *)&v351 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v357 = (char *)&v351 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v356 = (char *)&v351 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v364 = (char *)&v351 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v370 = (char *)&v351 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v367 = (char *)&v351 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v351 = (char *)&v351 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v352 = (char *)&v351 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v355 = (char *)&v351 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v363 = (char *)&v351 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v369 = (char *)&v351 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v52 = (char *)&v351 - v51;
  __chkstk_darwin(v50);
  uint64_t v54 = (char *)&v351 - v53;
  uint64_t v387 = a1;
  uint64_t v55 = a1 + 16;
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v56 = sub_6960(v26, (uint64_t)qword_2969C8);
  uint64_t v57 = v26;
  id v58 = *(uint64_t (**)(char *))(v27 + 16);
  uint64_t v59 = v58(v54);
  uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
  os_log_type_t v61 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v62 = 0;
    _os_log_impl( &dword_0,  v60,  v61,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Completed Media API Call, checking response code.",  v62,  2u);
    swift_slowDealloc(v62, -1LL, -1LL);
  }

  uint64_t v63 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v64 = v57;
  v63(v54, v57);
  swift_beginAccess(v55, v392, 0LL, 0LL);
  if (v387[24] == 1)
  {
    uint64_t v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v52, v56, v57);
    uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
    os_log_type_t v67 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl( &dword_0,  v66,  v67,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Got back no response code from Media API call. Erroring out.",  v68,  2u);
      swift_slowDealloc(v68, -1LL, -1LL);
    }

    v63(v52, v57);
    uint64_t v69 = v376;
    uint64_t v71 = v377;
    uint64_t v70 = v378;
    (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
    uint64_t v72 = v373;
    uint64_t v73 = v374;
    uint64_t v74 = v375;
    (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v375);
    uint64_t v387 = (_BYTE *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v71,  v73,  0xD00000000000002DLL,  0x8000000000222A70LL,  0LL,  1LL);
    uint64_t v76 = v75;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v70);
    uint64_t v77 = *(void *)(v388
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                    + 24);
    uint64_t v378 = *(void *)(v388
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 32);
    sub_6EA8( (void *)(v388 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v77);
    uint64_t v78 = v382;
    os_log_type_t v79 = v383;
    uint64_t v80 = v384;
    (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
    uint64_t v81 = enum case for ActivityType.failed(_:);
    uint64_t v82 = type metadata accessor for ActivityType(0LL);
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v84 = (uint64_t)v381;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 104))(v381, v81, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0LL, 1LL, v82);
    uint64_t v85 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v86 = (uint64_t)v380;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56LL))(v380, 1LL, 1LL, v85);
    uint64_t v87 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v88 = (uint64_t)v379;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56LL))(v379, 1LL, 1LL, v87);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v79,  v84,  v86,  v88,  v387,  v76,  v77,  v378);
    swift_bridgeObjectRelease(v76);
    sub_1F6CC(v88, &qword_2845A0);
    sub_1F6CC(v86, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v84, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
    return sub_1A398C((uint64_t)v385, v386);
  }

  uint64_t v90 = *((void *)v387 + 2);
  uint64_t v91 = v56;
  if ((unint64_t)(v90 - 300) >= 0xFFFFFFFFFFFFFF9CLL)
  {
    unint64_t v116 = v369;
    uint64_t v117 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v369, v56, v64);
    uint64_t v118 = (os_log_s *)Logger.logObject.getter(v117);
    os_log_type_t v119 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v120 = 0;
      _os_log_impl( &dword_0,  v118,  v119,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Successfully set news preference, initiating playback.",  v120,  2u);
      swift_slowDealloc(v120, -1LL, -1LL);
    }

    v63(v116, v64);
    uint64_t v121 = v388;
    uint64_t v122 = v388 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse;
    swift_beginAccess( v388 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse,  &v390,  0LL,  0LL);
    uint64_t v123 = v372;
    sub_FF10(v122, v372, &qword_28C8D8);
    uint64_t v124 = type metadata accessor for Parse(0LL);
    uint64_t v125 = *(void *)(v124 - 8);
    int v126 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v123, 1LL, v124);
    id v127 = v371;
    if (v126 == 1) {
      goto LABEL_19;
    }
    uint64_t v186 = v368;
    sub_FF10(v372, (uint64_t)v368, &qword_28C8D8);
    int v187 = (*(uint64_t (**)(void **, uint64_t))(v125 + 88))(v186, v124);
    if (v187 != enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      uint64_t v226 = v366;
      if (v187 != enum case for Parse.pommesResponse(_:))
      {
        (*(void (**)(void **, uint64_t))(v125 + 8))(v186, v124);
LABEL_19:
        uint64_t v128 = v367;
        uint64_t v129 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v367, v91, v64);
        uint64_t v130 = (os_log_s *)Logger.logObject.getter(v129);
        os_log_type_t v131 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v130, v131))
        {
          uint64_t v132 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v132 = 0;
          _os_log_impl( &dword_0,  v130,  v131,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Unexpected parse type.",  v132,  2u);
          uint64_t v133 = v132;
          uint64_t v121 = v388;
          swift_slowDealloc(v133, -1LL, -1LL);
        }

        v63(v128, v64);
        uint64_t v134 = v376;
        uint64_t v136 = v377;
        uint64_t v135 = v378;
        (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
        uint64_t v137 = v373;
        uint64_t v138 = v374;
        uint64_t v139 = v375;
        (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v375);
        uint64_t v387 = (_BYTE *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v136,  v138,  0xD000000000000016LL,  0x8000000000222AA0LL,  0LL,  1LL);
        uint64_t v141 = v140;
        (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v139);
        (*(void (**)(char *, uint64_t))(v134 + 8))(v136, v135);
        uint64_t v142 = (void *)(v121
                        + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
        uint64_t v143 = *(void *)(v121
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                         + 24);
        uint64_t v378 = v142[4];
        sub_6EA8(v142, v143);
        uint64_t v144 = v382;
        uint64_t v145 = v383;
        uint64_t v146 = v384;
        (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
        uint64_t v147 = enum case for ActivityType.failed(_:);
        uint64_t v148 = type metadata accessor for ActivityType(0LL);
        uint64_t v149 = *(void *)(v148 - 8);
        uint64_t v150 = (uint64_t)v381;
        (*(void (**)(char *, uint64_t, uint64_t))(v149 + 104))(v381, v147, v148);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v149 + 56))(v150, 0LL, 1LL, v148);
        uint64_t v151 = type metadata accessor for TemplatingResult(0LL);
        uint64_t v152 = (uint64_t)v380;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56LL))(v380, 1LL, 1LL, v151);
        uint64_t v153 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v154 = (uint64_t)v379;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56LL))(v379, 1LL, 1LL, v153);
        dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v145,  v150,  v152,  v154,  v387,  v141,  v143,  v378);
        swift_bridgeObjectRelease(v141);
        sub_1F6CC(v154, &qword_2845A0);
        sub_1F6CC(v152, (uint64_t *)&unk_286BD0);
        sub_1F6CC(v150, &qword_2845A8);
        (*(void (**)(char *, uint64_t))(v144 + 8))(v145, v146);
        sub_1A3C34((uint64_t)v385, v386);
        return sub_1F6CC(v372, &qword_28C8D8);
      }

      (*(void (**)(void **, uint64_t))(v125 + 96))(v186, v124);
      uint64_t v227 = *v186;
      uint64_t v228 = v352;
      uint64_t v229 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v352, v91, v64);
      uint64_t v230 = (os_log_s *)Logger.logObject.getter(v229);
      os_log_type_t v231 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v230, v231))
      {
        uint64_t v232 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v232 = 0;
        _os_log_impl( &dword_0,  v230,  v231,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference received .pommesResponse parse.",  v232,  2u);
        uint64_t v233 = v232;
        uint64_t v121 = v388;
        swift_slowDealloc(v233, -1LL, -1LL);
      }

      v63(v228, v64);
      uint64_t v234 = v121 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input;
      swift_beginAccess( v121 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input,  &v389,  0LL,  0LL);
      uint64_t v235 = v353;
      sub_FF10(v234, v353, &qword_285BD0);
      uint64_t v236 = v362;
      int v237 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v235, 1LL, v362);
      uint64_t v238 = v354;
      uint64_t v387 = v227;
      if (v237 == 1)
      {
        sub_1F6CC(v235, &qword_285BD0);
      }

      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))(v354, v235, v236);
        uint64_t v267 = sub_10470();
        if (v267)
        {
          uint64_t v268 = (void *)v267;
          id v269 = [objc_allocWithZone(INPlayMediaIntent) init];
          uint64_t v270 = dispatch thunk of PommesResponse.clientResults.getter();
          uint64_t v371 = (char *)sub_170254(v268, v270);

          swift_bridgeObjectRelease(v270);
          uint64_t v271 = v376;
          uint64_t v273 = v377;
          uint64_t v272 = v378;
          (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
          uint64_t v274 = v373;
          unint64_t v275 = v374;
          uint64_t v276 = v375;
          (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.successfulSwitchPreference(_:),  v375);
          uint64_t v370 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v273,  v275,  0xD00000000000003BLL,  0x8000000000222AE0LL,  0LL,  1LL);
          uint64_t v278 = v277;
          (*(void (**)(char *, uint64_t))(v274 + 8))(v275, v276);
          (*(void (**)(char *, uint64_t))(v271 + 8))(v273, v272);
          uint64_t v279 = (void *)(v388
                          + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
          uint64_t v280 = *(void *)(v388
                           + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                           + 24);
          uint64_t v388 = *(void *)(v388
                           + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                           + 32);
          sub_6EA8(v279, v280);
          uint64_t v281 = v382;
          uint64_t v282 = v383;
          uint64_t v283 = v384;
          (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
          uint64_t v284 = enum case for ActivityType.completed(_:);
          uint64_t v285 = type metadata accessor for ActivityType(0LL);
          uint64_t v286 = *(void *)(v285 - 8);
          uint64_t v287 = (uint64_t)v381;
          (*(void (**)(char *, uint64_t, uint64_t))(v286 + 104))(v381, v284, v285);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v286 + 56))(v287, 0LL, 1LL, v285);
          uint64_t v288 = type metadata accessor for TemplatingResult(0LL);
          uint64_t v289 = (uint64_t)v380;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v288 - 8) + 56LL))( v380,  1LL,  1LL,  v288);
          uint64_t v290 = type metadata accessor for SiriKitReliabilityCodes(0LL);
          uint64_t v291 = (uint64_t)v379;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v290 - 8) + 56LL))( v379,  1LL,  1LL,  v290);
          dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v282,  v287,  v289,  v291,  v370,  v278,  v280,  v388);
          swift_bridgeObjectRelease(v278);
          sub_1F6CC(v291, &qword_2845A0);
          sub_1F6CC(v289, (uint64_t *)&unk_286BD0);
          sub_1F6CC(v287, &qword_2845A8);
          (*(void (**)(char *, uint64_t))(v281 + 8))(v282, v283);
          uint64_t v292 = v354;
          uint64_t v293 = v371;
          uint64_t v294 = sub_111180(v354, v371);
          uint64_t v295 = v359;
          static ExecuteResponse.complete(next:)(v294);
          v385(v295);

          swift_release(v294);
          (*(void (**)(char *, uint64_t))(v360 + 8))(v295, v361);
          (*(void (**)(uint64_t, uint64_t))(v366 + 8))(v292, v362);
          return sub_1F6CC(v372, &qword_28C8D8);
        }

        (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v238, v236);
        uint64_t v121 = v388;
      }

      uint64_t v324 = v351;
      uint64_t v325 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v351, v91, v64);
      uint64_t v326 = (os_log_s *)Logger.logObject.getter(v325);
      os_log_type_t v327 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v326, v327))
      {
        id v328 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)id v328 = 0;
        _os_log_impl( &dword_0,  v326,  v327,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Failed to build playMediaIntent.",  v328,  2u);
        uint64_t v329 = v328;
        uint64_t v121 = v388;
        swift_slowDealloc(v329, -1LL, -1LL);
      }

      v63(v324, v64);
      uint64_t v330 = v376;
      uint64_t v332 = v377;
      uint64_t v331 = v378;
      (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
      uint64_t v333 = v373;
      uint64_t v334 = v374;
      uint64_t v335 = v375;
      (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v375);
      uint64_t v371 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v332,  v334,  0xD00000000000001FLL,  0x8000000000222AC0LL,  0LL,  1LL);
      uint64_t v337 = v336;
      (*(void (**)(char *, uint64_t))(v333 + 8))(v334, v335);
      (*(void (**)(char *, uint64_t))(v330 + 8))(v332, v331);
      uint64_t v338 = (void *)(v121
                      + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
      uint64_t v339 = *(void *)(v121
                       + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                       + 24);
      uint64_t v378 = v338[4];
      sub_6EA8(v338, v339);
      uint64_t v340 = v382;
      double v341 = v383;
      uint64_t v342 = v384;
      (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
      uint64_t v343 = enum case for ActivityType.failed(_:);
      uint64_t v344 = type metadata accessor for ActivityType(0LL);
      uint64_t v345 = *(void *)(v344 - 8);
      uint64_t v346 = (uint64_t)v381;
      (*(void (**)(char *, uint64_t, uint64_t))(v345 + 104))(v381, v343, v344);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v345 + 56))(v346, 0LL, 1LL, v344);
      uint64_t v347 = type metadata accessor for TemplatingResult(0LL);
      uint64_t v348 = (uint64_t)v380;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v347 - 8) + 56LL))(v380, 1LL, 1LL, v347);
      uint64_t v349 = type metadata accessor for SiriKitReliabilityCodes(0LL);
      uint64_t v350 = (uint64_t)v379;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v349 - 8) + 56LL))(v379, 1LL, 1LL, v349);
      dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v341,  v346,  v348,  v350,  v371,  v337,  v339,  v378);
      swift_bridgeObjectRelease(v337);
      sub_1F6CC(v350, &qword_2845A0);
      sub_1F6CC(v348, (uint64_t *)&unk_286BD0);
      sub_1F6CC(v346, &qword_2845A8);
      (*(void (**)(char *, uint64_t))(v340 + 8))(v341, v342);
      sub_1A3C34((uint64_t)v385, v386);

      return sub_1F6CC(v372, &qword_28C8D8);
    }

    (*(void (**)(void **, uint64_t))(v125 + 96))(v186, v124);
    uint64_t v387 = *(void **)((char *)v186 + *(int *)(sub_6C5C(&qword_284618) + 48));
    uint64_t v188 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v363, v91, v64);
    os_log_type_t v189 = (os_log_s *)Logger.logObject.getter(v188);
    os_log_type_t v190 = static os_log_type_t.debug.getter();
    BOOL v191 = os_log_type_enabled(v189, v190);
    uint64_t v192 = v366;
    if (v191)
    {
      uint64_t v193 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v193 = 0;
      _os_log_impl( &dword_0,  v189,  v190,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference received .NLv3IntentPlusServerConversion parse.",  v193,  2u);
      __int128 v194 = v193;
      uint64_t v121 = v388;
      swift_slowDealloc(v194, -1LL, -1LL);
    }

    v63(v363, v64);
    uint64_t v195 = v121 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input;
    swift_beginAccess( v121 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_input,  &v389,  0LL,  0LL);
    uint64_t v196 = v358;
    sub_FF10(v195, v358, &qword_285BD0);
    uint64_t v197 = v362;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v192 + 48))(v196, 1LL, v362) == 1)
    {
      sub_1F6CC(v196, &qword_285BD0);
    }

    else
    {
      uint64_t v239 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v192 + 32))(v127, v196, v197);
      uint64_t v240 = (char *)Parse.ServerConversion.siriKitIntent.getter(v239);
      uint64_t v241 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      uint64_t v242 = (char *)swift_dynamicCastObjCClass(v240, v241);
      if (v242)
      {
        uint64_t v243 = v376;
        uint64_t v244 = *(void (**)(char *, void, uint64_t))(v376 + 104);
        uint64_t v370 = v240;
        uint64_t v245 = v377;
        uint64_t v369 = v242;
        uint64_t v246 = v378;
        v244(v377, enum case for AdditionalMetricsDescription.ModuleName.snspf(_:), v378);
        uint64_t v247 = v373;
        uint64_t v248 = v374;
        uint64_t v249 = v375;
        (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.successfulSwitchPreference(_:),  v375);
        uint64_t v367 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v245,  v248,  0xD00000000000003BLL,  0x8000000000222AE0LL,  0LL,  1LL);
        uint64_t v251 = v250;
        (*(void (**)(char *, uint64_t))(v247 + 8))(v248, v249);
        (*(void (**)(char *, uint64_t))(v243 + 8))(v245, v246);
        uint64_t v252 = *(void *)(v121
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                         + 24);
        uint64_t v388 = *(void *)(v121
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                         + 32);
        sub_6EA8( (void *)(v121 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider),  v252);
        uint64_t v254 = v382;
        uint64_t v253 = v383;
        uint64_t v255 = v384;
        (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
        uint64_t v256 = enum case for ActivityType.completed(_:);
        uint64_t v257 = type metadata accessor for ActivityType(0LL);
        uint64_t v258 = *(void *)(v257 - 8);
        uint64_t v259 = (uint64_t)v381;
        (*(void (**)(char *, uint64_t, uint64_t))(v258 + 104))(v381, v256, v257);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v258 + 56))(v259, 0LL, 1LL, v257);
        uint64_t v260 = type metadata accessor for TemplatingResult(0LL);
        uint64_t v261 = (uint64_t)v380;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v260 - 8) + 56LL))(v380, 1LL, 1LL, v260);
        uint64_t v262 = type metadata accessor for SiriKitReliabilityCodes(0LL);
        uint64_t v263 = (uint64_t)v379;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v262 - 8) + 56LL))(v379, 1LL, 1LL, v262);
        dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v253,  v259,  v261,  v263,  v367,  v251,  v252,  v388);
        swift_bridgeObjectRelease(v251);
        sub_1F6CC(v263, &qword_2845A0);
        sub_1F6CC(v261, (uint64_t *)&unk_286BD0);
        sub_1F6CC(v259, &qword_2845A8);
        (*(void (**)(char *, uint64_t))(v254 + 8))(v253, v255);
        unsigned int v264 = v371;
        uint64_t v265 = sub_111180((uint64_t)v371, v369);
        uint64_t v266 = v359;
        static ExecuteResponse.complete(next:)(v265);
        v385(v266);
        swift_release(v387);

        swift_release(v265);
        (*(void (**)(char *, uint64_t))(v360 + 8))(v266, v361);
        (*(void (**)(char *, uint64_t))(v366 + 8))(v264, v362);
LABEL_51:
        uint64_t v323 = type metadata accessor for NLIntent(0LL);
        (*(void (**)(void **, uint64_t))(*(void *)(v323 - 8) + 8LL))(v368, v323);
        return sub_1F6CC(v372, &qword_28C8D8);
      }

      (*(void (**)(char *, uint64_t))(v192 + 8))(v127, v197);
    }

    uint64_t v296 = v355;
    uint64_t v297 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v355, v91, v64);
    uint64_t v298 = (os_log_s *)Logger.logObject.getter(v297);
    os_log_type_t v299 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v298, v299))
    {
      uint64_t v300 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v300 = 0;
      _os_log_impl( &dword_0,  v298,  v299,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Failed to build playMediaIntent.",  v300,  2u);
      uint64_t v301 = v300;
      uint64_t v121 = v388;
      swift_slowDealloc(v301, -1LL, -1LL);
    }

    v63(v296, v64);
    uint64_t v302 = v376;
    uint64_t v304 = v377;
    uint64_t v303 = v378;
    (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
    uint64_t v305 = v373;
    uint64_t v306 = v374;
    uint64_t v307 = v375;
    (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v375);
    uint64_t v371 = (char *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v304,  v306,  0xD00000000000001FLL,  0x8000000000222AC0LL,  0LL,  1LL);
    uint64_t v309 = v308;
    (*(void (**)(char *, uint64_t))(v305 + 8))(v306, v307);
    (*(void (**)(char *, uint64_t))(v302 + 8))(v304, v303);
    uint64_t v310 = (void *)(v121
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
    uint64_t v311 = *(void *)(v121
                     + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                     + 24);
    uint64_t v378 = v310[4];
    sub_6EA8(v310, v311);
    uint64_t v312 = v382;
    uint64_t v313 = v383;
    uint64_t v314 = v384;
    (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
    uint64_t v315 = enum case for ActivityType.failed(_:);
    uint64_t v316 = type metadata accessor for ActivityType(0LL);
    uint64_t v317 = *(void *)(v316 - 8);
    uint64_t v318 = (uint64_t)v381;
    (*(void (**)(char *, uint64_t, uint64_t))(v317 + 104))(v381, v315, v316);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v317 + 56))(v318, 0LL, 1LL, v316);
    uint64_t v319 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v320 = (uint64_t)v380;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v319 - 8) + 56LL))(v380, 1LL, 1LL, v319);
    uint64_t v321 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v322 = (uint64_t)v379;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v321 - 8) + 56LL))(v379, 1LL, 1LL, v321);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v313,  v318,  v320,  v322,  v371,  v309,  v311,  v378);
    swift_bridgeObjectRelease(v309);
    sub_1F6CC(v322, &qword_2845A0);
    sub_1F6CC(v320, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v318, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v312 + 8))(v313, v314);
    sub_1A3C34((uint64_t)v385, v386);
    swift_release(v387);
    goto LABEL_51;
  }

  uint64_t v92 = v370;
  uint64_t v93 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v370, v56, v64);
  uint64_t v94 = (os_log_s *)Logger.logObject.getter(v93);
  os_log_type_t v95 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v96 = 134217984;
    uint64_t v390 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v390, &v391);
    _os_log_impl( &dword_0,  v94,  v95,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Media API call returned unsuccessful statusCode: %ld",  v96,  0xCu);
    swift_slowDealloc(v96, -1LL, -1LL);
  }

  v63(v92, v64);
  if ((unint64_t)(v90 - 600) < 0xFFFFFFFFFFFFFF9CLL)
  {
    uint64_t v97 = v365;
    uint64_t v98 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v365, v91, v64);
    uint64_t v99 = (os_log_s *)Logger.logObject.getter(v98);
    os_log_type_t v100 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v101 = 134217984;
      uint64_t v390 = v90;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v390, &v391);
      _os_log_impl( &dword_0,  v99,  v100,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Media API call returned %ld, will not attempt a retry an d log this as a failure.",  v101,  0xCu);
      swift_slowDealloc(v101, -1LL, -1LL);
    }

    v63(v97, v64);
    uint64_t v102 = v376;
    uint64_t v104 = v377;
    uint64_t v103 = v378;
    (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
    uint64_t v105 = v373;
    uint64_t v106 = v374;
    uint64_t v107 = v375;
    (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v375);
    uint64_t v390 = 0LL;
    unint64_t v391 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(38LL);
    swift_bridgeObjectRelease(v391);
    uint64_t v390 = 0x6465766965636552LL;
    unint64_t v391 = 0xE900000000000020LL;
    uint64_t v389 = v90;
    v108._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    object = v108._object;
    String.append(_:)(v108);
    swift_bridgeObjectRelease(object);
    v110._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v110._object = (void *)0x8000000000222B90LL;
    String.append(_:)(v110);
    unint64_t v111 = v391;
    uint64_t v387 = (_BYTE *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v104,  v106,  v390,  v391,  0LL,  1LL);
    uint64_t v113 = v112;
    __n128 v114 = swift_bridgeObjectRelease(v111);
    (*(void (**)(char *, uint64_t, __n128))(v105 + 8))(v106, v107, v114);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v103);
    unint64_t v115 = (void *)(v388
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
LABEL_28:
    uint64_t v174 = v115[3];
    uint64_t v378 = v115[4];
    sub_6EA8(v115, v174);
    uint64_t v175 = v382;
    uint64_t v176 = v383;
    uint64_t v177 = v384;
    (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
    uint64_t v178 = enum case for ActivityType.failed(_:);
    uint64_t v179 = type metadata accessor for ActivityType(0LL);
    uint64_t v180 = *(void *)(v179 - 8);
    uint64_t v181 = (uint64_t)v381;
    (*(void (**)(char *, uint64_t, uint64_t))(v180 + 104))(v381, v178, v179);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v180 + 56))(v181, 0LL, 1LL, v179);
    uint64_t v182 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v183 = (uint64_t)v380;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56LL))(v380, 1LL, 1LL, v182);
    uint64_t v184 = type metadata accessor for SiriKitReliabilityCodes(0LL);
    uint64_t v185 = (uint64_t)v379;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56LL))(v379, 1LL, 1LL, v184);
    dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v176,  v181,  v183,  v185,  v387,  v113,  v174,  v378);
    swift_bridgeObjectRelease(v113);
    sub_1F6CC(v185, &qword_2845A0);
    sub_1F6CC(v183, (uint64_t *)&unk_286BD0);
    sub_1F6CC(v181, &qword_2845A8);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v176, v177);
    return sub_1A28A0((uint64_t)v385, v386);
  }

  uint64_t v155 = v364;
  uint64_t v156 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v364, v91, v64);
  uint64_t v157 = (os_log_s *)Logger.logObject.getter(v156);
  os_log_type_t v158 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v157, v158))
  {
    uint64_t v159 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v159 = 134217984;
    uint64_t v390 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v390, &v391);
    _os_log_impl( &dword_0,  v157,  v158,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Media API call returned %ld, will attempt a retry if we ha ven't already done so once.",  v159,  0xCu);
    swift_slowDealloc(v159, -1LL, -1LL);
  }

  v63(v155, v64);
  uint64_t v160 = v388;
  if ((*(_BYTE *)(v388 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_httpCallAttemptState) & 1) != 0)
  {
    uint64_t v161 = v357;
    uint64_t v162 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v357, v91, v64);
    uint64_t v163 = (os_log_s *)Logger.logObject.getter(v162);
    os_log_type_t v164 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v165 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v165 = 0;
      _os_log_impl( &dword_0,  v163,  v164,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Already attempted a retry of Media API call, will not do so again.",  v165,  2u);
      uint64_t v166 = v165;
      uint64_t v160 = v388;
      swift_slowDealloc(v166, -1LL, -1LL);
    }

    v63(v161, v64);
    uint64_t v167 = v376;
    uint64_t v169 = v377;
    uint64_t v168 = v378;
    (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
    uint64_t v170 = v373;
    uint64_t v171 = v374;
    uint64_t v172 = v375;
    (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.cannotSwitchPreference(_:),  v375);
    uint64_t v387 = (_BYTE *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v169,  v171,  0xD000000000000033LL,  0x8000000000222B20LL,  0LL,  1LL);
    uint64_t v113 = v173;
    (*(void (**)(char *, uint64_t))(v170 + 8))(v171, v172);
    (*(void (**)(char *, uint64_t))(v167 + 8))(v169, v168);
    unint64_t v115 = (void *)(v160
                    + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
    goto LABEL_28;
  }

  *(_BYTE *)(v388 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_httpCallAttemptState) = 1;
  uint64_t v198 = v356;
  uint64_t v199 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v356, v91, v64);
  uint64_t v200 = (os_log_s *)Logger.logObject.getter(v199);
  os_log_type_t v201 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v200, v201))
  {
    uint64_t v202 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v202 = 0;
    _os_log_impl( &dword_0,  v200,  v201,  "SwitchPodcastNewsPreferenceFlow#handleSettingPreference Attempting a retry of Media API call.",  v202,  2u);
    uint64_t v203 = v202;
    uint64_t v160 = v388;
    swift_slowDealloc(v203, -1LL, -1LL);
  }

  v63(v198, v64);
  uint64_t v204 = v376;
  uint64_t v206 = v377;
  uint64_t v205 = v378;
  (*(void (**)(char *, void, uint64_t))(v376 + 104))( v377,  enum case for AdditionalMetricsDescription.ModuleName.snspf(_:),  v378);
  uint64_t v207 = v373;
  uint64_t v208 = v374;
  uint64_t v209 = v375;
  (*(void (**)(char *, void, uint64_t))(v373 + 104))( v374,  enum case for AdditionalMetricsDescription.SourceFunction.retrySwitchPreference(_:),  v375);
  uint64_t v387 = (_BYTE *)static AdditionalMetricsDescription.encodeInfo(module:source:statusReason:extraInfo:)( v206,  v208,  0xD000000000000022LL,  0x8000000000222B60LL,  0LL,  1LL);
  uint64_t v211 = v210;
  (*(void (**)(char *, uint64_t))(v207 + 8))(v208, v209);
  (*(void (**)(char *, uint64_t))(v204 + 8))(v206, v205);
  uint64_t v212 = (void *)(v160
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider);
  uint64_t v213 = *(void *)(v160
                   + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_siriKitTaskLoggingProvider
                   + 24);
  uint64_t v388 = v212[4];
  sub_6EA8(v212, v213);
  uint64_t v214 = v382;
  uint64_t v215 = v383;
  uint64_t v216 = v384;
  (*(void (**)(char *, void, uint64_t))(v382 + 104))( v383,  enum case for TypeOfIntent.switchNewsPreference(_:),  v384);
  uint64_t v217 = enum case for ActivityType.failed(_:);
  uint64_t v218 = type metadata accessor for ActivityType(0LL);
  uint64_t v219 = *(void *)(v218 - 8);
  uint64_t v220 = (uint64_t)v381;
  (*(void (**)(char *, uint64_t, uint64_t))(v219 + 104))(v381, v217, v218);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v219 + 56))(v220, 0LL, 1LL, v218);
  uint64_t v221 = type metadata accessor for TemplatingResult(0LL);
  uint64_t v222 = (uint64_t)v380;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56LL))(v380, 1LL, 1LL, v221);
  uint64_t v223 = type metadata accessor for SiriKitReliabilityCodes(0LL);
  uint64_t v224 = (uint64_t)v379;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v223 - 8) + 56LL))(v379, 1LL, 1LL, v223);
  dispatch thunk of SiriKitTaskLoggingProviding.submitMetric(typeOfIntent:activityType:templateResult:statusReason:description:)( v215,  v220,  v222,  v224,  v387,  v211,  v213,  v388);
  swift_bridgeObjectRelease(v211);
  sub_1F6CC(v224, &qword_2845A0);
  sub_1F6CC(v222, (uint64_t *)&unk_286BD0);
  sub_1F6CC(v220, &qword_2845A8);
  (*(void (**)(char *, uint64_t))(v214 + 8))(v215, v216);
  __n128 v225 = v359;
  static ExecuteResponse.ongoing(requireInput:)(0LL);
  v385(v225);
  return (*(uint64_t (**)(char *, uint64_t))(v360 + 8))(v225, v361);
}

uint64_t sub_1A28A0(uint64_t a1, uint64_t a2)
{
  uint64_t v112 = a2;
  Swift::String v110 = (uint64_t *)a1;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  Swift::String v108 = (char *)&v105 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v105 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v109 = (char *)&v105 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v105 - v15;
  uint64_t v17 = sub_6C5C(&qword_28C8D8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v105 - v21;
  uint64_t v111 = v2;
  uint64_t v23 = v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse;
  swift_beginAccess( v2 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_parse,  v120,  0LL,  0LL);
  sub_FF10(v23, (uint64_t)v22, &qword_28C8D8);
  uint64_t v24 = type metadata accessor for Parse(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v113 = v22;
  if (v26(v22, 1LL, v24) != 1)
  {
    sub_FF10((uint64_t)v113, (uint64_t)v20, &qword_28C8D8);
    int v27 = (*(uint64_t (**)(void *, uint64_t))(v25 + 88))(v20, v24);
    uint64_t v28 = v20;
    if (v27 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      (*(void (**)(void *, uint64_t))(v25 + 96))(v20, v24);
      uint64_t v29 = *(char **)((char *)v20 + *(int *)(sub_6C5C(&qword_284618) + 48));
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v30 = sub_6960(v3, (uint64_t)qword_2969C8);
      uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v32 = v31(v16, v30, v3);
      uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl( &dword_0,  v33,  v34,  "SwitchPodcastNewsPreferenceFlow#cannotSwitchNewsSourcePreferenceDialog received .NLv3IntentPlusServerConversion parse.",  v35,  2u);
        swift_slowDealloc(v35, -1LL, -1LL);
      }

      uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
      uint64_t v37 = v36(v16, v3);
      uint64_t v38 = (void *)Parse.ServerConversion.siriKitIntent.getter(v37);
      uint64_t v39 = objc_opt_self(&OBJC_CLASS___INPlayMediaIntent);
      if (swift_dynamicCastObjCClass(v38, v39))
      {
        unint64_t v40 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        os_log_type_t v119 = (char *)v40;
        uint64_t v41 = sub_30544();
        if (v42)
        {
          *((void *)&v117 + 1) = &type metadata for String;
          *(void *)&__int128 v116 = v41;
          *((void *)&v116 + 1) = v42;
          sub_21964(&v116, v115);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v40);
          __n128 v114 = (char *)v40;
          sub_33808(v115, 0x5474736163646F70LL, 0xEC0000006369706FLL, isUniquelyReferenced_nonNull_native);
          os_log_type_t v119 = v114;
          swift_bridgeObjectRelease(0x8000000000000000LL);
        }

        else
        {
          sub_1CBFB0(0x5474736163646F70LL, 0xEC0000006369706FLL, &v116);
          sub_1F6CC((uint64_t)&v116, &qword_284028);
        }

        uint64_t v73 = (uint64_t)v110;
        sub_30600();
        uint64_t v107 = v28;
        Swift::String v108 = v29;
        id v106 = v38;
        if (v75)
        {
          *((void *)&v117 + 1) = &type metadata for String;
          *(void *)&__int128 v116 = v74;
          *((void *)&v116 + 1) = v75;
          sub_21964(&v116, v115);
          uint64_t v76 = v119;
          char v77 = swift_isUniquelyReferenced_nonNull_native(v119);
          __n128 v114 = v76;
          sub_33808(v115, 0xD000000000000016LL, 0x80000000002219E0LL, v77);
          uint64_t v109 = v114;
          os_log_type_t v119 = v114;
          swift_bridgeObjectRelease(0x8000000000000000LL);
        }

        else
        {
          sub_1CBFB0(0xD000000000000016LL, 0x80000000002219E0LL, &v116);
          sub_1F6CC((uint64_t)&v116, &qword_284028);
          uint64_t v109 = v119;
        }

        uint64_t v78 = v111;
        uint64_t v79 = *(void *)(v111
                        + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_playMediaCatDialogService);
        uint64_t v118 = 0LL;
        __int128 v116 = 0u;
        __int128 v117 = 0u;
        uint64_t v80 = (void *)swift_allocObject(&unk_273AE8, 40LL, 7LL);
        v80[2] = v78;
        v80[3] = v73;
        uint64_t v81 = v112;
        v80[4] = v112;
        uint64_t v82 = *(void *)(v79 + 40);
        uint64_t v83 = *(void *)(v79 + 48);
        uint64_t v84 = swift_allocObject(&unk_273B10, 32LL, 7LL);
        Swift::String v110 = &v105;
        *(void *)(v84 + swift_weakDestroy(v0 + 16) = sub_1A8B74;
        *(void *)(v84 + 2sub_6C3C(v0 + 4) = v80;
        __chkstk_darwin(v84);
        *(&v105 - sub_6C3C(v0 + 10) = v82;
        *(&v105 - sub_6C3C(v0 + 9) = v83;
        *(&v105 - sub_6C3C(v0 + 8) = 0xD000000000000020LL;
        *(&v105 - sub_6C3C(v0 + 7) = 0x80000000002228F0LL;
        uint64_t v85 = v109;
        swift_retain(v78);
        swift_retain(v81);
        swift_retain(v80);
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_1A8B94,  v84,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v82,  v83,  0xD000000000000020LL,  0x80000000002228F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v105 - 12));
        swift_release(v108);

        swift_bridgeObjectRelease(v85);
        swift_release(v80);
        swift_release(v84);
        sub_1F6CC((uint64_t)&v116, &qword_283FE8);
        uint64_t v86 = type metadata accessor for NLIntent(0LL);
        (*(void (**)(void *, uint64_t))(*(void *)(v86 - 8) + 8LL))(v107, v86);
      }

      else
      {

        os_log_type_t v67 = v109;
        uint64_t v68 = v31(v109, v30, v3);
        uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
        os_log_type_t v70 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v71 = 0;
          _os_log_impl( &dword_0,  v69,  v70,  "SwitchPodcastNewsPreferenceFlow#cannotSwitchNewsSourcePreferenceDialog Failed to build playMediaIntent.",  v71,  2u);
          swift_slowDealloc(v71, -1LL, -1LL);
        }

        v36(v67, v3);
        sub_1A3C34((uint64_t)v110, v112);
        swift_release(v29);
        uint64_t v72 = type metadata accessor for NLIntent(0LL);
        (*(void (**)(void *, uint64_t))(*(void *)(v72 - 8) + 8LL))(v28, v72);
      }

      return sub_1F6CC((uint64_t)v113, &qword_28C8D8);
    }

    if (v27 == enum case for Parse.pommesResponse(_:))
    {
      (*(void (**)(void *, uint64_t))(v25 + 96))(v20, v24);
      uint64_t v44 = (char *)*v20;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v45 = sub_6960(v3, (uint64_t)qword_2969C8);
      uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v47 = v46(v12, v45, v3);
      uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
      os_log_type_t v49 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v50 = 0;
        _os_log_impl( &dword_0,  v48,  v49,  "SwitchPodcastNewsPreferenceFlow#cannotSwitchNewsSourcePreferenceDialog received .pommesResponse parse.",  v50,  2u);
        swift_slowDealloc(v50, -1LL, -1LL);
      }

      uint64_t v51 = *(void (**)(char *, uint64_t))(v4 + 8);
      v51(v12, v3);
      uint64_t v52 = sub_10470();
      if (v52)
      {
        uint64_t v53 = (void *)v52;
        id v54 = [objc_allocWithZone(INPlayMediaIntent) init];
        uint64_t v55 = dispatch thunk of PommesResponse.clientResults.getter();
        uint64_t v56 = (char *)sub_170254(v53, v55);

        swift_bridgeObjectRelease(v55);
        unint64_t v57 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
        os_log_type_t v119 = (char *)v57;
        id v58 = sub_30544();
        if (v59)
        {
          *((void *)&v117 + 1) = &type metadata for String;
          *(void *)&__int128 v116 = v58;
          *((void *)&v116 + 1) = v59;
          sub_21964(&v116, v115);
          char v60 = swift_isUniquelyReferenced_nonNull_native(v57);
          __n128 v114 = (char *)v57;
          sub_33808(v115, 0x5474736163646F70LL, 0xEC0000006369706FLL, v60);
          os_log_type_t v119 = v114;
          swift_bridgeObjectRelease(0x8000000000000000LL);
        }

        else
        {
          sub_1CBFB0(0x5474736163646F70LL, 0xEC0000006369706FLL, &v116);
          sub_1F6CC((uint64_t)&v116, &qword_284028);
        }

        uint64_t v92 = (uint64_t)v110;
        sub_30600();
        Swift::String v108 = v56;
        uint64_t v109 = v44;
        if (v94)
        {
          *((void *)&v117 + 1) = &type metadata for String;
          *(void *)&__int128 v116 = v93;
          *((void *)&v116 + 1) = v94;
          sub_21964(&v116, v115);
          os_log_type_t v95 = v119;
          char v96 = swift_isUniquelyReferenced_nonNull_native(v119);
          __n128 v114 = v95;
          sub_33808(v115, 0xD000000000000016LL, 0x80000000002219E0LL, v96);
          id v106 = v114;
          swift_bridgeObjectRelease(0x8000000000000000LL);
        }

        else
        {
          sub_1CBFB0(0xD000000000000016LL, 0x80000000002219E0LL, &v116);
          sub_1F6CC((uint64_t)&v116, &qword_284028);
          id v106 = v119;
        }

        uint64_t v97 = v111;
        uint64_t v98 = *(void **)(v111
                         + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_playMediaCatDialogService);
        uint64_t v118 = 0LL;
        __int128 v116 = 0u;
        __int128 v117 = 0u;
        uint64_t v99 = (void *)swift_allocObject(&unk_273A98, 40LL, 7LL);
        v99[2] = v97;
        v99[3] = v92;
        uint64_t v100 = v112;
        v99[4] = v112;
        uint64_t v101 = v98[5];
        uint64_t v107 = (void *)v98[4];
        uint64_t v102 = v98[6];
        uint64_t v103 = swift_allocObject(&unk_273AC0, 32LL, 7LL);
        Swift::String v110 = &v105;
        *(void *)(v103 + swift_weakDestroy(v0 + 16) = sub_1A88B8;
        *(void *)(v103 + 2sub_6C3C(v0 + 4) = v99;
        __chkstk_darwin(v103);
        *(&v105 - sub_6C3C(v0 + 10) = v101;
        *(&v105 - sub_6C3C(v0 + 9) = v102;
        *(&v105 - sub_6C3C(v0 + 8) = 0xD000000000000020LL;
        *(&v105 - sub_6C3C(v0 + 7) = 0x80000000002228F0LL;
        id v104 = v106;
        swift_retain(v97);
        swift_retain(v100);
        swift_retain(v99);
        sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v103,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v101,  v102,  0xD000000000000020LL,  0x80000000002228F0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)(&v105 - 12));

        swift_bridgeObjectRelease(v104);
        swift_release(v99);
        swift_release(v103);
        sub_1F6CC((uint64_t)&v116, &qword_283FE8);
      }

      else
      {
        uint64_t v87 = v108;
        uint64_t v88 = v46(v108, v45, v3);
        uint64_t v89 = (os_log_s *)Logger.logObject.getter(v88);
        os_log_type_t v90 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v91 = 0;
          _os_log_impl( &dword_0,  v89,  v90,  "SwitchPodcastNewsPreferenceFlow#cannotSwitchNewsSourcePreferenceDialog Failed to build playMediaIntent.",  v91,  2u);
          swift_slowDealloc(v91, -1LL, -1LL);
        }

        v51(v87, v3);
        sub_1A3C34((uint64_t)v110, v112);
      }

      return sub_1F6CC((uint64_t)v113, &qword_28C8D8);
    }

    (*(void (**)(void *, uint64_t))(v25 + 8))(v20, v24);
  }

  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v61 = sub_6960(v3, (uint64_t)qword_2969C8);
  uint64_t v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v61, v3);
  uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
  os_log_type_t v64 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v65 = 0;
    _os_log_impl( &dword_0,  v63,  v64,  "SwitchPodcastNewsPreferenceFlow#cannotSwitchNewsSourcePreferenceDialog Unexpected parse type.",  v65,  2u);
    swift_slowDealloc(v65, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  sub_1A3C34((uint64_t)v110, v112);
  return sub_1F6CC((uint64_t)v113, &qword_28C8D8);
}

uint64_t sub_1A3570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a2;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_6C5C(&qword_289340);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v41 - v13;
  uint64_t v15 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v17, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    uint64_t v51 = *v17;
    uint64_t v18 = sub_6C5C(&qword_284010);
    uint64_t v19 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(&v50, &v51, v18, v19, 0LL))
    {
      uint64_t v20 = v50;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v21 = sub_6960(v5, (uint64_t)qword_2969C8);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
      id v22 = v20;
      uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v43 = v6;
        uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v42 = swift_slowAlloc(32LL, -1LL);
        uint64_t v49 = v42;
        *(_DWORD *)uint64_t v25 = 136315138;
        v41[1] = v25 + 4;
        id v26 = [v22 localizedDescription];
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        uint64_t v29 = v28;

        uint64_t v47 = v27;
        uint64_t v48 = v29;
        uint64_t v30 = String.init<A>(_:)( &v47,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v32 = v31;
        uint64_t v47 = sub_6978(v30, v31, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);

        swift_bridgeObjectRelease(v32);
        _os_log_impl( &dword_0,  v23,  v24,  "SwitchPodcastNewsPreferenceFlow#cannotSwitchNewsSourcePreferenceDialog Error creating dialog %s.",  v25,  0xCu);
        uint64_t v33 = v42;
        swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1LL, -1LL);
        swift_slowDealloc(v25, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v5);
      }

      else
      {

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }

      sub_1A3C34(v44, v45);

      return swift_errorRelease(v51);
    }

    else
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v15, v15);
      __break(1u);
    }
  }

  else
  {
    uint64_t v34 = *(int *)(v9 + 48);
    uint64_t v35 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v36 = *(void *)(v35 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 32))(v14, v17, v35);
    uint64_t v37 = *(void **)((char *)v17 + v34);
    *(void *)&v14[v34] = v37;
    uint64_t v38 = *(int *)(v9 + 48);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v12, v14, v35);
    *(void *)&v12[v38] = v37;
    id v39 = v37;
    sub_1A436C((uint64_t)v12, v39, v44, v45);

    sub_1F6CC((uint64_t)v14, &qword_289340);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v35);
  }

  return result;
}

uint64_t sub_1A398C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "SwitchPodcastNewsPreferenceFlow#mediaAPICallErrorDialog Reached logic.", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = *(void *)(v3
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_playMediaCatDialogService);
  unint64_t v16 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v24 = 0LL;
  memset(v23, 0, sizeof(v23));
  uint64_t v17 = (void *)swift_allocObject(&unk_273A48, 40LL, 7LL);
  v17[2] = v3;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = *(void *)(v15 + 40);
  uint64_t v19 = *(void *)(v15 + 48);
  uint64_t v20 = swift_allocObject(&unk_273A70, 32LL, 7LL);
  v22[1] = v22;
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = sub_1A8890;
  *(void *)(v20 + 2sub_6C3C(v0 + 4) = v17;
  __chkstk_darwin(v20);
  v22[-10] = v18;
  v22[-9] = v19;
  v22[-8] = 0xD00000000000002BLL;
  v22[-7] = 0x80000000002228C0LL;
  swift_retain(v3);
  swift_retain(a2);
  swift_retain(v17);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v20,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD00000000000002BLL,  0x80000000002228C0LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v22[-12]);
  swift_bridgeObjectRelease(v16);
  swift_release(v17);
  swift_release(v20);
  return sub_1F6CC((uint64_t)v23, &qword_283FE8);
}

uint64_t sub_1A3C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_283888 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v10 = sub_6960(v6, (uint64_t)qword_2969C8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "SwitchPodcastNewsPreferenceFlow#genericErrorDialog Reached logic.", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = *(void *)(v3
                  + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_playMediaCatDialogService);
  unint64_t v16 = sub_74D54((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v24 = 0LL;
  memset(v23, 0, sizeof(v23));
  uint64_t v17 = (void *)swift_allocObject(&unk_2739F8, 40LL, 7LL);
  v17[2] = v3;
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = *(void *)(v15 + 40);
  uint64_t v19 = *(void *)(v15 + 48);
  uint64_t v20 = swift_allocObject(&unk_273A20, 32LL, 7LL);
  v22[1] = v22;
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = sub_1A8868;
  *(void *)(v20 + 2sub_6C3C(v0 + 4) = v17;
  __chkstk_darwin(v20);
  v22[-10] = v18;
  v22[-9] = v19;
  v22[-8] = 0xD000000000000026LL;
  v22[-7] = 0x8000000000222890LL;
  swift_retain(v3);
  swift_retain(a2);
  swift_retain(v17);
  sub_200268( (uint64_t)"catServiceExecute",  17LL,  2u,  (uint64_t)sub_16B6B4,  v20,  "CatService#execute family=%{signpost.telemetry:string1,public}@ id=%{signpost.telemetry:string2,public}@ enableTelemetry=YES ",  125LL,  2,  v18,  v19,  0xD000000000000026LL,  0x8000000000222890LL,  (void (*)(uint64_t (*)(), uint64_t))sub_3CAE4,  (uint64_t)&v22[-12]);
  swift_bridgeObjectRelease(v16);
  swift_release(v17);
  swift_release(v20);
  return sub_1F6CC((uint64_t)v23, &qword_283FE8);
}

uint64_t sub_1A3EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v52 = a5;
  uint64_t v53 = a2;
  uint64_t v8 = type metadata accessor for ExecuteResponse(0LL);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = type metadata accessor for Logger(0LL);
  uint64_t v54 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_6C5C(&qword_289340);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v49 - v16;
  uint64_t v18 = sub_6C5C((uint64_t *)&unk_286BB0);
  __chkstk_darwin(v18);
  uint64_t v20 = (void *)((char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_FF10(a1, (uint64_t)v20, (uint64_t *)&unk_286BB0);
  if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
  {
    uint64_t v51 = (void (*)(char *))a3;
    uint64_t v53 = a4;
    uint64_t v63 = *v20;
    uint64_t v21 = sub_6C5C(&qword_284010);
    uint64_t v22 = sub_1641C(0LL, &qword_287970, &OBJC_CLASS___NSError_ptr);
    if (swift_dynamicCast(&v62, &v63, v21, v22, 0LL))
    {
      uint64_t v23 = v62;
      if (qword_283888 != -1) {
        swift_once(&qword_283888, sub_BFC5C);
      }
      uint64_t v24 = v58;
      uint64_t v25 = sub_6960(v58, (uint64_t)qword_2969C8);
      uint64_t v26 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v25, v24);
      id v27 = v23;
      uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v50 = swift_slowAlloc(32LL, -1LL);
        uint64_t v61 = v50;
        *(_DWORD *)uint64_t v30 = 136315138;
        v49[1] = v30 + 4;
        id v31 = [v27 localizedDescription];
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        uint64_t v34 = v33;

        uint64_t v59 = v32;
        uint64_t v60 = v34;
        uint64_t v35 = String.init<A>(_:)( &v59,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
        unint64_t v37 = v36;
        uint64_t v59 = sub_6978(v35, v36, &v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60);

        swift_bridgeObjectRelease(v37);
        _os_log_impl(&dword_0, v28, v29, v52, v30, 0xCu);
        uint64_t v38 = v50;
        swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1LL, -1LL);
        swift_slowDealloc(v30, -1LL, -1LL);

        uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v58);
      }

      else
      {

        uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v24);
      }

      uint64_t v47 = v51;
      uint64_t v48 = v55;
      static ExecuteResponse.complete()(v39);
      v47(v48);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
      return swift_errorRelease(v63);
    }

    else
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)(v18, v18);
      __break(1u);
    }
  }

  else
  {
    uint64_t v40 = *(int *)(v12 + 48);
    uint64_t v41 = type metadata accessor for TemplatingResult(0LL);
    uint64_t v42 = *(void *)(v41 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v42 + 32))(v17, v20, v41);
    uint64_t v43 = *(void **)((char *)v20 + v40);
    *(void *)&v17[v40] = v43;
    uint64_t v44 = *(int *)(v12 + 48);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v15, v17, v41);
    *(void *)&v15[v44] = v43;
    id v45 = v43;
    sub_1A436C((uint64_t)v15, v45, a3, a4);

    sub_1F6CC((uint64_t)v17, &qword_289340);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v15, v41);
  }

  return result;
}

uint64_t sub_1A436C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v6 = sub_6C5C((uint64_t *)&unk_286C50);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for AceOutput(0LL);
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_6C5C(&qword_289340);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for TemplatingResult(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL))(v18, a1, v19);
  *(void *)&v18[*(int *)(v16 + 48)] = a2;
  uint64_t v20 = qword_283888;
  id v21 = a2;
  if (v20 != -1) {
    swift_once(&qword_283888, sub_BFC5C);
  }
  uint64_t v22 = sub_6960(v12, (uint64_t)qword_2969C8);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v22, v12);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "SwitchPodcastNewsPreferenceFlow#publishDialog Reached logic.", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  char v28 = static SiriAudioEnvironment.isTextToSpeechEnabled.getter(v27);
  uint64_t v29 = type metadata accessor for NLContextUpdate(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v8, 1LL, 1LL, v29);
  uint64_t v43 = 0LL;
  __int128 v41 = 0u;
  __int128 v42 = 0u;
  static AceOutputHelper.makeCompletionViewOutput(templateResult:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)( v18,  v28 & 1,  _swiftEmptyArrayStorage,  0LL,  1LL,  v8,  _swiftEmptyArrayStorage,  &v41);
  sub_1F6CC((uint64_t)&v41, &qword_2845C8);
  sub_1F6CC((uint64_t)v8, (uint64_t *)&unk_286C50);
  uint64_t v30 = *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_publisher + 24);
  uint64_t v31 = *(void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_publisher + 32);
  sub_6EA8((void *)(v37 + OBJC_IVAR____TtC23AudioFlowDelegatePlugin30SwitchNewsSourcePreferenceFlow_publisher), v30);
  *((void *)&v42 + 1) = v9;
  uint64_t v43 = &protocol witness table for AceOutput;
  uint64_t v32 = sub_10974(&v41);
  uint64_t v33 = v38;
  (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v32, v11, v9);
  uint64_t v34 = swift_allocObject(&unk_2739D0, 32LL, 7LL);
  *(void *)(v34 + swift_weakDestroy(v0 + 16) = v39;
  uint64_t v35 = v40;
  *(void *)(v34 + 2sub_6C3C(v0 + 4) = v40;
  swift_retain(v35);
  dispatch thunk of OutputPublisher.publish(output:_:)(&v41, sub_1A8858, v34, v30, v31);
  swift_release(v34);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  sub_1F6CC((uint64_t)v18, &qword_289340);
  return sub_6C3C(&v41);
}